{"info": {"author": "Jim Fulton", "author_email": "jim@zope.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "******************\nTest-Runner Recipe\n******************\n\n.. image:: https://travis-ci.com/zopefoundation/zc.recipe.testrunner.svg?branch=master\n        :target: https://travis-ci.org/zopefoundation/zc.recipe.testrunner\n\n.. image:: https://coveralls.io/repos/github/zopefoundation/zc.recipe.testrunner/badge.svg?branch=master\n        :target: https://coveralls.io/github/zopefoundation/zc.recipe.testrunner?branch=master\n\n.. image:: https://img.shields.io/pypi/v/zc.recipe.testrunner.svg\n        :target: https://pypi.org/project/zc.recipe.testrunner/\n        :alt: Current version on PyPI\n\n.. image:: https://img.shields.io/pypi/pyversions/zc.recipe.testrunner.svg\n        :target: https://pypi.org/project/zc.recipe.testrunner/\n        :alt: Supported Python versions\n\n.. contents::\n\nThis recipe generates zope.testing test-runner scripts for testing a\ncollection of eggs.\n\nExample usage in ``buildout.cfg``::\n\n    [buildout]\n    parts = test\n\n    [test]\n    recipe = zc.recipe.testrunner\n    eggs = <eggs to test>\n\n\nChange History\n**************\n\n2.1 (2019-05-14)\n================\n\n- Add support for Python 3.5 up to 3.8a3.\n\n\n2.0.0 (2013-02-10)\n==================\n\nWork with buildout 2.\n\nThis was accomplised by starting from 1.3.0 then:\n\n- Merge fixes from 1.2.1\n  (svn://svn.zope.org/repos/main/zc.recipe.testrunner/tags/1.2.1)\n  Excluding nailing zope.testing version. That fixes a bunch of\n  windows issues\n\n1.4.0 (2010-08-27)\n==================\n\n- Update to using zc.buildout 1.5.0 script generation.  This adds the\n  following options: include-site-packages, allowed-eggs-from-site-packages,\n  extends, and exec-sitecustomize.\n\n- Merge fixes from 1.2.1\n  (svn://svn.zope.org/repos/main/zc.recipe.testrunner/tags/1.2.1)\n  Excluding nailing zope.testing version. That fixes a bunch of\n  windows issues\n\n1.3.0 (2010-06-09)\n==================\n\n- Updated tests to run with the last versions of all modules.\n\n- Removed the usage of the deprecated zope.testing.doctest, therby also\n  dropping Python 2.3 support.\n\n- Started using zope.testrunner instead of zope.testing.testrunner.\n\n1.2.1 (2010-08-24)\n==================\n\n- Fixed a lot of windows issues\n- Nailed versions to ZTK 1.0a2 (oh well, we have to have at least some stability)\n- Fixed some other test failures that seemed to come from other packages\n\n1.2.0 (2009-03-23)\n==================\n\n- Added a relative-paths option to use egg, test, and\n  working-directory paths relative to the test script.\n\n\n1.1.0 (2008-08-25)\n==================\n\n- Requiring at least zope.testing 3.6.0.\n\n- Fixed a bug: Parallel runs of layers failed when using\n  working-directory parameter.\n\n\n1.0.0 (2007-11-04)\n==================\n\n- Preparing stable release.\n\n\n1.0.0b8 (2007-07-17)\n====================\n\n- Added the ability to use `initialization` option that will be inserted into\n  the bin/test after the environment is set up.\n\n1.0.0b7 (2007-04-26)\n====================\n\nFeature Changes\n---------------\n\n- Added optional option `environment` that allows defining a section in your\n  buildout.cfg to specify environment variables that should be set before\n  running the tests.\n\n1.0.0b6 (2007-02-25)\n====================\n\nFeature Changes\n---------------\n\n- If the working directory is not specified, or specified as the empty\n  string, an empty part directory is created for the tests to run in.\n\n1.0.0b5 (2007-01-24)\n====================\n\nBugs fixed\n----------\n\n- When:\n\n  + the working-directory option was used,\n  + and the test runner needed to restart itself\n  + and the test runner was run with a relative path (e.g. bin/test)\n\n  then the testrunner could not restart itself successfully because the\n  relative path in sys.argv[0] was no-longer valid.\n\n  Now we convert sys.argv[0] to an absolute path.\n\n1.0.0b4 (2006-10-24)\n====================\n\nFeature Changes\n---------------\n\n- Added a working-directoy option to specify a working directory for\n  the generated script.\n\n\n1.0.0b3 (2006-10-16)\n====================\n\nUpdated to work with (not get a warning from) zc.buildout 1.0.0b10.\n\n1.0.0b2\n=======\n\nAdded a defaults option to specify testrunner default options.\n\n1.0.0b1\n=======\n\nUpdated to work with zc.buildout 1.0.0b5.\n\n1.0.0a3\n=======\n\nAdded a defaults option that lets you specify test-runner default\noptions.\n\n\n1.0.0a2\n=======\n\nNow provide a extra-paths option for including extra paths in test\nscripts. This is useful when eggs depend on Python packages not\npackaged as eggs.\n\n\n1.0.0a1\n=======\n\nInitial public version\n\nDetailed Documentation\n**********************\n\nTest-Runner Recipe\n==================\n\nThe test-runner recipe, zc.recipe.testrunner, creates a test runner\nfor a project.\n\nThe test-runner recipe has several options:\n\neggs\n    The eggs option specified a list of eggs to test given as one ore\n    more setuptools requirement strings.  Each string must be given on\n    a separate line.\n\nscript\n    The script option gives the name of the script to generate, in the\n    buildout bin directory.  Of the option isn't used, the part name\n    will be used.\n\nextra-paths\n    One or more extra paths to include in the generated test script.\n\ndefaults\n    The defaults option lets you specify testrunner default\n    options. These are specified as Python source for an expression\n    yielding a list, typically a list literal.\n\nworking-directory\n    The working-directory option lets to specify a directory where the\n    tests will run. The testrunner will change to this directory when\n    run. If the working directory is the empty string or not specified\n    at all, the recipe will create a working directory among the parts.\n\nenvironment\n    A set of environment variables that should be exported before\n    starting the tests.\n\ninitialization\n    Provide initialization code to run before running tests.\n\nrelative-paths\n    Use egg, test, and working-directory paths relative to the test script.\n\n(Note that, at this time, due to limitations in the Zope test runner, the\ndistributions cannot be zip files. TODO: Fix the test runner!)\n\nTo illustrate this, we'll create a pair of projects in our sample\nbuildout:\n\n    >>> mkdir(sample_buildout, 'demo')\n    >>> mkdir(sample_buildout, 'demo', 'demo')\n    >>> write(sample_buildout, 'demo', 'demo', '__init__.py', '')\n    >>> write(sample_buildout, 'demo', 'demo', 'tests.py',\n    ... '''\n    ... import unittest\n    ...\n    ... class TestDemo(unittest.TestCase):\n    ...    def test(self):\n    ...        pass\n    ...\n    ... def test_suite():\n    ...     return unittest.makeSuite(TestDemo)\n    ... ''')\n\n    >>> write(sample_buildout, 'demo', 'setup.py',\n    ... \"\"\"\n    ... from setuptools import setup\n    ...\n    ... setup(name = \"demo\")\n    ... \"\"\")\n\n    >>> write(sample_buildout, 'demo', 'README.txt', '')\n\n    >>> mkdir(sample_buildout, 'demo2')\n    >>> mkdir(sample_buildout, 'demo2', 'demo2')\n    >>> write(sample_buildout, 'demo2', 'demo2', '__init__.py', '')\n    >>> write(sample_buildout, 'demo2', 'demo2', 'tests.py',\n    ... '''\n    ... import unittest\n    ...\n    ... class Demo2Tests(unittest.TestCase):\n    ...    def test2(self):\n    ...        pass\n    ...\n    ... def test_suite():\n    ...     return unittest.makeSuite(Demo2Tests)\n    ... ''')\n\n    >>> write(sample_buildout, 'demo2', 'setup.py',\n    ... \"\"\"\n    ... from setuptools import setup\n    ...\n    ... setup(name = \"demo2\", install_requires= ['demoneeded'])\n    ... \"\"\")\n\n    >>> write(sample_buildout, 'demo2', 'README.txt', '')\n\nDemo 2 depends on demoneeded:\n\n    >>> mkdir(sample_buildout, 'demoneeded')\n    >>> mkdir(sample_buildout, 'demoneeded', 'demoneeded')\n    >>> write(sample_buildout, 'demoneeded', 'demoneeded', '__init__.py', '')\n    >>> write(sample_buildout, 'demoneeded', 'demoneeded', 'tests.py',\n    ... '''\n    ... import unittest\n    ...\n    ... class TestNeeded(unittest.TestCase):\n    ...    def test_needed(self):\n    ...        pass\n    ...\n    ... def test_suite():\n    ...     return unittest.makeSuite(TestNeeded)\n    ... ''')\n\n    >>> write(sample_buildout, 'demoneeded', 'setup.py',\n    ... \"\"\"\n    ... from setuptools import setup\n    ...\n    ... setup(name = \"demoneeded\")\n    ... \"\"\")\n\n    >>> write(sample_buildout, 'demoneeded', 'README.txt', '')\n\nWe'll update our buildout to install the demo project as a\ndevelop egg and to create the test script:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo demoneeded demo2\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs =\n    ...    demo\n    ...    demo2\n    ... script = test\n    ... \"\"\")\n\nNote that we specified both demo and demo2 in the eggs\noption and that we put them on separate lines.\n\nWe also specified the offline option to run the buildout in offline mode.\n\nNow when we run the buildout:\n\n    >>> import os\n    >>> os.chdir(sample_buildout)\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\nWe get a test script installed in our bin directory:\n\n    >>> ls(sample_buildout, 'bin')\n    -  buildout\n    -  test\n\nWe also get a part directory for the tests to run in:\n\n    >>> ls(sample_buildout, 'parts')\n    d  testdemo\n\n\nAnd updating leaves its contents intact:\n\n    >>> _ = system(os.path.join(sample_buildout, 'bin', 'test') +\n    ...            ' -q --coverage=coverage')\n    >>> ls(sample_buildout, 'parts', 'testdemo')\n    d  coverage\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n    >>> ls(sample_buildout, 'parts', 'testdemo')\n    d  coverage\n\nWe can run the test script to run our demo test:\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'test') + ' -vv'),\n    ...        end='')\n    Running tests at level 1\n    Running zope.testrunner.layer.UnitTests tests:\n      Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n      Running:\n     test (demo.tests.TestDemo)\n     test2 (demo2.tests.Demo2Tests)\n      Ran 2 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\n    Tearing down left over layers:\n      Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n\nNote that we didn't run the demoneeded tests.  Tests are only run for\nthe eggs listed, not for their dependencies.\n\nIf we leave the script option out of the configuration, then the test\nscript will get it's name from the part:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> ls(sample_buildout, 'bin')\n    -  buildout\n    -  testdemo\n\nWe can run the test script to run our demo test:\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'testdemo') + ' -q'),\n    ...        end='')\n    Running zope.testrunner.layer.UnitTests tests:\n      Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n      Ran 1 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\n    Tearing down left over layers:\n      Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n\nIf we need to include other paths in our test script, we can use the\nextra-paths option to specify them:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/sample-buildout/parts/testdemo')\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run([\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\nWe can use the working-directory option to specify a working\ndirectory:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ... working-directory = /foo/bar\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/foo/bar')\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run([\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\nNow that out tests use a specified working directory, their designated\npart directory is gone:\n\n    >>> ls(sample_buildout, 'parts')\n\nIf we need to specify default options, we can use the defaults\noption. For example, Zope 3 applications typically define test suites\nin modules named ftests or tests.  The default test runner behaviour\nis to look in modules named tests.  To specify that we want to look in\ntests and ftests module, we'd supply a default for the --tests-pattern\noption.  If we like dots, we could also request more verbose output\nusing the -v option:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ... defaults = ['--tests-pattern', '^f?tests$',\n    ...             '-v'\n    ...            ]\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/sample-buildout/parts/testdemo')\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n    '-v'\n    ]) + [\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\nSome things to note from this example:\n\n- Parentheses are placed around the given expression.\n\n- Leading whitespace is removed.\n\n\nTo demonstrate the ``environment`` option, we first update the tests to\ninclude a check for an environment variable:\n\n    >>> write(sample_buildout, 'demo', 'demo', 'tests.py',\n    ... '''\n    ... import unittest\n    ... import os\n    ...\n    ... class DemoTests(unittest.TestCase):\n    ...    def test(self):\n    ...        self.assertEquals('42', os.environ.get('zc.recipe.testrunner', '23'))\n    ...\n    ... def test_suite():\n    ...     return unittest.makeSuite(DemoTests)\n    ... ''')\n\nRunning them with the current buildout will produce a failure:\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'testdemo')\n    ...               + ' -vv'),\n    ...        end='') # doctest: +ELLIPSIS\n    Running tests at level 1\n    Running zope.testrunner.layer.UnitTests tests:\n      Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n      Running:\n     test (demo.tests.DemoTests) (... s)\n    <BLANKLINE>\n    <BLANKLINE>\n    Failure in test test (demo.tests.DemoTests)\n    Traceback (most recent call last):\n      ...\n    AssertionError: '42' != '23'\n    ...\n      Ran 1 tests with 1 failures, 0 errors and 0 skipped in 0.001 seconds.\n    Tearing down left over layers:\n      Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n    <BLANKLINE>\n    Tests with failures:\n       test (demo.tests.DemoTests)\n\n\nLet's update the buildout to specify the environment variable for the test\nrunner:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... environment = testenv\n    ...\n    ... [testenv]\n    ... zc.recipe.testrunner = 42\n    ... \"\"\")\n\nWe run buildout and see that the test runner script now includes setting up\nthe environment variable. Also, the tests pass again:\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/sample-buildout/parts/testdemo')\n    os.environ['zc.recipe.testrunner'] = '42'\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run([\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'testdemo')+' -vv'),\n    ...        end='')\n    Running tests at level 1\n    Running zope.testrunner.layer.UnitTests tests:\n      Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n      Running:\n     test (demo.tests.DemoTests)\n      Ran 1 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\n    Tearing down left over layers:\n      Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n\nOne can add initialization steps in the buildout.  These will be added to the\nend of the script:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... r\"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ... defaults = ['--tests-pattern', '^f?tests$',\n    ...             '-v'\n    ...            ]\n    ... initialization = sys.stdout.write('Hello all you egg-laying pythons!\\n')\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/sample-buildout/parts/testdemo')\n    sys.stdout.write('Hello all you egg-laying pythons!\\n')\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n    '-v'\n    ]) + [\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\nThis will also work with a multi-line initialization section:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... r\"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ... defaults = ['--tests-pattern', '^f?tests$',\n    ...             '-v'\n    ...            ]\n    ... initialization = sys.stdout.write('Hello all you egg-laying pythons!\\n')\n    ...               sys.stdout.write('I thought pythons were live bearers?\\n')\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      ...\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir('/sample-buildout/parts/testdemo')\n    sys.stdout.write('Hello all you egg-laying pythons!\\n')\n    sys.stdout.write('I thought pythons were live bearers?\\n')\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n    '-v'\n    ]) + [\n            '--test-path', '/sample-buildout/demo',\n            ]))\n\nIf the relative-paths option is used, egg (and extra) paths are\ngenerated relative to the test script.\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ...               ${buildout:directory}/sources\n    ... relative-paths = true\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import os\n    <BLANKLINE>\n    join = os.path.join\n    base = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))\n    base = os.path.dirname(base)\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      join(base, 'demo'),\n      ...\n      '/usr/local/zope/lib/python',\n      join(base, 'sources'),\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir(join(base, 'parts/testdemo'))\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run([\n            '--test-path', join(base, 'demo'),\n            ]))\n\nThe relative-paths option can be specified at the buildout level:\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... develop = demo\n    ... parts = testdemo\n    ... offline = true\n    ... relative-paths = true\n    ...\n    ... [testdemo]\n    ... recipe = zc.recipe.testrunner\n    ... eggs = demo\n    ... extra-paths = /usr/local/zope/lib/python\n    ...               ${buildout:directory}/sources\n    ... \"\"\")\n\n    >>> print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n    ...        end='')\n\n    >>> cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n    #!/usr/local/bin/python2.4\n    <BLANKLINE>\n    import os\n    <BLANKLINE>\n    join = os.path.join\n    base = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))\n    base = os.path.dirname(base)\n    <BLANKLINE>\n    import sys\n    sys.path[0:0] = [\n      join(base, 'demo'),\n      ...\n      '/usr/local/zope/lib/python',\n      join(base, 'sources'),\n      ]\n    <BLANKLINE>\n    import os\n    sys.argv[0] = os.path.abspath(sys.argv[0])\n    os.chdir(join(base, 'parts/testdemo'))\n    <BLANKLINE>\n    <BLANKLINE>\n    import zope.testrunner\n    <BLANKLINE>\n    if __name__ == '__main__':\n        sys.exit(zope.testrunner.run([\n            '--test-path', join(base, 'demo'),\n            ]))", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zopefoundation/zc.recipe.testrunner", "keywords": "development build testing", "license": "ZPL 2.1", "maintainer": "", "maintainer_email": "", "name": "zc.recipe.testrunner", "package_url": "https://pypi.org/project/zc.recipe.testrunner/", "platform": "", "project_url": "https://pypi.org/project/zc.recipe.testrunner/", "project_urls": {"Homepage": "https://github.com/zopefoundation/zc.recipe.testrunner"}, "release_url": "https://pypi.org/project/zc.recipe.testrunner/2.1/", "requires_dist": null, "requires_python": "", "summary": "ZC Buildout recipe for creating test runners", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/zopefoundation/zc.recipe.testrunner\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/zopefoundation/zc.recipe.testrunner.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7056d17e0bbf2159dc263406e9ec8e67e1b63552/68747470733a2f2f7472617669732d63692e636f6d2f7a6f7065666f756e646174696f6e2f7a632e7265636970652e7465737472756e6e65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/zopefoundation/zc.recipe.testrunner?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/zopefoundation/zc.recipe.testrunner/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bbe8bbf496061f3539350bcb4ca792f7885eccd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7a6f7065666f756e646174696f6e2f7a632e7265636970652e7465737472756e6e65722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/zc.recipe.testrunner/\" rel=\"nofollow\"><img alt=\"Current version on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ccba0c99bdf3ed06235ddbbc88d325300ea768c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7a632e7265636970652e7465737472756e6e65722e737667\"></a>\n<a href=\"https://pypi.org/project/zc.recipe.testrunner/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53a45bbc65f1550b5b5effce05db1bedfe997fb1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7a632e7265636970652e7465737472756e6e65722e737667\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#change-history\" id=\"id12\" rel=\"nofollow\">Change History</a><ul>\n<li><a href=\"#id1\" id=\"id13\" rel=\"nofollow\">2.1 (2019-05-14)</a></li>\n<li><a href=\"#id2\" id=\"id14\" rel=\"nofollow\">2.0.0 (2013-02-10)</a></li>\n<li><a href=\"#id3\" id=\"id15\" rel=\"nofollow\">1.4.0 (2010-08-27)</a></li>\n<li><a href=\"#id4\" id=\"id16\" rel=\"nofollow\">1.3.0 (2010-06-09)</a></li>\n<li><a href=\"#id5\" id=\"id17\" rel=\"nofollow\">1.2.1 (2010-08-24)</a></li>\n<li><a href=\"#id6\" id=\"id18\" rel=\"nofollow\">1.2.0 (2009-03-23)</a></li>\n<li><a href=\"#id7\" id=\"id19\" rel=\"nofollow\">1.1.0 (2008-08-25)</a></li>\n<li><a href=\"#id8\" id=\"id20\" rel=\"nofollow\">1.0.0 (2007-11-04)</a></li>\n<li><a href=\"#b8-2007-07-17\" id=\"id21\" rel=\"nofollow\">1.0.0b8 (2007-07-17)</a></li>\n<li><a href=\"#b7-2007-04-26\" id=\"id22\" rel=\"nofollow\">1.0.0b7 (2007-04-26)</a></li>\n<li><a href=\"#b6-2007-02-25\" id=\"id23\" rel=\"nofollow\">1.0.0b6 (2007-02-25)</a></li>\n<li><a href=\"#b5-2007-01-24\" id=\"id24\" rel=\"nofollow\">1.0.0b5 (2007-01-24)</a></li>\n<li><a href=\"#b4-2006-10-24\" id=\"id25\" rel=\"nofollow\">1.0.0b4 (2006-10-24)</a></li>\n<li><a href=\"#b3-2006-10-16\" id=\"id26\" rel=\"nofollow\">1.0.0b3 (2006-10-16)</a></li>\n<li><a href=\"#b2\" id=\"id27\" rel=\"nofollow\">1.0.0b2</a></li>\n<li><a href=\"#b1\" id=\"id28\" rel=\"nofollow\">1.0.0b1</a></li>\n<li><a href=\"#a3\" id=\"id29\" rel=\"nofollow\">1.0.0a3</a></li>\n<li><a href=\"#a2\" id=\"id30\" rel=\"nofollow\">1.0.0a2</a></li>\n<li><a href=\"#a1\" id=\"id31\" rel=\"nofollow\">1.0.0a1</a></li>\n</ul>\n</li>\n<li><a href=\"#detailed-documentation\" id=\"id32\" rel=\"nofollow\">Detailed Documentation</a></li>\n</ul>\n</div>\n<p>This recipe generates zope.testing test-runner scripts for testing a\ncollection of eggs.</p>\n<p>Example usage in <tt>buildout.cfg</tt>:</p>\n<pre>[buildout]\nparts = test\n\n[test]\nrecipe = zc.recipe.testrunner\neggs = &lt;eggs to test&gt;\n</pre>\n<div id=\"change-history\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Change History</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id13\" rel=\"nofollow\">2.1 (2019-05-14)</a></h3>\n<ul>\n<li>Add support for Python 3.5 up to 3.8a3.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id14\" rel=\"nofollow\">2.0.0 (2013-02-10)</a></h3>\n<p>Work with buildout 2.</p>\n<p>This was accomplised by starting from 1.3.0 then:</p>\n<ul>\n<li>Merge fixes from 1.2.1\n(svn://svn.zope.org/repos/main/zc.recipe.testrunner/tags/1.2.1)\nExcluding nailing zope.testing version. That fixes a bunch of\nwindows issues</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id15\" rel=\"nofollow\">1.4.0 (2010-08-27)</a></h3>\n<ul>\n<li>Update to using zc.buildout 1.5.0 script generation.  This adds the\nfollowing options: include-site-packages, allowed-eggs-from-site-packages,\nextends, and exec-sitecustomize.</li>\n<li>Merge fixes from 1.2.1\n(svn://svn.zope.org/repos/main/zc.recipe.testrunner/tags/1.2.1)\nExcluding nailing zope.testing version. That fixes a bunch of\nwindows issues</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id16\" rel=\"nofollow\">1.3.0 (2010-06-09)</a></h3>\n<ul>\n<li>Updated tests to run with the last versions of all modules.</li>\n<li>Removed the usage of the deprecated zope.testing.doctest, therby also\ndropping Python 2.3 support.</li>\n<li>Started using zope.testrunner instead of zope.testing.testrunner.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id17\" rel=\"nofollow\">1.2.1 (2010-08-24)</a></h3>\n<ul>\n<li>Fixed a lot of windows issues</li>\n<li>Nailed versions to ZTK 1.0a2 (oh well, we have to have at least some stability)</li>\n<li>Fixed some other test failures that seemed to come from other packages</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id18\" rel=\"nofollow\">1.2.0 (2009-03-23)</a></h3>\n<ul>\n<li>Added a relative-paths option to use egg, test, and\nworking-directory paths relative to the test script.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id19\" rel=\"nofollow\">1.1.0 (2008-08-25)</a></h3>\n<ul>\n<li>Requiring at least zope.testing 3.6.0.</li>\n<li>Fixed a bug: Parallel runs of layers failed when using\nworking-directory parameter.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id20\" rel=\"nofollow\">1.0.0 (2007-11-04)</a></h3>\n<ul>\n<li>Preparing stable release.</li>\n</ul>\n</div>\n<div id=\"b8-2007-07-17\">\n<h3><a href=\"#id21\" rel=\"nofollow\">1.0.0b8 (2007-07-17)</a></h3>\n<ul>\n<li>Added the ability to use <cite>initialization</cite> option that will be inserted into\nthe bin/test after the environment is set up.</li>\n</ul>\n</div>\n<div id=\"b7-2007-04-26\">\n<h3><a href=\"#id22\" rel=\"nofollow\">1.0.0b7 (2007-04-26)</a></h3>\n<h3 id=\"feature-changes\"><span class=\"section-subtitle\">Feature Changes</span></h3>\n<ul>\n<li>Added optional option <cite>environment</cite> that allows defining a section in your\nbuildout.cfg to specify environment variables that should be set before\nrunning the tests.</li>\n</ul>\n</div>\n<div id=\"b6-2007-02-25\">\n<h3><a href=\"#id23\" rel=\"nofollow\">1.0.0b6 (2007-02-25)</a></h3>\n<h3 id=\"id9\"><span class=\"section-subtitle\">Feature Changes</span></h3>\n<ul>\n<li>If the working directory is not specified, or specified as the empty\nstring, an empty part directory is created for the tests to run in.</li>\n</ul>\n</div>\n<div id=\"b5-2007-01-24\">\n<h3><a href=\"#id24\" rel=\"nofollow\">1.0.0b5 (2007-01-24)</a></h3>\n<h3 id=\"bugs-fixed\"><span class=\"section-subtitle\">Bugs fixed</span></h3>\n<ul>\n<li><p>When:</p>\n<ul>\n<li>the working-directory option was used,</li>\n<li>and the test runner needed to restart itself</li>\n<li>and the test runner was run with a relative path (e.g. bin/test)</li>\n</ul>\n<p>then the testrunner could not restart itself successfully because the\nrelative path in sys.argv[0] was no-longer valid.</p>\n<p>Now we convert sys.argv[0] to an absolute path.</p>\n</li>\n</ul>\n</div>\n<div id=\"b4-2006-10-24\">\n<h3><a href=\"#id25\" rel=\"nofollow\">1.0.0b4 (2006-10-24)</a></h3>\n<h3 id=\"id10\"><span class=\"section-subtitle\">Feature Changes</span></h3>\n<ul>\n<li>Added a working-directoy option to specify a working directory for\nthe generated script.</li>\n</ul>\n</div>\n<div id=\"b3-2006-10-16\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.0.0b3 (2006-10-16)</a></h3>\n<p>Updated to work with (not get a warning from) zc.buildout 1.0.0b10.</p>\n</div>\n<div id=\"b2\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.0.0b2</a></h3>\n<p>Added a defaults option to specify testrunner default options.</p>\n</div>\n<div id=\"b1\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.0.0b1</a></h3>\n<p>Updated to work with zc.buildout 1.0.0b5.</p>\n</div>\n<div id=\"a3\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.0.0a3</a></h3>\n<p>Added a defaults option that lets you specify test-runner default\noptions.</p>\n</div>\n<div id=\"a2\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.0.0a2</a></h3>\n<p>Now provide a extra-paths option for including extra paths in test\nscripts. This is useful when eggs depend on Python packages not\npackaged as eggs.</p>\n</div>\n<div id=\"a1\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.0.0a1</a></h3>\n<p>Initial public version</p>\n</div>\n</div>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id32\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<h2 id=\"id11\"><span class=\"section-subtitle\">Test-Runner Recipe</span></h2>\n<p>The test-runner recipe, zc.recipe.testrunner, creates a test runner\nfor a project.</p>\n<p>The test-runner recipe has several options:</p>\n<dl>\n<dt>eggs</dt>\n<dd>The eggs option specified a list of eggs to test given as one ore\nmore setuptools requirement strings.  Each string must be given on\na separate line.</dd>\n<dt>script</dt>\n<dd>The script option gives the name of the script to generate, in the\nbuildout bin directory.  Of the option isn\u2019t used, the part name\nwill be used.</dd>\n<dt>extra-paths</dt>\n<dd>One or more extra paths to include in the generated test script.</dd>\n<dt>defaults</dt>\n<dd>The defaults option lets you specify testrunner default\noptions. These are specified as Python source for an expression\nyielding a list, typically a list literal.</dd>\n<dt>working-directory</dt>\n<dd>The working-directory option lets to specify a directory where the\ntests will run. The testrunner will change to this directory when\nrun. If the working directory is the empty string or not specified\nat all, the recipe will create a working directory among the parts.</dd>\n<dt>environment</dt>\n<dd>A set of environment variables that should be exported before\nstarting the tests.</dd>\n<dt>initialization</dt>\n<dd>Provide initialization code to run before running tests.</dd>\n<dt>relative-paths</dt>\n<dd>Use egg, test, and working-directory paths relative to the test script.</dd>\n</dl>\n<p>(Note that, at this time, due to limitations in the Zope test runner, the\ndistributions cannot be zip files. TODO: Fix the test runner!)</p>\n<p>To illustrate this, we\u2019ll create a pair of projects in our sample\nbuildout:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; mkdir(sample_buildout, 'demo')\n&gt;&gt;&gt; mkdir(sample_buildout, 'demo', 'demo')\n&gt;&gt;&gt; write(sample_buildout, 'demo', 'demo', '__init__.py', '')\n&gt;&gt;&gt; write(sample_buildout, 'demo', 'demo', 'tests.py',\n... '''\n... import unittest\n...\n... class TestDemo(unittest.TestCase):\n...    def test(self):\n...        pass\n...\n... def test_suite():\n...     return unittest.makeSuite(TestDemo)\n... ''')\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demo', 'setup.py',\n... \"\"\"\n... from setuptools import setup\n...\n... setup(name = \"demo\")\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demo', 'README.txt', '')\n</pre>\n<pre>&gt;&gt;&gt; mkdir(sample_buildout, 'demo2')\n&gt;&gt;&gt; mkdir(sample_buildout, 'demo2', 'demo2')\n&gt;&gt;&gt; write(sample_buildout, 'demo2', 'demo2', '__init__.py', '')\n&gt;&gt;&gt; write(sample_buildout, 'demo2', 'demo2', 'tests.py',\n... '''\n... import unittest\n...\n... class Demo2Tests(unittest.TestCase):\n...    def test2(self):\n...        pass\n...\n... def test_suite():\n...     return unittest.makeSuite(Demo2Tests)\n... ''')\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demo2', 'setup.py',\n... \"\"\"\n... from setuptools import setup\n...\n... setup(name = \"demo2\", install_requires= ['demoneeded'])\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demo2', 'README.txt', '')\n</pre>\n</blockquote>\n<p>Demo 2 depends on demoneeded:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; mkdir(sample_buildout, 'demoneeded')\n&gt;&gt;&gt; mkdir(sample_buildout, 'demoneeded', 'demoneeded')\n&gt;&gt;&gt; write(sample_buildout, 'demoneeded', 'demoneeded', '__init__.py', '')\n&gt;&gt;&gt; write(sample_buildout, 'demoneeded', 'demoneeded', 'tests.py',\n... '''\n... import unittest\n...\n... class TestNeeded(unittest.TestCase):\n...    def test_needed(self):\n...        pass\n...\n... def test_suite():\n...     return unittest.makeSuite(TestNeeded)\n... ''')\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demoneeded', 'setup.py',\n... \"\"\"\n... from setuptools import setup\n...\n... setup(name = \"demoneeded\")\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demoneeded', 'README.txt', '')\n</pre>\n</blockquote>\n<p>We\u2019ll update our buildout to install the demo project as a\ndevelop egg and to create the test script:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo demoneeded demo2\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs =\n...    demo\n...    demo2\n... script = test\n... \"\"\")\n</pre>\n</blockquote>\n<p>Note that we specified both demo and demo2 in the eggs\noption and that we put them on separate lines.</p>\n<p>We also specified the offline option to run the buildout in offline mode.</p>\n<p>Now when we run the buildout:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.chdir(sample_buildout)\n&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n</blockquote>\n<p>We get a test script installed in our bin directory:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(sample_buildout, 'bin')\n-  buildout\n-  test\n</pre>\n</blockquote>\n<p>We also get a part directory for the tests to run in:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(sample_buildout, 'parts')\nd  testdemo\n</pre>\n</blockquote>\n<p>And updating leaves its contents intact:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; _ = system(os.path.join(sample_buildout, 'bin', 'test') +\n...            ' -q --coverage=coverage')\n&gt;&gt;&gt; ls(sample_buildout, 'parts', 'testdemo')\nd  coverage\n&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n&gt;&gt;&gt; ls(sample_buildout, 'parts', 'testdemo')\nd  coverage\n</pre>\n</blockquote>\n<p>We can run the test script to run our demo test:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'test') + ' -vv'),\n...        end='')\nRunning tests at level 1\nRunning zope.testrunner.layer.UnitTests tests:\n  Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n  Running:\n test (demo.tests.TestDemo)\n test2 (demo2.tests.Demo2Tests)\n  Ran 2 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\nTearing down left over layers:\n  Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n</pre>\n</blockquote>\n<p>Note that we didn\u2019t run the demoneeded tests.  Tests are only run for\nthe eggs listed, not for their dependencies.</p>\n<p>If we leave the script option out of the configuration, then the test\nscript will get it\u2019s name from the part:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; ls(sample_buildout, 'bin')\n-  buildout\n-  testdemo\n</pre>\n</blockquote>\n<p>We can run the test script to run our demo test:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'testdemo') + ' -q'),\n...        end='')\nRunning zope.testrunner.layer.UnitTests tests:\n  Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n  Ran 1 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\nTearing down left over layers:\n  Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n</pre>\n</blockquote>\n<p>If we need to include other paths in our test script, we can use the\nextra-paths option to specify them:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/sample-buildout/parts/testdemo')\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run([\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n</blockquote>\n<p>We can use the working-directory option to specify a working\ndirectory:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n... working-directory = /foo/bar\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/foo/bar')\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run([\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n</blockquote>\n<p>Now that out tests use a specified working directory, their designated\npart directory is gone:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(sample_buildout, 'parts')\n</pre>\n</blockquote>\n<p>If we need to specify default options, we can use the defaults\noption. For example, Zope 3 applications typically define test suites\nin modules named ftests or tests.  The default test runner behaviour\nis to look in modules named tests.  To specify that we want to look in\ntests and ftests module, we\u2019d supply a default for the \u2013tests-pattern\noption.  If we like dots, we could also request more verbose output\nusing the -v option:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n... defaults = ['--tests-pattern', '^f?tests$',\n...             '-v'\n...            ]\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/sample-buildout/parts/testdemo')\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n'-v'\n]) + [\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n</blockquote>\n<p>Some things to note from this example:</p>\n<ul>\n<li>Parentheses are placed around the given expression.</li>\n<li>Leading whitespace is removed.</li>\n</ul>\n<p>To demonstrate the <tt>environment</tt> option, we first update the tests to\ninclude a check for an environment variable:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'demo', 'demo', 'tests.py',\n... '''\n... import unittest\n... import os\n...\n... class DemoTests(unittest.TestCase):\n...    def test(self):\n...        self.assertEquals('42', os.environ.get('zc.recipe.testrunner', '23'))\n...\n... def test_suite():\n...     return unittest.makeSuite(DemoTests)\n... ''')\n</pre>\n</blockquote>\n<p>Running them with the current buildout will produce a failure:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'testdemo')\n...               + ' -vv'),\n...        end='') # doctest: +ELLIPSIS\nRunning tests at level 1\nRunning zope.testrunner.layer.UnitTests tests:\n  Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n  Running:\n test (demo.tests.DemoTests) (... s)\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nFailure in test test (demo.tests.DemoTests)\nTraceback (most recent call last):\n  ...\nAssertionError: '42' != '23'\n...\n  Ran 1 tests with 1 failures, 0 errors and 0 skipped in 0.001 seconds.\nTearing down left over layers:\n  Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n&lt;BLANKLINE&gt;\nTests with failures:\n   test (demo.tests.DemoTests)\n</pre>\n</blockquote>\n<p>Let\u2019s update the buildout to specify the environment variable for the test\nrunner:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... environment = testenv\n...\n... [testenv]\n... zc.recipe.testrunner = 42\n... \"\"\")\n</pre>\n</blockquote>\n<p>We run buildout and see that the test runner script now includes setting up\nthe environment variable. Also, the tests pass again:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/sample-buildout/parts/testdemo')\nos.environ['zc.recipe.testrunner'] = '42'\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run([\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'testdemo')+' -vv'),\n...        end='')\nRunning tests at level 1\nRunning zope.testrunner.layer.UnitTests tests:\n  Set up zope.testrunner.layer.UnitTests in 0.001 seconds.\n  Running:\n test (demo.tests.DemoTests)\n  Ran 1 tests with 0 failures, 0 errors and 0 skipped in 0.001 seconds.\nTearing down left over layers:\n  Tear down zope.testrunner.layer.UnitTests in 0.001 seconds.\n</pre>\n</blockquote>\n<p>One can add initialization steps in the buildout.  These will be added to the\nend of the script:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... r\"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n... defaults = ['--tests-pattern', '^f?tests$',\n...             '-v'\n...            ]\n... initialization = sys.stdout.write('Hello all you egg-laying pythons!\\n')\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/sample-buildout/parts/testdemo')\nsys.stdout.write('Hello all you egg-laying pythons!\\n')\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n'-v'\n]) + [\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n</blockquote>\n<p>This will also work with a multi-line initialization section:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... r\"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n... defaults = ['--tests-pattern', '^f?tests$',\n...             '-v'\n...            ]\n... initialization = sys.stdout.write('Hello all you egg-laying pythons!\\n')\n...               sys.stdout.write('I thought pythons were live bearers?\\n')\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  ...\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir('/sample-buildout/parts/testdemo')\nsys.stdout.write('Hello all you egg-laying pythons!\\n')\nsys.stdout.write('I thought pythons were live bearers?\\n')\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run((['--tests-pattern', '^f?tests$',\n'-v'\n]) + [\n        '--test-path', '/sample-buildout/demo',\n        ]))\n</pre>\n</blockquote>\n<p>If the relative-paths option is used, egg (and extra) paths are\ngenerated relative to the test script.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n...               ${buildout:directory}/sources\n... relative-paths = true\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport os\n&lt;BLANKLINE&gt;\njoin = os.path.join\nbase = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))\nbase = os.path.dirname(base)\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  join(base, 'demo'),\n  ...\n  '/usr/local/zope/lib/python',\n  join(base, 'sources'),\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir(join(base, 'parts/testdemo'))\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run([\n        '--test-path', join(base, 'demo'),\n        ]))\n</pre>\n</blockquote>\n<p>The relative-paths option can be specified at the buildout level:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... develop = demo\n... parts = testdemo\n... offline = true\n... relative-paths = true\n...\n... [testdemo]\n... recipe = zc.recipe.testrunner\n... eggs = demo\n... extra-paths = /usr/local/zope/lib/python\n...               ${buildout:directory}/sources\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print_(system(os.path.join(sample_buildout, 'bin', 'buildout') + ' -q'),\n...        end='')\n</pre>\n<pre>&gt;&gt;&gt; cat(sample_buildout, 'bin', 'testdemo')  # doctest: +ELLIPSIS\n#!/usr/local/bin/python2.4\n&lt;BLANKLINE&gt;\nimport os\n&lt;BLANKLINE&gt;\njoin = os.path.join\nbase = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))\nbase = os.path.dirname(base)\n&lt;BLANKLINE&gt;\nimport sys\nsys.path[0:0] = [\n  join(base, 'demo'),\n  ...\n  '/usr/local/zope/lib/python',\n  join(base, 'sources'),\n  ]\n&lt;BLANKLINE&gt;\nimport os\nsys.argv[0] = os.path.abspath(sys.argv[0])\nos.chdir(join(base, 'parts/testdemo'))\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\nimport zope.testrunner\n&lt;BLANKLINE&gt;\nif __name__ == '__main__':\n    sys.exit(zope.testrunner.run([\n        '--test-path', join(base, 'demo'),\n        ]))\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 5266556, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "98794c64651d65eb78dad85814642b8f", "sha256": "8da257d500b3995bcf8975cb961fd9d24cab1dfc71f06c0e5b8c49053ec6fc9e"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0.tar.gz", "has_sig": false, "md5_digest": "98794c64651d65eb78dad85814642b8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11312, "upload_time": "2007-11-04T00:36:45", "upload_time_iso_8601": "2007-11-04T00:36:45Z", "url": "https://files.pythonhosted.org/packages/20/a6/f39533ccd754e9d0747430a2bc3490a885e425522507dc7339b660c0cfc7/zc.recipe.testrunner-1.0.0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "6ff914b578ce0c358d94c8805a8ac2ea", "sha256": "5d19c95a5095b71eae9c2f993d031049c11b3770dfd4633466866fe1fb1d49f2"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0a1-py2.3.egg", "has_sig": false, "md5_digest": "6ff914b578ce0c358d94c8805a8ac2ea", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 18592, "upload_time": "2006-06-29T20:23:46", "upload_time_iso_8601": "2006-06-29T20:23:46Z", "url": "https://files.pythonhosted.org/packages/14/cd/ec2b68c76eb574929e559202009f7e8021f12bc1dec4d530aa83b82909bf/zc.recipe.testrunner-1.0.0a1-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b7f61001bf1fe601c0f9c8002905b59", "sha256": "b54acb671c78744eac03515345ad2fa7ebb3d53de1b25a0bfe6295285acbbb69"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0a1-py2.4.egg", "has_sig": false, "md5_digest": "1b7f61001bf1fe601c0f9c8002905b59", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 8582, "upload_time": "2006-06-29T20:25:38", "upload_time_iso_8601": "2006-06-29T20:25:38Z", "url": "https://files.pythonhosted.org/packages/11/0e/606d46d318cfe8d2cf29ba187316602f8d3fc065cfc510a9b9e773f5494e/zc.recipe.testrunner-1.0.0a1-py2.4.egg", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "debbb8d2f560312adb4a56e1a7e1384d", "sha256": "8600f458bbd8fa22de165da67890b6db9aa0166f42065e0eae6ba774535e55bb"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0a2-py2.3.egg", "has_sig": false, "md5_digest": "debbb8d2f560312adb4a56e1a7e1384d", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 20265, "upload_time": "2006-09-06T12:02:39", "upload_time_iso_8601": "2006-09-06T12:02:39Z", "url": "https://files.pythonhosted.org/packages/f1/b5/508d7e3ac0876e269cc1af529151432c129ab451685a969e6fcfebed5b56/zc.recipe.testrunner-1.0.0a2-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8116ef396a7789d47851f47931987fcd", "sha256": "d51af6a16d4227ed636813b777d2ae9813e40f85f814c278b1512e48f32bf28b"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0a2-py2.4.egg", "has_sig": false, "md5_digest": "8116ef396a7789d47851f47931987fcd", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9140, "upload_time": "2006-09-06T12:03:56", "upload_time_iso_8601": "2006-09-06T12:03:56Z", "url": "https://files.pythonhosted.org/packages/1d/f5/82d47f7b49589b89217118b337175ca6a30289db8f69599b8fab5ec4e5d3/zc.recipe.testrunner-1.0.0a2-py2.4.egg", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "753bfbc7810880709dfadff0f3eea7e5", "sha256": "87281906c2f98bff17b301ab58a5ab05f7354aab2d6e848ab57cdccad8395b70"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b1-py2.3.egg", "has_sig": false, "md5_digest": "753bfbc7810880709dfadff0f3eea7e5", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 20724, "upload_time": "2006-09-15T14:13:26", "upload_time_iso_8601": "2006-09-15T14:13:26Z", "url": "https://files.pythonhosted.org/packages/31/97/9a3eea67d52fae7a87ed127ca5158d77692415ba9eb016b56ad737de66c4/zc.recipe.testrunner-1.0.0b1-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "78702ed2ae53325f85133a636c5807b3", "sha256": "c6843cdea663bdf77484bcfc5fd09ea05e7dbbdc81ac1400f714843a053a0aee"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b1-py2.4.egg", "has_sig": false, "md5_digest": "78702ed2ae53325f85133a636c5807b3", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9325, "upload_time": "2006-09-15T14:15:18", "upload_time_iso_8601": "2006-09-15T14:15:18Z", "url": "https://files.pythonhosted.org/packages/c6/5e/38f54076a28e25b79d994c02e9ec1737534c5376e87694e120c400b3d66e/zc.recipe.testrunner-1.0.0b1-py2.4.egg", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "2e39eb7b3d348e6b830de507ecb40ab5", "sha256": "941b33c0aa1cbcc1850cc6aab071512b83fd328b57e0b044b4771b483bc5110e"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b2-py2.3.egg", "has_sig": false, "md5_digest": "2e39eb7b3d348e6b830de507ecb40ab5", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 30272, "upload_time": "2006-09-20T22:14:28", "upload_time_iso_8601": "2006-09-20T22:14:28Z", "url": "https://files.pythonhosted.org/packages/f3/62/2382d7a7571421622fda3bd3821b1f283c70bee9395fb35f2a053060d561/zc.recipe.testrunner-1.0.0b2-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb26237585f3f5dc7f4e8b6b77ed9ce9", "sha256": "71ac406ccdf112f84b965d13d13f2294e4fede91bdcc06ad5a0694c331a7295f"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b2-py2.4.egg", "has_sig": false, "md5_digest": "cb26237585f3f5dc7f4e8b6b77ed9ce9", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10961, "upload_time": "2006-09-20T22:20:15", "upload_time_iso_8601": "2006-09-20T22:20:15Z", "url": "https://files.pythonhosted.org/packages/a8/b5/522ee57a5a2d3d5dc029084caf576d918af4c9ae87c456b589415109f2a9/zc.recipe.testrunner-1.0.0b2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fbadb14e77ce78a27cc7ed43b1562a4", "sha256": "efd135effc3a9ec8f035499b33bd760178c289b034e08b742afd56ba194f106d"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b2-py2.5.egg", "has_sig": false, "md5_digest": "8fbadb14e77ce78a27cc7ed43b1562a4", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 10984, "upload_time": "2006-10-01T17:25:52", "upload_time_iso_8601": "2006-10-01T17:25:52Z", "url": "https://files.pythonhosted.org/packages/c1/fd/14470bd012e7fff5687403d3434ff89a89d61c699de99b58f36aee51c6e3/zc.recipe.testrunner-1.0.0b2-py2.5.egg", "yanked": false}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "2df5c9557172ed006adedab96af90a1b", "sha256": "6d676a3e8202a9f82ba50f2515c6f2d19d6bd617be36df2e3e4f04413108d9cf"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b3-py2.3.egg", "has_sig": false, "md5_digest": "2df5c9557172ed006adedab96af90a1b", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 30887, "upload_time": "2006-10-16T21:39:53", "upload_time_iso_8601": "2006-10-16T21:39:53Z", "url": "https://files.pythonhosted.org/packages/88/a7/def6b8bb37d9d39e1a6f6dbab2866d8e1345c4b97db1a5f5472d57e9b2e0/zc.recipe.testrunner-1.0.0b3-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b2c4a761d0bc120792d3c44e6e13fb9", "sha256": "51587f3ccb92983f558aae9b6ea7ff62b6adf75f3df384041206db98f09488fe"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b3-py2.4.egg", "has_sig": false, "md5_digest": "6b2c4a761d0bc120792d3c44e6e13fb9", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 11118, "upload_time": "2006-10-16T21:37:36", "upload_time_iso_8601": "2006-10-16T21:37:36Z", "url": "https://files.pythonhosted.org/packages/0a/69/1c3a33eaf4cd24f56ab2f38436d88a1332f5fe5411d48758b2e4b329813b/zc.recipe.testrunner-1.0.0b3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b9f8f3ac981af42d231d787a9ac3b75", "sha256": "d417a52c2feccb358ca5c8e83da78706db066507682238ad39356fc4c2bfbd00"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b3-py2.5.egg", "has_sig": false, "md5_digest": "1b9f8f3ac981af42d231d787a9ac3b75", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 11125, "upload_time": "2006-10-16T21:36:33", "upload_time_iso_8601": "2006-10-16T21:36:33Z", "url": "https://files.pythonhosted.org/packages/00/b1/1b54147d000d24167a44c2af6c3848ad21f58bdc9fdcfb28191661a87dbb/zc.recipe.testrunner-1.0.0b3-py2.5.egg", "yanked": false}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "4977cc6fa092b86a73b996d7ccf607b6", "sha256": "e66fbfec4ca3ff7321d287b4bdda01e74ad2c209ddacbf0b442d829e626db568"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b4-py2.3.egg", "has_sig": false, "md5_digest": "4977cc6fa092b86a73b996d7ccf607b6", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 34200, "upload_time": "2006-10-24T22:35:23", "upload_time_iso_8601": "2006-10-24T22:35:23Z", "url": "https://files.pythonhosted.org/packages/ed/06/dc2ae1b20d92981026f5a74c5756d601139a6d81396b4e08e017732cf2ca/zc.recipe.testrunner-1.0.0b4-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "aee2657998a976ee94c81222db382c6b", "sha256": "ec8ec7554c70e71395e53226a90db3cc202abebd284cf6dca1cf70ab7914fa75"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b4-py2.4.egg", "has_sig": false, "md5_digest": "aee2657998a976ee94c81222db382c6b", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 11535, "upload_time": "2006-10-24T22:34:26", "upload_time_iso_8601": "2006-10-24T22:34:26Z", "url": "https://files.pythonhosted.org/packages/29/55/db0488d135d503e0c213973226a8bf31aef54270761f3c0960d809eed87a/zc.recipe.testrunner-1.0.0b4-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a1a1cb27f5cca09f99b3d49e593f9f0", "sha256": "207c8b2a811c786ea21ea02fc7b0de32fa1bd3b6d816570eb00fd24ee8de6033"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b4-py2.5.egg", "has_sig": false, "md5_digest": "3a1a1cb27f5cca09f99b3d49e593f9f0", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 11539, "upload_time": "2006-10-24T22:36:20", "upload_time_iso_8601": "2006-10-24T22:36:20Z", "url": "https://files.pythonhosted.org/packages/ca/99/17ed81e2ee05681415ebfa68ea9473d052d6f74197d361f27260ee28f7de/zc.recipe.testrunner-1.0.0b4-py2.5.egg", "yanked": false}], "1.0.0b5": [{"comment_text": "", "digests": {"md5": "587527862b7d23834d88c9d701e65587", "sha256": "e69564e910dca2af04f5104856c03f4109ac2f1a036d61ed57905aa42e544a33"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b5-py2.3.egg", "has_sig": false, "md5_digest": "587527862b7d23834d88c9d701e65587", "packagetype": "bdist_egg", "python_version": "2.3", "requires_python": null, "size": 34365, "upload_time": "2007-01-24T22:18:26", "upload_time_iso_8601": "2007-01-24T22:18:26Z", "url": "https://files.pythonhosted.org/packages/95/ea/520c04fd802aef84ec9e2eb0e610488c9566151511b0596f8a2b02ab0e9e/zc.recipe.testrunner-1.0.0b5-py2.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dc96bc4411e1e20252d55213b3a43e0", "sha256": "96d3c9425aa67ff3627b8d87a325b92f6d5fcf1698b2f1d964c1b50a936ede8d"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b5-py2.4.egg", "has_sig": false, "md5_digest": "2dc96bc4411e1e20252d55213b3a43e0", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 11507, "upload_time": "2007-01-24T21:58:27", "upload_time_iso_8601": "2007-01-24T21:58:27Z", "url": "https://files.pythonhosted.org/packages/0a/b9/b9101de7584c1758add6717e5f781ad5577403a9e6ba9c39b0814836d220/zc.recipe.testrunner-1.0.0b5-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdafdde78e4d71fd3b4ca87f22ff001e", "sha256": "6fc41d63de3aa1c1d83690d2dd193bda996070ef1343d6306662a5b77e395914"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b5-py2.5.egg", "has_sig": false, "md5_digest": "fdafdde78e4d71fd3b4ca87f22ff001e", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 11519, "upload_time": "2007-01-24T23:48:14", "upload_time_iso_8601": "2007-01-24T23:48:14Z", "url": "https://files.pythonhosted.org/packages/67/94/4a6e5edefbeff73000b7dd2af79dbf625e9d7f4d9c392234126e8ef6b1d0/zc.recipe.testrunner-1.0.0b5-py2.5.egg", "yanked": false}], "1.0.0b6": [{"comment_text": "", "digests": {"md5": "45e2ef329204ae43b18cb18273e012d7", "sha256": "7e11bc22dd2daaf500f6b33fdde9023d0d49f3e32ace4b5c890e8311dc1a63e5"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b6-py2.4.egg", "has_sig": true, "md5_digest": "45e2ef329204ae43b18cb18273e012d7", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12196, "upload_time": "2007-02-25T21:55:17", "upload_time_iso_8601": "2007-02-25T21:55:17Z", "url": "https://files.pythonhosted.org/packages/00/14/8919fda7709e299ba5de45e36aa8ea29083ea31c9ddd6e76cc89e16a3716/zc.recipe.testrunner-1.0.0b6-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d8a964d6a8219871e1b38cee9b2d76e", "sha256": "6810ca6de76c46459da797ca91453d10c903147c9ea9e210c83c3506a4e9b204"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b6-py2.5.egg", "has_sig": true, "md5_digest": "5d8a964d6a8219871e1b38cee9b2d76e", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 12208, "upload_time": "2007-02-25T21:55:34", "upload_time_iso_8601": "2007-02-25T21:55:34Z", "url": "https://files.pythonhosted.org/packages/72/b6/6651f712e6f8c969d42a41fe0f7d6fb1f931fe90a024e023943a29aa9924/zc.recipe.testrunner-1.0.0b6-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "338edf89763e4c53226332a51e82ac05", "sha256": "82bc249199a12a7f5026043b39fb95f50fd37ea9fbd0797b833a5339214133b2"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b6.tar.gz", "has_sig": false, "md5_digest": "338edf89763e4c53226332a51e82ac05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6805, "upload_time": "2007-04-14T12:45:50", "upload_time_iso_8601": "2007-04-14T12:45:50Z", "url": "https://files.pythonhosted.org/packages/da/14/bba19a260a7b574943737fa52abd8c866b4179a7c1ad53f7522b934deef2/zc.recipe.testrunner-1.0.0b6.tar.gz", "yanked": false}], "1.0.0b7": [{"comment_text": "", "digests": {"md5": "bd66e7b23ea11901997761207755025e", "sha256": "682ad8d1726e3abfeb6da931abcf462c9609fe8982263b1c8edd1c40830998a5"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b7.tar.gz", "has_sig": false, "md5_digest": "bd66e7b23ea11901997761207755025e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9746, "upload_time": "2007-04-26T14:13:52", "upload_time_iso_8601": "2007-04-26T14:13:52Z", "url": "https://files.pythonhosted.org/packages/63/e3/c6243ea023a227c8a5148140c4e081cd8bfc70832d0dbc66c1242d60d094/zc.recipe.testrunner-1.0.0b7.tar.gz", "yanked": false}], "1.0.0b8": [{"comment_text": "", "digests": {"md5": "55550cd70814a531e9b3493f5aa91a34", "sha256": "b186fa4b133a376f56e3557fdf40349bd0b610139d37cb93f6a901acb53fad82"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.0b8.tar.gz", "has_sig": false, "md5_digest": "55550cd70814a531e9b3493f5aa91a34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10312, "upload_time": "2007-07-17T15:02:17", "upload_time_iso_8601": "2007-07-17T15:02:17Z", "url": "https://files.pythonhosted.org/packages/7a/75/dcd55d6f6c09cda168cca74ec619e9da2151676288125f0bc4b8bbc596f9/zc.recipe.testrunner-1.0.0b8.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5ca4003d67d38122a0988aef63230ce9", "sha256": "4c3ac098752f793c70e745ae48e1ec28ca849be95c2b7ad540e5d14b2c8c1f54"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.2-py2.4.egg", "has_sig": false, "md5_digest": "5ca4003d67d38122a0988aef63230ce9", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10938, "upload_time": "2008-08-25T14:35:57", "upload_time_iso_8601": "2008-08-25T14:35:57Z", "url": "https://files.pythonhosted.org/packages/a2/29/d2bf78d2dee6d1f5b987d61afc7285cd9baa6b994bdee201257129082944/zc.recipe.testrunner-1.0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "192a66cc96d243a1d39203b3ca61afc9", "sha256": "56757fb197c96f7889f3a4e8cca4a2f63d11ea6f2cf4af280e9432808348309f"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.2.tar.gz", "has_sig": false, "md5_digest": "192a66cc96d243a1d39203b3ca61afc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9796, "upload_time": "2008-08-25T14:34:17", "upload_time_iso_8601": "2008-08-25T14:34:17Z", "url": "https://files.pythonhosted.org/packages/f2/95/1b5c3131afb8f3d110dacf3466d66751d85e1737d3f322718d1ffeed3bf1/zc.recipe.testrunner-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "936cf649cdf75a6ca43a7dd746938f72", "sha256": "fca7706bc68b767885c0a4e9531fb47805a0f3d1ebd0cd70791a12256aaa9872"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.3.tar.gz", "has_sig": false, "md5_digest": "936cf649cdf75a6ca43a7dd746938f72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10412, "upload_time": "2008-09-10T13:50:49", "upload_time_iso_8601": "2008-09-10T13:50:49Z", "url": "https://files.pythonhosted.org/packages/6e/50/94226537d8871d2ac0c7825b67919876978e727294b3e6800196c1fcc33f/zc.recipe.testrunner-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "0bf02e9bd91058ffd377c675e0e7d56f", "sha256": "8ed2789fe29ad1e4b500448fa81c1be4d8aacd003aa0de37782cd1cfff2874a6"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0bf02e9bd91058ffd377c675e0e7d56f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11477, "upload_time": "2010-05-05T11:00:30", "upload_time_iso_8601": "2010-05-05T11:00:30.314766Z", "url": "https://files.pythonhosted.org/packages/f8/72/52c9e84f0437adc7b31fe8c6ce9b988710b3a07ec85a891e7517d8ffdcd5/zc.recipe.testrunner-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "ede9f731a2f93e97dd493ae3504b9370", "sha256": "38d2ec9a75b28458204d887a7f282e80b0b026b6eff283681b11a8d0c06c3b31"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ede9f731a2f93e97dd493ae3504b9370", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11463, "upload_time": "2010-05-05T14:27:38", "upload_time_iso_8601": "2010-05-05T14:27:38.682917Z", "url": "https://files.pythonhosted.org/packages/a8/65/3e7fc230f9f246aa69517381df98f38cdcfea002e560264cddb0a52f68b4/zc.recipe.testrunner-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a70ebc90b9119949a956fd7c6b9d31cd", "sha256": "920d436bc39e0a0bbed19087ba101241d550ac9669777381272b10340cc211fc"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a70ebc90b9119949a956fd7c6b9d31cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11937, "upload_time": "2010-05-05T14:32:11", "upload_time_iso_8601": "2010-05-05T14:32:11.489610Z", "url": "https://files.pythonhosted.org/packages/b1/2f/c8d6c43c3025f96f9bcb6fe99fcff80f7af1555a8e6e1d0b41ffffa4472b/zc.recipe.testrunner-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5821fcda67941a77886ba3463375fd81", "sha256": "5ac11c70414bfe3e1b382145975d69b1414cdff4ef71d81d3e0583e78467db74"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5821fcda67941a77886ba3463375fd81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12140, "upload_time": "2008-08-25T11:44:11", "upload_time_iso_8601": "2008-08-25T11:44:11Z", "url": "https://files.pythonhosted.org/packages/c8/a1/a1f28b3f7841ce9dffbb99ae72a7517c52444c83db25315cf535d91663c5/zc.recipe.testrunner-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "c294ec7932e2ad3a14660ebbf3019c8c", "sha256": "1919866f5ebce74092f0ff178101dfc3d556f130ba613779711b0be31585f4e6"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c294ec7932e2ad3a14660ebbf3019c8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15026, "upload_time": "2009-03-23T19:11:46", "upload_time_iso_8601": "2009-03-23T19:11:46.355582Z", "url": "https://files.pythonhosted.org/packages/6c/a8/ba3733e807876f9f7d7a0fe625cd82644fa67d888549ede6d47bafafb3ce/zc.recipe.testrunner-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "1be4a1518e5b94890634468118242850", "sha256": "3c915dcbb1bf92986250eea99d783ff224b50a81122e7f50cee336449d8c35db"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.2.1.tar.gz", "has_sig": false, "md5_digest": "1be4a1518e5b94890634468118242850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15667, "upload_time": "2010-08-24T16:41:15", "upload_time_iso_8601": "2010-08-24T16:41:15.283216Z", "url": "https://files.pythonhosted.org/packages/b6/ce/8f835f9c2f6164416d4eeea84eb0b98dff5d875a4838709f677242517fd9/zc.recipe.testrunner-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "e11ed4f09f01621f2e1bcc952c6100a2", "sha256": "bbc1c9af8212c52722cb657eed7221828721fe69c3d12e665b5d3b6c4910eb76"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.3.0.tar.gz", "has_sig": false, "md5_digest": "e11ed4f09f01621f2e1bcc952c6100a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15466, "upload_time": "2010-06-09T22:18:32", "upload_time_iso_8601": "2010-06-09T22:18:32.118577Z", "url": "https://files.pythonhosted.org/packages/08/06/6280779caa00309425a917aebcdf5d9a9c48d34e4ed33143f49ef392440d/zc.recipe.testrunner-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "b388a8e86ae974f6f2fc5dd6ec96315b", "sha256": "637f8f262922047b8c4330e44938f08e3d5122cf51c74088493c3bee28e8507b"}, "downloads": -1, "filename": "zc.recipe.testrunner-1.4.0.tar.gz", "has_sig": false, "md5_digest": "b388a8e86ae974f6f2fc5dd6ec96315b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27973, "upload_time": "2010-08-28T04:50:38", "upload_time_iso_8601": "2010-08-28T04:50:38.448877Z", "url": "https://files.pythonhosted.org/packages/c2/d2/6cb58ae8c0a537f44ac367c174235327171a4e87e37e726727233c5208fd/zc.recipe.testrunner-1.4.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "13aba3a677ae42c0dcc420e63e65fcc1", "sha256": "2aaf10d361491dd49aab83782f371631f4086eec6effd9be84b979be35d30403"}, "downloads": -1, "filename": "zc.recipe.testrunner-2.0.0.tar.gz", "has_sig": false, "md5_digest": "13aba3a677ae42c0dcc420e63e65fcc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18020, "upload_time": "2013-02-10T18:11:33", "upload_time_iso_8601": "2013-02-10T18:11:33.723849Z", "url": "https://files.pythonhosted.org/packages/87/d5/ef539e0652f53d86a451fca9e38e813f50853d1a9da1971b9283eee7bf5f/zc.recipe.testrunner-2.0.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "e6e29f0d78836f101acf5498536a73b6", "sha256": "a97ffdcbf56bacb5575b67cc9da96d0ee35520bc9659fd6cfe6d35970f906242"}, "downloads": -1, "filename": "zc.recipe.testrunner-2.1.tar.gz", "has_sig": false, "md5_digest": "e6e29f0d78836f101acf5498536a73b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19952, "upload_time": "2019-05-14T09:46:19", "upload_time_iso_8601": "2019-05-14T09:46:19.996658Z", "url": "https://files.pythonhosted.org/packages/fd/9d/c991cfa937cea988622378a1c513d2f3fe8f633d89be70377a8cfafd5e76/zc.recipe.testrunner-2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6e29f0d78836f101acf5498536a73b6", "sha256": "a97ffdcbf56bacb5575b67cc9da96d0ee35520bc9659fd6cfe6d35970f906242"}, "downloads": -1, "filename": "zc.recipe.testrunner-2.1.tar.gz", "has_sig": false, "md5_digest": "e6e29f0d78836f101acf5498536a73b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19952, "upload_time": "2019-05-14T09:46:19", "upload_time_iso_8601": "2019-05-14T09:46:19.996658Z", "url": "https://files.pythonhosted.org/packages/fd/9d/c991cfa937cea988622378a1c513d2f3fe8f633d89be70377a8cfafd5e76/zc.recipe.testrunner-2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:07 2020"}