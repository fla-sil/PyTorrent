{"info": {"author": "Tim Savage", "author_email": "tim@savage.company", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "#################\npyApp - Messaging\n#################\n\n*Let use handle the boring stuff!*\n\nThe messaging extension provides an abstract interface to various messaging\nimplementations. This lets your application seamlessly migrate from AMQP to SQS\nwithout any changes to your main application code.\n\n.. note:: The primary focus of work is on asyncio based queues.\n\n\nInstallation\n============\n\nInstall using *pip* or *pipenv*::\n\n    # Using pip\n    pip install pyapp-Messaging\n\n    # Using pipenv\n    pipenv install pyapp-Messaging\n\n\n\nUsage\n=====\n\nThis library is easiest used with the injection framework eg::\n\n    from pyapp.injection import inject, Args\n    from pyapp_ext.messaging import MessageReceiver\n\n    @inject\n    def my_function(queue: MessageReceiver = Args(name=\"job_queue\")):\n        queue.send_message(\"Do job A\")\n\nor using `asyncio`::\n\n    from pyapp.injection import inject, Args\n    from pyapp_ext.messaging.asyncio import MessageSender\n\n    @inject\n    async def my_function(sender: MessageSender = Args(name=\"job_queue\")):\n        await sender.send(\"Do job A\")\n\n\nAPI\n===\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pyapp-org/pyapp-messaging", "keywords": "application,framework", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "pyApp-Messaging", "package_url": "https://pypi.org/project/pyApp-Messaging/", "platform": "any", "project_url": "https://pypi.org/project/pyApp-Messaging/", "project_urls": {"Homepage": "https://github.com/pyapp-org/pyapp-messaging"}, "release_url": "https://pypi.org/project/pyApp-Messaging/0.2.0/", "requires_dist": ["pyapp (>=4.0.5)", "docutils ; extra == 'dev'", "black ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Common messaging extension. Provides base messaging services that other service build on", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>Let use handle the boring stuff!</em></p>\n<p>The messaging extension provides an abstract interface to various messaging\nimplementations. This lets your application seamlessly migrate from AMQP to SQS\nwithout any changes to your main application code.</p>\n<div>\n<p>Note</p>\n<p>The primary focus of work is on asyncio based queues.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <em>pip</em> or <em>pipenv</em>:</p>\n<pre># Using pip\npip install pyapp-Messaging\n\n# Using pipenv\npipenv install pyapp-Messaging\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This library is easiest used with the injection framework eg:</p>\n<pre>from pyapp.injection import inject, Args\nfrom pyapp_ext.messaging import MessageReceiver\n\n@inject\ndef my_function(queue: MessageReceiver = Args(name=\"job_queue\")):\n    queue.send_message(\"Do job A\")\n</pre>\n<p>or using <cite>asyncio</cite>:</p>\n<pre>from pyapp.injection import inject, Args\nfrom pyapp_ext.messaging.asyncio import MessageSender\n\n@inject\nasync def my_function(sender: MessageSender = Args(name=\"job_queue\")):\n    await sender.send(\"Do job A\")\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n</div>\n\n          </div>"}, "last_serial": 5629536, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "c2bd18df1bd19c56c6cd7b9308982b4d", "sha256": "f4a711938cf709d44ae84ca736015c6bed76bc1c8c77c357a091dbd675f9945a"}, "downloads": -1, "filename": "pyApp_Messaging-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2bd18df1bd19c56c6cd7b9308982b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11295, "upload_time": "2019-07-13T14:42:01", "upload_time_iso_8601": "2019-07-13T14:42:01.465864Z", "url": "https://files.pythonhosted.org/packages/3a/e1/9b648ca7b32f42340044becc2115d386011871e4711310e2a78aa679cb19/pyApp_Messaging-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53069fb329fddeb623daba09a051ddcc", "sha256": "df43b465bb19d72e59c37217bf9db4482f461b2311cbd1798dd49f77b995a5bf"}, "downloads": -1, "filename": "pyApp-Messaging-0.1.2.tar.gz", "has_sig": false, "md5_digest": "53069fb329fddeb623daba09a051ddcc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8793, "upload_time": "2019-07-13T14:42:03", "upload_time_iso_8601": "2019-07-13T14:42:03.364347Z", "url": "https://files.pythonhosted.org/packages/b4/09/c79f16d1ab846cbea4bdd4ef8945015e4bc6a236270e385324a0ec559c01/pyApp-Messaging-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1e05c681d06a611af952e6605e36d22e", "sha256": "9bd340ec5f4af7ba02e5930b66f47224af4691a602a56c2149b6234ef0921672"}, "downloads": -1, "filename": "pyApp_Messaging-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1e05c681d06a611af952e6605e36d22e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12121, "upload_time": "2019-07-19T15:32:43", "upload_time_iso_8601": "2019-07-19T15:32:43.472422Z", "url": "https://files.pythonhosted.org/packages/15/aa/0f0ba8bbb25c86655520ed76bb56193c8b5bd30358d9b0936a551f8eb86c/pyApp_Messaging-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0c7a6158d9d5a4dabe126c6cde4be53", "sha256": "9b4080e5e9d9b900d826658851ddf8a256ec12e8cfbd558733ac6e2f29027bd1"}, "downloads": -1, "filename": "pyApp-Messaging-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a0c7a6158d9d5a4dabe126c6cde4be53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9940, "upload_time": "2019-07-19T15:32:45", "upload_time_iso_8601": "2019-07-19T15:32:45.972064Z", "url": "https://files.pythonhosted.org/packages/58/2b/86303432d5433a371b5aaec8ca26bea9554dac6bc2a7bfcd6b3e975d9615/pyApp-Messaging-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e05c681d06a611af952e6605e36d22e", "sha256": "9bd340ec5f4af7ba02e5930b66f47224af4691a602a56c2149b6234ef0921672"}, "downloads": -1, "filename": "pyApp_Messaging-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1e05c681d06a611af952e6605e36d22e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12121, "upload_time": "2019-07-19T15:32:43", "upload_time_iso_8601": "2019-07-19T15:32:43.472422Z", "url": "https://files.pythonhosted.org/packages/15/aa/0f0ba8bbb25c86655520ed76bb56193c8b5bd30358d9b0936a551f8eb86c/pyApp_Messaging-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0c7a6158d9d5a4dabe126c6cde4be53", "sha256": "9b4080e5e9d9b900d826658851ddf8a256ec12e8cfbd558733ac6e2f29027bd1"}, "downloads": -1, "filename": "pyApp-Messaging-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a0c7a6158d9d5a4dabe126c6cde4be53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9940, "upload_time": "2019-07-19T15:32:45", "upload_time_iso_8601": "2019-07-19T15:32:45.972064Z", "url": "https://files.pythonhosted.org/packages/58/2b/86303432d5433a371b5aaec8ca26bea9554dac6bc2a7bfcd6b3e975d9615/pyApp-Messaging-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:26 2020"}