{"info": {"author": "David Davini", "author_email": "daviddavini@ucla.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PySineWave\n\nPySineWave offers an easy way to generate and play sine waves that can make smooth, continuous transitions in pitch and volume in real time. These sine waves are created, threaded and played (fed into an sound channel) behind the scenes, so that all you have to do is call their easy-to-use functions!\n\n## Installation\nOpen the terminal, and type:\n```\npip install pysinewave\n```\n\n## Code Example\nThis code will play a sinewave that smoothly decreases its pitch.\n```\nimport time\n\nfrom pysinewave import SineWave\n\n# Create a sine wave, with a starting pitch of 12, and a pitch change speed of 10/second.\nsinewave = SineWave(pitch = 12, pitch_per_second = 10)\n\n# Turn the sine wave on.\nsinewave.play()\n\n# Sleep for 2 seconds, as the sinewave keeps playing.\ntime.sleep(2)\n\n# Set the goal pitch to -5.\nsinewave.set_pitch(-5)\n\n# Sleep for 3 seconds, as the sinewave smoothly slides its pitch down from 12 to -5, and stays there.\ntime.sleep(3)\n```\n\n## Useful Functions\n\nUse `SineWave.set_pitch(pitch)` to change the pitch of a SineWave object. The SineWave object will smoothly transition to this new pitch at a rate of `SineWave.pitch_per_second`.\n\nUse `SineWave.set_volume(decibels)` to change the volume of a SineWave object. The SineWave object will smoothly transition to this new volume at a rate of `SineWave.decibels_per_second`.\n\nUse `SineWave.play()` and `SineWave.stop()` to start and stop the SineWave, respectively.\n\nUse `SineWave.set_pitch_per_second(pitch_per_second)` and `SineWave.set_decibels_per_second(decibels_per_second)` to change the values of `SineWave.pitch_per_second` and `SineWave.decibels_per_second`, respectively.\n\n## A Note on Pitch and Volume\nYou may want to directly modify the frequency and amplitude of a SineWave. We do provide two alternative functions, `SineWave.set_frequency(hertz)` and `SineWave.set_amplitude(percent)`, however we suggest that you use `SineWave.set_pitch(pitch)` and `SineWave.set_volume(decibels)` instead.\n\nWhy? The brain naturally perceives *ratios* between sound's frequency and amplitude much better than differences. This means that working directly with frequency will cause high frequencies to be much harder to distinguish than low frequencies. Similarly for amplitude.\n\nThe conversion between pitch and frequency (in Hz) is: **frequency = 440 * 2^((pitch-9)/2)**. For instance, note that a pitch of 0 is middle C, i.e. a frequency of 261.63 Hz.\n\nThe conversion between volume (in decibels) and amplitude is: **amplitude = 2^(volume/10)**. For instance, increasing the volume by 10 decibels doubles the amplitude of the sine wave.\n\nHere's a helpful table showing the relationship between frequency, pitch, and musical notes for one octave:\n\n| Pitch | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 |\n|:---------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n| Frequency | 261.63 | 277.18 | 293.66 | 311.13 | 329.63 | 349.23 | 369.99 | 392.00 | 415.30 | 440.00 | 466.16 | 493.88 | 523.25 |\n| Note | C | C#/Db | D | D#/Eb | E | F | F#/Gb | G | G#/Ab | A | A#/Bb | B | C |\n\nIf you don't know anything about music theory, no worries! Just be sure to stick to `SineWave.set_pitch(pitch)` and `SineWave.set_volume(decibels)`. Your Python projects will thank you.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/daviddavini/continuous-sine-wave", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pysinewave", "package_url": "https://pypi.org/project/pysinewave/", "platform": "", "project_url": "https://pypi.org/project/pysinewave/", "project_urls": {"Homepage": "https://github.com/daviddavini/continuous-sine-wave"}, "release_url": "https://pypi.org/project/pysinewave/0.0.6/", "requires_dist": ["numpy", "sounddevice"], "requires_python": ">=3.6", "summary": "Generate and play sine waves in real time, that can make smooth, continuous transitions in pitch and volume.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PySineWave</h1>\n<p>PySineWave offers an easy way to generate and play sine waves that can make smooth, continuous transitions in pitch and volume in real time. These sine waves are created, threaded and played (fed into an sound channel) behind the scenes, so that all you have to do is call their easy-to-use functions!</p>\n<h2>Installation</h2>\n<p>Open the terminal, and type:</p>\n<pre><code>pip install pysinewave\n</code></pre>\n<h2>Code Example</h2>\n<p>This code will play a sinewave that smoothly decreases its pitch.</p>\n<pre><code>import time\n\nfrom pysinewave import SineWave\n\n# Create a sine wave, with a starting pitch of 12, and a pitch change speed of 10/second.\nsinewave = SineWave(pitch = 12, pitch_per_second = 10)\n\n# Turn the sine wave on.\nsinewave.play()\n\n# Sleep for 2 seconds, as the sinewave keeps playing.\ntime.sleep(2)\n\n# Set the goal pitch to -5.\nsinewave.set_pitch(-5)\n\n# Sleep for 3 seconds, as the sinewave smoothly slides its pitch down from 12 to -5, and stays there.\ntime.sleep(3)\n</code></pre>\n<h2>Useful Functions</h2>\n<p>Use <code>SineWave.set_pitch(pitch)</code> to change the pitch of a SineWave object. The SineWave object will smoothly transition to this new pitch at a rate of <code>SineWave.pitch_per_second</code>.</p>\n<p>Use <code>SineWave.set_volume(decibels)</code> to change the volume of a SineWave object. The SineWave object will smoothly transition to this new volume at a rate of <code>SineWave.decibels_per_second</code>.</p>\n<p>Use <code>SineWave.play()</code> and <code>SineWave.stop()</code> to start and stop the SineWave, respectively.</p>\n<p>Use <code>SineWave.set_pitch_per_second(pitch_per_second)</code> and <code>SineWave.set_decibels_per_second(decibels_per_second)</code> to change the values of <code>SineWave.pitch_per_second</code> and <code>SineWave.decibels_per_second</code>, respectively.</p>\n<h2>A Note on Pitch and Volume</h2>\n<p>You may want to directly modify the frequency and amplitude of a SineWave. We do provide two alternative functions, <code>SineWave.set_frequency(hertz)</code> and <code>SineWave.set_amplitude(percent)</code>, however we suggest that you use <code>SineWave.set_pitch(pitch)</code> and <code>SineWave.set_volume(decibels)</code> instead.</p>\n<p>Why? The brain naturally perceives <em>ratios</em> between sound's frequency and amplitude much better than differences. This means that working directly with frequency will cause high frequencies to be much harder to distinguish than low frequencies. Similarly for amplitude.</p>\n<p>The conversion between pitch and frequency (in Hz) is: <strong>frequency = 440 * 2^((pitch-9)/2)</strong>. For instance, note that a pitch of 0 is middle C, i.e. a frequency of 261.63 Hz.</p>\n<p>The conversion between volume (in decibels) and amplitude is: <strong>amplitude = 2^(volume/10)</strong>. For instance, increasing the volume by 10 decibels doubles the amplitude of the sine wave.</p>\n<p>Here's a helpful table showing the relationship between frequency, pitch, and musical notes for one octave:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Pitch</th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n<th align=\"center\">8</th>\n<th align=\"center\">9</th>\n<th align=\"center\">10</th>\n<th align=\"center\">11</th>\n<th align=\"center\">12</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Frequency</td>\n<td align=\"center\">261.63</td>\n<td align=\"center\">277.18</td>\n<td align=\"center\">293.66</td>\n<td align=\"center\">311.13</td>\n<td align=\"center\">329.63</td>\n<td align=\"center\">349.23</td>\n<td align=\"center\">369.99</td>\n<td align=\"center\">392.00</td>\n<td align=\"center\">415.30</td>\n<td align=\"center\">440.00</td>\n<td align=\"center\">466.16</td>\n<td align=\"center\">493.88</td>\n<td align=\"center\">523.25</td>\n</tr>\n<tr>\n<td align=\"center\">Note</td>\n<td align=\"center\">C</td>\n<td align=\"center\">C#/Db</td>\n<td align=\"center\">D</td>\n<td align=\"center\">D#/Eb</td>\n<td align=\"center\">E</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F#/Gb</td>\n<td align=\"center\">G</td>\n<td align=\"center\">G#/Ab</td>\n<td align=\"center\">A</td>\n<td align=\"center\">A#/Bb</td>\n<td align=\"center\">B</td>\n<td align=\"center\">C</td>\n</tr></tbody></table>\n<p>If you don't know anything about music theory, no worries! Just be sure to stick to <code>SineWave.set_pitch(pitch)</code> and <code>SineWave.set_volume(decibels)</code>. Your Python projects will thank you.</p>\n\n          </div>"}, "last_serial": 6356982, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5db9e9036842e31189684e8f8482d809", "sha256": "b243e6a4144e268f41ded31648230133e09ee7fc075eb370e81b7f9d8619cada"}, "downloads": -1, "filename": "pysinewave-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5db9e9036842e31189684e8f8482d809", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5921, "upload_time": "2019-12-24T20:21:23", "upload_time_iso_8601": "2019-12-24T20:21:23.899027Z", "url": "https://files.pythonhosted.org/packages/87/54/fe3dc555a34d44ab4825cf1697f5625c46948108136587d5029b91481aa0/pysinewave-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "616a1dbdd14d5256030eb78f646aa523", "sha256": "d88344520b7d29068b9f36b9aa8649bd888c142d6d1e3661965bbd20c16118f6"}, "downloads": -1, "filename": "pysinewave-0.0.1.tar.gz", "has_sig": false, "md5_digest": "616a1dbdd14d5256030eb78f646aa523", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3969, "upload_time": "2019-12-24T20:21:26", "upload_time_iso_8601": "2019-12-24T20:21:26.093020Z", "url": "https://files.pythonhosted.org/packages/71/34/7c5b8a7f8a57a16226bf4d9221e578b15fea47e86ada9a9fcffc8c350ba5/pysinewave-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "85a7630a64e54b75081728eaaf99fb42", "sha256": "e1997af05b611ba7c3ab92e386d5e80138ce0b672781451ec716bdaa43ffbe70"}, "downloads": -1, "filename": "pysinewave-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "85a7630a64e54b75081728eaaf99fb42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5900, "upload_time": "2019-12-24T20:32:40", "upload_time_iso_8601": "2019-12-24T20:32:40.509668Z", "url": "https://files.pythonhosted.org/packages/b4/d8/b04f36855d10917899e27c59d9942739c10868ed09066a153181af716937/pysinewave-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78cd0a57e9920f31e3f9d1cdf0597360", "sha256": "56d1cc9102b586feceba238d16e729dc63fba2d2a9d4750e4f73690bf052ffce"}, "downloads": -1, "filename": "pysinewave-0.0.2.tar.gz", "has_sig": false, "md5_digest": "78cd0a57e9920f31e3f9d1cdf0597360", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3944, "upload_time": "2019-12-24T20:32:41", "upload_time_iso_8601": "2019-12-24T20:32:41.939945Z", "url": "https://files.pythonhosted.org/packages/33/21/dadd3b4599f329e36104f2257bcff6cf7fe28935bcb3656c497125073ed8/pysinewave-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7d024000d229fa46e2d0c371d6510525", "sha256": "8497cc8e0b9f8649a40bef551e3def5d35578408a1f49aabb00341458c16d07f"}, "downloads": -1, "filename": "pysinewave-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7d024000d229fa46e2d0c371d6510525", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5911, "upload_time": "2019-12-24T20:46:40", "upload_time_iso_8601": "2019-12-24T20:46:40.446405Z", "url": "https://files.pythonhosted.org/packages/62/c8/063e1c1c3b8a90637717fe0fee0908016471f410c8821732a2fc8ac4a3ce/pysinewave-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "903fd0e494cdc19533cdd0987f1ad098", "sha256": "30971d07cce57621e5f57a9b3578cdab2c6fccc6d8022e96f4e44c904a706a60"}, "downloads": -1, "filename": "pysinewave-0.0.3.tar.gz", "has_sig": false, "md5_digest": "903fd0e494cdc19533cdd0987f1ad098", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3957, "upload_time": "2019-12-24T20:46:41", "upload_time_iso_8601": "2019-12-24T20:46:41.828990Z", "url": "https://files.pythonhosted.org/packages/53/9d/9d83137e05d6d0fc10e1e6d61fe3ddf4ebdbe3647d98c3bb7982a8260dd2/pysinewave-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2fd380824c6055127a692b466a7a7ed2", "sha256": "e800fdc7b68868fc221fa367a9aef87c1528eee6b24018cb4c4b2e4b077fc036"}, "downloads": -1, "filename": "pysinewave-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2fd380824c6055127a692b466a7a7ed2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5930, "upload_time": "2019-12-24T21:32:10", "upload_time_iso_8601": "2019-12-24T21:32:10.089141Z", "url": "https://files.pythonhosted.org/packages/7d/f4/2c52a1c88e2451dd9110b08d8d277b8161292f348ab9753f25b75aeb39af/pysinewave-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbe9baa3950037c49894bb7f1d2da678", "sha256": "ff59cc923cd3db488190045f11d115cdaf2fac2c3af3e1109d40df49780ff41a"}, "downloads": -1, "filename": "pysinewave-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fbe9baa3950037c49894bb7f1d2da678", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4018, "upload_time": "2019-12-24T21:32:11", "upload_time_iso_8601": "2019-12-24T21:32:11.417795Z", "url": "https://files.pythonhosted.org/packages/89/45/20c125402ef2eb0f5ba2c674185d4c04fea7c24e1167fa5221db78fdd7c2/pysinewave-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "278560cc785afd6c8a86dcea7de935d4", "sha256": "70342d5561dfa1a90151d0e5b72d83425f4163dcc68a15b499b738b68e238c73"}, "downloads": -1, "filename": "pysinewave-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "278560cc785afd6c8a86dcea7de935d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5929, "upload_time": "2019-12-24T22:02:04", "upload_time_iso_8601": "2019-12-24T22:02:04.063127Z", "url": "https://files.pythonhosted.org/packages/5b/dd/f8b1da782c7e3e8751493c9f4debd007417b81957919f59bac5d6de7d551/pysinewave-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8bc307a5061baf9ceaa9e5c3b757169", "sha256": "150308c4c24f8de3ad21abb743f78a2824f4b73600bfcd9c800e429bbcb5bcf3"}, "downloads": -1, "filename": "pysinewave-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a8bc307a5061baf9ceaa9e5c3b757169", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4011, "upload_time": "2019-12-24T22:02:05", "upload_time_iso_8601": "2019-12-24T22:02:05.119816Z", "url": "https://files.pythonhosted.org/packages/da/9f/6964de707508f2240aec405012f0385077802673cded8a890c258b25f2d6/pysinewave-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a701679337906c5a4b66c6d5d7595245", "sha256": "4336e5d86f46014df296c42a12da038c81cb8134d56357c80b3da4f745bb025f"}, "downloads": -1, "filename": "pysinewave-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a701679337906c5a4b66c6d5d7595245", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7093, "upload_time": "2019-12-24T23:53:37", "upload_time_iso_8601": "2019-12-24T23:53:37.147880Z", "url": "https://files.pythonhosted.org/packages/e7/58/6702dc2273b71650cdc9b8241d42d6f154482d485b22ca27c8b1ee105356/pysinewave-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eafd9501927e717081af017ef224b84", "sha256": "451e4de9772bd0327a0f97ed8a68411eb3f471118b0c15003b54d95c53f5734c"}, "downloads": -1, "filename": "pysinewave-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7eafd9501927e717081af017ef224b84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5758, "upload_time": "2019-12-24T23:53:38", "upload_time_iso_8601": "2019-12-24T23:53:38.648606Z", "url": "https://files.pythonhosted.org/packages/98/e3/bdbaa317df8e0f844dd12e058b38e1606f1ecf6dca5b6757f351affcd157/pysinewave-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a701679337906c5a4b66c6d5d7595245", "sha256": "4336e5d86f46014df296c42a12da038c81cb8134d56357c80b3da4f745bb025f"}, "downloads": -1, "filename": "pysinewave-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a701679337906c5a4b66c6d5d7595245", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7093, "upload_time": "2019-12-24T23:53:37", "upload_time_iso_8601": "2019-12-24T23:53:37.147880Z", "url": "https://files.pythonhosted.org/packages/e7/58/6702dc2273b71650cdc9b8241d42d6f154482d485b22ca27c8b1ee105356/pysinewave-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eafd9501927e717081af017ef224b84", "sha256": "451e4de9772bd0327a0f97ed8a68411eb3f471118b0c15003b54d95c53f5734c"}, "downloads": -1, "filename": "pysinewave-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7eafd9501927e717081af017ef224b84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5758, "upload_time": "2019-12-24T23:53:38", "upload_time_iso_8601": "2019-12-24T23:53:38.648606Z", "url": "https://files.pythonhosted.org/packages/98/e3/bdbaa317df8e0f844dd12e058b38e1606f1ecf6dca5b6757f351affcd157/pysinewave-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:41 2020"}