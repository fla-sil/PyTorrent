{"info": {"author": "Paulo Kauscher Pinto", "author_email": "paulo.kauscher.pinto@icloud.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# asyncnewsapi\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Build Status](https://travis-ci.org/pkpinto/asyncnewsapi.svg?branch=master)](https://travis-ci.org/pkpinto/asyncnewsapi)\n[![PyPI version](https://badge.fury.io/py/asyncnewsapi.svg)](https://badge.fury.io/py/asyncnewsapi)\n[![Code Coverage](https://codecov.io/gh/pkpinto/asyncnewsapi/branch/master/graph/badge.svg)](https://codecov.io/gh/pkpinto/asyncnewsapi)\n[![Join the chat at https://gitter.im/asyncnewsapi/community](https://badges.gitter.im/asyncnewsapi/community.svg)](https://gitter.im/asyncnewsapi/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nAn asyncio Python library to perform request against [News API](https://newsapi.org). It provides direct access to the endpoints defined in the [documentation](https://newsapi.org/docs/endpoints). \n\nTwo classes are implemented, returning async iterators for the request results. Session will return an iterator through the results of a single request. Alternatively, Stream will return an infinite iterator, performing successive requests and continuing to iterate through the results. A minimal implementation can be as simple as:\n```\nimport asyncio\n\nfrom asyncnewsapi import Session\n\nasync def main():\n    async with Session() as api:\n        async for article in api.top_headlines(language='en'):\n            print(article['title'])\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\nThe API key should be provided as an environment variable named NEWSAPI_KEY:\n```\nexport NEWSAPI_KEY=\"...\"\n```\nGo to the NewsAPI [website](https://newsapi.org) to create a free API key.\n\nThis library is loosely based on / inspired by [newsapi-python](https://github.com/mattlisiv/newsapi-python), a requests based library by Matt Lisivick.\n\n## Tests\n\nUnit tests for the Session class have been implemented using pytest. These can run using:\n```\npytest -v tests/\n```\nfrom the root of the repo (running it explicitly on the tests/ directory avoids interference with the venv folders).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pkpinto/asyncnewsapi", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "asyncnewsapi", "package_url": "https://pypi.org/project/asyncnewsapi/", "platform": "", "project_url": "https://pypi.org/project/asyncnewsapi/", "project_urls": {"Homepage": "https://github.com/pkpinto/asyncnewsapi"}, "release_url": "https://pypi.org/project/asyncnewsapi/0.2/", "requires_dist": null, "requires_python": "", "summary": "AsyncIO Python wrapper to News API", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>asyncnewsapi</h1>\n<p><a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a>\n<a href=\"https://travis-ci.org/pkpinto/asyncnewsapi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a21d83f27a1b4d41f899558bdb22a2070246cb9/68747470733a2f2f7472617669732d63692e6f72672f706b70696e746f2f6173796e636e6577736170692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/asyncnewsapi\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ceba5f74a02d70d5cb2741c85e62aa02945b876/68747470733a2f2f62616467652e667572792e696f2f70792f6173796e636e6577736170692e737667\"></a>\n<a href=\"https://codecov.io/gh/pkpinto/asyncnewsapi\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/009d5545e211a70d31209074b0cce4dd0443cb26/68747470733a2f2f636f6465636f762e696f2f67682f706b70696e746f2f6173796e636e6577736170692f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://gitter.im/asyncnewsapi/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/asyncnewsapi/community\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c40daf9f44ed8af398becc309c20aad8c260ef2d/68747470733a2f2f6261646765732e6769747465722e696d2f6173796e636e6577736170692f636f6d6d756e6974792e737667\"></a></p>\n<p>An asyncio Python library to perform request against <a href=\"https://newsapi.org\" rel=\"nofollow\">News API</a>. It provides direct access to the endpoints defined in the <a href=\"https://newsapi.org/docs/endpoints\" rel=\"nofollow\">documentation</a>.</p>\n<p>Two classes are implemented, returning async iterators for the request results. Session will return an iterator through the results of a single request. Alternatively, Stream will return an infinite iterator, performing successive requests and continuing to iterate through the results. A minimal implementation can be as simple as:</p>\n<pre><code>import asyncio\n\nfrom asyncnewsapi import Session\n\nasync def main():\n    async with Session() as api:\n        async for article in api.top_headlines(language='en'):\n            print(article['title'])\n\nif __name__ == '__main__':\n    asyncio.run(main())\n</code></pre>\n<p>The API key should be provided as an environment variable named NEWSAPI_KEY:</p>\n<pre><code>export NEWSAPI_KEY=\"...\"\n</code></pre>\n<p>Go to the NewsAPI <a href=\"https://newsapi.org\" rel=\"nofollow\">website</a> to create a free API key.</p>\n<p>This library is loosely based on / inspired by <a href=\"https://github.com/mattlisiv/newsapi-python\" rel=\"nofollow\">newsapi-python</a>, a requests based library by Matt Lisivick.</p>\n<h2>Tests</h2>\n<p>Unit tests for the Session class have been implemented using pytest. These can run using:</p>\n<pre><code>pytest -v tests/\n</code></pre>\n<p>from the root of the repo (running it explicitly on the tests/ directory avoids interference with the venv folders).</p>\n\n          </div>"}, "last_serial": 6313592, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "641502168e5419e796fbb2140816d3ac", "sha256": "199f10cf297d65ab341f18d2d2915213bf7d7ec01da3d4444b14186758da1ad1"}, "downloads": -1, "filename": "asyncnewsapi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "641502168e5419e796fbb2140816d3ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12696, "upload_time": "2019-11-21T21:54:50", "upload_time_iso_8601": "2019-11-21T21:54:50.920543Z", "url": "https://files.pythonhosted.org/packages/95/3f/fed39f32d204b8889852baf93aada3caa5bb8bf5a394636074926507c6aa/asyncnewsapi-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eef280253afacf9ebc031ffc64799f94", "sha256": "33a9f58be41c8c78eebf3b084cc0762f42a921c7a7e36bcd37b4f983a82774b6"}, "downloads": -1, "filename": "asyncnewsapi-0.1.tar.gz", "has_sig": false, "md5_digest": "eef280253afacf9ebc031ffc64799f94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11394, "upload_time": "2019-11-21T21:54:53", "upload_time_iso_8601": "2019-11-21T21:54:53.610807Z", "url": "https://files.pythonhosted.org/packages/7a/2f/22565b3dc67d2a9f12c0b05f358c98e30a8f21f604b7a918457d35c883d1/asyncnewsapi-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7dd8355a44052eee9a283ef6ccc58e57", "sha256": "379f6b209f5329f9643fd2bfbf16135dc60fcaa5e228c6cff51406a1ed006785"}, "downloads": -1, "filename": "asyncnewsapi-0.2.tar.gz", "has_sig": false, "md5_digest": "7dd8355a44052eee9a283ef6ccc58e57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7967, "upload_time": "2019-12-16T21:44:20", "upload_time_iso_8601": "2019-12-16T21:44:20.831568Z", "url": "https://files.pythonhosted.org/packages/1d/de/15fc9ba19d2965c541997957f5036a7d78b2a9280d2698d7bca56bba062d/asyncnewsapi-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7dd8355a44052eee9a283ef6ccc58e57", "sha256": "379f6b209f5329f9643fd2bfbf16135dc60fcaa5e228c6cff51406a1ed006785"}, "downloads": -1, "filename": "asyncnewsapi-0.2.tar.gz", "has_sig": false, "md5_digest": "7dd8355a44052eee9a283ef6ccc58e57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7967, "upload_time": "2019-12-16T21:44:20", "upload_time_iso_8601": "2019-12-16T21:44:20.831568Z", "url": "https://files.pythonhosted.org/packages/1d/de/15fc9ba19d2965c541997957f5036a7d78b2a9280d2698d7bca56bba062d/asyncnewsapi-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:42 2020"}