{"info": {"author": "MbientLab", "author_email": "hello@mbientlab.com", "bugtrack_url": null, "classifiers": [], "description": "====================\nMetaCloud Python SDK\n====================\nMetaCloud is a cloud service by MbientLab providing data storage, visualization, and analytics for your sensor data.  \n\nIn order to run the example code in this tutorial, you will need to have an active subscription.  If you need to create an account, follow the \ninstructions on this `page <https://mbientlab.com/docs/metacloud/subscription/>`_ to begin a free 3 day trial.\n\nInstallation\n============\nUse **pip** to install the ``metacloud`` package.\n\n.. code-block:: bash\n\n    pip install metacloud --process-dependency-links\n\nIf you are syncing data from one of MbientLab's sensor boards, install the package with the **metawear** extra.  \n\n.. code-block:: bash\n\n    pip install metacloud[metawear] --process-dependency-links\n\nUsage\n=====\nAfter installing all of the necessary package, open a new Python file in your favorite text editor, import the **metawear** and **metacloud** \nmodules, and create the ``MetaWearClient`` and ``Session`` objects.  The ``Session`` constructor requires several attributes that describe the device \nand your app: \n\n1. Firmware version  \n2. MAC address  \n3. Model name  \n4. Friendly name identifying the device  \n5. App name  \n6. App revision  \n\nIf you don't have an app name or revision, simply use the ``__file__`` variable for the app name and ``\"1.0.0\"`` for the app revision.  \n\n.. code-block:: python\n\n    from ctypes import cast, c_char_p\n    from mbientlab.metacloud import Session\n    from mbientlab.metawear import MetaWear, libmetawear, parse_value\n    from mbientlab.metawear.cbindings import *\n\n    mac = \"D4:5E:82:E1:15:01\"\n    metawear = MetaWear(mac)\n    metawear.connect()\n\n    libmetawear.mbl_mw_settings_set_connection_parameters(metawear.board, 7.5, 7.5, 0, 6000)\n\n    raw = libmetawear.mbl_mw_metawearboard_get_model_name(metawear.board)\n    model_name = cast(raw, c_char_p).value.decode(\"ascii\")\n    session = Session(metawear.info[\"firmware\"], mac, model_name, \"Device #1\", \"metacloud_py_tutorial\", \"1.0.0\")\n\nStart a data stream from the device and add the received values to the ``Session`` object.  Here we will stream accelerometer data thus will forward \nit to the ``add_acc_data`` method.  \n\n.. code-block:: python\n\n    # Stream data at 100Hz\n    libmetawear.mbl_mw_acc_set_range(metawear.board, 16.0)\n    libmetawear.mbl_mw_acc_set_odr(metawear.board, 100.0)\n    libmetawear.mbl_mw_acc_write_acceleration_config(metawear.board)\n\n    def data_handler(ptr):\n        value = parse_value(ptr)\n        session.add_acc_data(ptr.contents.epoch, value.x, value.y, value.z)\n    data_handler_fn = FnVoid_DataP(data_handler)\n\n    signal = libmetawear.mbl_mw_acc_get_acceleration_data_signal(metawear.board)\n    libmetawear.mbl_mw_datasignal_subscribe(signal, data_handler_fn)\n    libmetawear.mbl_mw_acc_enable_acceleration_sampling(metawear.board)\n    libmetawear.mbl_mw_acc_start(metawear.board)\n\nWhen you are ready to sync the data, stop the accelerometer then push the data to MetaCloud with ``sync`` method.\n\n.. code-block:: python\n\n    # Stop the stream\n    libmetawear.mbl_mw_acc_stop(metawear.board)\n    libmetawear.mbl_mw_acc_disable_acceleration_sampling(metawear.board)\n    libmetawear.mbl_mw_datasignal_unsubscribe(signal)\n    # Sync to MetaCloud, replace with actual login credentials\n    session.sync(\"username\", \"password\")", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/mbientlab/MetaCloud-SDK-Python/archive/0.2.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "https://mbientlab.com/license/", "maintainer": "", "maintainer_email": "", "name": "metacloud", "package_url": "https://pypi.org/project/metacloud/", "platform": "", "project_url": "https://pypi.org/project/metacloud/", "project_urls": {"Download": "https://github.com/mbientlab/MetaCloud-SDK-Python/archive/0.2.0.tar.gz"}, "release_url": "https://pypi.org/project/metacloud/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MetaCloud is a cloud service by MbientLab providing data storage, visualization, and analytics for your sensor data.</p>\n<p>In order to run the example code in this tutorial, you will need to have an active subscription.  If you need to create an account, follow the\ninstructions on this <a href=\"https://mbientlab.com/docs/metacloud/subscription/\" rel=\"nofollow\">page</a> to begin a free 3 day trial.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use <strong>pip</strong> to install the <tt>metacloud</tt> package.</p>\n<pre>pip install metacloud --process-dependency-links\n</pre>\n<p>If you are syncing data from one of MbientLab\u2019s sensor boards, install the package with the <strong>metawear</strong> extra.</p>\n<pre>pip install metacloud<span class=\"o\">[</span>metawear<span class=\"o\">]</span> --process-dependency-links\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After installing all of the necessary package, open a new Python file in your favorite text editor, import the <strong>metawear</strong> and <strong>metacloud</strong>\nmodules, and create the <tt>MetaWearClient</tt> and <tt>Session</tt> objects.  The <tt>Session</tt> constructor requires several attributes that describe the device\nand your app:</p>\n<ol>\n<li>Firmware version</li>\n<li>MAC address</li>\n<li>Model name</li>\n<li>Friendly name identifying the device</li>\n<li>App name</li>\n<li>App revision</li>\n</ol>\n<p>If you don\u2019t have an app name or revision, simply use the <tt>__file__</tt> variable for the app name and <tt>\"1.0.0\"</tt> for the app revision.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ctypes</span> <span class=\"kn\">import</span> <span class=\"n\">cast</span><span class=\"p\">,</span> <span class=\"n\">c_char_p</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mbientlab.metacloud</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mbientlab.metawear</span> <span class=\"kn\">import</span> <span class=\"n\">MetaWear</span><span class=\"p\">,</span> <span class=\"n\">libmetawear</span><span class=\"p\">,</span> <span class=\"n\">parse_value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mbientlab.metawear.cbindings</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">mac</span> <span class=\"o\">=</span> <span class=\"s2\">\"D4:5E:82:E1:15:01\"</span>\n<span class=\"n\">metawear</span> <span class=\"o\">=</span> <span class=\"n\">MetaWear</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span>\n<span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_settings_set_connection_parameters</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"mf\">7.5</span><span class=\"p\">,</span> <span class=\"mf\">7.5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6000</span><span class=\"p\">)</span>\n\n<span class=\"n\">raw</span> <span class=\"o\">=</span> <span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_metawearboard_get_model_name</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"p\">,</span> <span class=\"n\">c_char_p</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"ascii\"</span><span class=\"p\">)</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"firmware\"</span><span class=\"p\">],</span> <span class=\"n\">mac</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"s2\">\"Device #1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"metacloud_py_tutorial\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1.0.0\"</span><span class=\"p\">)</span>\n</pre>\n<p>Start a data stream from the device and add the received values to the <tt>Session</tt> object.  Here we will stream accelerometer data thus will forward\nit to the <tt>add_acc_data</tt> method.</p>\n<pre><span class=\"c1\"># Stream data at 100Hz</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_set_range</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"mf\">16.0</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_set_odr</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"mf\">100.0</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_write_acceleration_config</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">data_handler</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">parse_value</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"p\">)</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add_acc_data</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"o\">.</span><span class=\"n\">epoch</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">data_handler_fn</span> <span class=\"o\">=</span> <span class=\"n\">FnVoid_DataP</span><span class=\"p\">(</span><span class=\"n\">data_handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_get_acceleration_data_signal</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_datasignal_subscribe</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">data_handler_fn</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_enable_acceleration_sampling</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_start</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n</pre>\n<p>When you are ready to sync the data, stop the accelerometer then push the data to MetaCloud with <tt>sync</tt> method.</p>\n<pre><span class=\"c1\"># Stop the stream</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_stop</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_acc_disable_acceleration_sampling</span><span class=\"p\">(</span><span class=\"n\">metawear</span><span class=\"o\">.</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">libmetawear</span><span class=\"o\">.</span><span class=\"n\">mbl_mw_datasignal_unsubscribe</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span>\n<span class=\"c1\"># Sync to MetaCloud, replace with actual login credentials</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3327318, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "92f1f118fa8573929337176f663aba8e", "sha256": "ff671123cb2ec26739cd611904ad1b9a485143848c074f33bbebb7a513fbb6b7"}, "downloads": -1, "filename": "metacloud-0.2.0.tar.gz", "has_sig": false, "md5_digest": "92f1f118fa8573929337176f663aba8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3526, "upload_time": "2017-11-13T01:18:27", "upload_time_iso_8601": "2017-11-13T01:18:27.679533Z", "url": "https://files.pythonhosted.org/packages/d8/6a/a891e06ae46833c6c9a5aaf20aaf94e4bd414ce691e015d8e6c93a368054/metacloud-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92f1f118fa8573929337176f663aba8e", "sha256": "ff671123cb2ec26739cd611904ad1b9a485143848c074f33bbebb7a513fbb6b7"}, "downloads": -1, "filename": "metacloud-0.2.0.tar.gz", "has_sig": false, "md5_digest": "92f1f118fa8573929337176f663aba8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3526, "upload_time": "2017-11-13T01:18:27", "upload_time_iso_8601": "2017-11-13T01:18:27.679533Z", "url": "https://files.pythonhosted.org/packages/d8/6a/a891e06ae46833c6c9a5aaf20aaf94e4bd414ce691e015d8e6c93a368054/metacloud-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:58 2020"}