{"info": {"author": "MEADez", "author_email": "m3adez@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Template tweaker\n\nThis package adds functionality for additional customization of django-templates.\n\nIn some cases, the use of filters or tags becomes cumbersome and inconvenient, this package can help solve this \nproblem, as well as increase the readability and maintainability of the code.\n\n## Dependencies\n\n* pusia-dev-tools>=0.1\n\n## Quick start\n\n1. Add template tweaker app to project app list in project settings:\n\n```python\nINSTALLED_APPS = [\n    # ...\n    'template_tweaker'\n]\n```\n\n2. Wrap your template html-element into the block-tag `{% tweaker %}{% end_tweaker %}`, specify tweak-method name \nand optional arguments if needed:\n\n```djangotemplate\n{% tweaker method='some_method' %}\n    <button type=\"button\" class=\"btn btn-primary\">\n        My button\n    </button>\n{% end_tweaker %}\n```\n\n3. Add a tweaker class inherited from the `BaseTweaker` class and define a method for each block tag:\n\n```python\nclass TemplateTweaker(BaseTemplateTweaker):\n\n    def some_method(self, html_element: HTMLElement, *args, **kwargs) -> HTMLElement:\n        html_element[0] = 'Test tweak'\n        html_element.add_attribute_values('class', ['my-class'])\n        return html_element\n```\n\n4. Add `TweakerMixinView` to view and override `tweaker_class` class variable:\n\n```python\nclass MyView(TweakerMixinView, TemplateView):\n\n    # ...\n    tweaker_class = TemplateTweaker\n```\n\n## Other usages\n\n* You can add args and kwargs to the method call. Also you can use filters on args and kwargs:\n\n```djangotemplate\n{% for i in '123' %}\n    {% tweaker method='some_method' css_class='active' index=i %}\n        <a href=\"{% url 'my_app:my_page' arg=i %}\" class=\"simple-link\">Page</a>\n    {% end_tweaker %}\n{% endfor %}\n```\n\n```python\nclass TemplateTweaker(BaseTemplateTweaker):\n\n    def some_method(self, html_element: HTMLElement, css_class: str, index: int = 1) -> HTMLElement:\n        html_element[0] += str(index)\n        if self.request.path == html_element.complex_attributes['href']:\n            html_element.add_attribute_values('class', [css_class])\n        return html_element\n```\n\n* You can search and tweak inner elements trough index value or custom aliases (`data-alias` parameter):\n\n```djangotemplate\n{% tweaker method='some_method' %}\n    <div class=\"some-block\">\n        <span class=\"simple-label\">Label</span>\n        <button class=\"btn btn-primary\" data-alias=\"my-button\">\n            Button\n            <i class=\"material-icons\" data-alias=\"button-icon\">landscape</i>\n        </button>\n    </div>\n{% end_tweaker %}\n```\n\n```python\nclass TemplateTweaker(BaseTemplateTweaker):\n\n    def some_method(self, html_element: HTMLElement) -> HTMLElement:\n        html_element[0][0] = 'New label'  # replace 'Label' with 'New label'\n        html_element['my-button'][0] = 'New button name'\n        html_element['my-button'].remove_attribute_values('class', ['btn-primary'])\n        html_element['my-button']['button-icon'][0] = 'face'  # change icon from 'landscape' to 'face'\n        return html_element\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PusiaCode/pusia-template-tweaker", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pusia-template-tweaker", "package_url": "https://pypi.org/project/pusia-template-tweaker/", "platform": "", "project_url": "https://pypi.org/project/pusia-template-tweaker/", "project_urls": {"Homepage": "https://github.com/PusiaCode/pusia-template-tweaker"}, "release_url": "https://pypi.org/project/pusia-template-tweaker/0.1/", "requires_dist": null, "requires_python": "", "summary": "This package adds functionality for additional customization of django-templates.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Template tweaker</h1>\n<p>This package adds functionality for additional customization of django-templates.</p>\n<p>In some cases, the use of filters or tags becomes cumbersome and inconvenient, this package can help solve this\nproblem, as well as increase the readability and maintainability of the code.</p>\n<h2>Dependencies</h2>\n<ul>\n<li>pusia-dev-tools&gt;=0.1</li>\n</ul>\n<h2>Quick start</h2>\n<ol>\n<li>Add template tweaker app to project app list in project settings:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'template_tweaker'</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Wrap your template html-element into the block-tag <code>{% tweaker %}{% end_tweaker %}</code>, specify tweak-method name\nand optional arguments if needed:</li>\n</ol>\n<pre>{% tweaker method='some_method' %}\n    &lt;button type=\"button\" class=\"btn btn-primary\"&gt;\n        My button\n    &lt;/button&gt;\n{% end_tweaker %}\n</pre>\n<ol>\n<li>Add a tweaker class inherited from the <code>BaseTweaker</code> class and define a method for each block tag:</li>\n</ol>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TemplateTweaker</span><span class=\"p\">(</span><span class=\"n\">BaseTemplateTweaker</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">some_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">html_element</span><span class=\"p\">:</span> <span class=\"n\">HTMLElement</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">HTMLElement</span><span class=\"p\">:</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Test tweak'</span>\n        <span class=\"n\">html_element</span><span class=\"o\">.</span><span class=\"n\">add_attribute_values</span><span class=\"p\">(</span><span class=\"s1\">'class'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'my-class'</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">html_element</span>\n</pre>\n<ol>\n<li>Add <code>TweakerMixinView</code> to view and override <code>tweaker_class</code> class variable:</li>\n</ol>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">TweakerMixinView</span><span class=\"p\">,</span> <span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># ...</span>\n    <span class=\"n\">tweaker_class</span> <span class=\"o\">=</span> <span class=\"n\">TemplateTweaker</span>\n</pre>\n<h2>Other usages</h2>\n<ul>\n<li>You can add args and kwargs to the method call. Also you can use filters on args and kwargs:</li>\n</ul>\n<pre>{% for i in '123' %}\n    {% tweaker method='some_method' css_class='active' index=i %}\n        &lt;a href=\"{% url 'my_app:my_page' arg=i %}\" class=\"simple-link\"&gt;Page&lt;/a&gt;\n    {% end_tweaker %}\n{% endfor %}\n</pre>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TemplateTweaker</span><span class=\"p\">(</span><span class=\"n\">BaseTemplateTweaker</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">some_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">html_element</span><span class=\"p\">:</span> <span class=\"n\">HTMLElement</span><span class=\"p\">,</span> <span class=\"n\">css_class</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">HTMLElement</span><span class=\"p\">:</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">==</span> <span class=\"n\">html_element</span><span class=\"o\">.</span><span class=\"n\">complex_attributes</span><span class=\"p\">[</span><span class=\"s1\">'href'</span><span class=\"p\">]:</span>\n            <span class=\"n\">html_element</span><span class=\"o\">.</span><span class=\"n\">add_attribute_values</span><span class=\"p\">(</span><span class=\"s1\">'class'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">css_class</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">html_element</span>\n</pre>\n<ul>\n<li>You can search and tweak inner elements trough index value or custom aliases (<code>data-alias</code> parameter):</li>\n</ul>\n<pre>{% tweaker method='some_method' %}\n    &lt;div class=\"some-block\"&gt;\n        &lt;span class=\"simple-label\"&gt;Label&lt;/span&gt;\n        &lt;button class=\"btn btn-primary\" data-alias=\"my-button\"&gt;\n            Button\n            &lt;i class=\"material-icons\" data-alias=\"button-icon\"&gt;landscape&lt;/i&gt;\n        &lt;/button&gt;\n    &lt;/div&gt;\n{% end_tweaker %}\n</pre>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TemplateTweaker</span><span class=\"p\">(</span><span class=\"n\">BaseTemplateTweaker</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">some_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">html_element</span><span class=\"p\">:</span> <span class=\"n\">HTMLElement</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">HTMLElement</span><span class=\"p\">:</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'New label'</span>  <span class=\"c1\"># replace 'Label' with 'New label'</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"s1\">'my-button'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'New button name'</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"s1\">'my-button'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">remove_attribute_values</span><span class=\"p\">(</span><span class=\"s1\">'class'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'btn-primary'</span><span class=\"p\">])</span>\n        <span class=\"n\">html_element</span><span class=\"p\">[</span><span class=\"s1\">'my-button'</span><span class=\"p\">][</span><span class=\"s1\">'button-icon'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'face'</span>  <span class=\"c1\"># change icon from 'landscape' to 'face'</span>\n        <span class=\"k\">return</span> <span class=\"n\">html_element</span>\n</pre>\n\n          </div>"}, "last_serial": 7056468, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d94b4984bfe329324a273ef0d2aafbb2", "sha256": "1a6af16a6372cdce7f590dfb637f74df15120e81e2194c56cac1e8f650074d54"}, "downloads": -1, "filename": "pusia-template-tweaker-0.1.tar.gz", "has_sig": false, "md5_digest": "d94b4984bfe329324a273ef0d2aafbb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4833, "upload_time": "2020-04-19T23:33:36", "upload_time_iso_8601": "2020-04-19T23:33:36.997708Z", "url": "https://files.pythonhosted.org/packages/07/29/558fb459fca2fd485929193daf9e8bbf47a7a284554cf2a28a3f0fc559a0/pusia-template-tweaker-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d94b4984bfe329324a273ef0d2aafbb2", "sha256": "1a6af16a6372cdce7f590dfb637f74df15120e81e2194c56cac1e8f650074d54"}, "downloads": -1, "filename": "pusia-template-tweaker-0.1.tar.gz", "has_sig": false, "md5_digest": "d94b4984bfe329324a273ef0d2aafbb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4833, "upload_time": "2020-04-19T23:33:36", "upload_time_iso_8601": "2020-04-19T23:33:36.997708Z", "url": "https://files.pythonhosted.org/packages/07/29/558fb459fca2fd485929193daf9e8bbf47a7a284554cf2a28a3f0fc559a0/pusia-template-tweaker-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:06 2020"}