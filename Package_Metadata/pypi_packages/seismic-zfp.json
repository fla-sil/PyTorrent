{"info": {"author": "equinor", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# seismic-zfp #\nPython library to convert SEG-Y files to compressed cubes and retrieve arbitrary sub-volumes from these, fast.\n\n## Motivation ##\n\nReading whole SEG-Y volumes to retrieve, for example, a single time-slice is wasteful.\n\nCopying whole SEG-Y files uncompressed over networks is also wasteful.\n\nThis library addresses both issues by implementing the [seismic-zfp (.SGZ) format](docs/file-specification.md).\nThis format is based on [ZFP compression](https://computing.llnl.gov/projects/floating-point-compression)\nfrom [Peter Lindstrom's paper](https://www.researchgate.net/publication/264417607_Fixed-Rate_Compressed_Floating-Point_Arrays),\nusing [the Python wrapper](https://github.com/navjotk/pyzfp) developed by Navjot Kukreja.\n\n\nZFP compression enables smoothly varying d-dimensional data in 4<sup>d</sup> subvolumes \nto be compressed at a fixed bitrate. The 32-bit floating point values in 4x4x4 units\nof a 3D post-stack SEG-Y file are well suited to this scheme. \n\nDecomposing an appropriately padded 3D seismic volume into groups of these units which \nexactly fill one 4KB disk block, compressing these groups, and writing them sequentially \nto disk yields a file with the following properties:\n- Compression ratio of 2<sup>n</sup>:1 compression, \ntypically a bitrate of 4 works well, implying a ratio of 8:1\n- The location of any seismic sample is known\n- Arbitrary subvolumes can be read with *minimal* redundant I/O, for example:\n  - Padding IL/XL dimensions with 4, and the z-dimension depending on bitrate\n  - Padding IL/XL dimensions with 64 and the z-dimension with 4 (16:1 compression)\n#### Using IL/XL optimized layout ###\n- Groups of 4 inlines or crosslines can be read with **no** redundant I/O\n- A single inline can be read and with **no** additional I/O compared to the SEG-Y \nbest-case scenario (provided at least 4:1 compression ratio)\n- A z-slice can be read by accessing n_traces/16 disk blocks, \ncompared to n_traces disk blocks for SEG-Y\n#### Using z-slice optimized layout ####\n- A z-slice can be read by accessing **just** n_traces/4096 disk blocks, \ncompared to n_traces disk blocks for SEG-Y\n\nThe [seismic-zfp (.SGZ) format](docs/file-specification.md) also allows for preservation of information in \nSEG-Y file and trace headers, with compression code identifying constant \nand varying trace header values and storing these appropriately.\n\n#### NOTE: Previously the extension .sz was used for seismic-zfp, but has been replaced with .sgz to avoid confusion around the compression algorithm used.\n\n## Examples ##\n\nFull example code is provided [here](examples), but the following reference is useful:\n\n#### Create SGZ files from SEG-Y, and convert back to SEG-Y ####\n\n```python\nfrom seismic_zfp.conversion import SegyConverter\nwith SegyConverter(\"in.sgy\") as converter:\n    # Create a \"standard\" SGZ file with 8:1 compression, using in-memory method\n    converter.run(\"out-standard.sgz\", bits_per_voxel=4,\n                  method=\"InMemory\")\n    # Create a \"z-slice optimized\" SGZ file\n    converter.run(\"out-advanced.sgz\", bits_per_voxel=2, \n                  blockshape=(64, 64, 4))\n# Convert back to SEG-Y\nwith SgzConverter(\"out-standard.sgz\") as converter:\n    converter.convert_to_segy(\"recovered.sgy\")\n```\n\n#### Read an SGZ file ####\n```python\nfrom seismic_zfp.read import SgzReader\nwith SgzReader(\"in.sgz\") as reader:\n    inline_slice = reader.read_inline(LINE_NO)\n    crossline_slice = reader.read_crossline(LINE_NO)\n    z_slice = reader.read_zslice(LINE_NO)\n    sub_vol = reader.read_subvolume(min_il=min_il, max_il=max_il, \n                                    min_xl=min_xl, max_xl=max_xl, \n                                    min_z=min_z, max_z=max_z)\n```\n\n#### Use segyio-like interface to read SGZ files ####\n```python\nimport seismic_zfp\nwith seismic_zfp.open(\"in.sgz\")) as sgzfile:\n    inline_slice = sgzfile.iline[sgzfile.ilines[LINE_ID]]\n    xslice_sgz = sgzfile.xline[sgzfile.xlines[LINE_ID]]\n    zslice_sgz = sgzfile.depth_slice[sgzfile.zslices[SLICE_ID]]\n    trace = sgzfile.trace[TRACE_ID]\n    trace_header = sgzfile.header[TRACE_ID]\n    binary_file_header = sgzfile.bin\n    text_file_header = sgzfile.text[0]\n```\n\n## Installation Troubleshooting ##\n- Check your machine has these packages available: python3-devel, git, gcc, gcc-c++\n\n## Contributing ##\nContributions welcomed, whether you are reporting or fixing a bug, implementing or requesting a feature. Either make a github issue or fork the project and make a pull request. Please extend the unit tests with relevant passing/failing tests, run these as: `python -m pytest`\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/equinor/seismic-zfp", "keywords": "", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "seismic-zfp", "package_url": "https://pypi.org/project/seismic-zfp/", "platform": "", "project_url": "https://pypi.org/project/seismic-zfp/", "project_urls": {"Homepage": "https://github.com/equinor/seismic-zfp"}, "release_url": "https://pypi.org/project/seismic-zfp/0.0.11/", "requires_dist": ["segyio", "pyzfp", "psutil", "pillow", "matplotlib", "Cython", "functools32 ; python_version < \"3\""], "requires_python": "", "summary": "Compress and decompress seismic data", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>seismic-zfp</h1>\n<p>Python library to convert SEG-Y files to compressed cubes and retrieve arbitrary sub-volumes from these, fast.</p>\n<h2>Motivation</h2>\n<p>Reading whole SEG-Y volumes to retrieve, for example, a single time-slice is wasteful.</p>\n<p>Copying whole SEG-Y files uncompressed over networks is also wasteful.</p>\n<p>This library addresses both issues by implementing the <a href=\"docs/file-specification.md\" rel=\"nofollow\">seismic-zfp (.SGZ) format</a>.\nThis format is based on <a href=\"https://computing.llnl.gov/projects/floating-point-compression\" rel=\"nofollow\">ZFP compression</a>\nfrom <a href=\"https://www.researchgate.net/publication/264417607_Fixed-Rate_Compressed_Floating-Point_Arrays\" rel=\"nofollow\">Peter Lindstrom's paper</a>,\nusing <a href=\"https://github.com/navjotk/pyzfp\" rel=\"nofollow\">the Python wrapper</a> developed by Navjot Kukreja.</p>\n<p>ZFP compression enables smoothly varying d-dimensional data in 4<sup>d</sup> subvolumes\nto be compressed at a fixed bitrate. The 32-bit floating point values in 4x4x4 units\nof a 3D post-stack SEG-Y file are well suited to this scheme.</p>\n<p>Decomposing an appropriately padded 3D seismic volume into groups of these units which\nexactly fill one 4KB disk block, compressing these groups, and writing them sequentially\nto disk yields a file with the following properties:</p>\n<ul>\n<li>Compression ratio of 2<sup>n</sup>:1 compression,\ntypically a bitrate of 4 works well, implying a ratio of 8:1</li>\n<li>The location of any seismic sample is known</li>\n<li>Arbitrary subvolumes can be read with <em>minimal</em> redundant I/O, for example:\n<ul>\n<li>Padding IL/XL dimensions with 4, and the z-dimension depending on bitrate</li>\n<li>Padding IL/XL dimensions with 64 and the z-dimension with 4 (16:1 compression)</li>\n</ul>\n</li>\n</ul>\n<h4>Using IL/XL optimized layout</h4>\n<ul>\n<li>Groups of 4 inlines or crosslines can be read with <strong>no</strong> redundant I/O</li>\n<li>A single inline can be read and with <strong>no</strong> additional I/O compared to the SEG-Y\nbest-case scenario (provided at least 4:1 compression ratio)</li>\n<li>A z-slice can be read by accessing n_traces/16 disk blocks,\ncompared to n_traces disk blocks for SEG-Y</li>\n</ul>\n<h4>Using z-slice optimized layout</h4>\n<ul>\n<li>A z-slice can be read by accessing <strong>just</strong> n_traces/4096 disk blocks,\ncompared to n_traces disk blocks for SEG-Y</li>\n</ul>\n<p>The <a href=\"docs/file-specification.md\" rel=\"nofollow\">seismic-zfp (.SGZ) format</a> also allows for preservation of information in\nSEG-Y file and trace headers, with compression code identifying constant\nand varying trace header values and storing these appropriately.</p>\n<h4>NOTE: Previously the extension .sz was used for seismic-zfp, but has been replaced with .sgz to avoid confusion around the compression algorithm used.</h4>\n<h2>Examples</h2>\n<p>Full example code is provided <a href=\"examples\" rel=\"nofollow\">here</a>, but the following reference is useful:</p>\n<h4>Create SGZ files from SEG-Y, and convert back to SEG-Y</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">seismic_zfp.conversion</span> <span class=\"kn\">import</span> <span class=\"n\">SegyConverter</span>\n<span class=\"k\">with</span> <span class=\"n\">SegyConverter</span><span class=\"p\">(</span><span class=\"s2\">\"in.sgy\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">converter</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Create a \"standard\" SGZ file with 8:1 compression, using in-memory method</span>\n    <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"out-standard.sgz\"</span><span class=\"p\">,</span> <span class=\"n\">bits_per_voxel</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                  <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"InMemory\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Create a \"z-slice optimized\" SGZ file</span>\n    <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"out-advanced.sgz\"</span><span class=\"p\">,</span> <span class=\"n\">bits_per_voxel</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> \n                  <span class=\"n\">blockshape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"c1\"># Convert back to SEG-Y</span>\n<span class=\"k\">with</span> <span class=\"n\">SgzConverter</span><span class=\"p\">(</span><span class=\"s2\">\"out-standard.sgz\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">converter</span><span class=\"p\">:</span>\n    <span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">convert_to_segy</span><span class=\"p\">(</span><span class=\"s2\">\"recovered.sgy\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Read an SGZ file</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">seismic_zfp.read</span> <span class=\"kn\">import</span> <span class=\"n\">SgzReader</span>\n<span class=\"k\">with</span> <span class=\"n\">SgzReader</span><span class=\"p\">(</span><span class=\"s2\">\"in.sgz\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n    <span class=\"n\">inline_slice</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_inline</span><span class=\"p\">(</span><span class=\"n\">LINE_NO</span><span class=\"p\">)</span>\n    <span class=\"n\">crossline_slice</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_crossline</span><span class=\"p\">(</span><span class=\"n\">LINE_NO</span><span class=\"p\">)</span>\n    <span class=\"n\">z_slice</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_zslice</span><span class=\"p\">(</span><span class=\"n\">LINE_NO</span><span class=\"p\">)</span>\n    <span class=\"n\">sub_vol</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_subvolume</span><span class=\"p\">(</span><span class=\"n\">min_il</span><span class=\"o\">=</span><span class=\"n\">min_il</span><span class=\"p\">,</span> <span class=\"n\">max_il</span><span class=\"o\">=</span><span class=\"n\">max_il</span><span class=\"p\">,</span> \n                                    <span class=\"n\">min_xl</span><span class=\"o\">=</span><span class=\"n\">min_xl</span><span class=\"p\">,</span> <span class=\"n\">max_xl</span><span class=\"o\">=</span><span class=\"n\">max_xl</span><span class=\"p\">,</span> \n                                    <span class=\"n\">min_z</span><span class=\"o\">=</span><span class=\"n\">min_z</span><span class=\"p\">,</span> <span class=\"n\">max_z</span><span class=\"o\">=</span><span class=\"n\">max_z</span><span class=\"p\">)</span>\n</pre>\n<h4>Use segyio-like interface to read SGZ files</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seismic_zfp</span>\n<span class=\"k\">with</span> <span class=\"n\">seismic_zfp</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"in.sgz\"</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">sgzfile</span><span class=\"p\">:</span>\n    <span class=\"n\">inline_slice</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">iline</span><span class=\"p\">[</span><span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">ilines</span><span class=\"p\">[</span><span class=\"n\">LINE_ID</span><span class=\"p\">]]</span>\n    <span class=\"n\">xslice_sgz</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">xline</span><span class=\"p\">[</span><span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">xlines</span><span class=\"p\">[</span><span class=\"n\">LINE_ID</span><span class=\"p\">]]</span>\n    <span class=\"n\">zslice_sgz</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">depth_slice</span><span class=\"p\">[</span><span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">zslices</span><span class=\"p\">[</span><span class=\"n\">SLICE_ID</span><span class=\"p\">]]</span>\n    <span class=\"n\">trace</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">[</span><span class=\"n\">TRACE_ID</span><span class=\"p\">]</span>\n    <span class=\"n\">trace_header</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">[</span><span class=\"n\">TRACE_ID</span><span class=\"p\">]</span>\n    <span class=\"n\">binary_file_header</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">bin</span>\n    <span class=\"n\">text_file_header</span> <span class=\"o\">=</span> <span class=\"n\">sgzfile</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h2>Installation Troubleshooting</h2>\n<ul>\n<li>Check your machine has these packages available: python3-devel, git, gcc, gcc-c++</li>\n</ul>\n<h2>Contributing</h2>\n<p>Contributions welcomed, whether you are reporting or fixing a bug, implementing or requesting a feature. Either make a github issue or fork the project and make a pull request. Please extend the unit tests with relevant passing/failing tests, run these as: <code>python -m pytest</code></p>\n\n          </div>"}, "last_serial": 6850696, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "13d1db15719e6ded4dcdac385ee8d5a4", "sha256": "faabb4d5c4b427e276687f79552b6e491d021aff1be8d7ad893d8687d6f6bfe4"}, "downloads": -1, "filename": "seismic_zfp-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "13d1db15719e6ded4dcdac385ee8d5a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24043, "upload_time": "2020-03-20T07:15:53", "upload_time_iso_8601": "2020-03-20T07:15:53.091822Z", "url": "https://files.pythonhosted.org/packages/ee/12/0c1fc7c39676314a384ba7c4983197ae3c449680c0f8fc0f71f47579d3b3/seismic_zfp-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e50cb6048798ff8e30c04785c83cc98", "sha256": "e72817974689a2366aef9b3692fed2c3b1d972b634da9a260a49ab9aa9d2986d"}, "downloads": -1, "filename": "seismic-zfp-0.0.10.tar.gz", "has_sig": false, "md5_digest": "5e50cb6048798ff8e30c04785c83cc98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37392, "upload_time": "2020-03-20T07:16:13", "upload_time_iso_8601": "2020-03-20T07:16:13.566081Z", "url": "https://files.pythonhosted.org/packages/36/0f/c844054548b487d497efddb7cec7cce32d767587ac4fc8dc6c3f03b04e25/seismic-zfp-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "be9f9efadaa64b0813cb063efe4edb15", "sha256": "441e5e46b9a4396bc64a3c28b4b82437747d486412e6664ea7d585590c2fa5dd"}, "downloads": -1, "filename": "seismic_zfp-0.0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "be9f9efadaa64b0813cb063efe4edb15", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23875, "upload_time": "2020-03-20T15:43:05", "upload_time_iso_8601": "2020-03-20T15:43:05.274789Z", "url": "https://files.pythonhosted.org/packages/69/89/46abc3b3faf056920d4ea90c6671a3a9f59a1a198b45fbd87bf3325b8ecf/seismic_zfp-0.0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "019837c25c5f612644512af2ceaa0fdc", "sha256": "7e24f7d08d418291ce0994fd08a25e1162f351b8c62973b88d10d0c16504f160"}, "downloads": -1, "filename": "seismic_zfp-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "019837c25c5f612644512af2ceaa0fdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23876, "upload_time": "2020-03-20T15:43:16", "upload_time_iso_8601": "2020-03-20T15:43:16.269037Z", "url": "https://files.pythonhosted.org/packages/80/db/c08280dc931b8c26f36e9df87c937f86e273faa3edd2b86a788bc7155f32/seismic_zfp-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f04bf0eb30983ecaa412067764331225", "sha256": "2a6a40d477ec354b83a32dcbd20ba81e9c2c4dd15d578e3d8cf84c334685ff38"}, "downloads": -1, "filename": "seismic-zfp-0.0.11.tar.gz", "has_sig": false, "md5_digest": "f04bf0eb30983ecaa412067764331225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38984, "upload_time": "2020-03-20T15:43:06", "upload_time_iso_8601": "2020-03-20T15:43:06.264497Z", "url": "https://files.pythonhosted.org/packages/7a/31/7765413495d3e446798a742454a49e2a12ad794e0002da75abf5fb56842f/seismic-zfp-0.0.11.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "99ec9f3232cb199703ff8e992af69cb4", "sha256": "49e6601c485ac6629a1509f9eecf62c86ce8b8a8a085c83e69b0b438de3af1a2"}, "downloads": -1, "filename": "seismic_zfp-0.0.6-py3.6.egg", "has_sig": false, "md5_digest": "99ec9f3232cb199703ff8e992af69cb4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 35947, "upload_time": "2019-12-06T15:05:27", "upload_time_iso_8601": "2019-12-06T15:05:27.959081Z", "url": "https://files.pythonhosted.org/packages/67/8d/12798c7e527a0f8da8d28b5f1828a189ae0db37420eb40f236108ad3ebe5/seismic_zfp-0.0.6-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "44b0927de052e52c5f0ccda9b26209da", "sha256": "fe1e895b4a537b65b47c4efe18b43a807bc6815a9627fce2d83e582fe1542328"}, "downloads": -1, "filename": "seismic_zfp-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "44b0927de052e52c5f0ccda9b26209da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19368, "upload_time": "2019-12-06T11:48:08", "upload_time_iso_8601": "2019-12-06T11:48:08.003526Z", "url": "https://files.pythonhosted.org/packages/8d/10/7c05ba6068370363e8529c6a466e7273ce2d141cfce23babad6358acb30d/seismic_zfp-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c60792897517384a8393bb4277e3e21", "sha256": "e735b139c9b621dddff6c2a8304126dc2025674ee6f94fcadec4f648fbfd37d3"}, "downloads": -1, "filename": "seismic-zfp-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9c60792897517384a8393bb4277e3e21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19605, "upload_time": "2019-12-06T11:48:10", "upload_time_iso_8601": "2019-12-06T11:48:10.070778Z", "url": "https://files.pythonhosted.org/packages/b2/b5/69e68231da8f2369c35cf8dbdd24770eee68cbb05ff5e1754563f5167eca/seismic-zfp-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "81f8769ee778080c7036f238404c457a", "sha256": "8d7b58c3ee86f585bb88fbf15fd219c2ba0bc313c266a3f86fb6d86bd7d05f3d"}, "downloads": -1, "filename": "seismic_zfp-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "81f8769ee778080c7036f238404c457a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19491, "upload_time": "2019-12-06T15:05:26", "upload_time_iso_8601": "2019-12-06T15:05:26.317582Z", "url": "https://files.pythonhosted.org/packages/5c/5b/71c85ec6836c70be6d44fc0fa448b32c065671af9c7ed397a39f98bf1d92/seismic_zfp-0.0.7-py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "ec8ea5ab8e2655f764cdfe94fda7b772", "sha256": "db04b0f25f4c71f1b26ab1c70d8a05170b993d16c57da579ce0db770c26c3845"}, "downloads": -1, "filename": "seismic_zfp-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ec8ea5ab8e2655f764cdfe94fda7b772", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21240, "upload_time": "2020-02-24T15:55:44", "upload_time_iso_8601": "2020-02-24T15:55:44.343664Z", "url": "https://files.pythonhosted.org/packages/8d/a3/ce4ba7302118ad1e5e096323b8390af54bf70a1e1c055caba0036307bf6a/seismic_zfp-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dad7089af3e0685fce90498527c1d693", "sha256": "1d897c2f1f621a9c2c81849abf890c2bb39e95f809136b8126c579d07392df30"}, "downloads": -1, "filename": "seismic-zfp-0.0.8.tar.gz", "has_sig": false, "md5_digest": "dad7089af3e0685fce90498527c1d693", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32819, "upload_time": "2020-02-24T15:51:16", "upload_time_iso_8601": "2020-02-24T15:51:16.229549Z", "url": "https://files.pythonhosted.org/packages/0a/fa/ff3fafa9642b98c9dfe72cad1cebd380344753174b02153f8c9e2e8f947e/seismic-zfp-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "a777e001b9b191c631b75431d1242956", "sha256": "8531bbad526dfe1338c2baf8f963eef122cb637bd71fc1704ce6f0682094f526"}, "downloads": -1, "filename": "seismic_zfp-0.0.9-py3.6.egg", "has_sig": false, "md5_digest": "a777e001b9b191c631b75431d1242956", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 46362, "upload_time": "2020-03-10T12:54:22", "upload_time_iso_8601": "2020-03-10T12:54:22.583837Z", "url": "https://files.pythonhosted.org/packages/ad/0f/b1d6036eedef4085af20ef258a0aef1c1a879c0ac50914c7ab1314cda91d/seismic_zfp-0.0.9-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "125b46e2eed3fded0741e5964967b8ed", "sha256": "edcd0adbadb896a6ed7542d003353b9873f9b84e4d4759f11dc208675ac7480e"}, "downloads": -1, "filename": "seismic_zfp-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "125b46e2eed3fded0741e5964967b8ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23704, "upload_time": "2020-03-10T12:54:39", "upload_time_iso_8601": "2020-03-10T12:54:39.452995Z", "url": "https://files.pythonhosted.org/packages/2d/ff/c6247024c048da817893b34c991c7d0767a1629eaf7c61072b4df00d558e/seismic_zfp-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0652ae16adba2a2898524a4c3abb654", "sha256": "bd883a01461e6d81f13f289913b5a47601ff774eb72df114ea903857431a23e4"}, "downloads": -1, "filename": "seismic-zfp-0.0.9.tar.gz", "has_sig": false, "md5_digest": "d0652ae16adba2a2898524a4c3abb654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36117, "upload_time": "2020-03-10T12:53:21", "upload_time_iso_8601": "2020-03-10T12:53:21.750977Z", "url": "https://files.pythonhosted.org/packages/f7/35/5c621e80d1e7f807c879fd3a593a3e15e05b0a90e1f30cff0213b654d16e/seismic-zfp-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be9f9efadaa64b0813cb063efe4edb15", "sha256": "441e5e46b9a4396bc64a3c28b4b82437747d486412e6664ea7d585590c2fa5dd"}, "downloads": -1, "filename": "seismic_zfp-0.0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "be9f9efadaa64b0813cb063efe4edb15", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23875, "upload_time": "2020-03-20T15:43:05", "upload_time_iso_8601": "2020-03-20T15:43:05.274789Z", "url": "https://files.pythonhosted.org/packages/69/89/46abc3b3faf056920d4ea90c6671a3a9f59a1a198b45fbd87bf3325b8ecf/seismic_zfp-0.0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "019837c25c5f612644512af2ceaa0fdc", "sha256": "7e24f7d08d418291ce0994fd08a25e1162f351b8c62973b88d10d0c16504f160"}, "downloads": -1, "filename": "seismic_zfp-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "019837c25c5f612644512af2ceaa0fdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23876, "upload_time": "2020-03-20T15:43:16", "upload_time_iso_8601": "2020-03-20T15:43:16.269037Z", "url": "https://files.pythonhosted.org/packages/80/db/c08280dc931b8c26f36e9df87c937f86e273faa3edd2b86a788bc7155f32/seismic_zfp-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f04bf0eb30983ecaa412067764331225", "sha256": "2a6a40d477ec354b83a32dcbd20ba81e9c2c4dd15d578e3d8cf84c334685ff38"}, "downloads": -1, "filename": "seismic-zfp-0.0.11.tar.gz", "has_sig": false, "md5_digest": "f04bf0eb30983ecaa412067764331225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38984, "upload_time": "2020-03-20T15:43:06", "upload_time_iso_8601": "2020-03-20T15:43:06.264497Z", "url": "https://files.pythonhosted.org/packages/7a/31/7765413495d3e446798a742454a49e2a12ad794e0002da75abf5fb56842f/seismic-zfp-0.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:37 2020"}