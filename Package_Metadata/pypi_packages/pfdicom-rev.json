{"info": {"author": "FNNDSC", "author_email": "dev@babymri.org", "bugtrack_url": null, "classifiers": [], "description": "pfdicom_rev\n==================\n\n.. image:: https://badge.fury.io/py/pfdicom_rev.svg\n    :target: https://badge.fury.io/py/pfdicom_rev\n\n.. image:: https://travis-ci.org/FNNDSC/pfdicom_rev.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/pfdicom_rev\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pfdicom_rev\n\n.. contents:: Table of Contents\n\n\nQuick Overview\n--------------\n\n-  ``pfdicom_rev`` processes DICOM trees for the ReV viewer.\n\nOverview\n--------\n\n``pfdicom_rev`` processes directories containing DICOM files for the ReV viewer by converting DCM files to JPG previews and generating JSON series and study summary files, as well as index.html per study.\n\nThe script accepts an ``<inputDir>`` which should be the (absolute) root dir of the ReV library. All file locations will be referenced relative to this root dir in the JSON descriptor files.\n\n``pfdicom_rev`` performs a mulit-pass loop over the file tree space as defined in the ``[--stage <stage>]`` flag below.\n\nNOTE:\n\n* ``pfdicom_rev`` relies on ImageMagick for many of its operations, including the DCM to JPG conversion, JPG resize, and preview  strip creation.\n\n* In some cases, default limits for ``ImageMagick`` are too low for generating preview strips, especially if a given DICOM series has many (more than 100) DICOM files. One fix for this is to edit the ``policy.xml`` file pertaining to ``ImageMagick`` and set the image ``width`` and ``height`` specifiers to 100 kilo-pixels (the default is about 16KP).\n\n.. code:: xml\n\n    <policy domain=\"resource\" name=\"width\" value=\"100KP\"/>\n    <policy domain=\"resource\" name=\"height\" value=\"100KP\"/>        \n\nPlease see here_ for more information.\n\n.. _here: https://imagemagick.org/script/resources.php\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nThe following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):\n\n-  ``pfmisc`` (various misc modules and classes for the pf* family of objects)\n-  ``pftree`` (create a dictionary representation of a filesystem hierarchy)\n-  ``pfdicom`` (handle underlying DICOM file reading)\n\nUsing ``PyPI``\n~~~~~~~~~~~~~~\n\nThe best method of installing this script and all of its dependencies is\nby fetching it from PyPI\n\n.. code:: bash\n\n        pip3 install pfdicom_rev\n\nCommand line arguments\n----------------------\n\n.. code:: html\n\n        -I|--inputDir <inputDir>\n        Input DICOM directory to examine. By default, the first file in this\n        directory is examined for its tag information. There is an implicit\n        assumption that each <inputDir> contains a single DICOM series.\n\n        [-e|--extension <DICOMextension>]\n        An optional extension to filter the DICOM files of interest from the \n        <inputDir>.\n\n        -O|--outputDir <outputDir>\n        The output root directory that will contain a tree structure identical\n        to the input directory, and each \"leaf\" node will contain the analysis\n        results.\n\n        For ReV, this is often the special directive '%inputDir' which directs\n        the system to generate all outputs in the input tree directly.\n\n        [--outputLeafDir <outputLeafDirFormat>]\n        If specified, will apply the <outputLeafDirFormat> to the output\n        directories containing data. This is useful to blanket describe\n        final output directories with some descriptive text, such as \n        'anon' or 'preview'. \n\n        This is a formatting spec, so \n\n            --outputLeafDir 'preview-%s'\n\n        where %s is the original leaf directory node, will prefix each\n        final directory containing output with the text 'preview-' which\n        can be useful in describing some features of the output set.\n\n        [-T|--tagStruct <JSONtagStructure>]\n        Parse the tags and their \"subs\" from a JSON formatted <JSONtagStucture>\n        passed directly in the command line. This is used in the optional \n        DICOM anonymization.\n\n        [-S|--server <server>]\n        The name of the server hosting the ReV viewer.\n\n        Defaults to empty string '' which is interpreted as the current host, \n        i.e. the host running `pfdicom_rev`. If the actual viewer is hosted\n        elsewhere, use this flag to specify the *viewer* host.\n\n        [--stage <stage>]\n        Stage to execute -- mostly for debugging purposes and useful if running a \n        particular stage repeatedly. There are some caveats to this -- mostly that\n        stages are serially dependent, thus running \"--stage 4\" off the bat will\n        not work since previous stages have not completed.\n\n        The actual thread of stage flow and dependencies are:\n\n\n\n                                      /--stage 2 \n                                     /              \n                            stage 1--               \n                                     \\             \n                                      \\--stage 3----stage 4 \n\n\n            [1] analyize all the DCM files in the <inputDir>\n                *   convert each DCM to JPG (native)\n                *   resize all JPGs to  96x96  and generate mosaic preview strip\n                *   resize all JPGs to 300x300 and generate DCMtag preview\n                *   tag middle JPG in series based on series length\n                *   create JSON per example series-level descriptors in each example\n                    directory:\n                        * declare location of actual series DCM files\n                *   create JSON per month example-level descriptors in each month \n                    directory: \n                        * declare location of middle thumbnail JPGs\n                \n                In each series directory:\n                    <YY>-yr/<MM>-mo/<XX>-ex/\n                        forall(<SERIES>):\n                            o dcm2jpgDCMresize/*jpg\n                            o dcm2jpgRaw/*jpg\n                            o preview.jpg\n                            o raw-preview.jpg\n                        o <SERIES>-series.json\n                    <YY>-yr/<MM>-mo/\n                        o ex.json\n\n            [2] analyze all the JSON series-level descriptors from stage [1] and \n                in each example directory:\n                *   create study-level JSON descriptors that summarize\n                    all series JSON data into one file\n                *   create study-level index.html that directs to the ReV viewer\n                    with this yr/mo/ex tuple.\n\n                In each study directory:\n                    <YY>-yr/<MM>-mo/<XX>-ex/\n                        o description.json\n                        o index.html\n\n            [3] analyze all the JSON per month example-level descriptors\n                from stage [1] and in each month directory:\n                *   create overview per-month index.html that shows\n                    per-example thumbnails\n\n                In each month direcory:\n                    <YY>-yr/<MM>-mo\n                    o index.html\n\n            [4] analyze all JSON study level descriptors from stage [2]\n                *   create tree map for mapping of arbitrary patient age to\n                    closest hits in tree\n                \n                In the root dir:\n                    o map.json\n\n        [--studyJSON <studyJSONfile>]\n        The name of the study JSON file. \n\n        Defaults to 'description.json'.\n\n        [--threads <numThreads>]\n        If specified, break the innermost analysis loop into <numThreads>\n        threads.\n\n        [-x|--man]\n        Show full help.\n\n        [-y|--synopsis]\n        Show brief help.\n\n        [--json]\n        If specified, output a JSON dump of final return.\n\n        [--followLinks]\n        If specified, follow symbolic links.\n\n        [-v|--verbosity <level>]\n        Set the app verbosity level. \n\n            0: No internal output;\n            1: Run start / stop output notification;\n            2: As with level '1' but with simpleProgress bar in 'pftree';\n            3: As with level '2' but with list of input dirs/files in 'pftree';\n            5: As with level '3' but with explicit file logging for\n                    - read\n                    - analyze\n                    - write\n            \nExamples\n--------\n\nProcess a tree containing DICOM files for ReV:\n\n.. code:: bash\n\n        pfdicom_rev                                         \\\\\n                    -I /var/www/html/rev                    \\\\\n                    -O %inputDir                            \\\\\n                    --threads 0 --printElapsedTime          \\\\\n                    -v 3\n\nwhich will run a DCM and JSON analysis, printing the final elapsed processing time.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pfdicom_rev", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pfdicom-rev", "package_url": "https://pypi.org/project/pfdicom-rev/", "platform": "", "project_url": "https://pypi.org/project/pfdicom-rev/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pfdicom_rev"}, "release_url": "https://pypi.org/project/pfdicom-rev/3.0.4/", "requires_dist": null, "requires_python": "", "summary": "Process DICOM trees and create JSON summares for the ReV viewer.", "version": "3.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/pfdicom_rev\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pfdicom_rev.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12a01cd70c39e1420a83d6dc3b8253b1acbc6db3/68747470733a2f2f62616467652e667572792e696f2f70792f70666469636f6d5f7265762e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/pfdicom_rev\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/pfdicom_rev.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f07062b061e286f7fb371e1ff8dbb0cd63385ea4/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f70666469636f6d5f7265762e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pfdicom_rev\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#quick-overview\" id=\"id1\" rel=\"nofollow\">Quick Overview</a></li>\n<li><a href=\"#overview\" id=\"id2\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#dependencies\" id=\"id4\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#using-pypi\" id=\"id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#command-line-arguments\" id=\"id6\" rel=\"nofollow\">Command line arguments</a></li>\n<li><a href=\"#examples\" id=\"id7\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"quick-overview\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Quick Overview</a></h2>\n<ul>\n<li><tt>pfdicom_rev</tt> processes DICOM trees for the ReV viewer.</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Overview</a></h2>\n<p><tt>pfdicom_rev</tt> processes directories containing DICOM files for the ReV viewer by converting DCM files to JPG previews and generating JSON series and study summary files, as well as index.html per study.</p>\n<p>The script accepts an <tt>&lt;inputDir&gt;</tt> which should be the (absolute) root dir of the ReV library. All file locations will be referenced relative to this root dir in the JSON descriptor files.</p>\n<p><tt>pfdicom_rev</tt> performs a mulit-pass loop over the file tree space as defined in the <tt><span class=\"pre\">[--stage</span> &lt;stage&gt;]</tt> flag below.</p>\n<p>NOTE:</p>\n<ul>\n<li><tt>pfdicom_rev</tt> relies on ImageMagick for many of its operations, including the DCM to JPG conversion, JPG resize, and preview  strip creation.</li>\n<li>In some cases, default limits for <tt>ImageMagick</tt> are too low for generating preview strips, especially if a given DICOM series has many (more than 100) DICOM files. One fix for this is to edit the <tt>policy.xml</tt> file pertaining to <tt>ImageMagick</tt> and set the image <tt>width</tt> and <tt>height</tt> specifiers to 100 kilo-pixels (the default is about 16KP).</li>\n</ul>\n<pre><span class=\"nt\">&lt;policy</span> <span class=\"na\">domain=</span><span class=\"s\">\"resource\"</span> <span class=\"na\">name=</span><span class=\"s\">\"width\"</span> <span class=\"na\">value=</span><span class=\"s\">\"100KP\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;policy</span> <span class=\"na\">domain=</span><span class=\"s\">\"resource\"</span> <span class=\"na\">name=</span><span class=\"s\">\"height\"</span> <span class=\"na\">value=</span><span class=\"s\">\"100KP\"</span><span class=\"nt\">/&gt;</span>\n</pre>\n<p>Please see <a href=\"https://imagemagick.org/script/resources.php\" rel=\"nofollow\">here</a> for more information.</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"dependencies\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Dependencies</a></h3>\n<p>The following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):</p>\n<ul>\n<li><tt>pfmisc</tt> (various misc modules and classes for the pf* family of objects)</li>\n<li><tt>pftree</tt> (create a dictionary representation of a filesystem hierarchy)</li>\n<li><tt>pfdicom</tt> (handle underlying DICOM file reading)</li>\n</ul>\n</div>\n<div id=\"using-pypi\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></h3>\n<p>The best method of installing this script and all of its dependencies is\nby fetching it from PyPI</p>\n<pre>pip3 install pfdicom_rev\n</pre>\n</div>\n</div>\n<div id=\"command-line-arguments\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Command line arguments</a></h2>\n<pre>-I|--inputDir <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>\nInput DICOM directory to examine. By default, the first file in this\ndirectory is examined for its tag information. There is an implicit\nassumption that each <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span> contains a single DICOM series.\n\n[-e|--extension <span class=\"p\">&lt;</span><span class=\"nt\">DICOMextension</span><span class=\"p\">&gt;</span>]\nAn optional extension to filter the DICOM files of interest from the\n<span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>.\n\n-O|--outputDir <span class=\"p\">&lt;</span><span class=\"nt\">outputDir</span><span class=\"p\">&gt;</span>\nThe output root directory that will contain a tree structure identical\nto the input directory, and each \"leaf\" node will contain the analysis\nresults.\n\nFor ReV, this is often the special directive '%inputDir' which directs\nthe system to generate all outputs in the input tree directly.\n\n[--outputLeafDir <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span>]\nIf specified, will apply the <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span> to the output\ndirectories containing data. This is useful to blanket describe\nfinal output directories with some descriptive text, such as\n'anon' or 'preview'.\n\nThis is a formatting spec, so\n\n    --outputLeafDir 'preview-%s'\n\nwhere %s is the original leaf directory node, will prefix each\nfinal directory containing output with the text 'preview-' which\ncan be useful in describing some features of the output set.\n\n[-T|--tagStruct <span class=\"p\">&lt;</span><span class=\"nt\">JSONtagStructure</span><span class=\"p\">&gt;</span>]\nParse the tags and their \"subs\" from a JSON formatted <span class=\"p\">&lt;</span><span class=\"nt\">JSONtagStucture</span><span class=\"p\">&gt;</span>\npassed directly in the command line. This is used in the optional\nDICOM anonymization.\n\n[-S|--server <span class=\"p\">&lt;</span><span class=\"nt\">server</span><span class=\"p\">&gt;</span>]\nThe name of the server hosting the ReV viewer.\n\nDefaults to empty string '' which is interpreted as the current host,\ni.e. the host running `pfdicom_rev`. If the actual viewer is hosted\nelsewhere, use this flag to specify the *viewer* host.\n\n[--stage <span class=\"p\">&lt;</span><span class=\"nt\">stage</span><span class=\"p\">&gt;</span>]\nStage to execute -- mostly for debugging purposes and useful if running a\nparticular stage repeatedly. There are some caveats to this -- mostly that\nstages are serially dependent, thus running \"--stage 4\" off the bat will\nnot work since previous stages have not completed.\n\nThe actual thread of stage flow and dependencies are:\n\n\n\n                              /--stage 2\n                             /\n                    stage 1--\n                             \\\n                              \\--stage 3----stage 4\n\n\n    [1] analyize all the DCM files in the <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>\n        *   convert each DCM to JPG (native)\n        *   resize all JPGs to  96x96  and generate mosaic preview strip\n        *   resize all JPGs to 300x300 and generate DCMtag preview\n        *   tag middle JPG in series based on series length\n        *   create JSON per example series-level descriptors in each example\n            directory:\n                * declare location of actual series DCM files\n        *   create JSON per month example-level descriptors in each month\n            directory:\n                * declare location of middle thumbnail JPGs\n\n        In each series directory:\n            <span class=\"p\">&lt;</span><span class=\"nt\">YY</span><span class=\"p\">&gt;</span>-yr/<span class=\"p\">&lt;</span><span class=\"nt\">MM</span><span class=\"p\">&gt;</span>-mo/<span class=\"p\">&lt;</span><span class=\"nt\">XX</span><span class=\"p\">&gt;</span>-ex/\n                forall(<span class=\"p\">&lt;</span><span class=\"nt\">SERIES</span><span class=\"p\">&gt;</span>):\n                    o dcm2jpgDCMresize/*jpg\n                    o dcm2jpgRaw/*jpg\n                    o preview.jpg\n                    o raw-preview.jpg\n                o <span class=\"p\">&lt;</span><span class=\"nt\">SERIES</span><span class=\"p\">&gt;</span>-series.json\n            <span class=\"p\">&lt;</span><span class=\"nt\">YY</span><span class=\"p\">&gt;</span>-yr/<span class=\"p\">&lt;</span><span class=\"nt\">MM</span><span class=\"p\">&gt;</span>-mo/\n                o ex.json\n\n    [2] analyze all the JSON series-level descriptors from stage [1] and\n        in each example directory:\n        *   create study-level JSON descriptors that summarize\n            all series JSON data into one file\n        *   create study-level index.html that directs to the ReV viewer\n            with this yr/mo/ex tuple.\n\n        In each study directory:\n            <span class=\"p\">&lt;</span><span class=\"nt\">YY</span><span class=\"p\">&gt;</span>-yr/<span class=\"p\">&lt;</span><span class=\"nt\">MM</span><span class=\"p\">&gt;</span>-mo/<span class=\"p\">&lt;</span><span class=\"nt\">XX</span><span class=\"p\">&gt;</span>-ex/\n                o description.json\n                o index.html\n\n    [3] analyze all the JSON per month example-level descriptors\n        from stage [1] and in each month directory:\n        *   create overview per-month index.html that shows\n            per-example thumbnails\n\n        In each month direcory:\n            <span class=\"p\">&lt;</span><span class=\"nt\">YY</span><span class=\"p\">&gt;</span>-yr/<span class=\"p\">&lt;</span><span class=\"nt\">MM</span><span class=\"p\">&gt;</span>-mo\n            o index.html\n\n    [4] analyze all JSON study level descriptors from stage [2]\n        *   create tree map for mapping of arbitrary patient age to\n            closest hits in tree\n\n        In the root dir:\n            o map.json\n\n[--studyJSON <span class=\"p\">&lt;</span><span class=\"nt\">studyJSONfile</span><span class=\"p\">&gt;</span>]\nThe name of the study JSON file.\n\nDefaults to 'description.json'.\n\n[--threads <span class=\"p\">&lt;</span><span class=\"nt\">numThreads</span><span class=\"p\">&gt;</span>]\nIf specified, break the innermost analysis loop into <span class=\"p\">&lt;</span><span class=\"nt\">numThreads</span><span class=\"p\">&gt;</span>\nthreads.\n\n[-x|--man]\nShow full help.\n\n[-y|--synopsis]\nShow brief help.\n\n[--json]\nIf specified, output a JSON dump of final return.\n\n[--followLinks]\nIf specified, follow symbolic links.\n\n[-v|--verbosity <span class=\"p\">&lt;</span><span class=\"nt\">level</span><span class=\"p\">&gt;</span>]\nSet the app verbosity level.\n\n    0: No internal output;\n    1: Run start / stop output notification;\n    2: As with level '1' but with simpleProgress bar in 'pftree';\n    3: As with level '2' but with list of input dirs/files in 'pftree';\n    5: As with level '3' but with explicit file logging for\n            - read\n            - analyze\n            - write\n</pre>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Examples</a></h2>\n<p>Process a tree containing DICOM files for ReV:</p>\n<pre>pfdicom_rev                                         <span class=\"se\">\\\\</span>\n            -I /var/www/html/rev                    <span class=\"se\">\\\\</span>\n            -O %inputDir                            <span class=\"se\">\\\\</span>\n            --threads <span class=\"m\">0</span> --printElapsedTime          <span class=\"se\">\\\\</span>\n            -v <span class=\"m\">3</span>\n</pre>\n<p>which will run a DCM and JSON analysis, printing the final elapsed processing time.</p>\n</div>\n\n          </div>"}, "last_serial": 6424908, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c70a4560d3c3a8ba7d13fef658ccbf51", "sha256": "7b46634c932d1b9d6fea886ea7bf4a5cadf9c5a2370609ce89cd86129ef39391"}, "downloads": -1, "filename": "pfdicom_rev-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c70a4560d3c3a8ba7d13fef658ccbf51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12453, "upload_time": "2018-10-09T17:41:46", "upload_time_iso_8601": "2018-10-09T17:41:46.105860Z", "url": "https://files.pythonhosted.org/packages/6b/ae/5cbf0a66ee6b7edab40973ccc480b015119e68d5be3d43696d3315c1d2c3/pfdicom_rev-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e0d3d0f50dc63832b5a6d30bcf2c9680", "sha256": "7a3dc2724c5641f632e0d8643f376d40ebe20349baf7d5226e989b8a95204f18"}, "downloads": -1, "filename": "pfdicom_rev-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e0d3d0f50dc63832b5a6d30bcf2c9680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12470, "upload_time": "2018-10-09T20:47:03", "upload_time_iso_8601": "2018-10-09T20:47:03.571230Z", "url": "https://files.pythonhosted.org/packages/11/99/2aabf9f5a5ea5e0ddc27a21096959b52310e2fe25ae293f90745a0b9feb5/pfdicom_rev-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "1be002120ee1f9b227e325320c5c60a3", "sha256": "813ca8296cac77358b003d7b465cfb12f476ab6e8a26d531f5aebe1c24ff108d"}, "downloads": -1, "filename": "pfdicom_rev-1.0.4.tar.gz", "has_sig": false, "md5_digest": "1be002120ee1f9b227e325320c5c60a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13311, "upload_time": "2018-10-09T21:08:22", "upload_time_iso_8601": "2018-10-09T21:08:22.201142Z", "url": "https://files.pythonhosted.org/packages/aa/37/814933fcade38621b246fc1505996052136fb49db3e5cad8ce02eb70ceca/pfdicom_rev-1.0.4.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "2f99bc3a865bdd530f1a5913c4134509", "sha256": "e8b033c28b21393bd79e5da3bee442d135904d6bd94711a7c956987f2dc1434f"}, "downloads": -1, "filename": "pfdicom_rev-1.0.6.tar.gz", "has_sig": false, "md5_digest": "2f99bc3a865bdd530f1a5913c4134509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13604, "upload_time": "2018-10-09T21:46:49", "upload_time_iso_8601": "2018-10-09T21:46:49.610549Z", "url": "https://files.pythonhosted.org/packages/59/88/b9ff83637331876186d5e937c949725f01d26ddeb16a806de8a7f9c2449e/pfdicom_rev-1.0.6.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "0ace6c4609ade1a40ec4bf49a7c97ad6", "sha256": "a60513e8846f545df85e5b70933c3d2e7fec608acd02420e46dd1f65486036e5"}, "downloads": -1, "filename": "pfdicom_rev-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0ace6c4609ade1a40ec4bf49a7c97ad6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16234, "upload_time": "2018-10-18T18:31:19", "upload_time_iso_8601": "2018-10-18T18:31:19.284749Z", "url": "https://files.pythonhosted.org/packages/7e/1e/32aec2bcfbd917053985c3d7ff8a9a48a924ba1432e849883010867c819a/pfdicom_rev-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "037230c55722d4261321e7824055adeb", "sha256": "1d1df559cebf3ec406dae5c5552b3de9546f9c682203ea9c6bc6d6fdabe6af46"}, "downloads": -1, "filename": "pfdicom_rev-2.0.2.tar.gz", "has_sig": false, "md5_digest": "037230c55722d4261321e7824055adeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16230, "upload_time": "2018-10-18T18:57:43", "upload_time_iso_8601": "2018-10-18T18:57:43.256454Z", "url": "https://files.pythonhosted.org/packages/c3/6b/ed93dac260931b4f90ce502df5e348e5f4c62ada478b1f8fb9100331a9a4/pfdicom_rev-2.0.2.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "cd09d42a31b22e8f1084e1775d48559c", "sha256": "4f0201624281970a34d179cecd88922672e54bc8c9b06bfface9ddb8013d1582"}, "downloads": -1, "filename": "pfdicom_rev-2.0.4.tar.gz", "has_sig": false, "md5_digest": "cd09d42a31b22e8f1084e1775d48559c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16247, "upload_time": "2018-10-18T20:15:42", "upload_time_iso_8601": "2018-10-18T20:15:42.587519Z", "url": "https://files.pythonhosted.org/packages/a0/02/349ebf978136df878e955cab14501536cf6e9c99613787a5167ea572b8e5/pfdicom_rev-2.0.4.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "ffb428b6251775de3de422c566cb2c7c", "sha256": "8e1c95a33a3d716e11212b078cb57d8b6fb8e16c34d6056c80816cac9a9d75db"}, "downloads": -1, "filename": "pfdicom_rev-2.0.6.tar.gz", "has_sig": false, "md5_digest": "ffb428b6251775de3de422c566cb2c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16249, "upload_time": "2018-10-22T15:19:44", "upload_time_iso_8601": "2018-10-22T15:19:44.499181Z", "url": "https://files.pythonhosted.org/packages/f5/d6/ed98e1bfdc8aa7d215b50ff7f4c7bff20d597c873810dc8bf530b1bb544e/pfdicom_rev-2.0.6.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "063a68015037f8e0388082db3e9c77d5", "sha256": "893c4ee0cdf257dd5465452f11c8ac0be854e6e11afc1459e7356e2ce38a0d66"}, "downloads": -1, "filename": "pfdicom_rev-2.2.0.tar.gz", "has_sig": false, "md5_digest": "063a68015037f8e0388082db3e9c77d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16057, "upload_time": "2018-10-26T02:31:42", "upload_time_iso_8601": "2018-10-26T02:31:42.616884Z", "url": "https://files.pythonhosted.org/packages/01/d1/63e0f0b7d78df7c91893aea8cf77da1d39b47085bbc5381f635e00221326/pfdicom_rev-2.2.0.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "ed88edca7ae35de911c081f7b3aeb128", "sha256": "f4a0d54741628f871792fb9d2428c36bfbe386520aa4923653402150d51c0172"}, "downloads": -1, "filename": "pfdicom_rev-2.2.2.tar.gz", "has_sig": false, "md5_digest": "ed88edca7ae35de911c081f7b3aeb128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16593, "upload_time": "2018-11-14T13:07:30", "upload_time_iso_8601": "2018-11-14T13:07:30.637544Z", "url": "https://files.pythonhosted.org/packages/50/bf/7f602bd722876ff2457c2313632938043c71c1bb3e413dc0221a775fe69d/pfdicom_rev-2.2.2.tar.gz", "yanked": false}], "2.2.4": [{"comment_text": "", "digests": {"md5": "bfe72e9a92ee05c6cf14f4c5ab97d59e", "sha256": "d6a61f87bd83521ee5f5ed741f44be675034204987ae02da3696d0ef172f7607"}, "downloads": -1, "filename": "pfdicom_rev-2.2.4.tar.gz", "has_sig": false, "md5_digest": "bfe72e9a92ee05c6cf14f4c5ab97d59e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17331, "upload_time": "2018-11-15T16:19:47", "upload_time_iso_8601": "2018-11-15T16:19:47.544161Z", "url": "https://files.pythonhosted.org/packages/b0/47/9781738922623052b35e22a8715883c88a9a666997689054de000e40b0cb/pfdicom_rev-2.2.4.tar.gz", "yanked": false}], "2.2.6": [{"comment_text": "", "digests": {"md5": "174ef4d4dde87f0d9c89485bdff9b8de", "sha256": "4f26aa48c377b96e319db2c54485f1b811db9e382d301c645c602d9ccb719ebe"}, "downloads": -1, "filename": "pfdicom_rev-2.2.6.tar.gz", "has_sig": false, "md5_digest": "174ef4d4dde87f0d9c89485bdff9b8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26066, "upload_time": "2018-11-20T21:19:33", "upload_time_iso_8601": "2018-11-20T21:19:33.162868Z", "url": "https://files.pythonhosted.org/packages/0f/6a/7cedf902d1732c46b2fdb7c6c0f3aafb25849c5e3a5dc38098a122e89ec2/pfdicom_rev-2.2.6.tar.gz", "yanked": false}], "2.2.8": [{"comment_text": "", "digests": {"md5": "4ab9fc3fa4907f9c3ce4818a4b6f6647", "sha256": "08238b68d3488d6f8697737792fb83279686e96d36b453cbe34ac069c37f953e"}, "downloads": -1, "filename": "pfdicom_rev-2.2.8.tar.gz", "has_sig": false, "md5_digest": "4ab9fc3fa4907f9c3ce4818a4b6f6647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26560, "upload_time": "2018-11-26T19:12:02", "upload_time_iso_8601": "2018-11-26T19:12:02.761196Z", "url": "https://files.pythonhosted.org/packages/c7/57/2e93fa3b486682b17a5c054ec59e90254b2b610287f8e4060d2de95be643/pfdicom_rev-2.2.8.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "e053881b27905789eadae8dba1d501f7", "sha256": "6668d7ba0d684712c14a2a33d665df3736d895c194326dd38e649a3b5f84d63c"}, "downloads": -1, "filename": "pfdicom_rev-2.4.0.tar.gz", "has_sig": false, "md5_digest": "e053881b27905789eadae8dba1d501f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26559, "upload_time": "2018-11-26T21:29:38", "upload_time_iso_8601": "2018-11-26T21:29:38.080234Z", "url": "https://files.pythonhosted.org/packages/c7/ca/b8df358f02ebdd6bce648a56a4581db2a312a99121f06dc6bdaa770cdbea/pfdicom_rev-2.4.0.tar.gz", "yanked": false}], "2.4.10": [{"comment_text": "", "digests": {"md5": "1d9c49ccbcb8e2533728a88d931a0105", "sha256": "9090053c62548fed758c13085d84052f5e07b78d4c1b71ee8690c45d70c1cc32"}, "downloads": -1, "filename": "pfdicom_rev-2.4.10.tar.gz", "has_sig": false, "md5_digest": "1d9c49ccbcb8e2533728a88d931a0105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27836, "upload_time": "2020-01-06T17:44:37", "upload_time_iso_8601": "2020-01-06T17:44:37.933069Z", "url": "https://files.pythonhosted.org/packages/46/21/6139f5dfbd6f918d88f635cf3707839b1ac246f96bf266c50b32d2530bca/pfdicom_rev-2.4.10.tar.gz", "yanked": false}], "2.4.12": [{"comment_text": "", "digests": {"md5": "5411b00ab075de855dd75351451c2cc2", "sha256": "4f8bdfdf316bef41e30582678c6d84a2d00d116cc36a9a63589699284c188bb6"}, "downloads": -1, "filename": "pfdicom_rev-2.4.12.tar.gz", "has_sig": false, "md5_digest": "5411b00ab075de855dd75351451c2cc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27825, "upload_time": "2020-01-06T17:49:34", "upload_time_iso_8601": "2020-01-06T17:49:34.334937Z", "url": "https://files.pythonhosted.org/packages/4c/d7/831346aa56b757aa59310b223c96b6765c2ab134a0af5bb5a092ccab2b8e/pfdicom_rev-2.4.12.tar.gz", "yanked": false}], "2.4.14": [{"comment_text": "", "digests": {"md5": "6ae17f8a4b5eece34dade4839556a0b4", "sha256": "a6ad263e0aa1f926f7d618077d257471cdfa2c55730c423e4217a04da1f0ad85"}, "downloads": -1, "filename": "pfdicom_rev-2.4.14.tar.gz", "has_sig": false, "md5_digest": "6ae17f8a4b5eece34dade4839556a0b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27856, "upload_time": "2020-01-06T18:40:05", "upload_time_iso_8601": "2020-01-06T18:40:05.542181Z", "url": "https://files.pythonhosted.org/packages/54/46/23945157b3c20881394769e10ca5c236e8db1120de19b23a4fc196f35971/pfdicom_rev-2.4.14.tar.gz", "yanked": false}], "2.4.16": [{"comment_text": "", "digests": {"md5": "32d903e8fd56942de4a1561d33757fc5", "sha256": "a441ae7a1797977fb011be9e78ed30c1e56c879d81ebcbea4a452ca6c0824ee5"}, "downloads": -1, "filename": "pfdicom_rev-2.4.16.tar.gz", "has_sig": false, "md5_digest": "32d903e8fd56942de4a1561d33757fc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32421, "upload_time": "2020-01-06T19:28:39", "upload_time_iso_8601": "2020-01-06T19:28:39.546307Z", "url": "https://files.pythonhosted.org/packages/ff/b6/e64143b437a126fa6c4f800e48a9c65e59283d9be88af3398ca9fb24ff47/pfdicom_rev-2.4.16.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "7478b757bd20b4d28388e03f7dd41a54", "sha256": "6e1c79d806d1b14c34ea8a3e815102c7f09063330f4f44261043bb67c86d5048"}, "downloads": -1, "filename": "pfdicom_rev-2.4.2.tar.gz", "has_sig": false, "md5_digest": "7478b757bd20b4d28388e03f7dd41a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26885, "upload_time": "2018-11-27T19:02:02", "upload_time_iso_8601": "2018-11-27T19:02:02.035094Z", "url": "https://files.pythonhosted.org/packages/4f/0c/c66989c9fe54635a0771a5becb53d1b1ce269762bd9baf7173df1938f1ee/pfdicom_rev-2.4.2.tar.gz", "yanked": false}], "2.4.4": [{"comment_text": "", "digests": {"md5": "dd5a339068f05af4010006ab8aecf0d8", "sha256": "f1a5045953231603715f6243c7190b6259a0a5432d1f2243d4adaa191597022d"}, "downloads": -1, "filename": "pfdicom_rev-2.4.4.tar.gz", "has_sig": false, "md5_digest": "dd5a339068f05af4010006ab8aecf0d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27410, "upload_time": "2018-11-27T19:32:39", "upload_time_iso_8601": "2018-11-27T19:32:39.065832Z", "url": "https://files.pythonhosted.org/packages/f3/22/51a52350d724cb7a84e940500ee43c331a666a030b895565476f2de16c92/pfdicom_rev-2.4.4.tar.gz", "yanked": false}], "2.4.6": [{"comment_text": "", "digests": {"md5": "f02906692de85813fd588d9eb43ca7fd", "sha256": "02ee3f379d3c0278b2cd78078568946f2cd5848bd867c4ec95d0fba88c6e6d6d"}, "downloads": -1, "filename": "pfdicom_rev-2.4.6.tar.gz", "has_sig": false, "md5_digest": "f02906692de85813fd588d9eb43ca7fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27619, "upload_time": "2018-12-04T19:45:31", "upload_time_iso_8601": "2018-12-04T19:45:31.123948Z", "url": "https://files.pythonhosted.org/packages/2b/26/94cc784262fc6f39bcfa0bc8a1a5cbb18643d7a90a16032e4332f3b29887/pfdicom_rev-2.4.6.tar.gz", "yanked": false}], "2.4.8": [{"comment_text": "", "digests": {"md5": "a87db93ce32c6e698383925990f0aaa4", "sha256": "0dfb8946fdaed8f660e11cc9859039e57f4572aaa1a9928fa3080fd86e904c16"}, "downloads": -1, "filename": "pfdicom_rev-2.4.8.tar.gz", "has_sig": false, "md5_digest": "a87db93ce32c6e698383925990f0aaa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27436, "upload_time": "2019-12-28T16:44:16", "upload_time_iso_8601": "2019-12-28T16:44:16.798786Z", "url": "https://files.pythonhosted.org/packages/9b/3b/c9e0fb44ccdcc4c179f08b211212e074abff1e3ce15ff527c942b40fee55/pfdicom_rev-2.4.8.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "50f6a65f33d28dfa8331f46f5ea773e4", "sha256": "19607a2e2bdf7d406c540b3bf129a1d42b42e85bf813b3464b1b7218a6ccf9c6"}, "downloads": -1, "filename": "pfdicom_rev-3.0.0.tar.gz", "has_sig": false, "md5_digest": "50f6a65f33d28dfa8331f46f5ea773e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28614, "upload_time": "2020-01-07T21:46:33", "upload_time_iso_8601": "2020-01-07T21:46:33.302994Z", "url": "https://files.pythonhosted.org/packages/ba/cf/d630f18c81c2cbc6f0533e65d663096fdae3a22da0872ebb180af8917e65/pfdicom_rev-3.0.0.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "bdd6848b2f09990bcb1721b69506ca43", "sha256": "3605ad7d6656eeb4818fdaa18d2ff13f0790b42250ae326998b2049f3d5fe2e7"}, "downloads": -1, "filename": "pfdicom_rev-3.0.2.tar.gz", "has_sig": false, "md5_digest": "bdd6848b2f09990bcb1721b69506ca43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28692, "upload_time": "2020-01-08T19:23:00", "upload_time_iso_8601": "2020-01-08T19:23:00.439553Z", "url": "https://files.pythonhosted.org/packages/5c/65/e66240f3b1524b320e2c8c7847ee5fd239df67b0087a7f5ac4b4a4a5cb5d/pfdicom_rev-3.0.2.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "2e09acdf0214f15492ec73e235d27c29", "sha256": "a6edbc7f875aee7ad6df1d3645963b5bde6671e223a2951187631a6820d3cf4c"}, "downloads": -1, "filename": "pfdicom_rev-3.0.4.tar.gz", "has_sig": false, "md5_digest": "2e09acdf0214f15492ec73e235d27c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28694, "upload_time": "2020-01-09T21:57:54", "upload_time_iso_8601": "2020-01-09T21:57:54.506576Z", "url": "https://files.pythonhosted.org/packages/e7/48/e65de31d184e220020463544c9feac4be419ea2dc45e8c07b177bf6364ef/pfdicom_rev-3.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e09acdf0214f15492ec73e235d27c29", "sha256": "a6edbc7f875aee7ad6df1d3645963b5bde6671e223a2951187631a6820d3cf4c"}, "downloads": -1, "filename": "pfdicom_rev-3.0.4.tar.gz", "has_sig": false, "md5_digest": "2e09acdf0214f15492ec73e235d27c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28694, "upload_time": "2020-01-09T21:57:54", "upload_time_iso_8601": "2020-01-09T21:57:54.506576Z", "url": "https://files.pythonhosted.org/packages/e7/48/e65de31d184e220020463544c9feac4be419ea2dc45e8c07b177bf6364ef/pfdicom_rev-3.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:57 2020"}