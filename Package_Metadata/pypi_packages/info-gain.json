{"info": {"author": "Thijs van Ede", "author_email": "t.s.vanede@utwente.nl", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# info_gain\nImplementation of information gain algorithm. There seems to be a debate about how the information gain metric is defined. Whether to use the [Kullback-Leibler divergence](https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence) or the [Mutual information](https://en.wikipedia.org/wiki/Mutual_information) as an algorithm to define information gain. This implementation uses the [information gain calculation](https://en.wikipedia.org/wiki/Information_gain_ratio) as defined below:\n\n## Information gain definitions\n### Information gain calculation\nDefinition from [information gain calculation](https://en.wikipedia.org/wiki/Information_gain_ratio) (retrieved 2018-07-13).\nLet `Attr` be the set of all attributes and `Ex` the set of all training examples, `value(x, a)` with `x` in `Ex` defines the value of a specific example `x` for attribute `a` in `Attr`, `H` specifies the entropy. The `values(a)` function denotes the set of all possible values of attribute `a` in `Attr`. The information gain for an attribute `a` in `Attr` is defined as follows:\n\n![Information gain formula][ig]\n\n[ig]: https://github.com/Thijsvanede/info_gain/blob/master/images/information_gain_formula.gif\n\n### Intrinsic value calculation\nDefinition from [information gain calculation](https://en.wikipedia.org/wiki/Information_gain_ratio) (retrieved 2018-07-13).\n\n![Intrinsic value calculation][iv]\n\n[iv]: https://github.com/Thijsvanede/info_gain/blob/master/images/intrinsic_value_formula.gif\n\n### Information gain ratio calculation\nDefinition from [information gain calculation](https://en.wikipedia.org/wiki/Information_gain_ratio) (retrieved 2018-07-13).\n\n![Intrinsic value calculation][igr]\n\n[igr]: https://github.com/Thijsvanede/info_gain/blob/master/images/information_gain_ratio_formula.gif\n\n## Installation\nTo install the package via pip use:\n```\npip install info_gain\n```\n\nTo clone the package from the git repository use:\n```\ngit clone https://github.com/Thijsvanede/info_gain.git\n```\n\n## Usage\nImport the `info_gain` module with:\n```\nfrom info_gain import info_gain\n```\nThe imported module has supports three methods:\n * `info_gain.info_gain(Ex, a)` to compute the information gain.\n * `info_gain.intrinsic_value(Ex, a)` to compute the intrinsic value.\n * `info_gain.info_gain_ratio(Ex, a)` to compute the information gain ratio.\n\n### Example\n```python\nfrom info_gain import info_gain\n\n# Example of color to indicate whether something is fruit or vegatable\nproduce = ['apple', 'apple', 'apple', 'strawberry', 'eggplant']\nfruit   = [ True  ,  True  ,  True  ,  True       ,  False    ]\ncolour  = ['green', 'green', 'red'  , 'red'       , 'purple'  ]\n\nig  = info_gain.info_gain(fruit, colour)\niv  = info_gain.intrinsic_value(fruit, colour)\nigr = info_gain.info_gain_ratio(fruit, colour)\n\nprint(ig, iv, igr)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Thijsvanede/info_gain", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "info-gain", "package_url": "https://pypi.org/project/info-gain/", "platform": "", "project_url": "https://pypi.org/project/info-gain/", "project_urls": {"Homepage": "https://github.com/Thijsvanede/info_gain"}, "release_url": "https://pypi.org/project/info-gain/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Information gain utilities", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>info_gain</h1>\n<p>Implementation of information gain algorithm. There seems to be a debate about how the information gain metric is defined. Whether to use the <a href=\"https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence\" rel=\"nofollow\">Kullback-Leibler divergence</a> or the <a href=\"https://en.wikipedia.org/wiki/Mutual_information\" rel=\"nofollow\">Mutual information</a> as an algorithm to define information gain. This implementation uses the <a href=\"https://en.wikipedia.org/wiki/Information_gain_ratio\" rel=\"nofollow\">information gain calculation</a> as defined below:</p>\n<h2>Information gain definitions</h2>\n<h3>Information gain calculation</h3>\n<p>Definition from <a href=\"https://en.wikipedia.org/wiki/Information_gain_ratio\" rel=\"nofollow\">information gain calculation</a> (retrieved 2018-07-13).\nLet <code>Attr</code> be the set of all attributes and <code>Ex</code> the set of all training examples, <code>value(x, a)</code> with <code>x</code> in <code>Ex</code> defines the value of a specific example <code>x</code> for attribute <code>a</code> in <code>Attr</code>, <code>H</code> specifies the entropy. The <code>values(a)</code> function denotes the set of all possible values of attribute <code>a</code> in <code>Attr</code>. The information gain for an attribute <code>a</code> in <code>Attr</code> is defined as follows:</p>\n<p><img alt=\"Information gain formula\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42a5a4f6589eb0d090aa6a730162d47221ab62cb/68747470733a2f2f6769746875622e636f6d2f5468696a7376616e6564652f696e666f5f6761696e2f626c6f622f6d61737465722f696d616765732f696e666f726d6174696f6e5f6761696e5f666f726d756c612e676966\"></p>\n<h3>Intrinsic value calculation</h3>\n<p>Definition from <a href=\"https://en.wikipedia.org/wiki/Information_gain_ratio\" rel=\"nofollow\">information gain calculation</a> (retrieved 2018-07-13).</p>\n<p><img alt=\"Intrinsic value calculation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b582c3eab4f249a454bc312930b773a9bca9e6b4/68747470733a2f2f6769746875622e636f6d2f5468696a7376616e6564652f696e666f5f6761696e2f626c6f622f6d61737465722f696d616765732f696e7472696e7369635f76616c75655f666f726d756c612e676966\"></p>\n<h3>Information gain ratio calculation</h3>\n<p>Definition from <a href=\"https://en.wikipedia.org/wiki/Information_gain_ratio\" rel=\"nofollow\">information gain calculation</a> (retrieved 2018-07-13).</p>\n<p><img alt=\"Intrinsic value calculation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3037ea390f0ac5d7873b45f52f4f9ee1860d1711/68747470733a2f2f6769746875622e636f6d2f5468696a7376616e6564652f696e666f5f6761696e2f626c6f622f6d61737465722f696d616765732f696e666f726d6174696f6e5f6761696e5f726174696f5f666f726d756c612e676966\"></p>\n<h2>Installation</h2>\n<p>To install the package via pip use:</p>\n<pre><code>pip install info_gain\n</code></pre>\n<p>To clone the package from the git repository use:</p>\n<pre><code>git clone https://github.com/Thijsvanede/info_gain.git\n</code></pre>\n<h2>Usage</h2>\n<p>Import the <code>info_gain</code> module with:</p>\n<pre><code>from info_gain import info_gain\n</code></pre>\n<p>The imported module has supports three methods:</p>\n<ul>\n<li><code>info_gain.info_gain(Ex, a)</code> to compute the information gain.</li>\n<li><code>info_gain.intrinsic_value(Ex, a)</code> to compute the intrinsic value.</li>\n<li><code>info_gain.info_gain_ratio(Ex, a)</code> to compute the information gain ratio.</li>\n</ul>\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">info_gain</span> <span class=\"kn\">import</span> <span class=\"n\">info_gain</span>\n\n<span class=\"c1\"># Example of color to indicate whether something is fruit or vegatable</span>\n<span class=\"n\">produce</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'apple'</span><span class=\"p\">,</span> <span class=\"s1\">'apple'</span><span class=\"p\">,</span> <span class=\"s1\">'apple'</span><span class=\"p\">,</span> <span class=\"s1\">'strawberry'</span><span class=\"p\">,</span> <span class=\"s1\">'eggplant'</span><span class=\"p\">]</span>\n<span class=\"n\">fruit</span>   <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"kc\">True</span>  <span class=\"p\">,</span>  <span class=\"kc\">True</span>  <span class=\"p\">,</span>  <span class=\"kc\">True</span>  <span class=\"p\">,</span>  <span class=\"kc\">True</span>       <span class=\"p\">,</span>  <span class=\"kc\">False</span>    <span class=\"p\">]</span>\n<span class=\"n\">colour</span>  <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"s1\">'red'</span>  <span class=\"p\">,</span> <span class=\"s1\">'red'</span>       <span class=\"p\">,</span> <span class=\"s1\">'purple'</span>  <span class=\"p\">]</span>\n\n<span class=\"n\">ig</span>  <span class=\"o\">=</span> <span class=\"n\">info_gain</span><span class=\"o\">.</span><span class=\"n\">info_gain</span><span class=\"p\">(</span><span class=\"n\">fruit</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"p\">)</span>\n<span class=\"n\">iv</span>  <span class=\"o\">=</span> <span class=\"n\">info_gain</span><span class=\"o\">.</span><span class=\"n\">intrinsic_value</span><span class=\"p\">(</span><span class=\"n\">fruit</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"p\">)</span>\n<span class=\"n\">igr</span> <span class=\"o\">=</span> <span class=\"n\">info_gain</span><span class=\"o\">.</span><span class=\"n\">info_gain_ratio</span><span class=\"p\">(</span><span class=\"n\">fruit</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ig</span><span class=\"p\">,</span> <span class=\"n\">iv</span><span class=\"p\">,</span> <span class=\"n\">igr</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4064994, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "97647a23268df5d1ca4ce41343ff0d1f", "sha256": "5109869e2c95aff60a35fdc64d41164b7e7d27027a5184f762bbcdf117e65a92"}, "downloads": -1, "filename": "info_gain-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "97647a23268df5d1ca4ce41343ff0d1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3009, "upload_time": "2018-07-13T14:24:34", "upload_time_iso_8601": "2018-07-13T14:24:34.464163Z", "url": "https://files.pythonhosted.org/packages/53/82/cfb0a2c9c15cbee52cb10e6f4ea778947f01cc487ca84d7351b20f8318c2/info_gain-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54de41770272303f0e74f7d223fd5eda", "sha256": "3e8b28f552a6223c68e00ac3cf7fd6368cff6470911ae86d7415d6dc08939bb7"}, "downloads": -1, "filename": "info_gain-1.0.tar.gz", "has_sig": false, "md5_digest": "54de41770272303f0e74f7d223fd5eda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2703, "upload_time": "2018-07-13T14:24:35", "upload_time_iso_8601": "2018-07-13T14:24:35.566940Z", "url": "https://files.pythonhosted.org/packages/5b/45/68aabe58688ed41c8ad719b53b6659bf0b0ce03790b1872f018dc0c7e026/info_gain-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "553b84fa4ff15d146b21fa46d3491510", "sha256": "a4f1916be4b0eb51a2389f583fc0490b240e867aadf76dbd2898462270f2be9e"}, "downloads": -1, "filename": "info_gain-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "553b84fa4ff15d146b21fa46d3491510", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3290, "upload_time": "2018-07-16T09:00:51", "upload_time_iso_8601": "2018-07-16T09:00:51.762114Z", "url": "https://files.pythonhosted.org/packages/41/53/198b263ac9fef93095d21a315007234aff4061132fa95f802ac32c7bfff9/info_gain-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81965db77e37d4a9d181a3a9ba47836f", "sha256": "e8159d09c58e7302507cea9ebc8e6b1c04310e7f9b30a99f831554d4f772e9c1"}, "downloads": -1, "filename": "info_gain-1.0.1.tar.gz", "has_sig": false, "md5_digest": "81965db77e37d4a9d181a3a9ba47836f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2977, "upload_time": "2018-07-16T09:00:52", "upload_time_iso_8601": "2018-07-16T09:00:52.788622Z", "url": "https://files.pythonhosted.org/packages/74/da/b7ac47b517b47ca3f0bcf87a8ed3f17c2b1978c4df9f000e0ac577b2106e/info_gain-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "553b84fa4ff15d146b21fa46d3491510", "sha256": "a4f1916be4b0eb51a2389f583fc0490b240e867aadf76dbd2898462270f2be9e"}, "downloads": -1, "filename": "info_gain-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "553b84fa4ff15d146b21fa46d3491510", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3290, "upload_time": "2018-07-16T09:00:51", "upload_time_iso_8601": "2018-07-16T09:00:51.762114Z", "url": "https://files.pythonhosted.org/packages/41/53/198b263ac9fef93095d21a315007234aff4061132fa95f802ac32c7bfff9/info_gain-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81965db77e37d4a9d181a3a9ba47836f", "sha256": "e8159d09c58e7302507cea9ebc8e6b1c04310e7f9b30a99f831554d4f772e9c1"}, "downloads": -1, "filename": "info_gain-1.0.1.tar.gz", "has_sig": false, "md5_digest": "81965db77e37d4a9d181a3a9ba47836f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2977, "upload_time": "2018-07-16T09:00:52", "upload_time_iso_8601": "2018-07-16T09:00:52.788622Z", "url": "https://files.pythonhosted.org/packages/74/da/b7ac47b517b47ca3f0bcf87a8ed3f17c2b1978c4df9f000e0ac577b2106e/info_gain-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:03 2020"}