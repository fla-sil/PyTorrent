{"info": {"author": "Philip Howard", "author_email": "phil@pimoroni.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: System :: Hardware"], "description": "![Piglow](piglow-logo.jpg)\n\nThe PiGlow is a small add on board for the Raspberry Pi that provides 18 individually controllable LEDs.\n\nLearn more: https://shop.pimoroni.com/products/piglow\n\nThis repository contains the library and examples for the PiGlow board.\n\n## Installation\n\n**Full install ( recommended ):**\n\nWe've created a super-easy installation script that will install all pre-requisites and get your Piglow up and running in a jiffy. To run it fire up Terminal which you'll find in Menu -> Accessories -> Terminal on your Raspberry Pi desktop like so:\n\n![Finding the terminal](terminal.jpg)\n\nIn the new terminal window, run our easy installer by typing:\n\n```bash\ncurl -sS https://get.pimoroni.com/piglow | bash\n```\n\nIf you choose to download examples you'll find them in `/home/pi/Pimoroni/piglow/`.\n\n**Library install for Python 3:**\n\non Raspbian:\n\n```bash\nsudo apt-get install python3-piglow\n```\nother environments: \n\n```bash\nsudo pip3 install piglow\n```\n\n**Library install for Python 2:**\n\non Raspbian:\n\n```bash\nsudo apt-get install python-piglow\n```\nother environments: \n\n```bash\nsudo pip2 install piglow\n```\n\nIn all cases you will have to enable the i2c bus.\n\n## Documentation & Support\n\n* PiGlow GPIO Pinout - https://pinout.xyz/pinout/piglow\n* Function reference - http://docs.pimoroni.com/piglow/\n* Get help - http://forums.pimoroni.com/c/support\n\n## Backwards Compatibility\n\nThe PiGlow Python library is designed to support examples written for Jason's PiGlow library found here: https://github.com/Boeeerb/PiGlow\n\nIt's compatible with the examples, and we've ported some over to show you how it's done.\n\n## Using PiGlow\n\nTo use the piglow library, you'll probably want to start by importing it:\n\n```python\nimport piglow\n```\n\nNow, you can turn some LEDs on:\n\n```python\npiglow.red(64)\n```\n\nNothing will happen yet, you've got to update PiGlow with your changes. Why? Because it's quicker! If you're setting up a pattern it costs time and resources to redraw every step of that setup to the PiGlow, so we don't do that. Instead you need to call `show` like so:\n\n```python\npiglow.show()\n```\n\nA bug is a feature you can't turn off, however, so if you want to change that behaviour you can set it after importing piglow:\n\n```python\npiglow.auto_update = True\n```\n\nThis will turn on auto update, refreshing the PiGlow after each change so you don't have to.\n\n## Function Reference\n\n### Settings\n* `piglow.auto_update` - Set to True or False, determines if the PiGlow should automatically update after each LED change\n* `piglow.clear_on_exit` - Set to True or False, determines if the PiGlow should be cleared on exit\n\n### Colours\n* `piglow.white( value from 0 to 255 )`\n* `piglow.blue( value from 0 to 255 )`\n* `piglow.green( value from 0 to 255 )`\n* `piglow.yellow( value from 0 to 255 )`\n* `piglow.orange( value from 0 to 255 )`\n* `piglow.red( value from 0 to 255 )`\n\n### Arm, Spoke, Leg, they're all the same thing!\n\n`piglow.arm( index from 0 to 2, value from 0 to 255 )`\n\n### Multiple LEDs in various different ways\n\nThe `set` method accepts a list of LEDs, a list of values, or a single LED or value, or any permutation therein:\n\n`piglow.set(0, 255)` - sets LED 0 to full brightness\n\n`piglow.set([1,3,5,7,9,11,13,15,17],255)` - sets all odd LEDs to full brightness\n\n`piglow.set(0,[50,50,50])` - let the 3 LEDs starting at index 0 to 50 brightness\n\n## Other support for PiGlow\n\n**Gordon Henderson** (@drogon on Twitter) has very kindly added support for PiGlow into his very popular wiringPi library and even includes a basic command line tool that you can use to control your PiGlow! http://wiringpi.com/dev-lib/piglow/\n\n**Simon Walters** (@cymplecy) has added awesome PiGlow support to his Raspberry Pi GPIO Scratch library: http://cymplecy.wordpress.com/2013/08/12/scratch-gpio-piglow-support/\n\n**Jason Barnett** has put together a great Python class and a load of samples: https://github.com/Boeeerb/PiGlow\n\n**Ben Lebherz** has forked Jasons project and tidied up the code a bit while adding gamma correction: https://github.com/benleb/PyGlow\n\n**Manuel Ernst** has created a Node.js library: https://github.com/zaphod1984/node-piglow\n\n## More information\n\nFor more information the datasheet for the SN3218 IC is included in this repository which outlines the complete communication protocol for the chip.\n\nFor those wanting to wire up their PiGlow in other ways these are the GPIO pins used by the module:\n\n- P1 & P17 (3V3)\n- P2 (5V)\n- P14 (GND)\n- P3 (SDA)\n- P5 (SCL)\n\n## Special Thanks\n\nA special thanks for Jason Barnett for carrying the PiGlow torch with his original library.\n1.2.5\n-----\n\n* Improved docstrings\n* Defer setup to avoid import-time side effects. PR #17\n* Fix issue with modulo. PR #21\n* Fix & optimise tweeing. PR #23\n\n1.2.4\n-----\n\n* Added __version__ to module\n\n1.2.3\n-----\n\n* Removed ref to pimglow.py in MANIFEST\n* Added LICENSE.txt\n\n1.2.2\n-----\n\n* Fixed legs.py for Python3 compatibility\n\n1.2.1\n-----\n\n* Tweaks and tidying up\n\n1.2.0\n-----\n\n* Promoted to stable\n* \"set\" now defaults to a sensible LED order, wrapping \"_set\"\n* Call \"_set\" directly for old bahaviour\n\n1.1.0\n-----\n\n* Update to new PiGlow library\n* renamed my 'led' method to 'single'\n* wrapped inherited 'set' to automatically call 'update'\n\n1.0.0\n-----\n\n* Initial experimental module", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.pimoroni.com", "keywords": "Raspberry Pi sn3218 PiGlow i2c", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "piglow", "package_url": "https://pypi.org/project/piglow/", "platform": "", "project_url": "https://pypi.org/project/piglow/", "project_urls": {"Homepage": "http://www.pimoroni.com"}, "release_url": "https://pypi.org/project/piglow/1.2.5/", "requires_dist": null, "requires_python": "", "summary": "A module to drive the Pimoroni PiGlow board, based on the sn3218 i2c LED controller", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Piglow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9c4d0130b7af4c27c401cef52787bc1c58b7982/7069676c6f772d6c6f676f2e6a7067\"></p>\n<p>The PiGlow is a small add on board for the Raspberry Pi that provides 18 individually controllable LEDs.</p>\n<p>Learn more: <a href=\"https://shop.pimoroni.com/products/piglow\" rel=\"nofollow\">https://shop.pimoroni.com/products/piglow</a></p>\n<p>This repository contains the library and examples for the PiGlow board.</p>\n<h2>Installation</h2>\n<p><strong>Full install ( recommended ):</strong></p>\n<p>We've created a super-easy installation script that will install all pre-requisites and get your Piglow up and running in a jiffy. To run it fire up Terminal which you'll find in Menu -&gt; Accessories -&gt; Terminal on your Raspberry Pi desktop like so:</p>\n<p><img alt=\"Finding the terminal\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b88e5c05dfdf0a29e18a049c3be9d1d718e1aba0/7465726d696e616c2e6a7067\"></p>\n<p>In the new terminal window, run our easy installer by typing:</p>\n<pre>curl -sS https://get.pimoroni.com/piglow <span class=\"p\">|</span> bash\n</pre>\n<p>If you choose to download examples you'll find them in <code>/home/pi/Pimoroni/piglow/</code>.</p>\n<p><strong>Library install for Python 3:</strong></p>\n<p>on Raspbian:</p>\n<pre>sudo apt-get install python3-piglow\n</pre>\n<p>other environments:</p>\n<pre>sudo pip3 install piglow\n</pre>\n<p><strong>Library install for Python 2:</strong></p>\n<p>on Raspbian:</p>\n<pre>sudo apt-get install python-piglow\n</pre>\n<p>other environments:</p>\n<pre>sudo pip2 install piglow\n</pre>\n<p>In all cases you will have to enable the i2c bus.</p>\n<h2>Documentation &amp; Support</h2>\n<ul>\n<li>PiGlow GPIO Pinout - <a href=\"https://pinout.xyz/pinout/piglow\" rel=\"nofollow\">https://pinout.xyz/pinout/piglow</a></li>\n<li>Function reference - <a href=\"http://docs.pimoroni.com/piglow/\" rel=\"nofollow\">http://docs.pimoroni.com/piglow/</a></li>\n<li>Get help - <a href=\"http://forums.pimoroni.com/c/support\" rel=\"nofollow\">http://forums.pimoroni.com/c/support</a></li>\n</ul>\n<h2>Backwards Compatibility</h2>\n<p>The PiGlow Python library is designed to support examples written for Jason's PiGlow library found here: <a href=\"https://github.com/Boeeerb/PiGlow\" rel=\"nofollow\">https://github.com/Boeeerb/PiGlow</a></p>\n<p>It's compatible with the examples, and we've ported some over to show you how it's done.</p>\n<h2>Using PiGlow</h2>\n<p>To use the piglow library, you'll probably want to start by importing it:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">piglow</span>\n</pre>\n<p>Now, you can turn some LEDs on:</p>\n<pre><span class=\"n\">piglow</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre>\n<p>Nothing will happen yet, you've got to update PiGlow with your changes. Why? Because it's quicker! If you're setting up a pattern it costs time and resources to redraw every step of that setup to the PiGlow, so we don't do that. Instead you need to call <code>show</code> like so:</p>\n<pre><span class=\"n\">piglow</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>A bug is a feature you can't turn off, however, so if you want to change that behaviour you can set it after importing piglow:</p>\n<pre><span class=\"n\">piglow</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p>This will turn on auto update, refreshing the PiGlow after each change so you don't have to.</p>\n<h2>Function Reference</h2>\n<h3>Settings</h3>\n<ul>\n<li><code>piglow.auto_update</code> - Set to True or False, determines if the PiGlow should automatically update after each LED change</li>\n<li><code>piglow.clear_on_exit</code> - Set to True or False, determines if the PiGlow should be cleared on exit</li>\n</ul>\n<h3>Colours</h3>\n<ul>\n<li><code>piglow.white( value from 0 to 255 )</code></li>\n<li><code>piglow.blue( value from 0 to 255 )</code></li>\n<li><code>piglow.green( value from 0 to 255 )</code></li>\n<li><code>piglow.yellow( value from 0 to 255 )</code></li>\n<li><code>piglow.orange( value from 0 to 255 )</code></li>\n<li><code>piglow.red( value from 0 to 255 )</code></li>\n</ul>\n<h3>Arm, Spoke, Leg, they're all the same thing!</h3>\n<p><code>piglow.arm( index from 0 to 2, value from 0 to 255 )</code></p>\n<h3>Multiple LEDs in various different ways</h3>\n<p>The <code>set</code> method accepts a list of LEDs, a list of values, or a single LED or value, or any permutation therein:</p>\n<p><code>piglow.set(0, 255)</code> - sets LED 0 to full brightness</p>\n<p><code>piglow.set([1,3,5,7,9,11,13,15,17],255)</code> - sets all odd LEDs to full brightness</p>\n<p><code>piglow.set(0,[50,50,50])</code> - let the 3 LEDs starting at index 0 to 50 brightness</p>\n<h2>Other support for PiGlow</h2>\n<p><strong>Gordon Henderson</strong> (@drogon on Twitter) has very kindly added support for PiGlow into his very popular wiringPi library and even includes a basic command line tool that you can use to control your PiGlow! <a href=\"http://wiringpi.com/dev-lib/piglow/\" rel=\"nofollow\">http://wiringpi.com/dev-lib/piglow/</a></p>\n<p><strong>Simon Walters</strong> (@cymplecy) has added awesome PiGlow support to his Raspberry Pi GPIO Scratch library: <a href=\"http://cymplecy.wordpress.com/2013/08/12/scratch-gpio-piglow-support/\" rel=\"nofollow\">http://cymplecy.wordpress.com/2013/08/12/scratch-gpio-piglow-support/</a></p>\n<p><strong>Jason Barnett</strong> has put together a great Python class and a load of samples: <a href=\"https://github.com/Boeeerb/PiGlow\" rel=\"nofollow\">https://github.com/Boeeerb/PiGlow</a></p>\n<p><strong>Ben Lebherz</strong> has forked Jasons project and tidied up the code a bit while adding gamma correction: <a href=\"https://github.com/benleb/PyGlow\" rel=\"nofollow\">https://github.com/benleb/PyGlow</a></p>\n<p><strong>Manuel Ernst</strong> has created a Node.js library: <a href=\"https://github.com/zaphod1984/node-piglow\" rel=\"nofollow\">https://github.com/zaphod1984/node-piglow</a></p>\n<h2>More information</h2>\n<p>For more information the datasheet for the SN3218 IC is included in this repository which outlines the complete communication protocol for the chip.</p>\n<p>For those wanting to wire up their PiGlow in other ways these are the GPIO pins used by the module:</p>\n<ul>\n<li>P1 &amp; P17 (3V3)</li>\n<li>P2 (5V)</li>\n<li>P14 (GND)</li>\n<li>P3 (SDA)</li>\n<li>P5 (SCL)</li>\n</ul>\n<h2>Special Thanks</h2>\n<h2>A special thanks for Jason Barnett for carrying the PiGlow torch with his original library.\n1.2.5</h2>\n<ul>\n<li>Improved docstrings</li>\n<li>Defer setup to avoid import-time side effects. PR #17</li>\n<li>Fix issue with modulo. PR #21</li>\n<li>Fix &amp; optimise tweeing. PR #23</li>\n</ul>\n<h2>1.2.4</h2>\n<ul>\n<li>Added <strong>version</strong> to module</li>\n</ul>\n<h2>1.2.3</h2>\n<ul>\n<li>Removed ref to pimglow.py in MANIFEST</li>\n<li>Added LICENSE.txt</li>\n</ul>\n<h2>1.2.2</h2>\n<ul>\n<li>Fixed legs.py for Python3 compatibility</li>\n</ul>\n<h2>1.2.1</h2>\n<ul>\n<li>Tweaks and tidying up</li>\n</ul>\n<h2>1.2.0</h2>\n<ul>\n<li>Promoted to stable</li>\n<li>\"set\" now defaults to a sensible LED order, wrapping \"_set\"</li>\n<li>Call \"_set\" directly for old bahaviour</li>\n</ul>\n<h2>1.1.0</h2>\n<ul>\n<li>Update to new PiGlow library</li>\n<li>renamed my 'led' method to 'single'</li>\n<li>wrapped inherited 'set' to automatically call 'update'</li>\n</ul>\n<h2>1.0.0</h2>\n<ul>\n<li>Initial experimental module</li>\n</ul>\n\n          </div>"}, "last_serial": 6075229, "releases": {"1.1dev": [{"comment_text": "", "digests": {"md5": "cb9e06c76fd623f9f2d48809773cf458", "sha256": "e8e031430b7724bee110c872ab9619eec2050a7ce8a67b09d4d58ab18b80d04f"}, "downloads": -1, "filename": "piglow-1.1dev.tar.gz", "has_sig": false, "md5_digest": "cb9e06c76fd623f9f2d48809773cf458", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3058, "upload_time": "2015-05-08T08:43:12", "upload_time_iso_8601": "2015-05-08T08:43:12.031543Z", "url": "https://files.pythonhosted.org/packages/83/67/f1c0513d6c604041f2035a1948db903e7f45c479ffe2e5ce7f25cfb016c2/piglow-1.1dev.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "076238d0d8f0830e6fca12fe7f70b962", "sha256": "862a7656b44a7ae44d1ec9d41636c1ad840b3f3e5773b8aae02db2e2b8f80af0"}, "downloads": -1, "filename": "piglow-1.2.tar.gz", "has_sig": false, "md5_digest": "076238d0d8f0830e6fca12fe7f70b962", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3722, "upload_time": "2015-08-15T15:33:06", "upload_time_iso_8601": "2015-08-15T15:33:06.302632Z", "url": "https://files.pythonhosted.org/packages/eb/21/ac688b75d07807ee2ec14d95ffe9a336e5c21a326a24e10ffab551f1f76c/piglow-1.2.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "48354f90d417f9febf113758be4ac4b9", "sha256": "87acd9185b528911169dece61f60f9dd5d521670b128a4cbb2f14c78e0021325"}, "downloads": -1, "filename": "piglow-1.2.2.tar.gz", "has_sig": false, "md5_digest": "48354f90d417f9febf113758be4ac4b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4336, "upload_time": "2016-07-12T15:49:39", "upload_time_iso_8601": "2016-07-12T15:49:39.482895Z", "url": "https://files.pythonhosted.org/packages/fd/c2/f4822847f91e950ce27170db86fa1f6861ccc9ff2980e98bf7092fa78bd2/piglow-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "40d361d2fba3a33b58f8931253bbfd20", "sha256": "18eb5246889c0342c1f4941d1a512729bc0fc3f2c4f070e750abca8392c41020"}, "downloads": -1, "filename": "piglow-1.2.3.tar.gz", "has_sig": false, "md5_digest": "40d361d2fba3a33b58f8931253bbfd20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4330, "upload_time": "2016-07-12T16:03:20", "upload_time_iso_8601": "2016-07-12T16:03:20.606037Z", "url": "https://files.pythonhosted.org/packages/3e/cd/8a0d699cc5eddf554450e9f713c06481b9eec6de2008142113538c96ac21/piglow-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "cc75c10a6648caf03d0b95891dd0e244", "sha256": "70ff6dbc5dd67aaed2149453ae82cd53ea3edf0c6164c5ac59270cc02beeb12b"}, "downloads": -1, "filename": "piglow-1.2.4.tar.gz", "has_sig": false, "md5_digest": "cc75c10a6648caf03d0b95891dd0e244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5620, "upload_time": "2016-11-10T12:03:14", "upload_time_iso_8601": "2016-11-10T12:03:14.302888Z", "url": "https://files.pythonhosted.org/packages/0b/b9/d5db79846be4995a81c701f3d35c60cc28523b6bcb8273b8da44a84e4d09/piglow-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "9eddc50eb4e3f27ec0997553ff351752", "sha256": "74b1a291b9dfb70445c56d49052becc0aed60800fc3050b3aff8bdaf683dfb89"}, "downloads": -1, "filename": "piglow-1.2.5.tar.gz", "has_sig": false, "md5_digest": "9eddc50eb4e3f27ec0997553ff351752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8164, "upload_time": "2019-11-04T12:38:34", "upload_time_iso_8601": "2019-11-04T12:38:34.227725Z", "url": "https://files.pythonhosted.org/packages/d8/e1/af143f86c8042692df07b71535f3c30c1408666a505d5861bca217c1ed5b/piglow-1.2.5.tar.gz", "yanked": false}], "1.2dev": [{"comment_text": "", "digests": {"md5": "42ea0e3ae95a2af341d72c38857b1baa", "sha256": "ad66b61e1483b8708132fb9198f91c950c1ccdf89eb09ceaed6175331857bd55"}, "downloads": -1, "filename": "piglow-1.2dev.tar.gz", "has_sig": false, "md5_digest": "42ea0e3ae95a2af341d72c38857b1baa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3558, "upload_time": "2015-05-13T10:51:03", "upload_time_iso_8601": "2015-05-13T10:51:03.436541Z", "url": "https://files.pythonhosted.org/packages/7d/15/9f7236c717bf5e999e6dfc230caa28f48866b38a3fe09de20bb677c0656f/piglow-1.2dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9eddc50eb4e3f27ec0997553ff351752", "sha256": "74b1a291b9dfb70445c56d49052becc0aed60800fc3050b3aff8bdaf683dfb89"}, "downloads": -1, "filename": "piglow-1.2.5.tar.gz", "has_sig": false, "md5_digest": "9eddc50eb4e3f27ec0997553ff351752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8164, "upload_time": "2019-11-04T12:38:34", "upload_time_iso_8601": "2019-11-04T12:38:34.227725Z", "url": "https://files.pythonhosted.org/packages/d8/e1/af143f86c8042692df07b71535f3c30c1408666a505d5861bca217c1ed5b/piglow-1.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:51 2020"}