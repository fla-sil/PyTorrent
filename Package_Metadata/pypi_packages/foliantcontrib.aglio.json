{"info": {"author": "Daniil Minukhin", "author_email": "ddddsa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Utilities"], "description": "[![](https://img.shields.io/pypi/v/foliantcontrib.aglio.svg)](https://pypi.org/project/foliantcontrib.aglio/)\n\n\n# Aglio Backend for Foliant\n\nAglio backend generates API documentation from [API Blueprint](https://apiblueprint.org/) using [aglio renderer](https://github.com/danielgtaylor/aglio).\n\nThis backend operates the `site` target.\n\n> Note, that aglio is designed to render API Blueprint documents. Blueprint syntax is very close to that of Markdown and you may be tempted to use this backend as a general purpose static site generator, which may work in some cases, but is not guaranteed to work in all of them.\n\n## Installation\n\n```bash\n$ pip install foliantcontrib.aglio\n```\n\n## Usage\n\nTo use this backend aglio should be installed in your system. Follow the [instruction](https://github.com/danielgtaylor/aglio#installation--usage) in aglio repo.\n\nTo test if you've installed aglio properly run the `aglio -h` command, which should return you a list of options.\n\nTo generate a static website from your Foliant project run the following command:\n\n```bash\n$ foliant make site --with aglio\nParsing config... Done\nMaking site...\nDone\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nResult: My_Awesome_Project.aglio\n```\n\n## Config\n\nYou don't have to put anything in the config to use aglio backend. If it's installed, Foliant detects it.\n\nTo customize the output, use options in `backend_config.aglio` section:\n\n```yaml\nbackend_config:\n  aglio:\n    aglio_path: aglio\n    params:\n        theme-variables: flatly\n        fullWidth: True\n```\n\n`aglio_path`\n:   Path to the aglio binary. Default: `aglio`\n\n`params`\n:   Parameters which will be supplied to the `aglio` command. To get the list of possible parameters, run `aglio -h` or check the [official docs](https://github.com/danielgtaylor/aglio#installation--usage).\n\n## Customizing output\n\n### Templates\n\nYou can customize the appearence of the static website build by aglio with [Jade](http://jade-lang.com/) templates. Aglio has two built-in templates:\n\n* `default` \u2014 two-column web-page;\n* `triple` \u2014 three-column web-page.\n\nTo add your own template, follow [the instructions](https://github.com/danielgtaylor/aglio#customizing-layout-templates) in the official docs.\n\nTo specify the template add the `theme-template` field to the `params` option:\n\n```yaml\nbackend_config:\n  aglio:\n    params:\n        theme-template: triple\n```\n\n### Color scheme\n\nYou can customize the color scheme of the website by specifying the color scheme name in `theme-variables` param.\n\nAvailable built-in color schemes:\n\n* `default`,\n* `cyborg`,\n* `flatly`,\n* `slate`,\n* `streak`.\n\nYou can also specify your own scheme in a LESS or CSS file.\n\n```yaml\nbackend_config:\n  aglio:\n    params:\n        theme-variables: flatly\n```\n\n### Stylesheets\n\nFinally, you can provide custom stylesheets in a LESS or CSS file in `theme-style` param:\n\n```yaml\nbackend_config:\n  aglio:\n    params:\n        theme-style: !path my-style.less\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/foliant-docs/foliantcontrib.aglio", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "foliantcontrib.aglio", "package_url": "https://pypi.org/project/foliantcontrib.aglio/", "platform": "any", "project_url": "https://pypi.org/project/foliantcontrib.aglio/", "project_urls": {"Homepage": "https://github.com/foliant-docs/foliantcontrib.aglio"}, "release_url": "https://pypi.org/project/foliantcontrib.aglio/1.0.0/", "requires_dist": ["foliant (>=1.0.8)"], "requires_python": "", "summary": "Aglio backend for Foliant documentation generator.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/foliantcontrib.aglio/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/984471fdf80aa3132e50c255163ee58ebefd7ae9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666f6c69616e74636f6e747269622e61676c696f2e737667\"></a></p>\n<h1>Aglio Backend for Foliant</h1>\n<p>Aglio backend generates API documentation from <a href=\"https://apiblueprint.org/\" rel=\"nofollow\">API Blueprint</a> using <a href=\"https://github.com/danielgtaylor/aglio\" rel=\"nofollow\">aglio renderer</a>.</p>\n<p>This backend operates the <code>site</code> target.</p>\n<blockquote>\n<p>Note, that aglio is designed to render API Blueprint documents. Blueprint syntax is very close to that of Markdown and you may be tempted to use this backend as a general purpose static site generator, which may work in some cases, but is not guaranteed to work in all of them.</p>\n</blockquote>\n<h2>Installation</h2>\n<pre>$ pip install foliantcontrib.aglio\n</pre>\n<h2>Usage</h2>\n<p>To use this backend aglio should be installed in your system. Follow the <a href=\"https://github.com/danielgtaylor/aglio#installation--usage\" rel=\"nofollow\">instruction</a> in aglio repo.</p>\n<p>To test if you've installed aglio properly run the <code>aglio -h</code> command, which should return you a list of options.</p>\n<p>To generate a static website from your Foliant project run the following command:</p>\n<pre>$ foliant make site --with aglio\nParsing config... Done\nMaking site...\nDone\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nResult: My_Awesome_Project.aglio\n</pre>\n<h2>Config</h2>\n<p>You don't have to put anything in the config to use aglio backend. If it's installed, Foliant detects it.</p>\n<p>To customize the output, use options in <code>backend_config.aglio</code> section:</p>\n<pre><span class=\"nt\">backend_config</span><span class=\"p\">:</span>\n  <span class=\"nt\">aglio</span><span class=\"p\">:</span>\n    <span class=\"nt\">aglio_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aglio</span>\n    <span class=\"nt\">params</span><span class=\"p\">:</span>\n        <span class=\"nt\">theme-variables</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">flatly</span>\n        <span class=\"nt\">fullWidth</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">True</span>\n</pre>\n<p><code>aglio_path</code>\n:   Path to the aglio binary. Default: <code>aglio</code></p>\n<p><code>params</code>\n:   Parameters which will be supplied to the <code>aglio</code> command. To get the list of possible parameters, run <code>aglio -h</code> or check the <a href=\"https://github.com/danielgtaylor/aglio#installation--usage\" rel=\"nofollow\">official docs</a>.</p>\n<h2>Customizing output</h2>\n<h3>Templates</h3>\n<p>You can customize the appearence of the static website build by aglio with <a href=\"http://jade-lang.com/\" rel=\"nofollow\">Jade</a> templates. Aglio has two built-in templates:</p>\n<ul>\n<li><code>default</code> \u2014 two-column web-page;</li>\n<li><code>triple</code> \u2014 three-column web-page.</li>\n</ul>\n<p>To add your own template, follow <a href=\"https://github.com/danielgtaylor/aglio#customizing-layout-templates\" rel=\"nofollow\">the instructions</a> in the official docs.</p>\n<p>To specify the template add the <code>theme-template</code> field to the <code>params</code> option:</p>\n<pre><span class=\"nt\">backend_config</span><span class=\"p\">:</span>\n  <span class=\"nt\">aglio</span><span class=\"p\">:</span>\n    <span class=\"nt\">params</span><span class=\"p\">:</span>\n        <span class=\"nt\">theme-template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">triple</span>\n</pre>\n<h3>Color scheme</h3>\n<p>You can customize the color scheme of the website by specifying the color scheme name in <code>theme-variables</code> param.</p>\n<p>Available built-in color schemes:</p>\n<ul>\n<li><code>default</code>,</li>\n<li><code>cyborg</code>,</li>\n<li><code>flatly</code>,</li>\n<li><code>slate</code>,</li>\n<li><code>streak</code>.</li>\n</ul>\n<p>You can also specify your own scheme in a LESS or CSS file.</p>\n<pre><span class=\"nt\">backend_config</span><span class=\"p\">:</span>\n  <span class=\"nt\">aglio</span><span class=\"p\">:</span>\n    <span class=\"nt\">params</span><span class=\"p\">:</span>\n        <span class=\"nt\">theme-variables</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">flatly</span>\n</pre>\n<h3>Stylesheets</h3>\n<p>Finally, you can provide custom stylesheets in a LESS or CSS file in <code>theme-style</code> param:</p>\n<pre><span class=\"nt\">backend_config</span><span class=\"p\">:</span>\n  <span class=\"nt\">aglio</span><span class=\"p\">:</span>\n    <span class=\"nt\">params</span><span class=\"p\">:</span>\n        <span class=\"nt\">theme-style</span><span class=\"p\">:</span> <span class=\"kt\">!path</span> <span class=\"l l-Scalar l-Scalar-Plain\">my-style.less</span>\n</pre>\n\n          </div>"}, "last_serial": 6087042, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c295fcac9893df1285c05002819e9b9a", "sha256": "cb558a11424ec54b253af02585123df00a2747d977e29a912d8464348e69174d"}, "downloads": -1, "filename": "foliantcontrib.aglio-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c295fcac9893df1285c05002819e9b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5334, "upload_time": "2019-10-28T13:38:50", "upload_time_iso_8601": "2019-10-28T13:38:50.703914Z", "url": "https://files.pythonhosted.org/packages/8a/73/676474c1955d2d28cd1c545e8a56c6f792a4abbf3238e0c41af677b872ee/foliantcontrib.aglio-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fee09516a5c5e741e40f980e5277130", "sha256": "70d2ba87ad103176d66756635c690dfe79854d67628aa2fd8ff8c6f2d24af6c9"}, "downloads": -1, "filename": "foliantcontrib.aglio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7fee09516a5c5e741e40f980e5277130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4464, "upload_time": "2019-10-28T13:38:53", "upload_time_iso_8601": "2019-10-28T13:38:53.509672Z", "url": "https://files.pythonhosted.org/packages/0a/f6/87d6892d11e46f9f59a2370664a912689da0a4a422fd2eac5ec0a768b3a6/foliantcontrib.aglio-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c295fcac9893df1285c05002819e9b9a", "sha256": "cb558a11424ec54b253af02585123df00a2747d977e29a912d8464348e69174d"}, "downloads": -1, "filename": "foliantcontrib.aglio-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c295fcac9893df1285c05002819e9b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5334, "upload_time": "2019-10-28T13:38:50", "upload_time_iso_8601": "2019-10-28T13:38:50.703914Z", "url": "https://files.pythonhosted.org/packages/8a/73/676474c1955d2d28cd1c545e8a56c6f792a4abbf3238e0c41af677b872ee/foliantcontrib.aglio-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fee09516a5c5e741e40f980e5277130", "sha256": "70d2ba87ad103176d66756635c690dfe79854d67628aa2fd8ff8c6f2d24af6c9"}, "downloads": -1, "filename": "foliantcontrib.aglio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7fee09516a5c5e741e40f980e5277130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4464, "upload_time": "2019-10-28T13:38:53", "upload_time_iso_8601": "2019-10-28T13:38:53.509672Z", "url": "https://files.pythonhosted.org/packages/0a/f6/87d6892d11e46f9f59a2370664a912689da0a4a422fd2eac5ec0a768b3a6/foliantcontrib.aglio-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:10 2020"}