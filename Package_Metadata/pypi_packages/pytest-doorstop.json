{"info": {"author": "Andrew Simon", "author_email": "asimon1@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Testing"], "description": "# pytest-doorstop\n\n\n![image](https://img.shields.io/pypi/v/pytest-doorstop.svg%0A%20:target:%20https://pypi.org/project/pytest-doorstop%0A%20:alt:%20PyPI%20version)\n\n![image](https://img.shields.io/pypi/pyversions/pytest-doorstop.svg%0A%20:target:%20https://pypi.org/project/pytest-doorstop%0A%20:alt:%20Python%20versions)\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nA pytest plugin for adding test results into doorstop items.\n\n--------\n\n## Table of Contents\n\n- [Features](#features)\n- [Usage](#usage)\n- [Installation](#installation)\n- [Contributing](#contributing)\n- [License](#license)\n\n--------\n\n## Features\n\n-   Save pytest results to corresponding Doorstop items\n-   For each test, writes extended attributes for:\n    - Most recent test result\n    - Commit hash of most recent test run\n    - Commit hash where of the most recent successful test run\n-   Supports PASS, FAIL, SKIP, XFAIL, and XPASS results\n\n| Test Outcome | Outcome Written | Update Last Run Commit? | Update Last Passed Commit? |\n|:------------:|:---------------:|:-----------------------:|:--------------------------:|\n|   PASS (.)   |      passed     |           Yes           |             Yes            |\n|   FAIL (F)   |      failed     |           Yes           |             No             |\n|   SKIP  (S)  |       None      |            No           |             No             |\n|   XPASS (X)  |      xpass      |           Yes           |             Yes            |\n|   XFAIL (x)  |      xfail      |           Yes           |             No             |\n\n--------\n\n## Usage\n\nThe plugin needs to locate the Doorstop items, either by specifying the path to the Doorstop Document or by the item prefix. The results will not be recorded unless the plugin is specifically invoked with a command line argument.\n\nIf your project looks like this:\n\n```\npy-myproject/\n+-- myproject/\n|   +-- __init__.py\n|   \u2514-- myproject.py\n|\n+-- tests/\n|   +-- __init__.py\n|   +-- test_a.py\n|   \u2514-- test_b.py\n|\n+-- doorstop/\n|   +-- .doorstop.yml\n|   +-- TST001.yml\n|   +-- TST002.yml\n|   +-- TST003.yml\n|   +-- TST004.yml\n|   +-- TST005.yml\n|   \u2514-- TST006.yml\n|\n+-- license.txt\n+-- readme.md\n+-- requirements.txt\n+-- setup.py\n```\n\nThen you can invoke the plugin either like this:\n\n```bash\n$ pytest --doorstop_path doorstop\n```\n\nOr like this\n\n```bash\n$ pytest --doorstop_prefix TST\n```\n\nIn case the path is not specified, the plugin will search for a document with the given prefix in the CWD and any immediate child directories. Giving both arguments may be helpful for projects with complex directory structures.\n\nThe first Doorstop item file which contains the the test function name will have the extended attributes added / updated according to the results of the test. For example:\n\n```YAML\nactive: true\ncustom: 1\nderived: false\nheader: ''\nlevel: 4\nlinks:\n- REQ046: m9tMd0JM8O8idHTViqyYy1OL3dLiVY69bT63jNAGxPs=\nnormative: true\nref: test_yaml_encoding\nreviewed: TIwopA6cvyjBMF17bB6p_RUNA7clNMaaEhXGYlAdpdk=\ntest_commit_last_passed: d670460b4b4aece5915caf5c68d12f560a9fe3e4\ntest_commit_latest: d670460b4b4aece5915caf5c68d12f560a9fe3e4\ntest_result_latest: passed\ntext: |\n  Test that inputs can be loaded from a UTF-8 encoded YAML file.\n```\n\n--------\n\n## Installation\n\nYou can install \"pytest-doorstop\" via\n[pip](https://pypi.org/project/pip/) from\n[PyPI](https://pypi.org/project):\n\n```bash\n$ pip install pytest-doorstop\n```\n\n### Dependencies\n\n-   pytest\n-   Doorstop\n-   PyYAML\n-   gitpython\n\n--------\n\n## Contributing\n\nContributions are very welcome, both in Issues and in Pull Requests. Tests can be run with\n[tox](https://tox.readthedocs.io/en/latest/).\n\n```bash\n$ tox\n```\n\nIf you encounter any problems, please [file an\nissue](https://github.com/scuriosity/pytest-doorstop/issues) along with\na detailed description.\n\n--------\n\n## License\n\nDistributed under the terms of the [GNU GPL\nv3.0](http://www.gnu.org/licenses/gpl-3.0.txt) license,\n\"pytest-doorstop\" is free and open source software\n\n--------\n\nThis [pytest](https://github.com/pytest-dev/pytest) plugin was generated\nwith [Cookiecutter](https://github.com/audreyr/cookiecutter) along with\n[@hackebrot](https://github.com/hackebrot)'s\n[cookiecutter-pytest-plugin](https://github.com/pytest-dev/cookiecutter-pytest-plugin)\ntemplate.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scuriosity/pytest-doorstop", "keywords": "", "license": "GNU GPL v3.0", "maintainer": "Andrew Simon", "maintainer_email": "asimon1@protonmail.com", "name": "pytest-doorstop", "package_url": "https://pypi.org/project/pytest-doorstop/", "platform": "", "project_url": "https://pypi.org/project/pytest-doorstop/", "project_urls": {"Homepage": "https://github.com/scuriosity/pytest-doorstop"}, "release_url": "https://pypi.org/project/pytest-doorstop/0.1.0/", "requires_dist": ["pytest (>=3.5.0)", "doorstop (>=2)", "PyYAML (>=5gitpython>=3)"], "requires_python": ">=3.7", "summary": "A pytest plugin for adding test results into doorstop items.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytest-doorstop</h1>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51bc2ddf0fc8bbdeb9baa8e6acd4a332ed84793c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d646f6f7273746f702e7376672530412532303a7461726765743a25323068747470733a2f2f707970692e6f72672f70726f6a6563742f7079746573742d646f6f7273746f702530412532303a616c743a2532305079504925323076657273696f6e\"></p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0b4d359ce1543d223aaf3d262af5ad02105a12b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d646f6f7273746f702e7376672530412532303a7461726765743a25323068747470733a2f2f707970692e6f72672f70726f6a6563742f7079746573742d646f6f7273746f702530412532303a616c743a253230507974686f6e25323076657273696f6e73\"></p>\n<p><a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>A pytest plugin for adding test results into doorstop items.</p>\n<hr>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<hr>\n<h2>Features</h2>\n<ul>\n<li>Save pytest results to corresponding Doorstop items</li>\n<li>For each test, writes extended attributes for:\n<ul>\n<li>Most recent test result</li>\n<li>Commit hash of most recent test run</li>\n<li>Commit hash where of the most recent successful test run</li>\n</ul>\n</li>\n<li>Supports PASS, FAIL, SKIP, XFAIL, and XPASS results</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Test Outcome</th>\n<th align=\"center\">Outcome Written</th>\n<th align=\"center\">Update Last Run Commit?</th>\n<th align=\"center\">Update Last Passed Commit?</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">PASS (.)</td>\n<td align=\"center\">passed</td>\n<td align=\"center\">Yes</td>\n<td align=\"center\">Yes</td>\n</tr>\n<tr>\n<td align=\"center\">FAIL (F)</td>\n<td align=\"center\">failed</td>\n<td align=\"center\">Yes</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\">SKIP  (S)</td>\n<td align=\"center\">None</td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\">XPASS (X)</td>\n<td align=\"center\">xpass</td>\n<td align=\"center\">Yes</td>\n<td align=\"center\">Yes</td>\n</tr>\n<tr>\n<td align=\"center\">XFAIL (x)</td>\n<td align=\"center\">xfail</td>\n<td align=\"center\">Yes</td>\n<td align=\"center\">No</td>\n</tr></tbody></table>\n<hr>\n<h2>Usage</h2>\n<p>The plugin needs to locate the Doorstop items, either by specifying the path to the Doorstop Document or by the item prefix. The results will not be recorded unless the plugin is specifically invoked with a command line argument.</p>\n<p>If your project looks like this:</p>\n<pre><code>py-myproject/\n+-- myproject/\n|   +-- __init__.py\n|   \u2514-- myproject.py\n|\n+-- tests/\n|   +-- __init__.py\n|   +-- test_a.py\n|   \u2514-- test_b.py\n|\n+-- doorstop/\n|   +-- .doorstop.yml\n|   +-- TST001.yml\n|   +-- TST002.yml\n|   +-- TST003.yml\n|   +-- TST004.yml\n|   +-- TST005.yml\n|   \u2514-- TST006.yml\n|\n+-- license.txt\n+-- readme.md\n+-- requirements.txt\n+-- setup.py\n</code></pre>\n<p>Then you can invoke the plugin either like this:</p>\n<pre>$ pytest --doorstop_path doorstop\n</pre>\n<p>Or like this</p>\n<pre>$ pytest --doorstop_prefix TST\n</pre>\n<p>In case the path is not specified, the plugin will search for a document with the given prefix in the CWD and any immediate child directories. Giving both arguments may be helpful for projects with complex directory structures.</p>\n<p>The first Doorstop item file which contains the the test function name will have the extended attributes added / updated according to the results of the test. For example:</p>\n<pre><span class=\"nt\">active</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"nt\">custom</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"nt\">derived</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n<span class=\"nt\">header</span><span class=\"p\">:</span> <span class=\"s\">''</span>\n<span class=\"nt\">level</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">4</span>\n<span class=\"nt\">links</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">REQ046</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">m9tMd0JM8O8idHTViqyYy1OL3dLiVY69bT63jNAGxPs=</span>\n<span class=\"nt\">normative</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"nt\">ref</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test_yaml_encoding</span>\n<span class=\"nt\">reviewed</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">TIwopA6cvyjBMF17bB6p_RUNA7clNMaaEhXGYlAdpdk=</span>\n<span class=\"nt\">test_commit_last_passed</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">d670460b4b4aece5915caf5c68d12f560a9fe3e4</span>\n<span class=\"nt\">test_commit_latest</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">d670460b4b4aece5915caf5c68d12f560a9fe3e4</span>\n<span class=\"nt\">test_result_latest</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">passed</span>\n<span class=\"nt\">text</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n  <span class=\"no\">Test that inputs can be loaded from a UTF-8 encoded YAML file.</span>\n</pre>\n<hr>\n<h2>Installation</h2>\n<p>You can install \"pytest-doorstop\" via\n<a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a> from\n<a href=\"https://pypi.org/project\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pytest-doorstop\n</pre>\n<h3>Dependencies</h3>\n<ul>\n<li>pytest</li>\n<li>Doorstop</li>\n<li>PyYAML</li>\n<li>gitpython</li>\n</ul>\n<hr>\n<h2>Contributing</h2>\n<p>Contributions are very welcome, both in Issues and in Pull Requests. Tests can be run with\n<a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>.</p>\n<pre>$ tox\n</pre>\n<p>If you encounter any problems, please <a href=\"https://github.com/scuriosity/pytest-doorstop/issues\" rel=\"nofollow\">file an\nissue</a> along with\na detailed description.</p>\n<hr>\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\" rel=\"nofollow\">GNU GPL\nv3.0</a> license,\n\"pytest-doorstop\" is free and open source software</p>\n<hr>\n<p>This <a href=\"https://github.com/pytest-dev/pytest\" rel=\"nofollow\">pytest</a> plugin was generated\nwith <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> along with\n<a href=\"https://github.com/hackebrot\" rel=\"nofollow\">@hackebrot</a>'s\n<a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=\"nofollow\">cookiecutter-pytest-plugin</a>\ntemplate.</p>\n\n          </div>"}, "last_serial": 7164619, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d6079cd9f5ab602ad1b049b3e80b458b", "sha256": "507ffd0833f94a3a51618736cfb35594caa178d328059cf4816fe600e45c56cc"}, "downloads": -1, "filename": "pytest_doorstop-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6079cd9f5ab602ad1b049b3e80b458b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17547, "upload_time": "2020-05-04T14:01:06", "upload_time_iso_8601": "2020-05-04T14:01:06.264829Z", "url": "https://files.pythonhosted.org/packages/4c/38/97677ba86a29d10303977488596a72595adaabce17327a59c5b98533a676/pytest_doorstop-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe803f896f9633ba7c10b0d4185356f2", "sha256": "b4267fdda4881ceaf92d1173cf90894864922e679e930739eaaa324e92481e4f"}, "downloads": -1, "filename": "pytest-doorstop-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe803f896f9633ba7c10b0d4185356f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17788, "upload_time": "2020-05-04T14:01:08", "upload_time_iso_8601": "2020-05-04T14:01:08.290304Z", "url": "https://files.pythonhosted.org/packages/64/36/3dc508d71e6079fee6e6cf75ec27c4bb184c0fce3c7a51c0072ae2308f86/pytest-doorstop-0.1.0.tar.gz", "yanked": false}], "0.1.0b0": [{"comment_text": "", "digests": {"md5": "53e8883f913c5152ffeb0853e7f9f66d", "sha256": "02059b68c7d68ad4ae816ecea50ffb419458f28c0ecaf109f7281a8b65409817"}, "downloads": -1, "filename": "pytest_doorstop-0.1.0b0-py3-none-any.whl", "has_sig": false, "md5_digest": "53e8883f913c5152ffeb0853e7f9f66d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17574, "upload_time": "2020-05-04T14:00:37", "upload_time_iso_8601": "2020-05-04T14:00:37.464655Z", "url": "https://files.pythonhosted.org/packages/cd/82/828587a5f067ec2c76f318eb1a894e94d4390fd21a1cbeb902b8f086070a/pytest_doorstop-0.1.0b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4df28372cc9390116369c428ff13135c", "sha256": "231a315dd566466fe17a08f9ba2a261a70f58edbb3dfaf60fb94a2ae7d52d547"}, "downloads": -1, "filename": "pytest-doorstop-0.1.0b0.tar.gz", "has_sig": false, "md5_digest": "4df28372cc9390116369c428ff13135c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17795, "upload_time": "2020-05-04T14:00:39", "upload_time_iso_8601": "2020-05-04T14:00:39.537669Z", "url": "https://files.pythonhosted.org/packages/db/db/489248fee059b526d1caf00e6ccffc7d8bee9b465b56af87d1f9d3861fbc/pytest-doorstop-0.1.0b0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6079cd9f5ab602ad1b049b3e80b458b", "sha256": "507ffd0833f94a3a51618736cfb35594caa178d328059cf4816fe600e45c56cc"}, "downloads": -1, "filename": "pytest_doorstop-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6079cd9f5ab602ad1b049b3e80b458b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17547, "upload_time": "2020-05-04T14:01:06", "upload_time_iso_8601": "2020-05-04T14:01:06.264829Z", "url": "https://files.pythonhosted.org/packages/4c/38/97677ba86a29d10303977488596a72595adaabce17327a59c5b98533a676/pytest_doorstop-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe803f896f9633ba7c10b0d4185356f2", "sha256": "b4267fdda4881ceaf92d1173cf90894864922e679e930739eaaa324e92481e4f"}, "downloads": -1, "filename": "pytest-doorstop-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe803f896f9633ba7c10b0d4185356f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17788, "upload_time": "2020-05-04T14:01:08", "upload_time_iso_8601": "2020-05-04T14:01:08.290304Z", "url": "https://files.pythonhosted.org/packages/64/36/3dc508d71e6079fee6e6cf75ec27c4bb184c0fce3c7a51c0072ae2308f86/pytest-doorstop-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:12 2020"}