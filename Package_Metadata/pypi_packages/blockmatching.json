{"info": {"author": "Eduardo S. Pereira", "author_email": "pereira.somoza@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Block Matching Algorithm\n\n\n## Block Matching\n\nAccording to CUEVAS et al. (2013) in a block matching (BM) approach:\n\n    \"...image frames in a video sequence are divided into blocks. For each\n    block in the current frame, the best matching block is identified inside a\n    region of the previous frame, aiming to minimize the sum of absolute\n    differences...\"\n\nFrom the work of  Perez et al. (2010):\n\n    \"...pixel-specific motion vectors are determined by calculating the RMSE of\n     the difference between two consecutive Kt*grids surrounding the considered\n     pixel when the second grid is advected in the direction of a motion vector.\n     The selected motion vector corresponds to the lowest RMSE. This process is\n     repeated for each image pixel, and each pixel is assigned an individual\n     motion vector. Future images are obtained by displacing the current image\n     pixels in the direction of their motion vector. Future images are\n     subsequently smoothed by averaging each pixel with its 8 surrounding\n     neighbors...\"\n\nFor example, considering a image, in  t0 + k dt, with 9x9 pixels and a block\ngrid with 3x3 pixels. The image bellow  it is assumed that the central pixel C\nis surrounding by pixels A.\n\n```\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * A A A * * *\n* * * A C A * * *\n* * * A A A * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n```\n\nNow, for a image in time t0 + (k+1)dt, the value of block with the pixel C,\nin the image in t0 +kdt, is compared with values of piexls in the 9x9 window\nof the image in t0+(k+1)dt.\n\nThe most probable direction of the moviment of the pixel C, at t0 + (k+1)dt,\nis given by the position of the corresponding block with the lowest\nsquare mean error -SME (subtraction of the 3x3 subgrid) (e.g. KHAWASE et al. (2017)).\n\nIn the following example, the 3x3 block was in the initial position i=4, j=4.\nThe new initial subblock with lowest  is in i=7, j=7.\n\nInitial position of 3x3 block in t0 + kdt:\n\n```\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * A A A * * *\n* * * A C A * * *\n* * * A A A * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n```\nThe new position of 3x3 block in t0 + (i+1)dt:\n\n```\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * A A A\n* * * * * * A C A\n* * * * * * A A A\n```\n\nThe size of search window depend of the expected velocity of the block. For\nslow moviment, a window with size of 3  times can be considered.\n\n\n## Background subtraction algorithm.\n\nThe background and foreground subtraction algorithm is based on the work of\nYi and Fan (2010):\n\n  \"...based on running average background modeling and temporal difference\n   method.Firstly, we utilize the running average method to dynamically\n   updating the background image. Through using background subtraction, we get\n   a foreground image. Secondly, we use temporal difference method to get a\n   difference image...\"\n\n## License\n\nDeveloped by: E. S. Pereira.\ne-mail: pereira.somoza@gmail.com\n\nCopyright [2019] [E. S. Pereira]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n## Bibliography\nCUEVAS, Erik et al. Block matching algorithm for motion\nestimation based on Artificial Bee Colony (ABC).\nApplied Soft Computing, v. 13, n. 6, p. 3047-3059, 2013.\n\nKHAWASE, Sonam T. et al. An Overview of Block Matching\nAlgorithms for Motion Vector Estimation. In: Proceedings of the Second\nInternational Conference on Research in Intelligent and Computing in\nEngineering, str. 2017. p. 217-222.\n\nPerez, R. et al. Validation of short and medium term\noperational solar radiation forecasts in the US. Solar Energy,\n84. 12. 2161-2172. 2010.\n\nYi, Zheng, and Fan Liangzhong. Moving object detection\nbased on running average background and temporal difference. 2010\nIEEE International Conference on Intelligent Systems and\nKnowledge Engineering. IEEE, 2010.\n=======\n**Edit a file, create a new file, and clone from Bitbucket in under 2 minutes**\n\nWhen you're done, you can delete the content in this README and update the file with details for others getting started with your repository.\n\n*We recommend that you open this README in another tab as you perform the tasks below. You can [watch our video](https://youtu.be/0ocf7u76WSo) for a full demo of all the steps in this tutorial. Open the video in a new tab to avoid leaving Bitbucket.*\n\n---\n\n## Edit a file\n\nYou\u2019ll start by editing this README file to learn how to edit a file in Bitbucket.\n\n1. Click **Source** on the left side.\n2. Click the README.md link from the list of files.\n3. Click the **Edit** button.\n4. Delete the following text: *Delete this line to make a change to the README from Bitbucket.*\n5. After making your change, click **Commit** and then **Commit** again in the dialog. The commit page will open and you\u2019ll see the change you just made.\n6. Go back to the **Source** page.\n\n---\n\n## Create a file\n\nNext, you\u2019ll add a new file to this repository.\n\n1. Click the **New file** button at the top of the **Source** page.\n2. Give the file a filename of **contributors.txt**.Art. 19. Fica suspensa a exigibilidade do recolhimento do FGTS pelos empregadores, referente\u00e0s compet\u00eancias de mar\u00e7o,  abril e maio de 2020, com vencimento em abril, maio e junho de 2020,respectivamente\n3. Enter your name in the empty file space.\n4. Click **Commit** and then **Commit** again in the dialog.\n5. Go back to the **Source** page.\n\nBefore you move on, go ahead and explore the repository. You've already seen the **Source** page, but check out the **Commits**, **Branches**, and **Settings** pages.\n\n---\n\n## Clone a repository\n\nUse these steps to clone from SourceTree, our client for using the repository command-line free. Cloning allows you to work on your files locally. If you don't yet have SourceTree, [download and install first](https://www.sourcetreeapp.com/). If you prefer to clone from the command line, see [Clone a repository](https://confluence.atlassian.com/x/4whODQ).\n\n1. You\u2019ll see the clone button under the **Source** heading. Click that button.\n2. Now click **Check out in SourceTree**. You may need to create a SourceTree account or log in.\n3. When you see the **Clone New** dialog in SourceTree, update the destination path and name if you\u2019d like to and then click **Clone**.\n4. Open the directory you just created to see your repository\u2019s files.\n\nNow that you're more familiar with your Bitbucket repository, go ahead and add a new file locally. You can [push your change back to Bitbucket with SourceTree](https://confluence.atlassian.com/x/iqyBMg), or you can [add, commit,](https://confluence.atlassian.com/x/8QhODQ) and [push from the command line](https://confluence.atlassian.com/x/NQ0zDQ).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/duducosmos/blockmatching", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "blockmatching", "package_url": "https://pypi.org/project/blockmatching/", "platform": "", "project_url": "https://pypi.org/project/blockmatching/", "project_urls": {"Homepage": "https://github.com/duducosmos/blockmatching"}, "release_url": "https://pypi.org/project/blockmatching/1.0.0/", "requires_dist": ["numpy", "numba", "opencv-python", "scipy", "Pillow", "networkx", "sk-video"], "requires_python": "", "summary": "Block Matching Algorithm", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Block Matching Algorithm</h1>\n<h2>Block Matching</h2>\n<p>According to CUEVAS et al. (2013) in a block matching (BM) approach:</p>\n<pre><code>\"...image frames in a video sequence are divided into blocks. For each\nblock in the current frame, the best matching block is identified inside a\nregion of the previous frame, aiming to minimize the sum of absolute\ndifferences...\"\n</code></pre>\n<p>From the work of  Perez et al. (2010):</p>\n<pre><code>\"...pixel-specific motion vectors are determined by calculating the RMSE of\n the difference between two consecutive Kt*grids surrounding the considered\n pixel when the second grid is advected in the direction of a motion vector.\n The selected motion vector corresponds to the lowest RMSE. This process is\n repeated for each image pixel, and each pixel is assigned an individual\n motion vector. Future images are obtained by displacing the current image\n pixels in the direction of their motion vector. Future images are\n subsequently smoothed by averaging each pixel with its 8 surrounding\n neighbors...\"\n</code></pre>\n<p>For example, considering a image, in  t0 + k dt, with 9x9 pixels and a block\ngrid with 3x3 pixels. The image bellow  it is assumed that the central pixel C\nis surrounding by pixels A.</p>\n<pre><code>* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * A A A * * *\n* * * A C A * * *\n* * * A A A * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n</code></pre>\n<p>Now, for a image in time t0 + (k+1)dt, the value of block with the pixel C,\nin the image in t0 +kdt, is compared with values of piexls in the 9x9 window\nof the image in t0+(k+1)dt.</p>\n<p>The most probable direction of the moviment of the pixel C, at t0 + (k+1)dt,\nis given by the position of the corresponding block with the lowest\nsquare mean error -SME (subtraction of the 3x3 subgrid) (e.g. KHAWASE et al. (2017)).</p>\n<p>In the following example, the 3x3 block was in the initial position i=4, j=4.\nThe new initial subblock with lowest  is in i=7, j=7.</p>\n<p>Initial position of 3x3 block in t0 + kdt:</p>\n<pre><code>* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * A A A * * *\n* * * A C A * * *\n* * * A A A * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n</code></pre>\n<p>The new position of 3x3 block in t0 + (i+1)dt:</p>\n<pre><code>* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * * * *\n* * * * * * A A A\n* * * * * * A C A\n* * * * * * A A A\n</code></pre>\n<p>The size of search window depend of the expected velocity of the block. For\nslow moviment, a window with size of 3  times can be considered.</p>\n<h2>Background subtraction algorithm.</h2>\n<p>The background and foreground subtraction algorithm is based on the work of\nYi and Fan (2010):</p>\n<p>\"...based on running average background modeling and temporal difference\nmethod.Firstly, we utilize the running average method to dynamically\nupdating the background image. Through using background subtraction, we get\na foreground image. Secondly, we use temporal difference method to get a\ndifference image...\"</p>\n<h2>License</h2>\n<p>Developed by: E. S. Pereira.\ne-mail: <a href=\"mailto:pereira.somoza@gmail.com\">pereira.somoza@gmail.com</a></p>\n<p>Copyright [2019] [E. S. Pereira]</p>\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n<h2>Bibliography</h2>\n<p>CUEVAS, Erik et al. Block matching algorithm for motion\nestimation based on Artificial Bee Colony (ABC).\nApplied Soft Computing, v. 13, n. 6, p. 3047-3059, 2013.</p>\n<p>KHAWASE, Sonam T. et al. An Overview of Block Matching\nAlgorithms for Motion Vector Estimation. In: Proceedings of the Second\nInternational Conference on Research in Intelligent and Computing in\nEngineering, str. 2017. p. 217-222.</p>\n<p>Perez, R. et al. Validation of short and medium term\noperational solar radiation forecasts in the US. Solar Energy,\n84. 12. 2161-2172. 2010.</p>\n<h1>Yi, Zheng, and Fan Liangzhong. Moving object detection\nbased on running average background and temporal difference. 2010\nIEEE International Conference on Intelligent Systems and\nKnowledge Engineering. IEEE, 2010.</h1>\n<p><strong>Edit a file, create a new file, and clone from Bitbucket in under 2 minutes</strong></p>\n<p>When you're done, you can delete the content in this README and update the file with details for others getting started with your repository.</p>\n<p><em>We recommend that you open this README in another tab as you perform the tasks below. You can <a href=\"https://youtu.be/0ocf7u76WSo\" rel=\"nofollow\">watch our video</a> for a full demo of all the steps in this tutorial. Open the video in a new tab to avoid leaving Bitbucket.</em></p>\n<hr>\n<h2>Edit a file</h2>\n<p>You\u2019ll start by editing this README file to learn how to edit a file in Bitbucket.</p>\n<ol>\n<li>Click <strong>Source</strong> on the left side.</li>\n<li>Click the README.md link from the list of files.</li>\n<li>Click the <strong>Edit</strong> button.</li>\n<li>Delete the following text: <em>Delete this line to make a change to the README from Bitbucket.</em></li>\n<li>After making your change, click <strong>Commit</strong> and then <strong>Commit</strong> again in the dialog. The commit page will open and you\u2019ll see the change you just made.</li>\n<li>Go back to the <strong>Source</strong> page.</li>\n</ol>\n<hr>\n<h2>Create a file</h2>\n<p>Next, you\u2019ll add a new file to this repository.</p>\n<ol>\n<li>Click the <strong>New file</strong> button at the top of the <strong>Source</strong> page.</li>\n<li>Give the file a filename of <strong>contributors.txt</strong>.Art. 19. Fica suspensa a exigibilidade do recolhimento do FGTS pelos empregadores, referente\u00e0s compet\u00eancias de mar\u00e7o,  abril e maio de 2020, com vencimento em abril, maio e junho de 2020,respectivamente</li>\n<li>Enter your name in the empty file space.</li>\n<li>Click <strong>Commit</strong> and then <strong>Commit</strong> again in the dialog.</li>\n<li>Go back to the <strong>Source</strong> page.</li>\n</ol>\n<p>Before you move on, go ahead and explore the repository. You've already seen the <strong>Source</strong> page, but check out the <strong>Commits</strong>, <strong>Branches</strong>, and <strong>Settings</strong> pages.</p>\n<hr>\n<h2>Clone a repository</h2>\n<p>Use these steps to clone from SourceTree, our client for using the repository command-line free. Cloning allows you to work on your files locally. If you don't yet have SourceTree, <a href=\"https://www.sourcetreeapp.com/\" rel=\"nofollow\">download and install first</a>. If you prefer to clone from the command line, see <a href=\"https://confluence.atlassian.com/x/4whODQ\" rel=\"nofollow\">Clone a repository</a>.</p>\n<ol>\n<li>You\u2019ll see the clone button under the <strong>Source</strong> heading. Click that button.</li>\n<li>Now click <strong>Check out in SourceTree</strong>. You may need to create a SourceTree account or log in.</li>\n<li>When you see the <strong>Clone New</strong> dialog in SourceTree, update the destination path and name if you\u2019d like to and then click <strong>Clone</strong>.</li>\n<li>Open the directory you just created to see your repository\u2019s files.</li>\n</ol>\n<p>Now that you're more familiar with your Bitbucket repository, go ahead and add a new file locally. You can <a href=\"https://confluence.atlassian.com/x/iqyBMg\" rel=\"nofollow\">push your change back to Bitbucket with SourceTree</a>, or you can <a href=\"https://confluence.atlassian.com/x/8QhODQ\" rel=\"nofollow\">add, commit,</a> and <a href=\"https://confluence.atlassian.com/x/NQ0zDQ\" rel=\"nofollow\">push from the command line</a>.</p>\n\n          </div>"}, "last_serial": 6867425, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1bdc73418e20d764fcf9582f32a1c17e", "sha256": "c894da8c0549d691b6d59a8382b0530b8b0ff6b86c6a3f303112f75587f57906"}, "downloads": -1, "filename": "blockmatching-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1bdc73418e20d764fcf9582f32a1c17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20879, "upload_time": "2020-03-23T18:21:21", "upload_time_iso_8601": "2020-03-23T18:21:21.437032Z", "url": "https://files.pythonhosted.org/packages/17/80/160878457c629074affdd21c1b593ff9f6cb23ca9aed001a29943fcbf464/blockmatching-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67761a3d75c73f365386bd6fffe56b47", "sha256": "216245eab0be4aaf1d1eeb4dfe3da5447b615a43b002ed5255797c4c5a8cff3d"}, "downloads": -1, "filename": "blockmatching-1.0.0.tar.gz", "has_sig": false, "md5_digest": "67761a3d75c73f365386bd6fffe56b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14997, "upload_time": "2020-03-23T18:21:23", "upload_time_iso_8601": "2020-03-23T18:21:23.997447Z", "url": "https://files.pythonhosted.org/packages/cc/25/a5ca2a2802190fd8322d12d3b1c27df29e91a30731b993772e1d73d1efc4/blockmatching-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1bdc73418e20d764fcf9582f32a1c17e", "sha256": "c894da8c0549d691b6d59a8382b0530b8b0ff6b86c6a3f303112f75587f57906"}, "downloads": -1, "filename": "blockmatching-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1bdc73418e20d764fcf9582f32a1c17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20879, "upload_time": "2020-03-23T18:21:21", "upload_time_iso_8601": "2020-03-23T18:21:21.437032Z", "url": "https://files.pythonhosted.org/packages/17/80/160878457c629074affdd21c1b593ff9f6cb23ca9aed001a29943fcbf464/blockmatching-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67761a3d75c73f365386bd6fffe56b47", "sha256": "216245eab0be4aaf1d1eeb4dfe3da5447b615a43b002ed5255797c4c5a8cff3d"}, "downloads": -1, "filename": "blockmatching-1.0.0.tar.gz", "has_sig": false, "md5_digest": "67761a3d75c73f365386bd6fffe56b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14997, "upload_time": "2020-03-23T18:21:23", "upload_time_iso_8601": "2020-03-23T18:21:23.997447Z", "url": "https://files.pythonhosted.org/packages/cc/25/a5ca2a2802190fd8322d12d3b1c27df29e91a30731b993772e1d73d1efc4/blockmatching-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:02 2020"}