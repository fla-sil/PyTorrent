{"info": {"author": "Jos\u00e9 Antonio Perdiguero L\u00f3pez", "author_email": "perdy.hh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "************\nHealth Check\n************\n\n:Version: 3.4.1\n:Status: Production/Stable\n:Author: Jos\u00e9 Antonio Perdiguero L\u00f3pez\n\nHealth Check is an application that provides an API to check the health status of some parts and some utilities like\nping requests. This application can works as standalone or included in a Django project.\n\nThis application defines the following terms:\n\nProvider\n    Function that does a quick check or stats gathering and returns a json serializable value, such as dict, list or\n    simple types.\n\nResource\n    A service or functionality whose status needs to be known.\n\nSaid this, providers are grouped by resources. So you can use resource as a simple group, or as a component of your\napplication. E.g: A resource that represents your database with some checks over it, such as simple ping, check if your\napplication tables are created, if it contains data...\n\nQuick start\n===========\n\n1. Install this package using pip:\n\n.. code:: bash\n\n    pip install health-check\n\n2. *(Django)* Add *PROJECT_PATH* to your django settings module.\n3. *(Django)* Add *health_check* to your **INSTALLED_APPS** settings like this:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'health_check',\n    )\n\n4. *(Django)* Add **Health Check** urls to your project urls:\n\n.. code:: python\n\n    urlpatterns = [\n        ...\n        url(r'^health/', include('health_check.urls')),\n    ]\n\nCheck Providers\n===============\nHealth Check provides a mechanism to add new custom check functions through **check providers**. Each check provider\nwill generate a new API method with an URL that uses the name of the provider. These functions must accept \\*args and\n\\*\\*kwargs and will return a JSON-serializable object through json.dumps() method, for example a ping function:\n\n.. code:: python\n\n    def ping(*args, **kwargs):\n        return {'pong': True}\n\nBy default **Health Check** provides the follow checks:\n\nPing\n    A ping to application.\n\n \u00a0  URL: `/api/health/ping`\n\nDatabases\n    Check if databases are running.\n\n \u00a0  URL: `/api/health/databases`\n\nCaches\n    Check if caches are running.\n\n \u00a0  URL: `/api/health/caches`\n\nCelery\n    Check if celery workers defined in settings are running.\n\n    URL: `/api/health/celery`\n\nDatabases stats\n    Show stats for all databases.\n\n    URL: `/api/stats/databases`\n\nCelery stats\n    Show celery worker stats.\n\n    URL: `/api/stats/celery`\n\nCode\n    Source code stats such as current active branch, last commit, if debug is active...\n\n    URL: `/api/stats/code`\n\nRun providers\n=============\nThe main goal of this application is to provide an easy way to run checks over defined resources, so there are different\nways to do it.\n\nCommand\n-------\nHealth Check provides a command to query current health of a resource. This command can be call as:\n\n.. code:: bash\n\n    health_check {resource} [options]\n\nCall a specific provider from a resource:\n\n.. code:: bash\n\n    health_check {resource} {provider} [options]\n\nTo get current status of health checks, and exit with an error if some check is failing:\n\n.. code:: bash\n\n    health_check health -e\n\nEach resource has its own set of options that can be displayed through command help:\n\n.. code:: bash\n\n    health_check -h\n\nCode\n----\nTo run all providers of a specific resource:\n\n.. code:: python\n\n    from health_check.providers import Resource\n\n    resource = Resource('resource_name')\n    providers_result = resource()\n\nA single provider can be executed:\n\n.. code:: python\n\n    from health_check.providers import Provider\n\n    provider = Provider('path.to.provider_function')\n    provider_result = provider()\n\nDjango\n======\nHealth check adds some useful behavior to your Django application.\n\nHealth Check website\n--------------------\nA website that shows Health Check data is available in this application. It's possible access to follow URLs to get a\ndetailed view of your system health status. Those three pages will show results of providers configured (as explained in\nsettings section)::\n\n    http://www.website.com/health/\n    http://www.website.com/health/health/\n    http://www.website.com/health/stats/\n\nHealth Check API\n----------------\nHealth Check API can be used as a standalone application including only their urls:\n\n.. code:: python\n\n    urlpatterns = [\n        ...\n        url(r'^health/', include('health.api.urls')),\n    ]\n\nThis API have a single url for each provider, that are grouped by resources.\nEach provider can be queried alone, returning his current health status::\n\n    http://your_domain/health/api/health/ping\n\nAlso there is a resource view that will return the health status of all providers::\n\n    http://your_domain/health/api/health\n\nFor last, there is a root view that will return the health status of all providers from all resources::\n\n    http://your_domain/health/api\n\nDjango management commands\n--------------------------\nPrevious command can be used as Django management command:\n\n.. code:: bash\n\n    python manage.py health_check {resource} {provider} [options]\n\nSettings\n========\nHealth check settings can be added directly to Django settings module or create an specific module for them. If a\ncustom module (or class) is used, you must specify it through **HEALTH_CHECK_SETTINGS** environment variable.\n\nTo use a custom module for settings is necessary to specify the full path: *project.package.settings*. The same applies\nto objects: *project.package.settings:SettingsObject*.\n\nhealth_check_providers\n----------------------\nList of additional check providers. Each provider consists in a tuple of name, function complete path, args and kwargs.\n\nExample:\n\n.. code:: python\n\n    health_check_providers = {\n        'resource': (\n            ('test', 'application.module.test_function', [1, 2], {'foo': 'bar'}),\n        )\n    }\n\nDefault:\n\n.. code:: python\n\n    providers = getattr(settings, 'health_check_providers', {\n        'health': (\n            ('ping', 'health_check.providers.health.ping', None, None),\n            ('databases', 'health_check.providers.django.health.databases', None, None),\n            ('caches', 'health_check.providers.django.health.caches', None, None),\n        ),\n        'stats': (\n            ('databases', 'health_check.providers.django.stats.databases', None, None),\n            ('code', 'health_check.providers.stats.code', None, None),\n        )\n    }\n\nhealth_check_celery_workers\n---------------------------\nList of hostname from celery workers to be checked. If any worker is defined, two additional providers listed previously\nwill be added to default set.\n\nDefault:\n\n.. code:: python\n\n    health_check_celery_workers = ()\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/PeRDy/health-check", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PeRDy/health-check", "keywords": "python django database cache celery health check", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "health-check", "package_url": "https://pypi.org/project/health-check/", "platform": "", "project_url": "https://pypi.org/project/health-check/", "project_urls": {"Download": "https://github.com/PeRDy/health-check", "Homepage": "https://github.com/PeRDy/health-check"}, "release_url": "https://pypi.org/project/health-check/3.4.1/", "requires_dist": ["GitPython (>=1.0)", "pyyaml (>=3.12)", "clinner (>=1.2)", "setuptools; extra == 'dev'", "pip; extra == 'dev'", "wheel; extra == 'dev'", "twine; extra == 'dev'", "bumpversion; extra == 'dev'", "pre-commit; extra == 'dev'", "GitPython (>=1.0); extra == 'dev'", "pyyaml (>=3.12); extra == 'dev'", "clinner (>=1.2); extra == 'dev'", "coverage; extra == 'dev'", "pytest; extra == 'dev'", "pytest-cov; extra == 'dev'", "prospector; extra == 'dev'", "tox; extra == 'dev'", "sphinx; extra == 'dev'", "sphinx-rtd-theme; extra == 'dev'"], "requires_python": "", "summary": "Health Check is an application that provides an API to check the health health_check of some parts and some utilities like ping requests. This application can works as standalone or included in a Django project.", "version": "3.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Version:</th>\n<td>3.4.1</td></tr>\n<tr><th>Status:</th>\n<td>Production/Stable</td></tr>\n<tr><th>Author:</th>\n<td>Jos\u00e9 Antonio Perdiguero L\u00f3pez</td></tr>\n</tbody>\n</table>\n<p>Health Check is an application that provides an API to check the health status of some parts and some utilities like\nping requests. This application can works as standalone or included in a Django project.</p>\n<p>This application defines the following terms:</p>\n<dl>\n<dt>Provider</dt>\n<dd>Function that does a quick check or stats gathering and returns a json serializable value, such as dict, list or\nsimple types.</dd>\n<dt>Resource</dt>\n<dd>A service or functionality whose status needs to be known.</dd>\n</dl>\n<p>Said this, providers are grouped by resources. So you can use resource as a simple group, or as a component of your\napplication. E.g: A resource that represents your database with some checks over it, such as simple ping, check if your\napplication tables are created, if it contains data\u2026</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>Install this package using pip:</li>\n</ol>\n<pre>pip install health-check\n</pre>\n<ol>\n<li><em>(Django)</em> Add <em>PROJECT_PATH</em> to your django settings module.</li>\n<li><em>(Django)</em> Add <em>health_check</em> to your <strong>INSTALLED_APPS</strong> settings like this:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'health_check'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<ol>\n<li><em>(Django)</em> Add <strong>Health Check</strong> urls to your project urls:</li>\n</ol>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^health/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'health_check.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"check-providers\">\n<h2>Check Providers</h2>\n<p>Health Check provides a mechanism to add new custom check functions through <strong>check providers</strong>. Each check provider\nwill generate a new API method with an URL that uses the name of the provider. These functions must accept *args and\n**kwargs and will return a JSON-serializable object through json.dumps() method, for example a ping function:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'pong'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n</pre>\n<p>By default <strong>Health Check</strong> provides the follow checks:</p>\n<dl>\n<dt>Ping</dt>\n<dd><p>A ping to application.</p>\n<p>URL: <cite>/api/health/ping</cite></p>\n</dd>\n<dt>Databases</dt>\n<dd><p>Check if databases are running.</p>\n<p>URL: <cite>/api/health/databases</cite></p>\n</dd>\n<dt>Caches</dt>\n<dd><p>Check if caches are running.</p>\n<p>URL: <cite>/api/health/caches</cite></p>\n</dd>\n<dt>Celery</dt>\n<dd><p>Check if celery workers defined in settings are running.</p>\n<p>URL: <cite>/api/health/celery</cite></p>\n</dd>\n<dt>Databases stats</dt>\n<dd><p>Show stats for all databases.</p>\n<p>URL: <cite>/api/stats/databases</cite></p>\n</dd>\n<dt>Celery stats</dt>\n<dd><p>Show celery worker stats.</p>\n<p>URL: <cite>/api/stats/celery</cite></p>\n</dd>\n<dt>Code</dt>\n<dd><p>Source code stats such as current active branch, last commit, if debug is active\u2026</p>\n<p>URL: <cite>/api/stats/code</cite></p>\n</dd>\n</dl>\n</div>\n<div id=\"run-providers\">\n<h2>Run providers</h2>\n<p>The main goal of this application is to provide an easy way to run checks over defined resources, so there are different\nways to do it.</p>\n<div id=\"command\">\n<h3>Command</h3>\n<p>Health Check provides a command to query current health of a resource. This command can be call as:</p>\n<pre>health_check <span class=\"o\">{</span>resource<span class=\"o\">}</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n</pre>\n<p>Call a specific provider from a resource:</p>\n<pre>health_check <span class=\"o\">{</span>resource<span class=\"o\">}</span> <span class=\"o\">{</span>provider<span class=\"o\">}</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n</pre>\n<p>To get current status of health checks, and exit with an error if some check is failing:</p>\n<pre>health_check health -e\n</pre>\n<p>Each resource has its own set of options that can be displayed through command help:</p>\n<pre>health_check -h\n</pre>\n</div>\n<div id=\"code\">\n<h3>Code</h3>\n<p>To run all providers of a specific resource:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">health_check.providers</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"n\">Resource</span><span class=\"p\">(</span><span class=\"s1\">'resource_name'</span><span class=\"p\">)</span>\n<span class=\"n\">providers_result</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"p\">()</span>\n</pre>\n<p>A single provider can be executed:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">health_check.providers</span> <span class=\"kn\">import</span> <span class=\"n\">Provider</span>\n\n<span class=\"n\">provider</span> <span class=\"o\">=</span> <span class=\"n\">Provider</span><span class=\"p\">(</span><span class=\"s1\">'path.to.provider_function'</span><span class=\"p\">)</span>\n<span class=\"n\">provider_result</span> <span class=\"o\">=</span> <span class=\"n\">provider</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"django\">\n<h2>Django</h2>\n<p>Health check adds some useful behavior to your Django application.</p>\n<div id=\"health-check-website\">\n<h3>Health Check website</h3>\n<p>A website that shows Health Check data is available in this application. It\u2019s possible access to follow URLs to get a\ndetailed view of your system health status. Those three pages will show results of providers configured (as explained in\nsettings section):</p>\n<pre>http://www.website.com/health/\nhttp://www.website.com/health/health/\nhttp://www.website.com/health/stats/\n</pre>\n</div>\n<div id=\"health-check-api\">\n<h3>Health Check API</h3>\n<p>Health Check API can be used as a standalone application including only their urls:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^health/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'health.api.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>This API have a single url for each provider, that are grouped by resources.\nEach provider can be queried alone, returning his current health status:</p>\n<pre>http://your_domain/health/api/health/ping\n</pre>\n<p>Also there is a resource view that will return the health status of all providers:</p>\n<pre>http://your_domain/health/api/health\n</pre>\n<p>For last, there is a root view that will return the health status of all providers from all resources:</p>\n<pre>http://your_domain/health/api\n</pre>\n</div>\n<div id=\"django-management-commands\">\n<h3>Django management commands</h3>\n<p>Previous command can be used as Django management command:</p>\n<pre>python manage.py health_check <span class=\"o\">{</span>resource<span class=\"o\">}</span> <span class=\"o\">{</span>provider<span class=\"o\">}</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Health check settings can be added directly to Django settings module or create an specific module for them. If a\ncustom module (or class) is used, you must specify it through <strong>HEALTH_CHECK_SETTINGS</strong> environment variable.</p>\n<p>To use a custom module for settings is necessary to specify the full path: <em>project.package.settings</em>. The same applies\nto objects: <em>project.package.settings:SettingsObject</em>.</p>\n<div id=\"health-check-providers\">\n<h3>health_check_providers</h3>\n<p>List of additional check providers. Each provider consists in a tuple of name, function complete path, args and kwargs.</p>\n<p>Example:</p>\n<pre><span class=\"n\">health_check_providers</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'resource'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"s1\">'application.module.test_function'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">}),</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Default:</p>\n<pre><span class=\"n\">providers</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s1\">'health_check_providers'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'health'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'ping'</span><span class=\"p\">,</span> <span class=\"s1\">'health_check.providers.health.ping'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'databases'</span><span class=\"p\">,</span> <span class=\"s1\">'health_check.providers.django.health.databases'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'caches'</span><span class=\"p\">,</span> <span class=\"s1\">'health_check.providers.django.health.caches'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">),</span>\n    <span class=\"s1\">'stats'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'databases'</span><span class=\"p\">,</span> <span class=\"s1\">'health_check.providers.django.stats.databases'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'code'</span><span class=\"p\">,</span> <span class=\"s1\">'health_check.providers.stats.code'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"health-check-celery-workers\">\n<h3>health_check_celery_workers</h3>\n<p>List of hostname from celery workers to be checked. If any worker is defined, two additional providers listed previously\nwill be added to default set.</p>\n<p>Default:</p>\n<pre><span class=\"n\">health_check_celery_workers</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3688590, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "d4f8c55cb9de24d4d498221f16fc2e88", "sha256": "e27aa1aa83f4b3452e86b227ef54cad903b3843772caf1466b9d04edaf406999"}, "downloads": -1, "filename": "health_check-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4f8c55cb9de24d4d498221f16fc2e88", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 914391, "upload_time": "2017-02-23T10:12:24", "upload_time_iso_8601": "2017-02-23T10:12:24.535528Z", "url": "https://files.pythonhosted.org/packages/8a/0a/7991376c4c5dd664cd6a4f5a9562826f03f1cb581d99c6fa5d9f2e14ae49/health_check-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0994b9d28130aa75501fad2ad9ba216a", "sha256": "215c707ad4c13afa246e967d975cdfa7573016c56e9fc3c1de47f79089d095b8"}, "downloads": -1, "filename": "health-check-3.0.0.tar.gz", "has_sig": false, "md5_digest": "0994b9d28130aa75501fad2ad9ba216a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 900076, "upload_time": "2017-02-23T10:12:28", "upload_time_iso_8601": "2017-02-23T10:12:28.015835Z", "url": "https://files.pythonhosted.org/packages/65/dc/385737b9b49b68e790c7e5a8b1cd670f371418c80b4ccd89fe151ae02075/health-check-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "acdab6679ce15b029a1754164960942d", "sha256": "632260748e017cb5f1d2b0f7ecb46f1cd00cbecd51938d10ef9503a7504b9ccb"}, "downloads": -1, "filename": "health_check-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "acdab6679ce15b029a1754164960942d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 914831, "upload_time": "2017-02-23T11:03:30", "upload_time_iso_8601": "2017-02-23T11:03:30.707792Z", "url": "https://files.pythonhosted.org/packages/97/f5/a31b5310626086789ccfbf7021df76a09e47f49f4aca44e18d10f37204e7/health_check-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35c7b8ef88874b776549215ad8979bf2", "sha256": "3744edf04817e96953e6c1ddc0c5828638ca7bd133107224afb53f236bfabc0d"}, "downloads": -1, "filename": "health-check-3.0.1.tar.gz", "has_sig": false, "md5_digest": "35c7b8ef88874b776549215ad8979bf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 900559, "upload_time": "2017-02-23T11:03:34", "upload_time_iso_8601": "2017-02-23T11:03:34.538572Z", "url": "https://files.pythonhosted.org/packages/40/4f/1b31f940b896f07dd5d6b36ddc22c78339c077c02e8291189444cc1b9b23/health-check-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "d032f7ba6c249015fcc370b6335e141d", "sha256": "6deafd07bc395b4ad803be18db13a25c561d3ef5fcc1111904df2c34b59c1261"}, "downloads": -1, "filename": "health_check-3.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d032f7ba6c249015fcc370b6335e141d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 915002, "upload_time": "2017-02-23T14:34:20", "upload_time_iso_8601": "2017-02-23T14:34:20.492379Z", "url": "https://files.pythonhosted.org/packages/e7/e7/71253938133acfa1017aa899b29cf5a468f21a66be881a93f50811ad8d35/health_check-3.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01291d630063504580e75533c05585ef", "sha256": "3fd5b55577fda67bacffcbc8edbf0e81205f17a8fe0f8e328d708717c8a74460"}, "downloads": -1, "filename": "health-check-3.0.2.tar.gz", "has_sig": false, "md5_digest": "01291d630063504580e75533c05585ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 900765, "upload_time": "2017-02-23T14:34:24", "upload_time_iso_8601": "2017-02-23T14:34:24.492036Z", "url": "https://files.pythonhosted.org/packages/dc/1b/7bbd354a6870570572b801c2e5723f0f86a596d47ddc9e449c250cf5bb3e/health-check-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "f3fcb5945c4b60ed869a3094eb5ac834", "sha256": "d617f610c786a8f5a3397d52d97d71fb2ca807ab0b1693f82bd2050a071f2b9c"}, "downloads": -1, "filename": "health_check-3.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f3fcb5945c4b60ed869a3094eb5ac834", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 915523, "upload_time": "2017-03-13T16:33:59", "upload_time_iso_8601": "2017-03-13T16:33:59.821973Z", "url": "https://files.pythonhosted.org/packages/95/4b/6842acaa3dc89a8a000955b46fbdcbb4162f260de943aaa35cb00f06929d/health_check-3.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "767e017d426b1e88ae8b088fffc73b35", "sha256": "27e48574195dd8320df73a8cc3193d0e332ad81f806f2fa8d2be8bfe11d657ac"}, "downloads": -1, "filename": "health-check-3.0.3.tar.gz", "has_sig": false, "md5_digest": "767e017d426b1e88ae8b088fffc73b35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 900767, "upload_time": "2017-03-13T16:33:55", "upload_time_iso_8601": "2017-03-13T16:33:55.774280Z", "url": "https://files.pythonhosted.org/packages/92/e6/97963320b295c9b0ddf06e06d511044f42b6e9cb548b775626cc112a5bf4/health-check-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "c38d69e198686bf820718633feae503f", "sha256": "9c5da4a47c94a8017e5a306dd8aadf4b6eb62b2802f558425f30f4e4a211f1eb"}, "downloads": -1, "filename": "health_check-3.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c38d69e198686bf820718633feae503f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1508272, "upload_time": "2017-06-23T16:22:06", "upload_time_iso_8601": "2017-06-23T16:22:06.859651Z", "url": "https://files.pythonhosted.org/packages/e6/7f/3dd891b638edf71a8cdeaf5c385ebd1b7b588ffc8054a1a0f2788a5e4403/health_check-3.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fde29894e27bfc775f4a892365c54f29", "sha256": "5c10e581586241eb84754dedab0d3d7d04bb86f9eaf00df5bc2594d1b922e837"}, "downloads": -1, "filename": "health-check-3.0.4.tar.gz", "has_sig": false, "md5_digest": "fde29894e27bfc775f4a892365c54f29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1497362, "upload_time": "2017-06-23T16:22:13", "upload_time_iso_8601": "2017-06-23T16:22:13.274641Z", "url": "https://files.pythonhosted.org/packages/e9/64/d6552e44b7904be585167203d303a8a8f1b80b177e652376fd1df9265c78/health-check-3.0.4.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "c45e0f132a62234a4e919fa3e9eb890b", "sha256": "9b54b7397472b6fdd163cb7b41d1924384fecd02632da10f47bef0865f72d885"}, "downloads": -1, "filename": "health_check-3.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c45e0f132a62234a4e919fa3e9eb890b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 915280, "upload_time": "2017-04-24T16:44:09", "upload_time_iso_8601": "2017-04-24T16:44:09.846367Z", "url": "https://files.pythonhosted.org/packages/f8/4e/1ca63a25d80b9ba55d79dbe71dcd40568ad9fc781cfd16ecbb212192e12c/health_check-3.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ec6d01ffe6572fa2232ec105677b18f", "sha256": "1fc562b22c8011b0cd896cd9c0eb29d1a47d3b77fbafb14b673e9d13ee768f5b"}, "downloads": -1, "filename": "health-check-3.1.0.tar.gz", "has_sig": false, "md5_digest": "0ec6d01ffe6572fa2232ec105677b18f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 898678, "upload_time": "2017-04-24T16:44:13", "upload_time_iso_8601": "2017-04-24T16:44:13.923887Z", "url": "https://files.pythonhosted.org/packages/8f/cc/4e4d1dbf891860859eb8d4c6516347004641ee31356435a4ffd8c53824d0/health-check-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "7bdec8403b1318899663d82d1b7f7a6f", "sha256": "223039675418e6a7be884cda5b3a06af4bb5827d7be4374cc6e788506555c1f9"}, "downloads": -1, "filename": "health_check-3.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7bdec8403b1318899663d82d1b7f7a6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 903232, "upload_time": "2017-06-23T16:48:12", "upload_time_iso_8601": "2017-06-23T16:48:12.843762Z", "url": "https://files.pythonhosted.org/packages/ab/2f/df0326f92f9481e76fffe17d283789c89840fa9ce040166e4f786b808699/health_check-3.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94b4d2a2148c085d4b5e177c7cad35cf", "sha256": "d25a43476a7d8a531cccf4d6552b64300b475836e7bc2d84d60002e73abd181e"}, "downloads": -1, "filename": "health-check-3.1.1.tar.gz", "has_sig": false, "md5_digest": "94b4d2a2148c085d4b5e177c7cad35cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 894226, "upload_time": "2017-06-23T16:48:16", "upload_time_iso_8601": "2017-06-23T16:48:16.670100Z", "url": "https://files.pythonhosted.org/packages/be/b9/7b3bf983b7043779982da5f4733d3196b5eea2ac435c4a2096410dcb62b5/health-check-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "cc2a9cc4f3489af6951a281aeedb8029", "sha256": "4afff425f407bf31796fc629e31836eafd277fa0067ec92f31c8776e8c18a2e0"}, "downloads": -1, "filename": "health_check-3.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc2a9cc4f3489af6951a281aeedb8029", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 915348, "upload_time": "2017-09-19T13:33:50", "upload_time_iso_8601": "2017-09-19T13:33:50.398153Z", "url": "https://files.pythonhosted.org/packages/1e/5f/03b955647198db1e530096c8efc2bc0ad80176de72942ffe3c8c96637a33/health_check-3.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a53837dc3d565615af38a8155c650ef7", "sha256": "0d8a02ae7b7b2ce340759ede6e3538c0a25814a149d6a5c8d288dc56152ef743"}, "downloads": -1, "filename": "health-check-3.1.2.tar.gz", "has_sig": false, "md5_digest": "a53837dc3d565615af38a8155c650ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 894051, "upload_time": "2017-09-19T13:33:30", "upload_time_iso_8601": "2017-09-19T13:33:30.910076Z", "url": "https://files.pythonhosted.org/packages/4a/13/288e9b534c500d2b20f97c0d93f57265cf003fb342fbb222c0ca33429abf/health-check-3.1.2.tar.gz", "yanked": false}], "3.1.3": [{"comment_text": "", "digests": {"md5": "ee181074ce46c961556ec5b495504d69", "sha256": "4435b6f1d53c1a493e181bd0b4672956cc18f61d386d68d5947dde358c867128"}, "downloads": -1, "filename": "health_check-3.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ee181074ce46c961556ec5b495504d69", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 904914, "upload_time": "2017-09-20T12:53:30", "upload_time_iso_8601": "2017-09-20T12:53:30.323413Z", "url": "https://files.pythonhosted.org/packages/89/29/f9fe85d8fc4487fa1cd42927b1d8dc7cdc2c668d966416623d49bd35c75c/health_check-3.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd1b00892026cdea4b5784b1dd0a902d", "sha256": "a8c7c7c182c46b7ba08c973bc51cac0daee44f9e204c4bc9a97fe052a184fa46"}, "downloads": -1, "filename": "health-check-3.1.3.tar.gz", "has_sig": false, "md5_digest": "bd1b00892026cdea4b5784b1dd0a902d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 894862, "upload_time": "2017-09-20T12:53:35", "upload_time_iso_8601": "2017-09-20T12:53:35.878964Z", "url": "https://files.pythonhosted.org/packages/a9/97/2dcc2ad33ff9007c1b1a7957e5168e0c899e318ea1cbafdebddc39d7e9d9/health-check-3.1.3.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "068b736bf6979749e9c48defa0221313", "sha256": "b81252f8996d3e6da9e21a1a01e7a6fdf1529058c82b13850a10fccf62d5dcbc"}, "downloads": -1, "filename": "health_check-3.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "068b736bf6979749e9c48defa0221313", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 905118, "upload_time": "2017-10-03T09:21:20", "upload_time_iso_8601": "2017-10-03T09:21:20.264695Z", "url": "https://files.pythonhosted.org/packages/dc/e5/f3e453f580cd0c0cc31aecb72ecb593cc97ff87ac63dedf2f4c0bab1ee6d/health_check-3.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f17008e077b5dd769b10f44c244bb67", "sha256": "733944e4542971c9d4568140beb20a9a46d35a700167cd22eb5faaa4ef9d7e96"}, "downloads": -1, "filename": "health-check-3.2.0.tar.gz", "has_sig": false, "md5_digest": "3f17008e077b5dd769b10f44c244bb67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895188, "upload_time": "2017-10-03T09:21:25", "upload_time_iso_8601": "2017-10-03T09:21:25.423010Z", "url": "https://files.pythonhosted.org/packages/9c/1f/80a43f75b4abbe5d0df41e423f35168fd6e67c501ed66fb4046906c98810/health-check-3.2.0.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "3cbdedc07cd3c185e5e46e963831b8f5", "sha256": "2cd7b8abca69f5c6c1da0b3fa2372a9a89462d030da495dc5548ee4dca84324c"}, "downloads": -1, "filename": "health_check-3.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3cbdedc07cd3c185e5e46e963831b8f5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 905194, "upload_time": "2017-12-18T23:32:12", "upload_time_iso_8601": "2017-12-18T23:32:12.100843Z", "url": "https://files.pythonhosted.org/packages/c2/a0/a816b31b75b9dcdb607c85ed5584fcb34d980d200e63cbe249fd19b4aa8c/health_check-3.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0918f214ae095d34a9c14307aaccc40e", "sha256": "91c27f945513472c216fe95c6155396d6fb33d7dc46864efc5b2740a975e785b"}, "downloads": -1, "filename": "health-check-3.4.0.tar.gz", "has_sig": false, "md5_digest": "0918f214ae095d34a9c14307aaccc40e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895897, "upload_time": "2017-12-18T23:32:15", "upload_time_iso_8601": "2017-12-18T23:32:15.886340Z", "url": "https://files.pythonhosted.org/packages/bf/26/7871358558b5f8e60dcc516236bcd8f722041e50c24c9bbee1bac893e77e/health-check-3.4.0.tar.gz", "yanked": false}], "3.4.1": [{"comment_text": "", "digests": {"md5": "79b638bf7fcf99b8f5efac000af8cbe8", "sha256": "beb2e1740625114e4cdac7d983d6cb32d2ac444c1e159737355ecf5d22166322"}, "downloads": -1, "filename": "health_check-3.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79b638bf7fcf99b8f5efac000af8cbe8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 905254, "upload_time": "2018-03-20T16:56:14", "upload_time_iso_8601": "2018-03-20T16:56:14.692687Z", "url": "https://files.pythonhosted.org/packages/ff/ac/7f735553d9483321ccf6a6cfb80049487f6406a453f450cbc32e77ef6b3d/health_check-3.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59bd7c84a7b6c1710c5e1a2ff754c986", "sha256": "c2debda90e6ef0087c3c40a773ccfe6a917586d82a3340e84cd45362f2a9e822"}, "downloads": -1, "filename": "health-check-3.4.1.tar.gz", "has_sig": false, "md5_digest": "59bd7c84a7b6c1710c5e1a2ff754c986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 892295, "upload_time": "2018-03-20T16:56:17", "upload_time_iso_8601": "2018-03-20T16:56:17.596750Z", "url": "https://files.pythonhosted.org/packages/e2/9e/95799c9d4feada474da20b3b9107a32d15fb405ca61a77479c10407f9fe1/health-check-3.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79b638bf7fcf99b8f5efac000af8cbe8", "sha256": "beb2e1740625114e4cdac7d983d6cb32d2ac444c1e159737355ecf5d22166322"}, "downloads": -1, "filename": "health_check-3.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79b638bf7fcf99b8f5efac000af8cbe8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 905254, "upload_time": "2018-03-20T16:56:14", "upload_time_iso_8601": "2018-03-20T16:56:14.692687Z", "url": "https://files.pythonhosted.org/packages/ff/ac/7f735553d9483321ccf6a6cfb80049487f6406a453f450cbc32e77ef6b3d/health_check-3.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59bd7c84a7b6c1710c5e1a2ff754c986", "sha256": "c2debda90e6ef0087c3c40a773ccfe6a917586d82a3340e84cd45362f2a9e822"}, "downloads": -1, "filename": "health-check-3.4.1.tar.gz", "has_sig": false, "md5_digest": "59bd7c84a7b6c1710c5e1a2ff754c986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 892295, "upload_time": "2018-03-20T16:56:17", "upload_time_iso_8601": "2018-03-20T16:56:17.596750Z", "url": "https://files.pythonhosted.org/packages/e2/9e/95799c9d4feada474da20b3b9107a32d15fb405ca61a77479c10407f9fe1/health-check-3.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:57 2020"}