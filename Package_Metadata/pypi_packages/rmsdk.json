{"info": {"author": "Rex Low", "author_email": "rex@revenuemonster.my", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "RM-API-SDK-Python\n=================\n\n|image0| |image1| |image2|\n\nThis is an Python SDK that maps some of the RESTful methods of Open API\nthat are documented at `Revenue Monster Open API\nDocumentation <doc.revenuemonster.my>`__.\n\nGetting Started\n---------------\n\nInstallation\n~~~~~~~~~~~~\n\n::\n\n   pip3 install rmsdk\n\nPrerequisite\n~~~~~~~~~~~~\n\nBefore using the SDK, users must obtain credentials from merchant portal\nfirst. Click\n`here <https://github.com/RevenueMonster/RM-API-SDK-Python/blob/master/docs/merchant-portal.md>`__\nfor tutorial.\n\nSupported APIs\n--------------\n\n-  Client Credentials (Authentication)\n\n   -  `Generate Client Credentials <#generate-client-credentials>`__\n   -  `Generate Refresh Token <#generate-refresh-token>`__\n\n-  Merchant Related APIs\n\n   -  `Get Merchant Profile <#get-merchant-profile>`__\n   -  `Get Merchant Subscriptions <#get-merchant-subscriptions>`__\n\n-  Store\n\n   -  `Get Store List <#get-store-list>`__\n   -  `Get Store By ID <#get-store-by-id>`__\n   -  `Create Store <#create-store>`__\n   -  `Update Store <#update-store>`__\n   -  `Delete Store <#delete-store>`__\n\n-  User\n\n   -  `Get User Profile <#get-user-profile>`__\n\n-  Payment (Quickpay QR)\n\n   -  `QuickPay <#quickpay>`__\n   -  `Refund <#refund>`__\n   -  `Reverse <#reverse>`__\n   -  `Get All Transactions <#get-all-transactions>`__\n   -  `Get Transaction By ID <#get-transaction-by-id>`__\n   -  `Get Transaction By Order ID <#get-transaction-by-order-id>`__\n   -  `Get Daily Settlement Report <#get-daily-settlement-report>`__\n\n-  Payment (Transaction QR)\n\n   -  `Create Transaction <#create-transaction>`__\n   -  `Get Transaction <#get-transaction>`__\n   -  `Get Transaction By Code <#get-transaction-by-code>`__\n   -  `Get List of Transactions By\n      Code <#get-list-of-transaction-by-code>`__\n\n-  Loyalty\n\n   -  `Give Loyalty Point <#give-loyalty-point>`__\n   -  `Get Loyalty Member <#get-loyalty-member>`__\n   -  `Get List of Loyalty Members <#get-list-of-loyalty-members>`__\n   -  `Get Point History <#get-point-history>`__\n\n-  Voucher\n\n   -  `Issue Voucher <#issue-voucher>`__\n   -  `Void Voucher <#void-voucher>`__\n   -  `Get Voucher By Code <#get-voucher-by-code>`__\n   -  `Get Voucher Batches <#get-voucher-batches>`__\n   -  `Get Voucher Batches By Batch\n      Key <#get-voucher-batches-by-batch-key>`__\n\nUsage\n-----\n\nThis section explains the basic usage of the SDK. Detail usage for\nindividual modules are prepared in the\n`examples <https://github.com/RevenueMonster/RM-API-SDK-Python/tree/master/examples>`__\nfolder.\n\nA ``dictionary`` that contains ``clientID``, ``clientSecret``,\n``environment`` and ``privateKey`` (path to private key) is expected to\npassed in as argument. An object of the ``RMSDK`` class will be\ninstantiated. All modules covered in this SDK will be available under\nthe instantiated object.\n\nFor instance, to use the store module, simply,\n\n::\n\n   response = client.module.methodName(*args)\n\nAuthentication\n--------------\n\nAuthenticate SDK\n~~~~~~~~~~~~~~~~\n\n::\n\n   from rmsdk import RMSDK\n\n   client = RMSDK(configs={\n       \"environment\": \"sandbox\", # or production\n       \"clientID\": \"client-id\",\n       \"clientSecret\": \"client-secret\",\n       \"privateKey\": \"path-to-private-key\"\n   })\n\n   accessToken, refreshToken = client.accessToken, client.refreshToken\n\nGenerate Client Credentials\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo get refresh token and access token(expired after 2 hours) with using\nprovided clientID and clientSecret.\n\n::\n\n   client = Auth({\n       \"environment\": \"sandbox\", # or production\n       \"clientID\": \"client-id\",\n       \"clientSecret\": \"client-secret\",\n       \"privateKey\": \"path-to-private-key\"\n   })\n\n   accessToken, refreshToken = client.clientCredentials()\n\nGenerate Refresh Token\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo get new access token(expired after 2 hours) with using provided\nclientId and clientSecret (recommended to schedule to run this fucntion\non every less than 2 hours) in order to avoid expired access token\nerror.\n\n::\n\n   accessToken, refreshToken = client.getRefreshToken(refreshToken)\n\nMerchant\n--------\n\nGet Merchant Profile\n~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.merchant.getMerchantProfile(accessToken)\n\nGet Merchant Subscriptions\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.merchant.getMerchantSubcriptions(accessToken)\n\nStore\n-----\n\nGet Store List\n~~~~~~~~~~~~~~\n\n::\n\n   result = client.store.getStores(accessToken)\n\nGet Store By ID\n~~~~~~~~~~~~~~~\n\n::\n\n   result = client.store.getStoreByID(accessToken, storeID)\n\nCreate Store\n~~~~~~~~~~~~\n\n::\n\n   result = client.store.createStore(accessToken, {\n       \"name\": \"Test store\",\n       \"addressLine1\": \"Earth\",\n       \"addressLine2\": \"Mars\",\n       \"postCode\": \"10001\",\n       \"city\": \"Petaling Jaya\",\n       \"state\": \"Selangor\",\n       \"country\": \"Malaysia\",\n       \"countryCode\": \"60\",\n       \"phoneNumber\": \"377334080\"\n   })\n\nUpdate Store\n~~~~~~~~~~~~\n\n::\n\n   result = client.store.updateStore(accessToken, storeID, {\n       \"name\": \"Test store\",\n       \"addressLine1\": \"Earth\",\n       \"addressLine2\": \"Mars\",\n       \"postCode\": \"10001\",\n       \"city\": \"Petaling Jaya\",\n       \"state\": \"Selangor\",\n       \"country\": \"Malaysia\",\n       \"countryCode\": \"60\",\n       \"phoneNumber\": \"377334080\"\n   })\n\nDelete Store\n~~~~~~~~~~~~\n\n::\n\n   result = client.store.deleteStore(accessToken, storeID)\n\nUser\n----\n\nGet User Profile\n~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.user.getUserProfile(accessToken)\n\nPayment (Quickpay QR)\n---------------------\n\nQuickPay\n~~~~~~~~\n\n::\n\n   result = client.quickPay.quickPay(accessToken, {\n       \"authCode\": \"1234567890\",\n       \"order\": {\n           \"amount\": 100,\n           \"currencyType\":\"MYR\",\n           \"id\":\"1312331232\",\n           \"title\":\"title\",\n           \"detail\":\"desc\",\n           \"additonalData\":\"API Test\"\n      },\n       \"ipAddress\": \"8.8.8.8\",\n       \"terminalId\": \"19382734937293999\",\n       \"storeId\": \"6170506694335521334\"\n   })\n\nRefund\n~~~~~~\n\n::\n\n   result = client.quickPay.refund(accessToken, {\n       \"transactionId\": \"190109042809010428940037\",\n       \"refund\": {\n           \"type\": \"FULL\",\n           \"currencyType\": \"MYR\",\n           \"amount\": 100,\n       },\n       \"reason\": \"test\"\n   })\n\nReverse\n~~~~~~~\n\n::\n\n   result = client.quickPay.reverse(accessToken, {\n       \"orderId\": \"111222333\"\n   })\n\nGet All Transactions\n~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.quickPay.getAllTransactions(accessToken)\n\nGet Transaction By ID\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.quickPay.getTransactionByID(accessToken, transactionID)\n\nGet Transaction By Order ID\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.quickPay.getTransactionByOrder(accessToken, orderID)\n\nGet Daily Settlement Report\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.quickPay.dailySettlementReport(accessToken, {\n       \"date\": \"2019-01-09\",\n       \"method\": \"WECHATPAY\",\n       \"region\": \"MALAYSIA\",\n       \"sequence\": 1\n   })\n\nPayment (Transaction QR)\n------------------------\n\nCreate Transaction\n~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.transaction.createTransaction(accessToken, {\n       \"amount\": 100,\n       \"currencyType\": \"MYR\",\n       \"expiry\": {\n           \"type\": \"PERMANENT\"\n       },\n       \"isPreFillAmount\": True,\n       \"method\": ['WECHATPAY'],\n       \"order\": {\n           \"details\": \"Test\",\n           \"title\": \"Title\"\n       },\n       \"redirectUrl\": 'https://www.revenuemonster.com',\n       \"storeId\": '1981039839353524638',\n       \"type\": 'DYNAMIC',\n   })\n\nGet Transaction\n~~~~~~~~~~~~~~~\n\n::\n\n   result = client.transaction.getTransaction(accessToken)\n\nGet Transaction By Code\n~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.transaction.getTransactionByCode(accessToken, qrCode)\n\nGet List of Transactions By Code\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.transaction.getTransactionByCode(accessToken, qrCode)\n\nLoyalty\n-------\n\nGive Loyalty Point\n~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.loyalty.giveLoyaltyPoint(accessToken, {\n       \"point\": 100,\n       \"type\": \"ID\",\n       \"memberId\": \"7765269777796630408\",\n       \"countryCode\": \"60\",\n       \"phoneNumber\": \"172826990\"\n   })\n\nGet Loyalty Member\n~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.loyalty.getLoyaltyMember(accessToken, memberID)\n\nGet List of Loyalty Members\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.loyalty.getLoyaltyMembers(accessToken)\n\nGet Point History\n~~~~~~~~~~~~~~~~~\n\nGet Loyalty point history of a member\n\n::\n\n   result = client.loyalty.getLoyaltyMemberPointHistory(accessToken, memberID)\n\nVoucher\n-------\n\nIssue Voucher\n~~~~~~~~~~~~~\n\n::\n\n   result = client.voucher.issueVoucher(accessToken, batchKey)\n\nVoid Voucher\n~~~~~~~~~~~~\n\n::\n\n   result = client.voucher.voidVoucher(accessToken, voucherCode)\n\nGet Voucher By Code\n~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.voucher.getVoucherByCode(accessToken, voucherCode)\n\nGet Voucher Batches\n~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.voucher.getVoucherBatches(accessToken)\n\nGet Voucher Batches By Batch Key\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   result = client.voucher.getVoucherBatchByKey(accessToken, batchKey)\n\nDetail examples can be found at\n`examples <https://github.com/RevenueMonster/RM-API-SDK-Python/tree/master/examples>`__.\n\n.. |image0| image:: https://img.shields.io/pypi/pyversions/rmsdk.svg\n   :target: https://pypi.org/project/rmsdk/\n.. |image1| image:: https://img.shields.io/pypi/v/nine.svg\n   :target: https://pypi.org/project/rmsdk/\n.. |image2| image:: https://img.shields.io/pypi/l/rmsdk.svg\n   :target: https://pypi.org/project/rmsdk/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RevenueMonster/RM-API-SDK-Python", "keywords": "RevenueMonster SDK API", "license": "MIT", "maintainer": "Rex Low", "maintainer_email": "", "name": "rmsdk", "package_url": "https://pypi.org/project/rmsdk/", "platform": "", "project_url": "https://pypi.org/project/rmsdk/", "project_urls": {"Homepage": "https://github.com/RevenueMonster/RM-API-SDK-Python"}, "release_url": "https://pypi.org/project/rmsdk/1.0.1/", "requires_dist": ["pycryptodome", "requests"], "requires_python": "", "summary": "A Python wrapper around the Revenue Monster API", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/rmsdk/\" rel=\"nofollow\"><img alt=\"image0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/286fa376a4655ef9a932c351ed9da63357da7246/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f726d73646b2e737667\"></a> <a href=\"https://pypi.org/project/rmsdk/\" rel=\"nofollow\"><img alt=\"image1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f29022db0ad0a3f5fa52f522194565aafce70e73/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e696e652e737667\"></a> <a href=\"https://pypi.org/project/rmsdk/\" rel=\"nofollow\"><img alt=\"image2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/902d987f4c559e53800d290fc583119d21cf0e3a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f726d73646b2e737667\"></a></p>\n<p>This is an Python SDK that maps some of the RESTful methods of Open API\nthat are documented at <a href=\"doc.revenuemonster.my\" rel=\"nofollow\">Revenue Monster Open API\nDocumentation</a>.</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip3 install rmsdk\n</pre>\n</div>\n<div id=\"prerequisite\">\n<h3>Prerequisite</h3>\n<p>Before using the SDK, users must obtain credentials from merchant portal\nfirst. Click\n<a href=\"https://github.com/RevenueMonster/RM-API-SDK-Python/blob/master/docs/merchant-portal.md\" rel=\"nofollow\">here</a>\nfor tutorial.</p>\n</div>\n</div>\n<div id=\"supported-apis\">\n<h2>Supported APIs</h2>\n<ul>\n<li>Client Credentials (Authentication)<ul>\n<li><a href=\"#generate-client-credentials\" rel=\"nofollow\">Generate Client Credentials</a></li>\n<li><a href=\"#generate-refresh-token\" rel=\"nofollow\">Generate Refresh Token</a></li>\n</ul>\n</li>\n<li>Merchant Related APIs<ul>\n<li><a href=\"#get-merchant-profile\" rel=\"nofollow\">Get Merchant Profile</a></li>\n<li><a href=\"#get-merchant-subscriptions\" rel=\"nofollow\">Get Merchant Subscriptions</a></li>\n</ul>\n</li>\n<li>Store<ul>\n<li><a href=\"#get-store-list\" rel=\"nofollow\">Get Store List</a></li>\n<li><a href=\"#get-store-by-id\" rel=\"nofollow\">Get Store By ID</a></li>\n<li><a href=\"#create-store\" rel=\"nofollow\">Create Store</a></li>\n<li><a href=\"#update-store\" rel=\"nofollow\">Update Store</a></li>\n<li><a href=\"#delete-store\" rel=\"nofollow\">Delete Store</a></li>\n</ul>\n</li>\n<li>User<ul>\n<li><a href=\"#get-user-profile\" rel=\"nofollow\">Get User Profile</a></li>\n</ul>\n</li>\n<li>Payment (Quickpay QR)<ul>\n<li><a href=\"#quickpay\" rel=\"nofollow\">QuickPay</a></li>\n<li><a href=\"#refund\" rel=\"nofollow\">Refund</a></li>\n<li><a href=\"#reverse\" rel=\"nofollow\">Reverse</a></li>\n<li><a href=\"#get-all-transactions\" rel=\"nofollow\">Get All Transactions</a></li>\n<li><a href=\"#get-transaction-by-id\" rel=\"nofollow\">Get Transaction By ID</a></li>\n<li><a href=\"#get-transaction-by-order-id\" rel=\"nofollow\">Get Transaction By Order ID</a></li>\n<li><a href=\"#get-daily-settlement-report\" rel=\"nofollow\">Get Daily Settlement Report</a></li>\n</ul>\n</li>\n<li>Payment (Transaction QR)<ul>\n<li><a href=\"#create-transaction\" rel=\"nofollow\">Create Transaction</a></li>\n<li><a href=\"#get-transaction\" rel=\"nofollow\">Get Transaction</a></li>\n<li><a href=\"#get-transaction-by-code\" rel=\"nofollow\">Get Transaction By Code</a></li>\n<li><a href=\"#get-list-of-transaction-by-code\" rel=\"nofollow\">Get List of Transactions By\nCode</a></li>\n</ul>\n</li>\n<li>Loyalty<ul>\n<li><a href=\"#give-loyalty-point\" rel=\"nofollow\">Give Loyalty Point</a></li>\n<li><a href=\"#get-loyalty-member\" rel=\"nofollow\">Get Loyalty Member</a></li>\n<li><a href=\"#get-list-of-loyalty-members\" rel=\"nofollow\">Get List of Loyalty Members</a></li>\n<li><a href=\"#get-point-history\" rel=\"nofollow\">Get Point History</a></li>\n</ul>\n</li>\n<li>Voucher<ul>\n<li><a href=\"#issue-voucher\" rel=\"nofollow\">Issue Voucher</a></li>\n<li><a href=\"#void-voucher\" rel=\"nofollow\">Void Voucher</a></li>\n<li><a href=\"#get-voucher-by-code\" rel=\"nofollow\">Get Voucher By Code</a></li>\n<li><a href=\"#get-voucher-batches\" rel=\"nofollow\">Get Voucher Batches</a></li>\n<li><a href=\"#get-voucher-batches-by-batch-key\" rel=\"nofollow\">Get Voucher Batches By Batch\nKey</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This section explains the basic usage of the SDK. Detail usage for\nindividual modules are prepared in the\n<a href=\"https://github.com/RevenueMonster/RM-API-SDK-Python/tree/master/examples\" rel=\"nofollow\">examples</a>\nfolder.</p>\n<p>A <tt>dictionary</tt> that contains <tt>clientID</tt>, <tt>clientSecret</tt>,\n<tt>environment</tt> and <tt>privateKey</tt> (path to private key) is expected to\npassed in as argument. An object of the <tt>RMSDK</tt> class will be\ninstantiated. All modules covered in this SDK will be available under\nthe instantiated object.</p>\n<p>For instance, to use the store module, simply,</p>\n<pre>response = client.module.methodName(*args)\n</pre>\n</div>\n<div id=\"authentication\">\n<h2>Authentication</h2>\n<div id=\"authenticate-sdk\">\n<h3>Authenticate SDK</h3>\n<pre>from rmsdk import RMSDK\n\nclient = RMSDK(configs={\n    \"environment\": \"sandbox\", # or production\n    \"clientID\": \"client-id\",\n    \"clientSecret\": \"client-secret\",\n    \"privateKey\": \"path-to-private-key\"\n})\n\naccessToken, refreshToken = client.accessToken, client.refreshToken\n</pre>\n</div>\n<div id=\"generate-client-credentials\">\n<h3>Generate Client Credentials</h3>\n<p>To get refresh token and access token(expired after 2 hours) with using\nprovided clientID and clientSecret.</p>\n<pre>client = Auth({\n    \"environment\": \"sandbox\", # or production\n    \"clientID\": \"client-id\",\n    \"clientSecret\": \"client-secret\",\n    \"privateKey\": \"path-to-private-key\"\n})\n\naccessToken, refreshToken = client.clientCredentials()\n</pre>\n</div>\n<div id=\"generate-refresh-token\">\n<h3>Generate Refresh Token</h3>\n<p>To get new access token(expired after 2 hours) with using provided\nclientId and clientSecret (recommended to schedule to run this fucntion\non every less than 2 hours) in order to avoid expired access token\nerror.</p>\n<pre>accessToken, refreshToken = client.getRefreshToken(refreshToken)\n</pre>\n</div>\n</div>\n<div id=\"merchant\">\n<h2>Merchant</h2>\n<div id=\"get-merchant-profile\">\n<h3>Get Merchant Profile</h3>\n<pre>result = client.merchant.getMerchantProfile(accessToken)\n</pre>\n</div>\n<div id=\"get-merchant-subscriptions\">\n<h3>Get Merchant Subscriptions</h3>\n<pre>result = client.merchant.getMerchantSubcriptions(accessToken)\n</pre>\n</div>\n</div>\n<div id=\"store\">\n<h2>Store</h2>\n<div id=\"get-store-list\">\n<h3>Get Store List</h3>\n<pre>result = client.store.getStores(accessToken)\n</pre>\n</div>\n<div id=\"get-store-by-id\">\n<h3>Get Store By ID</h3>\n<pre>result = client.store.getStoreByID(accessToken, storeID)\n</pre>\n</div>\n<div id=\"create-store\">\n<h3>Create Store</h3>\n<pre>result = client.store.createStore(accessToken, {\n    \"name\": \"Test store\",\n    \"addressLine1\": \"Earth\",\n    \"addressLine2\": \"Mars\",\n    \"postCode\": \"10001\",\n    \"city\": \"Petaling Jaya\",\n    \"state\": \"Selangor\",\n    \"country\": \"Malaysia\",\n    \"countryCode\": \"60\",\n    \"phoneNumber\": \"377334080\"\n})\n</pre>\n</div>\n<div id=\"update-store\">\n<h3>Update Store</h3>\n<pre>result = client.store.updateStore(accessToken, storeID, {\n    \"name\": \"Test store\",\n    \"addressLine1\": \"Earth\",\n    \"addressLine2\": \"Mars\",\n    \"postCode\": \"10001\",\n    \"city\": \"Petaling Jaya\",\n    \"state\": \"Selangor\",\n    \"country\": \"Malaysia\",\n    \"countryCode\": \"60\",\n    \"phoneNumber\": \"377334080\"\n})\n</pre>\n</div>\n<div id=\"delete-store\">\n<h3>Delete Store</h3>\n<pre>result = client.store.deleteStore(accessToken, storeID)\n</pre>\n</div>\n</div>\n<div id=\"user\">\n<h2>User</h2>\n<h2 id=\"get-user-profile\"><span class=\"section-subtitle\">Get User Profile</span></h2>\n<pre>result = client.user.getUserProfile(accessToken)\n</pre>\n</div>\n<div id=\"payment-quickpay-qr\">\n<h2>Payment (Quickpay QR)</h2>\n<div id=\"quickpay\">\n<h3>QuickPay</h3>\n<pre>result = client.quickPay.quickPay(accessToken, {\n    \"authCode\": \"1234567890\",\n    \"order\": {\n        \"amount\": 100,\n        \"currencyType\":\"MYR\",\n        \"id\":\"1312331232\",\n        \"title\":\"title\",\n        \"detail\":\"desc\",\n        \"additonalData\":\"API Test\"\n   },\n    \"ipAddress\": \"8.8.8.8\",\n    \"terminalId\": \"19382734937293999\",\n    \"storeId\": \"6170506694335521334\"\n})\n</pre>\n</div>\n<div id=\"refund\">\n<h3>Refund</h3>\n<pre>result = client.quickPay.refund(accessToken, {\n    \"transactionId\": \"190109042809010428940037\",\n    \"refund\": {\n        \"type\": \"FULL\",\n        \"currencyType\": \"MYR\",\n        \"amount\": 100,\n    },\n    \"reason\": \"test\"\n})\n</pre>\n</div>\n<div id=\"reverse\">\n<h3>Reverse</h3>\n<pre>result = client.quickPay.reverse(accessToken, {\n    \"orderId\": \"111222333\"\n})\n</pre>\n</div>\n<div id=\"get-all-transactions\">\n<h3>Get All Transactions</h3>\n<pre>result = client.quickPay.getAllTransactions(accessToken)\n</pre>\n</div>\n<div id=\"get-transaction-by-id\">\n<h3>Get Transaction By ID</h3>\n<pre>result = client.quickPay.getTransactionByID(accessToken, transactionID)\n</pre>\n</div>\n<div id=\"get-transaction-by-order-id\">\n<h3>Get Transaction By Order ID</h3>\n<pre>result = client.quickPay.getTransactionByOrder(accessToken, orderID)\n</pre>\n</div>\n<div id=\"get-daily-settlement-report\">\n<h3>Get Daily Settlement Report</h3>\n<pre>result = client.quickPay.dailySettlementReport(accessToken, {\n    \"date\": \"2019-01-09\",\n    \"method\": \"WECHATPAY\",\n    \"region\": \"MALAYSIA\",\n    \"sequence\": 1\n})\n</pre>\n</div>\n</div>\n<div id=\"payment-transaction-qr\">\n<h2>Payment (Transaction QR)</h2>\n<div id=\"create-transaction\">\n<h3>Create Transaction</h3>\n<pre>result = client.transaction.createTransaction(accessToken, {\n    \"amount\": 100,\n    \"currencyType\": \"MYR\",\n    \"expiry\": {\n        \"type\": \"PERMANENT\"\n    },\n    \"isPreFillAmount\": True,\n    \"method\": ['WECHATPAY'],\n    \"order\": {\n        \"details\": \"Test\",\n        \"title\": \"Title\"\n    },\n    \"redirectUrl\": 'https://www.revenuemonster.com',\n    \"storeId\": '1981039839353524638',\n    \"type\": 'DYNAMIC',\n})\n</pre>\n</div>\n<div id=\"get-transaction\">\n<h3>Get Transaction</h3>\n<pre>result = client.transaction.getTransaction(accessToken)\n</pre>\n</div>\n<div id=\"get-transaction-by-code\">\n<h3>Get Transaction By Code</h3>\n<pre>result = client.transaction.getTransactionByCode(accessToken, qrCode)\n</pre>\n</div>\n<div id=\"get-list-of-transactions-by-code\">\n<h3>Get List of Transactions By Code</h3>\n<pre>result = client.transaction.getTransactionByCode(accessToken, qrCode)\n</pre>\n</div>\n</div>\n<div id=\"loyalty\">\n<h2>Loyalty</h2>\n<div id=\"give-loyalty-point\">\n<h3>Give Loyalty Point</h3>\n<pre>result = client.loyalty.giveLoyaltyPoint(accessToken, {\n    \"point\": 100,\n    \"type\": \"ID\",\n    \"memberId\": \"7765269777796630408\",\n    \"countryCode\": \"60\",\n    \"phoneNumber\": \"172826990\"\n})\n</pre>\n</div>\n<div id=\"get-loyalty-member\">\n<h3>Get Loyalty Member</h3>\n<pre>result = client.loyalty.getLoyaltyMember(accessToken, memberID)\n</pre>\n</div>\n<div id=\"get-list-of-loyalty-members\">\n<h3>Get List of Loyalty Members</h3>\n<pre>result = client.loyalty.getLoyaltyMembers(accessToken)\n</pre>\n</div>\n<div id=\"get-point-history\">\n<h3>Get Point History</h3>\n<p>Get Loyalty point history of a member</p>\n<pre>result = client.loyalty.getLoyaltyMemberPointHistory(accessToken, memberID)\n</pre>\n</div>\n</div>\n<div id=\"voucher\">\n<h2>Voucher</h2>\n<div id=\"issue-voucher\">\n<h3>Issue Voucher</h3>\n<pre>result = client.voucher.issueVoucher(accessToken, batchKey)\n</pre>\n</div>\n<div id=\"void-voucher\">\n<h3>Void Voucher</h3>\n<pre>result = client.voucher.voidVoucher(accessToken, voucherCode)\n</pre>\n</div>\n<div id=\"get-voucher-by-code\">\n<h3>Get Voucher By Code</h3>\n<pre>result = client.voucher.getVoucherByCode(accessToken, voucherCode)\n</pre>\n</div>\n<div id=\"get-voucher-batches\">\n<h3>Get Voucher Batches</h3>\n<pre>result = client.voucher.getVoucherBatches(accessToken)\n</pre>\n</div>\n<div id=\"get-voucher-batches-by-batch-key\">\n<h3>Get Voucher Batches By Batch Key</h3>\n<pre>result = client.voucher.getVoucherBatchByKey(accessToken, batchKey)\n</pre>\n<p>Detail examples can be found at\n<a href=\"https://github.com/RevenueMonster/RM-API-SDK-Python/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4702663, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2c731f998d93f9028f4c773377baf58e", "sha256": "10acb7695e5371f7c653bbc02a43c76730843bf869d64a80339932cf1db42500"}, "downloads": -1, "filename": "rmsdk-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c731f998d93f9028f4c773377baf58e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12224, "upload_time": "2019-01-14T04:12:18", "upload_time_iso_8601": "2019-01-14T04:12:18.320968Z", "url": "https://files.pythonhosted.org/packages/4c/8e/e0570440012ff7f6fd6e0391a2800f601f38b8ce0be34b5521bce3f9dade/rmsdk-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a8d7d24a91c2e87b5b87a297e10d3b8", "sha256": "3fa22b5a7aff2e5c7eb04103249019dcd75362ebe88072c8bd261157830ce72f"}, "downloads": -1, "filename": "rmsdk-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0a8d7d24a91c2e87b5b87a297e10d3b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8603, "upload_time": "2019-01-14T04:12:20", "upload_time_iso_8601": "2019-01-14T04:12:20.381734Z", "url": "https://files.pythonhosted.org/packages/46/91/5fe71fd94d374aeaff218e0ca7923762241d8c316118be2f801d3637f17d/rmsdk-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5da608c85de952ca6eb6aebd65afbcf7", "sha256": "1e8a91b984d21320a1e2b5b11d0bd78e2fa03fea305c8620bc6f44d11ba86bed"}, "downloads": -1, "filename": "rmsdk-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5da608c85de952ca6eb6aebd65afbcf7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13550, "upload_time": "2019-01-16T10:37:53", "upload_time_iso_8601": "2019-01-16T10:37:53.723906Z", "url": "https://files.pythonhosted.org/packages/5f/9f/c2e31121f6fd1097b0c6633900754940671aff0b57cb8dd61e637424b833/rmsdk-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edac31f9844f64f3dc6c8234598f904c", "sha256": "c7ecac3efdd5869cb521e9d9acc182240dd4aa27807e7e293431b9aad186633c"}, "downloads": -1, "filename": "rmsdk-1.0.1.tar.gz", "has_sig": false, "md5_digest": "edac31f9844f64f3dc6c8234598f904c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11932, "upload_time": "2019-01-16T10:37:55", "upload_time_iso_8601": "2019-01-16T10:37:55.727552Z", "url": "https://files.pythonhosted.org/packages/ba/1b/e200677c370f7c6f18ad5391e368612f6f4967aeb673d4e97bec5fda4a45/rmsdk-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5da608c85de952ca6eb6aebd65afbcf7", "sha256": "1e8a91b984d21320a1e2b5b11d0bd78e2fa03fea305c8620bc6f44d11ba86bed"}, "downloads": -1, "filename": "rmsdk-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5da608c85de952ca6eb6aebd65afbcf7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13550, "upload_time": "2019-01-16T10:37:53", "upload_time_iso_8601": "2019-01-16T10:37:53.723906Z", "url": "https://files.pythonhosted.org/packages/5f/9f/c2e31121f6fd1097b0c6633900754940671aff0b57cb8dd61e637424b833/rmsdk-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edac31f9844f64f3dc6c8234598f904c", "sha256": "c7ecac3efdd5869cb521e9d9acc182240dd4aa27807e7e293431b9aad186633c"}, "downloads": -1, "filename": "rmsdk-1.0.1.tar.gz", "has_sig": false, "md5_digest": "edac31f9844f64f3dc6c8234598f904c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11932, "upload_time": "2019-01-16T10:37:55", "upload_time_iso_8601": "2019-01-16T10:37:55.727552Z", "url": "https://files.pythonhosted.org/packages/ba/1b/e200677c370f7c6f18ad5391e368612f6f4967aeb673d4e97bec5fda4a45/rmsdk-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:11 2020"}