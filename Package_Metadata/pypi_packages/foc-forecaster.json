{"info": {"author": "Drazen Lucanin", "author_email": "kermit666@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Installation\n=======\n\nUbuntu Linux (or other Debian-based distro)\n-----------------------------------------------------------\nOpen a terminal and change directory to the location of this file.\n\nRun the install_dependencies script:\n\n$ sh install_dependencies.sh\n\nWindows\n------------\nBest to install the python(x,y) bundle (http://code.google.com/p/pythonxy/).\n\nAfterwards all the packages mentioned in the install_dependencies.sh file can be installed via pip. For example to install xlrd one would issue the following command inside Command Prompt:\n\n$ pip install xlrd\n\nRunning\n=======\nSet the desired preferences in the configuration file:\n\n./common/conf.py\n\nWrite down the crisis/normal years in the XLS file:\n\n./odabir_uzoraka.xls\n\nPosition yourself inside the irb.foc.forecaster folder (pwd output just to show an example of the correct path):\n\n$ cd irb.foc.forecaster\n$ pwd\n/media/Data/Drazen/Dropbox/dev/eclipse/w2/irb.foc.forecaster\n\nRun the Python interpreter with the entry script run.py as an argument:\n\n$ python run.py\n\n\nLay of the code\n===============\n\nforcaster - main module, use it to start the program\n\ncommon\n------\n|- conf - configuration file with all the preferences\n\\- exceptions - all the custom exceptions are defined here\n\nmodel - contains the data structures\n-----\n|- country - code and list of indicators\n\\- indicator - internal representation: list of dates, list of values\n\nsources - represents the data sources available online.\n-------\n\\- wb - extracts data from the World Bank\n\nai - classes regarding pattern recognition, train and test building etc.\n--\n|- input - parses XLS files to get crisis and normal period years\n|- output - writes the dataset into a text file in a subgroup-discovery-friendly format\n|- samples_set - the representation of the train and test datasets that can build samples based on the crisis/normal years input and indicators and countries specified in the conf file; fetches the data live from the World Bank API\n|- preprocessor - processes the samples to extract useful features (min, max, slope...)\n\\- metadata - column labels and data type marks used when writing the dataset\n\ntests - unit tests for individual modules\n-----", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://kermit.epska.org/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "foc-forecaster", "package_url": "https://pypi.org/project/foc-forecaster/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/foc-forecaster/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://kermit.epska.org/"}, "release_url": "https://pypi.org/project/foc-forecaster/0.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Installation<br>=======<br><br>Ubuntu Linux (or other Debian-based distro)<br>-----------------------------------------------------------<br>Open a terminal and change directory to the location of this file.<br><br>Run the install_dependencies script:<br><br>$ sh install_dependencies.sh<br><br>Windows<br>------------<br>Best to install the python(x,y) bundle (http://code.google.com/p/pythonxy/).<br><br>Afterwards all the packages mentioned in the install_dependencies.sh file can be installed via pip. For example to install xlrd one would issue the following command inside Command Prompt:<br><br>$ pip install xlrd<br><br>Running<br>=======<br>Set the desired preferences in the configuration file:<br><br>./common/conf.py<br><br>Write down the crisis/normal years in the XLS file:<br><br>./odabir_uzoraka.xls<br><br>Position yourself inside the irb.foc.forecaster folder (pwd output just to show an example of the correct path):<br><br>$ cd irb.foc.forecaster<br>$ pwd<br>/media/Data/Drazen/Dropbox/dev/eclipse/w2/irb.foc.forecaster<br><br>Run the Python interpreter with the entry script run.py as an argument:<br><br>$ python run.py<br><br><br>Lay of the code<br>===============<br><br>forcaster - main module, use it to start the program<br><br>common<br>------<br>|- conf - configuration file with all the preferences<br>\\- exceptions - all the custom exceptions are defined here<br><br>model - contains the data structures<br>-----<br>|- country - code and list of indicators<br>\\- indicator - internal representation: list of dates, list of values<br><br>sources - represents the data sources available online.<br>-------<br>\\- wb - extracts data from the World Bank<br><br>ai - classes regarding pattern recognition, train and test building etc.<br>--<br>|- input - parses XLS files to get crisis and normal period years<br>|- output - writes the dataset into a text file in a subgroup-discovery-friendly format<br>|- samples_set - the representation of the train and test datasets that can build samples based on the crisis/normal years input and indicators and countries specified in the conf file; fetches the data live from the World Bank API<br>|- preprocessor - processes the samples to extract useful features (min, max, slope...)<br>\\- metadata - column labels and data type marks used when writing the dataset<br><br>tests - unit tests for individual modules<br>-----\n          </div>"}, "last_serial": 2762176, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cba5e2a09fe3898793e73cbc983284e0", "sha256": "48e6948a71034f24e7ce3f6a15da37f1218967b3bb7c6c0e2ffa8db4393c8b54"}, "downloads": -1, "filename": "foc_forecaster-0.1-py2.7.egg", "has_sig": false, "md5_digest": "cba5e2a09fe3898793e73cbc983284e0", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 41732, "upload_time": "2012-03-16T11:07:09", "upload_time_iso_8601": "2012-03-16T11:07:09.872638Z", "url": "https://files.pythonhosted.org/packages/bd/8a/2c754854f8f5f63c6695ece34d361f7b1a15415a5313cccc73e633d6ad75/foc_forecaster-0.1-py2.7.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cba5e2a09fe3898793e73cbc983284e0", "sha256": "48e6948a71034f24e7ce3f6a15da37f1218967b3bb7c6c0e2ffa8db4393c8b54"}, "downloads": -1, "filename": "foc_forecaster-0.1-py2.7.egg", "has_sig": false, "md5_digest": "cba5e2a09fe3898793e73cbc983284e0", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 41732, "upload_time": "2012-03-16T11:07:09", "upload_time_iso_8601": "2012-03-16T11:07:09.872638Z", "url": "https://files.pythonhosted.org/packages/bd/8a/2c754854f8f5f63c6695ece34d361f7b1a15415a5313cccc73e633d6ad75/foc_forecaster-0.1-py2.7.egg", "yanked": false}], "timestamp": "Fri May  8 01:01:14 2020"}