{"info": {"author": "Jason Paryani", "author_email": "pypi-contact@jparyani.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: C++", "Programming Language :: Cython", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications"], "description": "pycapnp\n=======\n\nMore thorough docs are available at http://jparyani.github.io/pycapnp/.\n\nRequirements\n------------\n\npycapnp's distribution has no requirements beyond a C++11 compatible\ncompiler. GCC 4.8+ or Clang 3.3+ should work fine.\n\npycapnp has additional development dependencies, including cython and\npy.test. See requirements.txt for them all.\n\nBuilding and installation\n-------------------------\n\nInstall with ``pip install pycapnp``. You can set the CC environment\nvariable to control which compiler is used, ie\n``CC=gcc-4.8 pip install pycapnp``.\n\nOr you can clone the repo like so:\n\n::\n\n    git clone https://github.com/jparyani/pycapnp.git\n    pip install --install-option '--force-cython' ./pycapnp\n\nNote: for OSX, if using clang from Xcode 5, you may need to set\n``CFLAGS`` like so:\n\n::\n\n    CFLAGS='-stdlib=libc++' pip install pycapnp\n\nIf you wish to install using the latest upstream C++ Cap'n Proto:\n\n::\n\n    pip install --install-option \"--libcapnp-url\" --install-option \"https://github.com/sandstorm-io/capnproto/archive/master.tar.gz\" --install-option \"--force-bundled-libcapnp\" .\n\nPython Versions\n---------------\n\nPython 2.7, Python 3.4+, and PyPy 2.1+ are supported.\n\nOne oddity to note is that ``Text`` type fields will be treated as byte\nstrings under Python 2, and unicode strings under Python 3. ``Data``\nfields will always be treated as byte strings.\n\nDevelopment\n-----------\n\nThis project uses\n`git-flow <http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/>`__.\nEssentially, just make sure you do your changes in the ``develop``\nbranch. You can run the tests by installing pytest with\n``pip install pytest``, and then run ``py.test`` from the ``test``\ndirectory.\n\nBinary Packages\n~~~~~~~~~~~~~~~\n\nBuilding a dumb binary distribution:\n\n::\n\n    python setup.py bdist_dumb\n\nBuilding a Python wheel distributiion:\n\n::\n\n    python setup.py bdist_wheel\n\nIf it fails with an error like\n``clang: error: no such file or directory: 'capnp/lib/capnp.cpp'``, then\nyou need to cythonize fist. This can be done with:\n\n::\n\n    python setup.py build --force-cython\n\nDocumentation/Example\n---------------------\n\nThere is some basic documentation\n`here <http://jparyani.github.io/pycapnp/>`__.\n\nThe examples directory has one example that shows off pycapnp quite\nnicely. Here it is, reproduced:\n\n.. code:: python\n\n    from __future__ import print_function\n    import os\n    import capnp\n\n    import addressbook_capnp\n\n    def writeAddressBook(file):\n        addresses = addressbook_capnp.AddressBook.new_message()\n        people = addresses.init('people', 2)\n\n        alice = people[0]\n        alice.id = 123\n        alice.name = 'Alice'\n        alice.email = 'alice@example.com'\n        alicePhones = alice.init('phones', 1)\n        alicePhones[0].number = \"555-1212\"\n        alicePhones[0].type = 'mobile'\n        alice.employment.school = \"MIT\"\n\n        bob = people[1]\n        bob.id = 456\n        bob.name = 'Bob'\n        bob.email = 'bob@example.com'\n        bobPhones = bob.init('phones', 2)\n        bobPhones[0].number = \"555-4567\"\n        bobPhones[0].type = 'home'\n        bobPhones[1].number = \"555-7654\"\n        bobPhones[1].type = 'work'\n        bob.employment.unemployed = None\n\n        addresses.write(file)\n\n\n    def printAddressBook(file):\n        addresses = addressbook_capnp.AddressBook.read(file)\n\n        for person in addresses.people:\n            print(person.name, ':', person.email)\n            for phone in person.phones:\n                print(phone.type, ':', phone.number)\n\n            which = person.employment.which()\n            print(which)\n\n            if which == 'unemployed':\n                print('unemployed')\n            elif which == 'employer':\n                print('employer:', person.employment.employer)\n            elif which == 'school':\n                print('student at:', person.employment.school)\n            elif which == 'selfEmployed':\n                print('self employed')\n            print()\n\n\n    if __name__ == '__main__':\n        f = open('example', 'w')\n        writeAddressBook(f)\n\n        f = open('example', 'r')\n        printAddressBook(f)\n\nAlso, pycapnp has gained RPC features that include pipelining and a\npromise style API. Refer to the calculator example in the examples\ndirectory for a much better demonstration:\n\n.. code:: python\n\n    import capnp\n    import socket\n\n    import test_capability_capnp\n\n\n    class Server(test_capability_capnp.TestInterface.Server):\n\n        def __init__(self, val=1):\n            self.val = val\n\n        def foo(self, i, j, **kwargs):\n            return str(i * 5 + self.val)\n\n\n    def server(write_end):\n        server = capnp.TwoPartyServer(write_end, bootstrap=Server(100))\n\n\n    def client(read_end):\n        client = capnp.TwoPartyClient(read_end)\n\n        cap = client.bootstrap()\n        cap = cap.cast_as(test_capability_capnp.TestInterface)\n\n        remote = cap.foo(i=5)\n        response = remote.wait()\n\n        assert response.x == '125'\n\n\n    if __name__ == '__main__':\n        read_end, write_end = socket.socketpair(socket.AF_UNIX)\n        # This is a toy example using socketpair.\n        # In real situations, you can use any socket.\n\n        server(write_end)\n        client(read_end)\n\nCommon Problems\n---------------\n\nIf you get an error on installation like:\n\n::\n\n    ...\n    gcc-4.8: error: capnp/capnp.c: No such file or directory\n\n    gcc-4.8: fatal error: no input files\n\nThen you have too old a version of setuptools. Run\n``pip install -U setuptools`` then try again.\n\n|Build Status|\n\n.. |Build Status| image:: https://travis-ci.org/jparyani/pycapnp.png?branch=develop\n   :target: https://travis-ci.org/jparyani/pycapnp\n\nChangelog\n=============\nv0.6.4 (2019-1-31)\n------------------\n\n-  Fix bugs in ``read_multiple_bytes`` (thanks to @tsh56)\n-  Remove end-of-life Python versions 2.6, 3.2, and 3.3. Add CI tests\n   for 3.6\n-  Expose SchemaParser in Cython header\n\nv0.6.3 (2018-01-14)\n-------------------\n\n-  Bump bundled capnp version to v0.6.1 (thanks to @E8Yuval)\n-  Fix a memleak in RemotePromise (thanks to @E8Yuval)\n\nv0.6.2 (2017-11-30)\n-------------------\n\n-  Add support for buffers/memoryviews in ``from_bytes`` (thanks to\n   @aldanor)\n\nv0.6.1 (2017-07-27)\n-------------------\n\n-  Fixed upload to PyPi (forgot to cythonize)\n\nv0.6.0 (2017-07-27)\n-------------------\n\n-  Update bundled capnp version to v0.6.0 and fix related problems\n   (thanks to @benmoran)\n-  Fix memleak with KjException (thanks to @tsh56)\n\nv0.5.12 (2017-04-18)\n--------------------\n\n-  Bump bundled capnp version to v0.5.3.1\n\nv0.5.11 (2017-04-10)\n--------------------\n\n-  Make enums hashable (thanks to @madeleine-empirical)\n-  Rework logic on when to build bundled libcapnp. Fixes\n   cross-compilation (thanks to @benizl)\n-  Add traversal\\_limit\\_in\\_words and nesting\\_limit to RPC classes\n   (thanks to @asilversempirical)\n-  Include class attributes in **dir**. This allows for code completion\n   of class methods (thanks to @chaoflow )\n-  Allow setting lists with python tuples (thanks to @chaoflow)\n-  Fix traversal\\_limit\\_in\\_words and nesting\\_limit being ignored by\n   ``from_bytes`` (thanks to @plesner)\n\nv0.5.10 (2016-11-28)\n--------------------\n\n-  Fix bug that prevented event loop from actually being lazy\n   initialized\n-  Fix possible recursive loop in KjException\n-  Add ``clear_write_flag`` method to builder classes\n\nv0.5.9 (2016-07-07)\n-------------------\n\n-  Make the event loop be lazy initialized\n-  Add support for segment (de)serialization (thanks to @gcv). See\n   to\\_segments/from\\_segments methods.\n-  Fix response objects not referencing parents correctly\n-  Add test for large reads\n\nv0.5.8 (2016-05-27)\n-------------------\n\n-  Fix build problem with Cython v0.24\n-  Include the changelog in the manifest (should fix install problems if\n   pandoc is present)\n-  Include the traceback in exceptions\n-  Make sure to encode to utf-8, not the default encoding (thanks to\n   @novas0x2a)\n-  Add --libcapnp-url option in installer to allow installing arbitrary\n   libcapnp versions\n-  Support mmap objects for reading with from\\_bytes (thanks to\n   @bpiwowar)\n-  Change read\\_multiple and read\\_multiple\\_packed to copy by default\n-  Fix mistakenly discarding the file parameter on reads\n-  Add reraise\\_kj\\_exception to the prettyPrint functions. (thanks to\n   @kdienes)\n-  Fix KjException init (missing wrapper). (thanks to @E8-Storage)\n-  Add ``result_type`` to InterfaceMethodSchema\n\nv0.5.7 (2015-06-16)\n-------------------\n\n-  Update bundled libcapnp to v0.5.2\n-  Add warnings for using old restorer methods. You should use\n   ``bootstrap`` instead\n-  Fix warning from PyEventPort\n-  Handle AnyPointers better as arguments to RPC functions\n-  Add support for using keyword arguments with a named struct in an RPC\n-  Add bootstrap method to TwoPartyServer\n-  Add ``init`` method to lists\n-  Add support for unix sockets in RPC\n\nv0.5.6 (2015-04-13)\n-------------------\n\n-  Fix a serious bug in TwoPartyServer that was preventing it from\n   working when passed a string address.\n-  Fix bugs that were exposed by defining KJDEBUG (thanks @davidcarne\n   for finding this)\n\nv0.5.5 (2015-03-06)\n-------------------\n\n-  Update bundled C++ libcapnp to v0.5.1.2 security release\n\nv0.5.4 (2015-03-02)\n-------------------\n\n-  Update bundled C++ libcapnp to v0.5.1.1 security release\n-  Add bootstrap RPC methods\n-  Fix possible segfault when importing multiple schemas\n\nv0.5.3 (2015-02-23)\n-------------------\n\n-  Fix possible crash due to bad destructor ordering in MessageReader\n   (by @JohnEmhoff)\n-  Default to no longer using cython\n\nv0.5.2 (2015-02-20)\n-------------------\n\n-  Add read\\_multiple\\_bytes/read\\_multiple\\_bytes\\_packed methods\n-  Added Python 3.4 to the travis build matrix\n-  Bump version for bundled C++ libcapnp to v0.5.1\n\nv0.5.1 (2014-12-27)\n-------------------\n\n-  Remove installation dependency on cython. We now have no dependencies\n   since libcapnp will automatically build as well.\n\nv0.5.0 (2014-12-15)\n-------------------\n\n-  Timer class ``capnp.getTimer()``\n-  pycapnp is now thread-safe and allows an event loop to be run in each\n   thread\n-  You must destroy and re-create the event loop to get this\n   functionality (see ``test_threads.py``)\n-  Inheritance now works correctly for interfaces (previously inherited\n   methods were inaccessible from pycapnp)\n-  Add ability to import modules with dashes or spaces. Use underscores\n   in place of them\n-  ``from_bytes`` with builder=True is no longer zero copy. It never\n   worked correctly, and is much safer now\n-  Add ``num_first_segment_words`` argument wherever message creation\n   can occur\n-  Allow restoring a null objectId by passing None to restore\n-  Support ordered dictionary in ``to_dict``\n-  Add ListSchema class and schemas for native types under\n   ``capnp.types`` which completes all the Schemas needed to be wrapped.\n   See ``test_schema.py`` for examples using it\n-  Add automatic build of C++ libcapnp if it's not detected on the\n   system. Also add flags --force-bundled-libcapnp and\n   --force-system-libcapnp respectively\n\nv0.4.6 (2014-9-10)\n------------------\n\n-  Fix build for new 0.21 release of Cython. 0.21 is now the minimum\n   supported version of Cython.\n\nv0.4.5 (2014-6-26)\n------------------\n\n-  Fix ``to_dict`` not converting enums to strings\n\nv0.4.4 (2014-04-25)\n-------------------\n\n-  Fix compilation problem with gcc 4.8\n\nv0.4.3 (2014-02-18)\n-------------------\n\n-  Fix problem with uninitialized unions in \\_from\\_dict\n-  Add accesible version numbers for C++ libcapnp\n\nv0.4.2 (2014-02-13)\n-------------------\n\n-  Remove onDrained since it was removed upstream\n-  Replace usage of strings as enum type with custom ``_DynamicEnum``\n   class.\n-  Also change ``Struct.which()`` method to be a property\n   ``Struct.which`` and return an enum type (``_DynamicEnumField``,\n   which behaves much like ``_DynamicEnum``).\n-  TwoPartyServer.run\\_forever() now will handle more than 1\n   simulataneous connection.\n-  Change exception wrapper to detect and raise AttributeError for field\n   lookup exceptions (Fixes problem in Python3.x ``__dir__``)\n-  Allow setting of fields with python dicts.\n\n0.4.1 (2013-12-18)\n------------------\n\n-  Remove python 3.2 from travis tests. Python 3.2 still should work\n   fine, but it's more trouble than it's worth to write unicode tests\n   that work in both it and Python2.\n-  Fix problems with null characters in Text/Data fields. Fixes #19\n\n0.4.0 (2013-12-12)\n------------------\n\n-  Initial working version of RPC\n-  Add get\\_root\\_as\\_any to \\_MessageReader\n-  Add capnp.pxd for public declarations of cython classes\n-  Fix problems compiling with gcc4.7\n\nv0.3.18 (2013-11-05)\n--------------------\n\n-  Change naming of ReaderOption parameters to be pep8 compliant\n\nv0.3.17 (2013-11-05)\n--------------------\n\n-  Add ReaderOptions to read/read\\_packed/from\\_bytes\n\nv0.3.16 (2013-10-28)\n--------------------\n\n-  Add defaults flag to capnp-json. Also remove 'which' field\n-  Add capnp-json serializer script. Also fix bugs in from\\_dict\n-  Fix build for clang/python3. Also remove -fpermissive\n-  Add ``as_builder`` method to Struct Reader\n-  Add warning when writing the same message more than once\n-  First working version of capability interfaces\n-  Wrap InterfaceSchema\n-  Fix setting string fields to support all types of strings\n-  Fix changed API for DynamicObject/ObjectPointer\n\nv0.3.15 (2013-09-19)\n--------------------\n\n-  Add not having installed the C++ libcapnp library to 'Common\n   Problems'\n-  Add *short*\\ str function for use in capnp\\_test\\_pycapnp.py\n-  Add test script for testing with https://github.com/kaos/capnp\\_test\n-  Add handling of DynamicObject\n-  Fix lists of lists or dicts for from\\_dict\n\nv0.3.14 (2013-09-04)\n--------------------\n\n-  Fix problem with to\\_dict\n\nv0.3.13 (2013-09-04)\n--------------------\n\n-  Add *DynamicStructBuilder.to*\\ bytes() and .from\\_bytes()\n-  Change == on StructSchema to return cbool\n-  Add Builder and Reader ABCs for each struct type\n\nv0.3.12 (2013-09-03)\n--------------------\n\n-  Fix handling of empty path '' in load\\_module\n-  Add from\\_dict\n-  Fix bug in exception handling for which(). Also standardize\n   exceptions.\n-  Change import hook to require modules to end in '\\_capnp'\n-  Add import monkey patch function.\n-  Change naming for functions to conform to PEP 8. Also deprecate old\n   read/write API\n-  Update preferred method for reading/writing messages from files\n\nv0.3.11 (2013-09-01)\n--------------------\n\n-  Forgot to change project name in setup.py\n\nv0.3.10 (2013-09-01)\n--------------------\n\n-  Change all references to old project name (change from\n   capnpc-python-cpp to pycapnp)\n-  Change DynamicValue.Reader lists to be returned as\n   \\_DynamicListReader\n-  Unify setters for DynamicList and DynamicStruct\n-  Add shortcuts for reading from / writing to files. In Python, it\n   doesn't make much sense to force people to muck around with\n   MessageReaders and MessageBuilders since everything is landing on the\n   heap anyway. Instead, let's make it easy:\n   MyType.read[Packed]From(file) reads a file and returns a MyType\n   reader. MyType.newMessage() returns a MyType builder representing the\n   root of a new message. You can call this builder's\n   write[Packed]To(file) method to write it to a file.\n-  Store Builders by value rather than allocate them separately on the\n   heap (matches treatment of Readers). v0.3 fixes the bug that made\n   this not work.\n-  Wrap MessageBuilder::setRoot().\n-  Add tests based on TestAllTypes from the C++ test.capnp. Fix problems\n   uncovered in capnp.pyx.\n-  Implement **str** and **repr** for struct and list builders. **str**\n   uses prettyPrint while **repr** shows the type name and the\n   low-whitespace stringification. Also implement **repr** for\n   StructSchema, just because why not?\n\nv0.3.9 (2013-08-30)\n-------------------\n\n-  Change load to use a global SchemaParser. Make structs settable as\n   field\n-  Add docstrings for new functions and \\_DynamicResizableListBuilder\n\nv0.3.8 (2013-08-29)\n-------------------\n\n-  Add initial tests\n-  Add \\_capnp for original Cython module. Meant for testing.\n-  Lowercase schema so it conforms to member naming conventions\n-  Expose \\_StructSchema's raw node\n-  Add some useful \\_StructSchema, reader, and builder methods\n-  Add full orphan functionality. Also, allow special orphan lists\n-  Finish up adding docstrings to all public classes/methods\n\nv0.3.7 (2013-08-26)\n-------------------\n\n-  Add a ton of docstrings and add to official docs\n-  Add DynamicOrphan\n\nv0.3.6 (2013-08-26)\n-------------------\n\n-  Add intersphinx for linking to python docs\n-  Add C++ library version check\n\nv0.3.5 (2013-08-25)\n-------------------\n\n-  Add handling of constants in schemas\n-  Fix new error with DynamicValue.Builder no longer being copyable\n\nv0.3.4 (2013-08-22)\n-------------------\n\n-  Fix Void namespace change\n-  Updated capnp schema to conform with new union rules\n\nv0.3.3 (2013-08-22)\n-------------------\n\n-  Fix for the removal of DynamicUnion from the C++ API\n\nv0.3.2 (2013-08-21)\n-------------------\n\n-  Add MANIFEST.in to include README\n\nv0.3.1 (2013-08-21)\n-------------------\n\n-  Update docs with lines about upgrading setuptools\n\n0.3.0 (2013-08-21)\n------------------\n\n-  Initial commit of docs\n-  Add querying unnamed enums to structs\n\n0.2.1 (2013-08-13)\n------------------\n\n-  Fix enum interface change for benchmark\n-  Random formatting cleanup\n-  Allow import paths in the schema loader\n-  Add travis CI\n\n0.2.0 (2013-08-12)\n------------------\n\n-  Initial working version\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/jparyani/pycapnp/archive/v0.6.4.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jparyani/pycapnp", "keywords": "capnp", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pycapnp", "package_url": "https://pypi.org/project/pycapnp/", "platform": "", "project_url": "https://pypi.org/project/pycapnp/", "project_urls": {"Download": "https://github.com/jparyani/pycapnp/archive/v0.6.4.zip", "Homepage": "https://github.com/jparyani/pycapnp"}, "release_url": "https://pypi.org/project/pycapnp/0.6.4/", "requires_dist": null, "requires_python": "", "summary": "A cython wrapping of the C++ Cap'n Proto library", "version": "0.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pycapnp\">\n<h2>pycapnp</h2>\n<p>More thorough docs are available at <a href=\"http://jparyani.github.io/pycapnp/\" rel=\"nofollow\">http://jparyani.github.io/pycapnp/</a>.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>pycapnp\u2019s distribution has no requirements beyond a C++11 compatible\ncompiler. GCC 4.8+ or Clang 3.3+ should work fine.</p>\n<p>pycapnp has additional development dependencies, including cython and\npy.test. See requirements.txt for them all.</p>\n</div>\n<div id=\"building-and-installation\">\n<h3>Building and installation</h3>\n<p>Install with <tt>pip install pycapnp</tt>. You can set the CC environment\nvariable to control which compiler is used, ie\n<tt><span class=\"pre\">CC=gcc-4.8</span> pip install pycapnp</tt>.</p>\n<p>Or you can clone the repo like so:</p>\n<pre>git clone https://github.com/jparyani/pycapnp.git\npip install --install-option '--force-cython' ./pycapnp\n</pre>\n<p>Note: for OSX, if using clang from Xcode 5, you may need to set\n<tt>CFLAGS</tt> like so:</p>\n<pre>CFLAGS='-stdlib=libc++' pip install pycapnp\n</pre>\n<p>If you wish to install using the latest upstream C++ Cap\u2019n Proto:</p>\n<pre>pip install --install-option \"--libcapnp-url\" --install-option \"https://github.com/sandstorm-io/capnproto/archive/master.tar.gz\" --install-option \"--force-bundled-libcapnp\" .\n</pre>\n</div>\n<div id=\"python-versions\">\n<h3>Python Versions</h3>\n<p>Python 2.7, Python 3.4+, and PyPy 2.1+ are supported.</p>\n<p>One oddity to note is that <tt>Text</tt> type fields will be treated as byte\nstrings under Python 2, and unicode strings under Python 3. <tt>Data</tt>\nfields will always be treated as byte strings.</p>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>This project uses\n<a href=\"http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/\" rel=\"nofollow\">git-flow</a>.\nEssentially, just make sure you do your changes in the <tt>develop</tt>\nbranch. You can run the tests by installing pytest with\n<tt>pip install pytest</tt>, and then run <tt>py.test</tt> from the <tt>test</tt>\ndirectory.</p>\n<div id=\"binary-packages\">\n<h4>Binary Packages</h4>\n<p>Building a dumb binary distribution:</p>\n<pre>python setup.py bdist_dumb\n</pre>\n<p>Building a Python wheel distributiion:</p>\n<pre>python setup.py bdist_wheel\n</pre>\n<p>If it fails with an error like\n<tt>clang: error: no such file or directory: 'capnp/lib/capnp.cpp'</tt>, then\nyou need to cythonize fist. This can be done with:</p>\n<pre>python setup.py build --force-cython\n</pre>\n</div>\n</div>\n<div id=\"documentation-example\">\n<h3>Documentation/Example</h3>\n<p>There is some basic documentation\n<a href=\"http://jparyani.github.io/pycapnp/\" rel=\"nofollow\">here</a>.</p>\n<p>The examples directory has one example that shows off pycapnp quite\nnicely. Here it is, reproduced:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">capnp</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">addressbook_capnp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">writeAddressBook</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">):</span>\n    <span class=\"n\">addresses</span> <span class=\"o\">=</span> <span class=\"n\">addressbook_capnp</span><span class=\"o\">.</span><span class=\"n\">AddressBook</span><span class=\"o\">.</span><span class=\"n\">new_message</span><span class=\"p\">()</span>\n    <span class=\"n\">people</span> <span class=\"o\">=</span> <span class=\"n\">addresses</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'people'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"n\">alice</span> <span class=\"o\">=</span> <span class=\"n\">people</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>\n    <span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Alice'</span>\n    <span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s1\">'alice@example.com'</span>\n    <span class=\"n\">alicePhones</span> <span class=\"o\">=</span> <span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'phones'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">alicePhones</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"s2\">\"555-1212\"</span>\n    <span class=\"n\">alicePhones</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'mobile'</span>\n    <span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">employment</span><span class=\"o\">.</span><span class=\"n\">school</span> <span class=\"o\">=</span> <span class=\"s2\">\"MIT\"</span>\n\n    <span class=\"n\">bob</span> <span class=\"o\">=</span> <span class=\"n\">people</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">456</span>\n    <span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Bob'</span>\n    <span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s1\">'bob@example.com'</span>\n    <span class=\"n\">bobPhones</span> <span class=\"o\">=</span> <span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'phones'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">bobPhones</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"s2\">\"555-4567\"</span>\n    <span class=\"n\">bobPhones</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'home'</span>\n    <span class=\"n\">bobPhones</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"s2\">\"555-7654\"</span>\n    <span class=\"n\">bobPhones</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'work'</span>\n    <span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">employment</span><span class=\"o\">.</span><span class=\"n\">unemployed</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"n\">addresses</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">printAddressBook</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">):</span>\n    <span class=\"n\">addresses</span> <span class=\"o\">=</span> <span class=\"n\">addressbook_capnp</span><span class=\"o\">.</span><span class=\"n\">AddressBook</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">person</span> <span class=\"ow\">in</span> <span class=\"n\">addresses</span><span class=\"o\">.</span><span class=\"n\">people</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s1\">':'</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">phone</span> <span class=\"ow\">in</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">phones</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"s1\">':'</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">)</span>\n\n        <span class=\"n\">which</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">employment</span><span class=\"o\">.</span><span class=\"n\">which</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">which</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">which</span> <span class=\"o\">==</span> <span class=\"s1\">'unemployed'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'unemployed'</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">which</span> <span class=\"o\">==</span> <span class=\"s1\">'employer'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'employer:'</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">employment</span><span class=\"o\">.</span><span class=\"n\">employer</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">which</span> <span class=\"o\">==</span> <span class=\"s1\">'school'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'student at:'</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">employment</span><span class=\"o\">.</span><span class=\"n\">school</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">which</span> <span class=\"o\">==</span> <span class=\"s1\">'selfEmployed'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'self employed'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span>\n    <span class=\"n\">writeAddressBook</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n    <span class=\"n\">printAddressBook</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p>Also, pycapnp has gained RPC features that include pipelining and a\npromise style API. Refer to the calculator example in the examples\ndirectory for a much better demonstration:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">capnp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">test_capability_capnp</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Server</span><span class=\"p\">(</span><span class=\"n\">test_capability_capnp</span><span class=\"o\">.</span><span class=\"n\">TestInterface</span><span class=\"o\">.</span><span class=\"n\">Server</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">server</span><span class=\"p\">(</span><span class=\"n\">write_end</span><span class=\"p\">):</span>\n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">capnp</span><span class=\"o\">.</span><span class=\"n\">TwoPartyServer</span><span class=\"p\">(</span><span class=\"n\">write_end</span><span class=\"p\">,</span> <span class=\"n\">bootstrap</span><span class=\"o\">=</span><span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">client</span><span class=\"p\">(</span><span class=\"n\">read_end</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">capnp</span><span class=\"o\">.</span><span class=\"n\">TwoPartyClient</span><span class=\"p\">(</span><span class=\"n\">read_end</span><span class=\"p\">)</span>\n\n    <span class=\"n\">cap</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">bootstrap</span><span class=\"p\">()</span>\n    <span class=\"n\">cap</span> <span class=\"o\">=</span> <span class=\"n\">cap</span><span class=\"o\">.</span><span class=\"n\">cast_as</span><span class=\"p\">(</span><span class=\"n\">test_capability_capnp</span><span class=\"o\">.</span><span class=\"n\">TestInterface</span><span class=\"p\">)</span>\n\n    <span class=\"n\">remote</span> <span class=\"o\">=</span> <span class=\"n\">cap</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"s1\">'125'</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">read_end</span><span class=\"p\">,</span> <span class=\"n\">write_end</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">socketpair</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">AF_UNIX</span><span class=\"p\">)</span>\n    <span class=\"c1\"># This is a toy example using socketpair.</span>\n    <span class=\"c1\"># In real situations, you can use any socket.</span>\n\n    <span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">write_end</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span><span class=\"p\">(</span><span class=\"n\">read_end</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"common-problems\">\n<h3>Common Problems</h3>\n<p>If you get an error on installation like:</p>\n<pre>...\ngcc-4.8: error: capnp/capnp.c: No such file or directory\n\ngcc-4.8: fatal error: no input files\n</pre>\n<p>Then you have too old a version of setuptools. Run\n<tt>pip install <span class=\"pre\">-U</span> setuptools</tt> then try again.</p>\n<p><a href=\"https://travis-ci.org/jparyani/pycapnp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/345188bfa403039cc457803cd9a88306e08d336c/68747470733a2f2f7472617669732d63692e6f72672f6a70617279616e692f70796361706e702e706e673f6272616e63683d646576656c6f70\"></a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-6-4-2019-1-31\">\n<h3>v0.6.4 (2019-1-31)</h3>\n<ul>\n<li>Fix bugs in <tt>read_multiple_bytes</tt> (thanks to @tsh56)</li>\n<li>Remove end-of-life Python versions 2.6, 3.2, and 3.3. Add CI tests\nfor 3.6</li>\n<li>Expose SchemaParser in Cython header</li>\n</ul>\n</div>\n<div id=\"v0-6-3-2018-01-14\">\n<h3>v0.6.3 (2018-01-14)</h3>\n<ul>\n<li>Bump bundled capnp version to v0.6.1 (thanks to @E8Yuval)</li>\n<li>Fix a memleak in RemotePromise (thanks to @E8Yuval)</li>\n</ul>\n</div>\n<div id=\"v0-6-2-2017-11-30\">\n<h3>v0.6.2 (2017-11-30)</h3>\n<ul>\n<li>Add support for buffers/memoryviews in <tt>from_bytes</tt> (thanks to\n@aldanor)</li>\n</ul>\n</div>\n<div id=\"v0-6-1-2017-07-27\">\n<h3>v0.6.1 (2017-07-27)</h3>\n<ul>\n<li>Fixed upload to PyPi (forgot to cythonize)</li>\n</ul>\n</div>\n<div id=\"v0-6-0-2017-07-27\">\n<h3>v0.6.0 (2017-07-27)</h3>\n<ul>\n<li>Update bundled capnp version to v0.6.0 and fix related problems\n(thanks to @benmoran)</li>\n<li>Fix memleak with KjException (thanks to @tsh56)</li>\n</ul>\n</div>\n<div id=\"v0-5-12-2017-04-18\">\n<h3>v0.5.12 (2017-04-18)</h3>\n<ul>\n<li>Bump bundled capnp version to v0.5.3.1</li>\n</ul>\n</div>\n<div id=\"v0-5-11-2017-04-10\">\n<h3>v0.5.11 (2017-04-10)</h3>\n<ul>\n<li>Make enums hashable (thanks to @madeleine-empirical)</li>\n<li>Rework logic on when to build bundled libcapnp. Fixes\ncross-compilation (thanks to @benizl)</li>\n<li>Add traversal_limit_in_words and nesting_limit to RPC classes\n(thanks to @asilversempirical)</li>\n<li>Include class attributes in <strong>dir</strong>. This allows for code completion\nof class methods (thanks to @chaoflow )</li>\n<li>Allow setting lists with python tuples (thanks to @chaoflow)</li>\n<li>Fix traversal_limit_in_words and nesting_limit being ignored by\n<tt>from_bytes</tt> (thanks to @plesner)</li>\n</ul>\n</div>\n<div id=\"v0-5-10-2016-11-28\">\n<h3>v0.5.10 (2016-11-28)</h3>\n<ul>\n<li>Fix bug that prevented event loop from actually being lazy\ninitialized</li>\n<li>Fix possible recursive loop in KjException</li>\n<li>Add <tt>clear_write_flag</tt> method to builder classes</li>\n</ul>\n</div>\n<div id=\"v0-5-9-2016-07-07\">\n<h3>v0.5.9 (2016-07-07)</h3>\n<ul>\n<li>Make the event loop be lazy initialized</li>\n<li>Add support for segment (de)serialization (thanks to @gcv). See\nto_segments/from_segments methods.</li>\n<li>Fix response objects not referencing parents correctly</li>\n<li>Add test for large reads</li>\n</ul>\n</div>\n<div id=\"v0-5-8-2016-05-27\">\n<h3>v0.5.8 (2016-05-27)</h3>\n<ul>\n<li>Fix build problem with Cython v0.24</li>\n<li>Include the changelog in the manifest (should fix install problems if\npandoc is present)</li>\n<li>Include the traceback in exceptions</li>\n<li>Make sure to encode to utf-8, not the default encoding (thanks to\n@novas0x2a)</li>\n<li>Add \u2013libcapnp-url option in installer to allow installing arbitrary\nlibcapnp versions</li>\n<li>Support mmap objects for reading with from_bytes (thanks to\n@bpiwowar)</li>\n<li>Change read_multiple and read_multiple_packed to copy by default</li>\n<li>Fix mistakenly discarding the file parameter on reads</li>\n<li>Add reraise_kj_exception to the prettyPrint functions. (thanks to\n@kdienes)</li>\n<li>Fix KjException init (missing wrapper). (thanks to @E8-Storage)</li>\n<li>Add <tt>result_type</tt> to InterfaceMethodSchema</li>\n</ul>\n</div>\n<div id=\"v0-5-7-2015-06-16\">\n<h3>v0.5.7 (2015-06-16)</h3>\n<ul>\n<li>Update bundled libcapnp to v0.5.2</li>\n<li>Add warnings for using old restorer methods. You should use\n<tt>bootstrap</tt> instead</li>\n<li>Fix warning from PyEventPort</li>\n<li>Handle AnyPointers better as arguments to RPC functions</li>\n<li>Add support for using keyword arguments with a named struct in an RPC</li>\n<li>Add bootstrap method to TwoPartyServer</li>\n<li>Add <tt>init</tt> method to lists</li>\n<li>Add support for unix sockets in RPC</li>\n</ul>\n</div>\n<div id=\"v0-5-6-2015-04-13\">\n<h3>v0.5.6 (2015-04-13)</h3>\n<ul>\n<li>Fix a serious bug in TwoPartyServer that was preventing it from\nworking when passed a string address.</li>\n<li>Fix bugs that were exposed by defining KJDEBUG (thanks @davidcarne\nfor finding this)</li>\n</ul>\n</div>\n<div id=\"v0-5-5-2015-03-06\">\n<h3>v0.5.5 (2015-03-06)</h3>\n<ul>\n<li>Update bundled C++ libcapnp to v0.5.1.2 security release</li>\n</ul>\n</div>\n<div id=\"v0-5-4-2015-03-02\">\n<h3>v0.5.4 (2015-03-02)</h3>\n<ul>\n<li>Update bundled C++ libcapnp to v0.5.1.1 security release</li>\n<li>Add bootstrap RPC methods</li>\n<li>Fix possible segfault when importing multiple schemas</li>\n</ul>\n</div>\n<div id=\"v0-5-3-2015-02-23\">\n<h3>v0.5.3 (2015-02-23)</h3>\n<ul>\n<li>Fix possible crash due to bad destructor ordering in MessageReader\n(by @JohnEmhoff)</li>\n<li>Default to no longer using cython</li>\n</ul>\n</div>\n<div id=\"v0-5-2-2015-02-20\">\n<h3>v0.5.2 (2015-02-20)</h3>\n<ul>\n<li>Add read_multiple_bytes/read_multiple_bytes_packed methods</li>\n<li>Added Python 3.4 to the travis build matrix</li>\n<li>Bump version for bundled C++ libcapnp to v0.5.1</li>\n</ul>\n</div>\n<div id=\"v0-5-1-2014-12-27\">\n<h3>v0.5.1 (2014-12-27)</h3>\n<ul>\n<li>Remove installation dependency on cython. We now have no dependencies\nsince libcapnp will automatically build as well.</li>\n</ul>\n</div>\n<div id=\"v0-5-0-2014-12-15\">\n<h3>v0.5.0 (2014-12-15)</h3>\n<ul>\n<li>Timer class <tt>capnp.getTimer()</tt></li>\n<li>pycapnp is now thread-safe and allows an event loop to be run in each\nthread</li>\n<li>You must destroy and re-create the event loop to get this\nfunctionality (see <tt>test_threads.py</tt>)</li>\n<li>Inheritance now works correctly for interfaces (previously inherited\nmethods were inaccessible from pycapnp)</li>\n<li>Add ability to import modules with dashes or spaces. Use underscores\nin place of them</li>\n<li><tt>from_bytes</tt> with builder=True is no longer zero copy. It never\nworked correctly, and is much safer now</li>\n<li>Add <tt>num_first_segment_words</tt> argument wherever message creation\ncan occur</li>\n<li>Allow restoring a null objectId by passing None to restore</li>\n<li>Support ordered dictionary in <tt>to_dict</tt></li>\n<li>Add ListSchema class and schemas for native types under\n<tt>capnp.types</tt> which completes all the Schemas needed to be wrapped.\nSee <tt>test_schema.py</tt> for examples using it</li>\n<li>Add automatic build of C++ libcapnp if it\u2019s not detected on the\nsystem. Also add flags \u2013force-bundled-libcapnp and\n\u2013force-system-libcapnp respectively</li>\n</ul>\n</div>\n<div id=\"v0-4-6-2014-9-10\">\n<h3>v0.4.6 (2014-9-10)</h3>\n<ul>\n<li>Fix build for new 0.21 release of Cython. 0.21 is now the minimum\nsupported version of Cython.</li>\n</ul>\n</div>\n<div id=\"v0-4-5-2014-6-26\">\n<h3>v0.4.5 (2014-6-26)</h3>\n<ul>\n<li>Fix <tt>to_dict</tt> not converting enums to strings</li>\n</ul>\n</div>\n<div id=\"v0-4-4-2014-04-25\">\n<h3>v0.4.4 (2014-04-25)</h3>\n<ul>\n<li>Fix compilation problem with gcc 4.8</li>\n</ul>\n</div>\n<div id=\"v0-4-3-2014-02-18\">\n<h3>v0.4.3 (2014-02-18)</h3>\n<ul>\n<li>Fix problem with uninitialized unions in _from_dict</li>\n<li>Add accesible version numbers for C++ libcapnp</li>\n</ul>\n</div>\n<div id=\"v0-4-2-2014-02-13\">\n<h3>v0.4.2 (2014-02-13)</h3>\n<ul>\n<li>Remove onDrained since it was removed upstream</li>\n<li>Replace usage of strings as enum type with custom <tt>_DynamicEnum</tt>\nclass.</li>\n<li>Also change <tt>Struct.which()</tt> method to be a property\n<tt>Struct.which</tt> and return an enum type (<tt>_DynamicEnumField</tt>,\nwhich behaves much like <tt>_DynamicEnum</tt>).</li>\n<li>TwoPartyServer.run_forever() now will handle more than 1\nsimulataneous connection.</li>\n<li>Change exception wrapper to detect and raise AttributeError for field\nlookup exceptions (Fixes problem in Python3.x <tt>__dir__</tt>)</li>\n<li>Allow setting of fields with python dicts.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>0.4.1 (2013-12-18)</h3>\n<ul>\n<li>Remove python 3.2 from travis tests. Python 3.2 still should work\nfine, but it\u2019s more trouble than it\u2019s worth to write unicode tests\nthat work in both it and Python2.</li>\n<li>Fix problems with null characters in Text/Data fields. Fixes #19</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4.0 (2013-12-12)</h3>\n<ul>\n<li>Initial working version of RPC</li>\n<li>Add get_root_as_any to _MessageReader</li>\n<li>Add capnp.pxd for public declarations of cython classes</li>\n<li>Fix problems compiling with gcc4.7</li>\n</ul>\n</div>\n<div id=\"v0-3-18-2013-11-05\">\n<h3>v0.3.18 (2013-11-05)</h3>\n<ul>\n<li>Change naming of ReaderOption parameters to be pep8 compliant</li>\n</ul>\n</div>\n<div id=\"v0-3-17-2013-11-05\">\n<h3>v0.3.17 (2013-11-05)</h3>\n<ul>\n<li>Add ReaderOptions to read/read_packed/from_bytes</li>\n</ul>\n</div>\n<div id=\"v0-3-16-2013-10-28\">\n<h3>v0.3.16 (2013-10-28)</h3>\n<ul>\n<li>Add defaults flag to capnp-json. Also remove \u2018which\u2019 field</li>\n<li>Add capnp-json serializer script. Also fix bugs in from_dict</li>\n<li>Fix build for clang/python3. Also remove -fpermissive</li>\n<li>Add <tt>as_builder</tt> method to Struct Reader</li>\n<li>Add warning when writing the same message more than once</li>\n<li>First working version of capability interfaces</li>\n<li>Wrap InterfaceSchema</li>\n<li>Fix setting string fields to support all types of strings</li>\n<li>Fix changed API for DynamicObject/ObjectPointer</li>\n</ul>\n</div>\n<div id=\"v0-3-15-2013-09-19\">\n<h3>v0.3.15 (2013-09-19)</h3>\n<ul>\n<li>Add not having installed the C++ libcapnp library to \u2018Common\nProblems\u2019</li>\n<li>Add <em>short</em>str function for use in capnp_test_pycapnp.py</li>\n<li>Add test script for testing with <a href=\"https://github.com/kaos/capnp_test\" rel=\"nofollow\">https://github.com/kaos/capnp_test</a></li>\n<li>Add handling of DynamicObject</li>\n<li>Fix lists of lists or dicts for from_dict</li>\n</ul>\n</div>\n<div id=\"v0-3-14-2013-09-04\">\n<h3>v0.3.14 (2013-09-04)</h3>\n<ul>\n<li>Fix problem with to_dict</li>\n</ul>\n</div>\n<div id=\"v0-3-13-2013-09-04\">\n<h3>v0.3.13 (2013-09-04)</h3>\n<ul>\n<li>Add <em>DynamicStructBuilder.to</em>bytes() and .from_bytes()</li>\n<li>Change == on StructSchema to return cbool</li>\n<li>Add Builder and Reader ABCs for each struct type</li>\n</ul>\n</div>\n<div id=\"v0-3-12-2013-09-03\">\n<h3>v0.3.12 (2013-09-03)</h3>\n<ul>\n<li>Fix handling of empty path \u2018\u2019 in load_module</li>\n<li>Add from_dict</li>\n<li>Fix bug in exception handling for which(). Also standardize\nexceptions.</li>\n<li>Change import hook to require modules to end in \u2018_capnp\u2019</li>\n<li>Add import monkey patch function.</li>\n<li>Change naming for functions to conform to PEP 8. Also deprecate old\nread/write API</li>\n<li>Update preferred method for reading/writing messages from files</li>\n</ul>\n</div>\n<div id=\"v0-3-11-2013-09-01\">\n<h3>v0.3.11 (2013-09-01)</h3>\n<ul>\n<li>Forgot to change project name in setup.py</li>\n</ul>\n</div>\n<div id=\"v0-3-10-2013-09-01\">\n<h3>v0.3.10 (2013-09-01)</h3>\n<ul>\n<li>Change all references to old project name (change from\ncapnpc-python-cpp to pycapnp)</li>\n<li>Change DynamicValue.Reader lists to be returned as\n_DynamicListReader</li>\n<li>Unify setters for DynamicList and DynamicStruct</li>\n<li>Add shortcuts for reading from / writing to files. In Python, it\ndoesn\u2019t make much sense to force people to muck around with\nMessageReaders and MessageBuilders since everything is landing on the\nheap anyway. Instead, let\u2019s make it easy:\nMyType.read[Packed]From(file) reads a file and returns a MyType\nreader. MyType.newMessage() returns a MyType builder representing the\nroot of a new message. You can call this builder\u2019s\nwrite[Packed]To(file) method to write it to a file.</li>\n<li>Store Builders by value rather than allocate them separately on the\nheap (matches treatment of Readers). v0.3 fixes the bug that made\nthis not work.</li>\n<li>Wrap MessageBuilder::setRoot().</li>\n<li>Add tests based on TestAllTypes from the C++ test.capnp. Fix problems\nuncovered in capnp.pyx.</li>\n<li>Implement <strong>str</strong> and <strong>repr</strong> for struct and list builders. <strong>str</strong>\nuses prettyPrint while <strong>repr</strong> shows the type name and the\nlow-whitespace stringification. Also implement <strong>repr</strong> for\nStructSchema, just because why not?</li>\n</ul>\n</div>\n<div id=\"v0-3-9-2013-08-30\">\n<h3>v0.3.9 (2013-08-30)</h3>\n<ul>\n<li>Change load to use a global SchemaParser. Make structs settable as\nfield</li>\n<li>Add docstrings for new functions and _DynamicResizableListBuilder</li>\n</ul>\n</div>\n<div id=\"v0-3-8-2013-08-29\">\n<h3>v0.3.8 (2013-08-29)</h3>\n<ul>\n<li>Add initial tests</li>\n<li>Add _capnp for original Cython module. Meant for testing.</li>\n<li>Lowercase schema so it conforms to member naming conventions</li>\n<li>Expose _StructSchema\u2019s raw node</li>\n<li>Add some useful _StructSchema, reader, and builder methods</li>\n<li>Add full orphan functionality. Also, allow special orphan lists</li>\n<li>Finish up adding docstrings to all public classes/methods</li>\n</ul>\n</div>\n<div id=\"v0-3-7-2013-08-26\">\n<h3>v0.3.7 (2013-08-26)</h3>\n<ul>\n<li>Add a ton of docstrings and add to official docs</li>\n<li>Add DynamicOrphan</li>\n</ul>\n</div>\n<div id=\"v0-3-6-2013-08-26\">\n<h3>v0.3.6 (2013-08-26)</h3>\n<ul>\n<li>Add intersphinx for linking to python docs</li>\n<li>Add C++ library version check</li>\n</ul>\n</div>\n<div id=\"v0-3-5-2013-08-25\">\n<h3>v0.3.5 (2013-08-25)</h3>\n<ul>\n<li>Add handling of constants in schemas</li>\n<li>Fix new error with DynamicValue.Builder no longer being copyable</li>\n</ul>\n</div>\n<div id=\"v0-3-4-2013-08-22\">\n<h3>v0.3.4 (2013-08-22)</h3>\n<ul>\n<li>Fix Void namespace change</li>\n<li>Updated capnp schema to conform with new union rules</li>\n</ul>\n</div>\n<div id=\"v0-3-3-2013-08-22\">\n<h3>v0.3.3 (2013-08-22)</h3>\n<ul>\n<li>Fix for the removal of DynamicUnion from the C++ API</li>\n</ul>\n</div>\n<div id=\"v0-3-2-2013-08-21\">\n<h3>v0.3.2 (2013-08-21)</h3>\n<ul>\n<li>Add MANIFEST.in to include README</li>\n</ul>\n</div>\n<div id=\"v0-3-1-2013-08-21\">\n<h3>v0.3.1 (2013-08-21)</h3>\n<ul>\n<li>Update docs with lines about upgrading setuptools</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.0 (2013-08-21)</h3>\n<ul>\n<li>Initial commit of docs</li>\n<li>Add querying unnamed enums to structs</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.1 (2013-08-13)</h3>\n<ul>\n<li>Fix enum interface change for benchmark</li>\n<li>Random formatting cleanup</li>\n<li>Allow import paths in the schema loader</li>\n<li>Add travis CI</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0 (2013-08-12)</h3>\n<ul>\n<li>Initial working version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6364817, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a85f00e6e8a6b2822ff3f26602030341", "sha256": "883759877b894f774a83f7c1e3b31a433589b27f04caf0ac6f7b771fbe1263d4"}, "downloads": -1, "filename": "pycapnp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a85f00e6e8a6b2822ff3f26602030341", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114687, "upload_time": "2013-09-01T07:54:44", "upload_time_iso_8601": "2013-09-01T07:54:44.721335Z", "url": "https://files.pythonhosted.org/packages/3c/47/964ae1f9f27c059f9b99843ac95ece12bd0ff3d6eae5cfd80bcb18cea529/pycapnp-0.1.0.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "a87b3fd84e5681b8d57aadca8b7ff608", "sha256": "319428a786b3241024c915e7f1943e773c6346f833718c83cc5401416ecd4c63"}, "downloads": -1, "filename": "pycapnp-0.3.11.tar.gz", "has_sig": false, "md5_digest": "a87b3fd84e5681b8d57aadca8b7ff608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114661, "upload_time": "2013-09-01T08:20:35", "upload_time_iso_8601": "2013-09-01T08:20:35.739078Z", "url": "https://files.pythonhosted.org/packages/cc/64/efe87a376b643deb0a9a83d955ace133ea8c231f72408591d33e41515621/pycapnp-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "1e7a0e78a9d08dcade7b8de4778826d0", "sha256": "1bb76993ca648e69c782007f1c52ed5b6d2d9e5b9543506fcd1e6114a1916332"}, "downloads": -1, "filename": "pycapnp-0.3.12.tar.gz", "has_sig": false, "md5_digest": "1e7a0e78a9d08dcade7b8de4778826d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138120, "upload_time": "2013-09-03T08:25:53", "upload_time_iso_8601": "2013-09-03T08:25:53.101683Z", "url": "https://files.pythonhosted.org/packages/8e/84/9a4ff3962d67b70d135027f40c8fdc8c9fee0ca661ad1eac01e77face9a3/pycapnp-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "dbb1eb1fa5f69794633ec46f854ae926", "sha256": "ca80db0fda64506ef3a09d95e48e126ec04bccc9d0e8676f1a2c9f4e220c5d6a"}, "downloads": -1, "filename": "pycapnp-0.3.13.tar.gz", "has_sig": false, "md5_digest": "dbb1eb1fa5f69794633ec46f854ae926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147009, "upload_time": "2013-09-04T17:40:03", "upload_time_iso_8601": "2013-09-04T17:40:03.791004Z", "url": "https://files.pythonhosted.org/packages/27/d1/941c5779fd50bd93c15bdc33dac5e4ced1a83efbbde97107894bbc5cd4b2/pycapnp-0.3.13.tar.gz", "yanked": false}], "0.3.14": [{"comment_text": "", "digests": {"md5": "475b7b42b1054811ca37c6539c876cb7", "sha256": "c22a0e521d50c761aa86cb8ef292424c16e4ddc892a50f6315530d06ecacae21"}, "downloads": -1, "filename": "pycapnp-0.3.14.tar.gz", "has_sig": false, "md5_digest": "475b7b42b1054811ca37c6539c876cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147141, "upload_time": "2013-09-04T18:21:44", "upload_time_iso_8601": "2013-09-04T18:21:44.502118Z", "url": "https://files.pythonhosted.org/packages/70/b3/5ca1fab6a5c4749499e55eda1b7f7a1fa77fcdf5ca8944b9edc652dda8aa/pycapnp-0.3.14.tar.gz", "yanked": false}], "0.3.15": [{"comment_text": "", "digests": {"md5": "b6bbdbef3ee342cfdde9e377d286adf9", "sha256": "5e53fb9508656e1060ef4c6f6e1852e7bfb1e811d814f9c988c7ff221fa67597"}, "downloads": -1, "filename": "pycapnp-0.3.15.tar.gz", "has_sig": false, "md5_digest": "b6bbdbef3ee342cfdde9e377d286adf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153228, "upload_time": "2013-09-20T04:32:09", "upload_time_iso_8601": "2013-09-20T04:32:09.027140Z", "url": "https://files.pythonhosted.org/packages/bb/06/aa1671472c65b7119842517c820d0d0905488d25469145f4166eb5a6c042/pycapnp-0.3.15.tar.gz", "yanked": false}], "0.3.16": [{"comment_text": "", "digests": {"md5": "aa17666a2a2668b7a982104e7a9650cf", "sha256": "c56862133ae57b69000efa54c7f0ece6fd535d457cc91627aecc60f2c4f35d88"}, "downloads": -1, "filename": "pycapnp-0.3.16.tar.gz", "has_sig": false, "md5_digest": "aa17666a2a2668b7a982104e7a9650cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 155540, "upload_time": "2013-10-28T20:44:06", "upload_time_iso_8601": "2013-10-28T20:44:06.923500Z", "url": "https://files.pythonhosted.org/packages/34/37/132587483a086aba20b04a159a772d336fb53b7b24df7c369df867cbad6b/pycapnp-0.3.16.tar.gz", "yanked": false}], "0.3.18": [{"comment_text": "", "digests": {"md5": "8ac45b9b955fc5fc98a8bf711a21c915", "sha256": "c68dcd4ad179c88436ca05a443dc5bb4f505e281060d6eea889cd4e1f711b93e"}, "downloads": -1, "filename": "pycapnp-0.3.18.tar.gz", "has_sig": false, "md5_digest": "8ac45b9b955fc5fc98a8bf711a21c915", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 157613, "upload_time": "2013-11-06T00:00:56", "upload_time_iso_8601": "2013-11-06T00:00:56.761441Z", "url": "https://files.pythonhosted.org/packages/ed/29/60887c473bcec627deba6a86c5dd3ab6883a12e07ac16f6c3a2f40c6ae5e/pycapnp-0.3.18.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "11127d537f47bd4788c9c1f213e49990", "sha256": "ee5b852ffe5afb46012b0f09085ed79ba4026bc84bdeb2721b3aa1f30cb74d07"}, "downloads": -1, "filename": "pycapnp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "11127d537f47bd4788c9c1f213e49990", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280766, "upload_time": "2013-12-12T20:00:59", "upload_time_iso_8601": "2013-12-12T20:00:59.218248Z", "url": "https://files.pythonhosted.org/packages/d9/8e/b7c83f3a54a40268aee77f6ad809c62d88228727f094f57dc62f3d322df2/pycapnp-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "84440db0bed085e09fe862b04a3b1b13", "sha256": "b4fb71ec591f6d4deaaaacb99afcf428123bd8414ea8228e02395bcdb0326acf"}, "downloads": -1, "filename": "pycapnp-0.4.1.tar.gz", "has_sig": false, "md5_digest": "84440db0bed085e09fe862b04a3b1b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 284270, "upload_time": "2013-12-19T01:15:46", "upload_time_iso_8601": "2013-12-19T01:15:46.268714Z", "url": "https://files.pythonhosted.org/packages/8e/46/0f79a627dc6583052dc8aab064315ecddb8e7462283f07c6d01edac3e7c6/pycapnp-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "1e276bf9a3f61f21ef4f790b510071ba", "sha256": "eb6fd54d03f949132c9dfd7f196805db179cb9827d04b81a8ca29679c428f623"}, "downloads": -1, "filename": "pycapnp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "1e276bf9a3f61f21ef4f790b510071ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 292949, "upload_time": "2014-02-14T06:55:21", "upload_time_iso_8601": "2014-02-14T06:55:21.339745Z", "url": "https://files.pythonhosted.org/packages/05/89/20e8bade091aedbbb8b5c7aaa32e6787c2a18117eb7eac82c5c0ad8dbb47/pycapnp-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "adaec8c5f71903ac50c7f1fc2f42fc65", "sha256": "7fd59290db4ef42aad06438158d1d7ad3094618fae560ac551d7bc7e53d2c842"}, "downloads": -1, "filename": "pycapnp-0.4.3.tar.gz", "has_sig": false, "md5_digest": "adaec8c5f71903ac50c7f1fc2f42fc65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 294095, "upload_time": "2014-02-19T01:50:49", "upload_time_iso_8601": "2014-02-19T01:50:49.634291Z", "url": "https://files.pythonhosted.org/packages/0c/d2/2405c35bddd78f47852752d72875ee4b84eaa3424825d4d5a5c07d15a0ab/pycapnp-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1fe73a4ede329117d94a91e0c60a68e6", "sha256": "33b2b79438bb9bf37097966e1c90403c34ab49be1eb647ee251b62f362ee3537"}, "downloads": -1, "filename": "pycapnp-0.4.4.tar.gz", "has_sig": false, "md5_digest": "1fe73a4ede329117d94a91e0c60a68e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 302683, "upload_time": "2014-04-25T18:06:16", "upload_time_iso_8601": "2014-04-25T18:06:16.752221Z", "url": "https://files.pythonhosted.org/packages/e4/01/2a017fa4aaf89141d8d3c7d32177a278299a69d7ae233b58021f1e10a575/pycapnp-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "d88e6cf5c743eed99178dcda819e38c6", "sha256": "3cea598eea6da8aaa35f9892cb95ca38bf7e98d2ce91dab465d3c50cfba6ad5c"}, "downloads": -1, "filename": "pycapnp-0.4.5.tar.gz", "has_sig": false, "md5_digest": "d88e6cf5c743eed99178dcda819e38c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 302975, "upload_time": "2014-06-26T07:58:26", "upload_time_iso_8601": "2014-06-26T07:58:26.563917Z", "url": "https://files.pythonhosted.org/packages/f4/73/6d2cd247462119931d35c3ab160f55ec70a0cc03f6c6dbd94a86e9b36258/pycapnp-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "91e0f632c409825cc8735cf94a9a645a", "sha256": "d91453d4dc4684187ea09cee551a1d46d50967d92b3b2108c99656bb03ba63e4"}, "downloads": -1, "filename": "pycapnp-0.4.6.tar.gz", "has_sig": false, "md5_digest": "91e0f632c409825cc8735cf94a9a645a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 318801, "upload_time": "2014-09-10T18:06:29", "upload_time_iso_8601": "2014-09-10T18:06:29.091168Z", "url": "https://files.pythonhosted.org/packages/f3/e4/8a82ea91cfbedae1d61957ec3ff9926b047d83934ee2d693cab34cae2f02/pycapnp-0.4.6.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d4e4bd665226b1d9d459748b3804478f", "sha256": "44df5b37941f4193b5077029d780f784c4d8551f29cb15c1c49790e550752d05"}, "downloads": -1, "filename": "pycapnp-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d4e4bd665226b1d9d459748b3804478f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 411261, "upload_time": "2014-12-15T22:00:44", "upload_time_iso_8601": "2014-12-15T22:00:44.267985Z", "url": "https://files.pythonhosted.org/packages/02/5d/700f423e920f1f65c31591da73c19761d542e79cb91ec6ceae2b82fde625/pycapnp-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "526534727701677b7552febdedfc0482", "sha256": "73338019b1e39004ada5d4ae11324670531094b1c6200b337b291032683ce9ce"}, "downloads": -1, "filename": "pycapnp-0.5.1.tar.gz", "has_sig": false, "md5_digest": "526534727701677b7552febdedfc0482", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 411309, "upload_time": "2014-12-28T08:09:50", "upload_time_iso_8601": "2014-12-28T08:09:50.348141Z", "url": "https://files.pythonhosted.org/packages/9e/77/82ead7f7d85397d68f934bfb84061e128b44443b59ff745676d306d4f658/pycapnp-0.5.1.tar.gz", "yanked": false}], "0.5.10": [{"comment_text": "", "digests": {"md5": "8da18d99be6c9edaa880a1527849eac6", "sha256": "59f9181091e7030776e434db216373297db41e16eb257fe450102bd29745459f"}, "downloads": -1, "filename": "pycapnp-0.5.10.tar.gz", "has_sig": false, "md5_digest": "8da18d99be6c9edaa880a1527849eac6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 461742, "upload_time": "2016-11-28T21:40:17", "upload_time_iso_8601": "2016-11-28T21:40:17.460244Z", "url": "https://files.pythonhosted.org/packages/ec/fc/856cc558cde809ab49519e022cf13762b3fde15ad1585b9d977c37e1b386/pycapnp-0.5.10.tar.gz", "yanked": false}], "0.5.11": [{"comment_text": "", "digests": {"md5": "68bca2c8c79e5843a11165e2ece3eebf", "sha256": "fa245837b3098d1de6cf08671e4bfbed294fde86cdd40a4eae6c264b30367023"}, "downloads": -1, "filename": "pycapnp-0.5.11.tar.gz", "has_sig": false, "md5_digest": "68bca2c8c79e5843a11165e2ece3eebf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454249, "upload_time": "2017-04-11T03:37:11", "upload_time_iso_8601": "2017-04-11T03:37:11.555348Z", "url": "https://files.pythonhosted.org/packages/3a/3e/ace33380da38b0d02420b0697feb5c521b9d5756e6b376d20cee145a6822/pycapnp-0.5.11.tar.gz", "yanked": false}], "0.5.12": [{"comment_text": "", "digests": {"md5": "ec408b2e017df4aca90f270e8e0398bf", "sha256": "b71a0e71512796e993a5724457d77f36ea21528cf1ca59fc6c7036c8cf61dea3"}, "downloads": -1, "filename": "pycapnp-0.5.12.tar.gz", "has_sig": false, "md5_digest": "ec408b2e017df4aca90f270e8e0398bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454294, "upload_time": "2017-04-19T04:43:31", "upload_time_iso_8601": "2017-04-19T04:43:31.650200Z", "url": "https://files.pythonhosted.org/packages/65/e7/1a8ed69452f0d4e429dba21513e8801b5b6910707f67a38a02f5571a7292/pycapnp-0.5.12.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "9bec2edd35afce29bee5f7d2cf448835", "sha256": "1efefcb342e7184c42b3a9d591493da394ea562864e42cc87a9f71cfa35596ee"}, "downloads": -1, "filename": "pycapnp-0.5.2.tar.gz", "has_sig": false, "md5_digest": "9bec2edd35afce29bee5f7d2cf448835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 419469, "upload_time": "2015-02-21T01:32:25", "upload_time_iso_8601": "2015-02-21T01:32:25.554533Z", "url": "https://files.pythonhosted.org/packages/b5/3b/01506c0c66bd2dc7a227e0ea179d6743bc1dc3df0a2cc2979723bc096856/pycapnp-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "5c2b0c2615cd7c3a9cba6b95cfd3a017", "sha256": "e6a2bef89d4d135b1f11b09d77da8a3a939a09527695efe2ae5734b7fc8310ef"}, "downloads": -1, "filename": "pycapnp-0.5.3.tar.gz", "has_sig": false, "md5_digest": "5c2b0c2615cd7c3a9cba6b95cfd3a017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 419808, "upload_time": "2015-02-23T19:24:33", "upload_time_iso_8601": "2015-02-23T19:24:33.394958Z", "url": "https://files.pythonhosted.org/packages/39/92/0241e2bd8498c74267cd2071d42fd53dc3a1f58994e785f113f1528d6179/pycapnp-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "82fe1985a1420d539f5655f838b4bddc", "sha256": "b543ec143d12aadcf2b4c76d075c7466558da24312e7f9a3ab14066ed68b16df"}, "downloads": -1, "filename": "pycapnp-0.5.4.tar.gz", "has_sig": false, "md5_digest": "82fe1985a1420d539f5655f838b4bddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423862, "upload_time": "2015-03-02T22:16:33", "upload_time_iso_8601": "2015-03-02T22:16:33.700290Z", "url": "https://files.pythonhosted.org/packages/4c/7b/a55dc0ec79c5901d0545335178e4990048237853c2a6fbab0648da316df4/pycapnp-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "71570126bbec8b38f992b1e8feebaeab", "sha256": "8d674ca3645dfb28f1a167baa4201ec25d32d6818d1108bdb0dbe0198c553ddf"}, "downloads": -1, "filename": "pycapnp-0.5.5.tar.gz", "has_sig": false, "md5_digest": "71570126bbec8b38f992b1e8feebaeab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427148, "upload_time": "2015-03-05T20:58:34", "upload_time_iso_8601": "2015-03-05T20:58:34.133148Z", "url": "https://files.pythonhosted.org/packages/a2/f4/c115dbf48fe1d360cc80c0ef2ae2020a4c6d5db26a65f6807e5b557ead8f/pycapnp-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "6f636c91e0291bd0b410c3f7b8076b76", "sha256": "5ad2a4bdfd33723b9de44b58cf85e50c944824076074c0361934351c5d814e15"}, "downloads": -1, "filename": "pycapnp-0.5.6.tar.gz", "has_sig": false, "md5_digest": "6f636c91e0291bd0b410c3f7b8076b76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 428425, "upload_time": "2015-04-13T21:53:39", "upload_time_iso_8601": "2015-04-13T21:53:39.250306Z", "url": "https://files.pythonhosted.org/packages/fa/58/f1717d6c669054a4631cdd6ccd48dc2eb9686199d2f9c6a62a5e73925ac1/pycapnp-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "d47396d6724593afcbb728b87ac6de07", "sha256": "28e2335f8b50f07f853e108038b33ccf2cbf356822f37582dc8e84f9535a1446"}, "downloads": -1, "filename": "pycapnp-0.5.7.tar.gz", "has_sig": false, "md5_digest": "d47396d6724593afcbb728b87ac6de07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 433772, "upload_time": "2015-06-16T19:11:03", "upload_time_iso_8601": "2015-06-16T19:11:03.823162Z", "url": "https://files.pythonhosted.org/packages/d7/d9/c3ef8763784a619b5729b576c90d88d91bd64ca6d471e649a6b430bc9e3c/pycapnp-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "dc378f2513d74f1eaa7dcb7e8a2bd620", "sha256": "23e897649f912fbb01d5f8ca8f12dc04a0e0015555dfdd44def46ac63ee50c75"}, "downloads": -1, "filename": "pycapnp-0.5.8.tar.gz", "has_sig": false, "md5_digest": "dc378f2513d74f1eaa7dcb7e8a2bd620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 449833, "upload_time": "2016-05-27T22:01:37", "upload_time_iso_8601": "2016-05-27T22:01:37.393028Z", "url": "https://files.pythonhosted.org/packages/39/77/70e1caecabdb939bb13bbf9e7a1a3035fafab7bfd3f12b62df0f649b1f9e/pycapnp-0.5.8.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "4180c74f4a9adfcd8a5a605843399c83", "sha256": "18dc9fb57928d2cb4d0387fc679d99e42ff08251539f2cadd86365f9768c874e"}, "downloads": -1, "filename": "pycapnp-0.5.9.tar.gz", "has_sig": false, "md5_digest": "4180c74f4a9adfcd8a5a605843399c83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 455156, "upload_time": "2016-07-07T20:12:50", "upload_time_iso_8601": "2016-07-07T20:12:50.462254Z", "url": "https://files.pythonhosted.org/packages/10/1b/e3af8e3c2757aa103ba4924ca5f91edf9ff927b888063e6cc14c7ed5da72/pycapnp-0.5.9.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "fae97e3173dd58d6d9275b969d2b46c0", "sha256": "ea60837533307849e98bb3494555cea28a52ea0c301cfdf32bce661931940696"}, "downloads": -1, "filename": "pycapnp-0.6.1.tar.gz", "has_sig": false, "md5_digest": "fae97e3173dd58d6d9275b969d2b46c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454873, "upload_time": "2017-07-28T03:10:07", "upload_time_iso_8601": "2017-07-28T03:10:07.603891Z", "url": "https://files.pythonhosted.org/packages/44/52/7897cb5c1a5b01b7a3973e2b2063b7cc085740a7d6f604eb699533490e35/pycapnp-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "5f21e899db44e8bed44ba954d27c3b37", "sha256": "8672aae675a1ffc7b84572ca9fefaeb7ca33493a4e2405fbdf280bdce8c16a4e"}, "downloads": -1, "filename": "pycapnp-0.6.2.tar.gz", "has_sig": false, "md5_digest": "5f21e899db44e8bed44ba954d27c3b37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 455092, "upload_time": "2017-12-01T06:07:40", "upload_time_iso_8601": "2017-12-01T06:07:40.966765Z", "url": "https://files.pythonhosted.org/packages/23/a8/c8e0de18f34945f714aa9d43cc27111ff495af002965dfa8e9b669517edf/pycapnp-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "5e02c9288dff8fc690866261c79eaf86", "sha256": "b3c5a1fcc93fd02fdc070aeccb89654b87f20bdc740f643cc6378925ed6d4c17"}, "downloads": -1, "filename": "pycapnp-0.6.3.tar.gz", "has_sig": false, "md5_digest": "5e02c9288dff8fc690866261c79eaf86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 455075, "upload_time": "2018-01-14T19:54:41", "upload_time_iso_8601": "2018-01-14T19:54:41.353174Z", "url": "https://files.pythonhosted.org/packages/73/5e/f9e4369639883c1efc1c1729e51ed65b5acdadf3445cfa800b1db66d5856/pycapnp-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "c6746958c2f3e25f310134da5f2fc901", "sha256": "44e14a5ace399cf1753acb8bbce558b8c895c48fd2102d266c34eaff286824cf"}, "downloads": -1, "filename": "pycapnp-0.6.4.tar.gz", "has_sig": false, "md5_digest": "c6746958c2f3e25f310134da5f2fc901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 531404, "upload_time": "2019-01-31T09:21:24", "upload_time_iso_8601": "2019-01-31T09:21:24.953074Z", "url": "https://files.pythonhosted.org/packages/61/dc/9b83b079963c4073c809c7901db1d6f58aee6cb3e9f0071fdc241c0ae6c1/pycapnp-0.6.4.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "a3538a2ddfb1d58cf11e040f42ddb630", "sha256": "86a86ad0846e55cfb444506b81826969411e90ab3d4cffa5b54c21d2f20646dd"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "a3538a2ddfb1d58cf11e040f42ddb630", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1540487, "upload_time": "2019-12-27T10:13:50", "upload_time_iso_8601": "2019-12-27T10:13:50.965520Z", "url": "https://files.pythonhosted.org/packages/36/c7/e2c0dbb96c633f51a45609cb47f6e1025b9bc511a9acaf94a259016f4f36/pycapnp-1.0.0b1-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ead0a99f9a65a2ab409f52fa39716209", "sha256": "ffbc112e48658fa5543b93251839f4592bd90bcbbae082e60ecf10f6e6f0348d"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "ead0a99f9a65a2ab409f52fa39716209", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3268286, "upload_time": "2019-12-27T10:13:55", "upload_time_iso_8601": "2019-12-27T10:13:55.600106Z", "url": "https://files.pythonhosted.org/packages/94/6c/534b4f36e1d8ae50c8ab4dd431ccbb77ac265145a9ec22eb5bd3253e09aa/pycapnp-1.0.0b1-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a84cbf8e13bb09ed8d35629d464b3e19", "sha256": "ca00341c3a78a3df7df67edaaea1d7f2e2868f51636d81b4266796c162b6b52d"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a84cbf8e13bb09ed8d35629d464b3e19", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3962864, "upload_time": "2019-12-27T10:14:00", "upload_time_iso_8601": "2019-12-27T10:14:00.703809Z", "url": "https://files.pythonhosted.org/packages/db/db/e1f17b193e3958646cb950768e5b8293317a6fcf7cd6858470c59cb94f78/pycapnp-1.0.0b1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f4f023ecd133660d2302a4ff05769de", "sha256": "e9d6bee3e26f64f2978417ec87e93ae0ef6ab23d5de83a3a5a09433693707aac"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "9f4f023ecd133660d2302a4ff05769de", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1087821, "upload_time": "2019-12-27T10:14:03", "upload_time_iso_8601": "2019-12-27T10:14:03.744150Z", "url": "https://files.pythonhosted.org/packages/a8/d1/7df7d399c33524f06fb235bea74886beb0428161acf33d981de6088fe95f/pycapnp-1.0.0b1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81f001a18ac66952ef66506a59768c8a", "sha256": "c7d2d9fe9eb59ca49b8820ba0f237b1dbd58914a5cf73cc57ecb3768fbf5b2bb"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp38-cp38-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "81f001a18ac66952ef66506a59768c8a", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1550054, "upload_time": "2019-12-27T10:14:07", "upload_time_iso_8601": "2019-12-27T10:14:07.856054Z", "url": "https://files.pythonhosted.org/packages/ac/ca/68d91819555c636ff18ce6f729c398a3e9e5f92a552498d677769cccf33d/pycapnp-1.0.0b1-cp38-cp38-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfdd921c02820322adf733ba932f4d1c", "sha256": "815533f70d68cf1b690f3da510356cfc64f442cd81425f6920b432c2479d93f0"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "cfdd921c02820322adf733ba932f4d1c", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 3574361, "upload_time": "2019-12-27T10:14:12", "upload_time_iso_8601": "2019-12-27T10:14:12.226053Z", "url": "https://files.pythonhosted.org/packages/2b/3f/245de690638e33fae659ed2538e013219b7f403b9d087680fd87c8cd535e/pycapnp-1.0.0b1-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0691c91bd8f57d9e71246c4879816f6", "sha256": "651cdd4f14e09715eaff4e6f9790b7672845141be54c4d9e78740f130548bfd2"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b0691c91bd8f57d9e71246c4879816f6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4407859, "upload_time": "2019-12-27T10:14:17", "upload_time_iso_8601": "2019-12-27T10:14:17.256944Z", "url": "https://files.pythonhosted.org/packages/62/e8/be785043392703f1634ce317008fe710343b7898fa0ccf5a80d049d9d8cf/pycapnp-1.0.0b1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c991accb4b725ed36e5b122d45a1edb9", "sha256": "33749523699619e0d3565653a16590b4bb878bb95428d4cd475ea5b45f6042d5"}, "downloads": -1, "filename": "pycapnp-1.0.0b1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "c991accb4b725ed36e5b122d45a1edb9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1108143, "upload_time": "2019-12-27T10:14:20", "upload_time_iso_8601": "2019-12-27T10:14:20.840017Z", "url": "https://files.pythonhosted.org/packages/02/43/8d492ee1f92d0b3db4adfb0623c9b5599bfe5d54e1f9fc38b8e48cc8cd30/pycapnp-1.0.0b1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7e01954a0646d220a70509450363309", "sha256": "c56c7e87cfa38ee91bd546b5e2f9809293add2f5e8f1e3576a4844befa7ba169"}, "downloads": -1, "filename": "pycapnp-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "e7e01954a0646d220a70509450363309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530538, "upload_time": "2019-12-27T10:14:23", "upload_time_iso_8601": "2019-12-27T10:14:23.330794Z", "url": "https://files.pythonhosted.org/packages/06/90/83cd65248deb98859873f5a7eb62ae3cbe1d5214ff224ec1156263d0f8ec/pycapnp-1.0.0b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6746958c2f3e25f310134da5f2fc901", "sha256": "44e14a5ace399cf1753acb8bbce558b8c895c48fd2102d266c34eaff286824cf"}, "downloads": -1, "filename": "pycapnp-0.6.4.tar.gz", "has_sig": false, "md5_digest": "c6746958c2f3e25f310134da5f2fc901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 531404, "upload_time": "2019-01-31T09:21:24", "upload_time_iso_8601": "2019-01-31T09:21:24.953074Z", "url": "https://files.pythonhosted.org/packages/61/dc/9b83b079963c4073c809c7901db1d6f58aee6cb3e9f0071fdc241c0ae6c1/pycapnp-0.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:47 2020"}