{"info": {"author": "Yiftach Karkason", "author_email": "ykarkason@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PyWinSandbox\nPython [Windows Sandbox](https://techcommunity.microsoft.com/t5/windows-kernel-internals/windows-sandbox/ba-p/301849) library.\nCreate a new Windows Sandbox machine, control it with a simple RPyC interface.\n\nA good usage for this library would be to easily run sandboxed tests in a controlled envionment.\n\nQuick Start\n------------\n\nPyWinSandbox can be installed using pip:\n\n```sh\n$ pip3 install -U pywinsandbox\n```\n\nIf you want to run the latest version of the code, you can install from git:\n\n```sh\n$ pip3 install -U git+git://github.com/karkason/pywinsandbox.git\n```\n\nNote that the Windows Sandbox should be enabled in your system in order to use PyWinSandbox. [See the following Microsoft article on how to do that.](https://techcommunity.microsoft.com/t5/windows-kernel-internals/windows-sandbox/ba-p/301849)\n\nExamples\n-------\n\n```python\nimport winsandbox\n\nsandbox = winsandbox.new_sandbox()\nsandbox.rpyc.modules.subprocess.run('explorer .')\n\n# Create a sandbox with a mapped directory.\n# Directories are mapped under desktop.\nsandbox = winsandbox.new_sandbox(folder_mappers=[winsandbox.FolderMapper(r'C:\\users\\public')])\ntree = sandbox.rpyc.modules.subprocess.check_output(r'cmd /c tree %userprofile%\\Desktop\\public')\n\n# Create an offline sandbox with a logon script.\nsandbox = winsandbox.new_sandbox(networking=False, logon_script=\"explorer .\")\n```\n\nAlso a console script is available:\n\n```sh\n# wsb / winsandbox are aliases\n\n# Create an interactive sandbox session. Spawns an IPython shell.\nwsb -i\n\n# Spawn an \"offline\" Windows Sandbox instance, with a command line.\nwsb -s \"explorer C:\\windows\\system32\" \n```\n\nWindows Shell Extension\n-------\nA shell extension is also available to easily sandbox executables with the right click menu:\n\n![Shell Extension](https://i.imgur.com/WXrE1du.png)\n\n```sh\n# Run these commands with Administrator privileges\n\n# Register the shell extension\nwsb -r\n# Unregister the shell extension\nwsb -u\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/karkason/pywinsandbox", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pywinsandbox", "package_url": "https://pypi.org/project/pywinsandbox/", "platform": "", "project_url": "https://pypi.org/project/pywinsandbox/", "project_urls": {"Homepage": "https://github.com/karkason/pywinsandbox"}, "release_url": "https://pypi.org/project/pywinsandbox/1.2.0/", "requires_dist": ["yattag", "rpyc", "cached-property", "recordclass", "IPython", "wmi", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Python Utilities for Windows Sandbox", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyWinSandbox</h1>\n<p>Python <a href=\"https://techcommunity.microsoft.com/t5/windows-kernel-internals/windows-sandbox/ba-p/301849\" rel=\"nofollow\">Windows Sandbox</a> library.\nCreate a new Windows Sandbox machine, control it with a simple RPyC interface.</p>\n<p>A good usage for this library would be to easily run sandboxed tests in a controlled envionment.</p>\n<h2>Quick Start</h2>\n<p>PyWinSandbox can be installed using pip:</p>\n<pre>$ pip3 install -U pywinsandbox\n</pre>\n<p>If you want to run the latest version of the code, you can install from git:</p>\n<pre>$ pip3 install -U git+git://github.com/karkason/pywinsandbox.git\n</pre>\n<p>Note that the Windows Sandbox should be enabled in your system in order to use PyWinSandbox. <a href=\"https://techcommunity.microsoft.com/t5/windows-kernel-internals/windows-sandbox/ba-p/301849\" rel=\"nofollow\">See the following Microsoft article on how to do that.</a></p>\n<h2>Examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">winsandbox</span>\n\n<span class=\"n\">sandbox</span> <span class=\"o\">=</span> <span class=\"n\">winsandbox</span><span class=\"o\">.</span><span class=\"n\">new_sandbox</span><span class=\"p\">()</span>\n<span class=\"n\">sandbox</span><span class=\"o\">.</span><span class=\"n\">rpyc</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'explorer .'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a sandbox with a mapped directory.</span>\n<span class=\"c1\"># Directories are mapped under desktop.</span>\n<span class=\"n\">sandbox</span> <span class=\"o\">=</span> <span class=\"n\">winsandbox</span><span class=\"o\">.</span><span class=\"n\">new_sandbox</span><span class=\"p\">(</span><span class=\"n\">folder_mappers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">winsandbox</span><span class=\"o\">.</span><span class=\"n\">FolderMapper</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'C:\\users\\public'</span><span class=\"p\">)])</span>\n<span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">sandbox</span><span class=\"o\">.</span><span class=\"n\">rpyc</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'cmd /c tree </span><span class=\"si\">%u</span><span class=\"s1\">serprofile%\\Desktop\\public'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create an offline sandbox with a logon script.</span>\n<span class=\"n\">sandbox</span> <span class=\"o\">=</span> <span class=\"n\">winsandbox</span><span class=\"o\">.</span><span class=\"n\">new_sandbox</span><span class=\"p\">(</span><span class=\"n\">networking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">logon_script</span><span class=\"o\">=</span><span class=\"s2\">\"explorer .\"</span><span class=\"p\">)</span>\n</pre>\n<p>Also a console script is available:</p>\n<pre><span class=\"c1\"># wsb / winsandbox are aliases</span>\n\n<span class=\"c1\"># Create an interactive sandbox session. Spawns an IPython shell.</span>\nwsb -i\n\n<span class=\"c1\"># Spawn an \"offline\" Windows Sandbox instance, with a command line.</span>\nwsb -s <span class=\"s2\">\"explorer C:\\windows\\system32\"</span> \n</pre>\n<h2>Windows Shell Extension</h2>\n<p>A shell extension is also available to easily sandbox executables with the right click menu:</p>\n<p><img alt=\"Shell Extension\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fbce5c3af241b7cad68648cbbfebf20cc0b87a9/68747470733a2f2f692e696d6775722e636f6d2f575872453164752e706e67\"></p>\n<pre><span class=\"c1\"># Run these commands with Administrator privileges</span>\n\n<span class=\"c1\"># Register the shell extension</span>\nwsb -r\n<span class=\"c1\"># Unregister the shell extension</span>\nwsb -u\n</pre>\n\n          </div>"}, "last_serial": 7137855, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "374b02fac12a6d8294407ecb35fcda2a", "sha256": "1f2f3f21230bd3a2c2b8f666f72f5016521436cf78fcb82a4558af2493137e22"}, "downloads": -1, "filename": "pywinsandbox-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "374b02fac12a6d8294407ecb35fcda2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11560, "upload_time": "2020-03-24T20:21:32", "upload_time_iso_8601": "2020-03-24T20:21:32.683332Z", "url": "https://files.pythonhosted.org/packages/0b/6d/2190af05d1167aa31b8bca8794cd15585427b6cd0c4a334b173eea3129cb/pywinsandbox-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68577dbfb5d91ce4f43c1945c868b486", "sha256": "5ea18880d5d1bbb9211e4208aac418d5d06c53e2dbdea8122a2daeb9b110d368"}, "downloads": -1, "filename": "pywinsandbox-1.0.1.tar.gz", "has_sig": false, "md5_digest": "68577dbfb5d91ce4f43c1945c868b486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6769, "upload_time": "2020-03-24T20:21:33", "upload_time_iso_8601": "2020-03-24T20:21:33.845551Z", "url": "https://files.pythonhosted.org/packages/2e/51/b523050d2bc1fd7f1ce6c18636810361e992d1f606f3db6def9a7eb3f09e/pywinsandbox-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fe0a179187644126e4602fc429887664", "sha256": "6c85873c7f4a791477a258c4f156ca3577a103cce1337b33a9b92fd7de9f5c30"}, "downloads": -1, "filename": "pywinsandbox-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe0a179187644126e4602fc429887664", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13657, "upload_time": "2020-03-31T09:57:14", "upload_time_iso_8601": "2020-03-31T09:57:14.384202Z", "url": "https://files.pythonhosted.org/packages/40/20/05ca0edbc62051ffb58458fa0cf4a054d2a952d6153d8d28c2778c9d0dc5/pywinsandbox-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0a1d178994849046b87911aa59b99c", "sha256": "fc01b8b06c2a1958abe61ee3ec0dbb65378f2381c4ab59af3a0fba9944a9f297"}, "downloads": -1, "filename": "pywinsandbox-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7d0a1d178994849046b87911aa59b99c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8094, "upload_time": "2020-03-31T09:57:16", "upload_time_iso_8601": "2020-03-31T09:57:16.030833Z", "url": "https://files.pythonhosted.org/packages/fd/24/81d3a95adc218ce26fe067736ee278884c6bb573e81897fed75a580025fd/pywinsandbox-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a865173e051f9a847dc2600a0d1a9f41", "sha256": "f0a6e10dd8594eba4d884ae212ddf2642e1e979bb88885516ea06b195ba0de2f"}, "downloads": -1, "filename": "pywinsandbox-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a865173e051f9a847dc2600a0d1a9f41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14956, "upload_time": "2020-04-30T14:37:33", "upload_time_iso_8601": "2020-04-30T14:37:33.591778Z", "url": "https://files.pythonhosted.org/packages/b3/22/25b2c598d3641bbeca83a3cbc0da425ff34b534d68feca201d6f56a28432/pywinsandbox-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23c7f28f948b6c5945017bfa3cd479aa", "sha256": "3bee16924bd4974ff6cf9cda25d903202b4a02668ac2c9609f4201b51a6802c0"}, "downloads": -1, "filename": "pywinsandbox-1.2.0.tar.gz", "has_sig": false, "md5_digest": "23c7f28f948b6c5945017bfa3cd479aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8803, "upload_time": "2020-04-30T14:37:34", "upload_time_iso_8601": "2020-04-30T14:37:34.422336Z", "url": "https://files.pythonhosted.org/packages/88/8f/c1eb9511bab16c0fcb7e2c3fd31679e4eb08aefab0af80fcc7e8360853d7/pywinsandbox-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a865173e051f9a847dc2600a0d1a9f41", "sha256": "f0a6e10dd8594eba4d884ae212ddf2642e1e979bb88885516ea06b195ba0de2f"}, "downloads": -1, "filename": "pywinsandbox-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a865173e051f9a847dc2600a0d1a9f41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14956, "upload_time": "2020-04-30T14:37:33", "upload_time_iso_8601": "2020-04-30T14:37:33.591778Z", "url": "https://files.pythonhosted.org/packages/b3/22/25b2c598d3641bbeca83a3cbc0da425ff34b534d68feca201d6f56a28432/pywinsandbox-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23c7f28f948b6c5945017bfa3cd479aa", "sha256": "3bee16924bd4974ff6cf9cda25d903202b4a02668ac2c9609f4201b51a6802c0"}, "downloads": -1, "filename": "pywinsandbox-1.2.0.tar.gz", "has_sig": false, "md5_digest": "23c7f28f948b6c5945017bfa3cd479aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8803, "upload_time": "2020-04-30T14:37:34", "upload_time_iso_8601": "2020-04-30T14:37:34.422336Z", "url": "https://files.pythonhosted.org/packages/88/8f/c1eb9511bab16c0fcb7e2c3fd31679e4eb08aefab0af80fcc7e8360853d7/pywinsandbox-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:16 2020"}