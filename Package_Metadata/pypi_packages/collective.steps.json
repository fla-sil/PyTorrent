{"info": {"author": "Jean-Michel FRANCOIS aka toutpt", "author_email": "jeanmichel.francois@makina-corpus.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nStepper is a very good Zope products. This egg is a first effort to bring some\nplone relative steps availables to developpers and site administrator.\n\nHow many of you have suffer from having proxy error while trying to reindex\na new index in a catalog ?\n\nWell now it's possible to:\n- Change all members's passwords to a unique password\n- Change all members's emails to a unique email\n- Apply a profile without busy a zope's current thread on a production server\n- Activate/Deactivate a PAS plugin: deactivate login from your website before activate a migration\n\nSo if you have any idea for any reusable migration or feature for developpers, let me know.\n\n.. contents::\n\nCredits\n======================================\n|makinacom|_\n\n* `Planet Makina Corpus <http://www.makina-corpus.org>`_\n* `Contact us <mailto:python@makina-corpus.org>`_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\n\nHow to use\n==========\n\nLike Stepper, for example:\n::\n\n    $ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /plone profile_default\n\n\nAvailable steps\n===============\n\nPassword\n--------\n\nThis step let you set a common password for all members of Plone site. The base configuration for this step set the passwords to 'secret'\n::\n\n    $ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone init_users_password\n\nEMail\n-----\n\nThis step let you set a common email to all members of a Plone site. The base configuration for this step set the mail to 'mail@provider.com'\n::\n\n    $ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone email\n\nClearExpiredAccount\n-------------------\n\nIn a Plone site when you fullfill the join_form a member is created in the member database with a random password.\nThen the password reset request is sent to the user. This step help you providing a way to cleanup your member database\n\nYou can also adding some lines of code to monkey patch the password reset tool to not clean it's own password reset requests. Once the password\nrequests are reseted you can't detect if a user account already been activated.\n::\n\n    from Products.PasswordResetTool.PasswordResetTool import PasswordResetTool\n    def clearExpired(self, days=10): pass\n    PasswordResetTool.clearExpired = clearExpired\n    logger.info('password reset tool is now patched, clearExpired do nothing')\n\n::\n\n    $ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone del_unactivated_account\n\nProfile\n-------\n\nApply a generic setup profile.\n::\n\n    $ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone profile_default\n\nTODO\n====\n\n- GenerateUsers into member.py to create members. convienent for stress testing purpose\n- GenerateContent into content.py\n\nNote the code is available at http://svn-mirror.plone.org/svn/collective/collective.steps/trunk#egg=collective.steps-dev\n\n\n\nChangelog\n=========\n\n0.2 - First release with docs\n-----------------------------\n\n* Adding a step to clean member database\n\n* Adding doc for each available steps directly in README.txt file\n\n0.1 - Unreleased\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/collective.steps", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.steps", "package_url": "https://pypi.org/project/collective.steps/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.steps/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/collective.steps"}, "release_url": "https://pypi.org/project/collective.steps/0.3/", "requires_dist": null, "requires_python": null, "summary": "Steps to manage a plone site with Stepper by Makina Corpus", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Introduction</a></h2>\n<p>Stepper is a very good Zope products. This egg is a first effort to bring some\nplone relative steps availables to developpers and site administrator.</p>\n<p>How many of you have suffer from having proxy error while trying to reindex\na new index in a catalog ?</p>\n<p>Well now it\u2019s possible to:\n- Change all members\u2019s passwords to a unique password\n- Change all members\u2019s emails to a unique email\n- Apply a profile without busy a zope\u2019s current thread on a production server\n- Activate/Deactivate a PAS plugin: deactivate login from your website before activate a migration</p>\n<p>So if you have any idea for any reusable migration or feature for developpers, let me know.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id1\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#credits\" id=\"id2\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#how-to-use\" id=\"id3\" rel=\"nofollow\">How to use</a></li>\n<li><a href=\"#available-steps\" id=\"id4\" rel=\"nofollow\">Available steps</a><ul>\n<li><a href=\"#password\" id=\"id5\" rel=\"nofollow\">Password</a></li>\n<li><a href=\"#email\" id=\"id6\" rel=\"nofollow\">EMail</a></li>\n<li><a href=\"#clearexpiredaccount\" id=\"id7\" rel=\"nofollow\">ClearExpiredAccount</a></li>\n<li><a href=\"#profile\" id=\"id8\" rel=\"nofollow\">Profile</a></li>\n</ul>\n</li>\n<li><a href=\"#todo\" id=\"id9\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#changelog\" id=\"id10\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#first-release-with-docs\" id=\"id11\" rel=\"nofollow\">0.2 - First release with docs</a></li>\n<li><a href=\"#unreleased\" id=\"id12\" rel=\"nofollow\">0.1 - Unreleased</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Credits</a></h2>\n<p><a href=\"http://www.makina-corpus.com\" rel=\"nofollow\"><img alt=\"makinacom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a7ff2c6fc5ab8cd2f425946f19dbfbf0aa4c1d7/687474703a2f2f6465706f742e6d616b696e612d636f727075732e6f72672f7075626c69632f6c6f676f2e676966\"></a></p>\n<ul>\n<li><a href=\"http://www.makina-corpus.org\" rel=\"nofollow\">Planet Makina Corpus</a></li>\n<li><a href=\"mailto:python%40makina-corpus.org\">Contact us</a></li>\n</ul>\n</div>\n<div id=\"how-to-use\">\n<h2><a href=\"#id3\" rel=\"nofollow\">How to use</a></h2>\n<p>Like Stepper, for example:</p>\n<pre>$ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /plone profile_default\n</pre>\n</div>\n<div id=\"available-steps\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Available steps</a></h2>\n<div id=\"password\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Password</a></h3>\n<p>This step let you set a common password for all members of Plone site. The base configuration for this step set the passwords to \u2018secret\u2019</p>\n<pre>$ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone init_users_password\n</pre>\n</div>\n<div id=\"email\">\n<h3><a href=\"#id6\" rel=\"nofollow\">EMail</a></h3>\n<p>This step let you set a common email to all members of a Plone site. The base configuration for this step set the mail to <a href=\"mailto:'mail%40provider.com\">\u2018mail<span>@</span>provider<span>.</span>com</a>\u2019</p>\n<pre>$ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone email\n</pre>\n</div>\n<div id=\"clearexpiredaccount\">\n<h3><a href=\"#id7\" rel=\"nofollow\">ClearExpiredAccount</a></h3>\n<p>In a Plone site when you fullfill the join_form a member is created in the member database with a random password.\nThen the password reset request is sent to the user. This step help you providing a way to cleanup your member database</p>\n<p>You can also adding some lines of code to monkey patch the password reset tool to not clean it\u2019s own password reset requests. Once the password\nrequests are reseted you can\u2019t detect if a user account already been activated.</p>\n<pre>from Products.PasswordResetTool.PasswordResetTool import PasswordResetTool\ndef clearExpired(self, days=10): pass\nPasswordResetTool.clearExpired = clearExpired\nlogger.info('password reset tool is now patched, clearExpired do nothing')\n</pre>\n<pre>$ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone del_unactivated_account\n</pre>\n</div>\n<div id=\"profile\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Profile</a></h3>\n<p>Apply a generic setup profile.</p>\n<pre>$ ./bin/instance run parts/productdistros/Stepper/run.py -C collective.steps.config /myplone profile_default\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id9\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li>GenerateUsers into member.py to create members. convienent for stress testing purpose</li>\n<li>GenerateContent into content.py</li>\n</ul>\n<p>Note the code is available at <a href=\"http://svn-mirror.plone.org/svn/collective/collective.steps/trunk#egg=collective.steps-dev\" rel=\"nofollow\">http://svn-mirror.plone.org/svn/collective/collective.steps/trunk#egg=collective.steps-dev</a></p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"first-release-with-docs\">\n<h3><a href=\"#id11\" rel=\"nofollow\">0.2 - First release with docs</a></h3>\n<ul>\n<li>Adding a step to clean member database</li>\n<li>Adding doc for each available steps directly in README.txt file</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3><a href=\"#id12\" rel=\"nofollow\">0.1 - Unreleased</a></h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 802832, "releases": {"0.1dev-r74652": [{"comment_text": "", "digests": {"md5": "02eb5b2c61b04e8382bb2ff09a02c5d3", "sha256": "c69b937d4ea7db4e98d8f47f2d08de0d6cc7d1d0de6b04c2fc9528a3e9a340f6"}, "downloads": -1, "filename": "collective.steps-0.1dev-r74652.zip", "has_sig": false, "md5_digest": "02eb5b2c61b04e8382bb2ff09a02c5d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15863, "upload_time": "2008-10-29T16:29:33", "upload_time_iso_8601": "2008-10-29T16:29:33Z", "url": "https://files.pythonhosted.org/packages/ab/01/5f9df09ab00c49a0ad821b6e10a833e2831140ec2bf97563c53ac39439f0/collective.steps-0.1dev-r74652.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4871ba4bfce2c7e228b7a2dbfe994fb9", "sha256": "dde8c163841baec65690cd9cdb3a378576c2d581ec19a3a818f045efecaa2307"}, "downloads": -1, "filename": "collective.steps-0.2.zip", "has_sig": false, "md5_digest": "4871ba4bfce2c7e228b7a2dbfe994fb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18064, "upload_time": "2009-10-06T10:05:32", "upload_time_iso_8601": "2009-10-06T10:05:32.293424Z", "url": "https://files.pythonhosted.org/packages/8c/f6/4022aeba886d84fdf37f6aa093fdfbe2fe594b5259cdd43ee159121b6eee/collective.steps-0.2.zip", "yanked": false}], "0.2dev-r79917": [{"comment_text": "", "digests": {"md5": "32efa8414ae08b8c369aeffbbe0017f6", "sha256": "1856f0fe55409a7f08db241eea590e78504bc1bbc9d3fee665d6720b660d8269"}, "downloads": -1, "filename": "collective.steps-0.2dev-r79917.zip", "has_sig": false, "md5_digest": "32efa8414ae08b8c369aeffbbe0017f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18378, "upload_time": "2009-01-29T10:07:20", "upload_time_iso_8601": "2009-01-29T10:07:20Z", "url": "https://files.pythonhosted.org/packages/9b/89/36cb4eddfa301fb3aebdeb71054bb78c6aeafef0918abaaa2ce866a301a1/collective.steps-0.2dev-r79917.zip", "yanked": false}], "0.2dev-r79921": [], "0.2dev-r80203": [], "0.2dev-r80204": [], "0.2dev-r80219": [], "0.2dev-r99437": [], "0.3": [{"comment_text": "", "digests": {"md5": "df7fd4d212effba1249e25fd8a9f91fc", "sha256": "dfa921bb349ff328fa86a4014fcb9c5305d300a3acfb876fd031f834054d476b"}, "downloads": -1, "filename": "collective.steps-0.3.zip", "has_sig": false, "md5_digest": "df7fd4d212effba1249e25fd8a9f91fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18467, "upload_time": "2010-04-21T22:36:23", "upload_time_iso_8601": "2010-04-21T22:36:23.144832Z", "url": "https://files.pythonhosted.org/packages/b1/d3/b96820cebf1c9b271fc916ca250b0dd799ecb6a4833ca6b0a3875ad4c1a7/collective.steps-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df7fd4d212effba1249e25fd8a9f91fc", "sha256": "dfa921bb349ff328fa86a4014fcb9c5305d300a3acfb876fd031f834054d476b"}, "downloads": -1, "filename": "collective.steps-0.3.zip", "has_sig": false, "md5_digest": "df7fd4d212effba1249e25fd8a9f91fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18467, "upload_time": "2010-04-21T22:36:23", "upload_time_iso_8601": "2010-04-21T22:36:23.144832Z", "url": "https://files.pythonhosted.org/packages/b1/d3/b96820cebf1c9b271fc916ca250b0dd799ecb6a4833ca6b0a3875ad4c1a7/collective.steps-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:48 2020"}