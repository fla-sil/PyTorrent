{"info": {"author": "Misha Behersky", "author_email": "bmwant@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "## japronto_jinja2\n\n[jinja2](http://jinja.pocoo.org) asynchronous template renderer for \n[japronto](https://github.com/squeaky-pl/japronto).\n\n### Installation\n\nInstall from PyPI:\n```\npip install japronto-jinja2\n```\n\n### Developing\n\nInstall requirement and launch tests:\n```\npip install -e .[dev]\npytest\n```\n\n### Usage\n\nBefore template rendering you have to setup *jinja2 environment* first::\n\n    import jinja2\n    from japronto import Application\n\n    app = Application()\n    japronto_jinja2.setup(app, loader=jinja2.FileSystemLoader('/path/to/templates/folder'))\n\n\nAfter that you may to use template engine in your *web-handlers*. The\nmost convenient way is to decorate a *web-handler*.\n\nUsing the function based web handlers::\n\n    @ajapronto_jinja2.template('tmpl.jinja2')\n    def handler(request):\n        return {'action': 'follow', 'person': 'me'}\n\n\nOn handler call the `japronto_jinja2.template` decorator will pass\nreturned dictionary `{'action': 'follow', 'person': 'me'}` into\ntemplate named `tmpl.jinja2` for getting resulting HTML text.\n\nIf you need more complex processing (modify response on your own)\nyou may call `render_template` function.\n\nUsing a function based web handler::\n\n    async def handler(request):\n        context = {'action': 'unsubscribe', 'from': 'channel'}\n        response = aiohttp_jinja2.render_template('tmpl.jinja2',\n                                                  request,\n                                                  context)\n        # do smth with your response\n        return response\n\nSee [examples](https://github.com/bmwant/japronto-jinja2/tree/master/examples) \ndirectory for more complete snippets.\n\n### License\n\n`japronto_jinja2` is offered under the Apache 2 license.\n\nCHANGES\n=======\n\n0.0.1 (2016-05-10)\n------------------\n\n- Initial release\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "japronto-jinja2", "package_url": "https://pypi.org/project/japronto-jinja2/", "platform": "", "project_url": "https://pypi.org/project/japronto-jinja2/", "project_urls": null, "release_url": "https://pypi.org/project/japronto-jinja2/0.0.1/", "requires_dist": ["japronto (<0.2,>=0.1.1)", "jinja2 (>=2.7)", "alabaster (>=0.6.2); extra == 'dev'", "coverage (==4.3.4); extra == 'dev'", "flake8 (==3.3.0); extra == 'dev'", "japronto (<0.2,>=0.1.1); extra == 'dev'", "jinja2 (>=2.7); extra == 'dev'", "pytest (>=3.0.7); extra == 'dev'", "pytest-cov (==2.4.0); extra == 'dev'", "sphinx (==1.5.5); extra == 'dev'", "twine (==1.8.1); extra == 'dev'"], "requires_python": "", "summary": "jinja2 async template renderer for japronto web server", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>## japronto_jinja2</p>\n<p>[jinja2](<a href=\"http://jinja.pocoo.org\" rel=\"nofollow\">http://jinja.pocoo.org</a>) asynchronous template renderer for\n[japronto](<a href=\"https://github.com/squeaky-pl/japronto\" rel=\"nofollow\">https://github.com/squeaky-pl/japronto</a>).</p>\n<p>### Installation</p>\n<p>Install from PyPI:\n<tt>`\npip install <span class=\"pre\">japronto-jinja2</span>\n`</tt></p>\n<p>### Developing</p>\n<p>Install requirement and launch tests:\n<tt>`\npip install <span class=\"pre\">-e</span> .[dev]\npytest\n`</tt></p>\n<p>### Usage</p>\n<p>Before template rendering you have to setup <em>jinja2 environment</em> first:</p>\n<pre>import jinja2\nfrom japronto import Application\n\napp = Application()\njapronto_jinja2.setup(app, loader=jinja2.FileSystemLoader('/path/to/templates/folder'))\n</pre>\n<p>After that you may to use template engine in your <em>web-handlers</em>. The\nmost convenient way is to decorate a <em>web-handler</em>.</p>\n<p>Using the function based web handlers:</p>\n<pre>@ajapronto_jinja2.template('tmpl.jinja2')\ndef handler(request):\n    return {'action': 'follow', 'person': 'me'}\n</pre>\n<p>On handler call the <cite>japronto_jinja2.template</cite> decorator will pass\nreturned dictionary <cite>{\u2018action\u2019: \u2018follow\u2019, \u2018person\u2019: \u2018me\u2019}</cite> into\ntemplate named <cite>tmpl.jinja2</cite> for getting resulting HTML text.</p>\n<p>If you need more complex processing (modify response on your own)\nyou may call <cite>render_template</cite> function.</p>\n<p>Using a function based web handler:</p>\n<pre>async def handler(request):\n    context = {'action': 'unsubscribe', 'from': 'channel'}\n    response = aiohttp_jinja2.render_template('tmpl.jinja2',\n                                              request,\n                                              context)\n    # do smth with your response\n    return response\n</pre>\n<p>See [examples](<a href=\"https://github.com/bmwant/japronto-jinja2/tree/master/examples\" rel=\"nofollow\">https://github.com/bmwant/japronto-jinja2/tree/master/examples</a>)\ndirectory for more complete snippets.</p>\n<p>### License</p>\n<p><cite>japronto_jinja2</cite> is offered under the Apache 2 license.</p>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.0.1 (2016-05-10)</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2864673, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b7abec14adcb0a79555a0404ca3b12f9", "sha256": "0d86d2bda9d694a10c66140b661ef53844f19ce3845cbc534f792263fda628c8"}, "downloads": -1, "filename": "japronto_jinja2-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b7abec14adcb0a79555a0404ca3b12f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5069, "upload_time": "2017-05-10T15:06:35", "upload_time_iso_8601": "2017-05-10T15:06:35.465289Z", "url": "https://files.pythonhosted.org/packages/d7/e7/4e53cf14c11b656e5394629993dbfb84e01c1531aa46a0cef5f096e34f78/japronto_jinja2-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b51f717d4213ab9975efb26b1293c2bd", "sha256": "c7890d395bbd05ef51665826fb222643dfa7b0e01dcd084f0a8f6452d583d0f5"}, "downloads": -1, "filename": "japronto_jinja2-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b51f717d4213ab9975efb26b1293c2bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45883, "upload_time": "2017-05-10T15:06:37", "upload_time_iso_8601": "2017-05-10T15:06:37.674748Z", "url": "https://files.pythonhosted.org/packages/85/3a/f3f37ba10529b04d0dc488b899e0d098d4d8e3fded31b9d0fdb5a55d52ff/japronto_jinja2-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7abec14adcb0a79555a0404ca3b12f9", "sha256": "0d86d2bda9d694a10c66140b661ef53844f19ce3845cbc534f792263fda628c8"}, "downloads": -1, "filename": "japronto_jinja2-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b7abec14adcb0a79555a0404ca3b12f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5069, "upload_time": "2017-05-10T15:06:35", "upload_time_iso_8601": "2017-05-10T15:06:35.465289Z", "url": "https://files.pythonhosted.org/packages/d7/e7/4e53cf14c11b656e5394629993dbfb84e01c1531aa46a0cef5f096e34f78/japronto_jinja2-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b51f717d4213ab9975efb26b1293c2bd", "sha256": "c7890d395bbd05ef51665826fb222643dfa7b0e01dcd084f0a8f6452d583d0f5"}, "downloads": -1, "filename": "japronto_jinja2-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b51f717d4213ab9975efb26b1293c2bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45883, "upload_time": "2017-05-10T15:06:37", "upload_time_iso_8601": "2017-05-10T15:06:37.674748Z", "url": "https://files.pythonhosted.org/packages/85/3a/f3f37ba10529b04d0dc488b899e0d098d4d8e3fded31b9d0fdb5a55d52ff/japronto_jinja2-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:12 2020"}