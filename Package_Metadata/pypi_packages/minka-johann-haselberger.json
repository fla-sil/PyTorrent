{"info": {"author": "Johann Haselberger", "author_email": "johann.haselberger@hs-kempten.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/Minka.png\">\n\n## About\nMinka is ment to be a middleware between your optimization problem and a modular set of supporting tools to:\n\n* automatically perform hyperparameter optimization\n* store the results, parameter sets and custom data\n* compare different training runs\n* visualize the results and training processes\n\nThe aim of the project is to provide a simple as possible interface without the need to change your existing code.\n\n## One line to change it all \nCould it be easier than just adding one line?\n```python\nminka(yourOptimizationTask, 'configuration.json').opt(numberOfRuns)\n```\n\n## Architecture overview\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/minka_overview2.png\">\n\n## Usage\n### Installation\n```\n!pip install --upgrade PyYAML==4.2b4 optuna sacred python-telegram-bot dnspython loguru wandb pymongo\n```\n\n### Preparation\n* In order to store the data, a mongoDB is required. You can host your own free one here: https://cloud.mongodb.com\n* If you want to use the w&b interface, an account is needed. Create one here: https://app.wandb.ai\n\n### Define your optimization problem\nMinka uses a very simple combination of a configuration json file and the actual optimization task, represented as a single class.\n\n#### optimization class\noptimization template:\n```python\nclass yourOptimizationTask:\n    def __init__(self):\n        pass\n\n    def prepare(self):\n        pass\n\n    def run(self, config):\n        x = config['x']\n        result = (x - 2) ** 2\n\n        evalMetrics = {\n            'error': result\n        }\n\n        logArrays = {\n            'someValues': [1,2,3,4]\n        }\n\n        return result, evalMetrics, logArrays\n\n    def cleanup(self):\n        pass\n\n```\n\n#### parameter configuration\ncontent of the configuration.json file:\n```json\n\n{\n    \"comment\": \"parameter types: fix, categorical, discrete_uniform, int, loguniform, uniform\",\n    \"parameters\": {\n        \"batchSize\": {\"type\": \"fix\",\"values\": 256},\n        \"epochs\": {\"type\": \"fix\",\"values\": 75},\n        \"x\": {\"type\": \"categorical\",\"values\": [11,22,26]}\n    }\n}\n\n```\n\n## Screenshots\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/omni.png\">\n<img src=\"https://ll-srv-web.livinglab.local:3000/Johann.Haselberger/MINKA/raw/branch/master/assets/wandb.png\">\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "minka-johann-haselberger", "package_url": "https://pypi.org/project/minka-johann-haselberger/", "platform": "", "project_url": "https://pypi.org/project/minka-johann-haselberger/", "project_urls": {"Homepage": "https://github.com/"}, "release_url": "https://pypi.org/project/minka-johann-haselberger/1.0.1/", "requires_dist": ["matplotlib", "numpy", "PyYAML (==4.2b4)", "optuna", "sacred", "python-telegram-bot", "dnspython", "loguru", "wandb", "pymongo", "graphql-core (==2.1)"], "requires_python": ">=3.6", "summary": "The minka package", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17166a1be1de50e177ce042cc48e92fc29e10ccd/68747470733a2f2f6c6c2d7372762d7765622e6c6976696e676c61622e6c6f63616c3a333030302f4a6f68616e6e2e486173656c6265726765722f4d494e4b412f7261772f6272616e63682f6d61737465722f6173736574732f4d696e6b612e706e67\">\n<h2>About</h2>\n<p>Minka is ment to be a middleware between your optimization problem and a modular set of supporting tools to:</p>\n<ul>\n<li>automatically perform hyperparameter optimization</li>\n<li>store the results, parameter sets and custom data</li>\n<li>compare different training runs</li>\n<li>visualize the results and training processes</li>\n</ul>\n<p>The aim of the project is to provide a simple as possible interface without the need to change your existing code.</p>\n<h2>One line to change it all</h2>\n<p>Could it be easier than just adding one line?</p>\n<pre><span class=\"n\">minka</span><span class=\"p\">(</span><span class=\"n\">yourOptimizationTask</span><span class=\"p\">,</span> <span class=\"s1\">'configuration.json'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">opt</span><span class=\"p\">(</span><span class=\"n\">numberOfRuns</span><span class=\"p\">)</span>\n</pre>\n<h2>Architecture overview</h2>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e8636759f7870d2f6aa1e026c35fcb63efb4e1a/68747470733a2f2f6c6c2d7372762d7765622e6c6976696e676c61622e6c6f63616c3a333030302f4a6f68616e6e2e486173656c6265726765722f4d494e4b412f7261772f6272616e63682f6d61737465722f6173736574732f6d696e6b615f6f76657276696577322e706e67\">\n<h2>Usage</h2>\n<h3>Installation</h3>\n<pre><code>!pip install --upgrade PyYAML==4.2b4 optuna sacred python-telegram-bot dnspython loguru wandb pymongo\n</code></pre>\n<h3>Preparation</h3>\n<ul>\n<li>In order to store the data, a mongoDB is required. You can host your own free one here: <a href=\"https://cloud.mongodb.com\" rel=\"nofollow\">https://cloud.mongodb.com</a></li>\n<li>If you want to use the w&amp;b interface, an account is needed. Create one here: <a href=\"https://app.wandb.ai\" rel=\"nofollow\">https://app.wandb.ai</a></li>\n</ul>\n<h3>Define your optimization problem</h3>\n<p>Minka uses a very simple combination of a configuration json file and the actual optimization task, represented as a single class.</p>\n<h4>optimization class</h4>\n<p>optimization template:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">yourOptimizationTask</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">prepare</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">]</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n        <span class=\"n\">evalMetrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'error'</span><span class=\"p\">:</span> <span class=\"n\">result</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">logArrays</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'someValues'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">evalMetrics</span><span class=\"p\">,</span> <span class=\"n\">logArrays</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">cleanup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h4>parameter configuration</h4>\n<p>content of the configuration.json file:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"comment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"parameter types: fix, categorical, discrete_uniform, int, loguniform, uniform\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"parameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"batchSize\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"fix\"</span><span class=\"p\">,</span><span class=\"nt\">\"values\"</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">},</span>\n        <span class=\"nt\">\"epochs\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"fix\"</span><span class=\"p\">,</span><span class=\"nt\">\"values\"</span><span class=\"p\">:</span> <span class=\"mi\">75</span><span class=\"p\">},</span>\n        <span class=\"nt\">\"x\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"categorical\"</span><span class=\"p\">,</span><span class=\"nt\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">26</span><span class=\"p\">]}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Screenshots</h2>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/179de74061b82f3c8b9f9859f0992742747f2c0e/68747470733a2f2f6c6c2d7372762d7765622e6c6976696e676c61622e6c6f63616c3a333030302f4a6f68616e6e2e486173656c6265726765722f4d494e4b412f7261772f6272616e63682f6d61737465722f6173736574732f6f6d6e692e706e67\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e2ea28df92bf87726163541f442c491570f0ffa/68747470733a2f2f6c6c2d7372762d7765622e6c6976696e676c61622e6c6f63616c3a333030302f4a6f68616e6e2e486173656c6265726765722f4d494e4b412f7261772f6272616e63682f6d61737465722f6173736574732f77616e64622e706e67\">\n\n          </div>"}, "last_serial": 6228028, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "55726f11f79d723adeef5400dcdbee88", "sha256": "909f70a7f7b0e48b373edfb2d1cc6e33bd5783b93e3c25c816f7a29ff8d646d5"}, "downloads": -1, "filename": "minka_johann_haselberger-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "55726f11f79d723adeef5400dcdbee88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4297, "upload_time": "2019-12-02T11:00:03", "upload_time_iso_8601": "2019-12-02T11:00:03.509419Z", "url": "https://files.pythonhosted.org/packages/58/31/665013030bfcf1fea84f28a9ea61ca200d2b8af60e8e9549a9a5b55e2eca/minka_johann_haselberger-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "686a96e9a7239ae0325e129565f54dfa", "sha256": "7bda98b5707222f4e8378df45c596d2a701d1cabfe8c65906cb3ce88d6ff0bbd"}, "downloads": -1, "filename": "minka-johann-haselberger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "686a96e9a7239ae0325e129565f54dfa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4012, "upload_time": "2019-12-02T11:00:17", "upload_time_iso_8601": "2019-12-02T11:00:17.380527Z", "url": "https://files.pythonhosted.org/packages/10/d6/ef6b5cb0cf2d13aceb89ed40e03a84e5f15cbf0f47da3b187611801f117e/minka-johann-haselberger-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "addc5a70467707ac336295e06d478f15", "sha256": "8429c1da280b93fafe9f5c4909235c5001a30b584886cbab4353bbe5c8df2c02"}, "downloads": -1, "filename": "minka_johann_haselberger-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "addc5a70467707ac336295e06d478f15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4311, "upload_time": "2019-12-02T11:12:15", "upload_time_iso_8601": "2019-12-02T11:12:15.707813Z", "url": "https://files.pythonhosted.org/packages/7a/40/87bdc834db91b897a44ac9bfea2c115bc94d8bedff9d97d1217bfc49ed36/minka_johann_haselberger-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0d625f0e683f6c8ab503d766360de62", "sha256": "9e7b461472f27ec7f43bc2b5ed8558819f0a1aeed4e3bcf48bbb3680022f638c"}, "downloads": -1, "filename": "minka-johann-haselberger-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e0d625f0e683f6c8ab503d766360de62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4025, "upload_time": "2019-12-02T11:12:17", "upload_time_iso_8601": "2019-12-02T11:12:17.365745Z", "url": "https://files.pythonhosted.org/packages/f4/7d/48e516e13f542c6e635376952550e20f04dfc8b95a8323e60716d889429a/minka-johann-haselberger-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "addc5a70467707ac336295e06d478f15", "sha256": "8429c1da280b93fafe9f5c4909235c5001a30b584886cbab4353bbe5c8df2c02"}, "downloads": -1, "filename": "minka_johann_haselberger-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "addc5a70467707ac336295e06d478f15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4311, "upload_time": "2019-12-02T11:12:15", "upload_time_iso_8601": "2019-12-02T11:12:15.707813Z", "url": "https://files.pythonhosted.org/packages/7a/40/87bdc834db91b897a44ac9bfea2c115bc94d8bedff9d97d1217bfc49ed36/minka_johann_haselberger-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0d625f0e683f6c8ab503d766360de62", "sha256": "9e7b461472f27ec7f43bc2b5ed8558819f0a1aeed4e3bcf48bbb3680022f638c"}, "downloads": -1, "filename": "minka-johann-haselberger-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e0d625f0e683f6c8ab503d766360de62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4025, "upload_time": "2019-12-02T11:12:17", "upload_time_iso_8601": "2019-12-02T11:12:17.365745Z", "url": "https://files.pythonhosted.org/packages/f4/7d/48e516e13f542c6e635376952550e20f04dfc8b95a8323e60716d889429a/minka-johann-haselberger-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:15 2020"}