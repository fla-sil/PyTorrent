{"info": {"author": "Phil Booth", "author_email": "pmbooth@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "pdfpages\n========\n\n.. image:: https://img.shields.io/pypi/v/pdfpages.svg?style=flat-square   :https://pypi.python.org/pypi/pdfpages: \n.. image:: https://img.shields.io/github/license/philbooth/pdfpages.svg?style=flat-square   :target: https://opensource.org/licenses/MIT\n\nExtract specific pages from PDF documents.\n\n* `What is it?`_\n* `How do I install it?`_\n* `How do I run it on the command line?`_\n* `How do I call it from python code?`_\n* `What license is it released under?`_\n\nWhat is it?\n-----------\n\nA python package\nthat extracts pages from PDF documents\nand writes them to a fresh PDF.\n\nHow do I install it?\n--------------------\n\nVia pip::\n\n  pip install pdfpages\n\nOr if you just want the git repo::\n\n  git clone git@github.com:philbooth/pdfpages.git\n\nHow do I run it on the command line?\n------------------------------------\n\n::\n\n  pdfpages -o out.pdf in.pdf\n\nThe ``-o`` option\nis used to specify\nthe output path\nand the final argument\nis the path to the input document.\nYou can specify\nmultiple input documents\nby listing further paths\nat the end of the command::\n\n  pdfpages -o out.pdf in1.pdf in2.pdf\n  pdfpages -o out.pdf in/*.pdf\n\nWithout other arguments,\nthe default behaviour is\nto extract the first page\nfrom each input document\nand write the result\nto the output PDF.\n\nIf you want to extract specific pages,\nyou can use the ``-p`` option.\nFor instance,\nto extract just the second page\nfrom each input document\nyou woud run::\n\n  pdfpages -p 2 -o out.pdf in/*.pdf\n\nOr to extract the second and third pages\nfrom each document::\n\n  pdfpages -p 2 3 -o out.pdf in/*.pdf\n\nYou can also use\nthe ``-f`` and ``-c`` options\nto specify ranges of page numbers.\nFor instance,\nto extract the first hundred pages\nfrom each document::\n\n  pdfpages -f 1 -c 100 -o out.pdf in/*.pdf\n\nOr to extract\nthe second hundred pages::\n\n  pdfpages -f 101 -c 100 -o out.pdf in/*.pdf\n\nYou can exclude specific pages\nfrom these ranges\nwith the ``-e`` option.\nFor example,\nto exclude the third page\nfrom the first five pages\nof each input document::\n\n  pdfpages -f 1 -c 5 -e 3 -o out.pdf in/*.pdf\n\nFinally,\nyou can see the usage information\nat any time\nusing the ``-h`` option::\n\n  python pdfpages.py -h\n\nHow do I call it from python code?\n----------------------------------\n\n::\n\n  import pdfpages\n\n  pdfpages.extract(in_files, out_file, pages, exclude_pages)\n\n* ``in_files``:\n  A tuple containing files\n  opened for binary reading\n  (mode ``\"rb\"``).\n\n* ``out_file``:\n  A file\n  opened for binary writing\n  (mode ``\"wb\"``).\n\n* ``pages``:\n  A tuple containing page numbers\n  to extract\n  (integers).\n\n* ``exclude_pages``:\n  An optional tuple containing page numbers\n  to exclude from extraction\n  (integers).\n  Defaults to an empty tuple.\n\nWhat license is it released under?\n----------------------------------\n\n`MIT <LICENSE>`_", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/philbooth/pdfpages/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/philbooth/pdfpages", "keywords": "pdf,extract,filter,copy,duplicate,pages", "license": "", "maintainer": "", "maintainer_email": "", "name": "pdfpages", "package_url": "https://pypi.org/project/pdfpages/", "platform": "", "project_url": "https://pypi.org/project/pdfpages/", "project_urls": {"Download": "https://github.com/philbooth/pdfpages/archive/0.1.0.tar.gz", "Homepage": "https://github.com/philbooth/pdfpages"}, "release_url": "https://pypi.org/project/pdfpages/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Extract pages from PDF documents", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://img.shields.io/pypi/v/pdfpages.svg?style=flat-square:https://pypi.python.org/pypi/pdfpages:\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90fe428ecbaf6c65fa4c467bacdc1fcc9c3ee963/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70646670616765732e7376673f7374796c653d666c61742d7371756172653a68747470733a2f2f707970692e707974686f6e2e6f72672f707970692f70646670616765733a\">\n<img alt=\"https://img.shields.io/github/license/philbooth/pdfpages.svg?style=flat-square:target:https://opensource.org/licenses/MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed602da2caa2827c9a2728c1fb6d13661094aef4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7068696c626f6f74682f70646670616765732e7376673f7374796c653d666c61742d7371756172653a7461726765743a68747470733a2f2f6f70656e736f757263652e6f72672f6c6963656e7365732f4d4954\">\n<p>Extract specific pages from PDF documents.</p>\n<ul>\n<li><a href=\"#what-is-it\" rel=\"nofollow\">What is it?</a></li>\n<li><a href=\"#how-do-i-install-it\" rel=\"nofollow\">How do I install it?</a></li>\n<li><a href=\"#how-do-i-run-it-on-the-command-line\" rel=\"nofollow\">How do I run it on the command line?</a></li>\n<li><a href=\"#how-do-i-call-it-from-python-code\" rel=\"nofollow\">How do I call it from python code?</a></li>\n<li><a href=\"#what-license-is-it-released-under\" rel=\"nofollow\">What license is it released under?</a></li>\n</ul>\n<div id=\"what-is-it\">\n<h2>What is it?</h2>\n<p>A python package\nthat extracts pages from PDF documents\nand writes them to a fresh PDF.</p>\n</div>\n<div id=\"how-do-i-install-it\">\n<h2>How do I install it?</h2>\n<p>Via pip:</p>\n<pre>pip install pdfpages\n</pre>\n<p>Or if you just want the git repo:</p>\n<pre>git clone git@github.com:philbooth/pdfpages.git\n</pre>\n</div>\n<div id=\"how-do-i-run-it-on-the-command-line\">\n<h2>How do I run it on the command line?</h2>\n<pre>pdfpages -o out.pdf in.pdf\n</pre>\n<p>The <tt><span class=\"pre\">-o</span></tt> option\nis used to specify\nthe output path\nand the final argument\nis the path to the input document.\nYou can specify\nmultiple input documents\nby listing further paths\nat the end of the command:</p>\n<pre>pdfpages -o out.pdf in1.pdf in2.pdf\npdfpages -o out.pdf in/*.pdf\n</pre>\n<p>Without other arguments,\nthe default behaviour is\nto extract the first page\nfrom each input document\nand write the result\nto the output PDF.</p>\n<p>If you want to extract specific pages,\nyou can use the <tt><span class=\"pre\">-p</span></tt> option.\nFor instance,\nto extract just the second page\nfrom each input document\nyou woud run:</p>\n<pre>pdfpages -p 2 -o out.pdf in/*.pdf\n</pre>\n<p>Or to extract the second and third pages\nfrom each document:</p>\n<pre>pdfpages -p 2 3 -o out.pdf in/*.pdf\n</pre>\n<p>You can also use\nthe <tt><span class=\"pre\">-f</span></tt> and <tt><span class=\"pre\">-c</span></tt> options\nto specify ranges of page numbers.\nFor instance,\nto extract the first hundred pages\nfrom each document:</p>\n<pre>pdfpages -f 1 -c 100 -o out.pdf in/*.pdf\n</pre>\n<p>Or to extract\nthe second hundred pages:</p>\n<pre>pdfpages -f 101 -c 100 -o out.pdf in/*.pdf\n</pre>\n<p>You can exclude specific pages\nfrom these ranges\nwith the <tt><span class=\"pre\">-e</span></tt> option.\nFor example,\nto exclude the third page\nfrom the first five pages\nof each input document:</p>\n<pre>pdfpages -f 1 -c 5 -e 3 -o out.pdf in/*.pdf\n</pre>\n<p>Finally,\nyou can see the usage information\nat any time\nusing the <tt><span class=\"pre\">-h</span></tt> option:</p>\n<pre>python pdfpages.py -h\n</pre>\n</div>\n<div id=\"how-do-i-call-it-from-python-code\">\n<h2>How do I call it from python code?</h2>\n<pre>import pdfpages\n\npdfpages.extract(in_files, out_file, pages, exclude_pages)\n</pre>\n<ul>\n<li><tt>in_files</tt>:\nA tuple containing files\nopened for binary reading\n(mode <tt>\"rb\"</tt>).</li>\n<li><tt>out_file</tt>:\nA file\nopened for binary writing\n(mode <tt>\"wb\"</tt>).</li>\n<li><tt>pages</tt>:\nA tuple containing page numbers\nto extract\n(integers).</li>\n<li><tt>exclude_pages</tt>:\nAn optional tuple containing page numbers\nto exclude from extraction\n(integers).\nDefaults to an empty tuple.</li>\n</ul>\n</div>\n<div id=\"what-license-is-it-released-under\">\n<h2>What license is it released under?</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n</div>\n\n          </div>"}, "last_serial": 3163619, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4c1232b83a519a5bfeb6a3be66e28bd3", "sha256": "efe90a81891d67f10ea0d0dc8dab328422c0b8231792a1c049c71ec439e6f053"}, "downloads": -1, "filename": "pdfpages-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4c1232b83a519a5bfeb6a3be66e28bd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3177, "upload_time": "2017-09-10T18:56:03", "upload_time_iso_8601": "2017-09-10T18:56:03.363743Z", "url": "https://files.pythonhosted.org/packages/79/ee/44ae1743687fa3d92bd5990c4f130743cdce865b332252bcae4892bf8076/pdfpages-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c1232b83a519a5bfeb6a3be66e28bd3", "sha256": "efe90a81891d67f10ea0d0dc8dab328422c0b8231792a1c049c71ec439e6f053"}, "downloads": -1, "filename": "pdfpages-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4c1232b83a519a5bfeb6a3be66e28bd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3177, "upload_time": "2017-09-10T18:56:03", "upload_time_iso_8601": "2017-09-10T18:56:03.363743Z", "url": "https://files.pythonhosted.org/packages/79/ee/44ae1743687fa3d92bd5990c4f130743cdce865b332252bcae4892bf8076/pdfpages-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:11 2020"}