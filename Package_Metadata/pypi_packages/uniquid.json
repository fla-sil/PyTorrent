{"info": {"author": "Uniquid Inc.", "author_email": "hello@uniquid.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: System Administrators", "License :: Other/Proprietary License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Security", "Topic :: System :: Systems Administration"], "description": "# UniquID User Guide\n\nThe command line interface for UniquID system administration.  The UniquID IAM\n(Identity and Access Management) system leverages blockchain technology so that\nyour organization can efficiently control access to large pools of IoT devices.\n\n   > **Warning**\n   >\n   > The UniquID command line interface is currently in development and undergoing\n   > test.  Please do not use the tool in production as information may be lost.\n   > Contact UniquID about organizing an evaluation or demonstration of this\n   > innovative technology.\n\n   > **Warning**\n   >\n   > The UniquID command line interface is currently untested on ***Windows***\n   > platforms.  Some functions, such as `deploy` are not currently\n   > supported on *Windows*.\n\nThe package currently supports Python 3.6 and later.  Please upgrade to the\nlatest version of Python if you are running an older version.\n\n\n## Table of Contents\n- [Installation Instructions](#installation-instructions)\n- [Getting Started](#getting-started)\n- [Viewing Devices](#viewing-devices)\n- [Contracts](#contracts)\n- [Sharing Access to Devices](#sharing-access-to-devices)\n- [Getting Help](#getting-help)\n- [Contact UniquID](#contact-uniquid)\n\n\n## Installation Instructions\n\nVerify that *Python 3* is installed on your system. You should have at least\n***version 3.6*** of Python installed.  You can query the version installed using\nthe command:\n\n```\n    $ python --version\n```\n\nIf you do not have Python installed, please follow the instructions for your\noperating system:\n\nOperating System | Download Instructions\n---------------- | ---------------------\nWindows | [Python3 for Windows](https://docs.python.org/3/using/windows.html)\nMacOS | [Python3 for Mac](https://docs.python.org/3/using/mac.html)\nLinux | [Python3 for Unix](https://docs.python.org/3/using/unix.html)\n\nOnce *Python* is installed, you can use the `pip3` or `pip` tool to install the\nlatest version of the CLI client.\n\n   > **Note**\n   >\n   > The `pip` packaging tool for *Python3* may be called `pip3` on your\n   > system, depending on your operating system.  Please check your system\n   > instructions on how to execute the `pip` tool for *Python 3*.\n\n```\n    $ sudo pip3 install uniquid\n```\n\nor\n\n```\n    $ sudo pip install uniquid\n```\n\nIf correctly installed with no errors, the CLI client application can\nbe executed from the command line.\n\n```\n    $ uniquid --version\n```\n\n## Getting Started\n\nThe user can access a list of the available commands, using the `help`\noption.\n\n```\n    $ uniquid --help\n```\n\nEach command also provides more detailed help information. For example:\n\n```\n    $ uniquid login --help\n```\n\nSome commands have a shorter alias available.  You can view the list of\navailable command aliases using the command:\n\n```\n    $ uniquid list-aliases\n```\n\nIn order to login to the UniquID system, the user must provide:\n* a credentials file which was downloaded during registration at http://uniquid.com.\n\nor:\n* their registered organization name\n* their UniquID username\n* the secret *Access Key* which was provided to them during registration\n\nThe `login` command will keep an authenticated session open until the user uses\nthe `logout` command to close the session or their session expires.  For security\nreasons, the session may expire after a period of time and the user will be\nrequested to use the `login` command again.\n\n### Login using the credentials file\n\nDuring account registration, the user is given the option to download a\ncredentials file to their system. This file contains information such as\ntheir unique *Access Key* which enables them to connect to the UniquID\nsystem.  This credentials file should be stored securely on their system with\nread and write privileges only granted to the user.\n\nThe user should save the credentials file to the following location:\n\nOperating System | File Path\n---------------- | -----------------------\nWindows | `%USERPROFILE%\\.uniquid\\credentials.json`\nMacOs | `~/.uniquid/credentials.json`\nLinux | `~/.uniquid/credentials.json`\n\nOnce the credentials file is saved to the correct location, the `login` command\nwill automatically detect the user's credentials.  To `login`, the user should\nuse the command:\n\n```\n    $ uniquid login\n```\n\nIf the user prefers not to save the credentials file to the default location\nas described above, they can pass the location of the credentials file as\nan option on the command line.  Therefore, the command to `login` is:\n\n```\n    $ uniquid login --credentials-file <credentials file path>\n```\n\n### Login without a credentials file\n\nFor the first `login`, the user must specify the organization, their username\nand the *Access Key* which they were assigned.\n\n```\n    $ uniquid login <organization> --user <username> --access-key 'abcd5678'\n```\n\nThe organization name must always be specified for the initial login. After the\ninitial `login`, the user does not need to specify the organisation unless they\nwant to `login` for a different organization.  They need only specify their\nusername and the Access key.\n\n```\n    $ uniquid login --user <username> --access-key 'abcd5678'\n```\n\nIf the user prefers not to enter their username and *Access Key* every time they\nuse the `login` command, they can use environment variables to hold the values\nof the username and *Access Key*.\n\nIn the *Bash* shell, the environment variables can be set using the following\ncommands:\n\n```\n    $ export UNIQUID_USER=<username>\n    $ export UNIQUID_ACCESS_KEY=<access key>\n```\n\n### Login status and logout\n\nAt any point, the user can query the status of the tool's connection to the\nUniquID servers. In order to query their login status, the user can use the\ncommand:\n\n```\n    $ uniquid status\n```\n\nWhen the user is finished interacting with the UniquID system, they should then\nuse the `logout` command to close the open session.\n\n```\n    $ uniquid logout\n```\n\n## Viewing Devices\n\nA list of connected devices can be viewed using the command:\n\n```\n    $ uniquid list-devices\n```\n\nThis command, by default, outputs the device list in text format.  If you would\nprefer to view the device list in JSON format:\n\n```\n    $ uniquid list-devices --output json\n```\n\nThe entries in the list of devices can be sorted by the values of one of\nthe fields of the device information. The device list is sorted using the command:\n\n```\n    $ uniquid list-devices --sort <key name>\n    $ uniquid list-devices --sort-desc <key name>\n```\n\nDetailed information on a specific device can be retrieved, using the device's\npublic key XPUB as an identifier.\n\n```\n    $ uniquid show-device <device xpub>\n    $ uniquid show-device --output json <device xpub>\n```\n\nAn example of a command to view detailed information about a single IoT\ndevice:\n\n```\n    $ uniquid show-device tpubDGDkliuherf34hSGSDG57652DSFDSFDksdfkjsdf434fgD\n```\n\n## Contracts\n\nAccess contracts which permit interactions between devices can be created,\nviewed and revoked using the client tool.\n\n```\n    $ uniquid list-contracts\n    $ uniquid list-contracts --output json\n```\n\nMore detailed information on the state of a contract can also be retrieved,\nusing the contract's transaction identifier to identify the contract.\n\n```\n    $ uniquid show-contract <transaction id>\n    $ uniquid show-contract --output json <transaction id>\n```\n\nAn example of a command to view information about a single UniquID Access\nContract:\n\n```\n    $ uniquid show-contract ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\n```\n\nNew contracts can be specified in JSON format and created by the tool. The\nJSON contract specification can either be loaded from a file or passed directly\non the command line.\n\n```\n    $ uniquid create-contracts --input-json-file <json file name>\n    $ uniquid create-contracts --input-json <json contract specification>\n```\n\nThe format of the JSON file to create a new contract is:\n\n```\n[\n    {\n        \"provider\": \"xpub_of_provider_device\",\n        \"user\": \"xpub_of_user_device\",\n        \"functions\": [40, 41]\n    }\n]\n```\n\nThe identifier used to identify the devices, between which the contract is created,\nis the Public Key XPUB of the devices.  The functions field is used to identify\nthe IDs of the functionality which is enabled by the contract.\n\nAn example of the JSON file to request the creation of two new contracts:\n\n```\n[\n    {\n        \"provider\": \"tpubDGDkliuherf34hSGSDG57652DSFDSFDksdfkjsdf434fgD\",\n        \"user\": \"tpubDAquqJlksdf342GFRG8p98sdfhjhk4FDFD434rsdfDSFan\",\n        \"functions\": [40, 41]\n    },\n    {\n        \"provider\": \"tpubGFSDF8485FDSSDSDF345345HGDDFHkdsfk49ihkfgDEODs\",\n        \"user\": \"tpubDAquqJlksdf342GFRG8p98sdfhjhk4FDFD434rsdfDVZRN\",\n        \"functions\": [39, 42]\n    }\n]\n```\n\nExisting contracts can be revoked by specifying the transaction identifiers\nof the contracts in one of three ways:\n* passing transaction identifiers as arguments.\n* passing a JSON list of identifiers on the command line.\n* passing the path of a file containing a list of identifiers in JSON format.\n\n```\n    $ uniquid delete-contracts <transaction id> <transaction id>\n    $ uniquid delete-contracts --input-json <json list of ids>\n    $ uniquid delete-contracts --input-json-file <json file name>\n```\n\nAn example of the JSON file used to define the transaction IDs of several\ncontracts which should be deleted.\n\n```\n[\n    \"ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\",\n    \"eb99d374aa8f620878d86e987ed1943329280668c60ec0d87de3e7182a87a659\"\n]\n```\n\nAn example of a command to delete a UniquID contract between two IoT devices.\nThe transaction Ids can be passed as arguments on the command line.\n\n```\n    $ uniquid delete-contracts ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\n```\n\n## Log File\n\nAll commands append their output to a log file in the user's current working\ndirectory.  Each day a new log file is created which includes the current\ndate in the filename.  The prefix of the log file's name is `uniquid_cli_`.\n\n## Realtime Log\n\nThe `log` command allows you to view the actions within the system in real-time.\nThe command displays information on when blocks are mined, when devices are\nimprinted and orchestrated and when contracts are created or revoked.  Use the\n[Control + C] key combination to exit the `log` command.\n\n```\n    $ uniquid log\n```\n\n## Generate a Device Configuration File\n\nIoT devices which are integrated with the UniquID libraries require some\nconfiguration information so that they can connect to the UniquID infrastructure.\nThis configuration information can be generated and saved in a device\nconfiguration file by the UniquID CLI.\nWhen no third-party IoT hub integration is required i.e. no AWS IoT integration,\nthen the `deploy` command provides the `basic` option to produce a minimal\ndevice configuration file.\n\n```\n    $ uniquid deploy basic\n```\n\nThis will create a file called `device_cfg.json` which contains the necessary\nconfiguration information.\n\n## Integration with AWS IoT\n\nThe UniquID system allows you to integrate your IoT devices into both the\nUniquID and Amazon AWS IoT systems.  UniquID contracts can then be used\nto securely enable and disable interactions between IoT devices and the\nAWS IoT Hub.\nThe user is guided through this integration process by the `deploy` command.\nBefore starting with the AWS integration, the user should verify that they are\nregistered with AWS and that they can connect to AWS using Amazon's AWS CLI\ntool (awscli).\n\nThe command to start the deployment of the UniquID Agent to the user's\nAmazon AWS account is:\n\n```\n    $ uniquid deploy aws\n```\n\nEach integration, which is performed, creates new resources in the user's\nAWS account.  Each of these resources is identified by a unique name which\nincludes a timestamp.  The timestamp value is printed to the console\nat the end of the `deploy` command and it is also added to the\nlog file.  This timestamp is useful later if the user would like to identify\nand remove or update any of the resources.\n\nIf the user would ever like to remove the components which were created in\nAWS by the `deploy` command, they can use the `undeploy` command.\n\n```\n    $ uniquid undeploy aws <timestamp values>\n```\n\nThe `undeploy` command accepts a space-separated list of timestamp values, each\nof which identifies the resources created by a previous execution of the\n`deploy` command.\n\n\n## Getting Help\n\nCome over and join in the UniquID community at [Gitter](https://gitter.im/uniquid).\n\n\n## Contact UniquID\n\nIf you would like to learn more about our innovative technology, please contact\nus at [hello@uniquid.com](mailto:hello@uniquid.com?Subject=PyPi%20Query).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://uniquid.com/", "keywords": "", "license": "", "maintainer": "Michael McCarthy", "maintainer_email": "mmccarthy@uniquid.com", "name": "uniquid", "package_url": "https://pypi.org/project/uniquid/", "platform": "", "project_url": "https://pypi.org/project/uniquid/", "project_urls": {"Homepage": "http://uniquid.com/"}, "release_url": "https://pypi.org/project/uniquid/0.5.6/", "requires_dist": null, "requires_python": ">=3.6", "summary": "UniquID command line administration tool.", "version": "0.5.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>UniquID User Guide</h1>\n<p>The command line interface for UniquID system administration.  The UniquID IAM\n(Identity and Access Management) system leverages blockchain technology so that\nyour organization can efficiently control access to large pools of IoT devices.</p>\n<blockquote>\n<p><strong>Warning</strong></p>\n<p>The UniquID command line interface is currently in development and undergoing\ntest.  Please do not use the tool in production as information may be lost.\nContact UniquID about organizing an evaluation or demonstration of this\ninnovative technology.</p>\n</blockquote>\n<blockquote>\n<p><strong>Warning</strong></p>\n<p>The UniquID command line interface is currently untested on <em><strong>Windows</strong></em>\nplatforms.  Some functions, such as <code>deploy</code> are not currently\nsupported on <em>Windows</em>.</p>\n</blockquote>\n<p>The package currently supports Python 3.6 and later.  Please upgrade to the\nlatest version of Python if you are running an older version.</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#installation-instructions\" rel=\"nofollow\">Installation Instructions</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#viewing-devices\" rel=\"nofollow\">Viewing Devices</a></li>\n<li><a href=\"#contracts\" rel=\"nofollow\">Contracts</a></li>\n<li><a href=\"#sharing-access-to-devices\" rel=\"nofollow\">Sharing Access to Devices</a></li>\n<li><a href=\"#getting-help\" rel=\"nofollow\">Getting Help</a></li>\n<li><a href=\"#contact-uniquid\" rel=\"nofollow\">Contact UniquID</a></li>\n</ul>\n<h2>Installation Instructions</h2>\n<p>Verify that <em>Python 3</em> is installed on your system. You should have at least\n<em><strong>version 3.6</strong></em> of Python installed.  You can query the version installed using\nthe command:</p>\n<pre><code>    $ python --version\n</code></pre>\n<p>If you do not have Python installed, please follow the instructions for your\noperating system:</p>\n<table>\n<thead>\n<tr>\n<th>Operating System</th>\n<th>Download Instructions</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows</td>\n<td><a href=\"https://docs.python.org/3/using/windows.html\" rel=\"nofollow\">Python3 for Windows</a></td>\n</tr>\n<tr>\n<td>MacOS</td>\n<td><a href=\"https://docs.python.org/3/using/mac.html\" rel=\"nofollow\">Python3 for Mac</a></td>\n</tr>\n<tr>\n<td>Linux</td>\n<td><a href=\"https://docs.python.org/3/using/unix.html\" rel=\"nofollow\">Python3 for Unix</a></td>\n</tr></tbody></table>\n<p>Once <em>Python</em> is installed, you can use the <code>pip3</code> or <code>pip</code> tool to install the\nlatest version of the CLI client.</p>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>The <code>pip</code> packaging tool for <em>Python3</em> may be called <code>pip3</code> on your\nsystem, depending on your operating system.  Please check your system\ninstructions on how to execute the <code>pip</code> tool for <em>Python 3</em>.</p>\n</blockquote>\n<pre><code>    $ sudo pip3 install uniquid\n</code></pre>\n<p>or</p>\n<pre><code>    $ sudo pip install uniquid\n</code></pre>\n<p>If correctly installed with no errors, the CLI client application can\nbe executed from the command line.</p>\n<pre><code>    $ uniquid --version\n</code></pre>\n<h2>Getting Started</h2>\n<p>The user can access a list of the available commands, using the <code>help</code>\noption.</p>\n<pre><code>    $ uniquid --help\n</code></pre>\n<p>Each command also provides more detailed help information. For example:</p>\n<pre><code>    $ uniquid login --help\n</code></pre>\n<p>Some commands have a shorter alias available.  You can view the list of\navailable command aliases using the command:</p>\n<pre><code>    $ uniquid list-aliases\n</code></pre>\n<p>In order to login to the UniquID system, the user must provide:</p>\n<ul>\n<li>a credentials file which was downloaded during registration at <a href=\"http://uniquid.com\" rel=\"nofollow\">http://uniquid.com</a>.</li>\n</ul>\n<p>or:</p>\n<ul>\n<li>their registered organization name</li>\n<li>their UniquID username</li>\n<li>the secret <em>Access Key</em> which was provided to them during registration</li>\n</ul>\n<p>The <code>login</code> command will keep an authenticated session open until the user uses\nthe <code>logout</code> command to close the session or their session expires.  For security\nreasons, the session may expire after a period of time and the user will be\nrequested to use the <code>login</code> command again.</p>\n<h3>Login using the credentials file</h3>\n<p>During account registration, the user is given the option to download a\ncredentials file to their system. This file contains information such as\ntheir unique <em>Access Key</em> which enables them to connect to the UniquID\nsystem.  This credentials file should be stored securely on their system with\nread and write privileges only granted to the user.</p>\n<p>The user should save the credentials file to the following location:</p>\n<table>\n<thead>\n<tr>\n<th>Operating System</th>\n<th>File Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows</td>\n<td><code>%USERPROFILE%\\.uniquid\\credentials.json</code></td>\n</tr>\n<tr>\n<td>MacOs</td>\n<td><code>~/.uniquid/credentials.json</code></td>\n</tr>\n<tr>\n<td>Linux</td>\n<td><code>~/.uniquid/credentials.json</code></td>\n</tr></tbody></table>\n<p>Once the credentials file is saved to the correct location, the <code>login</code> command\nwill automatically detect the user's credentials.  To <code>login</code>, the user should\nuse the command:</p>\n<pre><code>    $ uniquid login\n</code></pre>\n<p>If the user prefers not to save the credentials file to the default location\nas described above, they can pass the location of the credentials file as\nan option on the command line.  Therefore, the command to <code>login</code> is:</p>\n<pre><code>    $ uniquid login --credentials-file &lt;credentials file path&gt;\n</code></pre>\n<h3>Login without a credentials file</h3>\n<p>For the first <code>login</code>, the user must specify the organization, their username\nand the <em>Access Key</em> which they were assigned.</p>\n<pre><code>    $ uniquid login &lt;organization&gt; --user &lt;username&gt; --access-key 'abcd5678'\n</code></pre>\n<p>The organization name must always be specified for the initial login. After the\ninitial <code>login</code>, the user does not need to specify the organisation unless they\nwant to <code>login</code> for a different organization.  They need only specify their\nusername and the Access key.</p>\n<pre><code>    $ uniquid login --user &lt;username&gt; --access-key 'abcd5678'\n</code></pre>\n<p>If the user prefers not to enter their username and <em>Access Key</em> every time they\nuse the <code>login</code> command, they can use environment variables to hold the values\nof the username and <em>Access Key</em>.</p>\n<p>In the <em>Bash</em> shell, the environment variables can be set using the following\ncommands:</p>\n<pre><code>    $ export UNIQUID_USER=&lt;username&gt;\n    $ export UNIQUID_ACCESS_KEY=&lt;access key&gt;\n</code></pre>\n<h3>Login status and logout</h3>\n<p>At any point, the user can query the status of the tool's connection to the\nUniquID servers. In order to query their login status, the user can use the\ncommand:</p>\n<pre><code>    $ uniquid status\n</code></pre>\n<p>When the user is finished interacting with the UniquID system, they should then\nuse the <code>logout</code> command to close the open session.</p>\n<pre><code>    $ uniquid logout\n</code></pre>\n<h2>Viewing Devices</h2>\n<p>A list of connected devices can be viewed using the command:</p>\n<pre><code>    $ uniquid list-devices\n</code></pre>\n<p>This command, by default, outputs the device list in text format.  If you would\nprefer to view the device list in JSON format:</p>\n<pre><code>    $ uniquid list-devices --output json\n</code></pre>\n<p>The entries in the list of devices can be sorted by the values of one of\nthe fields of the device information. The device list is sorted using the command:</p>\n<pre><code>    $ uniquid list-devices --sort &lt;key name&gt;\n    $ uniquid list-devices --sort-desc &lt;key name&gt;\n</code></pre>\n<p>Detailed information on a specific device can be retrieved, using the device's\npublic key XPUB as an identifier.</p>\n<pre><code>    $ uniquid show-device &lt;device xpub&gt;\n    $ uniquid show-device --output json &lt;device xpub&gt;\n</code></pre>\n<p>An example of a command to view detailed information about a single IoT\ndevice:</p>\n<pre><code>    $ uniquid show-device tpubDGDkliuherf34hSGSDG57652DSFDSFDksdfkjsdf434fgD\n</code></pre>\n<h2>Contracts</h2>\n<p>Access contracts which permit interactions between devices can be created,\nviewed and revoked using the client tool.</p>\n<pre><code>    $ uniquid list-contracts\n    $ uniquid list-contracts --output json\n</code></pre>\n<p>More detailed information on the state of a contract can also be retrieved,\nusing the contract's transaction identifier to identify the contract.</p>\n<pre><code>    $ uniquid show-contract &lt;transaction id&gt;\n    $ uniquid show-contract --output json &lt;transaction id&gt;\n</code></pre>\n<p>An example of a command to view information about a single UniquID Access\nContract:</p>\n<pre><code>    $ uniquid show-contract ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\n</code></pre>\n<p>New contracts can be specified in JSON format and created by the tool. The\nJSON contract specification can either be loaded from a file or passed directly\non the command line.</p>\n<pre><code>    $ uniquid create-contracts --input-json-file &lt;json file name&gt;\n    $ uniquid create-contracts --input-json &lt;json contract specification&gt;\n</code></pre>\n<p>The format of the JSON file to create a new contract is:</p>\n<pre><code>[\n    {\n        \"provider\": \"xpub_of_provider_device\",\n        \"user\": \"xpub_of_user_device\",\n        \"functions\": [40, 41]\n    }\n]\n</code></pre>\n<p>The identifier used to identify the devices, between which the contract is created,\nis the Public Key XPUB of the devices.  The functions field is used to identify\nthe IDs of the functionality which is enabled by the contract.</p>\n<p>An example of the JSON file to request the creation of two new contracts:</p>\n<pre><code>[\n    {\n        \"provider\": \"tpubDGDkliuherf34hSGSDG57652DSFDSFDksdfkjsdf434fgD\",\n        \"user\": \"tpubDAquqJlksdf342GFRG8p98sdfhjhk4FDFD434rsdfDSFan\",\n        \"functions\": [40, 41]\n    },\n    {\n        \"provider\": \"tpubGFSDF8485FDSSDSDF345345HGDDFHkdsfk49ihkfgDEODs\",\n        \"user\": \"tpubDAquqJlksdf342GFRG8p98sdfhjhk4FDFD434rsdfDVZRN\",\n        \"functions\": [39, 42]\n    }\n]\n</code></pre>\n<p>Existing contracts can be revoked by specifying the transaction identifiers\nof the contracts in one of three ways:</p>\n<ul>\n<li>passing transaction identifiers as arguments.</li>\n<li>passing a JSON list of identifiers on the command line.</li>\n<li>passing the path of a file containing a list of identifiers in JSON format.</li>\n</ul>\n<pre><code>    $ uniquid delete-contracts &lt;transaction id&gt; &lt;transaction id&gt;\n    $ uniquid delete-contracts --input-json &lt;json list of ids&gt;\n    $ uniquid delete-contracts --input-json-file &lt;json file name&gt;\n</code></pre>\n<p>An example of the JSON file used to define the transaction IDs of several\ncontracts which should be deleted.</p>\n<pre><code>[\n    \"ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\",\n    \"eb99d374aa8f620878d86e987ed1943329280668c60ec0d87de3e7182a87a659\"\n]\n</code></pre>\n<p>An example of a command to delete a UniquID contract between two IoT devices.\nThe transaction Ids can be passed as arguments on the command line.</p>\n<pre><code>    $ uniquid delete-contracts ebaef8fdf1645032010e801fad010338d2048fa3e67154d660545b4eb9b01c58\n</code></pre>\n<h2>Log File</h2>\n<p>All commands append their output to a log file in the user's current working\ndirectory.  Each day a new log file is created which includes the current\ndate in the filename.  The prefix of the log file's name is <code>uniquid_cli_</code>.</p>\n<h2>Realtime Log</h2>\n<p>The <code>log</code> command allows you to view the actions within the system in real-time.\nThe command displays information on when blocks are mined, when devices are\nimprinted and orchestrated and when contracts are created or revoked.  Use the\n[Control + C] key combination to exit the <code>log</code> command.</p>\n<pre><code>    $ uniquid log\n</code></pre>\n<h2>Generate a Device Configuration File</h2>\n<p>IoT devices which are integrated with the UniquID libraries require some\nconfiguration information so that they can connect to the UniquID infrastructure.\nThis configuration information can be generated and saved in a device\nconfiguration file by the UniquID CLI.\nWhen no third-party IoT hub integration is required i.e. no AWS IoT integration,\nthen the <code>deploy</code> command provides the <code>basic</code> option to produce a minimal\ndevice configuration file.</p>\n<pre><code>    $ uniquid deploy basic\n</code></pre>\n<p>This will create a file called <code>device_cfg.json</code> which contains the necessary\nconfiguration information.</p>\n<h2>Integration with AWS IoT</h2>\n<p>The UniquID system allows you to integrate your IoT devices into both the\nUniquID and Amazon AWS IoT systems.  UniquID contracts can then be used\nto securely enable and disable interactions between IoT devices and the\nAWS IoT Hub.\nThe user is guided through this integration process by the <code>deploy</code> command.\nBefore starting with the AWS integration, the user should verify that they are\nregistered with AWS and that they can connect to AWS using Amazon's AWS CLI\ntool (awscli).</p>\n<p>The command to start the deployment of the UniquID Agent to the user's\nAmazon AWS account is:</p>\n<pre><code>    $ uniquid deploy aws\n</code></pre>\n<p>Each integration, which is performed, creates new resources in the user's\nAWS account.  Each of these resources is identified by a unique name which\nincludes a timestamp.  The timestamp value is printed to the console\nat the end of the <code>deploy</code> command and it is also added to the\nlog file.  This timestamp is useful later if the user would like to identify\nand remove or update any of the resources.</p>\n<p>If the user would ever like to remove the components which were created in\nAWS by the <code>deploy</code> command, they can use the <code>undeploy</code> command.</p>\n<pre><code>    $ uniquid undeploy aws &lt;timestamp values&gt;\n</code></pre>\n<p>The <code>undeploy</code> command accepts a space-separated list of timestamp values, each\nof which identifies the resources created by a previous execution of the\n<code>deploy</code> command.</p>\n<h2>Getting Help</h2>\n<p>Come over and join in the UniquID community at <a href=\"https://gitter.im/uniquid\" rel=\"nofollow\">Gitter</a>.</p>\n<h2>Contact UniquID</h2>\n<p>If you would like to learn more about our innovative technology, please contact\nus at <a href=\"mailto:hello@uniquid.com?Subject=PyPi%20Query\">hello@uniquid.com</a>.</p>\n\n          </div>"}, "last_serial": 6675236, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6b2f8ac57125dd10abcd5bb85251b035", "sha256": "e369354ca2867a22e11f7c2dcfa2a8d2a8557c8af44c38691c3279287cb0e235"}, "downloads": -1, "filename": "uniquid-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6b2f8ac57125dd10abcd5bb85251b035", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 20157, "upload_time": "2018-09-03T10:15:05", "upload_time_iso_8601": "2018-09-03T10:15:05.903314Z", "url": "https://files.pythonhosted.org/packages/b7/bb/476c636a6051e407d50232757da6ea9b79677f4c8a6134bf3dc6a2445760/uniquid-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "744628112b483cfcc152624e4644abbb", "sha256": "39fb599cdcacb9af385112614342e9db3edae769ae0beed6ff459260bd4d8199"}, "downloads": -1, "filename": "uniquid-0.1.1.tar.gz", "has_sig": false, "md5_digest": "744628112b483cfcc152624e4644abbb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 20782, "upload_time": "2018-09-03T10:55:32", "upload_time_iso_8601": "2018-09-03T10:55:32.090959Z", "url": "https://files.pythonhosted.org/packages/b9/03/f13c1691b2e257ebd728f325ee283f2b137e7722f78d9ccccc0abc86c4e6/uniquid-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "57c118c35bec732d0bfe0339d7e3a100", "sha256": "bbe55a3429e25c619edfadcafd1824fc30ec9c2c812bf097475b0212cbd0e193"}, "downloads": -1, "filename": "uniquid-0.2.0.tar.gz", "has_sig": false, "md5_digest": "57c118c35bec732d0bfe0339d7e3a100", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24204, "upload_time": "2018-09-13T10:55:58", "upload_time_iso_8601": "2018-09-13T10:55:58.439749Z", "url": "https://files.pythonhosted.org/packages/f3/3e/a7c2672e943d3ac45d535a499a33b40150bf4f0db81756ab6b5ad54872cc/uniquid-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "83d64122556fb7ff4995c78d26092fad", "sha256": "ef70a4ebd6b7ca966aba1ecf2aa9b2dfacda7f9e98f0b0a6ea14aa05e10d88ce"}, "downloads": -1, "filename": "uniquid-0.3.0.tar.gz", "has_sig": false, "md5_digest": "83d64122556fb7ff4995c78d26092fad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24137, "upload_time": "2018-09-20T11:11:19", "upload_time_iso_8601": "2018-09-20T11:11:19.642869Z", "url": "https://files.pythonhosted.org/packages/91/6f/57f487ca018edbf41e462d037686fcc12849f0fc9fc0ea9dc05b4afa3e27/uniquid-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4d9c311b84f391be33d4175e69ebffc0", "sha256": "e6c29cce8a3d6222462316d1aaa6161d9c93c9b77fa239e569dbe0790d81df75"}, "downloads": -1, "filename": "uniquid-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4d9c311b84f391be33d4175e69ebffc0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33123, "upload_time": "2018-09-28T13:43:49", "upload_time_iso_8601": "2018-09-28T13:43:49.134744Z", "url": "https://files.pythonhosted.org/packages/ba/5e/9898523b83b386e683c3e8afc2e925ee82c5a75c5c1dbae8063d88ba0aa1/uniquid-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "29dc0e3406867c1fbb2f5e597e86c565", "sha256": "0f1338a87baae3db3ad550c47e02779d5cbc79c84074cf95f51d519526deb214"}, "downloads": -1, "filename": "uniquid-0.4.1.tar.gz", "has_sig": false, "md5_digest": "29dc0e3406867c1fbb2f5e597e86c565", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33393, "upload_time": "2018-10-01T10:58:45", "upload_time_iso_8601": "2018-10-01T10:58:45.794032Z", "url": "https://files.pythonhosted.org/packages/3e/08/98757f7dc04626c2ea5f1c8228f7ca3872168440e12b1ab4cb6de2b9d2a5/uniquid-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "cc57a664a10d060a310d18515911ebfe", "sha256": "045404737e667d92c96d6d5425da8f945dd76feac6c6baf3149d85bc5a073dc5"}, "downloads": -1, "filename": "uniquid-0.4.2.tar.gz", "has_sig": false, "md5_digest": "cc57a664a10d060a310d18515911ebfe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33394, "upload_time": "2018-10-01T12:26:17", "upload_time_iso_8601": "2018-10-01T12:26:17.800333Z", "url": "https://files.pythonhosted.org/packages/80/68/8380145f24e8b5c0d3a6a737c7e396cdd6c7c73397a38bd407a8cfe4e54c/uniquid-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "3c8d2666e571e64209302cae925d01b1", "sha256": "581449e9ea2bb0fd8217d5b19723de11a864ab665a7e529a1054701e317a223d"}, "downloads": -1, "filename": "uniquid-0.4.3.tar.gz", "has_sig": false, "md5_digest": "3c8d2666e571e64209302cae925d01b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34129, "upload_time": "2018-10-03T10:56:59", "upload_time_iso_8601": "2018-10-03T10:56:59.519151Z", "url": "https://files.pythonhosted.org/packages/6e/4c/eeb4fe910d1b43d6bdbeebed9290ab8cca617eff579795e7e7be32445da6/uniquid-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "e4ac55ef5dc7346332954e6400f09820", "sha256": "236709c20845f45323b5c73308134c307a20ca5f579dd9e5f19aefca9b17d38a"}, "downloads": -1, "filename": "uniquid-0.4.4.tar.gz", "has_sig": false, "md5_digest": "e4ac55ef5dc7346332954e6400f09820", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36026, "upload_time": "2018-10-05T08:09:29", "upload_time_iso_8601": "2018-10-05T08:09:29.023967Z", "url": "https://files.pythonhosted.org/packages/79/c4/4e072bb9f5bbe0eaeb408beed775c0e1f257a2d306080259c3150ab4b441/uniquid-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "9698ce06295ce789cc40d56006f11ee3", "sha256": "8ac99159b628376e7268339f701a920b27b296824cdcef0e657d118e3631eeb7"}, "downloads": -1, "filename": "uniquid-0.4.5.tar.gz", "has_sig": false, "md5_digest": "9698ce06295ce789cc40d56006f11ee3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36846, "upload_time": "2018-10-09T15:34:16", "upload_time_iso_8601": "2018-10-09T15:34:16.422842Z", "url": "https://files.pythonhosted.org/packages/ea/6c/66d1c0f11db050372f65efa6e6bcf80573d08bc505030f62609d74127812/uniquid-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "ced8fdb306b9f1af4f255548532f5246", "sha256": "5eec2f821ff8089998755138008801ac3fef1e3e8e9c6a7898266c3b7772d7fe"}, "downloads": -1, "filename": "uniquid-0.4.6.tar.gz", "has_sig": false, "md5_digest": "ced8fdb306b9f1af4f255548532f5246", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36832, "upload_time": "2018-10-18T09:56:47", "upload_time_iso_8601": "2018-10-18T09:56:47.053042Z", "url": "https://files.pythonhosted.org/packages/b5/85/19d9ed650aeff6e81098255b2b080744d2a26e51c8388269378cf6565d08/uniquid-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "33db47ec08d41b7956aa9bfe65df9312", "sha256": "ea694566d507bff839f73ea24935bfeabab00ffebabb04631f7caf6019edad05"}, "downloads": -1, "filename": "uniquid-0.4.7.tar.gz", "has_sig": false, "md5_digest": "33db47ec08d41b7956aa9bfe65df9312", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36827, "upload_time": "2018-10-31T16:40:47", "upload_time_iso_8601": "2018-10-31T16:40:47.154820Z", "url": "https://files.pythonhosted.org/packages/9c/d5/fc821dbd5a41dca91dacacac62aba8e9b1b03277844627978821fe9a1ada/uniquid-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "c8f6f9d652a4be0259b1c21e2ad025a6", "sha256": "ec1f4cd40853ddc415ac7c343b247f3c6b41b0b5b20ece4f8a98514754e3f66d"}, "downloads": -1, "filename": "uniquid-0.4.8.tar.gz", "has_sig": false, "md5_digest": "c8f6f9d652a4be0259b1c21e2ad025a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37132, "upload_time": "2018-11-26T12:35:52", "upload_time_iso_8601": "2018-11-26T12:35:52.842151Z", "url": "https://files.pythonhosted.org/packages/06/1f/72c7b6ad2ec6c2fe3aa94f2dab6760582e56b3520f15a183bc679a9a23cd/uniquid-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "69c28511d6d93c8fd5ca8e09d0ba899f", "sha256": "1ff8deefc1741499042a6213c81850bb841618fcdd734386644729a537d896a0"}, "downloads": -1, "filename": "uniquid-0.4.9.tar.gz", "has_sig": false, "md5_digest": "69c28511d6d93c8fd5ca8e09d0ba899f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37137, "upload_time": "2018-11-26T15:48:25", "upload_time_iso_8601": "2018-11-26T15:48:25.096598Z", "url": "https://files.pythonhosted.org/packages/f5/ad/52385d65b95096c90b0dfe52a968f281ba14d431dc5b4724dc813a3a8c80/uniquid-0.4.9.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "cd3c62ab87a6dab693f487beadb50080", "sha256": "a7deea299235e5b4d3a1d718ed89a2c0b790273029258b8f1b5c3fb04864772b"}, "downloads": -1, "filename": "uniquid-0.5.0.tar.gz", "has_sig": false, "md5_digest": "cd3c62ab87a6dab693f487beadb50080", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42280, "upload_time": "2018-12-04T12:43:57", "upload_time_iso_8601": "2018-12-04T12:43:57.201464Z", "url": "https://files.pythonhosted.org/packages/d8/d8/7270fc2d932e61f0cffffac20ead5a3c1ba98963acbeb29dd9434cd75b9b/uniquid-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "dad5eefd2846931ba54cc218f4a5f951", "sha256": "80178310cb6e56b795a685e65042ed178972d926f10500d23e0214e82f6d01c0"}, "downloads": -1, "filename": "uniquid-0.5.1.tar.gz", "has_sig": false, "md5_digest": "dad5eefd2846931ba54cc218f4a5f951", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42311, "upload_time": "2018-12-14T10:26:31", "upload_time_iso_8601": "2018-12-14T10:26:31.924163Z", "url": "https://files.pythonhosted.org/packages/41/91/1a966f6914727a69e8a9ad3b7d84649c7f4d02bb7b02c19b495a1870264d/uniquid-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "4a2accf89dbafb5f2968c879bcb34093", "sha256": "e96524c352cd389942bbdebae70fcf70a65d0abffebbf075079b328b687bc60f"}, "downloads": -1, "filename": "uniquid-0.5.2.tar.gz", "has_sig": false, "md5_digest": "4a2accf89dbafb5f2968c879bcb34093", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45658, "upload_time": "2019-02-01T12:44:40", "upload_time_iso_8601": "2019-02-01T12:44:40.268724Z", "url": "https://files.pythonhosted.org/packages/52/79/f281eaa0d73cb4923f76dfdfc4095593c61e42a76140e8167e48ee25f52a/uniquid-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "23204fa053b6cb96f29ef3131a8f5c7c", "sha256": "820a439c0e5791c1c1406a9bd7329143ae0720094bec556dc2a9fb24483912dd"}, "downloads": -1, "filename": "uniquid-0.5.3.tar.gz", "has_sig": false, "md5_digest": "23204fa053b6cb96f29ef3131a8f5c7c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47119, "upload_time": "2019-02-19T11:09:12", "upload_time_iso_8601": "2019-02-19T11:09:12.483780Z", "url": "https://files.pythonhosted.org/packages/42/a6/ee389b390fde577ac868759396bb242c7d55629048f0a3215f3c64569b6c/uniquid-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "57edce1fbdc31a850639d19e387884af", "sha256": "6bac1a07ac50ed4fc0cf6b32824aeb8125ad878db93f6ba7b30822ddb9cbd175"}, "downloads": -1, "filename": "uniquid-0.5.4.tar.gz", "has_sig": false, "md5_digest": "57edce1fbdc31a850639d19e387884af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48416, "upload_time": "2019-03-13T17:37:14", "upload_time_iso_8601": "2019-03-13T17:37:14.794629Z", "url": "https://files.pythonhosted.org/packages/40/a1/d5df3fbf0fe2379e216716cda5c0b619165175f47fc91a29ea738d075806/uniquid-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "7bf80d4724ffcc896380301a25219b94", "sha256": "58a896287907a7f1017c9a2ca1790c71a3049a27f68afb68ca01993979314aa7"}, "downloads": -1, "filename": "uniquid-0.5.5.tar.gz", "has_sig": false, "md5_digest": "7bf80d4724ffcc896380301a25219b94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51002, "upload_time": "2019-06-25T15:53:01", "upload_time_iso_8601": "2019-06-25T15:53:01.132754Z", "url": "https://files.pythonhosted.org/packages/db/1b/b4af65cd012e464c121da71f38e35b3427457af2748c09f084cde30b4eb6/uniquid-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "eb23209791e3bd5e0cee6801e144028d", "sha256": "77dacc87a0fbad74a5186a56cc201e7b28accb66651a4aa1f1bf7b96a7fd8d31"}, "downloads": -1, "filename": "uniquid-0.5.6.tar.gz", "has_sig": false, "md5_digest": "eb23209791e3bd5e0cee6801e144028d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45594, "upload_time": "2020-02-21T13:17:45", "upload_time_iso_8601": "2020-02-21T13:17:45.105861Z", "url": "https://files.pythonhosted.org/packages/68/57/6261011e47bd55bd838bb511af83b6568305914a15fe2549887da24737ef/uniquid-0.5.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb23209791e3bd5e0cee6801e144028d", "sha256": "77dacc87a0fbad74a5186a56cc201e7b28accb66651a4aa1f1bf7b96a7fd8d31"}, "downloads": -1, "filename": "uniquid-0.5.6.tar.gz", "has_sig": false, "md5_digest": "eb23209791e3bd5e0cee6801e144028d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45594, "upload_time": "2020-02-21T13:17:45", "upload_time_iso_8601": "2020-02-21T13:17:45.105861Z", "url": "https://files.pythonhosted.org/packages/68/57/6261011e47bd55bd838bb511af83b6568305914a15fe2549887da24737ef/uniquid-0.5.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:25 2020"}