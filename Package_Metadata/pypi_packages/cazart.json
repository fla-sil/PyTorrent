{"info": {"author": "William Woodruff", "author_email": "william@yossarian.net", "bugtrack_url": null, "classifiers": [], "description": "cazart\n======\n\n[![Build Status](https://img.shields.io/github/workflow/status/woodruffw/cazart/CI/master)](https://github.com/woodruffw/cazart/actions?query=workflow%3ACI)\n\n*Flask + schema = cazart!*\n\n**cazart** is a small helper for writing schematized JSON endpoints with Flask. It rolls\n[schema](https://github.com/keleshev/schema) into Flask's `route` decorator, allowing\nfor one-shot route and schema specification.\n\n## Installation\n\n**cazart** requires Python 3.6 or newer.\n\n```bash\npip3 install cazart\n```\n\n## Usage\n\nTo use **cazart**, just swap your `Flask` instance out for a `Cazart` one:\n\n```python\nfrom cazart import Cazart\n\napp = Cazart(__name__)\n```\n\nYou can access all of Flask's baseline functionality (including non-validated routes)\nvia `app.flask`.\n\nThen, use `app.route` to specify a combination route and schema:\n\n```python\nfrom cazart import Cazart\nfrom schema import Schema, Or\n\napp = Cazart(__name__)\n\n\n@app.route(\"/cazart\", schema=Schema({\"name\": Or(\"alice\", \"bob\", \"mary\")}))\ndef cazart(res):\n    print(f\"my verified payload is {res}!\")\n    return (\"ok\", 200)\n```\n\nSee the [examples](./example) for full usage examples, including custom error handling\nand dispatching to different schemas on a route based on HTTP method.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/woodruffw/cazart", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cazart", "package_url": "https://pypi.org/project/cazart/", "platform": "any", "project_url": "https://pypi.org/project/cazart/", "project_urls": {"Homepage": "https://github.com/woodruffw/cazart"}, "release_url": "https://pypi.org/project/cazart/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Flask + Schema = Cazart!", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cazart</h1>\n<p><a href=\"https://github.com/woodruffw/cazart/actions?query=workflow%3ACI\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3588f16fcfdca0def705ad4ee2cbc87ce386033e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f776f6f6472756666772f63617a6172742f43492f6d6173746572\"></a></p>\n<p><em>Flask + schema = cazart!</em></p>\n<p><strong>cazart</strong> is a small helper for writing schematized JSON endpoints with Flask. It rolls\n<a href=\"https://github.com/keleshev/schema\" rel=\"nofollow\">schema</a> into Flask's <code>route</code> decorator, allowing\nfor one-shot route and schema specification.</p>\n<h2>Installation</h2>\n<p><strong>cazart</strong> requires Python 3.6 or newer.</p>\n<pre>pip3 install cazart\n</pre>\n<h2>Usage</h2>\n<p>To use <strong>cazart</strong>, just swap your <code>Flask</code> instance out for a <code>Cazart</code> one:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cazart</span> <span class=\"kn\">import</span> <span class=\"n\">Cazart</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Cazart</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n</pre>\n<p>You can access all of Flask's baseline functionality (including non-validated routes)\nvia <code>app.flask</code>.</p>\n<p>Then, use <code>app.route</code> to specify a combination route and schema:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cazart</span> <span class=\"kn\">import</span> <span class=\"n\">Cazart</span>\n<span class=\"kn\">from</span> <span class=\"nn\">schema</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span><span class=\"p\">,</span> <span class=\"n\">Or</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Cazart</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/cazart\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">Schema</span><span class=\"p\">({</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"n\">Or</span><span class=\"p\">(</span><span class=\"s2\">\"alice\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mary\"</span><span class=\"p\">)}))</span>\n<span class=\"k\">def</span> <span class=\"nf\">cazart</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"my verified payload is </span><span class=\"si\">{</span><span class=\"n\">res</span><span class=\"si\">}</span><span class=\"s2\">!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">\"ok\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n</pre>\n<p>See the <a href=\"./example\" rel=\"nofollow\">examples</a> for full usage examples, including custom error handling\nand dispatching to different schemas on a route based on HTTP method.</p>\n\n          </div>"}, "last_serial": 6594866, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fa3d1bc4544edfa05de6ad8a53218dab", "sha256": "668144fda08b82f8978361c3c92e74af820f5ab25e719ecca7346105bc0173d4"}, "downloads": -1, "filename": "cazart-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fa3d1bc4544edfa05de6ad8a53218dab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3258, "upload_time": "2019-08-18T12:43:53", "upload_time_iso_8601": "2019-08-18T12:43:53.435544Z", "url": "https://files.pythonhosted.org/packages/67/a7/8630593541c548a1ba26cc07e377f160b6b7b7679142feae313e3ea8f787/cazart-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2ab24cce0eb70a5e19fec13ec1d1ddbf", "sha256": "c69ca931f101e68fc35379717289d24a166b57acfbbc421f5c73d476c5062633"}, "downloads": -1, "filename": "cazart-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2ab24cce0eb70a5e19fec13ec1d1ddbf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3263, "upload_time": "2019-08-18T12:47:59", "upload_time_iso_8601": "2019-08-18T12:47:59.823890Z", "url": "https://files.pythonhosted.org/packages/95/a0/c03baf86b959de6f278fe584870b7fa74330b9da88b1b88f49b538856bd5/cazart-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e81f7705d91ca0d679d5a29b0b42e544", "sha256": "eccba754d3564060500fefab1087fd3cf6c6daebe096ef86cb5829808d6c9be5"}, "downloads": -1, "filename": "cazart-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e81f7705d91ca0d679d5a29b0b42e544", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3309, "upload_time": "2020-02-08T19:00:30", "upload_time_iso_8601": "2020-02-08T19:00:30.622933Z", "url": "https://files.pythonhosted.org/packages/59/55/f57b3e24609bca8e3b699fc864210d1f9231fb88464ec9d8c67fecdfa275/cazart-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e81f7705d91ca0d679d5a29b0b42e544", "sha256": "eccba754d3564060500fefab1087fd3cf6c6daebe096ef86cb5829808d6c9be5"}, "downloads": -1, "filename": "cazart-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e81f7705d91ca0d679d5a29b0b42e544", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3309, "upload_time": "2020-02-08T19:00:30", "upload_time_iso_8601": "2020-02-08T19:00:30.622933Z", "url": "https://files.pythonhosted.org/packages/59/55/f57b3e24609bca8e3b699fc864210d1f9231fb88464ec9d8c67fecdfa275/cazart-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:10 2020"}