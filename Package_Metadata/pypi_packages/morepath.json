{"info": {"author": "Morepath developers", "author_email": "morepath@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "Morepath: Python web microframework with super powers\n=====================================================\n\nMorepath is a Python web framework. An application consists of\n*models*. Each type of model is published on a URL *path*. Content is\nexposed to the web using *views*.\n\nDocumentation_.\n\n.. _Documentation: http://morepath.readthedocs.io\n\nBuild Status\n------------\n\n.. image:: https://travis-ci.org/morepath/morepath.svg?branch=master\n    :target: https://travis-ci.org/morepath/morepath\n\n.. image:: https://coveralls.io/repos/morepath/morepath/badge.svg?branch=master\n    :target: https://coveralls.io/r/morepath/morepath?branch=master\n\nCHANGES\n*******\n\n0.19 (2020-01-30)\n=================\n\n* **Removed**: Removed support for Python 2.\n\n  You have to upgrade to Python 3 if you want to use this version.\n\n* Added support for Python 3.8 and PyPy 3.6.\n\n* Make Python 3.7 the default.\n\n* Update to new signature of reg.arginfo, which returns now a FullArgSpec\n  tuple instead of an ArgSpec tuple.\n\n* Add integration for the Black code formatter.\n\n\n0.18.2 (2019-01-22)\n===================\n\n* Fixes an infinite recursion error during morepath.autoscan.\n\n  The error that occurred when morepath.autoscan was run in an environment where\n  two packages depended on each other, as well as depending on morepath\n  through an intermediary.\n\n  See `#536`_\n\n  .. _#536: https://github.com/morepath/morepath/issues/536\n\n* Added support for Python 3.6 and 3.7 and dropped support for Python 3.3\n\n0.18.1 (2017-06-30)\n===================\n\n* Link generation was unstable when supplied with multiple URL parameters.\n  Sort URL parameters so that link generation is stable. This is convenient\n  in tests.\n\n  This could potentially break tests which weren't stable in the past. Fixing\n  the tests to use the alphabetical sort order should fix the issue.\n\n* The poisoned host header protection is no longer case-sensitive.\n\n* Underscores are now allowed in host headers. Though they are not valid in\n  domain names, they are valid in host names and offer no attack surface.\n\n0.18 (2017-03-17)\n=================\n\n* **New**: The `load`` API, which allows you to define how incoming JSON\n  (through a POST, PUT or PATH request) will be converted to a Python object and\n  how it will be validated. This feature lets you plug in external\n  serialization and validation libraries, such as Marshmallow, Colander,\n  Cerberus, Jsonschema or Voluptuous.\n\n* **Removed**: ``morepath.body_model_predicate`` is removed from the\n  Morepath API together with the ``morepath.App.load_json`` directive\n  and the ``morepath.request.body_obj`` property.\n  If you use the ``load_json`` directive, this functionality has been moved\n  to a separate `more.body_model`_ package. Use this package instead by\n  subclassing your App from `more.body_model.BodyModelApp`.\n\n  .. _more.body_model: https://github.com/morepath/more.body_model\n\n* Uploading huge files lead to excessive memory consumption as the whole body\n  was consumed for no good reason. This is now fixed.\n\n  See `#504`_\n\n  .. _#504: https://github.com/morepath/morepath/issues/504\n\n* Fixes link prefix not applying to mounted applications.\n\n  See `#516`_\n\n  .. _#516: https://github.com/morepath/morepath/issues/516\n\n0.17 (2016-12-23)\n=================\n\n* **Removed**: The class ``morepath.ViewRegistry`` is gone.\n\n* Upload universal wheels to pypi during release.\n\n* Refactored and simplified implementation of ``ConverterRegistry``.\n\n* Bugfix: exception views in mounted apps weren't looked up correctly\n  anymore.\n\n* Adds compatibility with WebOb 1.7.\n\n* Removed extra spaces after the colon in json.\n  For example: {\"foo\": \"bar\"} is now {\"foo\":\"bar\"}.\n\n* Morepath now keeps track of what code was used to resolve a path and\n  a view. You use `more.whytool`_ to get a command line tool that\n  provides insight in what code was used for a request.\n\n.. _`more.whytool`: https://pypi.python.org/pypi/morepath\n\n0.16.1 (2016-10-04)\n===================\n\n* Adjust ``setup.py`` to require Reg 0.10 and Dectate 0.12, otherwise\n  Morepath won't work properly.\n\n0.16 (2016-10-04)\n=================\n\nRelease highlights\n------------------\n\n* A new, cleaner and faster implementation of Reg underlies this\n  version of Morepath. It turns generic functions into methods on the\n  ``App`` class, and removes implicit behavior entirely.\n\n  This has some impact if you used the low-level ``function``\n  directive or if you defined your own predicates with the\n  ``predicate`` and ``predicate_fallback`` directives, see details\n  below.\n\n* A new build environment based around virtualenv and pip. We've\n  removed the old buildout-based build environment. ``doc/developing.rst``\n  has much more.\n\n* Performance work boosts performance of Morepath significantly.\n\nRemovals & Deprecations\n-----------------------\n\n- **Removed**: ``morepath.remember_identity`` is removed from the\n  Morepath API.\n\n  Use ::\n\n    request.app.remember_identity(response, request, identity)\n\n  Instead of ::\n\n    remember_identity(response, request, identity, lookup=request.lookup)\n\n- **Removed**: ``morepath.forget_identity`` is removed from the\n  Morepath API.\n\n  Use ::\n\n    request.app.forget_identity(response, request)\n\n  Instead of ::\n\n    morepath.forget_identity(response, request, lookup=request.lookup)\n\n- **Removed** ``morepath.settings`` is removed from the Morepath API.\n\n  Use the ``morepath.App.settings`` property instead. You can access\n  this through ``app.settings``. You can access this through\n  ``request.app.settings`` if you have the request. The following\n  directives now get an additional optional first argument called\n  ``app``: ``permission_rule``, ``verify_identity``, ``dump_json``,\n  ``load_json``, ``link_prefix`` and the ``variables`` function passed\n  to the path directive.\n\n- **Removed** ``morepath.enable_implicit`` and\n  ``morepath.disable_implicit`` are both removed from the Morepath API.\n\n  Morepath now uses generic *methods* on the application class. The\n  application class determines the context used.\n\n- **Removed** We previously used buildout to install a development\n  environment for Morepath. We now use pip. See ``doc/developing.rst``\n  for details, and also below.\n\nFeatures\n--------\n\n- **Breaking change** Dectate used to support the ``directive``\n  pseudo-directive to let you define directives. But this could lead\n  to import problems if you forgot to import the module where the\n  pseudo-directives are defined before using them. In this release we\n  define the directives directly on the ``App`` class using the new\n  ``dectate.directive`` mechanism, avoiding this problem.\n\n  If you have code that defines new directives, you have to adjust\n  your code accordingly; see the `Dectate changelog`_ for more\n  details.\n\n  .. _`Dectate changelog`: http://dectate.readthedocs.io/en/latest/changes.html\n\n- **Breaking change** Previously Morepath used Reg's dispatch\n  functions directly, with a mechanism to pass in a ``lookup``\n  argument to a dispatch function to control the application\n  context. The lookup was maintained on ``App.lookup``. Tests were to\n  pass the lookup explicitly. Reg also maintained this lookup in a\n  thread-local variable, and any dispatch call that did not have a\n  explicit lookup argument passed in used this implicit lookup\n  directly.\n\n  Reg has undergone a major refactoring which affects Morepath. As a\n  result, Morepath is faster and dispatch code becomes more\n  Pythonic. The concept of lookup is gone: no more lookup argument,\n  ``app.lookup`` or implicit lookup. Instead, Morepath now makes use\n  of dispatch *methods* on the application. The application itself\n  provides the explicit dispatch context. See `#448`_ for the\n  discussion leading up to this change.\n\n  .. _`#448`: https://github.com/morepath/morepath/issues/448\n\n  Most Morepath application and library projects should continue to\n  work unchanged, but some changes are necessary if you used\n  some advanced features:\n\n  * If in your code you call a generic function from\n    ``morepath.generic`` directly it won't work anymore. Call the\n    equivalent method on the app instance instead.\n\n  * If you pass through the ``lookup`` argument explicitly, remove\n    this. Calling the dispatch method on the app instance is enough to\n    indicate context.\n\n  * If you defined a generic function in your code, you should move it\n    to a ``morepath.App`` subclass instead and use\n    ``morepath.dispatch_method`` instead of ``reg.dispatch``. Using\n    ``reg.dispatch_method`` directly is possible but not recommended:\n    ``morepath.dispatch_method`` includes caching behavior that speeds\n    up applications. For example::\n\n     class MyApp(morepath.App):\n         @morepath.dispatch_method('obj')\n         def my_dispatch(self, obj):\n             pass\n\n  * The ``function`` directive has been replaced by the ``method`` directive,\n    where you indicate the dispatch method on the first argument. For\n    example::\n\n      @App.method(MyApp.my_dispatch, obj=Foo)\n      def my_dispatch_impl(app, obj):\n          return \"Implementation for Foo\"\n\n  * The ``predicate`` directive can be used to install new predicates for\n    dispatch methods. The first argument should be a reference to the\n    dispatch method, for instance::\n\n      @App.predicate(App.get_view, name='model', default=None,\n                     index=ClassIndex)\n      def model_predicate(obj):\n        return obj.__class__\n\n    There is a new public method called ``App.get_view`` that you can\n    install view predicates on.\n\n  * The ``predicate_fallback`` directive gets a reference to the\n    method too. The decorated function needs to take the same\n    arguments as the dispatch method; previously it could be a subset.\n    So for example::\n\n      @App.predicate_fallback(App.get_view, model_predicate)\n      def model_not_found(self, obj, request):\n          raise HTTPNotFound()\n\n    Where ``self`` refers to the app instance.\n\nBug fixes\n---------\n\n- Fix code_examples path for doctests with tox.\n\nBuild environment\n-----------------\n\n- We now use virtualenv and pip instead of buildout to set up the\n  development environment. The development documentation has been\n  updated accordingly. Also see issues `#473`_ and `#484`_.\n\n- Have the manifest file for source distribution include all files\n  under VCS.\n\n- As we reached 100% code coverage for pytest, coveralls integration\n  was replaced by the ``--fail-under=100`` argument of ``coverage\n  report`` in the tox coverage test.\n\n.. _#473: https://github.com/morepath/morepath/issues/473\n.. _#484: https://github.com/morepath/morepath/pull/484\n\nOther\n-----\n\n- Refactored traject routing code with an eye on performance.\n\n- Use abstract base classes from the standard library for\n  ``morepath.IdentityPolicy``.\n\n- Reorganize the table of contents of the documentation into a\n  hierarchy (`#468`_).\n\n- Expand the test suite to cover ``morepath.Request.reset``, loop\n  detection for deferred class links, dispatching of\n  ``@App.verify_identity``-decorated functions on the ``identity``\n  argument (`#464`_). Coverage ratio is now 100%.\n\n.. _#464: https://github.com/morepath/morepath/issues/464\n.. _#468: https://github.com/morepath/morepath/pull/468\n\n0.15 (2016-07-18)\n=================\n\nRemovals & Deprecations\n-----------------------\n\n- **Removed**: ``morepath.autosetup`` and ``morepath.autocommit`` are\n  both removed from the Morepath API.\n\n  Use ``autoscan``. Also use new explicit ``App.commit`` method, or\n  rely on Morepath automatically committing during the first\n  request. So instead of::\n\n    morepath.autosetup()\n    morepath.run(App())\n\n  you do::\n\n    morepath.autoscan()\n    App.commit()  # optional\n    morepath.run(App())\n\n- **Removed**: the ``morepath.security`` module is removed, and you cannot\n  import from it anymore. Change imports from it to the public API, so go\n  from::\n\n    from morepath.security import NO_IDENTITY\n\n  to::\n\n    from morepath import NO_IDENTITY\n\n- **Deprecated** ``morepath.remember_identity`` and\n  ``morepath.forget_identity`` are both deprecated.\n\n  Use the ``morepath.App.remember_identity`` and\n  ``morepath.App.forget_identity`` methods, respectively.\n\n  Instead of ::\n\n    remember_identity(response, request, identity, lookup=request.lookup)\n    ...\n    morepath.forget_identity(response, request, lookup=request.lookup)\n\n  you do::\n\n    request.app.remember_identity(response, request, identity)\n    ...\n    request.app.forget_identity(response, request)\n\n- **Deprecated** ``morepath.settings`` is deprecated.\n\n  Use the ``morepath.App.settings`` property instead.\n\n- **Deprecated** ``morepath.enable_implicit`` and\n  ``morepath.disable_implicit`` are both deprecated.\n\n  You no longer need to choose between implicit or explicit lookup for\n  generic functions, as the generic functions that are part of the API\n  have all been deprecated.\n\nFeatures\n--------\n\n- Factored out new ``App.mounted_app_classes()`` class method which\n  can be used to determine the mounted app classes after a\n  commit. This can used to get the argument to ``dectate.query_tool``\n  if the commit is known to have already been done earlier.\n\n- The ``morepath.run`` function now takes command-line arguments to\n  set the host and port, and is friendlier in general.\n\n- Add ``App.init_settings`` for pre-filling the settings registry with\n  a python dictionary. This can be used to load the settings from a\n  config file.\n\n- Add a ``reset`` method to the ``Request`` class that resets it to\n  the state it had when request processing started. This is used by\n  ``more.transaction`` to reset request processing when it retries a\n  transaction.\n\nBug fixes\n---------\n\n- Fix a bug where a double slash at the start of a path was not\n  normalized.\n\nCleanups\n--------\n\n- Cleanups and testing of ``reify`` functionality.\n\n- More doctests in the narrative documentation.\n\n- A few small performance tweaks.\n\n- Remove unused imports and fix pep8 in core.py.\n\nOther\n-----\n\n- Add support for Python 3.5 and make it the default Python\n  environment.\n\n0.14 (2016-04-26)\n=================\n\n- **New** We have a new chat channel available. You can join us by clicking\n  this link:\n\n  https://discord.gg/0xRQrJnOPiRsEANa\n\n  Please join and hang out! We are retiring the (empty) Freenode\n  #morepath channel.\n\n- **Breaking change**: Move the basic auth policy to\n  ``more.basicauth`` extension extension. Basic auth is just one of\n  the authentication choices you have and not the default. To update\n  code, make your project depend on ``more.basicauth`` and import\n  ``BasicAuthIdentityPolicy`` from ``more.basicauth``.\n\n- **Breaking change**: Remove some exception classes that weren't\n  used: ``morepath.error.ViewError``, ``morepath.error.ResolveError``.\n  If you try to catch them in your code, just remove the whole\n  ``except`` statement as they were never raised.\n\n- **Deprecated** Importing from ``morepath.security`` directly. We\n  moved a few things from it into the public API: ``enable_implicit``,\n  ``disable_implicit``, ``remember_identity``, ``forget_identity``,\n  ``Identity``, ``IdentityPolicy``, ``NO_IDENTITY``. Some of these\n  were already documented as importable from ``morepath.security``.\n  Although importing from ``morepath.security`` won't break yet, you\n  should stop importing from it and import directly from ``morepath``\n  instead.\n\n- **Deprecated** ``morepath.autosetup`` and ``morepath.autocommit``\n  are both deprecated.\n\n  Use ``autoscan``. Also use new explicit ``App.commit`` method, or\n  rely on Morepath automatically committing during the first\n  request. So instead of::\n\n    morepath.autosetup()\n    morepath.run(App())\n\n  you do::\n\n    morepath.autoscan()\n    App.commit()  # optional\n    morepath.run(App())\n\n- **Breaking change** Extensions that imported ``RegRegistry`` directly\n  from ``morepath.app`` are going to be broken. This kind of import::\n\n    from morepath.app import RegRegistry\n\n  needs to become::\n\n    from morepath.directive import RegRegistry\n\n  This change was made to avoid circular imports in Morepath, and\n  because ``App`` did not directly depend on ``RegRegistry`` anymore.\n\n- **Breaking change**: the ``variables`` function for the ``path``\n  directive *has* to be defined taking a first ``obj`` argument. In\n  the past it was possible to define a ``variables`` function that\n  took no arguments. This is now an error.\n\n- Introduce a new ``commit`` method on ``App`` that commits the App\n  and also recursively commits all mounted apps. This is more explicit\n  than ``autocommit`` and less verbose than using the lower-level\n  ``dectate.commit``.\n\n- Automatic commit of the app is done during the first request if the\n  app wasn't committed previously. See issue #392.\n\n- Introduce a deprecation warnings (for ``morepath.security``,\n  ``morepath.autosetup``) and document how a user can deal with such\n  warnings.\n\n- Adds host header validation to protect against header poisoning attacks.\n\n  See https://github.com/morepath/morepath/issues/271\n\n  You can use ``morepath.HOST_HEADER_PROTECTION`` in your own tween\n  factory to wrap before or under it.\n\n- Refactor internals of publishing/view engine. Reg is used more\n  effectively for view lookup, order of some parameters is reversed\n  for consistency with public APIs.\n\n- Document the internals of Morepath, see implementation document.\n  This includes docstrings for all the internal APIs.\n\n- The framehack module was merged into ``autosetup``. Increased\n  the coverage to this module to 100%.\n\n- New cookiecutter template for Morepath, and added references in the\n  documentation for it.\n\n  See https://github.com/morepath/morepath-cookiecutter\n\n- Test cleanup; scan in many tests turns out to be superfluous. Issue\n  #379\n\n- Add a test that verifies we can instantiate an app before configuration\n  is done. See issue #378 for discussion.\n\n- Started doctesting some of the docs.\n\n- Renamed ``RegRegistry.lookup`` to ``RegRegistry.caching_lookup`` as\n  the ``lookup`` property was shadowing a lookup property on\n  ``reg.Registry``.  This wasn't causing bugs but made debugging\n  harder.\n\n- Refactored link generation. Introduce a new ``defer_class_links``\n  directive that lets you defer link generation using\n  ``Request.class_link()`` in addition to ``Request.link()``. This is\n  an alternative to ``defer_links``, which cannot support\n  ``Request.class_link``.\n\n- Morepath now has extension API docs that are useful when you want to\n  create your own directive and build on one of Morepath's registries\n  or directives.\n\n- A friendlier ``morepath.run`` that tells you how to quit it with\n  ``ctrl-C``.\n\n- A new document describing how to write a test for Morepath-based\n  applications.\n\n- Document how to create a Dectate-based command-line query tool that\n  lets you query Morepath directives.\n\n- Uses the topological sort implementation in Dectate. Sort out a mess\n  where there were too many ``TopologicalSortError`` classes.\n\n0.13.2 (2016-04-13)\n===================\n\n- Undid change in 0.13.1 where ``App`` could not be instantiated if\n  not committed, as ran into real-world code where this assumption\n  was broken.\n\n0.13.1 (2016-04-13)\n===================\n\n- Enable queries by the Dectate query tool.\n\n- Document ``scan`` function in API docs.\n\n- Work around an issue in Python where ``~`` (tilde) is quoted by\n  ``urllib.quote`` & ``urllib.encode``, even though it should not be\n  according to the RFC, as ``~`` is considered unreserved.\n\n  https://www.ietf.org/rfc/rfc3986.txt\n\n- Document some tricks you can do with directives in a new \"Directive\n  tricks\" document.\n\n- Refactor creation of tweens into function on TweenRegistry.\n\n- Update the REST document; it was rather old and made no mention of\n  ``body_model``.\n\n- Bail out with an error if an App is instantiated without being\n  committed.\n\n0.13 (2016-04-06)\n=================\n\n- **Breaking change**. Morepath has a new, extensively refactored\n  configuration system based on dectate_ and importscan_. Dectate is\n  an extracted, and heavily refactored version of Morepath's\n  configuration system that used to be in ``morepath.config``\n  module. It's finally documented too!\n\n  .. _dectate: http://dectate.readthedocs.org\n\n  .. _importscan: http://importscan.readthedocs.org\n\n  Dectate and thus Morepath does not use Venusian (or Venusifork)\n  anymore so that dependency is gone.\n\n  Code that uses ``morepath.autosetup`` should still work.\n\n  Code that uses ``morepath.setup`` and scans and commits manually\n  needs to change. Change this::\n\n    from morepath import setup\n\n    config = morepath.setup()\n    config.scan(package)\n    config.commit()\n\n  into this::\n\n    import morepath\n\n    morepath.scan(package)\n    morepath.autocommit()\n\n  Similarly ``config.scan()`` without arguments to scan its own\n  package needs to be rewritten to use ``morepath.scan()`` without\n  arguments.\n\n  Anything you import directly now does not need to be scanned\n  anymore; the act of importing a module directly registers the\n  directives with Morepath, though as before they won't be active\n  until you commit. But scanning something you've imported before\n  won't do any harm.\n\n  The signature for ``morepath.scan`` is somewhat different than that\n  of the old ``config.scan``. There is no third argument\n  ``recursive=True`` anymore. The ``onerror`` argument has been\n  renamed to ``handle_error`` and has different behavior; the\n  importscan_ documentation describes the details.\n\n  If you were writing tests that involve Morepath, the old structure of\n  the test was::\n\n    import morepath\n\n    def test_foo():\n        config = morepath.setup()\n\n        class App(morepath.App):\n            testing_config = config\n\n        ... use directives on App ...\n\n        config.commit()\n\n        ... do asserts ...\n\n  This now needs to change to::\n\n    import morepath\n\n    def test_foo():\n        class App(morepath.App):\n            pass\n\n        ... use directives on App ...\n\n        morepath.commit([App])\n\n        ... do asserts ...\n\n  So, you need to use the ``morepath.commit()`` function and give it a\n  list of the application objects you want to commit,\n  explicitly. ``morepath.autocommit()`` won't work in the context of a\n  test.\n\n  If you used a test that scanned code you need to adjust it too, from::\n\n    import morepath\n    import some_package\n\n    def test_foo():\n        config = morepath.setup()\n\n        config.scan(some_package)\n\n        config.commit()\n\n        ... do asserts ...\n\n  to this::\n\n    import morepath\n    import some_package\n\n    def test_foo():\n        morepath.scan(some_package)\n        morepath.commit([some_package.App])\n\n        ... do asserts ...\n\n  Again you need to be explicit and use ``morepath.commit`` to commit\n  those apps you want to test.\n\n  If you had a low-level reference to ``app.registry`` in your code it\n  will break; the registry has been split up and is now under\n  ``app.config``. If you want access to ``lookup`` you can use\n  ``app.lookup``.\n\n  If you created custom directives, the way to create directives\n  is now documented as part of the dectate_ project. The main updates you\n  need to do are:\n\n  * subclass from `dectate.Action` instead of `morepath.Directive`.\n\n  * no more ``app`` first argument.\n\n  * no ``super`` call is needed anymore in ``__init__``.\n\n  * add a ``config`` class variable to declare the registries\n    you want to affect. Until we break up the main registry this\n    is::\n\n      from morepath.app import Registry\n\n      ...\n      config = { 'registry': Registry }\n\n\n  * reverse the arguments to ``perform``, so that the object\n    being registered comes first. So change::\n\n      def perform(self, registry, obj):\n         ...\n\n    into::\n\n      def perform(self, obj, registry):\n         ...\n\n    But instead of ``registry`` use the registry you set up in your\n    action's ``config``.\n\n  * no more ``prepare``. Do error checking inside the ``perform``\n    method and raise a ``DirectiveError`` if something is wrong.\n\n    If you created sub-actions from ``prepare``, subclass from\n    `dectate.Composite` instead and implement an ``actions`` method.\n\n  * ``group_key`` method has changed to ``group_class`` class variable.\n\n  If you were using ``morepath.sphinxext`` to document directives\n  using Sphinx autodoc, use ``dectate.sphinxext`` instead.\n\n- **Breaking change** If you want to use Morepath directives on\n  ``@staticmethod``, you need to change the order in which these are\n  applied. In the past::\n\n    @App.path(model=Foo, path='bar')\n    @staticmethod\n    def get_foo():\n        ....\n\n  But now you need to write::\n\n    @staticmethod\n    @App.path(model=Foo, path='bar')\n    def get_foo():\n        ....\n\n- **Breaking change** You cannot use a Morepath ``path`` directive on\n  a ``@classmethod`` directly anymore. Instead you can do this::\n\n    class Foo(object):\n        @classmethod\n        def get_something():\n            pass\n\n    @App.path('/', model=Something)(Foo.get_something)\n\n- **Breaking change**. Brought `app.settings` back, a shortcut to the\n  settings registry. If you use settings, you need to replace any\n  references to ``app.registry.settings`` to ``app.settings``.\n\n- Add `request.class_link`. This lets you link using classes instead\n  of instances as an optimization. In some cases instantiating an\n  object just so you can generate a link to it is relatively\n  expensive. In that case you can use `request.class_link`\n  instead. This lets you link to a model class and supply a\n  `variables` dictionary manually.\n\n- **Breaking change**. In Morepath versions before this there was an\n  class attribute on ``App`` subclasses called ``registry``. This was\n  a giant mixed registry which subclassed a lot of different\n  registries used by Morepath (reg registry, converter registry,\n  traject registry, etc). The Dectate configuration system allows us\n  to break this registry into a lot of smaller interdependent registries\n  that are configured in the ``config`` of the directives.\n\n  While normally you shouldn't be, if you were somehow relying on\n  ``App.registry`` in your code you should now rewrite it to use\n  ``App.config.reg_registry``, ``App.config.setting_registry``,\n  ``App.config.path_registry`` etc.\n\n0.12 (2016-01-27)\n=================\n\n- **Breaking change**. The ``request.after`` function is now called even if\n  the response was directly created by the view (as opposed to the view\n  returning a value to be rendered by morepath). Basically, ``request.after``\n  is now guaranteed to be called if the response's HTTP status code lies within\n  the 2XX-3XX range.\n\n  See https://github.com/morepath/morepath/issues/346\n\n- Fixed a typo in the `defer_link` documentation.\n\n- Morepath's link generation wasn't properly quoting paths and\n  parameters in all circumstances where non-ascii characters or\n  URL-quoted characters were used. See issue #337.\n\n- Morepath could not handle varargs or keyword arguments properly\n  in path functions. Now bails out with an error early during\n  configuration time. To fix existing code, get rid of any ``*args`` or\n  ``**kw``.\n\n- Morepath could not properly generate links if a path directive\n  defines a path variable for the path but does not actually use it in\n  the path function. Now we complain during configuration time. To fix\n  existing code, add all variables that are defined in the path\n  (i.e. ``{id}``) to the function signature.\n\n- Certain errors (``ConfigError``) were not reporting directive line number\n  information. They now do.\n\n- Better ``ConfigError`` reporting when ``setting_section`` is in use.\n\n- Removed the unused ``request`` parameter from the ``link`` method in\n  ``morepath.request``. See issue #351.\n\n- Require venusifork 2.0a3. This is a hacked version which works around\n  some unusual compatibility issues with ``six``.\n\n0.11.1 (2015-06-29)\n===================\n\n- setuptools has the nasty habit to change underscores in project\n  names to minus characters. This broke the new autoscan machinery for\n  packages with an underscore in their name (such as\n  `morepath_sqlalchemy`). This was fixed.\n\n0.11 (2015-06-29)\n=================\n\n- **Breaking change**. The ``morepath.autoconfig`` and ``morepath.autosetup``\n  methods had to be rewritten. Before, Morepath was unable to autoload packages\n  installed using ``pip``.\n\n  As a result, Morepath won't be able to autoload packages if the setup.py\n  name differs from the name of the distributed package or module.\n\n  For example: A package named ``my-app`` containing a module named ``myapp``\n  won't be automatically loaded anymore.\n\n  Packages like this need to be loaded manually now::\n\n    import morepath\n    import myapp\n\n    config = morepath.setup()\n    config.scan(myapp)\n    config.commit()\n\n  See https://github.com/morepath/morepath/issues/319\n\n- The ``config.scan`` method now excludes 'test' and 'tests' directories\n  by default.\n\n  See https://github.com/morepath/morepath/issues/326\n\n- The ``template_directory`` directive will no longer inspect the current\n  module if the template directory refers to an absolute path. This makes it\n  easier to write tests where the current module might not be available.\n\n  Fixes https://github.com/morepath/morepath/issues/299\n\n- The ``identity_policy`` passes ``settings`` to the function if it\n  defines such an argument. This way an identity policy can be created\n  that takes settings into account.\n\n  See https://github.com/morepath/morepath/issues/309\n\n- Dots in the request path are now always normalized away. Before, Morepath\n  basically relied on the client to do this, which was a potential security\n  issue.\n\n  See https://github.com/morepath/morepath/issues/329\n\n- Additional documentation on the Morepath config system:\n  http://morepath.readthedocs.org/en/latest/configuration.html\n\n- Additional documentation on how to serve static images in\n  https://morepath.readthedocs.org/en/latest/more.static.html\n\n- Move undocumented ``pdb`` out of ``__init__.py`` as it could\n  sometimes trip up things. Instead documented it in the API docs in\n  the special `morepath.pdbsupport` module.\n\n  https://github.com/morepath/morepath/issues/328\n\n\n0.10 (2015-04-09)\n=================\n\n- Server-side templating language support: there is now a ``template``\n  argument for the ``html`` directive (and ``view`` and ``json``).\n  You need to use a plugin to add particular template languages to\n  your project, such as ``more.chameleon`` and ``more.jinja2``, but\n  you can also add your own.\n\n  See http://morepath.readthedocs.org/en/latest/templates.html\n\n- Add a new \"A Review of the Web\" document to the docs to show how\n  Morepath fits within the web.\n\n  http://morepath.readthedocs.org/en/latest/web.html\n\n- The publisher does not respond to a ``None`` render function\n  anymore. Instead, the ``view`` directive now uses a default\n  ``render_view`` if ``None`` is configured. This simplifies the\n  publisher guaranteeing a ``render`` function always exists.\n\n  Fixes https://github.com/morepath/morepath/issues/283\n\n- Introduce a ``request.resolve_path`` method that allows you to resolve\n  paths to objects programmatically.\n\n- Modify ``setup.py`` to use ``io.open`` instead of ``open`` to\n  include the README and the CHANGELOG and hardcode UTF-8 so it works\n  on all versions of Python with all default encodings.\n\n- Various documentation fixes.\n\n0.9 (2014-11-25)\n================\n\n- **Breaking change**. In previous releases of Morepath, Morepath did\n  not include the full hostname in generated links (so ``/a`` instead\n  of ``http://example.com/a``). Morepath 0.9 does include the full\n  hostname in generated links by default. This to support the\n  non-browser client use case better. In the previous system without\n  fully qualified URLs, client code needs to manually add the base of\n  links itself in order to be able to access them. That makes client\n  code more complicated than it should be. To make writing such client\n  code as easy as possible Morepath now generates complete URLs.\n\n  This should not break any code, though it can break tests that rely\n  on the previous behavior. To fix ``webtest`` style tests, prefix\n  the expected links with ``http://localhost/``.\n\n  If for some reason you want the old behavior back in an application,\n  you can use the ``link_prefix`` directive::\n\n    @App.link_prefix()\n    def my_link_prefix(request):\n        return '' # prefix nothing again\n\n- Directives are now logged to the ``morepath.directive`` log, which\n  is using the standard Python ``logging`` infrastructure. See\n  http://morepath.readthedocs.org/en/latest/logging.html\n\n- Document ``more.forwarded`` proxy support in\n  http://morepath.readthedocs.org/en/latest/paths_and_linking.html\n\n- Document behavior of ``request.after`` in combination with directly\n  returning a response object from a view.\n\n- Expose ``body_model_predicate`` to the public Morepath API. You\n  can now say your predicate comes after it.\n\n- Expose ``LAST_VIEW_PREDICATE`` to the Morepath API. This is the last\n  predicate defined by the Morepath core.\n\n- Update the predicate documentation.\n\n- Updated the more.static doc to reflect changes in it.\n\n- Fix doc for grouping views with the ``with`` statement.\n\n- Suggest a few things to try when your code doesn't appear to be\n  scanned properly.\n\n- A new view predicate without a fallback resulted in an internal\n  server error if the predicate did not match. Now it results in a 404\n  Not Found by default. To override this default, define a predicate\n  fallback.\n\n0.8 (2014-11-13)\n================\n\n- **Breaking change**. Reg 0.9 introduces a new, more powerful\n  way to create dispatch functions, and this has resulted in\n  a new, incompatible Reg API.\n\n  Morepath has been adjusted to make use of the new Reg. This won't\n  affect many Morepath applications, and they should be able to\n  continue unchanged. But some Morepath extensions and advanced\n  applications may break, so you should be aware of the changes.\n\n  * The ``@App.function`` directive has changed from this::\n\n      class A(object):\n          pass\n\n      class B(object):\n          pass\n\n      @reg.generic\n      def dispatch_function(a, b):\n          pass\n\n      @App.function(dispatch_function, A, B)\n      def dispatched_to(a, b):\n          return 'dispatched to A and B'\n\n    to this::\n\n      class A(object):\n          pass\n\n      class B(object):\n          pass\n\n      @reg.dispatch('a', 'b')\n      def dispatch_function(a, b):\n          pass\n\n      @App.function(dispatch_function, a=A, b=B)\n      def dispatched_to(a, b):\n          return 'dispatched to A and B'\n\n    The new system in Reg (see its docs_) is a lot more flexible than\n    what we had before. When you use ``function`` you don't need to\n    know about the order of the predicates anymore -- this is\n    determined by the arguments to ``@reg.dispatch()``. You can now\n    also have function arguments that Reg ignores for dispatch.\n\n  * The ``@App.predicate`` and ``@App.predicate_fallback`` directive\n    have changed. You can now install custom predicates and fallbacks\n    for *any* generic function that's marked with\n    ``@reg.dispatch_external_predicates()``. The Morepath view code\n    has been simplified to be based on this, and is also more powerful\n    as it can now be extended with new predicates that use\n    predicate-style dispatch.\n\n  .. _docs: http://reg.readthedocs.org\n\n- Introduce the ``body_model`` predicate for views. You can give it\n  the class of the ``request.body_obj`` you want to handle with this\n  view. In combination with the ``load_json`` directive this allows\n  you to write views that respond only to the POSTing or PUTing of a\n  certain type of object.\n\n- Internals refactoring: we had a few potentially overridable dispatch\n  functions in ``morepath.generic`` that actually were never\n  overridden in any directives. Simplify this by moving their\n  implementation into ``morepath.publish`` and\n  ``morepath.request``. ``generic.link``, ``generic.consume`` and\n  ``generic.response`` are now gone.\n\n- Introduce a ``link_prefix`` directive that allows you to set the\n  URL prefix used by every link generated by the request.\n\n- A bug fix in ``request.view()``; the ``lookup`` on the ``request``\n  was not properly updated.\n\n- Another bug fix in ``request.view()``; if ``deferred_link_app`` app\n  is used, ``request.app`` should be adjusted to the app currently\n  being deferred to.\n\n- ``request.after`` behavior is clarified: it does not run for any\n  exceptions raised during the handling of the request, only for the\n  \"proper\" response. Fix a bug where it *did* sometimes run.\n\n- Previously if you returned ``None`` for a path in a ``variables``\n  function for a path, you would get a path with ``None`` in it. Now\n  it is a ``LinkError``.\n\n- If you return a non-dict for ``variables`` for a path, you get a proper\n  ``LinkError`` now.\n\n- One test related to defer_links did not work correctly in Python 3. Fixed.\n\n- Add API doc for ``body_obj``. Also fix JSON and objects doc to talk\n  about ``request.body_obj`` instead of ``request.obj``.\n\n- Extend API docs for security: detail the API an identity policy\n  needs to implement and fix a few bugs.\n\n- Fix ReST error in API docs for ``autoconfig`` and ``autosetup``.\n\n- Fix a few ReST links to the API docs in the app reuse document.\n\n0.7 (2014-11-03)\n================\n\n- **Breaking change**. There has been a change in the way the mount\n  directive works. There has also been a change in the way linking\n  between application works. The changes result in a simpler, more\n  powerful API and implementation.\n\n  The relevant changes are:\n\n  * You can now define your own custom ``__init__`` for\n    ``morepath.App`` subclasses. Here you can specify the arguments\n    with which your application object should be mounted. The previous\n    ``variables`` class attribute is now ignored.\n\n    It's not necessary to use ``super()`` when you subclass from\n    ``morepath.App`` directly.\n\n    So, instead of this::\n\n       class MyApp(morepath.App):\n           variables = ['mount_id']\n\n    You should now write this::\n\n       class MyApp(morepath.App):\n           def __init__(self, mount_id):\n               self.mount_id = mount_id\n\n  * The ``mount`` directive should now return an *instance* of the\n    application being mounted, not a dictionary with mount\n    parameters. The application is specified using the ``app``\n    argument to the directive. So instead of this::\n\n      @RootApp.mount(app=MyApp, path='sub/{id}')\n      def mount_sub(id):\n          return {\n             'mount_id': id\n          }\n\n    You should now use this::\n\n      @RootApp.mount(app=MyApp, path='sub/{id}')\n      def mount_sub(id):\n          return MyApp(mount_id=id)\n\n  * The ``mount`` directive now takes a ``variables`` argument. This\n    works like the ``variables`` argument to the ``path``\n    directive and is used to construct links.\n\n    It is given an instance of the app being mounted, and it should\n    reconstruct those variables needed in its path as a dictionary. If\n    omitted, Morepath tries to get them as attributes from the\n    application instance, just like it tries to get attributes of any\n    model instance.\n\n    ``MyApp`` above is a good example of where this is required: it\n    does store the correct information, but as the ``mount_id``\n    attribute, not the ``id`` attribute. You should add a ``variables``\n    argument to the ``mount`` directive to explain to Morepath how\n    to obtain ``id``::\n\n      @RootApp.mount(app=MyApp, path='sub/{id}',\n                     variables=lambda app: dict(id=app.mount_id))\n      def mount_sub(id):\n          return MyApp(mount_id=id)\n\n    The simplest way to avoid having to do this is to name the\n    attributes the same way as the variables in the paths, just like\n    you can do for model classes.\n\n  * In the past you'd get additional mount context variables as extra\n    variables in the function decorated by the ``path`` decorator.\n    This does not happen anymore. Instead you can add a special\n    ``app`` parameter to this function. This gives you access to the\n    current application object, and you can extract its attributes\n    there.\n\n    So instead of this::\n\n       @MyApp.path(path='models/{id}', model=Model)\n       def get_root(mount_id, id):\n           return Model(mount_id, id)\n\n    where ``mount_id`` is magically retrieved from the way ``MyApp`` was\n    mounted, you now write this::\n\n       @MyApp.path(path='models/{id}', model=Model)\n       def get_root(app, id):\n           return Model(app.mount_id, id)\n\n  * There was an ``request.mounted`` attribute. This was a special an\n    instance of a special ``Mounted`` class. This ``Mounted`` class is\n    now gone -- instead mounted applications are simply instances of\n    their class. To access the currently mounted application, use\n    ``request.app``.\n\n  * The ``Request`` object had ``child`` and ``sibling`` methods as\n    well as a ``parent`` attribute to navigate to different \"link\n    makers\".  You'd navigate to the link maker of an application in\n    order to create links to objects in that application. These are\n    now gone. Instead you can do this navigation from the application\n    object directly, and instead of link makers, you get application\n    instances. You can pass an application instance as a special\n    ``app`` argument to ``request.link`` and ``request.view``.\n\n    So instead of this::\n\n       request.child(foo).link(obj)\n\n    You now write this::\n\n       request.link(obj, app=request.app.child(foo))\n\n    And instead of this::\n\n       request.parent.link(obj)\n\n    You now write this::\n\n       request.link(obj, app=request.app.parent)\n\n    Note that the new ``defer_links`` directive can be used to\n    automate this behavior for particular models.\n\n  * The ``.child`` method on ``App`` can the app class as well as the\n    parameters for the function decorated by the ``mount`` directive::\n\n       app.child(MyApp, id='foo')\n\n    This can also be done by name. So, assuming ``MyApp`` was mounted\n    under ``my_app``::\n\n       app.child('my_app', id='foo')\n\n    This is how ``request.child`` worked already.\n\n    As an alternative you can now instead pass an app *instance*::\n\n       app.child(MyApp(mount_id='foo'))\n\n    Unlike the other ways to get the child, this takes the parameters\n    need to create the app instance, as opposed to taking the\n    parameters under which the app was mounted.\n\n  Motivation behind these changes:\n\n  Morepath used to have a ``Mount`` class separate from the ``App``\n  classes you define. Since Morepath 0.4 application objects became\n  classes, and it made sense to make their instances the same as the\n  mounted application. This unification has now taken place.\n\n  It then also made sense to use its navigation methods (``child`` and\n  friend) to navigate the mount tree, instead of using the rather\n  complicated \"link maker\" infrastructure we had before.\n\n  This change simplifies the implementation of mounting considerably,\n  without taking away features and actually making the APIs involved\n  more clear. This simplification in turn made it easier to implement\n  the new ``defer_links`` directive.\n\n- **Breaking change**. The arguments to the ``render`` function have\n  changed. This is a function you can pass to a view directive.  The\n  render function now takes a second argument, the request. You need\n  to update your render functions to take this into account. This only\n  affects code that supplies an explicit ``render`` function to the\n  ``view``, ``json`` and ``html`` directives, and since not a lot of\n  those functions exist, the impact is expected to be minimal.\n\n- **Breaking change**. In certain circumstances it was useful to\n  access the settings through an application instance using\n  ``app.settings``. This does not work anymore; access the settings\n  through ``app.registry.settings`` instead.\n\n- ``dump_json`` and ``load_json`` directives. This lets you\n  automatically convert an object going to a response to JSON, and\n  converts JSON coming in as a request body from JSON to an\n  object. See http://morepath.readthedocs.org/en/latest/json.html for\n  more information.\n\n- ``defer_links`` directive. This directive can be used to declare\n  that a particular mounted application takes care of linking to\n  instances of a class. Besides deferring ``request.link()`` it will\n  also defer ``request.view``. This lets you combine applications with\n  more ease. By returning ``None`` from it you can also defer links to\n  this app's parent app.\n\n- ``app.ancestors()`` method and ``app.root`` attribute. These can be\n  used for convenient access to the ancestor apps of a mounted\n  application. To access from the request, use ``request.app.root``\n  and ``request.app.ancestors()``.\n\n- The ``App`` class now has a ``request_class`` class attribute. This\n  determines the class of the request that is created and can be\n  overridden by subclasses. ``more.static`` now makes use of this.\n\n- Several generic functions that weren't really pulling their weight\n  are now gone as part of the mount simplification:\n  ``generic.context`` and ``generic.traject`` are not needed anymore,\n  along with ``generic.link_maker``.\n\n- Change documentation to use uppercase class names for App classes\n  everywhere. This reflects a change in 0.4 and should help clarity.\n\n- Added documentation about auto-reloading Morepath during development.\n\n- No longer silently suppress ImportError during scanning: this can\n  hide genuine ``ImportError`` in the underlying code.\n\n  We were suppressing ``ImportError`` before as it can be triggered\n  by packages that rely on optional dependencies.\n\n  This is a common case in the ``.tests`` subdirectory of a package\n  which may import a test runner like ``pytest``. ``pytest`` is only a\n  test dependency of the package and not a mainline dependencies, and\n  this can break scanning. To avoid this problem, Morepath's autosetup\n  and autoconfig now automatically ignore ``.tests`` and ``.test``\n  sub-packages.\n\n  Enhanced the API docs for ``autosetup`` and ``autoconfig`` to describe\n  scenarios which can generate legitimate ``ImportError`` exceptions\n  and how to handle them.\n\n- Fix of examples in tween documentation.\n\n- Minor improvement in docstrings.\n\n0.6 (2014-09-08)\n================\n\n- Fix documentation on the ``with`` statement; it was not using the local\n  ``view`` variable correctly.\n\n- Add #morepath IRC channel to the community docs.\n\n- Named mounts. Instead of referring to the app class when\n  constructing a link to an object in an application mounted\n  elsewhere, you can put in the name of the mount. The name of the\n  mount can be given explicitly in the mount directive but defaults to\n  the mount path.\n\n  This helps when an application is mounted several times and needs to\n  generate different links depending on where it's mounted; by\n  referring to the application by name this is loosely coupled and\n  will work no matter what application is mounted under that name.\n\n  This also helps when linking to an application that may or may not\n  be present; instead of doing an import while looking for\n  ``ImportError``, you can try to construct the link and you'll get a\n  ``LinkError`` exception if the application is not there. Though this\n  still assumes you can import the model class of what you're linking\n  to.\n\n  (see issue #197)\n\n- Introduce a ``sibling`` method on Request. This combines the\n  ``.parent.child`` step in one for convenience when you want to\n  link to a sibling app.\n\n0.5.1 (2014-08-28)\n==================\n\n- Drop usage of sphinxcontrib.youtube in favor of raw HTML embedding,\n  as otherwise too many things broke on readthedocs.\n\n0.5 (2014-08-28)\n================\n\n- Add ``more.static`` documentation on local components.\n\n- Add links to youtube videos on Morepath: the keynote at PyCon DE\n  2013, and the talk on Morepath at EuroPython 2014.\n\n- Add a whole bunch of extra code quality tools to buildout.\n\n- ``verify_identity`` would be called even if no identity could be\n  established. Now skip calling ``verify_identity`` when we already\n  have ``NO_IDENTITY``. See issue #175.\n\n- Fix issue #186: mounting an app that is absorbing paths could\n  sometimes generate the wrong link. Thanks to Ying Zhong for the bug\n  report and test case.\n\n- Upgraded to a newer version of Reg (0.8) for ``@reg.classgeneric``\n  support as well as performance improvements.\n\n- Add a note in the documentation on how to deal with URL parameters\n  that are not Python names (such as ``foo@``, or ``blah[]``). You can\n  use a combination of ``extra_parameters`` and ``get_converters`` to\n  handle them.\n\n- Document the use of the ``with`` statement for directive\n  abbreviation (see the Views document).\n\n- Created a mailing list:\n\n  https://groups.google.com/forum/#!forum/morepath\n\n  Please join!\n\n  Add a new page on community to document this.\n\n0.4.1 (2014-07-08)\n==================\n\n- Compatibility for Python 3. I introduced a meta class in Morepath\n  0.4 and Python 3 did not like this. Now the tests pass again in\n  Python 3.\n\n- remove ``generic.lookup``, unused since Morepath 0.4.\n\n- Increase test coverage back to 100%.\n\n0.4 (2014-07-07)\n================\n\n- **BREAKING CHANGE** Move to class-based application registries. This\n  breaks old code and it needs to be updated. The update is not\n  difficult and amounts to:\n\n  * subclass ``morepath.App`` instead of instantiating it to create a\n    new app. Use subclasses for extension too.\n\n  * To get a WSGI object you can plug into a WSGI server, you need to\n    instantiate the app class first.\n\n  Old way::\n\n     app = morepath.App()\n\n  So, the ``app`` object that you use directives on is an\n  instance. New way::\n\n    class app(morepath.App):\n        pass\n\n  So, now it's a class. The directives look the same as before, so this\n  hasn't changed::\n\n     @app.view(model=Foo)\n     def foo_default(self, request):\n        ...\n\n  To extend an application with another one, you used to have to pass\n  the ``extends`` arguments. Old way::\n\n    sub_app = morepath.App(extends=[core_app])\n\n  This has now turned into subclassing. New way::\n\n    class sub_app(core_app):\n        pass\n\n  There was also a ``variables`` argument to specify an application\n  that can be mounted. Old way::\n\n     app = morepath.App(variables=['foo'])\n\n  This is now a class attribute. New way::\n\n     class app(morepath.App):\n         variables = ['foo']\n\n  The ``name`` argument to help debugging is gone; we can look at the\n  class name now. The ``testing_config`` argument used internally in\n  the Morepath tests has also become a class attribute.\n\n  In the old system, the application object was both configuration\n  point and WSGI object. Old way::\n\n      app = morepath.App()\n\n      # configuration\n      @app.path(...)\n      ...\n\n      # wsgi\n      morepath.run(app)\n\n  In the Morepath 0.4 this has been split. As we've already seen, the\n  application *class* serves. To get a WSGI object, you need to first\n  *instantiate* it. New way::\n\n     class app(morepath.App):\n       pass\n\n     # configuration\n     @app.path(...)\n     ...\n\n     # wsgi\n     morepath.run(app())\n\n  To mount an application manually with variables, we used to need the\n  special ``mount()`` method. Old way::\n\n    mounted_wiki_app = wiki_app.mount(wiki_id=3)\n\n  In the new system, mounting is done during instantiation of the app::\n\n    mounted_wiki_app = wiki_app(wiki_id=3)\n\n  Class names in Python are usually spelled with an upper case. In the\n  Morepath docs the application object has been spelled with a lower\n  case. We've used lower-case class names for application objects even\n  in the updated docs for example code, but feel free to make them\n  upper-case in your own code if you wish.\n\n  Why this change? There are some major benefits to this change:\n\n  * both extending and mounting app now use natural Python mechanisms:\n    subclassing and instantation.\n\n  * it allows us to expose the facility to create new directives to\n    the API. You can create application-specific directives.\n\n- You can define your own directives on your applications using the\n  ``directive`` directive::\n\n    @my_app.directive('my_directive')\n\n  This exposes details of the configuration system which is\n  underdocumented for now; study the ``morepath.directive`` module\n  source code for examples.\n\n- Document how to use more.static to include static resources into\n  your application.\n\n- Add a ``recursive=False`` option to the config.scan method. This\n  allows the non-recursive scanning of a package. Only its\n  ``__init__.py`` will be scanned.\n\n- To support scanning a single module non-recursively we need a\n  feature that hasn't landed in mainline Venusian yet, so depend on\n  Venusifork for now.\n\n- A small optimization in the publishing machinery. Less work is done\n  to update the generic function lookup context during routing.\n\n0.3 (2014-06-23)\n================\n\n- Ability to absorb paths entirely in path directive, as per issue #132.\n\n- Refactor of config engine to make Venusian and immediate config more\n  clear.\n\n- Typo fix in docs (Remco Wendt).\n\n- Get version number in docs from setuptools.\n\n- Fix changelog so that PyPI page generates HTML correctly.\n\n- Fix PDF generation so that the full content is generated.\n\n- Ability to mark a view as internal. It will be available to\n  ``request.view()`` but will give 404 on the web. This is useful for\n  structuring JSON views for reusability where you don't want them to\n  actually show up on the web.\n\n- A ``request.child(something).view()`` that had this view in turn\n  call a ``request.view()`` from the context of the ``something``\n  application would fail -- it would not be able to look up the view\n  as lookups still occurred in the context of the mounting\n  application. This is now fixed. (thanks Ying Zhong for reporting it)\n\n  Along with this fix refactored the request object so it keeps a\n  simple ``mounted`` attribute instead of a stack of ``mounts``; the\n  stack-like nature was not in use anymore as mounts themselves have\n  parents anyway. The new code is simpler.\n\n0.2 (2014-04-24)\n================\n\n- Python 3 support, in particular Python 3.4 (Alec Munro - fudomunro\n  on github).\n\n- Link generation now takes ``SCRIPT_NAME`` into account.\n\n- Morepath 0.1 had a security system, but it was undocumented. Now\n  it's documented (docs now in `Morepath Security`_), and some of its\n  behavior was slightly tweaked:\n\n  * new ``verify_identity`` directive.\n\n  * ``permission`` directive was renamed to ``permission_rule``.\n\n  * default unauthorized error is 403 Forbidden, not 401 Unauthorized.\n\n  * ``morepath.remember`` and ``morepath.forbet`` renamed to\n    ``morepath.remember_identity`` and ``morepath.forget_identity``.\n\n- Installation documentation tweaks. (Auke Willem Oosterhoff)\n\n- ``.gitignore`` tweaks (Auke Willem Oosterhoff)\n\n.. _`Morepath Security`: http://blog.startifact.com/posts/morepath-security.html\n\n0.1 (2014-04-08)\n================\n\n- Initial public release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://morepath.readthedocs.io", "keywords": "web wsgi routing morepath", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "morepath", "package_url": "https://pypi.org/project/morepath/", "platform": "", "project_url": "https://pypi.org/project/morepath/", "project_urls": {"Homepage": "http://morepath.readthedocs.io"}, "release_url": "https://pypi.org/project/morepath/0.19/", "requires_dist": ["setuptools", "webob (>=1.7.0)", "reg (>=0.12)", "dectate (>=0.14)", "importscan (>=0.2)", "pytest-cov ; extra == 'coverage'", "sphinx ; extra == 'docs'", "pyyaml ; extra == 'docs'", "WebTest (>=2.0.14) ; extra == 'docs'", "flake8 ; extra == 'pep8'", "black ; extra == 'pep8'", "pytest (>=2.9.0) ; extra == 'test'", "pytest-remove-stale-bytecode ; extra == 'test'", "WebTest (>=2.0.14) ; extra == 'test'"], "requires_python": "", "summary": "A micro web-framework with superpowers", "version": "0.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"morepath-python-web-microframework-with-super-powers\">\n<h2>Morepath: Python web microframework with super powers</h2>\n<p>Morepath is a Python web framework. An application consists of\n<em>models</em>. Each type of model is published on a URL <em>path</em>. Content is\nexposed to the web using <em>views</em>.</p>\n<p><a href=\"http://morepath.readthedocs.io\" rel=\"nofollow\">Documentation</a>.</p>\n<div id=\"build-status\">\n<h3>Build Status</h3>\n<a href=\"https://travis-ci.org/morepath/morepath\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/morepath/morepath.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3010512d9cd87317c01bc0a81e8cfdd616e377c8/68747470733a2f2f7472617669732d63692e6f72672f6d6f7265706174682f6d6f7265706174682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/morepath/morepath?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/morepath/morepath/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75456dc2aa881470351939f94a98e592a8cd486b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f7265706174682f6d6f7265706174682f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"changes\">\n<h4>CHANGES</h4>\n</div>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.19 (2020-01-30)</h2>\n<ul>\n<li><p><strong>Removed</strong>: Removed support for Python 2.</p>\n<p>You have to upgrade to Python 3 if you want to use this version.</p>\n</li>\n<li><p>Added support for Python 3.8 and PyPy 3.6.</p>\n</li>\n<li><p>Make Python 3.7 the default.</p>\n</li>\n<li><p>Update to new signature of reg.arginfo, which returns now a FullArgSpec\ntuple instead of an ArgSpec tuple.</p>\n</li>\n<li><p>Add integration for the Black code formatter.</p>\n</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.18.2 (2019-01-22)</h2>\n<ul>\n<li><p>Fixes an infinite recursion error during morepath.autoscan.</p>\n<p>The error that occurred when morepath.autoscan was run in an environment where\ntwo packages depended on each other, as well as depending on morepath\nthrough an intermediary.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/536\" rel=\"nofollow\">#536</a></p>\n</li>\n<li><p>Added support for Python 3.6 and 3.7 and dropped support for Python 3.3</p>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.18.1 (2017-06-30)</h2>\n<ul>\n<li><p>Link generation was unstable when supplied with multiple URL parameters.\nSort URL parameters so that link generation is stable. This is convenient\nin tests.</p>\n<p>This could potentially break tests which weren\u2019t stable in the past. Fixing\nthe tests to use the alphabetical sort order should fix the issue.</p>\n</li>\n<li><p>The poisoned host header protection is no longer case-sensitive.</p>\n</li>\n<li><p>Underscores are now allowed in host headers. Though they are not valid in\ndomain names, they are valid in host names and offer no attack surface.</p>\n</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.18 (2017-03-17)</h2>\n<ul>\n<li><p><strong>New</strong>: The <cite>load`</cite> API, which allows you to define how incoming JSON\n(through a POST, PUT or PATH request) will be converted to a Python object and\nhow it will be validated. This feature lets you plug in external\nserialization and validation libraries, such as Marshmallow, Colander,\nCerberus, Jsonschema or Voluptuous.</p>\n</li>\n<li><p><strong>Removed</strong>: <tt>morepath.body_model_predicate</tt> is removed from the\nMorepath API together with the <tt>morepath.App.load_json</tt> directive\nand the <tt>morepath.request.body_obj</tt> property.\nIf you use the <tt>load_json</tt> directive, this functionality has been moved\nto a separate <a href=\"https://github.com/morepath/more.body_model\" rel=\"nofollow\">more.body_model</a> package. Use this package instead by\nsubclassing your App from <cite>more.body_model.BodyModelApp</cite>.</p>\n</li>\n<li><p>Uploading huge files lead to excessive memory consumption as the whole body\nwas consumed for no good reason. This is now fixed.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/504\" rel=\"nofollow\">#504</a></p>\n</li>\n<li><p>Fixes link prefix not applying to mounted applications.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/516\" rel=\"nofollow\">#516</a></p>\n</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>0.17 (2016-12-23)</h2>\n<ul>\n<li><strong>Removed</strong>: The class <tt>morepath.ViewRegistry</tt> is gone.</li>\n<li>Upload universal wheels to pypi during release.</li>\n<li>Refactored and simplified implementation of <tt>ConverterRegistry</tt>.</li>\n<li>Bugfix: exception views in mounted apps weren\u2019t looked up correctly\nanymore.</li>\n<li>Adds compatibility with WebOb 1.7.</li>\n<li>Removed extra spaces after the colon in json.\nFor example: {\u201cfoo\u201d: \u201cbar\u201d} is now {\u201cfoo\u201d:\u201dbar\u201d}.</li>\n<li>Morepath now keeps track of what code was used to resolve a path and\na view. You use <a href=\"https://pypi.python.org/pypi/morepath\" rel=\"nofollow\">more.whytool</a> to get a command line tool that\nprovides insight in what code was used for a request.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h2>0.16.1 (2016-10-04)</h2>\n<ul>\n<li>Adjust <tt>setup.py</tt> to require Reg 0.10 and Dectate 0.12, otherwise\nMorepath won\u2019t work properly.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h2>0.16 (2016-10-04)</h2>\n<div id=\"release-highlights\">\n<h3>Release highlights</h3>\n<ul>\n<li><p>A new, cleaner and faster implementation of Reg underlies this\nversion of Morepath. It turns generic functions into methods on the\n<tt>App</tt> class, and removes implicit behavior entirely.</p>\n<p>This has some impact if you used the low-level <tt>function</tt>\ndirective or if you defined your own predicates with the\n<tt>predicate</tt> and <tt>predicate_fallback</tt> directives, see details\nbelow.</p>\n</li>\n<li><p>A new build environment based around virtualenv and pip. We\u2019ve\nremoved the old buildout-based build environment. <tt>doc/developing.rst</tt>\nhas much more.</p>\n</li>\n<li><p>Performance work boosts performance of Morepath significantly.</p>\n</li>\n</ul>\n</div>\n<div id=\"removals-deprecations\">\n<h3>Removals &amp; Deprecations</h3>\n<ul>\n<li><p><strong>Removed</strong>: <tt>morepath.remember_identity</tt> is removed from the\nMorepath API.</p>\n<p>Use</p>\n<pre>request.app.remember_identity(response, request, identity)\n</pre>\n<p>Instead of</p>\n<pre>remember_identity(response, request, identity, lookup=request.lookup)\n</pre>\n</li>\n<li><p><strong>Removed</strong>: <tt>morepath.forget_identity</tt> is removed from the\nMorepath API.</p>\n<p>Use</p>\n<pre>request.app.forget_identity(response, request)\n</pre>\n<p>Instead of</p>\n<pre>morepath.forget_identity(response, request, lookup=request.lookup)\n</pre>\n</li>\n<li><p><strong>Removed</strong> <tt>morepath.settings</tt> is removed from the Morepath API.</p>\n<p>Use the <tt>morepath.App.settings</tt> property instead. You can access\nthis through <tt>app.settings</tt>. You can access this through\n<tt>request.app.settings</tt> if you have the request. The following\ndirectives now get an additional optional first argument called\n<tt>app</tt>: <tt>permission_rule</tt>, <tt>verify_identity</tt>, <tt>dump_json</tt>,\n<tt>load_json</tt>, <tt>link_prefix</tt> and the <tt>variables</tt> function passed\nto the path directive.</p>\n</li>\n<li><p><strong>Removed</strong> <tt>morepath.enable_implicit</tt> and\n<tt>morepath.disable_implicit</tt> are both removed from the Morepath API.</p>\n<p>Morepath now uses generic <em>methods</em> on the application class. The\napplication class determines the context used.</p>\n</li>\n<li><p><strong>Removed</strong> We previously used buildout to install a development\nenvironment for Morepath. We now use pip. See <tt>doc/developing.rst</tt>\nfor details, and also below.</p>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li><p><strong>Breaking change</strong> Dectate used to support the <tt>directive</tt>\npseudo-directive to let you define directives. But this could lead\nto import problems if you forgot to import the module where the\npseudo-directives are defined before using them. In this release we\ndefine the directives directly on the <tt>App</tt> class using the new\n<tt>dectate.directive</tt> mechanism, avoiding this problem.</p>\n<p>If you have code that defines new directives, you have to adjust\nyour code accordingly; see the <a href=\"http://dectate.readthedocs.io/en/latest/changes.html\" rel=\"nofollow\">Dectate changelog</a> for more\ndetails.</p>\n</li>\n<li><p><strong>Breaking change</strong> Previously Morepath used Reg\u2019s dispatch\nfunctions directly, with a mechanism to pass in a <tt>lookup</tt>\nargument to a dispatch function to control the application\ncontext. The lookup was maintained on <tt>App.lookup</tt>. Tests were to\npass the lookup explicitly. Reg also maintained this lookup in a\nthread-local variable, and any dispatch call that did not have a\nexplicit lookup argument passed in used this implicit lookup\ndirectly.</p>\n<p>Reg has undergone a major refactoring which affects Morepath. As a\nresult, Morepath is faster and dispatch code becomes more\nPythonic. The concept of lookup is gone: no more lookup argument,\n<tt>app.lookup</tt> or implicit lookup. Instead, Morepath now makes use\nof dispatch <em>methods</em> on the application. The application itself\nprovides the explicit dispatch context. See <a href=\"https://github.com/morepath/morepath/issues/448\" rel=\"nofollow\">#448</a> for the\ndiscussion leading up to this change.</p>\n<p>Most Morepath application and library projects should continue to\nwork unchanged, but some changes are necessary if you used\nsome advanced features:</p>\n<ul>\n<li><p>If in your code you call a generic function from\n<tt>morepath.generic</tt> directly it won\u2019t work anymore. Call the\nequivalent method on the app instance instead.</p>\n</li>\n<li><p>If you pass through the <tt>lookup</tt> argument explicitly, remove\nthis. Calling the dispatch method on the app instance is enough to\nindicate context.</p>\n</li>\n<li><p>If you defined a generic function in your code, you should move it\nto a <tt>morepath.App</tt> subclass instead and use\n<tt>morepath.dispatch_method</tt> instead of <tt>reg.dispatch</tt>. Using\n<tt>reg.dispatch_method</tt> directly is possible but not recommended:\n<tt>morepath.dispatch_method</tt> includes caching behavior that speeds\nup applications. For example:</p>\n<pre>class MyApp(morepath.App):\n    @morepath.dispatch_method('obj')\n    def my_dispatch(self, obj):\n        pass\n</pre>\n</li>\n<li><p>The <tt>function</tt> directive has been replaced by the <tt>method</tt> directive,\nwhere you indicate the dispatch method on the first argument. For\nexample:</p>\n<pre>@App.method(MyApp.my_dispatch, obj=Foo)\ndef my_dispatch_impl(app, obj):\n    return \"Implementation for Foo\"\n</pre>\n</li>\n<li><p>The <tt>predicate</tt> directive can be used to install new predicates for\ndispatch methods. The first argument should be a reference to the\ndispatch method, for instance:</p>\n<pre>@App.predicate(App.get_view, name='model', default=None,\n               index=ClassIndex)\ndef model_predicate(obj):\n  return obj.__class__\n</pre>\n<p>There is a new public method called <tt>App.get_view</tt> that you can\ninstall view predicates on.</p>\n</li>\n<li><p>The <tt>predicate_fallback</tt> directive gets a reference to the\nmethod too. The decorated function needs to take the same\narguments as the dispatch method; previously it could be a subset.\nSo for example:</p>\n<pre>@App.predicate_fallback(App.get_view, model_predicate)\ndef model_not_found(self, obj, request):\n    raise HTTPNotFound()\n</pre>\n<p>Where <tt>self</tt> refers to the app instance.</p>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"bug-fixes\">\n<h3>Bug fixes</h3>\n<ul>\n<li>Fix code_examples path for doctests with tox.</li>\n</ul>\n</div>\n<div id=\"build-environment\">\n<h3>Build environment</h3>\n<ul>\n<li>We now use virtualenv and pip instead of buildout to set up the\ndevelopment environment. The development documentation has been\nupdated accordingly. Also see issues <a href=\"https://github.com/morepath/morepath/issues/473\" rel=\"nofollow\">#473</a> and <a href=\"https://github.com/morepath/morepath/pull/484\" rel=\"nofollow\">#484</a>.</li>\n<li>Have the manifest file for source distribution include all files\nunder VCS.</li>\n<li>As we reached 100% code coverage for pytest, coveralls integration\nwas replaced by the <tt><span class=\"pre\">--fail-under=100</span></tt> argument of <tt>coverage\nreport</tt> in the tox coverage test.</li>\n</ul>\n</div>\n<div id=\"other\">\n<h3>Other</h3>\n<ul>\n<li>Refactored traject routing code with an eye on performance.</li>\n<li>Use abstract base classes from the standard library for\n<tt>morepath.IdentityPolicy</tt>.</li>\n<li>Reorganize the table of contents of the documentation into a\nhierarchy (<a href=\"https://github.com/morepath/morepath/pull/468\" rel=\"nofollow\">#468</a>).</li>\n<li>Expand the test suite to cover <tt>morepath.Request.reset</tt>, loop\ndetection for deferred class links, dispatching of\n<tt>@App.verify_identity</tt>-decorated functions on the <tt>identity</tt>\nargument (<a href=\"https://github.com/morepath/morepath/issues/464\" rel=\"nofollow\">#464</a>). Coverage ratio is now 100%.</li>\n</ul>\n</div>\n</div>\n<div id=\"id16\">\n<h2>0.15 (2016-07-18)</h2>\n<div id=\"id17\">\n<h3>Removals &amp; Deprecations</h3>\n<ul>\n<li><p><strong>Removed</strong>: <tt>morepath.autosetup</tt> and <tt>morepath.autocommit</tt> are\nboth removed from the Morepath API.</p>\n<p>Use <tt>autoscan</tt>. Also use new explicit <tt>App.commit</tt> method, or\nrely on Morepath automatically committing during the first\nrequest. So instead of:</p>\n<pre>morepath.autosetup()\nmorepath.run(App())\n</pre>\n<p>you do:</p>\n<pre>morepath.autoscan()\nApp.commit()  # optional\nmorepath.run(App())\n</pre>\n</li>\n<li><p><strong>Removed</strong>: the <tt>morepath.security</tt> module is removed, and you cannot\nimport from it anymore. Change imports from it to the public API, so go\nfrom:</p>\n<pre>from morepath.security import NO_IDENTITY\n</pre>\n<p>to:</p>\n<pre>from morepath import NO_IDENTITY\n</pre>\n</li>\n<li><p><strong>Deprecated</strong> <tt>morepath.remember_identity</tt> and\n<tt>morepath.forget_identity</tt> are both deprecated.</p>\n<p>Use the <tt>morepath.App.remember_identity</tt> and\n<tt>morepath.App.forget_identity</tt> methods, respectively.</p>\n<p>Instead of</p>\n<pre>remember_identity(response, request, identity, lookup=request.lookup)\n...\nmorepath.forget_identity(response, request, lookup=request.lookup)\n</pre>\n<p>you do:</p>\n<pre>request.app.remember_identity(response, request, identity)\n...\nrequest.app.forget_identity(response, request)\n</pre>\n</li>\n<li><p><strong>Deprecated</strong> <tt>morepath.settings</tt> is deprecated.</p>\n<p>Use the <tt>morepath.App.settings</tt> property instead.</p>\n</li>\n<li><p><strong>Deprecated</strong> <tt>morepath.enable_implicit</tt> and\n<tt>morepath.disable_implicit</tt> are both deprecated.</p>\n<p>You no longer need to choose between implicit or explicit lookup for\ngeneric functions, as the generic functions that are part of the API\nhave all been deprecated.</p>\n</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>Features</h3>\n<ul>\n<li>Factored out new <tt>App.mounted_app_classes()</tt> class method which\ncan be used to determine the mounted app classes after a\ncommit. This can used to get the argument to <tt>dectate.query_tool</tt>\nif the commit is known to have already been done earlier.</li>\n<li>The <tt>morepath.run</tt> function now takes command-line arguments to\nset the host and port, and is friendlier in general.</li>\n<li>Add <tt>App.init_settings</tt> for pre-filling the settings registry with\na python dictionary. This can be used to load the settings from a\nconfig file.</li>\n<li>Add a <tt>reset</tt> method to the <tt>Request</tt> class that resets it to\nthe state it had when request processing started. This is used by\n<tt>more.transaction</tt> to reset request processing when it retries a\ntransaction.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>Bug fixes</h3>\n<ul>\n<li>Fix a bug where a double slash at the start of a path was not\nnormalized.</li>\n</ul>\n</div>\n<div id=\"cleanups\">\n<h3>Cleanups</h3>\n<ul>\n<li>Cleanups and testing of <tt>reify</tt> functionality.</li>\n<li>More doctests in the narrative documentation.</li>\n<li>A few small performance tweaks.</li>\n<li>Remove unused imports and fix pep8 in core.py.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>Other</h3>\n<ul>\n<li>Add support for Python 3.5 and make it the default Python\nenvironment.</li>\n</ul>\n</div>\n</div>\n<div id=\"id21\">\n<h2>0.14 (2016-04-26)</h2>\n<ul>\n<li><p><strong>New</strong> We have a new chat channel available. You can join us by clicking\nthis link:</p>\n<p><a href=\"https://discord.gg/0xRQrJnOPiRsEANa\" rel=\"nofollow\">https://discord.gg/0xRQrJnOPiRsEANa</a></p>\n<p>Please join and hang out! We are retiring the (empty) Freenode\n#morepath channel.</p>\n</li>\n<li><p><strong>Breaking change</strong>: Move the basic auth policy to\n<tt>more.basicauth</tt> extension extension. Basic auth is just one of\nthe authentication choices you have and not the default. To update\ncode, make your project depend on <tt>more.basicauth</tt> and import\n<tt>BasicAuthIdentityPolicy</tt> from <tt>more.basicauth</tt>.</p>\n</li>\n<li><p><strong>Breaking change</strong>: Remove some exception classes that weren\u2019t\nused: <tt>morepath.error.ViewError</tt>, <tt>morepath.error.ResolveError</tt>.\nIf you try to catch them in your code, just remove the whole\n<tt>except</tt> statement as they were never raised.</p>\n</li>\n<li><p><strong>Deprecated</strong> Importing from <tt>morepath.security</tt> directly. We\nmoved a few things from it into the public API: <tt>enable_implicit</tt>,\n<tt>disable_implicit</tt>, <tt>remember_identity</tt>, <tt>forget_identity</tt>,\n<tt>Identity</tt>, <tt>IdentityPolicy</tt>, <tt>NO_IDENTITY</tt>. Some of these\nwere already documented as importable from <tt>morepath.security</tt>.\nAlthough importing from <tt>morepath.security</tt> won\u2019t break yet, you\nshould stop importing from it and import directly from <tt>morepath</tt>\ninstead.</p>\n</li>\n<li><p><strong>Deprecated</strong> <tt>morepath.autosetup</tt> and <tt>morepath.autocommit</tt>\nare both deprecated.</p>\n<p>Use <tt>autoscan</tt>. Also use new explicit <tt>App.commit</tt> method, or\nrely on Morepath automatically committing during the first\nrequest. So instead of:</p>\n<pre>morepath.autosetup()\nmorepath.run(App())\n</pre>\n<p>you do:</p>\n<pre>morepath.autoscan()\nApp.commit()  # optional\nmorepath.run(App())\n</pre>\n</li>\n<li><p><strong>Breaking change</strong> Extensions that imported <tt>RegRegistry</tt> directly\nfrom <tt>morepath.app</tt> are going to be broken. This kind of import:</p>\n<pre>from morepath.app import RegRegistry\n</pre>\n<p>needs to become:</p>\n<pre>from morepath.directive import RegRegistry\n</pre>\n<p>This change was made to avoid circular imports in Morepath, and\nbecause <tt>App</tt> did not directly depend on <tt>RegRegistry</tt> anymore.</p>\n</li>\n<li><p><strong>Breaking change</strong>: the <tt>variables</tt> function for the <tt>path</tt>\ndirective <em>has</em> to be defined taking a first <tt>obj</tt> argument. In\nthe past it was possible to define a <tt>variables</tt> function that\ntook no arguments. This is now an error.</p>\n</li>\n<li><p>Introduce a new <tt>commit</tt> method on <tt>App</tt> that commits the App\nand also recursively commits all mounted apps. This is more explicit\nthan <tt>autocommit</tt> and less verbose than using the lower-level\n<tt>dectate.commit</tt>.</p>\n</li>\n<li><p>Automatic commit of the app is done during the first request if the\napp wasn\u2019t committed previously. See issue #392.</p>\n</li>\n<li><p>Introduce a deprecation warnings (for <tt>morepath.security</tt>,\n<tt>morepath.autosetup</tt>) and document how a user can deal with such\nwarnings.</p>\n</li>\n<li><p>Adds host header validation to protect against header poisoning attacks.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/271\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/271</a></p>\n<p>You can use <tt>morepath.HOST_HEADER_PROTECTION</tt> in your own tween\nfactory to wrap before or under it.</p>\n</li>\n<li><p>Refactor internals of publishing/view engine. Reg is used more\neffectively for view lookup, order of some parameters is reversed\nfor consistency with public APIs.</p>\n</li>\n<li><p>Document the internals of Morepath, see implementation document.\nThis includes docstrings for all the internal APIs.</p>\n</li>\n<li><p>The framehack module was merged into <tt>autosetup</tt>. Increased\nthe coverage to this module to 100%.</p>\n</li>\n<li><p>New cookiecutter template for Morepath, and added references in the\ndocumentation for it.</p>\n<p>See <a href=\"https://github.com/morepath/morepath-cookiecutter\" rel=\"nofollow\">https://github.com/morepath/morepath-cookiecutter</a></p>\n</li>\n<li><p>Test cleanup; scan in many tests turns out to be superfluous. Issue\n#379</p>\n</li>\n<li><p>Add a test that verifies we can instantiate an app before configuration\nis done. See issue #378 for discussion.</p>\n</li>\n<li><p>Started doctesting some of the docs.</p>\n</li>\n<li><p>Renamed <tt>RegRegistry.lookup</tt> to <tt>RegRegistry.caching_lookup</tt> as\nthe <tt>lookup</tt> property was shadowing a lookup property on\n<tt>reg.Registry</tt>.  This wasn\u2019t causing bugs but made debugging\nharder.</p>\n</li>\n<li><p>Refactored link generation. Introduce a new <tt>defer_class_links</tt>\ndirective that lets you defer link generation using\n<tt>Request.class_link()</tt> in addition to <tt>Request.link()</tt>. This is\nan alternative to <tt>defer_links</tt>, which cannot support\n<tt>Request.class_link</tt>.</p>\n</li>\n<li><p>Morepath now has extension API docs that are useful when you want to\ncreate your own directive and build on one of Morepath\u2019s registries\nor directives.</p>\n</li>\n<li><p>A friendlier <tt>morepath.run</tt> that tells you how to quit it with\n<tt><span class=\"pre\">ctrl-C</span></tt>.</p>\n</li>\n<li><p>A new document describing how to write a test for Morepath-based\napplications.</p>\n</li>\n<li><p>Document how to create a Dectate-based command-line query tool that\nlets you query Morepath directives.</p>\n</li>\n<li><p>Uses the topological sort implementation in Dectate. Sort out a mess\nwhere there were too many <tt>TopologicalSortError</tt> classes.</p>\n</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h2>0.13.2 (2016-04-13)</h2>\n<ul>\n<li>Undid change in 0.13.1 where <tt>App</tt> could not be instantiated if\nnot committed, as ran into real-world code where this assumption\nwas broken.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h2>0.13.1 (2016-04-13)</h2>\n<ul>\n<li><p>Enable queries by the Dectate query tool.</p>\n</li>\n<li><p>Document <tt>scan</tt> function in API docs.</p>\n</li>\n<li><p>Work around an issue in Python where <tt>~</tt> (tilde) is quoted by\n<tt>urllib.quote</tt> &amp; <tt>urllib.encode</tt>, even though it should not be\naccording to the RFC, as <tt>~</tt> is considered unreserved.</p>\n<p><a href=\"https://www.ietf.org/rfc/rfc3986.txt\" rel=\"nofollow\">https://www.ietf.org/rfc/rfc3986.txt</a></p>\n</li>\n<li><p>Document some tricks you can do with directives in a new \u201cDirective\ntricks\u201d document.</p>\n</li>\n<li><p>Refactor creation of tweens into function on TweenRegistry.</p>\n</li>\n<li><p>Update the REST document; it was rather old and made no mention of\n<tt>body_model</tt>.</p>\n</li>\n<li><p>Bail out with an error if an App is instantiated without being\ncommitted.</p>\n</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h2>0.13 (2016-04-06)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. Morepath has a new, extensively refactored\nconfiguration system based on <a href=\"http://dectate.readthedocs.org\" rel=\"nofollow\">dectate</a> and <a href=\"http://importscan.readthedocs.org\" rel=\"nofollow\">importscan</a>. Dectate is\nan extracted, and heavily refactored version of Morepath\u2019s\nconfiguration system that used to be in <tt>morepath.config</tt>\nmodule. It\u2019s finally documented too!</p>\n<p>Dectate and thus Morepath does not use Venusian (or Venusifork)\nanymore so that dependency is gone.</p>\n<p>Code that uses <tt>morepath.autosetup</tt> should still work.</p>\n<p>Code that uses <tt>morepath.setup</tt> and scans and commits manually\nneeds to change. Change this:</p>\n<pre>from morepath import setup\n\nconfig = morepath.setup()\nconfig.scan(package)\nconfig.commit()\n</pre>\n<p>into this:</p>\n<pre>import morepath\n\nmorepath.scan(package)\nmorepath.autocommit()\n</pre>\n<p>Similarly <tt>config.scan()</tt> without arguments to scan its own\npackage needs to be rewritten to use <tt>morepath.scan()</tt> without\narguments.</p>\n<p>Anything you import directly now does not need to be scanned\nanymore; the act of importing a module directly registers the\ndirectives with Morepath, though as before they won\u2019t be active\nuntil you commit. But scanning something you\u2019ve imported before\nwon\u2019t do any harm.</p>\n<p>The signature for <tt>morepath.scan</tt> is somewhat different than that\nof the old <tt>config.scan</tt>. There is no third argument\n<tt>recursive=True</tt> anymore. The <tt>onerror</tt> argument has been\nrenamed to <tt>handle_error</tt> and has different behavior; the\n<a href=\"http://importscan.readthedocs.org\" rel=\"nofollow\">importscan</a> documentation describes the details.</p>\n<p>If you were writing tests that involve Morepath, the old structure of\nthe test was:</p>\n<pre>import morepath\n\ndef test_foo():\n    config = morepath.setup()\n\n    class App(morepath.App):\n        testing_config = config\n\n    ... use directives on App ...\n\n    config.commit()\n\n    ... do asserts ...\n</pre>\n<p>This now needs to change to:</p>\n<pre>import morepath\n\ndef test_foo():\n    class App(morepath.App):\n        pass\n\n    ... use directives on App ...\n\n    morepath.commit([App])\n\n    ... do asserts ...\n</pre>\n<p>So, you need to use the <tt>morepath.commit()</tt> function and give it a\nlist of the application objects you want to commit,\nexplicitly. <tt>morepath.autocommit()</tt> won\u2019t work in the context of a\ntest.</p>\n<p>If you used a test that scanned code you need to adjust it too, from:</p>\n<pre>import morepath\nimport some_package\n\ndef test_foo():\n    config = morepath.setup()\n\n    config.scan(some_package)\n\n    config.commit()\n\n    ... do asserts ...\n</pre>\n<p>to this:</p>\n<pre>import morepath\nimport some_package\n\ndef test_foo():\n    morepath.scan(some_package)\n    morepath.commit([some_package.App])\n\n    ... do asserts ...\n</pre>\n<p>Again you need to be explicit and use <tt>morepath.commit</tt> to commit\nthose apps you want to test.</p>\n<p>If you had a low-level reference to <tt>app.registry</tt> in your code it\nwill break; the registry has been split up and is now under\n<tt>app.config</tt>. If you want access to <tt>lookup</tt> you can use\n<tt>app.lookup</tt>.</p>\n<p>If you created custom directives, the way to create directives\nis now documented as part of the <a href=\"http://dectate.readthedocs.org\" rel=\"nofollow\">dectate</a> project. The main updates you\nneed to do are:</p>\n<ul>\n<li><p>subclass from <cite>dectate.Action</cite> instead of <cite>morepath.Directive</cite>.</p>\n</li>\n<li><p>no more <tt>app</tt> first argument.</p>\n</li>\n<li><p>no <tt>super</tt> call is needed anymore in <tt>__init__</tt>.</p>\n</li>\n<li><p>add a <tt>config</tt> class variable to declare the registries\nyou want to affect. Until we break up the main registry this\nis:</p>\n<pre>from morepath.app import Registry\n\n...\nconfig = { 'registry': Registry }\n</pre>\n</li>\n<li><p>reverse the arguments to <tt>perform</tt>, so that the object\nbeing registered comes first. So change:</p>\n<pre>def perform(self, registry, obj):\n   ...\n</pre>\n<p>into:</p>\n<pre>def perform(self, obj, registry):\n   ...\n</pre>\n<p>But instead of <tt>registry</tt> use the registry you set up in your\naction\u2019s <tt>config</tt>.</p>\n</li>\n<li><p>no more <tt>prepare</tt>. Do error checking inside the <tt>perform</tt>\nmethod and raise a <tt>DirectiveError</tt> if something is wrong.</p>\n<p>If you created sub-actions from <tt>prepare</tt>, subclass from\n<cite>dectate.Composite</cite> instead and implement an <tt>actions</tt> method.</p>\n</li>\n<li><p><tt>group_key</tt> method has changed to <tt>group_class</tt> class variable.</p>\n</li>\n</ul>\n<p>If you were using <tt>morepath.sphinxext</tt> to document directives\nusing Sphinx autodoc, use <tt>dectate.sphinxext</tt> instead.</p>\n</li>\n<li><p><strong>Breaking change</strong> If you want to use Morepath directives on\n<tt>@staticmethod</tt>, you need to change the order in which these are\napplied. In the past:</p>\n<pre>@App.path(model=Foo, path='bar')\n@staticmethod\ndef get_foo():\n    ....\n</pre>\n<p>But now you need to write:</p>\n<pre>@staticmethod\n@App.path(model=Foo, path='bar')\ndef get_foo():\n    ....\n</pre>\n</li>\n<li><p><strong>Breaking change</strong> You cannot use a Morepath <tt>path</tt> directive on\na <tt>@classmethod</tt> directly anymore. Instead you can do this:</p>\n<pre>class Foo(object):\n    @classmethod\n    def get_something():\n        pass\n\n@App.path('/', model=Something)(Foo.get_something)\n</pre>\n</li>\n<li><p><strong>Breaking change</strong>. Brought <cite>app.settings</cite> back, a shortcut to the\nsettings registry. If you use settings, you need to replace any\nreferences to <tt>app.registry.settings</tt> to <tt>app.settings</tt>.</p>\n</li>\n<li><p>Add <cite>request.class_link</cite>. This lets you link using classes instead\nof instances as an optimization. In some cases instantiating an\nobject just so you can generate a link to it is relatively\nexpensive. In that case you can use <cite>request.class_link</cite>\ninstead. This lets you link to a model class and supply a\n<cite>variables</cite> dictionary manually.</p>\n</li>\n<li><p><strong>Breaking change</strong>. In Morepath versions before this there was an\nclass attribute on <tt>App</tt> subclasses called <tt>registry</tt>. This was\na giant mixed registry which subclassed a lot of different\nregistries used by Morepath (reg registry, converter registry,\ntraject registry, etc). The Dectate configuration system allows us\nto break this registry into a lot of smaller interdependent registries\nthat are configured in the <tt>config</tt> of the directives.</p>\n<p>While normally you shouldn\u2019t be, if you were somehow relying on\n<tt>App.registry</tt> in your code you should now rewrite it to use\n<tt>App.config.reg_registry</tt>, <tt>App.config.setting_registry</tt>,\n<tt>App.config.path_registry</tt> etc.</p>\n</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h2>0.12 (2016-01-27)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. The <tt>request.after</tt> function is now called even if\nthe response was directly created by the view (as opposed to the view\nreturning a value to be rendered by morepath). Basically, <tt>request.after</tt>\nis now guaranteed to be called if the response\u2019s HTTP status code lies within\nthe 2XX-3XX range.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/346\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/346</a></p>\n</li>\n<li><p>Fixed a typo in the <cite>defer_link</cite> documentation.</p>\n</li>\n<li><p>Morepath\u2019s link generation wasn\u2019t properly quoting paths and\nparameters in all circumstances where non-ascii characters or\nURL-quoted characters were used. See issue #337.</p>\n</li>\n<li><p>Morepath could not handle varargs or keyword arguments properly\nin path functions. Now bails out with an error early during\nconfiguration time. To fix existing code, get rid of any <tt>*args</tt> or\n<tt>**kw</tt>.</p>\n</li>\n<li><p>Morepath could not properly generate links if a path directive\ndefines a path variable for the path but does not actually use it in\nthe path function. Now we complain during configuration time. To fix\nexisting code, add all variables that are defined in the path\n(i.e. <tt>{id}</tt>) to the function signature.</p>\n</li>\n<li><p>Certain errors (<tt>ConfigError</tt>) were not reporting directive line number\ninformation. They now do.</p>\n</li>\n<li><p>Better <tt>ConfigError</tt> reporting when <tt>setting_section</tt> is in use.</p>\n</li>\n<li><p>Removed the unused <tt>request</tt> parameter from the <tt>link</tt> method in\n<tt>morepath.request</tt>. See issue #351.</p>\n</li>\n<li><p>Require venusifork 2.0a3. This is a hacked version which works around\nsome unusual compatibility issues with <tt>six</tt>.</p>\n</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h2>0.11.1 (2015-06-29)</h2>\n<ul>\n<li>setuptools has the nasty habit to change underscores in project\nnames to minus characters. This broke the new autoscan machinery for\npackages with an underscore in their name (such as\n<cite>morepath_sqlalchemy</cite>). This was fixed.</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h2>0.11 (2015-06-29)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. The <tt>morepath.autoconfig</tt> and <tt>morepath.autosetup</tt>\nmethods had to be rewritten. Before, Morepath was unable to autoload packages\ninstalled using <tt>pip</tt>.</p>\n<p>As a result, Morepath won\u2019t be able to autoload packages if the setup.py\nname differs from the name of the distributed package or module.</p>\n<p>For example: A package named <tt><span class=\"pre\">my-app</span></tt> containing a module named <tt>myapp</tt>\nwon\u2019t be automatically loaded anymore.</p>\n<p>Packages like this need to be loaded manually now:</p>\n<pre>import morepath\nimport myapp\n\nconfig = morepath.setup()\nconfig.scan(myapp)\nconfig.commit()\n</pre>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/319\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/319</a></p>\n</li>\n<li><p>The <tt>config.scan</tt> method now excludes \u2018test\u2019 and \u2018tests\u2019 directories\nby default.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/326\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/326</a></p>\n</li>\n<li><p>The <tt>template_directory</tt> directive will no longer inspect the current\nmodule if the template directory refers to an absolute path. This makes it\neasier to write tests where the current module might not be available.</p>\n<p>Fixes <a href=\"https://github.com/morepath/morepath/issues/299\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/299</a></p>\n</li>\n<li><p>The <tt>identity_policy</tt> passes <tt>settings</tt> to the function if it\ndefines such an argument. This way an identity policy can be created\nthat takes settings into account.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/309\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/309</a></p>\n</li>\n<li><p>Dots in the request path are now always normalized away. Before, Morepath\nbasically relied on the client to do this, which was a potential security\nissue.</p>\n<p>See <a href=\"https://github.com/morepath/morepath/issues/329\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/329</a></p>\n</li>\n<li><p>Additional documentation on the Morepath config system:\n<a href=\"http://morepath.readthedocs.org/en/latest/configuration.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/configuration.html</a></p>\n</li>\n<li><p>Additional documentation on how to serve static images in\n<a href=\"https://morepath.readthedocs.org/en/latest/more.static.html\" rel=\"nofollow\">https://morepath.readthedocs.org/en/latest/more.static.html</a></p>\n</li>\n<li><p>Move undocumented <tt>pdb</tt> out of <tt>__init__.py</tt> as it could\nsometimes trip up things. Instead documented it in the API docs in\nthe special <cite>morepath.pdbsupport</cite> module.</p>\n<p><a href=\"https://github.com/morepath/morepath/issues/328\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/328</a></p>\n</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h2>0.10 (2015-04-09)</h2>\n<ul>\n<li><p>Server-side templating language support: there is now a <tt>template</tt>\nargument for the <tt>html</tt> directive (and <tt>view</tt> and <tt>json</tt>).\nYou need to use a plugin to add particular template languages to\nyour project, such as <tt>more.chameleon</tt> and <tt>more.jinja2</tt>, but\nyou can also add your own.</p>\n<p>See <a href=\"http://morepath.readthedocs.org/en/latest/templates.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/templates.html</a></p>\n</li>\n<li><p>Add a new \u201cA Review of the Web\u201d document to the docs to show how\nMorepath fits within the web.</p>\n<p><a href=\"http://morepath.readthedocs.org/en/latest/web.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/web.html</a></p>\n</li>\n<li><p>The publisher does not respond to a <tt>None</tt> render function\nanymore. Instead, the <tt>view</tt> directive now uses a default\n<tt>render_view</tt> if <tt>None</tt> is configured. This simplifies the\npublisher guaranteeing a <tt>render</tt> function always exists.</p>\n<p>Fixes <a href=\"https://github.com/morepath/morepath/issues/283\" rel=\"nofollow\">https://github.com/morepath/morepath/issues/283</a></p>\n</li>\n<li><p>Introduce a <tt>request.resolve_path</tt> method that allows you to resolve\npaths to objects programmatically.</p>\n</li>\n<li><p>Modify <tt>setup.py</tt> to use <tt>io.open</tt> instead of <tt>open</tt> to\ninclude the README and the CHANGELOG and hardcode UTF-8 so it works\non all versions of Python with all default encodings.</p>\n</li>\n<li><p>Various documentation fixes.</p>\n</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h2>0.9 (2014-11-25)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. In previous releases of Morepath, Morepath did\nnot include the full hostname in generated links (so <tt>/a</tt> instead\nof <tt><span class=\"pre\">http://example.com/a</span></tt>). Morepath 0.9 does include the full\nhostname in generated links by default. This to support the\nnon-browser client use case better. In the previous system without\nfully qualified URLs, client code needs to manually add the base of\nlinks itself in order to be able to access them. That makes client\ncode more complicated than it should be. To make writing such client\ncode as easy as possible Morepath now generates complete URLs.</p>\n<p>This should not break any code, though it can break tests that rely\non the previous behavior. To fix <tt>webtest</tt> style tests, prefix\nthe expected links with <tt><span class=\"pre\">http://localhost/</span></tt>.</p>\n<p>If for some reason you want the old behavior back in an application,\nyou can use the <tt>link_prefix</tt> directive:</p>\n<pre>@App.link_prefix()\ndef my_link_prefix(request):\n    return '' # prefix nothing again\n</pre>\n</li>\n<li><p>Directives are now logged to the <tt>morepath.directive</tt> log, which\nis using the standard Python <tt>logging</tt> infrastructure. See\n<a href=\"http://morepath.readthedocs.org/en/latest/logging.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/logging.html</a></p>\n</li>\n<li><p>Document <tt>more.forwarded</tt> proxy support in\n<a href=\"http://morepath.readthedocs.org/en/latest/paths_and_linking.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/paths_and_linking.html</a></p>\n</li>\n<li><p>Document behavior of <tt>request.after</tt> in combination with directly\nreturning a response object from a view.</p>\n</li>\n<li><p>Expose <tt>body_model_predicate</tt> to the public Morepath API. You\ncan now say your predicate comes after it.</p>\n</li>\n<li><p>Expose <tt>LAST_VIEW_PREDICATE</tt> to the Morepath API. This is the last\npredicate defined by the Morepath core.</p>\n</li>\n<li><p>Update the predicate documentation.</p>\n</li>\n<li><p>Updated the more.static doc to reflect changes in it.</p>\n</li>\n<li><p>Fix doc for grouping views with the <tt>with</tt> statement.</p>\n</li>\n<li><p>Suggest a few things to try when your code doesn\u2019t appear to be\nscanned properly.</p>\n</li>\n<li><p>A new view predicate without a fallback resulted in an internal\nserver error if the predicate did not match. Now it results in a 404\nNot Found by default. To override this default, define a predicate\nfallback.</p>\n</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h2>0.8 (2014-11-13)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. Reg 0.9 introduces a new, more powerful\nway to create dispatch functions, and this has resulted in\na new, incompatible Reg API.</p>\n<p>Morepath has been adjusted to make use of the new Reg. This won\u2019t\naffect many Morepath applications, and they should be able to\ncontinue unchanged. But some Morepath extensions and advanced\napplications may break, so you should be aware of the changes.</p>\n<ul>\n<li><p>The <tt>@App.function</tt> directive has changed from this:</p>\n<pre>class A(object):\n    pass\n\nclass B(object):\n    pass\n\n@reg.generic\ndef dispatch_function(a, b):\n    pass\n\n@App.function(dispatch_function, A, B)\ndef dispatched_to(a, b):\n    return 'dispatched to A and B'\n</pre>\n<p>to this:</p>\n<pre>class A(object):\n    pass\n\nclass B(object):\n    pass\n\n@reg.dispatch('a', 'b')\ndef dispatch_function(a, b):\n    pass\n\n@App.function(dispatch_function, a=A, b=B)\ndef dispatched_to(a, b):\n    return 'dispatched to A and B'\n</pre>\n<p>The new system in Reg (see its <a href=\"http://reg.readthedocs.org\" rel=\"nofollow\">docs</a>) is a lot more flexible than\nwhat we had before. When you use <tt>function</tt> you don\u2019t need to\nknow about the order of the predicates anymore \u2013 this is\ndetermined by the arguments to <tt>@reg.dispatch()</tt>. You can now\nalso have function arguments that Reg ignores for dispatch.</p>\n</li>\n<li><p>The <tt>@App.predicate</tt> and <tt>@App.predicate_fallback</tt> directive\nhave changed. You can now install custom predicates and fallbacks\nfor <em>any</em> generic function that\u2019s marked with\n<tt>@reg.dispatch_external_predicates()</tt>. The Morepath view code\nhas been simplified to be based on this, and is also more powerful\nas it can now be extended with new predicates that use\npredicate-style dispatch.</p>\n</li>\n</ul>\n</li>\n<li><p>Introduce the <tt>body_model</tt> predicate for views. You can give it\nthe class of the <tt>request.body_obj</tt> you want to handle with this\nview. In combination with the <tt>load_json</tt> directive this allows\nyou to write views that respond only to the POSTing or PUTing of a\ncertain type of object.</p>\n</li>\n<li><p>Internals refactoring: we had a few potentially overridable dispatch\nfunctions in <tt>morepath.generic</tt> that actually were never\noverridden in any directives. Simplify this by moving their\nimplementation into <tt>morepath.publish</tt> and\n<tt>morepath.request</tt>. <tt>generic.link</tt>, <tt>generic.consume</tt> and\n<tt>generic.response</tt> are now gone.</p>\n</li>\n<li><p>Introduce a <tt>link_prefix</tt> directive that allows you to set the\nURL prefix used by every link generated by the request.</p>\n</li>\n<li><p>A bug fix in <tt>request.view()</tt>; the <tt>lookup</tt> on the <tt>request</tt>\nwas not properly updated.</p>\n</li>\n<li><p>Another bug fix in <tt>request.view()</tt>; if <tt>deferred_link_app</tt> app\nis used, <tt>request.app</tt> should be adjusted to the app currently\nbeing deferred to.</p>\n</li>\n<li><p><tt>request.after</tt> behavior is clarified: it does not run for any\nexceptions raised during the handling of the request, only for the\n\u201cproper\u201d response. Fix a bug where it <em>did</em> sometimes run.</p>\n</li>\n<li><p>Previously if you returned <tt>None</tt> for a path in a <tt>variables</tt>\nfunction for a path, you would get a path with <tt>None</tt> in it. Now\nit is a <tt>LinkError</tt>.</p>\n</li>\n<li><p>If you return a non-dict for <tt>variables</tt> for a path, you get a proper\n<tt>LinkError</tt> now.</p>\n</li>\n<li><p>One test related to defer_links did not work correctly in Python 3. Fixed.</p>\n</li>\n<li><p>Add API doc for <tt>body_obj</tt>. Also fix JSON and objects doc to talk\nabout <tt>request.body_obj</tt> instead of <tt>request.obj</tt>.</p>\n</li>\n<li><p>Extend API docs for security: detail the API an identity policy\nneeds to implement and fix a few bugs.</p>\n</li>\n<li><p>Fix ReST error in API docs for <tt>autoconfig</tt> and <tt>autosetup</tt>.</p>\n</li>\n<li><p>Fix a few ReST links to the API docs in the app reuse document.</p>\n</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h2>0.7 (2014-11-03)</h2>\n<ul>\n<li><p><strong>Breaking change</strong>. There has been a change in the way the mount\ndirective works. There has also been a change in the way linking\nbetween application works. The changes result in a simpler, more\npowerful API and implementation.</p>\n<p>The relevant changes are:</p>\n<ul>\n<li><p>You can now define your own custom <tt>__init__</tt> for\n<tt>morepath.App</tt> subclasses. Here you can specify the arguments\nwith which your application object should be mounted. The previous\n<tt>variables</tt> class attribute is now ignored.</p>\n<p>It\u2019s not necessary to use <tt>super()</tt> when you subclass from\n<tt>morepath.App</tt> directly.</p>\n<p>So, instead of this:</p>\n<pre>class MyApp(morepath.App):\n    variables = ['mount_id']\n</pre>\n<p>You should now write this:</p>\n<pre>class MyApp(morepath.App):\n    def __init__(self, mount_id):\n        self.mount_id = mount_id\n</pre>\n</li>\n<li><p>The <tt>mount</tt> directive should now return an <em>instance</em> of the\napplication being mounted, not a dictionary with mount\nparameters. The application is specified using the <tt>app</tt>\nargument to the directive. So instead of this:</p>\n<pre>@RootApp.mount(app=MyApp, path='sub/{id}')\ndef mount_sub(id):\n    return {\n       'mount_id': id\n    }\n</pre>\n<p>You should now use this:</p>\n<pre>@RootApp.mount(app=MyApp, path='sub/{id}')\ndef mount_sub(id):\n    return MyApp(mount_id=id)\n</pre>\n</li>\n<li><p>The <tt>mount</tt> directive now takes a <tt>variables</tt> argument. This\nworks like the <tt>variables</tt> argument to the <tt>path</tt>\ndirective and is used to construct links.</p>\n<p>It is given an instance of the app being mounted, and it should\nreconstruct those variables needed in its path as a dictionary. If\nomitted, Morepath tries to get them as attributes from the\napplication instance, just like it tries to get attributes of any\nmodel instance.</p>\n<p><tt>MyApp</tt> above is a good example of where this is required: it\ndoes store the correct information, but as the <tt>mount_id</tt>\nattribute, not the <tt>id</tt> attribute. You should add a <tt>variables</tt>\nargument to the <tt>mount</tt> directive to explain to Morepath how\nto obtain <tt>id</tt>:</p>\n<pre>@RootApp.mount(app=MyApp, path='sub/{id}',\n               variables=lambda app: dict(id=app.mount_id))\ndef mount_sub(id):\n    return MyApp(mount_id=id)\n</pre>\n<p>The simplest way to avoid having to do this is to name the\nattributes the same way as the variables in the paths, just like\nyou can do for model classes.</p>\n</li>\n<li><p>In the past you\u2019d get additional mount context variables as extra\nvariables in the function decorated by the <tt>path</tt> decorator.\nThis does not happen anymore. Instead you can add a special\n<tt>app</tt> parameter to this function. This gives you access to the\ncurrent application object, and you can extract its attributes\nthere.</p>\n<p>So instead of this:</p>\n<pre>@MyApp.path(path='models/{id}', model=Model)\ndef get_root(mount_id, id):\n    return Model(mount_id, id)\n</pre>\n<p>where <tt>mount_id</tt> is magically retrieved from the way <tt>MyApp</tt> was\nmounted, you now write this:</p>\n<pre>@MyApp.path(path='models/{id}', model=Model)\ndef get_root(app, id):\n    return Model(app.mount_id, id)\n</pre>\n</li>\n<li><p>There was an <tt>request.mounted</tt> attribute. This was a special an\ninstance of a special <tt>Mounted</tt> class. This <tt>Mounted</tt> class is\nnow gone \u2013 instead mounted applications are simply instances of\ntheir class. To access the currently mounted application, use\n<tt>request.app</tt>.</p>\n</li>\n<li><p>The <tt>Request</tt> object had <tt>child</tt> and <tt>sibling</tt> methods as\nwell as a <tt>parent</tt> attribute to navigate to different \u201clink\nmakers\u201d.  You\u2019d navigate to the link maker of an application in\norder to create links to objects in that application. These are\nnow gone. Instead you can do this navigation from the application\nobject directly, and instead of link makers, you get application\ninstances. You can pass an application instance as a special\n<tt>app</tt> argument to <tt>request.link</tt> and <tt>request.view</tt>.</p>\n<p>So instead of this:</p>\n<pre>request.child(foo).link(obj)\n</pre>\n<p>You now write this:</p>\n<pre>request.link(obj, app=request.app.child(foo))\n</pre>\n<p>And instead of this:</p>\n<pre>request.parent.link(obj)\n</pre>\n<p>You now write this:</p>\n<pre>request.link(obj, app=request.app.parent)\n</pre>\n<p>Note that the new <tt>defer_links</tt> directive can be used to\nautomate this behavior for particular models.</p>\n</li>\n<li><p>The <tt>.child</tt> method on <tt>App</tt> can the app class as well as the\nparameters for the function decorated by the <tt>mount</tt> directive:</p>\n<pre>app.child(MyApp, id='foo')\n</pre>\n<p>This can also be done by name. So, assuming <tt>MyApp</tt> was mounted\nunder <tt>my_app</tt>:</p>\n<pre>app.child('my_app', id='foo')\n</pre>\n<p>This is how <tt>request.child</tt> worked already.</p>\n<p>As an alternative you can now instead pass an app <em>instance</em>:</p>\n<pre>app.child(MyApp(mount_id='foo'))\n</pre>\n<p>Unlike the other ways to get the child, this takes the parameters\nneed to create the app instance, as opposed to taking the\nparameters under which the app was mounted.</p>\n</li>\n</ul>\n<p>Motivation behind these changes:</p>\n<p>Morepath used to have a <tt>Mount</tt> class separate from the <tt>App</tt>\nclasses you define. Since Morepath 0.4 application objects became\nclasses, and it made sense to make their instances the same as the\nmounted application. This unification has now taken place.</p>\n<p>It then also made sense to use its navigation methods (<tt>child</tt> and\nfriend) to navigate the mount tree, instead of using the rather\ncomplicated \u201clink maker\u201d infrastructure we had before.</p>\n<p>This change simplifies the implementation of mounting considerably,\nwithout taking away features and actually making the APIs involved\nmore clear. This simplification in turn made it easier to implement\nthe new <tt>defer_links</tt> directive.</p>\n</li>\n<li><p><strong>Breaking change</strong>. The arguments to the <tt>render</tt> function have\nchanged. This is a function you can pass to a view directive.  The\nrender function now takes a second argument, the request. You need\nto update your render functions to take this into account. This only\naffects code that supplies an explicit <tt>render</tt> function to the\n<tt>view</tt>, <tt>json</tt> and <tt>html</tt> directives, and since not a lot of\nthose functions exist, the impact is expected to be minimal.</p>\n</li>\n<li><p><strong>Breaking change</strong>. In certain circumstances it was useful to\naccess the settings through an application instance using\n<tt>app.settings</tt>. This does not work anymore; access the settings\nthrough <tt>app.registry.settings</tt> instead.</p>\n</li>\n<li><p><tt>dump_json</tt> and <tt>load_json</tt> directives. This lets you\nautomatically convert an object going to a response to JSON, and\nconverts JSON coming in as a request body from JSON to an\nobject. See <a href=\"http://morepath.readthedocs.org/en/latest/json.html\" rel=\"nofollow\">http://morepath.readthedocs.org/en/latest/json.html</a> for\nmore information.</p>\n</li>\n<li><p><tt>defer_links</tt> directive. This directive can be used to declare\nthat a particular mounted application takes care of linking to\ninstances of a class. Besides deferring <tt>request.link()</tt> it will\nalso defer <tt>request.view</tt>. This lets you combine applications with\nmore ease. By returning <tt>None</tt> from it you can also defer links to\nthis app\u2019s parent app.</p>\n</li>\n<li><p><tt>app.ancestors()</tt> method and <tt>app.root</tt> attribute. These can be\nused for convenient access to the ancestor apps of a mounted\napplication. To access from the request, use <tt>request.app.root</tt>\nand <tt>request.app.ancestors()</tt>.</p>\n</li>\n<li><p>The <tt>App</tt> class now has a <tt>request_class</tt> class attribute. This\ndetermines the class of the request that is created and can be\noverridden by subclasses. <tt>more.static</tt> now makes use of this.</p>\n</li>\n<li><p>Several generic functions that weren\u2019t really pulling their weight\nare now gone as part of the mount simplification:\n<tt>generic.context</tt> and <tt>generic.traject</tt> are not needed anymore,\nalong with <tt>generic.link_maker</tt>.</p>\n</li>\n<li><p>Change documentation to use uppercase class names for App classes\neverywhere. This reflects a change in 0.4 and should help clarity.</p>\n</li>\n<li><p>Added documentation about auto-reloading Morepath during development.</p>\n</li>\n<li><p>No longer silently suppress ImportError during scanning: this can\nhide genuine <tt>ImportError</tt> in the underlying code.</p>\n<p>We were suppressing <tt>ImportError</tt> before as it can be triggered\nby packages that rely on optional dependencies.</p>\n<p>This is a common case in the <tt>.tests</tt> subdirectory of a package\nwhich may import a test runner like <tt>pytest</tt>. <tt>pytest</tt> is only a\ntest dependency of the package and not a mainline dependencies, and\nthis can break scanning. To avoid this problem, Morepath\u2019s autosetup\nand autoconfig now automatically ignore <tt>.tests</tt> and <tt>.test</tt>\nsub-packages.</p>\n<p>Enhanced the API docs for <tt>autosetup</tt> and <tt>autoconfig</tt> to describe\nscenarios which can generate legitimate <tt>ImportError</tt> exceptions\nand how to handle them.</p>\n</li>\n<li><p>Fix of examples in tween documentation.</p>\n</li>\n<li><p>Minor improvement in docstrings.</p>\n</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h2>0.6 (2014-09-08)</h2>\n<ul>\n<li><p>Fix documentation on the <tt>with</tt> statement; it was not using the local\n<tt>view</tt> variable correctly.</p>\n</li>\n<li><p>Add #morepath IRC channel to the community docs.</p>\n</li>\n<li><p>Named mounts. Instead of referring to the app class when\nconstructing a link to an object in an application mounted\nelsewhere, you can put in the name of the mount. The name of the\nmount can be given explicitly in the mount directive but defaults to\nthe mount path.</p>\n<p>This helps when an application is mounted several times and needs to\ngenerate different links depending on where it\u2019s mounted; by\nreferring to the application by name this is loosely coupled and\nwill work no matter what application is mounted under that name.</p>\n<p>This also helps when linking to an application that may or may not\nbe present; instead of doing an import while looking for\n<tt>ImportError</tt>, you can try to construct the link and you\u2019ll get a\n<tt>LinkError</tt> exception if the application is not there. Though this\nstill assumes you can import the model class of what you\u2019re linking\nto.</p>\n<p>(see issue #197)</p>\n</li>\n<li><p>Introduce a <tt>sibling</tt> method on Request. This combines the\n<tt>.parent.child</tt> step in one for convenience when you want to\nlink to a sibling app.</p>\n</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h2>0.5.1 (2014-08-28)</h2>\n<ul>\n<li>Drop usage of sphinxcontrib.youtube in favor of raw HTML embedding,\nas otherwise too many things broke on readthedocs.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h2>0.5 (2014-08-28)</h2>\n<ul>\n<li><p>Add <tt>more.static</tt> documentation on local components.</p>\n</li>\n<li><p>Add links to youtube videos on Morepath: the keynote at PyCon DE\n2013, and the talk on Morepath at EuroPython 2014.</p>\n</li>\n<li><p>Add a whole bunch of extra code quality tools to buildout.</p>\n</li>\n<li><p><tt>verify_identity</tt> would be called even if no identity could be\nestablished. Now skip calling <tt>verify_identity</tt> when we already\nhave <tt>NO_IDENTITY</tt>. See issue #175.</p>\n</li>\n<li><p>Fix issue #186: mounting an app that is absorbing paths could\nsometimes generate the wrong link. Thanks to Ying Zhong for the bug\nreport and test case.</p>\n</li>\n<li><p>Upgraded to a newer version of Reg (0.8) for <tt>@reg.classgeneric</tt>\nsupport as well as performance improvements.</p>\n</li>\n<li><p>Add a note in the documentation on how to deal with URL parameters\nthat are not Python names (such as <tt>foo@</tt>, or <tt>blah[]</tt>). You can\nuse a combination of <tt>extra_parameters</tt> and <tt>get_converters</tt> to\nhandle them.</p>\n</li>\n<li><p>Document the use of the <tt>with</tt> statement for directive\nabbreviation (see the Views document).</p>\n</li>\n<li><p>Created a mailing list:</p>\n<p><a href=\"https://groups.google.com/forum/#!forum/morepath\" rel=\"nofollow\">https://groups.google.com/forum/#!forum/morepath</a></p>\n<p>Please join!</p>\n<p>Add a new page on community to document this.</p>\n</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h2>0.4.1 (2014-07-08)</h2>\n<ul>\n<li>Compatibility for Python 3. I introduced a meta class in Morepath\n0.4 and Python 3 did not like this. Now the tests pass again in\nPython 3.</li>\n<li>remove <tt>generic.lookup</tt>, unused since Morepath 0.4.</li>\n<li>Increase test coverage back to 100%.</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h2>0.4 (2014-07-07)</h2>\n<ul>\n<li><p><strong>BREAKING CHANGE</strong> Move to class-based application registries. This\nbreaks old code and it needs to be updated. The update is not\ndifficult and amounts to:</p>\n<ul>\n<li>subclass <tt>morepath.App</tt> instead of instantiating it to create a\nnew app. Use subclasses for extension too.</li>\n<li>To get a WSGI object you can plug into a WSGI server, you need to\ninstantiate the app class first.</li>\n</ul>\n<p>Old way:</p>\n<pre>app = morepath.App()\n</pre>\n<p>So, the <tt>app</tt> object that you use directives on is an\ninstance. New way:</p>\n<pre>class app(morepath.App):\n    pass\n</pre>\n<p>So, now it\u2019s a class. The directives look the same as before, so this\nhasn\u2019t changed:</p>\n<pre>@app.view(model=Foo)\ndef foo_default(self, request):\n   ...\n</pre>\n<p>To extend an application with another one, you used to have to pass\nthe <tt>extends</tt> arguments. Old way:</p>\n<pre>sub_app = morepath.App(extends=[core_app])\n</pre>\n<p>This has now turned into subclassing. New way:</p>\n<pre>class sub_app(core_app):\n    pass\n</pre>\n<p>There was also a <tt>variables</tt> argument to specify an application\nthat can be mounted. Old way:</p>\n<pre>app = morepath.App(variables=['foo'])\n</pre>\n<p>This is now a class attribute. New way:</p>\n<pre>class app(morepath.App):\n    variables = ['foo']\n</pre>\n<p>The <tt>name</tt> argument to help debugging is gone; we can look at the\nclass name now. The <tt>testing_config</tt> argument used internally in\nthe Morepath tests has also become a class attribute.</p>\n<p>In the old system, the application object was both configuration\npoint and WSGI object. Old way:</p>\n<pre>app = morepath.App()\n\n# configuration\n@app.path(...)\n...\n\n# wsgi\nmorepath.run(app)\n</pre>\n<p>In the Morepath 0.4 this has been split. As we\u2019ve already seen, the\napplication <em>class</em> serves. To get a WSGI object, you need to first\n<em>instantiate</em> it. New way:</p>\n<pre>class app(morepath.App):\n  pass\n\n# configuration\n@app.path(...)\n...\n\n# wsgi\nmorepath.run(app())\n</pre>\n<p>To mount an application manually with variables, we used to need the\nspecial <tt>mount()</tt> method. Old way:</p>\n<pre>mounted_wiki_app = wiki_app.mount(wiki_id=3)\n</pre>\n<p>In the new system, mounting is done during instantiation of the app:</p>\n<pre>mounted_wiki_app = wiki_app(wiki_id=3)\n</pre>\n<p>Class names in Python are usually spelled with an upper case. In the\nMorepath docs the application object has been spelled with a lower\ncase. We\u2019ve used lower-case class names for application objects even\nin the updated docs for example code, but feel free to make them\nupper-case in your own code if you wish.</p>\n<p>Why this change? There are some major benefits to this change:</p>\n<ul>\n<li>both extending and mounting app now use natural Python mechanisms:\nsubclassing and instantation.</li>\n<li>it allows us to expose the facility to create new directives to\nthe API. You can create application-specific directives.</li>\n</ul>\n</li>\n<li><p>You can define your own directives on your applications using the\n<tt>directive</tt> directive:</p>\n<pre>@my_app.directive('my_directive')\n</pre>\n<p>This exposes details of the configuration system which is\nunderdocumented for now; study the <tt>morepath.directive</tt> module\nsource code for examples.</p>\n</li>\n<li><p>Document how to use more.static to include static resources into\nyour application.</p>\n</li>\n<li><p>Add a <tt>recursive=False</tt> option to the config.scan method. This\nallows the non-recursive scanning of a package. Only its\n<tt>__init__.py</tt> will be scanned.</p>\n</li>\n<li><p>To support scanning a single module non-recursively we need a\nfeature that hasn\u2019t landed in mainline Venusian yet, so depend on\nVenusifork for now.</p>\n</li>\n<li><p>A small optimization in the publishing machinery. Less work is done\nto update the generic function lookup context during routing.</p>\n</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h2>0.3 (2014-06-23)</h2>\n<ul>\n<li><p>Ability to absorb paths entirely in path directive, as per issue #132.</p>\n</li>\n<li><p>Refactor of config engine to make Venusian and immediate config more\nclear.</p>\n</li>\n<li><p>Typo fix in docs (Remco Wendt).</p>\n</li>\n<li><p>Get version number in docs from setuptools.</p>\n</li>\n<li><p>Fix changelog so that PyPI page generates HTML correctly.</p>\n</li>\n<li><p>Fix PDF generation so that the full content is generated.</p>\n</li>\n<li><p>Ability to mark a view as internal. It will be available to\n<tt>request.view()</tt> but will give 404 on the web. This is useful for\nstructuring JSON views for reusability where you don\u2019t want them to\nactually show up on the web.</p>\n</li>\n<li><p>A <tt><span class=\"pre\">request.child(something).view()</span></tt> that had this view in turn\ncall a <tt>request.view()</tt> from the context of the <tt>something</tt>\napplication would fail \u2013 it would not be able to look up the view\nas lookups still occurred in the context of the mounting\napplication. This is now fixed. (thanks Ying Zhong for reporting it)</p>\n<p>Along with this fix refactored the request object so it keeps a\nsimple <tt>mounted</tt> attribute instead of a stack of <tt>mounts</tt>; the\nstack-like nature was not in use anymore as mounts themselves have\nparents anyway. The new code is simpler.</p>\n</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h2>0.2 (2014-04-24)</h2>\n<ul>\n<li>Python 3 support, in particular Python 3.4 (Alec Munro - fudomunro\non github).</li>\n<li>Link generation now takes <tt>SCRIPT_NAME</tt> into account.</li>\n<li>Morepath 0.1 had a security system, but it was undocumented. Now\nit\u2019s documented (docs now in <a href=\"http://blog.startifact.com/posts/morepath-security.html\" rel=\"nofollow\">Morepath Security</a>), and some of its\nbehavior was slightly tweaked:<ul>\n<li>new <tt>verify_identity</tt> directive.</li>\n<li><tt>permission</tt> directive was renamed to <tt>permission_rule</tt>.</li>\n<li>default unauthorized error is 403 Forbidden, not 401 Unauthorized.</li>\n<li><tt>morepath.remember</tt> and <tt>morepath.forbet</tt> renamed to\n<tt>morepath.remember_identity</tt> and <tt>morepath.forget_identity</tt>.</li>\n</ul>\n</li>\n<li>Installation documentation tweaks. (Auke Willem Oosterhoff)</li>\n<li><tt>.gitignore</tt> tweaks (Auke Willem Oosterhoff)</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h2>0.1 (2014-04-08)</h2>\n<ul>\n<li>Initial public release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6540675, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c0dc409d351d299c4367fb6c3b69edac", "sha256": "574d6b29210bf96531e0dda252e2a923e6025fb43efdc714fb775b7da4d1ef81"}, "downloads": -1, "filename": "morepath-0.1.zip", "has_sig": false, "md5_digest": "c0dc409d351d299c4367fb6c3b69edac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138284, "upload_time": "2014-04-08T13:07:59", "upload_time_iso_8601": "2014-04-08T13:07:59.364459Z", "url": "https://files.pythonhosted.org/packages/2f/7c/69c678282e7829e46f84ee59c34e57bdff28fbd1a9f74c21d46be70d882f/morepath-0.1.zip", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "0ed642ca53e0f807e0f11705829006fa", "sha256": "9117594e8064ae83b7face7b8c4e489312a6663be47490fe8784480853d09301"}, "downloads": -1, "filename": "morepath-0.10.zip", "has_sig": false, "md5_digest": "0ed642ca53e0f807e0f11705829006fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218164, "upload_time": "2015-04-09T09:24:55", "upload_time_iso_8601": "2015-04-09T09:24:55.529417Z", "url": "https://files.pythonhosted.org/packages/48/fa/5a260229c52d598135534bef3424dd5d0969b1d0a6367fd6384b31139bf9/morepath-0.10.zip", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "953e105f99a817cf3aecac54a0d48501", "sha256": "4292f00937d7c01920be84a842f36451e532e54635409965a9624db36d93bc43"}, "downloads": -1, "filename": "morepath-0.11.tar.gz", "has_sig": false, "md5_digest": "953e105f99a817cf3aecac54a0d48501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 177732, "upload_time": "2015-06-29T13:59:27", "upload_time_iso_8601": "2015-06-29T13:59:27.347609Z", "url": "https://files.pythonhosted.org/packages/87/16/047c4d75bdda5a1768c5a9bc5d7275c517ede343862d2064df7f1d618287/morepath-0.11.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "e8dae6719f0adbed98466b3c2476b966", "sha256": "18485bf0a64ec388a4c0301c5cba2183db7bf1631ebf5de6a91f1fc4b25615fb"}, "downloads": -1, "filename": "morepath-0.11.1.tar.gz", "has_sig": false, "md5_digest": "e8dae6719f0adbed98466b3c2476b966", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178247, "upload_time": "2015-06-29T14:35:46", "upload_time_iso_8601": "2015-06-29T14:35:46.432517Z", "url": "https://files.pythonhosted.org/packages/ba/98/2863ce4a1fc61d870e8b23a86953adff1cf221d9984b201454a4938b85de/morepath-0.11.1.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "ba2e286a7890e933c5bbdae38c17025e", "sha256": "4287ea9ad464ca48b2ccc49e9b2987a25bdad81dc3877592bb50454ed9526db9"}, "downloads": -1, "filename": "morepath-0.12.tar.gz", "has_sig": false, "md5_digest": "ba2e286a7890e933c5bbdae38c17025e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181310, "upload_time": "2016-01-27T11:38:40", "upload_time_iso_8601": "2016-01-27T11:38:40.851228Z", "url": "https://files.pythonhosted.org/packages/fd/b2/72d22cb68e451833e4c4b800ff8d7af247ce9e60d437fa767fdafc6b2d74/morepath-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "8371cf194bf52aa3dcca20657e8845b0", "sha256": "f700fc13eb9b00fa9fb9e944fa65ce90214e748c3be030dc8b4d3f11f2bf6854"}, "downloads": -1, "filename": "morepath-0.13.tar.gz", "has_sig": false, "md5_digest": "8371cf194bf52aa3dcca20657e8845b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 179496, "upload_time": "2016-04-06T12:28:25", "upload_time_iso_8601": "2016-04-06T12:28:25.171711Z", "url": "https://files.pythonhosted.org/packages/a8/67/e870e598b3a5f4301daf26c6ce2b351df1d5f8bc8d426005f1ffc7e26fa9/morepath-0.13.tar.gz", "yanked": false}], "0.13.1": [{"comment_text": "", "digests": {"md5": "ca9cb5fc33217cd77806061343c1e165", "sha256": "64ecd326a71d2f8d8c75a6b6a856c4d76da2d90c4a40ed3eb01f32df24b91603"}, "downloads": -1, "filename": "morepath-0.13.1.tar.gz", "has_sig": false, "md5_digest": "ca9cb5fc33217cd77806061343c1e165", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 184591, "upload_time": "2016-04-13T08:07:21", "upload_time_iso_8601": "2016-04-13T08:07:21.188897Z", "url": "https://files.pythonhosted.org/packages/32/e8/0c2bf91496362a87f0f144f0bfd4abbc89b370a678bdbc51acd0c184f958/morepath-0.13.1.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "59111990d9558f1cd39cbf808478728f", "sha256": "e1786c403d87abf6c897993d8a5f5914d8ef487ed0374181b7e607daa6878d30"}, "downloads": -1, "filename": "morepath-0.13.2.tar.gz", "has_sig": false, "md5_digest": "59111990d9558f1cd39cbf808478728f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 184739, "upload_time": "2016-04-13T08:20:38", "upload_time_iso_8601": "2016-04-13T08:20:38.050908Z", "url": "https://files.pythonhosted.org/packages/75/c3/c3d21b9d9a72d1fea695b8664fc20ec81e919be86fa6df6883aa92ec7840/morepath-0.13.2.tar.gz", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "65fadd9f137e25cd837cdc4819081cca", "sha256": "a857619ee069c23ce0717e3708e4e7b0a19a8c61b8de0a62ff577c4827a95e35"}, "downloads": -1, "filename": "morepath-0.14.tar.gz", "has_sig": false, "md5_digest": "65fadd9f137e25cd837cdc4819081cca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 211057, "upload_time": "2016-04-26T12:39:51", "upload_time_iso_8601": "2016-04-26T12:39:51.566850Z", "url": "https://files.pythonhosted.org/packages/6e/5a/3ffebd0e6cffd35d7139921b1a4cf94598185afc07277358740221b7b817/morepath-0.14.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "3f0674ee6e4451011b10aaceea8d5ec3", "sha256": "8b284f9d9b97e9ae39c850b2da74d6a5146534dcb21f3e0c9ff937894c8ab597"}, "downloads": -1, "filename": "morepath-0.15.tar.gz", "has_sig": false, "md5_digest": "3f0674ee6e4451011b10aaceea8d5ec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 221207, "upload_time": "2016-07-18T12:06:02", "upload_time_iso_8601": "2016-07-18T12:06:02.028993Z", "url": "https://files.pythonhosted.org/packages/27/29/9c073a2c9ee892ab68a1f18a6f6a0e940c340d802f6662045ec003caa0fd/morepath-0.15.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "1b0109791d42fbef1511f9a704eb3f6f", "sha256": "c5c8a96c9c2db111ca2275b947513f06f8bc0a451d433149d80321171ac7c146"}, "downloads": -1, "filename": "morepath-0.16.tar.gz", "has_sig": false, "md5_digest": "1b0109791d42fbef1511f9a704eb3f6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229036, "upload_time": "2016-10-04T14:01:25", "upload_time_iso_8601": "2016-10-04T14:01:25.437864Z", "url": "https://files.pythonhosted.org/packages/fc/cd/1c24adbb180b7f2dc6485ce680b107d5178d9556bcd877f255b510f9608d/morepath-0.16.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "e3235c965fcab654f1163c728b20c7b9", "sha256": "5977806689f94a523f225454afa1238ccee7d88f41dc3e528a2bec85f0405296"}, "downloads": -1, "filename": "morepath-0.16.1.tar.gz", "has_sig": false, "md5_digest": "e3235c965fcab654f1163c728b20c7b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229196, "upload_time": "2016-10-04T15:06:54", "upload_time_iso_8601": "2016-10-04T15:06:54.704794Z", "url": "https://files.pythonhosted.org/packages/9c/ba/8996c370b651133b78a2b55cb2a9ae389c0dc046c80502b2e6211349b947/morepath-0.16.1.tar.gz", "yanked": false}], "0.16.2": [{"comment_text": "", "digests": {"md5": "b56327bc64ad93ee2c89acd14cbb5dff", "sha256": "83ccebea5b6f18ae3b875014d111b1265d4e898a1a72bb95c9dc2101ed5054d2"}, "downloads": -1, "filename": "morepath-0.16.2.tar.gz", "has_sig": false, "md5_digest": "b56327bc64ad93ee2c89acd14cbb5dff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229364, "upload_time": "2016-10-24T04:18:37", "upload_time_iso_8601": "2016-10-24T04:18:37.728231Z", "url": "https://files.pythonhosted.org/packages/45/fa/ca2669c31cb2f74530f0c2aa1f5a2e7aaaf5da6351b21d9a25ff03be9fef/morepath-0.16.2.tar.gz", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "508e18b386127c47338241b0a70bc9b0", "sha256": "835baf161a8bc9bdf79ec220bc9f68fd10d2fc5fb6810354ba661cc17a3faa27"}, "downloads": -1, "filename": "morepath-0.17-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "508e18b386127c47338241b0a70bc9b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 148431, "upload_time": "2016-12-23T12:07:11", "upload_time_iso_8601": "2016-12-23T12:07:11.563001Z", "url": "https://files.pythonhosted.org/packages/ac/d6/f20d18f81c723933d8a28ef3ea3efe0c2280860605ae0f36ab8dbad01ab7/morepath-0.17-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf056834813f4eb641d0891d11d98795", "sha256": "e2c3c6f545ce50f649f5a978a462d7f14a4fbab03fc8d79ffcb8e557057f6bdc"}, "downloads": -1, "filename": "morepath-0.17.tar.gz", "has_sig": false, "md5_digest": "bf056834813f4eb641d0891d11d98795", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229615, "upload_time": "2016-12-23T12:07:13", "upload_time_iso_8601": "2016-12-23T12:07:13.654385Z", "url": "https://files.pythonhosted.org/packages/a6/0c/98b292001fd04e345d0932f4b6f932c5426165c81118c1c3eb66526cc8b9/morepath-0.17.tar.gz", "yanked": false}], "0.18": [{"comment_text": "", "digests": {"md5": "6883b9717510035e824701c3ad867073", "sha256": "da102702d8ceb4d24c2f010ce5f9f8dd422b34782295dba6389f3baf60fb55c1"}, "downloads": -1, "filename": "morepath-0.18-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6883b9717510035e824701c3ad867073", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 149167, "upload_time": "2017-03-17T17:29:10", "upload_time_iso_8601": "2017-03-17T17:29:10.691939Z", "url": "https://files.pythonhosted.org/packages/f4/9f/41a4faa26d62d7d62ce4f9ca2795685269872d0c21baf7891b152324883e/morepath-0.18-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2e44d86f727f9a684432f23319f10dc", "sha256": "41a779093fb48583ef071be72a6895ea092fb53513d439e86c826455d93f65a2"}, "downloads": -1, "filename": "morepath-0.18.tar.gz", "has_sig": false, "md5_digest": "c2e44d86f727f9a684432f23319f10dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231898, "upload_time": "2017-03-17T17:29:41", "upload_time_iso_8601": "2017-03-17T17:29:41.790319Z", "url": "https://files.pythonhosted.org/packages/03/17/f7c37ed543ab09b9b02f4dee0272c8b24e5ecdb1338136c80260d2d535ac/morepath-0.18.tar.gz", "yanked": false}], "0.18.1": [{"comment_text": "", "digests": {"md5": "d709abd199eb95ab41d79fab948067b0", "sha256": "94532e9a3fbd45fa119e43d7e21d3039ec9aec844d1b07c54d55f08c2dc3c33d"}, "downloads": -1, "filename": "morepath-0.18.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d709abd199eb95ab41d79fab948067b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 149735, "upload_time": "2017-06-30T16:42:19", "upload_time_iso_8601": "2017-06-30T16:42:19.869471Z", "url": "https://files.pythonhosted.org/packages/c3/75/e749b17116ac5c0cac7c109e8235ca26ce8bda9ec6762b6bff941ea3afa8/morepath-0.18.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4020aad8e5318f753852a1901d30906d", "sha256": "4b634b52ad79e30cc31d10a5433dffd6105b4f37b45ee25c222b3a4ee67b21d7"}, "downloads": -1, "filename": "morepath-0.18.1.tar.gz", "has_sig": false, "md5_digest": "4020aad8e5318f753852a1901d30906d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232707, "upload_time": "2017-06-30T16:42:22", "upload_time_iso_8601": "2017-06-30T16:42:22.867557Z", "url": "https://files.pythonhosted.org/packages/99/d9/4b914c4552830546b4e84e9e9c53169eba142631493026a6a0813b564709/morepath-0.18.1.tar.gz", "yanked": false}], "0.18.2": [{"comment_text": "", "digests": {"md5": "64c469f06ea1d66676e198b56c022cc3", "sha256": "ba5659ac85312bfe995641b4d362af76cac111018dc9787d5bf5cd18443f7ad3"}, "downloads": -1, "filename": "morepath-0.18.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "64c469f06ea1d66676e198b56c022cc3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 132089, "upload_time": "2019-01-22T13:59:37", "upload_time_iso_8601": "2019-01-22T13:59:37.724734Z", "url": "https://files.pythonhosted.org/packages/49/49/54c2d6a368d01b52d729684fe6be7a928710401e1169f0836994a7b9610f/morepath-0.18.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffb99360d25b7961317c971feec910af", "sha256": "7bc289b0fe15aa74ad2faa33a6c8f3d4340395a2b8f09db1da9703d4a17bf346"}, "downloads": -1, "filename": "morepath-0.18.2.tar.gz", "has_sig": false, "md5_digest": "ffb99360d25b7961317c971feec910af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 233050, "upload_time": "2019-01-22T13:59:39", "upload_time_iso_8601": "2019-01-22T13:59:39.920566Z", "url": "https://files.pythonhosted.org/packages/26/1c/fc413083ce6216dd459a46dea1273c57b98c2e657aeca40d5ff6487d5817/morepath-0.18.2.tar.gz", "yanked": false}], "0.19": [{"comment_text": "", "digests": {"md5": "8a5efd034ff5d30af46ab2f8f43c8829", "sha256": "ae6787f3fed573146b3496fbd158bf2a938088f41eb5ba67f56a541c6f785b19"}, "downloads": -1, "filename": "morepath-0.19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a5efd034ff5d30af46ab2f8f43c8829", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 130574, "upload_time": "2020-01-29T23:42:27", "upload_time_iso_8601": "2020-01-29T23:42:27.024339Z", "url": "https://files.pythonhosted.org/packages/e8/04/cd6ba04e75ab8439e5a382622d0d29dcd0987f129031c2b2c24593acc08f/morepath-0.19-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4309b127b06f635adcf1b61886106178", "sha256": "3d3f075083766e7d9c1bd184bf927590e862caa8a385f9a8a572422c0d69606a"}, "downloads": -1, "filename": "morepath-0.19.tar.gz", "has_sig": false, "md5_digest": "4309b127b06f635adcf1b61886106178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232691, "upload_time": "2020-01-29T23:42:31", "upload_time_iso_8601": "2020-01-29T23:42:31.728350Z", "url": "https://files.pythonhosted.org/packages/fd/e0/d8c1a4ac30fa6e491d8340e793fd770609ca7384a0ec32291ebb68698fb4/morepath-0.19.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8b3285af6f47959cb60db31d7e55ea43", "sha256": "4fa3521b8f5e4213e56f85e09881abe31b1215600d18f41cbc458887e321ee7c"}, "downloads": -1, "filename": "morepath-0.2.zip", "has_sig": false, "md5_digest": "8b3285af6f47959cb60db31d7e55ea43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144744, "upload_time": "2014-04-24T12:41:33", "upload_time_iso_8601": "2014-04-24T12:41:33.090871Z", "url": "https://files.pythonhosted.org/packages/f5/c1/c884e6ff497c8c1ae605a914fd6cd122bb6d048a63d6e3fc7cc6454474cf/morepath-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3e941a8ae001e54c81ca5eb297003a7c", "sha256": "a9c4d34f0331f73b229e00a021e2301e832b418a0016220c3db7761c6035e305"}, "downloads": -1, "filename": "morepath-0.3.zip", "has_sig": false, "md5_digest": "3e941a8ae001e54c81ca5eb297003a7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149107, "upload_time": "2014-06-23T13:20:51", "upload_time_iso_8601": "2014-06-23T13:20:51.125909Z", "url": "https://files.pythonhosted.org/packages/0a/a7/455ba886a52965e32429e2b64860c3e79df614b88ac52f603e40e47cb478/morepath-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9ef37adfc3d0faeedede7c7d943a4c01", "sha256": "d911d56c5f24e1ddf8b47e8470ea7848e5b0d2335cafd2f2f378b6cfd9266aef"}, "downloads": -1, "filename": "morepath-0.4.zip", "has_sig": false, "md5_digest": "9ef37adfc3d0faeedede7c7d943a4c01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 157324, "upload_time": "2014-07-07T13:53:27", "upload_time_iso_8601": "2014-07-07T13:53:27.533853Z", "url": "https://files.pythonhosted.org/packages/d1/67/667b7755ff5db6879de078c4be09d2da37d01de2e79cf48f1df89f624606/morepath-0.4.zip", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7f07dcd513b85f1e37e706ef8423b36e", "sha256": "553d382e06d6d81a93f03389943e7022bb2833cc3fc339ed4967cde50d2e3eac"}, "downloads": -1, "filename": "morepath-0.4.1.zip", "has_sig": false, "md5_digest": "7f07dcd513b85f1e37e706ef8423b36e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158592, "upload_time": "2014-07-08T10:16:28", "upload_time_iso_8601": "2014-07-08T10:16:28.562991Z", "url": "https://files.pythonhosted.org/packages/ef/3e/5b54b5e84e1df984a439c5040e6237860723b6958ee6c7742d1b939cecc3/morepath-0.4.1.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9e55f8320547476f03f5ccbf63be2da4", "sha256": "4e99feac4581bb66a550e3f4314d3b782ac623b23c1f0776ac16c70ac94ba060"}, "downloads": -1, "filename": "morepath-0.5.zip", "has_sig": false, "md5_digest": "9e55f8320547476f03f5ccbf63be2da4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162187, "upload_time": "2014-08-28T14:24:23", "upload_time_iso_8601": "2014-08-28T14:24:23.582783Z", "url": "https://files.pythonhosted.org/packages/4e/bf/44a78ae5ad334db5226288c9f4acbb87523091d6d5c8f7324ad8fd71e723/morepath-0.5.zip", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "dfc89025e96a8c6d4392e03ab69cf4b0", "sha256": "42ef13279cd29dbc46d4fae0f5edb0bd2c0e1e6454c394c470a39338e39031d7"}, "downloads": -1, "filename": "morepath-0.5.1.zip", "has_sig": false, "md5_digest": "dfc89025e96a8c6d4392e03ab69cf4b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163023, "upload_time": "2014-08-28T14:55:34", "upload_time_iso_8601": "2014-08-28T14:55:34.962113Z", "url": "https://files.pythonhosted.org/packages/f6/ca/ea0b69e2e590161a451241ebb8aa1d84ca1447e369a4b7e4200ec4d2b576/morepath-0.5.1.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "05f08718950192f79fe130ed3889345d", "sha256": "2c8f993a094aafee893f82af191143d41d09b0e2766c554a9eec999686c4c3ad"}, "downloads": -1, "filename": "morepath-0.6.zip", "has_sig": false, "md5_digest": "05f08718950192f79fe130ed3889345d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165162, "upload_time": "2014-09-08T13:02:38", "upload_time_iso_8601": "2014-09-08T13:02:38.961284Z", "url": "https://files.pythonhosted.org/packages/11/04/95b0a0a7c5b0cacdda59b6f94e4c472ec6a41075f61362b312f1d142e78e/morepath-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a07ddebee5ee0b612f9f088114cdec11", "sha256": "b6222806832a49080b66a348bfebc7ab5e3d4134aa89542166cb12ae2ccac3f4"}, "downloads": -1, "filename": "morepath-0.7.zip", "has_sig": false, "md5_digest": "a07ddebee5ee0b612f9f088114cdec11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180345, "upload_time": "2014-11-03T14:44:50", "upload_time_iso_8601": "2014-11-03T14:44:50.008601Z", "url": "https://files.pythonhosted.org/packages/f1/3a/6a6a97d07bbdfe4bb43c1841bde68f5ade54aef03a0e7ba88754cf868258/morepath-0.7.zip", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "3c05f32c4a65b063acfa47ecfd82e5c6", "sha256": "ef3a5783a7c4f8e4f58cfe7df6c20f170cccc067c8172fa7b2e73ef6f6b703cf"}, "downloads": -1, "filename": "morepath-0.7.1.zip", "has_sig": false, "md5_digest": "3c05f32c4a65b063acfa47ecfd82e5c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181059, "upload_time": "2014-11-11T13:26:33", "upload_time_iso_8601": "2014-11-11T13:26:33.414850Z", "url": "https://files.pythonhosted.org/packages/3c/36/3ea3e035ee255c298ae20ed9a03e6b0ad7c5150aec4eb2b5e49294c1acae/morepath-0.7.1.zip", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "c4b63e5677f3b02ae3a9ae1508694ebc", "sha256": "b62cf5b66f0d17cb47360e4425ce229b7c65ff0a6e73df1711d1f96301b35985"}, "downloads": -1, "filename": "morepath-0.7.2.zip", "has_sig": false, "md5_digest": "c4b63e5677f3b02ae3a9ae1508694ebc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181257, "upload_time": "2014-11-11T16:05:35", "upload_time_iso_8601": "2014-11-11T16:05:35.969350Z", "url": "https://files.pythonhosted.org/packages/63/22/02d2cb2adc0ad1d15f11b9264a1f4f3521fb6d1b76b07d696db95606ef91/morepath-0.7.2.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "f835a85bddb0cb6178d5ca355966285f", "sha256": "00dc6d0d9821d9b353d24f459243031706d9912c85ed4101b339ac92effca4ee"}, "downloads": -1, "filename": "morepath-0.8.zip", "has_sig": false, "md5_digest": "f835a85bddb0cb6178d5ca355966285f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188686, "upload_time": "2014-11-13T14:34:09", "upload_time_iso_8601": "2014-11-13T14:34:09.508925Z", "url": "https://files.pythonhosted.org/packages/65/82/a0ec879f9c9a632a92da38f6be4792bb352f073edeb408e76e3ee3666d21/morepath-0.8.zip", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "95f5c33b20626497444438701b4d3bc8", "sha256": "67ce6629e4dab12b54ea802ad1e376bab8a2abb4a483ee432867d54ac6a5ac99"}, "downloads": -1, "filename": "morepath-0.9.zip", "has_sig": false, "md5_digest": "95f5c33b20626497444438701b4d3bc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 195648, "upload_time": "2014-11-25T13:47:32", "upload_time_iso_8601": "2014-11-25T13:47:32.728724Z", "url": "https://files.pythonhosted.org/packages/b3/a7/3042e8532d391408f07935fc928fda2e76fadf688a0e7bc7ad936c88b29f/morepath-0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a5efd034ff5d30af46ab2f8f43c8829", "sha256": "ae6787f3fed573146b3496fbd158bf2a938088f41eb5ba67f56a541c6f785b19"}, "downloads": -1, "filename": "morepath-0.19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a5efd034ff5d30af46ab2f8f43c8829", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 130574, "upload_time": "2020-01-29T23:42:27", "upload_time_iso_8601": "2020-01-29T23:42:27.024339Z", "url": "https://files.pythonhosted.org/packages/e8/04/cd6ba04e75ab8439e5a382622d0d29dcd0987f129031c2b2c24593acc08f/morepath-0.19-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4309b127b06f635adcf1b61886106178", "sha256": "3d3f075083766e7d9c1bd184bf927590e862caa8a385f9a8a572422c0d69606a"}, "downloads": -1, "filename": "morepath-0.19.tar.gz", "has_sig": false, "md5_digest": "4309b127b06f635adcf1b61886106178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232691, "upload_time": "2020-01-29T23:42:31", "upload_time_iso_8601": "2020-01-29T23:42:31.728350Z", "url": "https://files.pythonhosted.org/packages/fd/e0/d8c1a4ac30fa6e491d8340e793fd770609ca7384a0ec32291ebb68698fb4/morepath-0.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:49 2020"}