{"info": {"author": "Matthew Ruttley", "author_email": "matt@frame.io", "bugtrack_url": null, "classifiers": [], "description": "Copyright (c) 2018 Frame.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\nDescription: \n        # DIMA\n        \n        A command-line tool to list, inspect and kill database queries.\n        \n        We've been using this tool since 2017 at Frame.io and decided to open source it. There will be a blog post with more details on the Frame.io Engineering Blog soon. Previous git history has been wiped by our security team.\n        \n        # Setup:\n        \n        1. Clone this repo\n        2. Set up the credentials (see below)\n        3. Run: `python setup.py install`\n        \n        (homebrew setup is being worked on)\n        \n        # Credential Setup\n        \n        Database credentials can be provided in 2 ways - in a `~/.dima_creds` file or as environment variables. DIMA will look first for the environment variables, and then to the creds file. You can set the following environment variables:\n        \n        \tDIMA_DB_DBNAME\n        \tDIMA_DB_USER\n        \tDIMA_DB_HOST\n        \tDIMA_DB_PORT\n        \tDIMA_DB_PASSWORD\n        \n        or place them in a `~/.dima_creds` file (the prefix `~/` means that it should be in your home directory). A sample file `sample_creds` is in this repo. \n        \n        You can add more credentials for different databases underneath, as long as they use a different prefix. E.g.\n        \n        \tDIMA_DB2_DBNAME\n        \tDIMA_DB2_USER\n        \t...\n        \n        To inspect a non-default DB, use the `-c` option, e.g. for a prefix `DIMA_DB2_...` use:\n        \n        \tdima -c DB2 show 123\n        \n        # Usage:\n        \n        \tdima\n        Shows a list of running queries\n        \n        \tdima show [PID]\n        Inspects a specific running query\n        \n        \tdima rm [-f] [Lock / filter keyword / PID]\t\n        \n        Terminates queries either with `wait_event_type` \"Lock\" or according to a filter keyword or PID. Use -f to avoid the confirmation.\n        \n        # Screenshots\n        \n        <img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_cmd.png\" alt=\"dima command\" width=\"500\"/>\n        <img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_show_cmd.png\" alt=\"dima show command\" width=\"500\"/>\n        <img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_rm_cmd.png\" alt=\"dima rm command\" width=\"500\"/>\n        \n        \nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 2.7\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nClassifier: Topic :: Database\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "dima-db", "package_url": "https://pypi.org/project/dima-db/", "platform": "", "project_url": "https://pypi.org/project/dima-db/", "project_urls": null, "release_url": "https://pypi.org/project/dima-db/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "CLI to view and kill running queries in postgres", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Copyright (c) 2018 Frame.io<br><br>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the \"Software\"), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:<br><br>The above copyright notice and this permission notice shall be included in all<br>copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<br>SOFTWARE.<br>Description: <br>        # DIMA<br>        <br>        A command-line tool to list, inspect and kill database queries.<br>        <br>        We've been using this tool since 2017 at Frame.io and decided to open source it. There will be a blog post with more details on the Frame.io Engineering Blog soon. Previous git history has been wiped by our security team.<br>        <br>        # Setup:<br>        <br>        1. Clone this repo<br>        2. Set up the credentials (see below)<br>        3. Run: `python setup.py install`<br>        <br>        (homebrew setup is being worked on)<br>        <br>        # Credential Setup<br>        <br>        Database credentials can be provided in 2 ways - in a `~/.dima_creds` file or as environment variables. DIMA will look first for the environment variables, and then to the creds file. You can set the following environment variables:<br>        <br>        \tDIMA_DB_DBNAME<br>        \tDIMA_DB_USER<br>        \tDIMA_DB_HOST<br>        \tDIMA_DB_PORT<br>        \tDIMA_DB_PASSWORD<br>        <br>        or place them in a `~/.dima_creds` file (the prefix `~/` means that it should be in your home directory). A sample file `sample_creds` is in this repo. <br>        <br>        You can add more credentials for different databases underneath, as long as they use a different prefix. E.g.<br>        <br>        \tDIMA_DB2_DBNAME<br>        \tDIMA_DB2_USER<br>        \t...<br>        <br>        To inspect a non-default DB, use the `-c` option, e.g. for a prefix `DIMA_DB2_...` use:<br>        <br>        \tdima -c DB2 show 123<br>        <br>        # Usage:<br>        <br>        \tdima<br>        Shows a list of running queries<br>        <br>        \tdima show [PID]<br>        Inspects a specific running query<br>        <br>        \tdima rm [-f] [Lock / filter keyword / PID]\t<br>        <br>        Terminates queries either with `wait_event_type` \"Lock\" or according to a filter keyword or PID. Use -f to avoid the confirmation.<br>        <br>        # Screenshots<br>        <br>        &lt;img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_cmd.png\" alt=\"dima command\" width=\"500\"/&gt;<br>        &lt;img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_show_cmd.png\" alt=\"dima show command\" width=\"500\"/&gt;<br>        &lt;img src=\"https://github.com/Frameio/homebrew-dima/raw/master/img/dima_rm_cmd.png\" alt=\"dima rm command\" width=\"500\"/&gt;<br>        <br>        <br>Platform: UNKNOWN<br>Classifier: Programming Language :: Python :: 2.7<br>Classifier: License :: OSI Approved :: MIT License<br>Classifier: Operating System :: OS Independent<br>Classifier: Topic :: Database<br>\n          </div>"}, "last_serial": 4994652, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a957b9b0c9bac59f194e0befd9a11d0c", "sha256": "38b436ab22bc1c92c037182ab2e8bac38236c367da79bfc51a9bee96d321acff"}, "downloads": -1, "filename": "dima_db-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "a957b9b0c9bac59f194e0befd9a11d0c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5786, "upload_time": "2019-03-27T20:02:56", "upload_time_iso_8601": "2019-03-27T20:02:56.744635Z", "url": "https://files.pythonhosted.org/packages/59/05/d0ed6340aac86b192fd4c52c8902ca7443b2e620ed1f94b4240e3796a4f7/dima_db-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "296108d5d3e3f3c1799d321c4a446903", "sha256": "49bbd375591cc498029e5353911cdd891ae09d876cb836a4f5dbb333146d9b2c"}, "downloads": -1, "filename": "dima-db-1.0.0.tar.gz", "has_sig": false, "md5_digest": "296108d5d3e3f3c1799d321c4a446903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2019-03-27T20:02:58", "upload_time_iso_8601": "2019-03-27T20:02:58.505325Z", "url": "https://files.pythonhosted.org/packages/b3/db/a6bcbb8b5d80e67e687a72b1ad649d89cd623d3e7b8a791466db0a8f4071/dima-db-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a957b9b0c9bac59f194e0befd9a11d0c", "sha256": "38b436ab22bc1c92c037182ab2e8bac38236c367da79bfc51a9bee96d321acff"}, "downloads": -1, "filename": "dima_db-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "a957b9b0c9bac59f194e0befd9a11d0c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5786, "upload_time": "2019-03-27T20:02:56", "upload_time_iso_8601": "2019-03-27T20:02:56.744635Z", "url": "https://files.pythonhosted.org/packages/59/05/d0ed6340aac86b192fd4c52c8902ca7443b2e620ed1f94b4240e3796a4f7/dima_db-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "296108d5d3e3f3c1799d321c4a446903", "sha256": "49bbd375591cc498029e5353911cdd891ae09d876cb836a4f5dbb333146d9b2c"}, "downloads": -1, "filename": "dima-db-1.0.0.tar.gz", "has_sig": false, "md5_digest": "296108d5d3e3f3c1799d321c4a446903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2019-03-27T20:02:58", "upload_time_iso_8601": "2019-03-27T20:02:58.505325Z", "url": "https://files.pythonhosted.org/packages/b3/db/a6bcbb8b5d80e67e687a72b1ad649d89cd623d3e7b8a791466db0a8f4071/dima-db-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:22 2020"}