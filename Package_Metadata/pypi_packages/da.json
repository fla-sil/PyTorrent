{"info": {"author": "Ilya Shalyapin", "author_email": "ishalyapin@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "da.py\n=====\n\nLite-weight task automatization in Python. In some cases it could be replacement\nfor such tools as make or fabric. It is easyer than make, because you can write\ntasks in python. And you don't need to compile stuff like it happens when you need fabric.\nYou don't even need to install any packages, just download it, and use like regular\npython script::\n\n    $ wget https://bitbucket.org/ishalyapin/dapy/raw/master/da.py\n    $ python da.py [taskname]\n\nFor dev environment the easiest way is to use pip::\n\n    $ pip install da\n    $ da [taskname]\n\nCreate da.task.py file in your project directory. For example you want to automatizate\nyour django project dev environment installation.\n\nda.tasks.py::\n\n    def install():\n        \"\"\" echo this example demostrates how to download some staff from \"\"\"\n        run(\"virtualenv python\")\n        run(\"python/bin/pip install -r requirements.txt\")\n        run(\"mkdir -p static/pencil\")\n        github_download(\"https://github.com/un1t/pencil/tarball/master\", \"static/pencil\")\n\n    def runserver():\n        \"\"\" Run django devserver \"\"\"\n        run(\"python/bin/python manage.py runserver 0:8000\")\n\nRun your tasks::\n\n    $ da install\n    $ da runserver", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/ishalyapin/da/get/master.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/ishalyapin/da/", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "da", "package_url": "https://pypi.org/project/da/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/da/", "project_urls": {"Download": "https://bitbucket.org/ishalyapin/da/get/master.tar.gz", "Homepage": "https://bitbucket.org/ishalyapin/da/"}, "release_url": "https://pypi.org/project/da/0.1/", "requires_dist": null, "requires_python": null, "summary": "Task automatization tool.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Lite-weight task automatization in Python. In some cases it could be replacement\nfor such tools as make or fabric. It is easyer than make, because you can write\ntasks in python. And you don\u2019t need to compile stuff like it happens when you need fabric.\nYou don\u2019t even need to install any packages, just download it, and use like regular\npython script:</p>\n<pre>$ wget https://bitbucket.org/ishalyapin/dapy/raw/master/da.py\n$ python da.py [taskname]\n</pre>\n<p>For dev environment the easiest way is to use pip:</p>\n<pre>$ pip install da\n$ da [taskname]\n</pre>\n<p>Create da.task.py file in your project directory. For example you want to automatizate\nyour django project dev environment installation.</p>\n<p>da.tasks.py:</p>\n<pre>def install():\n    \"\"\" echo this example demostrates how to download some staff from \"\"\"\n    run(\"virtualenv python\")\n    run(\"python/bin/pip install -r requirements.txt\")\n    run(\"mkdir -p static/pencil\")\n    github_download(\"https://github.com/un1t/pencil/tarball/master\", \"static/pencil\")\n\ndef runserver():\n    \"\"\" Run django devserver \"\"\"\n    run(\"python/bin/python manage.py runserver 0:8000\")\n</pre>\n<p>Run your tasks:</p>\n<pre>$ da install\n$ da runserver\n</pre>\n\n          </div>"}, "last_serial": 788746, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "aa2959c93e4acf241cfd10de48de49cb", "sha256": "3666658c2174e779213ca621ddb8bea7d46e47a6bbcc80c8853d98808d65b998"}, "downloads": -1, "filename": "da-0.1.tar.gz", "has_sig": false, "md5_digest": "aa2959c93e4acf241cfd10de48de49cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2390, "upload_time": "2012-11-11T14:51:31", "upload_time_iso_8601": "2012-11-11T14:51:31.349369Z", "url": "https://files.pythonhosted.org/packages/62/56/c126b1b74c54a6d0e29caa3cfc30b854e36c1092a704098cc5a7c78782bd/da-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa2959c93e4acf241cfd10de48de49cb", "sha256": "3666658c2174e779213ca621ddb8bea7d46e47a6bbcc80c8853d98808d65b998"}, "downloads": -1, "filename": "da-0.1.tar.gz", "has_sig": false, "md5_digest": "aa2959c93e4acf241cfd10de48de49cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2390, "upload_time": "2012-11-11T14:51:31", "upload_time_iso_8601": "2012-11-11T14:51:31.349369Z", "url": "https://files.pythonhosted.org/packages/62/56/c126b1b74c54a6d0e29caa3cfc30b854e36c1092a704098cc5a7c78782bd/da-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:58 2020"}