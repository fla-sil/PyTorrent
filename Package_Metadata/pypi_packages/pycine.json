{"info": {"author": "Ben Hagen", "author_email": "ben@ottomatic.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only"], "description": "# pycine\n\n[![PyPI version](https://badge.fury.io/py/pycine.svg)](https://pypi.org/project/pycine/)\n[![GitHub license](https://img.shields.io/github/license/OTTOMATIC-IO/pyphantom.svg)](https://github.com/OTTOMATIC-IO/pyphantom/blob/master/LICENSE)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/42cbb1d8fd0d4be99d802206c83b7b29)](https://app.codacy.com/app/OTTOMATIC/pycine?utm_source=github.com&utm_medium=referral&utm_content=OTTOMATIC-IO/pycine&utm_campaign=Badge_Grade_Dashboard)\n\nReading Vision Research .cine files with python\n\n\n## Installation\n\n### Release Version\n\n#### With pip\nIf you have Python 3 installed you can just use `pip`:\n```\npip3 install pycine\n```\n\n#### Compiled binary\nThere is also a binary version you can install with the following command:\n```\ncurl -s https://phantomfuse.com/pfs_meta -o /usr/local/bin/pfs_meta && chmod +x /usr/local/bin/pfs_meta\n```\n\n\n### Development version\n\n```\npip install git+https://github.com/ottomatic-io/pycine.git\n```\n\n## Example usage\n\n### Changing the playback and timecode framerates\n```\npfs_meta set --playback-fps 60/1.001 --timecode_fps 60/1.001 A001C001_190302_16001.cine\n```\n\nYou can also set metadata for multiple clips at once:\n```\npfs_meta set --playback-fps 24/1.001 --timecode_fps 24/1.001 *.cine\n```\n\n## Help\nEvery command has its own help output. Just append `--help`:\n\n```\n$ pfs_meta --help\nUsage: pfs_meta [OPTIONS] COMMAND [ARGS]...\n\n  This tool allows .cine file metadata manipulation. Use COMMAND --help for\n  more info.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  copy  Copy metadata from a source clip\n  set   Set metadata\n  show  Show metadata\n```\n\n\n```\n$ pfs_meta set --help\nUsage: pfs_meta set [OPTIONS] [DESTINATIONS]...\n\n  Set metadata\n\nOptions:\n  --temp FLOAT          Set color temperature.\n  --cc FLOAT            Set color correction.\n  --record-fps INTEGER  Set record FPS.\n  --playback-fps TEXT   Set playback FPS. Use 60 or 60/1.001 but not 59.94\n  --timecode-fps TEXT   Set timecode FPS. Use 60 or 60/1.001 but not 59.94\n  --tone TEXT           Set tone curve in the form of \"[LABEL] x1 y1 x2 y2\".\n                        You can set up to 32 xy points.\n  --help                Show this message and exit.\n```\n\n\n```\n$ pfs_raw --help\nUsage: pfs_raw [OPTIONS] CINE_FILE [OUT_PATH]\n\nOptions:\n  --file-format [.png|.jpg|.tif]\n  --start-frame INTEGER\n  --count INTEGER\n  --version                       Show the version and exit.\n  --help                          Show this message and exit.\n```\n\n\n## Jupyter notebook\n\nCheck out an example on how to use the library from a jupyter notebook:\n[notebooks/Display frames.ipynb](notebooks/Display%20frames.ipynb)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ottomatic-io/pycine", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pycine", "package_url": "https://pypi.org/project/pycine/", "platform": "", "project_url": "https://pypi.org/project/pycine/", "project_urls": {"Homepage": "https://github.com/ottomatic-io/pycine"}, "release_url": "https://pypi.org/project/pycine/0.3.1/", "requires_dist": ["click", "docopt", "opencv-python", "colorama"], "requires_python": "", "summary": "This package allows handling of .cine files created by Vision Research Phantom\u00ae cameras.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pycine</h1>\n<p><a href=\"https://pypi.org/project/pycine/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d058e818b3b916fc54e4ee6be3adbcc54059ce3/68747470733a2f2f62616467652e667572792e696f2f70792f707963696e652e737667\"></a>\n<a href=\"https://github.com/OTTOMATIC-IO/pyphantom/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1753dd1fdae97d243b68743f0383e26f3ad133db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4f54544f4d415449432d494f2f70797068616e746f6d2e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://app.codacy.com/app/OTTOMATIC/pycine?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=OTTOMATIC-IO/pycine&amp;utm_campaign=Badge_Grade_Dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4802c35865b54ce7d41b2494511cfe28c7086337/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3432636262316438666430643462653939643830323230366338336237623239\"></a></p>\n<p>Reading Vision Research .cine files with python</p>\n<h2>Installation</h2>\n<h3>Release Version</h3>\n<h4>With pip</h4>\n<p>If you have Python 3 installed you can just use <code>pip</code>:</p>\n<pre><code>pip3 install pycine\n</code></pre>\n<h4>Compiled binary</h4>\n<p>There is also a binary version you can install with the following command:</p>\n<pre><code>curl -s https://phantomfuse.com/pfs_meta -o /usr/local/bin/pfs_meta &amp;&amp; chmod +x /usr/local/bin/pfs_meta\n</code></pre>\n<h3>Development version</h3>\n<pre><code>pip install git+https://github.com/ottomatic-io/pycine.git\n</code></pre>\n<h2>Example usage</h2>\n<h3>Changing the playback and timecode framerates</h3>\n<pre><code>pfs_meta set --playback-fps 60/1.001 --timecode_fps 60/1.001 A001C001_190302_16001.cine\n</code></pre>\n<p>You can also set metadata for multiple clips at once:</p>\n<pre><code>pfs_meta set --playback-fps 24/1.001 --timecode_fps 24/1.001 *.cine\n</code></pre>\n<h2>Help</h2>\n<p>Every command has its own help output. Just append <code>--help</code>:</p>\n<pre><code>$ pfs_meta --help\nUsage: pfs_meta [OPTIONS] COMMAND [ARGS]...\n\n  This tool allows .cine file metadata manipulation. Use COMMAND --help for\n  more info.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  copy  Copy metadata from a source clip\n  set   Set metadata\n  show  Show metadata\n</code></pre>\n<pre><code>$ pfs_meta set --help\nUsage: pfs_meta set [OPTIONS] [DESTINATIONS]...\n\n  Set metadata\n\nOptions:\n  --temp FLOAT          Set color temperature.\n  --cc FLOAT            Set color correction.\n  --record-fps INTEGER  Set record FPS.\n  --playback-fps TEXT   Set playback FPS. Use 60 or 60/1.001 but not 59.94\n  --timecode-fps TEXT   Set timecode FPS. Use 60 or 60/1.001 but not 59.94\n  --tone TEXT           Set tone curve in the form of \"[LABEL] x1 y1 x2 y2\".\n                        You can set up to 32 xy points.\n  --help                Show this message and exit.\n</code></pre>\n<pre><code>$ pfs_raw --help\nUsage: pfs_raw [OPTIONS] CINE_FILE [OUT_PATH]\n\nOptions:\n  --file-format [.png|.jpg|.tif]\n  --start-frame INTEGER\n  --count INTEGER\n  --version                       Show the version and exit.\n  --help                          Show this message and exit.\n</code></pre>\n<h2>Jupyter notebook</h2>\n<p>Check out an example on how to use the library from a jupyter notebook:\n<a href=\"notebooks/Display%20frames.ipynb\" rel=\"nofollow\">notebooks/Display frames.ipynb</a></p>\n\n          </div>"}, "last_serial": 4887936, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "06f0e11585c27459bdc6e58935c23b5d", "sha256": "e57aad96a696bb2817add271ed2426ded7b4c26d8f6e0ee5679ed7d8000638d4"}, "downloads": -1, "filename": "pycine-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06f0e11585c27459bdc6e58935c23b5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16276, "upload_time": "2018-11-10T19:43:14", "upload_time_iso_8601": "2018-11-10T19:43:14.136658Z", "url": "https://files.pythonhosted.org/packages/d5/96/cc9cdd7f62689663a3da88b49dcc4b2e437e5ebc2e3d0e7c289e60ddfcd9/pycine-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e32bb36a98841aa672f044f312a30449", "sha256": "4638f3d3a3f99c146696278555f7694eda97d9341bb436aa52e638522c160a6b"}, "downloads": -1, "filename": "pycine-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e32bb36a98841aa672f044f312a30449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2575519, "upload_time": "2018-11-10T19:43:16", "upload_time_iso_8601": "2018-11-10T19:43:16.718216Z", "url": "https://files.pythonhosted.org/packages/9e/d3/09793bf37b9aeb623a16b8664bb9a2a0f198551c9c86a2cbb902cae6696c/pycine-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "182206a9585abc1c585d5374cb3a3b77", "sha256": "517b794c8fcb77ee48ee3b80b78cc164a749a07e4df05be152ed0e271b4fb2cd"}, "downloads": -1, "filename": "pycine-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "182206a9585abc1c585d5374cb3a3b77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16274, "upload_time": "2018-11-10T19:47:46", "upload_time_iso_8601": "2018-11-10T19:47:46.620218Z", "url": "https://files.pythonhosted.org/packages/a8/04/8ed31f4aff0c0206b3b298bd702077027c784d205cd44db32ae9809bbfc3/pycine-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fbf36b5c9bdb9768e160affeaec2f35", "sha256": "0c30a05848f082d8cdc575b43a4df1726e4bc7ba1764511da3dad55a810bd687"}, "downloads": -1, "filename": "pycine-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1fbf36b5c9bdb9768e160affeaec2f35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2575537, "upload_time": "2018-11-10T19:47:49", "upload_time_iso_8601": "2018-11-10T19:47:49.814451Z", "url": "https://files.pythonhosted.org/packages/a7/35/92d712573dd6971cc9fbf3b4fcb81e5f433dc71bf6bb9d6ba6296cbfc105/pycine-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "03d4f59743557113d968dc4598d7193e", "sha256": "630e994ba67a860a5e4c87f0c961328c37113d8b697e33a24efae3d06fd901e7"}, "downloads": -1, "filename": "pycine-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "03d4f59743557113d968dc4598d7193e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17215, "upload_time": "2019-03-02T08:42:44", "upload_time_iso_8601": "2019-03-02T08:42:44.654969Z", "url": "https://files.pythonhosted.org/packages/6f/d7/4903db27504c7813c7fea55966c34927b120588b211c934372dd41a7e62f/pycine-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2026ad356f0efd035725cf88643f3b9", "sha256": "bf23584585d820556f9ad22a7ae93e7aa2aa1d786d1f31ca16d602c3af981856"}, "downloads": -1, "filename": "pycine-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a2026ad356f0efd035725cf88643f3b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2577283, "upload_time": "2019-03-02T08:42:47", "upload_time_iso_8601": "2019-03-02T08:42:47.031211Z", "url": "https://files.pythonhosted.org/packages/1c/20/0f0921148211b2dce58ee44052cf7260e15bf0b728b3a61482d6ef87d4ec/pycine-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "eaa4317d29ad1bfeeebda850a17ee2ac", "sha256": "cc6a33e4937e786d26c3c69b323719fda8f04ee8f9d3fe2a86c521482f90a2b1"}, "downloads": -1, "filename": "pycine-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eaa4317d29ad1bfeeebda850a17ee2ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17213, "upload_time": "2019-03-02T09:04:41", "upload_time_iso_8601": "2019-03-02T09:04:41.631365Z", "url": "https://files.pythonhosted.org/packages/cb/ca/f13ce61e5acf87fecd02f2783f527755cff9d698c8c6ecf20655facabf00/pycine-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2db03d90ddcb2452cb0be4f10a2fb21", "sha256": "d03da66deb3c5fb869de1f19a8f63a324f4c91577fa0cd46d2c780e415908673"}, "downloads": -1, "filename": "pycine-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a2db03d90ddcb2452cb0be4f10a2fb21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2577284, "upload_time": "2019-03-02T09:04:44", "upload_time_iso_8601": "2019-03-02T09:04:44.756911Z", "url": "https://files.pythonhosted.org/packages/ac/ab/3924ea5dff0a99c7f394befd68fca8c1465bc37eebba2de420aa0011102e/pycine-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eaa4317d29ad1bfeeebda850a17ee2ac", "sha256": "cc6a33e4937e786d26c3c69b323719fda8f04ee8f9d3fe2a86c521482f90a2b1"}, "downloads": -1, "filename": "pycine-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eaa4317d29ad1bfeeebda850a17ee2ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17213, "upload_time": "2019-03-02T09:04:41", "upload_time_iso_8601": "2019-03-02T09:04:41.631365Z", "url": "https://files.pythonhosted.org/packages/cb/ca/f13ce61e5acf87fecd02f2783f527755cff9d698c8c6ecf20655facabf00/pycine-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2db03d90ddcb2452cb0be4f10a2fb21", "sha256": "d03da66deb3c5fb869de1f19a8f63a324f4c91577fa0cd46d2c780e415908673"}, "downloads": -1, "filename": "pycine-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a2db03d90ddcb2452cb0be4f10a2fb21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2577284, "upload_time": "2019-03-02T09:04:44", "upload_time_iso_8601": "2019-03-02T09:04:44.756911Z", "url": "https://files.pythonhosted.org/packages/ac/ab/3924ea5dff0a99c7f394befd68fca8c1465bc37eebba2de420aa0011102e/pycine-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:28 2020"}