{"info": {"author": "Vladislav Boyadzhi", "author_email": "vladislav.boyadzhi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# CrossPredict\n[![PyPI version](https://badge.fury.io/py/crosspredict.svg)](https://badge.fury.io/py/crosspredict)\n[![Documentation Status](https://readthedocs.org/projects/crosspredict/badge/?version=latest)](https://crosspredict.readthedocs.io/en/latest/?badge=latest)\n\n* The library makes cross validation and reports generation easy\n* Easy to extend to other models\n* Supports Lightgbm, XGBoost\n* Supports different crossvalidation strategies:\n    * Supports crossvalidation by users (RepeatedKFold)\n    * Supports stratified crossvalidation by target column (RepeatedStratifiedKFold)\n    * Supports simple crossvalidation (RepeatedKFold)\n* Easy use of target encoding with double crossvalidation\n* Supports target encoding library category_encoders\n\n\n## Table of contents\n- [Installation](#installation)\n- [ReportsPreview](#reportspreview)\n- [Target Encoding with DoubleCrossValidation](#target-encoding-with-doublecrossvalidation)\n- [How to use](#how-to-use)\n- [Authors](#authors)\n\n## Installation\n```bash\npython -m pip install crosspredict\n```\n\n## ReportsPreview\n```python\n#precalculates all metrics\na = ReportBinary(cols_score = ['result_egr_to_one','probability'], \n                 cols_target=['target'],\n                 col_generation_deals='first_dt_no_comm_mon'\n                )\na.fit(df) \n```\n``` python\na.plot_report(report_shape = (4,2),\n              report={'roc-auc':  {'loc':(0, 0)},\n                      'precision-recall': [{'loc':(0, 1)}],\n                      'mean-prob': [{'loc':(1, 0)},{'loc':(1, 1)}],\n                      'gen-gini': {'loc':(2,0), 'colspan':2},\n                      'distribution': [{'loc':(3,0)},{'loc':(3,1)}]\n                     }\n             )\na.fig.savefig('report1.png')\n```\n![Report1](notebooks/report1.png \"Report#1\") \n```python\na.plot_report(report_shape = (3,2),\n              report={'roc-auc':  {'loc':(0, 0)},\n                      'precision-recall': {'loc':(0, 1)},\n                      'mean-prob': {'loc':(1, 0)},\n                      'gen-gini': [{'loc':(2,0), 'colspan':2}],\n                      'distribution': {'loc':(1,1)}\n                     },\n              cols_score=['probability']) \na.fig.savefig('report2.png')\n```\n![Report2](notebooks/report2.png \"Report#2\")\n\n## Target Encoding with DoubleCrossValidation\n```python\n# creates iterator\niter_df = Iterator(n_repeats=3,\n                    n_splits=10,\n                    random_state = 0,\n                    col_client = 'userid',\n                    cv_byclient=True)\n\n# fits target encoder (creates mappings for each fold)\ncross_encoder = CrossTargetEncoder(iterator = iter_df,\n                                    encoder_class=WOEEncoder,\n                                    n_splits= 5,\n                                    n_repeats= 3,\n                                    random_state= 0,\n                                    col_client= 'userid',\n                                    cv_byclient= True,\n                                    col_encoded= 'goal1',\n                                    cols= ['field3','field2','field11','field23','field18','field20']\n                                  )\ncross_encoder.fit(train)\n\n# train cross validation models\nmodel_class = CrossLightgbmModel(iterator=iter_df, \n                                 feature_name=feature_name,\n                                 params=params,\n                                 cols_cat = ['field3', 'field2', 'field11', 'field23', 'field18', 'field20'],\n                                 num_boost_round = 9999,\n                                 early_stopping_rounds = 50,\n                                 valid = True,\n                                 random_state = 0,\n                                 col_target = 'goal1',\n                                 cross_target_encoder = cross_encoder)\nresult = model_class.fit(train)\n```\n## How to use\n\n**Plot_Reports_for_Binary_Classification_problem_example** - [`Plot_Reports_for_Binary_Classification_problem_example.ipynb`](https://github.com//ya-ds/crosspredict/blob/master/notebooks/Plot_Reports_for_Binary_Classification_problem_example.ipynb)\n\n**Simple_example_in_one_Notebook** - [`Simple_example_in_one_Notebook.ipynb`](https://github.com//ya-ds/crosspredict/blob/master/notebooks/Simple_example_in_one_Notebook.ipynb)\n\n**Iterator_class** - [`Iterator_class.ipynb`](https://github.com//ya-ds/crosspredict/blob/master/notebooks/Iterator_class.ipynb)\n\n**CrossModelFabric_class** - [`CrossModelFabric_class.ipynb`](https://github.com//ya-ds/crosspredict/blob/master/notebooks/CrossModelFabric_class.ipynb)\n\n**CrossTargetEncoder_class** - [`CrossTargetEncoder_class.ipynb`](https://github.com//ya-ds/crosspredict/blob/master/notebooks/CrossTargetEncoder_class.ipynb)\n\n## Authors\n\n[Vladislav Boyadzhi](https://www.linkedin.com/in/vladislav-boyadzhi/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "crosspredict", "package_url": "https://pypi.org/project/crosspredict/", "platform": "", "project_url": "https://pypi.org/project/crosspredict/", "project_urls": null, "release_url": "https://pypi.org/project/crosspredict/0.1.1/", "requires_dist": ["numpy (>=1.18.1)", "hyperopt (>=0.2.3)", "lightgbm (>=2.3.1)", "pandas (>=0.25.3)", "shap (>=0.34.0)", "matplotlib (>=3.1.2)", "seaborn (>=0.9.0)", "xgboost (>=0.90)", "catboost (>=0.20.2)", "category-encoders (>=2.1.0)", "pytest (==5.3.5)", "pyyaml (==5.3)", "scikit-learn (>=0.22.2)"], "requires_python": "", "summary": "package for easy crossvalidation", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CrossPredict</h1>\n<p><a href=\"https://badge.fury.io/py/crosspredict\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ccd558ac7507e7c0ff7e81b3de119658c48b5e0/68747470733a2f2f62616467652e667572792e696f2f70792f63726f7373707265646963742e737667\"></a>\n<a href=\"https://crosspredict.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2c774f8da0b0fe93d45cd679cb796fe53b47171/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f63726f7373707265646963742f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<ul>\n<li>The library makes cross validation and reports generation easy</li>\n<li>Easy to extend to other models</li>\n<li>Supports Lightgbm, XGBoost</li>\n<li>Supports different crossvalidation strategies:\n<ul>\n<li>Supports crossvalidation by users (RepeatedKFold)</li>\n<li>Supports stratified crossvalidation by target column (RepeatedStratifiedKFold)</li>\n<li>Supports simple crossvalidation (RepeatedKFold)</li>\n</ul>\n</li>\n<li>Easy use of target encoding with double crossvalidation</li>\n<li>Supports target encoding library category_encoders</li>\n</ul>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#reportspreview\" rel=\"nofollow\">ReportsPreview</a></li>\n<li><a href=\"#target-encoding-with-doublecrossvalidation\" rel=\"nofollow\">Target Encoding with DoubleCrossValidation</a></li>\n<li><a href=\"#how-to-use\" rel=\"nofollow\">How to use</a></li>\n<li><a href=\"#authors\" rel=\"nofollow\">Authors</a></li>\n</ul>\n<h2>Installation</h2>\n<pre>python -m pip install crosspredict\n</pre>\n<h2>ReportsPreview</h2>\n<pre><span class=\"c1\">#precalculates all metrics</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">ReportBinary</span><span class=\"p\">(</span><span class=\"n\">cols_score</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'result_egr_to_one'</span><span class=\"p\">,</span><span class=\"s1\">'probability'</span><span class=\"p\">],</span> \n                 <span class=\"n\">cols_target</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'target'</span><span class=\"p\">],</span>\n                 <span class=\"n\">col_generation_deals</span><span class=\"o\">=</span><span class=\"s1\">'first_dt_no_comm_mon'</span>\n                <span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span> \n</pre>\n<pre><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">plot_report</span><span class=\"p\">(</span><span class=\"n\">report_shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n              <span class=\"n\">report</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'roc-auc'</span><span class=\"p\">:</span>  <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)},</span>\n                      <span class=\"s1\">'precision-recall'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)}],</span>\n                      <span class=\"s1\">'mean-prob'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)},{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)}],</span>\n                      <span class=\"s1\">'gen-gini'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"s1\">'colspan'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">},</span>\n                      <span class=\"s1\">'distribution'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)},{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)}]</span>\n                     <span class=\"p\">}</span>\n             <span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'report1.png'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Report1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ff3eabfefe3805465f2d46b5a70a0e7d4cc3416/6e6f7465626f6f6b732f7265706f7274312e706e67\"></p>\n<pre><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">plot_report</span><span class=\"p\">(</span><span class=\"n\">report_shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n              <span class=\"n\">report</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'roc-auc'</span><span class=\"p\">:</span>  <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)},</span>\n                      <span class=\"s1\">'precision-recall'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)},</span>\n                      <span class=\"s1\">'mean-prob'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)},</span>\n                      <span class=\"s1\">'gen-gini'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"s1\">'colspan'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">}],</span>\n                      <span class=\"s1\">'distribution'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'loc'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)}</span>\n                     <span class=\"p\">},</span>\n              <span class=\"n\">cols_score</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'probability'</span><span class=\"p\">])</span> \n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'report2.png'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Report2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c6002ba1f2683d8d5c0da06324921beb462cce0/6e6f7465626f6f6b732f7265706f7274322e706e67\"></p>\n<h2>Target Encoding with DoubleCrossValidation</h2>\n<pre><span class=\"c1\"># creates iterator</span>\n<span class=\"n\">iter_df</span> <span class=\"o\">=</span> <span class=\"n\">Iterator</span><span class=\"p\">(</span><span class=\"n\">n_repeats</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                    <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                    <span class=\"n\">random_state</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"n\">col_client</span> <span class=\"o\">=</span> <span class=\"s1\">'userid'</span><span class=\"p\">,</span>\n                    <span class=\"n\">cv_byclient</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fits target encoder (creates mappings for each fold)</span>\n<span class=\"n\">cross_encoder</span> <span class=\"o\">=</span> <span class=\"n\">CrossTargetEncoder</span><span class=\"p\">(</span><span class=\"n\">iterator</span> <span class=\"o\">=</span> <span class=\"n\">iter_df</span><span class=\"p\">,</span>\n                                    <span class=\"n\">encoder_class</span><span class=\"o\">=</span><span class=\"n\">WOEEncoder</span><span class=\"p\">,</span>\n                                    <span class=\"n\">n_splits</span><span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n                                    <span class=\"n\">n_repeats</span><span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n                                    <span class=\"n\">random_state</span><span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                                    <span class=\"n\">col_client</span><span class=\"o\">=</span> <span class=\"s1\">'userid'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">cv_byclient</span><span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                                    <span class=\"n\">col_encoded</span><span class=\"o\">=</span> <span class=\"s1\">'goal1'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">cols</span><span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'field3'</span><span class=\"p\">,</span><span class=\"s1\">'field2'</span><span class=\"p\">,</span><span class=\"s1\">'field11'</span><span class=\"p\">,</span><span class=\"s1\">'field23'</span><span class=\"p\">,</span><span class=\"s1\">'field18'</span><span class=\"p\">,</span><span class=\"s1\">'field20'</span><span class=\"p\">]</span>\n                                  <span class=\"p\">)</span>\n<span class=\"n\">cross_encoder</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># train cross validation models</span>\n<span class=\"n\">model_class</span> <span class=\"o\">=</span> <span class=\"n\">CrossLightgbmModel</span><span class=\"p\">(</span><span class=\"n\">iterator</span><span class=\"o\">=</span><span class=\"n\">iter_df</span><span class=\"p\">,</span> \n                                 <span class=\"n\">feature_name</span><span class=\"o\">=</span><span class=\"n\">feature_name</span><span class=\"p\">,</span>\n                                 <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">,</span>\n                                 <span class=\"n\">cols_cat</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'field3'</span><span class=\"p\">,</span> <span class=\"s1\">'field2'</span><span class=\"p\">,</span> <span class=\"s1\">'field11'</span><span class=\"p\">,</span> <span class=\"s1\">'field23'</span><span class=\"p\">,</span> <span class=\"s1\">'field18'</span><span class=\"p\">,</span> <span class=\"s1\">'field20'</span><span class=\"p\">],</span>\n                                 <span class=\"n\">num_boost_round</span> <span class=\"o\">=</span> <span class=\"mi\">9999</span><span class=\"p\">,</span>\n                                 <span class=\"n\">early_stopping_rounds</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n                                 <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                                 <span class=\"n\">random_state</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                                 <span class=\"n\">col_target</span> <span class=\"o\">=</span> <span class=\"s1\">'goal1'</span><span class=\"p\">,</span>\n                                 <span class=\"n\">cross_target_encoder</span> <span class=\"o\">=</span> <span class=\"n\">cross_encoder</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">model_class</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n</pre>\n<h2>How to use</h2>\n<p><strong>Plot_Reports_for_Binary_Classification_problem_example</strong> - <a href=\"https://github.com//ya-ds/crosspredict/blob/master/notebooks/Plot_Reports_for_Binary_Classification_problem_example.ipynb\" rel=\"nofollow\"><code>Plot_Reports_for_Binary_Classification_problem_example.ipynb</code></a></p>\n<p><strong>Simple_example_in_one_Notebook</strong> - <a href=\"https://github.com//ya-ds/crosspredict/blob/master/notebooks/Simple_example_in_one_Notebook.ipynb\" rel=\"nofollow\"><code>Simple_example_in_one_Notebook.ipynb</code></a></p>\n<p><strong>Iterator_class</strong> - <a href=\"https://github.com//ya-ds/crosspredict/blob/master/notebooks/Iterator_class.ipynb\" rel=\"nofollow\"><code>Iterator_class.ipynb</code></a></p>\n<p><strong>CrossModelFabric_class</strong> - <a href=\"https://github.com//ya-ds/crosspredict/blob/master/notebooks/CrossModelFabric_class.ipynb\" rel=\"nofollow\"><code>CrossModelFabric_class.ipynb</code></a></p>\n<p><strong>CrossTargetEncoder_class</strong> - <a href=\"https://github.com//ya-ds/crosspredict/blob/master/notebooks/CrossTargetEncoder_class.ipynb\" rel=\"nofollow\"><code>CrossTargetEncoder_class.ipynb</code></a></p>\n<h2>Authors</h2>\n<p><a href=\"https://www.linkedin.com/in/vladislav-boyadzhi/\" rel=\"nofollow\">Vladislav Boyadzhi</a></p>\n\n          </div>"}, "last_serial": 7099418, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f4a44092983b40e28f8062def8942c54", "sha256": "463c8dcd59fde2daf36397ca0850cd2bc5f1647909c026148275d0f7eb70f636"}, "downloads": -1, "filename": "crosspredict-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f4a44092983b40e28f8062def8942c54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37654, "upload_time": "2020-04-04T07:05:14", "upload_time_iso_8601": "2020-04-04T07:05:14.854161Z", "url": "https://files.pythonhosted.org/packages/ba/96/563863b92423c85c84cbeeea37441db73017f13fdaecfa9a279ddf17c70c/crosspredict-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab99588bfd5f674bdf25d29f547e8790", "sha256": "03743222a049b3d9d180b0ec99c887d37d5865277f018ddc4214aea27a755af7"}, "downloads": -1, "filename": "crosspredict-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ab99588bfd5f674bdf25d29f547e8790", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17694, "upload_time": "2020-04-04T07:05:18", "upload_time_iso_8601": "2020-04-04T07:05:18.773116Z", "url": "https://files.pythonhosted.org/packages/42/4e/6c2992a9a7dd40d5daf015f3352345f13dd94ca841d47cefdb68f6998f3a/crosspredict-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6557537d9d1cc5b79f2f6737c8e15d96", "sha256": "f1d71c4ea9971dbf7f59a7873d9ecbb58e29b56bb55eb5cf0ded145bbe18a3b5"}, "downloads": -1, "filename": "crosspredict-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6557537d9d1cc5b79f2f6737c8e15d96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49958, "upload_time": "2020-04-05T16:33:39", "upload_time_iso_8601": "2020-04-05T16:33:39.799173Z", "url": "https://files.pythonhosted.org/packages/01/08/c81bc2f701af6f21bc662dad10a4f5c08dc436eeb417a9133f5533aa5368/crosspredict-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4387eda69fb0971a6dcecfea21ee4450", "sha256": "1ffe9eee4ccaa12f9481e4d351532d62fe07fad607ee86f79aa429d71c818da7"}, "downloads": -1, "filename": "crosspredict-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4387eda69fb0971a6dcecfea21ee4450", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28257, "upload_time": "2020-04-05T16:33:41", "upload_time_iso_8601": "2020-04-05T16:33:41.776299Z", "url": "https://files.pythonhosted.org/packages/0f/85/e7474133fa3456bf69796278206c88f309a52438bceed7874225be509a1d/crosspredict-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "41305cf620a5fd0ac8929739b8402311", "sha256": "8fa8367e9d5930099f597f473f47cfe764e2d7479493135dd7c3258618d886b4"}, "downloads": -1, "filename": "crosspredict-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41305cf620a5fd0ac8929739b8402311", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49706, "upload_time": "2020-04-25T13:05:48", "upload_time_iso_8601": "2020-04-25T13:05:48.935512Z", "url": "https://files.pythonhosted.org/packages/53/70/fef6bcf7d7ec04e918851d6d36fb5e1578d1498a55b79f419aef1c67391c/crosspredict-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d141595e46480b9a6c5aa6dccfcd50d", "sha256": "de8c19f96a5694161d74609d1129ad4ec6fc74039401438039d0097dc17756ec"}, "downloads": -1, "filename": "crosspredict-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1d141595e46480b9a6c5aa6dccfcd50d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28089, "upload_time": "2020-04-25T13:05:50", "upload_time_iso_8601": "2020-04-25T13:05:50.667281Z", "url": "https://files.pythonhosted.org/packages/d3/e7/990f28ecf07cd4e02bc530802d91005c1d9b7e757ee4de7a1bc95bcbeae0/crosspredict-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41305cf620a5fd0ac8929739b8402311", "sha256": "8fa8367e9d5930099f597f473f47cfe764e2d7479493135dd7c3258618d886b4"}, "downloads": -1, "filename": "crosspredict-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41305cf620a5fd0ac8929739b8402311", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49706, "upload_time": "2020-04-25T13:05:48", "upload_time_iso_8601": "2020-04-25T13:05:48.935512Z", "url": "https://files.pythonhosted.org/packages/53/70/fef6bcf7d7ec04e918851d6d36fb5e1578d1498a55b79f419aef1c67391c/crosspredict-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d141595e46480b9a6c5aa6dccfcd50d", "sha256": "de8c19f96a5694161d74609d1129ad4ec6fc74039401438039d0097dc17756ec"}, "downloads": -1, "filename": "crosspredict-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1d141595e46480b9a6c5aa6dccfcd50d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28089, "upload_time": "2020-04-25T13:05:50", "upload_time_iso_8601": "2020-04-25T13:05:50.667281Z", "url": "https://files.pythonhosted.org/packages/d3/e7/990f28ecf07cd4e02bc530802d91005c1d9b7e757ee4de7a1bc95bcbeae0/crosspredict-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:10 2020"}