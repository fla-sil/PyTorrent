{"info": {"author": "Dylan Thacker-Smith", "author_email": "Dylan.Smith@shopify.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Python Errbit Reporter\n======================\n\nA client for reporting exceptions to errbit.\n\nInstallation\n------------\n\n.. code:: shell\n\n    pip install errbit_reporter\n\nUsage\n-----\n\n.. code:: python\n\n    import errbit_reporter as errbit\n\n    config = errbit.Configuration(\n        api_key='491b8cbb777b051df1406ae0bcdbee2c',\n        errbit_url='http://errbit.yourserver.com')\n\n    client = errbit.Client(config)\n    with client.notify_on_exception():\n        your_code_here()\n\nTo avoid sending exceptions in development, just use `None`\nfor the errbit_url. For example:\n\n.. code:: python\n\n    config = errbit.Configuration(\n        api_key='491b8cbb777b051df1406ae0bcdbee2c',\n        errbit_url=None,\n        environment_name='development')\n\nAdditional context can be provided for the error.  For example:\n\n.. code:: python\n\n    context = {\n        'request_url': 'http://example.com/account/signup',\n        'component': 'AccountController',\n        'action': 'signup',\n        'params': {\n            'user': {\n                'name': 'dylan'\n            }\n        },\n        'cgi_data': {\n            'REQUEST_METHOD': 'POST',\n            'HTTP_USER_AGENT': 'curl'\n        },\n        'session' {\n            'session_id': '6df95c0296cee016fb672af9310667e24dca066909a723dd6439369bb82911f3'\n        }\n    }\n    with client.notify_on_exception(**context):\n        your_code_here()\n\nA notice can also be sent without a context manager to get\nnotice metadata which can be used to log the errbit notice url.\n\n.. code:: python\n\n    try:\n        your_code_here()\n    except:\n        notice_metadata = client.notify()\n        print(notice_metadata.url)\n\nBy default the exception information is taken from sys.exc_info(),\nbut exc_info can also be passed as the first parameter, and additional\ncontext can be provided using the same keyword arguments as\nnotify_on_exception.\n\nIn a distributed system (e.g. `Spark <https://spark.apache.org/>`_)\nit is useful to be able to specify the backtrace manually. For\nexample, this the backtrace could consist of local and remote\nprocesses stack trace, even if the remote processes is written in\nanother language.\n\n.. code:: python\n\n    exc_type, exc_value, exc_traceback = sys.exc_info()\n    backtrace = traceback.extract_tb(exc_traceback)\n    notice = errbit.Notice(config, exc_type.__name__, str(exc_value), backtrace)\n    client.send_notice(notice)\n\nTest Suite\n----------\n\n.. code:: shell\n\n    make test\n\nCopyright\n---------\n\nCopyright (c) 2014 \"Shopify Inc.\". See LICENSE for details.", "description_content_type": null, "docs_url": "https://pythonhosted.org/errbit-reporter/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dylanahsmith/errbit-reporter-python", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "errbit-reporter", "package_url": "https://pypi.org/project/errbit-reporter/", "platform": "Any", "project_url": "https://pypi.org/project/errbit-reporter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dylanahsmith/errbit-reporter-python"}, "release_url": "https://pypi.org/project/errbit-reporter/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Errbit Client", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A client for reporting exceptions to errbit.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install errbit_reporter\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">errbit_reporter</span> <span class=\"k\">as</span> <span class=\"nn\">errbit</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">errbit</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">(</span>\n    <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'491b8cbb777b051df1406ae0bcdbee2c'</span><span class=\"p\">,</span>\n    <span class=\"n\">errbit_url</span><span class=\"o\">=</span><span class=\"s1\">'http://errbit.yourserver.com'</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">errbit</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">notify_on_exception</span><span class=\"p\">():</span>\n    <span class=\"n\">your_code_here</span><span class=\"p\">()</span>\n</pre>\n<p>To avoid sending exceptions in development, just use <cite>None</cite>\nfor the errbit_url. For example:</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">errbit</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">(</span>\n    <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'491b8cbb777b051df1406ae0bcdbee2c'</span><span class=\"p\">,</span>\n    <span class=\"n\">errbit_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">environment_name</span><span class=\"o\">=</span><span class=\"s1\">'development'</span><span class=\"p\">)</span>\n</pre>\n<p>Additional context can be provided for the error.  For example:</p>\n<pre><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'request_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://example.com/account/signup'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'component'</span><span class=\"p\">:</span> <span class=\"s1\">'AccountController'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'action'</span><span class=\"p\">:</span> <span class=\"s1\">'signup'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'params'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'dylan'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'cgi_data'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'REQUEST_METHOD'</span><span class=\"p\">:</span> <span class=\"s1\">'POST'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HTTP_USER_AGENT'</span><span class=\"p\">:</span> <span class=\"s1\">'curl'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'session'</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'session_id'</span><span class=\"p\">:</span> <span class=\"s1\">'6df95c0296cee016fb672af9310667e24dca066909a723dd6439369bb82911f3'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">notify_on_exception</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">your_code_here</span><span class=\"p\">()</span>\n</pre>\n<p>A notice can also be sent without a context manager to get\nnotice metadata which can be used to log the errbit notice url.</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">your_code_here</span><span class=\"p\">()</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"n\">notice_metadata</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">notice_metadata</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n</pre>\n<p>By default the exception information is taken from sys.exc_info(),\nbut exc_info can also be passed as the first parameter, and additional\ncontext can be provided using the same keyword arguments as\nnotify_on_exception.</p>\n<p>In a distributed system (e.g. <a href=\"https://spark.apache.org/\" rel=\"nofollow\">Spark</a>)\nit is useful to be able to specify the backtrace manually. For\nexample, this the backtrace could consist of local and remote\nprocesses stack trace, even if the remote processes is written in\nanother language.</p>\n<pre><span class=\"n\">exc_type</span><span class=\"p\">,</span> <span class=\"n\">exc_value</span><span class=\"p\">,</span> <span class=\"n\">exc_traceback</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exc_info</span><span class=\"p\">()</span>\n<span class=\"n\">backtrace</span> <span class=\"o\">=</span> <span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">extract_tb</span><span class=\"p\">(</span><span class=\"n\">exc_traceback</span><span class=\"p\">)</span>\n<span class=\"n\">notice</span> <span class=\"o\">=</span> <span class=\"n\">errbit</span><span class=\"o\">.</span><span class=\"n\">Notice</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">exc_type</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">exc_value</span><span class=\"p\">),</span> <span class=\"n\">backtrace</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">send_notice</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"test-suite\">\n<h2>Test Suite</h2>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (c) 2014 \u201cShopify Inc.\u201d. See LICENSE for details.</p>\n</div>\n\n          </div>"}, "last_serial": 2339029, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6ad22fcb9ec91eb049ddc2c04234b682", "sha256": "078e711ebea6cc784de4a1a214652d31e17fdeea8c7cf3cc5055458b30367486"}, "downloads": -1, "filename": "errbit-reporter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6ad22fcb9ec91eb049ddc2c04234b682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3378, "upload_time": "2014-07-14T17:25:49", "upload_time_iso_8601": "2014-07-14T17:25:49.602677Z", "url": "https://files.pythonhosted.org/packages/9d/d7/760b1535c72e0ecafc468df1f754d9d017f9d060db3583f60d2950000461/errbit-reporter-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6c2532bc129ec1b62c3ec2838d454a38", "sha256": "f3fa0b731bc91d0d5a035c9e30670ed0f7682bf575af98ed66e2ea386a6aea2e"}, "downloads": -1, "filename": "errbit-reporter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6c2532bc129ec1b62c3ec2838d454a38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5551, "upload_time": "2014-07-15T21:12:03", "upload_time_iso_8601": "2014-07-15T21:12:03.328780Z", "url": "https://files.pythonhosted.org/packages/bb/ab/421694b1fdd37f8a13511587f261cc723c9e03ebf80f13acdf9b295d91ab/errbit-reporter-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c49efede7ba84721130408e2559eaf1e", "sha256": "a7cb73063fc52a99902f03f3ecec206146f5883b303656ed2bd6d4c5f8eef9ff"}, "downloads": -1, "filename": "errbit-reporter-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c49efede7ba84721130408e2559eaf1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5727, "upload_time": "2014-07-18T18:54:23", "upload_time_iso_8601": "2014-07-18T18:54:23.020269Z", "url": "https://files.pythonhosted.org/packages/8b/01/5c4806c44106a08628d2b9f85c65d1c370a233fdb326d098fc6ef1619b71/errbit-reporter-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c49efede7ba84721130408e2559eaf1e", "sha256": "a7cb73063fc52a99902f03f3ecec206146f5883b303656ed2bd6d4c5f8eef9ff"}, "downloads": -1, "filename": "errbit-reporter-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c49efede7ba84721130408e2559eaf1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5727, "upload_time": "2014-07-18T18:54:23", "upload_time_iso_8601": "2014-07-18T18:54:23.020269Z", "url": "https://files.pythonhosted.org/packages/8b/01/5c4806c44106a08628d2b9f85c65d1c370a233fdb326d098fc6ef1619b71/errbit-reporter-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}