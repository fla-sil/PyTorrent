{"info": {"author": "Len Boyette", "author_email": "boyettel+pytanium@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing"], "description": "pytanium\n========\n\nA front-end web testing tool in Python\n\nWhy\n---\n\nWe need a front-end testing tool that combines the strengths of existing\ntools\n\nComparison\n----------\n\nFeatures not listed below are assumed to be the same among the tools,\nie. cross-browser testing\n\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Capability                        | Description                                     | Selenium   | Sahi                       | Watir    | pytanium   |\n+===================================+=================================================+============+============================+==========+============+\n| Easy HTTPS                        | Auto-accept SSL certs                           | Yes        | Pro only                   | Yes      | Yes        |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Prevent alerts/confirms/prompts   | Doesn't block on these events                   | No         | Yes                        | No       | Yes\\*      |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Prevent print                     | Doesn't block on print                          | No         | Yes                        | No       | Yes\\*      |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| AJAX waits                        | Waits for AJAX calls to complete                | No         | Yes                        | No       | Yes\\*      |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| File downloads                    | Allows files to be saved                        | No         | Yes                        | No       | No         |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Relational identifiers            | Identify objects using in, near, contains etc   | No         | Yes                        | No       | To do      |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Recorder/Object spy               | Easy identification of elements                 | Yes        | Yes                        | No       | To do      |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Languages                         | Programming languages                           | Many       | JavaScript/Java/Ruby       | Ruby     | Python     |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Cross-domain support              | Consistent cross-domain support                 | Yes        | Occasional configuration   | Yes      | Yes        |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Debugging                         | Breakpoints and introspection                   | Yes        | Sort of\\*\\*                | Yes      | Yes        |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n| Technology                        | Browser interaction method                      | Native     | JavaScript events          | Native   | Native     |\n+-----------------------------------+-------------------------------------------------+------------+----------------------------+----------+------------+\n\n\\*Works as long as the event isn't triggered before the document is\nloaded\n\n\\*\\*Sahi supports running a script line by line. For introspection,\nJavaScript must be executed while the script is paused.\n\nHow\n---\n\nPytanium uses the `python binding for selenium`_. To provide the\nfeatures not typically included with Selenium (AJAX waits, blocking\nprint calls, etc), pytanium injects javascript on nearly every call to\nthe browser. This doesn't have a noticeable impact on performance.\n\nLanguage Features\n-----------------\n\nPytanium makes it easy to switch from Selenium, Sahi, or Watir. In doing\nso, it supports a lot of the same syntax from each of these tools.\n\nSelenium\n~~~~~~~~\n\nIf you're writing `selenium with python`_ you don't have to change your\nexisting code, it's syntactically correct pytanium code.\n\nSahi\n~~~~\n\nPytanium's features are heavily inspired by Sahi, so a lot of Sahi's\nsyntax works.\n\nRecorder/Object spy\n-------------------\n\nSahi has an excellent object spy and recorder. The pytanium recorder\nwill be a fork of Sahi Open Source with added pytanium support.\n\n.. _python binding for selenium: http://selenium.googlecode.com/svn/trunk/docs/api/py/index.html\n.. _selenium with python: http://selenium.googlecode.com/svn/trunk/docs/api/py/index.html\n\nLicense\n-------\n\nLGPL", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kevlened/pytanium", "keywords": "testing", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "pytanium", "package_url": "https://pypi.org/project/pytanium/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pytanium/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kevlened/pytanium"}, "release_url": "https://pypi.org/project/pytanium/0.1/", "requires_dist": null, "requires_python": null, "summary": "Selenium wrapper to add additional features", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A front-end web testing tool in Python</p>\n<div id=\"why\">\n<h2>Why</h2>\n<p>We need a front-end testing tool that combines the strengths of existing\ntools</p>\n</div>\n<div id=\"comparison\">\n<h2>Comparison</h2>\n<p>Features not listed below are assumed to be the same among the tools,\nie. cross-browser testing</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Capability</th>\n<th>Description</th>\n<th>Selenium</th>\n<th>Sahi</th>\n<th>Watir</th>\n<th>pytanium</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Easy HTTPS</td>\n<td>Auto-accept SSL certs</td>\n<td>Yes</td>\n<td>Pro only</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr><td>Prevent alerts/confirms/prompts</td>\n<td>Doesn\u2019t block on these events</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>Yes*</td>\n</tr>\n<tr><td>Prevent print</td>\n<td>Doesn\u2019t block on print</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>Yes*</td>\n</tr>\n<tr><td>AJAX waits</td>\n<td>Waits for AJAX calls to complete</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>Yes*</td>\n</tr>\n<tr><td>File downloads</td>\n<td>Allows files to be saved</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr><td>Relational identifiers</td>\n<td>Identify objects using in, near, contains etc</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n<td>To do</td>\n</tr>\n<tr><td>Recorder/Object spy</td>\n<td>Easy identification of elements</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>No</td>\n<td>To do</td>\n</tr>\n<tr><td>Languages</td>\n<td>Programming languages</td>\n<td>Many</td>\n<td>JavaScript/Java/Ruby</td>\n<td>Ruby</td>\n<td>Python</td>\n</tr>\n<tr><td>Cross-domain support</td>\n<td>Consistent cross-domain support</td>\n<td>Yes</td>\n<td>Occasional configuration</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr><td>Debugging</td>\n<td>Breakpoints and introspection</td>\n<td>Yes</td>\n<td>Sort of**</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr><td>Technology</td>\n<td>Browser interaction method</td>\n<td>Native</td>\n<td>JavaScript events</td>\n<td>Native</td>\n<td>Native</td>\n</tr>\n</tbody>\n</table>\n<p>*Works as long as the event isn\u2019t triggered before the document is\nloaded</p>\n<p>**Sahi supports running a script line by line. For introspection,\nJavaScript must be executed while the script is paused.</p>\n</div>\n<div id=\"how\">\n<h2>How</h2>\n<p>Pytanium uses the <a href=\"http://selenium.googlecode.com/svn/trunk/docs/api/py/index.html\" rel=\"nofollow\">python binding for selenium</a>. To provide the\nfeatures not typically included with Selenium (AJAX waits, blocking\nprint calls, etc), pytanium injects javascript on nearly every call to\nthe browser. This doesn\u2019t have a noticeable impact on performance.</p>\n</div>\n<div id=\"language-features\">\n<h2>Language Features</h2>\n<p>Pytanium makes it easy to switch from Selenium, Sahi, or Watir. In doing\nso, it supports a lot of the same syntax from each of these tools.</p>\n<div id=\"selenium\">\n<h3>Selenium</h3>\n<p>If you\u2019re writing <a href=\"http://selenium.googlecode.com/svn/trunk/docs/api/py/index.html\" rel=\"nofollow\">selenium with python</a> you don\u2019t have to change your\nexisting code, it\u2019s syntactically correct pytanium code.</p>\n</div>\n<div id=\"sahi\">\n<h3>Sahi</h3>\n<p>Pytanium\u2019s features are heavily inspired by Sahi, so a lot of Sahi\u2019s\nsyntax works.</p>\n</div>\n</div>\n<div id=\"recorder-object-spy\">\n<h2>Recorder/Object spy</h2>\n<p>Sahi has an excellent object spy and recorder. The pytanium recorder\nwill be a fork of Sahi Open Source with added pytanium support.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>LGPL</p>\n</div>\n\n          </div>"}, "last_serial": 926071, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "062af554464e5e3d713ca95051888919", "sha256": "ac4445d5c88c306d5cd17dad0a749869777627612a88add8654058719e31a699"}, "downloads": -1, "filename": "pytanium-0.1.win32.exe", "has_sig": false, "md5_digest": "062af554464e5e3d713ca95051888919", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 205479, "upload_time": "2013-10-28T02:06:03", "upload_time_iso_8601": "2013-10-28T02:06:03.121883Z", "url": "https://files.pythonhosted.org/packages/46/93/65c149b6edfd22c58920efec0e0661306f1335d841e80d829a0b68e92d22/pytanium-0.1.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dd5f84885b482c6d122d74b93a8b72a", "sha256": "92f95008854ebb702d9bcb9952306d30e87c00376e5484da69bd30e9b0404684"}, "downloads": -1, "filename": "pytanium-0.1.zip", "has_sig": false, "md5_digest": "9dd5f84885b482c6d122d74b93a8b72a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9169, "upload_time": "2013-10-28T02:05:59", "upload_time_iso_8601": "2013-10-28T02:05:59.627813Z", "url": "https://files.pythonhosted.org/packages/c8/78/724b74a9f4e913a30b7c788dda26c74f5dcb350a7091c5e4faaca2155bfa/pytanium-0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "062af554464e5e3d713ca95051888919", "sha256": "ac4445d5c88c306d5cd17dad0a749869777627612a88add8654058719e31a699"}, "downloads": -1, "filename": "pytanium-0.1.win32.exe", "has_sig": false, "md5_digest": "062af554464e5e3d713ca95051888919", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 205479, "upload_time": "2013-10-28T02:06:03", "upload_time_iso_8601": "2013-10-28T02:06:03.121883Z", "url": "https://files.pythonhosted.org/packages/46/93/65c149b6edfd22c58920efec0e0661306f1335d841e80d829a0b68e92d22/pytanium-0.1.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dd5f84885b482c6d122d74b93a8b72a", "sha256": "92f95008854ebb702d9bcb9952306d30e87c00376e5484da69bd30e9b0404684"}, "downloads": -1, "filename": "pytanium-0.1.zip", "has_sig": false, "md5_digest": "9dd5f84885b482c6d122d74b93a8b72a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9169, "upload_time": "2013-10-28T02:05:59", "upload_time_iso_8601": "2013-10-28T02:05:59.627813Z", "url": "https://files.pythonhosted.org/packages/c8/78/724b74a9f4e913a30b7c788dda26c74f5dcb350a7091c5e4faaca2155bfa/pytanium-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 02:55:38 2020"}