{"info": {"author": "ma-ha", "author_email": "ma@mh-svr.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Topic :: Internet :: WWW/HTTP"], "description": "Easy Web App (for Python)\n=========================\nCreate web applications easily. \n\nThis is a `PyPI package <https://pypi.python.org/pypi/easy-web-app>`_\nfor the `rest-web-gui <https://github.com/ma-ha/rest-web-ui>`_ framework.\n\nFocus is on *web applications* (not simple web pages). \nA lot of plug-ins are available to get a portal it quickly configured:\n\n- Forms\n- Tables / lists\n- Content: via MediaWiki API, plain HTML views, or help dialogs\n- I/O: control switches/drawer, gauges, graphs, LEDs, displays, ...\n- i18n: switch language\n- Maps: POIs, routes, traffic, ...\n- Page to page navigation with navigation tabs, menus, links and session data\n- Source code display\n- Security: HTTP Basic authentication or OAuth \n- ...\n\nThis is how it may look like:\n\n.. image:: https://raw.githubusercontent.com/ma-ha/easy-web-app/master/examples/demo-screen.png\n\nCheck out the `online demos <http://mh-svr.de/pong_dev>`_.\n\nRemark: It is also available as `Node.js API package <https://www.npmjs.com/package/easy-web-app>`_.\n\nGetting started\n===============\nPrepare:\n--------\n1. Create a web application project folder, e.g.\n   ``mkdir ~/myapp``\n2. Create a virtual Python environment for this folder:\n   ``virtualenv ~/myapp``\n3. Change into the project folder and activate the virtual environment:\n   ``cd ~/myapp; source bin\\activate``\n4. Install this package:\n   ``pip install easy-web-app``\n   \nCreate first web app with Python:\n---------------------------------\nCreate a file, e.g. ``firstapp.py``  \n  \n::\n\n\tfrom easywebapp.webapp import Portal \n\timport easywebapp.page_layout as page\n\t\n\tmainpage = page.PageLayout( 'First Page' )\n\t\n\t# initialize portal\n\tportal = Portal( 'My Portal', 8000, mainpage )\n\t\n\t# define a custom web service \n\tportal.addURL( '/myservice', 'myservice' )\n\t\n\tclass myservice:\n\t    def GET( self ):\n\t        return 'Hello World'\n\t\n\t# start the web server\n\tportal.run()\n\nTODOs\n-----\n- [x] First working *rest-web-ui* integration\n- [x] PyPI package\n- [ ] configure port from init\n- [x] portal.getPage( name )  \n- [x] portal.addPage( pageId [, title] [, viewDef] [, viewConfig] ) \n- [ ] Portal pages navigation tabs\n- [x] page.addView( def [, config]  )\n- [x] page.addColumnsRow( id, width )\n- [x] row.addView( def [, config] )\n- [x] row.addColumnsRow ( id, height )\n- [x] column.addView ( def [, config] )\n- [x] column.addRowsColumn ( id, width )  \n- [x] View API\n- [ ] I/O server and API", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ma-ha/easy-py-web-app", "keywords": "GUI web app browser AJAX easy portal REST RESTful web service form table I/O content serverless API centric", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "easy-web-app", "package_url": "https://pypi.org/project/easy-web-app/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/easy-web-app/", "project_urls": {"Homepage": "https://github.com/ma-ha/easy-py-web-app"}, "release_url": "https://pypi.org/project/easy-web-app/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Create web applications easily by defining them in JSON format.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"easy-web-app-for-python\">\n<h2>Easy Web App (for Python)</h2>\n<p>Create web applications easily.</p>\n<p>This is a <a href=\"https://pypi.python.org/pypi/easy-web-app\" rel=\"nofollow\">PyPI package</a>\nfor the <a href=\"https://github.com/ma-ha/rest-web-ui\" rel=\"nofollow\">rest-web-gui</a> framework.</p>\n<p>Focus is on <em>web applications</em> (not simple web pages).\nA lot of plug-ins are available to get a portal it quickly configured:</p>\n<ul>\n<li>Forms</li>\n<li>Tables / lists</li>\n<li>Content: via MediaWiki API, plain HTML views, or help dialogs</li>\n<li>I/O: control switches/drawer, gauges, graphs, LEDs, displays, \u2026</li>\n<li>i18n: switch language</li>\n<li>Maps: POIs, routes, traffic, \u2026</li>\n<li>Page to page navigation with navigation tabs, menus, links and session data</li>\n<li>Source code display</li>\n<li>Security: HTTP Basic authentication or OAuth</li>\n<li>\u2026</li>\n</ul>\n<p>This is how it may look like:</p>\n<img alt=\"https://raw.githubusercontent.com/ma-ha/easy-web-app/master/examples/demo-screen.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd41f73fd39642e2e24d96aaae0ff26c979747d8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d612d68612f656173792d7765622d6170702f6d61737465722f6578616d706c65732f64656d6f2d73637265656e2e706e67\">\n<p>Check out the <a href=\"http://mh-svr.de/pong_dev\" rel=\"nofollow\">online demos</a>.</p>\n<p>Remark: It is also available as <a href=\"https://www.npmjs.com/package/easy-web-app\" rel=\"nofollow\">Node.js API package</a>.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<div id=\"prepare\">\n<h3>Prepare:</h3>\n<ol>\n<li>Create a web application project folder, e.g.\n<tt>mkdir ~/myapp</tt></li>\n<li>Create a virtual Python environment for this folder:\n<tt>virtualenv ~/myapp</tt></li>\n<li>Change into the project folder and activate the virtual environment:\n<tt>cd ~/myapp; source bin\\activate</tt></li>\n<li>Install this package:\n<tt>pip install <span class=\"pre\">easy-web-app</span></tt></li>\n</ol>\n</div>\n<div id=\"create-first-web-app-with-python\">\n<h3>Create first web app with Python:</h3>\n<p>Create a file, e.g. <tt>firstapp.py</tt></p>\n<pre>from easywebapp.webapp import Portal\nimport easywebapp.page_layout as page\n\nmainpage = page.PageLayout( 'First Page' )\n\n# initialize portal\nportal = Portal( 'My Portal', 8000, mainpage )\n\n# define a custom web service\nportal.addURL( '/myservice', 'myservice' )\n\nclass myservice:\n    def GET( self ):\n        return 'Hello World'\n\n# start the web server\nportal.run()\n</pre>\n</div>\n<div id=\"todos\">\n<h3>TODOs</h3>\n<ul>\n<li>[x] First working <em>rest-web-ui</em> integration</li>\n<li>[x] PyPI package</li>\n<li>[ ] configure port from init</li>\n<li>[x] portal.getPage( name )</li>\n<li>[x] portal.addPage( pageId [, title] [, viewDef] [, viewConfig] )</li>\n<li>[ ] Portal pages navigation tabs</li>\n<li>[x] page.addView( def [, config]  )</li>\n<li>[x] page.addColumnsRow( id, width )</li>\n<li>[x] row.addView( def [, config] )</li>\n<li>[x] row.addColumnsRow ( id, height )</li>\n<li>[x] column.addView ( def [, config] )</li>\n<li>[x] column.addRowsColumn ( id, width )</li>\n<li>[x] View API</li>\n<li>[ ] I/O server and API</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2139474, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "91490786860dfb8808a752aff5ea0514", "sha256": "9c51f68add7decaadc4bd89536e506593d28242292b815a1c631d02ec61e9f77"}, "downloads": -1, "filename": "easy_web_app-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "91490786860dfb8808a752aff5ea0514", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5961, "upload_time": "2016-05-26T19:26:18", "upload_time_iso_8601": "2016-05-26T19:26:18.256738Z", "url": "https://files.pythonhosted.org/packages/cf/24/3ced1410e034b1b0dbe2797adeaa7f20fce2bef1e48d3813ca8cdad44504/easy_web_app-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3c5394aa6a7760888738cd28aa64e06", "sha256": "4c01d6c0f940118d4437678ec1546eb1fc0d52de72fd682f1035fca348d006ed"}, "downloads": -1, "filename": "easy-web-app-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f3c5394aa6a7760888738cd28aa64e06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3601, "upload_time": "2016-05-26T19:26:06", "upload_time_iso_8601": "2016-05-26T19:26:06.559077Z", "url": "https://files.pythonhosted.org/packages/cc/1e/cf570315d21e4bdefff1472b2ce9a8d7f677f9a5a3f6b28b839cfb9ce37c/easy-web-app-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ec0ae082b5099b0d034498777a31114c", "sha256": "c85be2a3ab06045be705cf56dcff4ab7bb4cbfb1b99bd873f38a7231af0d8ce3"}, "downloads": -1, "filename": "easy_web_app-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "ec0ae082b5099b0d034498777a31114c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5962, "upload_time": "2016-05-26T20:33:16", "upload_time_iso_8601": "2016-05-26T20:33:16.932088Z", "url": "https://files.pythonhosted.org/packages/c3/10/d38b7969288b83a383f4bcbe9372dff0af1f3d2230c4bd30bc6efb116e56/easy_web_app-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20d83a5b366558fa4eefa815b97ee41b", "sha256": "94d3bc6d9c1231d2c8e5914fb00ad358266f6022e190d728fe3a4843aa0a70e8"}, "downloads": -1, "filename": "easy-web-app-0.1.3.tar.gz", "has_sig": false, "md5_digest": "20d83a5b366558fa4eefa815b97ee41b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4961, "upload_time": "2016-05-26T20:33:21", "upload_time_iso_8601": "2016-05-26T20:33:21.086173Z", "url": "https://files.pythonhosted.org/packages/25/80/8c2c4ada8a16c65a56e8827673d7de9af7d5d93808d3a049c921e143579a/easy-web-app-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "9f77d5e184c4309c0ac3d4d4098eb347", "sha256": "c6593ef35f45204cbf949e83a9b115f5e58ca0800f93d56fed33cdc92bafe086"}, "downloads": -1, "filename": "easy_web_app-0.1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "9f77d5e184c4309c0ac3d4d4098eb347", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5986, "upload_time": "2016-05-28T05:23:31", "upload_time_iso_8601": "2016-05-28T05:23:31.310519Z", "url": "https://files.pythonhosted.org/packages/2c/d1/9329652a2cccb106192ce80230ff05092fc30572eb2cb7d086e773d6af91/easy_web_app-0.1.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05e90ac7919e30f712ddc44741e66818", "sha256": "9f7f8db2bb80cf0164f67a4ddff513da82c65bfa465c29b69298104eed523a99"}, "downloads": -1, "filename": "easy-web-app-0.1.4.tar.gz", "has_sig": false, "md5_digest": "05e90ac7919e30f712ddc44741e66818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4976, "upload_time": "2016-05-28T05:23:35", "upload_time_iso_8601": "2016-05-28T05:23:35.502141Z", "url": "https://files.pythonhosted.org/packages/8c/3f/94b90caaf4b5900bde1ffd314953f53dd1d8b141b99fe98a1840510b95ea/easy-web-app-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "7b5761d4f0f31e8dbc54a22636602c34", "sha256": "cf13e6cac77763572cae088f00a6bfd7e5eab4e71b66c2167c376e0f6f1a3517"}, "downloads": -1, "filename": "easy-web-app-0.1.6.tar.gz", "has_sig": false, "md5_digest": "7b5761d4f0f31e8dbc54a22636602c34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4971, "upload_time": "2016-05-28T16:54:47", "upload_time_iso_8601": "2016-05-28T16:54:47.481848Z", "url": "https://files.pythonhosted.org/packages/bb/06/9ff64b647b0305eaba2e483f2eb559d67881db251cc95218673b6e25b3ba/easy-web-app-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e57af36903fc4bb721074ea3539ce8bf", "sha256": "27dcfbdd1784eaea917e0a18373853abb80e08af9878262342fafcfbeba2813d"}, "downloads": -1, "filename": "easy-web-app-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e57af36903fc4bb721074ea3539ce8bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5150, "upload_time": "2016-05-28T18:19:00", "upload_time_iso_8601": "2016-05-28T18:19:00.294596Z", "url": "https://files.pythonhosted.org/packages/6c/e6/400553ee780a6fb54147b79f14f59dd3a52c35ae6b6e947037bc6ddfd5b0/easy-web-app-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c8c94b2fa27b926644a44b6e15d48b1c", "sha256": "9741c609a81e681710b63014cdd45121c512ae15bd50b17bb7e7420679b72316"}, "downloads": -1, "filename": "easy-web-app-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c8c94b2fa27b926644a44b6e15d48b1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5940, "upload_time": "2016-05-29T08:22:45", "upload_time_iso_8601": "2016-05-29T08:22:45.403996Z", "url": "https://files.pythonhosted.org/packages/fa/a6/c02d934dceb5ae86e2d5d4609ca5bbe9e2fa918c6afe40b0e66da1124bfa/easy-web-app-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a83c81a9550c0daeb3dc3d39b85e7eca", "sha256": "09aa9f0b431dbe007fc1abbba52c5bcfaf5f19f66568f484316783d3e2a73249"}, "downloads": -1, "filename": "easy-web-app-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a83c81a9550c0daeb3dc3d39b85e7eca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6004, "upload_time": "2016-05-29T14:42:22", "upload_time_iso_8601": "2016-05-29T14:42:22.999741Z", "url": "https://files.pythonhosted.org/packages/c9/a2/a4889f65322ee543daf6d41a377d71f1a12df96be8d30a18f9b998cf51d5/easy-web-app-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a83c81a9550c0daeb3dc3d39b85e7eca", "sha256": "09aa9f0b431dbe007fc1abbba52c5bcfaf5f19f66568f484316783d3e2a73249"}, "downloads": -1, "filename": "easy-web-app-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a83c81a9550c0daeb3dc3d39b85e7eca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6004, "upload_time": "2016-05-29T14:42:22", "upload_time_iso_8601": "2016-05-29T14:42:22.999741Z", "url": "https://files.pythonhosted.org/packages/c9/a2/a4889f65322ee543daf6d41a377d71f1a12df96be8d30a18f9b998cf51d5/easy-web-app-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:12 2020"}