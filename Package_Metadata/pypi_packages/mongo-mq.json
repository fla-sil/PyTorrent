{"info": {"author": "Zaytsev Dmithry", "author_email": "zaytsev_dmitriy@aol.com", "bugtrack_url": null, "classifiers": [], "description": "mongo-mq\n===========\n\nSimple job queue using mongodb\n\n\nUsage\n=====\n\nA queue can be instantiated with a mongo collection and a consumer\nidentifier. The consumer identifier helps distinguish multiple queue\nconsumers that are taking jobs from the queue::\n\n  >> from pymongo import MongoClient\n  >> from mongomq import MongoQueue\n  >> queue = MongoQueue(\n  ...   MongoClient().test.doctest_queu,\n  ...   consumer_id=\"consumer-1\",\n  ...   timeout=300,\n  ...   max_attempts=3,\n  ...   ttl=18000)\n\nYou can set ttl in seconds, after this time the job will be delete\nfrom database (default 5 hours)\n\nNew jobs/items can be placed in the queue by passing a dictionary::\n\n  >> queue.put({\"foobar\": 1})\n\nA job ``priority`` key and integer value can be specified in the\ndictionary which will cause the job to be processed before lower\npriority items::\n\n  >> queue.put({\"foobar\": 0}, priority=1})\n\nAn item can be fetched out by calling the ``next`` method on a queue.\nThis returns a Job object::\n\n  >> job = queue.next()\n  >> job.payload\n  {\"foobar\": 1}\n  >> job.status\n  'started'\n\n\nInspired By\n===========\n\n- [0] https://github.com/kapilt/mongoqueue\n\n\nRunning Tests\n=============\n\nUnit tests can be run with\n\n $ python setup.py nosetests\n\n\nCredits\n=======\n\nZaytsev Dmitriy, maintainer", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dzaytsev91/mongomq", "keywords": "", "license": "BSD-derived", "maintainer": "", "maintainer_email": "", "name": "mongo-mq", "package_url": "https://pypi.org/project/mongo-mq/", "platform": "", "project_url": "https://pypi.org/project/mongo-mq/", "project_urls": {"Homepage": "https://github.com/dzaytsev91/mongomq"}, "release_url": "https://pypi.org/project/mongo-mq/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A queue using mongo as backend storage.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mongo-mq\">\n<h2>mongo-mq</h2>\n<p>Simple job queue using mongodb</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>A queue can be instantiated with a mongo collection and a consumer\nidentifier. The consumer identifier helps distinguish multiple queue\nconsumers that are taking jobs from the queue:</p>\n<pre>&gt;&gt; from pymongo import MongoClient\n&gt;&gt; from mongomq import MongoQueue\n&gt;&gt; queue = MongoQueue(\n...   MongoClient().test.doctest_queu,\n...   consumer_id=\"consumer-1\",\n...   timeout=300,\n...   max_attempts=3,\n...   ttl=18000)\n</pre>\n<p>You can set ttl in seconds, after this time the job will be delete\nfrom database (default 5 hours)</p>\n<p>New jobs/items can be placed in the queue by passing a dictionary:</p>\n<pre>&gt;&gt; queue.put({\"foobar\": 1})\n</pre>\n<p>A job <tt>priority</tt> key and integer value can be specified in the\ndictionary which will cause the job to be processed before lower\npriority items:</p>\n<pre>&gt;&gt; queue.put({\"foobar\": 0}, priority=1})\n</pre>\n<p>An item can be fetched out by calling the <tt>next</tt> method on a queue.\nThis returns a Job object:</p>\n<pre>&gt;&gt; job = queue.next()\n&gt;&gt; job.payload\n{\"foobar\": 1}\n&gt;&gt; job.status\n'started'\n</pre>\n</div>\n<div id=\"inspired-by\">\n<h2>Inspired By</h2>\n<ul>\n<li>[0] <a href=\"https://github.com/kapilt/mongoqueue\" rel=\"nofollow\">https://github.com/kapilt/mongoqueue</a></li>\n</ul>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Unit tests can be run with</p>\n<blockquote>\n$ python setup.py nosetests</blockquote>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Zaytsev Dmitriy, maintainer</p>\n</div>\n\n          </div>"}, "last_serial": 5177125, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "322602f0fc6b1356b6284179e1cf8517", "sha256": "647284ea1467f1054b01961ce769244562bce77f6ee4d6e2486936e5de1afd93"}, "downloads": -1, "filename": "mongo-mq-0.0.1.tar.gz", "has_sig": false, "md5_digest": "322602f0fc6b1356b6284179e1cf8517", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5433, "upload_time": "2019-04-23T12:29:21", "upload_time_iso_8601": "2019-04-23T12:29:21.463938Z", "url": "https://files.pythonhosted.org/packages/cb/3a/4957ec3bdc4aaec8f3c6da73665614ca31c34682f7bb1b49af53d2cafb11/mongo-mq-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "322602f0fc6b1356b6284179e1cf8517", "sha256": "647284ea1467f1054b01961ce769244562bce77f6ee4d6e2486936e5de1afd93"}, "downloads": -1, "filename": "mongo-mq-0.0.1.tar.gz", "has_sig": false, "md5_digest": "322602f0fc6b1356b6284179e1cf8517", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5433, "upload_time": "2019-04-23T12:29:21", "upload_time_iso_8601": "2019-04-23T12:29:21.463938Z", "url": "https://files.pythonhosted.org/packages/cb/3a/4957ec3bdc4aaec8f3c6da73665614ca31c34682f7bb1b49af53d2cafb11/mongo-mq-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:16 2020"}