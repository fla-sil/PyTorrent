{"info": {"author": "Invinet Sistemes", "author_email": "jtorrents@ingent.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "python-en16931\n==============\n\n.. image:: https://travis-ci.org/invinet/python-en16931.svg?branch=master\n    :target: https://travis-ci.org/invinet/python-en16931\n\n.. image:: https://codecov.io/gh/invinet/python-en16931/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/invinet/python-en16931\n\nPython 3 package to read, write and manage the new `EN16931 Invoice format <http://docs.peppol.eu/poacc/billing/3.0/bis/>`_.\n\nThis `European Standard <https://standards.cen.eu/dyn/www/f?p=204:110:0::::FSP_PROJECT:60602&cs=1B61B766636F9FB34B7DBD72CE9026C72>`_ establishes a semantic data model of the core elements of an electronic invoice. The semantic model includes only the essential information elements that an electronic invoice needs to ensure legal (including fiscal) compliance and to enable interoperability for cross-border, cross sector and for domestic trade.\n\nFeatures\n--------\n\nThis library allows you to:\n\n1. De-serialize an XML in EN16931 format to a python Invoice object.\n2. Serialize a python Invoice object to a valid XML representation.\n3. Validate an Invoice using `validex <https://open.validex.net>`_.\n4. Import an Invoice to `B2BRouter <https://www.b2brouter.net/>`_.\n\nUsage\n-----\n\nYou can import an invoice from an XML file:\n\n.. code-block:: python\n\n    >>> from en16931 import Invoice\n    >>> invoice = Invoice.from_xml('en16931/tests/files/invoice.xml')\n\nAnd use the API to access its internal values and entities:\n\n.. code-block:: python\n\n    >>> invoice.issue_date\n    datetime.datetime(2018, 6, 11, 0, 0)\n    >>> invoice.seller_party\n    <en16931.entity.Entity at 0x7f2b7c12b860>\n    >>> invoice.buyer_party\n    <en16931.entity.Entity at 0x7f2b7c0fd160>\n    >>> invoice.unique_taxes\n    { Tax S: 0.21  , Tax S: 0.1  }\n    >>> invoice.lines\n    [<en16931.invoice_line.InvoiceLine at 0x7f2b7c0fd400>,\n     <en16931.invoice_line.InvoiceLine at 0x7f2b7c0fd518>,\n     <en16931.invoice_line.InvoiceLine at 0x7f2b7c0fd748>]\n    >>> invoice.tax_exclusive_amount\n    87.00\n    >>> invoice.tax_amount()\n    16.62\n    >>> invoice.tax_inclusive_amount\n    103.62\n    >>> invoice.payable_amount\n    103.62\n\nIf you import an XML file, all relevant quantities are not computed; we\nuse the ones defined on the XML. You can check that the computed and\nimported quantities match by calling the relevant methods: \n\n.. code-block:: python\n\n    >>> assert invoice.tax_exclusive_amount == invoice.subtotal()\n    True\n    >>> assert invoice.tax_inclusive_amount == invoice.total()\n    True\n    >>> assert invoice.payable_amount == invoice.total()\n    True\n\nOr you can also build, step by step, an invoice:\n\n.. code-block:: python\n\n    >>> from en16931 import Invoice\n    >>> invoice = Invoice(invoice_id=\"2018-01\", currency=\"EUR\")\n    >>> seller = Entity(name=\"Acme Inc.\", tax_scheme=\"VAT\",\n    ...                 tax_scheme_id=\"ES34626691F\", country=\"ES\",\n    ...                 party_legal_entity_id=\"ES34626691F\",\n    ...                 registration_name=\"Acme INc.\", mail=\"acme@acme.io\",\n    ...                 endpoint=\"ES76281415Y\", endpoint_scheme=\"ES:VAT\",\n    ...                 address=\"easy street\", postalzone=\"08080\",\n    ...                 city=\"Barcelona\")\n    >>> buyer = Entity(name=\"Corp Inc.\", tax_scheme=\"VAT\",\n    ...                tax_scheme_id=\"ES76281415Y\", country=\"ES\",\n    ...                party_legal_entity_id=\"ES76281415Y\",\n    ...                registration_name=\"Corp INc.\", mail=\"corp@corp.io\",\n    ...                endpoint=\"ES76281415Y\", endpoint_scheme=\"ES:VAT\",\n    ...                address=\"busy street\", postalzone=\"08080\",\n    ...                city=\"Barcelona\")\n    >>> invoice.buyer_party = buyer\n    >>> invoice.seller_party = seller\n    >>> invoice.due_date = \"2018-09-11\"\n    >>> invoice.issue_date = \"2018-06-11\"\n    >>> # lines\n    >>> il1 = InvoiceLine(quantity=11, unit_code=\"EA\", price=2,\n    ...                   item_name='test 1', currency=\"EUR\",\n    ...                   tax_percent=0.21, tax_category=\"S\")\n    >>> il2 = InvoiceLine(quantity=2, unit_code=\"EA\", price=25,\n    ...                   item_name='test 2', currency=\"EUR\",\n    ...                   tax_percent=0.21, tax_category=\"S\")\n    >>> il3 = InvoiceLine(quantity=5, unit_code=\"EA\", price=3,\n    ...                   item_name='test 3', currency=\"EUR\",\n    ...                   tax_percent=0.1, tax_category=\"S\")\n    >>> invoice.add_lines_from([il1, il2, il3])\n\nAnd serialize it to XML:\n\n.. code-block:: python\n\n    >>> # As a string\n    >>> xml = invoice.to_xml()\n    >>> # Or save it directly to a file\n    >>> invoice.save('example_invoice.xml')\n\nLimitations\n-----------\n\nThis is a proof of concept implementation and not all features defined\nin the EN16931 standard are implemented. But it is easy, in some cases\ntrivial, to implement them. The main not implemented features are:\n\n* CreditNotes are not supported.\n* File attachments are not supported.\n* Delivery information is not supported.\n* Only global charges and discounts are supported. Line discounts and\n  charges are not supported.\n* Other potentially useful attributes (such as InvoicePeriod, BuyerReference,\n  OrderReference, BillingReference, ContractDocumentReference, among others)\n  are not implemented.\n\nIf you need a particular feature implemented, see the following section\nfor feature requests.\n\nBugs and Feature Requests\n-------------------------\n\nPlease report any bugs that you find `here <https://github.com/invinet/python-en16931/issues>`_.\nOr, even better, fork the repository on `GitHub <https://github.com/invinet/python-en16931>`_\nand create a pull request (PR). We welcome all changes, big or small.\n\nLicense\n-------\n\nReleased under the Apache License Version 2.0 (see `LICENSE.txt`)::\n\n    Copyright (C) 2018 Invinet Sistemes\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/invinet/python-en16931", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "en16931", "package_url": "https://pypi.org/project/en16931/", "platform": "", "project_url": "https://pypi.org/project/en16931/", "project_urls": {"Homepage": "https://github.com/invinet/python-en16931"}, "release_url": "https://pypi.org/project/en16931/0.1/", "requires_dist": null, "requires_python": "", "summary": "A Python 3 package to parse, generate and manage the EN16931 Invoice format", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/invinet/python-en16931\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/invinet/python-en16931.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af57387ccfd7088f6921a8a8bdea70e62d44adbf/68747470733a2f2f7472617669732d63692e6f72672f696e76696e65742f707974686f6e2d656e31363933312e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/invinet/python-en16931\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/invinet/python-en16931/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a400a9962af29fc296ee3ce9b1b141361ff0bb5/68747470733a2f2f636f6465636f762e696f2f67682f696e76696e65742f707974686f6e2d656e31363933312f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Python 3 package to read, write and manage the new <a href=\"http://docs.peppol.eu/poacc/billing/3.0/bis/\" rel=\"nofollow\">EN16931 Invoice format</a>.</p>\n<p>This <a href=\"https://standards.cen.eu/dyn/www/f?p=204:110:0::::FSP_PROJECT:60602&amp;cs=1B61B766636F9FB34B7DBD72CE9026C72\" rel=\"nofollow\">European Standard</a> establishes a semantic data model of the core elements of an electronic invoice. The semantic model includes only the essential information elements that an electronic invoice needs to ensure legal (including fiscal) compliance and to enable interoperability for cross-border, cross sector and for domestic trade.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>This library allows you to:</p>\n<ol>\n<li>De-serialize an XML in EN16931 format to a python Invoice object.</li>\n<li>Serialize a python Invoice object to a valid XML representation.</li>\n<li>Validate an Invoice using <a href=\"https://open.validex.net\" rel=\"nofollow\">validex</a>.</li>\n<li>Import an Invoice to <a href=\"https://www.b2brouter.net/\" rel=\"nofollow\">B2BRouter</a>.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can import an invoice from an XML file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">en16931</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"o\">.</span><span class=\"n\">from_xml</span><span class=\"p\">(</span><span class=\"s1\">'en16931/tests/files/invoice.xml'</span><span class=\"p\">)</span>\n</pre>\n<p>And use the API to access its internal values and entities:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">issue_date</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">seller_party</span>\n<span class=\"o\">&lt;</span><span class=\"n\">en16931</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f2b7c12b860</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">buyer_party</span>\n<span class=\"o\">&lt;</span><span class=\"n\">en16931</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f2b7c0fd160</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">unique_taxes</span>\n<span class=\"p\">{</span> <span class=\"n\">Tax</span> <span class=\"n\">S</span><span class=\"p\">:</span> <span class=\"mf\">0.21</span>  <span class=\"p\">,</span> <span class=\"n\">Tax</span> <span class=\"n\">S</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span>  <span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">lines</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">en16931</span><span class=\"o\">.</span><span class=\"n\">invoice_line</span><span class=\"o\">.</span><span class=\"n\">InvoiceLine</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f2b7c0fd400</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">en16931</span><span class=\"o\">.</span><span class=\"n\">invoice_line</span><span class=\"o\">.</span><span class=\"n\">InvoiceLine</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f2b7c0fd518</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">en16931</span><span class=\"o\">.</span><span class=\"n\">invoice_line</span><span class=\"o\">.</span><span class=\"n\">InvoiceLine</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f2b7c0fd748</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">tax_exclusive_amount</span>\n<span class=\"mf\">87.00</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">tax_amount</span><span class=\"p\">()</span>\n<span class=\"mf\">16.62</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">tax_inclusive_amount</span>\n<span class=\"mf\">103.62</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">payable_amount</span>\n<span class=\"mf\">103.62</span>\n</pre>\n<p>If you import an XML file, all relevant quantities are not computed; we\nuse the ones defined on the XML. You can check that the computed and\nimported quantities match by calling the relevant methods:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">tax_exclusive_amount</span> <span class=\"o\">==</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">subtotal</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">tax_inclusive_amount</span> <span class=\"o\">==</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">payable_amount</span> <span class=\"o\">==</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Or you can also build, step by step, an invoice:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">en16931</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"p\">(</span><span class=\"n\">invoice_id</span><span class=\"o\">=</span><span class=\"s2\">\"2018-01\"</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"EUR\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">seller</span> <span class=\"o\">=</span> <span class=\"n\">Entity</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Acme Inc.\"</span><span class=\"p\">,</span> <span class=\"n\">tax_scheme</span><span class=\"o\">=</span><span class=\"s2\">\"VAT\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">tax_scheme_id</span><span class=\"o\">=</span><span class=\"s2\">\"ES34626691F\"</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"ES\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">party_legal_entity_id</span><span class=\"o\">=</span><span class=\"s2\">\"ES34626691F\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">registration_name</span><span class=\"o\">=</span><span class=\"s2\">\"Acme INc.\"</span><span class=\"p\">,</span> <span class=\"n\">mail</span><span class=\"o\">=</span><span class=\"s2\">\"acme@acme.io\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"ES76281415Y\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint_scheme</span><span class=\"o\">=</span><span class=\"s2\">\"ES:VAT\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"easy street\"</span><span class=\"p\">,</span> <span class=\"n\">postalzone</span><span class=\"o\">=</span><span class=\"s2\">\"08080\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                 <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Barcelona\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">buyer</span> <span class=\"o\">=</span> <span class=\"n\">Entity</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Corp Inc.\"</span><span class=\"p\">,</span> <span class=\"n\">tax_scheme</span><span class=\"o\">=</span><span class=\"s2\">\"VAT\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">tax_scheme_id</span><span class=\"o\">=</span><span class=\"s2\">\"ES76281415Y\"</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"ES\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">party_legal_entity_id</span><span class=\"o\">=</span><span class=\"s2\">\"ES76281415Y\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">registration_name</span><span class=\"o\">=</span><span class=\"s2\">\"Corp INc.\"</span><span class=\"p\">,</span> <span class=\"n\">mail</span><span class=\"o\">=</span><span class=\"s2\">\"corp@corp.io\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"ES76281415Y\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint_scheme</span><span class=\"o\">=</span><span class=\"s2\">\"ES:VAT\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"busy street\"</span><span class=\"p\">,</span> <span class=\"n\">postalzone</span><span class=\"o\">=</span><span class=\"s2\">\"08080\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Barcelona\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">buyer_party</span> <span class=\"o\">=</span> <span class=\"n\">buyer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">seller_party</span> <span class=\"o\">=</span> <span class=\"n\">seller</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">due_date</span> <span class=\"o\">=</span> <span class=\"s2\">\"2018-09-11\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">issue_date</span> <span class=\"o\">=</span> <span class=\"s2\">\"2018-06-11\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># lines</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">il1</span> <span class=\"o\">=</span> <span class=\"n\">InvoiceLine</span><span class=\"p\">(</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">unit_code</span><span class=\"o\">=</span><span class=\"s2\">\"EA\"</span><span class=\"p\">,</span> <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">item_name</span><span class=\"o\">=</span><span class=\"s1\">'test 1'</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">tax_percent</span><span class=\"o\">=</span><span class=\"mf\">0.21</span><span class=\"p\">,</span> <span class=\"n\">tax_category</span><span class=\"o\">=</span><span class=\"s2\">\"S\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">il2</span> <span class=\"o\">=</span> <span class=\"n\">InvoiceLine</span><span class=\"p\">(</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">unit_code</span><span class=\"o\">=</span><span class=\"s2\">\"EA\"</span><span class=\"p\">,</span> <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">item_name</span><span class=\"o\">=</span><span class=\"s1\">'test 2'</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">tax_percent</span><span class=\"o\">=</span><span class=\"mf\">0.21</span><span class=\"p\">,</span> <span class=\"n\">tax_category</span><span class=\"o\">=</span><span class=\"s2\">\"S\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">il3</span> <span class=\"o\">=</span> <span class=\"n\">InvoiceLine</span><span class=\"p\">(</span><span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">unit_code</span><span class=\"o\">=</span><span class=\"s2\">\"EA\"</span><span class=\"p\">,</span> <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">item_name</span><span class=\"o\">=</span><span class=\"s1\">'test 3'</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">tax_percent</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">tax_category</span><span class=\"o\">=</span><span class=\"s2\">\"S\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">add_lines_from</span><span class=\"p\">([</span><span class=\"n\">il1</span><span class=\"p\">,</span> <span class=\"n\">il2</span><span class=\"p\">,</span> <span class=\"n\">il3</span><span class=\"p\">])</span>\n</pre>\n<p>And serialize it to XML:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># As a string</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xml</span> <span class=\"o\">=</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">to_xml</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Or save it directly to a file</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'example_invoice.xml'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>This is a proof of concept implementation and not all features defined\nin the EN16931 standard are implemented. But it is easy, in some cases\ntrivial, to implement them. The main not implemented features are:</p>\n<ul>\n<li>CreditNotes are not supported.</li>\n<li>File attachments are not supported.</li>\n<li>Delivery information is not supported.</li>\n<li>Only global charges and discounts are supported. Line discounts and\ncharges are not supported.</li>\n<li>Other potentially useful attributes (such as InvoicePeriod, BuyerReference,\nOrderReference, BillingReference, ContractDocumentReference, among others)\nare not implemented.</li>\n</ul>\n<p>If you need a particular feature implemented, see the following section\nfor feature requests.</p>\n</div>\n<div id=\"bugs-and-feature-requests\">\n<h2>Bugs and Feature Requests</h2>\n<p>Please report any bugs that you find <a href=\"https://github.com/invinet/python-en16931/issues\" rel=\"nofollow\">here</a>.\nOr, even better, fork the repository on <a href=\"https://github.com/invinet/python-en16931\" rel=\"nofollow\">GitHub</a>\nand create a pull request (PR). We welcome all changes, big or small.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Released under the Apache License Version 2.0 (see <cite>LICENSE.txt</cite>):</p>\n<pre>Copyright (C) 2018 Invinet Sistemes\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4096721, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9294e0a3d0e481b9730d9452a4fa65c5", "sha256": "a0fdbc9cc95f744ff7c2dfc3c0af8c271e536dbfa205e140c6a942f9108b8dde"}, "downloads": -1, "filename": "en16931-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9294e0a3d0e481b9730d9452a4fa65c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28149, "upload_time": "2018-07-24T12:09:15", "upload_time_iso_8601": "2018-07-24T12:09:15.082228Z", "url": "https://files.pythonhosted.org/packages/04/c3/d6ee9de00b28c9a484aca5f38b059238be6dbf99fcab88af9397d434faa5/en16931-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eebcb2a9e639a92c5d056f580e08d2c6", "sha256": "4d87f51d88406a805c5d7b010ba8d6c13b07bdbd78336090f16f7c6bdd06d477"}, "downloads": -1, "filename": "en16931-0.1.tar.gz", "has_sig": false, "md5_digest": "eebcb2a9e639a92c5d056f580e08d2c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21148, "upload_time": "2018-07-24T12:09:16", "upload_time_iso_8601": "2018-07-24T12:09:16.581819Z", "url": "https://files.pythonhosted.org/packages/72/d5/45f1999652383c9d4c28f42e13022fb278c2f134e59a7750d1380ce8f1c0/en16931-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9294e0a3d0e481b9730d9452a4fa65c5", "sha256": "a0fdbc9cc95f744ff7c2dfc3c0af8c271e536dbfa205e140c6a942f9108b8dde"}, "downloads": -1, "filename": "en16931-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9294e0a3d0e481b9730d9452a4fa65c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28149, "upload_time": "2018-07-24T12:09:15", "upload_time_iso_8601": "2018-07-24T12:09:15.082228Z", "url": "https://files.pythonhosted.org/packages/04/c3/d6ee9de00b28c9a484aca5f38b059238be6dbf99fcab88af9397d434faa5/en16931-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eebcb2a9e639a92c5d056f580e08d2c6", "sha256": "4d87f51d88406a805c5d7b010ba8d6c13b07bdbd78336090f16f7c6bdd06d477"}, "downloads": -1, "filename": "en16931-0.1.tar.gz", "has_sig": false, "md5_digest": "eebcb2a9e639a92c5d056f580e08d2c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21148, "upload_time": "2018-07-24T12:09:16", "upload_time_iso_8601": "2018-07-24T12:09:16.581819Z", "url": "https://files.pythonhosted.org/packages/72/d5/45f1999652383c9d4c28f42e13022fb278c2f134e59a7750d1380ce8f1c0/en16931-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:28 2020"}