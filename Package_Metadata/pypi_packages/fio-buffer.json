{"info": {"author": "Kevin Wurster", "author_email": "wursterk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: GIS"], "description": "==========\nfio-buffer\n==========\n\n.. image:: https://travis-ci.org/geowurster/fio-buffer.svg?branch=master\n    :target: https://travis-ci.org/geowurster/fio-buffer?branch=master\n\n.. image:: https://coveralls.io/repos/geowurster/fio-buffer/badge.svg?branch=master\n    :target: https://coveralls.io/r/geowurster/fio-buffer?branch=master\n\nA `Fiona <http://toblerity.org/fiona/manual.html>`_  CLI plugin for buffering geometries in parallel.  Powered by `Shapely <http://toblerity.org/shapely/manual.html#object.buffer>`_.\n\n\nUsage\n=====\n\n.. code-block:: console\n\n    Usage: fio buffer [OPTIONS] INFILE OUTFILE\n\n      Geometries can be dilated with a positive distance, eroded with a negative\n      distance, and in some cases cleaned or repaired with a distance of 0.\n\n      Examples\n      --------\n\n      Default settings - buffer geometries in the input CRS:\n\n          $ fio buffer in.geojson out.geojson --distance 10\n\n      Dynamically buffer geometries by a distance stored in the field\n      'magnitude' and write as GeoJSON:\n\n          $ fio buffer \\\n              in.shp \\\n              out.geojson \\\n              --driver GeoJSON \\\n              --distance magnitude\n\n      Read geometries from one CRS, buffer in another, and then write to a\n      third:\n\n          $ fio buffer in.shp out.shp \\\n              --distance 10 \\\n              --buf-crs EPSG:3857 \\\n              --dst-crs EPSG:32618\n\n      Control cap style, mitre limit, segment resolution, and join style:\n\n          $ fio buffer in.geojson out.geojson \\\n              --distance 0.1 \\\n              --res 5 \\\n              --cap-style flat \\\n              --join-style mitre \\\n              --mitre-limit 0.1\\\n\n    Options:\n      --version                       Show the version and exit.\n      -f, --format, --driver NAME     Output driver name.  Derived from the input\n                                      datasource if not given.\n      --cap-style [flat|round|square]\n                                      Where geometries terminate, use this style.\n                                      [default: round]\n      --join-style [round|mitre|bevel]\n                                      Where geometries touch, use this style.\n                                      [default: round]\n      --res INTEGER                   Resolution of the buffer around each vertex\n                                      of the geometry.  [default: 16]\n      --mitre-limit FLOAT             When using a mitre join, limit the maximum\n                                      length of the join corner according to this\n                                      ratio.  [default: 5.0]\n      --distance FLOAT|FIELD          Buffer distance or field containing distance\n                                      values.  Units match --buf-crs.  When\n                                      buffering with a field, feature's with a\n                                      null value are unaltered.  [required]\n      --src-crs TEXT                  Specify CRS for input data.  Not needed if\n                                      set in input file.\n      --buf-crs TEXT                  Perform buffer operations in a different\n                                      CRS. [default: --src-crs]\n      --dst-crs TEXT                  Reproject geometries to a different CRS\n                                      before writing.  Must be combined with\n                                      --buf-crs. [default: --src-crs]\n      --geom-type GEOMTYPE            Output layer's geometry type.  [default:\n                                      MultiPolygon]\n      --skip-failures                 Skip geometries that fail somewhere in the\n                                      processing pipeline.\n      --jobs CORES                    Process geometries in parallel across N\n                                      cores.  Feature ID's and order are not\n                                      preserved if more that 1 cores are used.\n                                      [default: 1]\n      --help                          Show this message and exit.\n\n\nInstalling\n==========\n\nVia pip:\n\n.. code-block:: console\n\n    $ pip install fio-buffer\n\nFrom source:\n\n.. code-block:: console\n\n    $ git clone https://github.com/geowurster/fio-buffer\n    $ cd fio-buffer\n    $ python setup.py install\n\n\nDeveloping\n==========\n\n.. code-block:: console\n\n    $ git clone https://github.com/geowurster/fio-buffer\n    $ cd fio-buffer\n    $ virtualenv venv\n    $ source venv/bin/activate\n    $ pip install -e .[dev]\n    $ py.test tests --cov fio_buffer --cov-report term-missing\n\n\nLicense\n=======\n\nSee ``LICENSE.txt``.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geowurster/fio-buffer", "keywords": "Fiona fio GIS vector buffer plugin", "license": "New BSD", "maintainer": null, "maintainer_email": null, "name": "fio-buffer", "package_url": "https://pypi.org/project/fio-buffer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fio-buffer/", "project_urls": {"Homepage": "https://github.com/geowurster/fio-buffer"}, "release_url": "https://pypi.org/project/fio-buffer/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A Fiona CLI plugin for buffering geometries.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/geowurster/fio-buffer?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/geowurster/fio-buffer.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f50fb8d108ed4ebcd6b4d2744971bf93cbc0700d/68747470733a2f2f7472617669732d63692e6f72672f67656f777572737465722f66696f2d6275666665722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/geowurster/fio-buffer?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/geowurster/fio-buffer/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bf907da871decb5ec317db63a1cc8ff3092d1b6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f67656f777572737465722f66696f2d6275666665722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>A <a href=\"http://toblerity.org/fiona/manual.html\" rel=\"nofollow\">Fiona</a>  CLI plugin for buffering geometries in parallel.  Powered by <a href=\"http://toblerity.org/shapely/manual.html#object.buffer\" rel=\"nofollow\">Shapely</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"go\">Usage: fio buffer [OPTIONS] INFILE OUTFILE\n\n  Geometries can be dilated with a positive distance, eroded with a negative\n  distance, and in some cases cleaned or repaired with a distance of 0.\n\n  Examples\n  --------\n\n  Default settings - buffer geometries in the input CRS:\n\n</span><span class=\"gp\">      $</span> fio buffer in.geojson out.geojson --distance <span class=\"m\">10</span>\n<span class=\"go\">\n  Dynamically buffer geometries by a distance stored in the field\n  'magnitude' and write as GeoJSON:\n\n</span><span class=\"gp\">      $</span> fio buffer <span class=\"se\">\\\n</span>          in.shp <span class=\"se\">\\\n</span>          out.geojson <span class=\"se\">\\\n</span>          --driver GeoJSON <span class=\"se\">\\\n</span>          --distance magnitude\n<span class=\"go\">\n  Read geometries from one CRS, buffer in another, and then write to a\n  third:\n\n</span><span class=\"gp\">      $</span> fio buffer in.shp out.shp <span class=\"se\">\\\n</span>          --distance <span class=\"m\">10</span> <span class=\"se\">\\\n</span>          --buf-crs EPSG:3857 <span class=\"se\">\\\n</span>          --dst-crs EPSG:32618\n<span class=\"go\">\n  Control cap style, mitre limit, segment resolution, and join style:\n\n</span><span class=\"gp\">      $</span> fio buffer in.geojson out.geojson <span class=\"se\">\\\n</span>          --distance <span class=\"m\">0</span>.1 <span class=\"se\">\\\n</span>          --res <span class=\"m\">5</span> <span class=\"se\">\\\n</span>          --cap-style flat <span class=\"se\">\\\n</span>          --join-style mitre <span class=\"se\">\\\n</span>          --mitre-limit <span class=\"m\">0</span>.1<span class=\"se\">\\\n</span>\n<span class=\"go\">Options:\n  --version                       Show the version and exit.\n  -f, --format, --driver NAME     Output driver name.  Derived from the input\n                                  datasource if not given.\n  --cap-style [flat|round|square]\n                                  Where geometries terminate, use this style.\n                                  [default: round]\n  --join-style [round|mitre|bevel]\n                                  Where geometries touch, use this style.\n                                  [default: round]\n  --res INTEGER                   Resolution of the buffer around each vertex\n                                  of the geometry.  [default: 16]\n  --mitre-limit FLOAT             When using a mitre join, limit the maximum\n                                  length of the join corner according to this\n                                  ratio.  [default: 5.0]\n  --distance FLOAT|FIELD          Buffer distance or field containing distance\n                                  values.  Units match --buf-crs.  When\n                                  buffering with a field, feature's with a\n                                  null value are unaltered.  [required]\n  --src-crs TEXT                  Specify CRS for input data.  Not needed if\n                                  set in input file.\n  --buf-crs TEXT                  Perform buffer operations in a different\n                                  CRS. [default: --src-crs]\n  --dst-crs TEXT                  Reproject geometries to a different CRS\n                                  before writing.  Must be combined with\n                                  --buf-crs. [default: --src-crs]\n  --geom-type GEOMTYPE            Output layer's geometry type.  [default:\n                                  MultiPolygon]\n  --skip-failures                 Skip geometries that fail somewhere in the\n                                  processing pipeline.\n  --jobs CORES                    Process geometries in parallel across N\n                                  cores.  Feature ID's and order are not\n                                  preserved if more that 1 cores are used.\n                                  [default: 1]\n  --help                          Show this message and exit.</span>\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Via pip:</p>\n<pre><span class=\"gp\">$</span> pip install fio-buffer\n</pre>\n<p>From source:</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/geowurster/fio-buffer\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> fio-buffer\n<span class=\"gp\">$</span> python setup.py install\n</pre>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<pre><span class=\"gp\">$</span> git clone https://github.com/geowurster/fio-buffer\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> fio-buffer\n<span class=\"gp\">$</span> virtualenv venv\n<span class=\"gp\">$</span> <span class=\"nb\">source</span> venv/bin/activate\n<span class=\"gp\">$</span> pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n<span class=\"gp\">$</span> py.test tests --cov fio_buffer --cov-report term-missing\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <tt>LICENSE.txt</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1644083, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fc4ae93b4bbe852f59e487d6b70e0514", "sha256": "396e58334bed8d45283a55dd30d5d1f3ae51954abd30932e3bdc6bb9fda20923"}, "downloads": -1, "filename": "fio-buffer-0.1.tar.gz", "has_sig": false, "md5_digest": "fc4ae93b4bbe852f59e487d6b70e0514", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8166, "upload_time": "2015-06-18T01:54:28", "upload_time_iso_8601": "2015-06-18T01:54:28.350719Z", "url": "https://files.pythonhosted.org/packages/0c/91/86f6707cbfd16f30cbe01dea809b7b12ff17fd211bff3241775b3ae9a098/fio-buffer-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3cc1a59c4473d37eee58eaac7261edf5", "sha256": "68a93b356981fa3665a7db075c9ad2a14ce0b66f4084a50ddf9641f1f6e3681a"}, "downloads": -1, "filename": "fio-buffer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3cc1a59c4473d37eee58eaac7261edf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8545, "upload_time": "2015-07-22T01:18:29", "upload_time_iso_8601": "2015-07-22T01:18:29.978999Z", "url": "https://files.pythonhosted.org/packages/f6/eb/53347d16a000eb1604abc58acb41ad3a343edb86a7870fdd0154c7257362/fio-buffer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cc1a59c4473d37eee58eaac7261edf5", "sha256": "68a93b356981fa3665a7db075c9ad2a14ce0b66f4084a50ddf9641f1f6e3681a"}, "downloads": -1, "filename": "fio-buffer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3cc1a59c4473d37eee58eaac7261edf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8545, "upload_time": "2015-07-22T01:18:29", "upload_time_iso_8601": "2015-07-22T01:18:29.978999Z", "url": "https://files.pythonhosted.org/packages/f6/eb/53347d16a000eb1604abc58acb41ad3a343edb86a7870fdd0154c7257362/fio-buffer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:18 2020"}