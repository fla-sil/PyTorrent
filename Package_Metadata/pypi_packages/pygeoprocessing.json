{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: GIS"], "description": ".. default-role:: code\n\nAbout PyGeoprocessing\n=====================\n\nPyGeoprocessing is a Python/Cython based library that provides a set of\ncommonly used raster, vector, and hydrological operations for GIS processing.\nSimilar functionality can be found in ArcGIS/QGIS raster algebra, ArcGIS zonal\nstatistics, and ArcGIS/GRASS/TauDEM hydrological routing routines.\n\nPyGeoprocessing is developed at the Natural Capital Project to create a\nprogrammable, open source, and free Python based GIS processing library to\nsupport the InVEST toolset.  PyGeoprocessing's design prioritizes\ncomputation and memory efficient runtimes, easy installation and cross\ncompatibility with other open source and proprietary software licenses, and a\nsimplified set of orthogonal GIS processing routines that interact with GIS\ndata via filename. Specifically the functionally provided by PyGeoprocessing\nincludes:\n\n* a suite of raster manipulation functions (warp, align, raster calculator,\n  reclassification, distance transform, convolution, and fast iteration)\n* a suite of vector based manipulation function (zonal statistics,\n  rasterization, interpolate points, reprojection, and disjoint polygon sets)\n* a simplified hydrological routing library (D8inf/MFD flow direction,\n  plateau drainage, weighted and unweighted flow accumulation, and weighted\n  and unweighted flow distance)\n\nInstalling PyGeoprocessing\n==========================\n\n.. code-block:: console\n\n    $ pip install pygeoprocessing\n\nIf you `import pygeoprocessing` and see a `ValueError: numpy.dtype has the\nwrong size, try recompiling`, this is the result of a version compatibility\nissue with the numpy API in the precompiled pygeoprocessing binaries.\nThe solution is to recompile pygeoprocessing on your computer:\n\n.. code-block:: console\n\n    $ pip uninstall -y pygeoprocessing\n    $ pip install pygeoprocessing --no-deps --no-binary :all:\n\nRequirements\n------------\n\nNote the pip-installable requirements in `requirements.txt` are for best\nresults, but older package versions may also work. If necessary,\nPyGeoprocessing can be installed without dependencies with `pip install\n--no-deps`.\n\nRelease History\n===============\n\n..\n  Unreleased Changes\n  -----------------\n\n1.9.2 (2020-02-06)\n------------------\n* Removed the ``multiprocessing`` dependency to avoid an occasional deadlock \n  that occurred on Mac OS X during ``align_and_resize_raster_stack``. \n  That function now operates serially, but multithreading can be used by\n  passing ``gdal_warp_options``.\n\n1.9.1 (2019-12-19)\n------------------\n* Fixed a compilation issue on Mac OS X Catalina related to the compilation\n  of a template in the file iteration component of the out-of-core percentile\n  function.\n* Resolved a compilation issue on Mac OS X (Mavericks and later) where\n  pygeoprocessing would not compile unless some additional compiler and linker\n  flags were provided.  These are now accounted for in the package's compilation\n  steps in ``setup.py``.\n* ``pygeoprocessing.symbolic.evaluate_raster_calculator_expression``\n  no longer depends on ``sympy`` for its expression evaluation.\n\n1.9.0 (2019-10-22)\n------------------\n* Fixed a memory error issue that could occur on multiple flow direction flow\n  accumulation calculations.\n* Added PEP518-compatible build dependencies to ``pyproject.toml``, which has\n  been added to source distributions of pygeoprocessing.\n* Added an out-of-core high performance raster percentile function at\n  pygeoprocessing.raster_band_percentile.\n* Added a ``pygeoprocessing.symbolic.evaluate_raster_calculator_expression``\n  function that can parse a string expression and a map of symbols to\n  calculate a raster calculation operation.\n* Modified ``pygeoprocessing.routing.fill_pits`` to create a single band\n  raster of the input DEM raster/path band rather than a copy of the input\n  DEM raster irrespective of the band number.\n* Fixed an issue that would cause the bounding box generated by\n  ```transform_bounding_box`` to flip the min and max coordinates in some\n  spatial contexts.\n* Defaulting compression algorithm back to LZW as ZSTD is not a widely\n  implemented compression standard for geotiffs.\n\n1.8.0 (2019-08-12)\n------------------\n* Added a ``'numpy_type'`` field to the result of ``get_raster_info`` that\n  contains the equivalent numpy datatype of the GDAL type in the raster. This\n  includes functionality differentate between the unsigned and signed\n  ``gdal.GDT_Byte`` vs. ``numpy.int8`` and ``numpy.uint8``.\n* Changed default compression routine for GeoTIFFs to ZSTD (thanks Facebook\n  https://facebook.github.io/zstd/).\n* Added a **non-backwards compatible change** by replacing the\n  ``gtiff_creation_options`` string to a driver/option string named\n  ``raster_driver_creation_tuple``. This allows the caller to create any type\n  of ``GDAL`` writable driver along with the option list associated with that\n  driver.\n* Added a ``'numpy_type'`` field to the result of ``get_raster_info`` that\n  contains the equivalent numpy datatype of the GDAL type in the raster. This\n  includes functionality differentate between the unsigned and signed\n  ``gdal.GDT_Byte`` vs. ``numpy.int8`` and ``numpy.uint8``.\n* Changed default compression routine for GeoTIFFs to ZSTD (thanks Facebook\n  https://facebook.github.io/zstd/).\n* Added a ``'file_list'`` key to the dictionary returned by\n  ``get_raster_info`` and ``get_vector_info`` that contains a list of all the\n  files associated with that GIS object. The first parameter of these lists\n  can be passed to ``gdal.OpenEx`` to open the object directly.\n* Added a ``get_gis_type`` function to ``pygeoprocessing`` that takes a\n  filepath and returns a bitmask of ``pygeoprocessing.RASTER_TYPE`` and/or\n  ``pygeoprocessing.VECTOR_TYPE``.\n* Modified ``iterblocks`` to raise a helpful ValueError instead of a general\n  NoneTypeError if a raster does not open.\n\n1.7.0 (2019-06-27)\n------------------\n* Removing support for Python 2.7.\n* Adding D8 watershed delineation as\n  ``pygeoprocessing.routing.delineate_watersheds_d8``.\n* Corrected an issue with ``pygeoprocessing.create_raster_from_vector_extents``\n  where a vector with no width or no height (a vector with a single point, for\n  example) would result in invalid raster dimensions being passed to GDAL.\n  These edge cases are now guarded against.\n* ``pygeoprocessing.calculate_disjoint_polygon_set`` will now raise\n  ``RuntimeError`` if it is passed a vector with no features in it.\n* ``pygeoprocessing.rasterize`` will now raise ``RuntimeError`` if the\n  underlying call to ``gdal.RasterizeLayer`` encounters an error.\n* Correcting an issue with the docstring in\n  ``pygeoprocessing.reclassify_raster`` to reflect the current parameters.\n* Changed ``zonal_statistics`` to always return a ``dict`` instead of\n  sometimes a ``defaultdict``. This allows pickling of the result, if desired.\n* Adding automated testing via bitbucket pipelines.\n* Correcting an issue with ``pygeoprocessing.zonal_statistics`` that was\n  causing test failures on Python 3.6.\n* Pygeoprocessing is now tested against Python 3.7.\n* Fixed an issue in distance transform where a vertical striping artifact\n  would occur in the masked region of some large rasters when distances should\n  be 0.\n* Fixed an issue in all functionality that used a cutline polygon with\n  invalid geometry which would cause a crash. This was caused by `gdal.Warp`\n  when using the cutline functionality. Instead this functionality was\n  replaced with manual rasterization. In turn this introduces two optional\n  parameters:\n\n    * ``rasterize`` and ``mask_raster`` have a ``where_clause`` parameter\n      which takes a string argument in SQL WHERE syntax to filter\n      rasterization based on attribute values.\n    * ``warp_raster`` takes a ``working_dir`` parameter to manage local\n      temporary mask rasters.\n\n* Removing a temporary working directory that is created when executing\n  pygeoprocessing.convolve_2d.\n* Changed optional parameters involving layer indexes to be either indexes\n  or string ids. In all cases changing ``layer_index`` to ``layer_id`` in\n  the functions: ``get_vector_info``, ``reproject_vector``, ``warp_raster``,\n  ``rasterize``, ``calculate_disjoint_polygon_set``, and ``mask_raster``.\n\n1.6.1 (2019-02-13)\n------------------\n* Added error checking in ``raster_calculator`` to help ensure that the\n  ``target_datatype`` value is a valid GDAL type.\n* Fixed an issue in ``distance_transform_edt`` that would occasionally\n  cause incorrect distance calculations when the x sampling distance was > 1.\n\n1.6.0 (2019-01-23)\n------------------\n* Changed ``iterblocks`` API to take a raster/path band as an input rather\n  than a path and a list of bands. Also removed the ``astype_list`` due to\n  its lack of orthogonality.\n* Fixed bugs in ``convolve_2d`` involving inputs with nodata masking.\n* Changing default raster creation compression algorithm from LZW to DEFLATE,\n  this is to address issues where we were seeing recreatable, but\n  unexplainable LZWDecode errors in large raster data.\n* Fixed an issue that could cause the distance transform to be incorrect when\n  the sampling distance was in the noninclusive range of (0.0, 1.0).\n\n1.5.0 (2018-12-12)\n------------------\n* Specific type checking for ``astype_list`` in ``iterblocks`` to avoid\n  confusing exceptions.\n* Renamed test suite to be consistent with the pattern\n  ``test_[component].tif``.\n* Added a function ``pygeoprocessing.routing.extract_streams_mfd`` that\n  creates a contiguous stream layer raster to accounts for the divergent flow\n  that can occur with multiple flow direction. If the flow direction raster is\n  otherwise directly thresholded, small disjoint streams can appear where\n  the downstream flow drops below the threshold level.\n* Fixed an issue that could cause some custom arguments to geotiff creation\n  options to be ignored.\n* Added a ``mask_raster`` function that can be used to mask out pixels in\n  an existing raster that don't overlap with a given vector.\n* Fixed a bug in the ``distance_transform_edt`` function that would cause\n  incorrect distances to be calculated in the case of nodata pixels in the\n  region raster. The algorithm has been modified to treat nodata as though\n  pixel values were 0 (non-region) and the distance transform will be defined\n  for the entire raster.\n* Added a ``sampling_distance`` parameter to ``distance_transform_edt`` that\n  linearly scales the distance transform by this value.\n* Fixed an issue in ``calculate_slope`` that would raise an exception if the\n  input dem did not have a nodata value defined.\n* Changed the behavior of ``zonal_statistics`` for polygons that that do not\n  intersect any pixels. These FIDs are now also included in the result from\n  ``zonal_statistics`` where previously they were absent. This is to remain\n  consistent with how other GIS libraries calculate zonal stats.\n\n1.4.1 (2018-11-12)\n------------------\n* Hotfix that fixes an issue that would cause ``zonal_statistics`` to crash if\n  a polygon were outside of the raster's bounding box.\n\n1.4.0 (2018-11-12)\n------------------\n* Adding error checking to ensure that ``target_pixel_size`` passed to\n  ``warp_raster`` and ``align_and_resize_raster_stack`` are validated to ensure\n  they are in the correct format. This solves an issue where an incorrect\n  value, such as a single numerical value, resolve into readable exception\n  messages.\n* Added a ``gdal_warp_options`` parameter to ``align_and_resize_raster_stack``\n  and ``warp_raster`` whose contents get passed to gdal.Warp's ``warpOptions``\n  parameter. This was implemented to expose the CUTLINE_TOUCH_ALL\n  functionality but could be used for any gdal functionality.\n* Modified ``rasterize`` API call to make ``burn_values`` and ``option_list``\n  both optional parameters, along with error checking to ensure a bad input's\n  behavior is understood.\n* Exposing GeoTIFF creation options for all the ``pygeoprocessing.routing``\n  functions which create rasters. This is consistent with the creation\n  options exposed in the main ``pygeoprocessing`` API.\n* Removing ``'mean_pixel_size'`` as a return value from ``get_raster_info``,\n  this is because this parameter is easily misused and easily calculated if\n  needed. This is a \"What good programmers need, not what bad programmers\n  want.\" feature.\n\n1.3.1 (2018-10-25)\n------------------\n* Hotfix to patch an infinite loop when aggregating upstream or downstream\n  with custom rasters.\n\n1.3.0 (2018-10-25)\n------------------\n* Fixed a handful of docstring errors.\n* Improved runtime of ``zonal_statistics`` by a couple of orders of magnitude\n  for large vectors by using spatial indexes when calculating disjoint polygon\n  overlap sets, using database transactions, and memory buffers.\n* Improved runtime performance of ``reproject_vector`` by using database\n  transactions.\n* Improved logging for long runtimes in ``zonal_statistics``.\n* Changed ``zonal_statistics`` API and functionality to aggregate across the\n  FIDs of the aggregate vector. This is to be consistent with QGIS and other\n  zonal statistics functionality. Additionally, fixed a bug where very small\n  polygons might not get aggregated if they lie in the same pixel as another\n  polygon that does not intersect it. The algorithm now runs in two passes:\n\n    * aggregate pixels whose centers intersect the aggregate polygons\n    * any polygons that were not aggregated are geometrically intersected\n      with pixels to determine coverage.\n\n* Removed the ``calculate_raster_stats`` function since it duplicates GDAL\n  functionality, but with a slower runtime, and now functions in\n  ``pygeoprocessing`` that create rasters also calculate stats on the fly if\n  desired.\n* Fixes an issue in ``get_raster_info`` and ``get_vector_info`` where the path\n  to the raster/vector includes non-standard OS pathing (such as a NETCDF),\n  info will still calculate info.\n* Added functionality to ``align_raster_stack`` and ``warp_raster`` to define\n  a base spatial reference system for rasters if not is not defined or one\n  wishes to override the existing one. This functionality is useful when\n  reprojecting a rasters that does not have a spatial reference defined in the\n  dataset but is otherwise known.\n* Added a ``weight_raster_path_band`` parameter to both\n  ``flow_accumulation_d8`` and ``flow_accumulation_mfd`` that allows the\n  caller to use per-pixel weights from a parallel raster as opposed to\n  assuming a weight of 1 per pixel.\n* Added a ``weight_raster_path_band`` parameter to both\n  ``distance_to_channel_mfd`` and ``distance_to_channel_d8`` that allows the\n  caller to use per-pixel weights from a parallel raster as opposed to\n  assuming a distance of 1 between neighboring pixels or sqrt(2) between\n  diagonal ones.\n* Added an option to ``reproject_vector`` that allows a caller to specify\n  which fields, if any, to copy to the target vector after reprojection.\n* Adding a check in ``align_and_resize_raster_stack`` for duplicate target\n  output paths to avoid problems where multiple rasters are being warped to\n  the same path.\n* Created a public ``merge_bounding_box_list`` function that's useful for\n  union or intersection of bounding boxes consistent with the format in\n  PyGeoprocessing.\n* Added functionality in ``align_and_resize_raster_stack`` and ``warp_raster``\n  to use a vector to mask out pixel values that lie outside of the polygon\n  coverage area. This parameter is called ``vector_mask_options`` and is\n  fully documented in both functions. It is similar to the cutline\n  functionality provided in ``gdal.Warp``.\n* Fixed an issue in the ``flow_accumulation_*`` functions where a weight\n  raster whose values were equal to the nodata value of the flow accumulation\n  raster OR simply nodata would cause infinite loops.\n\n1.2.3 (2018-07-25)\n------------------\n* Exposing a parameter and setting reasonable defaults for the number of\n  processes to allocate to ``convolve_2d`` and ``warp_raster``. Fixes an issue\n  where the number of processes could exponentiate if many processes were\n  calling these functions.\n* Fixing an issue on ``zonal_statistics`` and ``convolve_2d`` that would\n  attempt to both read and write to the target raster with two different GDAL\n  objects. This caused an issue on Linux where the read file was not caught up\n  with the written one. Refactored to use only one handle.\n* Fixing a rare race condition where an exception could occur in\n  ``raster_calculator`` that would be obscured by an access to an object that\n  had not yet been assigned.\n* ``align_and_resize_raster_stack`` now terminates its process pool.\n* Increased the timeout in joining ``raster_calculator``'s stats worker.\n  On a slow system 5 seconds was not quite enough time.\n\n1.2.2 (2018-07-25)\n------------------\n* Hotfixed a bug that would cause numpy arrays to be treated as broadcastable\n  even if they were passed in \"raw\".\n\n1.2.1 (2018-07-22)\n------------------\n* Fixing an issue with ``warp_raster`` that would round off bounding boxes\n  for rasters that did not fit perfectly into the target raster's provided\n  pixel size.\n* Cautiously ``join``\\ing all process pools to avoid a potential bug where a\n  deamonized subprocess in a process pool may still have access to a raster\n  but another process may require write access to it.\n\n1.2.0 (2018-07-19)\n------------------\n* Several PyGeoprocessing functions now take advantage of multiple CPU cores:\n\n  * ``raster_calculator`` uses a separate thread to calculate raster\n    statistics in a ``nogil`` section of Cython code. In timing with a big\n    rasters we saw performance improvements of about 35%.\n  * ``align_and_resize_raster_stack`` uses as many CPU cores, up to the number\n    of CPUs reported by multiprocessing.cpu_count (but no less than 1), to\n    process each raster warp while also accounting for the fact that\n    ``gdal.Warp`` uses 2 cores on its own.\n  * ``warp_raster`` now directly uses ``gdal.Warp``'s multithreading directly.\n    In practice it seems to utilize two cores.\n  * ``convolve_2d`` attempts to use ``multiprocessing.cpu_count`` cpus to\n    calculate separable convolutions per block while using the main thread to\n    aggregate  and write the result to the target raster. In practice we saw\n    this improve runtimes by about 50% for large rasters.\n* Fixed a bug that caused some nodata values to not be treated as nodata\n  if there was a numerical roundoff.\n* A recent GDAL upgrade (might have been 2.0?) changed the reference to\n  nearest neighbor interpolation from 'nearest' to 'near'. This PR changes\n  PyGeoprocessing to be consistent with that change.\n* ``raster_calculator`` can now also take \"raw\" arguments in the form of a\n  (value, \"raw\") tuple. The parameter ``value`` will be passed directly to\n  ``local_op``. Scalars are no longer a special case and need to be passed as\n  \"raw\" parameters.\n* Raising ``ValueError`` in ``get_raster_info`` and ``get_vector_info`` in\n  cases where non-filepath non-GIS values are passed as parameters. Previously\n  such an error would result in an unhelpful error in the GDAL library.\n\n1.1.0 (2018-07-06)\n------------------\n* PyGeoprocessing now supports Python 2 and 3, and is tested on python 2.7\n  and 3.6  Testing across multiple versions is configured to be run via\n  ``tox``.\n* After testing (tox configuration included under ``tox-libcompat.ini``),\n  numpy requirement has been dropped to ``numpy>=1.10.0`` and scipy has been\n  modified to be ``scipy>=0.14.1,!=0.19.1``.\n* A dependency on ``future`` has been added for compatibility between python\n  versions.\n* Fixed a crash in ``pygeoprocessing.routing.flow_dir_mfd`` and\n  ``flow_dir_d8`` if a base raster was passed in that did not have a power of\n  two blocksize.\n* ``raster_calculator`` can now take numpy arrays and scalar values along with\n  raster path band tuples. Arrays and scalars are broadcast to the raster size\n  according to numpy array broadcasting rules.\n* ``align_and_resize_raster_stack`` can now take a desired target projection\n  which causes all input rasters to be warped to that projection on output.\n\n1.0.1 (2018-05-16)\n------------------\n* Hotfix patch to remove upper bound on required numpy version. This was\n  causing a conflict with InVEST's looser requirement. Requirement is now\n  set to >=1.13.0.\n\n1.0.0 (2018-04-29)\n------------------\n* This release marks a feature-complete version of PyGeoprocessing with a\n  full suite of routing and geoprocessing capabilities.\n* ``pygeoprocessing.routing`` module has a ``flow_dir_mfd`` function that\n  calculates a 32 bit multiple flow direction raster.\n* ``pygeoprocessing.routing`` module has a ``flow_accumulation_mfd`` function\n  that uses the flow direction raster from\n  ``pygeoprocessing.routing.flow_dir_mfd`` to calculate a per-pixel continuous\n  flow accumulation raster.\n* ``pygeoprocessing.routing`` module has a ``distance_to_channel_mfd``\n  function that calculates distance to a channel raster given a\n  pygeoprocessing MFD raster.\n* ``pygeoprocessing.routing`` module has a ``distance_to_channel_d8`` function\n  that calculates distance to a channel raster given a pygeoprocessing D8\n  raster.\n\n0.7.0 (2018-04-18)\n------------------\n* Versioning is now handled by ``setuptools_scm`` rather than\n  ``natcap.versioner``.  ``pygeoprocessing.__version__`` is now fetched from\n  the package metadata.\n* Raster creation defaults now set \"COMPRESS=LZW\" for all rasters created in\n  PyGeoprocessing, including internal temporary rasters. This option was\n  chosen after profiling large raster creation runs on platter hard drives.\n  In many cases processing time was dominated by several orders of magnitude\n  as a write-to-disk. When compression is turned on overall runtime of very\n  large rasters is significantly reduced. Note this otherwise increases the\n  runtime small raster creation and processing by a small amount.\n* ``pygeoprocessing.routing`` module now has a ``fill_pits``, function which\n   fills hydrological pits with a focus on runtime efficiency, memory space\n   efficiency, and cache locality.\n* ``pygeoprocessing.routing`` module has a ``flow_dir_d8`` that uses largest\n  slope to determine the downhill flow direction.\n* ``pygeoprocessing.routing`` module has a ``flow_accumulation_d8`` that uses\n  a pygeoprocessing D8 flow direction raster to calculate per-pixel flow\n  accumulation.\n* Added a ``merge_rasters`` function to ``pygeoprocessing`` that will mosaic a\n  set of rasters in the same projection, pixel size, and band count.\n\n0.6.0 (2017-01-10)\n------------------\n* Added an optional parameter to ``iterblocks`` to allow the ``largest_block``\n  to be set something other than the PyGeoprocessing default. This in turn\n  allows the ``largest_block`` parameter in ``raster_calculator`` to be passed\n  through to ``iterblocks``.\n* Upgraded PyGeoprocessing GDAL dependency to >=2.0.\n* Added a ``working_dir`` optional parameter to ``zonal_statistics``,\n  ``distance_transform_edt``, and ``convolve_2d`` which specifies a directory\n  in which temporary files will be created during execution of the function.\n  If set to ``None`` files are created in the default system temporary\n  directory.\n\n0.5.0 (2017-09-14)\n------------------\n* Fixed an issue where NETCDF files incorrectly raised Exceptions in\n  ``raster_calculator``  and ``rasterize`` because they aren't filepaths.\n* Added a NullHandler so that users wouldn't get an error that a logger\n  handler was undefined.\n* Added ``ignore_nodata``, ``mask_nodata``, and ``normalize_kernel`` options\n  to ``convolve_2d`` which make this function capable of adapting the nodata\n  overlap with the kernel rather than zero out the result, as well as on\n  the fly normalization of the kernel for weighted averaging purposes. This\n  is in part to make this functionality more consistent with ArcGIS's\n  spatial filters.\n\n0.4.4 (2017-08-18)\n------------------\n* When testing for raster alignment ``raster_calculator`` no longer checks the\n  string equality for projections or geotransforms.  Instead it only checks\n  raster size equality.  This fixes issues where users rasters DO align, but\n  have a slightly different text format of the WKT of projection.  It also\n  abstracts the problem of georeferencing away from raster_calculator that is\n  only a grid based operation.\n\n0.4.3 (2017-08-16)\n------------------\n* Changed the error message in ``reclassify_raster`` so it's more informative\n  about how many values are missing and the values in the input lookup table.\n* Added an optional parameter ``target_nodata`` to ``convolve_2d`` to set the\n  desired target nodata value.\n\n0.4.2 (2017-06-20)\n------------------\n* Hotfix to fix an issue with ``iterblocks`` that would return signed values\n  on unsigned raster types.\n* Hotfix to correctly cite Natural Capital Project partners in license and\n  update the copyright year.\n* Hotfix to patch an issue that gave incorrect results in many PyGeoprocessing\n  functions when a raster was passed with an NoData value.  In these cases the\n  internal raster block masks would blindly pass through on the first row\n  since a test for ``numpy.ndarray == None`` is ``False`` and later\n  ``x[False]`` is the equivalent of indexing the first row of the array.\n\n0.4.1 (2017-06-19)\n------------------\n* Non-backwards compatible refactor of core PyGeoprocessing geoprocessing\n  pipeline. This is to in part expose only orthogonal functionality, address\n  runtime complexity issues, and follow more conventional GIS naming\n  conventions. Changes include:\n\n    * Full test coverage for ``pygeoprocessing.geoprocessing`` module\n    * Dropping \"uri\" moniker in lieu of \"path\".\n    * If a raster path is specified and operation requires a single band,\n      argument is passed as a \"(path, band)\" tuple where the band index starts\n      at 1 as convention for raster bands.\n    * Shapefile paths are assumed to operate on the first layer.  It is so\n      rare for a shapefile to have more than one layer, functions that would\n      be confused by multiple layers have a layer_index that defaults to 0\n      that can be overridden in the call.\n    * Be careful, many of the parameter orders have been changed and renamed.\n      Generally inputs come first, outputs last.  Input parameters are\n      often prefixed with \"base\\_\" while output parameters are prefixed with\n      \"target\\_\".\n    * Functions that take rasters as inputs must have their rasters aligned\n      before the call to that function.  The function\n      ``align_and_resize_raster_stack`` can handle this.\n    * ``vectorize_datasets`` refactored to ``raster_calculator`` since that\n      name is often used as a convention when referring to raster\n      calculations.\n    * ``vectorize_points`` refactored to meaningful ``interpolate_points``.\n    * ``aggregate_by_shapefile`` refactored to ``zonal_statistics`` and now\n      returns a dictionary rather than a named tuple.\n    * All functions that create rasters expose the underlying GeoTIFF options\n      through a default parameter ``gtiff_creation_options`` which default to\n      \"('TILED=YES', 'BIGTIFF=IF_SAFER')\".\n    * Individual functions for raster and vector properties have been\n      aggregated into ``get_raster_info`` and ``get_vector_info``\n      respectively.\n    * Introducing ``warp_raster`` to wrap GDAL's ``ReprojectImage``\n      functionality that also works on bounding box clips.\n    * Removed the ``temporary_filename()`` paradigm.  Users should manage\n      temporary filenames directly.\n    * Numerous API changes from the 0.3.x version of PyGeoprocessing.\n* Fixing an issue with aggregate_raster_values that caused a crash if feature\n  IDs were not in increasing order starting with 0.\n* Removed \"create_rat/create_rat_uri\" and migrated it to\n  natcap.invest.wind_energy; the only InVEST model that uses that function.\n* Fixing an issue with aggregate_raster_values that caused a crash if feature\n  IDs were not in increasing order starting with 0.\n* Removed \"create_rat/create_rat_uri\" and migrated it to\n  natcap.invest.wind_energy; the only InVEST model that uses that function.\n\n0.3.3 (2017-02-09)\n------------------\n* Fixing a memory leak with large polygons when calculating disjoint set.\n\n0.3.2 (2017-01-24)\n------------------\n* Hotfix to patch an issue with watershed delineation packing that causes some\n  field values to lose precision due to default field widths being set.\n\n0.3.1 (2017-01-18)\n------------------\n* Hotfix patch to address an issue in watershed delineation that doesn't pack\n  the target watershed output file.  Half the shapefile consists of features\n  polygonalized around nodata values that are flagged for deletion, but not\n  removed from the file.  This patch packs those features and returns a clean\n  watershed.\n\n0.3.0 (2016-10-21)\n------------------\n* Added ``rel_tol`` and ``abs_tol`` parameters to ``testing.assertions`` to be\n  consistent with PEP485 and deal with real world testing situations that\n  required an absolute tolerance.\n* Removed calls to ``logging.basicConfig`` throughout pygeoprocessing.  Client\n  applications may need to adjust their logging if pygeoprocessing's log\n  messages are desired.\n* Added a flag  to ``aggregate_raster_values_uri`` that can be used to\n  indicate incoming polygons do not overlap, or the user does not care about\n  overlap. This can be used in cases where there is a computational or memory\n  bottleneck in calculating the polygon disjoint sets that would ultimately be\n  unnecessary if it is known a priori that such a check is unnecessary.\n* Fixed an issue where in some cases different nodata values for 'signal' and\n  'kernel' would cause incorrect convolution results in ``convolve_2d_uri``.\n* Added functionality to ``pygeoprocessing.iterblocks`` to iterate over\n  largest memory aligned block that fits into the number of elements provided\n  by the parameter.  With default parameters, this uses a ceiling around 16MB\n  of memory per band.\n* Added functionality to ``pygeoprocessing.iterblocks`` to return only the\n  offset dictionary.  This functionality would be used in cases where memory\n  aligned writes are desired without first reading arrays from the band.\n* Refactored ``pygeoprocessing.convolve_2d_uri`` to use ``iterblocks`` to take\n  advantage of large block sizes for FFT summing window method.\n* Refactoring source side to migrate source files from [REPO]/pygeoprocessing\n  to [REPO]/src/pygeoprocessing.\n* Adding a pavement script with routines to fetch SVN test data, build a\n  virtual environment, and clean the environment in a Windows based operating\n  system.\n* Adding ``transform_bounding_box`` to calculate the largest projected\n  bounding box given the four corners on a local coordinate system.\n* Removing GDAL, Shapely from the hard requirements in setup.py.  This will\n  allow pygeoprocessing to be built by package managers like pip without these\n  two packages being installed.  GDAL and Shapely will still need to be\n  installed for pygeoprocessing to run as expected.\n* Fixed a defect in ``pygeoprocessing.testing.assert_checksums_equal``\n  preventing BSD-style checksum files from being analyzed correctly.\n* Fixed an issue in reclassify_dataset_uri that would cause an exception if\n  the incoming raster didn't have a nodata value defined.\n* Fixed a defect in ``pygeoprocessing.geoprocessing.get_lookup_from_csv``\n  where the dialect was unable to be detected when analyzing a CSV that was\n  larger than 1K in size.  This fix enables the correct detection of comma or\n  semicolon delimited CSV files, so long as the header row by itself is not\n  larger than 1K.\n* Intra-package imports are now relative.  Addresses an import issue for users\n  with multiple copies of pygeoprocessing installed across multiple Python\n  installations.\n* Exposed cython routing functions so they may be imported from C modules.\n* ``get_lookup_from_csv`` attempts to determine the dialect of the CSV instead\n  of assuming comma delimited.\n* Added relative numerical tolerance parameters to the PyGeoprocessing raster\n  and csv tests with in the same API style as ``numpy.testing.allclose``.\n* Fixed an incomparability with GDAL 1.11.3 bindings that expects a boolean\n  type in ``band.ComputeStatistics``.  Before this fix PyGeoprocessing would\n  crash with a TypeError on many operations.\n* Fixed a defect in pygeoprocessing.routing.calculate_transport where the\n  nodata types were cast as int even though the base type of the routing\n  rasters were floats.  In extreme cases this could cause a crash on a type\n  that could not be converted to an int, like an ``inf``, and in subtle cases\n  this would result in nodata values in the raster being ignored during\n  routing.\n* Added functions to construct raster and vectors on disk from reasonable\n  datatypes (numpy matrices for rasters, lists of Shapely geometries for\n  vectors).\n* Fixed an issue where reproject_datasource_uri would add geometry that\n  couldn't be projected directly into the output datasource.  Function now\n  only adds geometries that transformed without error and reports if any\n  features failed to transform.\n* Added file flushing and dataset swig deletion in reproject_datasource_uri to\n  handle a race condition that might have been occurring.\n* Fixed an issue when \"None\" was passed in on new raster creation that would\n  attempt to directly set that value as the nodata value in the raster.\n* Added basic filetype-specific assertions for many geospatial filetypes, and\n  tests for these assertions.  These assertions are exposed in\n  ``pygeoprocessing.testing``.\n* Pygeoprocessing package tests can be run by invoking\n  ``python setup.py nosetests``.  A subset of tests may also be run from an\n  installed pygeoprocessing distribution by calling\n  ``pygeoprocessing.test()``.\n* Fixed an issue with reclassify dataset that would occur when small rasters\n  whose first memory block would extend beyond the size of the raster thus\n  passing in \"0\" values in the out of bounds area. Reclassify dataset\n  identified these as valid pixels, even though vectorize_datsets would mask\n  them out later.  Now vectorize_datasets only passes memory blocks that\n  contain valid pixel data to its kernel op.\n* Added support for very small AOIs that result in rasters less than a pixel\n  wide.  Additionally an ``all_touched`` flag was added to allow the\n  ALL_TOUCHED=TRUE option to be passed to RasterizeLayer in the AOI mask\n  calculation.\n* Added watershed delineation routine to\n  pygeoprocessing.routing.delineate_watershed.  Operates on a DEM and point\n  shapefile, optionally snaps outlet points to nearest stream as defined by a\n  thresholded flow accumulation raster and copies the outlet point fields into\n  the constructed watershed shapefile.\n* Fixing a memory leak in block caches that held on to dataset, band, and\n  block references even after the object was destroyed.\n* Add an option to route_flux that lets the current pixel's source be included\n  in the flux, or not.  Previous version would include on the source no matter\n  what.\n* Now using natcap.versioner for versioning instead of local versioning logic.\n\n0.2.2 (2015-05-07)\n------------------\n* Adding MinGW-specific compiler flags for statically linking pygeoprocessing\n  binaries against libstdc++ and libgcc.  Fixes an issue on many user's\n  computers when installing from a wheel on the Python Package Index without\n  having two needed DLLs on the PATH, resulting in an ImportError on pygeoprocessing.geoprocessing_core.pyd.\n* Fixing an issue with versioning where 'dev' was displayed instead of the\n  version recorded in pygeoprocessing/__init__.py.\n* Adding all pygeoprocessing.geoprocessing functions to\n  pygeoprocessing.__all__, which allows those functions to appear when\n  calling help(pygeoprocessing).\n* Adding routing_core.pxd to the manifest.  This fixes an issue where some\n  users were unable to compiler pygeoprocessing from source.\n\n0.2.1 (2015-04-23)\n------------------\n* Fixed a bug on the test that determines if a raster should be memory\n  blocked.  Rasters were not getting square blocked if the memory block was\n  row aligned.  Now creates 256x256 blocks on rasters larger than 256x256.\n* Updates to reclassify_dataset_uri to use numpy.digitize rather than Python\n  loops across the number of keys.\n* More informative error messages raised on incorrect bounding box mode.\n* Updated docstring on get_lookup_from_table to indicate the headers are case\n  insensitive.\n* Added updates to align dataset list that report which dataset is being\n  aligned.  This is helpful for logging feedback when many datasets are passed\n  in that don't take long enough to get a report from the underlying reproject\n  dataset function.\n* pygeoprocessing.routing.routing_core includes pxd to be ``cimport``\\able\n  from a Cython module.\n\n0.2.0 (2015-04-14)\n------------------\n* Fixed a library wide issue relating to the underlying numpy types of\n  GDT_Byte Datasets.  Now correctly identify the signed and unsigned versions\n  and removed all instances where code used to mod byte data to unsigned data\n  and correctly creates signed/unsigned byte datasets during resampling.\n* Removed extract_band_and_nodata function since it exposes the underlying\n  GDAL types.\n* Removed reclassify_by_dictionary since reclassify_dataset_uri provided\n  almost the same functionality and was widely used.\n* Removed the class OrderedDict that was not used.\n* Removed the function calculate_value_not_in_dataset since it loaded the\n  entire dataset into memory and was not useful.\n\n0.1.8 (2015-04-13)\n------------------\n* Fixed an issue on reclassifying signed byte rasters that had negative nodata\n  values but the internal type stored for vectorize datasets was unsigned.\n\n0.1.7 (2015-04-02)\n------------------\n* Package logger objects are now identified by python hierarchical package\n  paths (e.g. pygeoprocessing.routing)\n* Fixed an issue where rasters that had undefined nodata values caused\n  striping in the reclassify_dataset_uri function.\n\n0.1.6 (2015-03-24)\n------------------\n* Fixing LICENSE.TXT to .txt issue that keeps reoccurring.\n\n0.1.5 (2015-03-16)\n------------------\n* Fixed an issue where int32 dems with INT_MIN as the nodata value were being\n  treated as real DEM values because of an internal cast to a float for the\n  nodata type, but a cast to double for the DEM values.\n* Fixed an issue where flat regions, such as reservoirs, that could only drain\n  off the edge of the DEM now correctly drain as opposed to having undefined\n  flow directions.\n\n0.1.4 (2015-03-13)\n------------------\n* Fixed a memory issue for DEMs on the order of 25k X 25k, still may have\n  issues with larger DEMs.\n\n0.1.3 (2015-03-08)\n------------------\n* Fixed an issue so tox correctly executes on the repository.\n* Created a history file to document current and previous releases.\n* Created an informative README.rst.\n\n0.1.2 (2015-03-04)\n------------------\n* Fixing issue that caused \"LICENSE.TXT not found\" during pip install.\n\n0.1.1 (2015-03-04)\n------------------\n* Fixing issue with automatic versioning scheme.\n\n0.1.0 (2015-02-26)\n------------------\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/natcap/pygeoprocessing", "keywords": "gis pygeoprocessing", "license": "BSD", "maintainer": "Rich Sharp", "maintainer_email": "richpsharp@gmail.com", "name": "pygeoprocessing", "package_url": "https://pypi.org/project/pygeoprocessing/", "platform": "", "project_url": "https://pypi.org/project/pygeoprocessing/", "project_urls": {"Homepage": "https://bitbucket.org/natcap/pygeoprocessing"}, "release_url": "https://pypi.org/project/pygeoprocessing/1.9.2/", "requires_dist": null, "requires_python": "", "summary": "PyGeoprocessing: Geoprocessing routines for GIS", "version": "1.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-pygeoprocessing\">\n<h2>About PyGeoprocessing</h2>\n<p>PyGeoprocessing is a Python/Cython based library that provides a set of\ncommonly used raster, vector, and hydrological operations for GIS processing.\nSimilar functionality can be found in ArcGIS/QGIS raster algebra, ArcGIS zonal\nstatistics, and ArcGIS/GRASS/TauDEM hydrological routing routines.</p>\n<p>PyGeoprocessing is developed at the Natural Capital Project to create a\nprogrammable, open source, and free Python based GIS processing library to\nsupport the InVEST toolset.  PyGeoprocessing\u2019s design prioritizes\ncomputation and memory efficient runtimes, easy installation and cross\ncompatibility with other open source and proprietary software licenses, and a\nsimplified set of orthogonal GIS processing routines that interact with GIS\ndata via filename. Specifically the functionally provided by PyGeoprocessing\nincludes:</p>\n<ul>\n<li>a suite of raster manipulation functions (warp, align, raster calculator,\nreclassification, distance transform, convolution, and fast iteration)</li>\n<li>a suite of vector based manipulation function (zonal statistics,\nrasterization, interpolate points, reprojection, and disjoint polygon sets)</li>\n<li>a simplified hydrological routing library (D8inf/MFD flow direction,\nplateau drainage, weighted and unweighted flow accumulation, and weighted\nand unweighted flow distance)</li>\n</ul>\n</div>\n<div id=\"installing-pygeoprocessing\">\n<h2>Installing PyGeoprocessing</h2>\n<pre><span class=\"gp\">$</span> pip install pygeoprocessing\n</pre>\n<p>If you <code>import pygeoprocessing</code> and see a <code>ValueError: numpy.dtype has the\nwrong size, try recompiling</code>, this is the result of a version compatibility\nissue with the numpy API in the precompiled pygeoprocessing binaries.\nThe solution is to recompile pygeoprocessing on your computer:</p>\n<pre><span class=\"gp\">$</span> pip uninstall -y pygeoprocessing\n<span class=\"gp\">$</span> pip install pygeoprocessing --no-deps --no-binary :all:\n</pre>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Note the pip-installable requirements in <code>requirements.txt</code> are for best\nresults, but older package versions may also work. If necessary,\nPyGeoprocessing can be installed without dependencies with <code>pip install\n--no-deps</code>.</p>\n</div>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<div id=\"id1\">\n<h3>1.9.2 (2020-02-06)</h3>\n<ul>\n<li>Removed the <tt>multiprocessing</tt> dependency to avoid an occasional deadlock\nthat occurred on Mac OS X during <tt>align_and_resize_raster_stack</tt>.\nThat function now operates serially, but multithreading can be used by\npassing <tt>gdal_warp_options</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.9.1 (2019-12-19)</h3>\n<ul>\n<li>Fixed a compilation issue on Mac OS X Catalina related to the compilation\nof a template in the file iteration component of the out-of-core percentile\nfunction.</li>\n<li>Resolved a compilation issue on Mac OS X (Mavericks and later) where\npygeoprocessing would not compile unless some additional compiler and linker\nflags were provided.  These are now accounted for in the package\u2019s compilation\nsteps in <tt>setup.py</tt>.</li>\n<li><tt>pygeoprocessing.symbolic.evaluate_raster_calculator_expression</tt>\nno longer depends on <tt>sympy</tt> for its expression evaluation.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.9.0 (2019-10-22)</h3>\n<ul>\n<li>Fixed a memory error issue that could occur on multiple flow direction flow\naccumulation calculations.</li>\n<li>Added PEP518-compatible build dependencies to <tt>pyproject.toml</tt>, which has\nbeen added to source distributions of pygeoprocessing.</li>\n<li>Added an out-of-core high performance raster percentile function at\npygeoprocessing.raster_band_percentile.</li>\n<li>Added a <tt>pygeoprocessing.symbolic.evaluate_raster_calculator_expression</tt>\nfunction that can parse a string expression and a map of symbols to\ncalculate a raster calculation operation.</li>\n<li>Modified <tt>pygeoprocessing.routing.fill_pits</tt> to create a single band\nraster of the input DEM raster/path band rather than a copy of the input\nDEM raster irrespective of the band number.</li>\n<li>Fixed an issue that would cause the bounding box generated by\n<tt>`transform_bounding_box</tt> to flip the min and max coordinates in some\nspatial contexts.</li>\n<li>Defaulting compression algorithm back to LZW as ZSTD is not a widely\nimplemented compression standard for geotiffs.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.8.0 (2019-08-12)</h3>\n<ul>\n<li>Added a <tt>'numpy_type'</tt> field to the result of <tt>get_raster_info</tt> that\ncontains the equivalent numpy datatype of the GDAL type in the raster. This\nincludes functionality differentate between the unsigned and signed\n<tt>gdal.GDT_Byte</tt> vs. <tt>numpy.int8</tt> and <tt>numpy.uint8</tt>.</li>\n<li>Changed default compression routine for GeoTIFFs to ZSTD (thanks Facebook\n<a href=\"https://facebook.github.io/zstd/\" rel=\"nofollow\">https://facebook.github.io/zstd/</a>).</li>\n<li>Added a <strong>non-backwards compatible change</strong> by replacing the\n<tt>gtiff_creation_options</tt> string to a driver/option string named\n<tt>raster_driver_creation_tuple</tt>. This allows the caller to create any type\nof <tt>GDAL</tt> writable driver along with the option list associated with that\ndriver.</li>\n<li>Added a <tt>'numpy_type'</tt> field to the result of <tt>get_raster_info</tt> that\ncontains the equivalent numpy datatype of the GDAL type in the raster. This\nincludes functionality differentate between the unsigned and signed\n<tt>gdal.GDT_Byte</tt> vs. <tt>numpy.int8</tt> and <tt>numpy.uint8</tt>.</li>\n<li>Changed default compression routine for GeoTIFFs to ZSTD (thanks Facebook\n<a href=\"https://facebook.github.io/zstd/\" rel=\"nofollow\">https://facebook.github.io/zstd/</a>).</li>\n<li>Added a <tt>'file_list'</tt> key to the dictionary returned by\n<tt>get_raster_info</tt> and <tt>get_vector_info</tt> that contains a list of all the\nfiles associated with that GIS object. The first parameter of these lists\ncan be passed to <tt>gdal.OpenEx</tt> to open the object directly.</li>\n<li>Added a <tt>get_gis_type</tt> function to <tt>pygeoprocessing</tt> that takes a\nfilepath and returns a bitmask of <tt>pygeoprocessing.RASTER_TYPE</tt> and/or\n<tt>pygeoprocessing.VECTOR_TYPE</tt>.</li>\n<li>Modified <tt>iterblocks</tt> to raise a helpful ValueError instead of a general\nNoneTypeError if a raster does not open.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.7.0 (2019-06-27)</h3>\n<ul>\n<li><p>Removing support for Python 2.7.</p>\n</li>\n<li><p>Adding D8 watershed delineation as\n<tt>pygeoprocessing.routing.delineate_watersheds_d8</tt>.</p>\n</li>\n<li><p>Corrected an issue with <tt>pygeoprocessing.create_raster_from_vector_extents</tt>\nwhere a vector with no width or no height (a vector with a single point, for\nexample) would result in invalid raster dimensions being passed to GDAL.\nThese edge cases are now guarded against.</p>\n</li>\n<li><p><tt>pygeoprocessing.calculate_disjoint_polygon_set</tt> will now raise\n<tt>RuntimeError</tt> if it is passed a vector with no features in it.</p>\n</li>\n<li><p><tt>pygeoprocessing.rasterize</tt> will now raise <tt>RuntimeError</tt> if the\nunderlying call to <tt>gdal.RasterizeLayer</tt> encounters an error.</p>\n</li>\n<li><p>Correcting an issue with the docstring in\n<tt>pygeoprocessing.reclassify_raster</tt> to reflect the current parameters.</p>\n</li>\n<li><p>Changed <tt>zonal_statistics</tt> to always return a <tt>dict</tt> instead of\nsometimes a <tt>defaultdict</tt>. This allows pickling of the result, if desired.</p>\n</li>\n<li><p>Adding automated testing via bitbucket pipelines.</p>\n</li>\n<li><p>Correcting an issue with <tt>pygeoprocessing.zonal_statistics</tt> that was\ncausing test failures on Python 3.6.</p>\n</li>\n<li><p>Pygeoprocessing is now tested against Python 3.7.</p>\n</li>\n<li><p>Fixed an issue in distance transform where a vertical striping artifact\nwould occur in the masked region of some large rasters when distances should\nbe 0.</p>\n</li>\n<li><p>Fixed an issue in all functionality that used a cutline polygon with\ninvalid geometry which would cause a crash. This was caused by <code>gdal.Warp</code>\nwhen using the cutline functionality. Instead this functionality was\nreplaced with manual rasterization. In turn this introduces two optional\nparameters:</p>\n<blockquote>\n<ul>\n<li><tt>rasterize</tt> and <tt>mask_raster</tt> have a <tt>where_clause</tt> parameter\nwhich takes a string argument in SQL WHERE syntax to filter\nrasterization based on attribute values.</li>\n<li><tt>warp_raster</tt> takes a <tt>working_dir</tt> parameter to manage local\ntemporary mask rasters.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Removing a temporary working directory that is created when executing\npygeoprocessing.convolve_2d.</p>\n</li>\n<li><p>Changed optional parameters involving layer indexes to be either indexes\nor string ids. In all cases changing <tt>layer_index</tt> to <tt>layer_id</tt> in\nthe functions: <tt>get_vector_info</tt>, <tt>reproject_vector</tt>, <tt>warp_raster</tt>,\n<tt>rasterize</tt>, <tt>calculate_disjoint_polygon_set</tt>, and <tt>mask_raster</tt>.</p>\n</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.6.1 (2019-02-13)</h3>\n<ul>\n<li>Added error checking in <tt>raster_calculator</tt> to help ensure that the\n<tt>target_datatype</tt> value is a valid GDAL type.</li>\n<li>Fixed an issue in <tt>distance_transform_edt</tt> that would occasionally\ncause incorrect distance calculations when the x sampling distance was &gt; 1.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.6.0 (2019-01-23)</h3>\n<ul>\n<li>Changed <tt>iterblocks</tt> API to take a raster/path band as an input rather\nthan a path and a list of bands. Also removed the <tt>astype_list</tt> due to\nits lack of orthogonality.</li>\n<li>Fixed bugs in <tt>convolve_2d</tt> involving inputs with nodata masking.</li>\n<li>Changing default raster creation compression algorithm from LZW to DEFLATE,\nthis is to address issues where we were seeing recreatable, but\nunexplainable LZWDecode errors in large raster data.</li>\n<li>Fixed an issue that could cause the distance transform to be incorrect when\nthe sampling distance was in the noninclusive range of (0.0, 1.0).</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.5.0 (2018-12-12)</h3>\n<ul>\n<li>Specific type checking for <tt>astype_list</tt> in <tt>iterblocks</tt> to avoid\nconfusing exceptions.</li>\n<li>Renamed test suite to be consistent with the pattern\n<tt><span class=\"pre\">test_[component].tif</span></tt>.</li>\n<li>Added a function <tt>pygeoprocessing.routing.extract_streams_mfd</tt> that\ncreates a contiguous stream layer raster to accounts for the divergent flow\nthat can occur with multiple flow direction. If the flow direction raster is\notherwise directly thresholded, small disjoint streams can appear where\nthe downstream flow drops below the threshold level.</li>\n<li>Fixed an issue that could cause some custom arguments to geotiff creation\noptions to be ignored.</li>\n<li>Added a <tt>mask_raster</tt> function that can be used to mask out pixels in\nan existing raster that don\u2019t overlap with a given vector.</li>\n<li>Fixed a bug in the <tt>distance_transform_edt</tt> function that would cause\nincorrect distances to be calculated in the case of nodata pixels in the\nregion raster. The algorithm has been modified to treat nodata as though\npixel values were 0 (non-region) and the distance transform will be defined\nfor the entire raster.</li>\n<li>Added a <tt>sampling_distance</tt> parameter to <tt>distance_transform_edt</tt> that\nlinearly scales the distance transform by this value.</li>\n<li>Fixed an issue in <tt>calculate_slope</tt> that would raise an exception if the\ninput dem did not have a nodata value defined.</li>\n<li>Changed the behavior of <tt>zonal_statistics</tt> for polygons that that do not\nintersect any pixels. These FIDs are now also included in the result from\n<tt>zonal_statistics</tt> where previously they were absent. This is to remain\nconsistent with how other GIS libraries calculate zonal stats.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.4.1 (2018-11-12)</h3>\n<ul>\n<li>Hotfix that fixes an issue that would cause <tt>zonal_statistics</tt> to crash if\na polygon were outside of the raster\u2019s bounding box.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.4.0 (2018-11-12)</h3>\n<ul>\n<li>Adding error checking to ensure that <tt>target_pixel_size</tt> passed to\n<tt>warp_raster</tt> and <tt>align_and_resize_raster_stack</tt> are validated to ensure\nthey are in the correct format. This solves an issue where an incorrect\nvalue, such as a single numerical value, resolve into readable exception\nmessages.</li>\n<li>Added a <tt>gdal_warp_options</tt> parameter to <tt>align_and_resize_raster_stack</tt>\nand <tt>warp_raster</tt> whose contents get passed to gdal.Warp\u2019s <tt>warpOptions</tt>\nparameter. This was implemented to expose the CUTLINE_TOUCH_ALL\nfunctionality but could be used for any gdal functionality.</li>\n<li>Modified <tt>rasterize</tt> API call to make <tt>burn_values</tt> and <tt>option_list</tt>\nboth optional parameters, along with error checking to ensure a bad input\u2019s\nbehavior is understood.</li>\n<li>Exposing GeoTIFF creation options for all the <tt>pygeoprocessing.routing</tt>\nfunctions which create rasters. This is consistent with the creation\noptions exposed in the main <tt>pygeoprocessing</tt> API.</li>\n<li>Removing <tt>'mean_pixel_size'</tt> as a return value from <tt>get_raster_info</tt>,\nthis is because this parameter is easily misused and easily calculated if\nneeded. This is a \u201cWhat good programmers need, not what bad programmers\nwant.\u201d feature.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.3.1 (2018-10-25)</h3>\n<ul>\n<li>Hotfix to patch an infinite loop when aggregating upstream or downstream\nwith custom rasters.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.3.0 (2018-10-25)</h3>\n<ul>\n<li><p>Fixed a handful of docstring errors.</p>\n</li>\n<li><p>Improved runtime of <tt>zonal_statistics</tt> by a couple of orders of magnitude\nfor large vectors by using spatial indexes when calculating disjoint polygon\noverlap sets, using database transactions, and memory buffers.</p>\n</li>\n<li><p>Improved runtime performance of <tt>reproject_vector</tt> by using database\ntransactions.</p>\n</li>\n<li><p>Improved logging for long runtimes in <tt>zonal_statistics</tt>.</p>\n</li>\n<li><p>Changed <tt>zonal_statistics</tt> API and functionality to aggregate across the\nFIDs of the aggregate vector. This is to be consistent with QGIS and other\nzonal statistics functionality. Additionally, fixed a bug where very small\npolygons might not get aggregated if they lie in the same pixel as another\npolygon that does not intersect it. The algorithm now runs in two passes:</p>\n<blockquote>\n<ul>\n<li>aggregate pixels whose centers intersect the aggregate polygons</li>\n<li>any polygons that were not aggregated are geometrically intersected\nwith pixels to determine coverage.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Removed the <tt>calculate_raster_stats</tt> function since it duplicates GDAL\nfunctionality, but with a slower runtime, and now functions in\n<tt>pygeoprocessing</tt> that create rasters also calculate stats on the fly if\ndesired.</p>\n</li>\n<li><p>Fixes an issue in <tt>get_raster_info</tt> and <tt>get_vector_info</tt> where the path\nto the raster/vector includes non-standard OS pathing (such as a NETCDF),\ninfo will still calculate info.</p>\n</li>\n<li><p>Added functionality to <tt>align_raster_stack</tt> and <tt>warp_raster</tt> to define\na base spatial reference system for rasters if not is not defined or one\nwishes to override the existing one. This functionality is useful when\nreprojecting a rasters that does not have a spatial reference defined in the\ndataset but is otherwise known.</p>\n</li>\n<li><p>Added a <tt>weight_raster_path_band</tt> parameter to both\n<tt>flow_accumulation_d8</tt> and <tt>flow_accumulation_mfd</tt> that allows the\ncaller to use per-pixel weights from a parallel raster as opposed to\nassuming a weight of 1 per pixel.</p>\n</li>\n<li><p>Added a <tt>weight_raster_path_band</tt> parameter to both\n<tt>distance_to_channel_mfd</tt> and <tt>distance_to_channel_d8</tt> that allows the\ncaller to use per-pixel weights from a parallel raster as opposed to\nassuming a distance of 1 between neighboring pixels or sqrt(2) between\ndiagonal ones.</p>\n</li>\n<li><p>Added an option to <tt>reproject_vector</tt> that allows a caller to specify\nwhich fields, if any, to copy to the target vector after reprojection.</p>\n</li>\n<li><p>Adding a check in <tt>align_and_resize_raster_stack</tt> for duplicate target\noutput paths to avoid problems where multiple rasters are being warped to\nthe same path.</p>\n</li>\n<li><p>Created a public <tt>merge_bounding_box_list</tt> function that\u2019s useful for\nunion or intersection of bounding boxes consistent with the format in\nPyGeoprocessing.</p>\n</li>\n<li><p>Added functionality in <tt>align_and_resize_raster_stack</tt> and <tt>warp_raster</tt>\nto use a vector to mask out pixel values that lie outside of the polygon\ncoverage area. This parameter is called <tt>vector_mask_options</tt> and is\nfully documented in both functions. It is similar to the cutline\nfunctionality provided in <tt>gdal.Warp</tt>.</p>\n</li>\n<li><p>Fixed an issue in the <tt>flow_accumulation_*</tt> functions where a weight\nraster whose values were equal to the nodata value of the flow accumulation\nraster OR simply nodata would cause infinite loops.</p>\n</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.2.3 (2018-07-25)</h3>\n<ul>\n<li>Exposing a parameter and setting reasonable defaults for the number of\nprocesses to allocate to <tt>convolve_2d</tt> and <tt>warp_raster</tt>. Fixes an issue\nwhere the number of processes could exponentiate if many processes were\ncalling these functions.</li>\n<li>Fixing an issue on <tt>zonal_statistics</tt> and <tt>convolve_2d</tt> that would\nattempt to both read and write to the target raster with two different GDAL\nobjects. This caused an issue on Linux where the read file was not caught up\nwith the written one. Refactored to use only one handle.</li>\n<li>Fixing a rare race condition where an exception could occur in\n<tt>raster_calculator</tt> that would be obscured by an access to an object that\nhad not yet been assigned.</li>\n<li><tt>align_and_resize_raster_stack</tt> now terminates its process pool.</li>\n<li>Increased the timeout in joining <tt>raster_calculator</tt>\u2019s stats worker.\nOn a slow system 5 seconds was not quite enough time.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.2.2 (2018-07-25)</h3>\n<ul>\n<li>Hotfixed a bug that would cause numpy arrays to be treated as broadcastable\neven if they were passed in \u201craw\u201d.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.2.1 (2018-07-22)</h3>\n<ul>\n<li>Fixing an issue with <tt>warp_raster</tt> that would round off bounding boxes\nfor rasters that did not fit perfectly into the target raster\u2019s provided\npixel size.</li>\n<li>Cautiously <tt>join</tt>ing all process pools to avoid a potential bug where a\ndeamonized subprocess in a process pool may still have access to a raster\nbut another process may require write access to it.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.2.0 (2018-07-19)</h3>\n<ul>\n<li>Several PyGeoprocessing functions now take advantage of multiple CPU cores:<ul>\n<li><tt>raster_calculator</tt> uses a separate thread to calculate raster\nstatistics in a <tt>nogil</tt> section of Cython code. In timing with a big\nrasters we saw performance improvements of about 35%.</li>\n<li><tt>align_and_resize_raster_stack</tt> uses as many CPU cores, up to the number\nof CPUs reported by multiprocessing.cpu_count (but no less than 1), to\nprocess each raster warp while also accounting for the fact that\n<tt>gdal.Warp</tt> uses 2 cores on its own.</li>\n<li><tt>warp_raster</tt> now directly uses <tt>gdal.Warp</tt>\u2019s multithreading directly.\nIn practice it seems to utilize two cores.</li>\n<li><tt>convolve_2d</tt> attempts to use <tt>multiprocessing.cpu_count</tt> cpus to\ncalculate separable convolutions per block while using the main thread to\naggregate  and write the result to the target raster. In practice we saw\nthis improve runtimes by about 50% for large rasters.</li>\n</ul>\n</li>\n<li>Fixed a bug that caused some nodata values to not be treated as nodata\nif there was a numerical roundoff.</li>\n<li>A recent GDAL upgrade (might have been 2.0?) changed the reference to\nnearest neighbor interpolation from \u2018nearest\u2019 to \u2018near\u2019. This PR changes\nPyGeoprocessing to be consistent with that change.</li>\n<li><tt>raster_calculator</tt> can now also take \u201craw\u201d arguments in the form of a\n(value, \u201craw\u201d) tuple. The parameter <tt>value</tt> will be passed directly to\n<tt>local_op</tt>. Scalars are no longer a special case and need to be passed as\n\u201craw\u201d parameters.</li>\n<li>Raising <tt>ValueError</tt> in <tt>get_raster_info</tt> and <tt>get_vector_info</tt> in\ncases where non-filepath non-GIS values are passed as parameters. Previously\nsuch an error would result in an unhelpful error in the GDAL library.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.1.0 (2018-07-06)</h3>\n<ul>\n<li>PyGeoprocessing now supports Python 2 and 3, and is tested on python 2.7\nand 3.6  Testing across multiple versions is configured to be run via\n<tt>tox</tt>.</li>\n<li>After testing (tox configuration included under <tt><span class=\"pre\">tox-libcompat.ini</span></tt>),\nnumpy requirement has been dropped to <tt><span class=\"pre\">numpy&gt;=1.10.0</span></tt> and scipy has been\nmodified to be <tt><span class=\"pre\">scipy&gt;=0.14.1,!=0.19.1</span></tt>.</li>\n<li>A dependency on <tt>future</tt> has been added for compatibility between python\nversions.</li>\n<li>Fixed a crash in <tt>pygeoprocessing.routing.flow_dir_mfd</tt> and\n<tt>flow_dir_d8</tt> if a base raster was passed in that did not have a power of\ntwo blocksize.</li>\n<li><tt>raster_calculator</tt> can now take numpy arrays and scalar values along with\nraster path band tuples. Arrays and scalars are broadcast to the raster size\naccording to numpy array broadcasting rules.</li>\n<li><tt>align_and_resize_raster_stack</tt> can now take a desired target projection\nwhich causes all input rasters to be warped to that projection on output.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.0.1 (2018-05-16)</h3>\n<ul>\n<li>Hotfix patch to remove upper bound on required numpy version. This was\ncausing a conflict with InVEST\u2019s looser requirement. Requirement is now\nset to &gt;=1.13.0.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.0.0 (2018-04-29)</h3>\n<ul>\n<li>This release marks a feature-complete version of PyGeoprocessing with a\nfull suite of routing and geoprocessing capabilities.</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>flow_dir_mfd</tt> function that\ncalculates a 32 bit multiple flow direction raster.</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>flow_accumulation_mfd</tt> function\nthat uses the flow direction raster from\n<tt>pygeoprocessing.routing.flow_dir_mfd</tt> to calculate a per-pixel continuous\nflow accumulation raster.</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>distance_to_channel_mfd</tt>\nfunction that calculates distance to a channel raster given a\npygeoprocessing MFD raster.</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>distance_to_channel_d8</tt> function\nthat calculates distance to a channel raster given a pygeoprocessing D8\nraster.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.7.0 (2018-04-18)</h3>\n<ul>\n<li>Versioning is now handled by <tt>setuptools_scm</tt> rather than\n<tt>natcap.versioner</tt>.  <tt>pygeoprocessing.__version__</tt> is now fetched from\nthe package metadata.</li>\n<li>Raster creation defaults now set \u201cCOMPRESS=LZW\u201d for all rasters created in\nPyGeoprocessing, including internal temporary rasters. This option was\nchosen after profiling large raster creation runs on platter hard drives.\nIn many cases processing time was dominated by several orders of magnitude\nas a write-to-disk. When compression is turned on overall runtime of very\nlarge rasters is significantly reduced. Note this otherwise increases the\nruntime small raster creation and processing by a small amount.</li>\n<li><dl>\n<dt><tt>pygeoprocessing.routing</tt> module now has a <tt>fill_pits</tt>, function which</dt>\n<dd>fills hydrological pits with a focus on runtime efficiency, memory space\nefficiency, and cache locality.</dd>\n</dl>\n</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>flow_dir_d8</tt> that uses largest\nslope to determine the downhill flow direction.</li>\n<li><tt>pygeoprocessing.routing</tt> module has a <tt>flow_accumulation_d8</tt> that uses\na pygeoprocessing D8 flow direction raster to calculate per-pixel flow\naccumulation.</li>\n<li>Added a <tt>merge_rasters</tt> function to <tt>pygeoprocessing</tt> that will mosaic a\nset of rasters in the same projection, pixel size, and band count.</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.6.0 (2017-01-10)</h3>\n<ul>\n<li>Added an optional parameter to <tt>iterblocks</tt> to allow the <tt>largest_block</tt>\nto be set something other than the PyGeoprocessing default. This in turn\nallows the <tt>largest_block</tt> parameter in <tt>raster_calculator</tt> to be passed\nthrough to <tt>iterblocks</tt>.</li>\n<li>Upgraded PyGeoprocessing GDAL dependency to &gt;=2.0.</li>\n<li>Added a <tt>working_dir</tt> optional parameter to <tt>zonal_statistics</tt>,\n<tt>distance_transform_edt</tt>, and <tt>convolve_2d</tt> which specifies a directory\nin which temporary files will be created during execution of the function.\nIf set to <tt>None</tt> files are created in the default system temporary\ndirectory.</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.5.0 (2017-09-14)</h3>\n<ul>\n<li>Fixed an issue where NETCDF files incorrectly raised Exceptions in\n<tt>raster_calculator</tt>  and <tt>rasterize</tt> because they aren\u2019t filepaths.</li>\n<li>Added a NullHandler so that users wouldn\u2019t get an error that a logger\nhandler was undefined.</li>\n<li>Added <tt>ignore_nodata</tt>, <tt>mask_nodata</tt>, and <tt>normalize_kernel</tt> options\nto <tt>convolve_2d</tt> which make this function capable of adapting the nodata\noverlap with the kernel rather than zero out the result, as well as on\nthe fly normalization of the kernel for weighted averaging purposes. This\nis in part to make this functionality more consistent with ArcGIS\u2019s\nspatial filters.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.4.4 (2017-08-18)</h3>\n<ul>\n<li>When testing for raster alignment <tt>raster_calculator</tt> no longer checks the\nstring equality for projections or geotransforms.  Instead it only checks\nraster size equality.  This fixes issues where users rasters DO align, but\nhave a slightly different text format of the WKT of projection.  It also\nabstracts the problem of georeferencing away from raster_calculator that is\nonly a grid based operation.</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>0.4.3 (2017-08-16)</h3>\n<ul>\n<li>Changed the error message in <tt>reclassify_raster</tt> so it\u2019s more informative\nabout how many values are missing and the values in the input lookup table.</li>\n<li>Added an optional parameter <tt>target_nodata</tt> to <tt>convolve_2d</tt> to set the\ndesired target nodata value.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.4.2 (2017-06-20)</h3>\n<ul>\n<li>Hotfix to fix an issue with <tt>iterblocks</tt> that would return signed values\non unsigned raster types.</li>\n<li>Hotfix to correctly cite Natural Capital Project partners in license and\nupdate the copyright year.</li>\n<li>Hotfix to patch an issue that gave incorrect results in many PyGeoprocessing\nfunctions when a raster was passed with an NoData value.  In these cases the\ninternal raster block masks would blindly pass through on the first row\nsince a test for <tt>numpy.ndarray == None</tt> is <tt>False</tt> and later\n<tt>x[False]</tt> is the equivalent of indexing the first row of the array.</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>0.4.1 (2017-06-19)</h3>\n<ul>\n<li><p>Non-backwards compatible refactor of core PyGeoprocessing geoprocessing\npipeline. This is to in part expose only orthogonal functionality, address\nruntime complexity issues, and follow more conventional GIS naming\nconventions. Changes include:</p>\n<blockquote>\n<ul>\n<li>Full test coverage for <tt>pygeoprocessing.geoprocessing</tt> module</li>\n<li>Dropping \u201curi\u201d moniker in lieu of \u201cpath\u201d.</li>\n<li>If a raster path is specified and operation requires a single band,\nargument is passed as a \u201c(path, band)\u201d tuple where the band index starts\nat 1 as convention for raster bands.</li>\n<li>Shapefile paths are assumed to operate on the first layer.  It is so\nrare for a shapefile to have more than one layer, functions that would\nbe confused by multiple layers have a layer_index that defaults to 0\nthat can be overridden in the call.</li>\n<li>Be careful, many of the parameter orders have been changed and renamed.\nGenerally inputs come first, outputs last.  Input parameters are\noften prefixed with \u201cbase_\u201d while output parameters are prefixed with\n\u201ctarget_\u201d.</li>\n<li>Functions that take rasters as inputs must have their rasters aligned\nbefore the call to that function.  The function\n<tt>align_and_resize_raster_stack</tt> can handle this.</li>\n<li><tt>vectorize_datasets</tt> refactored to <tt>raster_calculator</tt> since that\nname is often used as a convention when referring to raster\ncalculations.</li>\n<li><tt>vectorize_points</tt> refactored to meaningful <tt>interpolate_points</tt>.</li>\n<li><tt>aggregate_by_shapefile</tt> refactored to <tt>zonal_statistics</tt> and now\nreturns a dictionary rather than a named tuple.</li>\n<li>All functions that create rasters expose the underlying GeoTIFF options\nthrough a default parameter <tt>gtiff_creation_options</tt> which default to\n\u201c(\u2018TILED=YES\u2019, \u2018BIGTIFF=IF_SAFER\u2019)\u201d.</li>\n<li>Individual functions for raster and vector properties have been\naggregated into <tt>get_raster_info</tt> and <tt>get_vector_info</tt>\nrespectively.</li>\n<li>Introducing <tt>warp_raster</tt> to wrap GDAL\u2019s <tt>ReprojectImage</tt>\nfunctionality that also works on bounding box clips.</li>\n<li>Removed the <tt>temporary_filename()</tt> paradigm.  Users should manage\ntemporary filenames directly.</li>\n<li>Numerous API changes from the 0.3.x version of PyGeoprocessing.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Fixing an issue with aggregate_raster_values that caused a crash if feature\nIDs were not in increasing order starting with 0.</p>\n</li>\n<li><p>Removed \u201ccreate_rat/create_rat_uri\u201d and migrated it to\nnatcap.invest.wind_energy; the only InVEST model that uses that function.</p>\n</li>\n<li><p>Fixing an issue with aggregate_raster_values that caused a crash if feature\nIDs were not in increasing order starting with 0.</p>\n</li>\n<li><p>Removed \u201ccreate_rat/create_rat_uri\u201d and migrated it to\nnatcap.invest.wind_energy; the only InVEST model that uses that function.</p>\n</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.3.3 (2017-02-09)</h3>\n<ul>\n<li>Fixing a memory leak with large polygons when calculating disjoint set.</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>0.3.2 (2017-01-24)</h3>\n<ul>\n<li>Hotfix to patch an issue with watershed delineation packing that causes some\nfield values to lose precision due to default field widths being set.</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>0.3.1 (2017-01-18)</h3>\n<ul>\n<li>Hotfix patch to address an issue in watershed delineation that doesn\u2019t pack\nthe target watershed output file.  Half the shapefile consists of features\npolygonalized around nodata values that are flagged for deletion, but not\nremoved from the file.  This patch packs those features and returns a clean\nwatershed.</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>0.3.0 (2016-10-21)</h3>\n<ul>\n<li>Added <tt>rel_tol</tt> and <tt>abs_tol</tt> parameters to <tt>testing.assertions</tt> to be\nconsistent with PEP485 and deal with real world testing situations that\nrequired an absolute tolerance.</li>\n<li>Removed calls to <tt>logging.basicConfig</tt> throughout pygeoprocessing.  Client\napplications may need to adjust their logging if pygeoprocessing\u2019s log\nmessages are desired.</li>\n<li>Added a flag  to <tt>aggregate_raster_values_uri</tt> that can be used to\nindicate incoming polygons do not overlap, or the user does not care about\noverlap. This can be used in cases where there is a computational or memory\nbottleneck in calculating the polygon disjoint sets that would ultimately be\nunnecessary if it is known a priori that such a check is unnecessary.</li>\n<li>Fixed an issue where in some cases different nodata values for \u2018signal\u2019 and\n\u2018kernel\u2019 would cause incorrect convolution results in <tt>convolve_2d_uri</tt>.</li>\n<li>Added functionality to <tt>pygeoprocessing.iterblocks</tt> to iterate over\nlargest memory aligned block that fits into the number of elements provided\nby the parameter.  With default parameters, this uses a ceiling around 16MB\nof memory per band.</li>\n<li>Added functionality to <tt>pygeoprocessing.iterblocks</tt> to return only the\noffset dictionary.  This functionality would be used in cases where memory\naligned writes are desired without first reading arrays from the band.</li>\n<li>Refactored <tt>pygeoprocessing.convolve_2d_uri</tt> to use <tt>iterblocks</tt> to take\nadvantage of large block sizes for FFT summing window method.</li>\n<li>Refactoring source side to migrate source files from [REPO]/pygeoprocessing\nto [REPO]/src/pygeoprocessing.</li>\n<li>Adding a pavement script with routines to fetch SVN test data, build a\nvirtual environment, and clean the environment in a Windows based operating\nsystem.</li>\n<li>Adding <tt>transform_bounding_box</tt> to calculate the largest projected\nbounding box given the four corners on a local coordinate system.</li>\n<li>Removing GDAL, Shapely from the hard requirements in setup.py.  This will\nallow pygeoprocessing to be built by package managers like pip without these\ntwo packages being installed.  GDAL and Shapely will still need to be\ninstalled for pygeoprocessing to run as expected.</li>\n<li>Fixed a defect in <tt>pygeoprocessing.testing.assert_checksums_equal</tt>\npreventing BSD-style checksum files from being analyzed correctly.</li>\n<li>Fixed an issue in reclassify_dataset_uri that would cause an exception if\nthe incoming raster didn\u2019t have a nodata value defined.</li>\n<li>Fixed a defect in <tt>pygeoprocessing.geoprocessing.get_lookup_from_csv</tt>\nwhere the dialect was unable to be detected when analyzing a CSV that was\nlarger than 1K in size.  This fix enables the correct detection of comma or\nsemicolon delimited CSV files, so long as the header row by itself is not\nlarger than 1K.</li>\n<li>Intra-package imports are now relative.  Addresses an import issue for users\nwith multiple copies of pygeoprocessing installed across multiple Python\ninstallations.</li>\n<li>Exposed cython routing functions so they may be imported from C modules.</li>\n<li><tt>get_lookup_from_csv</tt> attempts to determine the dialect of the CSV instead\nof assuming comma delimited.</li>\n<li>Added relative numerical tolerance parameters to the PyGeoprocessing raster\nand csv tests with in the same API style as <tt>numpy.testing.allclose</tt>.</li>\n<li>Fixed an incomparability with GDAL 1.11.3 bindings that expects a boolean\ntype in <tt>band.ComputeStatistics</tt>.  Before this fix PyGeoprocessing would\ncrash with a TypeError on many operations.</li>\n<li>Fixed a defect in pygeoprocessing.routing.calculate_transport where the\nnodata types were cast as int even though the base type of the routing\nrasters were floats.  In extreme cases this could cause a crash on a type\nthat could not be converted to an int, like an <tt>inf</tt>, and in subtle cases\nthis would result in nodata values in the raster being ignored during\nrouting.</li>\n<li>Added functions to construct raster and vectors on disk from reasonable\ndatatypes (numpy matrices for rasters, lists of Shapely geometries for\nvectors).</li>\n<li>Fixed an issue where reproject_datasource_uri would add geometry that\ncouldn\u2019t be projected directly into the output datasource.  Function now\nonly adds geometries that transformed without error and reports if any\nfeatures failed to transform.</li>\n<li>Added file flushing and dataset swig deletion in reproject_datasource_uri to\nhandle a race condition that might have been occurring.</li>\n<li>Fixed an issue when \u201cNone\u201d was passed in on new raster creation that would\nattempt to directly set that value as the nodata value in the raster.</li>\n<li>Added basic filetype-specific assertions for many geospatial filetypes, and\ntests for these assertions.  These assertions are exposed in\n<tt>pygeoprocessing.testing</tt>.</li>\n<li>Pygeoprocessing package tests can be run by invoking\n<tt>python setup.py nosetests</tt>.  A subset of tests may also be run from an\ninstalled pygeoprocessing distribution by calling\n<tt>pygeoprocessing.test()</tt>.</li>\n<li>Fixed an issue with reclassify dataset that would occur when small rasters\nwhose first memory block would extend beyond the size of the raster thus\npassing in \u201c0\u201d values in the out of bounds area. Reclassify dataset\nidentified these as valid pixels, even though vectorize_datsets would mask\nthem out later.  Now vectorize_datasets only passes memory blocks that\ncontain valid pixel data to its kernel op.</li>\n<li>Added support for very small AOIs that result in rasters less than a pixel\nwide.  Additionally an <tt>all_touched</tt> flag was added to allow the\nALL_TOUCHED=TRUE option to be passed to RasterizeLayer in the AOI mask\ncalculation.</li>\n<li>Added watershed delineation routine to\npygeoprocessing.routing.delineate_watershed.  Operates on a DEM and point\nshapefile, optionally snaps outlet points to nearest stream as defined by a\nthresholded flow accumulation raster and copies the outlet point fields into\nthe constructed watershed shapefile.</li>\n<li>Fixing a memory leak in block caches that held on to dataset, band, and\nblock references even after the object was destroyed.</li>\n<li>Add an option to route_flux that lets the current pixel\u2019s source be included\nin the flux, or not.  Previous version would include on the source no matter\nwhat.</li>\n<li>Now using natcap.versioner for versioning instead of local versioning logic.</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>0.2.2 (2015-05-07)</h3>\n<ul>\n<li>Adding MinGW-specific compiler flags for statically linking pygeoprocessing\nbinaries against libstdc++ and libgcc.  Fixes an issue on many user\u2019s\ncomputers when installing from a wheel on the Python Package Index without\nhaving two needed DLLs on the PATH, resulting in an ImportError on pygeoprocessing.geoprocessing_core.pyd.</li>\n<li>Fixing an issue with versioning where \u2018dev\u2019 was displayed instead of the\nversion recorded in pygeoprocessing/__init__.py.</li>\n<li>Adding all pygeoprocessing.geoprocessing functions to\npygeoprocessing.__all__, which allows those functions to appear when\ncalling help(pygeoprocessing).</li>\n<li>Adding routing_core.pxd to the manifest.  This fixes an issue where some\nusers were unable to compiler pygeoprocessing from source.</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>0.2.1 (2015-04-23)</h3>\n<ul>\n<li>Fixed a bug on the test that determines if a raster should be memory\nblocked.  Rasters were not getting square blocked if the memory block was\nrow aligned.  Now creates 256x256 blocks on rasters larger than 256x256.</li>\n<li>Updates to reclassify_dataset_uri to use numpy.digitize rather than Python\nloops across the number of keys.</li>\n<li>More informative error messages raised on incorrect bounding box mode.</li>\n<li>Updated docstring on get_lookup_from_table to indicate the headers are case\ninsensitive.</li>\n<li>Added updates to align dataset list that report which dataset is being\naligned.  This is helpful for logging feedback when many datasets are passed\nin that don\u2019t take long enough to get a report from the underlying reproject\ndataset function.</li>\n<li>pygeoprocessing.routing.routing_core includes pxd to be <tt>cimport</tt>able\nfrom a Cython module.</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>0.2.0 (2015-04-14)</h3>\n<ul>\n<li>Fixed a library wide issue relating to the underlying numpy types of\nGDT_Byte Datasets.  Now correctly identify the signed and unsigned versions\nand removed all instances where code used to mod byte data to unsigned data\nand correctly creates signed/unsigned byte datasets during resampling.</li>\n<li>Removed extract_band_and_nodata function since it exposes the underlying\nGDAL types.</li>\n<li>Removed reclassify_by_dictionary since reclassify_dataset_uri provided\nalmost the same functionality and was widely used.</li>\n<li>Removed the class OrderedDict that was not used.</li>\n<li>Removed the function calculate_value_not_in_dataset since it loaded the\nentire dataset into memory and was not useful.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.1.8 (2015-04-13)</h3>\n<ul>\n<li>Fixed an issue on reclassifying signed byte rasters that had negative nodata\nvalues but the internal type stored for vectorize datasets was unsigned.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>0.1.7 (2015-04-02)</h3>\n<ul>\n<li>Package logger objects are now identified by python hierarchical package\npaths (e.g. pygeoprocessing.routing)</li>\n<li>Fixed an issue where rasters that had undefined nodata values caused\nstriping in the reclassify_dataset_uri function.</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3>0.1.6 (2015-03-24)</h3>\n<ul>\n<li>Fixing LICENSE.TXT to .txt issue that keeps reoccurring.</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3>0.1.5 (2015-03-16)</h3>\n<ul>\n<li>Fixed an issue where int32 dems with INT_MIN as the nodata value were being\ntreated as real DEM values because of an internal cast to a float for the\nnodata type, but a cast to double for the DEM values.</li>\n<li>Fixed an issue where flat regions, such as reservoirs, that could only drain\noff the edge of the DEM now correctly drain as opposed to having undefined\nflow directions.</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3>0.1.4 (2015-03-13)</h3>\n<ul>\n<li>Fixed a memory issue for DEMs on the order of 25k X 25k, still may have\nissues with larger DEMs.</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3>0.1.3 (2015-03-08)</h3>\n<ul>\n<li>Fixed an issue so tox correctly executes on the repository.</li>\n<li>Created a history file to document current and previous releases.</li>\n<li>Created an informative README.rst.</li>\n</ul>\n</div>\n<div id=\"id40\">\n<h3>0.1.2 (2015-03-04)</h3>\n<ul>\n<li>Fixing issue that caused \u201cLICENSE.TXT not found\u201d during pip install.</li>\n</ul>\n</div>\n<div id=\"id41\">\n<h3>0.1.1 (2015-03-04)</h3>\n<ul>\n<li>Fixing issue with automatic versioning scheme.</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h3>0.1.0 (2015-02-26)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6584192, "releases": {"0.0.0": [], "0.1.0.dev33": [], "0.1.0.dev68": [{"comment_text": "", "digests": {"md5": "ebe38157ce5da9ce84605ab172b63adc", "sha256": "829c0ac337e986bd4a58ba5fec5fe9833ae763f47bde7ac6e2346aa292dccf8f"}, "downloads": -1, "filename": "pygeoprocessing-0.1.0.dev68.zip", "has_sig": false, "md5_digest": "ebe38157ce5da9ce84605ab172b63adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97109, "upload_time": "2015-03-04T17:43:36", "upload_time_iso_8601": "2015-03-04T17:43:36.159994Z", "url": "https://files.pythonhosted.org/packages/9d/7c/f514759191448d03ccfcf08720a93769cb7bfd8ba09755dd570906f6ce7e/pygeoprocessing-0.1.0.dev68.zip", "yanked": false}], "0.1.0.dev71": [{"comment_text": "", "digests": {"md5": "6796b7b5bd2a4749af8a6f377e9276f3", "sha256": "97bd32a55b95c7b9e47f6c28184021a16a9730f5156db24725ffa28c1c924ed1"}, "downloads": -1, "filename": "pygeoprocessing-0.1.0.dev71.zip", "has_sig": false, "md5_digest": "6796b7b5bd2a4749af8a6f377e9276f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97246, "upload_time": "2015-03-04T18:28:25", "upload_time_iso_8601": "2015-03-04T18:28:25.950549Z", "url": "https://files.pythonhosted.org/packages/00/5e/c8e2412e4d2a99429d3c4cb0877aac6b38010902909ec268fb111811ec88/pygeoprocessing-0.1.0.dev71.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "dd5b93c82b09f998baa28be607fc8b30", "sha256": "9d14527ddb102c20cb3d1ae22076c7db5a79370eb26221031b1fbb5aa88b67be"}, "downloads": -1, "filename": "pygeoprocessing-0.1.1.zip", "has_sig": false, "md5_digest": "dd5b93c82b09f998baa28be607fc8b30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96948, "upload_time": "2015-03-04T20:06:41", "upload_time_iso_8601": "2015-03-04T20:06:41.485887Z", "url": "https://files.pythonhosted.org/packages/1b/61/df55c49bd1ce2ddd77bf94db7719aef05a97a6bd306467ab63bbb4f4d74b/pygeoprocessing-0.1.1.zip", "yanked": false}], "0.1.1.dev5": [{"comment_text": "", "digests": {"md5": "6d3a06dc6febc14416e5b2cb0b1e5c6e", "sha256": "08fbbd00f3fd026c02e5e2bd0c928900c49031c77b64f3609572b0f1668222cf"}, "downloads": -1, "filename": "pygeoprocessing-0.1.1.dev5.zip", "has_sig": false, "md5_digest": "6d3a06dc6febc14416e5b2cb0b1e5c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97247, "upload_time": "2015-03-04T20:25:26", "upload_time_iso_8601": "2015-03-04T20:25:26.303551Z", "url": "https://files.pythonhosted.org/packages/93/3c/6ebd136e617c5256e926ba2f93970f0fdaf783d71c3d3c64ba6ea9381542/pygeoprocessing-0.1.1.dev5.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e7d42aaff0ed7374c33a4e9bf9fa9216", "sha256": "de4dce2bcd1fc3012f1d77fb7626ceba1567fb08d4884238bd72dfc46c4369c8"}, "downloads": -1, "filename": "pygeoprocessing-0.1.2.zip", "has_sig": false, "md5_digest": "e7d42aaff0ed7374c33a4e9bf9fa9216", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 514321, "upload_time": "2015-03-06T14:41:50", "upload_time_iso_8601": "2015-03-06T14:41:50.210602Z", "url": "https://files.pythonhosted.org/packages/c8/bf/1f39239342d7256e9de7226a0c960844a5e8d2d5f8e10bf749c59ed051dd/pygeoprocessing-0.1.2.zip", "yanked": false}], "0.1.2.dev1": [{"comment_text": "", "digests": {"md5": "d2224e65b13d272a5647d5c66c2d3a96", "sha256": "69e530e5433c6d414050d592d4a9c973588651bdd3448386f6e9da6902ca7e72"}, "downloads": -1, "filename": "pygeoprocessing-0.1.2.dev1.zip", "has_sig": false, "md5_digest": "d2224e65b13d272a5647d5c66c2d3a96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97254, "upload_time": "2015-03-06T16:36:26", "upload_time_iso_8601": "2015-03-06T16:36:26.497432Z", "url": "https://files.pythonhosted.org/packages/e9/a1/762e36f9c3683796d513be07e78c674693d26e505736ace98c54f0819294/pygeoprocessing-0.1.2.dev1.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "92d8e2ca2f2d9bd9e36f5a3e2385d94c", "sha256": "ef56f27521ae8e691b40901ee16281929fcc370231138f275bbb93053ee3aa5d"}, "downloads": -1, "filename": "pygeoprocessing-0.1.3.zip", "has_sig": false, "md5_digest": "92d8e2ca2f2d9bd9e36f5a3e2385d94c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99388, "upload_time": "2015-03-08T21:01:07", "upload_time_iso_8601": "2015-03-08T21:01:07.077102Z", "url": "https://files.pythonhosted.org/packages/01/ed/52673a72d1b396e1877e10a53b9bd61cde6925d5c02e7eca705010731b32/pygeoprocessing-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bb6081f418c3da7f28e1cd194e875c12", "sha256": "0f11da578be5df773e6e689daef3c5fdd8cc36dae7faa5a8f574964947dfbf41"}, "downloads": -1, "filename": "pygeoprocessing-0.1.4.zip", "has_sig": false, "md5_digest": "bb6081f418c3da7f28e1cd194e875c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 529397, "upload_time": "2015-03-13T22:01:04", "upload_time_iso_8601": "2015-03-13T22:01:04.480608Z", "url": "https://files.pythonhosted.org/packages/f5/52/c2bc1d2227686ce0f173dcf99242c58c1fe93da1a348aed369b0c5957b8c/pygeoprocessing-0.1.4.zip", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3108ec0f378fd26d2dcea048395b31e1", "sha256": "85535dcd80f604274e0aa6d52b32b211f202eab8c00c93c0deb6ef990a97cd11"}, "downloads": -1, "filename": "pygeoprocessing-0.1.5.zip", "has_sig": false, "md5_digest": "3108ec0f378fd26d2dcea048395b31e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 529935, "upload_time": "2015-03-17T04:49:03", "upload_time_iso_8601": "2015-03-17T04:49:03.501807Z", "url": "https://files.pythonhosted.org/packages/a1/eb/5cd2b9cd2a9704d7b0506d1f82a482c2fadf3e2a7f05693725639e605bf9/pygeoprocessing-0.1.5.zip", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "579fb4997027e69e15edc95e06f9e3c3", "sha256": "e0658da7366ee0873fae3915da0cad4177fe15e07b2c97fc56e1cfd985877587"}, "downloads": -1, "filename": "pygeoprocessing-0.1.6.zip", "has_sig": false, "md5_digest": "579fb4997027e69e15edc95e06f9e3c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530019, "upload_time": "2015-03-24T16:51:23", "upload_time_iso_8601": "2015-03-24T16:51:23.756378Z", "url": "https://files.pythonhosted.org/packages/53/2c/274ebd7fff5d7295c3265c3afcb2bb7bc726008c08c182e5904a169eddd4/pygeoprocessing-0.1.6.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "d5c7e987479772e7ddaeb38c7abd5086", "sha256": "a73ce9d49c129b0d4bae0d54f1b6185a62fda27aa0a8752777803e683d5a793f"}, "downloads": -1, "filename": "pygeoprocessing-0.1.7-cp27-none-win32.whl", "has_sig": false, "md5_digest": "d5c7e987479772e7ddaeb38c7abd5086", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 804858, "upload_time": "2015-04-05T01:45:08", "upload_time_iso_8601": "2015-04-05T01:45:08.914326Z", "url": "https://files.pythonhosted.org/packages/44/f6/081460191e2eac05d97f0ccc0989e315f0dbb5c9e11f4f4dca7185cd8642/pygeoprocessing-0.1.7-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9243aed2802c8cb3cf422fba2ac1b5a1", "sha256": "4afb37d4295acce94aa86b93c1d62faf2f21b6110f1512b4f2b562f08bb708d6"}, "downloads": -1, "filename": "pygeoprocessing-0.1.7.zip", "has_sig": false, "md5_digest": "9243aed2802c8cb3cf422fba2ac1b5a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530406, "upload_time": "2015-04-02T22:28:33", "upload_time_iso_8601": "2015-04-02T22:28:33.903613Z", "url": "https://files.pythonhosted.org/packages/b0/9d/e0f1b721c22f7ef83ae76beba466c11c5f004408c31d7ecd9239bf6137ea/pygeoprocessing-0.1.7.zip", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "bea766cb5eeee4e7e5d91d3c4da010b2", "sha256": "919084d3e32b4f6280bb201bf40be1e23d8a2fa695b31a5169b746b25da7e77f"}, "downloads": -1, "filename": "pygeoprocessing-0.1.8-cp27-none-win32.whl", "has_sig": false, "md5_digest": "bea766cb5eeee4e7e5d91d3c4da010b2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 804387, "upload_time": "2015-04-14T01:05:56", "upload_time_iso_8601": "2015-04-14T01:05:56.421827Z", "url": "https://files.pythonhosted.org/packages/69/47/c7321d0f828c69b75b841abc4956639efe7024f94dd14b097de5def9979d/pygeoprocessing-0.1.8-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e70dad2f57541a6db6d7c7abc6220e0f", "sha256": "214c482eb39002a06d9b26aa7629f378b095c8c3031bdbf70b4dbed79826d6b4"}, "downloads": -1, "filename": "pygeoprocessing-0.1.8.zip", "has_sig": false, "md5_digest": "e70dad2f57541a6db6d7c7abc6220e0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 529930, "upload_time": "2015-04-14T01:05:42", "upload_time_iso_8601": "2015-04-14T01:05:42.121404Z", "url": "https://files.pythonhosted.org/packages/5c/8c/a531fa97a456a89b5ce338567d04b3aac5eba658f757a257fa4836b1abcf/pygeoprocessing-0.1.8.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3b0a53f66860642e44691b3ab3b6b52c", "sha256": "9222e513be661d48b39120cb2043992a7a1fd469d670bd66475dd520f55820f7"}, "downloads": -1, "filename": "pygeoprocessing-0.2.0-cp27-none-win32.whl", "has_sig": false, "md5_digest": "3b0a53f66860642e44691b3ab3b6b52c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 802373, "upload_time": "2015-04-15T05:06:16", "upload_time_iso_8601": "2015-04-15T05:06:16.971677Z", "url": "https://files.pythonhosted.org/packages/53/18/cf9c45eb19d8ff05ba04e6bae960364082a768807e182c924242951ca17f/pygeoprocessing-0.2.0-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b482ac66e1959d1edbd2d064335dfaa", "sha256": "25db21c45595bcf8ff68023b4e883f7e466930fd61190e3bf76abb096316ed56"}, "downloads": -1, "filename": "pygeoprocessing-0.2.0.zip", "has_sig": false, "md5_digest": "3b482ac66e1959d1edbd2d064335dfaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528813, "upload_time": "2015-04-15T05:06:01", "upload_time_iso_8601": "2015-04-15T05:06:01.241201Z", "url": "https://files.pythonhosted.org/packages/cf/d4/9af4cb6f2c350f3a8490cc02ca76f54cb4fb40e9773e08b30dff15e3d8db/pygeoprocessing-0.2.0.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b9f63e186d8c96c1eb31d1fea824cfa3", "sha256": "f6e10b77ed0b0a729a3c1aa169355cbf869222c0cfbbd2a8c269d1c83980de95"}, "downloads": -1, "filename": "pygeoprocessing-0.2.1-cp27-none-win32.whl", "has_sig": false, "md5_digest": "b9f63e186d8c96c1eb31d1fea824cfa3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 805015, "upload_time": "2015-04-23T19:37:48", "upload_time_iso_8601": "2015-04-23T19:37:48.234919Z", "url": "https://files.pythonhosted.org/packages/cd/e0/8ec8655bc781f8f5a8c5cfb3cf23466f6793d3a8c803dcdf335297aa07af/pygeoprocessing-0.2.1-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56a536585fffd625027b726af8586137", "sha256": "00727cc37435313919c27db2209470fbe4fdce83c7a16bb7e1657eafb3d0f4a8"}, "downloads": -1, "filename": "pygeoprocessing-0.2.1.zip", "has_sig": false, "md5_digest": "56a536585fffd625027b726af8586137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530784, "upload_time": "2015-04-23T19:38:05", "upload_time_iso_8601": "2015-04-23T19:38:05.595338Z", "url": "https://files.pythonhosted.org/packages/2c/b5/6ea015e491f375999bb222c0176737cabf2205fa5b8e8e343cefa27a0029/pygeoprocessing-0.2.1.zip", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "05bb322242107b4606f67462d377c590", "sha256": "7ffe1ec937a7ff549bb235541132ea45a50b300ace2577a08bdefda4bb861ac3"}, "downloads": -1, "filename": "pygeoprocessing-0.2.2-cp27-none-win32.whl", "has_sig": false, "md5_digest": "05bb322242107b4606f67462d377c590", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 804776, "upload_time": "2015-05-07T23:05:52", "upload_time_iso_8601": "2015-05-07T23:05:52.748334Z", "url": "https://files.pythonhosted.org/packages/c8/34/02b8a5025bc91cc03857bcff2470ee0754f12b3b77926938e5646713387c/pygeoprocessing-0.2.2-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0daff19d9cf79de97c22a3d7e166219a", "sha256": "eda02e77bacba72985b2f24eb6c3909b9bf3bde6e591c02b0e1d870ed9b2d3bb"}, "downloads": -1, "filename": "pygeoprocessing-0.2.2.zip", "has_sig": false, "md5_digest": "0daff19d9cf79de97c22a3d7e166219a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 532214, "upload_time": "2015-05-07T23:06:08", "upload_time_iso_8601": "2015-05-07T23:06:08.600882Z", "url": "https://files.pythonhosted.org/packages/5a/00/23b0d22a568308d8626b493f8da4780ac29c29d62a065f8795803f64148f/pygeoprocessing-0.2.2.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "745beb72b2679125db75d49da1c69f42", "sha256": "ac3beb6b8643c7e7f3f7c1c1af4a0c5230c49031256a4fbce642d7a36f710dfb"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "745beb72b2679125db75d49da1c69f42", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 738604, "upload_time": "2016-10-21T20:35:57", "upload_time_iso_8601": "2016-10-21T20:35:57.779725Z", "url": "https://files.pythonhosted.org/packages/a2/f4/91d6930a6d8c05360f81c91b37b6b7fa851f31523bf5b1ad517f0e6cc64e/pygeoprocessing-0.3.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "830ac397ad8536c4d8545a4625e6c76f", "sha256": "4ffb89b7ffb433d87da8fd005a604829c05bf17fb418e06a8303d0ccb7de1e08"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0.tar.gz", "has_sig": false, "md5_digest": "830ac397ad8536c4d8545a4625e6c76f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 493768, "upload_time": "2016-10-21T20:35:54", "upload_time_iso_8601": "2016-10-21T20:35:54.215034Z", "url": "https://files.pythonhosted.org/packages/f9/b8/1efc8c2496a24da57c80db3aadd79765f413a294338db796007fa7544fa8/pygeoprocessing-0.3.0.tar.gz", "yanked": false}], "0.3.0a10": [{"comment_text": "", "digests": {"md5": "0f5a5ecab1fc61ecb22660cf58ac5b15", "sha256": "9564c2ccd7107ec2a7f36c621e597585a64b7110e13529268a32330e2f020f97"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a10-cp27-none-win32.whl", "has_sig": false, "md5_digest": "0f5a5ecab1fc61ecb22660cf58ac5b15", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 893527, "upload_time": "2015-10-07T17:35:47", "upload_time_iso_8601": "2015-10-07T17:35:47.520955Z", "url": "https://files.pythonhosted.org/packages/98/e1/83ee3b8210daf8b2825d5044143cfbd3465e648321d2fd52f2c009f83f2a/pygeoprocessing-0.3.0a10-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9a79fcb0193b3393e5fefb60b05ff13", "sha256": "befb547dbd825c810ab0398236fd5ed6e5c9342cce8d1c1e74f7e3953ddde1d3"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a10.zip", "has_sig": false, "md5_digest": "c9a79fcb0193b3393e5fefb60b05ff13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528129, "upload_time": "2015-10-07T17:35:52", "upload_time_iso_8601": "2015-10-07T17:35:52.771404Z", "url": "https://files.pythonhosted.org/packages/04/ce/dd7fb93672fde7885e2af70d104dd0d92e82ff9e1933472b862104226641/pygeoprocessing-0.3.0a10.zip", "yanked": false}], "0.3.0a11": [{"comment_text": "", "digests": {"md5": "bdd200add5962bc252994f1ec2ec4e97", "sha256": "5d1642a83668be30ec910760afeeea7def809214a01d2fa97cf7f5fb1ee996bd"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a11-cp27-none-win32.whl", "has_sig": false, "md5_digest": "bdd200add5962bc252994f1ec2ec4e97", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 497847, "upload_time": "2015-11-12T18:38:09", "upload_time_iso_8601": "2015-11-12T18:38:09.925346Z", "url": "https://files.pythonhosted.org/packages/c6/1b/94963a9f4cca6e9bb46bbcdf31f04b9e5ce953f8e1f5ae45bfd8462a732d/pygeoprocessing-0.3.0a11-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81c2358042b034db670938231bdf36a6", "sha256": "105419c86f17a9d019869cac2882f2162a3e67e14515de0c7542d02b0698c96a"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a11.zip", "has_sig": false, "md5_digest": "81c2358042b034db670938231bdf36a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133171, "upload_time": "2015-11-12T18:38:17", "upload_time_iso_8601": "2015-11-12T18:38:17.009035Z", "url": "https://files.pythonhosted.org/packages/bc/f9/de22e8f1f77be6d67544fb6e4b42b4aea4e4e31b86293991c358054432db/pygeoprocessing-0.3.0a11.zip", "yanked": false}], "0.3.0a12": [{"comment_text": "", "digests": {"md5": "62208a5f4d8b6e263fbf71b347b4a90f", "sha256": "e49a3bfe4ee67d00a4c0cedd7b5b24d0c6172280e1ff650db0d36f74c3a4b186"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a12-cp27-none-win32.whl", "has_sig": false, "md5_digest": "62208a5f4d8b6e263fbf71b347b4a90f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 498119, "upload_time": "2015-11-13T23:48:26", "upload_time_iso_8601": "2015-11-13T23:48:26.236136Z", "url": "https://files.pythonhosted.org/packages/cc/92/d7b95d300ea9d7faae0fb8635395895af38e716327b2b3ce89fb0190ae42/pygeoprocessing-0.3.0a12-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88bda240fc4d9182a6f357ad4999015e", "sha256": "09349c5325ea8ff6165d70f36080646067fbdcb667ab8da967d91fdf224bad9a"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a12.zip", "has_sig": false, "md5_digest": "88bda240fc4d9182a6f357ad4999015e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133491, "upload_time": "2015-11-13T23:48:31", "upload_time_iso_8601": "2015-11-13T23:48:31.636327Z", "url": "https://files.pythonhosted.org/packages/c2/9b/36c173db2264c2fb432625815c4447787be92632c15023e75ea797db0716/pygeoprocessing-0.3.0a12.zip", "yanked": false}], "0.3.0a13": [{"comment_text": "", "digests": {"md5": "7b9f0b8693d6e7cb45cfb9b123be67af", "sha256": "21b14e365bc746ec4ddec9ecceccd25493d2b725b5ae16322127a362e79dc752"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a13-cp27-none-win32.whl", "has_sig": false, "md5_digest": "7b9f0b8693d6e7cb45cfb9b123be67af", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 900294, "upload_time": "2015-12-03T22:53:27", "upload_time_iso_8601": "2015-12-03T22:53:27.078915Z", "url": "https://files.pythonhosted.org/packages/28/c6/25590db23ce4838b180ab4faa600769663861d036a1cc16d22f7f1bb3795/pygeoprocessing-0.3.0a13-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e80e41b4c034cbd6470619dc5ef91044", "sha256": "b8a20e2d8053db0f8df1f5d2141b210624c132658bc20473b6a6077a8658a1d9"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a13.zip", "has_sig": false, "md5_digest": "e80e41b4c034cbd6470619dc5ef91044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525375, "upload_time": "2015-12-03T22:53:20", "upload_time_iso_8601": "2015-12-03T22:53:20.735339Z", "url": "https://files.pythonhosted.org/packages/90/a2/c35c6c1bb2d4f7318986783cc86edfef8f3f0fd903b1165597bdf08b083f/pygeoprocessing-0.3.0a13.zip", "yanked": false}], "0.3.0a14": [{"comment_text": "", "digests": {"md5": "b214748d6f828c38e76a63d9cc917c7b", "sha256": "8b972a783867f26efc3140053abeadc955c01e90a597bcd5af006b72c12e913f"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a14-cp27-none-win32.whl", "has_sig": false, "md5_digest": "b214748d6f828c38e76a63d9cc917c7b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 799601, "upload_time": "2016-03-28T18:37:55", "upload_time_iso_8601": "2016-03-28T18:37:55.124729Z", "url": "https://files.pythonhosted.org/packages/bc/c9/d65ad19cd2320b4d2da264111a5316c3ba0437900eb4fa006d3fac8ac57a/pygeoprocessing-0.3.0a14-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a71fe4dc93ee1130a68ca352cc17b5af", "sha256": "b153b2f33236b930e4ea23e5793347898702f06f227fbaddbfadab5284ff26d2"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a14.zip", "has_sig": false, "md5_digest": "a71fe4dc93ee1130a68ca352cc17b5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 532070, "upload_time": "2016-03-28T18:37:48", "upload_time_iso_8601": "2016-03-28T18:37:48.419277Z", "url": "https://files.pythonhosted.org/packages/07/ad/456aed15515a983282869e2bcb8c0bce0ef1c68929dfd1ce81ba6e123ddb/pygeoprocessing-0.3.0a14.zip", "yanked": false}], "0.3.0a15": [{"comment_text": "", "digests": {"md5": "334b0c6383a0db839ee97612ea885e07", "sha256": "410290293d3c506eea419ca995ca3657360344617bfd29b7ce519920f28b621b"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a15-cp27-none-win32.whl", "has_sig": false, "md5_digest": "334b0c6383a0db839ee97612ea885e07", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 753498, "upload_time": "2016-03-29T17:35:17", "upload_time_iso_8601": "2016-03-29T17:35:17.340638Z", "url": "https://files.pythonhosted.org/packages/88/3f/722a0643f6503cdc5c6e0a6187d1e59a4d12d3dc37d4711a2869e712bcce/pygeoprocessing-0.3.0a15-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cd4d1b778e7deaef80196d4484cc74b", "sha256": "8f0ca7dc6b0d10d0f89235cd02c49a974a7fc5c2d3798bb08f45fe1d62bc09b7"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a15.zip", "has_sig": false, "md5_digest": "6cd4d1b778e7deaef80196d4484cc74b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 533508, "upload_time": "2016-03-29T17:35:09", "upload_time_iso_8601": "2016-03-29T17:35:09.289595Z", "url": "https://files.pythonhosted.org/packages/fa/33/6a10371ccd9b704757ab10a0135766f31a52e17d4d236bfeae9ecbce8619/pygeoprocessing-0.3.0a15.zip", "yanked": false}], "0.3.0a16": [{"comment_text": "", "digests": {"md5": "352d9b5986a675b4cfceb0d013adb81f", "sha256": "66a60c297fb6d882d53fdaadba524bf718fcbeba52feca5268efdaa360aed0b0"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a16-cp27-none-win32.whl", "has_sig": false, "md5_digest": "352d9b5986a675b4cfceb0d013adb81f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 754603, "upload_time": "2016-06-02T18:23:44", "upload_time_iso_8601": "2016-06-02T18:23:44.412502Z", "url": "https://files.pythonhosted.org/packages/8e/ed/0f94d0cb0044a9d45bc87e940f2090fc52c813907ea0b2573d70f68cbe85/pygeoprocessing-0.3.0a16-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3389ee2dfafb2404d32c27257341b4a1", "sha256": "1e0874912b8626adcd2c08a5dcd6e11aba0427096ed4f31a4ec5b91b01934adf"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a16.zip", "has_sig": false, "md5_digest": "3389ee2dfafb2404d32c27257341b4a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530045, "upload_time": "2016-06-02T18:23:37", "upload_time_iso_8601": "2016-06-02T18:23:37.801432Z", "url": "https://files.pythonhosted.org/packages/5c/63/16103133793fc2a423edadda752329bd22c2d1e119546679e9f49b104f13/pygeoprocessing-0.3.0a16.zip", "yanked": false}], "0.3.0a17": [{"comment_text": "", "digests": {"md5": "5791d381772f237f81fc9edd1b95c422", "sha256": "ea05840d37c3e56d7bb5a59ae24b93afc9da9bd5c4316a5ccb0b7c00d608454a"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a17-cp27-none-win32.whl", "has_sig": false, "md5_digest": "5791d381772f237f81fc9edd1b95c422", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 754611, "upload_time": "2016-06-02T21:14:26", "upload_time_iso_8601": "2016-06-02T21:14:26.468470Z", "url": "https://files.pythonhosted.org/packages/94/39/8f43d09078d4f9a126e8416aa75d7cb948b5a5af876475fd73d35f581256/pygeoprocessing-0.3.0a17-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efa1f237206889cd7cab58245dfa046b", "sha256": "247bfa18f29d3bfc4a34f1cb05ae715a9072c1f6a82f73ebdba640f3e90271cc"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a17.zip", "has_sig": false, "md5_digest": "efa1f237206889cd7cab58245dfa046b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 530047, "upload_time": "2016-06-02T21:13:39", "upload_time_iso_8601": "2016-06-02T21:13:39.544319Z", "url": "https://files.pythonhosted.org/packages/3a/00/e2f7cf98429797357cac4562a033ed562e0d7f91f79a58db30f8339b4fe8/pygeoprocessing-0.3.0a17.zip", "yanked": false}], "0.3.0a18": [{"comment_text": "", "digests": {"md5": "e2276b3072a50b27a71532d2de85efb2", "sha256": "cadb78d29fa480a24e143418dd39706542b376007bd16655c0c9008bcd975cd0"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a18-cp27-none-win32.whl", "has_sig": false, "md5_digest": "e2276b3072a50b27a71532d2de85efb2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 755689, "upload_time": "2016-06-09T19:11:19", "upload_time_iso_8601": "2016-06-09T19:11:19.469762Z", "url": "https://files.pythonhosted.org/packages/b8/5e/464696e64d57860193dd4211e70c87d4c70338718039d969bc80bcea72a6/pygeoprocessing-0.3.0a18-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca9945e6c44e034ed7cfcef0b51a4033", "sha256": "981af900cc8e7404c702a51f1973c592f7c06dee81ce83139bf1e3343740087a"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a18.zip", "has_sig": false, "md5_digest": "ca9945e6c44e034ed7cfcef0b51a4033", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 531175, "upload_time": "2016-06-09T19:11:13", "upload_time_iso_8601": "2016-06-09T19:11:13.868748Z", "url": "https://files.pythonhosted.org/packages/5c/c3/3e1de2b146ac2c30e1349e38f99f8289ed8bbd4f8920848c139b4d53cc53/pygeoprocessing-0.3.0a18.zip", "yanked": false}], "0.3.0a19": [{"comment_text": "", "digests": {"md5": "9f19da27413669909f6541b8fe67c892", "sha256": "33e8e68ae697ee42e60cab56d5f7fbba3366c47b65c3cacf6a319515cb5e0f66"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a19-cp27-none-win32.whl", "has_sig": false, "md5_digest": "9f19da27413669909f6541b8fe67c892", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 810727, "upload_time": "2016-09-13T17:55:35", "upload_time_iso_8601": "2016-09-13T17:55:35.782816Z", "url": "https://files.pythonhosted.org/packages/a4/ed/5bb53a20106680395d1ef7bc842917c47c582de12f3dbc17b56516844722/pygeoprocessing-0.3.0a19-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8de436370295e7998e4045ceff5b8395", "sha256": "293d6c61f2cefbd38a7e5a633eaf109134e96e0017b9aea18241819f46cd4c1e"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a19.zip", "has_sig": false, "md5_digest": "8de436370295e7998e4045ceff5b8395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525548, "upload_time": "2016-09-13T17:55:31", "upload_time_iso_8601": "2016-09-13T17:55:31.700946Z", "url": "https://files.pythonhosted.org/packages/ba/2a/1b8a89cf3adb85ff674bb711ea9876ada33ef922ad83b667c736dd759ff9/pygeoprocessing-0.3.0a19.zip", "yanked": false}], "0.3.0a2": [{"comment_text": "", "digests": {"md5": "080f7f4bdda126648dd23373e0e73a56", "sha256": "6122b98d211d822c0e45ac9a53204ab44f6f0939308466f8387361b825a07dd9"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a2-cp27-none-win32.whl", "has_sig": false, "md5_digest": "080f7f4bdda126648dd23373e0e73a56", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 858859, "upload_time": "2015-05-29T21:15:05", "upload_time_iso_8601": "2015-05-29T21:15:05.819833Z", "url": "https://files.pythonhosted.org/packages/3f/e0/3141d14ee9d5c8222a2da8a93975eebe557c8409f128bbdf940c7d34ec8f/pygeoprocessing-0.3.0a2-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22371daf6c7a2e271d750ffd2e802142", "sha256": "24a8a8fcff8ea5609b0afe895ec857c16cf63836e274f87d9a058f5c2ff1d095"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a2.zip", "has_sig": false, "md5_digest": "22371daf6c7a2e271d750ffd2e802142", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 497577, "upload_time": "2015-05-29T21:15:19", "upload_time_iso_8601": "2015-05-29T21:15:19.414826Z", "url": "https://files.pythonhosted.org/packages/f2/bc/1bdb217300e36b46b2e0b6b6af226c993ce934aea4445ac7ff83ac9f2791/pygeoprocessing-0.3.0a2.zip", "yanked": false}], "0.3.0a20": [{"comment_text": "", "digests": {"md5": "b0e78a2275eedd6fbe0f6a9350d392fb", "sha256": "09b4a80cab12c4346c908d4fb897ccb9aef625766cb23c71c4bfcec058af3c17"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a20-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "b0e78a2275eedd6fbe0f6a9350d392fb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 810730, "upload_time": "2016-09-14T18:32:35", "upload_time_iso_8601": "2016-09-14T18:32:35.504636Z", "url": "https://files.pythonhosted.org/packages/1b/24/a23da1101edf0ca02d5c1e7c472bdb9b976296fee6e8b463d54cb64bdda7/pygeoprocessing-0.3.0a20-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "798dd41714f5d6e840df1aa7ac72ba88", "sha256": "064ea3ae95511a687562ef78404dd9b1c0f3b9c846c24c631b992b9d6b7771d2"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a20.zip", "has_sig": false, "md5_digest": "798dd41714f5d6e840df1aa7ac72ba88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525615, "upload_time": "2016-09-14T18:32:19", "upload_time_iso_8601": "2016-09-14T18:32:19.809562Z", "url": "https://files.pythonhosted.org/packages/46/e6/713dbbf5ec296efa64f21026d233f5ccc50d400b34d90f5221342eb5cfad/pygeoprocessing-0.3.0a20.zip", "yanked": false}], "0.3.0a21": [{"comment_text": "", "digests": {"md5": "71380a9ba553f2b94908132e17551804", "sha256": "ffd0d76cf503ddedf00f90f7695f7e914e54d9a36c23d495dd964b2938ec59c8"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a21-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "71380a9ba553f2b94908132e17551804", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 810713, "upload_time": "2016-09-24T04:17:43", "upload_time_iso_8601": "2016-09-24T04:17:43.585349Z", "url": "https://files.pythonhosted.org/packages/c4/7d/d9acad5a082b72caaf22855f4ae1120a228ac14a2f951765a07eb33df667/pygeoprocessing-0.3.0a21-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed27ff432251773bdd85be90f50cf5a2", "sha256": "9f936210276e164f669fabcb19f18f03f881c36e54d98d6c1a268dd4fa69ed65"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a21.zip", "has_sig": false, "md5_digest": "ed27ff432251773bdd85be90f50cf5a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525947, "upload_time": "2016-09-24T04:17:47", "upload_time_iso_8601": "2016-09-24T04:17:47.631029Z", "url": "https://files.pythonhosted.org/packages/b3/e2/c8663d9e78f7963113a3b2d10b1476121f180bb8835e56ede9c5beb2b181/pygeoprocessing-0.3.0a21.zip", "yanked": false}], "0.3.0a22": [{"comment_text": "", "digests": {"md5": "2aea4e6b317eb1cc8d5b9ab04b00c46a", "sha256": "1e19f7951aad4318f4363ae38765736e49208077812b8023b207d4a9733c3ed3"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a22-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "2aea4e6b317eb1cc8d5b9ab04b00c46a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 810724, "upload_time": "2016-09-27T01:54:30", "upload_time_iso_8601": "2016-09-27T01:54:30.456213Z", "url": "https://files.pythonhosted.org/packages/9b/ce/373f8188eb5041fbe82fd2a140566a291e60a4d3794be5f1c83ae55a8958/pygeoprocessing-0.3.0a22-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e46e5cce81b161bdf8c75044a36a7dc3", "sha256": "6c90848dc0c777849c9cf32e69fec1699ce638190d4e2340dd45a4bcc44623c7"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a22.zip", "has_sig": false, "md5_digest": "e46e5cce81b161bdf8c75044a36a7dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 526656, "upload_time": "2016-09-27T01:54:34", "upload_time_iso_8601": "2016-09-27T01:54:34.771475Z", "url": "https://files.pythonhosted.org/packages/83/ca/acab8b95f6973e08e0f1ff667ab2708181900e5db4e027941a168f6e3f7c/pygeoprocessing-0.3.0a22.zip", "yanked": false}], "0.3.0a3": [{"comment_text": "", "digests": {"md5": "2b349ce138d425024eae4c3425e54d85", "sha256": "c059deb34c0cdba515d35ab1337876e8f3aaa7efe7a8b80269fc1b00b02911fb"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a3-cp27-none-win32.whl", "has_sig": false, "md5_digest": "2b349ce138d425024eae4c3425e54d85", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 860172, "upload_time": "2015-06-12T02:41:42", "upload_time_iso_8601": "2015-06-12T02:41:42.450353Z", "url": "https://files.pythonhosted.org/packages/ce/aa/8169771c05d37dbd46836176f94b706bfdf31d512a4b12bcefb9840550ae/pygeoprocessing-0.3.0a3-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "795442ec3f8357a412af3e6cc3fb4cc1", "sha256": "d2fb9e65bcff0acd8b67ce905375e3385bb38efc6dbba8e92a57cc3e429c6751"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a3.zip", "has_sig": false, "md5_digest": "795442ec3f8357a412af3e6cc3fb4cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 498907, "upload_time": "2015-06-15T17:07:07", "upload_time_iso_8601": "2015-06-15T17:07:07.066569Z", "url": "https://files.pythonhosted.org/packages/eb/9d/e7c6d95688802d22e15b8cd0b4e7990dcb42a300016804f1ed30aa40aec6/pygeoprocessing-0.3.0a3.zip", "yanked": false}], "0.3.0a4": [{"comment_text": "", "digests": {"md5": "89ca937f0f241b4ab0246f36c807ee8a", "sha256": "8429450c8ebeec4827ac9a025abfe52c6379b51834da68f6d3c620eaba66df58"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a4-cp27-none-win32.whl", "has_sig": false, "md5_digest": "89ca937f0f241b4ab0246f36c807ee8a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 861955, "upload_time": "2015-07-28T19:37:26", "upload_time_iso_8601": "2015-07-28T19:37:26.019759Z", "url": "https://files.pythonhosted.org/packages/ff/47/48944c2cc7640ea08f657455fd2a21e4e8a0ab9e6f1b3c2c059014b1082a/pygeoprocessing-0.3.0a4-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab6170e6a44f750f90213958895a7c91", "sha256": "9c514b9a65598a9e634e8233402a47665e5e7f961e979bdaafcce7778625d8d2"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a4.zip", "has_sig": false, "md5_digest": "ab6170e6a44f750f90213958895a7c91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 500825, "upload_time": "2015-07-28T19:37:21", "upload_time_iso_8601": "2015-07-28T19:37:21.057580Z", "url": "https://files.pythonhosted.org/packages/8e/a5/a7d8fcd498fb921b292f9320e79c9e2c446dae09cf0bb1c39552c8328aa2/pygeoprocessing-0.3.0a4.zip", "yanked": false}], "0.3.0a5": [{"comment_text": "", "digests": {"md5": "5879d3de0e1079a3b389b041797d0f5f", "sha256": "7ea43ffa71d92af1b2bf0d6b4882e977b8a63c3e1cff7d889227fc4b5903e189"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a5-cp27-none-win32.whl", "has_sig": false, "md5_digest": "5879d3de0e1079a3b389b041797d0f5f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 470765, "upload_time": "2015-07-31T23:18:02", "upload_time_iso_8601": "2015-07-31T23:18:02.301393Z", "url": "https://files.pythonhosted.org/packages/ee/b7/075c91d57c1110e61293c306ffb602d767a61ae540469a9794fd5ca00c24/pygeoprocessing-0.3.0a5-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22ad9350120ca764f21065ce374e95b6", "sha256": "b8d9f20d863e29e7f36cb0d5369bf9dce55bfef64e61d4a8644ffce67939fbc1"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a5.zip", "has_sig": false, "md5_digest": "22ad9350120ca764f21065ce374e95b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106715, "upload_time": "2015-07-31T23:18:06", "upload_time_iso_8601": "2015-07-31T23:18:06.642415Z", "url": "https://files.pythonhosted.org/packages/8e/7a/d2c70e50a6735852f1f2796ba3de2df2b926a8d361fc3502f55108b3bcef/pygeoprocessing-0.3.0a5.zip", "yanked": false}], "0.3.0a6": [{"comment_text": "", "digests": {"md5": "bba35a629dd4aa226ce54d6a6daf440a", "sha256": "f0b5b6a407ab9a2c02b6ca91547ce4fd2a61f57b7b5eb85bae6cabc2efa56526"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a6-cp27-none-win32.whl", "has_sig": false, "md5_digest": "bba35a629dd4aa226ce54d6a6daf440a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 470759, "upload_time": "2015-07-31T23:34:59", "upload_time_iso_8601": "2015-07-31T23:34:59.240967Z", "url": "https://files.pythonhosted.org/packages/c1/34/5f12eab334ca4e76ab1904af7cbdf26815068742b54cfdc7eade3e6fc1db/pygeoprocessing-0.3.0a6-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5878538117388ed1031886ede0953c21", "sha256": "d7aaa1ef5e85314b039b5bf59e43aead76bff9fd993f8c9d483431c393c65d17"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a6.zip", "has_sig": false, "md5_digest": "5878538117388ed1031886ede0953c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106712, "upload_time": "2015-07-31T23:35:03", "upload_time_iso_8601": "2015-07-31T23:35:03.562185Z", "url": "https://files.pythonhosted.org/packages/a8/bb/51a390f6623f88fdd496a9d902273000e0e21c20a0b894951243e11fcdb9/pygeoprocessing-0.3.0a6.zip", "yanked": false}], "0.3.0a7": [{"comment_text": "", "digests": {"md5": "6dcbfc23bfac9b4c787edc4d9f0c4fdc", "sha256": "a5bd968875292d29bc968705cf23325c319f11f957ef3e2b85126fdc198ea6bc"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a7-cp27-none-win32.whl", "has_sig": false, "md5_digest": "6dcbfc23bfac9b4c787edc4d9f0c4fdc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 470893, "upload_time": "2015-08-08T01:33:59", "upload_time_iso_8601": "2015-08-08T01:33:59.365696Z", "url": "https://files.pythonhosted.org/packages/62/2f/e2946eea30df04b10a19fd99c5b504bd970cdfbf8b4bf5ad7d75a7f2f093/pygeoprocessing-0.3.0a7-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9163d6404a96425c3e59b30bbadbb32", "sha256": "9c66d0f148a96868b54b5410656a18ed7703836d88edaadf088fd3e862809845"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a7.zip", "has_sig": false, "md5_digest": "a9163d6404a96425c3e59b30bbadbb32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106894, "upload_time": "2015-08-08T01:34:03", "upload_time_iso_8601": "2015-08-08T01:34:03.461323Z", "url": "https://files.pythonhosted.org/packages/65/2e/9dacab1eb1dc88a66580585bba5a0753fcb02bb8c1a79f1a1ab3f7760253/pygeoprocessing-0.3.0a7.zip", "yanked": false}], "0.3.0a8": [{"comment_text": "", "digests": {"md5": "8de0d8c8272d82daeef11dc28f0ef85a", "sha256": "3887b7255016ca54f8e13b3991d8157bd2f73431569bf8e8a11c0b6ba821c724"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a8-cp27-none-win32.whl", "has_sig": false, "md5_digest": "8de0d8c8272d82daeef11dc28f0ef85a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 495350, "upload_time": "2015-09-16T14:54:55", "upload_time_iso_8601": "2015-09-16T14:54:55.321400Z", "url": "https://files.pythonhosted.org/packages/54/ba/def091a67ed9d8d91beff023b97de84e620f4761093c10155a6a75583268/pygeoprocessing-0.3.0a8-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b72f6159844e1c23a382dd9bd65a70fc", "sha256": "bdd6db3848cee4c15254d2313b65c0380661c20a7ae6ffb7856838b39110b361"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a8.zip", "has_sig": false, "md5_digest": "b72f6159844e1c23a382dd9bd65a70fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131443, "upload_time": "2015-09-16T14:55:01", "upload_time_iso_8601": "2015-09-16T14:55:01.224833Z", "url": "https://files.pythonhosted.org/packages/bb/5a/d67c68b2971c6de78e62651a392ddde57bcdec861d390250ba7316cfd553/pygeoprocessing-0.3.0a8.zip", "yanked": false}], "0.3.0a9": [{"comment_text": "", "digests": {"md5": "8519a42c65dc07a175955c5b845c4520", "sha256": "f4a583a950d68d1247f1d749781e92ca78e20e1d5b20ed46893176e6d022af25"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a9-cp27-none-win32.whl", "has_sig": false, "md5_digest": "8519a42c65dc07a175955c5b845c4520", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 893369, "upload_time": "2015-10-06T20:16:54", "upload_time_iso_8601": "2015-10-06T20:16:54.150368Z", "url": "https://files.pythonhosted.org/packages/79/f8/cf38c2edffe4d21cfe8557d7412a988772813451923d936f82ddd64e4f8a/pygeoprocessing-0.3.0a9-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "243e7d96c1bd5e1545ae02929cabe877", "sha256": "f7d14cc4a2c9a51ae6017ff4c115bb6dcafb4d1b44b47069dcde742f9caeffa7"}, "downloads": -1, "filename": "pygeoprocessing-0.3.0a9.zip", "has_sig": false, "md5_digest": "243e7d96c1bd5e1545ae02929cabe877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 527799, "upload_time": "2015-10-06T20:16:48", "upload_time_iso_8601": "2015-10-06T20:16:48.582465Z", "url": "https://files.pythonhosted.org/packages/d2/bd/3ee797b13ae97af4b0f031547532897daf317cd0e0b334cb752695ad32c8/pygeoprocessing-0.3.0a9.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "b72704f7a0bde668b74ca986ab1b2512", "sha256": "5a46ee42e4c6cdce5f6f84e206248a91068ccb1053cc1a83da793f922a989cfc"}, "downloads": -1, "filename": "pygeoprocessing-0.3.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "b72704f7a0bde668b74ca986ab1b2512", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 336600, "upload_time": "2017-01-19T17:08:24", "upload_time_iso_8601": "2017-01-19T17:08:24.443062Z", "url": "https://files.pythonhosted.org/packages/aa/b9/ad47a933b055f40f13cf1d577b89aaf8cd390447ac542049108985467d4c/pygeoprocessing-0.3.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ced82a7c1414f2a4d01c8c69e6de07aa", "sha256": "36cda671e2d560e7a8587920ddc78ab5853a780e33f8c2b99d553537e499d2da"}, "downloads": -1, "filename": "pygeoprocessing-0.3.1.zip", "has_sig": false, "md5_digest": "ced82a7c1414f2a4d01c8c69e6de07aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123030, "upload_time": "2017-01-19T17:08:27", "upload_time_iso_8601": "2017-01-19T17:08:27.561763Z", "url": "https://files.pythonhosted.org/packages/2d/43/09246c625f21d7240f39c6df06554bcc0dd32672ba5bdbae6d387db1860a/pygeoprocessing-0.3.1.zip", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "038662fa6880d154432055ed6a099d2e", "sha256": "bbe33c138ebbf942acf29c6a006a301a6fc45992edb6cc963929f26bf85164f2"}, "downloads": -1, "filename": "pygeoprocessing-0.3.2-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "038662fa6880d154432055ed6a099d2e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 745395, "upload_time": "2017-01-24T21:46:24", "upload_time_iso_8601": "2017-01-24T21:46:24.142057Z", "url": "https://files.pythonhosted.org/packages/e6/b3/d2756e64de0491e5f3f02fa0698a51f853b5b7d42dbbe9b7d80933146666/pygeoprocessing-0.3.2-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17ed9feafec5fc2ac3d6ae4825758dab", "sha256": "5ff06e879eb5cec7a7055019a890965d2a3e10288ad8a078023562adab23df70"}, "downloads": -1, "filename": "pygeoprocessing-0.3.2.tar.gz", "has_sig": false, "md5_digest": "17ed9feafec5fc2ac3d6ae4825758dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 498521, "upload_time": "2017-01-24T21:46:20", "upload_time_iso_8601": "2017-01-24T21:46:20.510675Z", "url": "https://files.pythonhosted.org/packages/c9/1f/24248594f872afc8de727f815c5dd63183ea06c5dc8c506e0d698e2452fb/pygeoprocessing-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "fabbc473119258238ef067161c4c6d1d", "sha256": "224015f1c35734026df9a60d2a3b1bb32682c62715847f4bfd752907e10ebf35"}, "downloads": -1, "filename": "pygeoprocessing-0.3.3-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "fabbc473119258238ef067161c4c6d1d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 746080, "upload_time": "2017-02-10T17:32:34", "upload_time_iso_8601": "2017-02-10T17:32:34.210734Z", "url": "https://files.pythonhosted.org/packages/16/67/5b06a5d922546e311c7a95fd907059130f1efb0c9968c25a0d2856f95e7a/pygeoprocessing-0.3.3-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f39496c2404361f6b498000f12470b2d", "sha256": "fbb219f5a4a2d6bd4ad5f56682aaa88a0225b172c066a16ec555b44bd9994c11"}, "downloads": -1, "filename": "pygeoprocessing-0.3.3.zip", "has_sig": false, "md5_digest": "f39496c2404361f6b498000f12470b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 531866, "upload_time": "2017-02-10T17:32:28", "upload_time_iso_8601": "2017-02-10T17:32:28.810928Z", "url": "https://files.pythonhosted.org/packages/e9/63/03c69ead7641ce2858416c7cab334f9be003684b09945ea1b8781f358648/pygeoprocessing-0.3.3.zip", "yanked": false}], "0.4.0": [], "0.4.0a1": [{"comment_text": "", "digests": {"md5": "703e559c36106ebede599155893cdaee", "sha256": "1961b0ccb6c88e52e520e2599687639c094a1b5e5389971d0a6d85131d1d1f22"}, "downloads": -1, "filename": "pygeoprocessing-0.4.0a1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "703e559c36106ebede599155893cdaee", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 770589, "upload_time": "2017-03-01T19:58:18", "upload_time_iso_8601": "2017-03-01T19:58:18.796995Z", "url": "https://files.pythonhosted.org/packages/22/bc/c13f9740a936388fec0f07e2161d4c01452f18fa225d3310ccfae27ed651/pygeoprocessing-0.4.0a1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "060cc4cf0378bd3ee9409e767279ec68", "sha256": "b4568fd6322abafe81e32896e3de768bfbfd91d7faef9dcaa638047675496700"}, "downloads": -1, "filename": "pygeoprocessing-0.4.0a1.tar.gz", "has_sig": false, "md5_digest": "060cc4cf0378bd3ee9409e767279ec68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 503023, "upload_time": "2017-03-01T19:58:15", "upload_time_iso_8601": "2017-03-01T19:58:15.584789Z", "url": "https://files.pythonhosted.org/packages/74/06/72fd9a9926855bf7c3ffe09a308f24c48e7bb9bd2a5edd803f67d3a5518b/pygeoprocessing-0.4.0a1.tar.gz", "yanked": false}], "0.4.0a2": [{"comment_text": "", "digests": {"md5": "a9e0b1268ed7348f30d008bc778f63c1", "sha256": "f3740c57e3748754d0ba90c7c95cfe1b459ded887512fd0d81ee90e3c45ad647"}, "downloads": -1, "filename": "pygeoprocessing-0.4.0a2-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "a9e0b1268ed7348f30d008bc778f63c1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 831519, "upload_time": "2017-04-06T18:46:13", "upload_time_iso_8601": "2017-04-06T18:46:13.856813Z", "url": "https://files.pythonhosted.org/packages/0f/a2/b4f9d842f5a9a00147f9e86e96d12329e749a8de3c22d6981fe448daea24/pygeoprocessing-0.4.0a2-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d0abf57dfb481eec5a89220e57e8045", "sha256": "16b4b55c9db857b40ddb9b453d9cd7ef50d38fa3f1c073d06af88959cc69e6d6"}, "downloads": -1, "filename": "pygeoprocessing-0.4.0a2.tar.gz", "has_sig": false, "md5_digest": "1d0abf57dfb481eec5a89220e57e8045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 527662, "upload_time": "2017-04-06T18:46:10", "upload_time_iso_8601": "2017-04-06T18:46:10.234675Z", "url": "https://files.pythonhosted.org/packages/a4/71/bb5ccc34a07749a86a37d02c1f0bb018ec5e22dbe955fae590dd0334fd97/pygeoprocessing-0.4.0a2.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "409e2c302c432748e59f3d02260e176b", "sha256": "877c8becdabe5c18e6a9c11c87fb6489bae91d4db8d48857b3ce25ffeb1b4af8"}, "downloads": -1, "filename": "pygeoprocessing-0.4.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "409e2c302c432748e59f3d02260e176b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 795239, "upload_time": "2017-06-20T01:08:20", "upload_time_iso_8601": "2017-06-20T01:08:20.342317Z", "url": "https://files.pythonhosted.org/packages/a0/ea/cd7cd32f5ec061d39940491e262a2879b58c06acfb4af04897340ab3bdde/pygeoprocessing-0.4.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "298b49f88e34e60ed8c664a8a158d6f7", "sha256": "48b532a90d62ed9364ba66d2e29ab467c055650515fc6d244132736a480763a5"}, "downloads": -1, "filename": "pygeoprocessing-0.4.1.tar.gz", "has_sig": false, "md5_digest": "298b49f88e34e60ed8c664a8a158d6f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 510777, "upload_time": "2017-06-20T01:08:23", "upload_time_iso_8601": "2017-06-20T01:08:23.714348Z", "url": "https://files.pythonhosted.org/packages/8e/40/19154f5b27e14d1f4f0a11234cd73ebb2753d73d27dc72b184dbfb3de38d/pygeoprocessing-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "2c940076478b941958ce98f24e34bf3c", "sha256": "466879c8dff09f3e92b468a8ecd293aed6dfcde202021dba6ca1559913d44757"}, "downloads": -1, "filename": "pygeoprocessing-0.4.2-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "2c940076478b941958ce98f24e34bf3c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 794953, "upload_time": "2017-06-21T01:55:24", "upload_time_iso_8601": "2017-06-21T01:55:24.486445Z", "url": "https://files.pythonhosted.org/packages/08/7b/8994bd6c5917b89eb4fd7a3677ea485bd45eea5464d9cbb9958966337456/pygeoprocessing-0.4.2-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8b1833a91d55f65ed05ea806aa92c56", "sha256": "aad3d60e6caac10b0767eb359d0e51b4a53b5d36a2f8790afa27adda4600625b"}, "downloads": -1, "filename": "pygeoprocessing-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d8b1833a91d55f65ed05ea806aa92c56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 510851, "upload_time": "2017-06-21T01:55:27", "upload_time_iso_8601": "2017-06-21T01:55:27.875611Z", "url": "https://files.pythonhosted.org/packages/2e/a5/9da7ea2969b0594332dffde3f171533a8916af4216a713d6c3d3ee6aa766/pygeoprocessing-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "81ea51ac0d2cb0b81c705c0b881803f3", "sha256": "5a0f9b00b901f4a9a9e060b036b1744451a5c5116283b749d206d90daffcca3a"}, "downloads": -1, "filename": "pygeoprocessing-0.4.3-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "81ea51ac0d2cb0b81c705c0b881803f3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 794759, "upload_time": "2017-08-16T20:01:54", "upload_time_iso_8601": "2017-08-16T20:01:54.357069Z", "url": "https://files.pythonhosted.org/packages/e7/cf/0fff7831c69aa209eee330b1571194d38697dd2ee331efc3ba5988337d48/pygeoprocessing-0.4.3-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acf5601180cd221864e54f597190d208", "sha256": "cf500182a8dd2a0188cec04087f347749794167f184942c9a0bee5b4c17328c0"}, "downloads": -1, "filename": "pygeoprocessing-0.4.3.tar.gz", "has_sig": false, "md5_digest": "acf5601180cd221864e54f597190d208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 510706, "upload_time": "2017-08-16T20:01:51", "upload_time_iso_8601": "2017-08-16T20:01:51.996590Z", "url": "https://files.pythonhosted.org/packages/76/26/e19a5abc5a7c94ced4aac45f8fe7a7999723f53da19c2329c02b8debb57b/pygeoprocessing-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "7df67c45cc3d9c2cb3b8b963ad4b3148", "sha256": "b1ff04ec7f5712fa65d3b6d6ccdeb5eed0af882b5b68653b1cebbfde9587f961"}, "downloads": -1, "filename": "pygeoprocessing-0.4.4-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "7df67c45cc3d9c2cb3b8b963ad4b3148", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 794637, "upload_time": "2017-08-18T23:19:30", "upload_time_iso_8601": "2017-08-18T23:19:30.907396Z", "url": "https://files.pythonhosted.org/packages/36/88/0ff0e0be237e69e15cc66872bfa503c15786ebaba06389dbfebd04ed99a3/pygeoprocessing-0.4.4-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a828bd8e0c2dc37f02e7323ee5a1667", "sha256": "cbcbbe444f710224e028107632fc4725a57fc1b55841774b398eefbca6335738"}, "downloads": -1, "filename": "pygeoprocessing-0.4.4.tar.gz", "has_sig": false, "md5_digest": "3a828bd8e0c2dc37f02e7323ee5a1667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 510791, "upload_time": "2017-08-18T23:19:34", "upload_time_iso_8601": "2017-08-18T23:19:34.274270Z", "url": "https://files.pythonhosted.org/packages/9e/46/fe537c93c685b11a85ab10c020dfa19447a5416d4295fa0115ea3bda0785/pygeoprocessing-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "2227e8c6d2f945d7d4b6557d6b9f90d4", "sha256": "deb32bf07b725f7121c4bea56bca7794553a6b3829ad14d5cc56212e2e867dda"}, "downloads": -1, "filename": "pygeoprocessing-0.5.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "2227e8c6d2f945d7d4b6557d6b9f90d4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 795505, "upload_time": "2017-09-14T21:50:34", "upload_time_iso_8601": "2017-09-14T21:50:34.412845Z", "url": "https://files.pythonhosted.org/packages/c3/38/806d6fabe30906dfdc1ac68a8cd2bb1a5cba963f981d80e5d954658ac8a6/pygeoprocessing-0.5.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3daf7489c7c3c9ec230864b604ee921", "sha256": "b2f693f9d2d482254cfc5344d5d2ea87d45ffd4cf81b8a325f4b782763b455c6"}, "downloads": -1, "filename": "pygeoprocessing-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c3daf7489c7c3c9ec230864b604ee921", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 511930, "upload_time": "2017-09-14T21:50:29", "upload_time_iso_8601": "2017-09-14T21:50:29.822306Z", "url": "https://files.pythonhosted.org/packages/27/c1/8bc4791be7c57dc913774e4a4344c45f24b50346550f80be63dc7f19b952/pygeoprocessing-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "3a82b1b42da5f55acfca1b31731cdce0", "sha256": "a3f4d888086fdd70064b5bfec488655a6eed8d28b940317d2df03f5b4f20b2f1"}, "downloads": -1, "filename": "pygeoprocessing-0.6.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "3a82b1b42da5f55acfca1b31731cdce0", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 348874, "upload_time": "2018-01-11T15:03:39", "upload_time_iso_8601": "2018-01-11T15:03:39.453566Z", "url": "https://files.pythonhosted.org/packages/87/4f/7c378d74877f1ab7c8ee0c5264aa317c02624b2cdfd49f02280ad7db8247/pygeoprocessing-0.6.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7a02c18bae60c8c43d779db36897624", "sha256": "c9be8bdf3d3fa4226a7ef694406486572585005a7c8b27cf480a991692fa0383"}, "downloads": -1, "filename": "pygeoprocessing-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f7a02c18bae60c8c43d779db36897624", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79376, "upload_time": "2018-01-11T15:03:36", "upload_time_iso_8601": "2018-01-11T15:03:36.958451Z", "url": "https://files.pythonhosted.org/packages/ba/ca/c046e0a3232e4f77e5e4e6191974bcc190b50eeaa7ae4e156b0524bfb2de/pygeoprocessing-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "8eaf93d1c34c6a8bac4658d0b2e537f9", "sha256": "cc79568e5b01f70b3a144ec7f1cd4b13c8a04e5bc58899e42b8f55152e46597e"}, "downloads": -1, "filename": "pygeoprocessing-0.7.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "8eaf93d1c34c6a8bac4658d0b2e537f9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 163857, "upload_time": "2018-04-19T17:59:08", "upload_time_iso_8601": "2018-04-19T17:59:08.374448Z", "url": "https://files.pythonhosted.org/packages/8e/3a/b625aa89e03aee78d102d6823ebb6682b21a19b8b4f6653c75388c7dc405/pygeoprocessing-0.7.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4029afef34514975fc3d07fd852d026", "sha256": "41a7092b96562a2f2bd59b958ce9c56c265766a0350d0b65491dbdc31a654f8b"}, "downloads": -1, "filename": "pygeoprocessing-0.7.0.tar.gz", "has_sig": false, "md5_digest": "b4029afef34514975fc3d07fd852d026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 360442, "upload_time": "2018-04-19T17:58:54", "upload_time_iso_8601": "2018-04-19T17:58:54.501862Z", "url": "https://files.pythonhosted.org/packages/06/74/5c470dcb743600bdb96467eaa2f1bfc8e8cb63b926ea28250da4f00bf2ab/pygeoprocessing-0.7.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "56feaf400529a968868268dfdcad3dd3", "sha256": "e12e7a1cae93be010f15b2eb79b7bc4a79cf07196fc1c93a81d7d3edc5d0bd01"}, "downloads": -1, "filename": "pygeoprocessing-1.0.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "56feaf400529a968868268dfdcad3dd3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 227489, "upload_time": "2018-04-29T22:58:34", "upload_time_iso_8601": "2018-04-29T22:58:34.208386Z", "url": "https://files.pythonhosted.org/packages/b4/80/0a65eeccf00e7ffa371f00d1bf1d24105bb4af585112b3b675744bd576cf/pygeoprocessing-1.0.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00cca2bd21f1bfa112fe3cdfe006b838", "sha256": "6a178ae848c3dad1644fa2332d935fb9d8c1252ca672f7b4a40edf5c60118592"}, "downloads": -1, "filename": "pygeoprocessing-1.0.0.tar.gz", "has_sig": false, "md5_digest": "00cca2bd21f1bfa112fe3cdfe006b838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 463802, "upload_time": "2018-04-29T22:58:31", "upload_time_iso_8601": "2018-04-29T22:58:31.695956Z", "url": "https://files.pythonhosted.org/packages/c4/33/60ce47b4183029673909819ca685602e2f4de7f3261a257753fdf91b0588/pygeoprocessing-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d4281cac5e24b2c6de0e91128a0d8ecd", "sha256": "d4ad9a667df5f1c1768baef3885e6dc4b2b97e43a8af5c2b35b87f543f547544"}, "downloads": -1, "filename": "pygeoprocessing-1.0.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "d4281cac5e24b2c6de0e91128a0d8ecd", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 250460, "upload_time": "2018-06-10T20:14:33", "upload_time_iso_8601": "2018-06-10T20:14:33.687651Z", "url": "https://files.pythonhosted.org/packages/da/10/62db11f9d0c433054cbd1c2bcb54993fc83fd5f53e65c448783bc75c0170/pygeoprocessing-1.0.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a57ad9f2239ed91858fe20135fb676bd", "sha256": "98778b591f64a0d95be2113965bfbe39ce604bcf1a47eb3ce6925bf736be6612"}, "downloads": -1, "filename": "pygeoprocessing-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a57ad9f2239ed91858fe20135fb676bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 463823, "upload_time": "2018-06-10T20:14:31", "upload_time_iso_8601": "2018-06-10T20:14:31.775329Z", "url": "https://files.pythonhosted.org/packages/7d/d4/4cb5dbe7ce63b61043de1c7a5587ee82c467489ffa4fa4949fffa7148b1f/pygeoprocessing-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ce0719054bac0ec9c90d15594a7a4ec0", "sha256": "4c769b18d16c23db102aa2e203e671e8e6219b9b51113828cb7a2f826d6bf7f8"}, "downloads": -1, "filename": "pygeoprocessing-1.1.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "ce0719054bac0ec9c90d15594a7a4ec0", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 231147, "upload_time": "2018-07-06T23:46:34", "upload_time_iso_8601": "2018-07-06T23:46:34.280593Z", "url": "https://files.pythonhosted.org/packages/46/0e/ae00661e1793332b694ea9c8aaedd5e8329f7371603ead304a9d3d45a360/pygeoprocessing-1.1.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c96639d3ce1a34843862b20914741c7", "sha256": "8df86f8a10c7be3d7a33fe8cc784f4f49f1d66a79bc809009b421105ded33c66"}, "downloads": -1, "filename": "pygeoprocessing-1.1.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "0c96639d3ce1a34843862b20914741c7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 278346, "upload_time": "2018-07-06T23:47:28", "upload_time_iso_8601": "2018-07-06T23:47:28.740600Z", "url": "https://files.pythonhosted.org/packages/16/ad/de36a54750cdfd57a9c5d7d99e9873c64cae7c9814756885119d91d6ff7d/pygeoprocessing-1.1.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33364a49882f411f1d590bdf8af40855", "sha256": "f4ac39f45dc1a85a3bca63e205f95333d73f22d61d6e9bc8d28a85256ed8c445"}, "downloads": -1, "filename": "pygeoprocessing-1.1.0.tar.gz", "has_sig": false, "md5_digest": "33364a49882f411f1d590bdf8af40855", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473128, "upload_time": "2018-07-06T23:48:04", "upload_time_iso_8601": "2018-07-06T23:48:04.581476Z", "url": "https://files.pythonhosted.org/packages/46/74/93019630587db93bc57e41ed94a02b05dda423e0094223c8b4ff109eac8d/pygeoprocessing-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "423282d9b8dd98a1b0f14ef8f0d9c696", "sha256": "31f3195b1279800ee2fe50b531da793e3ec1078273752e3db84a1bb73738d1e2"}, "downloads": -1, "filename": "pygeoprocessing-1.2.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "423282d9b8dd98a1b0f14ef8f0d9c696", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 263749, "upload_time": "2018-07-19T23:27:41", "upload_time_iso_8601": "2018-07-19T23:27:41.051635Z", "url": "https://files.pythonhosted.org/packages/35/64/79f70019a4ead09a82902cd516cfa66cc5e64cac36e8d885c9edfe72bae0/pygeoprocessing-1.2.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30375a4c4fbb2d97d06e192b9bfa6133", "sha256": "5c85858d19e532190e21bd0516751f0af93f78bd6a1beb6c163e9fa9c395a85d"}, "downloads": -1, "filename": "pygeoprocessing-1.2.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "30375a4c4fbb2d97d06e192b9bfa6133", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 288479, "upload_time": "2018-07-19T23:27:42", "upload_time_iso_8601": "2018-07-19T23:27:42.521739Z", "url": "https://files.pythonhosted.org/packages/73/cf/55ce34a1e22d010235a2b2aa1f274a163d7bea53ad61ad7cc2d2ab8ac05b/pygeoprocessing-1.2.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8eab491753806136d7d14f334cfcbc1", "sha256": "b7cc6ee0eb371b6bf3fe9a1b763e2473fa78c8f0fe61f5e66d24d892a1687504"}, "downloads": -1, "filename": "pygeoprocessing-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a8eab491753806136d7d14f334cfcbc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 485498, "upload_time": "2018-07-19T23:27:44", "upload_time_iso_8601": "2018-07-19T23:27:44.017336Z", "url": "https://files.pythonhosted.org/packages/36/8a/cbf75adc6e1727880734860b6f048eac27133ba50f28510d507b6586e189/pygeoprocessing-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "bad9ca351697e2a244563d25e7aa6c96", "sha256": "80293b44745c724d7aa89b41ebe9de74988b4f1a5c1d42c40bc4f1ea681d151b"}, "downloads": -1, "filename": "pygeoprocessing-1.2.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "bad9ca351697e2a244563d25e7aa6c96", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 263921, "upload_time": "2018-07-23T17:01:32", "upload_time_iso_8601": "2018-07-23T17:01:32.573829Z", "url": "https://files.pythonhosted.org/packages/63/f9/1500d402e69db4ff2dfb6b9059205f08dbc22c461192bf502af3a29d4959/pygeoprocessing-1.2.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e78b42beafc21fb3c4726feebd31be7e", "sha256": "f5ae5b4e6148594379c20daaa859f1d4690fb3a9affbd97e2a7cb5ef2796820e"}, "downloads": -1, "filename": "pygeoprocessing-1.2.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "e78b42beafc21fb3c4726feebd31be7e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 288756, "upload_time": "2018-07-23T17:01:34", "upload_time_iso_8601": "2018-07-23T17:01:34.035393Z", "url": "https://files.pythonhosted.org/packages/2e/27/e75553a5bc271c0bdecf366125111311b5fc22c0d1944603a494fc0542d2/pygeoprocessing-1.2.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc474fdc9aa89b357840e9000211522d", "sha256": "2bce0869171f8aec6ec279c9e7373fdb419e09d7196fc5490adbed1df85432e6"}, "downloads": -1, "filename": "pygeoprocessing-1.2.1.tar.gz", "has_sig": false, "md5_digest": "bc474fdc9aa89b357840e9000211522d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 485930, "upload_time": "2018-07-23T17:01:35", "upload_time_iso_8601": "2018-07-23T17:01:35.235462Z", "url": "https://files.pythonhosted.org/packages/98/64/797e30289085a3fc5fd2f7fcd8c5b3c2a87ae05662e3965a6af7a6f2a48d/pygeoprocessing-1.2.1.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "6b61aea9bd82e4a28eac505ed1cff6f6", "sha256": "b58be40b088284466fc9959760b213599b96ea635c7613a099db96deaf543734"}, "downloads": -1, "filename": "pygeoprocessing-1.2.3-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "6b61aea9bd82e4a28eac505ed1cff6f6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 264273, "upload_time": "2018-08-02T18:26:40", "upload_time_iso_8601": "2018-08-02T18:26:40.636671Z", "url": "https://files.pythonhosted.org/packages/6c/f4/38fa216cc6a643aa1258c74f139db6fd13712a1c49ddfb0514b7d6c369b3/pygeoprocessing-1.2.3-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fed7dbf0f654fe071eb4014f0c5f3645", "sha256": "8711a569f7ec3a9552b817ee6ef879363af49d79e7f09ad73d289aebea16a9a1"}, "downloads": -1, "filename": "pygeoprocessing-1.2.3-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "fed7dbf0f654fe071eb4014f0c5f3645", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 289057, "upload_time": "2018-08-02T18:26:42", "upload_time_iso_8601": "2018-08-02T18:26:42.276586Z", "url": "https://files.pythonhosted.org/packages/8f/3a/4ef28aef5ecbd1c899ca6207e4759af4bba1f5ae9096502fb5d56c9f39ae/pygeoprocessing-1.2.3-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3a8952dd11468044cac24c57d8affd6", "sha256": "9c8906e5819e1e1a08df3412bff7a9c41a861d46f4dbb79e4dba29c82493d6e4"}, "downloads": -1, "filename": "pygeoprocessing-1.2.3-py2.7-win32.egg", "has_sig": false, "md5_digest": "d3a8952dd11468044cac24c57d8affd6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 317083, "upload_time": "2018-08-02T18:26:43", "upload_time_iso_8601": "2018-08-02T18:26:43.951013Z", "url": "https://files.pythonhosted.org/packages/1d/28/b251ab293f7a881c76ac71015ac1d3b9e8ed9477c11c560faa2bbdb953bb/pygeoprocessing-1.2.3-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23c6bfd825f102157800eb577f18278", "sha256": "7fc98812e42e638d68bee6d812e9c9b7d89718b26ba610f04eece9506993c320"}, "downloads": -1, "filename": "pygeoprocessing-1.2.3.tar.gz", "has_sig": false, "md5_digest": "e23c6bfd825f102157800eb577f18278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 486992, "upload_time": "2018-08-02T18:26:45", "upload_time_iso_8601": "2018-08-02T18:26:45.457301Z", "url": "https://files.pythonhosted.org/packages/7b/ae/c0ecce5b055575f7e3dd3e4c49ca9745be63182746ca90e2704d6b86f5df/pygeoprocessing-1.2.3.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "27ce9ad24c7f7c8dae8d7f7e7cc06ebe", "sha256": "d350019e3df60a43ea0f95e8af4a0bb4d2fe3ccdb71b75f87b2dedf69df823a2"}, "downloads": -1, "filename": "pygeoprocessing-1.3.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "27ce9ad24c7f7c8dae8d7f7e7cc06ebe", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 268402, "upload_time": "2018-10-25T22:31:37", "upload_time_iso_8601": "2018-10-25T22:31:37.675571Z", "url": "https://files.pythonhosted.org/packages/dc/a4/0b4b73d0965e2de7a33c16a3ac9a65df83e01a8db4b03aa2c5a86d7abf13/pygeoprocessing-1.3.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5a49d6deec51970564cddf48af7493e", "sha256": "1b1ff41b201170d1c5b5de9f61ccc3853fffa5c6c9c893f2a57975ee582984df"}, "downloads": -1, "filename": "pygeoprocessing-1.3.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "b5a49d6deec51970564cddf48af7493e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 291432, "upload_time": "2018-10-25T22:31:39", "upload_time_iso_8601": "2018-10-25T22:31:39.554597Z", "url": "https://files.pythonhosted.org/packages/e4/da/3b1e12a3dd3a0ea273dd3576652764cac733d2eaf45baf6df7dd43012e52/pygeoprocessing-1.3.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7201005966789ca40cf4126de3a5b3a5", "sha256": "488e0cf091ab87e89669d82033a3aee870474fada0e328c6712ea925cd7f9125"}, "downloads": -1, "filename": "pygeoprocessing-1.3.0.tar.gz", "has_sig": false, "md5_digest": "7201005966789ca40cf4126de3a5b3a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 475734, "upload_time": "2018-10-25T22:31:41", "upload_time_iso_8601": "2018-10-25T22:31:41.075804Z", "url": "https://files.pythonhosted.org/packages/70/aa/0df805075741b2e7a45d3a71d585b1d54e5fddf0365838c536354170a41a/pygeoprocessing-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "9eacd2c8b2e9d07a2ae3b15b5c9b06f2", "sha256": "4d6e5fec9ad22dcb8eaae44bf33a9d8f8c816173b47b8034629738f017d60595"}, "downloads": -1, "filename": "pygeoprocessing-1.3.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "9eacd2c8b2e9d07a2ae3b15b5c9b06f2", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 268699, "upload_time": "2018-10-26T01:32:58", "upload_time_iso_8601": "2018-10-26T01:32:58.590898Z", "url": "https://files.pythonhosted.org/packages/bb/e3/26ed30e8c0d0d58e8da3ad5a8902ad882200af97513eff6093076c4bad29/pygeoprocessing-1.3.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f094096abe305c28cba0b2b4dfacb87a", "sha256": "bab4062426635ee4a3e26066d4eef4eab24cee5758f69de7fdfd192e81c80f7c"}, "downloads": -1, "filename": "pygeoprocessing-1.3.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "f094096abe305c28cba0b2b4dfacb87a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 293234, "upload_time": "2018-10-26T01:33:00", "upload_time_iso_8601": "2018-10-26T01:33:00.225213Z", "url": "https://files.pythonhosted.org/packages/21/7c/b87eb487adfe7704ac6f845517efd53cb344cac79f4f66d990d5f5b694eb/pygeoprocessing-1.3.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29b3d2de207ac38635e5010474676fdc", "sha256": "d27ab3db27d6805aea21ca6bee949ea34dba50acc5e7522e5e76f01fe8f8e894"}, "downloads": -1, "filename": "pygeoprocessing-1.3.1.tar.gz", "has_sig": false, "md5_digest": "29b3d2de207ac38635e5010474676fdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 480292, "upload_time": "2018-10-26T01:33:01", "upload_time_iso_8601": "2018-10-26T01:33:01.738605Z", "url": "https://files.pythonhosted.org/packages/3e/82/e8afc6d5d0e1cd517b9b97eb53c22a50ef2368fd842ab12884a10d17b4d9/pygeoprocessing-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "9f5bf2fb0d46497e5637d0e78ccc0eec", "sha256": "325004c66008880f3e59a32740bb6d0ca220c54ef119237aa37dcef0d67315ad"}, "downloads": -1, "filename": "pygeoprocessing-1.4.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "9f5bf2fb0d46497e5637d0e78ccc0eec", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 280696, "upload_time": "2018-11-12T18:34:14", "upload_time_iso_8601": "2018-11-12T18:34:14.087555Z", "url": "https://files.pythonhosted.org/packages/89/fe/e04b6453901513d01d24738fb07c5541c63802e7d729d63b8851d459d6b5/pygeoprocessing-1.4.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d17d76ce057963c0ca2efe40400f556f", "sha256": "c54d688e7ce9a30c4632115d0c164b63b653bb3968379450fdab77f631c28a62"}, "downloads": -1, "filename": "pygeoprocessing-1.4.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "d17d76ce057963c0ca2efe40400f556f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 307747, "upload_time": "2018-11-12T18:34:17", "upload_time_iso_8601": "2018-11-12T18:34:17.161280Z", "url": "https://files.pythonhosted.org/packages/47/e5/9930b91e54365439ad48fefb195ea6af1e44673db25b55283c2af82b8f92/pygeoprocessing-1.4.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1a63f96c1ff8ed7bf1636ba6510e1c0", "sha256": "b62147cd46f30c096fee914776d74bcf000a7b59e91b9e611b8234021c59da9d"}, "downloads": -1, "filename": "pygeoprocessing-1.4.0-py2.7-win32.egg", "has_sig": false, "md5_digest": "b1a63f96c1ff8ed7bf1636ba6510e1c0", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 339853, "upload_time": "2018-11-12T18:34:19", "upload_time_iso_8601": "2018-11-12T18:34:19.162082Z", "url": "https://files.pythonhosted.org/packages/eb/05/27f2f91e8330743ec8ce7782d9fb7d13827a2c15964453722dea33a68a23/pygeoprocessing-1.4.0-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "94954918682c05126ef67ba048277937", "sha256": "b5975b1f8b40027789d367b4b81370a69c77c66d77f3dad08ffb2dec8d8d378a"}, "downloads": -1, "filename": "pygeoprocessing-1.4.0.tar.gz", "has_sig": false, "md5_digest": "94954918682c05126ef67ba048277937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 504752, "upload_time": "2018-11-12T18:34:21", "upload_time_iso_8601": "2018-11-12T18:34:21.437660Z", "url": "https://files.pythonhosted.org/packages/2a/46/428cdae5fba116e3b3321974005d2100c6fb2651e87303889f86f7eb9145/pygeoprocessing-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "4688df1ae601d7008bcb9325ce4642a2", "sha256": "8b52bffd333fe5b1305edb99bcb2b7645d376c48c458ecc9391d26e7fe688b82"}, "downloads": -1, "filename": "pygeoprocessing-1.4.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "4688df1ae601d7008bcb9325ce4642a2", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 292291, "upload_time": "2018-11-14T21:40:55", "upload_time_iso_8601": "2018-11-14T21:40:55.323288Z", "url": "https://files.pythonhosted.org/packages/2c/91/568f99b5b4d7117670c04d4212e7f6c294286bc15615fb82dfea601ebc9d/pygeoprocessing-1.4.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cbf6cc3144eae15cd92a1e8b36b6619", "sha256": "2cbc5096eadec9675b809d8b5b0ed664c1038a6cb647ef0cceb4aa1b8dcb4cb2"}, "downloads": -1, "filename": "pygeoprocessing-1.4.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "5cbf6cc3144eae15cd92a1e8b36b6619", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 307514, "upload_time": "2018-11-14T21:40:57", "upload_time_iso_8601": "2018-11-14T21:40:57.296426Z", "url": "https://files.pythonhosted.org/packages/22/5c/e4a3b8f1df5a0b14937ee759a8e87deeea9d537e2144a4d40146168328b5/pygeoprocessing-1.4.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3528f4311b89591fa6a1577eb8ed589c", "sha256": "84949264cc5e746d92e1dec57cf6bf66767637b0920518710e349d8d83d4981a"}, "downloads": -1, "filename": "pygeoprocessing-1.4.1.tar.gz", "has_sig": false, "md5_digest": "3528f4311b89591fa6a1577eb8ed589c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 504640, "upload_time": "2018-11-14T21:40:58", "upload_time_iso_8601": "2018-11-14T21:40:58.949362Z", "url": "https://files.pythonhosted.org/packages/d2/1a/587310bf94866fd50d237f58853797820442413fe379b52c41ae0f9e50f9/pygeoprocessing-1.4.1.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "c67deb9422d7e4996424cd2443e939f7", "sha256": "b9600664d7da7ba5dd7f27f0d8edc0c2d1575a49f3e4ea60a23953c62035e4b3"}, "downloads": -1, "filename": "pygeoprocessing-1.5.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "c67deb9422d7e4996424cd2443e939f7", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 287234, "upload_time": "2018-12-13T04:41:13", "upload_time_iso_8601": "2018-12-13T04:41:13.967696Z", "url": "https://files.pythonhosted.org/packages/8b/1f/9ea97288ea9203f03aa4672fdb25a0ed8688d4f24db38e4dc54b506e00ab/pygeoprocessing-1.5.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f1a098ef745f205c2f29d5da233b861", "sha256": "813f9b5fec41e18e55969856056f2d91485c9c7bfaf259804d92e271bd39e099"}, "downloads": -1, "filename": "pygeoprocessing-1.5.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "4f1a098ef745f205c2f29d5da233b861", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 314372, "upload_time": "2018-12-13T04:41:16", "upload_time_iso_8601": "2018-12-13T04:41:16.569585Z", "url": "https://files.pythonhosted.org/packages/9c/aa/7bab1e3e4c60439af5af5a4cd783d863b7b3df508deaed0f6f21508dab5a/pygeoprocessing-1.5.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f10cb7875cdf38085ae5529b0abe75b", "sha256": "db8f76d73e54433890a3c1d85db72920789719ec565b0269576e6649eb303c2b"}, "downloads": -1, "filename": "pygeoprocessing-1.5.0-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "0f10cb7875cdf38085ae5529b0abe75b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 375215, "upload_time": "2018-12-13T04:41:18", "upload_time_iso_8601": "2018-12-13T04:41:18.612311Z", "url": "https://files.pythonhosted.org/packages/f6/db/851f3062a11769b61feb29bb2a7627cf0384130681a80661f0427af58132/pygeoprocessing-1.5.0-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "54a6f2da19536573817f38f2aae01458", "sha256": "b4137fddff27fbe4d3f9d39237fccee96b2861d7c95983f70feb4f0ac475662d"}, "downloads": -1, "filename": "pygeoprocessing-1.5.0.tar.gz", "has_sig": false, "md5_digest": "54a6f2da19536573817f38f2aae01458", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 516234, "upload_time": "2018-12-13T04:41:21", "upload_time_iso_8601": "2018-12-13T04:41:21.469822Z", "url": "https://files.pythonhosted.org/packages/ad/f0/d8297bda8f22427e3104bd8dea7e879e5468cb9b7df6e42b2bb453f6165f/pygeoprocessing-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "c0664211c2700dd49c3526a0f0389448", "sha256": "6aa4d2c11cab88f6d60baa2ae138d80b019100ec1b3c25b9af3ebb0cc40a513c"}, "downloads": -1, "filename": "pygeoprocessing-1.6.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "c0664211c2700dd49c3526a0f0389448", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 280768, "upload_time": "2019-01-25T18:56:00", "upload_time_iso_8601": "2019-01-25T18:56:00.531102Z", "url": "https://files.pythonhosted.org/packages/67/b0/d36a6a16c15701499511232eb2318490620df35e1279ac1dee3a6b8a6854/pygeoprocessing-1.6.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d882460342d365ee9f62ce31971c3c0d", "sha256": "74a0104005d27e1d8df9391d02bcf3e33deb023761b703ff5895f9710da5cc20"}, "downloads": -1, "filename": "pygeoprocessing-1.6.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "d882460342d365ee9f62ce31971c3c0d", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 311966, "upload_time": "2019-01-25T18:56:02", "upload_time_iso_8601": "2019-01-25T18:56:02.822786Z", "url": "https://files.pythonhosted.org/packages/68/f2/fa19d8d8b7df1de51724eb6e8ee334a23b1fc4deb689087c0b1b4ae93d5a/pygeoprocessing-1.6.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c313bc20c88f5cdd63851387d960f610", "sha256": "40f9154ee4e6bbe21379f79ff9c5fd64b6f56a727b96d7fc62bd6874406157bf"}, "downloads": -1, "filename": "pygeoprocessing-1.6.0.tar.gz", "has_sig": false, "md5_digest": "c313bc20c88f5cdd63851387d960f610", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 514686, "upload_time": "2019-01-25T18:56:04", "upload_time_iso_8601": "2019-01-25T18:56:04.482606Z", "url": "https://files.pythonhosted.org/packages/be/19/bca7fc4a20e3cbda70e0166bbf7dafc623233e321e39af9551bbe273f841/pygeoprocessing-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "14ade1dba7a3f60fc8c5edcddf3236da", "sha256": "272a7a5e265ab05f227ca8d2a671f0e4ad1b1427dab158473bbeedc44bdaa004"}, "downloads": -1, "filename": "pygeoprocessing-1.6.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "14ade1dba7a3f60fc8c5edcddf3236da", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 281249, "upload_time": "2019-02-13T23:36:35", "upload_time_iso_8601": "2019-02-13T23:36:35.463879Z", "url": "https://files.pythonhosted.org/packages/9b/52/0ce5537883ebe3bb366dd03a611f815875ad95595b24bd64685af92c618c/pygeoprocessing-1.6.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36ad0e9795949c9d53a5336349cfd810", "sha256": "38f16ca868da97b85e0719f1cd90cb4c2136e35c4bce8522d68b895a2f715151"}, "downloads": -1, "filename": "pygeoprocessing-1.6.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "36ad0e9795949c9d53a5336349cfd810", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 312363, "upload_time": "2019-02-13T23:36:37", "upload_time_iso_8601": "2019-02-13T23:36:37.400770Z", "url": "https://files.pythonhosted.org/packages/24/c4/0d2798eaa045f533a7c29d7a3d3425d47ac80123414cecffa3e2802e8ba2/pygeoprocessing-1.6.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27e8e07163e2c2eed2dcb4170a99982a", "sha256": "0de34a96bdb9af20898bc482ac577f172ced968a350944a31f95a481458de4ec"}, "downloads": -1, "filename": "pygeoprocessing-1.6.1.tar.gz", "has_sig": false, "md5_digest": "27e8e07163e2c2eed2dcb4170a99982a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 515622, "upload_time": "2019-02-13T23:36:39", "upload_time_iso_8601": "2019-02-13T23:36:39.299424Z", "url": "https://files.pythonhosted.org/packages/b8/8f/0bad119eb699b94ebd3b064264a6752d049f62ea7e3f0e94ac1e62a8e63e/pygeoprocessing-1.6.1.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "79fc401295ea94621286cd07e3058160", "sha256": "fddd18358d616201cccd922acfe36fa7eda228b47c89138cf6e53368a45978f0"}, "downloads": -1, "filename": "pygeoprocessing-1.7.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "79fc401295ea94621286cd07e3058160", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 422050, "upload_time": "2019-06-27T15:44:00", "upload_time_iso_8601": "2019-06-27T15:44:00.697921Z", "url": "https://files.pythonhosted.org/packages/0d/cd/4d4333d06f2d70cbad2ba046059fcd6571e91fb9aca4aa3619b34ec3f71d/pygeoprocessing-1.7.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b3efee506ab4faf721fe5e66e0f8822", "sha256": "8f5eff594cf46bce2a61ee0d10a08d1d136ff97000e42c1501f65d4c8ae5bd0b"}, "downloads": -1, "filename": "pygeoprocessing-1.7.0.tar.gz", "has_sig": false, "md5_digest": "8b3efee506ab4faf721fe5e66e0f8822", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 386768, "upload_time": "2019-06-27T15:44:03", "upload_time_iso_8601": "2019-06-27T15:44:03.158084Z", "url": "https://files.pythonhosted.org/packages/ea/cc/42af95fdf82ed59435d7ee8d3701400e45b8424f49c381daef2b59106895/pygeoprocessing-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "4c3052c0d40db452a8a69ef8e779a17b", "sha256": "c51e7a314a0d1937f3eb485cffad70a6ec83a045ae3d598325c662de184ce67f"}, "downloads": -1, "filename": "pygeoprocessing-1.8.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "4c3052c0d40db452a8a69ef8e779a17b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 429579, "upload_time": "2019-08-12T18:39:57", "upload_time_iso_8601": "2019-08-12T18:39:57.349267Z", "url": "https://files.pythonhosted.org/packages/25/c4/d198f4cc840dacf43df224abafe6887ccbf96df2ecb22d3349ccf79ad7de/pygeoprocessing-1.8.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00a4e1ebf449b2d9eec2fadafd0cfe98", "sha256": "2564d5fdeae8ead78e6880186670bb47698eb6aecbf33ca1834cb46977d59cc9"}, "downloads": -1, "filename": "pygeoprocessing-1.8.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "00a4e1ebf449b2d9eec2fadafd0cfe98", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 433331, "upload_time": "2019-08-12T18:39:59", "upload_time_iso_8601": "2019-08-12T18:39:59.435554Z", "url": "https://files.pythonhosted.org/packages/82/68/8ae3afbcd9a0cb4578d3b6f606727b0882706a8ff53f6bb6b3859da1a3e0/pygeoprocessing-1.8.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "619a981578e0bb7668658c98ba4ecd66", "sha256": "a28dbce19061f9d5d5f333154569ce0cba6182b0b4c557cbd0c24c5385dac87e"}, "downloads": -1, "filename": "pygeoprocessing-1.8.0.tar.gz", "has_sig": false, "md5_digest": "619a981578e0bb7668658c98ba4ecd66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 897043, "upload_time": "2019-08-12T18:40:02", "upload_time_iso_8601": "2019-08-12T18:40:02.174779Z", "url": "https://files.pythonhosted.org/packages/b4/ff/1b66558f1351f52074f123efb68ae3bd51e5e488900ab6e6759dcee52f52/pygeoprocessing-1.8.0.tar.gz", "yanked": false}], "1.8.1rc1": [{"comment_text": "", "digests": {"md5": "4272b7ae8e0ac20341b49656874a7703", "sha256": "841d11a5e2dc084d063d6c70da0e12669f8af5a34ba0e9d1191891d32b0f9efe"}, "downloads": -1, "filename": "pygeoprocessing-1.8.1rc1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "4272b7ae8e0ac20341b49656874a7703", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 430360, "upload_time": "2019-08-12T23:43:18", "upload_time_iso_8601": "2019-08-12T23:43:18.447860Z", "url": "https://files.pythonhosted.org/packages/2f/05/79e1b65fb1231dc9703235c6cbd8521d1b64bee0862ce8dd28454b1eb143/pygeoprocessing-1.8.1rc1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b94814dffe15fc64207a9f927bfc233f", "sha256": "6bd5e4295d47f2332a138749d18ded080458753156c78df644939ff2059d1804"}, "downloads": -1, "filename": "pygeoprocessing-1.8.1rc1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "b94814dffe15fc64207a9f927bfc233f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 434169, "upload_time": "2019-08-12T23:43:20", "upload_time_iso_8601": "2019-08-12T23:43:20.532071Z", "url": "https://files.pythonhosted.org/packages/b1/12/896134f1c08c53022f780e9c8e87dd3707930a86f7a32a3f559ca3cb336d/pygeoprocessing-1.8.1rc1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "241e859177e9a0cef04b8f8972ff542d", "sha256": "3c15a0bd54d0e7e6a863cc49e3652fcf11873b8b8cdb5ed0e4c76e3d96728264"}, "downloads": -1, "filename": "pygeoprocessing-1.8.1rc1.tar.gz", "has_sig": false, "md5_digest": "241e859177e9a0cef04b8f8972ff542d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 898088, "upload_time": "2019-08-12T23:43:22", "upload_time_iso_8601": "2019-08-12T23:43:22.837990Z", "url": "https://files.pythonhosted.org/packages/dc/4f/5e6a2e49941f1f020a35fd6c6df59f18f84d055994fafa669c3938887270/pygeoprocessing-1.8.1rc1.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "9715e7721669bbb9108e5993dfb42f33", "sha256": "f06614fba415bcc8e5a4f13ff0edf7be84c08297c85316bc57d644096bd5b85d"}, "downloads": -1, "filename": "pygeoprocessing-1.9.0-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "9715e7721669bbb9108e5993dfb42f33", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 464527, "upload_time": "2019-12-12T18:02:29", "upload_time_iso_8601": "2019-12-12T18:02:29.632506Z", "url": "https://files.pythonhosted.org/packages/0d/9b/bddde9671b1823cb6856483d370fe48eac5bf3e05b16512f1819b3a7a52c/pygeoprocessing-1.9.0-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b63ddeb5e7ee4be4ab52116d2c5be50", "sha256": "a6ecac24384d6bb4e8beb9181e2f15e10c34a4dfa70a6f5a93be725aa20a57dd"}, "downloads": -1, "filename": "pygeoprocessing-1.9.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "6b63ddeb5e7ee4be4ab52116d2c5be50", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 514396, "upload_time": "2019-12-12T18:02:32", "upload_time_iso_8601": "2019-12-12T18:02:32.236685Z", "url": "https://files.pythonhosted.org/packages/fd/de/2b5a9bb5ab4fa80a6265e7e037a078612334b347eb4ecdd42cb1662051c3/pygeoprocessing-1.9.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97bc93fb180b786d3412d094c5318497", "sha256": "b152e1dac38aa6f222bc25258f0f03d292d80e19e4032410d0c251a838c37a05"}, "downloads": -1, "filename": "pygeoprocessing-1.9.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "97bc93fb180b786d3412d094c5318497", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 464339, "upload_time": "2019-12-12T18:02:34", "upload_time_iso_8601": "2019-12-12T18:02:34.648201Z", "url": "https://files.pythonhosted.org/packages/4d/8b/06df4515af756c46146a7eb18ff414528072297be841c09149fc6ced4d19/pygeoprocessing-1.9.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92349e3dcf7b7070def91b6772fa7891", "sha256": "5dd423ea462035668ee8f1c9c7ecfeb97a32beaae9356b0b22c0f9a9b38a26c8"}, "downloads": -1, "filename": "pygeoprocessing-1.9.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "92349e3dcf7b7070def91b6772fa7891", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 515759, "upload_time": "2019-10-23T01:10:00", "upload_time_iso_8601": "2019-10-23T01:10:00.247971Z", "url": "https://files.pythonhosted.org/packages/c6/2c/c3f370c9a0e074d07c30addade79bf8dd4ae91e7167b3b646d9c1b1d24bb/pygeoprocessing-1.9.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec84ce328529f710abdbcfb77e5ed325", "sha256": "111996537b529015be15c3c63411410bd88dab93aaddf0901b2db255f0fe0d1e"}, "downloads": -1, "filename": "pygeoprocessing-1.9.0.tar.gz", "has_sig": false, "md5_digest": "ec84ce328529f710abdbcfb77e5ed325", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 403032, "upload_time": "2019-10-23T01:10:03", "upload_time_iso_8601": "2019-10-23T01:10:03.238380Z", "url": "https://files.pythonhosted.org/packages/dd/d7/d8c440645f337a459bb0054c52ed862404d6257db775447547793468613a/pygeoprocessing-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "15cc8f7e05000a8940c7da52eaaa86bc", "sha256": "8b4b191f1ec50a6fcba151d5064b0fc94cd679910fd9a7d48e52d716445fae64"}, "downloads": -1, "filename": "pygeoprocessing-1.9.1-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "15cc8f7e05000a8940c7da52eaaa86bc", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 469261, "upload_time": "2019-12-20T21:52:59", "upload_time_iso_8601": "2019-12-20T21:52:59.510155Z", "url": "https://files.pythonhosted.org/packages/c3/4a/ea175db251d27e7dc335fc72171b05f133de7610da615b8501ddbae5970b/pygeoprocessing-1.9.1-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31fab5195e808ac420cd5ee55ba4d7b2", "sha256": "5840cc613445ae11a6802ef2745023a794d280a3264146c4684e140066a3d6e5"}, "downloads": -1, "filename": "pygeoprocessing-1.9.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "31fab5195e808ac420cd5ee55ba4d7b2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 519205, "upload_time": "2019-12-20T21:53:02", "upload_time_iso_8601": "2019-12-20T21:53:02.631809Z", "url": "https://files.pythonhosted.org/packages/8f/16/a4432f68d3d42df38133c262f71417aed593825b22a2f80df36390d1d21f/pygeoprocessing-1.9.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24739480ab07de688044e3444d2164b6", "sha256": "60529f8237a1a61a72c854fccd8b23e08bf359141513b65446331c64ee5c5c5b"}, "downloads": -1, "filename": "pygeoprocessing-1.9.1-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "24739480ab07de688044e3444d2164b6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 469049, "upload_time": "2019-12-20T21:53:05", "upload_time_iso_8601": "2019-12-20T21:53:05.117559Z", "url": "https://files.pythonhosted.org/packages/d8/03/fbfb528f6dcf3742b465644e7addbc288fd3209d8cd5ba847e91ba014550/pygeoprocessing-1.9.1-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e911b42dc6b492150c7a6ceedda34766", "sha256": "4b4d4b2a257aa0ba026422db6e215b5ceefe19f6a7ea978248a4cf112000f323"}, "downloads": -1, "filename": "pygeoprocessing-1.9.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "e911b42dc6b492150c7a6ceedda34766", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 518981, "upload_time": "2019-12-20T21:53:07", "upload_time_iso_8601": "2019-12-20T21:53:07.404142Z", "url": "https://files.pythonhosted.org/packages/a9/49/366ab265bc602e7cc5f1f352cd053aaeaf21a112eb790f808ecaf0123fb6/pygeoprocessing-1.9.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52850c10aff93ba9f557f6c783f499a7", "sha256": "4c5856e8e81cb8c2db94e1aff77b72201620ba561f22fed0778f49336d34ab8a"}, "downloads": -1, "filename": "pygeoprocessing-1.9.1.tar.gz", "has_sig": false, "md5_digest": "52850c10aff93ba9f557f6c783f499a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1241926, "upload_time": "2019-12-20T21:53:11", "upload_time_iso_8601": "2019-12-20T21:53:11.414419Z", "url": "https://files.pythonhosted.org/packages/38/11/dfd2c7769a0dc1c1b4f611320605b5de1986099d1d89ce7216fbeb215c28/pygeoprocessing-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "b87906668483e7c37638ec043ff2f9b3", "sha256": "a711523052601e3f0be384817c528c1c0cc7b5f0e1d2a80ab51107b68a31f930"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "b87906668483e7c37638ec043ff2f9b3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 468674, "upload_time": "2020-02-06T20:20:34", "upload_time_iso_8601": "2020-02-06T20:20:34.442282Z", "url": "https://files.pythonhosted.org/packages/aa/6a/3187f71850499421d49b29bdc64ad79aa404a002f92659f96a919b6b635e/pygeoprocessing-1.9.2-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d47727977258de27784b69e760783e3", "sha256": "9cd5d6ade49e63a2ae21a3e155a5dd656432e65cd3dac6d03f139994e25bf76e"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "6d47727977258de27784b69e760783e3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 518740, "upload_time": "2020-02-06T20:20:36", "upload_time_iso_8601": "2020-02-06T20:20:36.953425Z", "url": "https://files.pythonhosted.org/packages/4d/e7/126d0c65734e051165eb272743bf8276bb90614e497947b080dadd06996f/pygeoprocessing-1.9.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7ee6f1ec135fe7bdc732f8351b85121", "sha256": "b97caf769b76803ab4dfe6942ed55bf6003aae1d9008dde42ffacdc94af82db5"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "f7ee6f1ec135fe7bdc732f8351b85121", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 468468, "upload_time": "2020-02-06T20:20:39", "upload_time_iso_8601": "2020-02-06T20:20:39.344836Z", "url": "https://files.pythonhosted.org/packages/3b/fd/0aaa59941d8eada451ef579a00a9208827939bcad6ef57d4e62259ed11cc/pygeoprocessing-1.9.2-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca5b25979e884f9ce5351bfb675538dd", "sha256": "4b1f24707362126730659416924677ba32d456e0103326023feac56a3893f711"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "ca5b25979e884f9ce5351bfb675538dd", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 518411, "upload_time": "2020-02-06T20:20:41", "upload_time_iso_8601": "2020-02-06T20:20:41.489098Z", "url": "https://files.pythonhosted.org/packages/be/f2/e963090bdb55fb6a80f926b5f839b31dd011a975af5e5b7a70f0317f30f0/pygeoprocessing-1.9.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2fe4c34f0dacd0f6aea0c63845f7673", "sha256": "9be225e2c5005af65d340a36f3a1e8087d03bbca78de8b3c7c49005b3be2c534"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2.tar.gz", "has_sig": false, "md5_digest": "b2fe4c34f0dacd0f6aea0c63845f7673", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 244621, "upload_time": "2020-02-06T20:18:32", "upload_time_iso_8601": "2020-02-06T20:18:32.815991Z", "url": "https://files.pythonhosted.org/packages/e2/74/a881fc834f8e5cbe1130a4ce21f2033437044e00b194a48442ec1ffcdad6/pygeoprocessing-1.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b87906668483e7c37638ec043ff2f9b3", "sha256": "a711523052601e3f0be384817c528c1c0cc7b5f0e1d2a80ab51107b68a31f930"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "b87906668483e7c37638ec043ff2f9b3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 468674, "upload_time": "2020-02-06T20:20:34", "upload_time_iso_8601": "2020-02-06T20:20:34.442282Z", "url": "https://files.pythonhosted.org/packages/aa/6a/3187f71850499421d49b29bdc64ad79aa404a002f92659f96a919b6b635e/pygeoprocessing-1.9.2-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d47727977258de27784b69e760783e3", "sha256": "9cd5d6ade49e63a2ae21a3e155a5dd656432e65cd3dac6d03f139994e25bf76e"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "6d47727977258de27784b69e760783e3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 518740, "upload_time": "2020-02-06T20:20:36", "upload_time_iso_8601": "2020-02-06T20:20:36.953425Z", "url": "https://files.pythonhosted.org/packages/4d/e7/126d0c65734e051165eb272743bf8276bb90614e497947b080dadd06996f/pygeoprocessing-1.9.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7ee6f1ec135fe7bdc732f8351b85121", "sha256": "b97caf769b76803ab4dfe6942ed55bf6003aae1d9008dde42ffacdc94af82db5"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "f7ee6f1ec135fe7bdc732f8351b85121", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 468468, "upload_time": "2020-02-06T20:20:39", "upload_time_iso_8601": "2020-02-06T20:20:39.344836Z", "url": "https://files.pythonhosted.org/packages/3b/fd/0aaa59941d8eada451ef579a00a9208827939bcad6ef57d4e62259ed11cc/pygeoprocessing-1.9.2-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca5b25979e884f9ce5351bfb675538dd", "sha256": "4b1f24707362126730659416924677ba32d456e0103326023feac56a3893f711"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "ca5b25979e884f9ce5351bfb675538dd", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 518411, "upload_time": "2020-02-06T20:20:41", "upload_time_iso_8601": "2020-02-06T20:20:41.489098Z", "url": "https://files.pythonhosted.org/packages/be/f2/e963090bdb55fb6a80f926b5f839b31dd011a975af5e5b7a70f0317f30f0/pygeoprocessing-1.9.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2fe4c34f0dacd0f6aea0c63845f7673", "sha256": "9be225e2c5005af65d340a36f3a1e8087d03bbca78de8b3c7c49005b3be2c534"}, "downloads": -1, "filename": "pygeoprocessing-1.9.2.tar.gz", "has_sig": false, "md5_digest": "b2fe4c34f0dacd0f6aea0c63845f7673", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 244621, "upload_time": "2020-02-06T20:18:32", "upload_time_iso_8601": "2020-02-06T20:18:32.815991Z", "url": "https://files.pythonhosted.org/packages/e2/74/a881fc834f8e5cbe1130a4ce21f2033437044e00b194a48442ec1ffcdad6/pygeoprocessing-1.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:05 2020"}