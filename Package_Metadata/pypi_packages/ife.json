{"info": {"author": "HokutoTateyama", "author_email": "ht235711@yahoo.co.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering"], "description": "# Image Feature Extractor(IFE)\n[![Coverage Status](https://coveralls.io/repos/github/Collonville/ImageFeatureExtractor/badge.svg)](https://coveralls.io/github/Collonville/ImageFeatureExtractor)\n[![Build Status](https://travis-ci.org/Collonville/ImageFeatureExtractor.svg?branch=develop)](https://travis-ci.org/Collonville/ImageFeatureExtractor)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/115c65043153459cbfc5026ea53be08d)](https://www.codacy.com/app/Collonville/ImageFeatureExtractor?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Collonville/ImageFeatureExtractor&amp;utm_campaign=Badge_Grade)\n[![PyPI version](https://badge.fury.io/py/ife.svg)](https://badge.fury.io/py/ife)\n\n## What is this\n`IFE` is a package to get an image feature more easily for Python. It contains many kinds of feature extract algorithms.\n\n## Insatall\n   For the latest version are available using pip install.\n```bash\npip install ife\n```\n\n## 1. Features\n### Color Moment\n-   Mean, Median, Variance, Skewness, Kurtosis of `RGB, HSV, HSL, CMY`\n### Colourfulness\n-   Colourfulness measure of the image\n\n## 2. Examples\nImport the basic image reader of IFE.\n```python\nfrom ife.io.io import ImageReader\n```\n\n### 2.1 Get Moment\nAdd a image file path to `read_from_single_file()`. This will return basic features class.\n\nAnd now! You can get a RGB color moment feature from image!!\n\n### Sample\n```python\n>>> features = ImageReader.read_from_single_file(\"ife/data/small_rgb.jpg\")\n>>> features.moment()\narray([[ 0.57745098,  0.52156863,  0.55980392],\n       [ 0.58823529,  0.48823529,  0.54901961],\n       [ 0.15220588,  0.12136101,  0.12380911],\n       [-0.01944425,  0.18416571,  0.04508015],\n       [-1.94196824, -1.55209335, -1.75586748]])\n```\n\nAlso, you can get an `flatten vector, dictionary, or pandas`\n```python\n>>> features.moment(output_type=\"one_col\")\narray([ 0.57745098,  0.52156863,  0.55980392,  0.58823529,  0.48823529,\n        0.54901961,  0.15220588,  0.12136101,  0.12380911, -0.01944425,\n        0.18416571,  0.04508015, -1.94196824, -1.55209335, -1.75586748])\n\n>>> features.moment(output_type=\"dict\")\ndefaultdict(<class 'dict'>, {'mean': {'R': 0.57745098039215681, 'G': 0.52156862745098043, 'B': 0.55980392156862746}, 'median': {'R': 0.58823529411764708, 'G': 0.48823529411764705, 'B': 0.5490196078431373}, 'var': {'R': 0.15220588235294119, 'G': 0.12136101499423299, 'B': 0.12380911188004615}, 'skew': {'R': -0.019444250980856902, 'G': 0.18416570783012232, 'B': 0.045080152334687214}, 'kurtosis': {'R': -1.9419682406751135, 'G': -1.5520933544103905, 'B': -1.7558674751807395}})\n\n>>> features.moment(output_type=\"pandas\")\n       mean    median       var      skew  kurtosis\nR  0.577451  0.588235  0.152206 -0.019444 -1.941968\nG  0.521569  0.488235  0.121361  0.184166 -1.552093\nB  0.559804  0.549020  0.123809  0.045080 -1.755867\n```\n\n> No! I want a HSV Color space feature :(\n\nIt can set another color space! Default will be RGB.\n```python\n>>> features.moment(output_type=\"one_col\", color_space=\"CMY\")\narray([ 0.42254902,  0.47843137,  0.44019608,  0.41176471,  0.51176471,\n        0.45098039,  0.15220588,  0.12136101,  0.12380911,  0.01944425,\n       -0.18416571, -0.04508015, -1.94196824, -1.55209335, -1.75586748])\n       \n>>> features.moment(output_type=\"dict\", color_space=\"HSL\")\ndefaultdict(<class 'dict'>, {'mean': {'H': 0.50798329143793874, 'S': 0.52775831413836383, 'L': 0.61421568627450984}, 'median': {'H': 0.51915637553935423, 'S': 0.62898601603182969, 'L': 0.52156862745098043}, 'var': {'H': 0.13290200013401141, 'S': 0.10239897927552907, 'L': 0.051550124951941563}, 'skew': {'H': -0.078898095002588917, 'S': -0.83203104238315984, 'L': 1.0202366337483093}, 'kurtosis': {'H': -1.2599104562470791, 'S': -0.87111810912637022, 'L': -0.7502836585891588}})\n\n>>> features.moment(output_type=\"pandas\", color_space=\"HSV\")\n       mean    median       var      skew  kurtosis\nH  0.507983  0.519156  0.132902 -0.078898 -1.259910\nS  0.595236  0.749543  0.122723 -1.028366 -0.768867\nV  0.855882  0.864706  0.013867 -0.155656 -1.498179\n```\n## 2.2 Colourfulness\n### Reference\nD. Hasler and S.E.Suesstrunk, ``Measuring colorfulness in natural images,\" Human\nVision andElectronicImagingVIII, Proceedings of the SPIE, 5007:87-95, 2003.\n\n### Sample\n```python\n>>> features = ImageReader.read_from_single_file(\"ife/data/strawberry.jpg\")\n>>> features.colourfulness()\n0.18441700366624714\n```\n\n## 3. Future work\n### IO\n-   Read from URL links\n-   Read from Base64\n-   Sliding window\n-   Video files\n\n### Color space\n-   CMYK\n-   CIE Lab\n-   XYZ\n\n### Features\n-   Value normalize\n-   Average Gradient\n-   LBP\n-   Histogram\n-   Color harmony\n-   Entropy\n-   Brightness measure\n-   Contrast measure\n-   Saturation measure\n-   Naturalness\n-   Color fidelity metric\n-   Saliency map\n-   Fisher vector\n-   VGG16, 19 layer feature\n-   and more...\n\n## 4. Author\n@Collonville\n\n## 5. Licence\nBSD-3-Clause\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Collonville/ImageFeatureExtractor", "keywords": "", "license": "BSD-3-Clause", "maintainer": "HokutoTateyama", "maintainer_email": "ht235711@yahoo.co.jp", "name": "ife", "package_url": "https://pypi.org/project/ife/", "platform": "", "project_url": "https://pypi.org/project/ife/", "project_urls": {"Homepage": "https://github.com/Collonville/ImageFeatureExtractor", "Repository": "https://github.com/Collonville/ImageFeatureExtractor"}, "release_url": "https://pypi.org/project/ife/0.0.3/", "requires_dist": ["Pillow (>=6.1,<7.0)", "colour-science (>=0.3.13,<0.4.0)", "pandas (>=0.25.0,<0.26.0)"], "requires_python": ">=3.6,<4.0", "summary": "You can get a nice global image feature!", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Image Feature Extractor(IFE)</h1>\n<p><a href=\"https://coveralls.io/github/Collonville/ImageFeatureExtractor\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2d9a024c2083c0a41eed195672211f0aecb7ab9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f436f6c6c6f6e76696c6c652f496d61676546656174757265457874726163746f722f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/Collonville/ImageFeatureExtractor\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f715c861cfc98fa4ac86ca4673f3137c47593812/68747470733a2f2f7472617669732d63692e6f72672f436f6c6c6f6e76696c6c652f496d61676546656174757265457874726163746f722e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://www.codacy.com/app/Collonville/ImageFeatureExtractor?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Collonville/ImageFeatureExtractor&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e76e54b4431d7619b2b0b98ebb0f5f602098edb/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3131356336353034333135333435396362666335303236656135336265303864\"></a>\n<a href=\"https://badge.fury.io/py/ife\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73639924bddaee442995aef5f417d2d64d4ee8b3/68747470733a2f2f62616467652e667572792e696f2f70792f6966652e737667\"></a></p>\n<h2>What is this</h2>\n<p><code>IFE</code> is a package to get an image feature more easily for Python. It contains many kinds of feature extract algorithms.</p>\n<h2>Insatall</h2>\n<p>For the latest version are available using pip install.</p>\n<pre>pip install ife\n</pre>\n<h2>1. Features</h2>\n<h3>Color Moment</h3>\n<ul>\n<li>Mean, Median, Variance, Skewness, Kurtosis of <code>RGB, HSV, HSL, CMY</code></li>\n</ul>\n<h3>Colourfulness</h3>\n<ul>\n<li>Colourfulness measure of the image</li>\n</ul>\n<h2>2. Examples</h2>\n<p>Import the basic image reader of IFE.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ife.io.io</span> <span class=\"kn\">import</span> <span class=\"n\">ImageReader</span>\n</pre>\n<h3>2.1 Get Moment</h3>\n<p>Add a image file path to <code>read_from_single_file()</code>. This will return basic features class.</p>\n<p>And now! You can get a RGB color moment feature from image!!</p>\n<h3>Sample</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">ImageReader</span><span class=\"o\">.</span><span class=\"n\">read_from_single_file</span><span class=\"p\">(</span><span class=\"s2\">\"ife/data/small_rgb.jpg\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">()</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.57745098</span><span class=\"p\">,</span>  <span class=\"mf\">0.52156863</span><span class=\"p\">,</span>  <span class=\"mf\">0.55980392</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.58823529</span><span class=\"p\">,</span>  <span class=\"mf\">0.48823529</span><span class=\"p\">,</span>  <span class=\"mf\">0.54901961</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">0.15220588</span><span class=\"p\">,</span>  <span class=\"mf\">0.12136101</span><span class=\"p\">,</span>  <span class=\"mf\">0.12380911</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.01944425</span><span class=\"p\">,</span>  <span class=\"mf\">0.18416571</span><span class=\"p\">,</span>  <span class=\"mf\">0.04508015</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.94196824</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.55209335</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.75586748</span><span class=\"p\">]])</span>\n</pre>\n<p>Also, you can get an <code>flatten vector, dictionary, or pandas</code></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"one_col\"</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.57745098</span><span class=\"p\">,</span>  <span class=\"mf\">0.52156863</span><span class=\"p\">,</span>  <span class=\"mf\">0.55980392</span><span class=\"p\">,</span>  <span class=\"mf\">0.58823529</span><span class=\"p\">,</span>  <span class=\"mf\">0.48823529</span><span class=\"p\">,</span>\n        <span class=\"mf\">0.54901961</span><span class=\"p\">,</span>  <span class=\"mf\">0.15220588</span><span class=\"p\">,</span>  <span class=\"mf\">0.12136101</span><span class=\"p\">,</span>  <span class=\"mf\">0.12380911</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.01944425</span><span class=\"p\">,</span>\n        <span class=\"mf\">0.18416571</span><span class=\"p\">,</span>  <span class=\"mf\">0.04508015</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.94196824</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.55209335</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.75586748</span><span class=\"p\">])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"dict\"</span><span class=\"p\">)</span>\n<span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">dict</span><span class=\"s1\">'&gt;, {'</span><span class=\"n\">mean</span><span class=\"s1\">': {'</span><span class=\"sa\">R</span><span class=\"s1\">': 0.57745098039215681, '</span><span class=\"n\">G</span><span class=\"s1\">': 0.52156862745098043, '</span><span class=\"sa\">B</span><span class=\"s1\">': 0.55980392156862746}, '</span><span class=\"n\">median</span><span class=\"s1\">': {'</span><span class=\"sa\">R</span><span class=\"s1\">': 0.58823529411764708, '</span><span class=\"n\">G</span><span class=\"s1\">': 0.48823529411764705, '</span><span class=\"sa\">B</span><span class=\"s1\">': 0.5490196078431373}, '</span><span class=\"n\">var</span><span class=\"s1\">': {'</span><span class=\"sa\">R</span><span class=\"s1\">': 0.15220588235294119, '</span><span class=\"n\">G</span><span class=\"s1\">': 0.12136101499423299, '</span><span class=\"sa\">B</span><span class=\"s1\">': 0.12380911188004615}, '</span><span class=\"n\">skew</span><span class=\"s1\">': {'</span><span class=\"sa\">R</span><span class=\"s1\">': -0.019444250980856902, '</span><span class=\"n\">G</span><span class=\"s1\">': 0.18416570783012232, '</span><span class=\"sa\">B</span><span class=\"s1\">': 0.045080152334687214}, '</span><span class=\"n\">kurtosis</span><span class=\"s1\">': {'</span><span class=\"sa\">R</span><span class=\"s1\">': -1.9419682406751135, '</span><span class=\"n\">G</span><span class=\"s1\">': -1.5520933544103905, '</span><span class=\"sa\">B</span><span class=\"s1\">': -1.7558674751807395}})</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"pandas\"</span><span class=\"p\">)</span>\n       <span class=\"n\">mean</span>    <span class=\"n\">median</span>       <span class=\"n\">var</span>      <span class=\"n\">skew</span>  <span class=\"n\">kurtosis</span>\n<span class=\"n\">R</span>  <span class=\"mf\">0.577451</span>  <span class=\"mf\">0.588235</span>  <span class=\"mf\">0.152206</span> <span class=\"o\">-</span><span class=\"mf\">0.019444</span> <span class=\"o\">-</span><span class=\"mf\">1.941968</span>\n<span class=\"n\">G</span>  <span class=\"mf\">0.521569</span>  <span class=\"mf\">0.488235</span>  <span class=\"mf\">0.121361</span>  <span class=\"mf\">0.184166</span> <span class=\"o\">-</span><span class=\"mf\">1.552093</span>\n<span class=\"n\">B</span>  <span class=\"mf\">0.559804</span>  <span class=\"mf\">0.549020</span>  <span class=\"mf\">0.123809</span>  <span class=\"mf\">0.045080</span> <span class=\"o\">-</span><span class=\"mf\">1.755867</span>\n</pre>\n<blockquote>\n<p>No! I want a HSV Color space feature :(</p>\n</blockquote>\n<p>It can set another color space! Default will be RGB.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"one_col\"</span><span class=\"p\">,</span> <span class=\"n\">color_space</span><span class=\"o\">=</span><span class=\"s2\">\"CMY\"</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">0.42254902</span><span class=\"p\">,</span>  <span class=\"mf\">0.47843137</span><span class=\"p\">,</span>  <span class=\"mf\">0.44019608</span><span class=\"p\">,</span>  <span class=\"mf\">0.41176471</span><span class=\"p\">,</span>  <span class=\"mf\">0.51176471</span><span class=\"p\">,</span>\n        <span class=\"mf\">0.45098039</span><span class=\"p\">,</span>  <span class=\"mf\">0.15220588</span><span class=\"p\">,</span>  <span class=\"mf\">0.12136101</span><span class=\"p\">,</span>  <span class=\"mf\">0.12380911</span><span class=\"p\">,</span>  <span class=\"mf\">0.01944425</span><span class=\"p\">,</span>\n       <span class=\"o\">-</span><span class=\"mf\">0.18416571</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.04508015</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.94196824</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.55209335</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.75586748</span><span class=\"p\">])</span>\n       \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"dict\"</span><span class=\"p\">,</span> <span class=\"n\">color_space</span><span class=\"o\">=</span><span class=\"s2\">\"HSL\"</span><span class=\"p\">)</span>\n<span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">dict</span><span class=\"s1\">'&gt;, {'</span><span class=\"n\">mean</span><span class=\"s1\">': {'</span><span class=\"n\">H</span><span class=\"s1\">': 0.50798329143793874, '</span><span class=\"n\">S</span><span class=\"s1\">': 0.52775831413836383, '</span><span class=\"n\">L</span><span class=\"s1\">': 0.61421568627450984}, '</span><span class=\"n\">median</span><span class=\"s1\">': {'</span><span class=\"n\">H</span><span class=\"s1\">': 0.51915637553935423, '</span><span class=\"n\">S</span><span class=\"s1\">': 0.62898601603182969, '</span><span class=\"n\">L</span><span class=\"s1\">': 0.52156862745098043}, '</span><span class=\"n\">var</span><span class=\"s1\">': {'</span><span class=\"n\">H</span><span class=\"s1\">': 0.13290200013401141, '</span><span class=\"n\">S</span><span class=\"s1\">': 0.10239897927552907, '</span><span class=\"n\">L</span><span class=\"s1\">': 0.051550124951941563}, '</span><span class=\"n\">skew</span><span class=\"s1\">': {'</span><span class=\"n\">H</span><span class=\"s1\">': -0.078898095002588917, '</span><span class=\"n\">S</span><span class=\"s1\">': -0.83203104238315984, '</span><span class=\"n\">L</span><span class=\"s1\">': 1.0202366337483093}, '</span><span class=\"n\">kurtosis</span><span class=\"s1\">': {'</span><span class=\"n\">H</span><span class=\"s1\">': -1.2599104562470791, '</span><span class=\"n\">S</span><span class=\"s1\">': -0.87111810912637022, '</span><span class=\"n\">L</span><span class=\"s1\">': -0.7502836585891588}})</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">moment</span><span class=\"p\">(</span><span class=\"n\">output_type</span><span class=\"o\">=</span><span class=\"s2\">\"pandas\"</span><span class=\"p\">,</span> <span class=\"n\">color_space</span><span class=\"o\">=</span><span class=\"s2\">\"HSV\"</span><span class=\"p\">)</span>\n       <span class=\"n\">mean</span>    <span class=\"n\">median</span>       <span class=\"n\">var</span>      <span class=\"n\">skew</span>  <span class=\"n\">kurtosis</span>\n<span class=\"n\">H</span>  <span class=\"mf\">0.507983</span>  <span class=\"mf\">0.519156</span>  <span class=\"mf\">0.132902</span> <span class=\"o\">-</span><span class=\"mf\">0.078898</span> <span class=\"o\">-</span><span class=\"mf\">1.259910</span>\n<span class=\"n\">S</span>  <span class=\"mf\">0.595236</span>  <span class=\"mf\">0.749543</span>  <span class=\"mf\">0.122723</span> <span class=\"o\">-</span><span class=\"mf\">1.028366</span> <span class=\"o\">-</span><span class=\"mf\">0.768867</span>\n<span class=\"n\">V</span>  <span class=\"mf\">0.855882</span>  <span class=\"mf\">0.864706</span>  <span class=\"mf\">0.013867</span> <span class=\"o\">-</span><span class=\"mf\">0.155656</span> <span class=\"o\">-</span><span class=\"mf\">1.498179</span>\n</pre>\n<h2>2.2 Colourfulness</h2>\n<h3>Reference</h3>\n<p>D. Hasler and S.E.Suesstrunk, ``Measuring colorfulness in natural images,\" Human\nVision andElectronicImagingVIII, Proceedings of the SPIE, 5007:87-95, 2003.</p>\n<h3>Sample</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">ImageReader</span><span class=\"o\">.</span><span class=\"n\">read_from_single_file</span><span class=\"p\">(</span><span class=\"s2\">\"ife/data/strawberry.jpg\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">colourfulness</span><span class=\"p\">()</span>\n<span class=\"mf\">0.18441700366624714</span>\n</pre>\n<h2>3. Future work</h2>\n<h3>IO</h3>\n<ul>\n<li>Read from URL links</li>\n<li>Read from Base64</li>\n<li>Sliding window</li>\n<li>Video files</li>\n</ul>\n<h3>Color space</h3>\n<ul>\n<li>CMYK</li>\n<li>CIE Lab</li>\n<li>XYZ</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>Value normalize</li>\n<li>Average Gradient</li>\n<li>LBP</li>\n<li>Histogram</li>\n<li>Color harmony</li>\n<li>Entropy</li>\n<li>Brightness measure</li>\n<li>Contrast measure</li>\n<li>Saturation measure</li>\n<li>Naturalness</li>\n<li>Color fidelity metric</li>\n<li>Saliency map</li>\n<li>Fisher vector</li>\n<li>VGG16, 19 layer feature</li>\n<li>and more...</li>\n</ul>\n<h2>4. Author</h2>\n<p>@Collonville</p>\n<h2>5. Licence</h2>\n<p>BSD-3-Clause</p>\n\n          </div>"}, "last_serial": 5769742, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "7322860b64ab42b7e72acbb30127bf82", "sha256": "54c4f5c8fde47660018f98028783c343f63214cf23b6b5494f3aa69c78a7b061"}, "downloads": -1, "filename": "ife-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7322860b64ab42b7e72acbb30127bf82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 12360, "upload_time": "2019-08-18T14:08:53", "upload_time_iso_8601": "2019-08-18T14:08:53.623862Z", "url": "https://files.pythonhosted.org/packages/99/4d/8ce5b9a8a8ffdf13cf05a19ffd5fec6586653e4837a777d8f5a20f7a7dcc/ife-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b390ec96ff02e0e05cf18c8760b6fa7", "sha256": "1b890cf8a77ce7263375c56ab0294f062406ffd43e8426cdad065b228e750b2d"}, "downloads": -1, "filename": "ife-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5b390ec96ff02e0e05cf18c8760b6fa7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10825, "upload_time": "2019-08-18T14:08:56", "upload_time_iso_8601": "2019-08-18T14:08:56.851163Z", "url": "https://files.pythonhosted.org/packages/9f/4a/0321cb5b9d77b473a843f2d5796dae3f3c32b98d8cc3c4eb66779f5fce72/ife-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1f7c86df2bef0f4e0349bd8e4b239ae8", "sha256": "8f78d4012bb4899ee122385da56d61371ca3fa1bcf56c979c7e50bf3e29ed761"}, "downloads": -1, "filename": "ife-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1f7c86df2bef0f4e0349bd8e4b239ae8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13603, "upload_time": "2019-09-02T08:56:06", "upload_time_iso_8601": "2019-09-02T08:56:06.833325Z", "url": "https://files.pythonhosted.org/packages/f4/12/162d44a0e9100e66e872233bf84025b9d9ef9946fa56438ccd693dbc924f/ife-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c094bc85588d0bb6f15a0ad23b583cc", "sha256": "6dff4e927f20bf05d6b2d1daad6d407471d538a456c8af55322a7850dc136851"}, "downloads": -1, "filename": "ife-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3c094bc85588d0bb6f15a0ad23b583cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 11661, "upload_time": "2019-09-02T08:56:08", "upload_time_iso_8601": "2019-09-02T08:56:08.433619Z", "url": "https://files.pythonhosted.org/packages/7c/57/8bdaf1056f03768dfc07a5509f4a132965862a90e729bd9559254e3eacca/ife-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f7c86df2bef0f4e0349bd8e4b239ae8", "sha256": "8f78d4012bb4899ee122385da56d61371ca3fa1bcf56c979c7e50bf3e29ed761"}, "downloads": -1, "filename": "ife-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1f7c86df2bef0f4e0349bd8e4b239ae8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13603, "upload_time": "2019-09-02T08:56:06", "upload_time_iso_8601": "2019-09-02T08:56:06.833325Z", "url": "https://files.pythonhosted.org/packages/f4/12/162d44a0e9100e66e872233bf84025b9d9ef9946fa56438ccd693dbc924f/ife-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c094bc85588d0bb6f15a0ad23b583cc", "sha256": "6dff4e927f20bf05d6b2d1daad6d407471d538a456c8af55322a7850dc136851"}, "downloads": -1, "filename": "ife-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3c094bc85588d0bb6f15a0ad23b583cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 11661, "upload_time": "2019-09-02T08:56:08", "upload_time_iso_8601": "2019-09-02T08:56:08.433619Z", "url": "https://files.pythonhosted.org/packages/7c/57/8bdaf1056f03768dfc07a5509f4a132965862a90e729bd9559254e3eacca/ife-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:47 2020"}