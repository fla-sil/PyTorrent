{"info": {"author": "Alexander Solovyov", "author_email": "piranha@piranha.org.ua", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": ".. -*- mode: rst -*-\n\n=================================\n RevCanonical Django application\n=================================\n\nThis is an implementation of rev=canonical `url shortening`_ in the form of\nDjango application. Basically rev=canonical is nice idea about that site should\ngive you two links to actual page: one is human-readable, and another is short\nversion, intented to use in limited conditions.\n\nThis implementation is modelled after Simon Willison's `post`_ and returns 301\npermanent redirect for your short urls.\n\n.. _url shortening: http://revcanonical.appspot.com/\n.. _post: http://simonwillison.net/2009/Apr/11/revcanonical/\n\n\nConfiguration\n-------------\n\nInstallation is simple - use it like any another Django application, basically:\nput it where other application of your project are residing and add\n``'revcanonical'`` to ``INSTALLED_APPS`` in ``settings.py``. Then edit your\n``urls.py`` and add inclusion of revcanonical's urls to urlpatterns::\n\n    url(r'', include('revcanonical.urls')),\n\nUse ``r'^someprefix/'`` instead of first argument if you'd like to see prefixed\nurls.\n\nBy default revcanonical uses internal Django's Site model to determine your site\ndomain, but you can set it manually in ``settings.py`` as ``REVCANONICAL_SITE``\nvariable.\n\n\nUsage\n-----\n\nInclude such code in your template between ``<head>`` and ``</head>`` tags::\n\n    {% load revcanontags %}\n    {% revcanonical object %}\n\nOf course, you should replace ``object`` with your own object variable. And,\nnaturally, it should have ``get_absolute_url()`` method.\n\nAdditionally you can set your `<a href>` links to short urls::\n\n    {% load revcanontags %}\n    <a href=\"{% shorturl object %}\">...</a>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://hg.piranha.org.ua/django-revcanonical/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-revcanonical", "package_url": "https://pypi.org/project/django-revcanonical/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-revcanonical/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://hg.piranha.org.ua/django-revcanonical/"}, "release_url": "https://pypi.org/project/django-revcanonical/1.0/", "requires_dist": null, "requires_python": null, "summary": "An implementation of rev=canonical url shortening for Django.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an implementation of rev=canonical <a href=\"http://revcanonical.appspot.com/\" rel=\"nofollow\">url shortening</a> in the form of\nDjango application. Basically rev=canonical is nice idea about that site should\ngive you two links to actual page: one is human-readable, and another is short\nversion, intented to use in limited conditions.</p>\n<p>This implementation is modelled after Simon Willison\u2019s <a href=\"http://simonwillison.net/2009/Apr/11/revcanonical/\" rel=\"nofollow\">post</a> and returns 301\npermanent redirect for your short urls.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Installation is simple - use it like any another Django application, basically:\nput it where other application of your project are residing and add\n<tt>'revcanonical'</tt> to <tt>INSTALLED_APPS</tt> in <tt>settings.py</tt>. Then edit your\n<tt>urls.py</tt> and add inclusion of revcanonical\u2019s urls to urlpatterns:</p>\n<pre>url(r'', include('revcanonical.urls')),\n</pre>\n<p>Use <tt><span class=\"pre\">r'^someprefix/'</span></tt> instead of first argument if you\u2019d like to see prefixed\nurls.</p>\n<p>By default revcanonical uses internal Django\u2019s Site model to determine your site\ndomain, but you can set it manually in <tt>settings.py</tt> as <tt>REVCANONICAL_SITE</tt>\nvariable.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Include such code in your template between <tt>&lt;head&gt;</tt> and <tt>&lt;/head&gt;</tt> tags:</p>\n<pre>{% load revcanontags %}\n{% revcanonical object %}\n</pre>\n<p>Of course, you should replace <tt>object</tt> with your own object variable. And,\nnaturally, it should have <tt>get_absolute_url()</tt> method.</p>\n<p>Additionally you can set your <cite>&lt;a href&gt;</cite> links to short urls:</p>\n<pre>{% load revcanontags %}\n&lt;a href=\"{% shorturl object %}\"&gt;...&lt;/a&gt;\n</pre>\n</div>\n\n          </div>"}, "last_serial": 724416, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "661981aa17e1c9fa5dc18286ed8cba5c", "sha256": "726511c235ce0df2af2ca3a5ec024277ec0e544ec4839ad29933a85680feb9e1"}, "downloads": -1, "filename": "django-revcanonical-1.0.tar.gz", "has_sig": false, "md5_digest": "661981aa17e1c9fa5dc18286ed8cba5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3595, "upload_time": "2009-04-13T10:31:27", "upload_time_iso_8601": "2009-04-13T10:31:27.786521Z", "url": "https://files.pythonhosted.org/packages/3c/da/77980e1361225e67fc50e1e673dcc0a81d4a393d68e724bf2667e7a14f04/django-revcanonical-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "661981aa17e1c9fa5dc18286ed8cba5c", "sha256": "726511c235ce0df2af2ca3a5ec024277ec0e544ec4839ad29933a85680feb9e1"}, "downloads": -1, "filename": "django-revcanonical-1.0.tar.gz", "has_sig": false, "md5_digest": "661981aa17e1c9fa5dc18286ed8cba5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3595, "upload_time": "2009-04-13T10:31:27", "upload_time_iso_8601": "2009-04-13T10:31:27.786521Z", "url": "https://files.pythonhosted.org/packages/3c/da/77980e1361225e67fc50e1e673dcc0a81d4a393d68e724bf2667e7a14f04/django-revcanonical-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:58 2020"}