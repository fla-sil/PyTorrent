{"info": {"author": "Jonathan Jacobs", "author_email": "jonathan@jsphere.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: System :: Logging"], "description": "=========\neliottree\n=========\n\n|build|_ |coverage|_\n\nRender `Eliot <https://github.com/scatterhq/eliot>`_ logs as an ASCII tree.\n\nThis output:\n\n.. image:: https://github.com/jonathanj/eliottree/raw/master/doc/example_eliot_log.png\n\n(or as text)\n\n.. code-block:: bash\n\n   $ eliot-tree eliot.log\n   f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\n   \u2514\u2500\u2500 app:soap:client:request/1 \u21d2 started 2015-03-03 04:28:56 \u29d6 1.238s\n       \u251c\u2500\u2500 dump: /home/user/dump_files/20150303/1425356936.28_Client_req.xml\n       \u251c\u2500\u2500 soapAction: a_soap_action\n       \u251c\u2500\u2500 uri: http://example.org/soap\n       \u251c\u2500\u2500 app:soap:client:success/2/1 \u21d2 started 2015-03-03 04:28:57 \u29d6 0.000s\n       \u2502   \u2514\u2500\u2500 app:soap:client:success/2/2 \u21d2 succeeded 2015-03-03 04:28:57\n       \u2502       \u2514\u2500\u2500 dump: /home/user/dump_files/20150303/1425356937.52_Client_res.xml\n       \u2514\u2500\u2500 app:soap:client:request/3 \u21d2 succeeded 2015-03-03 04:28:57\n           \u2514\u2500\u2500 status: 200\n\n    89a56df5-d808-4a7c-8526-e603aae2e2f2\n    \u2514\u2500\u2500 app:soap:service:request/1 \u21d2 started 2015-03-03 04:31:08 \u29d6 3.482s\n        \u251c\u2500\u2500 dump: /home/user/dump_files/20150303/1425357068.03_Service_req.xml\n        \u251c\u2500\u2500 soapAction: method\n        \u251c\u2500\u2500 uri: /endpoints/soap/method\n        \u251c\u2500\u2500 app:soap:service:success/2/1 \u21d2 started 2015-03-03 04:31:11 \u29d6 0.001s\n        \u2502   \u2514\u2500\u2500 app:soap:service:success/2/2 \u21d2 succeeded 2015-03-03 04:31:11\n        \u2502       \u2514\u2500\u2500 dump: /home/user/dump_files/20150303/1425357071.51_Service_res.xml\n        \u2514\u2500\u2500 app:soap:service:request/3 \u21d2 succeeded 2015-03-03 04:31:11\n            \u2514\u2500\u2500 status: 200\n\nwas generated from:\n\n.. code-block:: javascript\n\n   {\"dump\": \"/home/user/dump_files/20150303/1425356936.28_Client_req.xml\", \"timestamp\": 1425356936.278875, \"uri\": \"http://example.org/soap\", \"action_status\": \"started\", \"task_uuid\": \"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\", \"action_type\": \"app:soap:client:request\", \"soapAction\": \"a_soap_action\", \"task_level\": [1]}\n   {\"timestamp\": 1425356937.516579, \"task_uuid\": \"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\", \"action_type\": \"app:soap:client:success\", \"action_status\": \"started\", \"task_level\": [2, 1]}\n   {\"task_uuid\": \"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\", \"action_type\": \"app:soap:client:success\", \"dump\": \"/home/user/dump_files/20150303/1425356937.52_Client_res.xml\", \"timestamp\": 1425356937.517077, \"action_status\": \"succeeded\", \"task_level\": [2, 2]}\n   {\"status\": 200, \"task_uuid\": \"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\", \"task_level\": [3], \"action_type\": \"app:soap:client:request\", \"timestamp\": 1425356937.517161, \"action_status\": \"succeeded\"}\n   {\"dump\": \"/home/user/dump_files/20150303/1425357068.03_Service_req.xml\", \"timestamp\": 1425357068.032091, \"uri\": \"/endpoints/soap/method\", \"action_status\": \"started\", \"task_uuid\": \"89a56df5-d808-4a7c-8526-e603aae2e2f2\", \"action_type\": \"app:soap:service:request\", \"soapAction\": \"method\", \"task_level\": [1]}\n   {\"timestamp\": 1425357071.51233, \"task_uuid\": \"89a56df5-d808-4a7c-8526-e603aae2e2f2\", \"action_type\": \"app:soap:service:success\", \"action_status\": \"started\", \"task_level\": [2, 1]}\n   {\"task_uuid\": \"89a56df5-d808-4a7c-8526-e603aae2e2f2\", \"action_type\": \"app:soap:service:success\", \"dump\": \"/home/user/dump_files/20150303/1425357071.51_Service_res.xml\", \"timestamp\": 1425357071.513453, \"action_status\": \"succeeded\", \"task_level\": [2, 2]}\n   {\"status\": 200, \"task_uuid\": \"89a56df5-d808-4a7c-8526-e603aae2e2f2\", \"task_level\": [3], \"action_type\": \"app:soap:service:request\", \"timestamp\": 1425357071.513992, \"action_status\": \"succeeded\"}\n\nCommand-line options\n--------------------\n\nConsult the output of ``eliot-tree --help`` to see a complete list of command-line\noptions.\n\nStreaming\n---------\n\nIt's possible to pipe data into eliot-tree, from a tailed log for example, and\nhave it rendered incrementally. There is a caveat though: Trees are only\nrendered once an end message\u2014a success or failure status\u2014for the tree's root\naction appears in the data.\n\nSelecting / filtering tasks\n---------------------------\n\nBy task UUID\n~~~~~~~~~~~~\n\nEntire task trees can be selected by UUID with the ``--task-uuid`` (``-u``)\ncommand-line option.\n\nBy start / end date\n~~~~~~~~~~~~~~~~~~~\n\nIndividual tasks can be selected based on their timestamp, use ``--start`` to\nselect tasks after an ISO8601 date-time, and ``--end`` to select tasks before an\nISO8601 date-time.\n\nBy custom query\n~~~~~~~~~~~~~~~\n\nCustom task selection can be done with the ``--select`` command-line option, the\nsyntax of which is `JMESPath`_, and is applied to the original Eliot JSON\nstructures. Any data that appears within an Eliot task structure can be queried.\nOnly the matching tasks (and all of their children) will be displayed, the\nparents of the task structure (by ``task_uuid``) will be elided.\n\nAn important thing to note is that the query should be used as a *predicate* (it\nshould describe a boolean condition), not to narrow a JSON data structure, as\nmany of the examples on the JMESPath site illustrate. The reason for this is\nthat Eliot tasks are not stored as one large nested JSON structure, they are\ninstead many small structures that are linked together by metadata\n(``task_uuid``), which is not a structure than JMESPath is ideally equipped to\nquery.\n\nThe ``--select`` argument can be supplied multiple times to mimic logical AND,\nthat is all ``--select`` predicates must pass in order for a task or node to be\nselected.\n\n.. _JMESPath: http://jmespath.org/\n\nExamples\n^^^^^^^^\n\nSelect all tasks that contain a ``uri`` key, regardless of its value:\n\n.. code-block:: bash\n\n   --select 'uri'\n\nSelect all Eliot action tasks of type ``http_client:request``:\n\n.. code-block:: bash\n\n   --select 'action_type == `\"http_client:request\"`'\n\nBackquotes are used to represent raw JSON values in JMESPath, ```500``` is the\nnumber 500, ```\"500\"``` is the string \"500\".\n\nSelect all tasks that have an ``http_status`` of 401 or 500:\n\n.. code-block:: bash\n\n   --select 'contains(`[401, 500]`, status)'\n\nSelect all tasks that have an ``http_status`` of 401 that were also made to a\n``uri`` containing the text ``/criticalEndpoint``:\n\n.. code-block:: bash\n\n   --select 'http_status == `401`' \\\n   --select 'uri && contains(uri, `\"/criticalEndpoint\"`)'\n\nHere ``--select`` is passed twice to mimic a logic AND condition, it is also\npossible to use the JMESPath ``&&`` operator. There is also a test for the\nexistence of the ``uri`` key to guard against calling the ``contains()``\nfunction with a null subject.\n\nSee the `JMESPath specification`_ for more information.\n\n.. _JMESPath specification: http://jmespath.org/specification.html\n\n\nProgrammatic usage\n------------------\n\n.. code-block:: python\n\n   import json, sys\n   from eliottree import tasks_from_iterable, render_tasks\n   # Or `codecs.getwriter('utf-8')(sys.stdout).write` on Python 2.\n   render_tasks(sys.stdout.write, tasks, colorize=True)\n\nSee :code:`help(render_tasks)` and :code:`help(tasks_from_iterable)` from a\nPython REPL for more information.\n\nConfiguration\n-------------\n\nCommand-line options may have custom defaults specified by way of a config file.\nThe config file can be passed with the ``--config`` argument, or will be read from\n``~/.config/eliot-tree/config.json``. See `config.example.json`_ for an\nexample.\n\nUse the ``--show-default-config`` command-line option to display the default\nconfiguration, suitable for redirecting to a file. Use the\n``--show-current-config`` command-line option to display the current effective\nconfiguration.\n\n.. _\\_cli.py: https://github.com/jonathanj/eliottree/blob/master/src/eliottree/_cli.py\n.. _config.example.json: https://github.com/jonathanj/eliottree/blob/master/config.example.json\n\nTheme overrides\n~~~~~~~~~~~~~~~\n\nTheme colors can be overridden via the ``theme_overrides`` key in the config file.\nThe value of this key is itself a JSON object, each key is the name of a theme\ncolor and each value is a JSON list. This list should contain three values:\n\n1. Foreground color, terminal color name or code; or ``null`` for the default color.\n2. Background color, terminal color name or code; or ``null`` for the default color.\n3. An optional array of color attribute names or codes; or ``null`` for the\n   default attribute.\n\nFor example, to override the ``root`` theme color to be bold magenta, and the\n``prop`` theme color to be red:\n\n.. code-block:: json\n\n   {\n     \"theme_overrides\": {\n       \"root\": [\"magenta\", null, [\"bold\"]],\n       \"prop_key\": [\"red\"]\n     }\n   }\n\nSee `_theme.py`_ for theme color names and the `colored`_ Python package for\navailable color and attribute constants.\n\n.. _\\_theme.py: https://github.com/jonathanj/eliottree/blob/master/src/eliottree/_theme.py\n.. _colored: https://pypi.org/project/colored/\n\nContribute\n----------\n\nSee <https://github.com/jonathanj/eliottree> for details.\n\n\n.. |build| image:: https://travis-ci.org/jonathanj/eliottree.svg?branch=master\n.. _build: https://travis-ci.org/jonathanj/eliottree\n\n.. |coverage| image:: https://coveralls.io/repos/jonathanj/eliottree/badge.svg\n.. _coverage: https://coveralls.io/r/jonathanj/eliottree\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonathanj/eliottree", "keywords": "", "license": "MIT", "maintainer": "Jonathan Jacobs", "maintainer_email": "jonathan@jsphere.com", "name": "eliot-tree", "package_url": "https://pypi.org/project/eliot-tree/", "platform": "", "project_url": "https://pypi.org/project/eliot-tree/", "project_urls": {"Homepage": "https://github.com/jonathanj/eliottree"}, "release_url": "https://pypi.org/project/eliot-tree/19.0.1/", "requires_dist": ["six (>=1.13.0)", "jmespath (>=0.7.1)", "iso8601 (>=0.1.10)", "colored (>=1.4.2)", "toolz (>=0.8.2)", "eliot (>=1.6.0)", "win-unicode-console (>=0.5) ; platform_system == \"Windows\"", "testtools (>=1.8.0) ; extra == 'test'"], "requires_python": "", "summary": "Render Eliot logs as an ASCII tree", "version": "19.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/jonathanj/eliottree\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9967e3600e537104444d57fef3b0f0362ea1dc88/68747470733a2f2f7472617669732d63692e6f72672f6a6f6e617468616e6a2f656c696f74747265652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/jonathanj/eliottree\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41dbbd94c9c02150206f51b9b68cee24e6ee68d1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6f6e617468616e6a2f656c696f74747265652f62616467652e737667\"></a></p>\n<p>Render <a href=\"https://github.com/scatterhq/eliot\" rel=\"nofollow\">Eliot</a> logs as an ASCII tree.</p>\n<p>This output:</p>\n<img alt=\"https://github.com/jonathanj/eliottree/raw/master/doc/example_eliot_log.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35a416283e7d348c7f6027329ca2a88497d537f7/68747470733a2f2f6769746875622e636f6d2f6a6f6e617468616e6a2f656c696f74747265652f7261772f6d61737465722f646f632f6578616d706c655f656c696f745f6c6f672e706e67\">\n<p>(or as text)</p>\n<pre>$ eliot-tree eliot.log\nf3a32bb3-ea6b-457c-aa99-08a3d0491ab4\n\u2514\u2500\u2500 app:soap:client:request/1 \u21d2 started <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:28:56 \u29d6 <span class=\"m\">1</span>.238s\n    \u251c\u2500\u2500 dump: /home/user/dump_files/20150303/1425356936.28_Client_req.xml\n    \u251c\u2500\u2500 soapAction: a_soap_action\n    \u251c\u2500\u2500 uri: http://example.org/soap\n    \u251c\u2500\u2500 app:soap:client:success/2/1 \u21d2 started <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:28:57 \u29d6 <span class=\"m\">0</span>.000s\n    \u2502   \u2514\u2500\u2500 app:soap:client:success/2/2 \u21d2 succeeded <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:28:57\n    \u2502       \u2514\u2500\u2500 dump: /home/user/dump_files/20150303/1425356937.52_Client_res.xml\n    \u2514\u2500\u2500 app:soap:client:request/3 \u21d2 succeeded <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:28:57\n        \u2514\u2500\u2500 status: <span class=\"m\">200</span>\n\n 89a56df5-d808-4a7c-8526-e603aae2e2f2\n \u2514\u2500\u2500 app:soap:service:request/1 \u21d2 started <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:31:08 \u29d6 <span class=\"m\">3</span>.482s\n     \u251c\u2500\u2500 dump: /home/user/dump_files/20150303/1425357068.03_Service_req.xml\n     \u251c\u2500\u2500 soapAction: method\n     \u251c\u2500\u2500 uri: /endpoints/soap/method\n     \u251c\u2500\u2500 app:soap:service:success/2/1 \u21d2 started <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:31:11 \u29d6 <span class=\"m\">0</span>.001s\n     \u2502   \u2514\u2500\u2500 app:soap:service:success/2/2 \u21d2 succeeded <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:31:11\n     \u2502       \u2514\u2500\u2500 dump: /home/user/dump_files/20150303/1425357071.51_Service_res.xml\n     \u2514\u2500\u2500 app:soap:service:request/3 \u21d2 succeeded <span class=\"m\">2015</span>-03-03 <span class=\"m\">04</span>:31:11\n         \u2514\u2500\u2500 status: <span class=\"m\">200</span>\n</pre>\n<p>was generated from:</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"dump\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/home/user/dump_files/20150303/1425356936.28_Client_req.xml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425356936.278875</span><span class=\"p\">,</span> <span class=\"s2\">\"uri\"</span><span class=\"o\">:</span> <span class=\"s2\">\"http://example.org/soap\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"started\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:client:request\"</span><span class=\"p\">,</span> <span class=\"s2\">\"soapAction\"</span><span class=\"o\">:</span> <span class=\"s2\">\"a_soap_action\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425356937.516579</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:client:success\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"started\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:client:success\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dump\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/home/user/dump_files/20150303/1425356937.52_Client_res.xml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425356937.517077</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"succeeded\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"status\"</span><span class=\"o\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"f3a32bb3-ea6b-457c-aa99-08a3d0491ab4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:client:request\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425356937.517161</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"succeeded\"</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"dump\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/home/user/dump_files/20150303/1425357068.03_Service_req.xml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425357068.032091</span><span class=\"p\">,</span> <span class=\"s2\">\"uri\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/endpoints/soap/method\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"started\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"89a56df5-d808-4a7c-8526-e603aae2e2f2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:service:request\"</span><span class=\"p\">,</span> <span class=\"s2\">\"soapAction\"</span><span class=\"o\">:</span> <span class=\"s2\">\"method\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425357071.51233</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"89a56df5-d808-4a7c-8526-e603aae2e2f2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:service:success\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"started\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"89a56df5-d808-4a7c-8526-e603aae2e2f2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:service:success\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dump\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/home/user/dump_files/20150303/1425357071.51_Service_res.xml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425357071.513453</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"succeeded\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]}</span>\n<span class=\"p\">{</span><span class=\"s2\">\"status\"</span><span class=\"o\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s2\">\"task_uuid\"</span><span class=\"o\">:</span> <span class=\"s2\">\"89a56df5-d808-4a7c-8526-e603aae2e2f2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"task_level\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s2\">\"action_type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"app:soap:service:request\"</span><span class=\"p\">,</span> <span class=\"s2\">\"timestamp\"</span><span class=\"o\">:</span> <span class=\"mf\">1425357071.513992</span><span class=\"p\">,</span> <span class=\"s2\">\"action_status\"</span><span class=\"o\">:</span> <span class=\"s2\">\"succeeded\"</span><span class=\"p\">}</span>\n</pre>\n<div id=\"command-line-options\">\n<h2>Command-line options</h2>\n<p>Consult the output of <tt><span class=\"pre\">eliot-tree</span> <span class=\"pre\">--help</span></tt> to see a complete list of command-line\noptions.</p>\n</div>\n<div id=\"streaming\">\n<h2>Streaming</h2>\n<p>It\u2019s possible to pipe data into eliot-tree, from a tailed log for example, and\nhave it rendered incrementally. There is a caveat though: Trees are only\nrendered once an end message\u2014a success or failure status\u2014for the tree\u2019s root\naction appears in the data.</p>\n</div>\n<div id=\"selecting-filtering-tasks\">\n<h2>Selecting / filtering tasks</h2>\n<div id=\"by-task-uuid\">\n<h3>By task UUID</h3>\n<p>Entire task trees can be selected by UUID with the <tt><span class=\"pre\">--task-uuid</span></tt> (<tt><span class=\"pre\">-u</span></tt>)\ncommand-line option.</p>\n</div>\n<div id=\"by-start-end-date\">\n<h3>By start / end date</h3>\n<p>Individual tasks can be selected based on their timestamp, use <tt><span class=\"pre\">--start</span></tt> to\nselect tasks after an ISO8601 date-time, and <tt><span class=\"pre\">--end</span></tt> to select tasks before an\nISO8601 date-time.</p>\n</div>\n<div id=\"by-custom-query\">\n<h3>By custom query</h3>\n<p>Custom task selection can be done with the <tt><span class=\"pre\">--select</span></tt> command-line option, the\nsyntax of which is <a href=\"http://jmespath.org/\" rel=\"nofollow\">JMESPath</a>, and is applied to the original Eliot JSON\nstructures. Any data that appears within an Eliot task structure can be queried.\nOnly the matching tasks (and all of their children) will be displayed, the\nparents of the task structure (by <tt>task_uuid</tt>) will be elided.</p>\n<p>An important thing to note is that the query should be used as a <em>predicate</em> (it\nshould describe a boolean condition), not to narrow a JSON data structure, as\nmany of the examples on the JMESPath site illustrate. The reason for this is\nthat Eliot tasks are not stored as one large nested JSON structure, they are\ninstead many small structures that are linked together by metadata\n(<tt>task_uuid</tt>), which is not a structure than JMESPath is ideally equipped to\nquery.</p>\n<p>The <tt><span class=\"pre\">--select</span></tt> argument can be supplied multiple times to mimic logical AND,\nthat is all <tt><span class=\"pre\">--select</span></tt> predicates must pass in order for a task or node to be\nselected.</p>\n<div id=\"examples\">\n<h4>Examples</h4>\n<p>Select all tasks that contain a <tt>uri</tt> key, regardless of its value:</p>\n<pre>--select <span class=\"s1\">'uri'</span>\n</pre>\n<p>Select all Eliot action tasks of type <tt>http_client:request</tt>:</p>\n<pre>--select <span class=\"s1\">'action_type == `\"http_client:request\"`'</span>\n</pre>\n<p>Backquotes are used to represent raw JSON values in JMESPath, <tt>`500`</tt> is the\nnumber 500, <tt>`\"500\"`</tt> is the string \u201c500\u201d.</p>\n<p>Select all tasks that have an <tt>http_status</tt> of 401 or 500:</p>\n<pre>--select <span class=\"s1\">'contains(`[401, 500]`, status)'</span>\n</pre>\n<p>Select all tasks that have an <tt>http_status</tt> of 401 that were also made to a\n<tt>uri</tt> containing the text <tt>/criticalEndpoint</tt>:</p>\n<pre>--select <span class=\"s1\">'http_status == `401`'</span> <span class=\"se\">\\\n</span>--select <span class=\"s1\">'uri &amp;&amp; contains(uri, `\"/criticalEndpoint\"`)'</span>\n</pre>\n<p>Here <tt><span class=\"pre\">--select</span></tt> is passed twice to mimic a logic AND condition, it is also\npossible to use the JMESPath <tt>&amp;&amp;</tt> operator. There is also a test for the\nexistence of the <tt>uri</tt> key to guard against calling the <tt>contains()</tt>\nfunction with a null subject.</p>\n<p>See the <a href=\"http://jmespath.org/specification.html\" rel=\"nofollow\">JMESPath specification</a> for more information.</p>\n</div>\n</div>\n</div>\n<div id=\"programmatic-usage\">\n<h2>Programmatic usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span><span class=\"o\">,</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eliottree</span> <span class=\"kn\">import</span> <span class=\"n\">tasks_from_iterable</span><span class=\"p\">,</span> <span class=\"n\">render_tasks</span>\n<span class=\"c1\"># Or `codecs.getwriter('utf-8')(sys.stdout).write` on Python 2.</span>\n<span class=\"n\">render_tasks</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">,</span> <span class=\"n\">tasks</span><span class=\"p\">,</span> <span class=\"n\">colorize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>See <code>help(render_tasks)</code> and <code>help(tasks_from_iterable)</code> from a\nPython REPL for more information.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Command-line options may have custom defaults specified by way of a config file.\nThe config file can be passed with the <tt><span class=\"pre\">--config</span></tt> argument, or will be read from\n<tt><span class=\"pre\">~/.config/eliot-tree/config.json</span></tt>. See <a href=\"https://github.com/jonathanj/eliottree/blob/master/config.example.json\" rel=\"nofollow\">config.example.json</a> for an\nexample.</p>\n<p>Use the <tt><span class=\"pre\">--show-default-config</span></tt> command-line option to display the default\nconfiguration, suitable for redirecting to a file. Use the\n<tt><span class=\"pre\">--show-current-config</span></tt> command-line option to display the current effective\nconfiguration.</p>\n<div id=\"theme-overrides\">\n<h3>Theme overrides</h3>\n<p>Theme colors can be overridden via the <tt>theme_overrides</tt> key in the config file.\nThe value of this key is itself a JSON object, each key is the name of a theme\ncolor and each value is a JSON list. This list should contain three values:</p>\n<ol>\n<li>Foreground color, terminal color name or code; or <tt>null</tt> for the default color.</li>\n<li>Background color, terminal color name or code; or <tt>null</tt> for the default color.</li>\n<li>An optional array of color attribute names or codes; or <tt>null</tt> for the\ndefault attribute.</li>\n</ol>\n<p>For example, to override the <tt>root</tt> theme color to be bold magenta, and the\n<tt>prop</tt> theme color to be red:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"theme_overrides\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"root\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"magenta\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"bold\"</span><span class=\"p\">]],</span>\n    <span class=\"nt\">\"prop_key\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"red\"</span><span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>See <a href=\"https://github.com/jonathanj/eliottree/blob/master/src/eliottree/_theme.py\" rel=\"nofollow\">_theme.py</a> for theme color names and the <a href=\"https://pypi.org/project/colored/\" rel=\"nofollow\">colored</a> Python package for\navailable color and attribute constants.</p>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>See &lt;<a href=\"https://github.com/jonathanj/eliottree\" rel=\"nofollow\">https://github.com/jonathanj/eliottree</a>&gt; for details.</p>\n</div>\n\n          </div>"}, "last_serial": 6460661, "releases": {"15.0.0": [{"comment_text": "", "digests": {"md5": "a6466e2f6e1155535480dbb98ba06555", "sha256": "a9f4cc26a2be70db45b3217635641d320fb78b3972c27c4494e989076eba233b"}, "downloads": -1, "filename": "eliot_tree-15.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "a6466e2f6e1155535480dbb98ba06555", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5073, "upload_time": "2015-05-22T16:16:05", "upload_time_iso_8601": "2015-05-22T16:16:05.277367Z", "url": "https://files.pythonhosted.org/packages/59/41/d2f416042d8f203e52ba09ea82098bb9c4dc8a32331b7314e517314c62f5/eliot_tree-15.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3aed1b9b4b1660cb6b739a991d5fd46", "sha256": "3e00a977571d91057d98181b06f4470b3681bfc8c4e90597110a147d30dba6ed"}, "downloads": -1, "filename": "eliot-tree-15.0.0.tar.gz", "has_sig": false, "md5_digest": "b3aed1b9b4b1660cb6b739a991d5fd46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3517, "upload_time": "2015-05-22T16:16:08", "upload_time_iso_8601": "2015-05-22T16:16:08.641616Z", "url": "https://files.pythonhosted.org/packages/96/e2/cbb65903f2e6a2290e6ca8bc5a623b02cae1cec64192cdfc714b53e4f5f8/eliot-tree-15.0.0.tar.gz", "yanked": false}], "15.1.0": [{"comment_text": "", "digests": {"md5": "e9059f0c3781454416074af08b8a9d42", "sha256": "be78d9b44e96a70ec01f1b92bfd975f36bb5b163e7eabf681aebdba8c9971078"}, "downloads": -1, "filename": "eliot_tree-15.1.0-py2-none-any.whl", "has_sig": true, "md5_digest": "e9059f0c3781454416074af08b8a9d42", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12344, "upload_time": "2015-06-09T14:45:37", "upload_time_iso_8601": "2015-06-09T14:45:37.836721Z", "url": "https://files.pythonhosted.org/packages/9f/91/bd79dcd2a8e58e43cd33e4fb95b988e8610f25fed4c7a0a4253ad344ac9b/eliot_tree-15.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12963138ed3f1ab1eb7d6c9616e45ee2", "sha256": "34b6251cad20d45719f0d6d9790daafc4ae5e929737402a7993f5f8248e6b980"}, "downloads": -1, "filename": "eliot-tree-15.1.0.tar.gz", "has_sig": false, "md5_digest": "12963138ed3f1ab1eb7d6c9616e45ee2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9795, "upload_time": "2015-06-09T14:45:32", "upload_time_iso_8601": "2015-06-09T14:45:32.739184Z", "url": "https://files.pythonhosted.org/packages/61/c9/65a1536e444424308fd3ea84041ede2d96e144e17014be8d5d662d92b88f/eliot-tree-15.1.0.tar.gz", "yanked": false}], "15.2.0": [{"comment_text": "", "digests": {"md5": "31e51611184d35fa1d800e3ac89c5699", "sha256": "297b426dbbf8692e1cf7ddc6171de15c7dcfa138ca571781115260297c6ec1e6"}, "downloads": -1, "filename": "eliot_tree-15.2.0-py2-none-any.whl", "has_sig": true, "md5_digest": "31e51611184d35fa1d800e3ac89c5699", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12692, "upload_time": "2015-08-08T14:29:35", "upload_time_iso_8601": "2015-08-08T14:29:35.861427Z", "url": "https://files.pythonhosted.org/packages/e4/64/61094c3f1d762b13c157d8b62f69df98333a726a9347d333d3784a2408c1/eliot_tree-15.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6770741f13bc1b3b161035a2de1b46c1", "sha256": "4440bc35e3128afcc4490bc2784de00309196f24fd2614dc091193460df7f9ee"}, "downloads": -1, "filename": "eliot-tree-15.2.0.tar.gz", "has_sig": true, "md5_digest": "6770741f13bc1b3b161035a2de1b46c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10111, "upload_time": "2015-08-08T14:29:30", "upload_time_iso_8601": "2015-08-08T14:29:30.269709Z", "url": "https://files.pythonhosted.org/packages/c7/b5/ffe8a5679dcc388af52fd301838244e06782f9e3d70f47bae7ae7879a5d1/eliot-tree-15.2.0.tar.gz", "yanked": false}], "15.3.0": [{"comment_text": "", "digests": {"md5": "49b15f3e75c4a3e7af66052ac78cd91f", "sha256": "fd6fe91709fd195e59dbcbedb6e6858c809bf5c48826b1751b31b9cc62f2f557"}, "downloads": -1, "filename": "eliot_tree-15.3.0-py2-none-any.whl", "has_sig": true, "md5_digest": "49b15f3e75c4a3e7af66052ac78cd91f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13725, "upload_time": "2015-09-30T08:43:46", "upload_time_iso_8601": "2015-09-30T08:43:46.986152Z", "url": "https://files.pythonhosted.org/packages/5b/0e/2d5acc27058822e31abd05561d0097013e0651ca16b9dd4f33f6fd9c910e/eliot_tree-15.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14d4d660cf8df90056721c89f6462b83", "sha256": "9ea507498dc143bf06693d044bc660f4d070c44f3a633c585afca6a997745abd"}, "downloads": -1, "filename": "eliot-tree-15.3.0.tar.gz", "has_sig": true, "md5_digest": "14d4d660cf8df90056721c89f6462b83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10819, "upload_time": "2015-09-30T08:43:39", "upload_time_iso_8601": "2015-09-30T08:43:39.589788Z", "url": "https://files.pythonhosted.org/packages/88/63/48a8f50480255b4902b9ba3c4825d10fca9d47fd726679877ff076407839/eliot-tree-15.3.0.tar.gz", "yanked": false}], "17.0.0": [{"comment_text": "", "digests": {"md5": "0586f39e3c3ac4c4c3f598a338974c51", "sha256": "7eeb01e591a6883dcaaf7e1b91961009d97ed895009c7e75d9b0f4892721353a"}, "downloads": -1, "filename": "eliot_tree-17.0.0-py2-none-any.whl", "has_sig": true, "md5_digest": "0586f39e3c3ac4c4c3f598a338974c51", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 26005, "upload_time": "2017-02-18T22:36:24", "upload_time_iso_8601": "2017-02-18T22:36:24.552499Z", "url": "https://files.pythonhosted.org/packages/02/d9/585af501ee09d797f59ebe94369a0d2a20d3bf239795e663c7b8b055e228/eliot_tree-17.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3042c6a1d99f72b3e2d16074d88c08e", "sha256": "17869ed97314829026cfbca417c80d68b83687e5c858d4201a7b9b81ae35c337"}, "downloads": -1, "filename": "eliot-tree-17.0.0.tar.gz", "has_sig": true, "md5_digest": "e3042c6a1d99f72b3e2d16074d88c08e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20367, "upload_time": "2017-02-18T22:36:26", "upload_time_iso_8601": "2017-02-18T22:36:26.450474Z", "url": "https://files.pythonhosted.org/packages/30/28/235c69b8af0de834ac49a19581148baf1f7f2451efa0831c6e53e9ad6bf9/eliot-tree-17.0.0.tar.gz", "yanked": false}], "17.1.0": [{"comment_text": "", "digests": {"md5": "45c8a24a67eecec66f9aafae3ef562df", "sha256": "eb1be68964342afe126f06e247a84dd568aeffdba9735433e0f46881650bf43d"}, "downloads": -1, "filename": "eliot_tree-17.1.0-py2-none-any.whl", "has_sig": true, "md5_digest": "45c8a24a67eecec66f9aafae3ef562df", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25966, "upload_time": "2017-09-01T14:07:24", "upload_time_iso_8601": "2017-09-01T14:07:24.276485Z", "url": "https://files.pythonhosted.org/packages/cf/24/a406ed552aacf960e3e82cd7ff7bbf113501cb291d9f71fd6bcd3a4e1ca6/eliot_tree-17.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa69f041d98ad7607dbd017fd461456d", "sha256": "7046cd35cab94ca83182cd8fd8f2bedb87c8a55e42848a3581f2f95cdccdec62"}, "downloads": -1, "filename": "eliot-tree-17.1.0.tar.gz", "has_sig": true, "md5_digest": "fa69f041d98ad7607dbd017fd461456d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20505, "upload_time": "2017-09-01T14:07:26", "upload_time_iso_8601": "2017-09-01T14:07:26.309978Z", "url": "https://files.pythonhosted.org/packages/c2/0a/f37319d9e6580841ccba5af3dd7846eadc77e426fb3c1d41c253702eee0a/eliot-tree-17.1.0.tar.gz", "yanked": false}], "18.0.0": [{"comment_text": "", "digests": {"md5": "d2b0507134282c6a2a11fb4d82753f4f", "sha256": "c3fe7ee02e05cb85ca90223538415a61664c025f6c4818ec7346e7bc5bb5ed8e"}, "downloads": -1, "filename": "eliot_tree-18.0.0-py2-none-any.whl", "has_sig": true, "md5_digest": "d2b0507134282c6a2a11fb4d82753f4f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 78726, "upload_time": "2018-07-23T10:28:54", "upload_time_iso_8601": "2018-07-23T10:28:54.422788Z", "url": "https://files.pythonhosted.org/packages/a4/84/020b28a5daebcc3a621bb404700065e42050026fd5f6381e09f81a8b6fc1/eliot_tree-18.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e59960e62093f431aa7fc816f0dc8015", "sha256": "0fd796ce1a62701c527a15a46efe8ed4e0b3956b1f831a497f2adfc85240df11"}, "downloads": -1, "filename": "eliot_tree-18.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "e59960e62093f431aa7fc816f0dc8015", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 78736, "upload_time": "2018-07-23T10:28:56", "upload_time_iso_8601": "2018-07-23T10:28:56.728863Z", "url": "https://files.pythonhosted.org/packages/85/4a/fd5d16850c21fa737fa77be221c34e9ae1a3608b206200dfcc883c1d4d02/eliot_tree-18.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b431054e92917f4673ed2b0fe6b7c805", "sha256": "78ba207afa12540b7b881a78e50e61b6dfaeb2e9b3d2b2185b09b74524761561"}, "downloads": -1, "filename": "eliot-tree-18.0.0.tar.gz", "has_sig": true, "md5_digest": "b431054e92917f4673ed2b0fe6b7c805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76916, "upload_time": "2018-07-23T10:28:58", "upload_time_iso_8601": "2018-07-23T10:28:58.723877Z", "url": "https://files.pythonhosted.org/packages/8f/3a/915fd6cdd297400e3cace5ec5d575270dfe34e9e167a7e9936971ea8869a/eliot-tree-18.0.0.tar.gz", "yanked": false}], "18.1.0": [{"comment_text": "", "digests": {"md5": "95bb465912a35364fa6dcb23b9d04cc5", "sha256": "845a015e3471784594909add68dffda0bc4a053bd62303f70ebdc10f1ade8599"}, "downloads": -1, "filename": "eliot_tree-18.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "95bb465912a35364fa6dcb23b9d04cc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76142, "upload_time": "2018-07-30T09:24:36", "upload_time_iso_8601": "2018-07-30T09:24:36.260111Z", "url": "https://files.pythonhosted.org/packages/41/44/a3e7d302bafbaef10d935a027772e3db017d9f964e8c8f58ccf6f2849dcd/eliot_tree-18.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db0a09dfda3947bcedb88930e1c487c4", "sha256": "bf11f07f8181da4c12dfe838476b5140d215415257d991328642fdac2d840c0a"}, "downloads": -1, "filename": "eliot-tree-18.1.0.tar.gz", "has_sig": true, "md5_digest": "db0a09dfda3947bcedb88930e1c487c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74344, "upload_time": "2018-07-30T09:24:38", "upload_time_iso_8601": "2018-07-30T09:24:38.289256Z", "url": "https://files.pythonhosted.org/packages/46/f4/a7efc6488f8afa245b608b7f50312afea072f2595c2f5ac16b0125ed4c9d/eliot-tree-18.1.0.tar.gz", "yanked": false}], "18.1.1": [{"comment_text": "", "digests": {"md5": "514db5de40a598b4cf6300196ffcdbe3", "sha256": "71b8c46afdb3290487da8a84cef0b0391bb4cd78aeabcf93b5db5c021e465095"}, "downloads": -1, "filename": "eliot_tree-18.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "514db5de40a598b4cf6300196ffcdbe3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76145, "upload_time": "2018-07-30T10:08:25", "upload_time_iso_8601": "2018-07-30T10:08:25.496427Z", "url": "https://files.pythonhosted.org/packages/4e/24/2c884ec6c2f10a7c3b32047556b0c3180fa9e095c01917e2c713273be565/eliot_tree-18.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b58c7e737c22341da0a3d4c634fcd02", "sha256": "d492154cbc4093faf4492dbf503e87f51e27f89c7fc8697201157e0fb8d7d027"}, "downloads": -1, "filename": "eliot-tree-18.1.1.tar.gz", "has_sig": true, "md5_digest": "6b58c7e737c22341da0a3d4c634fcd02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74350, "upload_time": "2018-07-30T10:08:27", "upload_time_iso_8601": "2018-07-30T10:08:27.640187Z", "url": "https://files.pythonhosted.org/packages/e5/62/8b73c7970fcb5b8c69cf5c0aab1fe6125f498d10daa27db1d71629eb46f3/eliot-tree-18.1.1.tar.gz", "yanked": false}], "19.0.0": [{"comment_text": "", "digests": {"md5": "cd9c3632be671e3afc7f92f01265707b", "sha256": "26b984ac56d6660387dcdf45d12291b009016658aac00bc401b76dfa550ffc54"}, "downloads": -1, "filename": "eliot_tree-19.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "cd9c3632be671e3afc7f92f01265707b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39858, "upload_time": "2020-01-14T09:13:15", "upload_time_iso_8601": "2020-01-14T09:13:15.362255Z", "url": "https://files.pythonhosted.org/packages/ab/6d/622cce65f6aa0a3a591a9f3a86190d58735b5a2e86c0a4903d7fd665a504/eliot_tree-19.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45c0046621ac3d48c8a7f8cf220b6e80", "sha256": "64a635ed2feb313a730f1a2e48bd0bd0bfc3f6526fc0b1b93b9a15be5df60fec"}, "downloads": -1, "filename": "eliot-tree-19.0.0.tar.gz", "has_sig": false, "md5_digest": "45c0046621ac3d48c8a7f8cf220b6e80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51249, "upload_time": "2020-01-14T09:13:18", "upload_time_iso_8601": "2020-01-14T09:13:18.106048Z", "url": "https://files.pythonhosted.org/packages/85/f2/bdeb25f0aab000f9c622985f82fa6706d62cc7e7d09cd9e526431e6cf2b0/eliot-tree-19.0.0.tar.gz", "yanked": false}], "19.0.1": [{"comment_text": "", "digests": {"md5": "7e7535287263cf2b003bd6504244a76c", "sha256": "cfae0ecc4899ab9b995de79960e55d33ce6ef0faf697f35f5e5c7d73c6e56dec"}, "downloads": -1, "filename": "eliot_tree-19.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e7535287263cf2b003bd6504244a76c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40021, "upload_time": "2020-01-15T18:59:49", "upload_time_iso_8601": "2020-01-15T18:59:49.578695Z", "url": "https://files.pythonhosted.org/packages/13/5e/f3acee08dde54120cfee18371f086f994d5d5077f156c16cc81d39d83a86/eliot_tree-19.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4216f2e845400d828915e7cee5053a14", "sha256": "aac20b528944e6e3c9d33884104f06a8de3a1840ada15d07ea036e50b58cfba1"}, "downloads": -1, "filename": "eliot-tree-19.0.1.tar.gz", "has_sig": false, "md5_digest": "4216f2e845400d828915e7cee5053a14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47573, "upload_time": "2020-01-15T18:59:51", "upload_time_iso_8601": "2020-01-15T18:59:51.320838Z", "url": "https://files.pythonhosted.org/packages/27/2d/f63fd513883057bb05fb7a020b4f5be3874386c68d924e262e6918cde7ad/eliot-tree-19.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e7535287263cf2b003bd6504244a76c", "sha256": "cfae0ecc4899ab9b995de79960e55d33ce6ef0faf697f35f5e5c7d73c6e56dec"}, "downloads": -1, "filename": "eliot_tree-19.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e7535287263cf2b003bd6504244a76c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40021, "upload_time": "2020-01-15T18:59:49", "upload_time_iso_8601": "2020-01-15T18:59:49.578695Z", "url": "https://files.pythonhosted.org/packages/13/5e/f3acee08dde54120cfee18371f086f994d5d5077f156c16cc81d39d83a86/eliot_tree-19.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4216f2e845400d828915e7cee5053a14", "sha256": "aac20b528944e6e3c9d33884104f06a8de3a1840ada15d07ea036e50b58cfba1"}, "downloads": -1, "filename": "eliot-tree-19.0.1.tar.gz", "has_sig": false, "md5_digest": "4216f2e845400d828915e7cee5053a14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47573, "upload_time": "2020-01-15T18:59:51", "upload_time_iso_8601": "2020-01-15T18:59:51.320838Z", "url": "https://files.pythonhosted.org/packages/27/2d/f63fd513883057bb05fb7a020b4f5be3874386c68d924e262e6918cde7ad/eliot-tree-19.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:50 2020"}