{"info": {"author": "Adam Griffiths", "author_email": "adam.lw.griffiths@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: XML"], "description": "=======\nObj2XML\n=======\n\nConvert objects to XML quickly and easily.\n\n\nFeatures\n========\n\n* Easily convert objects using an XML template.\n* Supports node lists and sub-documents.\n* Objects don't need to know about XML paths, flat objects can become deep XML documents.\n* Dynamically inject XML at creation time.\n\n\nExamples\n========\n\nSimple document::\n\n    from obj2xml import XML_Object, XML_Property, XML_TextProperty\n\n\n    class MyExampleXML(XML_Object):\n        version = XML_Property(['root', 'version'], 1.0)\n        test_value = XML_Property(['root', 'test-value'], 'Default Value')\n        no_default_value = XML_Property(['root', 'no-default'])\n\n        text_node = XML_TextProperty(['root', 'text-node-1'])\n        manual_text_node = XML_Property(['root', 'text-node-2', '_text'])\n\n    obj = MyExampleXML()\n    obj.test_value = 'Another value'\n    obj.no_default_value = 'This value was hidden before'\n    obj.a_text_value = 'Over-rode the default text'\n    obj.text_node = 'This is some text'\n    obj.manual_text_node = 'This is some more text'\n\n    print(obj)\n\n    <?xml version=\"1.0\" ?>\n    <root no-default=\"This value was hidden before\" test-value=\"Another value\" version=\"1.0\">\n      <text-node-2>This is some more text</text-node-2>\n      <text-node-1>This is some text</text-node-1>\n    </root>\n\n\nFor further examples, look in the `examples` directory.\n\n\nDependencies\n============\n\n* `pydict2xml <https://github.com/delfick/python-dict2xml>`_\n\n\nAuthors\n=======\n\n* `Adam Griffiths <https://github.com/adamlwgriffiths>`_\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adamlwgriffiths/obj2xml", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "obj2xml", "package_url": "https://pypi.org/project/obj2xml/", "platform": "any", "project_url": "https://pypi.org/project/obj2xml/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/adamlwgriffiths/obj2xml"}, "release_url": "https://pypi.org/project/obj2xml/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Convenient XML creation using objects", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Convert objects to XML quickly and easily.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Easily convert objects using an XML template.</li>\n<li>Supports node lists and sub-documents.</li>\n<li>Objects don\u2019t need to know about XML paths, flat objects can become deep XML documents.</li>\n<li>Dynamically inject XML at creation time.</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Simple document:</p>\n<pre>from obj2xml import XML_Object, XML_Property, XML_TextProperty\n\n\nclass MyExampleXML(XML_Object):\n    version = XML_Property(['root', 'version'], 1.0)\n    test_value = XML_Property(['root', 'test-value'], 'Default Value')\n    no_default_value = XML_Property(['root', 'no-default'])\n\n    text_node = XML_TextProperty(['root', 'text-node-1'])\n    manual_text_node = XML_Property(['root', 'text-node-2', '_text'])\n\nobj = MyExampleXML()\nobj.test_value = 'Another value'\nobj.no_default_value = 'This value was hidden before'\nobj.a_text_value = 'Over-rode the default text'\nobj.text_node = 'This is some text'\nobj.manual_text_node = 'This is some more text'\n\nprint(obj)\n\n&lt;?xml version=\"1.0\" ?&gt;\n&lt;root no-default=\"This value was hidden before\" test-value=\"Another value\" version=\"1.0\"&gt;\n  &lt;text-node-2&gt;This is some more text&lt;/text-node-2&gt;\n  &lt;text-node-1&gt;This is some text&lt;/text-node-1&gt;\n&lt;/root&gt;\n</pre>\n<p>For further examples, look in the <cite>examples</cite> directory.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://github.com/delfick/python-dict2xml\" rel=\"nofollow\">pydict2xml</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li><a href=\"https://github.com/adamlwgriffiths\" rel=\"nofollow\">Adam Griffiths</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1544688, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "fd1fd57bfa07a78724f36eb7abb99679", "sha256": "1ab44a23cfa1fd267f5cd12b3c2718cf4af74e123f5e07ff83d79bc038f10f34"}, "downloads": -1, "filename": "obj2xml-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fd1fd57bfa07a78724f36eb7abb99679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3449, "upload_time": "2015-05-13T01:01:40", "upload_time_iso_8601": "2015-05-13T01:01:40.301677Z", "url": "https://files.pythonhosted.org/packages/fb/2e/1c001437dd4e3579beb9536f7bae59c312add52c8dc4e1888d43e49974c4/obj2xml-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd1fd57bfa07a78724f36eb7abb99679", "sha256": "1ab44a23cfa1fd267f5cd12b3c2718cf4af74e123f5e07ff83d79bc038f10f34"}, "downloads": -1, "filename": "obj2xml-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fd1fd57bfa07a78724f36eb7abb99679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3449, "upload_time": "2015-05-13T01:01:40", "upload_time_iso_8601": "2015-05-13T01:01:40.301677Z", "url": "https://files.pythonhosted.org/packages/fb/2e/1c001437dd4e3579beb9536f7bae59c312add52c8dc4e1888d43e49974c4/obj2xml-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}