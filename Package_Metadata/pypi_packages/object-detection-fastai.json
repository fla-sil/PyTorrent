{"info": {"author": "Christian Marzahl", "author_email": "christian.marzahl@gamil.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ObjectDetection\nSome experiments with object detection in PyTorch and [FastAi](https://www.fast.ai/).\nThis repo is created for educational reasons and to get a deeper understanding of [RetinaNet](https://arxiv.org/abs/1708.02002) and object detection general. If you like it, please let me know, if you find any bugs or tips for improvements also. \n\n# Install\n\n```\npip install object-detection-fastai\n```\n\nTest: [Coco Colab](https://colab.research.google.com/drive/1qUEy1w8uYT2PQhan77RIn8NhfE_bMk63)\n\n# Update old code\n\n```python\n# Old imports:\nfrom helper.object_detection_helper import *\nfrom loss.RetinaNetFocalLoss import RetinaNetFocalLoss\nfrom models.RetinaNet import RetinaNet\nfrom callbacks.callbacks import BBLossMetrics, BBMetrics, PascalVOCMetric\n\n# New imports\nfrom object_detection_fastai.helper.object_detection_helper import *\nfrom object_detection_fastai.loss.RetinaNetFocalLoss import RetinaNetFocalLoss\nfrom object_detection_fastai.models.RetinaNet import RetinaNet\nfrom object_detection_fastai.callbacks.callbacks import BBLossMetrics, BBMetrics, PascalVOCMetric\n```\n\n\n[![RetinaNet WSI](http://img.youtube.com/vi/xCcdVgV1rRA/0.jpg)](https://www.youtube.com/watch?v=xCcdVgV1rRA \"RetinaNet WSI\")\n\nThe basline for this notebook was created by [Sylvain Gugger](https://github.com/sgugger) from FastAi [DevNotebook](https://github.com/fastai/fastai_docs/blob/master/dev_nb/102a_coco.ipynb). Thank you very much, it was a great starting point and I'm a big fan off your work.\n\n\n# Publications using this code:\n\n[x] [Deep Learning-Based Quantification of Pulmonary Hemosiderophages in Cytology Slides](https://arxiv.org/abs/1908.04767)\n\n# Examples:\n- [Medical images](object_detection_fastai/examples/Cells_Retina_Net.ipynb)\n- [Coco subset](object_detection_fastai/examples/CocoTiny_Retina_Net.ipynb)\n- [Coco Colab](object_detection_fastai/https://colab.research.google.com/drive/1qUEy1w8uYT2PQhan77RIn8NhfE_bMk63)\n\n# Results:\n\n![Cell detection](Images/Cells1.png \"Cell detection\")\n![Coco Chair](Images/Chair.png \"Chair\")\n![Coco Couch](Images/Couch.png \"Couch\")\n![Coco Vase](Images/Vase.png \"Vase\")\n\n# Features:\n\n[x] Coco Metric at train time via callback \n![Coco Metrics](Images/TrainCocoMetrics.png \"Metrics\")\n[x] Flexibility\n```python\n# use the feature map sizes 32,18,8,4 with 32 channels and two conv layers for detection and classification\nRetinaNet(encoder, n_classes=data.train_ds.c, n_anchors=18, sizes=[32,16,8,4], chs=32, final_bias=-4., n_conv=2)\n'''\n  (classifier): Sequential(\n    (0): Sequential(\n      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (1): ReLU()\n    )\n    (1): Sequential(\n      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (1): ReLU()\n    )\n    (2): Conv2d(32, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  )\n```\n\n```python\n# use the feature map sizes 32 with 8 channels and three conv layers for detection and classification\nRetinaNet(encoder, n_classes=data.train_ds.c, n_anchors=3, sizes=[32], chs=8, final_bias=-4., n_conv=3)\n```\n\n[x] Debug anchor matches for training.\n\n\nOn the left image we see objects that are represented by anchors.\nOn the right objects with no corresponding anchors for training.\n![Anchors](Images/anchors.png \"anchors\")\nThe size of the smallest anchors should be further decreased to match the small objects on the right image.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ChristianMarzahl/ObjectDetection", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "object-detection-fastai", "package_url": "https://pypi.org/project/object-detection-fastai/", "platform": "", "project_url": "https://pypi.org/project/object-detection-fastai/", "project_urls": {"Homepage": "https://github.com/ChristianMarzahl/ObjectDetection"}, "release_url": "https://pypi.org/project/object-detection-fastai/0.0.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Uses RetinaNet with FastAi", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ObjectDetection</h1>\n<p>Some experiments with object detection in PyTorch and <a href=\"https://www.fast.ai/\" rel=\"nofollow\">FastAi</a>.\nThis repo is created for educational reasons and to get a deeper understanding of <a href=\"https://arxiv.org/abs/1708.02002\" rel=\"nofollow\">RetinaNet</a> and object detection general. If you like it, please let me know, if you find any bugs or tips for improvements also.</p>\n<h1>Install</h1>\n<pre><code>pip install object-detection-fastai\n</code></pre>\n<p>Test: <a href=\"https://colab.research.google.com/drive/1qUEy1w8uYT2PQhan77RIn8NhfE_bMk63\" rel=\"nofollow\">Coco Colab</a></p>\n<h1>Update old code</h1>\n<pre><span class=\"c1\"># Old imports:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">helper.object_detection_helper</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">loss.RetinaNetFocalLoss</span> <span class=\"kn\">import</span> <span class=\"n\">RetinaNetFocalLoss</span>\n<span class=\"kn\">from</span> <span class=\"nn\">models.RetinaNet</span> <span class=\"kn\">import</span> <span class=\"n\">RetinaNet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">callbacks.callbacks</span> <span class=\"kn\">import</span> <span class=\"n\">BBLossMetrics</span><span class=\"p\">,</span> <span class=\"n\">BBMetrics</span><span class=\"p\">,</span> <span class=\"n\">PascalVOCMetric</span>\n\n<span class=\"c1\"># New imports</span>\n<span class=\"kn\">from</span> <span class=\"nn\">object_detection_fastai.helper.object_detection_helper</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">object_detection_fastai.loss.RetinaNetFocalLoss</span> <span class=\"kn\">import</span> <span class=\"n\">RetinaNetFocalLoss</span>\n<span class=\"kn\">from</span> <span class=\"nn\">object_detection_fastai.models.RetinaNet</span> <span class=\"kn\">import</span> <span class=\"n\">RetinaNet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">object_detection_fastai.callbacks.callbacks</span> <span class=\"kn\">import</span> <span class=\"n\">BBLossMetrics</span><span class=\"p\">,</span> <span class=\"n\">BBMetrics</span><span class=\"p\">,</span> <span class=\"n\">PascalVOCMetric</span>\n</pre>\n<p><a href=\"https://www.youtube.com/watch?v=xCcdVgV1rRA\" rel=\"nofollow\" title=\"RetinaNet WSI\"><img alt=\"RetinaNet WSI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29bc6fe81af34eaa338bc08648aa6616d6ae947f/687474703a2f2f696d672e796f75747562652e636f6d2f76692f78436364566756317252412f302e6a7067\"></a></p>\n<p>The basline for this notebook was created by <a href=\"https://github.com/sgugger\" rel=\"nofollow\">Sylvain Gugger</a> from FastAi <a href=\"https://github.com/fastai/fastai_docs/blob/master/dev_nb/102a_coco.ipynb\" rel=\"nofollow\">DevNotebook</a>. Thank you very much, it was a great starting point and I'm a big fan off your work.</p>\n<h1>Publications using this code:</h1>\n<p>[x] <a href=\"https://arxiv.org/abs/1908.04767\" rel=\"nofollow\">Deep Learning-Based Quantification of Pulmonary Hemosiderophages in Cytology Slides</a></p>\n<h1>Examples:</h1>\n<ul>\n<li><a href=\"object_detection_fastai/examples/Cells_Retina_Net.ipynb\" rel=\"nofollow\">Medical images</a></li>\n<li><a href=\"object_detection_fastai/examples/CocoTiny_Retina_Net.ipynb\" rel=\"nofollow\">Coco subset</a></li>\n<li><a href=\"object_detection_fastai/https://colab.research.google.com/drive/1qUEy1w8uYT2PQhan77RIn8NhfE_bMk63\" rel=\"nofollow\">Coco Colab</a></li>\n</ul>\n<h1>Results:</h1>\n<p><img alt=\"Cell detection\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9230c6ebd9c24fb2c52e7dfa7b3da83099b1d88/496d616765732f43656c6c73312e706e67\">\n<img alt=\"Coco Chair\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39b0c7679aad09aa9521f8c77c26296e0f82848d/496d616765732f43686169722e706e67\">\n<img alt=\"Coco Couch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7044660e3d5b459cf4fc403d4ab613332cec277/496d616765732f436f7563682e706e67\">\n<img alt=\"Coco Vase\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60c8574d3a852e8143cdada5d2f4c6ff17e0b2b8/496d616765732f566173652e706e67\"></p>\n<h1>Features:</h1>\n<p>[x] Coco Metric at train time via callback\n<img alt=\"Coco Metrics\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91ccb87e917a2d822d81b25ea0fd0c14cabec3dd/496d616765732f547261696e436f636f4d6574726963732e706e67\">\n[x] Flexibility</p>\n<pre><span class=\"c1\"># use the feature map sizes 32,18,8,4 with 32 channels and two conv layers for detection and classification</span>\n<span class=\"n\">RetinaNet</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"p\">,</span> <span class=\"n\">n_classes</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">train_ds</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">n_anchors</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">chs</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">final_bias</span><span class=\"o\">=-</span><span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"n\">n_conv</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"s1\">'''</span>\n<span class=\"s1\">  (classifier): Sequential(</span>\n<span class=\"s1\">    (0): Sequential(</span>\n<span class=\"s1\">      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span>\n<span class=\"s1\">      (1): ReLU()</span>\n<span class=\"s1\">    )</span>\n<span class=\"s1\">    (1): Sequential(</span>\n<span class=\"s1\">      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span>\n<span class=\"s1\">      (1): ReLU()</span>\n<span class=\"s1\">    )</span>\n<span class=\"s1\">    (2): Conv2d(32, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span>\n<span class=\"s1\">  )</span>\n</pre>\n<pre><span class=\"c1\"># use the feature map sizes 32 with 8 channels and three conv layers for detection and classification</span>\n<span class=\"n\">RetinaNet</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"p\">,</span> <span class=\"n\">n_classes</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">train_ds</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">n_anchors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">32</span><span class=\"p\">],</span> <span class=\"n\">chs</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">final_bias</span><span class=\"o\">=-</span><span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"n\">n_conv</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>[x] Debug anchor matches for training.</p>\n<p>On the left image we see objects that are represented by anchors.\nOn the right objects with no corresponding anchors for training.\n<img alt=\"Anchors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b347e8167a5d4032fcca3ee18275615330d28ca/496d616765732f616e63686f72732e706e67\">\nThe size of the smallest anchors should be further decreased to match the small objects on the right image.</p>\n\n          </div>"}, "last_serial": 6977919, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "f77e91494cc0faa69b94051e877677a8", "sha256": "ae0c3aaa50956b837269abdbfe253fe2c9a70c9b43c957d8136156608d3f8d16"}, "downloads": -1, "filename": "object_detection_fastai-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f77e91494cc0faa69b94051e877677a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25091, "upload_time": "2020-02-24T12:36:32", "upload_time_iso_8601": "2020-02-24T12:36:32.367799Z", "url": "https://files.pythonhosted.org/packages/98/0f/fab9cf2a0b1f61ba21061a873dc274690fe6790c5d0c327e3ebb4094f0fe/object_detection_fastai-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d82275b16d20d8449abfd4c0a2719a4a", "sha256": "5c29d45b18131ef3a4aa8bd3e72c37015d40d2fc593cf6013a7367dd7da075c6"}, "downloads": -1, "filename": "object-detection-fastai-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d82275b16d20d8449abfd4c0a2719a4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20273, "upload_time": "2020-02-24T12:36:34", "upload_time_iso_8601": "2020-02-24T12:36:34.706246Z", "url": "https://files.pythonhosted.org/packages/b6/d7/91e8acf207bd75fc5ee4af3a9b14ec482f9d74e64e997da75a049cba8ad0/object-detection-fastai-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d5f6699258690319050143b1b3b3308d", "sha256": "6ac604aa1e90c01874639168d35fa41f11c736c63d8d851e1463f179145f5c92"}, "downloads": -1, "filename": "object_detection_fastai-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d5f6699258690319050143b1b3b3308d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27492, "upload_time": "2020-02-24T13:48:44", "upload_time_iso_8601": "2020-02-24T13:48:44.794331Z", "url": "https://files.pythonhosted.org/packages/61/9d/8b45ca7d16c24d4f64ee5fffc3d76ae24f53ee8572abfc71e45ec3f74ac6/object_detection_fastai-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a88a84802abc1d4365a86be5aa43e9ae", "sha256": "a08bbe7439599c40b159a6b3f141570178874a542d57762ae12a8dce30f818b7"}, "downloads": -1, "filename": "object-detection-fastai-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a88a84802abc1d4365a86be5aa43e9ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22311, "upload_time": "2020-02-24T13:48:47", "upload_time_iso_8601": "2020-02-24T13:48:47.136454Z", "url": "https://files.pythonhosted.org/packages/97/5e/fb1a3bfebe51e72bb0322bcf69b1349703c5beaba879edf3ef5e452774e2/object-detection-fastai-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f60b290dd0d743afe4bc4ac85d8a5037", "sha256": "726442a379975c63aca9c192e7bfa9f29186b055f20aafa384439657312fbaec"}, "downloads": -1, "filename": "object_detection_fastai-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f60b290dd0d743afe4bc4ac85d8a5037", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27573, "upload_time": "2020-04-08T13:45:05", "upload_time_iso_8601": "2020-04-08T13:45:05.141854Z", "url": "https://files.pythonhosted.org/packages/ad/01/c422ee77bdd84927e1ec25f500c8f8628d19c9952ce562b89fd36ab3270a/object_detection_fastai-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efafb6b689d5e62c469b5f19df5bb306", "sha256": "6f1c2c7cc0564453c2e09c359b8360e3ffcdc50501b50020cf7558c99d40221d"}, "downloads": -1, "filename": "object-detection-fastai-0.0.5.tar.gz", "has_sig": false, "md5_digest": "efafb6b689d5e62c469b5f19df5bb306", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22401, "upload_time": "2020-04-08T13:45:07", "upload_time_iso_8601": "2020-04-08T13:45:07.630731Z", "url": "https://files.pythonhosted.org/packages/fe/f0/1e633fc766a35f220330ffb2c3c4559a18633aad97e00d94d3bef104283e/object-detection-fastai-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f60b290dd0d743afe4bc4ac85d8a5037", "sha256": "726442a379975c63aca9c192e7bfa9f29186b055f20aafa384439657312fbaec"}, "downloads": -1, "filename": "object_detection_fastai-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f60b290dd0d743afe4bc4ac85d8a5037", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27573, "upload_time": "2020-04-08T13:45:05", "upload_time_iso_8601": "2020-04-08T13:45:05.141854Z", "url": "https://files.pythonhosted.org/packages/ad/01/c422ee77bdd84927e1ec25f500c8f8628d19c9952ce562b89fd36ab3270a/object_detection_fastai-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efafb6b689d5e62c469b5f19df5bb306", "sha256": "6f1c2c7cc0564453c2e09c359b8360e3ffcdc50501b50020cf7558c99d40221d"}, "downloads": -1, "filename": "object-detection-fastai-0.0.5.tar.gz", "has_sig": false, "md5_digest": "efafb6b689d5e62c469b5f19df5bb306", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22401, "upload_time": "2020-04-08T13:45:07", "upload_time_iso_8601": "2020-04-08T13:45:07.630731Z", "url": "https://files.pythonhosted.org/packages/fe/f0/1e633fc766a35f220330ffb2c3c4559a18633aad97e00d94d3bef104283e/object-detection-fastai-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}