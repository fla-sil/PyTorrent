{"info": {"author": "Lorenz Schori", "author_email": "lo@znerol.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Framework :: Twisted", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Multimedia :: Graphics :: Capture"], "description": "txExiftool\n==========\n\n.. image:: https://travis-ci.org/znerol/txexiftool.svg?branch=master\n    :target: https://travis-ci.org/znerol/txexiftool\n\n\nExiftool_ protocol and stream endpoint plugin to be used with twisted_.\n\n.. _Exiftool: http://www.sno.phy.queensu.ca/~phil/exiftool/\n.. _twisted: https://twistedmatrix.com/\n\n\nUsage\n-----\n\n::\n\n    from twisted.internet import defer, endpoints, protocol, reactor\n    from txexiftool import ExiftoolProtocol\n\n    @defer.inlineCallbacks\n    def test():\n        # Construct an exiftool endpoint. If the tool is installed in a custom\n        # location, specify the path to the binary as the first argument. E.g.\n        # 'exiftool:/path/to/exiftool'\n        ep = endpoints.clientFromString(reactor, 'exiftool')\n\n        # Instantiate the protocol by connecting to the endpoint\n        f = protocol.Factory.forProtocol(ExiftoolProtocol)\n        p = yield ep.connect(f)\n\n        # Run commands and retrieve results.\n        metadata = yield p.execute('-j', '/usr/share/pixmaps/gtkvim.png')\n        print metadata\n\n        # Disconnect\n        yield p.loseConnection()\n\n        reactor.stop()\n\n    reactor.callWhenRunning(test)\n    reactor.run()\n\n\nLicense\n-------\n\nThe software is subject to the MIT license.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/znerol/txexiftool", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "txExiftool", "package_url": "https://pypi.org/project/txExiftool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txExiftool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/znerol/txexiftool"}, "release_url": "https://pypi.org/project/txExiftool/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Exiftool protocol and stream endpoint plugin to be used with Twisted", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/znerol/txexiftool\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/znerol/txexiftool.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee620338fdb5b21304ab6649d7f7be2bff3c8907/68747470733a2f2f7472617669732d63692e6f72672f7a6e65726f6c2f747865786966746f6f6c2e7376673f6272616e63683d6d6173746572\"></a>\n<p><a href=\"http://www.sno.phy.queensu.ca/~phil/exiftool/\" rel=\"nofollow\">Exiftool</a> protocol and stream endpoint plugin to be used with <a href=\"https://twistedmatrix.com/\" rel=\"nofollow\">twisted</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>from twisted.internet import defer, endpoints, protocol, reactor\nfrom txexiftool import ExiftoolProtocol\n\n@defer.inlineCallbacks\ndef test():\n    # Construct an exiftool endpoint. If the tool is installed in a custom\n    # location, specify the path to the binary as the first argument. E.g.\n    # 'exiftool:/path/to/exiftool'\n    ep = endpoints.clientFromString(reactor, 'exiftool')\n\n    # Instantiate the protocol by connecting to the endpoint\n    f = protocol.Factory.forProtocol(ExiftoolProtocol)\n    p = yield ep.connect(f)\n\n    # Run commands and retrieve results.\n    metadata = yield p.execute('-j', '/usr/share/pixmaps/gtkvim.png')\n    print metadata\n\n    # Disconnect\n    yield p.loseConnection()\n\n    reactor.stop()\n\nreactor.callWhenRunning(test)\nreactor.run()\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The software is subject to the MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 1907890, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "451d49b3a8a9ca6cd9d891f196ac3b4d", "sha256": "9d07bab5eb0cbfd559ef5035d61127fbff60110846f27ddd381abd81a6f9c42e"}, "downloads": -1, "filename": "txExiftool-0.1.3.tar.gz", "has_sig": true, "md5_digest": "451d49b3a8a9ca6cd9d891f196ac3b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4422, "upload_time": "2016-01-16T22:50:19", "upload_time_iso_8601": "2016-01-16T22:50:19.262844Z", "url": "https://files.pythonhosted.org/packages/67/5a/2ba52db90233fbb23983c6b0f2656f22aed773184140d98cbb7a170e2aab/txExiftool-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "451d49b3a8a9ca6cd9d891f196ac3b4d", "sha256": "9d07bab5eb0cbfd559ef5035d61127fbff60110846f27ddd381abd81a6f9c42e"}, "downloads": -1, "filename": "txExiftool-0.1.3.tar.gz", "has_sig": true, "md5_digest": "451d49b3a8a9ca6cd9d891f196ac3b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4422, "upload_time": "2016-01-16T22:50:19", "upload_time_iso_8601": "2016-01-16T22:50:19.262844Z", "url": "https://files.pythonhosted.org/packages/67/5a/2ba52db90233fbb23983c6b0f2656f22aed773184140d98cbb7a170e2aab/txExiftool-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:15 2020"}