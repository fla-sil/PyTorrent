{"info": {"author": "Brant Faircloth, Jonathan Chang, Mike Alfaro", "author_email": "brant.faircloth+tapir@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "Purpose\n*******\n\n*tapir* contains programs to estimate and plot phylogenetic informativeness for\nlarge datasets.\n\n\nCiting tapir\n************\n\nWhen using tapir, please cite:\n\n- Faircloth BC, Chang J, Alfaro ME: *tapir* enables high throughput analysis of\n  phylogenetic informativeness. `<https://github.com/faircloth-lab/tapir>`_\n\n- Townsend JP: Profiling phylogenetic informativeness. Systematic Biol. 2007,\n  56:222-231.\n\n- Pond SLK, Frost SDW, Muse SV: HyPhy: hypothesis testing using phylogenies.\n  Bioinformatics 2005, 21:676-679.\n\nDependencies\n************\n\n- hyphy2 (please `download <https://github.com/faircloth-lab/tapir/downloads>`_ or build a **single-threaded** hyphy2)\n- Python 2.6\n- numpy\n- scipy\n- dendropy\n\nInstallation\n*************\n\nFor **ALL** platforms, you must download a hyphy binary for your\nplatform (osx or linux) and place that within your $PATH::\n\n    wget https://github.com/downloads/faircloth-lab/tapir/hyphy2.osx.gz\n    gunzip hyphy2.*.gz\n    chmod 0700 hyphy2.*\n    mv hyphy2.* ~/Bin/hyphy2\n\nTo install the other dependencies (numpy, scipy), you may need to\ninstall a Fortran compiler on linux/osx:\n\nLinux\n-----\n\nOn linux (ubuntu/debian), use::\n\n    apt-get install gfortran libatlas-base-dev liblapack-dev\n\nInstall tapir and dependencies, which include numpy and scipy (the\nreason we installed the dependencies above)::\n\n    pip install tapir\n\nTo plot results, you will also need to::\n\n    apt-get install r-base r-base-dev\n    pip install rpy2\n\nOSX\n---\n\nIt is easiest just to install the `scipy superpack\n<http://stronginference.com/scipy-superpack/>`_.  This will install the\ndependencies that tapir needs.  After installing the superpack, using\npip, install tapir::\n\n    pip install tapir\n\nAlternatively, you can simply try to install tapir using::\n\n    pip install tapir\n\nTo plot results, you need to `install R\n<http://cran.r-project.org/bin/macosx/>`_ and then install rpy2::\n\n    pip install rpy2\n\n\nOther OSs\n----------\n\nInstall `numpy <http://numpy.scipy.org>`_, `scipy <http://scipy.org>`_,\nand `dendropy <http://packages.python.org/DendroPy/>`_ for your\nplatform.  Then::\n\n    wget http://pypi.python.org/packages/source/t/tapir/tapir-1.0.tar.gz\n    tar -xzvf tapir-1.0.tar.gz\n    cd tapir*\n    python setup.py build\n    python setup.py test\n    python setup.py install\n\nPlotting\n--------\n\nPlotting is optional.  To install the plotting dependencies, see\nInstallation, above.\n\nTesting\n*******\n\nIf you didn't run the tests using `python setup.py test` above, you can also::\n\n    import tapir\n    tapir.test()\n\nUse\n***\n\nThe `estimate_p_i.py` code calls a batch file for hyphy that is in\n`templates/`.  This file needs to be in the same position relative to\nwherever you put `estimate_p_i.py`.  If you install thins as above, you'll\nbe fine, for the moment.\n\nTo run::\n\n    cd /path/to/tapir/\n\n    python tapir_compute.py Input_Folder_of_Nexus_Files/ Input.tree \\\n        --output Output_Directory \\\n        --epochs=32-42,88-98,95-105,164-174 \\\n        --times=37,93,100,170 \\\n        --multiprocessing\n\n`--multiprocessing` is optional, without it, each locus will be run\nconsecutively.\n\nIf you have already run the above and saved results to your output\nfolder (see below), you can use the pre-existing site-rate records\nrather than estimating those again with::\n\n     python tapir_compute.py Input_Folder_of_Site_Rate_JSON_Files/ Input.tree \\\n        --output Output_Directory \\\n        --epochs=32-42,88-98,95-105,164-174 \\\n        --times=37,93,100,170 \\\n        --multiprocessing \\\n        --site-rates\n\nResults\n*******\n\ntapir writes results to a `sqlite <http://www.sqlite.org/>`_ database in the\noutput directory of your choosing.  This directory also holds site rate\nfiles in `JSON <http://www.json.org/>`_ format for each locus passed\nthrough `tapir_compute.py`.\n\nYou can access the results in the database as follows.  For more examples,\nincluding plotting, see the \n`documentation <http://faircloth-lab.github.com/tapir/>`_\n\n- crank up sqlite::\n\n    sqlite3  Output_Directory/phylogenetic-informativeness.sqlite\n\n- get integral data for all epochs::\n\n    select locus, interval, pi from loci, interval where loci.id = interval.id\n\n- get integral data for a specific epoch::\n\n    select locus, interval, pi from loci, interval \n    where interval = '95-105' and loci.id = interval.id;\n\n- get the count of loci having max(PI) at different epochs::\n\n    create temporary table max as select id, max(pi) as max from interval group by id;\n\n    create temporary table t as select interval.id, interval, max from interval, max \n    where interval.pi = max.max;\n\n    select interval, count(*) from t group by interval;\n\nPlotting Results\n****************\n\ntapir contains plotting scripts to help you plot data within a results database\nand compare data between different databases.  tapir uses RPY and R to\ndo this.  You can also plot data directly in R.  Until we finish the\ndocumentation, please see the \n`wiki <https://github.com/faircloth-lab/tapir/wiki/getting-data-from-the-database>`_ \nfor examples.\n\nAcknowledgements\n****************\n\nBCF thanks SP Hubbell, PA Gowaty, RT Brumfield, TC Glenn, NG Crawford,\nJE McCormack, and M Reasel. JHLC and MEA thank J Eastman and J Brown for\nthoughtful comments about PI. We thank Francesc Lopez-Giraldez and\nJeffrey Townsend for providing us with a copy of their web-application\nsource code and helpful discussion.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/faircloth-lab/tapir/", "keywords": null, "license": "http://www.opensource.org/licenses/BSD-3-Clause", "maintainer": null, "maintainer_email": null, "name": "tapir", "package_url": "https://pypi.org/project/tapir/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tapir/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/faircloth-lab/tapir/"}, "release_url": "https://pypi.org/project/tapir/1.0/", "requires_dist": null, "requires_python": null, "summary": "Tally Approximations of Phylogenetic Informativeness Rapidly (TAPIR)", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"purpose\">\n<h2>Purpose</h2>\n<p><em>tapir</em> contains programs to estimate and plot phylogenetic informativeness for\nlarge datasets.</p>\n</div>\n<div id=\"citing-tapir\">\n<h2>Citing tapir</h2>\n<p>When using tapir, please cite:</p>\n<ul>\n<li>Faircloth BC, Chang J, Alfaro ME: <em>tapir</em> enables high throughput analysis of\nphylogenetic informativeness. <a href=\"https://github.com/faircloth-lab/tapir\" rel=\"nofollow\">https://github.com/faircloth-lab/tapir</a></li>\n<li>Townsend JP: Profiling phylogenetic informativeness. Systematic Biol. 2007,\n56:222-231.</li>\n<li>Pond SLK, Frost SDW, Muse SV: HyPhy: hypothesis testing using phylogenies.\nBioinformatics 2005, 21:676-679.</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>hyphy2 (please <a href=\"https://github.com/faircloth-lab/tapir/downloads\" rel=\"nofollow\">download</a> or build a <strong>single-threaded</strong> hyphy2)</li>\n<li>Python 2.6</li>\n<li>numpy</li>\n<li>scipy</li>\n<li>dendropy</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For <strong>ALL</strong> platforms, you must download a hyphy binary for your\nplatform (osx or linux) and place that within your $PATH:</p>\n<pre>wget https://github.com/downloads/faircloth-lab/tapir/hyphy2.osx.gz\ngunzip hyphy2.*.gz\nchmod 0700 hyphy2.*\nmv hyphy2.* ~/Bin/hyphy2\n</pre>\n<p>To install the other dependencies (numpy, scipy), you may need to\ninstall a Fortran compiler on linux/osx:</p>\n<div id=\"linux\">\n<h3>Linux</h3>\n<p>On linux (ubuntu/debian), use:</p>\n<pre>apt-get install gfortran libatlas-base-dev liblapack-dev\n</pre>\n<p>Install tapir and dependencies, which include numpy and scipy (the\nreason we installed the dependencies above):</p>\n<pre>pip install tapir\n</pre>\n<p>To plot results, you will also need to:</p>\n<pre>apt-get install r-base r-base-dev\npip install rpy2\n</pre>\n</div>\n<div id=\"osx\">\n<h3>OSX</h3>\n<p>It is easiest just to install the <a href=\"http://stronginference.com/scipy-superpack/\" rel=\"nofollow\">scipy superpack</a>.  This will install the\ndependencies that tapir needs.  After installing the superpack, using\npip, install tapir:</p>\n<pre>pip install tapir\n</pre>\n<p>Alternatively, you can simply try to install tapir using:</p>\n<pre>pip install tapir\n</pre>\n<p>To plot results, you need to <a href=\"http://cran.r-project.org/bin/macosx/\" rel=\"nofollow\">install R</a> and then install rpy2:</p>\n<pre>pip install rpy2\n</pre>\n</div>\n<div id=\"other-oss\">\n<h3>Other OSs</h3>\n<p>Install <a href=\"http://numpy.scipy.org\" rel=\"nofollow\">numpy</a>, <a href=\"http://scipy.org\" rel=\"nofollow\">scipy</a>,\nand <a href=\"http://packages.python.org/DendroPy/\" rel=\"nofollow\">dendropy</a> for your\nplatform.  Then:</p>\n<pre>wget http://pypi.python.org/packages/source/t/tapir/tapir-1.0.tar.gz\ntar -xzvf tapir-1.0.tar.gz\ncd tapir*\npython setup.py build\npython setup.py test\npython setup.py install\n</pre>\n</div>\n<div id=\"plotting\">\n<h3>Plotting</h3>\n<p>Plotting is optional.  To install the plotting dependencies, see\nInstallation, above.</p>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>If you didn\u2019t run the tests using <cite>python setup.py test</cite> above, you can also:</p>\n<pre>import tapir\ntapir.test()\n</pre>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p>The <cite>estimate_p_i.py</cite> code calls a batch file for hyphy that is in\n<cite>templates/</cite>.  This file needs to be in the same position relative to\nwherever you put <cite>estimate_p_i.py</cite>.  If you install thins as above, you\u2019ll\nbe fine, for the moment.</p>\n<p>To run:</p>\n<pre>cd /path/to/tapir/\n\npython tapir_compute.py Input_Folder_of_Nexus_Files/ Input.tree \\\n    --output Output_Directory \\\n    --epochs=32-42,88-98,95-105,164-174 \\\n    --times=37,93,100,170 \\\n    --multiprocessing\n</pre>\n<p><cite>\u2013multiprocessing</cite> is optional, without it, each locus will be run\nconsecutively.</p>\n<p>If you have already run the above and saved results to your output\nfolder (see below), you can use the pre-existing site-rate records\nrather than estimating those again with:</p>\n<pre>python tapir_compute.py Input_Folder_of_Site_Rate_JSON_Files/ Input.tree \\\n   --output Output_Directory \\\n   --epochs=32-42,88-98,95-105,164-174 \\\n   --times=37,93,100,170 \\\n   --multiprocessing \\\n   --site-rates\n</pre>\n</div>\n<div id=\"results\">\n<h2>Results</h2>\n<p>tapir writes results to a <a href=\"http://www.sqlite.org/\" rel=\"nofollow\">sqlite</a> database in the\noutput directory of your choosing.  This directory also holds site rate\nfiles in <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON</a> format for each locus passed\nthrough <cite>tapir_compute.py</cite>.</p>\n<p>You can access the results in the database as follows.  For more examples,\nincluding plotting, see the\n<a href=\"http://faircloth-lab.github.com/tapir/\" rel=\"nofollow\">documentation</a></p>\n<ul>\n<li><p>crank up sqlite:</p>\n<pre>sqlite3  Output_Directory/phylogenetic-informativeness.sqlite\n</pre>\n</li>\n<li><p>get integral data for all epochs:</p>\n<pre>select locus, interval, pi from loci, interval where loci.id = interval.id\n</pre>\n</li>\n<li><p>get integral data for a specific epoch:</p>\n<pre>select locus, interval, pi from loci, interval\nwhere interval = '95-105' and loci.id = interval.id;\n</pre>\n</li>\n<li><p>get the count of loci having max(PI) at different epochs:</p>\n<pre>create temporary table max as select id, max(pi) as max from interval group by id;\n\ncreate temporary table t as select interval.id, interval, max from interval, max\nwhere interval.pi = max.max;\n\nselect interval, count(*) from t group by interval;\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"plotting-results\">\n<h2>Plotting Results</h2>\n<p>tapir contains plotting scripts to help you plot data within a results database\nand compare data between different databases.  tapir uses RPY and R to\ndo this.  You can also plot data directly in R.  Until we finish the\ndocumentation, please see the\n<a href=\"https://github.com/faircloth-lab/tapir/wiki/getting-data-from-the-database\" rel=\"nofollow\">wiki</a>\nfor examples.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>BCF thanks SP Hubbell, PA Gowaty, RT Brumfield, TC Glenn, NG Crawford,\nJE McCormack, and M Reasel. JHLC and MEA thank J Eastman and J Brown for\nthoughtful comments about PI. We thank Francesc Lopez-Giraldez and\nJeffrey Townsend for providing us with a copy of their web-application\nsource code and helpful discussion.</p>\n</div>\n\n          </div>"}, "last_serial": 800357, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "1f35210873e6d487318d103189dba0b4", "sha256": "e89853f117def8ed2e31efcc6207116a1922cc12462d79ccbc525cb15c072151"}, "downloads": -1, "filename": "tapir-1.0.tar.gz", "has_sig": false, "md5_digest": "1f35210873e6d487318d103189dba0b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121723, "upload_time": "2011-11-07T22:39:53", "upload_time_iso_8601": "2011-11-07T22:39:53.303997Z", "url": "https://files.pythonhosted.org/packages/81/f6/f4d869c79a52122c97a195671a59bc1a6b86295d66def4313fa03e1812bd/tapir-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f35210873e6d487318d103189dba0b4", "sha256": "e89853f117def8ed2e31efcc6207116a1922cc12462d79ccbc525cb15c072151"}, "downloads": -1, "filename": "tapir-1.0.tar.gz", "has_sig": false, "md5_digest": "1f35210873e6d487318d103189dba0b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121723, "upload_time": "2011-11-07T22:39:53", "upload_time_iso_8601": "2011-11-07T22:39:53.303997Z", "url": "https://files.pythonhosted.org/packages/81/f6/f4d869c79a52122c97a195671a59bc1a6b86295d66def4313fa03e1812bd/tapir-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:03 2020"}