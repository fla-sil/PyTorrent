{"info": {"author": "mgallet", "author_email": "github@19pouces.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Inventicode\n===========\n\nWeb app for registering objects (an object is just a name associated to a comment and a serial number) and printing sheets of labels with EAN13 barcodes or QR codes. You can also associate a state and a category to these objects.\n\nYou define models of paper (size, number, size and background image of labels) and template for labels.\n\nUse cases\n---------\n\n  * printing customized labels with QR or bar codes,\n  * changing the state or the category of a set of objects by only scanning their barcode, one-by-one, \n  * identify a given object by scanning its barcode in the search bar,\n  * displaying the object page by scanning its QR code.\n\nInstallation\n------------\n\n    sudo apt-get install python3.5 python3.5-dev build-essential\n    pip install inventicode\n    CONFIG_FILENAME=`inventicode-django  config ini -v 2 | head -n 1 | grep \".ini\" | cut -d '\"' -f 2`\n    # create required folders\n    mkdir -p `dirname $FILENAME` $HOME/inventicode\n    # prepare a limited configuration file\n    cat << EOF > $FILENAME\n    [global]\n    data = $HOME/inventicode\n    EOF\n    # create the database (SQLite by default)\n    inventicode-django migrate\n    # prepare static files (CSS, JS, \u2026)\n    inventicode-django collectstatic --noinput\n    # create an admin user\n    inventicode-django createsuperuser\n    inventicode-aiohttp\n\nYou can define new templates for each label, and the default one is:\n\n    {% load inventicode %}<h2>{{ code.name }}</h2>\n    <img class=\"name qr_code\" style=\"\" alt=\"{{ code.name }}\" src=\"{{ code.name|qr_code|base64_url }}\" />\n    <img class=\"short_identifier bar_code\" style=\"width: 4cm;\" alt=\"{{ code.short_identifier }}\" src=\"{{ code.short_identifier|bar_code:'ean13'|base64_url }}\" />\n    <h3>{{ code.long_identifier }}</h3>\n\nAvailable values are:\n\n  * code.name\n  * code.comment\n  * code.serial\n  * code.long_identifier  (URL to the model)\n  * code.short_identifier (unique code, usable as EAN13 barcode)\n\nIf you load `inventicode`, you can use some filters:\n\n  * `qr_code`: QR code as SVG (string)\n  * `bar_code`: bar code as SVG (string). Available barcodes are 'code39', 'ean', 'ean13', 'ean8', 'gs1', 'gtin', 'isbn', 'isbn10', 'isbn13', 'issn', 'jan', 'pzn', 'upc', 'upca'.\n  * `base64_url`: transform a string as an embedded base64 url.\n\nYou can also define a CSS for the whole page, and the default one is:\n\n    .qr_code {\n        width: 1cm;\n        height: 1cm;\n    }\n    h2 {\n        width: 100%;\n        text-align: center;\n    }\n    h3 {\n        text-align: center;\n        top: 1cm;\n        position: relative;\n        text-transform: uppercase;\n    }\n    img.bar_code {\n        width: 3cm;\n        top: 1cm;\n        left: -2cm;\n    }", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/d9pouces/inventicode", "keywords": "", "license": "CeCILL-B", "maintainer": "", "maintainer_email": "", "name": "Inventicode", "package_url": "https://pypi.org/project/Inventicode/", "platform": "", "project_url": "https://pypi.org/project/Inventicode/", "project_urls": {"Homepage": "https://github.com/d9pouces/inventicode"}, "release_url": "https://pypi.org/project/Inventicode/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Create labels with QR and barcodes.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Inventicode<br>===========<br><br>Web app for registering objects (an object is just a name associated to a comment and a serial number) and printing sheets of labels with EAN13 barcodes or QR codes. You can also associate a state and a category to these objects.<br><br>You define models of paper (size, number, size and background image of labels) and template for labels.<br><br>Use cases<br>---------<br><br>  * printing customized labels with QR or bar codes,<br>  * changing the state or the category of a set of objects by only scanning their barcode, one-by-one, <br>  * identify a given object by scanning its barcode in the search bar,<br>  * displaying the object page by scanning its QR code.<br><br>Installation<br>------------<br><br>    sudo apt-get install python3.5 python3.5-dev build-essential<br>    pip install inventicode<br>    CONFIG_FILENAME=`inventicode-django  config ini -v 2 | head -n 1 | grep \".ini\" | cut -d '\"' -f 2`<br>    # create required folders<br>    mkdir -p `dirname $FILENAME` $HOME/inventicode<br>    # prepare a limited configuration file<br>    cat &lt;&lt; EOF &gt; $FILENAME<br>    [global]<br>    data = $HOME/inventicode<br>    EOF<br>    # create the database (SQLite by default)<br>    inventicode-django migrate<br>    # prepare static files (CSS, JS, \u2026)<br>    inventicode-django collectstatic --noinput<br>    # create an admin user<br>    inventicode-django createsuperuser<br>    inventicode-aiohttp<br><br>You can define new templates for each label, and the default one is:<br><br>    {% load inventicode %}&lt;h2&gt;{{ code.name }}&lt;/h2&gt;<br>    &lt;img class=\"name qr_code\" style=\"\" alt=\"{{ code.name }}\" src=\"{{ code.name|qr_code|base64_url }}\" /&gt;<br>    &lt;img class=\"short_identifier bar_code\" style=\"width: 4cm;\" alt=\"{{ code.short_identifier }}\" src=\"{{ code.short_identifier|bar_code:'ean13'|base64_url }}\" /&gt;<br>    &lt;h3&gt;{{ code.long_identifier }}&lt;/h3&gt;<br><br>Available values are:<br><br>  * code.name<br>  * code.comment<br>  * code.serial<br>  * code.long_identifier  (URL to the model)<br>  * code.short_identifier (unique code, usable as EAN13 barcode)<br><br>If you load `inventicode`, you can use some filters:<br><br>  * `qr_code`: QR code as SVG (string)<br>  * `bar_code`: bar code as SVG (string). Available barcodes are 'code39', 'ean', 'ean13', 'ean8', 'gs1', 'gtin', 'isbn', 'isbn10', 'isbn13', 'issn', 'jan', 'pzn', 'upc', 'upca'.<br>  * `base64_url`: transform a string as an embedded base64 url.<br><br>You can also define a CSS for the whole page, and the default one is:<br><br>    .qr_code {<br>        width: 1cm;<br>        height: 1cm;<br>    }<br>    h2 {<br>        width: 100%;<br>        text-align: center;<br>    }<br>    h3 {<br>        text-align: center;<br>        top: 1cm;<br>        position: relative;<br>        text-transform: uppercase;<br>    }<br>    img.bar_code {<br>        width: 3cm;<br>        top: 1cm;<br>        left: -2cm;<br>    }\n          </div>"}, "last_serial": 2669690, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "cf2c143100c096ba2cd51f990299c271", "sha256": "4d35059b31816e983ee836642fffd12c5df95296a2f221f0522c4c2622e616db"}, "downloads": -1, "filename": "Inventicode-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cf2c143100c096ba2cd51f990299c271", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11483, "upload_time": "2017-02-26T15:15:55", "upload_time_iso_8601": "2017-02-26T15:15:55.469945Z", "url": "https://files.pythonhosted.org/packages/c0/95/244e7eee7fe81335b23fd0dca9daf44a13936b44626c9184b9542f55f4dc/Inventicode-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b7704481cb79be2d9c51b0004585487a", "sha256": "10cb370f6f7597b90e82f0bb30c14392c815a0d645d09073f967bd5a31f56b14"}, "downloads": -1, "filename": "Inventicode-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b7704481cb79be2d9c51b0004585487a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11488, "upload_time": "2017-02-26T22:33:24", "upload_time_iso_8601": "2017-02-26T22:33:24.989567Z", "url": "https://files.pythonhosted.org/packages/d9/cf/cab95d4f7f71335c36bab56f1ac7d77443f250ad891ee8bc09fccded5786/Inventicode-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7704481cb79be2d9c51b0004585487a", "sha256": "10cb370f6f7597b90e82f0bb30c14392c815a0d645d09073f967bd5a31f56b14"}, "downloads": -1, "filename": "Inventicode-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b7704481cb79be2d9c51b0004585487a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11488, "upload_time": "2017-02-26T22:33:24", "upload_time_iso_8601": "2017-02-26T22:33:24.989567Z", "url": "https://files.pythonhosted.org/packages/d9/cf/cab95d4f7f71335c36bab56f1ac7d77443f250ad891ee8bc09fccded5786/Inventicode-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:09 2020"}