{"info": {"author": "Alexander Abrosimov", "author_email": "to100100100@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Multimedia :: Graphics"], "description": "========\npyavagen\n========\n\n|build_badge| |versions_badge| |pypi_badge| |license_badge|\n\nGeneration of customizable avatars.\n\n**Requirements:**\n\n-  Python 3.3+\n-  Pillow\n\n**Installation:**\n\n::\n\n    pip install pyavagen\n\nAvatar types\n============\n\nFor avatar generation using the ``Avatar`` class.\n\n**Arguments:**\n\n-  ``kwargs`` - keyword arguments that are passed to specified avatar\\_class.\n-  ``avatar_type`` - avatar type that will be generates an image.\n\nTypes: \n\n1. ``pyavagen.SQUARE_AVATAR`` or ``'square'`` \n2. ``pyavagen.CHAR_AVATAR`` or ``'char'`` \n3. ``pyavagen.CHAR_SQUARE_AVATAR`` or ``'char_square'``\n\nAvatar types description is given below.\n\nChar avatar\n===========\n\nDraws a character on background with single color.\n\n|Demo 4| |Demo 5| |Demo 10| |Demo 12|\n\n**Usage:**\n\n.. code:: python\n\n\n    import pyavagen\n\n\n    avatar = pyavagen.Avatar(pyavagen.CHAR_AVATAR, size=500, string=\"Paul\")\n    avatar.generate().save('avatar.png') \n\n**Arguments:**\n\n-  ``size`` - size of output image. The integer type.\n-  ``string`` - first chars of two first words that separated whitespaces.\n   For example from string 'John Paul' draws \"JP\".\n   If passed an one word then draws a first char of this word.\n   For example from string 'John' draws \"J\". The string type.\n-  ``font`` - TrueType or OpenType font file. Path to font file. Default\n   Comfortaa-Regular.\n-  ``background_color`` - background color. If not passed that a will be\n   a random color from ``color_list``.\n-  ``font_size`` - size of font. The integer type. Has default value.\n-  ``font_color`` - color of font. The string type. Default white.\n-  ``font_outline`` - Outline of character. Default false.\n-  ``color_list`` - list of colors from which will be generating colors\n   for background. Default ``pyavagen.COLOR_LIST_FLAT``.\n\nSquare avatar\n=============\n\nDraws squares with different colors.\n\n|Demo 1| |Demo 2| |Demo 3| |Demo 11|\n\n**Usage:**\n\n.. code:: python\n\n\n    import pyavagen\n\n\n    avatar = pyavagen.Avatar(pyavagen.SQUARE_AVATAR, size=500)\n    avatar.generate().save('avatar.png')\n\n**Arguments:**\n\n-  ``size`` - size of output image. The integer type.\n-  ``squares_on_axis`` - number of squares on axis. The integer type.\n   Default random value from 3 to 4.\n-  ``blur_radius`` - blur radius. Used\n   ``PIL.ImageFilter.GaussianBlur``.The integer type. Default 1.\n-  ``rotate`` - image rotate. The integer type. Default random rotation.\n-  ``border_size`` - border size of square. The integer type. Default 0.\n-  ``border_color`` - border color of squares. The string type. Default\n   black.\n-  ``color_list`` - list of colors from which will be generating colors\n   for squares. By default a set of flat colors\n   (``pyavagen.COLOR_LIST_FLAT``). If ``color_list`` passed as an empty\n   list then will be generation a random color. There is also list of\n   colors in material style - ``pyavagen.COLOR_LIST_MATERIAL``.\n\n\nChar square avatar\n==================\n\nDraws a character on background with squares with different colors.\n\n|Demo 6| |Demo 7| |Demo 8| |Demo 9|\n\n**Usage:**\n\n.. code:: python\n\n\n    import pyavagen\n\n\n    avatar = pyavagen.Avatar(pyavagen.CHAR_SQUARE_AVATAR, size=500, string=\"Jack\")\n    avatar.generate().save('avatar.png') \n\n**Arguments:**\n\nThe same arguments as for Square avatar and Char avatar.\n\nTesting\n=======\n\nExecute ``tox`` from the project root.\n\n.. |Demo 1| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo1.png?raw=true\n.. |Demo 2| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo2.png?raw=true\n.. |Demo 3| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo3.png?raw=true\n.. |Demo 11| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo11.png?raw=true\n.. |Demo 4| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo4.png?raw=true\n.. |Demo 5| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo5.png?raw=true\n.. |Demo 10| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo10.png?raw=true\n.. |Demo 12| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo12.png?raw=true\n.. |Demo 6| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo6.png?raw=true\n.. |Demo 7| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo7.png?raw=true\n.. |Demo 8| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo8.png?raw=true\n.. |Demo 9| image:: https://github.com/abalx/pyavagen/blob/master/examples/demo9.png?raw=true\n\n.. |build_badge| image:: https://travis-ci.org/abalx/pyavagen.svg?branch=master\n    :target: https://travis-ci.org/abalx/pyavagen\n\n\n.. |license_badge| image:: https://img.shields.io/github/license/abalx/pyavagen.svg\n    :target: https://github.com/abalx/pyavagen/blob/development/LICENSE\n    \n.. |pypi_badge| image:: https://img.shields.io/pypi/v/pyavagen.svg   \n    :target: https://pypi.python.org/pypi/pyavagen/0.3.3\n\n.. |versions_badge| image:: https://img.shields.io/pypi/pyversions/pyavagen.svg\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abalx/pyavagen", "keywords": "image", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyavagen", "package_url": "https://pypi.org/project/pyavagen/", "platform": "", "project_url": "https://pypi.org/project/pyavagen/", "project_urls": {"Homepage": "https://github.com/abalx/pyavagen"}, "release_url": "https://pypi.org/project/pyavagen/0.3.3/", "requires_dist": null, "requires_python": "", "summary": "Generation of customizable avatars", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/abalx/pyavagen\" rel=\"nofollow\"><img alt=\"build_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32abcb67ec16acb237a0edc821c7d50d899d69d4/68747470733a2f2f7472617669732d63692e6f72672f6162616c782f707961766167656e2e7376673f6272616e63683d6d6173746572\"></a> <img alt=\"versions_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6071b79edf1128dd59cbc1c5f0af9878e6e3691/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707961766167656e2e737667\"> <a href=\"https://pypi.python.org/pypi/pyavagen/0.3.3\" rel=\"nofollow\"><img alt=\"pypi_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71df241445c6c830d1dd3977ffc1fb0bd85595ee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707961766167656e2e737667\"></a> <a href=\"https://github.com/abalx/pyavagen/blob/development/LICENSE\" rel=\"nofollow\"><img alt=\"license_badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f878732ddb5f846d461d1c32721c74b02fc95a3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6162616c782f707961766167656e2e737667\"></a></p>\n<p>Generation of customizable avatars.</p>\n<p><strong>Requirements:</strong></p>\n<ul>\n<li>Python 3.3+</li>\n<li>Pillow</li>\n</ul>\n<p><strong>Installation:</strong></p>\n<pre>pip install pyavagen\n</pre>\n<div id=\"avatar-types\">\n<h2>Avatar types</h2>\n<p>For avatar generation using the <tt>Avatar</tt> class.</p>\n<p><strong>Arguments:</strong></p>\n<ul>\n<li><tt>kwargs</tt> - keyword arguments that are passed to specified avatar_class.</li>\n<li><tt>avatar_type</tt> - avatar type that will be generates an image.</li>\n</ul>\n<p>Types:</p>\n<ol>\n<li><tt>pyavagen.SQUARE_AVATAR</tt> or <tt>'square'</tt></li>\n<li><tt>pyavagen.CHAR_AVATAR</tt> or <tt>'char'</tt></li>\n<li><tt>pyavagen.CHAR_SQUARE_AVATAR</tt> or <tt>'char_square'</tt></li>\n</ol>\n<p>Avatar types description is given below.</p>\n</div>\n<div id=\"char-avatar\">\n<h2>Char avatar</h2>\n<p>Draws a character on background with single color.</p>\n<p><img alt=\"Demo 4\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29232727d7c47533aebec2df19c736a34993d099/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f342e706e673f7261773d74727565\"> <img alt=\"Demo 5\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d514da8167ea9f93042f085c0017c4fc28791b09/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f352e706e673f7261773d74727565\"> <img alt=\"Demo 10\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e4b076d535de41c33d8e38c1eb0763e7422baec/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f31302e706e673f7261773d74727565\"> <img alt=\"Demo 12\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0dfb2a6e3ef84be1fdf75ae98064ec076e24b67b/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f31322e706e673f7261773d74727565\"></p>\n<p><strong>Usage:</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyavagen</span>\n\n\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">Avatar</span><span class=\"p\">(</span><span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">CHAR_AVATAR</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"s2\">\"Paul\"</span><span class=\"p\">)</span>\n<span class=\"n\">avatar</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'avatar.png'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Arguments:</strong></p>\n<ul>\n<li><tt>size</tt> - size of output image. The integer type.</li>\n<li><tt>string</tt> - first chars of two first words that separated whitespaces.\nFor example from string \u2018John Paul\u2019 draws \u201cJP\u201d.\nIf passed an one word then draws a first char of this word.\nFor example from string \u2018John\u2019 draws \u201cJ\u201d. The string type.</li>\n<li><tt>font</tt> - TrueType or OpenType font file. Path to font file. Default\nComfortaa-Regular.</li>\n<li><tt>background_color</tt> - background color. If not passed that a will be\na random color from <tt>color_list</tt>.</li>\n<li><tt>font_size</tt> - size of font. The integer type. Has default value.</li>\n<li><tt>font_color</tt> - color of font. The string type. Default white.</li>\n<li><tt>font_outline</tt> - Outline of character. Default false.</li>\n<li><tt>color_list</tt> - list of colors from which will be generating colors\nfor background. Default <tt>pyavagen.COLOR_LIST_FLAT</tt>.</li>\n</ul>\n</div>\n<div id=\"square-avatar\">\n<h2>Square avatar</h2>\n<p>Draws squares with different colors.</p>\n<p><img alt=\"Demo 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7aeed90b2f9669e9265bf18ff2fe753afcbf711e/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f312e706e673f7261773d74727565\"> <img alt=\"Demo 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24bd06e84829b2329da6c30f54803309e76579c3/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f322e706e673f7261773d74727565\"> <img alt=\"Demo 3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/656e814eb49ba4fe46b3f34c7832ae7bb389ce8b/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f332e706e673f7261773d74727565\"> <img alt=\"Demo 11\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24bfa32c84ea51e0e10333e48e3d528ddbf53204/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f31312e706e673f7261773d74727565\"></p>\n<p><strong>Usage:</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyavagen</span>\n\n\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">Avatar</span><span class=\"p\">(</span><span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">SQUARE_AVATAR</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n<span class=\"n\">avatar</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'avatar.png'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Arguments:</strong></p>\n<ul>\n<li><tt>size</tt> - size of output image. The integer type.</li>\n<li><tt>squares_on_axis</tt> - number of squares on axis. The integer type.\nDefault random value from 3 to 4.</li>\n<li><tt>blur_radius</tt> - blur radius. Used\n<tt>PIL.ImageFilter.GaussianBlur</tt>.The integer type. Default 1.</li>\n<li><tt>rotate</tt> - image rotate. The integer type. Default random rotation.</li>\n<li><tt>border_size</tt> - border size of square. The integer type. Default 0.</li>\n<li><tt>border_color</tt> - border color of squares. The string type. Default\nblack.</li>\n<li><tt>color_list</tt> - list of colors from which will be generating colors\nfor squares. By default a set of flat colors\n(<tt>pyavagen.COLOR_LIST_FLAT</tt>). If <tt>color_list</tt> passed as an empty\nlist then will be generation a random color. There is also list of\ncolors in material style - <tt>pyavagen.COLOR_LIST_MATERIAL</tt>.</li>\n</ul>\n</div>\n<div id=\"char-square-avatar\">\n<h2>Char square avatar</h2>\n<p>Draws a character on background with squares with different colors.</p>\n<p><img alt=\"Demo 6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a49bfa8b6c93f4d39a35f48b1dacea0a3455dbf/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f362e706e673f7261773d74727565\"> <img alt=\"Demo 7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28391f0a3a069e5532f9c76ec464c7805fae1076/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f372e706e673f7261773d74727565\"> <img alt=\"Demo 8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65e11c3830ac6a30a909054c748a32ad71b47168/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f382e706e673f7261773d74727565\"> <img alt=\"Demo 9\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76c79140c7dd1ca4768d792725610855bd05a6a2/68747470733a2f2f6769746875622e636f6d2f6162616c782f707961766167656e2f626c6f622f6d61737465722f6578616d706c65732f64656d6f392e706e673f7261773d74727565\"></p>\n<p><strong>Usage:</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyavagen</span>\n\n\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">Avatar</span><span class=\"p\">(</span><span class=\"n\">pyavagen</span><span class=\"o\">.</span><span class=\"n\">CHAR_SQUARE_AVATAR</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"s2\">\"Jack\"</span><span class=\"p\">)</span>\n<span class=\"n\">avatar</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'avatar.png'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Arguments:</strong></p>\n<p>The same arguments as for Square avatar and Char avatar.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Execute <tt>tox</tt> from the project root.</p>\n</div>\n\n          </div>"}, "last_serial": 3336218, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "303e5a99a22d4f2e9943e43ec6f8c352", "sha256": "93e8dd39a00b98cfab24ebb4158cbe4ec4b1ffac1809f8c2387bc60820287486"}, "downloads": -1, "filename": "pyavagen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "303e5a99a22d4f2e9943e43ec6f8c352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74394, "upload_time": "2017-05-13T13:47:19", "upload_time_iso_8601": "2017-05-13T13:47:19.385003Z", "url": "https://files.pythonhosted.org/packages/02/de/5ebe006f22f9d1b5623bcfb5eb9b9f5451a5627835b27d6182a9a09668fd/pyavagen-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "689ce7c755706956a9bacb2bca57ba2e", "sha256": "04ad7fe7ab601d0b4694f6d807888a784bea93975d748a1599e6a4d6dcf9d61a"}, "downloads": -1, "filename": "pyavagen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "689ce7c755706956a9bacb2bca57ba2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74448, "upload_time": "2017-05-13T14:00:58", "upload_time_iso_8601": "2017-05-13T14:00:58.802795Z", "url": "https://files.pythonhosted.org/packages/57/20/4a710506cbec4e3c23b7a4fbbbc83ff3f6d565aab4133efe1f02fcae64c1/pyavagen-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a9f224a51190a7e4ad2865106e07e2f3", "sha256": "d61c933f2cda3027863896247decf64d878ac693f3df7b56b75d01f41b30f072"}, "downloads": -1, "filename": "pyavagen-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a9f224a51190a7e4ad2865106e07e2f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74660, "upload_time": "2017-05-14T21:29:38", "upload_time_iso_8601": "2017-05-14T21:29:38.019609Z", "url": "https://files.pythonhosted.org/packages/79/e4/ec5576106808b89aadd35f93cf8a17e608dfc529f4514fc2346bdf4dbc1c/pyavagen-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8f792bf5ae25caed137f468ecc05e150", "sha256": "2a728ab583d3cb0c6abc09a653d1445da681b71391b2547495381745f6d02161"}, "downloads": -1, "filename": "pyavagen-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8f792bf5ae25caed137f468ecc05e150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74662, "upload_time": "2017-05-14T21:35:43", "upload_time_iso_8601": "2017-05-14T21:35:43.038999Z", "url": "https://files.pythonhosted.org/packages/87/b7/7c6dcfbf9fb5cc3debf632693044d1d83df4f06ab3b2c23935984b21a3c7/pyavagen-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4011a78877ce4a07cfdc289a3d7bf0a0", "sha256": "a2a8abd08cbdf447b48c7358ec8a9ef32d5139c3b78c51a8bdd774317dba3557"}, "downloads": -1, "filename": "pyavagen-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4011a78877ce4a07cfdc289a3d7bf0a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74796, "upload_time": "2017-10-28T23:20:00", "upload_time_iso_8601": "2017-10-28T23:20:00.166905Z", "url": "https://files.pythonhosted.org/packages/77/8d/a83c68bd59bb239fc366fd858208a3e74fc33306bda83c95909f6a2d9ce7/pyavagen-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "468b87eefe635896b94ca9a1bf13c778", "sha256": "559026b0d05c42c153f36be32569f8ae33088f695f8a1aaf487e96d24af24dc8"}, "downloads": -1, "filename": "pyavagen-0.3.1.tar.gz", "has_sig": false, "md5_digest": "468b87eefe635896b94ca9a1bf13c778", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75111, "upload_time": "2017-11-05T01:49:37", "upload_time_iso_8601": "2017-11-05T01:49:37.425814Z", "url": "https://files.pythonhosted.org/packages/84/50/09648bb0ebfed7f524d7e6e059080b3aa917ca8b9e9e4e66528e02c10fa6/pyavagen-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "84d2c4de28369dda857664ed13738caa", "sha256": "0f97f908d51eda45c14c5da060f1ef4be5b3a6d0b4061bd7492fbbf2cd34eece"}, "downloads": -1, "filename": "pyavagen-0.3.2.tar.gz", "has_sig": false, "md5_digest": "84d2c4de28369dda857664ed13738caa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75135, "upload_time": "2017-11-12T20:06:17", "upload_time_iso_8601": "2017-11-12T20:06:17.648701Z", "url": "https://files.pythonhosted.org/packages/80/ed/fafac84a02c8ae7d84d5c97e7cb6a83938336f113835876adaff1a8f67a1/pyavagen-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "56335a33ea0bdef3d8390f9042f8d6d3", "sha256": "3119c11975f018bfe176b93e3b78b4a9d796ba7e7db62a55520108e7eff8a887"}, "downloads": -1, "filename": "pyavagen-0.3.3.tar.gz", "has_sig": false, "md5_digest": "56335a33ea0bdef3d8390f9042f8d6d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75138, "upload_time": "2017-11-15T18:08:01", "upload_time_iso_8601": "2017-11-15T18:08:01.683619Z", "url": "https://files.pythonhosted.org/packages/b0/5b/53f1fc5cf089f0284882d0d88b4243c88cd3a97248f1da76b9c0dd3d08df/pyavagen-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56335a33ea0bdef3d8390f9042f8d6d3", "sha256": "3119c11975f018bfe176b93e3b78b4a9d796ba7e7db62a55520108e7eff8a887"}, "downloads": -1, "filename": "pyavagen-0.3.3.tar.gz", "has_sig": false, "md5_digest": "56335a33ea0bdef3d8390f9042f8d6d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75138, "upload_time": "2017-11-15T18:08:01", "upload_time_iso_8601": "2017-11-15T18:08:01.683619Z", "url": "https://files.pythonhosted.org/packages/b0/5b/53f1fc5cf089f0284882d0d88b4243c88cd3a97248f1da76b9c0dd3d08df/pyavagen-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:32 2020"}