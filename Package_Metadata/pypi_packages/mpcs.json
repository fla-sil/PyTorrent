{"info": {"author": "Rudolph Pienaar", "author_email": "rudolph.pienaar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pl-mpcs\n================================\n\n.. image:: https://badge.fury.io/py/mpcs.svg\n    :target: https://badge.fury.io/py/mpcs\n\n.. image:: https://travis-ci.org/FNNDSC/mpcs.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/mpcs\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pl-mpcs\n\n.. contents:: Table of Contents\n\n\nAbstract\n--------\n\nThis app simulates  a call to a remote Multi-Party Compute (MPC) in the context of a FreeSurfer workflow.\n\nThis particular application simply returns a z-score file to be consumed by a downstream plugin, typciall ``pl-z2labelmap``.\n\nNOTE: The <inputDir> is largely ignored by this plugin.\n\n\nSynopsis\n--------\n\n.. code:: html\n\n    python mpcs.py                                                  \\\n        [--random] [--seed <seed>]                                  \\\n        [-p <f_posRange>] [--posRange <f_posRange>]                 \\\n        [-n <f_negRange>] [--negRange <f_negRange>]                 \\\n        [-z <zFile>] [--zFile <zFile>]                              \\\n        [-v <level>] [--verbosity <level>]                          \\\n        [--version]                                                 \\\n        [--man]                                                     \\\n        [--meta]                                                    \\\n        <inputDir>\n        <outputDir> \n\n\nRun\n----\n\nThis ``plugin`` can be run in two modes: natively as a python package or as a containerized docker image.\n\nUsing PyPI\n~~~~~~~~~~\n\nTo run from PyPI, simply do a \n\n.. code:: bash\n\n    pip install mpcs\n\nand run with\n\n.. code:: bash\n\n    mpcs.py --man /tmp /tmp\n\nto get inline help. The app should also understand being called with only two positional arguments\n\n.. code:: bash\n\n    mpcs.py /some/input/directory /destination/directory\n\n\nUsing ``docker run``\n~~~~~~~~~~~~~~~~~~~~\n\nTo run using ``docker``, be sure to assign an \"input\" directory to ``/incoming`` and an output directory to ``/outgoing``. *Make sure that the* ``$(pwd)/out`` *directory is world writable!*\n\nNow, prefix all calls with \n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/out:/outgoing                             \\\n            fnndsc/pl-mpcs mpcs.py                                      \\\n\nThus, getting inline help is:\n\n.. code:: bash\n\n    mkdir in out && chmod 777 out\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-mpcs mpcs.py                                      \\\n            --man                                                       \\\n            /incoming /outgoing\n\nArguments\n---------\n\n.. code::\n\n    [--random] [--seed <seed>]\n    If specified, generate a z-score file based on <posRange> and \n    <negRange>. In addition, if a further optional <seed> is passed,\n    then initialize the random generator with that seed, otherwise\n    system time is used.\n\n    [-p <f_posRange>] [--posRange <f_posRange>]\n    Positive range for random max deviation generation.\n\n    [-n <f_negRange>] [--negRange <f_negRange>]\n    Negative range for random max deviation generation.\n\n    [-z <zFile>] [--zFile <zFile>]\n    z-score file to save in output directory. Defaults to 'zfile.csv'.\n\n    [-v <level>] [--verbosity <level>]\n    Verbosity level for app. Not used currently.\n\n    [--version]\n    If specified, print version number. \n    \n    [--man]\n    If specified, print (this) man page.\n\n    [--meta]\n    If specified, print plugin meta data.\n\n\nExamples\n--------\n\nCreate a z-file with values between -3.0 and +3.0\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    mkdir in out && chmod 777 out\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-mpcs mpcs.py                                      \\\n            -random --seed 1                                            \\\n            --posRange 3.0 --negRange -3.0                              \\\n            in out", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pl-mpcs", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mpcs", "package_url": "https://pypi.org/project/mpcs/", "platform": "", "project_url": "https://pypi.org/project/mpcs/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pl-mpcs"}, "release_url": "https://pypi.org/project/mpcs/1.0.10/", "requires_dist": null, "requires_python": "", "summary": "This app simulates an MPC compute call and creates a z-score file.", "version": "1.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/mpcs\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/mpcs.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43ebc9323611858b3cc2e5ac3249604bf6502979/68747470733a2f2f62616467652e667572792e696f2f70792f6d7063732e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/mpcs\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/mpcs.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/308fa0491d9711c90cb49508c49a5d15ec1ac8f2/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f6d7063732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pl-mpcs\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#abstract\" id=\"id1\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#synopsis\" id=\"id2\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#run\" id=\"id3\" rel=\"nofollow\">Run</a><ul>\n<li><a href=\"#using-pypi\" id=\"id4\" rel=\"nofollow\">Using PyPI</a></li>\n<li><a href=\"#using-docker-run\" id=\"id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#arguments\" id=\"id6\" rel=\"nofollow\">Arguments</a></li>\n<li><a href=\"#examples\" id=\"id7\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"abstract\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Abstract</a></h2>\n<p>This app simulates  a call to a remote Multi-Party Compute (MPC) in the context of a FreeSurfer workflow.</p>\n<p>This particular application simply returns a z-score file to be consumed by a downstream plugin, typciall <tt><span class=\"pre\">pl-z2labelmap</span></tt>.</p>\n<p>NOTE: The &lt;inputDir&gt; is largely ignored by this plugin.</p>\n</div>\n<div id=\"synopsis\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Synopsis</a></h2>\n<pre>python mpcs.py                                                  \\\n    [--random] [--seed <span class=\"p\">&lt;</span><span class=\"nt\">seed</span><span class=\"p\">&gt;</span>]                                  \\\n    [-p <span class=\"p\">&lt;</span><span class=\"nt\">f_posRange</span><span class=\"p\">&gt;</span>] [--posRange <span class=\"p\">&lt;</span><span class=\"nt\">f_posRange</span><span class=\"p\">&gt;</span>]                 \\\n    [-n <span class=\"p\">&lt;</span><span class=\"nt\">f_negRange</span><span class=\"p\">&gt;</span>] [--negRange <span class=\"p\">&lt;</span><span class=\"nt\">f_negRange</span><span class=\"p\">&gt;</span>]                 \\\n    [-z <span class=\"p\">&lt;</span><span class=\"nt\">zFile</span><span class=\"p\">&gt;</span>] [--zFile <span class=\"p\">&lt;</span><span class=\"nt\">zFile</span><span class=\"p\">&gt;</span>]                              \\\n    [-v <span class=\"p\">&lt;</span><span class=\"nt\">level</span><span class=\"p\">&gt;</span>] [--verbosity <span class=\"p\">&lt;</span><span class=\"nt\">level</span><span class=\"p\">&gt;</span>]                          \\\n    [--version]                                                 \\\n    [--man]                                                     \\\n    [--meta]                                                    \\\n    <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">outputDir</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"run\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Run</a></h2>\n<p>This <tt>plugin</tt> can be run in two modes: natively as a python package or as a containerized docker image.</p>\n<div id=\"using-pypi\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using PyPI</a></h3>\n<p>To run from PyPI, simply do a</p>\n<pre>pip install mpcs\n</pre>\n<p>and run with</p>\n<pre>mpcs.py --man /tmp /tmp\n</pre>\n<p>to get inline help. The app should also understand being called with only two positional arguments</p>\n<pre>mpcs.py /some/input/directory /destination/directory\n</pre>\n</div>\n<div id=\"using-docker-run\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></h3>\n<p>To run using <tt>docker</tt>, be sure to assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an output directory to <tt>/outgoing</tt>. <em>Make sure that the</em> <tt><span class=\"pre\">$(pwd)/out</span></tt> <em>directory is world writable!</em></p>\n<p>Now, prefix all calls with</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing                             <span class=\"se\">\\\n</span>        fnndsc/pl-mpcs mpcs.py                                      <span class=\"se\">\\</span>\n</pre>\n<p>Thus, getting inline help is:</p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-mpcs mpcs.py                                      <span class=\"se\">\\\n</span>        --man                                                       <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n</div>\n<div id=\"arguments\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Arguments</a></h2>\n<pre>[--random] [--seed &lt;seed&gt;]\nIf specified, generate a z-score file based on &lt;posRange&gt; and\n&lt;negRange&gt;. In addition, if a further optional &lt;seed&gt; is passed,\nthen initialize the random generator with that seed, otherwise\nsystem time is used.\n\n[-p &lt;f_posRange&gt;] [--posRange &lt;f_posRange&gt;]\nPositive range for random max deviation generation.\n\n[-n &lt;f_negRange&gt;] [--negRange &lt;f_negRange&gt;]\nNegative range for random max deviation generation.\n\n[-z &lt;zFile&gt;] [--zFile &lt;zFile&gt;]\nz-score file to save in output directory. Defaults to 'zfile.csv'.\n\n[-v &lt;level&gt;] [--verbosity &lt;level&gt;]\nVerbosity level for app. Not used currently.\n\n[--version]\nIf specified, print version number.\n\n[--man]\nIf specified, print (this) man page.\n\n[--meta]\nIf specified, print plugin meta data.\n</pre>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Examples</a></h2>\n<h2 id=\"create-a-z-file-with-values-between-3-0-and-3-0\"><span class=\"section-subtitle\">Create a z-file with values between -3.0 and +3.0</span></h2>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-mpcs mpcs.py                                      <span class=\"se\">\\\n</span>        -random --seed <span class=\"m\">1</span>                                            <span class=\"se\">\\\n</span>        --posRange <span class=\"m\">3</span>.0 --negRange -3.0                              <span class=\"se\">\\\n</span>        in out\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5309680, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "66e60afca9efaf988585f000c2fbac4b", "sha256": "40adf39e80eac0c24e1513b3784d7236120a9eddd9567071c8b54461c293f3db"}, "downloads": -1, "filename": "mpcs-1.0.10.tar.gz", "has_sig": false, "md5_digest": "66e60afca9efaf988585f000c2fbac4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5962, "upload_time": "2019-05-23T21:59:33", "upload_time_iso_8601": "2019-05-23T21:59:33.482295Z", "url": "https://files.pythonhosted.org/packages/91/0a/fa6359108a16e946e35a212f957971057419dc51d98c0d52e4508e7a4ef8/mpcs-1.0.10.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6d1f637c7f5108a237a3a1ab7c68bf76", "sha256": "7eb4204864a13c3098476cc8c45073c5ed41fda7695de9c6c8a7567e3d411802"}, "downloads": -1, "filename": "mpcs-1.0.3.tar.gz", "has_sig": false, "md5_digest": "6d1f637c7f5108a237a3a1ab7c68bf76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6265, "upload_time": "2019-03-30T00:35:10", "upload_time_iso_8601": "2019-03-30T00:35:10.497813Z", "url": "https://files.pythonhosted.org/packages/81/99/6a99798ba99343d38afe6b7ce3d67db7a73f3a1847de38565162e309a381/mpcs-1.0.3.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "b7aae637e9ee7fa5695038464f66b079", "sha256": "56ea31b81f0b1478fb793e1fd01fedb2f12b8924362e9204d03726313aeb3f35"}, "downloads": -1, "filename": "mpcs-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b7aae637e9ee7fa5695038464f66b079", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6088, "upload_time": "2019-05-23T19:53:19", "upload_time_iso_8601": "2019-05-23T19:53:19.950470Z", "url": "https://files.pythonhosted.org/packages/c8/49/6187b60553405e763e0b7a8fbb62eae8afdc12a94512f46bd761fb22740c/mpcs-1.0.6.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "428982ce4c7fbd2473d5c7d1c403d0b7", "sha256": "710257b24b075a003dfdd7befe3f6bf91f6a5b2ca4e2bdec792e29b3e0ad3911"}, "downloads": -1, "filename": "mpcs-1.0.8.tar.gz", "has_sig": false, "md5_digest": "428982ce4c7fbd2473d5c7d1c403d0b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6092, "upload_time": "2019-05-23T20:31:37", "upload_time_iso_8601": "2019-05-23T20:31:37.335769Z", "url": "https://files.pythonhosted.org/packages/fc/ad/a41aab5d991c1204dbc17870cf86793dc1b1832363502b07cf12f4c45fea/mpcs-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66e60afca9efaf988585f000c2fbac4b", "sha256": "40adf39e80eac0c24e1513b3784d7236120a9eddd9567071c8b54461c293f3db"}, "downloads": -1, "filename": "mpcs-1.0.10.tar.gz", "has_sig": false, "md5_digest": "66e60afca9efaf988585f000c2fbac4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5962, "upload_time": "2019-05-23T21:59:33", "upload_time_iso_8601": "2019-05-23T21:59:33.482295Z", "url": "https://files.pythonhosted.org/packages/91/0a/fa6359108a16e946e35a212f957971057419dc51d98c0d52e4508e7a4ef8/mpcs-1.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:19 2020"}