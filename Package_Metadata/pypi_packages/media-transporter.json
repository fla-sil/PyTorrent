{"info": {"author": "Steve Coward", "author_email": "steve.coward@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "media-transporter\n=================\n\nManages the transportation of TV/Movie files to a mountable media share.\n\nContributers:\n^^^^^^^^^^^^^\n\n-  Steve Coward (stevesugarstack.io)\n\nmedia-transporter is a project that arose out of laziness and boredom,\nmainly. There are plenty of similar or fully-featured alternatives like\nSickBeard and others, but I already had an existing workflow for:\n\n-  Polling RSS feeds and downloading torrent files\n   (`Otomatic <http://codingcurious.com/otomatic>`__).\n-  Automatic watching of a folder for torrents and auto-adding to a\n   torrent client (`Transmission <https://transmissionbt.com>`__).\n\nThe last piece involved the need to move completed downloads to my NAS.\nEnter ``media-transporter``. Here's how it works:\n\n-  Create ``config.py`` in a directory of your choosing. Use\n   ``config_example.py`` as a template. The main options are\n   ``media_shares``, ``download_path``, and ``unrar_path``. Adjust these\n   to match the path to your media share, where you have finished\n   downloads, and the **absolute** path to the ``unrar`` binary. The\n   ``share_[tv|movie]_*`` config options point to the path on your media\n   share where TV and Movies are stored.\n-  ``media-transporter`` requires one command line argument. ``-c``\n   should be the *absolute* path to your ``config.py`` file.\n-  When executed (preferably automatically after a torrent is completed\n   (Transmission is built to support this, for example)),\n   ``media-transporter`` determines if your configured media share is\n   within an acceptable range for storage capacity (configured in\n   ``config.py``).\n-  If it is, ``media-transporter`` checks your Downloads folder for\n   media files and folders, and intelligently moves each of them to\n   their appropriate destination on your media share.\n-  Logs are written to the value of ``log file`` to record all actions\n   taken during processing. Useful for debugging.\n\nThe idea is that ``media-transporter`` will be able to be used on\nmultiple platforms, including Windows. At the moment,\n``media-transporter`` has only been tested on OS X and Linux, but it\nshould be feasible to support Windows very easily.\n\nRequirements\n------------\n\n-  Python 2.\\*\n-  ``unrar`` via either apt-get/yum (Linux), homebrew (OS X), WinRAR\n   (Windows)\n\nInstallation\n------------\n\n.. code:: sh\n\n    $ pip install transporter\n\n.. code:: sh\n\n    $ python setup.py install\n\nThings to do\n------------\n\n-  Code cleanup. Plenty of stuff to do. This wasn't originally meant for\n   public distribution.\n-  Support and test script on Windows.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stevecoward/transporter", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "media-transporter", "package_url": "https://pypi.org/project/media-transporter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/media-transporter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/stevecoward/transporter"}, "release_url": "https://pypi.org/project/media-transporter/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Manages the transportation of TV/Movie files to a mountable media share.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Manages the transportation of TV/Movie files to a mountable media share.</p>\n<div id=\"contributers\">\n<h2>Contributers:</h2>\n<ul>\n<li>Steve Coward (stevesugarstack.io)</li>\n</ul>\n<p>media-transporter is a project that arose out of laziness and boredom,\nmainly. There are plenty of similar or fully-featured alternatives like\nSickBeard and others, but I already had an existing workflow for:</p>\n<ul>\n<li>Polling RSS feeds and downloading torrent files\n(<a href=\"http://codingcurious.com/otomatic\" rel=\"nofollow\">Otomatic</a>).</li>\n<li>Automatic watching of a folder for torrents and auto-adding to a\ntorrent client (<a href=\"https://transmissionbt.com\" rel=\"nofollow\">Transmission</a>).</li>\n</ul>\n<p>The last piece involved the need to move completed downloads to my NAS.\nEnter <tt><span class=\"pre\">media-transporter</span></tt>. Here\u2019s how it works:</p>\n<ul>\n<li>Create <tt>config.py</tt> in a directory of your choosing. Use\n<tt>config_example.py</tt> as a template. The main options are\n<tt>media_shares</tt>, <tt>download_path</tt>, and <tt>unrar_path</tt>. Adjust these\nto match the path to your media share, where you have finished\ndownloads, and the <strong>absolute</strong> path to the <tt>unrar</tt> binary. The\n<tt>share_[tv|movie]_*</tt> config options point to the path on your media\nshare where TV and Movies are stored.</li>\n<li><tt><span class=\"pre\">media-transporter</span></tt> requires one command line argument. <tt><span class=\"pre\">-c</span></tt>\nshould be the <em>absolute</em> path to your <tt>config.py</tt> file.</li>\n<li>When executed (preferably automatically after a torrent is completed\n(Transmission is built to support this, for example)),\n<tt><span class=\"pre\">media-transporter</span></tt> determines if your configured media share is\nwithin an acceptable range for storage capacity (configured in\n<tt>config.py</tt>).</li>\n<li>If it is, <tt><span class=\"pre\">media-transporter</span></tt> checks your Downloads folder for\nmedia files and folders, and intelligently moves each of them to\ntheir appropriate destination on your media share.</li>\n<li>Logs are written to the value of <tt>log file</tt> to record all actions\ntaken during processing. Useful for debugging.</li>\n</ul>\n<p>The idea is that <tt><span class=\"pre\">media-transporter</span></tt> will be able to be used on\nmultiple platforms, including Windows. At the moment,\n<tt><span class=\"pre\">media-transporter</span></tt> has only been tested on OS X and Linux, but it\nshould be feasible to support Windows very easily.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.*</li>\n<li><tt>unrar</tt> via either apt-get/yum (Linux), homebrew (OS X), WinRAR\n(Windows)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install transporter\n</pre>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"things-to-do\">\n<h3>Things to do</h3>\n<ul>\n<li>Code cleanup. Plenty of stuff to do. This wasn\u2019t originally meant for\npublic distribution.</li>\n<li>Support and test script on Windows.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2682868, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "b64e5d918430f85bb8adc351250f9245", "sha256": "02468fb6cabdeeb89aa156fb3f9c1f6b3aee6bcf007331cf34dd37abc92e2ed1"}, "downloads": -1, "filename": "media-transporter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b64e5d918430f85bb8adc351250f9245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6158, "upload_time": "2017-02-22T17:53:32", "upload_time_iso_8601": "2017-02-22T17:53:32.018191Z", "url": "https://files.pythonhosted.org/packages/fa/09/7dde9103704ba15e75fd4a7023a82f13690dded8f835fe5e101773be3ae9/media-transporter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "851228b00c472c81421fe91023a5c431", "sha256": "e6a283a7b1afaa97d0ad9856a2ae2609dbc49229cf6ebe9e30ffe2d9063f1221"}, "downloads": -1, "filename": "media-transporter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "851228b00c472c81421fe91023a5c431", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6182, "upload_time": "2017-02-22T19:27:52", "upload_time_iso_8601": "2017-02-22T19:27:52.755213Z", "url": "https://files.pythonhosted.org/packages/ca/f0/619656bb47096ddc85c292459b1c575e70d63df454c01b7b4e25cb069248/media-transporter-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b567468821fb81adcf167404ff97082b", "sha256": "04488acf2d3ab2b82a22a5ba406a0d1f6487cd2ec2ad4ac5259908e61339d848"}, "downloads": -1, "filename": "media-transporter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b567468821fb81adcf167404ff97082b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6169, "upload_time": "2017-03-04T16:35:16", "upload_time_iso_8601": "2017-03-04T16:35:16.797638Z", "url": "https://files.pythonhosted.org/packages/85/3e/cdbd76ac70f88a3c0ddac8444f907230d323f99039bfaa8a16a53c385703/media-transporter-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d8695afed766955aafa04456d0eb3004", "sha256": "5493f8f2e117fc631a4156632cacd6984a907af2bcec84dbc79b5508ddf3745f"}, "downloads": -1, "filename": "media-transporter-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d8695afed766955aafa04456d0eb3004", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6587, "upload_time": "2017-03-04T17:22:53", "upload_time_iso_8601": "2017-03-04T17:22:53.838198Z", "url": "https://files.pythonhosted.org/packages/7e/f9/a9921c1fac2239414a356ecea19a7d1d1119904c12c96fc4833d6f4d198d/media-transporter-0.1.4.tar.gz", "yanked": false}], "0.1.4.2": [{"comment_text": "", "digests": {"md5": "7999243857b70c0af77f0a0a2aab80c9", "sha256": "8391435e84c1c954ab7700d66d84069c6b968c9f86cd364d05828a9b75f77af0"}, "downloads": -1, "filename": "media-transporter-0.1.4.2.tar.gz", "has_sig": false, "md5_digest": "7999243857b70c0af77f0a0a2aab80c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6573, "upload_time": "2017-03-04T18:35:24", "upload_time_iso_8601": "2017-03-04T18:35:24.626760Z", "url": "https://files.pythonhosted.org/packages/4f/04/4eff5a74b75083eb37f24e2913d72f12ced7519e1089dc593a0c4373de0b/media-transporter-0.1.4.2.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "729a92ce7a134d7849e7d7533152d18c", "sha256": "2fc6f4629cf08e72a9c15c8b73e7f8edf071db59499e90aaddcb9ab864138f8c"}, "downloads": -1, "filename": "media-transporter-0.1.5.tar.gz", "has_sig": false, "md5_digest": "729a92ce7a134d7849e7d7533152d18c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6623, "upload_time": "2017-03-04T22:03:31", "upload_time_iso_8601": "2017-03-04T22:03:31.023069Z", "url": "https://files.pythonhosted.org/packages/78/1d/963a496e724355856b655bd4fcd0ac11e192bd2aa1212b9e07c8c852bc26/media-transporter-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "729a92ce7a134d7849e7d7533152d18c", "sha256": "2fc6f4629cf08e72a9c15c8b73e7f8edf071db59499e90aaddcb9ab864138f8c"}, "downloads": -1, "filename": "media-transporter-0.1.5.tar.gz", "has_sig": false, "md5_digest": "729a92ce7a134d7849e7d7533152d18c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6623, "upload_time": "2017-03-04T22:03:31", "upload_time_iso_8601": "2017-03-04T22:03:31.023069Z", "url": "https://files.pythonhosted.org/packages/78/1d/963a496e724355856b655bd4fcd0ac11e192bd2aa1212b9e07c8c852bc26/media-transporter-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:35 2020"}