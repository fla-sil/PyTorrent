{"info": {"author": "Josh Yudaken", "author_email": "j@yud.co.za", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "Tooler: Easier, better, faster python devops scripts\n====================================================\n\nFeatures:\n\n* Simple access to local or remote (via asyncssh) shells\n* Neat legible output from multiple hosts\n\n\nSimple access to bash:\n----------------------\n\n.. code:: python\n\n  import shlex\n  from tooler import Tooler\n\n  tooler = Tooler()\n\n  @tooler.command\n  def free(mount='/'):\n      for result in tooler.bash('df -mah | grep %s' % shell_quote(mount + '$')):\n          fs, blocks, use, available, use_pct, mnt = shlex.split(result.stdout)\n          result.host.print('Used %s (%s) of %s [%s]' % (use, use_pct, mnt, fs))\n\n  if __name__ == '__main__':\n      tooler.main()\n\n\n.. code:: bash\n\n  $ ./disk.py free --mount=/\n  local$ df -mah | grep '/$'\n  local> /dev/mapper/ubuntu--vg-root  102G   69G   28G  72% /\n  local: [\u2714]\n  local: Used 69G (72%) of / [/dev/mapper/ubuntu--vg-root]\n\nSubcommands made easy:\n----------------------\n\n.. code:: python\n\n  from tooler import Tooler\n  from tooler.library import (named, SshConfig)\n\n  import disk\n\n  tooler = Tooler()\n\n  tooler.add_submodule('disk', disk.tooler)\n  tooler.add_submodule('named', named.tooler)\n\n  if __name__ == '__main__':\n      named.add_hosts(SshConfig().get_hosts())\n      tooler.main(hosts=[])\n\nLibrary of awesome sauce:\n-------------------------\n\n.. code:: bash\n\n  $ ./tool.py named:nginx* disk.free\n  $ s named:nginx* free\n  nginx1$ df -mah | grep '/$'\n  nginx2$ df -mah | grep '/$'\n  nginx3$ df -mah | grep '/$'\n  nginx3> /dev/sda1        59G   37G   22G  64% /\n  nginx3: [\u2714]\n  nginx1> /dev/sda1        59G   37G   22G  64% /\n  nginx1: [\u2714]\n  nginx2> /dev/sda1        59G   37G   22G  64% /\n  nginx2: [\u2714]\n  nginx1: Used 37G (64%) of / [/dev/sda1]\n  nginx2: Used 37G (64%) of / [/dev/sda1]\n  nginx3: Used 37G (64%) of / [/dev/sda1]\n\nThanks required:\n----------------\n\n* asyncssh_  for an easy to use ssh client\n* fabric_ & baker_ as inspiration\n\n.. _asyncssh: https://github.com/ronf/asyncssh\n.. _baker: https://bitbucket.org/mchaput/baker\n.. _fabric: https://github.com/fabric/fabric\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://qix.github.io/shellby", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "shellby", "package_url": "https://pypi.org/project/shellby/", "platform": "Any", "project_url": "https://pypi.org/project/shellby/", "project_urls": {"Homepage": "http://qix.github.io/shellby"}, "release_url": "https://pypi.org/project/shellby/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Shellby: Simple shell access from Python", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Features:</p>\n<ul>\n<li>Simple access to local or remote (via asyncssh) shells</li>\n<li>Neat legible output from multiple hosts</li>\n</ul>\n<div id=\"simple-access-to-bash\">\n<h2>Simple access to bash:</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tooler</span> <span class=\"kn\">import</span> <span class=\"n\">Tooler</span>\n\n<span class=\"n\">tooler</span> <span class=\"o\">=</span> <span class=\"n\">Tooler</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@tooler</span><span class=\"o\">.</span><span class=\"n\">command</span>\n<span class=\"k\">def</span> <span class=\"nf\">free</span><span class=\"p\">(</span><span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"s1\">'/'</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">tooler</span><span class=\"o\">.</span><span class=\"n\">bash</span><span class=\"p\">(</span><span class=\"s1\">'df -mah | grep </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">shell_quote</span><span class=\"p\">(</span><span class=\"n\">mount</span> <span class=\"o\">+</span> <span class=\"s1\">'$'</span><span class=\"p\">)):</span>\n        <span class=\"n\">fs</span><span class=\"p\">,</span> <span class=\"n\">blocks</span><span class=\"p\">,</span> <span class=\"n\">use</span><span class=\"p\">,</span> <span class=\"n\">available</span><span class=\"p\">,</span> <span class=\"n\">use_pct</span><span class=\"p\">,</span> <span class=\"n\">mnt</span> <span class=\"o\">=</span> <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s1\">'Used </span><span class=\"si\">%s</span><span class=\"s1\"> (</span><span class=\"si\">%s</span><span class=\"s1\">) of </span><span class=\"si\">%s</span><span class=\"s1\"> [</span><span class=\"si\">%s</span><span class=\"s1\">]'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">use</span><span class=\"p\">,</span> <span class=\"n\">use_pct</span><span class=\"p\">,</span> <span class=\"n\">mnt</span><span class=\"p\">,</span> <span class=\"n\">fs</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">tooler</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<pre>$ ./disk.py free --mount<span class=\"o\">=</span>/\nlocal$ df -mah <span class=\"p\">|</span> grep <span class=\"s1\">'/$'</span>\nlocal&gt; /dev/mapper/ubuntu--vg-root  102G   69G   28G  <span class=\"m\">72</span>% /\nlocal: <span class=\"o\">[</span>\u2714<span class=\"o\">]</span>\nlocal: Used 69G <span class=\"o\">(</span><span class=\"m\">72</span>%<span class=\"o\">)</span> of / <span class=\"o\">[</span>/dev/mapper/ubuntu--vg-root<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"subcommands-made-easy\">\n<h2>Subcommands made easy:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tooler</span> <span class=\"kn\">import</span> <span class=\"n\">Tooler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tooler.library</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">named</span><span class=\"p\">,</span> <span class=\"n\">SshConfig</span><span class=\"p\">)</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">disk</span>\n\n<span class=\"n\">tooler</span> <span class=\"o\">=</span> <span class=\"n\">Tooler</span><span class=\"p\">()</span>\n\n<span class=\"n\">tooler</span><span class=\"o\">.</span><span class=\"n\">add_submodule</span><span class=\"p\">(</span><span class=\"s1\">'disk'</span><span class=\"p\">,</span> <span class=\"n\">disk</span><span class=\"o\">.</span><span class=\"n\">tooler</span><span class=\"p\">)</span>\n<span class=\"n\">tooler</span><span class=\"o\">.</span><span class=\"n\">add_submodule</span><span class=\"p\">(</span><span class=\"s1\">'named'</span><span class=\"p\">,</span> <span class=\"n\">named</span><span class=\"o\">.</span><span class=\"n\">tooler</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">named</span><span class=\"o\">.</span><span class=\"n\">add_hosts</span><span class=\"p\">(</span><span class=\"n\">SshConfig</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_hosts</span><span class=\"p\">())</span>\n    <span class=\"n\">tooler</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">hosts</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n</div>\n<div id=\"library-of-awesome-sauce\">\n<h2>Library of awesome sauce:</h2>\n<pre>$ ./tool.py named:nginx* disk.free\n$ s named:nginx* free\nnginx1$ df -mah <span class=\"p\">|</span> grep <span class=\"s1\">'/$'</span>\nnginx2$ df -mah <span class=\"p\">|</span> grep <span class=\"s1\">'/$'</span>\nnginx3$ df -mah <span class=\"p\">|</span> grep <span class=\"s1\">'/$'</span>\nnginx3&gt; /dev/sda1        59G   37G   22G  <span class=\"m\">64</span>% /\nnginx3: <span class=\"o\">[</span>\u2714<span class=\"o\">]</span>\nnginx1&gt; /dev/sda1        59G   37G   22G  <span class=\"m\">64</span>% /\nnginx1: <span class=\"o\">[</span>\u2714<span class=\"o\">]</span>\nnginx2&gt; /dev/sda1        59G   37G   22G  <span class=\"m\">64</span>% /\nnginx2: <span class=\"o\">[</span>\u2714<span class=\"o\">]</span>\nnginx1: Used 37G <span class=\"o\">(</span><span class=\"m\">64</span>%<span class=\"o\">)</span> of / <span class=\"o\">[</span>/dev/sda1<span class=\"o\">]</span>\nnginx2: Used 37G <span class=\"o\">(</span><span class=\"m\">64</span>%<span class=\"o\">)</span> of / <span class=\"o\">[</span>/dev/sda1<span class=\"o\">]</span>\nnginx3: Used 37G <span class=\"o\">(</span><span class=\"m\">64</span>%<span class=\"o\">)</span> of / <span class=\"o\">[</span>/dev/sda1<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"thanks-required\">\n<h2>Thanks required:</h2>\n<ul>\n<li><a href=\"https://github.com/ronf/asyncssh\" rel=\"nofollow\">asyncssh</a>  for an easy to use ssh client</li>\n<li><a href=\"https://github.com/fabric/fabric\" rel=\"nofollow\">fabric</a> &amp; <a href=\"https://bitbucket.org/mchaput/baker\" rel=\"nofollow\">baker</a> as inspiration</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7116657, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "c990a0cd37f05c8957da84db34127112", "sha256": "83f31ebdb6ceb0dada930c5e09dae98c3191b3122876df7ee96937d86c44da50"}, "downloads": -1, "filename": "shellby-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c990a0cd37f05c8957da84db34127112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3204, "upload_time": "2020-04-28T02:52:03", "upload_time_iso_8601": "2020-04-28T02:52:03.435362Z", "url": "https://files.pythonhosted.org/packages/d3/90/b3d82833bd5fb12490e82e564c8968f711f1d2047e2647c555176278a7f0/shellby-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c990a0cd37f05c8957da84db34127112", "sha256": "83f31ebdb6ceb0dada930c5e09dae98c3191b3122876df7ee96937d86c44da50"}, "downloads": -1, "filename": "shellby-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c990a0cd37f05c8957da84db34127112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3204, "upload_time": "2020-04-28T02:52:03", "upload_time_iso_8601": "2020-04-28T02:52:03.435362Z", "url": "https://files.pythonhosted.org/packages/d3/90/b3d82833bd5fb12490e82e564c8968f711f1d2047e2647c555176278a7f0/shellby-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:23 2020"}