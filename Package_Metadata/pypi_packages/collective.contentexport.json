{"info": {"author": "Philip Bauer", "author_email": "bauer@starzel.de", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide_addons.html\n   This text does not appear on pypi or github. It is a comment.\n\n.. image:: https://travis-ci.org/collective/collective.contentexport.svg?branch=master\n    :target: https://travis-ci.org/collective/collective.contentexport\n\n.. image:: https://coveralls.io/repos/collective/collective.contentexport/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/collective/collective.contentexport?branch=master\n\n.. image:: https://img.shields.io/pypi/v/collective.contentexport.svg\n    :target: https://pypi.python.org/pypi/collective.contentexport\n\n.. image:: https://img.shields.io/pypi/l/collective.contentexport.svg\n\n\n==============================================================================\ncollective.contentexport\n==============================================================================\n\nFeatures\n--------\n\nExports dexterity content in various formats:\n\n- xlsx\n- xls\n- csv\n- tsv\n- json\n- yaml\n- html (a table)\n- zip-file containing all images from image-fields\n- zip-file containing all files from file-fields\n- zip-file containing related files and images from relationfields\n\nIt can be used to export all instances of a dexterity type and all its data. It cannot be used to export a folder-structure of content.\n\n.. figure:: docs/export_screenshot.png\n   :align: center\n\nUsage\n-----\n\nProvides a form ``/@@collective_contentexport_view`` to configure the export. The form is also availabe in the main controlpanel as `Content export`.\n\nThe form allows you to:\n\n- Select the export type\n- Select the content type to export\n- Choose fields from the selected type to be ignored\n- Select the format of richtext-fields (html/plaintext)\n- Select the format for files and images (url, base64, location within zip-file)\n\ncollective.contentexport uses `tablib <https://pypi.python.org/pypi/tablib>`_ for several export-formats.\n\n\nUse in code\n-----------\n\nYou can use the ``collective_contentexport_view`` in code to have more control over the results.\n\nThe view ``collective_contentexport_view`` accepts the following parameters:\n\nexport_type\n    The export-format you want to use. Accepts the following options:\n\n    - xlsx (Excel Spreadsheet (xlsx))\n    - xls (Excel Legacy Spreadsheet (xls))\n    - yaml (YAML)\n    - html (HTML Table)\n    - csv (Comma Separated Values File)\n    - tsv (Tab Separated Values File)\n    - json (JSON Dump)\n    - images (Export images as zip)\n    - files (Export files as zip)\n    - related (Export related files and images as zip)\n\nportal_type\n    The content-type you want to export\n\nblob_format\n    The format in which blobs (filed/images) should be exported. Accepts the following options:\n\n    - url (URL)\n    - base64 (Base64-encoded string)\n    - zip_path (Location within the a zip)\n\nrichtext_format\n    The format in which richtext (html) should be exported. Options:\n\n    - html\n    - text/plain\n\nblacklist\n    Fields that should be ommited from the export (cannot be combined with whitelist).\n\nwhitelist\n    Only these fields should be included in the export (cannot be combined with blacklist).\n\nadditional\n    Additional data to export. A dict with a name (for the heading) as key and a callable method as value to get additional data for the export from the objects.\n\nquery\n    Catalog-query to filter the exported content.\n\n\nThe following example creates a zip-file with images or files from the field ``primary_picture`` for the type ``some_type``:\n\n..  code-block:: python\n\n    view = api.content.get_view('collective_contentexport_view', portal, request)\n    view(export_type='related', portal_type='some_type', whitelist='primary_picture')\n\nYou can filter the items that should be exported by passing a catalog-query:\n\n..  code-block:: python\n\n    path = '/'.join(self.context.getPhysicalPath())\n    view = api.content.get_view('collective_contentexport_view', portal, request)\n    view(export_type='json', portal_type='Document', query={'review_state': 'published', 'path': path})\n\nYou can also extend the export.\nIn the following example the value ``some_fieldname`` is being extracted from the object using the method ``_somehandler``.\n\n..  code-block:: python\n\n    def _somehandler(obj):\n        return some_crazy_transform(obj.custom_field)\n\n    additional = {'some_fieldname': _somehandler}\n    view = api.content.get_view('collective_contentexport_view', portal, request)\n    result = view(export_type='json', portal_type='Document', additional=additional)\n\nYou can also override the default methods to modify the default behavior.\nIn the following example the ``image`` from Images is being extracted using the method ``_get_imagename`` that only dumps the filename of the image:\n\n..  code-block:: python\n\n    def _get_imagename(obj):\n        if obj.image:\n            return obj.image.filename\n\n    additional = {'image': _get_imagename}\n    view = api.content.get_view('collective_contentexport_view', portal, request)\n    result = view(export_type='json', portal_type='Image', additional=additional)\n\n\nCompatability\n-------------\n\ncollective.contentexport is tested to work in Plone 4.3, Plone 5 and PLone 5.1.\n\n\nKnown Issues\n------------\n\n* xslx-Export is broken unless you pinn ``openpyxl = 2.4.9``. See https://github.com/collective/collective.contentexport/issues/4 for details.\n\n\nInstallation\n------------\n\nInstall collective.contentexport by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        collective.contentexport\n\n\nand then running ``bin/buildout``.\n\nYou don't need to install the add-on to use the export.\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/collective/collective.contentexport/issues\n- Source Code: https://github.com/collective/collective.contentexport\n\n\nSupport\n-------\n\nIf you are having issues, please let us know at https://github.com/collective/collective.contentexport/issues.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\nContributors\n============\n\n- Philip Bauer, bauer@starzel.de\n\nChangelog\n=========\n\n\n1.1 (2018-03-27)\n----------------\n\n- Add modification date to default fields\n  [pbauer]\n\n- Add export-view to controlpanel\n  [pbauer]\n\n- Run tests with Plone 5.1\n  [pbauer]\n\n1.0 (2016-07-09)\n----------------\n\n- Fix tsv-Export\n  [pbauer]\n\n- Test compatibility with Plone 5.0.5\n  [pbauer]\n\n\n1.0b5 (2015-12-03)\n------------------\n\n- Fix UnicodeEncodeError in get_blob_url when filenames have special characters.\n  [pbauer]\n\n- Add path and review_state to exported data that is not part of the schema.\n  [pbauer]\n\n\n1.0b4 (2015-11-28)\n------------------\n\n- Allow to pass catalog-query to filter the exported content.\n  [pbauer]\n\n\n1.0b3 (2015-11-28)\n------------------\n\n- Move package to https://github.com/collective/collective.contentexport.\n  [pbauer]\n\n- No longer bind views to browserlayer to simplify package-use. Rename views\n  to prevent unintended name-clashes since we no longer use the browser-layer.\n  [pbauer]\n\n\n1.0b2 (2015-11-06)\n------------------\n\n- Add whitelist (only export fields in the whitelist)\n  [pbauer]\n\n- Document extending and overriding the export.\n  [pbauer]\n\n\n1.0b1 (2015-11-05)\n------------------\n\n- Sort fieldnames in blacklist by alphabet.\n  [pbauer]\n\n- Add ability to provide additional export-methods for arbitrary data by\n  extending ADDITIONAL_MAPPING.\n  [pbauer]\n\n- Add tests\n  [pbauer]\n\n\n1.0a2 (2015-11-04)\n------------------\n\n- Localize datetime\n  [pbauer]\n\n- Prevent uneven dimension of data-dict\n  [pbauer]\n\n- Fix blacklist\n  [pbauer]\n\n\n1.0a1 (2015-11-04)\n------------------\n\n- Get content from all languages.\n  [pbauer]\n\n- Add export for multiple images and files related with RelationList.\n  [pbauer]\n\n- Allow choosing blacklisted fields from the fields of the selected type.\n  [pbauer]\n\n- Use http://docs.python-tablib.org for most exports.\n  [pbauer]\n\n- Add German translations.\n  [pbauer]\n\n- Moved initial code from client-project to github.\n  [pbauer]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/collective.contentexport", "keywords": "Python Plone", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "collective.contentexport", "package_url": "https://pypi.org/project/collective.contentexport/", "platform": "", "project_url": "https://pypi.org/project/collective.contentexport/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/collective.contentexport"}, "release_url": "https://pypi.org/project/collective.contentexport/1.1/", "requires_dist": null, "requires_python": "", "summary": "Plone add-on to export dexterity content in various formats", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/collective/collective.contentexport\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/collective/collective.contentexport.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d40c241c74077f7b32b4f4114cef504bfafd41a/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e636f6e74656e746578706f72742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/collective/collective.contentexport?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/collective/collective.contentexport/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3f7199fd750f220cbb9deac505fae92fcaf9e6e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f636f6c6c6563746976652f636f6c6c6563746976652e636f6e74656e746578706f72742f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<a href=\"https://pypi.python.org/pypi/collective.contentexport\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/collective.contentexport.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9096a69c0d5234995d83c0622cd494276bf0b88/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6c6c6563746976652e636f6e74656e746578706f72742e737667\"></a>\n<img alt=\"https://img.shields.io/pypi/l/collective.contentexport.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb4a190e815f4d1d8a286b51a0e2279201c2477f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6c6c6563746976652e636f6e74656e746578706f72742e737667\">\n<div id=\"collective-contentexport\">\n<h2>collective.contentexport</h2>\n<div id=\"features\">\n<h3>Features</h3>\n<p>Exports dexterity content in various formats:</p>\n<ul>\n<li>xlsx</li>\n<li>xls</li>\n<li>csv</li>\n<li>tsv</li>\n<li>json</li>\n<li>yaml</li>\n<li>html (a table)</li>\n<li>zip-file containing all images from image-fields</li>\n<li>zip-file containing all files from file-fields</li>\n<li>zip-file containing related files and images from relationfields</li>\n</ul>\n<p>It can be used to export all instances of a dexterity type and all its data. It cannot be used to export a folder-structure of content.</p>\n<div>\n<img alt=\"docs/export_screenshot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df25534130078521db7cd9f7a48373272c819331/646f63732f6578706f72745f73637265656e73686f742e706e67\">\n</div>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Provides a form <tt><span class=\"pre\">/@@collective_contentexport_view</span></tt> to configure the export. The form is also availabe in the main controlpanel as <cite>Content export</cite>.</p>\n<p>The form allows you to:</p>\n<ul>\n<li>Select the export type</li>\n<li>Select the content type to export</li>\n<li>Choose fields from the selected type to be ignored</li>\n<li>Select the format of richtext-fields (html/plaintext)</li>\n<li>Select the format for files and images (url, base64, location within zip-file)</li>\n</ul>\n<p>collective.contentexport uses <a href=\"https://pypi.python.org/pypi/tablib\" rel=\"nofollow\">tablib</a> for several export-formats.</p>\n</div>\n<div id=\"use-in-code\">\n<h3>Use in code</h3>\n<p>You can use the <tt>collective_contentexport_view</tt> in code to have more control over the results.</p>\n<p>The view <tt>collective_contentexport_view</tt> accepts the following parameters:</p>\n<dl>\n<dt>export_type</dt>\n<dd><p>The export-format you want to use. Accepts the following options:</p>\n<ul>\n<li>xlsx (Excel Spreadsheet (xlsx))</li>\n<li>xls (Excel Legacy Spreadsheet (xls))</li>\n<li>yaml (YAML)</li>\n<li>html (HTML Table)</li>\n<li>csv (Comma Separated Values File)</li>\n<li>tsv (Tab Separated Values File)</li>\n<li>json (JSON Dump)</li>\n<li>images (Export images as zip)</li>\n<li>files (Export files as zip)</li>\n<li>related (Export related files and images as zip)</li>\n</ul>\n</dd>\n<dt>portal_type</dt>\n<dd>The content-type you want to export</dd>\n<dt>blob_format</dt>\n<dd><p>The format in which blobs (filed/images) should be exported. Accepts the following options:</p>\n<ul>\n<li>url (URL)</li>\n<li>base64 (Base64-encoded string)</li>\n<li>zip_path (Location within the a zip)</li>\n</ul>\n</dd>\n<dt>richtext_format</dt>\n<dd><p>The format in which richtext (html) should be exported. Options:</p>\n<ul>\n<li>html</li>\n<li>text/plain</li>\n</ul>\n</dd>\n<dt>blacklist</dt>\n<dd>Fields that should be ommited from the export (cannot be combined with whitelist).</dd>\n<dt>whitelist</dt>\n<dd>Only these fields should be included in the export (cannot be combined with blacklist).</dd>\n<dt>additional</dt>\n<dd>Additional data to export. A dict with a name (for the heading) as key and a callable method as value to get additional data for the export from the objects.</dd>\n<dt>query</dt>\n<dd>Catalog-query to filter the exported content.</dd>\n</dl>\n<p>The following example creates a zip-file with images or files from the field <tt>primary_picture</tt> for the type <tt>some_type</tt>:</p>\n<pre><span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">get_view</span><span class=\"p\">(</span><span class=\"s1\">'collective_contentexport_view'</span><span class=\"p\">,</span> <span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">export_type</span><span class=\"o\">=</span><span class=\"s1\">'related'</span><span class=\"p\">,</span> <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'some_type'</span><span class=\"p\">,</span> <span class=\"n\">whitelist</span><span class=\"o\">=</span><span class=\"s1\">'primary_picture'</span><span class=\"p\">)</span>\n</pre>\n<p>You can filter the items that should be exported by passing a catalog-query:</p>\n<pre><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s1\">'/'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">getPhysicalPath</span><span class=\"p\">())</span>\n<span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">get_view</span><span class=\"p\">(</span><span class=\"s1\">'collective_contentexport_view'</span><span class=\"p\">,</span> <span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">export_type</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Document'</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'review_state'</span><span class=\"p\">:</span> <span class=\"s1\">'published'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">path</span><span class=\"p\">})</span>\n</pre>\n<p>You can also extend the export.\nIn the following example the value <tt>some_fieldname</tt> is being extracted from the object using the method <tt>_somehandler</tt>.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_somehandler</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">some_crazy_transform</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">custom_field</span><span class=\"p\">)</span>\n\n<span class=\"n\">additional</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'some_fieldname'</span><span class=\"p\">:</span> <span class=\"n\">_somehandler</span><span class=\"p\">}</span>\n<span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">get_view</span><span class=\"p\">(</span><span class=\"s1\">'collective_contentexport_view'</span><span class=\"p\">,</span> <span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">export_type</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Document'</span><span class=\"p\">,</span> <span class=\"n\">additional</span><span class=\"o\">=</span><span class=\"n\">additional</span><span class=\"p\">)</span>\n</pre>\n<p>You can also override the default methods to modify the default behavior.\nIn the following example the <tt>image</tt> from Images is being extracted using the method <tt>_get_imagename</tt> that only dumps the filename of the image:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_get_imagename</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">filename</span>\n\n<span class=\"n\">additional</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'image'</span><span class=\"p\">:</span> <span class=\"n\">_get_imagename</span><span class=\"p\">}</span>\n<span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">get_view</span><span class=\"p\">(</span><span class=\"s1\">'collective_contentexport_view'</span><span class=\"p\">,</span> <span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">export_type</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Image'</span><span class=\"p\">,</span> <span class=\"n\">additional</span><span class=\"o\">=</span><span class=\"n\">additional</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"compatability\">\n<h3>Compatability</h3>\n<p>collective.contentexport is tested to work in Plone 4.3, Plone 5 and PLone 5.1.</p>\n</div>\n<div id=\"known-issues\">\n<h3>Known Issues</h3>\n<ul>\n<li>xslx-Export is broken unless you pinn <tt>openpyxl = 2.4.9</tt>. See <a href=\"https://github.com/collective/collective.contentexport/issues/4\" rel=\"nofollow\">https://github.com/collective/collective.contentexport/issues/4</a> for details.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install collective.contentexport by adding it to your buildout:</p>\n<pre>[buildout]\n\n...\n\neggs =\n    collective.contentexport\n</pre>\n<p>and then running <tt>bin/buildout</tt>.</p>\n<p>You don\u2019t need to install the add-on to use the export.</p>\n</div>\n<div id=\"contribute\">\n<h3>Contribute</h3>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/collective/collective.contentexport/issues\" rel=\"nofollow\">https://github.com/collective/collective.contentexport/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/collective/collective.contentexport\" rel=\"nofollow\">https://github.com/collective/collective.contentexport</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<p>If you are having issues, please let us know at <a href=\"https://github.com/collective/collective.contentexport/issues\" rel=\"nofollow\">https://github.com/collective/collective.contentexport/issues</a>.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the GPLv2.</p>\n<div id=\"contributors\">\n<h4>Contributors</h4>\n<ul>\n<li>Philip Bauer, <a href=\"mailto:bauer%40starzel.de\">bauer<span>@</span>starzel<span>.</span>de</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h4>Changelog</h4>\n</div>\n</div>\n<div id=\"id1\">\n<h3>1.1 (2018-03-27)</h3>\n<ul>\n<li>Add modification date to default fields\n[pbauer]</li>\n<li>Add export-view to controlpanel\n[pbauer]</li>\n<li>Run tests with Plone 5.1\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0 (2016-07-09)</h3>\n<ul>\n<li>Fix tsv-Export\n[pbauer]</li>\n<li>Test compatibility with Plone 5.0.5\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"b5-2015-12-03\">\n<h3>1.0b5 (2015-12-03)</h3>\n<ul>\n<li>Fix UnicodeEncodeError in get_blob_url when filenames have special characters.\n[pbauer]</li>\n<li>Add path and review_state to exported data that is not part of the schema.\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"b4-2015-11-28\">\n<h3>1.0b4 (2015-11-28)</h3>\n<ul>\n<li>Allow to pass catalog-query to filter the exported content.\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"b3-2015-11-28\">\n<h3>1.0b3 (2015-11-28)</h3>\n<ul>\n<li>Move package to <a href=\"https://github.com/collective/collective.contentexport\" rel=\"nofollow\">https://github.com/collective/collective.contentexport</a>.\n[pbauer]</li>\n<li>No longer bind views to browserlayer to simplify package-use. Rename views\nto prevent unintended name-clashes since we no longer use the browser-layer.\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"b2-2015-11-06\">\n<h3>1.0b2 (2015-11-06)</h3>\n<ul>\n<li>Add whitelist (only export fields in the whitelist)\n[pbauer]</li>\n<li>Document extending and overriding the export.\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"b1-2015-11-05\">\n<h3>1.0b1 (2015-11-05)</h3>\n<ul>\n<li>Sort fieldnames in blacklist by alphabet.\n[pbauer]</li>\n<li>Add ability to provide additional export-methods for arbitrary data by\nextending ADDITIONAL_MAPPING.\n[pbauer]</li>\n<li>Add tests\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"a2-2015-11-04\">\n<h3>1.0a2 (2015-11-04)</h3>\n<ul>\n<li>Localize datetime\n[pbauer]</li>\n<li>Prevent uneven dimension of data-dict\n[pbauer]</li>\n<li>Fix blacklist\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"a1-2015-11-04\">\n<h3>1.0a1 (2015-11-04)</h3>\n<ul>\n<li>Get content from all languages.\n[pbauer]</li>\n<li>Add export for multiple images and files related with RelationList.\n[pbauer]</li>\n<li>Allow choosing blacklisted fields from the fields of the selected type.\n[pbauer]</li>\n<li>Use <a href=\"http://docs.python-tablib.org\" rel=\"nofollow\">http://docs.python-tablib.org</a> for most exports.\n[pbauer]</li>\n<li>Add German translations.\n[pbauer]</li>\n<li>Moved initial code from client-project to github.\n[pbauer]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3710141, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3294fd341a189fbab2b655b6589ce7d5", "sha256": "23f1912d429e677635fce050b088362c04f5756ea5264619772a4f2cb5650333"}, "downloads": -1, "filename": "collective.contentexport-1.0.tar.gz", "has_sig": false, "md5_digest": "3294fd341a189fbab2b655b6589ce7d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125478, "upload_time": "2016-07-09T08:50:18", "upload_time_iso_8601": "2016-07-09T08:50:18.057016Z", "url": "https://files.pythonhosted.org/packages/c7/a8/c2002fb989a8167a289e95163e6a4894c76f477c16457c4a2cfa8151eadb/collective.contentexport-1.0.tar.gz", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "6e3596d129677e027137ca7e1b39e7a6", "sha256": "b42450e8b13cb74b2e1799a37234f6d712d8f50db7119aa7912e9c97579fe32b"}, "downloads": -1, "filename": "collective.contentexport-1.0a1.tar.gz", "has_sig": false, "md5_digest": "6e3596d129677e027137ca7e1b39e7a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21106, "upload_time": "2015-11-04T15:30:26", "upload_time_iso_8601": "2015-11-04T15:30:26.959471Z", "url": "https://files.pythonhosted.org/packages/4f/e7/6f8a894664ec8df98b82c6bc1834b3a633b3ea6d61d24b78fcf0ce3a6c8e/collective.contentexport-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "bd7db0829a2682e4b514072c5239b212", "sha256": "4d994eb8a6806e17afa60af032c4687529a4a939dc8b1da4961486832186da30"}, "downloads": -1, "filename": "collective.contentexport-1.0a2.tar.gz", "has_sig": false, "md5_digest": "bd7db0829a2682e4b514072c5239b212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21291, "upload_time": "2015-11-04T19:15:31", "upload_time_iso_8601": "2015-11-04T19:15:31.244131Z", "url": "https://files.pythonhosted.org/packages/84/e4/372451ac6bb2f303dd7cd59c8b981fdb5f365f205fd741da59d41086757b/collective.contentexport-1.0a2.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "84ada1d5c079cc25c23532b2af96d27d", "sha256": "45dc5367bf8d84008c82eaf992d428e831053897034432e1fe230481dd985253"}, "downloads": -1, "filename": "collective.contentexport-1.0b1.tar.gz", "has_sig": false, "md5_digest": "84ada1d5c079cc25c23532b2af96d27d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24823, "upload_time": "2015-11-05T16:54:46", "upload_time_iso_8601": "2015-11-05T16:54:46.854189Z", "url": "https://files.pythonhosted.org/packages/eb/b2/a2479080b93d45809757753c83cac9078ad5d325604b919375da0bf981b8/collective.contentexport-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "26ff90af1654eba2f313caf9888b7b57", "sha256": "2b87e404767cc9655101a017cabc5dcf99e62b03b924148884bdbe9769f50a73"}, "downloads": -1, "filename": "collective.contentexport-1.0b2.tar.gz", "has_sig": false, "md5_digest": "26ff90af1654eba2f313caf9888b7b57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123820, "upload_time": "2015-11-06T11:46:49", "upload_time_iso_8601": "2015-11-06T11:46:49.395974Z", "url": "https://files.pythonhosted.org/packages/91/e1/501c072baf31b9c67c90f2d53eff1e664c0e5e38988ad79058b984d1471f/collective.contentexport-1.0b2.tar.gz", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "7eaa0289cc2fa2ccf43e77a3449d689b", "sha256": "fbe20ee74769a2c7722350be344a12767c72da788e6a795ead2821ab8ea6a1b9"}, "downloads": -1, "filename": "collective.contentexport-1.0b3.tar.gz", "has_sig": false, "md5_digest": "7eaa0289cc2fa2ccf43e77a3449d689b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124457, "upload_time": "2015-11-28T07:46:49", "upload_time_iso_8601": "2015-11-28T07:46:49.623496Z", "url": "https://files.pythonhosted.org/packages/5f/a1/0a3bf8b0c254860d66c606efb2f2e2abe047682d230b5726e30db878df9f/collective.contentexport-1.0b3.tar.gz", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "191c590a9d09b5227038e3d18f9c5067", "sha256": "7283cfe9e7b2a6dfdd91446b0f33b2f37c4455635409da406d2b5220b7bf4c49"}, "downloads": -1, "filename": "collective.contentexport-1.0b4.tar.gz", "has_sig": false, "md5_digest": "191c590a9d09b5227038e3d18f9c5067", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125790, "upload_time": "2015-11-28T12:16:20", "upload_time_iso_8601": "2015-11-28T12:16:20.201501Z", "url": "https://files.pythonhosted.org/packages/37/0a/663c8fde80cc00f2c6907518efbeeb5934b74803c5cfb4c2e955aac8d382/collective.contentexport-1.0b4.tar.gz", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "c17345ba2757af97fee760d2fd064685", "sha256": "f57814b9daae255cf47043f49538c39415ce26b2be8642c8d3bde7a33a68473d"}, "downloads": -1, "filename": "collective.contentexport-1.0b5.tar.gz", "has_sig": false, "md5_digest": "c17345ba2757af97fee760d2fd064685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 126213, "upload_time": "2015-12-03T10:45:39", "upload_time_iso_8601": "2015-12-03T10:45:39.368225Z", "url": "https://files.pythonhosted.org/packages/fc/3b/5774f5b5635e7b34c9bea0c4119c93f30e7ee10c5b792980bc127443c0e3/collective.contentexport-1.0b5.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "06025348850c1e405e55cdfb17bb8be3", "sha256": "f45828829f35d680b60d7a5c31ab8022163380258b09d07be42841228317d35b"}, "downloads": -1, "filename": "collective.contentexport-1.1.tar.gz", "has_sig": false, "md5_digest": "06025348850c1e405e55cdfb17bb8be3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125887, "upload_time": "2018-03-27T12:38:18", "upload_time_iso_8601": "2018-03-27T12:38:18.616899Z", "url": "https://files.pythonhosted.org/packages/9e/41/d8dae4820f5332d3d6b9b8f89da39799a4161834d15712f80f84cd202716/collective.contentexport-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06025348850c1e405e55cdfb17bb8be3", "sha256": "f45828829f35d680b60d7a5c31ab8022163380258b09d07be42841228317d35b"}, "downloads": -1, "filename": "collective.contentexport-1.1.tar.gz", "has_sig": false, "md5_digest": "06025348850c1e405e55cdfb17bb8be3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125887, "upload_time": "2018-03-27T12:38:18", "upload_time_iso_8601": "2018-03-27T12:38:18.616899Z", "url": "https://files.pythonhosted.org/packages/9e/41/d8dae4820f5332d3d6b9b8f89da39799a4161834d15712f80f84cd202716/collective.contentexport-1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:58 2020"}