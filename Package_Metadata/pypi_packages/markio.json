{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "The ``.markio`` format is a markdown-based format for representing IO based\nprogramming questions. This library consists in a parser and a processor for\nthis format. It does not judge submissions by executing programming tasks and\ncomparing inputs/outputs but it provides some data structures that makes the\nimplementation of such a program much easier.\n\n\nThe syntax\n==========\n\nMarkio files are regular markdown files with a conventional structure used to\nrepresent an IO based programming question. The `markio`` parser processes the\nmarkdown source and returns a dictionary with the document structure.\nA ``.markio`` markdown file begins like this::\n\n    Hello Person\n    ============\n\n        Author: Chips Chipperfield <chips@chipperfield.com>\n        Slug: hello-person\n        Timeout: 1s\n        Tags: #begginer #basic\n\n    A program that prints a personalized greeting to the user.\n\nThe document must start with an h1-level title corresponding to the question\ntitle name. The title may be followed by an optional block with meta data.\nEach metadata field is optional and only the fields shown above are supported.\nThe title and metadata information are accessible from the parsed structure\ndirectly in the 'title', 'author', 'slug', etc keys.\n\nBellow that, it is possible to specify a single-paragraph short description.\nThis description is available both in the 'short_description' attribute of the\nparsed structure.\n\nThe file than consists of various h2-sections. Most of these sections are\naccessed in the parsed dictionary as a lowercase version of their title names::\n\n    Description\n    -----------\n\n    Create a program that asks the user name and prints the message\n    \"Hello, <name>!\" on the screen. The program output should be **exactelly**\n    as requested, i.e., you should use **exactely** the same case and pontuaction\n    marks as in the example string. You can assume that the input name is at\n    most 100 characters long.\n\n    ### Inputs\n\n    A more thorough description of inputs.\n\n    ### Outputs\n\n    Description of the desired outputs.\n\nThis obligatory section contains a long description text for the question. It\naccepts more or less arbitrary markdown text but all headings must be level 3\nor above. The raw markdown can be accessed by the 'description' key in the\nparsed structure.\n\n::\n\n    Example\n    -------\n\n        What is your name? <John>\n        Hello John!\n\nThe 'example' section must contain a single block of ``.iospec`` data. For more\ninfo check http://gihub.com/fabiommendes/iospec. IoSpec is a simple language\nfor specifying a sequence of inputs and outputs in a program interaction. Users\nshould avoid using input-only specifications in this section.\n\nAlthough these examples might be used to judge submissions, the content of this\nsection is displayed to the student. Tests designed to judge a program should\ngo in the \"Tests\" section.\n\n\n::\n\n    Tests\n    -----\n\n        @input Mary\n        @input mary\n        @input Long Name\n        @input $string[<100]\n\nThis section also contains a single block of ``.iospec`` data with the\nvarious tests used to judge submissions. Input-only interactions are allowed\nand encouraged.\n\n::\n\n    Placeholder\n    -----------\n\n        A paragraph with the defaut comments that should be included in the\n        placeholder source.\n\nThis optional section is used to store the default comment string that should\nbe placed as the placeholder text in the ``<textarea>`` used in submission forms.\n\n::\n\n    Answer Key (Python3)\n    -------------------\n\n        # Indentation is necessary to mark source as a code block in markdown!\n\n        name = input('What is your name? ')\n        print('Hello, %s!' % name)\n\n    Answer Key (C)\n    --------------\n\n        #include<stdio.h>\n\n        main() {\n            char buffer[101];\n\n            puts(\"What is your name? \");\n            scanf(\"%s\", buffer);\n            printf(\"Hello, %s!\\n\", buffer);\n        }\n\nThis section defines a reference program that can be used to compute the correct\ninput/output sequences from the tests iospec. The reference solution can be\ngiven in more than one language (which is specified inside parenthesis).\nMarkio do not grade or run these programs directly, however other graders may\nuse the redundant information to cross-check responses.\n\nThe source code can be accessed at ``parsed.answer_key['python3']``.\n\n::\n\n    Placeholder (Python3)\n    ---------------------\n\n        # Type here your response. Remember to use the print() and input()\n        # functions\n\nFinally, it is possible to define a per-language placeholder text. This overrides\nthe default placeholder input for a single specific language.\n\nThe placeholder code can be accessed at ``parsed.placehoder['python3']``.\n\n::\n\n    TLE Answer (python3)\n    --------------------\n\n    import time\n\n    name = input('What is your name? ')\n    time.sleep(1)\n    print('Hello, %s!' % name)\n\nThe TLE (time limit exceeded) answer is used to calibrate the timeout for\nsubmissions in a specific language. This section should contain the\nimplementation of an inefficient algorithm that the judge wants to disallow.\nThis is a robust method to specify the timeout that is calibrated to the host\nmachine processing power and is based on a well defined criteria rather than an\narbitrarily chosen duration.\n\n\nTranslations (not ready)\n========================\n\nMany programming quizzes involve internationalization-agnostic interactions.\nThey can be easily translated to different human languages since only the user\nfacing strings need to be adapted. If the input/output strings themselves need to\nbe translated, it is necessary to create a whole new markio file.\n\nThe translated sections can be put inside the main markio file or put on a\nseparate file. In the first case, it is necessary to append the language code\ninside parenthesis after the section number (ex.: ``Description (pt-BR)``).\nThe placeholder text should be ``Placeholder (python3, pt-BR)``. The title,\nshort description and slug should be placed as metadata::\n\n    Title (pt-BR): Ol\u00e1 Pessoa\n    Slug (pt-BR): ola-pessoa\n    Short description (pt-BR): Um programa que imprime uma sauda\u00e7\u00e3o personalizada.\n\nThe alternative translation file should be named as ``<name>.pt_BR.markio``.\nThe markio parser accepts translated section names for many languages. The user\nmay choose to use the translated values or their english counterparts.\n\nThe default language is english. If the user does not need an english version\nof the question, the main markio io file will be the same as a translation file.\nIn that case the filename is expected to be something like\n``my-file.pt_BR.markio`` and all sections should be present. The markio parser\nunderstands translated section names for a few languages. If your language is\nnot present, please contribute with translations!\n\n\nAcessory files (not ready)\n==========================\n\nThe content of all sections of a markio source that contains only a block of\nsource code (basically all sections but the title and description) can rather\nbe put inside a separate file. If the markio parser finds a file named\nas ``my-file.answer_key.c`` in the same directory as the main source, it will\nautomatically fill the contents of the ``Answer Key (C)``. If both an external\nsource and the section content are present, the external file takes precedence.\n\n\nCommand line (not ready)\n========================\n\nThis package installs the markio command that can perform several operations\non markio files.\n\n...", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "markio", "package_url": "https://pypi.org/project/markio/", "platform": "any", "project_url": "https://pypi.org/project/markio/", "project_urls": null, "release_url": "https://pypi.org/project/markio/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "Defines a format for representing I/O based programming questions and implements a parser for it.", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>.markio</tt> format is a markdown-based format for representing IO based\nprogramming questions. This library consists in a parser and a processor for\nthis format. It does not judge submissions by executing programming tasks and\ncomparing inputs/outputs but it provides some data structures that makes the\nimplementation of such a program much easier.</p>\n<div id=\"the-syntax\">\n<h2>The syntax</h2>\n<p>Markio files are regular markdown files with a conventional structure used to\nrepresent an IO based programming question. The <cite>markio`</cite> parser processes the\nmarkdown source and returns a dictionary with the document structure.\nA <tt>.markio</tt> markdown file begins like this:</p>\n<pre>Hello Person\n============\n\n    Author: Chips Chipperfield &lt;chips@chipperfield.com&gt;\n    Slug: hello-person\n    Timeout: 1s\n    Tags: #begginer #basic\n\nA program that prints a personalized greeting to the user.\n</pre>\n<p>The document must start with an h1-level title corresponding to the question\ntitle name. The title may be followed by an optional block with meta data.\nEach metadata field is optional and only the fields shown above are supported.\nThe title and metadata information are accessible from the parsed structure\ndirectly in the \u2018title\u2019, \u2018author\u2019, \u2018slug\u2019, etc keys.</p>\n<p>Bellow that, it is possible to specify a single-paragraph short description.\nThis description is available both in the \u2018short_description\u2019 attribute of the\nparsed structure.</p>\n<p>The file than consists of various h2-sections. Most of these sections are\naccessed in the parsed dictionary as a lowercase version of their title names:</p>\n<pre>Description\n-----------\n\nCreate a program that asks the user name and prints the message\n\"Hello, &lt;name&gt;!\" on the screen. The program output should be **exactelly**\nas requested, i.e., you should use **exactely** the same case and pontuaction\nmarks as in the example string. You can assume that the input name is at\nmost 100 characters long.\n\n### Inputs\n\nA more thorough description of inputs.\n\n### Outputs\n\nDescription of the desired outputs.\n</pre>\n<p>This obligatory section contains a long description text for the question. It\naccepts more or less arbitrary markdown text but all headings must be level 3\nor above. The raw markdown can be accessed by the \u2018description\u2019 key in the\nparsed structure.</p>\n<pre>Example\n-------\n\n    What is your name? &lt;John&gt;\n    Hello John!\n</pre>\n<p>The \u2018example\u2019 section must contain a single block of <tt>.iospec</tt> data. For more\ninfo check <a href=\"http://gihub.com/fabiommendes/iospec\" rel=\"nofollow\">http://gihub.com/fabiommendes/iospec</a>. IoSpec is a simple language\nfor specifying a sequence of inputs and outputs in a program interaction. Users\nshould avoid using input-only specifications in this section.</p>\n<p>Although these examples might be used to judge submissions, the content of this\nsection is displayed to the student. Tests designed to judge a program should\ngo in the \u201cTests\u201d section.</p>\n<pre>Tests\n-----\n\n    @input Mary\n    @input mary\n    @input Long Name\n    @input $string[&lt;100]\n</pre>\n<p>This section also contains a single block of <tt>.iospec</tt> data with the\nvarious tests used to judge submissions. Input-only interactions are allowed\nand encouraged.</p>\n<pre>Placeholder\n-----------\n\n    A paragraph with the defaut comments that should be included in the\n    placeholder source.\n</pre>\n<p>This optional section is used to store the default comment string that should\nbe placed as the placeholder text in the <tt>&lt;textarea&gt;</tt> used in submission forms.</p>\n<pre>Answer Key (Python3)\n-------------------\n\n    # Indentation is necessary to mark source as a code block in markdown!\n\n    name = input('What is your name? ')\n    print('Hello, %s!' % name)\n\nAnswer Key (C)\n--------------\n\n    #include&lt;stdio.h&gt;\n\n    main() {\n        char buffer[101];\n\n        puts(\"What is your name? \");\n        scanf(\"%s\", buffer);\n        printf(\"Hello, %s!\\n\", buffer);\n    }\n</pre>\n<p>This section defines a reference program that can be used to compute the correct\ninput/output sequences from the tests iospec. The reference solution can be\ngiven in more than one language (which is specified inside parenthesis).\nMarkio do not grade or run these programs directly, however other graders may\nuse the redundant information to cross-check responses.</p>\n<p>The source code can be accessed at <tt><span class=\"pre\">parsed.answer_key['python3']</span></tt>.</p>\n<pre>Placeholder (Python3)\n---------------------\n\n    # Type here your response. Remember to use the print() and input()\n    # functions\n</pre>\n<p>Finally, it is possible to define a per-language placeholder text. This overrides\nthe default placeholder input for a single specific language.</p>\n<p>The placeholder code can be accessed at <tt><span class=\"pre\">parsed.placehoder['python3']</span></tt>.</p>\n<pre>TLE Answer (python3)\n--------------------\n\nimport time\n\nname = input('What is your name? ')\ntime.sleep(1)\nprint('Hello, %s!' % name)\n</pre>\n<p>The TLE (time limit exceeded) answer is used to calibrate the timeout for\nsubmissions in a specific language. This section should contain the\nimplementation of an inefficient algorithm that the judge wants to disallow.\nThis is a robust method to specify the timeout that is calibrated to the host\nmachine processing power and is based on a well defined criteria rather than an\narbitrarily chosen duration.</p>\n</div>\n<div id=\"translations-not-ready\">\n<h2>Translations (not ready)</h2>\n<p>Many programming quizzes involve internationalization-agnostic interactions.\nThey can be easily translated to different human languages since only the user\nfacing strings need to be adapted. If the input/output strings themselves need to\nbe translated, it is necessary to create a whole new markio file.</p>\n<p>The translated sections can be put inside the main markio file or put on a\nseparate file. In the first case, it is necessary to append the language code\ninside parenthesis after the section number (ex.: <tt>Description <span class=\"pre\">(pt-BR)</span></tt>).\nThe placeholder text should be <tt>Placeholder (python3, <span class=\"pre\">pt-BR)</span></tt>. The title,\nshort description and slug should be placed as metadata:</p>\n<pre>Title (pt-BR): Ol\u00e1 Pessoa\nSlug (pt-BR): ola-pessoa\nShort description (pt-BR): Um programa que imprime uma sauda\u00e7\u00e3o personalizada.\n</pre>\n<p>The alternative translation file should be named as <tt><span class=\"pre\">&lt;name&gt;.pt_BR.markio</span></tt>.\nThe markio parser accepts translated section names for many languages. The user\nmay choose to use the translated values or their english counterparts.</p>\n<p>The default language is english. If the user does not need an english version\nof the question, the main markio io file will be the same as a translation file.\nIn that case the filename is expected to be something like\n<tt><span class=\"pre\">my-file.pt_BR.markio</span></tt> and all sections should be present. The markio parser\nunderstands translated section names for a few languages. If your language is\nnot present, please contribute with translations!</p>\n</div>\n<div id=\"acessory-files-not-ready\">\n<h2>Acessory files (not ready)</h2>\n<p>The content of all sections of a markio source that contains only a block of\nsource code (basically all sections but the title and description) can rather\nbe put inside a separate file. If the markio parser finds a file named\nas <tt><span class=\"pre\">my-file.answer_key.c</span></tt> in the same directory as the main source, it will\nautomatically fill the contents of the <tt>Answer Key (C)</tt>. If both an external\nsource and the section content are present, the external file takes precedence.</p>\n</div>\n<div id=\"command-line-not-ready\">\n<h2>Command line (not ready)</h2>\n<p>This package installs the markio command that can perform several operations\non markio files.</p>\n<p>\u2026</p>\n</div>\n\n          </div>"}, "last_serial": 2732317, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "819a3ae13c363950ae3136ec4e775932", "sha256": "abc1c723398f137e515ca6c9d894349146261f4b6658ad83761fb7174ea7f4f8"}, "downloads": -1, "filename": "markio-0.1.0.tar.gz", "has_sig": false, "md5_digest": "819a3ae13c363950ae3136ec4e775932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19221, "upload_time": "2016-04-05T20:00:00", "upload_time_iso_8601": "2016-04-05T20:00:00.211330Z", "url": "https://files.pythonhosted.org/packages/14/63/22f10ea66d6c250446f2895eb58c9f98bf8ca85e51386b771af97169f1aa/markio-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e047875002ce0e0c8f72300889138d4d", "sha256": "7c26fe6f7f4cc1a12837645deb212aa22a5fbf11531e63f6e8b4a87312fd8fe7"}, "downloads": -1, "filename": "markio-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e047875002ce0e0c8f72300889138d4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19366, "upload_time": "2016-04-09T03:49:32", "upload_time_iso_8601": "2016-04-09T03:49:32.832282Z", "url": "https://files.pythonhosted.org/packages/b7/f1/6ed9f6c541c938891aee2d134904ecfb13612d672d9db6fb56c355b2fef9/markio-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b8be5f7a2bfe9617a1563b3a24aaa0e5", "sha256": "97fc3dc85bb30e72a54163803a05d116f6a6f7230701f42c7dd846faad949a26"}, "downloads": -1, "filename": "markio-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b8be5f7a2bfe9617a1563b3a24aaa0e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19569, "upload_time": "2016-04-11T15:51:50", "upload_time_iso_8601": "2016-04-11T15:51:50.288630Z", "url": "https://files.pythonhosted.org/packages/e0/bd/340d1b5283ecb4bdfa2179128b7fd0c16708f1e7e6ccb0a08d6c911f1fc3/markio-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5261147427c63f8b723f614533ddd889", "sha256": "fe28c80652c9d8d1f3227760beec4eb1b8d39e7c4093ce344e40468029df1818"}, "downloads": -1, "filename": "markio-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5261147427c63f8b723f614533ddd889", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27182, "upload_time": "2016-09-19T01:36:38", "upload_time_iso_8601": "2016-09-19T01:36:38.317957Z", "url": "https://files.pythonhosted.org/packages/ba/f0/68ad6bd38b37e659ece16f07ee1f47ceabaedf4f66dcb714be84774c6eab/markio-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "96deb36abdd8a9148546c4264bf4f5b7", "sha256": "1690bf90dade3f84a9b3a1d857b1a73d926a7142fd6970accf83b67330a279c5"}, "downloads": -1, "filename": "markio-0.1.4.tar.gz", "has_sig": false, "md5_digest": "96deb36abdd8a9148546c4264bf4f5b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30085, "upload_time": "2016-09-21T13:35:38", "upload_time_iso_8601": "2016-09-21T13:35:38.947341Z", "url": "https://files.pythonhosted.org/packages/29/c7/ab753a42bcb4f8f13fe3fd6613b7feea234b6a0932819065f16140534885/markio-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "2d7a0c1e382b7aabc1409454dde215ab", "sha256": "f566a7a4ad8a8316817fa5961b0cf8642808310efb328921339645665f7f1b36"}, "downloads": -1, "filename": "markio-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2d7a0c1e382b7aabc1409454dde215ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30078, "upload_time": "2016-09-21T13:39:36", "upload_time_iso_8601": "2016-09-21T13:39:36.590161Z", "url": "https://files.pythonhosted.org/packages/85/7b/90011bdf4e5373c23af497a96b08916971bbe3dc06b3fa2f575fb7e200aa/markio-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "619de8e9f7069b172b69cd0ea94423c6", "sha256": "68c29d7b3c6ccf6a7a41d092b3ec914718cca49b79ca3d52aa750a880812ea17"}, "downloads": -1, "filename": "markio-0.1.6.tar.gz", "has_sig": false, "md5_digest": "619de8e9f7069b172b69cd0ea94423c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30108, "upload_time": "2016-09-21T13:40:24", "upload_time_iso_8601": "2016-09-21T13:40:24.117922Z", "url": "https://files.pythonhosted.org/packages/bb/34/0cbbb4606e927482f7bd40e3023eba933350b37cc2c850ccfdf5d93aeec5/markio-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "64035d98f0d5726a9ed1c7d2d0e8ee46", "sha256": "2f3628fca336db55b348eaf141e9734e665ed1491cd5c756c798d4787eb28d8e"}, "downloads": -1, "filename": "markio-0.1.7.tar.gz", "has_sig": false, "md5_digest": "64035d98f0d5726a9ed1c7d2d0e8ee46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30449, "upload_time": "2016-10-03T13:42:16", "upload_time_iso_8601": "2016-10-03T13:42:16.405666Z", "url": "https://files.pythonhosted.org/packages/ba/6e/b5f786110fd47aabdc8d97434476a43ec4e859ea7aeb315574534fd9dfba/markio-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5601dcc99cec309980c68cfd95367518", "sha256": "d930fc55206bdc88ecdb560070a74177b80cbd36e5edf727fc16fb79a2e4f2ff"}, "downloads": -1, "filename": "markio-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5601dcc99cec309980c68cfd95367518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31046, "upload_time": "2016-10-06T19:25:59", "upload_time_iso_8601": "2016-10-06T19:25:59.108302Z", "url": "https://files.pythonhosted.org/packages/7f/8a/7326cf3706c5006fd021b2ea1d0b7a7ac891456768fd07eda6e62754f6a1/markio-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "73600d3e04ceaf1f2778c1e57bde9c96", "sha256": "e1f50d948a913cfb6c178536811a379de57686c84ad9d9f4f44ec497081e2122"}, "downloads": -1, "filename": "markio-0.2.1.tar.gz", "has_sig": false, "md5_digest": "73600d3e04ceaf1f2778c1e57bde9c96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31491, "upload_time": "2016-10-08T21:48:22", "upload_time_iso_8601": "2016-10-08T21:48:22.517249Z", "url": "https://files.pythonhosted.org/packages/93/20/9cd04e253991c20cdd8c857b2664f7f229cbf33e88ddbe8eee6c5f082019/markio-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e3942891d27c09d7daee01586f208935", "sha256": "e5ae655c669490b4a119c0b638864d682730a1cbfb9421225360f750fbe02bd1"}, "downloads": -1, "filename": "markio-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e3942891d27c09d7daee01586f208935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32361, "upload_time": "2016-10-20T17:46:38", "upload_time_iso_8601": "2016-10-20T17:46:38.571081Z", "url": "https://files.pythonhosted.org/packages/ec/bf/d98ea39b39c355c7734dbc7a60034398b0f65633e00928bb99d5c8766400/markio-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "ed015c34204b2449ba5025866b958751", "sha256": "0fb14bec3b8f26bbdfb1e121866f8daec0e1e7e859ed51423a617a615272e2bb"}, "downloads": -1, "filename": "markio-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ed015c34204b2449ba5025866b958751", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32395, "upload_time": "2017-03-16T20:27:12", "upload_time_iso_8601": "2017-03-16T20:27:12.130552Z", "url": "https://files.pythonhosted.org/packages/4c/7b/4ae8c1f602b4045e994b67cc74bbc52d31ca0a6ecf28d6031666b0fe6110/markio-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "be208baedfd429855d248ab05b2710af", "sha256": "4f3fcfadfd7033a76d463feb4d84b2c3116b18c6952859b0043fddb6d31a007e"}, "downloads": -1, "filename": "markio-0.2.4.tar.gz", "has_sig": false, "md5_digest": "be208baedfd429855d248ab05b2710af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32397, "upload_time": "2017-03-20T14:37:04", "upload_time_iso_8601": "2017-03-20T14:37:04.746386Z", "url": "https://files.pythonhosted.org/packages/f9/4e/4cbdd5064df3de3b212b270cb8ef2a1bc208a81f2547d3980b2954413003/markio-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "5caa9a9a7fe009377b728bb814f80e3e", "sha256": "790bc9af344802d175125a7ba521aab143e7527370283e2c529583165428b5d1"}, "downloads": -1, "filename": "markio-0.2.5.tar.gz", "has_sig": false, "md5_digest": "5caa9a9a7fe009377b728bb814f80e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32739, "upload_time": "2017-03-26T21:53:19", "upload_time_iso_8601": "2017-03-26T21:53:19.598437Z", "url": "https://files.pythonhosted.org/packages/07/66/39ec6f4ff46ec2f320c2cb2237828b02956c8e90d2e96fdebb613ce34677/markio-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "f6d4e0784da2842288b01c3652de2f67", "sha256": "bf49188154c9f05b1df64b3fa967abb74b462ceb7a12b88b7b32c718ce21ead2"}, "downloads": -1, "filename": "markio-0.2.6.tar.gz", "has_sig": false, "md5_digest": "f6d4e0784da2842288b01c3652de2f67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33372, "upload_time": "2017-03-26T22:49:27", "upload_time_iso_8601": "2017-03-26T22:49:27.379235Z", "url": "https://files.pythonhosted.org/packages/fd/e6/edb5ff65e8644371140338375394f962b7a7e7d16ce54d1a900382d63c99/markio-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6d4e0784da2842288b01c3652de2f67", "sha256": "bf49188154c9f05b1df64b3fa967abb74b462ceb7a12b88b7b32c718ce21ead2"}, "downloads": -1, "filename": "markio-0.2.6.tar.gz", "has_sig": false, "md5_digest": "f6d4e0784da2842288b01c3652de2f67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33372, "upload_time": "2017-03-26T22:49:27", "upload_time_iso_8601": "2017-03-26T22:49:27.379235Z", "url": "https://files.pythonhosted.org/packages/fd/e6/edb5ff65e8644371140338375394f962b7a7e7d16ce54d1a900382d63c99/markio-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:41 2020"}