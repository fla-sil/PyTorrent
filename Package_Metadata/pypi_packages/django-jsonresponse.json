{"info": {"author": "Yasha Borevich", "author_email": "j.borevich@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "About\n=====\n\nWrap view functions, allowng them render python native and custom\nobjects to json\n\nUsage\n-----\n\nSimple wrap returning data into json\n\n.. code:: python\n\n    from jsonresponse import to_json\n\n    @to_json('plain')\n    def hello(request):\n       return dict(hello='world')\n\n::\n\n    GET /hello/\n    {\"hello\": \"world\"}\n\nResult can be wraped in some api manier. Note, you can pass debug=1 to\npretty print response. Use ``JSONRESPONSE_DEFAULT_DEBUG=True`` to enable\nby default.\n\n.. code:: python\n\n    @to_json('api')\n    def goodbye(request):\n       return dict(good='bye')\n\n::\n\n    GET /goodbye/?debug=1\n    {\n        \"data\": {\n            \"good\": \"bye\"\n        }, \n        \"err\": 0\n    }\n\nAutomaticaly error handling, note response code is 500 here\n\n.. code:: python\n\n    @to_json('api')\n    def error(request):\n       raise Exception('Wooot!??')\n\n::\n\n    GET /error/\n    {            \n        \"err_class\": \"Exception\",\n        \"err_desc\": \"Wooot!??\",\n        \"data\": null,\n        \"err\": 1\n    }\n\nYou can pass raise=1 to raise exceptions in debug purposes instead of\npassing info to json response\n\n::\n\n    GET /error/?raise=1\n    Traceback (most recent call last):\n    Exception: Wooot!??\n\nYou can pass custom kwargs to json.dumps, just give them to constructor:\n\n.. code:: python\n\n    @to_json('plain', separators=(',', ':'))\n    def custom_kwargs(request):\n       return ['a', { 'b': 1 }]\n\n::\n\n    GET /\n    [\"a\",{\"b\":1}]\n\nYou can serialize not only pure python data types. Implement\n``serialize`` method on toplevel object or each element of toplevel\narray. Note, that request object is passed to serialize method.\n\n.. code:: python\n\n    class User(object):\n        def __init__(self, name, age):\n            self.name = name\n            self.age = age\n\n        def serialize(self, request):\n            if request.GET.get('with_age', False):\n                return dict(name=self.name, age=self.age)\n            else:\n                return dict(name=self.name)\n\n    @to_json('objects')\n    def users(request):\n       return [User('Bob', 10), User('Anna', 12)]\n\n::\n\n    GET /users/?with_age=1\n    {\n        \"data\": [\n            {\n                \"age\": 10, \n                \"name\": \"Bob\"\n            }, \n            {\n                \"age\": 12, \n                \"name\": \"Anna\"\n            }\n        ], \n        \"err\": 0\n    }\n\nIt is easy to use jsonp, just pass format=jsonp\n\n::\n\n    GET /users/?format=jsonp\n    callback({\n        \"data\": [\n            {   \n                \"name\": \"Bob\"\n            },\n            {   \n                \"name\": \"Anna\"\n            }\n        ],\n        \"err\": 0\n    });\n\nYou can override the name of callback method using\n``JSONRESPONSE_CALLBACK_NAME`` option or query arg\ncallback=another\\_callback\n\n::\n\n    GET /users/?format=jsonp&callback=my_callback    \n    my_callback({\n        \"data\": [\n            {   \n                \"name\": \"Bob\"\n            },\n            {   \n                \"name\": \"Anna\"\n            }\n        ],\n        \"err\": 0\n    });", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jjay/django-jsonresponse", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-jsonresponse", "package_url": "https://pypi.org/project/django-jsonresponse/", "platform": "any", "project_url": "https://pypi.org/project/django-jsonresponse/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jjay/django-jsonresponse"}, "release_url": "https://pypi.org/project/django-jsonresponse/0.10.0/", "requires_dist": null, "requires_python": null, "summary": "Simple wrap django views to render json", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Wrap view functions, allowng them render python native and custom\nobjects to json</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Simple wrap returning data into json</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jsonresponse</span> <span class=\"kn\">import</span> <span class=\"n\">to_json</span>\n\n<span class=\"nd\">@to_json</span><span class=\"p\">(</span><span class=\"s1\">'plain'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">hello</span><span class=\"o\">=</span><span class=\"s1\">'world'</span><span class=\"p\">)</span>\n</pre>\n<pre>GET /hello/\n{\"hello\": \"world\"}\n</pre>\n<p>Result can be wraped in some api manier. Note, you can pass debug=1 to\npretty print response. Use <tt>JSONRESPONSE_DEFAULT_DEBUG=True</tt> to enable\nby default.</p>\n<pre><span class=\"nd\">@to_json</span><span class=\"p\">(</span><span class=\"s1\">'api'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">goodbye</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">good</span><span class=\"o\">=</span><span class=\"s1\">'bye'</span><span class=\"p\">)</span>\n</pre>\n<pre>GET /goodbye/?debug=1\n{\n    \"data\": {\n        \"good\": \"bye\"\n    },\n    \"err\": 0\n}\n</pre>\n<p>Automaticaly error handling, note response code is 500 here</p>\n<pre><span class=\"nd\">@to_json</span><span class=\"p\">(</span><span class=\"s1\">'api'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">'Wooot!??'</span><span class=\"p\">)</span>\n</pre>\n<pre>GET /error/\n{\n    \"err_class\": \"Exception\",\n    \"err_desc\": \"Wooot!??\",\n    \"data\": null,\n    \"err\": 1\n}\n</pre>\n<p>You can pass raise=1 to raise exceptions in debug purposes instead of\npassing info to json response</p>\n<pre>GET /error/?raise=1\nTraceback (most recent call last):\nException: Wooot!??\n</pre>\n<p>You can pass custom kwargs to json.dumps, just give them to constructor:</p>\n<pre><span class=\"nd\">@to_json</span><span class=\"p\">(</span><span class=\"s1\">'plain'</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"s1\">':'</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_kwargs</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"p\">}]</span>\n</pre>\n<pre>GET /\n[\"a\",{\"b\":1}]\n</pre>\n<p>You can serialize not only pure python data types. Implement\n<tt>serialize</tt> method on toplevel object or each element of toplevel\narray. Note, that request object is passed to serialize method.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">serialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'with_age'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@to_json</span><span class=\"p\">(</span><span class=\"s1\">'objects'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">users</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'Anna'</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)]</span>\n</pre>\n<pre>GET /users/?with_age=1\n{\n    \"data\": [\n        {\n            \"age\": 10,\n            \"name\": \"Bob\"\n        },\n        {\n            \"age\": 12,\n            \"name\": \"Anna\"\n        }\n    ],\n    \"err\": 0\n}\n</pre>\n<p>It is easy to use jsonp, just pass format=jsonp</p>\n<pre>GET /users/?format=jsonp\ncallback({\n    \"data\": [\n        {\n            \"name\": \"Bob\"\n        },\n        {\n            \"name\": \"Anna\"\n        }\n    ],\n    \"err\": 0\n});\n</pre>\n<p>You can override the name of callback method using\n<tt>JSONRESPONSE_CALLBACK_NAME</tt> option or query arg\ncallback=another_callback</p>\n<pre>GET /users/?format=jsonp&amp;callback=my_callback\nmy_callback({\n    \"data\": [\n        {\n            \"name\": \"Bob\"\n        },\n        {\n            \"name\": \"Anna\"\n        }\n    ],\n    \"err\": 0\n});\n</pre>\n</div>\n\n          </div>"}, "last_serial": 996088, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "784bfb2a9a1a89d1793fe309f6282459", "sha256": "47dd160ca109b7e0d45f1ac3fe98eab3205b8a5710396559c69194ddb4300844"}, "downloads": -1, "filename": "django-jsonresponse-0.1.tar.gz", "has_sig": false, "md5_digest": "784bfb2a9a1a89d1793fe309f6282459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3755, "upload_time": "2012-11-14T13:20:32", "upload_time_iso_8601": "2012-11-14T13:20:32.554186Z", "url": "https://files.pythonhosted.org/packages/d8/7b/2f9a664b37d0e1ee38e874e7ea38d659c6b351eda5e7cf74ccf9b46ede67/django-jsonresponse-0.1.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "0bb97742177e6ef7a2d1e12999475bae", "sha256": "439dbd10a256a8fb87278394201788fe601b38890481c707cb8314b448295c59"}, "downloads": -1, "filename": "django-jsonresponse-0.10.0.tar.gz", "has_sig": false, "md5_digest": "0bb97742177e6ef7a2d1e12999475bae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4768, "upload_time": "2014-02-10T12:03:33", "upload_time_iso_8601": "2014-02-10T12:03:33.778403Z", "url": "https://files.pythonhosted.org/packages/06/47/9025f80b59af0aa19684e4564e5b813ad5c84927265eb6ad7d6beae6cf63/django-jsonresponse-0.10.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6909bc168c84cc285302785d4c49de5e", "sha256": "f29525b5402980be561b1d020c8647f8054c37a9db280aa03995fee7ce635134"}, "downloads": -1, "filename": "django-jsonresponse-0.2.tar.gz", "has_sig": false, "md5_digest": "6909bc168c84cc285302785d4c49de5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4128, "upload_time": "2012-11-15T09:19:26", "upload_time_iso_8601": "2012-11-15T09:19:26.347307Z", "url": "https://files.pythonhosted.org/packages/e9/63/b3e376da24282a038af4138c1b0ce7a0a525595b6c79d5f7e6da00edd6fe/django-jsonresponse-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "0f5d5336aaada44a8a55616ceac7bf3b", "sha256": "3ba3afc19c6ad70c474c15d427b066ad4060ccd9f61c81067b6f85af242dccab"}, "downloads": -1, "filename": "django-jsonresponse-0.3.tar.gz", "has_sig": false, "md5_digest": "0f5d5336aaada44a8a55616ceac7bf3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4136, "upload_time": "2012-11-15T10:58:50", "upload_time_iso_8601": "2012-11-15T10:58:50.095012Z", "url": "https://files.pythonhosted.org/packages/13/53/7a741465b29e63e6f912aab8c7ef703761565c1c914c1e5bd211df0d809f/django-jsonresponse-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "21932fce13a5c8fd2e71cdd505ab4691", "sha256": "21965004de5f11f16c6c3a6d90ff9ad553d82c5fe78cf39c8b28854f4ec90f67"}, "downloads": -1, "filename": "django-jsonresponse-0.4.tar.gz", "has_sig": false, "md5_digest": "21932fce13a5c8fd2e71cdd505ab4691", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4369, "upload_time": "2012-11-26T09:01:27", "upload_time_iso_8601": "2012-11-26T09:01:27.212273Z", "url": "https://files.pythonhosted.org/packages/49/f5/58d3c3c4e91db6c7f80a8a49fd43cd40247c37cc8b915a7de1a6022b6ed9/django-jsonresponse-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "built for Linux-3.2.0-33-generic-x86_64-with-glibc2.7", "digests": {"md5": "f0217caa841344f61561171526815889", "sha256": "dc9679883c6161d0b61e8c532cfd52c6c0788544261ccfa7cd05c2cd1c0fcd06"}, "downloads": -1, "filename": "django-jsonresponse-0.5.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "f0217caa841344f61561171526815889", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6125, "upload_time": "2013-01-22T10:14:55", "upload_time_iso_8601": "2013-01-22T10:14:55.288454Z", "url": "https://files.pythonhosted.org/packages/5e/4f/460547de6479a4d4385bbfcbdf717d0ee42993f1217444b0edf0e8f12e1b/django-jsonresponse-0.5.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "417b60fccf029ac0166d882740f2b0b4", "sha256": "c89c258b573d3b5505606e47216d1a8b9fe1220ef89da8cb33772d9ecccb1dad"}, "downloads": -1, "filename": "django-jsonresponse-0.5.tar.gz", "has_sig": false, "md5_digest": "417b60fccf029ac0166d882740f2b0b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4459, "upload_time": "2013-01-22T10:17:00", "upload_time_iso_8601": "2013-01-22T10:17:00.695196Z", "url": "https://files.pythonhosted.org/packages/f9/df/b3fda2bcc266157d3c1f35fba51f4a986f0d829bd4d5785250b541e2069b/django-jsonresponse-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "02c8b18a6c71a7b877aa5dca35978e8e", "sha256": "4777cd2c3550a940a2e106de58499d9f5b09da8a6e25943ef55d2d49681d341c"}, "downloads": -1, "filename": "django-jsonresponse-0.6.tar.gz", "has_sig": false, "md5_digest": "02c8b18a6c71a7b877aa5dca35978e8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4469, "upload_time": "2013-05-23T12:33:08", "upload_time_iso_8601": "2013-05-23T12:33:08.674318Z", "url": "https://files.pythonhosted.org/packages/ff/b5/fde6fc30bb80b465807ef29418a7fe36c573d99babd0b0473c7d8b7ccfe3/django-jsonresponse-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "b7349c995587582266cda2ee138a2822", "sha256": "f2c8f48083fab8fcc176bc37b6f6c7d36920ff4856c3d01a1fe9196ce6b6f50b"}, "downloads": -1, "filename": "django-jsonresponse-0.7.tar.gz", "has_sig": false, "md5_digest": "b7349c995587582266cda2ee138a2822", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4491, "upload_time": "2013-05-28T13:38:01", "upload_time_iso_8601": "2013-05-28T13:38:01.608126Z", "url": "https://files.pythonhosted.org/packages/81/ef/c89b65a66a4577f2389940c9e783fa6eb1d54b0583a2807d2dace67112da/django-jsonresponse-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "f2659402f2d54d4619a022f29fa3e967", "sha256": "63b54f24cba0ba183131055b1a28f07ed334271dcb0941ac67f929f821ed650d"}, "downloads": -1, "filename": "django-jsonresponse-0.8.tar.gz", "has_sig": false, "md5_digest": "f2659402f2d54d4619a022f29fa3e967", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3682, "upload_time": "2013-09-14T15:58:37", "upload_time_iso_8601": "2013-09-14T15:58:37.383698Z", "url": "https://files.pythonhosted.org/packages/b3/a1/7779281feb093a3a87715ae19a1297788add333d678341f4ff99cd286314/django-jsonresponse-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "5fff0570e09f2a91771d63a73cb6bb1f", "sha256": "29b6b93615a8cd138c88379a06827ce464628ee2cb984c8b0ff2ad6f259b7122"}, "downloads": -1, "filename": "django-jsonresponse-0.8.1.tar.gz", "has_sig": false, "md5_digest": "5fff0570e09f2a91771d63a73cb6bb1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3689, "upload_time": "2013-09-14T16:11:55", "upload_time_iso_8601": "2013-09-14T16:11:55.478736Z", "url": "https://files.pythonhosted.org/packages/51/46/02ed39a2897570060ce2f550e54e06e7fcb476526e476a72be0cdc7ca325/django-jsonresponse-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "e55cac64b698bce9a6086575dd4988ce", "sha256": "80666ccdc2a146f2b1c243a12c1e1068877546e4e8384df57967ed9b40b472a7"}, "downloads": -1, "filename": "django-jsonresponse-0.8.2.tar.gz", "has_sig": false, "md5_digest": "e55cac64b698bce9a6086575dd4988ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3689, "upload_time": "2013-09-14T16:14:03", "upload_time_iso_8601": "2013-09-14T16:14:03.189220Z", "url": "https://files.pythonhosted.org/packages/1a/27/1913a2b9a22df5810306d32fa16087f19b1c7b0b27b7f470a276f919f40d/django-jsonresponse-0.8.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "4bc4f65db616c4f3351baf5f952101df", "sha256": "f44828745ddf3fd6970c3be89fa07d8b145f6d6a7f7f767dc0efe1473ad7ed4c"}, "downloads": -1, "filename": "django-jsonresponse-0.9.0.tar.gz", "has_sig": false, "md5_digest": "4bc4f65db616c4f3351baf5f952101df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4675, "upload_time": "2013-10-10T09:04:26", "upload_time_iso_8601": "2013-10-10T09:04:26.641093Z", "url": "https://files.pythonhosted.org/packages/97/5f/6c72613e6342b801945a154d2ed5129b5b09e49603068567873d003c3bc9/django-jsonresponse-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bb97742177e6ef7a2d1e12999475bae", "sha256": "439dbd10a256a8fb87278394201788fe601b38890481c707cb8314b448295c59"}, "downloads": -1, "filename": "django-jsonresponse-0.10.0.tar.gz", "has_sig": false, "md5_digest": "0bb97742177e6ef7a2d1e12999475bae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4768, "upload_time": "2014-02-10T12:03:33", "upload_time_iso_8601": "2014-02-10T12:03:33.778403Z", "url": "https://files.pythonhosted.org/packages/06/47/9025f80b59af0aa19684e4564e5b813ad5c84927265eb6ad7d6beae6cf63/django-jsonresponse-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:28 2020"}