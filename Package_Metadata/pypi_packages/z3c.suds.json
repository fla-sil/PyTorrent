{"info": {"author": "David Glick, Groundwire", "author_email": "davidglick@groundwire.org", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "Introduction\n============\n\nz3c.suds manages a connection pool of `suds`_ client objects in the context of\na ZODB-based application.  (suds is a lightweight client library for consuming\nSOAP web services in Python.)  Using it avoids the need for instantiating a new\nclient for the same webservice in multiple requests (which may be expensive due\nto parsing WSDL, etc.)\n\n.. _`suds`: https://fedorahosted.org/suds/\n\nUsage\n-----\n\nA client may be obtained via the `get_suds_client` method::\n\n  client = get_suds_client(wsdl_uri, context=None)\n\nThis returns an existing suds client if one is found in the cache for the given\nWSDL; otherwise it returns a new client object and stores it in the cache.\n\n`wsdl_path` is the URI of the WSDL (web service definition language)\ndescription of the web service. (Use a file:// URI for a locally stored WSDL.)\n\n`context` is a persistent object (in the ZODB sense). If not provided, the\n`getSite` method of zope.site.hooks will be used to obtain an object (which\nis probably only sensible within the context of a Zopish framework). If the\ncontext object is associated with a ZODB connection, the client will be cached\nin the connection's `foreign_connections` dictionary. If the context object is\nnot yet associated with a ZODB connection, the client will be cached in a\nvolatile attribute instead. This approach to piggybacking a pool of connections\non the ZODB connection pool is based on `alm.solrindex`, and further documented\nthere.\n\n.. _`alm.solrindex`: http://pypi.python.org/pypi/alm.solrindex\n\n\nChangelog\n=========\n\n1.0 (2010-09-17)\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.zope.org/z3c.suds/trunk", "keywords": "suds soap zope zodb", "license": "ZPL 2.1", "maintainer": null, "maintainer_email": null, "name": "z3c.suds", "package_url": "https://pypi.org/project/z3c.suds/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/z3c.suds/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.zope.org/z3c.suds/trunk"}, "release_url": "https://pypi.org/project/z3c.suds/1.0/", "requires_dist": null, "requires_python": null, "summary": "Manages a pool of suds SOAP clients within the context of a Zope application", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>z3c.suds manages a connection pool of <a href=\"https://fedorahosted.org/suds/\" rel=\"nofollow\">suds</a> client objects in the context of\na ZODB-based application.  (suds is a lightweight client library for consuming\nSOAP web services in Python.)  Using it avoids the need for instantiating a new\nclient for the same webservice in multiple requests (which may be expensive due\nto parsing WSDL, etc.)</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>A client may be obtained via the <cite>get_suds_client</cite> method:</p>\n<pre>client = get_suds_client(wsdl_uri, context=None)\n</pre>\n<p>This returns an existing suds client if one is found in the cache for the given\nWSDL; otherwise it returns a new client object and stores it in the cache.</p>\n<p><cite>wsdl_path</cite> is the URI of the WSDL (web service definition language)\ndescription of the web service. (Use a <a>file://</a> URI for a locally stored WSDL.)</p>\n<p><cite>context</cite> is a persistent object (in the ZODB sense). If not provided, the\n<cite>getSite</cite> method of zope.site.hooks will be used to obtain an object (which\nis probably only sensible within the context of a Zopish framework). If the\ncontext object is associated with a ZODB connection, the client will be cached\nin the connection\u2019s <cite>foreign_connections</cite> dictionary. If the context object is\nnot yet associated with a ZODB connection, the client will be cached in a\nvolatile attribute instead. This approach to piggybacking a pool of connections\non the ZODB connection pool is based on <cite>alm.solrindex</cite>, and further documented\nthere.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">1.0 (2010-09-17)</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 802114, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "49037e3afc5d174beed5161c0a2dc7bc", "sha256": "0a7872dfd2cbaf2eeedc722c2bbbc4209bcc67aae9f499240dd6be5e533a4926"}, "downloads": -1, "filename": "z3c.suds-1.0.zip", "has_sig": true, "md5_digest": "49037e3afc5d174beed5161c0a2dc7bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10282, "upload_time": "2010-09-18T02:49:37", "upload_time_iso_8601": "2010-09-18T02:49:37.496218Z", "url": "https://files.pythonhosted.org/packages/3c/b0/870da221189de775a1012f5a9df4509aef03bcd9bf23757e59792ef8401e/z3c.suds-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49037e3afc5d174beed5161c0a2dc7bc", "sha256": "0a7872dfd2cbaf2eeedc722c2bbbc4209bcc67aae9f499240dd6be5e533a4926"}, "downloads": -1, "filename": "z3c.suds-1.0.zip", "has_sig": true, "md5_digest": "49037e3afc5d174beed5161c0a2dc7bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10282, "upload_time": "2010-09-18T02:49:37", "upload_time_iso_8601": "2010-09-18T02:49:37.496218Z", "url": "https://files.pythonhosted.org/packages/3c/b0/870da221189de775a1012f5a9df4509aef03bcd9bf23757e59792ef8401e/z3c.suds-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:20:27 2020"}