{"info": {"author": "Giesela Inc.", "author_email": "team@giesela.dev", "bugtrack_url": null, "classifiers": [], "description": "# AIObservable\n\n[![PyPI](https://img.shields.io/pypi/v/aiobservable)][pypi-link]\n\n\nA simple and efficient implementation of the observable pattern.\n\n\n## Introduction\n\nWhat sets it apart is that it doesn't represents events as a combination\nof a name and arguments, but instead operates on classes.\n\nInstead of using names like \"on_connect\" the library encourages the use\nof a \"ConnectEvent\" class which has the arguments as its attributes.\nInstead of listening to a meaningless name observers instead use the\nevent type (the class). When emitting an event we then use instances of\nthe event class.\n\nApart from other benefits this especially helps with typings and\neliminates the issue of having to know the function signature for each\nevent, as the only argument is the event instance.\n\nUsing the built-in\n[dataclasses](https://docs.python.org/3/library/dataclasses.html) makes\nit easy to avoid writing boiler-plate code for each event.\n\n\n## Example\n\n```python\nimport asyncio\nimport dataclasses\n\nimport aiobservable\n\n\n@dataclasses.dataclass()\nclass ConnectEvent:\n    user_id: int\n    user_name: str\n\nasync def main():\n    observable = aiobservable.Observable()\n\n    def on_connect(event: ConnectEvent) -> None:\n        print(f\"{event.user_name} connected!\")\n\n    observable.on(ConnectEvent, on_connect)\n\n    event = ConnectEvent(1, \"Simon\")\n\n    # emit returns a future which resolves to None when all observers\n    # are done handling the event\n    await observable.emit(event)\n\nasyncio.run(main())\n```\n\n\n## Installing\n\nYou can install the library from [PyPI][pypi-link]:\n\n```shell\npip install aiobservable\n```\n\n\n[pypi-link]: https://pypi.org/project/aiobservable/ \"AIObservable on PyPI\"\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gieseladev/aiobservable", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiobservable", "package_url": "https://pypi.org/project/aiobservable/", "platform": "", "project_url": "https://pypi.org/project/aiobservable/", "project_urls": {"Homepage": "https://github.com/gieseladev/aiobservable"}, "release_url": "https://pypi.org/project/aiobservable/0.2.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AIObservable</h1>\n<p><a href=\"https://pypi.org/project/aiobservable/\" rel=\"nofollow\" title=\"AIObservable on PyPI\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af0d438e2665c5563a5843911dee10b85f4743e0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f627365727661626c65\"></a></p>\n<p>A simple and efficient implementation of the observable pattern.</p>\n<h2>Introduction</h2>\n<p>What sets it apart is that it doesn't represents events as a combination\nof a name and arguments, but instead operates on classes.</p>\n<p>Instead of using names like \"on_connect\" the library encourages the use\nof a \"ConnectEvent\" class which has the arguments as its attributes.\nInstead of listening to a meaningless name observers instead use the\nevent type (the class). When emitting an event we then use instances of\nthe event class.</p>\n<p>Apart from other benefits this especially helps with typings and\neliminates the issue of having to know the function signature for each\nevent, as the only argument is the event instance.</p>\n<p>Using the built-in\n<a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=\"nofollow\">dataclasses</a> makes\nit easy to avoid writing boiler-plate code for each event.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dataclasses</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">aiobservable</span>\n\n\n<span class=\"nd\">@dataclasses</span><span class=\"o\">.</span><span class=\"n\">dataclass</span><span class=\"p\">()</span>\n<span class=\"k\">class</span> <span class=\"nc\">ConnectEvent</span><span class=\"p\">:</span>\n    <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">user_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">observable</span> <span class=\"o\">=</span> <span class=\"n\">aiobservable</span><span class=\"o\">.</span><span class=\"n\">Observable</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_connect</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">ConnectEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">user_name</span><span class=\"si\">}</span><span class=\"s2\"> connected!\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">observable</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"n\">ConnectEvent</span><span class=\"p\">,</span> <span class=\"n\">on_connect</span><span class=\"p\">)</span>\n\n    <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">ConnectEvent</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"Simon\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># emit returns a future which resolves to None when all observers</span>\n    <span class=\"c1\"># are done handling the event</span>\n    <span class=\"k\">await</span> <span class=\"n\">observable</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>Installing</h2>\n<p>You can install the library from <a href=\"https://pypi.org/project/aiobservable/\" rel=\"nofollow\" title=\"AIObservable on PyPI\">PyPI</a>:</p>\n<pre>pip install aiobservable\n</pre>\n\n          </div>"}, "last_serial": 6068998, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7d594a6b60d172d338a74a8171b48a27", "sha256": "6023ae2009b97a5727c5c9220484b34f52cf5b721071df7bf1f94f9ca9085aee"}, "downloads": -1, "filename": "aiobservable-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7d594a6b60d172d338a74a8171b48a27", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 3202, "upload_time": "2019-07-21T16:30:13", "upload_time_iso_8601": "2019-07-21T16:30:13.657278Z", "url": "https://files.pythonhosted.org/packages/2d/fb/db94b5e86e46a638825294cde3e88aaf661821657b3ca0a292de0e74067d/aiobservable-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f03a3f8bcc0ece6a739224b9d9334e9f", "sha256": "d1012b5c537f9456748aac5ca2a1745d979a703d6d4cf045ef1fbed99a4b5dd7"}, "downloads": -1, "filename": "aiobservable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f03a3f8bcc0ece6a739224b9d9334e9f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 3568, "upload_time": "2019-07-25T15:45:36", "upload_time_iso_8601": "2019-07-25T15:45:36.665575Z", "url": "https://files.pythonhosted.org/packages/9b/1a/f03e9acca18485e16cc8ed4b7a0829e817f94b5cec7a2ea310dcaaa3ab3e/aiobservable-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f2e9f10235fb7010a521a08f1d120c9b", "sha256": "1699520a9487d1703eeb9820d75280e920b61a772ff2acff3bbf148d5c1bab89"}, "downloads": -1, "filename": "aiobservable-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f2e9f10235fb7010a521a08f1d120c9b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 7135, "upload_time": "2019-07-29T19:58:30", "upload_time_iso_8601": "2019-07-29T19:58:30.367469Z", "url": "https://files.pythonhosted.org/packages/9a/68/70828863071173b79e01f0683f23e30b290b40c506d948c4de0d439364b9/aiobservable-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8d4852649d991bf41632e9ea14c9cd76", "sha256": "a4924b0be09f190dd4ad0d47a7cc5a28643dd36c7ab2a90392cd7395c90b60c0"}, "downloads": -1, "filename": "aiobservable-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8d4852649d991bf41632e9ea14c9cd76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10355, "upload_time": "2019-11-02T13:47:47", "upload_time_iso_8601": "2019-11-02T13:47:47.966798Z", "url": "https://files.pythonhosted.org/packages/f5/bd/6201e009f7df18de20c9b5f6c0bb2d5d5700ad40cce0c0cb60f878d41bf9/aiobservable-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9686700e698d4c6be482d0c67e41391", "sha256": "84ec56b3f48dd8ae5f0f923228187bf583f6dda3e864ce242f5521903c815089"}, "downloads": -1, "filename": "aiobservable-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f9686700e698d4c6be482d0c67e41391", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8932, "upload_time": "2019-11-02T13:47:49", "upload_time_iso_8601": "2019-11-02T13:47:49.146799Z", "url": "https://files.pythonhosted.org/packages/1c/b5/8ecc8505cc72c1f3787f49c00e09ee7851d8991eef7d0fa7b2c251298526/aiobservable-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e75642a634dad78422d0a424e50a1269", "sha256": "00a282a90e918d5b57e88cbe97a3f8d5ae7847ac86d7e23135953bf464739171"}, "downloads": -1, "filename": "aiobservable-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e75642a634dad78422d0a424e50a1269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10384, "upload_time": "2019-11-02T19:45:14", "upload_time_iso_8601": "2019-11-02T19:45:14.254761Z", "url": "https://files.pythonhosted.org/packages/77/51/51dd0fee247a915d9cd59dc66d20e39b36711e56b353236b334fa8ad357c/aiobservable-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99a285850c4756d225ac7bff96b57b6b", "sha256": "b42ad82b1e631362750f1c518c19b215ac34141e01c06c3510d3eef9236b8bd2"}, "downloads": -1, "filename": "aiobservable-0.2.2.tar.gz", "has_sig": false, "md5_digest": "99a285850c4756d225ac7bff96b57b6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8979, "upload_time": "2019-11-02T19:45:15", "upload_time_iso_8601": "2019-11-02T19:45:15.515927Z", "url": "https://files.pythonhosted.org/packages/e0/8b/57a1cb44eb66dc10954bef0571d3a1caac1faea8632a7444631dc1536f4d/aiobservable-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e75642a634dad78422d0a424e50a1269", "sha256": "00a282a90e918d5b57e88cbe97a3f8d5ae7847ac86d7e23135953bf464739171"}, "downloads": -1, "filename": "aiobservable-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e75642a634dad78422d0a424e50a1269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10384, "upload_time": "2019-11-02T19:45:14", "upload_time_iso_8601": "2019-11-02T19:45:14.254761Z", "url": "https://files.pythonhosted.org/packages/77/51/51dd0fee247a915d9cd59dc66d20e39b36711e56b353236b334fa8ad357c/aiobservable-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99a285850c4756d225ac7bff96b57b6b", "sha256": "b42ad82b1e631362750f1c518c19b215ac34141e01c06c3510d3eef9236b8bd2"}, "downloads": -1, "filename": "aiobservable-0.2.2.tar.gz", "has_sig": false, "md5_digest": "99a285850c4756d225ac7bff96b57b6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8979, "upload_time": "2019-11-02T19:45:15", "upload_time_iso_8601": "2019-11-02T19:45:15.515927Z", "url": "https://files.pythonhosted.org/packages/e0/8b/57a1cb44eb66dc10954bef0571d3a1caac1faea8632a7444631dc1536f4d/aiobservable-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:45 2020"}