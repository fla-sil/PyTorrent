{"info": {"author": "Lukasz G. Migas", "author_email": "lukas.migas@yahoo.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# SimpleParam\n\n[![Build Status](https://travis-ci.com/lukasz-migas/SimpleParam.svg?branch=master)](https://travis-ci.com/lukasz-migas/SimpleParam)\n[![CircleCI](https://circleci.com/gh/lukasz-migas/SimpleParam.svg?style=svg)](https://circleci.com/gh/lukasz-migas/SimpleParam)\n[![Build status](https://ci.appveyor.com/api/projects/status/518hbck32eaekp4w?svg=true)](https://ci.appveyor.com/project/lukasz-migas/simpleparam)\n[![codecov](https://codecov.io/gh/lukasz-migas/SimpleParam/branch/master/graph/badge.svg)](https://codecov.io/gh/lukasz-migas/SimpleParam)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/775f9aedd36b49de9400362fe3a57918)](https://www.codacy.com/manual/lukasz-migas/SimpleParam?utm_source=github.com&utm_medium=referral&utm_content=lukasz-migas/SimpleParam&utm_campaign=Badge_Grade)\n[![CodeFactor](https://www.codefactor.io/repository/github/lukasz-migas/simpleparam/badge)](https://www.codefactor.io/repository/github/lukasz-migas/simpleparam)\n\n## About\n\n`SimpleParam` was inspired by the [param](https://param.pyviz.org/) library which offers lots of neat features in a\nsmall package, however `param` has a tricky codebase. In `SimpleParam` you can either create `Parameter` or\n`ParameterStore` using simple synthax.\n\n`SimpleParam` is certainly not complete and is missing a lot of awesome features of `param` and of course, has not been battle-tested yet. Missing features (such as `Array`, `List`, etc) will be added as my other projects that use `SimpleParam` will require them.\n\n## Usage\n\nYou can intilize `Parameter` like this:\n\n```python\nimport simpleparam as param\n\nnumber = param.Number(42)\nnumber\n\n>>> Parameter(name=param, value=42, doc=')\n```\n\nHowever, it is probably better to use parameters inside of a `ParameterStore`, where you can store multiple parameters together and take advantage of additional functionality (e.g. locking of parameters with `constant` or exporting parameters as JSON object using `export_as_dict`):\n\n```python\nimport simpleparam as param\n\nclass Config(param.ParameterStore):\n    def __init__(self):\n        param.ParameterStore.__init__(self)\n\n        # # you can add parameter docstrings by setting `doc`\n        self.integer = param.Integer(42,\n                                     doc=\"A not very important value\")\n        # `auto_bound` forces hard bounds on values that are outside the specification\n        self.number = param.Number(42.,\n                                   softbounds=[0, 100],\n                                   hardbounds=[1, 100],\n                                   auto_bound=True)\n        # setting `allow_any` to False, will force values to be of `str` instance\n        self.string = param.String(\"string\",\n                                   allow_any=False)\n        # you can set internal parameter name by setting the value of `name`\n        self.choice = param.Choice(\"foo\",\n                                   name=\"foo_bar_choice\",\n                                   choices=[\"foo\", \"bar\"],\n                                   )\n        # parameters can be prevented from being changed by setting value of `constant\n        self.color = param.Color(\"#FFFFFF\",\n                                 constant=True)\n        self.bool = param.Boolean(True)\n        self.range = param.Range(value=[0, 100], hardbounds=[0, 100])\n\nconfig = Config()\nconfig\n\n>>> ParameterStore(count=7)\n```\n\nFor complete documentation, please visit the [docs](https://www.simpleparam.lukasz-migas.com/) website.\n\n## Instalation\n\nInstall from PyPI\n\n```python\npip install simpleparam\n```\n\nor directly from GitHub\n\n```python\npip install git+https://github.com/lukasz-migas/SimpleParam.git\n```\n\nor in development mode\n\n```python\ngit clone git+https://github.com/lukasz-migas/SimpleParam.git\n\ncd SimpleParam\n\npython setup.py develop\n```\n\n## Requirements\n\nSimpleParam has no external requirements and works in py2 and py3.\n\n## Planned features\n\n-   add 'List', 'Dict' classes\n-   rename 'Color' to 'ColorHEX' or add 'modes': RGB or HEX\n-   add Array class", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/lukasz-migas/SimpleParam", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lukasz-migas/SimpleParam", "keywords": "", "license": "Apache license 2.0", "maintainer": "Lukasz G. Migas", "maintainer_email": "lukas.migas@yahoo.com", "name": "simpleparam", "package_url": "https://pypi.org/project/simpleparam/", "platform": "", "project_url": "https://pypi.org/project/simpleparam/", "project_urls": {"Download": "https://github.com/lukasz-migas/SimpleParam", "Homepage": "https://github.com/lukasz-migas/SimpleParam"}, "release_url": "https://pypi.org/project/simpleparam/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "SimpleParam: simplified parameters with optional type and range checking", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SimpleParam</h1>\n<p><a href=\"https://travis-ci.com/lukasz-migas/SimpleParam\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fd7c85082a51d8cbc0b2b51f0b9909b0f911a06/68747470733a2f2f7472617669732d63692e636f6d2f6c756b61737a2d6d696761732f53696d706c65506172616d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://circleci.com/gh/lukasz-migas/SimpleParam\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4362807a0a2504bac013d7ebd2ef6b4e6a8b4973/68747470733a2f2f636972636c6563692e636f6d2f67682f6c756b61737a2d6d696761732f53696d706c65506172616d2e7376673f7374796c653d737667\"></a>\n<a href=\"https://ci.appveyor.com/project/lukasz-migas/simpleparam\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e2c583c35ec4e12164e7174be5e4bd22e4da9d2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3531386862636b33326561656b7034773f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/lukasz-migas/SimpleParam\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e1bb21605297277af2f8d069317dcd083d13e99/68747470733a2f2f636f6465636f762e696f2f67682f6c756b61737a2d6d696761732f53696d706c65506172616d2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codacy.com/manual/lukasz-migas/SimpleParam?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=lukasz-migas/SimpleParam&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/999591a3e4ede9b87ae51937f3dd5f37e90a8afa/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3737356639616564643336623439646539343030333632666533613537393138\"></a>\n<a href=\"https://www.codefactor.io/repository/github/lukasz-migas/simpleparam\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88a34a66956fee401210e6f95849dfe1d96532a5/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6c756b61737a2d6d696761732f73696d706c65706172616d2f6261646765\"></a></p>\n<h2>About</h2>\n<p><code>SimpleParam</code> was inspired by the <a href=\"https://param.pyviz.org/\" rel=\"nofollow\">param</a> library which offers lots of neat features in a\nsmall package, however <code>param</code> has a tricky codebase. In <code>SimpleParam</code> you can either create <code>Parameter</code> or\n<code>ParameterStore</code> using simple synthax.</p>\n<p><code>SimpleParam</code> is certainly not complete and is missing a lot of awesome features of <code>param</code> and of course, has not been battle-tested yet. Missing features (such as <code>Array</code>, <code>List</code>, etc) will be added as my other projects that use <code>SimpleParam</code> will require them.</p>\n<h2>Usage</h2>\n<p>You can intilize <code>Parameter</code> like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">simpleparam</span> <span class=\"k\">as</span> <span class=\"nn\">param</span>\n\n<span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Number</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">number</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"n\">doc</span><span class=\"o\">=</span><span class=\"s1\">')</span>\n</pre>\n<p>However, it is probably better to use parameters inside of a <code>ParameterStore</code>, where you can store multiple parameters together and take advantage of additional functionality (e.g. locking of parameters with <code>constant</code> or exporting parameters as JSON object using <code>export_as_dict</code>):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">simpleparam</span> <span class=\"k\">as</span> <span class=\"nn\">param</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">ParameterStore</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">ParameterStore</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># # you can add parameter docstrings by setting `doc`</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">integer</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">,</span>\n                                     <span class=\"n\">doc</span><span class=\"o\">=</span><span class=\"s2\">\"A not very important value\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># `auto_bound` forces hard bounds on values that are outside the specification</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Number</span><span class=\"p\">(</span><span class=\"mf\">42.</span><span class=\"p\">,</span>\n                                   <span class=\"n\">softbounds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span>\n                                   <span class=\"n\">hardbounds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span>\n                                   <span class=\"n\">auto_bound</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"c1\"># setting `allow_any` to False, will force values to be of `str` instance</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                                   <span class=\"n\">allow_any</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"c1\"># you can set internal parameter name by setting the value of `name`</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">choice</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span>\n                                   <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"foo_bar_choice\"</span><span class=\"p\">,</span>\n                                   <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">],</span>\n                                   <span class=\"p\">)</span>\n        <span class=\"c1\"># parameters can be prevented from being changed by setting value of `constant</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"s2\">\"#FFFFFF\"</span><span class=\"p\">,</span>\n                                 <span class=\"n\">constant</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bool</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Boolean</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">Range</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"n\">hardbounds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">])</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">config</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ParameterStore</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n</pre>\n<p>For complete documentation, please visit the <a href=\"https://www.simpleparam.lukasz-migas.com/\" rel=\"nofollow\">docs</a> website.</p>\n<h2>Instalation</h2>\n<p>Install from PyPI</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">simpleparam</span>\n</pre>\n<p>or directly from GitHub</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">lukasz</span><span class=\"o\">-</span><span class=\"n\">migas</span><span class=\"o\">/</span><span class=\"n\">SimpleParam</span><span class=\"o\">.</span><span class=\"n\">git</span>\n</pre>\n<p>or in development mode</p>\n<pre><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">lukasz</span><span class=\"o\">-</span><span class=\"n\">migas</span><span class=\"o\">/</span><span class=\"n\">SimpleParam</span><span class=\"o\">.</span><span class=\"n\">git</span>\n\n<span class=\"n\">cd</span> <span class=\"n\">SimpleParam</span>\n\n<span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">develop</span>\n</pre>\n<h2>Requirements</h2>\n<p>SimpleParam has no external requirements and works in py2 and py3.</p>\n<h2>Planned features</h2>\n<ul>\n<li>add 'List', 'Dict' classes</li>\n<li>rename 'Color' to 'ColorHEX' or add 'modes': RGB or HEX</li>\n<li>add Array class</li>\n</ul>\n\n          </div>"}, "last_serial": 6214586, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7e597f1e48e97052d907e30d93c72b2d", "sha256": "47abda45be0fcd1c620d63a752224ea0781f3c4107ae0e43922e45b19b6fea62"}, "downloads": -1, "filename": "simpleparam-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e597f1e48e97052d907e30d93c72b2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10402, "upload_time": "2019-11-02T23:38:48", "upload_time_iso_8601": "2019-11-02T23:38:48.148160Z", "url": "https://files.pythonhosted.org/packages/85/a8/205673c44aa2960378e83a666d4d26bdee6028a145dfcb1c40af5b6e74e5/simpleparam-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee6ca7462438e4a61cae2195fb91ebd2", "sha256": "64dc46c641dc40da6ae5fd56f86f9d12e80a7462ce72b473a2df0ac6a4c1a4c2"}, "downloads": -1, "filename": "simpleparam-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ee6ca7462438e4a61cae2195fb91ebd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11171, "upload_time": "2019-11-02T23:38:50", "upload_time_iso_8601": "2019-11-02T23:38:50.607239Z", "url": "https://files.pythonhosted.org/packages/27/01/8c26cfb52f1b93c7c2290e92ed4200899bcc57b8ddc9ff34149288390718/simpleparam-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "83c9682cbe6ce630459a27791269801c", "sha256": "91866c1cb4e3c6b33299b7065ef3730977ce3339b1e2e4d0e88e549e3a682f7a"}, "downloads": -1, "filename": "simpleparam-0.0.2.tar.gz", "has_sig": false, "md5_digest": "83c9682cbe6ce630459a27791269801c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9444, "upload_time": "2019-11-03T16:17:48", "upload_time_iso_8601": "2019-11-03T16:17:48.352894Z", "url": "https://files.pythonhosted.org/packages/3f/e9/67b71f9af02882a99c438f92e638b2db72493b8c0d4ca8f2b9a5567fd819/simpleparam-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "05b7c450b90701daf4780f9c35f5af47", "sha256": "f6b7e7c524c8c6095c8295cfb36d4987c4b9ff5809240cb18cbc6efba8c4cc02"}, "downloads": -1, "filename": "simpleparam-0.0.3.tar.gz", "has_sig": false, "md5_digest": "05b7c450b90701daf4780f9c35f5af47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9710, "upload_time": "2019-11-28T14:03:36", "upload_time_iso_8601": "2019-11-28T14:03:36.342246Z", "url": "https://files.pythonhosted.org/packages/eb/bb/d4f0d5839ce917186f17f30662354d32bc43ac0088ccda2575691fcfc874/simpleparam-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0b6831cadb3bd3663e585e22d533de26", "sha256": "98e4586bab22bfe18b9cd40980afd89825122e40be6c28f57f5cea92e24a04ba"}, "downloads": -1, "filename": "simpleparam-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0b6831cadb3bd3663e585e22d533de26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9719, "upload_time": "2019-11-28T15:01:28", "upload_time_iso_8601": "2019-11-28T15:01:28.329750Z", "url": "https://files.pythonhosted.org/packages/1d/e1/2b395d66d4f1808d87d17cccc16c1e685b440b5124854cb72cfe629ee3bf/simpleparam-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b6831cadb3bd3663e585e22d533de26", "sha256": "98e4586bab22bfe18b9cd40980afd89825122e40be6c28f57f5cea92e24a04ba"}, "downloads": -1, "filename": "simpleparam-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0b6831cadb3bd3663e585e22d533de26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9719, "upload_time": "2019-11-28T15:01:28", "upload_time_iso_8601": "2019-11-28T15:01:28.329750Z", "url": "https://files.pythonhosted.org/packages/1d/e1/2b395d66d4f1808d87d17cccc16c1e685b440b5124854cb72cfe629ee3bf/simpleparam-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:24 2020"}