{"info": {"author": "Vaibhav Karve", "author_email": "vaibhavskarve@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# multihypergraph\n\n##Description\nA simple python package for graph theory that supports multi-edges, hyper-edges, looped-edges and every other combination of these. This package is an exercise in defining statically-typed, functional implementations of graphs that have the following features:\n\n  - Each vertex of the graph is a characted. For example `'ab,bc,ac'\"` is a triangle graph with vertices `{'a', 'b', 'c'}`.\n  - Multi-edges are allowed. `'ab,ab'` is a valid graph.\n  - Hyper-edges are allowed. `'abc'` is a valid graph.\n  - Self-loops are allowed. `'aa'` is a valid graph.\n  - Collapsed edges are allowed. `'aab'` is a valid graph\n\nCheck out the wikipedia entries for [Hypergraph](https://en.wikipedia.org/wiki/Hypergraph) and [Multigraph](https://en.wikipedia.org/wiki/Multigraph). Think of this package as happy marriage between the two.\n\n## Installation\n> pip install multihypergraph\n\n## Features\n  - Almost all the code is functional.\n  - Mutability of data types is never used.\n  - All types are explicitly mentioned using static-typing (and checked courtesy `mypy`).\n  - The above mentioned feature makes it easier to reason mathematically about the code.\n  - The emphasis is on mathematical understanding and soundness rather than algorithmic efficiency.\n  - The top-level scripts are divided into `objects/` and `morphisms/` to emphasize the category-theoretic structure of multihypergraphs.\n  - Functional programming allows us to write easy-to-decipher tests using `pytest`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vaibhavkarve/multihypergraph", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "multihypergraph", "package_url": "https://pypi.org/project/multihypergraph/", "platform": "", "project_url": "https://pypi.org/project/multihypergraph/", "project_urls": {"Homepage": "https://github.com/vaibhavkarve/multihypergraph"}, "release_url": "https://pypi.org/project/multihypergraph/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A simple python package for graph theory that supports multi-edges, hyper-edges, looped-edges and every other combination of these.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>multihypergraph</h1>\n<p>##Description\nA simple python package for graph theory that supports multi-edges, hyper-edges, looped-edges and every other combination of these. This package is an exercise in defining statically-typed, functional implementations of graphs that have the following features:</p>\n<ul>\n<li>Each vertex of the graph is a characted. For example <code>'ab,bc,ac'\"</code> is a triangle graph with vertices <code>{'a', 'b', 'c'}</code>.</li>\n<li>Multi-edges are allowed. <code>'ab,ab'</code> is a valid graph.</li>\n<li>Hyper-edges are allowed. <code>'abc'</code> is a valid graph.</li>\n<li>Self-loops are allowed. <code>'aa'</code> is a valid graph.</li>\n<li>Collapsed edges are allowed. <code>'aab'</code> is a valid graph</li>\n</ul>\n<p>Check out the wikipedia entries for <a href=\"https://en.wikipedia.org/wiki/Hypergraph\" rel=\"nofollow\">Hypergraph</a> and <a href=\"https://en.wikipedia.org/wiki/Multigraph\" rel=\"nofollow\">Multigraph</a>. Think of this package as happy marriage between the two.</p>\n<h2>Installation</h2>\n<blockquote>\n<p>pip install multihypergraph</p>\n</blockquote>\n<h2>Features</h2>\n<ul>\n<li>Almost all the code is functional.</li>\n<li>Mutability of data types is never used.</li>\n<li>All types are explicitly mentioned using static-typing (and checked courtesy <code>mypy</code>).</li>\n<li>The above mentioned feature makes it easier to reason mathematically about the code.</li>\n<li>The emphasis is on mathematical understanding and soundness rather than algorithmic efficiency.</li>\n<li>The top-level scripts are divided into <code>objects/</code> and <code>morphisms/</code> to emphasize the category-theoretic structure of multihypergraphs.</li>\n<li>Functional programming allows us to write easy-to-decipher tests using <code>pytest</code>.</li>\n</ul>\n\n          </div>"}, "last_serial": 4793261, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b9cddc386148fdd53be7f77f2fa96dba", "sha256": "3c202f753a81160e9381d5ac3363ca2dd8695a8992f8fa71dbabfe0062f7c8a3"}, "downloads": -1, "filename": "multihypergraph-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b9cddc386148fdd53be7f77f2fa96dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21532, "upload_time": "2019-02-07T22:17:40", "upload_time_iso_8601": "2019-02-07T22:17:40.642092Z", "url": "https://files.pythonhosted.org/packages/60/f1/c53afeec4bcbe0d2543909b5b1f3e5581c1972fe6d362a56855613e0bace/multihypergraph-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7422b0c5770d3ecb538a8c2803eda9e", "sha256": "389ec203ebdb326f30157fb45345d7dc182eba57212ef67d205e5ae2f208a666"}, "downloads": -1, "filename": "multihypergraph-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d7422b0c5770d3ecb538a8c2803eda9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6763, "upload_time": "2019-02-07T22:17:42", "upload_time_iso_8601": "2019-02-07T22:17:42.601119Z", "url": "https://files.pythonhosted.org/packages/68/8a/c58a49ac7aaa7e924c592192740ad4e5fe276081bbff4bcb6722b8f0e7f4/multihypergraph-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9cddc386148fdd53be7f77f2fa96dba", "sha256": "3c202f753a81160e9381d5ac3363ca2dd8695a8992f8fa71dbabfe0062f7c8a3"}, "downloads": -1, "filename": "multihypergraph-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b9cddc386148fdd53be7f77f2fa96dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21532, "upload_time": "2019-02-07T22:17:40", "upload_time_iso_8601": "2019-02-07T22:17:40.642092Z", "url": "https://files.pythonhosted.org/packages/60/f1/c53afeec4bcbe0d2543909b5b1f3e5581c1972fe6d362a56855613e0bace/multihypergraph-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7422b0c5770d3ecb538a8c2803eda9e", "sha256": "389ec203ebdb326f30157fb45345d7dc182eba57212ef67d205e5ae2f208a666"}, "downloads": -1, "filename": "multihypergraph-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d7422b0c5770d3ecb538a8c2803eda9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6763, "upload_time": "2019-02-07T22:17:42", "upload_time_iso_8601": "2019-02-07T22:17:42.601119Z", "url": "https://files.pythonhosted.org/packages/68/8a/c58a49ac7aaa7e924c592192740ad4e5fe276081bbff4bcb6722b8f0e7f4/multihypergraph-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:26 2020"}