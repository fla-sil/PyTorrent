{"info": {"author": "SeatGeek", "author_email": "opensource@seatgeek.com", "bugtrack_url": null, "classifiers": [], "description": "=======\nhaldane\n=======\n\na friendly http interface to the ec2 api\n\nRequirements\n============\n\n- Vagrant\n- VMWare Fusion\n- 1 gigabytes of free ram\n- Python 2.7.8 or below due to a bug in 2.7.9 SSL\n\nInstallation\n============\n\n    OS X Users are assumed to be running homebrew. Please set that up before continuing.\n    Our makefile should install everything necessary to run this service within a Ubuntu 14.04 or Mac OS X 10.9+ environment.\n\nOn a VM\n-------\n\nOnce you have vagrant and virtualbox installed, you can bring up a vm with the service installed:\n\n.. code-block:: bash\n\n    cd path/to/haldane\n    vagrant up\n\nBy default, this will use ``vmware_fusion`` as the vagrant provider, though using you can also use ``virtualbox``:\n\n.. code-block:: bash\n\n    vagrant up --provider virtualbox\n\nManually\n--------\n\nYou will need to setup a few system-level dependencies first. You can do this using the following make target:\n\n.. code-block:: bash\n\n    # install system-level dependencies first\n    # may ask for sudo permissions to install certain packages\n    make requirements\n\n    # now create a python virtual environment with all the required packages\n    # will ask for sudo permissions to install virtualenv if it is not available\n    # the path is set to ``.virtualenv`` by default, though we respect\n    # the following environment variables:\n    # - ``WORKON_HOME``\n    # - ``VIRTUALENV_PATH``\n    make venv\n\n    # activate the virtualenv:\n    eval $(make venv-activate)\n\n    # to deactivate the virtualenv, run the following command:\n    deactivate\n\n    # for more actions you can perform, just run the ``make`` or ``make help`` commands\n\nRunning\n=======\n\nYou can ssh onto the box and run the webservice:\n\n.. code-block:: bash\n\n    vagrant ssh\n    source .env && make server\n\nThe webservice will now be running and exposed to the host machine at ``http://localhost:5000``\n\n> Note that you may wish to change the configuration in use. You can do so by modifying the .env.test file with your configuration.\n\nConfiguration\n=============\n\nAll configuration is set via environment variables. The following environment variables are available for use:\n\n- ``ALLOWED_IPS``: (Default: None) A comma-separated list of ip addresses that can basic authentication.\n- ``ALTERNATIVE_AUTOSCALE_TAG_NAME``: (Default: None) A tag that can be used as an alternative to the AWS group name to categorize instances.\n- ``AWS_API_VERSION``: (Default: ``2016-09-15``) The default api version to use when retrieving instance type.\n- ``AWS_ACCESS_KEY_ID``: (Default: None) An AWS access key id\n- ``AWS_REGIONS``: (Default: us-east-1) A comma-separated list of regions to query for.\n- ``AWS_SECRET_ACCESS_KEY``: (Default: None) An AWS secret access key\n- ``BASIC_AUTH``: (Default: None) A list of basic auth user/password combinations. The format for each is ``username:password``.\n- ``BOOLEAN_AWS_TAG_ATTRIBUTES``: (Default: None) A comma-separated list of instance tags that will be pulled out as top-level instance attributes set and converted into booleans.\n- ``BUGSNAG_API_KEY``: (Default: None) An api key for reporting errors to bugsnag.\n- ``CACHE_EXPIRATION``: (Default: ``180``) Time in seconds until a cached AWS api retrieval expires.\n- ``CACHE_SIZE``: (Default: ``1024``) Max number of items to cache in the LRU cache. Can be safely set to 2.\n- ``DEBUG``: (Default: ``0``) Whether to turn on debug mode or not.\n- ``LISTEN_INTERFACE``: (Default: ``0.0.0.0``) The interface which the server will bind to.\n- ``PORT``: (Default: ``5000``) Server port.\n- ``SENTRY_DSN``: (Default: None) An DSN for reporting errors to sentry.\n- ``TOP_LEVEL_AWS_TAG_ATTRIBUTES``: (Default: None) A comma-separated list of instance tags that will be pulled out as top-level instance attributes set.\n\nThe AWS policy is fairly small, and an ``iam-profile.json`` is provided in this repository in the case that you wish to lock down permissions to only those necessary.\n\nEndpoints\n=========\n\n- ``/``: Healthcheck\n- ``/_status``: Healthcheck\n- ``/amis?q=<query>&limit=<limit>``: List all amis owned by the user specified by the AWS credentials.\n  - ``format`` (optional): If set to ``list``, turns ami attributes from an object indexed by the name key to a list of those objects. Can also be set to ``csv``. Defaults to ``dict``.\n  - ``id`` (optional): An image id to filter by (eg. ``ami-21e750d9``)\n  - ``query`` (optional): Substring to search ami names by before returning the resultset\n  - ``region`` (optional): Filter to a specific region\n- ``/instance-types/<api-version>``: List all instance types available for a specific api version (version is optional).\n- ``/instances/<region>?q=<query>&limit=<limit>&status=<status>&group=<group>``: List all nodes\n  - ``format`` (optional): If set to ``list``, turns node attributes from an object indexed by the name key to a list of those objects. Can also be set to ``csv``. Defaults to ``dict``.\n  - ``limit`` (optional): An integer to limit the resultset by\n  - ``query`` (optional): Substring to search the ``name`` field by before returning the resultset\n- ``/instances/group/<group>?region=<region>&query=<query>&status=<status>``: List all nodes grouped by autoscale group\n  - ``format`` (optional): If set to ``list``, turns node attributes from an object indexed by the name key to a list of those objects.\n  - ``query`` (optional): Substring to search node names by before returning the resultset\n- ``/rds-instances/<region>?q=<query>&limit=<limit>&status=<status>``: List all nodes\n  - ``format`` (optional): If set to ``list``, turns node attributes from an object indexed by the name key to a list of those objects. Can also be set to ``csv``. Defaults to ``dict``.\n  - ``limit`` (optional): An integer to limit the resultset by\n  - ``query`` (optional): Substring to search the ``name`` field by before returning the resultset\n\nFilters\n-------\n\nField values that are *exactly* one of the following strings are transformed into their language \"equivalents\":\n\n- ``none``\n- ``nil``\n- ``true``\n- ``false``\n\n    The values are lowercased before the check is performed.\n\nThe following attributes filters are globally available:\n\n- ``availability_zone`` (optional): An availability zone to filter by (eg. ``us-east-1a``)\n- ``id`` (optional): An instance id to filter by (eg. ``i-21e750d9``)\n- ``name`` (optional): A name to filter by (eg. ``graphite-ec2-01``)\n- ``region`` (optional): Filter to a specific region (eg. ``us-east-1``)\n- ``status`` (optional): Filter to specific node status (eg. ``terminated``)\n\nThe following attribute filters are available for the ``/instances`` and ``/instances/group`` endpoints:\n\n- ``elastic_ip`` (optional): Whether or not to filter to just instances with an elastic_ip\n- ``group`` (optional): An autoscale group name to filter by\n- ``image_id`` (optional): An image id to filter by (eg. ``ami-123abc4d``)\n- ``image_name`` (optional): An image name to filter by (eg. ``BaseAMI``)\n- ``instance_type`` (optional): Filter to a specific instance type (eg. ``t2.large``)\n- ``instance_class`` (optional): Filter to a specific instance type (eg. ``t2``)\n- ``instance_profile_id`` (optional): Filter to a specific instance profile id (eg. ``O34RQ3IUIO3FOUI3F``)\n- ``instance_profile_name`` (optional): Filter to a specific instance profile name (eg. ``Production-Api``)\n- ``ip_address`` (optional): Filter to a specific private ip address (eg. ``54.10.2.20``)\n- ``private_ip_address`` (optional): Filter to a specific private ip address (eg. ``10.10.2.20``)\n- ``vpc_id`` (optional): Filter to specific vpc (eg. ``vpc-8675309``)\n\nThe following attribute filters are available for the ``/rds-instances`` endpoint:\n\n- ``allocated_storage`` (optional)\n- ``auto_minor_version_upgrade`` (optional)\n- ``backup_retention_period`` (optional)\n- ``ca_certificate_identifier`` (optional)\n- ``copy_tags_to_snapshot`` (optional)\n- ``db_instance_arn`` (optional)\n- ``db_instance_class`` (optional)\n- ``db_instance_port`` (optional)\n- ``db_instance_status`` (optional)\n- ``db_name`` (optional)\n- ``dbi_resource_id`` (optional)\n- ``engine`` (optional)\n- ``engine_version`` (optional)\n- ``enhanced_monitoring_resource_arn`` (optional)\n- ``license_model`` (optional)\n- ``master_username`` (optional)\n- ``monitoring_interval`` (optional)\n- ``monitoring_role_arn`` (optional)\n- ``multi_az`` (optional)\n- ``preferred_backup_window`` (optional)\n- ``preferred_maintenance_window`` (optional)\n- ``publicly_accessible`` (optional)\n- ``secondary_availability_zone`` (optional)\n- ``storage_encrypted`` (optional)\n- ``storage_type`` (optional)\n\nField Filtering\n~~~~~~~~~~~~~~~\n\nFields in the response body can be filtered using the ``fields`` querystring argument. Fields are a ``comma-separated`` list of any of the attributes already returned. Tags cannot be filtered on a per-tag basis, though you may choose to include or exclude the ``tags`` attribute entirely.\n\n.. code-block:: bash\n\n    curl http://localhost:5000/instances?fields=id,image_name\n\nComplex Filters\n~~~~~~~~~~~~~~~\n\nFiltering is performed *after* retrieving results from the EC2 API. The following are valid filters:\n\n- ``exact``: performs an exact match on the value of the tag name\n- ``in-list``: splits the tag value by comma and verifies that the passed value is in the resulting list\n- ``is-null``: checks if the value is ``null``\n- ``is-true``: checks if the value is ``true``\n- ``is-false``: checks if the value is ``false``\n- ``substring``: performs a substring match on the value of the tag name\n- ``ends-with``: performs a match using ``endswith`` on the value of the tag name\n- ``starts-with``: performs a match using ``startswith`` on the value of the tag name\n- ``not-in-list``: splits the tag value by comma and verifies that the passed value is *not* in the resulting list\n- ``not-substring``: performs an inverse substring match on the value of the tag name\n- ``not-ends-with``: performs an inverse match using ``endswith`` on the value of the tag name\n- ``not-starts-with``: performs an inverse match using ``startswith`` on the value of the tag name\n\nA simple example is as follows\n\n.. code-block:: bash\n\n    curl http://localhost:5000/instances?substring.name=www\n\nTag Filtering\n~~~~~~~~~~~~~\n\nYou can also filter by tags by using the ``tags.FILTER.TAG_NAME`` querystring pattern as follows:\n\n.. code-block:: bash\n\n    curl http://localhost:5000/instances?tags.exact.bootstrapped=true&tags.substring.Name=admin\n\nYou may also specify an exact match filter when omitting the ``FILTER`` section like so:\n\n.. code-block:: bash\n\n    curl http://localhost:5000/instances?tags.bootstrapped=true\n\nFiltering by the status field\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nValid ``status`` values are as follows:\n\n- ``pending``\n- ``running``\n- ``shutting-down``\n- ``terminated``\n- ``stopping``\n- ``stopped``\n\n.. code-block:: bash\n\n    curl http://localhost:5000/instances?status=running\n\nErrors\n~~~~~~\n\nIf an invalid querystring argument is passed, a ``json`` response similar to the following will be sent from the service:\n\n.. code-block:: javascript\n\n    {\n      detail: \"Invalid region querystring argument passed.\",\n      status: 400,\n      title: \"Invalid argument passed\"\n    }\n\nThe following errors are possible:\n\n- Invalid region querystring argument\n- Invalid status querystring argument\n- General EC2ResponseError\n\nHow it works\n============\n\nThis services uses ``boto3`` underneath to provide an api listing all nodes available in a given EC2 account. It is intended to be used as a replacement for hitting the EC2 api directly, as that can be slow at times.\n\nCaveats\n=======\n\nWhen using the ``/instances`` or ``/instances/group`` endpoints with a format of ``dict``, the response is keyed by the ``Name`` tag of the ec2 instance. If you have multiple servers with the same value for the ``Name`` tag, this may result in \"hidden\" servers. If a server is not running, it will be hidden by default, otherwise it may overwrite the previous entry. This will both be logged in the ``haldane`` logging output *and* will be surfaced as ``meta.hidden_nodes``, regardless of the endpoint being used.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seatgeek/haldane", "keywords": "aws api", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "haldane", "package_url": "https://pypi.org/project/haldane/", "platform": "", "project_url": "https://pypi.org/project/haldane/", "project_urls": {"Homepage": "https://github.com/seatgeek/haldane"}, "release_url": "https://pypi.org/project/haldane/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A friendly http interface to the aws api", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>a friendly http interface to the ec2 api</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Vagrant</li>\n<li>VMWare Fusion</li>\n<li>1 gigabytes of free ram</li>\n<li>Python 2.7.8 or below due to a bug in 2.7.9 SSL</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\nOS X Users are assumed to be running homebrew. Please set that up before continuing.\nOur makefile should install everything necessary to run this service within a Ubuntu 14.04 or Mac OS X 10.9+ environment.</blockquote>\n<div id=\"on-a-vm\">\n<h3>On a VM</h3>\n<p>Once you have vagrant and virtualbox installed, you can bring up a vm with the service installed:</p>\n<pre><span class=\"nb\">cd</span> path/to/haldane\nvagrant up\n</pre>\n<p>By default, this will use <tt>vmware_fusion</tt> as the vagrant provider, though using you can also use <tt>virtualbox</tt>:</p>\n<pre>vagrant up --provider virtualbox\n</pre>\n</div>\n<div id=\"manually\">\n<h3>Manually</h3>\n<p>You will need to setup a few system-level dependencies first. You can do this using the following make target:</p>\n<pre><span class=\"c1\"># install system-level dependencies first\n# may ask for sudo permissions to install certain packages\n</span>make requirements\n\n<span class=\"c1\"># now create a python virtual environment with all the required packages\n# will ask for sudo permissions to install virtualenv if it is not available\n# the path is set to ``.virtualenv`` by default, though we respect\n# the following environment variables:\n# - ``WORKON_HOME``\n# - ``VIRTUALENV_PATH``\n</span>make venv\n\n<span class=\"c1\"># activate the virtualenv:\n</span><span class=\"nb\">eval</span> <span class=\"k\">$(</span>make venv-activate<span class=\"k\">)</span>\n\n<span class=\"c1\"># to deactivate the virtualenv, run the following command:\n</span>deactivate\n\n<span class=\"c1\"># for more actions you can perform, just run the ``make`` or ``make help`` commands</span>\n</pre>\n</div>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>You can ssh onto the box and run the webservice:</p>\n<pre>vagrant ssh\n<span class=\"nb\">source</span> .env <span class=\"o\">&amp;&amp;</span> make server\n</pre>\n<p>The webservice will now be running and exposed to the host machine at <tt><span class=\"pre\">http://localhost:5000</span></tt></p>\n<p>&gt; Note that you may wish to change the configuration in use. You can do so by modifying the .env.test file with your configuration.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>All configuration is set via environment variables. The following environment variables are available for use:</p>\n<ul>\n<li><tt>ALLOWED_IPS</tt>: (Default: None) A comma-separated list of ip addresses that can basic authentication.</li>\n<li><tt>ALTERNATIVE_AUTOSCALE_TAG_NAME</tt>: (Default: None) A tag that can be used as an alternative to the AWS group name to categorize instances.</li>\n<li><tt>AWS_API_VERSION</tt>: (Default: <tt><span class=\"pre\">2016-09-15</span></tt>) The default api version to use when retrieving instance type.</li>\n<li><tt>AWS_ACCESS_KEY_ID</tt>: (Default: None) An AWS access key id</li>\n<li><tt>AWS_REGIONS</tt>: (Default: us-east-1) A comma-separated list of regions to query for.</li>\n<li><tt>AWS_SECRET_ACCESS_KEY</tt>: (Default: None) An AWS secret access key</li>\n<li><tt>BASIC_AUTH</tt>: (Default: None) A list of basic auth user/password combinations. The format for each is <tt>username:password</tt>.</li>\n<li><tt>BOOLEAN_AWS_TAG_ATTRIBUTES</tt>: (Default: None) A comma-separated list of instance tags that will be pulled out as top-level instance attributes set and converted into booleans.</li>\n<li><tt>BUGSNAG_API_KEY</tt>: (Default: None) An api key for reporting errors to bugsnag.</li>\n<li><tt>CACHE_EXPIRATION</tt>: (Default: <tt>180</tt>) Time in seconds until a cached AWS api retrieval expires.</li>\n<li><tt>CACHE_SIZE</tt>: (Default: <tt>1024</tt>) Max number of items to cache in the LRU cache. Can be safely set to 2.</li>\n<li><tt>DEBUG</tt>: (Default: <tt>0</tt>) Whether to turn on debug mode or not.</li>\n<li><tt>LISTEN_INTERFACE</tt>: (Default: <tt>0.0.0.0</tt>) The interface which the server will bind to.</li>\n<li><tt>PORT</tt>: (Default: <tt>5000</tt>) Server port.</li>\n<li><tt>SENTRY_DSN</tt>: (Default: None) An DSN for reporting errors to sentry.</li>\n<li><tt>TOP_LEVEL_AWS_TAG_ATTRIBUTES</tt>: (Default: None) A comma-separated list of instance tags that will be pulled out as top-level instance attributes set.</li>\n</ul>\n<p>The AWS policy is fairly small, and an <tt><span class=\"pre\">iam-profile.json</span></tt> is provided in this repository in the case that you wish to lock down permissions to only those necessary.</p>\n</div>\n<div id=\"endpoints\">\n<h2>Endpoints</h2>\n<ul>\n<li><tt>/</tt>: Healthcheck</li>\n<li><tt>/_status</tt>: Healthcheck</li>\n<li><tt><span class=\"pre\">/amis?q=&lt;query&gt;&amp;limit=&lt;limit&gt;</span></tt>: List all amis owned by the user specified by the AWS credentials.\n- <tt>format</tt> (optional): If set to <tt>list</tt>, turns ami attributes from an object indexed by the name key to a list of those objects. Can also be set to <tt>csv</tt>. Defaults to <tt>dict</tt>.\n- <tt>id</tt> (optional): An image id to filter by (eg. <tt><span class=\"pre\">ami-21e750d9</span></tt>)\n- <tt>query</tt> (optional): Substring to search ami names by before returning the resultset\n- <tt>region</tt> (optional): Filter to a specific region</li>\n<li><tt><span class=\"pre\">/instance-types/&lt;api-version&gt;</span></tt>: List all instance types available for a specific api version (version is optional).</li>\n<li><tt><span class=\"pre\">/instances/&lt;region&gt;?q=&lt;query&gt;&amp;limit=&lt;limit&gt;&amp;status=&lt;status&gt;&amp;group=&lt;group&gt;</span></tt>: List all nodes\n- <tt>format</tt> (optional): If set to <tt>list</tt>, turns node attributes from an object indexed by the name key to a list of those objects. Can also be set to <tt>csv</tt>. Defaults to <tt>dict</tt>.\n- <tt>limit</tt> (optional): An integer to limit the resultset by\n- <tt>query</tt> (optional): Substring to search the <tt>name</tt> field by before returning the resultset</li>\n<li><tt><span class=\"pre\">/instances/group/&lt;group&gt;?region=&lt;region&gt;&amp;query=&lt;query&gt;&amp;status=&lt;status&gt;</span></tt>: List all nodes grouped by autoscale group\n- <tt>format</tt> (optional): If set to <tt>list</tt>, turns node attributes from an object indexed by the name key to a list of those objects.\n- <tt>query</tt> (optional): Substring to search node names by before returning the resultset</li>\n<li><tt><span class=\"pre\">/rds-instances/&lt;region&gt;?q=&lt;query&gt;&amp;limit=&lt;limit&gt;&amp;status=&lt;status&gt;</span></tt>: List all nodes\n- <tt>format</tt> (optional): If set to <tt>list</tt>, turns node attributes from an object indexed by the name key to a list of those objects. Can also be set to <tt>csv</tt>. Defaults to <tt>dict</tt>.\n- <tt>limit</tt> (optional): An integer to limit the resultset by\n- <tt>query</tt> (optional): Substring to search the <tt>name</tt> field by before returning the resultset</li>\n</ul>\n<div id=\"filters\">\n<h3>Filters</h3>\n<p>Field values that are <em>exactly</em> one of the following strings are transformed into their language \u201cequivalents\u201d:</p>\n<ul>\n<li><p><tt>none</tt></p>\n</li>\n<li><p><tt>nil</tt></p>\n</li>\n<li><p><tt>true</tt></p>\n</li>\n<li><p><tt>false</tt></p>\n<blockquote>\n<p>The values are lowercased before the check is performed.</p>\n</blockquote>\n</li>\n</ul>\n<p>The following attributes filters are globally available:</p>\n<ul>\n<li><tt>availability_zone</tt> (optional): An availability zone to filter by (eg. <tt><span class=\"pre\">us-east-1a</span></tt>)</li>\n<li><tt>id</tt> (optional): An instance id to filter by (eg. <tt><span class=\"pre\">i-21e750d9</span></tt>)</li>\n<li><tt>name</tt> (optional): A name to filter by (eg. <tt><span class=\"pre\">graphite-ec2-01</span></tt>)</li>\n<li><tt>region</tt> (optional): Filter to a specific region (eg. <tt><span class=\"pre\">us-east-1</span></tt>)</li>\n<li><tt>status</tt> (optional): Filter to specific node status (eg. <tt>terminated</tt>)</li>\n</ul>\n<p>The following attribute filters are available for the <tt>/instances</tt> and <tt>/instances/group</tt> endpoints:</p>\n<ul>\n<li><tt>elastic_ip</tt> (optional): Whether or not to filter to just instances with an elastic_ip</li>\n<li><tt>group</tt> (optional): An autoscale group name to filter by</li>\n<li><tt>image_id</tt> (optional): An image id to filter by (eg. <tt><span class=\"pre\">ami-123abc4d</span></tt>)</li>\n<li><tt>image_name</tt> (optional): An image name to filter by (eg. <tt>BaseAMI</tt>)</li>\n<li><tt>instance_type</tt> (optional): Filter to a specific instance type (eg. <tt>t2.large</tt>)</li>\n<li><tt>instance_class</tt> (optional): Filter to a specific instance type (eg. <tt>t2</tt>)</li>\n<li><tt>instance_profile_id</tt> (optional): Filter to a specific instance profile id (eg. <tt>O34RQ3IUIO3FOUI3F</tt>)</li>\n<li><tt>instance_profile_name</tt> (optional): Filter to a specific instance profile name (eg. <tt><span class=\"pre\">Production-Api</span></tt>)</li>\n<li><tt>ip_address</tt> (optional): Filter to a specific private ip address (eg. <tt>54.10.2.20</tt>)</li>\n<li><tt>private_ip_address</tt> (optional): Filter to a specific private ip address (eg. <tt>10.10.2.20</tt>)</li>\n<li><tt>vpc_id</tt> (optional): Filter to specific vpc (eg. <tt><span class=\"pre\">vpc-8675309</span></tt>)</li>\n</ul>\n<p>The following attribute filters are available for the <tt><span class=\"pre\">/rds-instances</span></tt> endpoint:</p>\n<ul>\n<li><tt>allocated_storage</tt> (optional)</li>\n<li><tt>auto_minor_version_upgrade</tt> (optional)</li>\n<li><tt>backup_retention_period</tt> (optional)</li>\n<li><tt>ca_certificate_identifier</tt> (optional)</li>\n<li><tt>copy_tags_to_snapshot</tt> (optional)</li>\n<li><tt>db_instance_arn</tt> (optional)</li>\n<li><tt>db_instance_class</tt> (optional)</li>\n<li><tt>db_instance_port</tt> (optional)</li>\n<li><tt>db_instance_status</tt> (optional)</li>\n<li><tt>db_name</tt> (optional)</li>\n<li><tt>dbi_resource_id</tt> (optional)</li>\n<li><tt>engine</tt> (optional)</li>\n<li><tt>engine_version</tt> (optional)</li>\n<li><tt>enhanced_monitoring_resource_arn</tt> (optional)</li>\n<li><tt>license_model</tt> (optional)</li>\n<li><tt>master_username</tt> (optional)</li>\n<li><tt>monitoring_interval</tt> (optional)</li>\n<li><tt>monitoring_role_arn</tt> (optional)</li>\n<li><tt>multi_az</tt> (optional)</li>\n<li><tt>preferred_backup_window</tt> (optional)</li>\n<li><tt>preferred_maintenance_window</tt> (optional)</li>\n<li><tt>publicly_accessible</tt> (optional)</li>\n<li><tt>secondary_availability_zone</tt> (optional)</li>\n<li><tt>storage_encrypted</tt> (optional)</li>\n<li><tt>storage_type</tt> (optional)</li>\n</ul>\n<div id=\"field-filtering\">\n<h4>Field Filtering</h4>\n<p>Fields in the response body can be filtered using the <tt>fields</tt> querystring argument. Fields are a <tt><span class=\"pre\">comma-separated</span></tt> list of any of the attributes already returned. Tags cannot be filtered on a per-tag basis, though you may choose to include or exclude the <tt>tags</tt> attribute entirely.</p>\n<pre>curl http://localhost:5000/instances?fields<span class=\"o\">=</span>id,image_name\n</pre>\n</div>\n<div id=\"complex-filters\">\n<h4>Complex Filters</h4>\n<p>Filtering is performed <em>after</em> retrieving results from the EC2 API. The following are valid filters:</p>\n<ul>\n<li><tt>exact</tt>: performs an exact match on the value of the tag name</li>\n<li><tt><span class=\"pre\">in-list</span></tt>: splits the tag value by comma and verifies that the passed value is in the resulting list</li>\n<li><tt><span class=\"pre\">is-null</span></tt>: checks if the value is <tt>null</tt></li>\n<li><tt><span class=\"pre\">is-true</span></tt>: checks if the value is <tt>true</tt></li>\n<li><tt><span class=\"pre\">is-false</span></tt>: checks if the value is <tt>false</tt></li>\n<li><tt>substring</tt>: performs a substring match on the value of the tag name</li>\n<li><tt><span class=\"pre\">ends-with</span></tt>: performs a match using <tt>endswith</tt> on the value of the tag name</li>\n<li><tt><span class=\"pre\">starts-with</span></tt>: performs a match using <tt>startswith</tt> on the value of the tag name</li>\n<li><tt><span class=\"pre\">not-in-list</span></tt>: splits the tag value by comma and verifies that the passed value is <em>not</em> in the resulting list</li>\n<li><tt><span class=\"pre\">not-substring</span></tt>: performs an inverse substring match on the value of the tag name</li>\n<li><tt><span class=\"pre\">not-ends-with</span></tt>: performs an inverse match using <tt>endswith</tt> on the value of the tag name</li>\n<li><tt><span class=\"pre\">not-starts-with</span></tt>: performs an inverse match using <tt>startswith</tt> on the value of the tag name</li>\n</ul>\n<p>A simple example is as follows</p>\n<pre>curl http://localhost:5000/instances?substring.name<span class=\"o\">=</span>www\n</pre>\n</div>\n<div id=\"tag-filtering\">\n<h4>Tag Filtering</h4>\n<p>You can also filter by tags by using the <tt>tags.FILTER.TAG_NAME</tt> querystring pattern as follows:</p>\n<pre>curl http://localhost:5000/instances?tags.exact.bootstrapped<span class=\"o\">=</span>true<span class=\"p\">&amp;</span>tags.substring.Name<span class=\"o\">=</span>admin\n</pre>\n<p>You may also specify an exact match filter when omitting the <tt>FILTER</tt> section like so:</p>\n<pre>curl http://localhost:5000/instances?tags.bootstrapped<span class=\"o\">=</span><span class=\"nb\">true</span>\n</pre>\n</div>\n<div id=\"filtering-by-the-status-field\">\n<h4>Filtering by the status field</h4>\n<p>Valid <tt>status</tt> values are as follows:</p>\n<ul>\n<li><tt>pending</tt></li>\n<li><tt>running</tt></li>\n<li><tt><span class=\"pre\">shutting-down</span></tt></li>\n<li><tt>terminated</tt></li>\n<li><tt>stopping</tt></li>\n<li><tt>stopped</tt></li>\n</ul>\n<pre>curl http://localhost:5000/instances?status<span class=\"o\">=</span>running\n</pre>\n</div>\n<div id=\"errors\">\n<h4>Errors</h4>\n<p>If an invalid querystring argument is passed, a <tt>json</tt> response similar to the following will be sent from the service:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nx\">detail</span><span class=\"o\">:</span> <span class=\"s2\">\"Invalid region querystring argument passed.\"</span><span class=\"p\">,</span>\n  <span class=\"nx\">status</span><span class=\"o\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span>\n  <span class=\"nx\">title</span><span class=\"o\">:</span> <span class=\"s2\">\"Invalid argument passed\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The following errors are possible:</p>\n<ul>\n<li>Invalid region querystring argument</li>\n<li>Invalid status querystring argument</li>\n<li>General EC2ResponseError</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>This services uses <tt>boto3</tt> underneath to provide an api listing all nodes available in a given EC2 account. It is intended to be used as a replacement for hitting the EC2 api directly, as that can be slow at times.</p>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>When using the <tt>/instances</tt> or <tt>/instances/group</tt> endpoints with a format of <tt>dict</tt>, the response is keyed by the <tt>Name</tt> tag of the ec2 instance. If you have multiple servers with the same value for the <tt>Name</tt> tag, this may result in \u201chidden\u201d servers. If a server is not running, it will be hidden by default, otherwise it may overwrite the previous entry. This will both be logged in the <tt>haldane</tt> logging output <em>and</em> will be surfaced as <tt>meta.hidden_nodes</tt>, regardless of the endpoint being used.</p>\n</div>\n\n          </div>"}, "last_serial": 5269421, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "036fd659b1f302f5f704561fbe216942", "sha256": "2707177c5c5040becd175070e0c53db0260eba939f223eb2fa4b8694e0842c6f"}, "downloads": -1, "filename": "haldane-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "036fd659b1f302f5f704561fbe216942", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22658, "upload_time": "2017-07-17T17:32:48", "upload_time_iso_8601": "2017-07-17T17:32:48.760329Z", "url": "https://files.pythonhosted.org/packages/9f/0f/e0409b5fea1eae1d159b11dd14c089b87e01c802fd1240e843e5d1dc91ab/haldane-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b2d7ed307c5fd6a9fcdbdd156d478d1", "sha256": "d43c6de124ab89557af2052295bf94b3d0662361ebe66d1e19a53a0703560470"}, "downloads": -1, "filename": "haldane-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1b2d7ed307c5fd6a9fcdbdd156d478d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15907, "upload_time": "2017-07-17T17:32:47", "upload_time_iso_8601": "2017-07-17T17:32:47.108909Z", "url": "https://files.pythonhosted.org/packages/ef/3e/ac84f60c9c88c50f47dc90ab842ed457a712400b82d8bd9d0dc26f89c21d/haldane-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9f6048f87a7971c9f4ac923d2fa74f10", "sha256": "b2661bed99f35566e57707fd31943dffcf7371900bf9c39a86035434e49df564"}, "downloads": -1, "filename": "haldane-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "9f6048f87a7971c9f4ac923d2fa74f10", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22662, "upload_time": "2017-07-17T17:33:43", "upload_time_iso_8601": "2017-07-17T17:33:43.218445Z", "url": "https://files.pythonhosted.org/packages/84/87/6b2957c69fb2fadcd0c9c52e88baf00b666cbf8b6c2bbd22fe0186ce861b/haldane-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ecf450b28224ded06924e2e6fffe13d", "sha256": "e1171f00334b807e0eb3a407bd08bef1a155428a18ba7190070b522bdad9dd6a"}, "downloads": -1, "filename": "haldane-0.2.1.tar.gz", "has_sig": false, "md5_digest": "3ecf450b28224ded06924e2e6fffe13d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16079, "upload_time": "2017-07-17T17:33:41", "upload_time_iso_8601": "2017-07-17T17:33:41.139257Z", "url": "https://files.pythonhosted.org/packages/02/92/85d87a6fdf2d051c644644e0c7c9603e4c0eaa8d25cd86c033b5b418a34d/haldane-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "86f6e98ae06cad2e579f7b1ed66ee376", "sha256": "f6386b009359a2ceb6ffd697d5aa423760f10101a3d253bed969adc5e6d1cf3d"}, "downloads": -1, "filename": "haldane-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "86f6e98ae06cad2e579f7b1ed66ee376", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22665, "upload_time": "2018-05-14T18:28:32", "upload_time_iso_8601": "2018-05-14T18:28:32.763621Z", "url": "https://files.pythonhosted.org/packages/80/f8/7bd106d1f11db3d85eae7ed198560f4888f1fe455debbc8e0e317a960daa/haldane-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13e12db9a1a2d75bb742248b6914a75c", "sha256": "94330c88e4f351d251ba285f5ea036c04e3339b2bd1fa766ec11009c789444e1"}, "downloads": -1, "filename": "haldane-0.2.2.tar.gz", "has_sig": false, "md5_digest": "13e12db9a1a2d75bb742248b6914a75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16102, "upload_time": "2018-05-14T18:28:31", "upload_time_iso_8601": "2018-05-14T18:28:31.615507Z", "url": "https://files.pythonhosted.org/packages/df/42/8e072262f772f41acbf71da131deb03252fc56ede7563c5e78f472cfbdce/haldane-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8fff3c4e6b4833fd402d02d41c3c3066", "sha256": "887ddca387f45f63db22a2a811bc0c91662d7df5baf539eca8c04dbf08e48194"}, "downloads": -1, "filename": "haldane-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8fff3c4e6b4833fd402d02d41c3c3066", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22767, "upload_time": "2018-05-14T20:56:51", "upload_time_iso_8601": "2018-05-14T20:56:51.966193Z", "url": "https://files.pythonhosted.org/packages/86/15/e0eb28dfcc221bbbd212c9c02a51f0d3d5a9f211b9fea7317388f7d76003/haldane-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29189cb164ae2b07ae10d3991b55032b", "sha256": "e3e85b439c5c6282efe8336d30f7d4ee90b4433bfce4be416cd6d174d648b33d"}, "downloads": -1, "filename": "haldane-0.3.0.tar.gz", "has_sig": false, "md5_digest": "29189cb164ae2b07ae10d3991b55032b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16158, "upload_time": "2018-05-14T20:56:50", "upload_time_iso_8601": "2018-05-14T20:56:50.637237Z", "url": "https://files.pythonhosted.org/packages/08/05/5917a8e83473540a213060e2b17787660e934129b227b27967ab881934b8/haldane-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8fff3c4e6b4833fd402d02d41c3c3066", "sha256": "887ddca387f45f63db22a2a811bc0c91662d7df5baf539eca8c04dbf08e48194"}, "downloads": -1, "filename": "haldane-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8fff3c4e6b4833fd402d02d41c3c3066", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22767, "upload_time": "2018-05-14T20:56:51", "upload_time_iso_8601": "2018-05-14T20:56:51.966193Z", "url": "https://files.pythonhosted.org/packages/86/15/e0eb28dfcc221bbbd212c9c02a51f0d3d5a9f211b9fea7317388f7d76003/haldane-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29189cb164ae2b07ae10d3991b55032b", "sha256": "e3e85b439c5c6282efe8336d30f7d4ee90b4433bfce4be416cd6d174d648b33d"}, "downloads": -1, "filename": "haldane-0.3.0.tar.gz", "has_sig": false, "md5_digest": "29189cb164ae2b07ae10d3991b55032b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16158, "upload_time": "2018-05-14T20:56:50", "upload_time_iso_8601": "2018-05-14T20:56:50.637237Z", "url": "https://files.pythonhosted.org/packages/08/05/5917a8e83473540a213060e2b17787660e934129b227b27967ab881934b8/haldane-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:43 2020"}