{"info": {"author": "Anthony Underwood", "author_email": "au3@sanger.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Bactinspector\nA package to \n\n1. determine the most probable species based on sequence in fasta/fastq files using refseq and Mash (https://mash.readthedocs.io/en/latest/index.html)\nIt will count the species of the top ref seq mash matches and report most frequent.\n2. determine the closest reference in refseq to a set of fasta/fastq files\n\nThe PyPi package is called BactInspectorMax since my original BactInspector asked for the path to a sketch\nof refseq genomes. In May 2019 a new curated mash sketch of complete bacterial refseq genome was \ncreated and bundled into the package. This required a special request to increase the PyPi package limit,\nhence the Max.\nThe command is still `bactinspector <sub command>` however.\n\n## Data\nThe data bundled into bactinspector are the complete bacterial refseq genomes from May 2019. The species assignations have been corrected by changing species where the majority does not match the species described within the refseq info found [here](ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/assembly_summary.txt) and the excellent [Bacsort resource](https://github.com/rrwick/Bacsort) from [Ryan Wick](https://twitter.com/rrwick)\n\n## Dependencies\n[Mash](https://github.com/marbl/Mash/) (> v2.1)\nInstallation with conda is recommended\n\n## Installation\npip3 install bactinspectorMax\n\n## Usage\n```\nusage: bactinspector [-h] [-v]\n                     {check_species,closest_match,info,create_species_info} ...\n\nA module to determine the most probable species based on sequence in fasta files using refseq and Mash (https://mash.readthedocs.io/en/latest/index.html)\nIt will count the species of the top ref seq mash matches and report most frequent.\n\nIn order to use the module:\n  \u2022 Specify an input directory and output directory (default is current directory)\n  \u2022 Specify either a\n    \u2022 fasta file pattern with -f (e.g \"*.fas\") or\n    \u2022 mash sketch file pattern with -m (e.g \"*.msh\") if you have already sketched the fasta files\n  \u2022 By default the top 10 matches will be used. Change this with -n\n  \u2022 Speed things up by changing the number of parallel processes to match the cores on your computer using -p\n  \u2022 If mash is not in your PATH specify the directory containing the mash executable with -mp\n\nIf you want to update the genomes used, follow the instructions on https://gitlab.com/antunderwood/bactinspector/wikis/Updating-the-genomes-in-BactInspector\nand use the create_species_info command to make the required file\n\npositional arguments:\n  {check_species,closest_match,create_species_info}\n                        The following commands are available. Type\n                        bactinspector <COMMAND> -h for more help on a specific\n                        commands\n    check_species       Check the most frequent matches to a species in refseq\n    closest_match       Report the closest matches to a set of sequences\n    create_species_info\n                        Create species info TSV for locally created mash\n                        sketches\n    info                Provide information about the data in bactinspector\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         print out software version\n```\n\n### check_species\nAssign a species using matches to refseq. Based on observed intra-species mash distances, a result maybe marked as uncertain if the distance to the best hit is greater than 1.2 x the observed maximum intra-species distance.\n```\nusage: bactinspector check_species [-h] [-i INPUT_DIR] [-o OUTPUT_DIR]\n                                   [-p PARALLEL_PROCESSES]\n                                   [-n NUM_BEST_MATCHES] [-d DISTANCE_CUTOFF]\n                                   [-v ALLOWED_VARIANCE]\n                                   [-vl ALLOWED_VARIANCE_RARER_SPECIES] [-s]\n                                   [-l LOCAL_MASH_AND_INFO_FILE_PREFIX]\n                                   [-mp MASH_PATH]\n                                   (-f FASTA_FILE_PATTERN | -fq FASTQ_FILE_PATTERN | -m MASH_SKETCH_FILE_PATTERN)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT_DIR, --input_dir INPUT_DIR\n                        path to input_directory\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        path to output_directory\n  -p PARALLEL_PROCESSES, --parallel_processes PARALLEL_PROCESSES\n                        number of processes to run in parallel\n  -n NUM_BEST_MATCHES, --num_best_matches NUM_BEST_MATCHES\n                        number of best matches to return\n  -d DISTANCE_CUTOFF, --distance_cutoff DISTANCE_CUTOFF\n                        mash distance cutoff (default 0.05)\n  -v ALLOWED_VARIANCE, --allowed_variance ALLOWED_VARIANCE\n                        proportion of max_distance allowed over which a result\n                        will be marked as uncertain (default 0.1)\n  -vl ALLOWED_VARIANCE_RARER_SPECIES, --allowed_variance_rarer_species ALLOWED_VARIANCE_RARER_SPECIES\n                        proportion of max_distance allowed over which a result\n                        will be marked as uncertain for species which have\n                        fewer than 10 representatives in refseq (default 0.5)\n  -s, --stdout_summary  output a summary of the result to STDOUT\n  -l LOCAL_MASH_AND_INFO_FILE_PREFIX, --local_mash_and_info_file_prefix LOCAL_MASH_AND_INFO_FILE_PREFIX\n                        the path prefix to the mash sketch file and\n                        corresponding info file\n  -mp MASH_PATH, --mash_path MASH_PATH\n                        path to the mash executable. If not provided it is\n                        assumed mash is in the PATH\n  -f FASTA_FILE_PATTERN, --fasta_file_pattern FASTA_FILE_PATTERN\n                        pattern to match fasta files e.g \"*.fas\"\n  -fq FASTQ_FILE_PATTERN, --fastq_file_pattern FASTQ_FILE_PATTERN\n                        pattern to match fastq files e.g \"*.fastq.gz\"\n  -m MASH_SKETCH_FILE_PATTERN, --mash_sketch_file_pattern MASH_SKETCH_FILE_PATTERN\n                        pattern to match mash sketch files e.g \"*.msh\"\n```\n\n### closest_match\nFind the closest match of a set of genomes to genomes within refseq. Useful as an objective way of choosing a reference genome when mapping\n\n```\nusage: bactinspector closest_match [-h] [-i INPUT_DIR] [-o OUTPUT_DIR]\n                                   [-p PARALLEL_PROCESSES] [-r]\n                                   [-l LOCAL_MASH_AND_INFO_FILE_PREFIX]\n                                   [-mp MASH_PATH]\n                                   (-f FASTA_FILE_PATTERN | -fq FASTQ_FILE_PATTERN | -m MASH_SKETCH_FILE_PATTERN)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT_DIR, --input_dir INPUT_DIR\n                        path to input_directory\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        path to output_directory\n  -p PARALLEL_PROCESSES, --parallel_processes PARALLEL_PROCESSES\n                        number of processes to run in parallel\n  -r, --ref_and_rep_only\n                        only include reference and representative sequences\n  -l LOCAL_MASH_AND_INFO_FILE_PREFIX, --local_mash_and_info_file_prefix LOCAL_MASH_AND_INFO_FILE_PREFIX\n                        the path prefix to the mash sketch file and\n                        corresponding info file\n  -mp MASH_PATH, --mash_path MASH_PATH\n                        path to the mash executable. If not provided it is\n                        assumed mash is in the PATH\n  -f FASTA_FILE_PATTERN, --fasta_file_pattern FASTA_FILE_PATTERN\n                        pattern to match fasta files e.g \"*.fas\"\n  -fq FASTQ_FILE_PATTERN, --fastq_file_pattern FASTQ_FILE_PATTERN\n                        pattern to match fastq files e.g \"*.fastq.gz\"\n  -m MASH_SKETCH_FILE_PATTERN, --mash_sketch_file_pattern MASH_SKETCH_FILE_PATTERN\n                        pattern to match mash sketch files e.g \"*.msh\"\n```\n### info\nFind out what sequences are present in the mash sketch using a term to search the species name. You can either specify `-s` to search the aggregated species information or `-i` to search the individual refseq records.\n\n```\nusage: bactinspector info [-h] -t SEARCH_TERM (-s | -i)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t SEARCH_TERM, --search_term SEARCH_TERM\n                        search term to use when searching species within\n                        bactinspector\n  -s, --summary         search the aggregate data\n  -i, --individual_records\n                        search the individual refseq records\n```\n\n### create_species_info\n\nAn updated mash sketch file and corresponding info file can be created using the process described [here](https://gitlab.com/antunderwood/bactinspector/wikis/Updating-the-genomes-in-BactInspector)\nThis process uses the create_species_info commmand\n\n```\nusage: bactinspector create_species_info [-h] -m MASH_INFO_FILE -r\n                                         REFSEQ_SUMMARY_FILE -b\n                                         BACSORT_SPECIES_FILE -x\n                                         BACSORT_EXCLUDED_ASSEMBLIES_FILE\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MASH_INFO_FILE, --mash_info_file MASH_INFO_FILE\n                        path to info file created using mash info -t\n  -r REFSEQ_SUMMARY_FILE, --refseq_summary_file REFSEQ_SUMMARY_FILE\n                        path to refseq assembly summary file downloaded via\n                        wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteri\n                        a/assembly_summary.txt\n  -b BACSORT_SPECIES_FILE, --bacsort_species_file BACSORT_SPECIES_FILE\n                        path to bacsort_species_definitions.txt\n  -x BACSORT_EXCLUDED_ASSEMBLIES_FILE, --bacsort_excluded_assemblies_file BACSORT_EXCLUDED_ASSEMBLIES_FILE\n                        path to bacsort_excluded_assemblies.txt\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "BactInspectorMax", "package_url": "https://pypi.org/project/BactInspectorMax/", "platform": "", "project_url": "https://pypi.org/project/BactInspectorMax/", "project_urls": null, "release_url": "https://pypi.org/project/BactInspectorMax/0.1.3/", "requires_dist": ["pandas", "numpy"], "requires_python": "", "summary": "Package to investigate mash hits against refseq", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bactinspector</h1>\n<p>A package to</p>\n<ol>\n<li>determine the most probable species based on sequence in fasta/fastq files using refseq and Mash (<a href=\"https://mash.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">https://mash.readthedocs.io/en/latest/index.html</a>)\nIt will count the species of the top ref seq mash matches and report most frequent.</li>\n<li>determine the closest reference in refseq to a set of fasta/fastq files</li>\n</ol>\n<p>The PyPi package is called BactInspectorMax since my original BactInspector asked for the path to a sketch\nof refseq genomes. In May 2019 a new curated mash sketch of complete bacterial refseq genome was\ncreated and bundled into the package. This required a special request to increase the PyPi package limit,\nhence the Max.\nThe command is still <code>bactinspector &lt;sub command&gt;</code> however.</p>\n<h2>Data</h2>\n<p>The data bundled into bactinspector are the complete bacterial refseq genomes from May 2019. The species assignations have been corrected by changing species where the majority does not match the species described within the refseq info found <a>here</a> and the excellent <a href=\"https://github.com/rrwick/Bacsort\" rel=\"nofollow\">Bacsort resource</a> from <a href=\"https://twitter.com/rrwick\" rel=\"nofollow\">Ryan Wick</a></p>\n<h2>Dependencies</h2>\n<p><a href=\"https://github.com/marbl/Mash/\" rel=\"nofollow\">Mash</a> (&gt; v2.1)\nInstallation with conda is recommended</p>\n<h2>Installation</h2>\n<p>pip3 install bactinspectorMax</p>\n<h2>Usage</h2>\n<pre><code>usage: bactinspector [-h] [-v]\n                     {check_species,closest_match,info,create_species_info} ...\n\nA module to determine the most probable species based on sequence in fasta files using refseq and Mash (https://mash.readthedocs.io/en/latest/index.html)\nIt will count the species of the top ref seq mash matches and report most frequent.\n\nIn order to use the module:\n  \u2022 Specify an input directory and output directory (default is current directory)\n  \u2022 Specify either a\n    \u2022 fasta file pattern with -f (e.g \"*.fas\") or\n    \u2022 mash sketch file pattern with -m (e.g \"*.msh\") if you have already sketched the fasta files\n  \u2022 By default the top 10 matches will be used. Change this with -n\n  \u2022 Speed things up by changing the number of parallel processes to match the cores on your computer using -p\n  \u2022 If mash is not in your PATH specify the directory containing the mash executable with -mp\n\nIf you want to update the genomes used, follow the instructions on https://gitlab.com/antunderwood/bactinspector/wikis/Updating-the-genomes-in-BactInspector\nand use the create_species_info command to make the required file\n\npositional arguments:\n  {check_species,closest_match,create_species_info}\n                        The following commands are available. Type\n                        bactinspector &lt;COMMAND&gt; -h for more help on a specific\n                        commands\n    check_species       Check the most frequent matches to a species in refseq\n    closest_match       Report the closest matches to a set of sequences\n    create_species_info\n                        Create species info TSV for locally created mash\n                        sketches\n    info                Provide information about the data in bactinspector\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         print out software version\n</code></pre>\n<h3>check_species</h3>\n<p>Assign a species using matches to refseq. Based on observed intra-species mash distances, a result maybe marked as uncertain if the distance to the best hit is greater than 1.2 x the observed maximum intra-species distance.</p>\n<pre><code>usage: bactinspector check_species [-h] [-i INPUT_DIR] [-o OUTPUT_DIR]\n                                   [-p PARALLEL_PROCESSES]\n                                   [-n NUM_BEST_MATCHES] [-d DISTANCE_CUTOFF]\n                                   [-v ALLOWED_VARIANCE]\n                                   [-vl ALLOWED_VARIANCE_RARER_SPECIES] [-s]\n                                   [-l LOCAL_MASH_AND_INFO_FILE_PREFIX]\n                                   [-mp MASH_PATH]\n                                   (-f FASTA_FILE_PATTERN | -fq FASTQ_FILE_PATTERN | -m MASH_SKETCH_FILE_PATTERN)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT_DIR, --input_dir INPUT_DIR\n                        path to input_directory\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        path to output_directory\n  -p PARALLEL_PROCESSES, --parallel_processes PARALLEL_PROCESSES\n                        number of processes to run in parallel\n  -n NUM_BEST_MATCHES, --num_best_matches NUM_BEST_MATCHES\n                        number of best matches to return\n  -d DISTANCE_CUTOFF, --distance_cutoff DISTANCE_CUTOFF\n                        mash distance cutoff (default 0.05)\n  -v ALLOWED_VARIANCE, --allowed_variance ALLOWED_VARIANCE\n                        proportion of max_distance allowed over which a result\n                        will be marked as uncertain (default 0.1)\n  -vl ALLOWED_VARIANCE_RARER_SPECIES, --allowed_variance_rarer_species ALLOWED_VARIANCE_RARER_SPECIES\n                        proportion of max_distance allowed over which a result\n                        will be marked as uncertain for species which have\n                        fewer than 10 representatives in refseq (default 0.5)\n  -s, --stdout_summary  output a summary of the result to STDOUT\n  -l LOCAL_MASH_AND_INFO_FILE_PREFIX, --local_mash_and_info_file_prefix LOCAL_MASH_AND_INFO_FILE_PREFIX\n                        the path prefix to the mash sketch file and\n                        corresponding info file\n  -mp MASH_PATH, --mash_path MASH_PATH\n                        path to the mash executable. If not provided it is\n                        assumed mash is in the PATH\n  -f FASTA_FILE_PATTERN, --fasta_file_pattern FASTA_FILE_PATTERN\n                        pattern to match fasta files e.g \"*.fas\"\n  -fq FASTQ_FILE_PATTERN, --fastq_file_pattern FASTQ_FILE_PATTERN\n                        pattern to match fastq files e.g \"*.fastq.gz\"\n  -m MASH_SKETCH_FILE_PATTERN, --mash_sketch_file_pattern MASH_SKETCH_FILE_PATTERN\n                        pattern to match mash sketch files e.g \"*.msh\"\n</code></pre>\n<h3>closest_match</h3>\n<p>Find the closest match of a set of genomes to genomes within refseq. Useful as an objective way of choosing a reference genome when mapping</p>\n<pre><code>usage: bactinspector closest_match [-h] [-i INPUT_DIR] [-o OUTPUT_DIR]\n                                   [-p PARALLEL_PROCESSES] [-r]\n                                   [-l LOCAL_MASH_AND_INFO_FILE_PREFIX]\n                                   [-mp MASH_PATH]\n                                   (-f FASTA_FILE_PATTERN | -fq FASTQ_FILE_PATTERN | -m MASH_SKETCH_FILE_PATTERN)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT_DIR, --input_dir INPUT_DIR\n                        path to input_directory\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        path to output_directory\n  -p PARALLEL_PROCESSES, --parallel_processes PARALLEL_PROCESSES\n                        number of processes to run in parallel\n  -r, --ref_and_rep_only\n                        only include reference and representative sequences\n  -l LOCAL_MASH_AND_INFO_FILE_PREFIX, --local_mash_and_info_file_prefix LOCAL_MASH_AND_INFO_FILE_PREFIX\n                        the path prefix to the mash sketch file and\n                        corresponding info file\n  -mp MASH_PATH, --mash_path MASH_PATH\n                        path to the mash executable. If not provided it is\n                        assumed mash is in the PATH\n  -f FASTA_FILE_PATTERN, --fasta_file_pattern FASTA_FILE_PATTERN\n                        pattern to match fasta files e.g \"*.fas\"\n  -fq FASTQ_FILE_PATTERN, --fastq_file_pattern FASTQ_FILE_PATTERN\n                        pattern to match fastq files e.g \"*.fastq.gz\"\n  -m MASH_SKETCH_FILE_PATTERN, --mash_sketch_file_pattern MASH_SKETCH_FILE_PATTERN\n                        pattern to match mash sketch files e.g \"*.msh\"\n</code></pre>\n<h3>info</h3>\n<p>Find out what sequences are present in the mash sketch using a term to search the species name. You can either specify <code>-s</code> to search the aggregated species information or <code>-i</code> to search the individual refseq records.</p>\n<pre><code>usage: bactinspector info [-h] -t SEARCH_TERM (-s | -i)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t SEARCH_TERM, --search_term SEARCH_TERM\n                        search term to use when searching species within\n                        bactinspector\n  -s, --summary         search the aggregate data\n  -i, --individual_records\n                        search the individual refseq records\n</code></pre>\n<h3>create_species_info</h3>\n<p>An updated mash sketch file and corresponding info file can be created using the process described <a href=\"https://gitlab.com/antunderwood/bactinspector/wikis/Updating-the-genomes-in-BactInspector\" rel=\"nofollow\">here</a>\nThis process uses the create_species_info commmand</p>\n<pre><code>usage: bactinspector create_species_info [-h] -m MASH_INFO_FILE -r\n                                         REFSEQ_SUMMARY_FILE -b\n                                         BACSORT_SPECIES_FILE -x\n                                         BACSORT_EXCLUDED_ASSEMBLIES_FILE\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MASH_INFO_FILE, --mash_info_file MASH_INFO_FILE\n                        path to info file created using mash info -t\n  -r REFSEQ_SUMMARY_FILE, --refseq_summary_file REFSEQ_SUMMARY_FILE\n                        path to refseq assembly summary file downloaded via\n                        wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteri\n                        a/assembly_summary.txt\n  -b BACSORT_SPECIES_FILE, --bacsort_species_file BACSORT_SPECIES_FILE\n                        path to bacsort_species_definitions.txt\n  -x BACSORT_EXCLUDED_ASSEMBLIES_FILE, --bacsort_excluded_assemblies_file BACSORT_EXCLUDED_ASSEMBLIES_FILE\n                        path to bacsort_excluded_assemblies.txt\n</code></pre>\n\n          </div>"}, "last_serial": 6146748, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "06c0167c87ba0112a0df4494b4b2af5b", "sha256": "9a7d0a5c2ab6d5a75f3e42e173208a905cbdfc6e262b0ad670b2ee66e8a0ed26"}, "downloads": -1, "filename": "BactInspectorMax-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06c0167c87ba0112a0df4494b4b2af5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 960197, "upload_time": "2019-07-04T07:51:53", "upload_time_iso_8601": "2019-07-04T07:51:53.535305Z", "url": "https://files.pythonhosted.org/packages/6d/16/375a3cbf8779c10f8e490caee7641f4d6ba35d51f0cae715602c9aae0646/BactInspectorMax-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7bee6aa103484332179c786d6948dbc", "sha256": "7856135c834199b9bd341137baec3bab5655eb3b08e3e873bfa6f03dae564e1e"}, "downloads": -1, "filename": "BactInspectorMax-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c7bee6aa103484332179c786d6948dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 946389, "upload_time": "2019-07-04T07:51:58", "upload_time_iso_8601": "2019-07-04T07:51:58.914761Z", "url": "https://files.pythonhosted.org/packages/21/7a/4e3f23ab3af60d42a33f35a4f5e70f9d1b3c17156e89dcfa55a780fb4a22/BactInspectorMax-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0b4384fd70546abfcaf56d902c065cca", "sha256": "c888a5d27f6d70e7e3422e2e97ac497052039563e4dc92d21d47e7d159cd9f2e"}, "downloads": -1, "filename": "BactInspectorMax-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0b4384fd70546abfcaf56d902c065cca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73106683, "upload_time": "2019-07-04T16:56:46", "upload_time_iso_8601": "2019-07-04T16:56:46.541015Z", "url": "https://files.pythonhosted.org/packages/14/a2/9aace31d06030dcd1962bd143d6da33b3b784f3e8b8222536350ad7fc39d/BactInspectorMax-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ee6b5ef6d6a24210f589832b8ac0e0c", "sha256": "5f7f5c479e895b873409bb90453afdbc3eef6514e83f982b3ad31dfc09e45681"}, "downloads": -1, "filename": "BactInspectorMax-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0ee6b5ef6d6a24210f589832b8ac0e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73086068, "upload_time": "2019-07-04T17:02:00", "upload_time_iso_8601": "2019-07-04T17:02:00.707635Z", "url": "https://files.pythonhosted.org/packages/f0/c7/ba86a714d869bcabb0a58b758ebe1807aaf9aa3b6af97b56006fb55dd84d/BactInspectorMax-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "40bf9d8dd95656cee022dc1142697971", "sha256": "2bd9947787469a7158268c25b837ae802ea8a43ebf8d70e4519f689c16484cbc"}, "downloads": -1, "filename": "BactInspectorMax-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "40bf9d8dd95656cee022dc1142697971", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73106931, "upload_time": "2019-07-08T14:37:47", "upload_time_iso_8601": "2019-07-08T14:37:47.489062Z", "url": "https://files.pythonhosted.org/packages/7c/25/c8ea9e8a16cbb26176d770a917bd5c3aad1291bc5954a7936018f48bed9e/BactInspectorMax-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6777cb4d9c43df241c011cf1b494fa0a", "sha256": "dd27f7dc75aac674f828fc408a5fe460f21995ca74c602cfd00cde7640c1a28c"}, "downloads": -1, "filename": "BactInspectorMax-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6777cb4d9c43df241c011cf1b494fa0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73086495, "upload_time": "2019-07-08T14:46:38", "upload_time_iso_8601": "2019-07-08T14:46:38.921245Z", "url": "https://files.pythonhosted.org/packages/6e/f6/2d41d614a316e3a027386c2fe9c5d2276bb3e0c503e3d2ec986e5c3cd0fc/BactInspectorMax-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "43fcf09ff843a6304d5f3aee99b32465", "sha256": "1a3ab0f05eff4563376229a13aa81d65984bb285723ad691a5fa318eeddf71c9"}, "downloads": -1, "filename": "BactInspectorMax-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "43fcf09ff843a6304d5f3aee99b32465", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73106939, "upload_time": "2019-07-10T09:52:23", "upload_time_iso_8601": "2019-07-10T09:52:23.326805Z", "url": "https://files.pythonhosted.org/packages/4a/ab/ea06def66fb755dc125d53d5d0abccd5dcb90856431ba652a71e017cc903/BactInspectorMax-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "948aafb03dca3e054696293d5dd0377a", "sha256": "d603cece54eae89f097d4973223e298cf7b9e50159f36676229d132b6dff91c1"}, "downloads": -1, "filename": "BactInspectorMax-0.0.4.tar.gz", "has_sig": false, "md5_digest": "948aafb03dca3e054696293d5dd0377a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73086540, "upload_time": "2019-07-10T09:52:40", "upload_time_iso_8601": "2019-07-10T09:52:40.107739Z", "url": "https://files.pythonhosted.org/packages/1c/ea/da7d8f486ad8fcdaf38d3e1ea0a148393dab38089031c1e0f04db2a79431/BactInspectorMax-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ddad557e35e788d1393e98a3584630fb", "sha256": "7a8d2b7f9bb52b3a3d89e58138d4c340b0f1709fac9408fce7d46977ad24bf52"}, "downloads": -1, "filename": "BactInspectorMax-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ddad557e35e788d1393e98a3584630fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73140359, "upload_time": "2019-07-11T16:50:03", "upload_time_iso_8601": "2019-07-11T16:50:03.471835Z", "url": "https://files.pythonhosted.org/packages/b2/9b/6fdead7ea5a61f18c2b472c973d505a9ece377c5f4c170c3cdfa26a845ee/BactInspectorMax-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "800c93e2344d9ad441708e3fee40709e", "sha256": "7a1017fe70d78ac8dea7a50408fd6165671a89e42912222d44efa9aef1c254ef"}, "downloads": -1, "filename": "BactInspectorMax-0.0.5.tar.gz", "has_sig": false, "md5_digest": "800c93e2344d9ad441708e3fee40709e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73115574, "upload_time": "2019-07-11T16:50:17", "upload_time_iso_8601": "2019-07-11T16:50:17.652598Z", "url": "https://files.pythonhosted.org/packages/83/56/438c979d5c7c9fb4018fc14826e1c110030d00b0b5043d83579607383304/BactInspectorMax-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a0541e2c2fa863e09f14e16ef66fcd0a", "sha256": "0d2e154c72db8e0913b04f0fce6e95cae327fea0bdd2d4ad8b24ba452ccfe06f"}, "downloads": -1, "filename": "BactInspectorMax-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a0541e2c2fa863e09f14e16ef66fcd0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73140361, "upload_time": "2019-07-16T06:21:04", "upload_time_iso_8601": "2019-07-16T06:21:04.387043Z", "url": "https://files.pythonhosted.org/packages/05/1f/0cd59167f93954693bd667077546cf31814d24e9111826461074427debcc/BactInspectorMax-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80932a5517c1687486de38468cefae80", "sha256": "fc0657e71916364fe2382df6264c55ac808a6965c36c04d6c04e650ac2433862"}, "downloads": -1, "filename": "BactInspectorMax-0.0.6.tar.gz", "has_sig": false, "md5_digest": "80932a5517c1687486de38468cefae80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73115602, "upload_time": "2019-07-16T06:31:08", "upload_time_iso_8601": "2019-07-16T06:31:08.962072Z", "url": "https://files.pythonhosted.org/packages/df/cd/a302254a68839ff852bf5fadcf8b7563486fd9ba04ab23e62c878774fa48/BactInspectorMax-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "72ed08edf6f9758e89708eb48a8c00c5", "sha256": "a9b37940896be408136ded4534ec3ba98f3558699cd1f8f88a133a058029ae79"}, "downloads": -1, "filename": "BactInspectorMax-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "72ed08edf6f9758e89708eb48a8c00c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73226278, "upload_time": "2019-07-22T12:39:19", "upload_time_iso_8601": "2019-07-22T12:39:19.852379Z", "url": "https://files.pythonhosted.org/packages/66/22/0492bc4730c34256614d8ccc13f64a82b24f7550ff2f4e91b97bd9b8da60/BactInspectorMax-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5b0403f25663c139704107b655f40a0", "sha256": "7d7bfd7d6fb0cc1b744a0e4a396cbc9c6d4f728b0019b93cdcbf96c32ff0b6d9"}, "downloads": -1, "filename": "BactInspectorMax-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a5b0403f25663c139704107b655f40a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73200444, "upload_time": "2019-07-22T12:39:49", "upload_time_iso_8601": "2019-07-22T12:39:49.236979Z", "url": "https://files.pythonhosted.org/packages/1b/3a/51cf37e75790cb5dc1e4432e1e8bbe45775795b845aedb48b58a86778b11/BactInspectorMax-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "c8a41acca5a2fc8cb8f58b0a58b8cdbd", "sha256": "b5455ffe08264747850b2c9e16dc6148478b014f38f89048392b1f8e6a4027dd"}, "downloads": -1, "filename": "BactInspectorMax-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "c8a41acca5a2fc8cb8f58b0a58b8cdbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73226355, "upload_time": "2019-09-21T15:35:54", "upload_time_iso_8601": "2019-09-21T15:35:54.802431Z", "url": "https://files.pythonhosted.org/packages/4d/b5/47400c1cb5e6ae997d06d037bcc5f4d60a5227ed5dabb2e6bb4e916ecfb4/BactInspectorMax-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ce26ba96296ae806aa5bc4fc4fd0b13", "sha256": "c4c21ed8dfa64b6049bf47ac6073c79cdf5074d1d0760f587595b412c4e619e2"}, "downloads": -1, "filename": "BactInspectorMax-0.0.8.tar.gz", "has_sig": false, "md5_digest": "1ce26ba96296ae806aa5bc4fc4fd0b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73203415, "upload_time": "2019-09-21T15:37:52", "upload_time_iso_8601": "2019-09-21T15:37:52.500551Z", "url": "https://files.pythonhosted.org/packages/7c/3b/7633125ed3630c5623276e0897031d830bc4b52236e1c83c657444ca0386/BactInspectorMax-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "f78286a797be44e07fda7dd53da84ab4", "sha256": "57b7db33db96d0c18c431ce94540034da7814526f3ddf9cdb250643e51112922"}, "downloads": -1, "filename": "BactInspectorMax-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f78286a797be44e07fda7dd53da84ab4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73226356, "upload_time": "2019-09-25T17:44:32", "upload_time_iso_8601": "2019-09-25T17:44:32.959733Z", "url": "https://files.pythonhosted.org/packages/39/d1/b5598aba816dd481666f4b912487c2f93874fed2b088c7c147aae0db3502/BactInspectorMax-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4eff7690b8c9cac373c525ea0daeb92", "sha256": "4700dee54f1dd8a4bf77af32ac8990cd887f61bd462a58f5b8957a2fe6f99d27"}, "downloads": -1, "filename": "BactInspectorMax-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b4eff7690b8c9cac373c525ea0daeb92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73203638, "upload_time": "2019-09-25T17:48:00", "upload_time_iso_8601": "2019-09-25T17:48:00.383260Z", "url": "https://files.pythonhosted.org/packages/9f/f4/5fb2b78ff76c351f9ea986bc05ca83632c95a78b018c1972412623c52821/BactInspectorMax-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2105a5873ff967ee5ef180d90ddacbeb", "sha256": "4ea0a435256960192517b2db8248904711be0b07ffd245020d44bd9c36138860"}, "downloads": -1, "filename": "BactInspectorMax-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2105a5873ff967ee5ef180d90ddacbeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73226379, "upload_time": "2019-11-13T20:45:32", "upload_time_iso_8601": "2019-11-13T20:45:32.316807Z", "url": "https://files.pythonhosted.org/packages/40/d7/deeff4f8b6652a30a4e5e353bd58c28433b784c6f2ebeae09db4b5858319/BactInspectorMax-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f290b706f43ce3318f9107bee5c13a4", "sha256": "02e73457998ebaea14c7902af3c8941e30f56e6a8150854cc24d504be0615668"}, "downloads": -1, "filename": "BactInspectorMax-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7f290b706f43ce3318f9107bee5c13a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73203759, "upload_time": "2019-11-13T20:48:33", "upload_time_iso_8601": "2019-11-13T20:48:33.169617Z", "url": "https://files.pythonhosted.org/packages/7f/00/31bafef2c105118ac26d0ce01186d51cbf50b1f02390ee8b6c325817b2e2/BactInspectorMax-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7113b0e78d9c06ffaa95f1fea740bb4c", "sha256": "3bc70366f281fd4f97af09c26dc649618973cd1d74f44ef3b20a1ade8022cce2"}, "downloads": -1, "filename": "BactInspectorMax-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7113b0e78d9c06ffaa95f1fea740bb4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73226505, "upload_time": "2019-11-14T19:31:57", "upload_time_iso_8601": "2019-11-14T19:31:57.643431Z", "url": "https://files.pythonhosted.org/packages/54/bf/c860c2d6f142b0d5ba6666733b75ebc79e167bdedb4c5da34683ee258ca9/BactInspectorMax-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47dba7c31cc70553a696eb3faf52654d", "sha256": "218226ccad994c253cea1f718ddcacbddb949e2d5e7fc5101524a3e84ae4ffe7"}, "downloads": -1, "filename": "BactInspectorMax-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47dba7c31cc70553a696eb3faf52654d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73203910, "upload_time": "2019-11-14T19:34:37", "upload_time_iso_8601": "2019-11-14T19:34:37.312292Z", "url": "https://files.pythonhosted.org/packages/fc/7d/99962f5ef8072cd4283cadc5c94644fb96830de87527c59e3614ac0d39e7/BactInspectorMax-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9c27769d385de19deb9423244bfbc576", "sha256": "862a86feadab2a8ffad02375802cc85ebbd51d5b8b0ceb52c49a7fdf5a2065ac"}, "downloads": -1, "filename": "BactInspectorMax-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c27769d385de19deb9423244bfbc576", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73229344, "upload_time": "2019-11-15T18:17:32", "upload_time_iso_8601": "2019-11-15T18:17:32.770303Z", "url": "https://files.pythonhosted.org/packages/6c/55/cb2ff4d63cf0459c26fbb7acdb02ecd4888bca325cb46a9dccd091e1d6fb/BactInspectorMax-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9004fa64cd5d83820a2ca987156f7ca", "sha256": "68d71772957e8b1d12bda9910486a863d553792b0e086cd2ad3504fc65f45647"}, "downloads": -1, "filename": "BactInspectorMax-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f9004fa64cd5d83820a2ca987156f7ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73205297, "upload_time": "2019-11-15T18:17:52", "upload_time_iso_8601": "2019-11-15T18:17:52.430577Z", "url": "https://files.pythonhosted.org/packages/af/1c/f6ed047eac987e3a8cc1b75c6b642ec71dbc4a2ba9c530aa087ab29bb22d/BactInspectorMax-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bafea9374440ef8fb79c7bf74398bc68", "sha256": "312dd3a705bf8bc973e69377f74871d5c40c19530d76b6dfbfa6c98a7102955b"}, "downloads": -1, "filename": "BactInspectorMax-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bafea9374440ef8fb79c7bf74398bc68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73229670, "upload_time": "2019-11-16T11:13:43", "upload_time_iso_8601": "2019-11-16T11:13:43.231332Z", "url": "https://files.pythonhosted.org/packages/c5/ab/9110a9e185b00f8e808253b82441c5ba0983e7a893cac2f68a3417064945/BactInspectorMax-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c52597deeb6185088a486479e9fac797", "sha256": "0fc4ab3686c8c2e8fcfc40b70ff1456401ae02b3dc647242cc5ecdbd4b90138d"}, "downloads": -1, "filename": "BactInspectorMax-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c52597deeb6185088a486479e9fac797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73205846, "upload_time": "2019-11-16T11:16:09", "upload_time_iso_8601": "2019-11-16T11:16:09.618540Z", "url": "https://files.pythonhosted.org/packages/97/e3/087fb0be0414f1442d01e481e0ad22e8596680c98e6462b8513cbe307ee9/BactInspectorMax-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bafea9374440ef8fb79c7bf74398bc68", "sha256": "312dd3a705bf8bc973e69377f74871d5c40c19530d76b6dfbfa6c98a7102955b"}, "downloads": -1, "filename": "BactInspectorMax-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bafea9374440ef8fb79c7bf74398bc68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73229670, "upload_time": "2019-11-16T11:13:43", "upload_time_iso_8601": "2019-11-16T11:13:43.231332Z", "url": "https://files.pythonhosted.org/packages/c5/ab/9110a9e185b00f8e808253b82441c5ba0983e7a893cac2f68a3417064945/BactInspectorMax-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c52597deeb6185088a486479e9fac797", "sha256": "0fc4ab3686c8c2e8fcfc40b70ff1456401ae02b3dc647242cc5ecdbd4b90138d"}, "downloads": -1, "filename": "BactInspectorMax-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c52597deeb6185088a486479e9fac797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73205846, "upload_time": "2019-11-16T11:16:09", "upload_time_iso_8601": "2019-11-16T11:16:09.618540Z", "url": "https://files.pythonhosted.org/packages/97/e3/087fb0be0414f1442d01e481e0ad22e8596680c98e6462b8513cbe307ee9/BactInspectorMax-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:05 2020"}