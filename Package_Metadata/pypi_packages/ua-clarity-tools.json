{"info": {"author": "Stephen Stern, Rafael Lopez, Ryan Johannes-Bland", "author_email": "sterns1@email.arizona.edu", "bugtrack_url": null, "classifiers": [], "description": "# UA-Lims-Tools\n\nProvides 2 sets of tools for use with clarity and it's endpoints: ClarityTools\nand StepTools.\n\n## Motivation\n\nTo create a set of tools to assist in script writing for Clarity.\n\n## Features\n\nUse ClarityTools as a means of interfacing with Clarity and it's endpoints.\n\n* get_samples will get all samples from a list of uris passed in.\n\n* get_arts_from_samples will get all artifact uris for the list of uris passed.\n\n* get_udfs will find all the udfs that should be attached to target.\n\n* set_reagent_label will set the reagent_label for all artifacts passed.\n\n* step_router will route a list of artifact_uris to a specified step.Use StepTools as a way of interacting with a Clarity step.*\n\n* get_artifacts will return all artifacts from the step.\n\n* get_process_data will retrieve the process data for the current step.\n\n* get_artifact_map creates a mapping of input artifacts to output artifacts.\n\n* set_artifact_udf sets the udfs of all analytes in the step.\n\n* get_artifacts_previous_step will map the current steps artifact uris to an ancestor artifact from the step passed to it.\n\n* get_assays will find the assays within the current protocol.## Code Example\n\npython\nfrom ua_lims_tools import ua_lims_tools\nclarity_api = ua_lims_tools.ClarityApi()\nstep_api = ua_lims_tools.StepTools()\n\n## Installation\n\nbash\npip install ua-lims-tools\n\n## Tests\n\nbash\npip install --update nose\ncd ./repo\ncd ./tests\nnosetests test_lims_tools.py\n\n## How to Use\n\nExamples of syntax for each method\n\npython\nclarity_api = ua_lims_tools.ClarityApi()\nsamples = clarity_api.get_samples(uris)\n\n* get_samples gets the samples from the passed in uris.\n* Arguments: uris is a list of sample endpoints to get.\n* Returns: a list of Sample dataclass objects with gotten sample's data.\n\n## Credits\n\n[sterns1](https://github.com/sterns1)\n[raflopjr](https://github.com/raflopjr)\n[RyanJohannesBland](https://github.com/RyanJohannesBland)\n\n## LicenseMIT\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/UACoreFacilitiesIT/UA-Clarity-Tools", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ua-clarity-tools", "package_url": "https://pypi.org/project/ua-clarity-tools/", "platform": "", "project_url": "https://pypi.org/project/ua-clarity-tools/", "project_urls": {"Homepage": "https://github.com/UACoreFacilitiesIT/UA-Clarity-Tools"}, "release_url": "https://pypi.org/project/ua-clarity-tools/1.1.0/", "requires_dist": ["ua-clarity-api"], "requires_python": "", "summary": "API that interacts with Illumina's Clarity LIMS software at a higher level than requests.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>UA-Lims-Tools</h1>\n<p>Provides 2 sets of tools for use with clarity and it's endpoints: ClarityTools\nand StepTools.</p>\n<h2>Motivation</h2>\n<p>To create a set of tools to assist in script writing for Clarity.</p>\n<h2>Features</h2>\n<p>Use ClarityTools as a means of interfacing with Clarity and it's endpoints.</p>\n<ul>\n<li>\n<p>get_samples will get all samples from a list of uris passed in.</p>\n</li>\n<li>\n<p>get_arts_from_samples will get all artifact uris for the list of uris passed.</p>\n</li>\n<li>\n<p>get_udfs will find all the udfs that should be attached to target.</p>\n</li>\n<li>\n<p>set_reagent_label will set the reagent_label for all artifacts passed.</p>\n</li>\n<li>\n<p>step_router will route a list of artifact_uris to a specified step.Use StepTools as a way of interacting with a Clarity step.*</p>\n</li>\n<li>\n<p>get_artifacts will return all artifacts from the step.</p>\n</li>\n<li>\n<p>get_process_data will retrieve the process data for the current step.</p>\n</li>\n<li>\n<p>get_artifact_map creates a mapping of input artifacts to output artifacts.</p>\n</li>\n<li>\n<p>set_artifact_udf sets the udfs of all analytes in the step.</p>\n</li>\n<li>\n<p>get_artifacts_previous_step will map the current steps artifact uris to an ancestor artifact from the step passed to it.</p>\n</li>\n<li>\n<p>get_assays will find the assays within the current protocol.## Code Example</p>\n</li>\n</ul>\n<p>python\nfrom ua_lims_tools import ua_lims_tools\nclarity_api = ua_lims_tools.ClarityApi()\nstep_api = ua_lims_tools.StepTools()</p>\n<h2>Installation</h2>\n<p>bash\npip install ua-lims-tools</p>\n<h2>Tests</h2>\n<p>bash\npip install --update nose\ncd ./repo\ncd ./tests\nnosetests test_lims_tools.py</p>\n<h2>How to Use</h2>\n<p>Examples of syntax for each method</p>\n<p>python\nclarity_api = ua_lims_tools.ClarityApi()\nsamples = clarity_api.get_samples(uris)</p>\n<ul>\n<li>get_samples gets the samples from the passed in uris.</li>\n<li>Arguments: uris is a list of sample endpoints to get.</li>\n<li>Returns: a list of Sample dataclass objects with gotten sample's data.</li>\n</ul>\n<h2>Credits</h2>\n<p><a href=\"https://github.com/sterns1\" rel=\"nofollow\">sterns1</a>\n<a href=\"https://github.com/raflopjr\" rel=\"nofollow\">raflopjr</a>\n<a href=\"https://github.com/RyanJohannesBland\" rel=\"nofollow\">RyanJohannesBland</a></p>\n<h2>LicenseMIT</h2>\n\n          </div>"}, "last_serial": 6209871, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "b1d536d5deaaf8a839715b0e68d4a2cb", "sha256": "54514b5d17e3a3007dadb0c8ed8019ea162c1e23759bbb8fcce630543cfd4808"}, "downloads": -1, "filename": "ua_clarity_tools-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b1d536d5deaaf8a839715b0e68d4a2cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11293, "upload_time": "2019-10-20T00:20:29", "upload_time_iso_8601": "2019-10-20T00:20:29.460978Z", "url": "https://files.pythonhosted.org/packages/30/78/7eb6c3250d3b7380ac9573811d42d0f64012ca36013d841f340497d0fcc4/ua_clarity_tools-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e9c64b91cf2bb395db17ef37aa2bd16", "sha256": "b18e3f1404ffeb42d560e562c0b905ae657b1d22bdaac7a25a5a2c6aa1a4dc20"}, "downloads": -1, "filename": "ua_clarity_tools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6e9c64b91cf2bb395db17ef37aa2bd16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10252, "upload_time": "2019-10-20T00:20:32", "upload_time_iso_8601": "2019-10-20T00:20:32.028768Z", "url": "https://files.pythonhosted.org/packages/32/32/36cd9fecb10e48375b900476065c9c5ce5227d9397a246632fcef2d84c11/ua_clarity_tools-0.0.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "9a05f9ab4a0065e1f6c1aef25bd214e5", "sha256": "5df43fb341656d1d563954014c94ca59c6c147a2e712beedff6275c856a09d0f"}, "downloads": -1, "filename": "ua_clarity_tools-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9a05f9ab4a0065e1f6c1aef25bd214e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11337, "upload_time": "2019-10-30T18:16:02", "upload_time_iso_8601": "2019-10-30T18:16:02.863336Z", "url": "https://files.pythonhosted.org/packages/60/91/6b7922b36f5bb49bdb3f66d3aad7dfb8222719d683ba408662c435b108f5/ua_clarity_tools-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e844468783735126daa03fe01378ee6e", "sha256": "8782a0cc77884b9cffd6abc91c3d52a3492d27a3d7fb92cd88f4a1e2d0502e7a"}, "downloads": -1, "filename": "ua_clarity_tools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e844468783735126daa03fe01378ee6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10299, "upload_time": "2019-10-30T18:16:04", "upload_time_iso_8601": "2019-10-30T18:16:04.431555Z", "url": "https://files.pythonhosted.org/packages/87/73/93e35cafe39881e6986cde04165a012067434d393aea391ee976704fd263/ua_clarity_tools-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "262108db6a07b2d285dd65b347a8078d", "sha256": "8d00ee34a8dd2d412f5fedcfa213eb74524f2874d5e3ea66cf10a17714beafac"}, "downloads": -1, "filename": "ua_clarity_tools-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "262108db6a07b2d285dd65b347a8078d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11410, "upload_time": "2019-11-27T17:42:28", "upload_time_iso_8601": "2019-11-27T17:42:28.167708Z", "url": "https://files.pythonhosted.org/packages/87/b9/b326b0b7db29111af1d0c351961dc71b1d150592fc04ccad524da9e0d34d/ua_clarity_tools-1.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "262108db6a07b2d285dd65b347a8078d", "sha256": "8d00ee34a8dd2d412f5fedcfa213eb74524f2874d5e3ea66cf10a17714beafac"}, "downloads": -1, "filename": "ua_clarity_tools-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "262108db6a07b2d285dd65b347a8078d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11410, "upload_time": "2019-11-27T17:42:28", "upload_time_iso_8601": "2019-11-27T17:42:28.167708Z", "url": "https://files.pythonhosted.org/packages/87/b9/b326b0b7db29111af1d0c351961dc71b1d150592fc04ccad524da9e0d34d/ua_clarity_tools-1.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:42:30 2020"}