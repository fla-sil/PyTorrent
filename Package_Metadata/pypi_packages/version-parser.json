{"info": {"author": "Stefan Eiermann", "author_email": "python-org@ultraapp.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development", "Topic :: Utilities"], "description": "# Version Parser\n\n## JavaScript Version\n\n[https://www.npmjs.com/package/version-parser](https://www.npmjs.com/package/version-parser)\n\n[![npm version](https://badge.fury.io/js/version-parser.svg)](https://badge.fury.io/js/version-parser)\n\n## Python Version\n\n[![Build Status](https://travis-ci.org/eieste/VersionParser.svg?branch=master)](https://travis-ci.org/eieste/VersionParser)\n[![PyPI version](https://badge.fury.io/py/version-parser.svg)](https://badge.fury.io/py/version-parser)\n\nThe version parser is able to parse versions and figure out which of them are build in\none of the following three formats: Major-Version, Minor-Version and Build-Version.\n\nPossible input types are:\n\n| Version  | Typ               |\n|----------|-------------------|\n| v1.2.3   | Version           |\n| V1.2.3   | Version           |\n| v_1_2_3  | FILENAME          |\n| v1_2_3   | FILENAME          |\n| V_1_2_3  | FILENAME          |\n| V1_2_3   | FILENAME          |\n| 1_2_3    | FILENAME          |\n| VM1m2b3  | CLASSNAME_BUILD   |\n| VM1m2p3  | CLASSNAME_PATCH   |\n| vM1m2b3  | CLASSNAME_BUILD   |\n| vM1m2p3  | CLASSNAME_PATCH   |\n| 1.2.3    | STRIPPED_VERSION  |\n| 2312     | NUMBER            |\n\n\n## Install\n```python\npip install version-parser\n```\n\n## Usage\n\nCreate object with the version as a String as initial parameter.\n\n```python\nfrom version_parser import Version\n\n\nv1 = Version(\"v2.3.4\")\n```\n\n\nTo compare two version objects/numbers, simply put the versions as Strings into \nseperate objects and compare them using the logical operators.\n```python\nfrom version_parser.version import Version\n\n\nv1 = Version(\"v2.3.4\")\nv2 = Version(\"v2.3.2\")\n\nprint(v1 < v2)\n>> False\n\n\nprint(v1 > v2)\n>> True\n\n\nprint(v1 == v2)\n>> False\n\n```\n\n\nThe last digets behind the last dot should be the Patch or Build Version Number.\nDifferences in this area should be compatible to each other.\n```python\nfrom version_parser.version import Version\n\n\nv1 = Version(\"v2.3.4\")\nv2 = Version(\"v2.3.5\")\n\n\nprint(v1 == v2)\n>> False\n\n\nprint(v1.compatible_version_with(v2))\n>> True\n\n```\n\nYou can also get only the Major, Minor or Build Version by using:\n\n````python\nfrom version_parser import Version\nv = Version(\"v2.3.4\")\n\nv.get_major_version()\n2\nv.get_minor_version()\n3\nv.get_build_version()\n4\n````\n\nIt's possible to convert the version format, too:\n\n````python\nfrom version_parser import Version, VersionType\nv = Version(\"v2.3.4\")       # VersionType = Version\nprint(v.get_type())\n>> VersionType.Version\n\nprint(v.get_typed_version(VersionType.FILENAME))\n>> v_2_3_4\n````\n\nAny version can be represented by an Integer.\n> The sections of major, minor, build/patched version should have a maximum of three digets.\n\n````python\nfrom version_parser import Version\nv = Version(\"v2.3.4\")\nprint(v.get_number())\n>> 2003004\n````\n\n\n## VersionTypes\n\n### VersionType.FILENAME\n```python\n\"v_<MAJOR>_<MINOR>_<BUILD/PATCH>\"\n```\n\n### VersionType.CLASSNAME\n```python\n\"VM<MAJOR>m<MINOR>b<BUILD/PATCH>\"\n```\n\n### VersionType.VERSION\n```python\n\"v<MAJOR>.<MINOR>.<BUILD/PATCH>\"\n```\n\n### VersionType.STRIPPED_VERSION\n```python\n\"<MAJOR>.<MINOR>.<BUILD/PATCH>\"\n```\n\n### VersionType.NUMBER\n> each section is filled zeros up to three digets\n```python\n\"<MAJOR><MINOR><BUILD/PATCH>\"\n```\n\n### VersionType.CLASSNAME_BUILD\n> same like CLASSNAME_BUILD \n\n\n### VersionType.CLASSNAME_PATCH\n```python\n\"VM<MAJOR>m<MINOR>p<BUILD/PATCH>\"\n                  ^\n                PATCH \n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eieste/VersionParser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "version-parser", "package_url": "https://pypi.org/project/version-parser/", "platform": "", "project_url": "https://pypi.org/project/version-parser/", "project_urls": {"Homepage": "https://github.com/eieste/VersionParser"}, "release_url": "https://pypi.org/project/version-parser/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "This package can parse and compare semantic versioning.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Version Parser</h1>\n<h2>JavaScript Version</h2>\n<p><a href=\"https://www.npmjs.com/package/version-parser\" rel=\"nofollow\">https://www.npmjs.com/package/version-parser</a></p>\n<p><a href=\"https://badge.fury.io/js/version-parser\" rel=\"nofollow\"><img alt=\"npm version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49a08c86302498489cebccd042b8c0bc91bb9429/68747470733a2f2f62616467652e667572792e696f2f6a732f76657273696f6e2d7061727365722e737667\"></a></p>\n<h2>Python Version</h2>\n<p><a href=\"https://travis-ci.org/eieste/VersionParser\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3312601187ed3e4d08996320a8455def84a53896/68747470733a2f2f7472617669732d63692e6f72672f6569657374652f56657273696f6e5061727365722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/version-parser\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3b67f4c8fab64d49c5ec2f95f19945009f1b09d/68747470733a2f2f62616467652e667572792e696f2f70792f76657273696f6e2d7061727365722e737667\"></a></p>\n<p>The version parser is able to parse versions and figure out which of them are build in\none of the following three formats: Major-Version, Minor-Version and Build-Version.</p>\n<p>Possible input types are:</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Typ</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v1.2.3</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>V1.2.3</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>v_1_2_3</td>\n<td>FILENAME</td>\n</tr>\n<tr>\n<td>v1_2_3</td>\n<td>FILENAME</td>\n</tr>\n<tr>\n<td>V_1_2_3</td>\n<td>FILENAME</td>\n</tr>\n<tr>\n<td>V1_2_3</td>\n<td>FILENAME</td>\n</tr>\n<tr>\n<td>1_2_3</td>\n<td>FILENAME</td>\n</tr>\n<tr>\n<td>VM1m2b3</td>\n<td>CLASSNAME_BUILD</td>\n</tr>\n<tr>\n<td>VM1m2p3</td>\n<td>CLASSNAME_PATCH</td>\n</tr>\n<tr>\n<td>vM1m2b3</td>\n<td>CLASSNAME_BUILD</td>\n</tr>\n<tr>\n<td>vM1m2p3</td>\n<td>CLASSNAME_PATCH</td>\n</tr>\n<tr>\n<td>1.2.3</td>\n<td>STRIPPED_VERSION</td>\n</tr>\n<tr>\n<td>2312</td>\n<td>NUMBER</td>\n</tr></tbody></table>\n<h2>Install</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">version</span><span class=\"o\">-</span><span class=\"n\">parser</span>\n</pre>\n<h2>Usage</h2>\n<p>Create object with the version as a String as initial parameter.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n\n\n<span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>\n</pre>\n<p>To compare two version objects/numbers, simply put the versions as Strings into\nseperate objects and compare them using the logical operators.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser.version</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n\n\n<span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>\n<span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.2\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v1</span> <span class=\"o\">&lt;</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">False</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v1</span> <span class=\"o\">&gt;</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">True</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v1</span> <span class=\"o\">==</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">False</span>\n</pre>\n<p>The last digets behind the last dot should be the Patch or Build Version Number.\nDifferences in this area should be compatible to each other.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser.version</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n\n\n<span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>\n<span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.5\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v1</span> <span class=\"o\">==</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">False</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"o\">.</span><span class=\"n\">compatible_version_with</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">True</span>\n</pre>\n<p>You can also get only the Major, Minor or Build Version by using:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n<span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_major_version</span><span class=\"p\">()</span>\n<span class=\"mi\">2</span>\n<span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_minor_version</span><span class=\"p\">()</span>\n<span class=\"mi\">3</span>\n<span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_build_version</span><span class=\"p\">()</span>\n<span class=\"mi\">4</span>\n</pre>\n<p>It's possible to convert the version format, too:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span><span class=\"p\">,</span> <span class=\"n\">VersionType</span>\n<span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>       <span class=\"c1\"># VersionType = Version</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_type</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">VersionType</span><span class=\"o\">.</span><span class=\"n\">Version</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_typed_version</span><span class=\"p\">(</span><span class=\"n\">VersionType</span><span class=\"o\">.</span><span class=\"n\">FILENAME</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">v_2_3_4</span>\n</pre>\n<p>Any version can be represented by an Integer.</p>\n<blockquote>\n<p>The sections of major, minor, build/patched version should have a maximum of three digets.</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">version_parser</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n<span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">\"v2.3.4\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">get_number</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"mi\">2003004</span>\n</pre>\n<h2>VersionTypes</h2>\n<h3>VersionType.FILENAME</h3>\n<pre><span class=\"s2\">\"v_&lt;MAJOR&gt;_&lt;MINOR&gt;_&lt;BUILD/PATCH&gt;\"</span>\n</pre>\n<h3>VersionType.CLASSNAME</h3>\n<pre><span class=\"s2\">\"VM&lt;MAJOR&gt;m&lt;MINOR&gt;b&lt;BUILD/PATCH&gt;\"</span>\n</pre>\n<h3>VersionType.VERSION</h3>\n<pre><span class=\"s2\">\"v&lt;MAJOR&gt;.&lt;MINOR&gt;.&lt;BUILD/PATCH&gt;\"</span>\n</pre>\n<h3>VersionType.STRIPPED_VERSION</h3>\n<pre><span class=\"s2\">\"&lt;MAJOR&gt;.&lt;MINOR&gt;.&lt;BUILD/PATCH&gt;\"</span>\n</pre>\n<h3>VersionType.NUMBER</h3>\n<blockquote>\n<p>each section is filled zeros up to three digets</p>\n</blockquote>\n<pre><span class=\"s2\">\"&lt;MAJOR&gt;&lt;MINOR&gt;&lt;BUILD/PATCH&gt;\"</span>\n</pre>\n<h3>VersionType.CLASSNAME_BUILD</h3>\n<blockquote>\n<p>same like CLASSNAME_BUILD</p>\n</blockquote>\n<h3>VersionType.CLASSNAME_PATCH</h3>\n<pre><span class=\"s2\">\"VM&lt;MAJOR&gt;m&lt;MINOR&gt;p&lt;BUILD/PATCH&gt;\"</span>\n                  <span class=\"o\">^</span>\n                <span class=\"n\">PATCH</span> \n</pre>\n\n          </div>"}, "last_serial": 5751337, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "73b04eb1470e3626dfcab8a87f608a9f", "sha256": "35cc0b381df60119e30f6485196deb518f6ed323fc834b885178ca827fdfcc97"}, "downloads": -1, "filename": "version_parser-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "73b04eb1470e3626dfcab8a87f608a9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3792, "upload_time": "2018-11-24T11:59:51", "upload_time_iso_8601": "2018-11-24T11:59:51.234151Z", "url": "https://files.pythonhosted.org/packages/ec/f6/73a0da6a880d479e30e9e5c88b35d0e694b5efeee2ad0c3785b021d7b758/version_parser-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aaca11e37cbc27cced739c9e488cb10", "sha256": "d96be007cf96c421ec4e6962adc6c2d405614be0e8722c610a709ca1af6827ca"}, "downloads": -1, "filename": "version_parser-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2aaca11e37cbc27cced739c9e488cb10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2839, "upload_time": "2018-11-24T11:59:53", "upload_time_iso_8601": "2018-11-24T11:59:53.195625Z", "url": "https://files.pythonhosted.org/packages/24/5f/0e0059a7579227b373c5266250a425fa09aed3cefc5449803ec342cabc89/version_parser-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d054b494d34bfd10da650d8846eff8d1", "sha256": "c4d99bb73bba8750af97c25bd0644f2a2b3722685543ad464f06ddd46e3e76b3"}, "downloads": -1, "filename": "version_parser-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d054b494d34bfd10da650d8846eff8d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2925, "upload_time": "2018-11-24T12:52:08", "upload_time_iso_8601": "2018-11-24T12:52:08.377448Z", "url": "https://files.pythonhosted.org/packages/26/71/310cba25975a39d7102868b26c8a3ac96a5e38a48e8525f3b8864484cf03/version_parser-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "528c438fbd3a1a9282f5374e2ca219f9", "sha256": "5dbff117e316c51a62a09cd730047a3dec8374e8b858df9825e261a72b6e3741"}, "downloads": -1, "filename": "version_parser-0.1.0.tar.gz", "has_sig": false, "md5_digest": "528c438fbd3a1a9282f5374e2ca219f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4239, "upload_time": "2018-11-24T14:49:07", "upload_time_iso_8601": "2018-11-24T14:49:07.706745Z", "url": "https://files.pythonhosted.org/packages/62/cf/f9834afca031a83a8d57d7b30dd5f6a469f7d0a32819cb87b93a603bb245/version_parser-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c0a3921be0904ec76e74dc7e26dd4363", "sha256": "678969d45f437ce6f3bc8cfbd4d129b85bdcd78d3489fc453ff5496eb496a3d1"}, "downloads": -1, "filename": "version_parser-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c0a3921be0904ec76e74dc7e26dd4363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4347, "upload_time": "2019-03-11T08:29:00", "upload_time_iso_8601": "2019-03-11T08:29:00.912043Z", "url": "https://files.pythonhosted.org/packages/91/98/15f03a4476a7d956fbbd6f4305e0c56a7f5397ff89fc2222523c16ecdbf3/version_parser-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "cd04edf75842da43f9cd1bd650edb15e", "sha256": "9ba1e08df3f37db72a1c17b1d184127ae785c34b6c41499678df3b2ad20e9058"}, "downloads": -1, "filename": "version_parser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cd04edf75842da43f9cd1bd650edb15e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4358, "upload_time": "2019-08-29T11:07:20", "upload_time_iso_8601": "2019-08-29T11:07:20.478133Z", "url": "https://files.pythonhosted.org/packages/9d/f8/5285daf1866f337bc07e97b9095d87286449b8e1a6d1b9e3dd64227fa309/version_parser-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd04edf75842da43f9cd1bd650edb15e", "sha256": "9ba1e08df3f37db72a1c17b1d184127ae785c34b6c41499678df3b2ad20e9058"}, "downloads": -1, "filename": "version_parser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cd04edf75842da43f9cd1bd650edb15e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4358, "upload_time": "2019-08-29T11:07:20", "upload_time_iso_8601": "2019-08-29T11:07:20.478133Z", "url": "https://files.pythonhosted.org/packages/9d/f8/5285daf1866f337bc07e97b9095d87286449b8e1a6d1b9e3dd64227fa309/version_parser-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:39 2020"}