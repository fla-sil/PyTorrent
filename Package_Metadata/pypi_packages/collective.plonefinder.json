{"info": {"author": "Jean-mat Grimaldi / Alter Way Solutions", "author_email": "support@ingeniweb.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Framework :: Zope2", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======================\ncollective.plonefinder\n======================\n\nAjax popup to browse and select plone contents, suitable to any\n``plone.formilb`` form (portlets, control panels, ...)\n\nThis code is an extraction with some refactoring, of PloneArticle explorer used\nfor referencables proxies.\n\nThe intent is to make it usable in various situations:\n\n- to store selected contents in ``plone.formlib`` based Plone forms (portlet or\n  control panel forms as example)\n\n- for ``collective.ckeditor`` or any possible wysiwyg editor for referencing\n  images or contents inside a rich text field, it's also possible to upload\n  files / images and create folders with this product (dependency to\n  ``collective.quickupload``)\n\n- for referencable fields inside AT edit forms (future)\n\n- for links fields (as remoteUrl in ATLink) to reference internal links (future)\n\nThis work has been started at Ingeniweb in 2007 by Christophe Bosse (for the\njQuery code) and Jean-Mat Grimaldi (everything else) for PloneArticle product.\n\n.. admonition::\n   Plone add-ons developers only\n\n   This is a component for Plone add-ons developers. Do not expect to add\n   anything more in yous site if you install only this component to your Zope\n   instance.\n\nRequirements\n============\n\n* Plone (tested with Plone 3.3.5 and Plone 4)\n* collective.quickupload\n\nInstallation\n============\n\n* Nothing to do if you have installed ``collective.ckeditor`` (Plone 4 only\n  today)\n\n* Otherwise install it as any Zope package using buildout :\n\n  - add ``collective.plonefinder`` in your ``eggs`` section\n\n  - add ``collective.plonefinder`` in your ``zcml`` section of the\n    ``plone.recipe.zope2instance`` part definition if on Plone 3.0 or 3.1\n\n  - Run ``bin/buildout``\n\nNothing else.\n\nHow to use it as a reference widget in formlib forms\n====================================================\n\nBasic usage\n-----------\n\nA reference widget for zope3 forms (zope.app.form) is provided with this product.\n\nThe widget can be used to store objects references in a sequence field.\n\nExample of use in a portlet form for a Tuple field named target_contents::\n\n    from collective.plonefinder.widgets.referencewidget import FinderSelectWidget\n\n    target_contents = schema.Tuple(title=u\"Browse for contents\",\n                                   description=(u\"Choose contents to display \"\n                                                u\"with a plone finder window.\"),\n                                   default=()\n                                   )\n\n    form_fields['target_contents'].custom_widget = FinderSelectWidget\n\nTweaking some properties\n------------------------\n\nYou can use the ``FinderSelectWidget`` with some properties set using the update\nmethod in your ``AddForm`` or ``EditForm``. In example for a portlet ``AddForm``::\n\n    class AddForm(base.AddForm):\n        \"\"\"Portlet add form.\n        \"\"\"\n        form_fields = form.Fields(IReferencesPortlet)\n        form_fields['targets'].custom_widget = FinderSelectWidget\n        label = u\"Add References Portlet\"\n\n        def update(self):\n            super(AddForm, self).update()\n            self.widgets['targets'].typeview = 'image'\n            self.widgets['targets'].forcecloseoninsert = 1\n\n        def create(self, data):\n            return Assignment(**data)\n\nIf you want, you can also pass a context as base for the widget, to get the\ncurrent or parent folder open in the finder. Example in a portlet using the\n``update`` method::\n\n        assignment = aq_parent(aq_inner(self.context))\n        self.widgets['targets'].base = aq_parent(aq_inner(assignment))\n\nThere are also two customized widgets for files and images. Look at the code to\ncreate your own specific widget.\n\nExample of code for files referencing with files upload support::\n\n    from collective.plonefinder.widgets.referencewidget import FinderSelectFileWidget\n\n    target_files = schema.Tuple(title=u\"Browse for images\",\n                                description=(u\"Choose files to display \"\n                                             u\"with a plone finder window. \"\n                                             u\"You can upload new files.\"),\n                                default=()\n                                )\n\n    form_fields['target_files'].custom_widget = FinderSelectFileWidget\n\nExample of code for images referencing with images upload support::\n\n    from collective.plonefinder.widgets.referencewidget import FinderSelectImageWidget\n\n    target_images = schema.Tuple (title=u\"Browse for images\",\n                                  description=(u\"Choose images to display \"\n                                               u\"with a plone finder window. \"\n                                               u\"You can select different image sizes. \"\n                                               u\"You can upload new images.\"),\n                                  default= ()\n                                  )\n\n    form_fields['target_images'].custom_widget = FinderSelectImageWidget\n\nNote that in this last case the data store image uid and image thumb size like\nthis::\n\n    '%s/%s' % (image.UID(), thumb_size_extension)\n\n``thumb_size_extension`` could be ``'image_thumb'`` or ``'image_preview'`` ...\n\nSo use something like this to display a referenced image::\n\n    uid, variant = data.split('/')\n    '<img src=\"%s/resolveuid/%s/%s\" />' % (portal_url, uid, variant)\n\nFull list of customization attributes\n-------------------------------------\n\n.. list-table::\n   :widths: 20 20 60\n   :header-rows: 1\n\n   * - Attribute\n     - Default value\n     - Description\n   * - ``finderlabel``\n     - ``_(u'Browse for contents')``\n     - Customize the title of the Browser window. i.e. ``\"Find the pictures\"``\n   * - ``moveuplabel``\n     - ``_(u'Move up')``\n     - Label associated with the up arrow widget that raises the order of the\n       reference. i.e. ``\"Increase priority\"``.\n   * - ``movedownlabel``\n     - ``_(u'Move down')``\n     - Label associated with the down arrow widget that lowers the order of the\n       reference. i.e. ``\"Decrease priority\"``.\n   * - ``deleteentrylabel``\n     - ``_(u'Remove item')``\n     - Label associated with the \"Remove from list\" widget. i.e. ``\"Remove this\n       video\"``.\n   * - ``types``\n     - ``() # All types``\n     - List of selectable portal types to show in the selection\n       panel. i.e. ``['Document']``\n   * - ``typeview``\n     - ``'file'``\n     - Possible values are ``'file'``, ``'image'`` and ``'selection'``. Tuning\n       on selection panel layout.\n   * - ``imagetypes``\n     - ``('Image', 'News Item')``\n     - Sequence of portal types that can handle images (see `Todo`_)\n   * - ``selectiontype``\n     - ``'uid'``\n     - Selected items are returned to the application (form) as UIDs. Other\n       possible value is ``'url'``.\n   * - ``showsearchbox``\n     - ``True``\n     - Do we show the searchbox?\n   * - ``allowupload``\n     - ``False``\n     - Do we enable upload files through our widget if the user has appropriate\n       permission? See `Uploadding in custom folderish type`_\n   * - ``openuploadwidgetdefault``\n     - ``False``\n     - Do we display the upload widget by default?\n   * - ``allowaddfolder``\n     - ``False``\n     - Do we enable adding new folders through our widget if the user has\n       appropriate permission?\n   * - ``allowimagesizeselection``\n     - ``False``\n     - If the image has multiple sizes, do we enable the selection of a\n       particular size? (See the above note)\n   * - ``forcecloseoninsert``\n     - ``False``\n     - Do we close the finder when an element is selected?\n   * - ``base``\n     - ``None``\n     - The folderish object used as root of the finder when opening. ``None``\n       means the Plone site. **Note that** by nature, this attribute cannot be\n       set statically, in a ``FinderSelectWidget`` personal subclass for example\n       as other can be. See the example in simple customizations on how to\n       change the widget ``base`` attribute dynamically from the form class\n       code.\n\n\nDeveloper Howto\n===============\n\nHow to use it in a WYSIWYG editor\n---------------------------------\n\nThe more easy way is creating a specific view, because you will often need to\noverride the javascript method to select objects, and because each editor has\nits specific negociations with the browser.\n\nSee ``collective.ckeditor`` package as example.\n\n\nUploadding in custom folderish type\n-----------------------------------\n\nIf you want to let the plone finder users upload files in your custom or third\nparty folderish content types, you need to mark these types with the\n``IFinderUploadCapable`` marker interface. As in this self-speaking ZCML\nsample::\n\n  <class class=\"my.content.folderish.MyFolderish\">\n    <implements\n       interface=\"collective.plonefinder.browser.interfaces.IFinderUploadCapable\" />\n  </class>\n\nOut of the box, ``collective.plonefinder`` enables upload in the Plone site\nitself as well as in ``ATFolder`` and ``ATBTreeFolder``.\n\nTodo\n====\n\n- Functional doctests\n\n- i18n support\n\n- Finder improvements:\n\n  - Ajax opening/moving/resizing and all window effects inside the same browser\n    window (in progress, need some js refactoring)\n\n  - improve contextual actions menu (change workflow state, rename, delete,\n    copy, paste ...)\n\n  - add a finder menu action to show/hide the current selection list in right\n    panel\n\n  - remove items from selection list in finder window\n\n- Improve zope3 reference widget properties\n\n  - add option to hide/show or just mark selected items in finder browsing\n    results (just need to store the finder blacklist in session)\n\n  - add option to set a specific catalog query stored in session\n\n  - add option to change finder catalog.\n\n- New zope3 widget to store urls (for a string field)\n\n- Archetypes support:\n\n  - ATPloneFinderWidget for Reference fields (not a big challenge, just need to\n    use ATReferenceBrowserWidget as base to start the work)\n\n  - ATLinkWidget to store internal links\n\n- Dexterity support (z3c.form)\n\n- Supplement ``types`` and ``imagetypes`` attributes with others uning\n  interfaces for a better flexibility.\n\n- Provide as parameter a factory that provides the results in the desired\n  format. i.e You need a particular attribute of the target or some computed\n  value.\n\n- Componentize the code for more flexibility.\n\nAny contribution is welcome, contact support@ingeniweb.com.\n\nAuthors\n=======\n\nJean-mat Grimaldi - Alter Way Solutions\n\nCode repository\n===============\n\nhttps://github.com/collective/collective.plonefinder\n\nSupport\n=======\n\n- Questions and comments to support@ingeniweb.com\n\nChangelog\n=========\n\n1.3.1 (2018-03-26)\n------------------\n\n- Fix thumb sizes choice: full size image is now correctly set.\n  [bsuttor]\n\n\n1.3.0 (2017-10-02)\n------------------\n\n- Use plone.api instead of IDirectoryFactory to create Folder, it's prevent dexterity creation Folder error.\n  DEPENDENCY ADDED: plone.api.\n  [bsuttor]\n\n\n1.2.3 (2017-01-10)\n------------------\n\n- ``FinderImageWidget`` : enable quickupload\n  [gotcha]\n\n\n1.2.2 (2016-08-15)\n------------------\n\n- ``FinderImageWidget`` : store selector instead of absolute_url\n  [gotcha]\n\n\n1.2.1 (2016-07-25)\n------------------\n\n- Add missing semicolons to avoid JS issue when ``portal_javascript`` is in prod mode.\n  [gotcha]\n\n- Add check for when value is None (when you remove image after adding it).\n  [spereverde]\n\n- Some refactoring for cleaner HTML in ``FinderImageWidget``. \n  [gotcha]\n\n\n1.2.0 (2016-07-08)\n------------------\n\n- Add formlib ``FinderImageWidget``; use with ::\n\n    \n    # in interface class\n    picture = schema.TextLine(title=_(u'Picture'),\n                               description=_(u'Optional picture'),\n                               required=False)\n    # in form class\n    form_fields['picture'].custom_widget = FinderImageWidget\n\n  [gotcha]\n\n1.1.4 (2016-03-30)\n------------------\n\n- Fix bug in finder's query form serialization with special characters.\n  [pgrunewald]\n\n\n1.1.3 (2016-03-24)\n------------------\n\n- Added option ``openuploadwidgetdefault`` to be able to specify if we want\n  the upload widget to be opened by default without having to click on the\n  'Files quick upload' button.\n  [gbastien]\n\n\n1.1.2 (2016-03-15)\n------------------\n\n- Added option ``showsearchbox`` to be able to display/hide the search box easily.\n  [gbastien]\n\n\n1.1.1 (2016-02-23)\n------------------\n\n- Reapply fixes from 1.0.2 that were lost\n  maybe in the migration to github\n  [gotcha]\n\n\n1.1.0 (2016-02-16)\n------------------\n\n- Use new way to get images. Call ``/@@images/image/preview`` instead of ``/image_preview``.\n  [bsuttor]\n\n- Add implmentation of plone.app.contenttypes.content.Folder by IFinderUploadCapable.\n  [bsuttor]\n\n- basic support for plone.app.contenttypes images\n  [kiorky]\n\n\n1.0.7 (2014-09-15)\n------------------\n\n- Fix: with ckeditor, link to News item does not link to its image anymore.\n  Fix from 1.0.4 was lost in 1.0.5.\n  [gotcha]\n\n\n1.0.6 (2014-03-05)\n------------------\n\n- Fix bad quotted test.\n  [bsuttor]\n\n\n1.0.5 (2014-03-05)\n------------------\n\n* Fix scope container when a object is created. Container is first\n  non portal_factory object.\n  [bsuttor]\n\n* Lots of code simplifications (yet not finished, grep for \"FIXME:\")\n  [glenfant]\n\n* More doc in the README (explain all releavant usages)\n  [glenfant]\n\n* SVN marker in all possible files\n  [glenfant]\n\n* Lots of optims (yet not finished, grep for \"FIXME:\")\n  [glenfant]\n\n* Commented obscure features in the code\n  [glenfant]\n\n* Fix case where ``image`` field is of the type ``reference``\n  [toutpt]\n\n\n1.0.4 (2013-09-09)\n------------------\n* Fix: with ckeditor, link to News item does not link to its image anymore.\n  [gotcha]\n\n\n1.0.3 (2013-06-12)\n------------------\n* Compatibility with Plone 4.3\n  [toutpt]\n\n\n1.0.2 (2011-08-19)\n------------------\n* Always show full site structure in navigation column.\n  [spereverde, yulka, gotcha]\n\n* In breadcrumbs, avoid links to folders where the user does not have View permission.\n  [spereverde, yulka, gotcha]\n\n\n1.0.1\n-----\n\n* CSS IE7 fixes\n  macadames - 2010/09/22\n\n* finder.pt : template fix\n  doctype was missing\n  macadames - 2010/09/22\n\n* finder.pt : Remove lang attribute on html tag- we don't need it\n  and it's difficult to maintain between Plone3 / Plone4\n  macadames - 2010/09/26\n\n1.0.0\n-----\n\n* use Plone Quick Upload as upload tool - new dependency to\n  collective.quickupload added\n  macadames - 2010/09\n\n1.0.0-b2\n--------\n\n* fix unauthorized error in edit forms using FinderSelectWidget when user\n  don't have the permission to access some referenced contents. In this case\n  object is not removed from list, but a message is displayed in place of object title :\n  '%s : %s ' %(_(u\"You don't have permission to access this object\"),uid)\n\n* added : close window when self.multiselect = False or self.forcecloseonsinsert = False\n\n* fix selectItem when there were quotes in titles\n\n* added a base attribute to reference widget used for finder opening folder.\n\n* use unicode chars for up and down arrows in reference widget.\n\n* allow change imagetypes using request and referencewidget\n\n* added a generated css for plone3 content-types icons\n\n* added new property self.filestypes in browser\n\n* added mime-type icons for filestypes in finder\n\n* FinderSelectWidget : do not raise an error anymore when object is not found\n  but just returns a message in place of title (object with uid doesn't exist)\n\n* Fix regression on allowupload (was never allowed)\n  macadames - 2010/07/21\n\n* Fix enable/disable browsing using request or self.browse = False\n  macadames - 2010/07/22\n\n* no search on another path, when browsing is disable\n  macadames - 2010/07/22\n\n* title fields added to multiple upload using jquery.uploadify\n  macadames - 2010/07/24\n\n* authentication for flash upload is done using cookie\n  when possible (same method as collective.uploadify)\n  otherwise using a ticket (method PloneFlashUpload)\n  macadames - 2010/07/28\n\n* use standard archetypes method \"invokeFactory\", to\n  create new objects using uploaded files, to respect\n  the complete plone createObject process.\n  macadames - 2010/07/28\n\n* added new mediaupload key in request to set content-type\n  for upload (very useful with jquery.uploadify)\n  macadames - 2010/07/28\n\n* improve jquery.uploadify process with errors handling\n  macadames - 2010/07/29\n\n* added new css class required to show icons on plone4\n  'icons-on'\n  macadames - 2010/07/31\n\n* fix upload buttons styles on plone4\n  macadames - 2010/07/31\n\n* fix some css styles on Plone3 or Plone4 + classic Theme\n  macadames - 2010/07/31\n\n* design improvements\n  macadames - 2010/07/31\n\n* french translation in progress\n  macadames - 2010/07/31\n\n* use InavigationRoot for the finder root no more IPloneSiteRot\n  macadames - 2010/08/01\n\n* design improvements\n  blue is the new color\n  macadames - 2010/08/01\n\n* added new view attributes root and rootpath\n  used to change the browser root\n  macadames - 2010/08/02\n\n* Added a real left navigation tree\n  macadames - 2010/08/02\n\n* replace persistent objects in attribute views\n  by a data dict ie self.data['root'] in place of self.root\n  macadames - 2010/08/04\n\n* use topic queryCatalog when the scope is a topic\n  macadames - 2010/08/04\n\n* added support for z3c.autoinclude\n  macadames - 2010/08/20\n\n1.0.0-b\n-------\n\n* images sizes displayed in finder are taken from portal properties\n  imaging properties when exists\n\n* choose image sizes : contextual menus added\n\n* many IE fixes and cosmetic changes\n\n* plone4 icons style used also under plone3\n\n* reference objects widget added for zope3 forms (can be used in portlets)\n\n1.0.0-a\n-------\n\n* Initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.alterway.fr", "keywords": "Zope Plone Medias Finder", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.plonefinder", "package_url": "https://pypi.org/project/collective.plonefinder/", "platform": "", "project_url": "https://pypi.org/project/collective.plonefinder/", "project_urls": {"Homepage": "http://www.alterway.fr"}, "release_url": "https://pypi.org/project/collective.plonefinder/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "A finder to search/select portal objects for Plone", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Ajax popup to browse and select plone contents, suitable to any\n<tt>plone.formilb</tt> form (portlets, control panels, \u2026)</p>\n<p>This code is an extraction with some refactoring, of PloneArticle explorer used\nfor referencables proxies.</p>\n<p>The intent is to make it usable in various situations:</p>\n<ul>\n<li>to store selected contents in <tt>plone.formlib</tt> based Plone forms (portlet or\ncontrol panel forms as example)</li>\n<li>for <tt>collective.ckeditor</tt> or any possible wysiwyg editor for referencing\nimages or contents inside a rich text field, it\u2019s also possible to upload\nfiles / images and create folders with this product (dependency to\n<tt>collective.quickupload</tt>)</li>\n<li>for referencable fields inside AT edit forms (future)</li>\n<li>for links fields (as remoteUrl in ATLink) to reference internal links (future)</li>\n</ul>\n<p>This work has been started at Ingeniweb in 2007 by Christophe Bosse (for the\njQuery code) and Jean-Mat Grimaldi (everything else) for PloneArticle product.</p>\n<div>\n<p>Plone add-ons developers only</p>\n<p>This is a component for Plone add-ons developers. Do not expect to add\nanything more in yous site if you install only this component to your Zope\ninstance.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Plone (tested with Plone 3.3.5 and Plone 4)</li>\n<li>collective.quickupload</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Nothing to do if you have installed <tt>collective.ckeditor</tt> (Plone 4 only\ntoday)</li>\n<li>Otherwise install it as any Zope package using buildout :<ul>\n<li>add <tt>collective.plonefinder</tt> in your <tt>eggs</tt> section</li>\n<li>add <tt>collective.plonefinder</tt> in your <tt>zcml</tt> section of the\n<tt>plone.recipe.zope2instance</tt> part definition if on Plone 3.0 or 3.1</li>\n<li>Run <tt>bin/buildout</tt></li>\n</ul>\n</li>\n</ul>\n<p>Nothing else.</p>\n</div>\n<div id=\"how-to-use-it-as-a-reference-widget-in-formlib-forms\">\n<h2>How to use it as a reference widget in formlib forms</h2>\n<div id=\"basic-usage\">\n<h3>Basic usage</h3>\n<p>A reference widget for zope3 forms (zope.app.form) is provided with this product.</p>\n<p>The widget can be used to store objects references in a sequence field.</p>\n<p>Example of use in a portlet form for a Tuple field named target_contents:</p>\n<pre>from collective.plonefinder.widgets.referencewidget import FinderSelectWidget\n\ntarget_contents = schema.Tuple(title=u\"Browse for contents\",\n                               description=(u\"Choose contents to display \"\n                                            u\"with a plone finder window.\"),\n                               default=()\n                               )\n\nform_fields['target_contents'].custom_widget = FinderSelectWidget\n</pre>\n</div>\n<div id=\"tweaking-some-properties\">\n<h3>Tweaking some properties</h3>\n<p>You can use the <tt>FinderSelectWidget</tt> with some properties set using the update\nmethod in your <tt>AddForm</tt> or <tt>EditForm</tt>. In example for a portlet <tt>AddForm</tt>:</p>\n<pre>class AddForm(base.AddForm):\n    \"\"\"Portlet add form.\n    \"\"\"\n    form_fields = form.Fields(IReferencesPortlet)\n    form_fields['targets'].custom_widget = FinderSelectWidget\n    label = u\"Add References Portlet\"\n\n    def update(self):\n        super(AddForm, self).update()\n        self.widgets['targets'].typeview = 'image'\n        self.widgets['targets'].forcecloseoninsert = 1\n\n    def create(self, data):\n        return Assignment(**data)\n</pre>\n<p>If you want, you can also pass a context as base for the widget, to get the\ncurrent or parent folder open in the finder. Example in a portlet using the\n<tt>update</tt> method:</p>\n<pre>assignment = aq_parent(aq_inner(self.context))\nself.widgets['targets'].base = aq_parent(aq_inner(assignment))\n</pre>\n<p>There are also two customized widgets for files and images. Look at the code to\ncreate your own specific widget.</p>\n<p>Example of code for files referencing with files upload support:</p>\n<pre>from collective.plonefinder.widgets.referencewidget import FinderSelectFileWidget\n\ntarget_files = schema.Tuple(title=u\"Browse for images\",\n                            description=(u\"Choose files to display \"\n                                         u\"with a plone finder window. \"\n                                         u\"You can upload new files.\"),\n                            default=()\n                            )\n\nform_fields['target_files'].custom_widget = FinderSelectFileWidget\n</pre>\n<p>Example of code for images referencing with images upload support:</p>\n<pre>from collective.plonefinder.widgets.referencewidget import FinderSelectImageWidget\n\ntarget_images = schema.Tuple (title=u\"Browse for images\",\n                              description=(u\"Choose images to display \"\n                                           u\"with a plone finder window. \"\n                                           u\"You can select different image sizes. \"\n                                           u\"You can upload new images.\"),\n                              default= ()\n                              )\n\nform_fields['target_images'].custom_widget = FinderSelectImageWidget\n</pre>\n<p>Note that in this last case the data store image uid and image thumb size like\nthis:</p>\n<pre>'%s/%s' % (image.UID(), thumb_size_extension)\n</pre>\n<p><tt>thumb_size_extension</tt> could be <tt>'image_thumb'</tt> or <tt>'image_preview'</tt> \u2026</p>\n<p>So use something like this to display a referenced image:</p>\n<pre>uid, variant = data.split('/')\n'&lt;img src=\"%s/resolveuid/%s/%s\" /&gt;' % (portal_url, uid, variant)\n</pre>\n</div>\n<div id=\"full-list-of-customization-attributes\">\n<h3>Full list of customization attributes</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Attribute</th>\n<th>Default value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>finderlabel</tt></td>\n<td><tt>_(u'Browse for contents')</tt></td>\n<td>Customize the title of the Browser window. i.e. <tt>\"Find the pictures\"</tt></td>\n</tr>\n<tr><td><tt>moveuplabel</tt></td>\n<td><tt>_(u'Move up')</tt></td>\n<td>Label associated with the up arrow widget that raises the order of the\nreference. i.e. <tt>\"Increase priority\"</tt>.</td>\n</tr>\n<tr><td><tt>movedownlabel</tt></td>\n<td><tt>_(u'Move down')</tt></td>\n<td>Label associated with the down arrow widget that lowers the order of the\nreference. i.e. <tt>\"Decrease priority\"</tt>.</td>\n</tr>\n<tr><td><tt>deleteentrylabel</tt></td>\n<td><tt>_(u'Remove item')</tt></td>\n<td>Label associated with the \u201cRemove from list\u201d widget. i.e. <tt>\"Remove this\nvideo\"</tt>.</td>\n</tr>\n<tr><td><tt>types</tt></td>\n<td><tt>() # All types</tt></td>\n<td>List of selectable portal types to show in the selection\npanel. i.e. <tt>['Document']</tt></td>\n</tr>\n<tr><td><tt>typeview</tt></td>\n<td><tt>'file'</tt></td>\n<td>Possible values are <tt>'file'</tt>, <tt>'image'</tt> and <tt>'selection'</tt>. Tuning\non selection panel layout.</td>\n</tr>\n<tr><td><tt>imagetypes</tt></td>\n<td><tt>('Image', 'News Item')</tt></td>\n<td>Sequence of portal types that can handle images (see <a href=\"#todo\" rel=\"nofollow\">Todo</a>)</td>\n</tr>\n<tr><td><tt>selectiontype</tt></td>\n<td><tt>'uid'</tt></td>\n<td>Selected items are returned to the application (form) as UIDs. Other\npossible value is <tt>'url'</tt>.</td>\n</tr>\n<tr><td><tt>showsearchbox</tt></td>\n<td><tt>True</tt></td>\n<td>Do we show the searchbox?</td>\n</tr>\n<tr><td><tt>allowupload</tt></td>\n<td><tt>False</tt></td>\n<td>Do we enable upload files through our widget if the user has appropriate\npermission? See <a href=\"#uploadding-in-custom-folderish-type\" rel=\"nofollow\">Uploadding in custom folderish type</a></td>\n</tr>\n<tr><td><tt>openuploadwidgetdefault</tt></td>\n<td><tt>False</tt></td>\n<td>Do we display the upload widget by default?</td>\n</tr>\n<tr><td><tt>allowaddfolder</tt></td>\n<td><tt>False</tt></td>\n<td>Do we enable adding new folders through our widget if the user has\nappropriate permission?</td>\n</tr>\n<tr><td><tt>allowimagesizeselection</tt></td>\n<td><tt>False</tt></td>\n<td>If the image has multiple sizes, do we enable the selection of a\nparticular size? (See the above note)</td>\n</tr>\n<tr><td><tt>forcecloseoninsert</tt></td>\n<td><tt>False</tt></td>\n<td>Do we close the finder when an element is selected?</td>\n</tr>\n<tr><td><tt>base</tt></td>\n<td><tt>None</tt></td>\n<td>The folderish object used as root of the finder when opening. <tt>None</tt>\nmeans the Plone site. <strong>Note that</strong> by nature, this attribute cannot be\nset statically, in a <tt>FinderSelectWidget</tt> personal subclass for example\nas other can be. See the example in simple customizations on how to\nchange the widget <tt>base</tt> attribute dynamically from the form class\ncode.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"developer-howto\">\n<h2>Developer Howto</h2>\n<div id=\"how-to-use-it-in-a-wysiwyg-editor\">\n<h3>How to use it in a WYSIWYG editor</h3>\n<p>The more easy way is creating a specific view, because you will often need to\noverride the javascript method to select objects, and because each editor has\nits specific negociations with the browser.</p>\n<p>See <tt>collective.ckeditor</tt> package as example.</p>\n</div>\n<div id=\"uploadding-in-custom-folderish-type\">\n<h3>Uploadding in custom folderish type</h3>\n<p>If you want to let the plone finder users upload files in your custom or third\nparty folderish content types, you need to mark these types with the\n<tt>IFinderUploadCapable</tt> marker interface. As in this self-speaking ZCML\nsample:</p>\n<pre>&lt;class class=\"my.content.folderish.MyFolderish\"&gt;\n  &lt;implements\n     interface=\"collective.plonefinder.browser.interfaces.IFinderUploadCapable\" /&gt;\n&lt;/class&gt;\n</pre>\n<p>Out of the box, <tt>collective.plonefinder</tt> enables upload in the Plone site\nitself as well as in <tt>ATFolder</tt> and <tt>ATBTreeFolder</tt>.</p>\n</div>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Functional doctests</li>\n<li>i18n support</li>\n<li>Finder improvements:<ul>\n<li>Ajax opening/moving/resizing and all window effects inside the same browser\nwindow (in progress, need some js refactoring)</li>\n<li>improve contextual actions menu (change workflow state, rename, delete,\ncopy, paste \u2026)</li>\n<li>add a finder menu action to show/hide the current selection list in right\npanel</li>\n<li>remove items from selection list in finder window</li>\n</ul>\n</li>\n<li>Improve zope3 reference widget properties<ul>\n<li>add option to hide/show or just mark selected items in finder browsing\nresults (just need to store the finder blacklist in session)</li>\n<li>add option to set a specific catalog query stored in session</li>\n<li>add option to change finder catalog.</li>\n</ul>\n</li>\n<li>New zope3 widget to store urls (for a string field)</li>\n<li>Archetypes support:<ul>\n<li>ATPloneFinderWidget for Reference fields (not a big challenge, just need to\nuse ATReferenceBrowserWidget as base to start the work)</li>\n<li>ATLinkWidget to store internal links</li>\n</ul>\n</li>\n<li>Dexterity support (z3c.form)</li>\n<li>Supplement <tt>types</tt> and <tt>imagetypes</tt> attributes with others uning\ninterfaces for a better flexibility.</li>\n<li>Provide as parameter a factory that provides the results in the desired\nformat. i.e You need a particular attribute of the target or some computed\nvalue.</li>\n<li>Componentize the code for more flexibility.</li>\n</ul>\n<p>Any contribution is welcome, contact <a href=\"mailto:support%40ingeniweb.com\">support<span>@</span>ingeniweb<span>.</span>com</a>.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Jean-mat Grimaldi - Alter Way Solutions</p>\n</div>\n<div id=\"code-repository\">\n<h2>Code repository</h2>\n<p><a href=\"https://github.com/collective/collective.plonefinder\" rel=\"nofollow\">https://github.com/collective/collective.plonefinder</a></p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<ul>\n<li>Questions and comments to <a href=\"mailto:support%40ingeniweb.com\">support<span>@</span>ingeniweb<span>.</span>com</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.3.1 (2018-03-26)</h3>\n<ul>\n<li>Fix thumb sizes choice: full size image is now correctly set.\n[bsuttor]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.3.0 (2017-10-02)</h3>\n<ul>\n<li>Use plone.api instead of IDirectoryFactory to create Folder, it\u2019s prevent dexterity creation Folder error.\nDEPENDENCY ADDED: plone.api.\n[bsuttor]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.2.3 (2017-01-10)</h3>\n<ul>\n<li><tt>FinderImageWidget</tt> : enable quickupload\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.2.2 (2016-08-15)</h3>\n<ul>\n<li><tt>FinderImageWidget</tt> : store selector instead of absolute_url\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.2.1 (2016-07-25)</h3>\n<ul>\n<li>Add missing semicolons to avoid JS issue when <tt>portal_javascript</tt> is in prod mode.\n[gotcha]</li>\n<li>Add check for when value is None (when you remove image after adding it).\n[spereverde]</li>\n<li>Some refactoring for cleaner HTML in <tt>FinderImageWidget</tt>.\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.2.0 (2016-07-08)</h3>\n<ul>\n<li><p>Add formlib <tt>FinderImageWidget</tt>; use with</p>\n<pre># in interface class\npicture = schema.TextLine(title=_(u'Picture'),\n                           description=_(u'Optional picture'),\n                           required=False)\n# in form class\nform_fields['picture'].custom_widget = FinderImageWidget\n</pre>\n<p>[gotcha]</p>\n</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.1.4 (2016-03-30)</h3>\n<ul>\n<li>Fix bug in finder\u2019s query form serialization with special characters.\n[pgrunewald]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.1.3 (2016-03-24)</h3>\n<ul>\n<li>Added option <tt>openuploadwidgetdefault</tt> to be able to specify if we want\nthe upload widget to be opened by default without having to click on the\n\u2018Files quick upload\u2019 button.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.1.2 (2016-03-15)</h3>\n<ul>\n<li>Added option <tt>showsearchbox</tt> to be able to display/hide the search box easily.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.1.1 (2016-02-23)</h3>\n<ul>\n<li>Reapply fixes from 1.0.2 that were lost\nmaybe in the migration to github\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.1.0 (2016-02-16)</h3>\n<ul>\n<li>Use new way to get images. Call <tt><span class=\"pre\">/@@images/image/preview</span></tt> instead of <tt>/image_preview</tt>.\n[bsuttor]</li>\n<li>Add implmentation of plone.app.contenttypes.content.Folder by IFinderUploadCapable.\n[bsuttor]</li>\n<li>basic support for plone.app.contenttypes images\n[kiorky]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.0.7 (2014-09-15)</h3>\n<ul>\n<li>Fix: with ckeditor, link to News item does not link to its image anymore.\nFix from 1.0.4 was lost in 1.0.5.\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.0.6 (2014-03-05)</h3>\n<ul>\n<li>Fix bad quotted test.\n[bsuttor]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.0.5 (2014-03-05)</h3>\n<ul>\n<li>Fix scope container when a object is created. Container is first\nnon portal_factory object.\n[bsuttor]</li>\n<li>Lots of code simplifications (yet not finished, grep for \u201cFIXME:\u201d)\n[glenfant]</li>\n<li>More doc in the README (explain all releavant usages)\n[glenfant]</li>\n<li>SVN marker in all possible files\n[glenfant]</li>\n<li>Lots of optims (yet not finished, grep for \u201cFIXME:\u201d)\n[glenfant]</li>\n<li>Commented obscure features in the code\n[glenfant]</li>\n<li>Fix case where <tt>image</tt> field is of the type <tt>reference</tt>\n[toutpt]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.0.4 (2013-09-09)</h3>\n<ul>\n<li>Fix: with ckeditor, link to News item does not link to its image anymore.\n[gotcha]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.0.3 (2013-06-12)</h3>\n<ul>\n<li>Compatibility with Plone 4.3\n[toutpt]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.0.2 (2011-08-19)</h3>\n<ul>\n<li>Always show full site structure in navigation column.\n[spereverde, yulka, gotcha]</li>\n<li>In breadcrumbs, avoid links to folders where the user does not have View permission.\n[spereverde, yulka, gotcha]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.0.1</h3>\n<ul>\n<li>CSS IE7 fixes\nmacadames - 2010/09/22</li>\n<li>finder.pt : template fix\ndoctype was missing\nmacadames - 2010/09/22</li>\n<li>finder.pt : Remove lang attribute on html tag- we don\u2019t need it\nand it\u2019s difficult to maintain between Plone3 / Plone4\nmacadames - 2010/09/26</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.0.0</h3>\n<ul>\n<li>use Plone Quick Upload as upload tool - new dependency to\ncollective.quickupload added\nmacadames - 2010/09</li>\n</ul>\n</div>\n<div id=\"b2\">\n<h3>1.0.0-b2</h3>\n<ul>\n<li>fix unauthorized error in edit forms using FinderSelectWidget when user\ndon\u2019t have the permission to access some referenced contents. In this case\nobject is not removed from list, but a message is displayed in place of object title :\n\u2018%s : %s \u2018 %(_(u\u201dYou don\u2019t have permission to access this object\u201d),uid)</li>\n<li>added : close window when self.multiselect = False or self.forcecloseonsinsert = False</li>\n<li>fix selectItem when there were quotes in titles</li>\n<li>added a base attribute to reference widget used for finder opening folder.</li>\n<li>use unicode chars for up and down arrows in reference widget.</li>\n<li>allow change imagetypes using request and referencewidget</li>\n<li>added a generated css for plone3 content-types icons</li>\n<li>added new property self.filestypes in browser</li>\n<li>added mime-type icons for filestypes in finder</li>\n<li>FinderSelectWidget : do not raise an error anymore when object is not found\nbut just returns a message in place of title (object with uid doesn\u2019t exist)</li>\n<li>Fix regression on allowupload (was never allowed)\nmacadames - 2010/07/21</li>\n<li>Fix enable/disable browsing using request or self.browse = False\nmacadames - 2010/07/22</li>\n<li>no search on another path, when browsing is disable\nmacadames - 2010/07/22</li>\n<li>title fields added to multiple upload using jquery.uploadify\nmacadames - 2010/07/24</li>\n<li>authentication for flash upload is done using cookie\nwhen possible (same method as collective.uploadify)\notherwise using a ticket (method PloneFlashUpload)\nmacadames - 2010/07/28</li>\n<li>use standard archetypes method \u201cinvokeFactory\u201d, to\ncreate new objects using uploaded files, to respect\nthe complete plone createObject process.\nmacadames - 2010/07/28</li>\n<li>added new mediaupload key in request to set content-type\nfor upload (very useful with jquery.uploadify)\nmacadames - 2010/07/28</li>\n<li>improve jquery.uploadify process with errors handling\nmacadames - 2010/07/29</li>\n<li>added new css class required to show icons on plone4\n\u2018icons-on\u2019\nmacadames - 2010/07/31</li>\n<li>fix upload buttons styles on plone4\nmacadames - 2010/07/31</li>\n<li>fix some css styles on Plone3 or Plone4 + classic Theme\nmacadames - 2010/07/31</li>\n<li>design improvements\nmacadames - 2010/07/31</li>\n<li>french translation in progress\nmacadames - 2010/07/31</li>\n<li>use InavigationRoot for the finder root no more IPloneSiteRot\nmacadames - 2010/08/01</li>\n<li>design improvements\nblue is the new color\nmacadames - 2010/08/01</li>\n<li>added new view attributes root and rootpath\nused to change the browser root\nmacadames - 2010/08/02</li>\n<li>Added a real left navigation tree\nmacadames - 2010/08/02</li>\n<li>replace persistent objects in attribute views\nby a data dict ie self.data[\u2018root\u2019] in place of self.root\nmacadames - 2010/08/04</li>\n<li>use topic queryCatalog when the scope is a topic\nmacadames - 2010/08/04</li>\n<li>added support for z3c.autoinclude\nmacadames - 2010/08/20</li>\n</ul>\n</div>\n<div id=\"b\">\n<h3>1.0.0-b</h3>\n<ul>\n<li>images sizes displayed in finder are taken from portal properties\nimaging properties when exists</li>\n<li>choose image sizes : contextual menus added</li>\n<li>many IE fixes and cosmetic changes</li>\n<li>plone4 icons style used also under plone3</li>\n<li>reference objects widget added for zope3 forms (can be used in portlets)</li>\n</ul>\n</div>\n<div id=\"a\">\n<h3>1.0.0-a</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3706064, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "97653d4a9f58660b1f549bd3f37f0ec1", "sha256": "6dfa9ca1228a8380907314ffb69e5b845ec0328c91f4a5ea59d0c358c6570f36"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0-py2.6.egg", "has_sig": false, "md5_digest": "97653d4a9f58660b1f549bd3f37f0ec1", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 112551, "upload_time": "2010-09-11T18:54:08", "upload_time_iso_8601": "2010-09-11T18:54:08.502460Z", "url": "https://files.pythonhosted.org/packages/76/c5/132441f99ff6a79a89f294188264e2b4afb50dcffd0d21c26a87fb4d49be/collective.plonefinder-1.0.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9beb70c0b0aef765c6269560a5ce2108", "sha256": "baf7256d24494335799ea5523568dcfbd236d923934e11dd8b83c431ccc9d784"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0.zip", "has_sig": false, "md5_digest": "9beb70c0b0aef765c6269560a5ce2108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111298, "upload_time": "2010-09-11T18:54:06", "upload_time_iso_8601": "2010-09-11T18:54:06.100696Z", "url": "https://files.pythonhosted.org/packages/92/be/1ae408fbf793e687b350c3fc9dd1b4515bd456b9c88729f025b68661c51e/collective.plonefinder-1.0.0.zip", "yanked": false}], "1.0.0a": [{"comment_text": "", "digests": {"md5": "23135d300dfdc85e63f8ba99ed65cffd", "sha256": "8246f0b58919e88d944967cf8045d8afe182743e4ce505c2aff3fe62f3311445"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0a-py2.6.egg", "has_sig": false, "md5_digest": "23135d300dfdc85e63f8ba99ed65cffd", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 132376, "upload_time": "2010-04-26T10:26:54", "upload_time_iso_8601": "2010-04-26T10:26:54.282146Z", "url": "https://files.pythonhosted.org/packages/5c/9b/a44f67225846bd937fe252c85640f4589bd4f87e134956083084b7856c2f/collective.plonefinder-1.0.0a-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cf4744101ee476cc4954421d7aeef25", "sha256": "77ccfec77be9e1882e92358ee53454d9344147254e8fc929b5924b340543406e"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0a.zip", "has_sig": false, "md5_digest": "4cf4744101ee476cc4954421d7aeef25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128819, "upload_time": "2010-04-26T10:26:52", "upload_time_iso_8601": "2010-04-26T10:26:52.641383Z", "url": "https://files.pythonhosted.org/packages/5a/74/29305ef9df41e72456b5936b36d340201ede78c95c8abb264d250e7f0225/collective.plonefinder-1.0.0a.zip", "yanked": false}], "1.0.0b": [{"comment_text": "", "digests": {"md5": "25bdfb20296f7c1ca3bd58124fb7a0eb", "sha256": "6710f76852a8d13bfb8cd5609e2f71672e6625fdbcc534d5f73df5c0f521a757"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0b-py2.6.egg", "has_sig": false, "md5_digest": "25bdfb20296f7c1ca3bd58124fb7a0eb", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 131751, "upload_time": "2010-05-28T15:58:59", "upload_time_iso_8601": "2010-05-28T15:58:59.055088Z", "url": "https://files.pythonhosted.org/packages/dc/f7/a980883d42cb76db0e325dc616ffbbec10016865b1ce8ced046cb24ca0a0/collective.plonefinder-1.0.0b-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "acb3bf64da3e3b660384070aa1d6ee09", "sha256": "697f48f8c2da047ded28cf7e11093f665e5c4e012bbaca5cac0e5e5fc92bc0f4"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0b.zip", "has_sig": false, "md5_digest": "acb3bf64da3e3b660384070aa1d6ee09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125577, "upload_time": "2010-05-28T15:58:57", "upload_time_iso_8601": "2010-05-28T15:58:57.450018Z", "url": "https://files.pythonhosted.org/packages/fb/6e/8aba3afb868f4deb33e8f5952e36ff975452a9339e1b104496840bb7c7ee/collective.plonefinder-1.0.0b.zip", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "21c032cbbef894ed1aa816ad229fe54c", "sha256": "673bd168f9d5357b1b012e4dde35d80c1977b0ddcb3ab92bc7a98a9c530dbfc0"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0b2-py2.4.egg", "has_sig": false, "md5_digest": "21c032cbbef894ed1aa816ad229fe54c", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 157508, "upload_time": "2010-08-20T15:21:16", "upload_time_iso_8601": "2010-08-20T15:21:16.872489Z", "url": "https://files.pythonhosted.org/packages/c9/fc/d0b054693e961e4d05a1a8d6bfacb9728b096ddf59a4db42ef1b0eaf354c/collective.plonefinder-1.0.0b2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "41890c9775cbc62314117d3be17e4cb9", "sha256": "c480b77000e56a5eb8e24bf75a9206cf7b7ec14b45cd2d785452fcc194c0c710"}, "downloads": -1, "filename": "collective.plonefinder-1.0.0b2.zip", "has_sig": false, "md5_digest": "41890c9775cbc62314117d3be17e4cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150045, "upload_time": "2010-08-20T15:21:12", "upload_time_iso_8601": "2010-08-20T15:21:12.228623Z", "url": "https://files.pythonhosted.org/packages/bb/c2/d64ed31511c50395381e8e3db8ddac834b3104db74657004c906cb5d2d35/collective.plonefinder-1.0.0b2.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7aee317c7d8c5eda1b1982b684bdf05d", "sha256": "de041b9bd56c887c8e877b9c27e1ffd890fb7448ec1f6d230af45b7d66eb7f81"}, "downloads": -1, "filename": "collective.plonefinder-1.0.1-py2.6.egg", "has_sig": false, "md5_digest": "7aee317c7d8c5eda1b1982b684bdf05d", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 112844, "upload_time": "2010-09-26T17:26:02", "upload_time_iso_8601": "2010-09-26T17:26:02.696288Z", "url": "https://files.pythonhosted.org/packages/96/ed/26d1015a20254f53db45b9f5a0138094732c1e73d16d047edcd35da925a8/collective.plonefinder-1.0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8036f59170d1f889ff5236ce684d5659", "sha256": "0c534385fd7d6770070b40df4a464ef8fcd4f6eb31a492e9e6adc27916b22d7b"}, "downloads": -1, "filename": "collective.plonefinder-1.0.1.zip", "has_sig": false, "md5_digest": "8036f59170d1f889ff5236ce684d5659", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111813, "upload_time": "2010-09-26T17:26:01", "upload_time_iso_8601": "2010-09-26T17:26:01.017127Z", "url": "https://files.pythonhosted.org/packages/d2/a1/df0e8ca495bd71e22a7398c0a93689ca535ca2786ae1c3818ae3488faeb8/collective.plonefinder-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "243b2080e40541d9e9c2dff79cfc059b", "sha256": "eb9af15be061ca36ca8f958f7d8914ef6c55f0ed1ff5209bd65b998f7da0f946"}, "downloads": -1, "filename": "collective.plonefinder-1.0.2.tar.gz", "has_sig": false, "md5_digest": "243b2080e40541d9e9c2dff79cfc059b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82951, "upload_time": "2011-08-19T15:55:13", "upload_time_iso_8601": "2011-08-19T15:55:13.731889Z", "url": "https://files.pythonhosted.org/packages/e9/e3/bfcebc110e6b8f2414a7af756b422bc1eeb805f5e00b7b823003a36ada50/collective.plonefinder-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "250039d61d7987278ee8f9f554dfea75", "sha256": "21edad1f5440c20e044a866ca716f36a962c08a0520799bbb8479b367ac88a80"}, "downloads": -1, "filename": "collective.plonefinder-1.0.3.zip", "has_sig": false, "md5_digest": "250039d61d7987278ee8f9f554dfea75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110222, "upload_time": "2013-06-12T10:37:10", "upload_time_iso_8601": "2013-06-12T10:37:10.407542Z", "url": "https://files.pythonhosted.org/packages/4b/d6/808d30df0b874339ec9878ff925c3416cd8b248b4cf4812dab382895e546/collective.plonefinder-1.0.3.zip", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "9c1abc2b9296dbc5b7d252f72bdc9fe4", "sha256": "541b8c621644092c174df699af73b31588f16cfbebacd0b028010e10663049ea"}, "downloads": -1, "filename": "collective.plonefinder-1.0.4.zip", "has_sig": false, "md5_digest": "9c1abc2b9296dbc5b7d252f72bdc9fe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110342, "upload_time": "2013-09-09T13:33:28", "upload_time_iso_8601": "2013-09-09T13:33:28.890947Z", "url": "https://files.pythonhosted.org/packages/ed/fc/14e5264d5a66e1db1d1aca6faad97e9bbfbf5e1586b9ad282904f3ad5e90/collective.plonefinder-1.0.4.zip", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "ea20ceec689a2f74ddbf0708884a3773", "sha256": "b77945b5e49d605b1e5d610a5e40a1c7dc1a1f39febe80282b0e7b2d81a89406"}, "downloads": -1, "filename": "collective.plonefinder-1.0.5.zip", "has_sig": false, "md5_digest": "ea20ceec689a2f74ddbf0708884a3773", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119796, "upload_time": "2014-03-05T09:10:27", "upload_time_iso_8601": "2014-03-05T09:10:27.148184Z", "url": "https://files.pythonhosted.org/packages/90/e6/38345efe35ce3a089e6b61c2c3d9664b22241e53e6f345871d26b7eed916/collective.plonefinder-1.0.5.zip", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "64302485d6a2d3e048a6a78ffdcf17c2", "sha256": "ca4487c7d470c405324773a215cbae8dd62f99904ddd32c26504f5f5f11d9d7d"}, "downloads": -1, "filename": "collective.plonefinder-1.0.6.zip", "has_sig": false, "md5_digest": "64302485d6a2d3e048a6a78ffdcf17c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119860, "upload_time": "2014-03-05T11:03:45", "upload_time_iso_8601": "2014-03-05T11:03:45.675240Z", "url": "https://files.pythonhosted.org/packages/5e/3c/68baa449fc9678e18b052cf055e8a69ddefce2ba64718a4f2cca867ba559/collective.plonefinder-1.0.6.zip", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "8fb71fb440bc06c91418642b03f366af", "sha256": "1c1cd5894aea56b19a0dd8e06b7486a38c0bc652ad565e7b821188300e07db26"}, "downloads": -1, "filename": "collective.plonefinder-1.0.7.zip", "has_sig": false, "md5_digest": "8fb71fb440bc06c91418642b03f366af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116762, "upload_time": "2014-09-15T10:17:34", "upload_time_iso_8601": "2014-09-15T10:17:34.131684Z", "url": "https://files.pythonhosted.org/packages/9f/9d/31d8187e81a128a1eaf8f473cba2ef07e5c2b181f4766a025fc95aa6f78c/collective.plonefinder-1.0.7.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f5ce2503f832a4b8cc0d0f6128ae8c48", "sha256": "2f2b7514615d5ba34d87eefcee72dc0d88e07d225dd4d51975c70a5417564713"}, "downloads": -1, "filename": "collective.plonefinder-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f5ce2503f832a4b8cc0d0f6128ae8c48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87488, "upload_time": "2016-02-16T07:25:10", "upload_time_iso_8601": "2016-02-16T07:25:10.627229Z", "url": "https://files.pythonhosted.org/packages/ef/c3/92d3e17e9399622cc8f6fbe9e70da7acf299d2ab5b21a6b058d3d7265b52/collective.plonefinder-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ee2a7eea235d01c954cec9f848fca9a1", "sha256": "4a1e68432290561fbecae734b9d49d9d48a675caab5e155ddd4d5ccdcdf8144d"}, "downloads": -1, "filename": "collective.plonefinder-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ee2a7eea235d01c954cec9f848fca9a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89321, "upload_time": "2016-02-23T08:37:11", "upload_time_iso_8601": "2016-02-23T08:37:11.486075Z", "url": "https://files.pythonhosted.org/packages/1e/e0/01424edb06e4e8f7be73500e16142c0af943a3aedc6897173818f1802d56/collective.plonefinder-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "6d6e0c2ae1ed1bdb86caa4eceb75e762", "sha256": "451c466d8b8b68cdc2374452b2929c2cd1aba81516d254ca7b13ce2191b83f31"}, "downloads": -1, "filename": "collective.plonefinder-1.1.2.tar.gz", "has_sig": false, "md5_digest": "6d6e0c2ae1ed1bdb86caa4eceb75e762", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90576, "upload_time": "2016-03-15T14:16:45", "upload_time_iso_8601": "2016-03-15T14:16:45.185658Z", "url": "https://files.pythonhosted.org/packages/9e/a7/fab9cd00350e47c53bf8060cc31ebf5bb9b872987cab8a34efcbb8ac67d8/collective.plonefinder-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "ae6b5fdd78fe54bc19428ad1d6ff5a7b", "sha256": "168f4b3beaaa5f556911c87b5b4cb7dafdb48a0c0f99537502d1346eab6685fc"}, "downloads": -1, "filename": "collective.plonefinder-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ae6b5fdd78fe54bc19428ad1d6ff5a7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91047, "upload_time": "2016-03-24T15:57:06", "upload_time_iso_8601": "2016-03-24T15:57:06.104992Z", "url": "https://files.pythonhosted.org/packages/59/8c/c847fd591361e4c57834f7b9fac685a1f6a853ac2505f54d5510b2c87f86/collective.plonefinder-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "5d711f7bbd4d23664bcdabb7c39f92e0", "sha256": "4962dca3150cca339b694ba7d95cd34dad1b0a741622ed38f78eebcceab84a05"}, "downloads": -1, "filename": "collective.plonefinder-1.1.4.tar.gz", "has_sig": false, "md5_digest": "5d711f7bbd4d23664bcdabb7c39f92e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91287, "upload_time": "2016-03-30T09:04:05", "upload_time_iso_8601": "2016-03-30T09:04:05.482950Z", "url": "https://files.pythonhosted.org/packages/f0/02/0b7c4410473e89688fd5395ecc8059865325a200879b52f80bdfdb0f5d7f/collective.plonefinder-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "41fd3a5b8d907e772d069dd6da3f3621", "sha256": "596cd20cb186937f2148c1ca115de65d2ef648abe0d1318daf63af98995ebe70"}, "downloads": -1, "filename": "collective.plonefinder-1.2.0.tar.gz", "has_sig": false, "md5_digest": "41fd3a5b8d907e772d069dd6da3f3621", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130398, "upload_time": "2016-07-08T14:40:00", "upload_time_iso_8601": "2016-07-08T14:40:00.208375Z", "url": "https://files.pythonhosted.org/packages/4c/9c/14bcf6fa7ff25f0dedf558c559386338c521514f1e1b427ec5dcb21e11d9/collective.plonefinder-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "e7fc81cfcd7c72f95090e4d31f258061", "sha256": "4e0278b7ade5dcb239efec724baff03da3386d5408462a940d6610cf4748e7f5"}, "downloads": -1, "filename": "collective.plonefinder-1.2.1.tar.gz", "has_sig": false, "md5_digest": "e7fc81cfcd7c72f95090e4d31f258061", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130861, "upload_time": "2016-07-25T09:52:10", "upload_time_iso_8601": "2016-07-25T09:52:10.477676Z", "url": "https://files.pythonhosted.org/packages/f0/57/c2d6384524e58a131daf8bd46ccc77ae9ffad117d950891ba44ee06fee5a/collective.plonefinder-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "cf47fa2a18e2157f5fab79ece9b197b0", "sha256": "342c7cccf3b8e854958049e3d6557d46966225acf60ce3dbe132ec081befa0eb"}, "downloads": -1, "filename": "collective.plonefinder-1.2.2.tar.gz", "has_sig": false, "md5_digest": "cf47fa2a18e2157f5fab79ece9b197b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131119, "upload_time": "2016-08-15T11:30:41", "upload_time_iso_8601": "2016-08-15T11:30:41.451581Z", "url": "https://files.pythonhosted.org/packages/52/ed/4e02a9eeba34946e014958bc3f142d308e939ed487836539e6ad2cd194ec/collective.plonefinder-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "253ceca4b67319a779cda455721a2637", "sha256": "fcba553a2567a42c64eb76049b9c762633b81c623523061ca348668cf9e9445b"}, "downloads": -1, "filename": "collective.plonefinder-1.2.3.tar.gz", "has_sig": false, "md5_digest": "253ceca4b67319a779cda455721a2637", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131279, "upload_time": "2017-01-10T11:46:42", "upload_time_iso_8601": "2017-01-10T11:46:42.462206Z", "url": "https://files.pythonhosted.org/packages/ec/95/f746bda40e5a896ed543ac1a9060271d6e57fe3ff65c31f511036c0dca46/collective.plonefinder-1.2.3.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "53ee4fcda82dda911617d20217243bb3", "sha256": "0efecd14c684098c077df513f2919fb28839945ce95280b7e5385e63cd54ac07"}, "downloads": -1, "filename": "collective.plonefinder-1.3.0.tar.gz", "has_sig": false, "md5_digest": "53ee4fcda82dda911617d20217243bb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131370, "upload_time": "2017-10-02T12:10:06", "upload_time_iso_8601": "2017-10-02T12:10:06.551970Z", "url": "https://files.pythonhosted.org/packages/aa/7c/8ea84c899f195a9988b9ad12f0627fb85954d002b2ef3af336fbd20a8f0e/collective.plonefinder-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "7ca622de51cd404114f26702b0cd8a0d", "sha256": "af411816706cf75dff22e4c431875473de25e3aa94e35036bc4cd58740bb6ba9"}, "downloads": -1, "filename": "collective.plonefinder-1.3.1.tar.gz", "has_sig": false, "md5_digest": "7ca622de51cd404114f26702b0cd8a0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131463, "upload_time": "2018-03-26T11:20:30", "upload_time_iso_8601": "2018-03-26T11:20:30.389121Z", "url": "https://files.pythonhosted.org/packages/f8/f1/603276d48d748cc252c7d99e78e70b5b16cf9d638e6a1449226056408e58/collective.plonefinder-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ca622de51cd404114f26702b0cd8a0d", "sha256": "af411816706cf75dff22e4c431875473de25e3aa94e35036bc4cd58740bb6ba9"}, "downloads": -1, "filename": "collective.plonefinder-1.3.1.tar.gz", "has_sig": false, "md5_digest": "7ca622de51cd404114f26702b0cd8a0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131463, "upload_time": "2018-03-26T11:20:30", "upload_time_iso_8601": "2018-03-26T11:20:30.389121Z", "url": "https://files.pythonhosted.org/packages/f8/f1/603276d48d748cc252c7d99e78e70b5b16cf9d638e6a1449226056408e58/collective.plonefinder-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:02 2020"}