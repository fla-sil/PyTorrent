{"info": {"author": "Henning Arvid Ladewig", "author_email": "anne@opentrash.com", "bugtrack_url": null, "classifiers": [], "description": "---- sockData - send other data types via socket ----\n\nThis library can send other data types than just strings with socket.\nYou can normally only send strings with socket.\nBut with this library, you can send all data types that are supported by pickle.\n\nHow to use it:\n\tSending:\n\t\tinstead of '<yourConnectedSocket>.send(<string>.encode())'\n\t\ttype: 'import sockData.send\n\t\tsockData.send.sendData(<yourConnectedSocket>, <data>)'\n\tReceiving:\n\t\tinstead of '<yourConnectedSocket>.recv(<bufferSize>)'\n\t\ttype: 'import sockData.receive\n\t\tsockData.receive.recvData(<yourConnectedSocket>, <bufferSize>)'\n\nExamples:\n\nserver.py:\n\n\timport socket\n\timport sockData.receive\n\n\tsock = socket.socket()\n\tsock.bind((\"\", 50505))\n\tsock.listen(1)\n\n\tclient, addr = sock.accept()\n\n\tdictionary = sockData.receive.recvData(client, 1024)\n\tprint(dictionary)\n\n\tclient.close()\n\nclient.py:\n\n\timport socket\n\timport sockData.send\n\n\tsock = socket.socket()\n\tsock.connect((\"127.0.0.1\", 50505))\n\n\tdictionary = {\"message\": {\"from\": \"127.0.0.1\", \"msg\": \"hello!\"}}\n\tsockData.send.sendData(sock, dictionary)\n\n\tsock.close()\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/letsCodeMyLife/sockData/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sockData", "package_url": "https://pypi.org/project/sockData/", "platform": "", "project_url": "https://pypi.org/project/sockData/", "project_urls": {"Homepage": "https://github.com/letsCodeMyLife/sockData/"}, "release_url": "https://pypi.org/project/sockData/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Socket extension", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u2014- sockData - send other data types via socket \u2014-</p>\n<p>This library can send other data types than just strings with socket.\nYou can normally only send strings with socket.\nBut with this library, you can send all data types that are supported by pickle.</p>\n<dl>\n<dt>How to use it:</dt>\n<dd><dl>\n<dt>Sending:</dt>\n<dd>instead of \u2018&lt;yourConnectedSocket&gt;.send(&lt;string&gt;.encode())\u2019\ntype: \u2018import sockData.send\nsockData.send.sendData(&lt;yourConnectedSocket&gt;, &lt;data&gt;)\u2019</dd>\n<dt>Receiving:</dt>\n<dd>instead of \u2018&lt;yourConnectedSocket&gt;.recv(&lt;bufferSize&gt;)\u2019\ntype: \u2018import sockData.receive\nsockData.receive.recvData(&lt;yourConnectedSocket&gt;, &lt;bufferSize&gt;)\u2019</dd>\n</dl>\n</dd>\n</dl>\n<p>Examples:</p>\n<p>server.py:</p>\n<blockquote>\n<p>import socket\nimport sockData.receive</p>\n<p>sock = socket.socket()\nsock.bind((\u201c\u201d, 50505))\nsock.listen(1)</p>\n<p>client, addr = sock.accept()</p>\n<p>dictionary = sockData.receive.recvData(client, 1024)\nprint(dictionary)</p>\n<p>client.close()</p>\n</blockquote>\n<p>client.py:</p>\n<blockquote>\n<p>import socket\nimport sockData.send</p>\n<p>sock = socket.socket()\nsock.connect((\u201c127.0.0.1\u201d, 50505))</p>\n<p>dictionary = {\u201cmessage\u201d: {\u201cfrom\u201d: \u201c127.0.0.1\u201d, \u201cmsg\u201d: \u201chello!\u201d}}\nsockData.send.sendData(sock, dictionary)</p>\n<p>sock.close()</p>\n</blockquote>\n\n          </div>"}, "last_serial": 3928056, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "a52defa106e341266b75fc46f41ebeb5", "sha256": "fcc17e702c53d02583b2575f067d17d8af56af38b1031b9df0e5fb14705c93e1"}, "downloads": -1, "filename": "sockData-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a52defa106e341266b75fc46f41ebeb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2748, "upload_time": "2018-06-04T13:30:48", "upload_time_iso_8601": "2018-06-04T13:30:48.004725Z", "url": "https://files.pythonhosted.org/packages/56/91/e2cf0fd658e857434bab86c5bc16be3df42b8063635cdd6d3042d30bd9d5/sockData-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7396806a2a346eb85d73402293667629", "sha256": "b4dd5aefdb9111498f6c18fa37517059ad51a7a85ed2b8329da807cfc0aefa59"}, "downloads": -1, "filename": "sockData-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7396806a2a346eb85d73402293667629", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1754, "upload_time": "2018-06-04T13:30:49", "upload_time_iso_8601": "2018-06-04T13:30:49.011297Z", "url": "https://files.pythonhosted.org/packages/78/9e/b4fd2b6219d4942d80e87069032eba1c58a71b0a89417ec572c243161bb1/sockData-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a52defa106e341266b75fc46f41ebeb5", "sha256": "fcc17e702c53d02583b2575f067d17d8af56af38b1031b9df0e5fb14705c93e1"}, "downloads": -1, "filename": "sockData-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a52defa106e341266b75fc46f41ebeb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2748, "upload_time": "2018-06-04T13:30:48", "upload_time_iso_8601": "2018-06-04T13:30:48.004725Z", "url": "https://files.pythonhosted.org/packages/56/91/e2cf0fd658e857434bab86c5bc16be3df42b8063635cdd6d3042d30bd9d5/sockData-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7396806a2a346eb85d73402293667629", "sha256": "b4dd5aefdb9111498f6c18fa37517059ad51a7a85ed2b8329da807cfc0aefa59"}, "downloads": -1, "filename": "sockData-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7396806a2a346eb85d73402293667629", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1754, "upload_time": "2018-06-04T13:30:49", "upload_time_iso_8601": "2018-06-04T13:30:49.011297Z", "url": "https://files.pythonhosted.org/packages/78/9e/b4fd2b6219d4942d80e87069032eba1c58a71b0a89417ec572c243161bb1/sockData-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:03 2020"}