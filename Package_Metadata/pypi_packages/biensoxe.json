{"info": {"author": "Nguy\u1ec5n H\u1ed3ng Qu\u00e2n", "author_email": "ng.hong.quan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "Intended Audience :: Manufacturing", "License :: OSI Approved :: MIT License", "Natural Language :: Vietnamese", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Home Automation", "Topic :: Software Development :: Embedded Systems", "Topic :: Software Development :: Internationalization", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Localization"], "description": "========\nBienSoXe\n========\n\nLibrary to validate and parse Vietnamese vehicle plate.\n\nThis library is not a computer-vision-based license plate recognition software. It instead is used for validating output of such computer vision software. Imagine that you use camera to track all cars coming in and out of your parking lot, but you don't want to save false data generated from recognition process (due to wrong angle of canera, for example).\n\nInstall\n-------\n\n.. code-block:: sh\n\n    pip3 install biensoxe\n\n\nUsage\n-----\n\nCall ``VietnamVehiclePlate.from_string``, passing the number string, to create ``VietnamVehiclePlate`` object.\n\n.. code-block:: python\n\n    >>> from biensoxe import VietnamVehiclePlate\n\n    >>> VietnamVehiclePlate.from_string('44A-112.23')\n    VietnamVehiclePlate(compact='44A11223', vehicle_type=<VehicleType.DOMESTIC_AUTOMOBILE: 1>,\n    series='A', order='11223', locality='44', dip_country=None)\n\nThe method raises ``ValueError`` if the string could not be parsed.\n\nTo format the plate number as in daily life, pass ``VietnamVehiclePlate`` to ``str``:\n\n.. code-block:: python\n\n    >>> plate = VietnamVehiclePlate.from_string('72E101130')\n\n    >>> plate\n    VietnamVehiclePlate(compact='72E101130', vehicle_type=<VehicleType.DOMESTIC_MOTORCYCLE_50_TO_175CC: 3>, series='E1', order='01130', locality='72', dip_country=None)\n\n    >>> str(plate)\n    '72-E1 011.30'\n\nDjango\n~~~~~~\n\nThis library provides a field type, ``VietnamVehiclePlateField``, for Django model. The field will return value as ``VietnamVehiclePlate`` object. Here is example:\n\n.. code-block:: python\n\n    from biensoxe.django import VietnamVehiclePlateField\n\n    def default_plate_number():\n        return VietnamVehiclePlate.from_string('10A 00001')\n\n    class Vehicle(models.Model):\n        plate_number = VietnamVehiclePlateField(max_length=20, default=default_plate_number, unique=True)\n\n    def __str__(self):\n        return str(self.plate_number) or self.pk\n\nNote that this field stores value internally as PostgeSQL ``CIText`` data type, so you can only use this field with PostgreSQL.\nYou also need to activate CITextExtension_ your self.\n\n\n.. _CITextExtension: https://docs.djangoproject.com/en/2.2/ref/contrib/postgres/operations/#citextextension\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sunshine-tech/BienSoXe", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "biensoxe", "package_url": "https://pypi.org/project/biensoxe/", "platform": "", "project_url": "https://pypi.org/project/biensoxe/", "project_urls": {"Homepage": "https://github.com/sunshine-tech/BienSoXe", "Repository": "https://github.com/sunshine-tech/BienSoXe.git"}, "release_url": "https://pypi.org/project/biensoxe/0.8.4/", "requires_dist": ["pydantic (>=1.0,<2.0)", "memoprop (>=0.2.0,<0.3.0)"], "requires_python": ">=3.7,<4.0", "summary": "Library to parse and validate Vietnamese vehicle plate", "version": "0.8.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library to validate and parse Vietnamese vehicle plate.</p>\n<p>This library is not a computer-vision-based license plate recognition software. It instead is used for validating output of such computer vision software. Imagine that you use camera to track all cars coming in and out of your parking lot, but you don\u2019t want to save false data generated from recognition process (due to wrong angle of canera, for example).</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip3 install biensoxe\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Call <tt>VietnamVehiclePlate.from_string</tt>, passing the number string, to create <tt>VietnamVehiclePlate</tt> object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">biensoxe</span> <span class=\"kn\">import</span> <span class=\"n\">VietnamVehiclePlate</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">VietnamVehiclePlate</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s1\">'44A-112.23'</span><span class=\"p\">)</span>\n<span class=\"n\">VietnamVehiclePlate</span><span class=\"p\">(</span><span class=\"n\">compact</span><span class=\"o\">=</span><span class=\"s1\">'44A11223'</span><span class=\"p\">,</span> <span class=\"n\">vehicle_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VehicleType</span><span class=\"o\">.</span><span class=\"n\">DOMESTIC_AUTOMOBILE</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"n\">series</span><span class=\"o\">=</span><span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">'11223'</span><span class=\"p\">,</span> <span class=\"n\">locality</span><span class=\"o\">=</span><span class=\"s1\">'44'</span><span class=\"p\">,</span> <span class=\"n\">dip_country</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>The method raises <tt>ValueError</tt> if the string could not be parsed.</p>\n<p>To format the plate number as in daily life, pass <tt>VietnamVehiclePlate</tt> to <tt>str</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">plate</span> <span class=\"o\">=</span> <span class=\"n\">VietnamVehiclePlate</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s1\">'72E101130'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">plate</span>\n<span class=\"n\">VietnamVehiclePlate</span><span class=\"p\">(</span><span class=\"n\">compact</span><span class=\"o\">=</span><span class=\"s1\">'72E101130'</span><span class=\"p\">,</span> <span class=\"n\">vehicle_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VehicleType</span><span class=\"o\">.</span><span class=\"n\">DOMESTIC_MOTORCYCLE_50_TO_175CC</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">series</span><span class=\"o\">=</span><span class=\"s1\">'E1'</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">'01130'</span><span class=\"p\">,</span> <span class=\"n\">locality</span><span class=\"o\">=</span><span class=\"s1\">'72'</span><span class=\"p\">,</span> <span class=\"n\">dip_country</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plate</span><span class=\"p\">)</span>\n<span class=\"s1\">'72-E1 011.30'</span>\n</pre>\n<div id=\"django\">\n<h3>Django</h3>\n<p>This library provides a field type, <tt>VietnamVehiclePlateField</tt>, for Django model. The field will return value as <tt>VietnamVehiclePlate</tt> object. Here is example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">biensoxe.django</span> <span class=\"kn\">import</span> <span class=\"n\">VietnamVehiclePlateField</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">default_plate_number</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">VietnamVehiclePlate</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s1\">'10A 00001'</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Vehicle</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">plate_number</span> <span class=\"o\">=</span> <span class=\"n\">VietnamVehiclePlateField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">default_plate_number</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plate_number</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pk</span>\n</pre>\n<p>Note that this field stores value internally as PostgeSQL <tt>CIText</tt> data type, so you can only use this field with PostgreSQL.\nYou also need to activate <a href=\"https://docs.djangoproject.com/en/2.2/ref/contrib/postgres/operations/#citextextension\" rel=\"nofollow\">CITextExtension</a> your self.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6097636, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "2f8a8ffb0ac1c352689a871d314fb1be", "sha256": "1c0891adc5a780726b73215c185edc9639b29847d5e198f22e9d518a35fb0633"}, "downloads": -1, "filename": "biensoxe-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f8a8ffb0ac1c352689a871d314fb1be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5096, "upload_time": "2019-11-05T08:40:07", "upload_time_iso_8601": "2019-11-05T08:40:07.690637Z", "url": "https://files.pythonhosted.org/packages/a0/c3/f0d3d41303047e730b08f5702f63ab92283e7c9387c9b582b8e65e88d1c6/biensoxe-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8261af3861a437d9b4d05647de43a510", "sha256": "0359aa971b3ab43678994d370952d952290742f3c7e6785436c2c82ae13fb6ae"}, "downloads": -1, "filename": "biensoxe-0.8.0.tar.gz", "has_sig": false, "md5_digest": "8261af3861a437d9b4d05647de43a510", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4819, "upload_time": "2019-11-05T08:40:10", "upload_time_iso_8601": "2019-11-05T08:40:10.366904Z", "url": "https://files.pythonhosted.org/packages/f1/94/034d2eba4ae59c0ae59f6a7de0b5b325b8c4197d683490f06427a7328207/biensoxe-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "a995215ee84c751e7d34c8fa887cf7cf", "sha256": "2a6e74c10853da7eb58572015ccbc97e4fabd9a459718e38d7807c7924d1c639"}, "downloads": -1, "filename": "biensoxe-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a995215ee84c751e7d34c8fa887cf7cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5291, "upload_time": "2019-11-05T17:21:03", "upload_time_iso_8601": "2019-11-05T17:21:03.610489Z", "url": "https://files.pythonhosted.org/packages/40/d3/29c6770a1aefc0d6ac9015a7bc0dbc77c0edc5b8b237f1070edf58005324/biensoxe-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db4f5a1c94dbea36081ddbf94a5fac2", "sha256": "49f2e34ab22458c55fc142338f2ba54f45703c57e5544197c903d2fd60c87f2b"}, "downloads": -1, "filename": "biensoxe-0.8.1.tar.gz", "has_sig": false, "md5_digest": "7db4f5a1c94dbea36081ddbf94a5fac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4998, "upload_time": "2019-11-05T17:21:05", "upload_time_iso_8601": "2019-11-05T17:21:05.374782Z", "url": "https://files.pythonhosted.org/packages/b3/b2/e498738f7aec85ce61eed2aa1b1e474ff9a2b33b14b353528d3ee4b72436/biensoxe-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "b4d96c0e171d4b3dbcb5ae5baee20ec3", "sha256": "5552991d045b27d424e8d177216521dcd7ea8227b5a98545fe1d69fc681dcdbc"}, "downloads": -1, "filename": "biensoxe-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4d96c0e171d4b3dbcb5ae5baee20ec3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5361, "upload_time": "2019-11-08T03:50:21", "upload_time_iso_8601": "2019-11-08T03:50:21.416176Z", "url": "https://files.pythonhosted.org/packages/e4/5e/f05ddae69d7c85ecbeac31726285f9ecf2e40b8b65c80df938d3b6284bb2/biensoxe-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925273e73e80c453d5725eb9cc30f875", "sha256": "1076319dbe93225e806e1a2ffbba6bbcabb0d9a9e64fa76b569b345104d9d7b2"}, "downloads": -1, "filename": "biensoxe-0.8.2.tar.gz", "has_sig": false, "md5_digest": "925273e73e80c453d5725eb9cc30f875", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5070, "upload_time": "2019-11-08T03:50:23", "upload_time_iso_8601": "2019-11-08T03:50:23.372162Z", "url": "https://files.pythonhosted.org/packages/76/24/a4a40d7c37382f8b8d0659a3f8e968acfc81ae32f6d6d23f54d87283a306/biensoxe-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "5e20ed409fe5ae9ca671aa62d9ccce2c", "sha256": "ad137fe8114371a9920b1b0c9add7465ad25861aaa25b1f88736b7e01698dc6d"}, "downloads": -1, "filename": "biensoxe-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5e20ed409fe5ae9ca671aa62d9ccce2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7026, "upload_time": "2019-11-08T04:36:14", "upload_time_iso_8601": "2019-11-08T04:36:14.926447Z", "url": "https://files.pythonhosted.org/packages/82/20/4ad555ce9caed78df8a05d7e58ac0785ba87c6eed4e680a45b5a5357c27e/biensoxe-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e06f22e284a07c94f731aad17626736", "sha256": "3edcc6dbf7e138cfdf62a9dd300175977d83cf5dfdf87a15e4a3354ce78d23a3"}, "downloads": -1, "filename": "biensoxe-0.8.3.tar.gz", "has_sig": false, "md5_digest": "5e06f22e284a07c94f731aad17626736", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6354, "upload_time": "2019-11-08T04:36:16", "upload_time_iso_8601": "2019-11-08T04:36:16.686981Z", "url": "https://files.pythonhosted.org/packages/4f/68/17af4e0763c79d572f7fbeca80bd37fa4eda04618953fb12336442c49627/biensoxe-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "11cf71c6124ddb52ff1b445a9567e617", "sha256": "a14fd2d7b81bbba744f8712d9fd45b70adb1f8bbf63081b37a667d5adeb878ed"}, "downloads": -1, "filename": "biensoxe-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "11cf71c6124ddb52ff1b445a9567e617", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7290, "upload_time": "2019-11-08T06:43:49", "upload_time_iso_8601": "2019-11-08T06:43:49.156075Z", "url": "https://files.pythonhosted.org/packages/f2/ed/1ec32a9e764f3ce9ad3b5c91a2eacc0be56a5ccdf592eaeebc46f459572c/biensoxe-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74d9c839acd89ac5f2a34f4df48e76dd", "sha256": "d66f940d412744cb2b20bebc934d87fc71e78786db4568af06219cfae40c09b5"}, "downloads": -1, "filename": "biensoxe-0.8.4.tar.gz", "has_sig": false, "md5_digest": "74d9c839acd89ac5f2a34f4df48e76dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6586, "upload_time": "2019-11-08T06:43:51", "upload_time_iso_8601": "2019-11-08T06:43:51.184467Z", "url": "https://files.pythonhosted.org/packages/eb/b1/2e92b68c6112a091c447e64588a46cda1504f83288cef645d3d667e04f95/biensoxe-0.8.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11cf71c6124ddb52ff1b445a9567e617", "sha256": "a14fd2d7b81bbba744f8712d9fd45b70adb1f8bbf63081b37a667d5adeb878ed"}, "downloads": -1, "filename": "biensoxe-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "11cf71c6124ddb52ff1b445a9567e617", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7290, "upload_time": "2019-11-08T06:43:49", "upload_time_iso_8601": "2019-11-08T06:43:49.156075Z", "url": "https://files.pythonhosted.org/packages/f2/ed/1ec32a9e764f3ce9ad3b5c91a2eacc0be56a5ccdf592eaeebc46f459572c/biensoxe-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74d9c839acd89ac5f2a34f4df48e76dd", "sha256": "d66f940d412744cb2b20bebc934d87fc71e78786db4568af06219cfae40c09b5"}, "downloads": -1, "filename": "biensoxe-0.8.4.tar.gz", "has_sig": false, "md5_digest": "74d9c839acd89ac5f2a34f4df48e76dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6586, "upload_time": "2019-11-08T06:43:51", "upload_time_iso_8601": "2019-11-08T06:43:51.184467Z", "url": "https://files.pythonhosted.org/packages/eb/b1/2e92b68c6112a091c447e64588a46cda1504f83288cef645d3d667e04f95/biensoxe-0.8.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:35 2020"}