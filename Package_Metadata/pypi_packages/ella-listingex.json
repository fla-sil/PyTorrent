{"info": {"author": "Fragaria, s.r.o.", "author_email": "info@fragaria.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "What is this?\n=============\n\nThis package allows Ella users to change default behavior of category listing\npages. By default, each page has same number of objects (if there is enough\nof them).\n\nSometimes, this does not meet the site's requirements. Very often, it is\ndemanded, that first page should be somehow different, e.g. list one more\narticle that is rendered in different style (like leading article). This\nis unfortunately not possible to do without hackish workarounds in default Ella.\n\nHow to use this\n===============\n\nSetup is quite straightforward. First, install the package using pip or setuptools::\n\n    pip install ella-listingex\n\nAdd the app to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...,\n        'ella_listingex',\n        ...\n    )\n\nConfigure the ``ella_listingex`` to meet your requirements. Internally, this\napp works by using Ella's ``CUSTOM_VIEWS`` override. This means that we\nare telling Ella to use our views instead of in-built ones. ``ella_listingex``\napplication redefines Ella's ``ListContentType`` view to provide additional\nfunctionality. Therefore, we need to allow ``CUSTOM_VIEWS`` and set\nthe ``VIEWS`` variable to the path of ``ella_listingex.views`` as shown\nbelow::\n\n    # Use custom views to support different number of items on the first and\n    # next pages of category listings.\n    CUSTOM_VIEWS = True\n    VIEWS = 'ella_listingex.views'\n\nNext step is to set the pagination::\n\n    LISTINGEX_PAGINATE_BY = 10        # Default number of objects per page\n    LISTINGEX_FIRST_PAGE_COUNT = 11   # Number of objects on first page\n\nThe ``ella_listingex`` works on all category listings which are not blacklisted.\nIf you need to turn the special behaviour off on some pages, use the\n``LISTINGEX_BLACKLIST`` configuration option to provide list of regular\nexpressions which will be matched against category's ``tree_path`` attribute.\nIf there is a match, the first page will be paginated normally::\n\n    LISTINGEX_BLACKLIST = (           # Blacklist categories, whose tree_path\n        r'^blogs',                    # matches '^blogs'\n    )\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "ella-listingex", "package_url": "https://pypi.org/project/ella-listingex/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ella-listingex/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/ella-listingex/0.2/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p>This package allows Ella users to change default behavior of category listing\npages. By default, each page has same number of objects (if there is enough\nof them).</p>\n<p>Sometimes, this does not meet the site\u2019s requirements. Very often, it is\ndemanded, that first page should be somehow different, e.g. list one more\narticle that is rendered in different style (like leading article). This\nis unfortunately not possible to do without hackish workarounds in default Ella.</p>\n</div>\n<div id=\"how-to-use-this\">\n<h2>How to use this</h2>\n<p>Setup is quite straightforward. First, install the package using pip or setuptools:</p>\n<pre>pip install ella-listingex\n</pre>\n<p>Add the app to your <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...,\n    'ella_listingex',\n    ...\n)\n</pre>\n<p>Configure the <tt>ella_listingex</tt> to meet your requirements. Internally, this\napp works by using Ella\u2019s <tt>CUSTOM_VIEWS</tt> override. This means that we\nare telling Ella to use our views instead of in-built ones. <tt>ella_listingex</tt>\napplication redefines Ella\u2019s <tt>ListContentType</tt> view to provide additional\nfunctionality. Therefore, we need to allow <tt>CUSTOM_VIEWS</tt> and set\nthe <tt>VIEWS</tt> variable to the path of <tt>ella_listingex.views</tt> as shown\nbelow:</p>\n<pre># Use custom views to support different number of items on the first and\n# next pages of category listings.\nCUSTOM_VIEWS = True\nVIEWS = 'ella_listingex.views'\n</pre>\n<p>Next step is to set the pagination:</p>\n<pre>LISTINGEX_PAGINATE_BY = 10        # Default number of objects per page\nLISTINGEX_FIRST_PAGE_COUNT = 11   # Number of objects on first page\n</pre>\n<p>The <tt>ella_listingex</tt> works on all category listings which are not blacklisted.\nIf you need to turn the special behaviour off on some pages, use the\n<tt>LISTINGEX_BLACKLIST</tt> configuration option to provide list of regular\nexpressions which will be matched against category\u2019s <tt>tree_path</tt> attribute.\nIf there is a match, the first page will be paginated normally:</p>\n<pre>LISTINGEX_BLACKLIST = (           # Blacklist categories, whose tree_path\n    r'^blogs',                    # matches '^blogs'\n)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 791606, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5034e58e5b3099705fe8f761c69ce4af", "sha256": "0930b86bba8b5bce3e48f600bcfb1ef30ce72251cfd73b01b53c94b69f574003"}, "downloads": -1, "filename": "ella-listingex-0.1.tar.gz", "has_sig": false, "md5_digest": "5034e58e5b3099705fe8f761c69ce4af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4283, "upload_time": "2012-06-21T14:48:02", "upload_time_iso_8601": "2012-06-21T14:48:02.150514Z", "url": "https://files.pythonhosted.org/packages/7c/e9/d0bbb53870f51b9c4113ef43a2009fd9632f3e5293c9c549b80c08380197/ella-listingex-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1be363df737435155277d33bf33b5348", "sha256": "d56de6f588d40814441835396ac0979ce9278a991bdc5da5f8322d4e42ecb726"}, "downloads": -1, "filename": "ella-listingex-0.2.tar.gz", "has_sig": false, "md5_digest": "1be363df737435155277d33bf33b5348", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5215, "upload_time": "2012-06-21T15:25:59", "upload_time_iso_8601": "2012-06-21T15:25:59.568084Z", "url": "https://files.pythonhosted.org/packages/b8/fe/ce4704abe31eae40c70aa0cd879721551aa6350297979f2b56fcb4012019/ella-listingex-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1be363df737435155277d33bf33b5348", "sha256": "d56de6f588d40814441835396ac0979ce9278a991bdc5da5f8322d4e42ecb726"}, "downloads": -1, "filename": "ella-listingex-0.2.tar.gz", "has_sig": false, "md5_digest": "1be363df737435155277d33bf33b5348", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5215, "upload_time": "2012-06-21T15:25:59", "upload_time_iso_8601": "2012-06-21T15:25:59.568084Z", "url": "https://files.pythonhosted.org/packages/b8/fe/ce4704abe31eae40c70aa0cd879721551aa6350297979f2b56fcb4012019/ella-listingex-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:48 2020"}