{"info": {"author": "Christopher Oballe", "author_email": "coballejr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Mathematics"], "description": "# bayes_tda\n\nThis module contains classes to implement a marked Poisson process model for Bayesian inference with persistence diagrams. The model relies on mixed Gaussian assumptions. For a full description of the model, please refer to [https://arxiv.org/abs/1901.02034](https://arxiv.org/abs/1901.02034).\n\n\n# Installation\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install bayes_tda.\n\n```bash\npip install bayes_tda\n```\n# Classes\n\n| Class name| Description |Methods |\n|--|--|--|\n| WedgeGaussian |Gaussian density restricted to upper half of $\\mathbb{R}^2$.| eval|\n|Prior| Mixed Gaussian prior intensity.| eval\n|Posterior|Mixed Gaussian posterior intensity.| eval\n\n\n\n# Usage\n```python\nfrom bayes_tda import *\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = [0,0] # a point in birth-persistence coordinates\nwg = WedgeGaussian(mu = [0,0], sigma = 1) # Gaussian densities restricted to the upper half plane\nd = wg.eval(x) # evaluates the Gaussian density at x\n\nmeans = np.array([[0,0],[6,6]])\nss = [1,1]\nws = [1,1]\n\npri  = Prior(weights = ws,mus = means, sigmas = ss)\nd_pri = pri.eval(x)\n\nb = np.linspace(0,10,50)\np = np.linspace(0,10,50)\n\nB,P = np.meshgrid(b,p)\n\nZ = list()\nfor ind in range(len(P)):\n    l = list()\n    for i in range(len(P)):\n        l.append(pri.eval([B[ind][i],P[ind][i]]))\n    Z.append(l)\n        \nplt.style.use('seaborn-white')\nplt.contourf(B,P,Z, 20, cmap = 'twilight')\nplt.colorbar()\nplt.show()\n\nnoise = Prior(weights = [0], mus = [[30,30]], sigmas = [10])\npost = Posterior(prior = pri,clutter = noise,Dy = [[1,5],[5,1]], sy = 1)\npeval = post.eval(x)\n\nZ = list()\nfor ind in range(len(P)):\n    l = list()\n    for i in range(len(P)):\n        l.append(post.eval([B[ind][i],P[ind][i]]))\n    Z.append(l)\n        \nplt.style.use('seaborn-white')\nplt.contourf(B,P,Z, 20, cmap = 'twilight')\nplt.colorbar()\nplt.show()\n```\n## Reporting Bugs\nReport any bugs by opening an issue at [https://github.com/coballejr/bayes_tda/](https://github.com/coballejr/bayes_tda/).\n\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/coballejr/bayes_tda/archive/v_03.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coballejr/bayes_tda/", "keywords": "Persistent Homology,Topological Data Analysis,Bayesian,Point process,Poisson process", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bayes-tda", "package_url": "https://pypi.org/project/bayes-tda/", "platform": "", "project_url": "https://pypi.org/project/bayes-tda/", "project_urls": {"Download": "https://github.com/coballejr/bayes_tda/archive/v_03.tar.gz", "Homepage": "https://github.com/coballejr/bayes_tda/"}, "release_url": "https://pypi.org/project/bayes-tda/0.3/", "requires_dist": null, "requires_python": "", "summary": "Point process model for Bayesian inference with persistence diagrams.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bayes_tda</h1>\n<p>This module contains classes to implement a marked Poisson process model for Bayesian inference with persistence diagrams. The model relies on mixed Gaussian assumptions. For a full description of the model, please refer to <a href=\"https://arxiv.org/abs/1901.02034\" rel=\"nofollow\">https://arxiv.org/abs/1901.02034</a>.</p>\n<h1>Installation</h1>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install bayes_tda.</p>\n<pre>pip install bayes_tda\n</pre>\n<h1>Classes</h1>\n<table>\n<thead>\n<tr>\n<th>Class name</th>\n<th>Description</th>\n<th>Methods</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WedgeGaussian</td>\n<td>Gaussian density restricted to upper half of $\\mathbb{R}^2$.</td>\n<td>eval</td>\n</tr>\n<tr>\n<td>Prior</td>\n<td>Mixed Gaussian prior intensity.</td>\n<td>eval</td>\n</tr>\n<tr>\n<td>Posterior</td>\n<td>Mixed Gaussian posterior intensity.</td>\n<td>eval</td>\n</tr></tbody></table>\n<h1>Usage</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bayes_tda</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># a point in birth-persistence coordinates</span>\n<span class=\"n\">wg</span> <span class=\"o\">=</span> <span class=\"n\">WedgeGaussian</span><span class=\"p\">(</span><span class=\"n\">mu</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># Gaussian densities restricted to the upper half plane</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"c1\"># evaluates the Gaussian density at x</span>\n\n<span class=\"n\">means</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]])</span>\n<span class=\"n\">ss</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">ws</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"n\">pri</span>  <span class=\"o\">=</span> <span class=\"n\">Prior</span><span class=\"p\">(</span><span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">ws</span><span class=\"p\">,</span><span class=\"n\">mus</span> <span class=\"o\">=</span> <span class=\"n\">means</span><span class=\"p\">,</span> <span class=\"n\">sigmas</span> <span class=\"o\">=</span> <span class=\"n\">ss</span><span class=\"p\">)</span>\n<span class=\"n\">d_pri</span> <span class=\"o\">=</span> <span class=\"n\">pri</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"n\">B</span><span class=\"p\">,</span><span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span>\n\n<span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">ind</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">)):</span>\n    <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">)):</span>\n        <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pri</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">([</span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">ind</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"n\">P</span><span class=\"p\">[</span><span class=\"n\">ind</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]]))</span>\n    <span class=\"n\">Z</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span>\n        \n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"s1\">'seaborn-white'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">contourf</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"n\">P</span><span class=\"p\">,</span><span class=\"n\">Z</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"s1\">'twilight'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">Prior</span><span class=\"p\">(</span><span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">mus</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">]],</span> <span class=\"n\">sigmas</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"n\">Posterior</span><span class=\"p\">(</span><span class=\"n\">prior</span> <span class=\"o\">=</span> <span class=\"n\">pri</span><span class=\"p\">,</span><span class=\"n\">clutter</span> <span class=\"o\">=</span> <span class=\"n\">noise</span><span class=\"p\">,</span><span class=\"n\">Dy</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">sy</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">peval</span> <span class=\"o\">=</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">ind</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">)):</span>\n    <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">)):</span>\n        <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">([</span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">ind</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"n\">P</span><span class=\"p\">[</span><span class=\"n\">ind</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]]))</span>\n    <span class=\"n\">Z</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span>\n        \n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"s1\">'seaborn-white'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">contourf</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"n\">P</span><span class=\"p\">,</span><span class=\"n\">Z</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"s1\">'twilight'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h2>Reporting Bugs</h2>\n<p>Report any bugs by opening an issue at <a href=\"https://github.com/coballejr/bayes_tda/\" rel=\"nofollow\">https://github.com/coballejr/bayes_tda/</a>.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 7135131, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5029561747c72037e54fd85ff7094a6e", "sha256": "3dd4652da7d05b3fc69f3759dfae161e620d625c8ab5b34f425dbb238731b15d"}, "downloads": -1, "filename": "bayes_tda-0.1.tar.gz", "has_sig": false, "md5_digest": "5029561747c72037e54fd85ff7094a6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2543, "upload_time": "2019-09-18T11:36:26", "upload_time_iso_8601": "2019-09-18T11:36:26.145603Z", "url": "https://files.pythonhosted.org/packages/6b/e2/f6a16fd589fb4b6c3e82318823c94afbc39035f1fbcc7a10b4dbe7b4e100/bayes_tda-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b86096aff18e0b48d92df01e80e99721", "sha256": "661fa1bfaec37d87532a5808742a66dedc79283e45cb0c9c360b93917ea40e92"}, "downloads": -1, "filename": "bayes_tda-0.2.tar.gz", "has_sig": false, "md5_digest": "b86096aff18e0b48d92df01e80e99721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4813, "upload_time": "2019-10-26T20:36:31", "upload_time_iso_8601": "2019-10-26T20:36:31.925586Z", "url": "https://files.pythonhosted.org/packages/67/a0/e18df22c202770c06ff40e4dfa52de0c96556404c2db13b8c7e20a30c5ea/bayes_tda-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ccf7a44c8a0b8ad9f6c96c228b25a164", "sha256": "769b88d4603704e341c4018fc3f6b354d0db606a138f8120feb4d252e66a75f6"}, "downloads": -1, "filename": "bayes_tda-0.3.tar.gz", "has_sig": false, "md5_digest": "ccf7a44c8a0b8ad9f6c96c228b25a164", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3892, "upload_time": "2020-04-30T05:51:20", "upload_time_iso_8601": "2020-04-30T05:51:20.782363Z", "url": "https://files.pythonhosted.org/packages/ba/c4/208c6de76c7ae084149391f47d6a6163a8cdb5e19d20998c7867d644c817/bayes_tda-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccf7a44c8a0b8ad9f6c96c228b25a164", "sha256": "769b88d4603704e341c4018fc3f6b354d0db606a138f8120feb4d252e66a75f6"}, "downloads": -1, "filename": "bayes_tda-0.3.tar.gz", "has_sig": false, "md5_digest": "ccf7a44c8a0b8ad9f6c96c228b25a164", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3892, "upload_time": "2020-04-30T05:51:20", "upload_time_iso_8601": "2020-04-30T05:51:20.782363Z", "url": "https://files.pythonhosted.org/packages/ba/c4/208c6de76c7ae084149391f47d6a6163a8cdb5e19d20998c7867d644c817/bayes_tda-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:41 2020"}