{"info": {"author": "Gerome Fournier", "author_email": "jef@foutaise.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Utilities"], "description": "# texttable\n\nPython module for creating simple ASCII tables\n\n## Availability\n\nThis module is available on [PyPI](https://pypi.org/project/texttable/), and has been packaged for several Linux/Unix platforms\n([Debian](https://packages.debian.org/search?&searchon=names&keywords=python-texttable+),\n[FreeBSD](https://www.freebsd.org/cgi/ports.cgi?query=texttable&stype=all), Fedora, Suse...).\n\n## Dependencies\n\nIf available, [cjkwrap](https://github.com/fgallaire/cjkwrap) library is used instead of textwrap, for a better wrapping of CJK text.\n\nIf available, [wcwidth](https://github.com/jquast/wcwidth) library is used for a better rendering (basic emoji support).\n\n## Documentation\n\n```\nNAME\n    texttable - module for creating simple ASCII tables\n\nFILE\n    /usr/local/lib/python2.7/dist-packages/texttable.py\n\nDESCRIPTION\n\n    Example:\n\n        table = Texttable()\n        table.set_cols_align([\"l\", \"r\", \"c\"])\n        table.set_cols_valign([\"t\", \"m\", \"b\"])\n        table.add_rows([[\"Name\", \"Age\", \"Nickname\"],\n                        [\"Mr\\nXavier\\nHuon\", 32, \"Xav'\"],\n                        [\"Mr\\nBaptiste\\nClement\", 1, \"Baby\"],\n                        [\"Mme\\nLouise\\nBourgeau\", 28, \"Lou\\n\\nLoue\"]])\n        print table.draw() + \"\\n\"\n\n        table = Texttable()\n        table.set_deco(Texttable.HEADER)\n        table.set_cols_dtype(['t',  # text\n                              'f',  # float (decimal)\n                              'e',  # float (exponent)\n                              'i',  # integer\n                              'a']) # automatic\n        table.set_cols_align([\"l\", \"r\", \"r\", \"r\", \"l\"])\n        table.add_rows([[\"text\",    \"float\", \"exp\", \"int\", \"auto\"],\n                        [\"abcd\",    \"67\",    654,   89,    128.001],\n                        [\"efghijk\", 67.5434, .654,  89.6,  12800000000000000000000.00023],\n                        [\"lmn\",     5e-78,   5e-78, 89.4,  .000000000000128],\n                        [\"opqrstu\", .023,    5e+78, 92.,   12800000000000000000000]])\n        print table.draw()\n\n    Result:\n\n        +----------+-----+----------+\n        |   Name   | Age | Nickname |\n        +==========+=====+==========+\n        | Mr       |     |          |\n        | Xavier   |  32 |          |\n        | Huon     |     |   Xav'   |\n        +----------+-----+----------+\n        | Mr       |     |          |\n        | Baptiste |   1 |          |\n        | Clement  |     |   Baby   |\n        +----------+-----+----------+\n        | Mme      |     |   Lou    |\n        | Louise   |  28 |          |\n        | Bourgeau |     |   Loue   |\n        +----------+-----+----------+\n\n         text     float       exp      int     auto\n        ==============================================\n        abcd      67.000   6.540e+02    89   128.001\n        efghijk   67.543   6.540e-01    90   1.280e+22\n        lmn        0.000   5.000e-78    89   0.000\n        opqrstu    0.023   5.000e+78    92   1.280e+22\n\nCLASSES\n    class Texttable\n     |  Methods defined here:\n     |\n     |  __init__(self, max_width=80)\n     |      Constructor\n     |\n     |      - max_width is an integer, specifying the maximum width of the table\n     |      - if set to 0, size is unlimited, therefore cells won't be wrapped\n     |\n     |  add_row(self, array)\n     |      Add a row in the rows stack\n     |\n     |      - cells can contain newlines and tabs\n     |\n     |  add_rows(self, rows, header=True)\n     |      Add several rows in the rows stack\n     |\n     |      - The 'rows' argument can be either an iterator returning arrays,\n     |        or a by-dimensional array\n     |      - 'header' specifies if the first row should be used as the header\n     |        of the table\n     |\n     |  draw(self)\n     |      Draw the table\n     |\n     |      - the table is returned as a whole string\n     |\n     |  header(self, array)\n     |      Specify the header of the table\n     |\n     |  reset(self)\n     |      Reset the instance\n     |\n     |      - reset rows and header\n     |\n     |  set_chars(self, array)\n     |      Set the characters used to draw lines between rows and columns\n     |\n     |      - the array should contain 4 fields:\n     |\n     |          [horizontal, vertical, corner, header]\n     |\n     |      - default is set to:\n     |\n     |          ['-', '|', '+', '=']\n     |\n     |  set_cols_align(self, array)\n     |      Set the desired columns alignment\n     |\n     |      - the elements of the array should be either \"l\", \"c\" or \"r\":\n     |\n     |          * \"l\": column flushed left\n     |          * \"c\": column centered\n     |          * \"r\": column flushed right\n     |\n     |  set_cols_dtype(self, array)\n     |      Set the desired columns datatype for the cols.\n     |\n     |      - the elements of the array should be either a callable or any of\n     |        \"a\", \"t\", \"f\", \"e\" or \"i\":\n     |\n     |          * \"a\": automatic (try to use the most appropriate datatype)\n     |          * \"t\": treat as text\n     |          * \"f\": treat as float in decimal format\n     |          * \"e\": treat as float in exponential format\n     |          * \"i\": treat as int\n     |          * a callable: should return formatted string for any value given\n     |\n     |      - by default, automatic datatyping is used for each column\n     |\n     |  set_cols_valign(self, array)\n     |      Set the desired columns vertical alignment\n     |\n     |      - the elements of the array should be either \"t\", \"m\" or \"b\":\n     |\n     |          * \"t\": column aligned on the top of the cell\n     |          * \"m\": column aligned on the middle of the cell\n     |          * \"b\": column aligned on the bottom of the cell\n     |\n     |  set_cols_width(self, array)\n     |      Set the desired columns width\n     |\n     |      - the elements of the array should be integers, specifying the\n     |        width of each column. For example:\n     |\n     |              [10, 20, 5]\n     |\n     |  set_deco(self, deco)\n     |      Set the table decoration\n     |\n     |      - 'deco' can be a combinaison of:\n     |\n     |          Texttable.BORDER: Border around the table\n     |          Texttable.HEADER: Horizontal line below the header\n     |          Texttable.HLINES: Horizontal lines between rows\n     |          Texttable.VLINES: Vertical lines between columns\n     |\n     |         All of them are enabled by default\n     |\n     |      - example:\n     |\n     |          Texttable.BORDER | Texttable.HEADER\n     |\n     |  set_header_align(self, array)\n     |      Set the desired header alignment\n     |\n     |      - the elements of the array should be either \"l\", \"c\" or \"r\":\n     |\n     |          * \"l\": column flushed left\n     |          * \"c\": column centered\n     |          * \"r\": column flushed right\n     |\n     |  set_max_width(self, max_width)\n     |      Set the maximum width of the table\n     |\n     |      - max_width is an integer, specifying the maximum width of the table\n     |      - if set to 0, size is unlimited, therefore cells won't be wrapped\n     |\n     |  set_precision(self, width)\n     |      Set the desired precision for float/exponential formats\n     |\n     |      - width must be an integer >= 0\n     |\n     |      - default value is set to 3\n     |\n     |  ----------------------------------------------------------------------\n     |  Data and other attributes defined here:\n     |\n     |  BORDER = 1\n     |\n     |  HEADER = 2\n     |\n     |  HLINES = 4\n     |\n     |  VLINES = 8\n\nDATA\n    __all__ = ['Texttable', 'ArraySizeError']\n    __author__ = 'Gerome Fournier <jef(at)foutaise.org>'\n    __credits__ = 'Jeff Kowalczyk:\\n    - textwrap improved import\\n ...at...\n    __license__ = 'MIT'\n    __version__ = '1.6.2'\n\nVERSION\n    1.6.2\n\nAUTHOR\n    Gerome Fournier <jef(at)foutaise.org>\n\nCREDITS\n    Jeff Kowalczyk:\n        - textwrap improved import\n        - comment concerning header output\n\n    Anonymous:\n        - add_rows method, for adding rows in one go\n\n    Sergey Simonenko:\n        - redefined len() function to deal with non-ASCII characters\n\n    Roger Lew:\n        - columns datatype specifications\n\n    Brian Peterson:\n        - better handling of unicode errors\n\n    Frank Sachsenheim:\n        - add Python 2/3-compatibility\n\n    Maximilian Hils:\n        - fix minor bug for Python 3 compatibility\n\n    frinkelpi:\n        - preserve empty lines\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/foutaise/texttable/archive/v1.6.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/foutaise/texttable/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "texttable", "package_url": "https://pypi.org/project/texttable/", "platform": "any", "project_url": "https://pypi.org/project/texttable/", "project_urls": {"Download": "https://github.com/foutaise/texttable/archive/v1.6.2.tar.gz", "Homepage": "https://github.com/foutaise/texttable/"}, "release_url": "https://pypi.org/project/texttable/1.6.2/", "requires_dist": null, "requires_python": "", "summary": "module for creating simple ASCII tables", "version": "1.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>texttable</h1>\n<p>Python module for creating simple ASCII tables</p>\n<h2>Availability</h2>\n<p>This module is available on <a href=\"https://pypi.org/project/texttable/\" rel=\"nofollow\">PyPI</a>, and has been packaged for several Linux/Unix platforms\n(<a href=\"https://packages.debian.org/search?&amp;searchon=names&amp;keywords=python-texttable+\" rel=\"nofollow\">Debian</a>,\n<a href=\"https://www.freebsd.org/cgi/ports.cgi?query=texttable&amp;stype=all\" rel=\"nofollow\">FreeBSD</a>, Fedora, Suse...).</p>\n<h2>Dependencies</h2>\n<p>If available, <a href=\"https://github.com/fgallaire/cjkwrap\" rel=\"nofollow\">cjkwrap</a> library is used instead of textwrap, for a better wrapping of CJK text.</p>\n<p>If available, <a href=\"https://github.com/jquast/wcwidth\" rel=\"nofollow\">wcwidth</a> library is used for a better rendering (basic emoji support).</p>\n<h2>Documentation</h2>\n<pre><code>NAME\n    texttable - module for creating simple ASCII tables\n\nFILE\n    /usr/local/lib/python2.7/dist-packages/texttable.py\n\nDESCRIPTION\n\n    Example:\n\n        table = Texttable()\n        table.set_cols_align([\"l\", \"r\", \"c\"])\n        table.set_cols_valign([\"t\", \"m\", \"b\"])\n        table.add_rows([[\"Name\", \"Age\", \"Nickname\"],\n                        [\"Mr\\nXavier\\nHuon\", 32, \"Xav'\"],\n                        [\"Mr\\nBaptiste\\nClement\", 1, \"Baby\"],\n                        [\"Mme\\nLouise\\nBourgeau\", 28, \"Lou\\n\\nLoue\"]])\n        print table.draw() + \"\\n\"\n\n        table = Texttable()\n        table.set_deco(Texttable.HEADER)\n        table.set_cols_dtype(['t',  # text\n                              'f',  # float (decimal)\n                              'e',  # float (exponent)\n                              'i',  # integer\n                              'a']) # automatic\n        table.set_cols_align([\"l\", \"r\", \"r\", \"r\", \"l\"])\n        table.add_rows([[\"text\",    \"float\", \"exp\", \"int\", \"auto\"],\n                        [\"abcd\",    \"67\",    654,   89,    128.001],\n                        [\"efghijk\", 67.5434, .654,  89.6,  12800000000000000000000.00023],\n                        [\"lmn\",     5e-78,   5e-78, 89.4,  .000000000000128],\n                        [\"opqrstu\", .023,    5e+78, 92.,   12800000000000000000000]])\n        print table.draw()\n\n    Result:\n\n        +----------+-----+----------+\n        |   Name   | Age | Nickname |\n        +==========+=====+==========+\n        | Mr       |     |          |\n        | Xavier   |  32 |          |\n        | Huon     |     |   Xav'   |\n        +----------+-----+----------+\n        | Mr       |     |          |\n        | Baptiste |   1 |          |\n        | Clement  |     |   Baby   |\n        +----------+-----+----------+\n        | Mme      |     |   Lou    |\n        | Louise   |  28 |          |\n        | Bourgeau |     |   Loue   |\n        +----------+-----+----------+\n\n         text     float       exp      int     auto\n        ==============================================\n        abcd      67.000   6.540e+02    89   128.001\n        efghijk   67.543   6.540e-01    90   1.280e+22\n        lmn        0.000   5.000e-78    89   0.000\n        opqrstu    0.023   5.000e+78    92   1.280e+22\n\nCLASSES\n    class Texttable\n     |  Methods defined here:\n     |\n     |  __init__(self, max_width=80)\n     |      Constructor\n     |\n     |      - max_width is an integer, specifying the maximum width of the table\n     |      - if set to 0, size is unlimited, therefore cells won't be wrapped\n     |\n     |  add_row(self, array)\n     |      Add a row in the rows stack\n     |\n     |      - cells can contain newlines and tabs\n     |\n     |  add_rows(self, rows, header=True)\n     |      Add several rows in the rows stack\n     |\n     |      - The 'rows' argument can be either an iterator returning arrays,\n     |        or a by-dimensional array\n     |      - 'header' specifies if the first row should be used as the header\n     |        of the table\n     |\n     |  draw(self)\n     |      Draw the table\n     |\n     |      - the table is returned as a whole string\n     |\n     |  header(self, array)\n     |      Specify the header of the table\n     |\n     |  reset(self)\n     |      Reset the instance\n     |\n     |      - reset rows and header\n     |\n     |  set_chars(self, array)\n     |      Set the characters used to draw lines between rows and columns\n     |\n     |      - the array should contain 4 fields:\n     |\n     |          [horizontal, vertical, corner, header]\n     |\n     |      - default is set to:\n     |\n     |          ['-', '|', '+', '=']\n     |\n     |  set_cols_align(self, array)\n     |      Set the desired columns alignment\n     |\n     |      - the elements of the array should be either \"l\", \"c\" or \"r\":\n     |\n     |          * \"l\": column flushed left\n     |          * \"c\": column centered\n     |          * \"r\": column flushed right\n     |\n     |  set_cols_dtype(self, array)\n     |      Set the desired columns datatype for the cols.\n     |\n     |      - the elements of the array should be either a callable or any of\n     |        \"a\", \"t\", \"f\", \"e\" or \"i\":\n     |\n     |          * \"a\": automatic (try to use the most appropriate datatype)\n     |          * \"t\": treat as text\n     |          * \"f\": treat as float in decimal format\n     |          * \"e\": treat as float in exponential format\n     |          * \"i\": treat as int\n     |          * a callable: should return formatted string for any value given\n     |\n     |      - by default, automatic datatyping is used for each column\n     |\n     |  set_cols_valign(self, array)\n     |      Set the desired columns vertical alignment\n     |\n     |      - the elements of the array should be either \"t\", \"m\" or \"b\":\n     |\n     |          * \"t\": column aligned on the top of the cell\n     |          * \"m\": column aligned on the middle of the cell\n     |          * \"b\": column aligned on the bottom of the cell\n     |\n     |  set_cols_width(self, array)\n     |      Set the desired columns width\n     |\n     |      - the elements of the array should be integers, specifying the\n     |        width of each column. For example:\n     |\n     |              [10, 20, 5]\n     |\n     |  set_deco(self, deco)\n     |      Set the table decoration\n     |\n     |      - 'deco' can be a combinaison of:\n     |\n     |          Texttable.BORDER: Border around the table\n     |          Texttable.HEADER: Horizontal line below the header\n     |          Texttable.HLINES: Horizontal lines between rows\n     |          Texttable.VLINES: Vertical lines between columns\n     |\n     |         All of them are enabled by default\n     |\n     |      - example:\n     |\n     |          Texttable.BORDER | Texttable.HEADER\n     |\n     |  set_header_align(self, array)\n     |      Set the desired header alignment\n     |\n     |      - the elements of the array should be either \"l\", \"c\" or \"r\":\n     |\n     |          * \"l\": column flushed left\n     |          * \"c\": column centered\n     |          * \"r\": column flushed right\n     |\n     |  set_max_width(self, max_width)\n     |      Set the maximum width of the table\n     |\n     |      - max_width is an integer, specifying the maximum width of the table\n     |      - if set to 0, size is unlimited, therefore cells won't be wrapped\n     |\n     |  set_precision(self, width)\n     |      Set the desired precision for float/exponential formats\n     |\n     |      - width must be an integer &gt;= 0\n     |\n     |      - default value is set to 3\n     |\n     |  ----------------------------------------------------------------------\n     |  Data and other attributes defined here:\n     |\n     |  BORDER = 1\n     |\n     |  HEADER = 2\n     |\n     |  HLINES = 4\n     |\n     |  VLINES = 8\n\nDATA\n    __all__ = ['Texttable', 'ArraySizeError']\n    __author__ = 'Gerome Fournier &lt;jef(at)foutaise.org&gt;'\n    __credits__ = 'Jeff Kowalczyk:\\n    - textwrap improved import\\n ...at...\n    __license__ = 'MIT'\n    __version__ = '1.6.2'\n\nVERSION\n    1.6.2\n\nAUTHOR\n    Gerome Fournier &lt;jef(at)foutaise.org&gt;\n\nCREDITS\n    Jeff Kowalczyk:\n        - textwrap improved import\n        - comment concerning header output\n\n    Anonymous:\n        - add_rows method, for adding rows in one go\n\n    Sergey Simonenko:\n        - redefined len() function to deal with non-ASCII characters\n\n    Roger Lew:\n        - columns datatype specifications\n\n    Brian Peterson:\n        - better handling of unicode errors\n\n    Frank Sachsenheim:\n        - add Python 2/3-compatibility\n\n    Maximilian Hils:\n        - fix minor bug for Python 3 compatibility\n\n    frinkelpi:\n        - preserve empty lines\n</code></pre>\n\n          </div>"}, "last_serial": 6457247, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "133a90a5e8ed57037303d588b23ece05", "sha256": "2f74bbce788a0b7114e7131e3bd4199576e98a1f3d432b40f7406d4adc2cdecd"}, "downloads": -1, "filename": "texttable-0.8.0.tgz", "has_sig": false, "md5_digest": "133a90a5e8ed57037303d588b23ece05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6045, "upload_time": "2016-10-16T07:56:07", "upload_time_iso_8601": "2016-10-16T07:56:07.970764Z", "url": "https://files.pythonhosted.org/packages/33/47/f3a8568d45cb9185f075b2c5e5abae62f9e18cc51939435dcd8950ce2a9a/texttable-0.8.0.tgz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "5c91ad501e0c4ab9c25b83c4b07f30cd", "sha256": "98fbee6f91a3ae83b59e862a6b2e2fa304c615133ff6e659f0d574e09743635f"}, "downloads": -1, "filename": "texttable-0.8.1.tgz", "has_sig": false, "md5_digest": "5c91ad501e0c4ab9c25b83c4b07f30cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8502, "upload_time": "2016-10-16T07:55:17", "upload_time_iso_8601": "2016-10-16T07:55:17.214143Z", "url": "https://files.pythonhosted.org/packages/e8/99/d6bb3063b52f7a9a7bf111d40e1886c8ee35b09b41348c3039def0ea7c3d/texttable-0.8.1.tgz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "3c679cb15852f22a916e73d50cc2f731", "sha256": "18f55f7a4321800efdb0c6463075b075db364489f2c37d5efb1f504e10ac716a"}, "downloads": -1, "filename": "texttable-0.8.2.tgz", "has_sig": false, "md5_digest": "3c679cb15852f22a916e73d50cc2f731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8546, "upload_time": "2016-10-16T07:51:39", "upload_time_iso_8601": "2016-10-16T07:51:39.885161Z", "url": "https://files.pythonhosted.org/packages/aa/a4/861be895f52606bb3ff68b6a73a516bd262b638e128688fd5213b584b67e/texttable-0.8.2.tgz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "a160c4ee67e1a91f082481de8bd6147a", "sha256": "9405a75fb0285a5beac52214d9d2f2e02eec0823ec33211d478c63973bbc41b2"}, "downloads": -1, "filename": "texttable-0.8.3.zip", "has_sig": false, "md5_digest": "a160c4ee67e1a91f082481de8bd6147a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12770, "upload_time": "2016-02-08T12:27:25", "upload_time_iso_8601": "2016-02-08T12:27:25.297069Z", "url": "https://files.pythonhosted.org/packages/48/6f/59c84f861cad9a0241c1b6131d881b53411684e98a6c04a23dbdc61e5c25/texttable-0.8.3.zip", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "6335edbe1bb4edacce7c2f76195f6212", "sha256": "8587b61cb6c6022d0eb79e56e59825df4353f0f33099b4ae3bcfe8d41bd1702e"}, "downloads": -1, "filename": "texttable-0.8.4.tar.gz", "has_sig": false, "md5_digest": "6335edbe1bb4edacce7c2f76195f6212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9677, "upload_time": "2015-11-16T11:48:38", "upload_time_iso_8601": "2015-11-16T11:48:38.103617Z", "url": "https://files.pythonhosted.org/packages/f5/5e/47cbc50187ca719a39ce4838182c6126487ca62ddd299bc34cafb94260fe/texttable-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "506ec37759232faa61c26f3db2aeb089", "sha256": "c2b554b0c20c866f061cf08a315354278590b312ee178199a29bfde7a944f986"}, "downloads": -1, "filename": "texttable-0.8.5.tar.gz", "has_sig": false, "md5_digest": "506ec37759232faa61c26f3db2aeb089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9729, "upload_time": "2016-10-15T16:50:44", "upload_time_iso_8601": "2016-10-15T16:50:44.273834Z", "url": "https://files.pythonhosted.org/packages/92/3e/7d05feb005057009c323ff5edcb3800fb5d53435a649207192e710d8c175/texttable-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "39387a3ac90d02cd1f41bd18f21eea35", "sha256": "0d085f36794bdf577162155912a42389f5c9940a13ac9871fc0a67d4bdcd174f"}, "downloads": -1, "filename": "texttable-0.8.6.tar.gz", "has_sig": false, "md5_digest": "39387a3ac90d02cd1f41bd18f21eea35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9822, "upload_time": "2016-10-21T20:56:03", "upload_time_iso_8601": "2016-10-21T20:56:03.963603Z", "url": "https://files.pythonhosted.org/packages/39/d9/248f17caef9214c17227c43598828eec3a9bff96cef1df5a8c1ab58d19b3/texttable-0.8.6.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "ffb6db5d3a2756aacb80b1ab0bc497d2", "sha256": "8a38082fe822e825fde5bcf150741bdf38ef52e00a05a20c8967bcf99a8f31d2"}, "downloads": -1, "filename": "texttable-0.8.7.tar.gz", "has_sig": false, "md5_digest": "ffb6db5d3a2756aacb80b1ab0bc497d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9829, "upload_time": "2016-11-14T18:29:35", "upload_time_iso_8601": "2016-11-14T18:29:35.692130Z", "url": "https://files.pythonhosted.org/packages/65/d4/bab53c112e44fcdc562e0bea19bda1f28db9d25340c4fcbf43b50ac0555d/texttable-0.8.7.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "9046e398bd49bcee553ff348a8849327", "sha256": "0be1ecd6468847fc2f3b57b6c1862d8c0ae6832c037c97db502053311eff9a99"}, "downloads": -1, "filename": "texttable-0.8.8.tar.gz", "has_sig": false, "md5_digest": "9046e398bd49bcee553ff348a8849327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10599, "upload_time": "2017-03-30T20:20:56", "upload_time_iso_8601": "2017-03-30T20:20:56.522654Z", "url": "https://files.pythonhosted.org/packages/74/49/23d944a6f7d4dd20846b2df2914fe108c96a253567c140c416edbf270f80/texttable-0.8.8.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "6d79bef14ef26f460ab58b5d48241fae", "sha256": "ea73c237071c3981c90854ed4dcd596d10719e568c606e94ce459e89081a6520"}, "downloads": -1, "filename": "texttable-0.9.0.tar.gz", "has_sig": false, "md5_digest": "6d79bef14ef26f460ab58b5d48241fae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10820, "upload_time": "2017-05-16T17:43:54", "upload_time_iso_8601": "2017-05-16T17:43:54.900978Z", "url": "https://files.pythonhosted.org/packages/02/fb/ed19f2cc3aff43c6ec8d5aebc1c5f461a7330c6248aa7f56064fcb1346cb/texttable-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "a712b5a5464d51c5fc43c64d9d2cd0de", "sha256": "119041773ff03596b56392532f9315cb3a3116e404fd6f36e76a7dc088d95c79"}, "downloads": -1, "filename": "texttable-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a712b5a5464d51c5fc43c64d9d2cd0de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11074, "upload_time": "2017-06-27T19:30:28", "upload_time_iso_8601": "2017-06-27T19:30:28.794570Z", "url": "https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "39341c0787e84ee061262830c705fd95", "sha256": "a733f7d90f6dd35d799c4048e3b015fcf95887ef49e0ef65262f90ee6d7abd61"}, "downloads": -1, "filename": "texttable-1.0.0.tar.gz", "has_sig": false, "md5_digest": "39341c0787e84ee061262830c705fd95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11111, "upload_time": "2017-10-14T10:41:13", "upload_time_iso_8601": "2017-10-14T10:41:13.816953Z", "url": "https://files.pythonhosted.org/packages/19/a6/23fed5cf142b26fd0837b68e4a0c83e4683fc2357192bbe0cac78976bb24/texttable-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "81a127a13f52e47653054ea9d7635086", "sha256": "50eff7f7af432b2e28c3be2f5bd60144837516f1ba63aac4b19f3257a7290c3f"}, "downloads": -1, "filename": "texttable-1.1.0.tar.gz", "has_sig": false, "md5_digest": "81a127a13f52e47653054ea9d7635086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11634, "upload_time": "2017-10-22T17:31:13", "upload_time_iso_8601": "2017-10-22T17:31:13.554292Z", "url": "https://files.pythonhosted.org/packages/d3/96/e446e65e50d712c6d5291d4ba839b9b7d11a79fbd0b89dbc8c25a1e6ae5d/texttable-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ac77a029cd590548b4fa9f5fc260e63d", "sha256": "44674d1d470a9fc264c4d1eba44b74463ca0066d7b954453dd5a4f8057779c9c"}, "downloads": -1, "filename": "texttable-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ac77a029cd590548b4fa9f5fc260e63d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11623, "upload_time": "2017-10-26T12:28:59", "upload_time_iso_8601": "2017-10-26T12:28:59.759813Z", "url": "https://files.pythonhosted.org/packages/74/81/a1a1cd1bb26df1d5eef1887dd9c887aa100e065fe6708eb93ee96291befd/texttable-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "20b7bb6a7654cbc594cbb561cf0fbe5e", "sha256": "d331432bc4e4a3013735181e65f90bcbef673d02401555ca3d1c3b8a68018900"}, "downloads": -1, "filename": "texttable-1.2.0.tar.gz", "has_sig": false, "md5_digest": "20b7bb6a7654cbc594cbb561cf0fbe5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12049, "upload_time": "2018-01-03T15:45:33", "upload_time_iso_8601": "2018-01-03T15:45:33.017683Z", "url": "https://files.pythonhosted.org/packages/a9/e2/1f52a870724c46e1563842ad2c5e052a631fbe4ac80d7b8c48cffa186f6f/texttable-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "7761da214368903c2409c13f1280cffe", "sha256": "c89dc0148ae29645917aab7e970a30d1af565b3ca276cef8ab1a60469f0d8100"}, "downloads": -1, "filename": "texttable-1.2.1.tar.gz", "has_sig": false, "md5_digest": "7761da214368903c2409c13f1280cffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2018-01-03T18:07:36", "upload_time_iso_8601": "2018-01-03T18:07:36.015693Z", "url": "https://files.pythonhosted.org/packages/ba/16/ac997890d27d6a78e4bcb379ecd9ce105a0d923f4fefff2eb0c489697da0/texttable-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "0e11fd4f4cb5608660a6634edefe9c9c", "sha256": "5edd1f7bfb8ea5308b60448c098fcf9f85bdaa4893a9a5efcd6c57464c1ee6ac"}, "downloads": -1, "filename": "texttable-1.3.0.tar.gz", "has_sig": false, "md5_digest": "0e11fd4f4cb5608660a6634edefe9c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12052, "upload_time": "2018-06-11T19:22:25", "upload_time_iso_8601": "2018-06-11T19:22:25.815585Z", "url": "https://files.pythonhosted.org/packages/ea/38/5ea31382df7b045156d3e021e8f60c1fbb71a907dec4979109e59df11df4/texttable-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "c051c84d90d16b69e111dbf604d082cf", "sha256": "0f75f5838b775bddc19f72c5bf50eb74be3815eb505ed3084e4666ce2e6c3259"}, "downloads": -1, "filename": "texttable-1.3.1.tar.gz", "has_sig": false, "md5_digest": "c051c84d90d16b69e111dbf604d082cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12234, "upload_time": "2018-06-12T13:46:05", "upload_time_iso_8601": "2018-06-12T13:46:05.031669Z", "url": "https://files.pythonhosted.org/packages/d2/8f/1b1b4d07c0bf86a05f7b70631a447224e3db9d662a0f3f4fb54e12df288f/texttable-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "bb272bf4133909e18971b56fb513e5b4", "sha256": "95e8cfe85f8395a7eacdfbc8f09d885b9ef3a6ac6ead0364ea721de1127aa36b"}, "downloads": -1, "filename": "texttable-1.4.0.tar.gz", "has_sig": false, "md5_digest": "bb272bf4133909e18971b56fb513e5b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12274, "upload_time": "2018-06-22T14:25:11", "upload_time_iso_8601": "2018-06-22T14:25:11.851642Z", "url": "https://files.pythonhosted.org/packages/4d/35/88cd3b6c9cfe79f98fa52a57843fc6501988b9da13dce1e6a27e1d70d357/texttable-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "2a3c95283bf214619262734d0c849c18", "sha256": "1ba399c103c825202659c4d638946c15ffc565ad7846ee0672964786f437fb57"}, "downloads": -1, "filename": "texttable-1.5.0.tar.gz", "has_sig": false, "md5_digest": "2a3c95283bf214619262734d0c849c18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9199, "upload_time": "2018-11-02T14:53:46", "upload_time_iso_8601": "2018-11-02T14:53:46.405731Z", "url": "https://files.pythonhosted.org/packages/bd/a8/45aa1c64f0aea4967766d9b46be3c0b03b096d8fb8c3cfe119884cfeed5e/texttable-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "1058d2216eb92575a01dc52728235eb8", "sha256": "624b9d6a94255b3d168b22f0808b78eca8b765d8b14c095e530641b8655c7dfc"}, "downloads": -1, "filename": "texttable-1.6.0.tar.gz", "has_sig": false, "md5_digest": "1058d2216eb92575a01dc52728235eb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9106, "upload_time": "2019-01-17T12:27:26", "upload_time_iso_8601": "2019-01-17T12:27:26.453499Z", "url": "https://files.pythonhosted.org/packages/2e/e4/101fddb4f58143b810283f0ee438596eb241c0135cc9691f7d43794dbf90/texttable-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "7bd4cd9b9120ab4b7b217ccc898d530e", "sha256": "2b60a5304ccfbeac80ffae7350d7c2f5d7a24e9aab5036d0f82489746419d9b2"}, "downloads": -1, "filename": "texttable-1.6.1.tar.gz", "has_sig": false, "md5_digest": "7bd4cd9b9120ab4b7b217ccc898d530e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14000, "upload_time": "2019-02-15T10:25:23", "upload_time_iso_8601": "2019-02-15T10:25:23.680775Z", "url": "https://files.pythonhosted.org/packages/04/c6/7d2514d76fefba65bfe2fa4e1082c3adea9edef5a149a3027b8f2d5ee0eb/texttable-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "6597d72e9057b41f311aa4a9349ac045", "sha256": "7dc282a5b22564fe0fdc1c771382d5dd9a54742047c61558e071c8cd595add86"}, "downloads": -1, "filename": "texttable-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6597d72e9057b41f311aa4a9349ac045", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10652, "upload_time": "2020-01-15T08:41:14", "upload_time_iso_8601": "2020-01-15T08:41:14.543617Z", "url": "https://files.pythonhosted.org/packages/ec/b1/8a1c659ce288bf771d5b1c7cae318ada466f73bd0e16df8d86f27a2a3ee7/texttable-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "763141f0bdf598cdc5cf780ed4d2eb94", "sha256": "eff3703781fbc7750125f50e10f001195174f13825a92a45e9403037d539b4f4"}, "downloads": -1, "filename": "texttable-1.6.2.tar.gz", "has_sig": false, "md5_digest": "763141f0bdf598cdc5cf780ed4d2eb94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13176, "upload_time": "2019-07-01T09:48:24", "upload_time_iso_8601": "2019-07-01T09:48:24.382737Z", "url": "https://files.pythonhosted.org/packages/82/a8/60df592e3a100a1f83928795aca210414d72cebdc6e4e0c95a6d8ac632fe/texttable-1.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6597d72e9057b41f311aa4a9349ac045", "sha256": "7dc282a5b22564fe0fdc1c771382d5dd9a54742047c61558e071c8cd595add86"}, "downloads": -1, "filename": "texttable-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6597d72e9057b41f311aa4a9349ac045", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10652, "upload_time": "2020-01-15T08:41:14", "upload_time_iso_8601": "2020-01-15T08:41:14.543617Z", "url": "https://files.pythonhosted.org/packages/ec/b1/8a1c659ce288bf771d5b1c7cae318ada466f73bd0e16df8d86f27a2a3ee7/texttable-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "763141f0bdf598cdc5cf780ed4d2eb94", "sha256": "eff3703781fbc7750125f50e10f001195174f13825a92a45e9403037d539b4f4"}, "downloads": -1, "filename": "texttable-1.6.2.tar.gz", "has_sig": false, "md5_digest": "763141f0bdf598cdc5cf780ed4d2eb94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13176, "upload_time": "2019-07-01T09:48:24", "upload_time_iso_8601": "2019-07-01T09:48:24.382737Z", "url": "https://files.pythonhosted.org/packages/82/a8/60df592e3a100a1f83928795aca210414d72cebdc6e4e0c95a6d8ac632fe/texttable-1.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}