{"info": {"author": "Andreas Jung", "author_email": "info@zopyx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Zope2", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Logging", "Topic :: System :: Monitoring"], "description": ".. contents:: **Table of contents**\n\nIntroduction\n============\n\n``haufe.requestmonitoring`` implements a detailed request logging functionality\non top of the publication events as introduced with Zope 2.12.\n\n\nRequirements\n============\n\n* Zope 2.12.0b2 or higher\n* Currently tested on Zope 2.13.21\n\nYou can use this with older Zope releases (2.10.x) but you must also include `ZPublisherEventsBackport`__.\n\n__ http://pypi.python.org/pypi/ZPublisherEventsBackport\n\nFeatures\n========\n\nFine resolution request logging\n-------------------------------\n\nUsed as base for ``ztop`` and ``zanalyse``, i.e. helps to determine the Zope load,\ndetect long running requests and to analyse the causes of restarts.\n\n\nThe implementation in this module registers subscribers for ``IPubStart`` and\n``IPubSuccess/IPubFailure``.  For each of these events, a log entry of the form::\n\n   timestamp status request_time type request_id request_info\n\nis written.\n\nFields\n++++++\n\n- *timestamp* is the current time in the format ``%y%m%dT%H%M%S``.\n\n- *status* is ``0`` for ``IPubStart`` events, ``390`` for requests that will\n  be retried and the result of ``IStatus`` applied to the response otherwise.\n\n- *request_time* is ``0`` for ``IPubStart`` events. Otherwise, it will be\n  the request time in seconds.\n\n- *type* is ``+`` for ``IPubStart`` and ``-`` otherwise.\n\n- *request_id* is the (process) unique request id.\n\n- *request_info* is ``IInfo`` applied to the request.\n\n\nIn addition, a log entry with ``request_info == restarted`` is written when this\nlogging is activated. Apart from ``request_info`` and ``timestamp`` all other\nfields are ``0``. It indicates (obviously) that the server has been restarted.\nFollowing requests get request ids starting with ``1``.\n\nTo activate this logging, both ``timelogging.zcml`` must be activated (on by\ndefault) and a ``product-config`` section with name ``timelogging`` must be\ndefined containing the key ``filebase``.  It specifies the basename of the\nlogfile; ``.<date>`` will be appended to this base.  Then, ``ITicket``,\n``IInfo`` adapters must be defined (e.g.  the one from ``info``).  An\n``IStatus`` adapter may be defined for response.\n\nExample::\n\n  <product-config timelogging>\n  filebase /path/to/request-logs/instance-foo\n  </product-config>\n\n\nSuccess request logging\n-----------------------\n\nThis logging writes two files ``<base>_good.<date>`` and ``<base>_bad.<date>``.\nFor each request, a character is written to either the good or the bad logfile,\ndepending on whether the request was successful or unsuccessful. This means,\nthat only the file size matters for these logfiles.\n\nUsually, response codes >= 500 are considered as unsuccessful requests.  You\ncan register an ``ISuccessFull`` adapter, when you need a different\nclassification.\n\nTo activate this logging, both ``successlogging.zcml`` must be activated (on by\ndefault) and a ``product-config`` section with name ``successlogging`` must be\ndefined containing the key ``filebase``.  It specifies the basename of the\nlogfiles (represented as ``<base>`` above).\n\nExample::\n\n  <product-config successlogging>\n  filebase /path/to/request-logs/successful-foo\n  </product-config>\n\n\nMonitoring long running requests\n--------------------------------\n\n``haufe.requestmonitoring`` allows you to monitor long-running request. The\nfollowing configuration within your ``zope.conf`` configuration file will\ninstall the DumpTracer and check after the ``period`` time passed for requests\nrunning longer than ``time``.\n\nTo activate this logging, both ``monitor.zcml`` must be activated (off by\ndefault) and the requestmonitor configuration section must be present::\n\n    zope-conf-additional =\n        %import haufe.requestmonitoring\n        <requestmonitor requestmonitor>\n            # default is 1m\n            period 10s\n            # default is 1\n            verbosity 2\n            <monitorhandler dumper>\n                factory haufe.requestmonitoring.DumpTraceback.factory\n                # 0 --> no repetition\n                repeat -1\n                time 10s\n            </monitorhandler>\n        </requestmonitor>\n\n\nA typical dump trace looks like this (it shows you the URL and the current \nstacktrace)::\n\n\n    2009-08-11 14:29:09 INFO Zope Ready to handle requests\n    2009-08-11 14:29:09 INFO RequestMonitor started\n    2009-08-11 14:29:14 INFO RequestMonitor monitoring 1 requests\n    2009-08-11 14:29:19 INFO RequestMonitor monitoring 1 requests\n    2009-08-11 14:29:24 INFO RequestMonitor monitoring 1 requests\n    2009-08-11 14:29:24 WARNING RequestMonitor.DumpTrace Long running request\n    Request 1 \"/foo\" running in thread -497947728 since 14.9961140156s\n    Python call stack (innermost first)\n    Module /home/junga/sandboxes/review/parts/instance/Extensions/foo.py, line 4, in foo\n    Module Products.ExternalMethod.ExternalMethod, line 231, in __call__\n    - __traceback_info__: ((), {}, None)\n    Module ZPublisher.Publish, line 46, in call_object\n    Module ZPublisher.mapply, line 88, in mapply\n    Module ZPublisher.Publish, line 126, in publish\n    Module ZPublisher.Publish, line 225, in publish_module_standard\n    Module ZPublisher.Publish, line 424, in publish_module\n    Module Products.ZopeProfiler.ZopeProfiler, line 353, in _profilePublishModule\n    Module Products.ZopeProfiler.MonkeyPatcher, line 35, in __call__\n    Module ZServer.PubCore.ZServerPublisher, line 28, in __init__\n\nThe log line \"*RequestMonitor monitoring X requests*\" simply says that a request\nis under monitor and sometimes you get useless noise in the log file.\n\nYou can play with the ``verbosity`` option: put the value to *0* for disable\nthe log line.\nDefault value (*1*) will display the log line every time one or more requests\nare under monitor.\nA value of *2* is more verbose, displaying also info about requests URLs.\n\nDump trace on pdb\n+++++++++++++++++\n\nTraceback dump can became quickly a nightmare if you put a Python debug line on your source code\nand then you want to test it running Zope.\n\nIn that case you can disable traceback dump when you are executing the debugger. Simply add the\n``DISABLE_HAUFE_MONITORING_ON_PDB`` environment variable::\n\n    environment-vars =\n        ...\n        DISABLE_HAUFE_MONITORING_ON_PDB True\n\nInstallation\n------------\n\nAdd ``haufe.requestmonitoring`` to both ``eggs`` and ``zcml`` option of\nyour buildout.cfg file.\n\nAuthor\n======\n\n- original author: Dieter Maurer \n- current maintainer: Andreas Jung, info@zopyx.com\n\n\nLicense\n=======\n\n``haufe.requestmonitoring`` is published under the Zope Public License V 2.1\n(ZPL). See LICENSE.txt.\n\n\n\n\nChangelog\n=========\n\n0.5.1 (2018-04-03)\n------------------\n\n- Fix logging format.\n  Refs: #9\n  [mamico]\n\n\n0.5.0 (2016-09-29)\n------------------\n\n- For all logging output, use unicode and string ``format`` instead of string substitution to avoid possible encoding errors.\n  Refs: #5.\n  [thet]\n\n- Allow the ``monitorhandler`` define it's zLOG loglevel.\n  This makes possible to define the ``ERROR`` level instead of ``WARNING`` for long running requests and get notified by a tool like Sentry, when it's configured to notice ``ERROR`` level logs.\n  [thet]\n\n- Remove Logger.py, which is a simpler version of the \"Long Request Logger\" in DumpTraceback.py and isn't used nor documented.\n  [thet]\n\n- Move ``docs/HISTORY.txt`` to ``CHANGES.rst``.\n  [thet]\n\n- PEP8 compatibility\n\n\n0.4.0 (2013-09-20)\n------------------\n\n- Added retro-compatibility with old versions of Zope without bein forced to manually patch Zope.\n  [giacomos]\n\n- You can now add a ``DISABLE_HAUFE_MONITORING_ON_PDB`` envvar to stop dumping traceback when on Python ``pdb``.\n  [keul]\n\n\n0.3.0 (2012-10-16)\n------------------\n\n- Do not use deprecated ``threadframe`` dependency anymore on recent Python versions.\n  [keul]\n\n- Fixed egg dependencies for Zope 2.13.\n  [keul]\n\n- Added the ``verbosity`` configuration option for the logger.\n  [keul]\n\n\n0.2.3 - (2009/08/11)\n--------------------\n\n- Updated documentation.\n\n\n0.2.2 - (2009/07/20)\n--------------------\n\n- Minor cleanup.\n\n- Minor documentation cleanup.\n\n\n0.2.1 - (2009/05/28)\n--------------------\n\n- Configure 'successlogging' by default.\n\n- Slightly updated documentation.\n\n\n0.2.0 - (2009/05/12)\n--------------------\n\n- Initial release.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/collective/haufe.requestmonitoring", "keywords": "zope long-running-request monitor logging", "license": "ZPL", "maintainer": "", "maintainer_email": "", "name": "haufe.requestmonitoring", "package_url": "https://pypi.org/project/haufe.requestmonitoring/", "platform": "", "project_url": "https://pypi.org/project/haufe.requestmonitoring/", "project_urls": {"Homepage": "http://github.com/collective/haufe.requestmonitoring"}, "release_url": "https://pypi.org/project/haufe.requestmonitoring/0.5.1/", "requires_dist": null, "requires_python": "", "summary": "Zope 2 request monitoring", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p><strong>Table of contents</strong></p>\n<ul>\n<li><a href=\"#introduction\" id=\"id10\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#requirements\" id=\"id11\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#features\" id=\"id12\" rel=\"nofollow\">Features</a><ul>\n<li><a href=\"#fine-resolution-request-logging\" id=\"id13\" rel=\"nofollow\">Fine resolution request logging</a><ul>\n<li><a href=\"#fields\" id=\"id14\" rel=\"nofollow\">Fields</a></li>\n</ul>\n</li>\n<li><a href=\"#success-request-logging\" id=\"id15\" rel=\"nofollow\">Success request logging</a></li>\n<li><a href=\"#monitoring-long-running-requests\" id=\"id16\" rel=\"nofollow\">Monitoring long running requests</a><ul>\n<li><a href=\"#dump-trace-on-pdb\" id=\"id17\" rel=\"nofollow\">Dump trace on pdb</a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" id=\"id18\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#author\" id=\"id19\" rel=\"nofollow\">Author</a></li>\n<li><a href=\"#license\" id=\"id20\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#changelog\" id=\"id21\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id2\" id=\"id22\" rel=\"nofollow\">0.5.1 (2018-04-03)</a></li>\n<li><a href=\"#id3\" id=\"id23\" rel=\"nofollow\">0.5.0 (2016-09-29)</a></li>\n<li><a href=\"#id4\" id=\"id24\" rel=\"nofollow\">0.4.0 (2013-09-20)</a></li>\n<li><a href=\"#id5\" id=\"id25\" rel=\"nofollow\">0.3.0 (2012-10-16)</a></li>\n<li><a href=\"#id6\" id=\"id26\" rel=\"nofollow\">0.2.3 - (2009/08/11)</a></li>\n<li><a href=\"#id7\" id=\"id27\" rel=\"nofollow\">0.2.2 - (2009/07/20)</a></li>\n<li><a href=\"#id8\" id=\"id28\" rel=\"nofollow\">0.2.1 - (2009/05/28)</a></li>\n<li><a href=\"#id9\" id=\"id29\" rel=\"nofollow\">0.2.0 - (2009/05/12)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Introduction</a></h2>\n<p><tt>haufe.requestmonitoring</tt> implements a detailed request logging functionality\non top of the publication events as introduced with Zope 2.12.</p>\n</div>\n<div id=\"requirements\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Requirements</a></h2>\n<ul>\n<li>Zope 2.12.0b2 or higher</li>\n<li>Currently tested on Zope 2.13.21</li>\n</ul>\n<p>You can use this with older Zope releases (2.10.x) but you must also include <a href=\"http://pypi.python.org/pypi/ZPublisherEventsBackport\" rel=\"nofollow\">ZPublisherEventsBackport</a>.</p>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Features</a></h2>\n<div id=\"fine-resolution-request-logging\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Fine resolution request logging</a></h3>\n<p>Used as base for <tt>ztop</tt> and <tt>zanalyse</tt>, i.e. helps to determine the Zope load,\ndetect long running requests and to analyse the causes of restarts.</p>\n<p>The implementation in this module registers subscribers for <tt>IPubStart</tt> and\n<tt>IPubSuccess/IPubFailure</tt>.  For each of these events, a log entry of the form:</p>\n<pre>timestamp status request_time type request_id request_info\n</pre>\n<p>is written.</p>\n<div id=\"fields\">\n<h4><a href=\"#id14\" rel=\"nofollow\">Fields</a></h4>\n<ul>\n<li><em>timestamp</em> is the current time in the format <tt>%y%m%dT%H%M%S</tt>.</li>\n<li><em>status</em> is <tt>0</tt> for <tt>IPubStart</tt> events, <tt>390</tt> for requests that will\nbe retried and the result of <tt>IStatus</tt> applied to the response otherwise.</li>\n<li><em>request_time</em> is <tt>0</tt> for <tt>IPubStart</tt> events. Otherwise, it will be\nthe request time in seconds.</li>\n<li><em>type</em> is <tt>+</tt> for <tt>IPubStart</tt> and <tt>-</tt> otherwise.</li>\n<li><em>request_id</em> is the (process) unique request id.</li>\n<li><em>request_info</em> is <tt>IInfo</tt> applied to the request.</li>\n</ul>\n<p>In addition, a log entry with <tt>request_info == restarted</tt> is written when this\nlogging is activated. Apart from <tt>request_info</tt> and <tt>timestamp</tt> all other\nfields are <tt>0</tt>. It indicates (obviously) that the server has been restarted.\nFollowing requests get request ids starting with <tt>1</tt>.</p>\n<p>To activate this logging, both <tt>timelogging.zcml</tt> must be activated (on by\ndefault) and a <tt><span class=\"pre\">product-config</span></tt> section with name <tt>timelogging</tt> must be\ndefined containing the key <tt>filebase</tt>.  It specifies the basename of the\nlogfile; <tt>.&lt;date&gt;</tt> will be appended to this base.  Then, <tt>ITicket</tt>,\n<tt>IInfo</tt> adapters must be defined (e.g.  the one from <tt>info</tt>).  An\n<tt>IStatus</tt> adapter may be defined for response.</p>\n<p>Example:</p>\n<pre>&lt;product-config timelogging&gt;\nfilebase /path/to/request-logs/instance-foo\n&lt;/product-config&gt;\n</pre>\n</div>\n</div>\n<div id=\"success-request-logging\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Success request logging</a></h3>\n<p>This logging writes two files <tt><span class=\"pre\">&lt;base&gt;_good.&lt;date&gt;</span></tt> and <tt><span class=\"pre\">&lt;base&gt;_bad.&lt;date&gt;</span></tt>.\nFor each request, a character is written to either the good or the bad logfile,\ndepending on whether the request was successful or unsuccessful. This means,\nthat only the file size matters for these logfiles.</p>\n<p>Usually, response codes &gt;= 500 are considered as unsuccessful requests.  You\ncan register an <tt>ISuccessFull</tt> adapter, when you need a different\nclassification.</p>\n<p>To activate this logging, both <tt>successlogging.zcml</tt> must be activated (on by\ndefault) and a <tt><span class=\"pre\">product-config</span></tt> section with name <tt>successlogging</tt> must be\ndefined containing the key <tt>filebase</tt>.  It specifies the basename of the\nlogfiles (represented as <tt>&lt;base&gt;</tt> above).</p>\n<p>Example:</p>\n<pre>&lt;product-config successlogging&gt;\nfilebase /path/to/request-logs/successful-foo\n&lt;/product-config&gt;\n</pre>\n</div>\n<div id=\"monitoring-long-running-requests\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Monitoring long running requests</a></h3>\n<p><tt>haufe.requestmonitoring</tt> allows you to monitor long-running request. The\nfollowing configuration within your <tt>zope.conf</tt> configuration file will\ninstall the DumpTracer and check after the <tt>period</tt> time passed for requests\nrunning longer than <tt>time</tt>.</p>\n<p>To activate this logging, both <tt>monitor.zcml</tt> must be activated (off by\ndefault) and the requestmonitor configuration section must be present:</p>\n<pre>zope-conf-additional =\n    %import haufe.requestmonitoring\n    &lt;requestmonitor requestmonitor&gt;\n        # default is 1m\n        period 10s\n        # default is 1\n        verbosity 2\n        &lt;monitorhandler dumper&gt;\n            factory haufe.requestmonitoring.DumpTraceback.factory\n            # 0 --&gt; no repetition\n            repeat -1\n            time 10s\n        &lt;/monitorhandler&gt;\n    &lt;/requestmonitor&gt;\n</pre>\n<p>A typical dump trace looks like this (it shows you the URL and the current\nstacktrace):</p>\n<pre>2009-08-11 14:29:09 INFO Zope Ready to handle requests\n2009-08-11 14:29:09 INFO RequestMonitor started\n2009-08-11 14:29:14 INFO RequestMonitor monitoring 1 requests\n2009-08-11 14:29:19 INFO RequestMonitor monitoring 1 requests\n2009-08-11 14:29:24 INFO RequestMonitor monitoring 1 requests\n2009-08-11 14:29:24 WARNING RequestMonitor.DumpTrace Long running request\nRequest 1 \"/foo\" running in thread -497947728 since 14.9961140156s\nPython call stack (innermost first)\nModule /home/junga/sandboxes/review/parts/instance/Extensions/foo.py, line 4, in foo\nModule Products.ExternalMethod.ExternalMethod, line 231, in __call__\n- __traceback_info__: ((), {}, None)\nModule ZPublisher.Publish, line 46, in call_object\nModule ZPublisher.mapply, line 88, in mapply\nModule ZPublisher.Publish, line 126, in publish\nModule ZPublisher.Publish, line 225, in publish_module_standard\nModule ZPublisher.Publish, line 424, in publish_module\nModule Products.ZopeProfiler.ZopeProfiler, line 353, in _profilePublishModule\nModule Products.ZopeProfiler.MonkeyPatcher, line 35, in __call__\nModule ZServer.PubCore.ZServerPublisher, line 28, in __init__\n</pre>\n<p>The log line \u201c<em>RequestMonitor monitoring X requests</em>\u201d simply says that a request\nis under monitor and sometimes you get useless noise in the log file.</p>\n<p>You can play with the <tt>verbosity</tt> option: put the value to <em>0</em> for disable\nthe log line.\nDefault value (<em>1</em>) will display the log line every time one or more requests\nare under monitor.\nA value of <em>2</em> is more verbose, displaying also info about requests URLs.</p>\n<div id=\"dump-trace-on-pdb\">\n<h4><a href=\"#id17\" rel=\"nofollow\">Dump trace on pdb</a></h4>\n<p>Traceback dump can became quickly a nightmare if you put a Python debug line on your source code\nand then you want to test it running Zope.</p>\n<p>In that case you can disable traceback dump when you are executing the debugger. Simply add the\n<tt>DISABLE_HAUFE_MONITORING_ON_PDB</tt> environment variable:</p>\n<pre>environment-vars =\n    ...\n    DISABLE_HAUFE_MONITORING_ON_PDB True\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id18\" rel=\"nofollow\">Installation</a></h3>\n<p>Add <tt>haufe.requestmonitoring</tt> to both <tt>eggs</tt> and <tt>zcml</tt> option of\nyour buildout.cfg file.</p>\n</div>\n</div>\n<div id=\"author\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Author</a></h2>\n<ul>\n<li>original author: Dieter Maurer</li>\n<li>current maintainer: Andreas Jung, <a href=\"mailto:info%40zopyx.com\">info<span>@</span>zopyx<span>.</span>com</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id20\" rel=\"nofollow\">License</a></h2>\n<p><tt>haufe.requestmonitoring</tt> is published under the Zope Public License V 2.1\n(ZPL). See LICENSE.txt.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id21\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id2\">\n<h3><a href=\"#id22\" rel=\"nofollow\">0.5.1 (2018-04-03)</a></h3>\n<ul>\n<li>Fix logging format.\nRefs: #9\n[mamico]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id23\" rel=\"nofollow\">0.5.0 (2016-09-29)</a></h3>\n<ul>\n<li>For all logging output, use unicode and string <tt>format</tt> instead of string substitution to avoid possible encoding errors.\nRefs: #5.\n[thet]</li>\n<li>Allow the <tt>monitorhandler</tt> define it\u2019s zLOG loglevel.\nThis makes possible to define the <tt>ERROR</tt> level instead of <tt>WARNING</tt> for long running requests and get notified by a tool like Sentry, when it\u2019s configured to notice <tt>ERROR</tt> level logs.\n[thet]</li>\n<li>Remove Logger.py, which is a simpler version of the \u201cLong Request Logger\u201d in DumpTraceback.py and isn\u2019t used nor documented.\n[thet]</li>\n<li>Move <tt>docs/HISTORY.txt</tt> to <tt>CHANGES.rst</tt>.\n[thet]</li>\n<li>PEP8 compatibility</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id24\" rel=\"nofollow\">0.4.0 (2013-09-20)</a></h3>\n<ul>\n<li>Added retro-compatibility with old versions of Zope without bein forced to manually patch Zope.\n[giacomos]</li>\n<li>You can now add a <tt>DISABLE_HAUFE_MONITORING_ON_PDB</tt> envvar to stop dumping traceback when on Python <tt>pdb</tt>.\n[keul]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id25\" rel=\"nofollow\">0.3.0 (2012-10-16)</a></h3>\n<ul>\n<li>Do not use deprecated <tt>threadframe</tt> dependency anymore on recent Python versions.\n[keul]</li>\n<li>Fixed egg dependencies for Zope 2.13.\n[keul]</li>\n<li>Added the <tt>verbosity</tt> configuration option for the logger.\n[keul]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id26\" rel=\"nofollow\">0.2.3 - (2009/08/11)</a></h3>\n<ul>\n<li>Updated documentation.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id27\" rel=\"nofollow\">0.2.2 - (2009/07/20)</a></h3>\n<ul>\n<li>Minor cleanup.</li>\n<li>Minor documentation cleanup.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id28\" rel=\"nofollow\">0.2.1 - (2009/05/28)</a></h3>\n<ul>\n<li>Configure \u2018successlogging\u2019 by default.</li>\n<li>Slightly updated documentation.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id29\" rel=\"nofollow\">0.2.0 - (2009/05/12)</a></h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3728758, "releases": {"0.1.0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "929904100f118860270aca14a00d781e", "sha256": "9c8b43938ef1785173e4ed58dd697ed6dfbe7a0d616273014711ab27b76a828e"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.2.0.tar.gz", "has_sig": false, "md5_digest": "929904100f118860270aca14a00d781e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11508, "upload_time": "2009-05-12T11:25:39", "upload_time_iso_8601": "2009-05-12T11:25:39.875378Z", "url": "https://files.pythonhosted.org/packages/d6/fc/b24b156a70fec253a46efd6e3d6a4e6c898148926ed2f9f8978168cc297f/haufe.requestmonitoring-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "42c1c3c39a748af226fe3c1c53786fb4", "sha256": "58efc2e427f19881b120ef2743f3e027e20aad7cfc484993a07bd02bb31e89de"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.2.1.tar.gz", "has_sig": false, "md5_digest": "42c1c3c39a748af226fe3c1c53786fb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11085, "upload_time": "2009-05-28T19:54:49", "upload_time_iso_8601": "2009-05-28T19:54:49.696227Z", "url": "https://files.pythonhosted.org/packages/57/c2/320206082e512a77c8e4a8b8a99895b6795fe22bd823c2774f550a3e309f/haufe.requestmonitoring-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "93e4235783a50406fe64813d0d7d93c9", "sha256": "a5b4adb4102b4615bdfd1d934441c2193c9005232b97934a923121e2f5e20189"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.2.2.tar.gz", "has_sig": false, "md5_digest": "93e4235783a50406fe64813d0d7d93c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11184, "upload_time": "2009-07-20T15:30:45", "upload_time_iso_8601": "2009-07-20T15:30:45.791649Z", "url": "https://files.pythonhosted.org/packages/ad/8a/413b8fed63f5e8bdcbb83ec6481468aefadd944e713a31fc195c6937ac90/haufe.requestmonitoring-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "17ee9240cdcec00a11ea148aee9ad6b7", "sha256": "08990053c5352a6741aadf97544000b833bc32fb1c162f7ff43c2db5d36e3a28"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.2.3.tar.gz", "has_sig": false, "md5_digest": "17ee9240cdcec00a11ea148aee9ad6b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13456, "upload_time": "2009-08-11T14:31:44", "upload_time_iso_8601": "2009-08-11T14:31:44.183252Z", "url": "https://files.pythonhosted.org/packages/ac/07/1ab3f19b19c6e449e903f5aaab3dd1cca24ee030e10320a8c27787173185/haufe.requestmonitoring-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4ef92a4255bdfbba414ba36985f5edf3", "sha256": "f092548b31851b486e858ddbe258fce04197b777d0193c0b5ae3374ca3bfdf65"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.3.0.zip", "has_sig": false, "md5_digest": "4ef92a4255bdfbba414ba36985f5edf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25238, "upload_time": "2012-10-16T12:56:46", "upload_time_iso_8601": "2012-10-16T12:56:46.464555Z", "url": "https://files.pythonhosted.org/packages/9f/f4/0ff09a48ee2fa0c14fdde4564dfae8fa4972a85e4a232513be5fbaff190e/haufe.requestmonitoring-0.3.0.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "187996f1e0ab99d7c5692bcbe1cff8ef", "sha256": "52f9c394ac0acca519e8b6e2d4e82a3da98d005b8915248d5d320294ab0e4c0b"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.4.0.zip", "has_sig": false, "md5_digest": "187996f1e0ab99d7c5692bcbe1cff8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26852, "upload_time": "2013-09-20T15:53:36", "upload_time_iso_8601": "2013-09-20T15:53:36.454688Z", "url": "https://files.pythonhosted.org/packages/13/c5/b1d708f8d96a7d54d2e0f9812cc5a32bd90a772d9b4a98e4217df0e7abb7/haufe.requestmonitoring-0.4.0.zip", "yanked": false}], "0.4.0.1": [{"comment_text": "", "digests": {"md5": "fbd515807d871a941bd54b2034b23059", "sha256": "c65017e5e94b3bd34d1ab04de66e39b17532d6ae799ac949db557703ca580f74"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.4.0.1.zip", "has_sig": false, "md5_digest": "fbd515807d871a941bd54b2034b23059", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28289, "upload_time": "2015-01-13T07:33:44", "upload_time_iso_8601": "2015-01-13T07:33:44.032596Z", "url": "https://files.pythonhosted.org/packages/a4/7e/2577d39999175bde6c2a4ab9444b66e9a227ca3a86c7e126c7e5fd027329/haufe.requestmonitoring-0.4.0.1.zip", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "61be36a1e9ad1e357d6b9077b957a699", "sha256": "fed0b050033ea39ea680ed535235e50c50be3aa759323fa689e09c93445790f5"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.5.0.tar.gz", "has_sig": false, "md5_digest": "61be36a1e9ad1e357d6b9077b957a699", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13971, "upload_time": "2016-09-29T12:54:15", "upload_time_iso_8601": "2016-09-29T12:54:15.254117Z", "url": "https://files.pythonhosted.org/packages/c7/ce/e649fa6d1f414784bdd4899055224c54fc4d2a4352a9bad5fa1a42cd99a3/haufe.requestmonitoring-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "b08c5e89dc1287e21b0f3c736f06c864", "sha256": "622a6daf60348e2f825c0b700daec2254c4ab56fb6315864c6a324e9ef2557c4"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b08c5e89dc1287e21b0f3c736f06c864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15771, "upload_time": "2018-04-03T08:25:45", "upload_time_iso_8601": "2018-04-03T08:25:45.765877Z", "url": "https://files.pythonhosted.org/packages/e0/05/472a704f6ef35b473f7a10187f472f5a3cc6c12f18b22c3de71dc3e263c4/haufe.requestmonitoring-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b08c5e89dc1287e21b0f3c736f06c864", "sha256": "622a6daf60348e2f825c0b700daec2254c4ab56fb6315864c6a324e9ef2557c4"}, "downloads": -1, "filename": "haufe.requestmonitoring-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b08c5e89dc1287e21b0f3c736f06c864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15771, "upload_time": "2018-04-03T08:25:45", "upload_time_iso_8601": "2018-04-03T08:25:45.765877Z", "url": "https://files.pythonhosted.org/packages/e0/05/472a704f6ef35b473f7a10187f472f5a3cc6c12f18b22c3de71dc3e263c4/haufe.requestmonitoring-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:15 2020"}