{"info": {"author": "Ian Costanzo", "author_email": "ian@anon-solutions.ca", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "==============\nIndy Community\n==============\n\nIndy Community is a simple Django framework for building\nHyperledger Indy Agent enabled web applications.\nDetailed documentation is in the \"docs\" directory.\n\nPlease see https://github.com/AnonSolutions/django-indy-community for detailed docmentation\n\n\nQuick start\n-----------\n\nYou can find a basic Indy Community application here https://github.com/AnonSolutions/indy-community-demo\n\nTo add indy_community to your own django application:\n\n1. Copy the requirements.txt file into your application directory and install requirements\n\n2. Add \"indy_community\" to your INSTALLED_APPS setting like this:\n\n.. code-block:: python\n\n        INSTALLED_APPS = [\n            # this should go first\n            'indy_community.apps.IndyCoreConfig',\n            ...\n        ]\n\n3. Add the following Indy configuration settings (this is for a local install):\n\n.. code-block:: python\n\n        import platform\n\n        def file_ext():\n            if platform.system() == 'Linux':\n                return '.so'\n            elif platform.system() == 'Darwin':\n                return '.dylib'\n            elif platform.system() == 'Windows':\n                return '.dll'\n            else:\n                return '.so'\n\n        INDY_CONFIG = {\n            'storage_dll': 'libindystrgpostgres' + file_ext(),\n            'storage_entrypoint': 'postgresstorage_init',\n            'payment_dll': 'libnullpay' + file_ext(),\n            'payment_entrypoint': 'nullpay_init',\n            'wallet_config': {'id': '', 'storage_type': 'postgres_storage'},\n            'wallet_credentials': {'key': ''},\n            'storage_config': {'url': 'localhost:5432'},\n            'storage_credentials': {'account': 'postgres', 'password': 'mysecretpassword', 'admin_account': 'postgres', 'admin_password': 'mysecretpassword'},\n            'vcx_agency_url': 'http://localhost:8080',\n            'vcx_agency_did': 'VsKV7grR1BUE29mG2Fm2kX',\n            'vcx_agency_verkey': 'Hezce2UWMZ3wUhVkh2LfKSs8nDzWwzs2Win7EzNN3YaR',\n            'vcx_payment_method': 'null',\n            'vcx_enterprise_seed': '000000000000000000000000Trustee1',\n            'vcx_institution_seed': '00000000000000000000000000000000',\n            'vcx_genesis_path': '/tmp/atria-genesis.txt',\n            'register_dids': True,\n            'ledger_url': 'http://localhost:9000',\n        }\n\n4. Configure background tasks:\n\n.. code-block:: python\n\n        INSTALLED_APPS = [\n            ...\n            'background_task',\n            ...\n        ]\n\n        BACKGROUND_TASK_RUN_ASYNC = False\n        BACKGROUND_TASK_ASYNC_THREADS = 1\n        MAX_ATTEMPTS = 1\n\n5. Ensure your local templates are loaded first:\n\n.. code-block:: python\n\n        TEMPLATES = [\n            {\n                ...\n                'DIRS': [\n                    os.path.join(BASE_DIR, '<your app>/templates'),\n                ],\n                ...\n            },\n        ]\n\n6. Override User, Organization and Relationship models, if you have your own subclass of these models:\n\n.. code-block:: python\n\n        AUTH_USER_MODEL = 'indy_community.IndyUser'\n        INDY_ORGANIZATION_MODEL = 'indy_community.IndyOrganization'\n        INDY_ORG_RELATION_MODEL = 'indy_community.IndyOrgRelationship'\n\n7. Include the indy URLconf in your project urls.py like this:\n\n.. code-block:: python\n\n        path('indy/', include('indy_community.urls')),\n\n8. Ensure you have all pre-requisites running, as per django-indy-community docs\n\n9. Run `python manage.py migrate` to create the indy models.\n\n10. Run `python manage.py runserver` and connect to http://localhost:8000/indy`\n\nYou can customize the UI and add event handling for VCX Connection and Messaging events.  See the demos in\nhttps://github.com/AnonSolutions/indy-community-demo for examples of how to do this.\n\nView detailed documentation in the Docs directory (https://github.com/AnonSolutions/django-indy-community)\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AnonSolutions/django-indy-community", "keywords": "", "license": "996.ICU License", "maintainer": "", "maintainer_email": "", "name": "django-indy-community", "package_url": "https://pypi.org/project/django-indy-community/", "platform": "", "project_url": "https://pypi.org/project/django-indy-community/", "project_urls": {"Homepage": "https://github.com/AnonSolutions/django-indy-community"}, "release_url": "https://pypi.org/project/django-indy-community/0.1.14/", "requires_dist": null, "requires_python": "", "summary": "A simple Django package to build web-based Indy agent applications.", "version": "0.1.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Indy Community is a simple Django framework for building\nHyperledger Indy Agent enabled web applications.\nDetailed documentation is in the \u201cdocs\u201d directory.</p>\n<p>Please see <a href=\"https://github.com/AnonSolutions/django-indy-community\" rel=\"nofollow\">https://github.com/AnonSolutions/django-indy-community</a> for detailed docmentation</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>You can find a basic Indy Community application here <a href=\"https://github.com/AnonSolutions/indy-community-demo\" rel=\"nofollow\">https://github.com/AnonSolutions/indy-community-demo</a></p>\n<p>To add indy_community to your own django application:</p>\n<ol>\n<li>Copy the requirements.txt file into your application directory and install requirements</li>\n<li>Add \u201cindy_community\u201d to your INSTALLED_APPS setting like this:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># this should go first</span>\n    <span class=\"s1\">'indy_community.apps.IndyCoreConfig'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Add the following Indy configuration settings (this is for a local install):</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">file_ext</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">'Linux'</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'.so'</span>\n    <span class=\"k\">elif</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">'Darwin'</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'.dylib'</span>\n    <span class=\"k\">elif</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">'Windows'</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'.dll'</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'.so'</span>\n\n<span class=\"n\">INDY_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'storage_dll'</span><span class=\"p\">:</span> <span class=\"s1\">'libindystrgpostgres'</span> <span class=\"o\">+</span> <span class=\"n\">file_ext</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'storage_entrypoint'</span><span class=\"p\">:</span> <span class=\"s1\">'postgresstorage_init'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'payment_dll'</span><span class=\"p\">:</span> <span class=\"s1\">'libnullpay'</span> <span class=\"o\">+</span> <span class=\"n\">file_ext</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'payment_entrypoint'</span><span class=\"p\">:</span> <span class=\"s1\">'nullpay_init'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'wallet_config'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'storage_type'</span><span class=\"p\">:</span> <span class=\"s1\">'postgres_storage'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'wallet_credentials'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">},</span>\n    <span class=\"s1\">'storage_config'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'localhost:5432'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'storage_credentials'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'account'</span><span class=\"p\">:</span> <span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'mysecretpassword'</span><span class=\"p\">,</span> <span class=\"s1\">'admin_account'</span><span class=\"p\">:</span> <span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"s1\">'admin_password'</span><span class=\"p\">:</span> <span class=\"s1\">'mysecretpassword'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'vcx_agency_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://localhost:8080'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_agency_did'</span><span class=\"p\">:</span> <span class=\"s1\">'VsKV7grR1BUE29mG2Fm2kX'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_agency_verkey'</span><span class=\"p\">:</span> <span class=\"s1\">'Hezce2UWMZ3wUhVkh2LfKSs8nDzWwzs2Win7EzNN3YaR'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_payment_method'</span><span class=\"p\">:</span> <span class=\"s1\">'null'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_enterprise_seed'</span><span class=\"p\">:</span> <span class=\"s1\">'000000000000000000000000Trustee1'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_institution_seed'</span><span class=\"p\">:</span> <span class=\"s1\">'00000000000000000000000000000000'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vcx_genesis_path'</span><span class=\"p\">:</span> <span class=\"s1\">'/tmp/atria-genesis.txt'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'register_dids'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ledger_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://localhost:9000'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<ol>\n<li>Configure background tasks:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'background_task'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">BACKGROUND_TASK_RUN_ASYNC</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">BACKGROUND_TASK_ASYNC_THREADS</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">MAX_ATTEMPTS</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</pre>\n<ol>\n<li>Ensure your local templates are loaded first:</li>\n</ol>\n<pre><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'DIRS'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;your app&gt;/templates'</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Override User, Organization and Relationship models, if you have your own subclass of these models:</li>\n</ol>\n<pre><span class=\"n\">AUTH_USER_MODEL</span> <span class=\"o\">=</span> <span class=\"s1\">'indy_community.IndyUser'</span>\n<span class=\"n\">INDY_ORGANIZATION_MODEL</span> <span class=\"o\">=</span> <span class=\"s1\">'indy_community.IndyOrganization'</span>\n<span class=\"n\">INDY_ORG_RELATION_MODEL</span> <span class=\"o\">=</span> <span class=\"s1\">'indy_community.IndyOrgRelationship'</span>\n</pre>\n<ol>\n<li>Include the indy URLconf in your project urls.py like this:</li>\n</ol>\n<pre><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'indy/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'indy_community.urls'</span><span class=\"p\">)),</span>\n</pre>\n<ol>\n<li>Ensure you have all pre-requisites running, as per django-indy-community docs</li>\n<li>Run <cite>python manage.py migrate</cite> to create the indy models.</li>\n<li>Run <cite>python manage.py runserver</cite> and connect to <a href=\"http://localhost:8000\" rel=\"nofollow\">http://localhost:8000</a>/indy`</li>\n</ol>\n<p>You can customize the UI and add event handling for VCX Connection and Messaging events.  See the demos in\n<a href=\"https://github.com/AnonSolutions/indy-community-demo\" rel=\"nofollow\">https://github.com/AnonSolutions/indy-community-demo</a> for examples of how to do this.</p>\n<p>View detailed documentation in the Docs directory (<a href=\"https://github.com/AnonSolutions/django-indy-community\" rel=\"nofollow\">https://github.com/AnonSolutions/django-indy-community</a>)</p>\n</div>\n\n          </div>"}, "last_serial": 5347468, "releases": {"0.1.14": [{"comment_text": "", "digests": {"md5": "68b8f1fd0886f79bf3afb8c2f3188a3b", "sha256": "9845dd4c3e7fc43ee5644cb29894939436eb8d738141783439ed39602b8a0e66"}, "downloads": -1, "filename": "django_indy_community-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "68b8f1fd0886f79bf3afb8c2f3188a3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87888, "upload_time": "2019-06-01T22:21:41", "upload_time_iso_8601": "2019-06-01T22:21:41.995459Z", "url": "https://files.pythonhosted.org/packages/2d/2a/b2d97b4cd3d39e8b9fcd5b9d7a5334dcd9a24c5d72a01acc6e438fe6dc82/django_indy_community-0.1.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3c55a43d6a579c3a94cd61473aaa10", "sha256": "20feec1b493eaf850067a7b8ef8c04f286baf4020d1609d20bcb1c12180b0483"}, "downloads": -1, "filename": "django-indy-community-0.1.14.tar.gz", "has_sig": false, "md5_digest": "5d3c55a43d6a579c3a94cd61473aaa10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52659, "upload_time": "2019-06-01T22:21:43", "upload_time_iso_8601": "2019-06-01T22:21:43.749825Z", "url": "https://files.pythonhosted.org/packages/2f/6b/ab7e45471fdad95bdaa94210c21d5cd62a7e608f5ee3fcd648a9bf3d7fad/django-indy-community-0.1.14.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "68b8f1fd0886f79bf3afb8c2f3188a3b", "sha256": "9845dd4c3e7fc43ee5644cb29894939436eb8d738141783439ed39602b8a0e66"}, "downloads": -1, "filename": "django_indy_community-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "68b8f1fd0886f79bf3afb8c2f3188a3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87888, "upload_time": "2019-06-01T22:21:41", "upload_time_iso_8601": "2019-06-01T22:21:41.995459Z", "url": "https://files.pythonhosted.org/packages/2d/2a/b2d97b4cd3d39e8b9fcd5b9d7a5334dcd9a24c5d72a01acc6e438fe6dc82/django_indy_community-0.1.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3c55a43d6a579c3a94cd61473aaa10", "sha256": "20feec1b493eaf850067a7b8ef8c04f286baf4020d1609d20bcb1c12180b0483"}, "downloads": -1, "filename": "django-indy-community-0.1.14.tar.gz", "has_sig": false, "md5_digest": "5d3c55a43d6a579c3a94cd61473aaa10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52659, "upload_time": "2019-06-01T22:21:43", "upload_time_iso_8601": "2019-06-01T22:21:43.749825Z", "url": "https://files.pythonhosted.org/packages/2f/6b/ab7e45471fdad95bdaa94210c21d5cd62a7e608f5ee3fcd648a9bf3d7fad/django-indy-community-0.1.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:36 2020"}