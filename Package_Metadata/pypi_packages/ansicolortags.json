{"info": {"author": "Lilian Besson", "author_email": "naereen@crans.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: User Interfaces", "Topic :: Terminals", "Topic :: Utilities"], "description": "The ``ansicolortags`` module provides efficient and useful functions to use colours in a terminal application with Python 2 and 3, with a *HTML-tag* like style : ``<red>text<white>`` will print ``text`` in red.\n\nAll ANSI colors code are defined with this tag-like style.\n**This point is the main interest of this module,**\nbecause all others modules define function to print with some colours.\n\n`The complete documentation can be found here : <http://ansicolortags.readthedocs.io/>`_\n`<http://ansicolortags.readthedocs.io/>`_ !\n\nColours\n=======\n\nForegrounds\n-----------\n\nYou can choose one of the 8 basic ANSI colours: black, red, green, yellow, blue,\nmagenta, cyan, white.\nThe names beginning with a *lower-script* design **foreground** colours.\n\nFor example: ::\n\n    from ansicolortags import printc\n    printc('<reset>This is default. <red>This is red<yellow> and yellow in foreground now<reset>').\n\nBackgrounds\n-----------\n\nYou can choose one of the 8 basic ANSI colours: Black, Red, Green, Yellow, Blue,\nMagenta, Cyan, White.\nThe names beginning with an *upper-script* design **background** colors.\n\nFor example: ::\n\n\n    from ansicolortags import printc\n    printc('<Default>this is default. <Blue>this have a blue background<Black> and black in background now<reset>').\n\nOther tags\n----------\n\nThe following tags are also available:\n\n - ``b``, ``B`` : to turn on and off the *bold* mode,\n - ``u``, ``U`` : to turn on and off the *underline* mode,\n - ``neg``, ``Neg`` : to turn on and off the *reverse video* mode,\n - ``blink``, ``Blink`` : to turn on and off the *blink* mode,\n - ``el`` : to erase the current line,\n - ``bell`` : to make the terminal ring.\n\nShortcuts\n---------\n\nSome macros are also provided, like the tags ``<ERROR>``, ``<INFO>`` or ``<WARNING>``.\n\nAnd also ``<warning>`` and ``<question>``, which respectively give a colored ``!`` and ``?``.\n\nThe ``reset`` tag is a special tag to reinitialize all previously changed parameters.\n\nWriting to a file ?\n-------------------\n\nThis is possible with the ``writec`` function. For example: ::\n\n    import sys\n    from ansicolortags import writec\n    writec('<ERROR><u><red>The computer is going to explode!<reset>', fn=sys.stderr)\n    # sys.stderr.flush()\n    # this is useless : writec flush itself.\n\nAuto detection\n==============\nOf course, the colors are disabled if the output does not support them.\n\nIt works perfectly on any GNU/Linux (tested with Ubuntu 10+, Debian, Arch Linux) and Windows (with or without Cygwin),\nand should work fine one MAC OS X or on other UNIX-like.\n\nOther features\n==============\n\nOther functions\n---------------\n\nThere is also the ``xtitle()`` function, to change the title of the terminal.\nThis try to use the command-line tool ``xtitle``, and if it fails it tries to use an *ANSI code* to change the title.\n\nThere is also a ``notify()`` function to display a system notification (using the command-line tool ``notify-send``).\n\nScript\n------\n\n``ansicolortags.py`` is also a script.\nYou can have his description (or use it) directly with: ::\n\n    python -m ansicolortags --help\n\nFor testing\n~~~~~~~~~~~\n\n``ansicolortags.py`` can be used to run some tests (with the ``--test`` option).\n\nWith GNU/Bash\n~~~~~~~~~~~~~\n\n``ansicolortags.py`` can be used to generate a GNU/Bash color profile\n(with the ``--generate --file color.sh`` options).\n\n`See here for this color.sh file <https://bitbucket.org/lbesson/bin/src/master/.color.sh>`_\n\nThis ``sh`` file can be imported with ``$ . color.sh`` in any GNU/Bash scripts, or even in your ``~/.bashrc`` file.\n\nLicense ?\n=========\n\nThis module is licensed under the term of the **MIT License**, see the file *LICENSE* for more details.", "description_content_type": null, "docs_url": "https://pythonhosted.org/ansicolortags/", "download_url": "https://bitbucket.org/lbesson/ansicolortags.py/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/lbesson/ansicolortags.py/", "keywords": "ANSI, ANSIColors, ansicolor, colors, terminal, print", "license": "MIT", "maintainer": "Lilian Besson", "maintainer_email": "naereen@crans.org", "name": "ansicolortags", "package_url": "https://pypi.org/project/ansicolortags/", "platform": "Windows,Windows Cygwin,GNU/Linux,MacOS", "project_url": "https://pypi.org/project/ansicolortags/", "project_urls": {"Download": "https://bitbucket.org/lbesson/ansicolortags.py/", "Homepage": "https://bitbucket.org/lbesson/ansicolortags.py/"}, "release_url": "https://pypi.org/project/ansicolortags/0.4/", "requires_dist": null, "requires_python": null, "summary": "ansicolortags brings a simple and powerful way to use colours in a terminal application with Python 2 and 3.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>ansicolortags</tt> module provides efficient and useful functions to use colours in a terminal application with Python 2 and 3, with a <em>HTML-tag</em> like style : <tt>&lt;red&gt;text&lt;white&gt;</tt> will print <tt>text</tt> in red.</p>\n<p>All ANSI colors code are defined with this tag-like style.\n<strong>This point is the main interest of this module,</strong>\nbecause all others modules define function to print with some colours.</p>\n<p><a href=\"http://ansicolortags.readthedocs.io/\" rel=\"nofollow\">The complete documentation can be found here :</a>\n<a href=\"http://ansicolortags.readthedocs.io/\" rel=\"nofollow\">http://ansicolortags.readthedocs.io/</a> !</p>\n<div id=\"colours\">\n<h2>Colours</h2>\n<div id=\"foregrounds\">\n<h3>Foregrounds</h3>\n<p>You can choose one of the 8 basic ANSI colours: black, red, green, yellow, blue,\nmagenta, cyan, white.\nThe names beginning with a <em>lower-script</em> design <strong>foreground</strong> colours.</p>\n<p>For example:</p>\n<pre>from ansicolortags import printc\nprintc('&lt;reset&gt;This is default. &lt;red&gt;This is red&lt;yellow&gt; and yellow in foreground now&lt;reset&gt;').\n</pre>\n</div>\n<div id=\"backgrounds\">\n<h3>Backgrounds</h3>\n<p>You can choose one of the 8 basic ANSI colours: Black, Red, Green, Yellow, Blue,\nMagenta, Cyan, White.\nThe names beginning with an <em>upper-script</em> design <strong>background</strong> colors.</p>\n<p>For example:</p>\n<pre>from ansicolortags import printc\nprintc('&lt;Default&gt;this is default. &lt;Blue&gt;this have a blue background&lt;Black&gt; and black in background now&lt;reset&gt;').\n</pre>\n</div>\n<div id=\"other-tags\">\n<h3>Other tags</h3>\n<p>The following tags are also available:</p>\n<blockquote>\n<ul>\n<li><tt>b</tt>, <tt>B</tt> : to turn on and off the <em>bold</em> mode,</li>\n<li><tt>u</tt>, <tt>U</tt> : to turn on and off the <em>underline</em> mode,</li>\n<li><tt>neg</tt>, <tt>Neg</tt> : to turn on and off the <em>reverse video</em> mode,</li>\n<li><tt>blink</tt>, <tt>Blink</tt> : to turn on and off the <em>blink</em> mode,</li>\n<li><tt>el</tt> : to erase the current line,</li>\n<li><tt>bell</tt> : to make the terminal ring.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"shortcuts\">\n<h3>Shortcuts</h3>\n<p>Some macros are also provided, like the tags <tt>&lt;ERROR&gt;</tt>, <tt>&lt;INFO&gt;</tt> or <tt>&lt;WARNING&gt;</tt>.</p>\n<p>And also <tt>&lt;warning&gt;</tt> and <tt>&lt;question&gt;</tt>, which respectively give a colored <tt>!</tt> and <tt>?</tt>.</p>\n<p>The <tt>reset</tt> tag is a special tag to reinitialize all previously changed parameters.</p>\n</div>\n<div id=\"writing-to-a-file\">\n<h3>Writing to a file ?</h3>\n<p>This is possible with the <tt>writec</tt> function. For example:</p>\n<pre>import sys\nfrom ansicolortags import writec\nwritec('&lt;ERROR&gt;&lt;u&gt;&lt;red&gt;The computer is going to explode!&lt;reset&gt;', fn=sys.stderr)\n# sys.stderr.flush()\n# this is useless : writec flush itself.\n</pre>\n</div>\n</div>\n<div id=\"auto-detection\">\n<h2>Auto detection</h2>\n<p>Of course, the colors are disabled if the output does not support them.</p>\n<p>It works perfectly on any GNU/Linux (tested with Ubuntu 10+, Debian, Arch Linux) and Windows (with or without Cygwin),\nand should work fine one MAC OS X or on other UNIX-like.</p>\n</div>\n<div id=\"other-features\">\n<h2>Other features</h2>\n<div id=\"other-functions\">\n<h3>Other functions</h3>\n<p>There is also the <tt>xtitle()</tt> function, to change the title of the terminal.\nThis try to use the command-line tool <tt>xtitle</tt>, and if it fails it tries to use an <em>ANSI code</em> to change the title.</p>\n<p>There is also a <tt>notify()</tt> function to display a system notification (using the command-line tool <tt><span class=\"pre\">notify-send</span></tt>).</p>\n</div>\n<div id=\"script\">\n<h3>Script</h3>\n<p><tt>ansicolortags.py</tt> is also a script.\nYou can have his description (or use it) directly with:</p>\n<pre>python -m ansicolortags --help\n</pre>\n<div id=\"for-testing\">\n<h4>For testing</h4>\n<p><tt>ansicolortags.py</tt> can be used to run some tests (with the <tt><span class=\"pre\">--test</span></tt> option).</p>\n</div>\n<div id=\"with-gnu-bash\">\n<h4>With GNU/Bash</h4>\n<p><tt>ansicolortags.py</tt> can be used to generate a GNU/Bash color profile\n(with the <tt><span class=\"pre\">--generate</span> <span class=\"pre\">--file</span> color.sh</tt> options).</p>\n<p><a href=\"https://bitbucket.org/lbesson/bin/src/master/.color.sh\" rel=\"nofollow\">See here for this color.sh file</a></p>\n<p>This <tt>sh</tt> file can be imported with <tt>$ . color.sh</tt> in any GNU/Bash scripts, or even in your <tt><span class=\"pre\">~/.bashrc</span></tt> file.</p>\n</div>\n</div>\n</div>\n<div id=\"license\">\n<h2>License ?</h2>\n<p>This module is licensed under the term of the <strong>MIT License</strong>, see the file <em>LICENSE</em> for more details.</p>\n</div>\n\n          </div>"}, "last_serial": 2402382, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a9affe14131d62858a243fc2e51f2e62", "sha256": "e3e2074095c2591aebab871d9b71591db12fa93cd46e00e5e165c11b1104eaed"}, "downloads": -1, "filename": "ansicolortags-0.1.tar.gz", "has_sig": true, "md5_digest": "a9affe14131d62858a243fc2e51f2e62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13535, "upload_time": "2016-06-06T00:13:35", "upload_time_iso_8601": "2016-06-06T00:13:35.191706Z", "url": "https://files.pythonhosted.org/packages/b4/52/e1ed2291398d3ce755b6d54d157816cd94281ff35c07cf6281adac54c00f/ansicolortags-0.1.tar.gz", "yanked": false}], "0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "8f20cee92d016507c6a79432681b3b6f", "sha256": "4b45aecca74bb10404c6e78834de07284af7ba2c0c6a335959414ebd97603b95"}, "downloads": -1, "filename": "ansicolortags-0.3.tar.gz", "has_sig": true, "md5_digest": "8f20cee92d016507c6a79432681b3b6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14797, "upload_time": "2016-06-07T07:29:30", "upload_time_iso_8601": "2016-06-07T07:29:30.784035Z", "url": "https://files.pythonhosted.org/packages/ff/a5/390452c079ca5e8b94f0fd105605ccd623dc00bb89605e4a7e6b479c3143/ansicolortags-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6637a270242bfe0ac14b313ceb193ff0", "sha256": "76a507994ac26be993b468e27a1b7715bf9151d034c812538fed446a4c8ee990"}, "downloads": -1, "filename": "ansicolortags-0.4.zip", "has_sig": true, "md5_digest": "6637a270242bfe0ac14b313ceb193ff0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18992, "upload_time": "2016-07-02T09:36:44", "upload_time_iso_8601": "2016-07-02T09:36:44.566721Z", "url": "https://files.pythonhosted.org/packages/e1/22/6a383bebee83d76c00fb858caf1ead6dfde02f5dcea42e0d194050f0e8a2/ansicolortags-0.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6637a270242bfe0ac14b313ceb193ff0", "sha256": "76a507994ac26be993b468e27a1b7715bf9151d034c812538fed446a4c8ee990"}, "downloads": -1, "filename": "ansicolortags-0.4.zip", "has_sig": true, "md5_digest": "6637a270242bfe0ac14b313ceb193ff0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18992, "upload_time": "2016-07-02T09:36:44", "upload_time_iso_8601": "2016-07-02T09:36:44.566721Z", "url": "https://files.pythonhosted.org/packages/e1/22/6a383bebee83d76c00fb858caf1ead6dfde02f5dcea42e0d194050f0e8a2/ansicolortags-0.4.zip", "yanked": false}], "timestamp": "Thu May  7 18:18:02 2020"}