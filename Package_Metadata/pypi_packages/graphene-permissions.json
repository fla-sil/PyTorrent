{"info": {"author": "redzej", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "# graphene-permissions\n\n**Permission system for graphene-django apps.**\n\n[![Build Status](https://travis-ci.org/redzej/graphene-permissions.svg?branch=master)](https://travis-ci.org/redzej/graphene-permissions)\n[![PyPI version](https://badge.fury.io/py/graphene-permissions.svg)](https://badge.fury.io/py/graphene-permissions)\n[![Python 3.6](https://img.shields.io/badge/python-3.6-green.svg)](https://www.python.org/downloads/release/python-360/)\n[![codecov](https://codecov.io/gh/redzej/graphene-permissions/branch/master/graph/badge.svg)](https://codecov.io/gh/redzej/graphene-permissions)\n[![Maintainability](https://api.codeclimate.com/v1/badges/12b39435f888adf2370b/maintainability)](https://codeclimate.com/github/redzej/graphene-permissions/maintainability)\n\n\n## Overview\n\nDRF-inspired permission system based on classes for graphene-django. Allows easy customization of permission classes for\nfor queries and mutations.\n\n\n## Requirements\n\n* Python 3.5+\n* Django 2.0+\n* graphene-django 2.0+\n\n## Installation\n\nInstall using pip:\n\n```commandline\npip install graphene-permissions\n```\n\n## Example\n\nTo enforce permission system, add appropriate mixin and set attribute `permission_classes`.\n\n\n```python\n### models.py\nfrom django.db import models\n\n\nclass Pet(models.Model):\n    name = models.CharField(max_length=32)\n    race = models.CharField(max_length=64)\n```\n```python\n### schema.py\nfrom graphene import relay\nfrom graphene_django import DjangoObjectType\nfrom graphene_permissions.mixins import AuthNode\nfrom graphene_permissions.permissions import AllowAuthenticated\n\n\nclass PetNode(AuthNode, DjangoObjectType):\n    permission_classes = (AllowAuthenticated,)\n\n    class Meta:\n        model = Pet\n        filter_fields = ('name',)\n        interfaces = (relay.Node,)\n```\n\n## Docs\n\n### Setting up permission check\nFor queries use `AuthNode` mixin and inherite from `AuthFilter` class.\n```python\nclass AllowAuthenticatedPetNode(AuthNode, DjangoObjectType):\n    permission_classes = (AllowAuthenticated,)\n\n    class Meta:\n        model = Pet\n        filter_fields = ('name',)\n        interfaces = (relay.Node,)\n\n\nclass AllowAuthenticatedFilter(AuthFilter):\n    permission_classes = (AllowAuthenticated,)\n\n\nclass PetsQuery:\n    user_pet = relay.Node.Field(AllowAuthenticatedPetNode)\n    all_user_pets = AllowAuthenticatedFilter(AllowAuthenticatedPetNode)\n```\n\nFor mutations use `AuthMutation` mixin.\n```python\nclass AuthenticatedAddPet(AuthMutation, ClientIDMutation):\n    permission_classes = (AllowAuthenticated,)\n    pet = graphene.Field(AllowAuthenticatedPetNode)\n\n    class Input:\n        name = graphene.String()\n        race = graphene.String()\n        owner = graphene.ID()\n\n    @classmethod\n    def mutate_and_get_payload(cls, root, info, **input):\n        if cls.has_permission(root, info, input):\n            owner = User.objects.get(pk=from_global_id(input['owner'])[1])\n            pet = Pet.objects.create(name=input['name'], race=input['race'], owner=owner)\n            return AuthenticatedAddPet(pet=pet)\n        return AuthenticatedAddPet(pet=None)\n\n\nclass PetsMutation:\n    authenticated_add_pet = AuthenticatedAddPet.Field()\n```\n\n### Customizing permission classes\nDefault permission classes are: `AllowAny`, `AllowAuthenticated`, `AllowStaff`.\nYou can set up equal permission for both queries and mutations with one class, simply subclass one of these classes \nand to limit access for given object, override appropriate method. Remember to return `true` if user should be given \naccess and `false`, if denied.\n\n```python\nclass AllowMutationForStaff(AllowAuthenticated):\n    @staticmethod\n    def has_node_permission(info, id):\n        # logic here \n        # return boolean\n\n    @staticmethod\n    def has_mutation_permission(root, info, input):\n        if info.request.user.is_staff:\n            return True\n        return False\n\n    @staticmethod\n    def has_filter_permission(info):\n        # logic here\n        # return boolean\n```\n\n### Multiple permissions\nYou can set up multiple permissions checks, simply adding more classes. Permission is evaluated for every class.\nIf one of the checks fails, access is denied.\n\n```python\nclass CustomPetNode(AuthNode, DjangoObjectType):\n    permission_classes = (AllowAuthenticated, AllowStaff, AllowCustom)\n\n    class Meta:\n        model = Pet\n        interfaces = (relay.Node,)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/redzej/graphene-permissions", "keywords": "graphene django permissions permission system", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "graphene-permissions", "package_url": "https://pypi.org/project/graphene-permissions/", "platform": "", "project_url": "https://pypi.org/project/graphene-permissions/", "project_urls": {"Homepage": "https://github.com/redzej/graphene-permissions"}, "release_url": "https://pypi.org/project/graphene-permissions/1.1.2/", "requires_dist": ["django-filter (>=2.*)", "graphene (>=2.*)", "graphene-django (>=2.0.0)"], "requires_python": ">=3.5", "summary": "Simple graphene-django permission system.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>graphene-permissions</h1>\n<p><strong>Permission system for graphene-django apps.</strong></p>\n<p><a href=\"https://travis-ci.org/redzej/graphene-permissions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afa1541cc95c8d26a059f87b88ebfdffd9a32fa6/68747470733a2f2f7472617669732d63692e6f72672f7265647a656a2f6772617068656e652d7065726d697373696f6e732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/graphene-permissions\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99ed3cb0e12ea05b0f1ec8974dc2b9101c64bea0/68747470733a2f2f62616467652e667572792e696f2f70792f6772617068656e652d7065726d697373696f6e732e737667\"></a>\n<a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\"><img alt=\"Python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/603914ac50ec57caa0025f2171ac113a3dd9bec9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d677265656e2e737667\"></a>\n<a href=\"https://codecov.io/gh/redzej/graphene-permissions\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e701fe01a1c1ca7da3d0bc743de47a5efe24f38f/68747470733a2f2f636f6465636f762e696f2f67682f7265647a656a2f6772617068656e652d7065726d697373696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/redzej/graphene-permissions/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34e0119ab0a819aeca403b95ac4abef8629a9cbb/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f31326233393433356638383861646632333730622f6d61696e7461696e6162696c697479\"></a></p>\n<h2>Overview</h2>\n<p>DRF-inspired permission system based on classes for graphene-django. Allows easy customization of permission classes for\nfor queries and mutations.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5+</li>\n<li>Django 2.0+</li>\n<li>graphene-django 2.0+</li>\n</ul>\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install graphene-permissions\n</pre>\n<h2>Example</h2>\n<p>To enforce permission system, add appropriate mixin and set attribute <code>permission_classes</code>.</p>\n<pre><span class=\"c1\">### models.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Pet</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n    <span class=\"n\">race</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\">### schema.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">graphene</span> <span class=\"kn\">import</span> <span class=\"n\">relay</span>\n<span class=\"kn\">from</span> <span class=\"nn\">graphene_django</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoObjectType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">graphene_permissions.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">AuthNode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">graphene_permissions.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">AllowAuthenticated</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PetNode</span><span class=\"p\">(</span><span class=\"n\">AuthNode</span><span class=\"p\">,</span> <span class=\"n\">DjangoObjectType</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Pet</span>\n        <span class=\"n\">filter_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,)</span>\n        <span class=\"n\">interfaces</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">relay</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,)</span>\n</pre>\n<h2>Docs</h2>\n<h3>Setting up permission check</h3>\n<p>For queries use <code>AuthNode</code> mixin and inherite from <code>AuthFilter</code> class.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AllowAuthenticatedPetNode</span><span class=\"p\">(</span><span class=\"n\">AuthNode</span><span class=\"p\">,</span> <span class=\"n\">DjangoObjectType</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Pet</span>\n        <span class=\"n\">filter_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,)</span>\n        <span class=\"n\">interfaces</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">relay</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AllowAuthenticatedFilter</span><span class=\"p\">(</span><span class=\"n\">AuthFilter</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PetsQuery</span><span class=\"p\">:</span>\n    <span class=\"n\">user_pet</span> <span class=\"o\">=</span> <span class=\"n\">relay</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">AllowAuthenticatedPetNode</span><span class=\"p\">)</span>\n    <span class=\"n\">all_user_pets</span> <span class=\"o\">=</span> <span class=\"n\">AllowAuthenticatedFilter</span><span class=\"p\">(</span><span class=\"n\">AllowAuthenticatedPetNode</span><span class=\"p\">)</span>\n</pre>\n<p>For mutations use <code>AuthMutation</code> mixin.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AuthenticatedAddPet</span><span class=\"p\">(</span><span class=\"n\">AuthMutation</span><span class=\"p\">,</span> <span class=\"n\">ClientIDMutation</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">,)</span>\n    <span class=\"n\">pet</span> <span class=\"o\">=</span> <span class=\"n\">graphene</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">AllowAuthenticatedPetNode</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Input</span><span class=\"p\">:</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">graphene</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n        <span class=\"n\">race</span> <span class=\"o\">=</span> <span class=\"n\">graphene</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n        <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">graphene</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mutate_and_get_payload</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"nb\">input</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">has_permission</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">):</span>\n            <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">from_global_id</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">[</span><span class=\"s1\">'owner'</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">pet</span> <span class=\"o\">=</span> <span class=\"n\">Pet</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"nb\">input</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">race</span><span class=\"o\">=</span><span class=\"nb\">input</span><span class=\"p\">[</span><span class=\"s1\">'race'</span><span class=\"p\">],</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">owner</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">AuthenticatedAddPet</span><span class=\"p\">(</span><span class=\"n\">pet</span><span class=\"o\">=</span><span class=\"n\">pet</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">AuthenticatedAddPet</span><span class=\"p\">(</span><span class=\"n\">pet</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PetsMutation</span><span class=\"p\">:</span>\n    <span class=\"n\">authenticated_add_pet</span> <span class=\"o\">=</span> <span class=\"n\">AuthenticatedAddPet</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">()</span>\n</pre>\n<h3>Customizing permission classes</h3>\n<p>Default permission classes are: <code>AllowAny</code>, <code>AllowAuthenticated</code>, <code>AllowStaff</code>.\nYou can set up equal permission for both queries and mutations with one class, simply subclass one of these classes\nand to limit access for given object, override appropriate method. Remember to return <code>true</code> if user should be given\naccess and <code>false</code>, if denied.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AllowMutationForStaff</span><span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">):</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">has_node_permission</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n        <span class=\"c1\"># logic here </span>\n        <span class=\"c1\"># return boolean</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">has_mutation_permission</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_staff</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">has_filter_permission</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">):</span>\n        <span class=\"c1\"># logic here</span>\n        <span class=\"c1\"># return boolean</span>\n</pre>\n<h3>Multiple permissions</h3>\n<p>You can set up multiple permissions checks, simply adding more classes. Permission is evaluated for every class.\nIf one of the checks fails, access is denied.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CustomPetNode</span><span class=\"p\">(</span><span class=\"n\">AuthNode</span><span class=\"p\">,</span> <span class=\"n\">DjangoObjectType</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAuthenticated</span><span class=\"p\">,</span> <span class=\"n\">AllowStaff</span><span class=\"p\">,</span> <span class=\"n\">AllowCustom</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Pet</span>\n        <span class=\"n\">interfaces</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">relay</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">,)</span>\n</pre>\n\n          </div>"}, "last_serial": 5115515, "releases": {"1.0.12": [{"comment_text": "", "digests": {"md5": "8753279d78cb835410d84407d8eeb5b5", "sha256": "cc78da832decc409851dd3bc129849a1da799251605e7841fc8c27937c99ed4f"}, "downloads": -1, "filename": "graphene-permissions-1.0.12.tar.gz", "has_sig": false, "md5_digest": "8753279d78cb835410d84407d8eeb5b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3909, "upload_time": "2018-03-01T01:22:26", "upload_time_iso_8601": "2018-03-01T01:22:26.157063Z", "url": "https://files.pythonhosted.org/packages/71/ec/778a8ee8ac9af1a971c0d1fffd3c5827380507ba046280f6c63d98aabb3d/graphene-permissions-1.0.12.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d00b3daba88ffba0abe845a13f9a281d", "sha256": "087455fc5ec8127e446bfafeb46411bd634d85918d96b04b930b20aa6d8f9109"}, "downloads": -1, "filename": "graphene_permissions-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d00b3daba88ffba0abe845a13f9a281d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4362, "upload_time": "2018-05-23T11:23:01", "upload_time_iso_8601": "2018-05-23T11:23:01.519838Z", "url": "https://files.pythonhosted.org/packages/7a/79/8b2df1851c731911cf683cd5992937ce6a6ece490f08eef3a05d64f97d02/graphene_permissions-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8631d42abe6cbb2cfb04ba69ebbd8df", "sha256": "8a45855f13d1ad0e891f2360477f1501bb9aeadaf0dc77cc4b3c250e9d22b2ae"}, "downloads": -1, "filename": "graphene-permissions-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a8631d42abe6cbb2cfb04ba69ebbd8df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3940, "upload_time": "2018-05-23T11:30:04", "upload_time_iso_8601": "2018-05-23T11:30:04.436148Z", "url": "https://files.pythonhosted.org/packages/38/94/67168b4bb42f6a357f825ae296840e2ffda52ac80251662c9b07e1523572/graphene-permissions-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c99f3ac9af06bd577b31e81111722b97", "sha256": "75cddb6bd3b45e1101c9ce1ef652e4468d42119905dea00b1e179b74ed0f90e9"}, "downloads": -1, "filename": "graphene_permissions-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c99f3ac9af06bd577b31e81111722b97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4357, "upload_time": "2018-07-25T00:53:02", "upload_time_iso_8601": "2018-07-25T00:53:02.001175Z", "url": "https://files.pythonhosted.org/packages/03/f6/186555293b9e5ba27bf671c76d8d6225740af5710c8e3e0d0e8315519b38/graphene_permissions-1.1.1-py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "0c9ca0443b5306b9d7e0b17018e78ffe", "sha256": "472a1f16b31da2bfaf422d523f6602377dab64ce25a4608ec70a9b440dcd4afe"}, "downloads": -1, "filename": "graphene_permissions-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9ca0443b5306b9d7e0b17018e78ffe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5347, "upload_time": "2019-04-08T20:39:55", "upload_time_iso_8601": "2019-04-08T20:39:55.510045Z", "url": "https://files.pythonhosted.org/packages/60/a1/a430192635f4ea191d07d40ce9d558fef93a3a37e62984017a0fc0c234a8/graphene_permissions-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1910bc9fa61a34e3e3854146c558697a", "sha256": "2ec6d0663911744cb46484d648daddf5caee22a3eaaf02607ec0f423a9121052"}, "downloads": -1, "filename": "graphene-permissions-1.1.2.tar.gz", "has_sig": false, "md5_digest": "1910bc9fa61a34e3e3854146c558697a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4134, "upload_time": "2019-04-08T20:39:56", "upload_time_iso_8601": "2019-04-08T20:39:56.606673Z", "url": "https://files.pythonhosted.org/packages/7f/85/96f36a663164f660051cf28d9d22c8c07191a85959a0e0270103ad7c1d02/graphene-permissions-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c9ca0443b5306b9d7e0b17018e78ffe", "sha256": "472a1f16b31da2bfaf422d523f6602377dab64ce25a4608ec70a9b440dcd4afe"}, "downloads": -1, "filename": "graphene_permissions-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9ca0443b5306b9d7e0b17018e78ffe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5347, "upload_time": "2019-04-08T20:39:55", "upload_time_iso_8601": "2019-04-08T20:39:55.510045Z", "url": "https://files.pythonhosted.org/packages/60/a1/a430192635f4ea191d07d40ce9d558fef93a3a37e62984017a0fc0c234a8/graphene_permissions-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1910bc9fa61a34e3e3854146c558697a", "sha256": "2ec6d0663911744cb46484d648daddf5caee22a3eaaf02607ec0f423a9121052"}, "downloads": -1, "filename": "graphene-permissions-1.1.2.tar.gz", "has_sig": false, "md5_digest": "1910bc9fa61a34e3e3854146c558697a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4134, "upload_time": "2019-04-08T20:39:56", "upload_time_iso_8601": "2019-04-08T20:39:56.606673Z", "url": "https://files.pythonhosted.org/packages/7f/85/96f36a663164f660051cf28d9d22c8c07191a85959a0e0270103ad7c1d02/graphene-permissions-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:42 2020"}