{"info": {"author": "Praekelt Foundation", "author_email": "dev@praekeltfoundation.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Twisted", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Communications", "Topic :: Internet", "Topic :: System :: Networking"], "description": "Vumi Go\n=======\n\nDocumentation available online at http://vumi-go.readthedocs.org/ and in the `docs` directory of the repository.\n\n|vumigo-ci|_ |vumigo-cover|_ |vumigo-waffle|_\n\n.. |vumigo-ci| image:: https://travis-ci.org/praekelt/vumi-go.png?branch=develop\n.. _vumigo-ci: https://travis-ci.org/praekelt/vumi-go\n\n.. |vumigo-cover| image:: https://coveralls.io/repos/praekelt/vumi-go/badge.png?branch=develop\n.. _vumigo-cover: https://coveralls.io/r/praekelt/vumi-go\n\n.. |vumigo-waffle| image:: https://badge.waffle.io/praekelt/vumi-go.png?label=ready\n.. _vumigo-waffle: https://waffle.io/praekelt/vumi-go\n\n\nInstalling\n~~~~~~~~~~\n\nInstall the dependencies::\n\n    $ virtualenv --no-site-packages ve\n    $ source ve/bin/activate\n    (ve)$ pip install -r requirements.pip\n\nOther stuff that's required:\n\n* Redis_\n* RabbitMQ_, after you've installed this run `sudo ./utils/rabbitmq.setup.sh` to set the correct permissions for the vumi RabbitMQ user.\n* Riak_, install as described in: http://wiki.basho.com/Installation.html\n\nAfter installing Riak_, you will need to edit the `/etc/riak/app.config` file: set the storage backend to `eleveldb` instead of `bitcask`, and enable `riak_search`.\n\n.. note::\n    There is a Vagrantfile in the Vumi_ repository that can be used for Vumi Go as well.\n\n\nBootstrapping a development environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAfter having installed the dependencies with pip and ensuring that Redis_,\nRiak_ and RabbitMQ_ are running execute the following command:\n\n::\n\n    (ve)$ ./setup_env.sh\n\nThis will generate all the necessary config files for running a set of\nstandard applications and Telnet transports emulating a USSD and SMS\nconnection.\n\nTo start some sample conversations such as Wikipedia execute the\nfollowing command::\n\n    (ve)$ ./setup_env/build/go_startup_env.sh\n\nNext start everything using Supervisord_::\n\n    (ve)$ supervisord -c setup_env/build/go_supervisord.conf\n    (ve)$ supervisorctl -c setup_env/build/go_supervisord.conf\n\nNow you should be able to login to the Vumi UI at http://localhost:8000 using\nthe account details as specified in `setup_env/accounts.yaml`.\n\nThe default accounts created are:\n\n================= ==========\n    Username       Password\n================= ==========\nuser1@example.org password\nuser2@example.org password\n================= ==========\n\nBy default the Wikipedia USSD service is configured to be running on\nlocalhost 8081.\n\n::\n\n    $ telnet localhost 8081\n    Trying 127.0.0.1...\n    Connected to localhost.\n    Escape character is '^]'.\n    Please provide \"to_addr\":\n    *120*10001#\n    Please provide \"from_addr\":\n    simon\n    [Sending all messages to: *120*10001# and from: simon]\n    What would you like to search Wikipedia for?\n    ...\n\nThe SMS delivery part uses 'longcode-10001' as the virtual address and\nthe outbound SMSes as part of the USSD Wikipedia are sent to that address.\n\n\nUsing GTalk as a transport for testing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo ease local development we often use GTalk. You will need at least two\nGtalk addresses, one will be used for the Vumi transport the other you\nwill need to use with your normal Gtalk client to interact with the service.\n\nStart the XMPP transport with the following command::\n\n    (ve)$ twistd -n vumi_worker \\\n    >      --worker-class=vumi.transports.xmpp.XMPPTransport\n    >      --config=path/to/xmpp-config.yaml\n\nThe configuration for the XMPP transport should have the following parameters::\n\n    transport_name: <desired transport name> # change this\n    username: <your username> # change this\n    password: <your password> # change this\n    host: talk.google.com\n    port: 5222\n    status: chat\n    status_message: Vumi Go!\n\n    middleware:\n        - logging_mw: vumi.middleware.logging.LoggingMiddleware\n        - gtalk_tagging_mw: vumi.middleware.tagger.TaggingMiddleware\n\n    logging_mw:\n        log_level: debug\n\n    gtalk_tagging_mw:\n       incoming:\n         addr_pattern: '^(.+\\@.+)/?.*$'\n         tagpool_template: 'xmpp'\n         tagname_template: '\\1'\n       outgoing:\n         tagname_pattern: '.*'\n         msg_template: {}\n\nFor you to be able to use this account for messaging you will need to add\nit to the `tagpools.yaml` file. Do this by adding the following below\n`ussd_tagpool` under `pools`::\n\n    xmpp_tagpool:\n      tags:\n        - xmpp@example.org # change this\n      metadata:\n        display_name: \"Google Talk\"\n        delivery_class: gtalk\n        transport_type: xmpp\n        user_selects_tag: true\n        server_initiated: true\n        client_initiated: true\n        transport_name: <name of your transport> # change this\n        msg_options: {}\n\nNext update the Tagpool Manager with this new configuration::\n\n    (ve)$ ./go-admin.sh go_setup_env \\\n            --config-file=./setup_env/config.yaml \\\n            --tagpool-file=./setup_env/tagpools.yaml\n\nAnd give your account access to this new tagpool::\n\n    (ve)$ ./go-admin go_assign_tagpool \\\n            --email-address=user1@example.org \\\n            --tagpool=xmpp_tagpool \\\n            --max-keys=0\n\n.. _Redis: http://redis.io\n.. _RabbitMQ: http://rabbitmq.com\n.. _Riak: http://wiki.basho.com/Riak.html\n.. _Vumi: https://github.com/praekelt/vumi\n.. _Supervisord: http://www.supervisord.org", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/praekelt/vumi-go", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "vumi-go", "package_url": "https://pypi.org/project/vumi-go/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vumi-go/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/praekelt/vumi-go"}, "release_url": "https://pypi.org/project/vumi-go/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "Vumi Go", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Documentation available online at <a href=\"http://vumi-go.readthedocs.org/\" rel=\"nofollow\">http://vumi-go.readthedocs.org/</a> and in the <cite>docs</cite> directory of the repository.</p>\n<p><a href=\"https://travis-ci.org/praekelt/vumi-go\" rel=\"nofollow\"><img alt=\"vumigo-ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/028243f78b60e6f6d50b474896187a0e222c10b2/68747470733a2f2f7472617669732d63692e6f72672f707261656b656c742f76756d692d676f2e706e673f6272616e63683d646576656c6f70\"></a> <a href=\"https://coveralls.io/r/praekelt/vumi-go\" rel=\"nofollow\"><img alt=\"vumigo-cover\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61bda6ba75ca58c812a8a6a52a71fc9010171b18/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f707261656b656c742f76756d692d676f2f62616467652e706e673f6272616e63683d646576656c6f70\"></a> <a href=\"https://waffle.io/praekelt/vumi-go\" rel=\"nofollow\"><img alt=\"vumigo-waffle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7a4218ffd0ee373e0133470f56cd18517386d8f/68747470733a2f2f62616467652e776166666c652e696f2f707261656b656c742f76756d692d676f2e706e673f6c6162656c3d7265616479\"></a></p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install the dependencies:</p>\n<pre>$ virtualenv --no-site-packages ve\n$ source ve/bin/activate\n(ve)$ pip install -r requirements.pip\n</pre>\n<p>Other stuff that\u2019s required:</p>\n<ul>\n<li><a href=\"http://redis.io\" rel=\"nofollow\">Redis</a></li>\n<li><a href=\"http://rabbitmq.com\" rel=\"nofollow\">RabbitMQ</a>, after you\u2019ve installed this run <cite>sudo ./utils/rabbitmq.setup.sh</cite> to set the correct permissions for the vumi RabbitMQ user.</li>\n<li><a href=\"http://wiki.basho.com/Riak.html\" rel=\"nofollow\">Riak</a>, install as described in: <a href=\"http://wiki.basho.com/Installation.html\" rel=\"nofollow\">http://wiki.basho.com/Installation.html</a></li>\n</ul>\n<p>After installing <a href=\"http://wiki.basho.com/Riak.html\" rel=\"nofollow\">Riak</a>, you will need to edit the <cite>/etc/riak/app.config</cite> file: set the storage backend to <cite>eleveldb</cite> instead of <cite>bitcask</cite>, and enable <cite>riak_search</cite>.</p>\n<div>\n<p>Note</p>\n<p>There is a Vagrantfile in the <a href=\"https://github.com/praekelt/vumi\" rel=\"nofollow\">Vumi</a> repository that can be used for Vumi Go as well.</p>\n</div>\n</div>\n<div id=\"bootstrapping-a-development-environment\">\n<h2>Bootstrapping a development environment</h2>\n<p>After having installed the dependencies with pip and ensuring that <a href=\"http://redis.io\" rel=\"nofollow\">Redis</a>,\n<a href=\"http://wiki.basho.com/Riak.html\" rel=\"nofollow\">Riak</a> and <a href=\"http://rabbitmq.com\" rel=\"nofollow\">RabbitMQ</a> are running execute the following command:</p>\n<pre>(ve)$ ./setup_env.sh\n</pre>\n<p>This will generate all the necessary config files for running a set of\nstandard applications and Telnet transports emulating a USSD and SMS\nconnection.</p>\n<p>To start some sample conversations such as Wikipedia execute the\nfollowing command:</p>\n<pre>(ve)$ ./setup_env/build/go_startup_env.sh\n</pre>\n<p>Next start everything using <a href=\"http://www.supervisord.org\" rel=\"nofollow\">Supervisord</a>:</p>\n<pre>(ve)$ supervisord -c setup_env/build/go_supervisord.conf\n(ve)$ supervisorctl -c setup_env/build/go_supervisord.conf\n</pre>\n<p>Now you should be able to login to the Vumi UI at <a href=\"http://localhost:8000\" rel=\"nofollow\">http://localhost:8000</a> using\nthe account details as specified in <cite>setup_env/accounts.yaml</cite>.</p>\n<p>The default accounts created are:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Username</th>\n<th>Password</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"mailto:user1%40example.org\">user1<span>@</span>example<span>.</span>org</a></td>\n<td>password</td>\n</tr>\n<tr><td><a href=\"mailto:user2%40example.org\">user2<span>@</span>example<span>.</span>org</a></td>\n<td>password</td>\n</tr>\n</tbody>\n</table>\n<p>By default the Wikipedia USSD service is configured to be running on\nlocalhost 8081.</p>\n<pre>$ telnet localhost 8081\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nPlease provide \"to_addr\":\n*120*10001#\nPlease provide \"from_addr\":\nsimon\n[Sending all messages to: *120*10001# and from: simon]\nWhat would you like to search Wikipedia for?\n...\n</pre>\n<p>The SMS delivery part uses \u2018longcode-10001\u2019 as the virtual address and\nthe outbound SMSes as part of the USSD Wikipedia are sent to that address.</p>\n</div>\n<div id=\"using-gtalk-as-a-transport-for-testing\">\n<h2>Using GTalk as a transport for testing</h2>\n<p>To ease local development we often use GTalk. You will need at least two\nGtalk addresses, one will be used for the Vumi transport the other you\nwill need to use with your normal Gtalk client to interact with the service.</p>\n<p>Start the XMPP transport with the following command:</p>\n<pre>(ve)$ twistd -n vumi_worker \\\n&gt;      --worker-class=vumi.transports.xmpp.XMPPTransport\n&gt;      --config=path/to/xmpp-config.yaml\n</pre>\n<p>The configuration for the XMPP transport should have the following parameters:</p>\n<pre>transport_name: &lt;desired transport name&gt; # change this\nusername: &lt;your username&gt; # change this\npassword: &lt;your password&gt; # change this\nhost: talk.google.com\nport: 5222\nstatus: chat\nstatus_message: Vumi Go!\n\nmiddleware:\n    - logging_mw: vumi.middleware.logging.LoggingMiddleware\n    - gtalk_tagging_mw: vumi.middleware.tagger.TaggingMiddleware\n\nlogging_mw:\n    log_level: debug\n\ngtalk_tagging_mw:\n   incoming:\n     addr_pattern: '^(.+\\@.+)/?.*$'\n     tagpool_template: 'xmpp'\n     tagname_template: '\\1'\n   outgoing:\n     tagname_pattern: '.*'\n     msg_template: {}\n</pre>\n<p>For you to be able to use this account for messaging you will need to add\nit to the <cite>tagpools.yaml</cite> file. Do this by adding the following below\n<cite>ussd_tagpool</cite> under <cite>pools</cite>:</p>\n<pre>xmpp_tagpool:\n  tags:\n    - xmpp@example.org # change this\n  metadata:\n    display_name: \"Google Talk\"\n    delivery_class: gtalk\n    transport_type: xmpp\n    user_selects_tag: true\n    server_initiated: true\n    client_initiated: true\n    transport_name: &lt;name of your transport&gt; # change this\n    msg_options: {}\n</pre>\n<p>Next update the Tagpool Manager with this new configuration:</p>\n<pre>(ve)$ ./go-admin.sh go_setup_env \\\n        --config-file=./setup_env/config.yaml \\\n        --tagpool-file=./setup_env/tagpools.yaml\n</pre>\n<p>And give your account access to this new tagpool:</p>\n<pre>(ve)$ ./go-admin go_assign_tagpool \\\n        --email-address=user1@example.org \\\n        --tagpool=xmpp_tagpool \\\n        --max-keys=0\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2516284, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "0cd56dac5894bc99725300d2179923c6", "sha256": "f923d83582fa5a7f359cc1452a7816042296211f0fc5247bf3185f22cd06d53b"}, "downloads": -1, "filename": "vumi_go-0.5.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0cd56dac5894bc99725300d2179923c6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 522381, "upload_time": "2014-08-19T14:06:49", "upload_time_iso_8601": "2014-08-19T14:06:49.213848Z", "url": "https://files.pythonhosted.org/packages/76/97/3c7c9355458c514ac323382f4778b25f047b40b867602d0f90868dd2c67b/vumi_go-0.5.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2dce67b536604125010bcaf9b64b34d", "sha256": "00891ea4642aaac343ebc9ee09ed1c483a845c403c6a637195d8e446081a5f51"}, "downloads": -1, "filename": "vumi-go-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d2dce67b536604125010bcaf9b64b34d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 354840, "upload_time": "2014-08-19T14:06:38", "upload_time_iso_8601": "2014-08-19T14:06:38.630375Z", "url": "https://files.pythonhosted.org/packages/81/45/c1d12d170c757366042b5a20a500e37b9c7139b8c198f85a94d92a07e6dc/vumi-go-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cd56dac5894bc99725300d2179923c6", "sha256": "f923d83582fa5a7f359cc1452a7816042296211f0fc5247bf3185f22cd06d53b"}, "downloads": -1, "filename": "vumi_go-0.5.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0cd56dac5894bc99725300d2179923c6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 522381, "upload_time": "2014-08-19T14:06:49", "upload_time_iso_8601": "2014-08-19T14:06:49.213848Z", "url": "https://files.pythonhosted.org/packages/76/97/3c7c9355458c514ac323382f4778b25f047b40b867602d0f90868dd2c67b/vumi_go-0.5.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2dce67b536604125010bcaf9b64b34d", "sha256": "00891ea4642aaac343ebc9ee09ed1c483a845c403c6a637195d8e446081a5f51"}, "downloads": -1, "filename": "vumi-go-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d2dce67b536604125010bcaf9b64b34d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 354840, "upload_time": "2014-08-19T14:06:38", "upload_time_iso_8601": "2014-08-19T14:06:38.630375Z", "url": "https://files.pythonhosted.org/packages/81/45/c1d12d170c757366042b5a20a500e37b9c7139b8c198f85a94d92a07e6dc/vumi-go-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:33 2020"}