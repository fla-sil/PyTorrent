{"info": {"author": "Ingo Heimbach", "author_email": "i.heimbach@fz-juelich.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "# Flask-RESTful-HAL\n\n## Introduction\n\n*Flask-RESTful-HAL* is an extension for [Flask-RESTful](https://flask-restful.readthedocs.io/en/latest/). It adds\nsupport for building [HAL APIs](http://stateless.co/hal_specification.html).\n\n## Installation\n\nThe latest version can be obtained from PyPI:\n\n```python\npip install flask-restful-hal\n```\n\nIf you use Arch Linux or one of its derivatives, you can also install `flask-restful-hal` from the\n[AUR](https://aur.archlinux.org/packages/python-flask-restful-hal/):\n\n```bash\nyay -S python-flask-restful-hal\n```\n\n## Usage\n\n*Flask-RESTful-HAL* extends the `Resource` base class of Flask-RESTful. Instead of defining a `get` method, a `data`\nmethod must be implemented which returns the contents of the resource class. In addition the two optional methods\n`embedded` and `links` can be defined to describe which resources are embedded and linked to the current resource. All\nthree methods can be defined as `staticmethod` if no data needs to be shared between the method invocations (see the\n[section about data sharing](#sharing-data-between-methods) for more information).\n\n### Example of a minimal resource class\n\n```python\nfrom flask import Flask\nfrom flask_restful_hal import Api, Resource\n\nTODOS = {\n    'todo1': {\n        'task': 'build an API'\n    },\n    'todo2': {\n        'task': '?????'\n    },\n    'todo3': {\n        'task': 'profit!'\n    },\n}\n\n\nclass Todo(Resource):\n    @staticmethod\n    def data(todo):\n        return TODOS[todo]\n\n\napp = Flask(__name__)\napi = Api(app)\napi.add_resource(Todo, '/todos/<todo>')\napp.run()\n```\n\nIn this example, the only required method `data` is implemented and returns the requested todo entry as a Python\ndictionary. By default, this dictionary is parsed to a json string and returned in an HTTP response with content type\n`application/hal+json`. If the Python package `json2html` is installed, the client can request an HTML output as an\nalternative (by sending `Accept: text/html`).\n\nWhen requesting the resource, the client may add the query string `links=true` to get linked resources. Since no `links`\nmethod is implemented, only the default `self` link will be included in the response.\n\n### Example of a resource class with embedded and linked resources\n\n```python\nfrom flask import Flask\nfrom flask_restful_hal import Api, Embedded, Link, Resource\n\nTODOS = {\n    'todo1': {\n        'task': 'build an API'\n    },\n    'todo2': {\n        'task': '?????'\n    },\n    'todo3': {\n        'task': 'profit!'\n    },\n}\n\n\nclass Todo(Resource):\n    @staticmethod\n    def data(todo):\n        return TODOS[todo]\n\n    @staticmethod\n    def links(todo):\n        return Link('collection', '/todos')\n\n\nclass TodoList(Resource):\n    @staticmethod\n    def data():\n        return {'size': len(TODOS)}\n\n    @staticmethod\n    def embedded():\n        arguments_list = [(todo, ) for todo in sorted(TODOS.keys())]\n        return Embedded('items', Todo, *arguments_list)\n\n    @staticmethod\n    def links():\n        arguments_list = [('/todos/{}'.format(todo), {'title': todo}) for todo in sorted(TODOS.keys())]\n        return Link('items', *arguments_list)\n\n\napp = Flask(__name__)\napi = Api(app)\napi.add_resource(TodoList, '/todos')\napi.add_resource(Todo, '/todos/<todo>')\napp.run()\n```\n\n1. Links can be added by returning one or multiple `Link` objects from a static `links` routine. The `Link` constructor\n   takes a relationship (e.g. `collection`, `up` or `item`) and one or multiple link targets. Link targets can either be\n   expressed as a string (href attribute) or as a tuple consisting of a href string and a dictionary with extra\n   attributes. In the example `title` is used as an extra attribute.\n2. Embedded resources are expressed with one or multiple `Embedded` objects. Again, the first parameter is a\n   relationship. The second parameter is the embedded resource class and the following parameters are tuples with\n   constructor arguments for that class.\n\nBy default, no resources are embedded. Embedding resources can be requested with the query string `embed=true` which\naffects all resources recursively (embedded resources can embed resources as well). This behavior can be changed by\nspecifying a concrete level of embedding (e.g. `embed=2` would only embed two levels of resources).\n\n### Sharing data between methods\n\nIn most cases, the `data`, `embedded` and `links` methods need access to the same data source. In order to avoid\naccessing the data backend (for example a database) three times with similar queries you can define a forth `pre_hal`\nmethod which is called on every `GET` request before `data`, `embedded` or `links` are executed. In `pre_hal` you can\naccess the data backend and cache the result in instance variables of the current resource object.\n\n```python\nclass TodoList(Resource):\n    def pre_hal(self, embed, include_links, todo):\n        self.todos = db.query(...)\n\n    def data(self):\n        return {'size': len(self.todos)}\n\n    def embedded(self):\n        arguments_list = [(todo, ) for todo in sorted(self.todos.keys())]\n        return Embedded('items', Todo, *arguments_list)\n\n    def links(self):\n        arguments_list = [('/todos/{}'.format(todo), {'title': todo}) for todo in sorted(self.todos.keys())]\n        return Link('items', *arguments_list)\n```\n\n### Securing API endpoints\n\n*Flask-RESTful-HAL* does not include any authorization mechanisms to secure your api endpoints. However, you can easily\nintegrate available Flask extensions by overriding the `Resource` class. The following example uses\n[Flask-JWT-Extended](http://flask-jwt-extended.readthedocs.io/en/latest/) to secure `GET` requests with *JSON Web\nTokens*. Tokens are generated by a special endpoint `/auth_token` that is secured with *basic auth*:\n\n```python\nfrom flask import Flask, g, jsonify\nfrom flask_httpauth import HTTPBasicAuth\nfrom flask_jwt_extended import JWTManager, create_access_token, jwt_required\nfrom flask_restful import Resource as RestResource\nfrom flask_restful_hal import Api, Embedded, Link, Resource as HalResource\n\nTODOS = {\n    'todo1': {\n        'task': 'build an API'\n    },\n    'todo2': {\n        'task': '?????'\n    },\n    'todo3': {\n        'task': 'profit!'\n    },\n}\n\nhttp_basic_auth = HTTPBasicAuth()\n\n\n@http_basic_auth.verify_password\ndef verify_password(username, password):\n    g.username = username\n    # TODO: implement some check here...\n    return True\n\n\nclass SecuredHalResource(HalResource):\n    @jwt_required\n    def get(self, **kwargs):\n        return super().get(**kwargs)\n\n\nclass AuthToken(RestResource):\n    @http_basic_auth.login_required\n    def get(self):\n        auth_token = create_access_token(identity=g.username)\n        return jsonify({'auth_token': auth_token})\n\n\nclass Todo(SecuredHalResource):\n    @staticmethod\n    def data(todo):\n        return TODOS[todo]\n\n\napp = Flask(__name__)\napp.config['PROPAGATE_EXCEPTIONS'] = True  # must be set, otherwise jwt error handling won't work with flask-restful\napp.config['JWT_SECRET_KEY'] = 'use your super secret key here!'\nJWTManager(app)\napi = Api(app)\napi.add_resource(AuthToken, '/auth_token')\napi.add_resource(Todo, '/todos/<todo>')\napp.run()\n```\n\nTokens requested with the `/auth_token` endpoint can then be used in the HTTP authorization header with the *Bearer*\nscheme to gain access to secured resources:\n\n```http\nAuthorization: Bearer <token>\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sciapp/flask-restful-hal", "keywords": "Flask,RESTful,HAL", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-restful-hal", "package_url": "https://pypi.org/project/flask-restful-hal/", "platform": "", "project_url": "https://pypi.org/project/flask-restful-hal/", "project_urls": {"Homepage": "https://github.com/sciapp/flask-restful-hal"}, "release_url": "https://pypi.org/project/flask-restful-hal/0.2.6/", "requires_dist": ["Flask", "Flask-RESTful", "future"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "summary": "HAL extension for Flask-RESTful", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask-RESTful-HAL</h1>\n<h2>Introduction</h2>\n<p><em>Flask-RESTful-HAL</em> is an extension for <a href=\"https://flask-restful.readthedocs.io/en/latest/\" rel=\"nofollow\">Flask-RESTful</a>. It adds\nsupport for building <a href=\"http://stateless.co/hal_specification.html\" rel=\"nofollow\">HAL APIs</a>.</p>\n<h2>Installation</h2>\n<p>The latest version can be obtained from PyPI:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">flask</span><span class=\"o\">-</span><span class=\"n\">restful</span><span class=\"o\">-</span><span class=\"n\">hal</span>\n</pre>\n<p>If you use Arch Linux or one of its derivatives, you can also install <code>flask-restful-hal</code> from the\n<a href=\"https://aur.archlinux.org/packages/python-flask-restful-hal/\" rel=\"nofollow\">AUR</a>:</p>\n<pre>yay -S python-flask-restful-hal\n</pre>\n<h2>Usage</h2>\n<p><em>Flask-RESTful-HAL</em> extends the <code>Resource</code> base class of Flask-RESTful. Instead of defining a <code>get</code> method, a <code>data</code>\nmethod must be implemented which returns the contents of the resource class. In addition the two optional methods\n<code>embedded</code> and <code>links</code> can be defined to describe which resources are embedded and linked to the current resource. All\nthree methods can be defined as <code>staticmethod</code> if no data needs to be shared between the method invocations (see the\n<a href=\"#sharing-data-between-methods\" rel=\"nofollow\">section about data sharing</a> for more information).</p>\n<h3>Example of a minimal resource class</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_hal</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">TODOS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'todo1'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'build an API'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo2'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'?????'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo3'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'profit!'</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Todo</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">TODOS</span><span class=\"p\">[</span><span class=\"n\">todo</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">Todo</span><span class=\"p\">,</span> <span class=\"s1\">'/todos/&lt;todo&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>In this example, the only required method <code>data</code> is implemented and returns the requested todo entry as a Python\ndictionary. By default, this dictionary is parsed to a json string and returned in an HTTP response with content type\n<code>application/hal+json</code>. If the Python package <code>json2html</code> is installed, the client can request an HTML output as an\nalternative (by sending <code>Accept: text/html</code>).</p>\n<p>When requesting the resource, the client may add the query string <code>links=true</code> to get linked resources. Since no <code>links</code>\nmethod is implemented, only the default <code>self</code> link will be included in the response.</p>\n<h3>Example of a resource class with embedded and linked resources</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_hal</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Embedded</span><span class=\"p\">,</span> <span class=\"n\">Link</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">TODOS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'todo1'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'build an API'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo2'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'?????'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo3'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'profit!'</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Todo</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">TODOS</span><span class=\"p\">[</span><span class=\"n\">todo</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">links</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Link</span><span class=\"p\">(</span><span class=\"s1\">'collection'</span><span class=\"p\">,</span> <span class=\"s1\">'/todos'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TodoList</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'size'</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">TODOS</span><span class=\"p\">)}</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">embedded</span><span class=\"p\">():</span>\n        <span class=\"n\">arguments_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">todo</span><span class=\"p\">,</span> <span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">todo</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">TODOS</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">return</span> <span class=\"n\">Embedded</span><span class=\"p\">(</span><span class=\"s1\">'items'</span><span class=\"p\">,</span> <span class=\"n\">Todo</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">arguments_list</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">links</span><span class=\"p\">():</span>\n        <span class=\"n\">arguments_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'/todos/</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"n\">todo</span><span class=\"p\">})</span> <span class=\"k\">for</span> <span class=\"n\">todo</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">TODOS</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">return</span> <span class=\"n\">Link</span><span class=\"p\">(</span><span class=\"s1\">'items'</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">arguments_list</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">TodoList</span><span class=\"p\">,</span> <span class=\"s1\">'/todos'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">Todo</span><span class=\"p\">,</span> <span class=\"s1\">'/todos/&lt;todo&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>Links can be added by returning one or multiple <code>Link</code> objects from a static <code>links</code> routine. The <code>Link</code> constructor\ntakes a relationship (e.g. <code>collection</code>, <code>up</code> or <code>item</code>) and one or multiple link targets. Link targets can either be\nexpressed as a string (href attribute) or as a tuple consisting of a href string and a dictionary with extra\nattributes. In the example <code>title</code> is used as an extra attribute.</li>\n<li>Embedded resources are expressed with one or multiple <code>Embedded</code> objects. Again, the first parameter is a\nrelationship. The second parameter is the embedded resource class and the following parameters are tuples with\nconstructor arguments for that class.</li>\n</ol>\n<p>By default, no resources are embedded. Embedding resources can be requested with the query string <code>embed=true</code> which\naffects all resources recursively (embedded resources can embed resources as well). This behavior can be changed by\nspecifying a concrete level of embedding (e.g. <code>embed=2</code> would only embed two levels of resources).</p>\n<h3>Sharing data between methods</h3>\n<p>In most cases, the <code>data</code>, <code>embedded</code> and <code>links</code> methods need access to the same data source. In order to avoid\naccessing the data backend (for example a database) three times with similar queries you can define a forth <code>pre_hal</code>\nmethod which is called on every <code>GET</code> request before <code>data</code>, <code>embedded</code> or <code>links</code> are executed. In <code>pre_hal</code> you can\naccess the data backend and cache the result in instance variables of the current resource object.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TodoList</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pre_hal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">embed</span><span class=\"p\">,</span> <span class=\"n\">include_links</span><span class=\"p\">,</span> <span class=\"n\">todo</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">todos</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'size'</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">todos</span><span class=\"p\">)}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">embedded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">arguments_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">todo</span><span class=\"p\">,</span> <span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">todo</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">todos</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">return</span> <span class=\"n\">Embedded</span><span class=\"p\">(</span><span class=\"s1\">'items'</span><span class=\"p\">,</span> <span class=\"n\">Todo</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">arguments_list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">links</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">arguments_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'/todos/</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"n\">todo</span><span class=\"p\">})</span> <span class=\"k\">for</span> <span class=\"n\">todo</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">todos</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">return</span> <span class=\"n\">Link</span><span class=\"p\">(</span><span class=\"s1\">'items'</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">arguments_list</span><span class=\"p\">)</span>\n</pre>\n<h3>Securing API endpoints</h3>\n<p><em>Flask-RESTful-HAL</em> does not include any authorization mechanisms to secure your api endpoints. However, you can easily\nintegrate available Flask extensions by overriding the <code>Resource</code> class. The following example uses\n<a href=\"http://flask-jwt-extended.readthedocs.io/en/latest/\" rel=\"nofollow\">Flask-JWT-Extended</a> to secure <code>GET</code> requests with <em>JSON Web\nTokens</em>. Tokens are generated by a special endpoint <code>/auth_token</code> that is secured with <em>basic auth</em>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_httpauth</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPBasicAuth</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_jwt_extended</span> <span class=\"kn\">import</span> <span class=\"n\">JWTManager</span><span class=\"p\">,</span> <span class=\"n\">create_access_token</span><span class=\"p\">,</span> <span class=\"n\">jwt_required</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span> <span class=\"k\">as</span> <span class=\"n\">RestResource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_hal</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Embedded</span><span class=\"p\">,</span> <span class=\"n\">Link</span><span class=\"p\">,</span> <span class=\"n\">Resource</span> <span class=\"k\">as</span> <span class=\"n\">HalResource</span>\n\n<span class=\"n\">TODOS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'todo1'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'build an API'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo2'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'?????'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'todo3'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'profit!'</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">http_basic_auth</span> <span class=\"o\">=</span> <span class=\"n\">HTTPBasicAuth</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@http_basic_auth</span><span class=\"o\">.</span><span class=\"n\">verify_password</span>\n<span class=\"k\">def</span> <span class=\"nf\">verify_password</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">username</span>\n    <span class=\"c1\"># TODO: implement some check here...</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SecuredHalResource</span><span class=\"p\">(</span><span class=\"n\">HalResource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@jwt_required</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthToken</span><span class=\"p\">(</span><span class=\"n\">RestResource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@http_basic_auth</span><span class=\"o\">.</span><span class=\"n\">login_required</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">auth_token</span> <span class=\"o\">=</span> <span class=\"n\">create_access_token</span><span class=\"p\">(</span><span class=\"n\">identity</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span><span class=\"s1\">'auth_token'</span><span class=\"p\">:</span> <span class=\"n\">auth_token</span><span class=\"p\">})</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Todo</span><span class=\"p\">(</span><span class=\"n\">SecuredHalResource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">TODOS</span><span class=\"p\">[</span><span class=\"n\">todo</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'PROPAGATE_EXCEPTIONS'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># must be set, otherwise jwt error handling won't work with flask-restful</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'JWT_SECRET_KEY'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'use your super secret key here!'</span>\n<span class=\"n\">JWTManager</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">AuthToken</span><span class=\"p\">,</span> <span class=\"s1\">'/auth_token'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">Todo</span><span class=\"p\">,</span> <span class=\"s1\">'/todos/&lt;todo&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>Tokens requested with the <code>/auth_token</code> endpoint can then be used in the HTTP authorization header with the <em>Bearer</em>\nscheme to gain access to secured resources:</p>\n<pre><span class=\"err\">Authorization: Bearer &lt;token&gt;</span>\n</pre>\n\n          </div>"}, "last_serial": 7098874, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "aff94eecddb131ac1172284678351729", "sha256": "a835070b958e4155b73708a53a3bbb440c778888acf0177918b72a36d0c89348"}, "downloads": -1, "filename": "flask_restful_hal-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aff94eecddb131ac1172284678351729", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9648, "upload_time": "2018-03-21T16:38:41", "upload_time_iso_8601": "2018-03-21T16:38:41.986240Z", "url": "https://files.pythonhosted.org/packages/06/b2/5d944b9fb648ccb1f61740a19ca1625564bdc2991961b1daa862ef2dde82/flask_restful_hal-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0284806783caeaa193a37fc018572dc0", "sha256": "591a68b16f526f41f3a8443a684e6679a75308fa8dc6e67edd17d659346d3d2b"}, "downloads": -1, "filename": "flask_restful_hal-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0284806783caeaa193a37fc018572dc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9643, "upload_time": "2018-03-21T16:33:08", "upload_time_iso_8601": "2018-03-21T16:33:08.157153Z", "url": "https://files.pythonhosted.org/packages/9b/74/baac3d2ef68735501a348cbec0a63b80b16983e700847e208fcf191b9d47/flask_restful_hal-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7dc009aabccf6877ed5af9ce818e393", "sha256": "6d09853bf7a92c878781d41e02e169bc83eeac7c58a02fa3c455c3cebb6970fc"}, "downloads": -1, "filename": "flask-restful-hal-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b7dc009aabccf6877ed5af9ce818e393", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6304, "upload_time": "2018-03-21T16:33:09", "upload_time_iso_8601": "2018-03-21T16:33:09.690827Z", "url": "https://files.pythonhosted.org/packages/2b/7e/13dec4e8218f77f241b1016e3966141629d0c7ca8f9ebdf2025cedc4735d/flask-restful-hal-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "eb02c95cdcdb34b0c7542f767d0f8bdc", "sha256": "bd907d771390940d395d57b23fe121f79432636872125490558f2243b7ee6a0c"}, "downloads": -1, "filename": "flask_restful_hal-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eb02c95cdcdb34b0c7542f767d0f8bdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10863, "upload_time": "2018-03-22T09:25:19", "upload_time_iso_8601": "2018-03-22T09:25:19.977711Z", "url": "https://files.pythonhosted.org/packages/42/57/37cde7dd290aeaa494290e9f0ce62937ef0c267e0ac4db7f5f0bdd9c5368/flask_restful_hal-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db66a2eccc60ff541e6d2707fa453944", "sha256": "f97db2274f821ba7ded77f2ba276806b99296d1cd754fd69c376b42f502b39bf"}, "downloads": -1, "filename": "flask-restful-hal-0.1.1.tar.gz", "has_sig": false, "md5_digest": "db66a2eccc60ff541e6d2707fa453944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7146, "upload_time": "2018-03-22T09:25:21", "upload_time_iso_8601": "2018-03-22T09:25:21.482086Z", "url": "https://files.pythonhosted.org/packages/99/1f/39410c9184d01dd791433883bbf45358e76a3a3a4ed3d1278606f5c15c23/flask-restful-hal-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "75d821f1d0d5894069b1aab66d597585", "sha256": "f3f9c977092c2129d404c51297072e5565a9d8bef06a4beac03002a0116e0590"}, "downloads": -1, "filename": "flask_restful_hal-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75d821f1d0d5894069b1aab66d597585", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10857, "upload_time": "2018-03-22T10:16:37", "upload_time_iso_8601": "2018-03-22T10:16:37.827444Z", "url": "https://files.pythonhosted.org/packages/0f/ee/5128b9f195e5a98fcf4cc5467a035a2bc7d37cfa5ac431868a6c902f2fe3/flask_restful_hal-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b66b95c6f9631d38a3a6e116f501567d", "sha256": "8f94377394c9b791df5474d910c5005a58e17e231c6f0f82949f35efcd56f36d"}, "downloads": -1, "filename": "flask-restful-hal-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b66b95c6f9631d38a3a6e116f501567d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7156, "upload_time": "2018-03-22T10:16:39", "upload_time_iso_8601": "2018-03-22T10:16:39.517794Z", "url": "https://files.pythonhosted.org/packages/e0/4b/3f8cae79f7ce50860afa9f49982c46be89c10b64d9b7e7476a79e265f8e4/flask-restful-hal-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2fda9adc01725f5744a2cf6a0408b553", "sha256": "22e58b0725b200dc5acec835e6e6e9658c2b001c61806289280cf0d89195dce4"}, "downloads": -1, "filename": "flask_restful_hal-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2fda9adc01725f5744a2cf6a0408b553", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10824, "upload_time": "2018-03-23T13:40:27", "upload_time_iso_8601": "2018-03-23T13:40:27.877013Z", "url": "https://files.pythonhosted.org/packages/af/b7/deb0f0662691e9b99eb4f2160246938b4f7b7bbd91b7a5a123329c4e73c6/flask_restful_hal-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9121238cf56f113e07abfafd6e89021e", "sha256": "1a204556998ed3c4a13a9ef6f3994a1a14d1b7287ad19b5bfa22462cc8c3b372"}, "downloads": -1, "filename": "flask-restful-hal-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9121238cf56f113e07abfafd6e89021e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7137, "upload_time": "2018-03-23T13:40:28", "upload_time_iso_8601": "2018-03-23T13:40:28.854235Z", "url": "https://files.pythonhosted.org/packages/f7/da/83818593723b459b3dbce2d887de67ba7e138e2f2abf25211adca3734fda/flask-restful-hal-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a2a00e086777b0c07b2f6b0179f50a8c", "sha256": "c174623a30fc1c1412fc985cecf525f4fd856c63f30c3337e72c2e511cafcf89"}, "downloads": -1, "filename": "flask_restful_hal-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a2a00e086777b0c07b2f6b0179f50a8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10878, "upload_time": "2018-03-23T15:02:02", "upload_time_iso_8601": "2018-03-23T15:02:02.339047Z", "url": "https://files.pythonhosted.org/packages/5c/83/375b0ffcb07dbf4a37237e9f827f2b801a86e4415e2c81c5f4db0b653477/flask_restful_hal-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5dc3e2f5434e7a66a2e116589ce7fa3d", "sha256": "b769e69186f941ed69048dc9b54ad3f273983e055f4e5da32e9ee2ae58d3804a"}, "downloads": -1, "filename": "flask-restful-hal-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5dc3e2f5434e7a66a2e116589ce7fa3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7252, "upload_time": "2018-03-23T15:02:03", "upload_time_iso_8601": "2018-03-23T15:02:03.438002Z", "url": "https://files.pythonhosted.org/packages/56/1c/45a0eaaa4158a6b1d00d2c9f2b8c481293d0258b561afb31b2764ef2d55c/flask-restful-hal-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "2266aeabd026f774a92a4fc45c1bf350", "sha256": "dc50a1e52e9e5dbfce01367e5fed0dafce04190d3284859bd650636b4ef5fb34"}, "downloads": -1, "filename": "flask_restful_hal-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2266aeabd026f774a92a4fc45c1bf350", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10879, "upload_time": "2018-03-28T08:30:27", "upload_time_iso_8601": "2018-03-28T08:30:27.032160Z", "url": "https://files.pythonhosted.org/packages/cc/02/53c7a7bfe6bddb566be8c42a96c761f8919426a9c6c06737365f293ae70e/flask_restful_hal-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b1b22ec57730a82858712584084145f", "sha256": "91ed140f9c93a49c14c048e924be42e23edbfbb154d3607d1f6ca15c455e07f8"}, "downloads": -1, "filename": "flask-restful-hal-0.1.5.tar.gz", "has_sig": false, "md5_digest": "9b1b22ec57730a82858712584084145f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8119, "upload_time": "2018-03-28T08:30:28", "upload_time_iso_8601": "2018-03-28T08:30:28.015266Z", "url": "https://files.pythonhosted.org/packages/62/c0/f60ec99e73d8ac05c8cbe77de86d41307a9c75be407f00ecd62e0b06859c/flask-restful-hal-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "58e953b5e27f3ec81cb776e0d648fddd", "sha256": "e73fa6cd3bbd049e30e0838a3708a6de83301fd435a78f5292703677ae594c6b"}, "downloads": -1, "filename": "flask_restful_hal-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58e953b5e27f3ec81cb776e0d648fddd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7820, "upload_time": "2018-04-05T09:12:50", "upload_time_iso_8601": "2018-04-05T09:12:50.826323Z", "url": "https://files.pythonhosted.org/packages/9d/1f/5635c646fc96b2326675ae4463670d5025c583f0c94d33d359ce944b82eb/flask_restful_hal-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b42cff46fba17d6b523c758149588fe", "sha256": "7bdbb850e3b799bb821a7985051e7dadb8387910e0c878c3e91375a049845ed9"}, "downloads": -1, "filename": "flask-restful-hal-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5b42cff46fba17d6b523c758149588fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8144, "upload_time": "2018-04-05T09:12:51", "upload_time_iso_8601": "2018-04-05T09:12:51.875002Z", "url": "https://files.pythonhosted.org/packages/cc/7f/3b025732a616c3ea5f562e79533a3bf2d0e6b8fcfe5ac85891a2e47af711/flask-restful-hal-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "92216b812f7fcbd8867391daaea17769", "sha256": "032a615af2d5102ebf9894417a6619aa426a4688fd00f6d6aad4ac0ab206a434"}, "downloads": -1, "filename": "flask_restful_hal-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92216b812f7fcbd8867391daaea17769", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8227, "upload_time": "2018-06-04T07:54:57", "upload_time_iso_8601": "2018-06-04T07:54:57.179431Z", "url": "https://files.pythonhosted.org/packages/55/75/df9caca6349a654adc416833999c7dde9f79ca0370b7eb119a66fc0f97f3/flask_restful_hal-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32d2e984a700bba6468e947dae67b167", "sha256": "1f80818d9c346188f2d54ada6b28cedfdc7c84a3450a37d0048822e06f50a52c"}, "downloads": -1, "filename": "flask-restful-hal-0.2.0.tar.gz", "has_sig": false, "md5_digest": "32d2e984a700bba6468e947dae67b167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9768, "upload_time": "2018-06-04T07:54:58", "upload_time_iso_8601": "2018-06-04T07:54:58.511454Z", "url": "https://files.pythonhosted.org/packages/36/75/28c66adfcc76739526e7f32d416d5d0463b0036579869a556c852cb587f9/flask-restful-hal-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f8b1d7bff8b2460aada80f7d4ba53341", "sha256": "f9d0a22d4c409a2f63bc48db32bbe8fb45611c2bac3d933c70ef66d13f9bdf92"}, "downloads": -1, "filename": "flask_restful_hal-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8b1d7bff8b2460aada80f7d4ba53341", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 8249, "upload_time": "2018-06-04T09:51:07", "upload_time_iso_8601": "2018-06-04T09:51:07.088927Z", "url": "https://files.pythonhosted.org/packages/86/71/1363a98c88b45ecd1c2c0f63ebdec44628757a1fcc007bfcc688bd58a64a/flask_restful_hal-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d90d029908573a96e4cf833dc45a66a", "sha256": "0a9819870187001e387a8b3a6f38e66c456311bf83dc28ad3ac966c2e87831d6"}, "downloads": -1, "filename": "flask-restful-hal-0.2.1.tar.gz", "has_sig": false, "md5_digest": "3d90d029908573a96e4cf833dc45a66a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 9817, "upload_time": "2018-06-04T09:51:08", "upload_time_iso_8601": "2018-06-04T09:51:08.536625Z", "url": "https://files.pythonhosted.org/packages/ef/6e/354e70b688aa422002406dabb18f837a053f9f863efffed817f517555c31/flask-restful-hal-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "fc0f0c943d9300c0602f196972535c27", "sha256": "772c5a1fa6471d2459d0ec73392b7993760e8d95e0f19cd23510e756957906ad"}, "downloads": -1, "filename": "flask_restful_hal-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fc0f0c943d9300c0602f196972535c27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 6641, "upload_time": "2020-04-23T21:08:17", "upload_time_iso_8601": "2020-04-23T21:08:17.780643Z", "url": "https://files.pythonhosted.org/packages/5d/89/16ca768b49091fc0bff11cd2914f2f1de02425a22f763dc55406c5603b82/flask_restful_hal-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b765c06df5376e7909483112a2475429", "sha256": "d0c353564d36a7a676d25ae13f08d9ec88a4d634776f1e51a4c970c1f0cd835f"}, "downloads": -1, "filename": "flask-restful-hal-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b765c06df5376e7909483112a2475429", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 8535, "upload_time": "2020-04-23T21:08:18", "upload_time_iso_8601": "2020-04-23T21:08:18.696831Z", "url": "https://files.pythonhosted.org/packages/51/03/bef678546a47ed5b73b5f2789357270aa4c19526cf934309bb62a13ffaf2/flask-restful-hal-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1eefeeef4e3b9e91e720e824faf6a686", "sha256": "460f54854f4e989f60fa9f510f8393a18fc6180b98aff28fe09c3db25a328bc7"}, "downloads": -1, "filename": "flask_restful_hal-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1eefeeef4e3b9e91e720e824faf6a686", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 6642, "upload_time": "2020-04-23T21:17:38", "upload_time_iso_8601": "2020-04-23T21:17:38.892424Z", "url": "https://files.pythonhosted.org/packages/21/d8/cc08ecb29d041cd7ee018c62e94441c22b226d60f568c9269113a7ed2042/flask_restful_hal-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b3e3f0da868260c5fffafdae36a8002", "sha256": "3abffdf99b2b4af85c8ee268c6410b34da7b51bd315732bf7c139be1f07f0cf4"}, "downloads": -1, "filename": "flask-restful-hal-0.2.3.tar.gz", "has_sig": false, "md5_digest": "5b3e3f0da868260c5fffafdae36a8002", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 8530, "upload_time": "2020-04-23T21:17:39", "upload_time_iso_8601": "2020-04-23T21:17:39.944356Z", "url": "https://files.pythonhosted.org/packages/64/ed/aad2558c3fb019bfc952e55d33c81a83f2317263469455bfd8bdf5d8676e/flask-restful-hal-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "bfa2ca5ed7da8604162b400c3eab9507", "sha256": "5409d9f9c75d4358786d0c4dd3083637643d4efb2d22596896c876a85295442e"}, "downloads": -1, "filename": "flask_restful_hal-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bfa2ca5ed7da8604162b400c3eab9507", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 6647, "upload_time": "2020-04-24T19:09:41", "upload_time_iso_8601": "2020-04-24T19:09:41.483136Z", "url": "https://files.pythonhosted.org/packages/8a/4d/7b2669b478e21dfa45af658a724384a01b2a7ded9d4c6ddda4cb97a32a0c/flask_restful_hal-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc66fb11b08dc2826c0ea402e49e64ae", "sha256": "b5612c43360a12701ec5f13f45d3b2dc9af2c6569033544670bc4d035c424bd5"}, "downloads": -1, "filename": "flask-restful-hal-0.2.4.tar.gz", "has_sig": false, "md5_digest": "dc66fb11b08dc2826c0ea402e49e64ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 8517, "upload_time": "2020-04-24T19:09:42", "upload_time_iso_8601": "2020-04-24T19:09:42.424273Z", "url": "https://files.pythonhosted.org/packages/e8/2f/ea1023f6a04fd5ee876bdc3f9771f82d21abd3668292763ec2235bb300b8/flask-restful-hal-0.2.4.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "1139d10b5de53ac4e8ea32ef565ab88e", "sha256": "39a75cff5e8df5104568a48c7ee11ee1a540e6c6c7f9fda2d57639d971e9bc72"}, "downloads": -1, "filename": "flask_restful_hal-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1139d10b5de53ac4e8ea32ef565ab88e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 9212, "upload_time": "2020-04-25T10:09:26", "upload_time_iso_8601": "2020-04-25T10:09:26.712832Z", "url": "https://files.pythonhosted.org/packages/0f/11/8efecb433c594aea278dd02f7c6a5c8a9b2d768d9c9eb9c040817b9dd259/flask_restful_hal-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3811357cbbd7d313866091baf6902fa4", "sha256": "84b5ca3d60b67452d01f9cbac14b8565b486546baf3a07e8cc778fa70247684d"}, "downloads": -1, "filename": "flask-restful-hal-0.2.6.tar.gz", "has_sig": false, "md5_digest": "3811357cbbd7d313866091baf6902fa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 11231, "upload_time": "2020-04-25T10:09:27", "upload_time_iso_8601": "2020-04-25T10:09:27.985362Z", "url": "https://files.pythonhosted.org/packages/3c/77/9d1ac8a575a4babff5f17287b32fae0545bdbe1dd0fc2fb679e769b5cbce/flask-restful-hal-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1139d10b5de53ac4e8ea32ef565ab88e", "sha256": "39a75cff5e8df5104568a48c7ee11ee1a540e6c6c7f9fda2d57639d971e9bc72"}, "downloads": -1, "filename": "flask_restful_hal-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1139d10b5de53ac4e8ea32ef565ab88e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 9212, "upload_time": "2020-04-25T10:09:26", "upload_time_iso_8601": "2020-04-25T10:09:26.712832Z", "url": "https://files.pythonhosted.org/packages/0f/11/8efecb433c594aea278dd02f7c6a5c8a9b2d768d9c9eb9c040817b9dd259/flask_restful_hal-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3811357cbbd7d313866091baf6902fa4", "sha256": "84b5ca3d60b67452d01f9cbac14b8565b486546baf3a07e8cc778fa70247684d"}, "downloads": -1, "filename": "flask-restful-hal-0.2.6.tar.gz", "has_sig": false, "md5_digest": "3811357cbbd7d313866091baf6902fa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 11231, "upload_time": "2020-04-25T10:09:27", "upload_time_iso_8601": "2020-04-25T10:09:27.985362Z", "url": "https://files.pythonhosted.org/packages/3c/77/9d1ac8a575a4babff5f17287b32fae0545bdbe1dd0fc2fb679e769b5cbce/flask-restful-hal-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:26 2020"}