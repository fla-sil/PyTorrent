{"info": {"author": "halfcrazy", "author_email": "hackzhuyan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "|Build Status| |Coverage Status| |PyPI Version| |PyPI Downloads|\r\n\r\nFlask-SlackBot\r\n===================\r\n\r\nFlask-SlackBot is a Flask extension which helps you deal with slack's outgoing webhook.\r\n\r\nInstallation\r\n------------\r\n::\r\n\r\n    $ pip install flask-slackbot\r\n\r\n\r\nUsage\r\n-----\r\n\r\n.. code-block:: python\r\n\r\n    # coding=utf-8\r\n    from flask import Flask\r\n\r\n    from flask_slackbot import SlackBot\r\n\r\n\r\n    app = Flask(__name__)\r\n    app.config['SLACK_TOKEN'] = 'Your token here'\r\n    # if you need to use slacker you should give a slack chat token\r\n    app.config['SLACK_CHAT_TOKEN'] = 'Your slack chat token'\r\n    app.config['SLACK_CALLBACK'] = '/slack_callback'\r\n    app.debug = True\r\n    slackbot = SlackBot(app)\r\n\r\n    '''\r\n    The parameter of the callback function is a dict returns from the slack's outgoing api.\r\n    Here is the detail:\r\n    kwargs\r\n    {\r\n        'token': token,\r\n        'team_id': team_id,\r\n        'team_domain': team_domain,\r\n        'channel_id': channel_id,\r\n        'channel_name': channel_name,\r\n        'timestamp': timestamp,\r\n        'user_id': user_id,\r\n        'user_name': user_name,\r\n        'text': text,\r\n        'trigger_word': trigger_word\r\n    }'''\r\n    def fn1(kwargs):\r\n        '''\r\n        This function shows response the slack post directly without an extra post.\r\n        In this case, you need to return a dict.'''\r\n        return {'text': '!' + kwargs['text']} # Note the '!' character here is an user defined flag to tell the slack, this message is sent from the bot.\r\n\r\n\r\n    def fn4(kwargs):\r\n        '''\r\n        This function looks like upper one. But a little different, this will only response to the sender.\r\n        In this case, you need to return a dict with an extra key private setted as True.\r\n        And if you need this function, you should given the slack chat token in config.'''\r\n        return {'text': '!' + kwargs['text'], 'private': True} # Note the '!' character here is an user defined flag to tell the slack, this message is sent from the bot.\r\n\r\n\r\n    def fn2(kwargs):\r\n        '''\r\n        This function shows response the slack post indirectly with an extra post.\r\n        In this case, you need to return None.\r\n        Now the slack will ignore the response from this request, and if you need do some complex task you can use the built-in slacker.\r\n        For more information, see https://github.com/os/slacker'''\r\n        slackbot.slack.chat.post_message('#general', 'hello from slacker handler')\r\n        return None\r\n\r\n\r\n    def fn3(text):\r\n        '''\r\n        This function is a filter, which makes our bot ignore the text sent from itself.'''\r\n        return text.startswith('!')\r\n\r\n    slackbot.set_handler(fn1)\r\n    slackbot.filter_outgoing(fn3)\r\n\r\n\r\n    if __name__ == \"__main__\":\r\n        app.run()\r\n\r\n\r\nTrap\r\n------------\r\nIf you have not set a trigger word, and your callback server return some text to slack, there would be a callback hell. You know like ping pong, and then turn into an infinite loop.\r\n\r\n.. |Build Status| image:: https://travis-ci.org/python-cn/flask-slackbot.svg?branch=master\r\n   :target: https://travis-ci.org/python-cn/flask-slackbot\r\n   :alt: Build Status\r\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/Flask-Slackbot.svg\r\n   :target: https://pypi.python.org/pypi/Flask-SlackBot\r\n   :alt: PyPI Version\r\n.. |PyPI Downloads| image:: https://img.shields.io/pypi/dm/Flask-SlackBot.svg\r\n   :target: https://pypi.python.org/pypi/Flask-SlackBot\r\n   :alt: Downloads\r\n.. |Coverage Status| image:: https://img.shields.io/coveralls/python-cn/flask-slackbot.svg\r\n   :target: https://coveralls.io/r/python-cn/flask-slackbot\r\n   :alt: Coverage Status", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/python-cn/flask-slackbot", "keywords": "", "license": "MIT", "maintainer": "dongweiming", "maintainer_email": "ciici123@gmail.com", "name": "flask_slackbot", "package_url": "https://pypi.org/project/flask_slackbot/", "platform": "any", "project_url": "https://pypi.org/project/flask_slackbot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/python-cn/flask-slackbot"}, "release_url": "https://pypi.org/project/flask_slackbot/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Deal with slack outgoing webhook", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/python-cn/flask-slackbot\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87b60f69b625b2f40879f173812c36944eb4cc74/68747470733a2f2f7472617669732d63692e6f72672f707974686f6e2d636e2f666c61736b2d736c61636b626f742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/python-cn/flask-slackbot\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b86272288d94a8fef63fb3c2909b9ae77c4995a9/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f707974686f6e2d636e2f666c61736b2d736c61636b626f742e737667\"></a> <a href=\"https://pypi.python.org/pypi/Flask-SlackBot\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c19d44f4fe0a9684cc9e828a9ed13a8cf459e5f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f466c61736b2d536c61636b626f742e737667\"></a> <a href=\"https://pypi.python.org/pypi/Flask-SlackBot\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3969d218064877dc9b9e75a76945fced9ca50d97/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f466c61736b2d536c61636b426f742e737667\"></a></p>\n<div id=\"flask-slackbot\">\n<h2>Flask-SlackBot</h2>\n<p>Flask-SlackBot is a Flask extension which helps you deal with slack\u2019s outgoing webhook.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install flask-slackbot\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"c1\"># coding=utf-8</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_slackbot</span> <span class=\"kn\">import</span> <span class=\"n\">SlackBot</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SLACK_TOKEN'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Your token here'</span>\n<span class=\"c1\"># if you need to use slacker you should give a slack chat token</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SLACK_CHAT_TOKEN'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Your slack chat token'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SLACK_CALLBACK'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'/slack_callback'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">slackbot</span> <span class=\"o\">=</span> <span class=\"n\">SlackBot</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\nThe parameter of the callback function is a dict returns from the slack's outgoing api.\nHere is the detail:\nkwargs\n{\n    'token': token,\n    'team_id': team_id,\n    'team_domain': team_domain,\n    'channel_id': channel_id,\n    'channel_name': channel_name,\n    'timestamp': timestamp,\n    'user_id': user_id,\n    'user_name': user_name,\n    'text': text,\n    'trigger_word': trigger_word\n}'''</span>\n<span class=\"k\">def</span> <span class=\"nf\">fn1</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''\n    This function shows response the slack post directly without an extra post.\n    In this case, you need to return a dict.'''</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'!'</span> <span class=\"o\">+</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'text'</span><span class=\"p\">]}</span> <span class=\"c1\"># Note the '!' character here is an user defined flag to tell the slack, this message is sent from the bot.</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fn4</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''\n    This function looks like upper one. But a little different, this will only response to the sender.\n    In this case, you need to return a dict with an extra key private setted as True.\n    And if you need this function, you should given the slack chat token in config.'''</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'!'</span> <span class=\"o\">+</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'text'</span><span class=\"p\">],</span> <span class=\"s1\">'private'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span> <span class=\"c1\"># Note the '!' character here is an user defined flag to tell the slack, this message is sent from the bot.</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fn2</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''\n    This function shows response the slack post indirectly with an extra post.\n    In this case, you need to return None.\n    Now the slack will ignore the response from this request, and if you need do some complex task you can use the built-in slacker.\n    For more information, see https://github.com/os/slacker'''</span>\n    <span class=\"n\">slackbot</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">post_message</span><span class=\"p\">(</span><span class=\"s1\">'#general'</span><span class=\"p\">,</span> <span class=\"s1\">'hello from slacker handler'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fn3</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''\n    This function is a filter, which makes our bot ignore the text sent from itself.'''</span>\n    <span class=\"k\">return</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'!'</span><span class=\"p\">)</span>\n\n<span class=\"n\">slackbot</span><span class=\"o\">.</span><span class=\"n\">set_handler</span><span class=\"p\">(</span><span class=\"n\">fn1</span><span class=\"p\">)</span>\n<span class=\"n\">slackbot</span><span class=\"o\">.</span><span class=\"n\">filter_outgoing</span><span class=\"p\">(</span><span class=\"n\">fn3</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"trap\">\n<h3>Trap</h3>\n<p>If you have not set a trigger word, and your callback server return some text to slack, there would be a callback hell. You know like ping pong, and then turn into an infinite loop.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1615677, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "bb0a4eab59a3496a2666b645434eea5f", "sha256": "f4da01198da7ebe495fa18fef5b4e749d79442c4c7d9b9259a036313dd974fff"}, "downloads": -1, "filename": "flask_slackbot-0.2.1.zip", "has_sig": false, "md5_digest": "bb0a4eab59a3496a2666b645434eea5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9045, "upload_time": "2015-06-24T07:33:58", "upload_time_iso_8601": "2015-06-24T07:33:58.703881Z", "url": "https://files.pythonhosted.org/packages/b7/a8/cb996fe2fdd4ff7066bb7f7dcdb45c56644fff46d72d2bb297f3cfac039b/flask_slackbot-0.2.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb0a4eab59a3496a2666b645434eea5f", "sha256": "f4da01198da7ebe495fa18fef5b4e749d79442c4c7d9b9259a036313dd974fff"}, "downloads": -1, "filename": "flask_slackbot-0.2.1.zip", "has_sig": false, "md5_digest": "bb0a4eab59a3496a2666b645434eea5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9045, "upload_time": "2015-06-24T07:33:58", "upload_time_iso_8601": "2015-06-24T07:33:58.703881Z", "url": "https://files.pythonhosted.org/packages/b7/a8/cb996fe2fdd4ff7066bb7f7dcdb45c56644fff46d72d2bb297f3cfac039b/flask_slackbot-0.2.1.zip", "yanked": false}], "timestamp": "Fri May  8 01:02:17 2020"}