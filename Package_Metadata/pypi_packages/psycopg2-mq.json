{"info": {"author": "Michael Merickel", "author_email": "oss@m.merickel.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "===========\npsycopg2_mq\n===========\n\n.. image:: https://img.shields.io/pypi/v/psycopg2_mq.svg\n    :target: https://pypi.org/pypi/psycopg2_mq\n\n.. image:: https://img.shields.io/travis/mmerickel/psycopg2_mq/master.svg\n    :target: https://travis-ci.org/mmerickel/psycopg2_mq\n\n``psycopg2_mq`` is a message queue implemented on top of\n`PostgreSQL <https://www.postgresql.org/>`__,\n`SQLAlchemy <https://www.sqlalchemy.org/>`__, and\n`psycopg2 <http://initd.org/psycopg/>`__.\n\nCurrently the library provides only the low-level constructs that can be used\nto build a multithreaded worker system. It is broken into two components:\n\n- ``psycopg2_mq.MQWorker`` - a reusable worker object that manages a\n  single-threaded worker that can accept jobs and execute them. An application\n  should create worker per thread. It supports an API for thread-safe graceful\n  shutdown.\n\n- ``psycopg2_mq.MQSource`` - a source object providing a client-side API for\n  invoking and querying job states.\n\nData Model\n==========\n\nQueues\n------\n\nWorkers run jobs defined in queues. Currently each queue will run jobs\nconcurrently, while a future version may support serial execution on a\nper-queue basis. Each registered queue should contain an ``execute_job(job)``\nmethod.\n\nJobs\n----\n\nThe ``execute_job`` method of a queue is passed a ``Job`` object containing\nthe following attributes:\n\n- ``id``\n- ``queue``\n- ``method``\n- ``args``\n- ``cursor``\n\nAs a convenience, there is an ``extend(**kw)`` method which can be used to\nadd extra attributes to the object. This is useful in individual queues to\ndefine a contract between a queue and its methods.\n\nCursors\n-------\n\nA ``Job`` can be scheduled with a ``cursor_key``. There can only be one\npending job and one running job for any cursor. New jobs scheduled while\nanother one is pending will be ignored and the pending job is returned.\n\nA ``job.cursor`` dict is provided to the workers containing the cursor data,\nand is saved back to the database when the job is completed. This effectively\ngives jobs some persistent, shared state, and serializes all jobs over a given\ncursor.\n\nScheduled Jobs\n--------------\n\nA ``Job`` can be scheduled in the future by providing a ``datetime`` object\nto the ``when`` argument. This, along with a cursor key, can provide a nice\nthrottle on how frequently a job runs. For example, schedule jobs to run in\n30 seconds with a ``cursor_key`` and any jobs that are scheduled in the\nmeantime will be dropped. The assumption here is that the arguments are\nconstant and data to continue execute is in the cursor or another table.\n\nExample Worker\n==============\n\n.. code-block:: python\n\n    from psycopg2_mq import (\n        MQWorker,\n        make_default_model,\n    )\n    from sqlalchemy import (\n        MetaData,\n        create_engine,\n    )\n    import sys\n\n    class EchoQueue:\n        def execute_job(self, job):\n            return f'hello, {job.args[\"name\"]} from method=\"{job.method}\"'\n\n    if __name__ == '__main__':\n        engine = create_engine(sys.argv[1])\n        metadata = MetaData()\n        model = make_default_model(metadata)\n        worker = MQWorker(\n            engine=engine,\n            queues={\n                'echo': EchoQueue(),\n            },\n            model=model,\n        )\n        worker.run()\n\nExample Source\n==============\n\n.. code-block:: python\n\n    engine = create_engine()\n    metadata = MetaData()\n    model = make_default_model(metadata)\n    session_factory = sessionmaker()\n    session_factory.configure(bind=engine)\n\n    dbsession = session_factory()\n    with dbsession.begin():\n      mq = MQSource(\n          dbsession=dbsession,\n          model=model,\n      )\n      job = mq.call('echo', 'hello', {'name': 'Andy'})\n      print(f'queued job={job.id}')\n\n\n0.4.4 (2019-11-07)\n==================\n\n- Ensure the advisory locks are released when a job completes.\n\n0.4.3 (2019-10-31)\n==================\n\n- Ensure maintenance (finding lost jobs) always runs at set intervals defined\n  by the ``timeout`` parameter.\n\n0.4.2 (2019-10-30)\n==================\n\n- Recover active jobs when the connection is lost by re-locking them\n  and ensuring they are marked running.\n\n0.4.1 (2019-10-30)\n==================\n\n- Attempt to reconnect to the database after losing the connection.\n  If the reconnect attempt fails then crash.\n\n0.4 (2019-10-28)\n================\n\n- Add a ``worker`` column to the ``Job`` model to track what worker\n  is handling a job.\n\n- Add an optional ``name`` argument to ``MQWorker`` to name the worker -\n  the value will be recorded in each job.\n\n- Add a ``threads`` argument (default=``1``) to ``MQWorker`` to support\n  handling multiple jobs from the same worker instance instead of making a\n  worker per thread.\n\n- Add ``capture_signals`` argument (default=``True``) to ``MQWorker`` which\n  will capture ``SIGTERM``, ``SIGINT`` and ``SIGUSR1``. The first two will\n  trigger graceful shutdown - they will make the process stop handling new\n  jobs while finishing active jobs. The latter will dump to ``stderr`` a\n  JSON dump of the current status of the worker.\n\n0.3.3 (2019-10-23)\n==================\n\n- Only save a cursor update if the job is completed successfully.\n\n0.3.2 (2019-10-22)\n==================\n\n- Mark lost jobs during timeouts instead of just when a worker starts in order\n  to catch them earlier.\n\n0.3.1 (2019-10-17)\n==================\n\n- When attempting to schedule a job with a cursor and a ``scheduled_time``\n  earlier than a pending job on the same cursor, the job will be updated to\n  run at the earlier time.\n\n- When attempting to schedule a job with a cursor and a pending job already\n  exists on the same cursor, a ``conflict_resolver`` function may be\n  supplied to ``MQSource.call`` to update the job properties, merging the\n  arguments however the user wishes.\n\n0.3 (2019-10-15)\n================\n\n- Add a new column ``cursor_snapshot`` to the ``Job`` model which will\n  contain the value of the cursor when the job begins.\n\n0.2 (2019-10-09)\n================\n\n- Add cursor support for jobs. This requires a schema migration to add\n  a ``cursor_key`` column, a new ``JobCursor`` model, and some new indices.\n\n0.1.6 (2019-10-07)\n==================\n\n- Support passing custom kwargs to the job in ``psycopg2_mq.MQSource.call``\n  to allow custom columns on the job table.\n\n0.1.5 (2019-05-17)\n==================\n\n- Fix a regression when serializing errors with strings or cycles.\n\n0.1.4 (2019-05-09)\n==================\n\n- More safely serialize exception objects when jobs fail.\n\n0.1.3 (2018-09-04)\n==================\n\n- Rename the thread to contain the job id while it's handling a job.\n\n0.1.2 (2018-09-04)\n==================\n\n- Rename ``Job.params`` to ``Job.args``.\n\n0.1.1 (2018-09-04)\n==================\n\n- Make ``psycopg2`` an optional dependency in order to allow apps to depend\n  on ``psycopg2-binary`` if they wish.\n\n0.1 (2018-09-04)\n================\n\n- Initial release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mmerickel/psycopg2_mq", "keywords": "psycopg2,postgres,postgresql", "license": "", "maintainer": "", "maintainer_email": "", "name": "psycopg2-mq", "package_url": "https://pypi.org/project/psycopg2-mq/", "platform": "", "project_url": "https://pypi.org/project/psycopg2-mq/", "project_urls": {"Homepage": "https://github.com/mmerickel/psycopg2_mq"}, "release_url": "https://pypi.org/project/psycopg2-mq/0.4.4/", "requires_dist": ["SQLAlchemy", "transaction", "zope.sqlalchemy", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "A message queue written around PostgreSQL.", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/pypi/psycopg2_mq\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/psycopg2_mq.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa14b4dab93402e93caf620d60fcbb8e9ce9bacb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707379636f7067325f6d712e737667\"></a>\n<a href=\"https://travis-ci.org/mmerickel/psycopg2_mq\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/mmerickel/psycopg2_mq/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7af78404c0cc726f6f5997412485369c9cd26f3d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6d657269636b656c2f707379636f7067325f6d712f6d61737465722e737667\"></a>\n<p><tt>psycopg2_mq</tt> is a message queue implemented on top of\n<a href=\"https://www.postgresql.org/\" rel=\"nofollow\">PostgreSQL</a>,\n<a href=\"https://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a>, and\n<a href=\"http://initd.org/psycopg/\" rel=\"nofollow\">psycopg2</a>.</p>\n<p>Currently the library provides only the low-level constructs that can be used\nto build a multithreaded worker system. It is broken into two components:</p>\n<ul>\n<li><tt>psycopg2_mq.MQWorker</tt> - a reusable worker object that manages a\nsingle-threaded worker that can accept jobs and execute them. An application\nshould create worker per thread. It supports an API for thread-safe graceful\nshutdown.</li>\n<li><tt>psycopg2_mq.MQSource</tt> - a source object providing a client-side API for\ninvoking and querying job states.</li>\n</ul>\n<div id=\"data-model\">\n<h2>Data Model</h2>\n<div id=\"queues\">\n<h3>Queues</h3>\n<p>Workers run jobs defined in queues. Currently each queue will run jobs\nconcurrently, while a future version may support serial execution on a\nper-queue basis. Each registered queue should contain an <tt>execute_job(job)</tt>\nmethod.</p>\n</div>\n<div id=\"jobs\">\n<h3>Jobs</h3>\n<p>The <tt>execute_job</tt> method of a queue is passed a <tt>Job</tt> object containing\nthe following attributes:</p>\n<ul>\n<li><tt>id</tt></li>\n<li><tt>queue</tt></li>\n<li><tt>method</tt></li>\n<li><tt>args</tt></li>\n<li><tt>cursor</tt></li>\n</ul>\n<p>As a convenience, there is an <tt><span class=\"pre\">extend(**kw)</span></tt> method which can be used to\nadd extra attributes to the object. This is useful in individual queues to\ndefine a contract between a queue and its methods.</p>\n</div>\n<div id=\"cursors\">\n<h3>Cursors</h3>\n<p>A <tt>Job</tt> can be scheduled with a <tt>cursor_key</tt>. There can only be one\npending job and one running job for any cursor. New jobs scheduled while\nanother one is pending will be ignored and the pending job is returned.</p>\n<p>A <tt>job.cursor</tt> dict is provided to the workers containing the cursor data,\nand is saved back to the database when the job is completed. This effectively\ngives jobs some persistent, shared state, and serializes all jobs over a given\ncursor.</p>\n</div>\n<div id=\"scheduled-jobs\">\n<h3>Scheduled Jobs</h3>\n<p>A <tt>Job</tt> can be scheduled in the future by providing a <tt>datetime</tt> object\nto the <tt>when</tt> argument. This, along with a cursor key, can provide a nice\nthrottle on how frequently a job runs. For example, schedule jobs to run in\n30 seconds with a <tt>cursor_key</tt> and any jobs that are scheduled in the\nmeantime will be dropped. The assumption here is that the arguments are\nconstant and data to continue execute is in the cursor or another table.</p>\n</div>\n</div>\n<div id=\"example-worker\">\n<h2>Example Worker</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">psycopg2_mq</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">MQWorker</span><span class=\"p\">,</span>\n    <span class=\"n\">make_default_model</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">MetaData</span><span class=\"p\">,</span>\n    <span class=\"n\">create_engine</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EchoQueue</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">execute_job</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s1\">'hello, </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s1\"> from method=\"</span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"si\">}</span><span class=\"s1\">\"'</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">MetaData</span><span class=\"p\">()</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">make_default_model</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n    <span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">MQWorker</span><span class=\"p\">(</span>\n        <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n        <span class=\"n\">queues</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'echo'</span><span class=\"p\">:</span> <span class=\"n\">EchoQueue</span><span class=\"p\">(),</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-source\">\n<h2>Example Source</h2>\n<pre><span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">()</span>\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">MetaData</span><span class=\"p\">()</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">make_default_model</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n<span class=\"n\">session_factory</span> <span class=\"o\">=</span> <span class=\"n\">sessionmaker</span><span class=\"p\">()</span>\n<span class=\"n\">session_factory</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n\n<span class=\"n\">dbsession</span> <span class=\"o\">=</span> <span class=\"n\">session_factory</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">dbsession</span><span class=\"o\">.</span><span class=\"n\">begin</span><span class=\"p\">():</span>\n  <span class=\"n\">mq</span> <span class=\"o\">=</span> <span class=\"n\">MQSource</span><span class=\"p\">(</span>\n      <span class=\"n\">dbsession</span><span class=\"o\">=</span><span class=\"n\">dbsession</span><span class=\"p\">,</span>\n      <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n  <span class=\"p\">)</span>\n  <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">,</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Andy'</span><span class=\"p\">})</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'queued job=</span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id1\">\n<h2>0.4.4 (2019-11-07)</h2>\n<ul>\n<li>Ensure the advisory locks are released when a job completes.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.4.3 (2019-10-31)</h2>\n<ul>\n<li>Ensure maintenance (finding lost jobs) always runs at set intervals defined\nby the <tt>timeout</tt> parameter.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.4.2 (2019-10-30)</h2>\n<ul>\n<li>Recover active jobs when the connection is lost by re-locking them\nand ensuring they are marked running.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.4.1 (2019-10-30)</h2>\n<ul>\n<li>Attempt to reconnect to the database after losing the connection.\nIf the reconnect attempt fails then crash.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.4 (2019-10-28)</h2>\n<ul>\n<li>Add a <tt>worker</tt> column to the <tt>Job</tt> model to track what worker\nis handling a job.</li>\n<li>Add an optional <tt>name</tt> argument to <tt>MQWorker</tt> to name the worker -\nthe value will be recorded in each job.</li>\n<li>Add a <tt>threads</tt> argument (default=``1``) to <tt>MQWorker</tt> to support\nhandling multiple jobs from the same worker instance instead of making a\nworker per thread.</li>\n<li>Add <tt>capture_signals</tt> argument (default=``True``) to <tt>MQWorker</tt> which\nwill capture <tt>SIGTERM</tt>, <tt>SIGINT</tt> and <tt>SIGUSR1</tt>. The first two will\ntrigger graceful shutdown - they will make the process stop handling new\njobs while finishing active jobs. The latter will dump to <tt>stderr</tt> a\nJSON dump of the current status of the worker.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.3.3 (2019-10-23)</h2>\n<ul>\n<li>Only save a cursor update if the job is completed successfully.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>0.3.2 (2019-10-22)</h2>\n<ul>\n<li>Mark lost jobs during timeouts instead of just when a worker starts in order\nto catch them earlier.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>0.3.1 (2019-10-17)</h2>\n<ul>\n<li>When attempting to schedule a job with a cursor and a <tt>scheduled_time</tt>\nearlier than a pending job on the same cursor, the job will be updated to\nrun at the earlier time.</li>\n<li>When attempting to schedule a job with a cursor and a pending job already\nexists on the same cursor, a <tt>conflict_resolver</tt> function may be\nsupplied to <tt>MQSource.call</tt> to update the job properties, merging the\narguments however the user wishes.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h2>0.3 (2019-10-15)</h2>\n<ul>\n<li>Add a new column <tt>cursor_snapshot</tt> to the <tt>Job</tt> model which will\ncontain the value of the cursor when the job begins.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h2>0.2 (2019-10-09)</h2>\n<ul>\n<li>Add cursor support for jobs. This requires a schema migration to add\na <tt>cursor_key</tt> column, a new <tt>JobCursor</tt> model, and some new indices.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h2>0.1.6 (2019-10-07)</h2>\n<ul>\n<li>Support passing custom kwargs to the job in <tt>psycopg2_mq.MQSource.call</tt>\nto allow custom columns on the job table.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h2>0.1.5 (2019-05-17)</h2>\n<ul>\n<li>Fix a regression when serializing errors with strings or cycles.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h2>0.1.4 (2019-05-09)</h2>\n<ul>\n<li>More safely serialize exception objects when jobs fail.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h2>0.1.3 (2018-09-04)</h2>\n<ul>\n<li>Rename the thread to contain the job id while it\u2019s handling a job.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h2>0.1.2 (2018-09-04)</h2>\n<ul>\n<li>Rename <tt>Job.params</tt> to <tt>Job.args</tt>.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h2>0.1.1 (2018-09-04)</h2>\n<ul>\n<li>Make <tt>psycopg2</tt> an optional dependency in order to allow apps to depend\non <tt><span class=\"pre\">psycopg2-binary</span></tt> if they wish.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h2>0.1 (2018-09-04)</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6096375, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e40f59a3e7adc956f4c1df2150b25328", "sha256": "1240935ca2521a41e0492456f67d0d98e03bbca25e5bb7037464751b20b95cc3"}, "downloads": -1, "filename": "psycopg2_mq-0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "e40f59a3e7adc956f4c1df2150b25328", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 8591, "upload_time": "2018-09-05T01:42:58", "upload_time_iso_8601": "2018-09-05T01:42:58.508978Z", "url": "https://files.pythonhosted.org/packages/21/2f/088dfcbe7ee2fa4636c5582d21f9897739c3c63f3296b4d1569b9f762163/psycopg2_mq-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b36fc8b3addc26a4f4c007e78b3f53dc", "sha256": "95cddf7bd6b94bb7d307277e0558f16f6f44faceb18db718dbd5bdf786001297"}, "downloads": -1, "filename": "psycopg2_mq-0.1.tar.gz", "has_sig": true, "md5_digest": "b36fc8b3addc26a4f4c007e78b3f53dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8920, "upload_time": "2018-09-05T01:43:00", "upload_time_iso_8601": "2018-09-05T01:43:00.000890Z", "url": "https://files.pythonhosted.org/packages/79/e0/efc6e505706e602899716ddcdc33c32f6e358807896a966532d346919b2f/psycopg2_mq-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a3b2e5fe69176e752842357901ba4510", "sha256": "2bc20df8dd5af7686448bfd5820d0a3c15247b1569d95c3fff1713b003123756"}, "downloads": -1, "filename": "psycopg2_mq-0.1.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "a3b2e5fe69176e752842357901ba4510", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 8681, "upload_time": "2018-09-05T01:46:10", "upload_time_iso_8601": "2018-09-05T01:46:10.068163Z", "url": "https://files.pythonhosted.org/packages/b2/11/ba8194be2b994ec8204d656b2de2e355ce552cb6cf3f5e43d446091668e4/psycopg2_mq-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24d5c09ba250ba496a553d72d4ccc136", "sha256": "e3863ed0d011893e32728d3aca056301de6a420122bfbf341c9fa81a6f2aff09"}, "downloads": -1, "filename": "psycopg2_mq-0.1.1.tar.gz", "has_sig": true, "md5_digest": "24d5c09ba250ba496a553d72d4ccc136", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9023, "upload_time": "2018-09-05T01:46:11", "upload_time_iso_8601": "2018-09-05T01:46:11.652464Z", "url": "https://files.pythonhosted.org/packages/3c/51/5ccc5b4f18e10bc2606ea6e3d9edf16a94af38e6b5f9458631577ddb6e95/psycopg2_mq-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ba707962a874ae75d051925dd0fb332f", "sha256": "9ca710158622885b02c5bc171b32055eb61e287d78ebe71b0e48ec54a1b60b87"}, "downloads": -1, "filename": "psycopg2_mq-0.1.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ba707962a874ae75d051925dd0fb332f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 8691, "upload_time": "2018-09-05T02:26:33", "upload_time_iso_8601": "2018-09-05T02:26:33.928666Z", "url": "https://files.pythonhosted.org/packages/d4/01/88267bb28bcdaa96c92d976b620dc714e64af2827b40cf25e257928f4c83/psycopg2_mq-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b62bf0a7d07d55c2cb92d04da2179244", "sha256": "1b1602a38f2837e17e24bf78b46cfaa1bf648bf822d549204d86444505760482"}, "downloads": -1, "filename": "psycopg2_mq-0.1.2.tar.gz", "has_sig": true, "md5_digest": "b62bf0a7d07d55c2cb92d04da2179244", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9052, "upload_time": "2018-09-05T02:26:35", "upload_time_iso_8601": "2018-09-05T02:26:35.427122Z", "url": "https://files.pythonhosted.org/packages/15/14/2eac9bad54c890703fbf9ba7b9f41d8313fadb79bf2439022672081f0e22/psycopg2_mq-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c87a58154d21b16c49336587c82ff462", "sha256": "6ddec07c9c63d047259e7e238b1bfbd3ff01992f090d114977c2f394fe209d3a"}, "downloads": -1, "filename": "psycopg2_mq-0.1.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c87a58154d21b16c49336587c82ff462", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 8788, "upload_time": "2018-09-05T03:00:58", "upload_time_iso_8601": "2018-09-05T03:00:58.187009Z", "url": "https://files.pythonhosted.org/packages/24/42/57e914b2c227c037e23ee101d629864a4fbcefec7672e22b4a067731aeee/psycopg2_mq-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa712a8298d90b983906ef0dda076420", "sha256": "1588d9fad60c67841244a8d5b5d1bbdcaeaab852d80189f4d1d144ad24e82e4e"}, "downloads": -1, "filename": "psycopg2_mq-0.1.3.tar.gz", "has_sig": true, "md5_digest": "aa712a8298d90b983906ef0dda076420", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9166, "upload_time": "2018-09-05T03:00:59", "upload_time_iso_8601": "2018-09-05T03:00:59.815351Z", "url": "https://files.pythonhosted.org/packages/56/44/1143bfcabcb6d053764b7781fc121d529d6d471484a4de3cec67443c3952/psycopg2_mq-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d0926de7d532e9cb815c97ba8f82bf34", "sha256": "ef47bc80c76fab813c2261cd0624137b3f5bc69e800423ad8b90da9f351a21ac"}, "downloads": -1, "filename": "psycopg2_mq-0.1.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d0926de7d532e9cb815c97ba8f82bf34", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9788, "upload_time": "2019-05-09T21:23:56", "upload_time_iso_8601": "2019-05-09T21:23:56.561298Z", "url": "https://files.pythonhosted.org/packages/72/ac/c9940239435726b7fc289280ecf69447c3d605a981828f426bd6720daa5d/psycopg2_mq-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a4bc2deb2ff7f4643479ff3f0bb058b", "sha256": "50c04d6ebe9545ec46a11d1ed73eb4e073621e3c8a9461bace23faaceefbd1f2"}, "downloads": -1, "filename": "psycopg2_mq-0.1.4.tar.gz", "has_sig": true, "md5_digest": "3a4bc2deb2ff7f4643479ff3f0bb058b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9913, "upload_time": "2019-05-09T21:23:58", "upload_time_iso_8601": "2019-05-09T21:23:58.269610Z", "url": "https://files.pythonhosted.org/packages/7c/62/5240b732a5f2a1e27a465c1f165c48618416b7b5d774f11d0924528ab60f/psycopg2_mq-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "306c3621547da336974c86e5ac496774", "sha256": "ee28bda7a251b2631a7b84e2437eda0528f0ebe028c95530ef8c3f5c44c7a2e8"}, "downloads": -1, "filename": "psycopg2_mq-0.1.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "306c3621547da336974c86e5ac496774", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9841, "upload_time": "2019-05-17T18:15:50", "upload_time_iso_8601": "2019-05-17T18:15:50.587869Z", "url": "https://files.pythonhosted.org/packages/99/34/0e7e8b79b61384af5a3c3165ed2669b643842bcd94eea03f892200968a46/psycopg2_mq-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05583dddfc7a355ada92a32c1e6ea949", "sha256": "ab77082a5eb9b1c1225793b1e301bf9aae8c5aa44d7b516012ee018fc9453864"}, "downloads": -1, "filename": "psycopg2_mq-0.1.5.tar.gz", "has_sig": true, "md5_digest": "05583dddfc7a355ada92a32c1e6ea949", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10023, "upload_time": "2019-05-17T18:15:52", "upload_time_iso_8601": "2019-05-17T18:15:52.599663Z", "url": "https://files.pythonhosted.org/packages/d2/f2/a44797821021ca6d3d84b6e3b476562f98ebfdefe66fe36f1279048e1e3f/psycopg2_mq-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "f039443128746b64d78c268cc44134bc", "sha256": "3e8c5e2162df1688ffe0bd4515617f0f8b1525502c186cea03824f41471e5b47"}, "downloads": -1, "filename": "psycopg2_mq-0.1.6-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "f039443128746b64d78c268cc44134bc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9677, "upload_time": "2019-10-07T16:31:54", "upload_time_iso_8601": "2019-10-07T16:31:54.179635Z", "url": "https://files.pythonhosted.org/packages/f5/10/1dfb8fd6dd7b5c6005cc33aac099f4584ebfbe5d2abc73a974d15294d420/psycopg2_mq-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fef0851e819c21cc2c952a42362992f", "sha256": "672098a9d0f6f84331fbd67789c5cb2bd6dc4fec9189ec0dd66d6b1989e1eec4"}, "downloads": -1, "filename": "psycopg2_mq-0.1.6.tar.gz", "has_sig": true, "md5_digest": "1fef0851e819c21cc2c952a42362992f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10162, "upload_time": "2019-10-07T16:31:56", "upload_time_iso_8601": "2019-10-07T16:31:56.110343Z", "url": "https://files.pythonhosted.org/packages/0d/d5/803ca4181073985a56436748c15a24141268a198cdfc52adb39bf473d856/psycopg2_mq-0.1.6.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4aa5ca51a95fc9c167d8e90b3bd58c19", "sha256": "3ce391679bf0f44e7bcd71c3700b65c576c6750480b57f1773e6644315344ad4"}, "downloads": -1, "filename": "psycopg2_mq-0.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4aa5ca51a95fc9c167d8e90b3bd58c19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 11312, "upload_time": "2019-10-09T19:08:02", "upload_time_iso_8601": "2019-10-09T19:08:02.331274Z", "url": "https://files.pythonhosted.org/packages/06/0f/64c9ed090887cc338ca8bfb756d1603907c1bb2d37deed2de5cd5327fb61/psycopg2_mq-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1d1c73c755fc7500685f8d822661cb2", "sha256": "5bddb633b11da91381d193dc63a395a9db92f155f5a4067868086684864bf641"}, "downloads": -1, "filename": "psycopg2_mq-0.2.tar.gz", "has_sig": true, "md5_digest": "f1d1c73c755fc7500685f8d822661cb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13098, "upload_time": "2019-10-09T19:08:04", "upload_time_iso_8601": "2019-10-09T19:08:04.017555Z", "url": "https://files.pythonhosted.org/packages/a7/df/f52e2afca90357d15c3e641d189093aae78b24f674b7e154c9a5d9183f82/psycopg2_mq-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "eec835c316ebe8b3365001ceb46ad0f7", "sha256": "dc728d58419ab46a7d0c0e9eb34c4dd009a84a092d8df27b8063646be08656c9"}, "downloads": -1, "filename": "psycopg2_mq-0.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "eec835c316ebe8b3365001ceb46ad0f7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 11473, "upload_time": "2019-10-16T01:10:06", "upload_time_iso_8601": "2019-10-16T01:10:06.030899Z", "url": "https://files.pythonhosted.org/packages/0b/24/562f41447c250eabcb05c57af86e57e856ef9d63052e109dbd5a8c5adcaa/psycopg2_mq-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56d6dc9aa5c863b91cfd6d81fdda0b63", "sha256": "eec5c61eacbed092565d65cb20cc54c705678460a5038626eac91ed2a753c909"}, "downloads": -1, "filename": "psycopg2_mq-0.3.tar.gz", "has_sig": true, "md5_digest": "56d6dc9aa5c863b91cfd6d81fdda0b63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13376, "upload_time": "2019-10-16T01:10:08", "upload_time_iso_8601": "2019-10-16T01:10:08.129990Z", "url": "https://files.pythonhosted.org/packages/e4/64/400b3e46a096d9d4144961f060c6f6e77880aad2a2912d09158528321b50/psycopg2_mq-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6fbd064487d97e8ca899a7257534a20e", "sha256": "f36b016b4fbaafe2a4ac591c6810f27fef6b730c9f0e1c75c6dc5462b48b40dd"}, "downloads": -1, "filename": "psycopg2_mq-0.3.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "6fbd064487d97e8ca899a7257534a20e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 11761, "upload_time": "2019-10-18T03:43:30", "upload_time_iso_8601": "2019-10-18T03:43:30.006661Z", "url": "https://files.pythonhosted.org/packages/fd/36/169543726d5a9de975bfe09ab1ccd12a07ae89d9ffaf6a0fb07864a4096e/psycopg2_mq-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d28523e2294871221a2c725df56d5d57", "sha256": "8ad584d3be94fc7855c57ddfa60b42c07ed52c99e4c4ba91787505175c4fd505"}, "downloads": -1, "filename": "psycopg2_mq-0.3.1.tar.gz", "has_sig": true, "md5_digest": "d28523e2294871221a2c725df56d5d57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13798, "upload_time": "2019-10-18T03:43:32", "upload_time_iso_8601": "2019-10-18T03:43:32.220896Z", "url": "https://files.pythonhosted.org/packages/6e/5f/91b2a7218e48a8db0041566497629814b35297d5aaf50b3ede2ef642d26e/psycopg2_mq-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "832da0fa497241aa2ddf70878823027f", "sha256": "1437af96154c5942bc92c0cdc139275db442a65d0416846606870c42d42fe669"}, "downloads": -1, "filename": "psycopg2_mq-0.3.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "832da0fa497241aa2ddf70878823027f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 11833, "upload_time": "2019-10-23T03:51:09", "upload_time_iso_8601": "2019-10-23T03:51:09.351414Z", "url": "https://files.pythonhosted.org/packages/3d/c4/b0c5d8cb478624fe43a1de2487b15380ceb18da341ee4302ab79f450f11c/psycopg2_mq-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f3c912941d3403c4083d72e1de0b364", "sha256": "f12189f39cff09f89004db93af14ab7f8fef00234ffbe9ed680cbf6bde5cb07c"}, "downloads": -1, "filename": "psycopg2_mq-0.3.2.tar.gz", "has_sig": true, "md5_digest": "4f3c912941d3403c4083d72e1de0b364", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13939, "upload_time": "2019-10-23T03:51:10", "upload_time_iso_8601": "2019-10-23T03:51:10.948578Z", "url": "https://files.pythonhosted.org/packages/7f/b3/3c3d6790576c8fb72161f21e23fa758f3ccdaaddf1dd601f4d5dcbda8935/psycopg2_mq-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "65c5e26cf8d0df83ac93ef49e227a40e", "sha256": "7fc7c77d55d04a5b2a26294de6b1efa359ba120e7772c486fd608778ccd61717"}, "downloads": -1, "filename": "psycopg2_mq-0.3.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "65c5e26cf8d0df83ac93ef49e227a40e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 11878, "upload_time": "2019-10-24T01:23:17", "upload_time_iso_8601": "2019-10-24T01:23:17.706805Z", "url": "https://files.pythonhosted.org/packages/8f/90/4b2a60433a19a913cb08ce804f4e05e74bcd152b958303e949e25cdf8be4/psycopg2_mq-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eb99495c117026f9e12a58a1b3b625e", "sha256": "53bd194d32fe5ca07c6bcfa606289323bd2aabbf97eb196c65c89531df7eef48"}, "downloads": -1, "filename": "psycopg2_mq-0.3.3.tar.gz", "has_sig": true, "md5_digest": "7eb99495c117026f9e12a58a1b3b625e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14036, "upload_time": "2019-10-24T01:23:19", "upload_time_iso_8601": "2019-10-24T01:23:19.039185Z", "url": "https://files.pythonhosted.org/packages/65/26/9551535b84ab48abdd9c362d69e7bd4018b55d619c661357e3b574b62240/psycopg2_mq-0.3.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f24d15d4c00aa6efcdc089d14095835b", "sha256": "7a71029a00551be2ad962a790375dd5de0d03b76314c705d94dbf9571b8032ea"}, "downloads": -1, "filename": "psycopg2_mq-0.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "f24d15d4c00aa6efcdc089d14095835b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 13498, "upload_time": "2019-10-28T19:12:16", "upload_time_iso_8601": "2019-10-28T19:12:16.898075Z", "url": "https://files.pythonhosted.org/packages/25/0e/2fd16e60fc69fd91ba3b2f9bf9503f5d29dbcaa710152fbc50de885d68ce/psycopg2_mq-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af63876421d0fcb33673519d169891f1", "sha256": "3ccb258af3499861ba9b318a2f0f48df9aac6d87d97182352dca57006ad4213a"}, "downloads": -1, "filename": "psycopg2_mq-0.4.tar.gz", "has_sig": true, "md5_digest": "af63876421d0fcb33673519d169891f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15793, "upload_time": "2019-10-28T19:12:18", "upload_time_iso_8601": "2019-10-28T19:12:18.671043Z", "url": "https://files.pythonhosted.org/packages/df/bd/87bfed8f4c63dca0ab4c1460d33d31d9f7a678c8496e5f01733826c21b22/psycopg2_mq-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "81a5356aa0fd16492d9b476c8dbf0e5d", "sha256": "91677257b12a8061f431bb1fe04f74ac52fa8b0870d9089452773f93b2ede2c1"}, "downloads": -1, "filename": "psycopg2_mq-0.4.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "81a5356aa0fd16492d9b476c8dbf0e5d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 13935, "upload_time": "2019-10-30T05:30:33", "upload_time_iso_8601": "2019-10-30T05:30:33.605743Z", "url": "https://files.pythonhosted.org/packages/58/d4/b66fe9c1a2832a83b9d1beca2e37553b28124a57a638c64733ea0413ebb0/psycopg2_mq-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9146fb74e87b389495e2938609a7a47e", "sha256": "7b53c68c282aa07120d0d10b03577eb5fca023346fc123f03562487088d358af"}, "downloads": -1, "filename": "psycopg2_mq-0.4.1.tar.gz", "has_sig": true, "md5_digest": "9146fb74e87b389495e2938609a7a47e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16319, "upload_time": "2019-10-30T05:30:35", "upload_time_iso_8601": "2019-10-30T05:30:35.619492Z", "url": "https://files.pythonhosted.org/packages/4b/29/861c84d4ed7ebde103fff6a09cc1c7d97c802b91a507936d6a282665b0d7/psycopg2_mq-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "4b731eba92aa104697d6ab162a95061f", "sha256": "17363ce45a5045fe9840b63242b2284d58196648e520d5dacdc4c90c715a56df"}, "downloads": -1, "filename": "psycopg2_mq-0.4.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4b731eba92aa104697d6ab162a95061f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14223, "upload_time": "2019-10-31T01:43:12", "upload_time_iso_8601": "2019-10-31T01:43:12.785045Z", "url": "https://files.pythonhosted.org/packages/b2/84/82a909da0a6ef283829696908ffced522efb8daf7bea2b7217a99250337e/psycopg2_mq-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6204d4498bcd39632c729fe4d2bff636", "sha256": "f6161eec332383a1c44861e04b07b340f1d978728c1cbabaffee7022b8cef575"}, "downloads": -1, "filename": "psycopg2_mq-0.4.2.tar.gz", "has_sig": true, "md5_digest": "6204d4498bcd39632c729fe4d2bff636", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16654, "upload_time": "2019-10-31T01:43:15", "upload_time_iso_8601": "2019-10-31T01:43:15.516698Z", "url": "https://files.pythonhosted.org/packages/47/9b/1274d714c59c71e14fe3c97a5500b103f5aa513078026fc696f881cb188c/psycopg2_mq-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "988432ecc523aa80066d753b1b84a338", "sha256": "d8f454361283535fbfac53509bd90d7a111040d638f343c1a09e9341ed8113de"}, "downloads": -1, "filename": "psycopg2_mq-0.4.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "988432ecc523aa80066d753b1b84a338", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14346, "upload_time": "2019-11-01T03:28:23", "upload_time_iso_8601": "2019-11-01T03:28:23.399242Z", "url": "https://files.pythonhosted.org/packages/44/09/f6d2333aabfd8cd3be25d28c2f9956d317110cda8d4ec3bf2a85959c8de6/psycopg2_mq-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f699573107b1a7aa1134f5b4bdc072de", "sha256": "97204b2f5513c42bd32d193fe16679e7c9fece52ba857ddc90ca3e6c853fa244"}, "downloads": -1, "filename": "psycopg2_mq-0.4.3.tar.gz", "has_sig": true, "md5_digest": "f699573107b1a7aa1134f5b4bdc072de", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16800, "upload_time": "2019-11-01T03:28:25", "upload_time_iso_8601": "2019-11-01T03:28:25.397454Z", "url": "https://files.pythonhosted.org/packages/50/1c/7d5538edbbab2f3a574b73ca8309ec1f55771721bd35c7c990ad63874f81/psycopg2_mq-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "660ac063e173ed61c229d75d9ab4647d", "sha256": "f4681c78f5e1b0c05bec2d27fab936d55ea11d49e5b40085ea41d9d8e1b4309e"}, "downloads": -1, "filename": "psycopg2_mq-0.4.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "660ac063e173ed61c229d75d9ab4647d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14382, "upload_time": "2019-11-07T23:19:04", "upload_time_iso_8601": "2019-11-07T23:19:04.579550Z", "url": "https://files.pythonhosted.org/packages/13/e7/8939cf9c9ce5faee1ee142606351c24f78ca13c1630770f1f7bab48d42c2/psycopg2_mq-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f98a64db2b1a3a4bae9b91b36e16f17e", "sha256": "b092464251c17ed92916f8aece696eec48a401233494f5061f8b069c76f505f1"}, "downloads": -1, "filename": "psycopg2_mq-0.4.4.tar.gz", "has_sig": true, "md5_digest": "f98a64db2b1a3a4bae9b91b36e16f17e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16848, "upload_time": "2019-11-07T23:19:06", "upload_time_iso_8601": "2019-11-07T23:19:06.604523Z", "url": "https://files.pythonhosted.org/packages/44/b4/dcdd31fd2db2116b2d35d5a594ee20e6bb74a826f28985138511a273174d/psycopg2_mq-0.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "660ac063e173ed61c229d75d9ab4647d", "sha256": "f4681c78f5e1b0c05bec2d27fab936d55ea11d49e5b40085ea41d9d8e1b4309e"}, "downloads": -1, "filename": "psycopg2_mq-0.4.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "660ac063e173ed61c229d75d9ab4647d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14382, "upload_time": "2019-11-07T23:19:04", "upload_time_iso_8601": "2019-11-07T23:19:04.579550Z", "url": "https://files.pythonhosted.org/packages/13/e7/8939cf9c9ce5faee1ee142606351c24f78ca13c1630770f1f7bab48d42c2/psycopg2_mq-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f98a64db2b1a3a4bae9b91b36e16f17e", "sha256": "b092464251c17ed92916f8aece696eec48a401233494f5061f8b069c76f505f1"}, "downloads": -1, "filename": "psycopg2_mq-0.4.4.tar.gz", "has_sig": true, "md5_digest": "f98a64db2b1a3a4bae9b91b36e16f17e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16848, "upload_time": "2019-11-07T23:19:06", "upload_time_iso_8601": "2019-11-07T23:19:06.604523Z", "url": "https://files.pythonhosted.org/packages/44/b4/dcdd31fd2db2116b2d35d5a594ee20e6bb74a826f28985138511a273174d/psycopg2_mq-0.4.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:29 2020"}