{"info": {"author": "Henri Hulski", "author_email": "henri.hulski@gazeta.pl", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy"], "description": "more.emit: pymitter integration in Morepath\n===============================================\n\nThis package provides Morepath integration for pymitter_.\n\n*pymitter* is a Python port of the extended Node.js `EventEmitter 2`_\napproach providing namespaces, wildcards and TTL.\n\n\nQuick start\n-----------\n\nInstall ``more.emit``:\n\n.. code-block:: console\n\n  $ pip install -U more.emit\n\nExtend your App class from EmitApp:\n\n.. code-block:: python\n\n    from more.pony import EmitApp\n\n    class App(EmitApp):\n        pass\n\nNow you can define signals:\n\n.. code-block:: python\n\n  from .app import App\n\n\n  @App.signal.on('myevent')\n  def handler1(arg, request):\n      print(request)\n      print('handler1 called with', arg)\n\n  @App.signal.on('myevent')\n  def handler2(arg, request):\n      print('handler2 called with', arg)\n\nYou can emit the signals for example from the view:\n\n.. code-block:: python\n\n  @App.json(model=Root)\n  def root_view(self, request):\n      request.app.signal.emit('myevent', 'foo', request)\n      return {\n          'name': 'Root'\n      }\n\n\nExample\n-------\n\nAn example for emitting signals on user creation\nand user update for sending a confirmation email.\nThis example uses `more.pony`_.\n\nsignal.py\n\n.. code-block:: python\n\n  from .app import App\n\n\n  @App.signal.on('user.email_updated')\n  def send_confirmation_email(user, request):\n      mailer = request.app.service(name='mailer')\n      mailer.send_confirmation_email(user, request)\n\nview.py\n\n.. code-block:: python\n\n  @App.json(model=UserCollection, request_method='POST')\n  def user_collection_add(self, request):\n      email = request.json['email']\n\n      if not User.exists(email=email):\n          user = self.add(email=email)\n\n          @request.after\n          def after(response):\n              request.app.signal.emit('user.email_updated', user, request)\n              response.status = 201\n\n      else:\n          @request.after\n          def after(response):\n              response.status = 409\n\n          return {\n              'validationError': 'Email already exists'\n          }\n\n\n  @App.json(model=User, request_method='PUT')\n  def user_update(self, request):\n      if 'email' in request.json and User.exists(email=request.json['email']):\n          @request.after\n          def after(response):\n              response.status = 409\n\n          return {\n              'validationError': 'Email already exists'\n          }\n\n      else:\n          self.update(request.json)\n          if 'email' in request.json:\n              self.email_confirmed = False\n\n              @request.after\n              def after(response):\n                  request.app.signal.emit('user.email_updated', self, request)\n\n\n.. _pymitter: https://github.com/riga/pymitter\n.. _EventEmitter 2: https://github.com/asyncly/EventEmitter2\n.. _more.pony: https://github.com/morepath/more.pony\n\n\nCHANGES\n=======\n\n0.2 (2020-04-26)\n----------------\n\n- **Removed**: Removed support for Python 2.\n\n  You have to upgrade to Python 3 if you want to use this version.\n\n- Added support for Python 3.6, 3.7 and 3.8 and PyPy 3.6.\n\n- Make Python 3.7 the default testing environment.\n\n- Add integration for the Black code formatter.\n\n\n0.1 (2017-04-22)\n----------------\n\n- Initial public release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/morepath/more.emit", "keywords": "morepath pymitter EventEmitter", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "more.emit", "package_url": "https://pypi.org/project/more.emit/", "platform": "", "project_url": "https://pypi.org/project/more.emit/", "project_urls": {"Homepage": "https://github.com/morepath/more.emit"}, "release_url": "https://pypi.org/project/more.emit/0.2/", "requires_dist": ["morepath (>=0.19)", "pymitter", "pytest-cov ; extra == 'coverage'", "flake8 ; extra == 'pep8'", "black ; extra == 'pep8'", "pytest (>=2.9.1) ; extra == 'test'", "pytest-remove-stale-bytecode ; extra == 'test'", "webtest ; extra == 'test'"], "requires_python": "", "summary": "Pymitter integration in Morepath", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"more-emit-pymitter-integration-in-morepath\">\n<h2>more.emit: pymitter integration in Morepath</h2>\n<p>This package provides Morepath integration for <a href=\"https://github.com/riga/pymitter\" rel=\"nofollow\">pymitter</a>.</p>\n<p><em>pymitter</em> is a Python port of the extended Node.js <a href=\"https://github.com/asyncly/EventEmitter2\" rel=\"nofollow\">EventEmitter 2</a>\napproach providing namespaces, wildcards and TTL.</p>\n<div id=\"quick-start\">\n<h3>Quick start</h3>\n<p>Install <tt>more.emit</tt>:</p>\n<pre><span class=\"gp\">$</span> pip install -U more.emit\n</pre>\n<p>Extend your App class from EmitApp:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more.pony</span> <span class=\"kn\">import</span> <span class=\"n\">EmitApp</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">App</span><span class=\"p\">(</span><span class=\"n\">EmitApp</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Now you can define signals:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">.app</span> <span class=\"kn\">import</span> <span class=\"n\">App</span>\n\n\n<span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'myevent'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handler1</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'handler1 called with'</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'myevent'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handler2</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'handler2 called with'</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n</pre>\n<p>You can emit the signals for example from the view:</p>\n<pre><span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">Root</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">root_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"s1\">'myevent'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Root'</span>\n    <span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>An example for emitting signals on user creation\nand user update for sending a confirmation email.\nThis example uses <a href=\"https://github.com/morepath/more.pony\" rel=\"nofollow\">more.pony</a>.</p>\n<p>signal.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">.app</span> <span class=\"kn\">import</span> <span class=\"n\">App</span>\n\n\n<span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'user.email_updated'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">send_confirmation_email</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">mailer</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'mailer'</span><span class=\"p\">)</span>\n    <span class=\"n\">mailer</span><span class=\"o\">.</span><span class=\"n\">send_confirmation_email</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n<p>view.py</p>\n<pre><span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">UserCollection</span><span class=\"p\">,</span> <span class=\"n\">request_method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">user_collection_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">email</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">email</span><span class=\"p\">)</span>\n\n        <span class=\"nd\">@request</span><span class=\"o\">.</span><span class=\"n\">after</span>\n        <span class=\"k\">def</span> <span class=\"nf\">after</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">):</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"s1\">'user.email_updated'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"mi\">201</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nd\">@request</span><span class=\"o\">.</span><span class=\"n\">after</span>\n        <span class=\"k\">def</span> <span class=\"nf\">after</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">):</span>\n            <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"mi\">409</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'validationError'</span><span class=\"p\">:</span> <span class=\"s1\">'Email already exists'</span>\n        <span class=\"p\">}</span>\n\n\n<span class=\"nd\">@App</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">request_method</span><span class=\"o\">=</span><span class=\"s1\">'PUT'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">user_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'email'</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span> <span class=\"ow\">and</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">]):</span>\n        <span class=\"nd\">@request</span><span class=\"o\">.</span><span class=\"n\">after</span>\n        <span class=\"k\">def</span> <span class=\"nf\">after</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">):</span>\n            <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"mi\">409</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'validationError'</span><span class=\"p\">:</span> <span class=\"s1\">'Email already exists'</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s1\">'email'</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">email_confirmed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n            <span class=\"nd\">@request</span><span class=\"o\">.</span><span class=\"n\">after</span>\n            <span class=\"k\">def</span> <span class=\"nf\">after</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">):</span>\n                <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"s1\">'user.email_updated'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2 (2020-04-26)</h3>\n<ul>\n<li><p><strong>Removed</strong>: Removed support for Python 2.</p>\n<p>You have to upgrade to Python 3 if you want to use this version.</p>\n</li>\n<li><p>Added support for Python 3.6, 3.7 and 3.8 and PyPy 3.6.</p>\n</li>\n<li><p>Make Python 3.7 the default testing environment.</p>\n</li>\n<li><p>Add integration for the Black code formatter.</p>\n</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2017-04-22)</h3>\n<ul>\n<li>Initial public release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7104810, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c4ef3f6abff75724fc2fc1a5473f7951", "sha256": "05870db9c45b51266e6f1df1f8105269bf4f83d2588ae05d5230a4a624c19476"}, "downloads": -1, "filename": "more.emit-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c4ef3f6abff75724fc2fc1a5473f7951", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5765, "upload_time": "2017-04-22T15:10:01", "upload_time_iso_8601": "2017-04-22T15:10:01.339814Z", "url": "https://files.pythonhosted.org/packages/e9/78/4c1fe52da339a97d18e52d0d3b3bd402d7735dfdbb5dafd16477ee88e1e8/more.emit-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92722e53711b98f8e45009d81a57b172", "sha256": "72300bc8c75d1e2534689dca7eef5df36cc8d33f1f4cd5dfeee00db3e1d93545"}, "downloads": -1, "filename": "more.emit-0.1.tar.gz", "has_sig": false, "md5_digest": "92722e53711b98f8e45009d81a57b172", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4496, "upload_time": "2017-04-22T15:10:04", "upload_time_iso_8601": "2017-04-22T15:10:04.373867Z", "url": "https://files.pythonhosted.org/packages/db/6e/f158d023e16ad0ecef5a8efc877fcba0f5c31a68fe79ff968b2cb9c6b2dc/more.emit-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c884c9ab224448ad0e5dbc06c3611e99", "sha256": "516bb67b9d698ff4f71e4b1381cef1671502390ed5a04dde8346d34eab4b8ca9"}, "downloads": -1, "filename": "more.emit-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c884c9ab224448ad0e5dbc06c3611e99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4970, "upload_time": "2020-04-26T12:42:33", "upload_time_iso_8601": "2020-04-26T12:42:33.611459Z", "url": "https://files.pythonhosted.org/packages/dc/8a/3b181c47809f988f8d8a5bdee7a35d4b5bc4e93568c063d58c6c69a66723/more.emit-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd840f602b61b245d5d7b4093e20c7bc", "sha256": "9b7e2920043f40c7f74ebad9a33b92a3776b87deb5ddce6dce6242a4a479f7a0"}, "downloads": -1, "filename": "more.emit-0.2.tar.gz", "has_sig": false, "md5_digest": "fd840f602b61b245d5d7b4093e20c7bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5013, "upload_time": "2020-04-26T12:42:34", "upload_time_iso_8601": "2020-04-26T12:42:34.995157Z", "url": "https://files.pythonhosted.org/packages/0c/9c/677a479e1b23ef71e0c7faaa91428d57ce94820b057395dbfccac0337a56/more.emit-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c884c9ab224448ad0e5dbc06c3611e99", "sha256": "516bb67b9d698ff4f71e4b1381cef1671502390ed5a04dde8346d34eab4b8ca9"}, "downloads": -1, "filename": "more.emit-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c884c9ab224448ad0e5dbc06c3611e99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4970, "upload_time": "2020-04-26T12:42:33", "upload_time_iso_8601": "2020-04-26T12:42:33.611459Z", "url": "https://files.pythonhosted.org/packages/dc/8a/3b181c47809f988f8d8a5bdee7a35d4b5bc4e93568c063d58c6c69a66723/more.emit-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd840f602b61b245d5d7b4093e20c7bc", "sha256": "9b7e2920043f40c7f74ebad9a33b92a3776b87deb5ddce6dce6242a4a479f7a0"}, "downloads": -1, "filename": "more.emit-0.2.tar.gz", "has_sig": false, "md5_digest": "fd840f602b61b245d5d7b4093e20c7bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5013, "upload_time": "2020-04-26T12:42:34", "upload_time_iso_8601": "2020-04-26T12:42:34.995157Z", "url": "https://files.pythonhosted.org/packages/0c/9c/677a479e1b23ef71e0c7faaa91428d57ce94820b057395dbfccac0337a56/more.emit-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:51 2020"}