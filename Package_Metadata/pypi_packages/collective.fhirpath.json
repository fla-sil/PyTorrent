{"info": {"author": "Md Nazrul Islam", "author_email": "email2nazru@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 5.2", "Framework :: Plone :: 5.3", "Framework :: Plone :: Addon", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": ".. image:: https://img.shields.io/pypi/status/plone.app.fhirfield.svg\n    :target: https://pypi.python.org/pypi/plone.app.fhirfield/\n    :alt: Egg Status\n\n.. image:: https://img.shields.io/travis/nazrulworld/collective.fhirpath/master.svg\n    :target: http://travis-ci.org/nazrulworld/collective.fhirpath\n    :alt: Travis Build Status\n\n.. image:: https://coveralls.io/repos/github/nazrulworld/collective.fhirpath/badge.svg?branch=master\n    :target: https://coveralls.io/github/nazrulworld/collective.fhirpath?branch=master\n    :alt: Test Coverage\n\n.. image:: https://img.shields.io/pypi/pyversions/collective.fhirpath.svg\n    :target: https://pypi.python.org/pypi/collective.fhirpath/\n    :alt: Python Versions\n\n.. image:: https://img.shields.io/pypi/v/collective.fhirpath.svg\n    :target: https://pypi.python.org/pypi/collective.fhirpath/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/l/collective.fhirpath.svg\n    :target: https://pypi.python.org/pypi/collective.fhirpath/\n    :alt: License\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n\nBackground (collective.fhirpath)\n================================\n\n`fhirpath`_ implementation in Plone, essential battery included, ready to use.\n\n\nInstallation\n------------\n\nInstall collective.fhirpath by adding it to your buildout::\n\n    [buildout]\n    ...\n    eggs +=\n        collective.fhirpath\n\n\nand then running ``bin/buildout``\n\nFrom Plone controlpanel in the addon settings, install ``collective.fhirpath``.\n\nHow It Works\n------------\n\n**``FhirResource`` the fhirfield**\n\nMake sure this specialized field is used properly according to `plone.app.fhirfield`_ documentation.\n\n**Make field indexable**\n\nA specilized Catalog PluginIndexes is named ``FhirFieldIndex`` is available, you will use it as like other catalog indexes.\n\nExample::\n\n    <?xml version=\"1.0\"?>\n    <object name=\"portal_catalog\" meta_type=\"Plone Catalog Tool\">\n        <index name=\"organization_resource\" meta_type=\"FhirFieldIndex\">\n            <indexed_attr value=\"organization_resource\"/>\n        </index>\n    </object>\n\n**Elasticsearch settings**\n\nMake sure elasticsearch has been configured accourding to `collective.elasticsearch`_ docs.\n\n\nUsages\n~~~~~~\n\nFHIR Search::\n    >>> from fhirpath.enums import FHIR_VERSION\n    >>> from fhirpath.interfaces import IElasticsearchEngineFactory\n    >>> from fhirpath.interfaces import IFhirSearch\n    >>> from fhirpath.interfaces import ISearchContextFactory\n    >>> from plone import api\n    >>> from collective.elasticsearch.es import ElasticSearchCatalog\n    >>> from zope.component import queryMultiAdapter\n\n    >>> es_catalog = ElasticSearchCatalog(api.portal.get_tool(\"portal_catalog\"))\n    >>> factory = queryMultiAdapter(\n    ....        (es_catalog,), IElasticsearchEngineFactory\n    .... )\n    >>> engine = factory(fhir_version=FHIR_VERSION.STU3)\n    >>> search_context = queryMultiAdapter((engine,), ISearchContextFactory)(\n    .... resource_type, unrestricted=False)\n    >>> search_factory = queryMultiAdapter((search_context,), IFhirSearch)\n\n    >>> params = (\n    ....        (\"_profile\", \"http://hl7.org/fhir/Organization\"),\n    ....        (\"identifier\", \"urn:oid:2.16.528.1|91654\"),\n    ....        (\"type\", \"http://hl7.org/fhir/organization-type|prov\"),\n    ....        (\"address-postalcode\", \"9100 AA\"),\n    ....        (\"address\", \"Den Burg\"),\n    ....    )\n    >>> bundle = search_factory(params)\n    >>> len(bundle.entry)\n    2\n    >>> # with query string.\n    >>> # query_string = self.request[\"QUERY_STRING]\n    >>> query_string = \"_profile=http://hl7.org/fhir/Organization&identifier=urn:oid:2.16.528.1|91654&type=http://hl7.org/fhir/organization-type|prov&address-postalcode=9100+AA\"\n    >>> bundle = search_factory(query_string=query_string)\n    >>> len(bundle.entry)\n    2\n\nZCatlog FHIR Search::\n    >>> from collective.fhirpath.interfaces import IZCatalogFhirSearch\n    >>> zcatalog_factory = queryMultiAdapter((search_context,), IZCatalogFhirSearch)\n\n    >>> # with query string.\n    >>> # query_string = self.request[\"QUERY_STRING]\n    >>> query_string = \"_profile=http://hl7.org/fhir/Organization&identifier=urn:oid:2.16.528.1|91654&type=http://hl7.org/fhir/organization-type|prov&address-postalcode=9100+AA\"\n    >>> brains = zcatalog_factory(query_string=query_string)\n    >>> len(brains)\n    2\n\nFHIR Query::\n    >>> from fhirpath.enums import FHIR_VERSION\n    >>> from fhirpath.interfaces import IElasticsearchEngineFactory\n    >>> from fhirpath.interfaces import IFhirSearch\n    >>> from fhirpath.interfaces import ISearchContextFactory\n    >>> from plone import api\n    >>> from collective.elasticsearch.es import ElasticSearchCatalog\n    >>> from zope.component import queryMultiAdapter\n    >>> from fhirpath.query import Q_\n    >>> from fhirpath.fql import T_\n    >>> from fhirpath.fql import sort_\n    >>> from fhirpath.enums import SortOrderType\n\n    >>> es_catalog = ElasticSearchCatalog(api.portal.get_tool(\"portal_catalog\"))\n    >>> factory = queryMultiAdapter(\n    ....        (es_catalog,), IElasticsearchEngineFactory\n    .... )\n    >>> engine = factory(fhir_version=FHIR_VERSION.STU3)\n    >>> query_builder = Q_(resource=\"Organization\", engine=engine)\n    ....    query_builder = query_builder.where(\n    ....        T_(\"Organization.meta.profile\", \"http://hl7.org/fhir/Organization\")\n    ....    ).sort(sort_(\"Organization.meta.lastUpdated\", SortOrderType.DESC))\n\n    >>> result = query_builder(async_result=False, unrestricted=True).fetchall()\n    >>> result.header.total\n    2\n    >>> query_result = query_builder(async_result=False, unrestricted=True)\n    >>> for resource in query_result:\n    ....        count += 1\n    ....        assert resource.__class__.__name__ == \"OrganizationModel\"\n\n    >>> query_builder = Q_(resource=\"Organization\", engine=engine)\n    >>> query_builder = query_builder.where(T_(\"Organization.id\", \"f001\"))\n    >>> result_query = query_builder(async_result=False, unrestricted=True)\n    >>> resource = result_query.single()\n    >>> resource is not None\n    True\n\n    >>> query_builder = Q_(resource=\"Organization\", engine=engine)\n    >>> query_builder = query_builder.where(\n    ....        T_(\"Organization.meta.profile\", \"http://hl7.org/fhir/Organization\")\n    ....    )\n    >>> result_query = builder(async_result=False, unrestricted=True)\n    >>> result = result_query.first()\n    >>> isinstance(result, result_query._query.get_from()[0][1])\n    True\n\n\nDocumentation\n-------------\n\nFull documentation for end users can be found in the \"docs\" folder,\nand is also available online at https://collective-fhirpath.readthedocs.io/\n\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/nazrulworld/collective.fhirpath/issues\n- Source Code: https://github.com/nazrulworld/collective.fhirpath\n- Documentation: https://collective-fhirpath.readthedocs.io/\n\n\nSupport\n-------\n\nIf you are having issues, please let us know at: Md Nazrul Islam<email2nazrul@gmail.com>\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n.. _`elasticsearch`: https://www.elastic.co/products/elasticsearch\n.. _`fhirpath`: https://pypi.org/project/fhirpath/\n.. _`PostgreSQL`: https://www.postgresql.org/\n.. _`plone.app.fhirfield`: https://pypi.org/project/plone.app.fhirfield/\n.. _`collective.elasticsearch`: https://pypi.org/project/collective.elasticsearch/\n\n\n.. _restapi_examples_doctest:\n\nREST Client Examples\n--------------------\n\nGetting single resource, here we are getting Patient resource by ID.\n\nExample(1)::\n\n    >>> response = admin_session.get('/@fhir/Patient/19c5245f-89a8-49f8-b244-666b32adb92e')\n    >>> response.status_code\n    200\n    <BLANKLINE>\n    >>> response.json()['resourceType'] == 'Patient'\n    True\n    <BLANKLINE>\n    >>> response = admin_session.get('/@fhir/Patient/19c5245f-fake-id')\n    >>> response.status_code\n    404\n    <BLANKLINE>\n\n\nSearch Observation by Patient reference with status condition. Any observation until December 2017 and earlier than January 2017.\n\nExample(2)::\n\n    >>> response = admin_session.get('/@fhir/Observation?patient=Patient/19c5245f-89a8-49f8-b244-666b32adb92e&status=final&_lastUpdated=lt2017-12-31T00%3A00%3A00%2B00%3A00&_lastUpdated=gt2017-01-01T00%3A00%3A00%2B00%3A00')\n    >>> response.status_code\n    200\n    >>> response.json()[\"total\"]\n    1\n    <BLANKLINE>\n\n\nAdd FHIR Resource through REST API\n\nExample(3)::\n\n    >>> import os\n    >>> import json\n    >>> import uuid\n    >>> import DateTime\n    >>> import time\n\n    >>> with open(os.path.join(FIXTURE_PATH, 'Patient.json'), 'r') as f:\n    ...     fhir_json = json.load(f)\n\n    >>> fhir_json['id'] = str(uuid.uuid4())\n    >>> fhir_json['name'][0]['text'] = 'Another Patient'\n    >>> response = admin_session.post('/@fhir/Patient', json=fhir_json)\n    >>> response.status_code\n    201\n    >>> time.sleep(1)\n    >>> response = admin_session.get('/@fhir/Patient?active=true')\n    >>> response.json()[\"total\"]\n    2\n\n\nUpdate (PATCH) FHIR Resource the Patient is currently activated, we will deactive.\n\nExample(4)::\n\n    >>> patch = [{'op': 'replace', 'path': '/active', 'value': False}]\n    >>> response = admin_session.patch('/@fhir/Patient/19c5245f-89a8-49f8-b244-666b32adb92e', json={'patch': patch})\n    >>> response.status_code\n    204\n    <BLANKLINE>\n\n\nContributors\n============\n\n- Md Nazrul Islam, email2nazrul@gmail.com (author)\n\n\nChangelog\n=========\n\n\n0.3.0 (2019-11-10)\n------------------\n\nImprovements\n\n- ZCatalog featured fhir search added, from which you will get ZCatalog\u00b4s brain feature.\n\n- ``FhirFieldIndex`` named PluginIndex is now available.\n\n- FHIR ``STU3``and ``R4`` search mapping is now available.\n\n- Others improvements that make able to use in production project (of course without guarantee.)\n\n\n0.2.0 (2019-09-16)\n------------------\n\n- first working versions, with lots of improvements.\n\n\n0.1.0 (2019-09-06)\n------------------\n\n- Initial release.\n  [nazrulworld]\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.fhirpath", "keywords": "Python Plone FHIR Healthcare HL7", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "collective.fhirpath", "package_url": "https://pypi.org/project/collective.fhirpath/", "platform": "", "project_url": "https://pypi.org/project/collective.fhirpath/", "project_urls": {"Documentation": "https://collective-fhirpath.readthedocs.io/en/latest/", "Homepage": "https://github.com/collective/collective.fhirpath", "PyPI": "https://pypi.python.org/pypi/collective.fhirpath", "Source": "https://github.com/collective/collective.fhirpath", "Tracker": "https://github.com/collective/collective.fhirpath/issues"}, "release_url": "https://pypi.org/project/collective.fhirpath/0.3.0/", "requires_dist": ["setuptools", "z3c.jbot", "plone.api (>=1.8.4)", "plone.restapi", "plone.app.dexterity", "collective.elasticsearch", "plone.app.fhirfield", "fhirpath (>=0.4.1)", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinxcontrib-httpdomain ; extra == 'docs'", "sphinxcontrib-httpexample ; extra == 'docs'", "plone.app.testing ; extra == 'test'", "plone.testing (>=7.0.1) ; extra == 'test'", "plone.app.contenttypes ; extra == 'test'", "plone.app.robotframework[debug] ; extra == 'test'", "collective.MockMailHost ; extra == 'test'", "sphinx ; extra == 'test'", "sphinx-rtd-theme ; extra == 'test'", "sphinxcontrib-httpdomain ; extra == 'test'", "sphinxcontrib-httpexample ; extra == 'test'"], "requires_python": ">=3.6", "summary": "Plone powered provider for fhirpath", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/plone.app.fhirfield/\" rel=\"nofollow\"><img alt=\"Egg Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5064f99fbf9aaefd0518acc266931e89d8e80ce/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f706c6f6e652e6170702e666869726669656c642e737667\"></a>\n<a href=\"http://travis-ci.org/nazrulworld/collective.fhirpath\" rel=\"nofollow\"><img alt=\"Travis Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d34214f8bf33fb310e2f837e655e02439cb8cf74/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e617a72756c776f726c642f636f6c6c6563746976652e66686972706174682f6d61737465722e737667\"></a>\n<a href=\"https://coveralls.io/github/nazrulworld/collective.fhirpath?branch=master\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbe407a41f9272c12a5ed651c31aedd880a3c755/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e617a72756c776f726c642f636f6c6c6563746976652e66686972706174682f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/collective.fhirpath/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d448c5c2e58e3aff0fa52d701fa4c81a670483eb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6c6c6563746976652e66686972706174682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/collective.fhirpath/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/090c315965ce64831457ce1a3fc6af85a5adea9e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6c6c6563746976652e66686972706174682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/collective.fhirpath/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e482e828aaa0144a9b6518f2b45738f954174f88/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6c6c6563746976652e66686972706174682e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<div id=\"background-collective-fhirpath\">\n<h2>Background (collective.fhirpath)</h2>\n<p><a href=\"https://pypi.org/project/fhirpath/\" rel=\"nofollow\">fhirpath</a> implementation in Plone, essential battery included, ready to use.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install collective.fhirpath by adding it to your buildout:</p>\n<pre>[buildout]\n...\neggs +=\n    collective.fhirpath\n</pre>\n<p>and then running <tt>bin/buildout</tt></p>\n<p>From Plone controlpanel in the addon settings, install <tt>collective.fhirpath</tt>.</p>\n</div>\n<div id=\"how-it-works\">\n<h3>How It Works</h3>\n<p><strong>``FhirResource`` the fhirfield</strong></p>\n<p>Make sure this specialized field is used properly according to <a href=\"https://pypi.org/project/plone.app.fhirfield/\" rel=\"nofollow\">plone.app.fhirfield</a> documentation.</p>\n<p><strong>Make field indexable</strong></p>\n<p>A specilized Catalog PluginIndexes is named <tt>FhirFieldIndex</tt> is available, you will use it as like other catalog indexes.</p>\n<p>Example:</p>\n<pre>&lt;?xml version=\"1.0\"?&gt;\n&lt;object name=\"portal_catalog\" meta_type=\"Plone Catalog Tool\"&gt;\n    &lt;index name=\"organization_resource\" meta_type=\"FhirFieldIndex\"&gt;\n        &lt;indexed_attr value=\"organization_resource\"/&gt;\n    &lt;/index&gt;\n&lt;/object&gt;\n</pre>\n<p><strong>Elasticsearch settings</strong></p>\n<p>Make sure elasticsearch has been configured accourding to <a href=\"https://pypi.org/project/collective.elasticsearch/\" rel=\"nofollow\">collective.elasticsearch</a> docs.</p>\n<div id=\"usages\">\n<h4>Usages</h4>\n<dl>\n<dt>FHIR Search::</dt>\n<dd><pre>&gt;&gt;&gt; from fhirpath.enums import FHIR_VERSION\n&gt;&gt;&gt; from fhirpath.interfaces import IElasticsearchEngineFactory\n&gt;&gt;&gt; from fhirpath.interfaces import IFhirSearch\n&gt;&gt;&gt; from fhirpath.interfaces import ISearchContextFactory\n&gt;&gt;&gt; from plone import api\n&gt;&gt;&gt; from collective.elasticsearch.es import ElasticSearchCatalog\n&gt;&gt;&gt; from zope.component import queryMultiAdapter\n</pre>\n<pre>&gt;&gt;&gt; es_catalog = ElasticSearchCatalog(api.portal.get_tool(\"portal_catalog\"))\n&gt;&gt;&gt; factory = queryMultiAdapter(\n....        (es_catalog,), IElasticsearchEngineFactory\n.... )\n&gt;&gt;&gt; engine = factory(fhir_version=FHIR_VERSION.STU3)\n&gt;&gt;&gt; search_context = queryMultiAdapter((engine,), ISearchContextFactory)(\n.... resource_type, unrestricted=False)\n&gt;&gt;&gt; search_factory = queryMultiAdapter((search_context,), IFhirSearch)\n</pre>\n<pre>&gt;&gt;&gt; params = (\n....        (\"_profile\", \"http://hl7.org/fhir/Organization\"),\n....        (\"identifier\", \"urn:oid:2.16.528.1|91654\"),\n....        (\"type\", \"http://hl7.org/fhir/organization-type|prov\"),\n....        (\"address-postalcode\", \"9100 AA\"),\n....        (\"address\", \"Den Burg\"),\n....    )\n&gt;&gt;&gt; bundle = search_factory(params)\n&gt;&gt;&gt; len(bundle.entry)\n2\n&gt;&gt;&gt; # with query string.\n&gt;&gt;&gt; # query_string = self.request[\"QUERY_STRING]\n&gt;&gt;&gt; query_string = \"_profile=http://hl7.org/fhir/Organization&amp;identifier=urn:oid:2.16.528.1|91654&amp;type=http://hl7.org/fhir/organization-type|prov&amp;address-postalcode=9100+AA\"\n&gt;&gt;&gt; bundle = search_factory(query_string=query_string)\n&gt;&gt;&gt; len(bundle.entry)\n2\n</pre>\n</dd>\n<dt>ZCatlog FHIR Search::</dt>\n<dd><pre>&gt;&gt;&gt; from collective.fhirpath.interfaces import IZCatalogFhirSearch\n&gt;&gt;&gt; zcatalog_factory = queryMultiAdapter((search_context,), IZCatalogFhirSearch)\n</pre>\n<pre>&gt;&gt;&gt; # with query string.\n&gt;&gt;&gt; # query_string = self.request[\"QUERY_STRING]\n&gt;&gt;&gt; query_string = \"_profile=http://hl7.org/fhir/Organization&amp;identifier=urn:oid:2.16.528.1|91654&amp;type=http://hl7.org/fhir/organization-type|prov&amp;address-postalcode=9100+AA\"\n&gt;&gt;&gt; brains = zcatalog_factory(query_string=query_string)\n&gt;&gt;&gt; len(brains)\n2\n</pre>\n</dd>\n<dt>FHIR Query::</dt>\n<dd><pre>&gt;&gt;&gt; from fhirpath.enums import FHIR_VERSION\n&gt;&gt;&gt; from fhirpath.interfaces import IElasticsearchEngineFactory\n&gt;&gt;&gt; from fhirpath.interfaces import IFhirSearch\n&gt;&gt;&gt; from fhirpath.interfaces import ISearchContextFactory\n&gt;&gt;&gt; from plone import api\n&gt;&gt;&gt; from collective.elasticsearch.es import ElasticSearchCatalog\n&gt;&gt;&gt; from zope.component import queryMultiAdapter\n&gt;&gt;&gt; from fhirpath.query import Q_\n&gt;&gt;&gt; from fhirpath.fql import T_\n&gt;&gt;&gt; from fhirpath.fql import sort_\n&gt;&gt;&gt; from fhirpath.enums import SortOrderType\n</pre>\n<pre>&gt;&gt;&gt; es_catalog = ElasticSearchCatalog(api.portal.get_tool(\"portal_catalog\"))\n&gt;&gt;&gt; factory = queryMultiAdapter(\n....        (es_catalog,), IElasticsearchEngineFactory\n.... )\n&gt;&gt;&gt; engine = factory(fhir_version=FHIR_VERSION.STU3)\n&gt;&gt;&gt; query_builder = Q_(resource=\"Organization\", engine=engine)\n....    query_builder = query_builder.where(\n....        T_(\"Organization.meta.profile\", \"http://hl7.org/fhir/Organization\")\n....    ).sort(sort_(\"Organization.meta.lastUpdated\", SortOrderType.DESC))\n</pre>\n<pre>&gt;&gt;&gt; result = query_builder(async_result=False, unrestricted=True).fetchall()\n&gt;&gt;&gt; result.header.total\n2\n&gt;&gt;&gt; query_result = query_builder(async_result=False, unrestricted=True)\n&gt;&gt;&gt; for resource in query_result:\n....        count += 1\n....        assert resource.__class__.__name__ == \"OrganizationModel\"\n</pre>\n<pre>&gt;&gt;&gt; query_builder = Q_(resource=\"Organization\", engine=engine)\n&gt;&gt;&gt; query_builder = query_builder.where(T_(\"Organization.id\", \"f001\"))\n&gt;&gt;&gt; result_query = query_builder(async_result=False, unrestricted=True)\n&gt;&gt;&gt; resource = result_query.single()\n&gt;&gt;&gt; resource is not None\nTrue\n</pre>\n<pre>&gt;&gt;&gt; query_builder = Q_(resource=\"Organization\", engine=engine)\n&gt;&gt;&gt; query_builder = query_builder.where(\n....        T_(\"Organization.meta.profile\", \"http://hl7.org/fhir/Organization\")\n....    )\n&gt;&gt;&gt; result_query = builder(async_result=False, unrestricted=True)\n&gt;&gt;&gt; result = result_query.first()\n&gt;&gt;&gt; isinstance(result, result_query._query.get_from()[0][1])\nTrue\n</pre>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Full documentation for end users can be found in the \u201cdocs\u201d folder,\nand is also available online at <a href=\"https://collective-fhirpath.readthedocs.io/\" rel=\"nofollow\">https://collective-fhirpath.readthedocs.io/</a></p>\n</div>\n<div id=\"contribute\">\n<h3>Contribute</h3>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/nazrulworld/collective.fhirpath/issues\" rel=\"nofollow\">https://github.com/nazrulworld/collective.fhirpath/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/nazrulworld/collective.fhirpath\" rel=\"nofollow\">https://github.com/nazrulworld/collective.fhirpath</a></li>\n<li>Documentation: <a href=\"https://collective-fhirpath.readthedocs.io/\" rel=\"nofollow\">https://collective-fhirpath.readthedocs.io/</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<p>If you are having issues, please let us know at: Md Nazrul Islam&lt;<a href=\"mailto:email2nazrul%40gmail.com\">email2nazrul<span>@</span>gmail<span>.</span>com</a>&gt;</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the GPLv2.</p>\n</div>\n<div id=\"rest-client-examples\">\n<span id=\"restapi-examples-doctest\"></span><h3>REST Client Examples</h3>\n<p>Getting single resource, here we are getting Patient resource by ID.</p>\n<p>Example(1):</p>\n<pre>&gt;&gt;&gt; response = admin_session.get('/@fhir/Patient/19c5245f-89a8-49f8-b244-666b32adb92e')\n&gt;&gt;&gt; response.status_code\n200\n&lt;BLANKLINE&gt;\n&gt;&gt;&gt; response.json()['resourceType'] == 'Patient'\nTrue\n&lt;BLANKLINE&gt;\n&gt;&gt;&gt; response = admin_session.get('/@fhir/Patient/19c5245f-fake-id')\n&gt;&gt;&gt; response.status_code\n404\n&lt;BLANKLINE&gt;\n</pre>\n<p>Search Observation by Patient reference with status condition. Any observation until December 2017 and earlier than January 2017.</p>\n<p>Example(2):</p>\n<pre>&gt;&gt;&gt; response = admin_session.get('/@fhir/Observation?patient=Patient/19c5245f-89a8-49f8-b244-666b32adb92e&amp;status=final&amp;_lastUpdated=lt2017-12-31T00%3A00%3A00%2B00%3A00&amp;_lastUpdated=gt2017-01-01T00%3A00%3A00%2B00%3A00')\n&gt;&gt;&gt; response.status_code\n200\n&gt;&gt;&gt; response.json()[\"total\"]\n1\n&lt;BLANKLINE&gt;\n</pre>\n<p>Add FHIR Resource through REST API</p>\n<p>Example(3):</p>\n<pre>&gt;&gt;&gt; import os\n&gt;&gt;&gt; import json\n&gt;&gt;&gt; import uuid\n&gt;&gt;&gt; import DateTime\n&gt;&gt;&gt; import time\n\n&gt;&gt;&gt; with open(os.path.join(FIXTURE_PATH, 'Patient.json'), 'r') as f:\n...     fhir_json = json.load(f)\n\n&gt;&gt;&gt; fhir_json['id'] = str(uuid.uuid4())\n&gt;&gt;&gt; fhir_json['name'][0]['text'] = 'Another Patient'\n&gt;&gt;&gt; response = admin_session.post('/@fhir/Patient', json=fhir_json)\n&gt;&gt;&gt; response.status_code\n201\n&gt;&gt;&gt; time.sleep(1)\n&gt;&gt;&gt; response = admin_session.get('/@fhir/Patient?active=true')\n&gt;&gt;&gt; response.json()[\"total\"]\n2\n</pre>\n<p>Update (PATCH) FHIR Resource the Patient is currently activated, we will deactive.</p>\n<p>Example(4):</p>\n<pre>&gt;&gt;&gt; patch = [{'op': 'replace', 'path': '/active', 'value': False}]\n&gt;&gt;&gt; response = admin_session.patch('/@fhir/Patient/19c5245f-89a8-49f8-b244-666b32adb92e', json={'patch': patch})\n&gt;&gt;&gt; response.status_code\n204\n&lt;BLANKLINE&gt;\n</pre>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Md Nazrul Islam, <a href=\"mailto:email2nazrul%40gmail.com\">email2nazrul<span>@</span>gmail<span>.</span>com</a> (author)</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3.0 (2019-11-10)</h3>\n<p>Improvements</p>\n<ul>\n<li>ZCatalog featured fhir search added, from which you will get ZCatalog\u00b4s brain feature.</li>\n<li><tt>FhirFieldIndex</tt> named PluginIndex is now available.</li>\n<li>FHIR <tt><span class=\"pre\">STU3``and</span> ``R4</tt> search mapping is now available.</li>\n<li>Others improvements that make able to use in production project (of course without guarantee.)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2019-09-16)</h3>\n<ul>\n<li>first working versions, with lots of improvements.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2019-09-06)</h3>\n<ul>\n<li>Initial release.\n[nazrulworld]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6110901, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f1bb91c2d77d72bbb85c8e4f4c862c99", "sha256": "6022976508f37cdfe546056d6f65be5badd118e7f4e2874b7642125cca4bca8b"}, "downloads": -1, "filename": "collective.fhirpath-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1bb91c2d77d72bbb85c8e4f4c862c99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 29482, "upload_time": "2019-09-06T17:34:01", "upload_time_iso_8601": "2019-09-06T17:34:01.230777Z", "url": "https://files.pythonhosted.org/packages/37/a1/8b0296435597945b550ddd01e95ba4f89b5525e2dbccb3c46e9404467a75/collective.fhirpath-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02da40068e9f6446b6fa015f040db6af", "sha256": "8779f416f29f68c87043e33d2dbc0abbd6814ae614608a126cb2c085defeb3e1"}, "downloads": -1, "filename": "collective.fhirpath-0.1.0.tar.gz", "has_sig": false, "md5_digest": "02da40068e9f6446b6fa015f040db6af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23109, "upload_time": "2019-09-06T17:34:16", "upload_time_iso_8601": "2019-09-06T17:34:16.278839Z", "url": "https://files.pythonhosted.org/packages/41/cc/8aa91aab1b049165306821da20f22b2474889be56d9338edb77b9c286820/collective.fhirpath-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "68dacb2f18bd0adf189ea6402a3565a3", "sha256": "ec63e18ee468bb611ae3bbbd93f4903cb6dbb342af6970db9083135b8101aea9"}, "downloads": -1, "filename": "collective.fhirpath-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68dacb2f18bd0adf189ea6402a3565a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 30909, "upload_time": "2019-09-16T17:43:16", "upload_time_iso_8601": "2019-09-16T17:43:16.970494Z", "url": "https://files.pythonhosted.org/packages/e5/47/29cc0714f1e799dad8455651fee51d20c508dd335307c5717945dc46460c/collective.fhirpath-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6922f327592b3c4439a3cee193a82c3", "sha256": "0aab12a7b067d670d35b9129129238e19cce8134903dc239a0248bf518f45d9b"}, "downloads": -1, "filename": "collective.fhirpath-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d6922f327592b3c4439a3cee193a82c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25576, "upload_time": "2019-09-16T17:43:19", "upload_time_iso_8601": "2019-09-16T17:43:19.228260Z", "url": "https://files.pythonhosted.org/packages/23/39/8e667c3f89fcfacf40dd14b55a53274a918c630972516870b2f68ac44d2a/collective.fhirpath-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ffa1b145a7092eea1865299a513e73f0", "sha256": "525bfec708770b60b0f65ac2658fbc4d5a2f7638f2ee512920d9b49d6ce092a2"}, "downloads": -1, "filename": "collective.fhirpath-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffa1b145a7092eea1865299a513e73f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 323744, "upload_time": "2019-11-10T07:53:59", "upload_time_iso_8601": "2019-11-10T07:53:59.322586Z", "url": "https://files.pythonhosted.org/packages/9f/1f/fc8523b2d83ef0e876618c9d494619a86ab9050084e720d18ce941e8c99c/collective.fhirpath-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd676a1e80b75d14614e5952cd0ee288", "sha256": "4a9b36beb3dd7197d58e29075dd94f479bf66e8714eb91a122723e25aaecab1a"}, "downloads": -1, "filename": "collective.fhirpath-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd676a1e80b75d14614e5952cd0ee288", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 140945, "upload_time": "2019-11-10T07:54:01", "upload_time_iso_8601": "2019-11-10T07:54:01.414918Z", "url": "https://files.pythonhosted.org/packages/ae/33/84c7efd22ba12aa0ca11438d9eeb93680ec801c2e4a370c81a8c256e11b1/collective.fhirpath-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ffa1b145a7092eea1865299a513e73f0", "sha256": "525bfec708770b60b0f65ac2658fbc4d5a2f7638f2ee512920d9b49d6ce092a2"}, "downloads": -1, "filename": "collective.fhirpath-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffa1b145a7092eea1865299a513e73f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 323744, "upload_time": "2019-11-10T07:53:59", "upload_time_iso_8601": "2019-11-10T07:53:59.322586Z", "url": "https://files.pythonhosted.org/packages/9f/1f/fc8523b2d83ef0e876618c9d494619a86ab9050084e720d18ce941e8c99c/collective.fhirpath-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd676a1e80b75d14614e5952cd0ee288", "sha256": "4a9b36beb3dd7197d58e29075dd94f479bf66e8714eb91a122723e25aaecab1a"}, "downloads": -1, "filename": "collective.fhirpath-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd676a1e80b75d14614e5952cd0ee288", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 140945, "upload_time": "2019-11-10T07:54:01", "upload_time_iso_8601": "2019-11-10T07:54:01.414918Z", "url": "https://files.pythonhosted.org/packages/ae/33/84c7efd22ba12aa0ca11438d9eeb93680ec801c2e4a370c81a8c256e11b1/collective.fhirpath-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:54 2020"}