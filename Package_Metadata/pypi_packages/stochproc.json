{"info": {"author": "Rohit Pandey", "author_email": "rohitpandey576@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Introduction\n\nThis repository aims to model and uncover the properties of all kinds of stochastic processes (processes\nthat are based on some kind of underlying phenomenon like a coin toss for which we can't know the outcome\nfor sure).\n\nSome of these are taken from the book, Introduction to probability models by Sheldon Ross.\n\nThe best way to demonstrate the capabilities of this library is to describe some stochastic processes\nit can model and show how to use it to extract some of their properties.\n\n# Installation\nTo install the library, run (pyray was taken on pypi):\n\n```\npip install stochproc\n```\n\nMake sure you have all the requirements (requirements.txt) installed. If not, you can run:\n\n```\npip install -r requirements.txt\n```\n\nAlternately, you can fork/download the code and run from the main folder:\n\n```\npython setup.py install\n```\n\n\n# Machine reliability\n\nLet's say we start up a machine. It stays up some random amount of time before succumbing to failure.\nThe amount of time it stays up is a random variable. This variable models the mean time between failures.\n\nAnd once the machine is down, it takes a certain amount of time to get repaired. This is the mean time\nto repair.\n\n\nThe question is at any time t, what is the probability the machine is up and running?\n\nChapter 11 of [1] provides a closed form. However, we want to validate this with simulation.\n\n```python\nfrom stochproc.reliability.machinerepair import *\n\nfor i in range(10):\n\tprobs = []\n\tstds = []\n\tfor t in range(1,100):\n\t\tprob, std = updown(t)\n\t\tprobs.append(prob)\n\t\tstds.append(std)\n\tplt.plot(np.arange(1,100), probs,alpha=0.4,color='pink')\n\nxs = np.arange(1,100)\nplt.plot(xs, closed_form(xs),color='red')\nplt.xlabel('Time')\nplt.ylabel('Reliability of system')\nplt.show()\n```\n\nThis leads to the following plot.\n\n<a href=\"https://medium.com/@rohitpandey576/coin-toss-markov-chains-7995cb303406\" \ntarget=\"_blank\"><img src=\"https://github.com/ryu577/stochproc/blob/master/plots/mcreliability.png\" \nalt=\"Image formed by above method\" width=\"240\" height=\"240\" border=\"10\" /></a>\n\n\n# Coin toss sequences\n\nLet's say you and I start tossing fair coins. What is the probability you'll reach three consecutive heads before\nI reach two consecutive heads? What about in general you reaching (n+1) consecutive heads before I reach n consecutive\nheads?\n\n\n```python\nfrom stochproc.competitivecointoss.smallmarkov import *\n\nns = np.arange(2,15)\nwin_probs = []\nfor n in ns:\n    # The losing markov sequence of coin tosses that needs (n-1) heads.\n    lose_seq = MarkovSequence(get_consecutive_heads_mat(n))\n    # The winning markov sequence of coin tosses that needs n heads.\n    win_seq = MarkovSequence(get_consecutive_heads_mat(n+1))\n    # If you multiply the two sequence objects, you get the probability\n    # that the first one beats the second one.\n    win_prob = win_seq*lose_seq\n    win_probs.append(win_prob)\n\nplt.plot(ns, win_probs)\n```\n\nThis leads to the following plot:\n\n\n<a href=\"https://medium.com/@rohitpandey576/coin-toss-markov-chains-7995cb303406\" \ntarget=\"_blank\"><img src=\"https://github.com/ryu577/ryu577.github.io/blob/master/Downloads/CompetitiveCoinToss/probs_with_n.png\" \nalt=\"Image formed by above method\" width=\"240\" height=\"240\" border=\"10\" /></a>\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ryu577/stochproc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "stochproc", "package_url": "https://pypi.org/project/stochproc/", "platform": "", "project_url": "https://pypi.org/project/stochproc/", "project_urls": {"Homepage": "https://github.com/ryu577/stochproc"}, "release_url": "https://pypi.org/project/stochproc/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Methods to model all kinds of stochastic processes.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p>This repository aims to model and uncover the properties of all kinds of stochastic processes (processes\nthat are based on some kind of underlying phenomenon like a coin toss for which we can't know the outcome\nfor sure).</p>\n<p>Some of these are taken from the book, Introduction to probability models by Sheldon Ross.</p>\n<p>The best way to demonstrate the capabilities of this library is to describe some stochastic processes\nit can model and show how to use it to extract some of their properties.</p>\n<h1>Installation</h1>\n<p>To install the library, run (pyray was taken on pypi):</p>\n<pre><code>pip install stochproc\n</code></pre>\n<p>Make sure you have all the requirements (requirements.txt) installed. If not, you can run:</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<p>Alternately, you can fork/download the code and run from the main folder:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h1>Machine reliability</h1>\n<p>Let's say we start up a machine. It stays up some random amount of time before succumbing to failure.\nThe amount of time it stays up is a random variable. This variable models the mean time between failures.</p>\n<p>And once the machine is down, it takes a certain amount of time to get repaired. This is the mean time\nto repair.</p>\n<p>The question is at any time t, what is the probability the machine is up and running?</p>\n<p>Chapter 11 of [1] provides a closed form. However, we want to validate this with simulation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stochproc.reliability.machinerepair</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n\t<span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\t<span class=\"n\">stds</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\t<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n\t\t<span class=\"n\">prob</span><span class=\"p\">,</span> <span class=\"n\">std</span> <span class=\"o\">=</span> <span class=\"n\">updown</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\t\t<span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">)</span>\n\t\t<span class=\"n\">stds</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"p\">)</span>\n\t<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">probs</span><span class=\"p\">,</span><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">,</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'pink'</span><span class=\"p\">)</span>\n\n<span class=\"n\">xs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">closed_form</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">),</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Time'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Reliability of system'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>This leads to the following plot.</p>\n<p><a href=\"https://medium.com/@rohitpandey576/coin-toss-markov-chains-7995cb303406\" rel=\"nofollow\"><img alt=\"Image formed by above method\" height=\"240\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c411b3f83a7669438999cea8ccab28ede4353a10/68747470733a2f2f6769746875622e636f6d2f7279753537372f73746f636870726f632f626c6f622f6d61737465722f706c6f74732f6d6372656c696162696c6974792e706e67\" width=\"240\"></a></p>\n<h1>Coin toss sequences</h1>\n<p>Let's say you and I start tossing fair coins. What is the probability you'll reach three consecutive heads before\nI reach two consecutive heads? What about in general you reaching (n+1) consecutive heads before I reach n consecutive\nheads?</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stochproc.competitivecointoss.smallmarkov</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"n\">win_probs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">ns</span><span class=\"p\">:</span>\n    <span class=\"c1\"># The losing markov sequence of coin tosses that needs (n-1) heads.</span>\n    <span class=\"n\">lose_seq</span> <span class=\"o\">=</span> <span class=\"n\">MarkovSequence</span><span class=\"p\">(</span><span class=\"n\">get_consecutive_heads_mat</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n    <span class=\"c1\"># The winning markov sequence of coin tosses that needs n heads.</span>\n    <span class=\"n\">win_seq</span> <span class=\"o\">=</span> <span class=\"n\">MarkovSequence</span><span class=\"p\">(</span><span class=\"n\">get_consecutive_heads_mat</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"c1\"># If you multiply the two sequence objects, you get the probability</span>\n    <span class=\"c1\"># that the first one beats the second one.</span>\n    <span class=\"n\">win_prob</span> <span class=\"o\">=</span> <span class=\"n\">win_seq</span><span class=\"o\">*</span><span class=\"n\">lose_seq</span>\n    <span class=\"n\">win_probs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">win_prob</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ns</span><span class=\"p\">,</span> <span class=\"n\">win_probs</span><span class=\"p\">)</span>\n</pre>\n<p>This leads to the following plot:</p>\n<p><a href=\"https://medium.com/@rohitpandey576/coin-toss-markov-chains-7995cb303406\" rel=\"nofollow\"><img alt=\"Image formed by above method\" height=\"240\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96c6bafa59d053276f0ecd729a210e900aecf3c0/68747470733a2f2f6769746875622e636f6d2f7279753537372f7279753537372e6769746875622e696f2f626c6f622f6d61737465722f446f776e6c6f6164732f436f6d7065746974697665436f696e546f73732f70726f62735f776974685f6e2e706e67\" width=\"240\"></a></p>\n\n          </div>"}, "last_serial": 6938911, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "9a9adf4fbb826695518c448c9c8afc0e", "sha256": "63dab3e21e5a6d291c104acf68f616228d41675b549c8826016434f305341633"}, "downloads": -1, "filename": "stochproc-0.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9a9adf4fbb826695518c448c9c8afc0e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6992, "upload_time": "2018-10-21T04:23:01", "upload_time_iso_8601": "2018-10-21T04:23:01.342085Z", "url": "https://files.pythonhosted.org/packages/b7/a7/97c6ba124ac735589a9e606efde4735bafddcc3629ea7550bf4f4fb0fde0/stochproc-0.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f46fed6a383d2c3ade522283f341f39", "sha256": "1896bc09a1681453bbed0d9fe68ed32ae805b59b84bb869314d66a4b150cc425"}, "downloads": -1, "filename": "stochproc-0.0.0-py3.6.egg", "has_sig": false, "md5_digest": "3f46fed6a383d2c3ade522283f341f39", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13808, "upload_time": "2018-10-21T04:23:02", "upload_time_iso_8601": "2018-10-21T04:23:02.639130Z", "url": "https://files.pythonhosted.org/packages/d7/9d/7ba16613d480d13bcb3c59c594b7d14ea32f00e51a9d21ce11f590265c4a/stochproc-0.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e44d4840b418b8074fdc058449593c06", "sha256": "49a499ab7e8f080ad035187afed88225aff256d459e7914cddd5189abe3939b2"}, "downloads": -1, "filename": "stochproc-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e44d4840b418b8074fdc058449593c06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6984, "upload_time": "2018-10-21T04:23:37", "upload_time_iso_8601": "2018-10-21T04:23:37.168239Z", "url": "https://files.pythonhosted.org/packages/7a/2b/0f4b6a9c74a6e208b2a7c74ec352ab6b5172aec11727169670cf223f9bfa/stochproc-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e52546c050d74968ae19a9f58a243e8", "sha256": "fcd6f4e49c53e2867a7a76d922f56e65840fa1f66b3e054a7c10cc0c7b80bcb6"}, "downloads": -1, "filename": "stochproc-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7e52546c050d74968ae19a9f58a243e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5433, "upload_time": "2018-10-21T04:23:03", "upload_time_iso_8601": "2018-10-21T04:23:03.975522Z", "url": "https://files.pythonhosted.org/packages/66/b6/6d361d18f63a37f332e069130b0cf18117393159535fa8b2f17ce368cbfa/stochproc-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "27df6d24a1be639deb4c4d3e7e7dc206", "sha256": "889fa7f4de109bbc72ec6f076e9c0146c5614844b2587dd6e0f50dea11601dac"}, "downloads": -1, "filename": "stochproc-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "27df6d24a1be639deb4c4d3e7e7dc206", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30160, "upload_time": "2020-01-12T21:10:21", "upload_time_iso_8601": "2020-01-12T21:10:21.793866Z", "url": "https://files.pythonhosted.org/packages/66/45/b87e634995a4d514e8beea9d46f4d765db030bdf6d0046f414d9b05d33da/stochproc-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "126517f315d83ffeb4a68e86f43d7f81", "sha256": "252ea6339e8dac25afb5bb49a41c334956e9fcb55f01dd7a15bf75b9a383bf8a"}, "downloads": -1, "filename": "stochproc-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "126517f315d83ffeb4a68e86f43d7f81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30161, "upload_time": "2020-01-12T21:15:31", "upload_time_iso_8601": "2020-01-12T21:15:31.968640Z", "url": "https://files.pythonhosted.org/packages/45/82/4475e125f7a4f2dd586aefe67be6115b00d9f679a6abf15973246aa56988/stochproc-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a7a2c85dca9438cabda8b39766ca1469", "sha256": "a2196f8f7ba42549295302d9f710049619f615e4362a086b81e376c738f51b1c"}, "downloads": -1, "filename": "stochproc-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a7a2c85dca9438cabda8b39766ca1469", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31555, "upload_time": "2020-04-02T20:21:07", "upload_time_iso_8601": "2020-04-02T20:21:07.026742Z", "url": "https://files.pythonhosted.org/packages/56/59/9736213b3e76db88b73fe4c578f86512f66d84ed2a22fe89a9450433c179/stochproc-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "728e90614652261d39b9e54965aa30f1", "sha256": "1a49983d20f64e96284273675170c3533b9ccf7b446859c2ea84ef4e4d139f4e"}, "downloads": -1, "filename": "stochproc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "728e90614652261d39b9e54965aa30f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24174, "upload_time": "2020-04-02T20:21:08", "upload_time_iso_8601": "2020-04-02T20:21:08.475790Z", "url": "https://files.pythonhosted.org/packages/46/33/3eb0103cdfbae47eb8ab7c1556b2213309432555330dc30b25b5b33cb197/stochproc-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7a2c85dca9438cabda8b39766ca1469", "sha256": "a2196f8f7ba42549295302d9f710049619f615e4362a086b81e376c738f51b1c"}, "downloads": -1, "filename": "stochproc-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a7a2c85dca9438cabda8b39766ca1469", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31555, "upload_time": "2020-04-02T20:21:07", "upload_time_iso_8601": "2020-04-02T20:21:07.026742Z", "url": "https://files.pythonhosted.org/packages/56/59/9736213b3e76db88b73fe4c578f86512f66d84ed2a22fe89a9450433c179/stochproc-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "728e90614652261d39b9e54965aa30f1", "sha256": "1a49983d20f64e96284273675170c3533b9ccf7b446859c2ea84ef4e4d139f4e"}, "downloads": -1, "filename": "stochproc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "728e90614652261d39b9e54965aa30f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24174, "upload_time": "2020-04-02T20:21:08", "upload_time_iso_8601": "2020-04-02T20:21:08.475790Z", "url": "https://files.pythonhosted.org/packages/46/33/3eb0103cdfbae47eb8ab7c1556b2213309432555330dc30b25b5b33cb197/stochproc-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:49 2020"}