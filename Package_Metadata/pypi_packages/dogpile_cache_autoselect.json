{"info": {"author": "(the author)", "author_email": "markv.nl.dev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Autoselect dogpile.cache backends\n-----------------------------------------\n\nThis consists of one function that tries to detect dogpile.cache backends and chooses the best one.\n\nThe function::\n\n\tauto_select_backend(region_kwargs=None, between_runs=True, require_server=False, verbose=False)\n\nUse like this:\n\n* region_kwargs: Parameters passed on to the region (dictionary).\n* between_runs: If True, only selects backends that persist between runs.\n* require_server: If True, raises an exception if no working server-backend is found (redis, memcached).\n* verbose: If True, prints choices that are being made.\n\nTypically::\n\n\tbackend = auto_select_backend()\n\t# done\n\nIt can only detect backends that don't need special parameters to connect to (so it has to run locally). It's mostly for software distributed to people who'll run it locally (if you've set up a big caching cluster, you can probably spare 1 more minute to configure dogpile).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/mverleg/dogpile.cache.autoselect", "keywords": "cache", "license": "Public domain", "maintainer": null, "maintainer_email": null, "name": "dogpile_cache_autoselect", "package_url": "https://pypi.org/project/dogpile_cache_autoselect/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dogpile_cache_autoselect/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/mverleg/dogpile.cache.autoselect"}, "release_url": "https://pypi.org/project/dogpile_cache_autoselect/1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple script that attempts to automatically select an available cache backend for dogpile.cache", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This consists of one function that tries to detect dogpile.cache backends and chooses the best one.</p>\n<p>The function:</p>\n<pre>auto_select_backend(region_kwargs=None, between_runs=True, require_server=False, verbose=False)\n</pre>\n<p>Use like this:</p>\n<ul>\n<li>region_kwargs: Parameters passed on to the region (dictionary).</li>\n<li>between_runs: If True, only selects backends that persist between runs.</li>\n<li>require_server: If True, raises an exception if no working server-backend is found (redis, memcached).</li>\n<li>verbose: If True, prints choices that are being made.</li>\n</ul>\n<p>Typically:</p>\n<pre>backend = auto_select_backend()\n# done\n</pre>\n<p>It can only detect backends that don\u2019t need special parameters to connect to (so it has to run locally). It\u2019s mostly for software distributed to people who\u2019ll run it locally (if you\u2019ve set up a big caching cluster, you can probably spare 1 more minute to configure dogpile).</p>\n\n          </div>"}, "last_serial": 1971272, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a14b9279ad87e380c7da01ee563c4695", "sha256": "8ed896f24b34ed57fccacda9c9573d98abb59dacb97fd580aabfe75a8dd82b17"}, "downloads": -1, "filename": "dogpile_cache_autoselect-1.0.tar.gz", "has_sig": false, "md5_digest": "a14b9279ad87e380c7da01ee563c4695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3450, "upload_time": "2016-02-23T09:25:28", "upload_time_iso_8601": "2016-02-23T09:25:28.555860Z", "url": "https://files.pythonhosted.org/packages/d0/88/19fca3d8eb131e904424eb7a83ea96de6317356116eee5cad6b9b377e99c/dogpile_cache_autoselect-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a14b9279ad87e380c7da01ee563c4695", "sha256": "8ed896f24b34ed57fccacda9c9573d98abb59dacb97fd580aabfe75a8dd82b17"}, "downloads": -1, "filename": "dogpile_cache_autoselect-1.0.tar.gz", "has_sig": false, "md5_digest": "a14b9279ad87e380c7da01ee563c4695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3450, "upload_time": "2016-02-23T09:25:28", "upload_time_iso_8601": "2016-02-23T09:25:28.555860Z", "url": "https://files.pythonhosted.org/packages/d0/88/19fca3d8eb131e904424eb7a83ea96de6317356116eee5cad6b9b377e99c/dogpile_cache_autoselect-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:34 2020"}