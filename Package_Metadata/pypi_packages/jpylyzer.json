{"info": {"author": "Johan van der Knijff", "author_email": "johan.vanderknijff@kb.nl", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# jpylyzer\n\n## About\n*Jpylyzer* is a JP2 [(JPEG 2000 Part 1)][2] image validator and properties extractor. Its development was partially supported by the [SCAPE][4] Project. The SCAPE project is co-funded by the European Union under FP7 ICT-2009.4.1 (Grant Agreement number 270137).\n\n## Jpylyzer homepage\n\nPlease visit the jpylyzer homepage for links to the most recent package downloads (Debian packages and Windows binaries), and a User Manual which documents all aspects of the software:\n\n<http://jpylyzer.openpreservation.org/>\n\n\n## CI Status\n\n- [![Build Status](https://travis-ci.org/openpreserve/jpylyzer.svg?branch=master)](https://travis-ci.org/openpreserve/jpylyzer \"Jpylyzer Travis-CI integration build\") Travis-CI\n\n- [![Build Status](https://jenkins.openpreservation.org/buildStatus/icon?job=jpylyzer%2Fjpylyzer)](https://jenkins.openpreservation.org/job/jpylyzer/job/jpylyzer/) OPF Jenkins\n<!-- Start of text to be copied to usage.md of jpylyzer website -->\n\n## Using jpylyzer from the command line\n\nCalling *jpylyzer* in a command window without any arguments results in the following helper message:\n\n    usage: jpylyzer [-h] [--format FMT] [--legacyout] [--mix {1,2}] [--nopretty]\n              [--nullxml] [--recurse] [--verbose] [--version] [--wrapper]\n              jp2In [jp2In ...]\n\n### Positional arguments\n\n|Argument|Description|\n|:--|:--|\n|`jp2In`|input JP2 image(s), may be one or more (whitespace-separated) path expressions; prefix wildcard (\\*) with backslash (\\\\) in Linux|\n\n### Optional arguments\n\n|Argument|Description|\n|:--|:--|\n|`[-h, --help]`|show help message and exit|\n|`[--format FMT]`|validation format; allowed values are `jp2` (used by default) and `j2c` (which activates raw codestream validation)|\n|`[--mix {1,2}]`|report additional output in NISO MIX format (version 1.0 or 2.0)|\n|`[--legacyout]`|report output in jpylyzer 1.x format (provided for backward compatibility only)|\n|`[--nopretty]`|suppress pretty-printing of XML output|\n|`[--nullxml]`|extract null-terminated XML content from XML and UUID boxes(doesn't affect validation)|\n|`[--recurse, -r]`|when analysing a directory, recurse into subdirectories (implies `--wrapper` if `--legacyout` is used)|\n|`[--verbose]`|report test results in verbose format|\n|`[-v, --version]`|show program's version number and exit|\n|`[--wrapper, -w]`|wrap output for individual image(s) in 'results' XML element (deprecated from jpylyzer 2.x onward, only takes effect if `--legacyout` is used)|\n\n## Output\n\nOutput is directed to the standard output device (*stdout*).\n\n### Example\n\n`jpylyzer rubbish.jp2 > rubbish.xml`\n\nIn the above example, output is redirected to the file &#8216;rubbish.xml&#8217;. By default *jpylyzer*&#8217;s XML is pretty-printed, so you should be able to view the file using your favourite text editor. Alternatively use a dedicated XML editor, or open the file in your web browser.\n\n## Output format\n\nThe output file contains the following top-level elements:\n\n1. One *toolInfo* element, which contains information about *jpylyzer* (its name and version number)\n\n2. One or more *file* elements, each of which contain information about about the analysed files\n\n\nIn turn, each *file* element contains the following sub-elements:\n\n\n1. *fileInfo*: general information about the analysed file\n\n2. *statusInfo*: information about the status of *jpylyzer*'s validation attempt\n\n3. *isValid*: outcome of the validation\n\n4. *tests*: outcome of the individual tests that are part of the\nvalidation process (organised by box)\n\n5. *properties*: image properties (organised by box)\n\n6. *propertiesExtension*: wrapper element for NISO *MIX* output (only if the `--mix` option is used)\n\n## Using jpylyzer as a Python module\n\nInstead of using *jpylyzer* from the command-line, you can also import\nit as a module in your own Python programs. To do so, install jpylyzer\nwith *pip*. Then import *jpylyzer* into your code by adding:\n\n```python\nfrom jpylyzer import jpylyzer\n```\nSubsequently you can call any function that is defined in *jpylyzer.py*.\nIn practice you will most likely only need the *checkOneFile* function.\nThe following minimal script shows how this works:\n\n```python\n#! /usr/bin/env python\n\nfrom jpylyzer import jpylyzer\n\n# Define JP2\nmyFile = \"/home/johan/jpylyzer-test-files/aware.jp2\"\n\n# Analyse with jpylyzer, result to Element object\nmyResult = jpylyzer.checkOneFile(myFile)\n\n# Return image height value\nimageHeight = myResult.findtext('./properties/jp2HeaderBox/imageHeaderBox/height')\nprint(imageHeight)\n```\n\nHere, *myResult* is an *Element* object that can either be used directly,\nor converted to XML using the *ElementTree* module[^3]. The structure of the\nelement object follows the XML output that described in [Chapter 5](#output-format).\n\nFor validation a raw JPEG 2000 codestreams, call the *checkOneFile* function with the additional\n*validationFormat* argument, and set it to `j2c`:\n\n```python\n# Define Codestream\nmyFile = \"/home/johan/jpylyzer-test-files/rubbish.j2c\"\n\n# Analyse with jpylyzer, result to Element object\nmyResult = jpylyzer.checkOneFile(myFile, 'j2c')\n```\n\n<!-- End of text to be copied to usage.md of jpylyzer website -->\n\n## Debian packages build process\n\nThe [Vagrant directory](vagrant) of this repo contains instructions on how to build Debian packages using [VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/). A Vagrantfile and provisioning scripts are included for a number of target platforms, which should make the process of building the packages fairly easy.\n\n## Steps in preparing a jpylyzer release\n\n[See instructions here](./howto-prepare-release.md)\n\n[1]: http://jpylyzer.openpreservation.org//jpylyzerUserManual.html\n[2]: http://www.jpeg.org/public/15444-1annexi.pdf\n[3]: http://www.itu.int/rec/T-REC-T.800/en\n[4]: http://www.scape-project.eu/\n[5]: https://bintray.com/openplanets/opf-windows/jpylyzer_win32/\n[6]: https://bintray.com/openplanets/opf-debian/jpylyzer_i386/\n[7]: https://bintray.com/openplanets/opf-debian/jpylyzer_amd64/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/openpreserve/jpylyzer/archive/2.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://jpylyzer.openpreservation.org/", "keywords": "", "license": "LGPL", "maintainer": "Johan van der Knijff", "maintainer_email": "johan.vanderknijff@kb.nl", "name": "jpylyzer", "package_url": "https://pypi.org/project/jpylyzer/", "platform": "POSIX", "project_url": "https://pypi.org/project/jpylyzer/", "project_urls": {"Download": "https://github.com/openpreserve/jpylyzer/archive/2.0.0.tar.gz", "Homepage": "http://jpylyzer.openpreservation.org/"}, "release_url": "https://pypi.org/project/jpylyzer/2.0.0/", "requires_dist": ["setuptools", "six", "pre-commit ; extra == 'testing'", "pytest ; extra == 'testing'", "pylint ; extra == 'testing'", "pytest-coverage ; extra == 'testing'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "summary": "JP2 (JPEG 2000 Part 1) image validator and properties extractor", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jpylyzer</h1>\n<h2>About</h2>\n<p><em>Jpylyzer</em> is a JP2 <a href=\"http://www.jpeg.org/public/15444-1annexi.pdf\" rel=\"nofollow\">(JPEG 2000 Part 1)</a> image validator and properties extractor. Its development was partially supported by the <a href=\"http://www.scape-project.eu/\" rel=\"nofollow\">SCAPE</a> Project. The SCAPE project is co-funded by the European Union under FP7 ICT-2009.4.1 (Grant Agreement number 270137).</p>\n<h2>Jpylyzer homepage</h2>\n<p>Please visit the jpylyzer homepage for links to the most recent package downloads (Debian packages and Windows binaries), and a User Manual which documents all aspects of the software:</p>\n<p><a href=\"http://jpylyzer.openpreservation.org/\" rel=\"nofollow\">http://jpylyzer.openpreservation.org/</a></p>\n<h2>CI Status</h2>\n<ul>\n<li>\n<p><a href=\"https://travis-ci.org/openpreserve/jpylyzer\" rel=\"nofollow\" title=\"Jpylyzer Travis-CI integration build\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d202c3ac32a33748b666d76f71f8f8a1b2d4903/68747470733a2f2f7472617669732d63692e6f72672f6f70656e70726573657276652f6a70796c797a65722e7376673f6272616e63683d6d6173746572\"></a> Travis-CI</p>\n</li>\n<li>\n<p><a href=\"https://jenkins.openpreservation.org/job/jpylyzer/job/jpylyzer/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff5c7bb9a119856e4f8b063716da8f4db1e96d41/68747470733a2f2f6a656e6b696e732e6f70656e707265736572766174696f6e2e6f72672f6275696c645374617475732f69636f6e3f6a6f623d6a70796c797a65722532466a70796c797a6572\"></a> OPF Jenkins</p>\n</li>\n</ul>\n\n<h2>Using jpylyzer from the command line</h2>\n<p>Calling <em>jpylyzer</em> in a command window without any arguments results in the following helper message:</p>\n<pre><code>usage: jpylyzer [-h] [--format FMT] [--legacyout] [--mix {1,2}] [--nopretty]\n          [--nullxml] [--recurse] [--verbose] [--version] [--wrapper]\n          jp2In [jp2In ...]\n</code></pre>\n<h3>Positional arguments</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Argument</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>jp2In</code></td>\n<td align=\"left\">input JP2 image(s), may be one or more (whitespace-separated) path expressions; prefix wildcard (*) with backslash (\\) in Linux</td>\n</tr></tbody></table>\n<h3>Optional arguments</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Argument</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>[-h, --help]</code></td>\n<td align=\"left\">show help message and exit</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--format FMT]</code></td>\n<td align=\"left\">validation format; allowed values are <code>jp2</code> (used by default) and <code>j2c</code> (which activates raw codestream validation)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--mix {1,2}]</code></td>\n<td align=\"left\">report additional output in NISO MIX format (version 1.0 or 2.0)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--legacyout]</code></td>\n<td align=\"left\">report output in jpylyzer 1.x format (provided for backward compatibility only)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--nopretty]</code></td>\n<td align=\"left\">suppress pretty-printing of XML output</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--nullxml]</code></td>\n<td align=\"left\">extract null-terminated XML content from XML and UUID boxes(doesn't affect validation)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--recurse, -r]</code></td>\n<td align=\"left\">when analysing a directory, recurse into subdirectories (implies <code>--wrapper</code> if <code>--legacyout</code> is used)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--verbose]</code></td>\n<td align=\"left\">report test results in verbose format</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[-v, --version]</code></td>\n<td align=\"left\">show program's version number and exit</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[--wrapper, -w]</code></td>\n<td align=\"left\">wrap output for individual image(s) in 'results' XML element (deprecated from jpylyzer 2.x onward, only takes effect if <code>--legacyout</code> is used)</td>\n</tr></tbody></table>\n<h2>Output</h2>\n<p>Output is directed to the standard output device (<em>stdout</em>).</p>\n<h3>Example</h3>\n<p><code>jpylyzer rubbish.jp2 &gt; rubbish.xml</code></p>\n<p>In the above example, output is redirected to the file \u2018rubbish.xml\u2019. By default <em>jpylyzer</em>\u2019s XML is pretty-printed, so you should be able to view the file using your favourite text editor. Alternatively use a dedicated XML editor, or open the file in your web browser.</p>\n<h2>Output format</h2>\n<p>The output file contains the following top-level elements:</p>\n<ol>\n<li>\n<p>One <em>toolInfo</em> element, which contains information about <em>jpylyzer</em> (its name and version number)</p>\n</li>\n<li>\n<p>One or more <em>file</em> elements, each of which contain information about about the analysed files</p>\n</li>\n</ol>\n<p>In turn, each <em>file</em> element contains the following sub-elements:</p>\n<ol>\n<li>\n<p><em>fileInfo</em>: general information about the analysed file</p>\n</li>\n<li>\n<p><em>statusInfo</em>: information about the status of <em>jpylyzer</em>'s validation attempt</p>\n</li>\n<li>\n<p><em>isValid</em>: outcome of the validation</p>\n</li>\n<li>\n<p><em>tests</em>: outcome of the individual tests that are part of the\nvalidation process (organised by box)</p>\n</li>\n<li>\n<p><em>properties</em>: image properties (organised by box)</p>\n</li>\n<li>\n<p><em>propertiesExtension</em>: wrapper element for NISO <em>MIX</em> output (only if the <code>--mix</code> option is used)</p>\n</li>\n</ol>\n<h2>Using jpylyzer as a Python module</h2>\n<p>Instead of using <em>jpylyzer</em> from the command-line, you can also import\nit as a module in your own Python programs. To do so, install jpylyzer\nwith <em>pip</em>. Then import <em>jpylyzer</em> into your code by adding:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jpylyzer</span> <span class=\"kn\">import</span> <span class=\"n\">jpylyzer</span>\n</pre>\n<p>Subsequently you can call any function that is defined in <em>jpylyzer.py</em>.\nIn practice you will most likely only need the <em>checkOneFile</em> function.\nThe following minimal script shows how this works:</p>\n<pre><span class=\"ch\">#! /usr/bin/env python</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">jpylyzer</span> <span class=\"kn\">import</span> <span class=\"n\">jpylyzer</span>\n\n<span class=\"c1\"># Define JP2</span>\n<span class=\"n\">myFile</span> <span class=\"o\">=</span> <span class=\"s2\">\"/home/johan/jpylyzer-test-files/aware.jp2\"</span>\n\n<span class=\"c1\"># Analyse with jpylyzer, result to Element object</span>\n<span class=\"n\">myResult</span> <span class=\"o\">=</span> <span class=\"n\">jpylyzer</span><span class=\"o\">.</span><span class=\"n\">checkOneFile</span><span class=\"p\">(</span><span class=\"n\">myFile</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return image height value</span>\n<span class=\"n\">imageHeight</span> <span class=\"o\">=</span> <span class=\"n\">myResult</span><span class=\"o\">.</span><span class=\"n\">findtext</span><span class=\"p\">(</span><span class=\"s1\">'./properties/jp2HeaderBox/imageHeaderBox/height'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">imageHeight</span><span class=\"p\">)</span>\n</pre>\n<p>Here, <em>myResult</em> is an <em>Element</em> object that can either be used directly,\nor converted to XML using the <em>ElementTree</em> module[^3]. The structure of the\nelement object follows the XML output that described in <a href=\"#output-format\" rel=\"nofollow\">Chapter 5</a>.</p>\n<p>For validation a raw JPEG 2000 codestreams, call the <em>checkOneFile</em> function with the additional\n<em>validationFormat</em> argument, and set it to <code>j2c</code>:</p>\n<pre><span class=\"c1\"># Define Codestream</span>\n<span class=\"n\">myFile</span> <span class=\"o\">=</span> <span class=\"s2\">\"/home/johan/jpylyzer-test-files/rubbish.j2c\"</span>\n\n<span class=\"c1\"># Analyse with jpylyzer, result to Element object</span>\n<span class=\"n\">myResult</span> <span class=\"o\">=</span> <span class=\"n\">jpylyzer</span><span class=\"o\">.</span><span class=\"n\">checkOneFile</span><span class=\"p\">(</span><span class=\"n\">myFile</span><span class=\"p\">,</span> <span class=\"s1\">'j2c'</span><span class=\"p\">)</span>\n</pre>\n\n<h2>Debian packages build process</h2>\n<p>The <a href=\"vagrant\" rel=\"nofollow\">Vagrant directory</a> of this repo contains instructions on how to build Debian packages using <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">VirtualBox</a> and <a href=\"https://www.vagrantup.com/\" rel=\"nofollow\">Vagrant</a>. A Vagrantfile and provisioning scripts are included for a number of target platforms, which should make the process of building the packages fairly easy.</p>\n<h2>Steps in preparing a jpylyzer release</h2>\n<p><a href=\"./howto-prepare-release.md\" rel=\"nofollow\">See instructions here</a></p>\n\n          </div>"}, "last_serial": 6176090, "releases": {"1.18.0": [{"comment_text": "", "digests": {"md5": "c6248a77ccb6662f55e16205f4036c63", "sha256": "9318df521d642add3dd14f8072e1daf93aff45f589c8b27f2fc451eea8c0d0bb"}, "downloads": -1, "filename": "jpylyzer-1.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6248a77ccb6662f55e16205f4036c63", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 71826, "upload_time": "2017-08-23T11:46:58", "upload_time_iso_8601": "2017-08-23T11:46:58.582642Z", "url": "https://files.pythonhosted.org/packages/ca/b8/63d431e53aa70e04d1f89baacf2dc5415e622c66385bd9375d7d3e92871b/jpylyzer-1.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57960cd5583786e48b2dec60d0b4adf6", "sha256": "34b0582a8d409cd24a65ab958d1236b5b895249d381e79f7ff292c750eaf41a1"}, "downloads": -1, "filename": "jpylyzer-1.18.0.tar.gz", "has_sig": false, "md5_digest": "57960cd5583786e48b2dec60d0b4adf6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2153779, "upload_time": "2017-08-23T11:47:01", "upload_time_iso_8601": "2017-08-23T11:47:01.541863Z", "url": "https://files.pythonhosted.org/packages/33/2b/1c60ad5e83e88c0f6d2ee3311fc7d7c5b754205ba5afd58f76094fa83e64/jpylyzer-1.18.0.tar.gz", "yanked": false}], "1.18.0b3": [{"comment_text": "", "digests": {"md5": "a3c3d67a095a328a30f795c56cb4d8c6", "sha256": "b1bf12141dca5aedcf6be96cb887f387bced114f95bb40d2bf71bddbe5c32a92"}, "downloads": -1, "filename": "jpylyzer-1.18.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3c3d67a095a328a30f795c56cb4d8c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 86216, "upload_time": "2017-08-17T14:16:49", "upload_time_iso_8601": "2017-08-17T14:16:49.474453Z", "url": "https://files.pythonhosted.org/packages/27/9d/482756159c754c26d40d54eaa9b7d63ceaba4be70a5fec01275f89e6a343/jpylyzer-1.18.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "111df329d62b4204566eafad84ec2247", "sha256": "30ae71d0be2505293d5ada24e8714b353f39a491cfe011125f513f295a80bd1f"}, "downloads": -1, "filename": "jpylyzer-1.18.0b3.tar.gz", "has_sig": false, "md5_digest": "111df329d62b4204566eafad84ec2247", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2160306, "upload_time": "2017-08-17T14:16:54", "upload_time_iso_8601": "2017-08-17T14:16:54.545752Z", "url": "https://files.pythonhosted.org/packages/6f/29/6c7384c0048f080e8632839aae826201b4a87cd716f02f02b40a5a99f725/jpylyzer-1.18.0b3.tar.gz", "yanked": false}], "1.18.0b4": [{"comment_text": "", "digests": {"md5": "15cf70f44cdc6bf654965d606646553d", "sha256": "51132e4054b3ce3b8d42ea91b3d69353581c5d8dc9636a89f55c5aad6ff99e36"}, "downloads": -1, "filename": "jpylyzer-1.18.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15cf70f44cdc6bf654965d606646553d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 86215, "upload_time": "2017-08-17T14:53:36", "upload_time_iso_8601": "2017-08-17T14:53:36.849413Z", "url": "https://files.pythonhosted.org/packages/ff/2d/81f9ae931a901804b00c0eabb49bc956bba34f53e67a8bf0c31538f9a4e2/jpylyzer-1.18.0b4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f211780533fc1f578a19647aefc98da6", "sha256": "43b6a375b694a012ce89dd35d286f1b8eecb6432d32b3f5f4392f999a54015c4"}, "downloads": -1, "filename": "jpylyzer-1.18.0b4.tar.gz", "has_sig": false, "md5_digest": "f211780533fc1f578a19647aefc98da6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2160312, "upload_time": "2017-08-17T14:53:41", "upload_time_iso_8601": "2017-08-17T14:53:41.875348Z", "url": "https://files.pythonhosted.org/packages/37/2f/b536b135403e4839473eae1b0645a182d2b78ec25b2974a317c6f279958f/jpylyzer-1.18.0b4.tar.gz", "yanked": false}], "1.18.0b5": [{"comment_text": "", "digests": {"md5": "220889d0506e045a88024d271ab9e216", "sha256": "267cc39c561445f1204a913c4e15532d371f1faf685826a934b313c4b2c1cec0"}, "downloads": -1, "filename": "jpylyzer-1.18.0b5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "220889d0506e045a88024d271ab9e216", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 86226, "upload_time": "2017-08-17T18:16:12", "upload_time_iso_8601": "2017-08-17T18:16:12.719813Z", "url": "https://files.pythonhosted.org/packages/69/64/cc024552cbebc48efa9837a3ef73205d24e250f665e0ba5d0380a54de0c4/jpylyzer-1.18.0b5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "226ebd700027140fe7c215ce670a268a", "sha256": "1ea42fc906310f8a458a62e2e14006c9370c9f15c3441a727d560a16faa02e4e"}, "downloads": -1, "filename": "jpylyzer-1.18.0b5.tar.gz", "has_sig": false, "md5_digest": "226ebd700027140fe7c215ce670a268a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2160793, "upload_time": "2017-08-17T18:16:18", "upload_time_iso_8601": "2017-08-17T18:16:18.595374Z", "url": "https://files.pythonhosted.org/packages/7b/d2/57a46e2c186fc116d6eeb6d1d114df0daca2e324112ff74083d62395a1bf/jpylyzer-1.18.0b5.tar.gz", "yanked": false}], "1.18.0b6": [{"comment_text": "", "digests": {"md5": "76c87a91ba024571103c7d62cf3b682f", "sha256": "1f692c186dd38b62761b5f11c332665d51c091b9b8d760c6e0e44909a2ed9eaf"}, "downloads": -1, "filename": "jpylyzer-1.18.0b6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "76c87a91ba024571103c7d62cf3b682f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 70417, "upload_time": "2017-08-18T12:24:20", "upload_time_iso_8601": "2017-08-18T12:24:20.658637Z", "url": "https://files.pythonhosted.org/packages/90/42/73992e48feed7d06deb1424fdec2f2416a425c4ae6694919d85c37552929/jpylyzer-1.18.0b6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ca46cee4e1e344871aa44a584628a7e", "sha256": "a527538ed695b86dd6b999c4a5062b90b9df435d20614e88c30cd56eb56d4a0c"}, "downloads": -1, "filename": "jpylyzer-1.18.0b6.tar.gz", "has_sig": false, "md5_digest": "8ca46cee4e1e344871aa44a584628a7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2144303, "upload_time": "2017-08-18T12:24:25", "upload_time_iso_8601": "2017-08-18T12:24:25.561822Z", "url": "https://files.pythonhosted.org/packages/c4/b6/5f271335b1a3264d34db5a3cc91987d47b4efe509d1de7ffc227bc443338/jpylyzer-1.18.0b6.tar.gz", "yanked": false}], "1.18.0b9": [{"comment_text": "", "digests": {"md5": "2df03a7a8990c6c8db720918d2005ab7", "sha256": "ddb78fdc2f8da40088c0e16445817f2c5721f2333d60000bcdba66368b52e63a"}, "downloads": -1, "filename": "jpylyzer-1.18.0b9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2df03a7a8990c6c8db720918d2005ab7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 70316, "upload_time": "2017-08-22T15:18:01", "upload_time_iso_8601": "2017-08-22T15:18:01.273588Z", "url": "https://files.pythonhosted.org/packages/af/ba/2467c6e77af64ffb71b3bc971acfed4f5670ab8f24a29ed0aa4260594760/jpylyzer-1.18.0b9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2efec3b4fdbaaef23b47283fe55bc02", "sha256": "f99cf803d5542f6c2ea17c306087e0dc2c07fadec751c14338a95f053c4999ef"}, "downloads": -1, "filename": "jpylyzer-1.18.0b9.tar.gz", "has_sig": false, "md5_digest": "b2efec3b4fdbaaef23b47283fe55bc02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2152803, "upload_time": "2017-08-22T15:18:04", "upload_time_iso_8601": "2017-08-22T15:18:04.284634Z", "url": "https://files.pythonhosted.org/packages/27/64/f98e7016585daa573eedc50c2cbd1bb85fa4ae65079103baa5ffea8e7c83/jpylyzer-1.18.0b9.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "6ebfd7e9f8e5866fefbe7237fad6de85", "sha256": "48ea2a025b66f4be2a296098f703f61cfc20699f9898b783f39ab9ac75a19e9d"}, "downloads": -1, "filename": "jpylyzer-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ebfd7e9f8e5866fefbe7237fad6de85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 87440, "upload_time": "2019-11-21T16:36:18", "upload_time_iso_8601": "2019-11-21T16:36:18.962102Z", "url": "https://files.pythonhosted.org/packages/c4/f6/5c36e07d341f706b3b6da5b84788c26cf56b43bd5e2bb1debfae37b729fe/jpylyzer-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aebbf7f2c5c678f141b0f579875c6b5e", "sha256": "0713d7208f6b9f8cabe6f9fd74eff30f8a0ce8339dbded64d4af09a9249e2029"}, "downloads": -1, "filename": "jpylyzer-2.0.0.tar.gz", "has_sig": false, "md5_digest": "aebbf7f2c5c678f141b0f579875c6b5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2172048, "upload_time": "2019-11-21T16:36:21", "upload_time_iso_8601": "2019-11-21T16:36:21.464703Z", "url": "https://files.pythonhosted.org/packages/d6/bf/31594d19ba792a113cd76dda53446444aefd41ac9c50020b18923bf65b0d/jpylyzer-2.0.0.tar.gz", "yanked": false}], "2.0.0rc1": [{"comment_text": "", "digests": {"md5": "8203b0b53d5b96d3a4518476f43ba48f", "sha256": "8cb0c49ef02f7ed32e337618d192c504008b8e1fe79a97c067ddbb02c5d00a7a"}, "downloads": -1, "filename": "jpylyzer-2.0.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8203b0b53d5b96d3a4518476f43ba48f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 84670, "upload_time": "2019-10-31T15:28:35", "upload_time_iso_8601": "2019-10-31T15:28:35.914973Z", "url": "https://files.pythonhosted.org/packages/ad/7e/695e961b2c44cd2508382d8fbb47e5a8f4275c15038cfe79b55f9b3ec74d/jpylyzer-2.0.0rc1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ebfd7e9f8e5866fefbe7237fad6de85", "sha256": "48ea2a025b66f4be2a296098f703f61cfc20699f9898b783f39ab9ac75a19e9d"}, "downloads": -1, "filename": "jpylyzer-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ebfd7e9f8e5866fefbe7237fad6de85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 87440, "upload_time": "2019-11-21T16:36:18", "upload_time_iso_8601": "2019-11-21T16:36:18.962102Z", "url": "https://files.pythonhosted.org/packages/c4/f6/5c36e07d341f706b3b6da5b84788c26cf56b43bd5e2bb1debfae37b729fe/jpylyzer-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aebbf7f2c5c678f141b0f579875c6b5e", "sha256": "0713d7208f6b9f8cabe6f9fd74eff30f8a0ce8339dbded64d4af09a9249e2029"}, "downloads": -1, "filename": "jpylyzer-2.0.0.tar.gz", "has_sig": false, "md5_digest": "aebbf7f2c5c678f141b0f579875c6b5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, <4", "size": 2172048, "upload_time": "2019-11-21T16:36:21", "upload_time_iso_8601": "2019-11-21T16:36:21.464703Z", "url": "https://files.pythonhosted.org/packages/d6/bf/31594d19ba792a113cd76dda53446444aefd41ac9c50020b18923bf65b0d/jpylyzer-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:08 2020"}