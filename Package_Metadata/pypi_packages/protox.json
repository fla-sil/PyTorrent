{"info": {"author": "Sergey Tikhonov", "author_email": "srg.tikhonov@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Protox\nProtocol buffers implementation for Python 3 that generates human-readable code with type hinting support\n\n## Quick example\n```python\nfrom enum import IntEnum\nfrom protox import Message\nfrom protox import UInt32, String, EnumField\n\n\nclass User(Message):\n    class Role(IntEnum):\n        USER = 1\n        ADMIN = 2\n\n    id: int = UInt32(number=1, required=True)\n    email: str = String(number=2, required=True)\n    role: Role = EnumField(Role, number=3, required=True, default=Role.USER)\n\n\nuser = User(id=1, email=\"john@doe.com\", role=User.Role.USER)\nuser_data = user.to_bytes()\n\nprint(User.from_bytes(user_data))\n# Outputs:\n# message User\n#     id = 1\n#     email = 'john@doe.com'\n#     role = Role.USER\n```\n\n## More examples \n* [EXAMPLES.md](EXAMPLES.md)\n* [Grpclib example](grpclib_example)\n\n## Code generation\nCode generator implemented as a protoc plugin so you have to install it first:\n\n#### Install protoc (Ubuntu)\n```bash\nsudo apt install protobuf-compiler\n```\n\n#### Install protoc (Mac OS)\n```bash\nbrew install protobuf\n```\n\n#### Install protox\n```bash\npython3 -m pip install protox\n````\n\n#### Generate messages\n```bash\nprotoc \\\n    --proto_path=protobuf_src \\\n    --protox_out=. \\\n    ./protobuf_src/user.proto\n```\n\n#### Generate grpclib service with all required dependencies \nThe following code generates service `ping_pong.proto` from the `protobuf_src` directory into `{$PROJECT_ROOT}/app/protobuf`.\n\nThe protox plugin supports 3 options:\n* --base-package=path/to/protobuf/out \n* --grpclib  # generates grpclib services \n* --with-dependencies  # generates dependencies for the given protobuf file\n\nThe options to the plugin are passed using the `--protox_opt=\"{plugin options here}\"` command \n```bash\nprotoc \\\n    --proto_path=protobuf_src \\\n    --protox_out=. \\\n    --protox_opt=\"--base-package=app/protobuf --grpclib --with-dependencies\" \\\n    ./protobuf_src/ping_pong.proto\n```\n\n\n## Core concepts \n* Human-readable python3.6+ generated code with type hinting\n* Support protobuf 2 and 3 at the same time\n* `None` values instead of zero values in fields for both proto2 and proto3\n* `Message.has_field()` in both proto2 and proto3\n* Protocols are easy to describe without code generation \n* Messages implemented in more pythonic way: to_bytes() instead of SerializeToString()\n* Enums are just enums python int enums\n\n## Features\n- [x] Messages\n- [x] Enums\n- [x] Nested messages\n- [x] Maps\n- [x] Well-known types\n- [x] Repeated fields\n- [x] Repeated messages\n- [x] Repeated enums\n- [x] Custom Message.to_python() / from_python() functions\n- [ ] Group fields (Deprecated by protobuf)\n\n\n## Code generator features\n- [x] Protobuf\n- [x] [Grpclib](https://github.com/vmagamedov/grpclib/)\n- [ ] [Grpc.io](https://github.com/grpc/grpc/tree/master/src/python/grpcio)\n- [x] Custom python package for protobuf out messages\n- [x] Compile protobuf file with dependencies\n- [x] Names mangling to avoid reserved names collisions\n- [x] Recursive messages/enums support\n- [x] Field names to_snake_case support\n\n## Difference with google's protobuf implementation\nBinary protocol works exactly as google's implementation does.\n\nThe difference is in the way messages behave:\n* Fields that were not explicitly set are None rather than zero-values\n* Methods like SerializeToString() were changed to more pythonic alternatives like to_bytes() / from_bytes()\n* Enums are just python int enums\n\n## Generated code example\n[Grpclib service example](grpclib_example/app/protobuf/service_grpclib.py)\n\n```python\nfrom enum import IntEnum\n\nimport protox\n\n\nclass User(protox.Message):\n    class Status(IntEnum):\n        USER = 1\n        ADMIN = 2\n\n    id: int\n    email: str\n    status: 'User.Status'\n\n    def __init__(\n        self,\n        *,\n        id: int = None,\n        email: str = None,\n        status: 'User.Status' = None,\n    ):\n        super().__init__(\n            id=id,\n            email=email,\n            status=status,\n        )\n\n\nprotox.define_fields(\n    User,\n    id=protox.Int32(\n        number=1, required=True\n    ),\n    email=protox.String(\n        number=2, required=True\n    ),\n    status=protox.EnumField(\n        number=3, py_enum=User.Status, default=User.Status.USER, required=True\n    ),\n)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sergey-tikhonov/protox", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "protox", "package_url": "https://pypi.org/project/protox/", "platform": "", "project_url": "https://pypi.org/project/protox/", "project_urls": {"Homepage": "http://github.com/sergey-tikhonov/protox"}, "release_url": "https://pypi.org/project/protox/0.1.8/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Protobuf for humans", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Protox</h1>\n<p>Protocol buffers implementation for Python 3 that generates human-readable code with type hinting support</p>\n<h2>Quick example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">IntEnum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">protox</span> <span class=\"kn\">import</span> <span class=\"n\">Message</span>\n<span class=\"kn\">from</span> <span class=\"nn\">protox</span> <span class=\"kn\">import</span> <span class=\"n\">UInt32</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">EnumField</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">Message</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Role</span><span class=\"p\">(</span><span class=\"n\">IntEnum</span><span class=\"p\">):</span>\n        <span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">ADMIN</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">UInt32</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">Role</span> <span class=\"o\">=</span> <span class=\"n\">EnumField</span><span class=\"p\">(</span><span class=\"n\">Role</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">Role</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"john@doe.com\"</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">)</span>\n<span class=\"n\">user_data</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">user_data</span><span class=\"p\">))</span>\n<span class=\"c1\"># Outputs:</span>\n<span class=\"c1\"># message User</span>\n<span class=\"c1\">#     id = 1</span>\n<span class=\"c1\">#     email = 'john@doe.com'</span>\n<span class=\"c1\">#     role = Role.USER</span>\n</pre>\n<h2>More examples</h2>\n<ul>\n<li><a href=\"EXAMPLES.md\" rel=\"nofollow\">EXAMPLES.md</a></li>\n<li><a href=\"grpclib_example\" rel=\"nofollow\">Grpclib example</a></li>\n</ul>\n<h2>Code generation</h2>\n<p>Code generator implemented as a protoc plugin so you have to install it first:</p>\n<h4>Install protoc (Ubuntu)</h4>\n<pre>sudo apt install protobuf-compiler\n</pre>\n<h4>Install protoc (Mac OS)</h4>\n<pre>brew install protobuf\n</pre>\n<h4>Install protox</h4>\n<pre>python3 -m pip install protox\n</pre>\n<h4>Generate messages</h4>\n<pre>protoc <span class=\"se\">\\</span>\n    --proto_path<span class=\"o\">=</span>protobuf_src <span class=\"se\">\\</span>\n    --protox_out<span class=\"o\">=</span>. <span class=\"se\">\\</span>\n    ./protobuf_src/user.proto\n</pre>\n<h4>Generate grpclib service with all required dependencies</h4>\n<p>The following code generates service <code>ping_pong.proto</code> from the <code>protobuf_src</code> directory into <code>{$PROJECT_ROOT}/app/protobuf</code>.</p>\n<p>The protox plugin supports 3 options:</p>\n<ul>\n<li>--base-package=path/to/protobuf/out</li>\n<li>--grpclib  # generates grpclib services</li>\n<li>--with-dependencies  # generates dependencies for the given protobuf file</li>\n</ul>\n<p>The options to the plugin are passed using the <code>--protox_opt=\"{plugin options here}\"</code> command</p>\n<pre>protoc <span class=\"se\">\\</span>\n    --proto_path<span class=\"o\">=</span>protobuf_src <span class=\"se\">\\</span>\n    --protox_out<span class=\"o\">=</span>. <span class=\"se\">\\</span>\n    --protox_opt<span class=\"o\">=</span><span class=\"s2\">\"--base-package=app/protobuf --grpclib --with-dependencies\"</span> <span class=\"se\">\\</span>\n    ./protobuf_src/ping_pong.proto\n</pre>\n<h2>Core concepts</h2>\n<ul>\n<li>Human-readable python3.6+ generated code with type hinting</li>\n<li>Support protobuf 2 and 3 at the same time</li>\n<li><code>None</code> values instead of zero values in fields for both proto2 and proto3</li>\n<li><code>Message.has_field()</code> in both proto2 and proto3</li>\n<li>Protocols are easy to describe without code generation</li>\n<li>Messages implemented in more pythonic way: to_bytes() instead of SerializeToString()</li>\n<li>Enums are just enums python int enums</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>[x] Messages</li>\n<li>[x] Enums</li>\n<li>[x] Nested messages</li>\n<li>[x] Maps</li>\n<li>[x] Well-known types</li>\n<li>[x] Repeated fields</li>\n<li>[x] Repeated messages</li>\n<li>[x] Repeated enums</li>\n<li>[x] Custom Message.to_python() / from_python() functions</li>\n<li>[ ] Group fields (Deprecated by protobuf)</li>\n</ul>\n<h2>Code generator features</h2>\n<ul>\n<li>[x] Protobuf</li>\n<li>[x] <a href=\"https://github.com/vmagamedov/grpclib/\" rel=\"nofollow\">Grpclib</a></li>\n<li>[ ] <a href=\"https://github.com/grpc/grpc/tree/master/src/python/grpcio\" rel=\"nofollow\">Grpc.io</a></li>\n<li>[x] Custom python package for protobuf out messages</li>\n<li>[x] Compile protobuf file with dependencies</li>\n<li>[x] Names mangling to avoid reserved names collisions</li>\n<li>[x] Recursive messages/enums support</li>\n<li>[x] Field names to_snake_case support</li>\n</ul>\n<h2>Difference with google's protobuf implementation</h2>\n<p>Binary protocol works exactly as google's implementation does.</p>\n<p>The difference is in the way messages behave:</p>\n<ul>\n<li>Fields that were not explicitly set are None rather than zero-values</li>\n<li>Methods like SerializeToString() were changed to more pythonic alternatives like to_bytes() / from_bytes()</li>\n<li>Enums are just python int enums</li>\n</ul>\n<h2>Generated code example</h2>\n<p><a href=\"grpclib_example/app/protobuf/service_grpclib.py\" rel=\"nofollow\">Grpclib service example</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">IntEnum</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">protox</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">protox</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Status</span><span class=\"p\">(</span><span class=\"n\">IntEnum</span><span class=\"p\">):</span>\n        <span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">ADMIN</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"s1\">'User.Status'</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"o\">*</span><span class=\"p\">,</span>\n        <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"s1\">'User.Status'</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"nb\">id</span><span class=\"p\">,</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">email</span><span class=\"p\">,</span>\n            <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"n\">status</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">protox</span><span class=\"o\">.</span><span class=\"n\">define_fields</span><span class=\"p\">(</span>\n    <span class=\"n\">User</span><span class=\"p\">,</span>\n    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">protox</span><span class=\"o\">.</span><span class=\"n\">Int32</span><span class=\"p\">(</span>\n        <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">protox</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span>\n        <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"n\">protox</span><span class=\"o\">.</span><span class=\"n\">EnumField</span><span class=\"p\">(</span>\n        <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">py_enum</span><span class=\"o\">=</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">Status</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">Status</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7061418, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "72a6fab90e2072fa6346ecd7201fa5b2", "sha256": "8de61c9c67b6764142169d8ce331120fa29aba5cbe3e6e7a7c9309ce5740fa68"}, "downloads": -1, "filename": "protox-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "72a6fab90e2072fa6346ecd7201fa5b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35260, "upload_time": "2020-02-05T21:57:14", "upload_time_iso_8601": "2020-02-05T21:57:14.689108Z", "url": "https://files.pythonhosted.org/packages/3f/bf/9ed2d2baeed79bb9083d1d3c50089deb0e155968570b9adf8ab3ebe03ec5/protox-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06fe1386e16112ca624d14f9f05b4823", "sha256": "308f633bf1278f664c3cac5fb32007550059abd8642c593453937cc3ba83c4e0"}, "downloads": -1, "filename": "protox-0.1.0.tar.gz", "has_sig": false, "md5_digest": "06fe1386e16112ca624d14f9f05b4823", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27136, "upload_time": "2020-02-05T21:57:17", "upload_time_iso_8601": "2020-02-05T21:57:17.324933Z", "url": "https://files.pythonhosted.org/packages/2d/7d/889414da6712dee0d98939915ae61861daacb12e518bbd81a0992228f9ca/protox-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "61a701e6394aaead9fafe0c8665624a7", "sha256": "8576514caf54d3d9b96954e94cf0b3612ba2c8ea315a3b14848919b59deb1300"}, "downloads": -1, "filename": "protox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "61a701e6394aaead9fafe0c8665624a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27738, "upload_time": "2020-02-16T13:35:32", "upload_time_iso_8601": "2020-02-16T13:35:32.010735Z", "url": "https://files.pythonhosted.org/packages/21/52/c0dd0935b443c61c95b726263e8c5daba2a92436e12f439114059129b08a/protox-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e5cca0f112235a2b86666e95067cf1e3", "sha256": "f6db7dca459305ece4cf421e867bbb2f3fb8a58fc00fa4bd051bc671d5d34941"}, "downloads": -1, "filename": "protox-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e5cca0f112235a2b86666e95067cf1e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27960, "upload_time": "2020-04-06T09:19:49", "upload_time_iso_8601": "2020-04-06T09:19:49.970588Z", "url": "https://files.pythonhosted.org/packages/8b/c0/62b7b32c87da521afb2aad235c38239d836f5882b377c4c3dc58c0b3a798/protox-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "96cd5cd4fdcdf2191eea8b5581702a7b", "sha256": "d4f0b7f053d9403b73ecc12ea76047e08729f954fe4e3be60b3f50190d02975d"}, "downloads": -1, "filename": "protox-0.1.3.tar.gz", "has_sig": false, "md5_digest": "96cd5cd4fdcdf2191eea8b5581702a7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28229, "upload_time": "2020-04-13T14:57:13", "upload_time_iso_8601": "2020-04-13T14:57:13.838567Z", "url": "https://files.pythonhosted.org/packages/14/74/b73b69d40ea7b581ae24c3d5f0b506ab4e5230b93edf9453e14aabebe38c/protox-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "8252f72c3f2b84ef48e29b5fdbb39d07", "sha256": "5030b7e7011c5b05033bf254c6154198137c2ead8459a19dd5f42b29d1f7cf76"}, "downloads": -1, "filename": "protox-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8252f72c3f2b84ef48e29b5fdbb39d07", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28251, "upload_time": "2020-04-15T21:59:43", "upload_time_iso_8601": "2020-04-15T21:59:43.798878Z", "url": "https://files.pythonhosted.org/packages/ec/e2/af25fb7a59c5156f863103b4c9eddfe6c6ce95c91b9e071e7c95b77a63f3/protox-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "719962b0e6e3c62738f61135491609c5", "sha256": "ee1ccb5cecadf30f4b200368b2dc559ec9300c29d710e0a3e0d47995ddcc2b35"}, "downloads": -1, "filename": "protox-0.1.5.tar.gz", "has_sig": false, "md5_digest": "719962b0e6e3c62738f61135491609c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28236, "upload_time": "2020-04-18T22:58:33", "upload_time_iso_8601": "2020-04-18T22:58:33.547044Z", "url": "https://files.pythonhosted.org/packages/48/8c/90dd6c715b27365cca725778c363fee8c37d6b0c9c9878661be5125bac63/protox-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "f4637709de5a67f7142e1c31a7f35ea4", "sha256": "d9e4d485a0a3eb992f79d079593763b67d2caa83f6e6144fd9156e7a2410fa3f"}, "downloads": -1, "filename": "protox-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f4637709de5a67f7142e1c31a7f35ea4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28394, "upload_time": "2020-04-19T00:20:09", "upload_time_iso_8601": "2020-04-19T00:20:09.000879Z", "url": "https://files.pythonhosted.org/packages/65/02/d378c974e3c22e3679f76a60dcc78c3526cfcb5839aea0d45659ed560575/protox-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "af992f51aff700f0987b5b8a89677aff", "sha256": "998d9f3ce75b46f97c0f75bdc2edf091d2c0fe5601934795e4b57f2926519946"}, "downloads": -1, "filename": "protox-0.1.7.tar.gz", "has_sig": false, "md5_digest": "af992f51aff700f0987b5b8a89677aff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28507, "upload_time": "2020-04-19T18:36:17", "upload_time_iso_8601": "2020-04-19T18:36:17.423637Z", "url": "https://files.pythonhosted.org/packages/05/55/671bf7805213983047cce1cd98efde84ed86dbc89d99455a37559951a3c8/protox-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "da68fa9e852912886db53f61a4174525", "sha256": "d0ea7b6380833c9efa09ece32dee98869629af8a6655e1ef1ca0b6d6e22d77d6"}, "downloads": -1, "filename": "protox-0.1.8.tar.gz", "has_sig": false, "md5_digest": "da68fa9e852912886db53f61a4174525", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28641, "upload_time": "2020-04-20T16:43:41", "upload_time_iso_8601": "2020-04-20T16:43:41.595909Z", "url": "https://files.pythonhosted.org/packages/c7/95/a5a03cbaede94a608534caa12ede90724acf79036f6ffb466f7e3374ff93/protox-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da68fa9e852912886db53f61a4174525", "sha256": "d0ea7b6380833c9efa09ece32dee98869629af8a6655e1ef1ca0b6d6e22d77d6"}, "downloads": -1, "filename": "protox-0.1.8.tar.gz", "has_sig": false, "md5_digest": "da68fa9e852912886db53f61a4174525", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28641, "upload_time": "2020-04-20T16:43:41", "upload_time_iso_8601": "2020-04-20T16:43:41.595909Z", "url": "https://files.pythonhosted.org/packages/c7/95/a5a03cbaede94a608534caa12ede90724acf79036f6ffb466f7e3374ff93/protox-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:25 2020"}