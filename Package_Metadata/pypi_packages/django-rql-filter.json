{"info": {"author": "Nicolas Joyard", "author_email": "joyard.nicolas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License"], "description": "django-rql-filter\n=================\n\n|Build Status| |PyPi version| |codecov|\n\nThis app implements a RQL/RSQL/FIQL filter backend for\n`django-rest-framework <http://www.django-rest-framework.org>`__ and\nenables passing arbitrary conditional expressions to filter entities.\n\nInstallation\n------------\n\n.. code:: sh\n\n    pip install django-rql-filter\n\nUsage\n-----\n\nAdd ``rql_filter`` to your project ``INSTALLED_APPS``.\n\nAdd the ``RQLFilterBackend`` to your viewset ``filter_backends``:\n\n.. code:: python\n\n    from rql_filter.backend import RQLFilterBackend\n\n    class ThingyViewSet(viewsets.ReadOnlyModelViewSet):\n        filter_backends = (\n            ...\n            RQLFilterBackend,\n            ...\n        )\n\nYou may now pass a RQL/RSQL/FIQL query to API URLs using the ``q``\nquerystring parameter:\n\n.. code:: sh\n\n    curl http://my.app/api/thingies/?format=json&q=name==bob;age=gt=30\n\nQuery syntax\n------------\n\nA query is made using a combination of field comparisons. Comparisons\nare composed by a field name, an operator and a value.\n\n+-------------------+----------------------------+-----------------------------+\n| Operator          | Meaning                    | Examples                    |\n+===================+============================+=============================+\n| ``==``            | Equal to                   | ``name==bob``               |\n+-------------------+----------------------------+-----------------------------+\n| ``!=``            | Not equal to               | ``name!=bob``               |\n+-------------------+----------------------------+-----------------------------+\n| ``<`` ``=lt=``    | Less than                  | ``age<30`` ``age=lt=30``    |\n+-------------------+----------------------------+-----------------------------+\n| ``<=`` ``=le=``   | Less than or equal to      | ``age<=30`` ``age=le=30``   |\n+-------------------+----------------------------+-----------------------------+\n| ``>`` ``=gt=``    | Greater than               | ``age>30`` ``age=gt=30``    |\n+-------------------+----------------------------+-----------------------------+\n| ``>=`` ``=ge=``   | Greater than or equal to   | ``age>=30`` ``age=ge=30``   |\n+-------------------+----------------------------+-----------------------------+\n| ``=in=``          | Belongs to set             | ``name=in=(bob,kate)``      |\n+-------------------+----------------------------+-----------------------------+\n| ``=out=``         | Does not belong to set     | ``name=out=(bob,kate)``     |\n+-------------------+----------------------------+-----------------------------+\n\nComparisons can traverse model relations by separating field names with\na double underscore: ``father__name==bob``.\n\nValues must be quoted with single or double quotes when they include\nspecial characters or spaces: ``name==\"bob katz\"``.\n\nComparisons may be combined using logical operators: ``;`` for a logical\nAND, and ``,`` for a logical OR: ``name==\"bob\";age>=30``. AND has\npriority over OR; grouping is available using parentheses:\n``name==\"bob\";(age>=30,age<3)``.\n\n**Note:** RQL/RSQL/FIQL support is still incomplete, it will be enhanced\nover time.\n\nConfiguration\n-------------\n\n``RQL_FILTER_QUERY_PARAM`` sets the querystring parameter name to use;\nit defaults to ``'q'``.\n\nUsing without rest-framework\n----------------------------\n\nYou may use the backend manually outside a rest-framework viewset:\n\n.. code:: python\n\n    from rql_filter.backend import RQLFilterBackend\n\n    # May be reused any number of times\n    backend = RQLFilterBackend()\n\n    # Fake request object\n    class FakeRQLRequest:\n        def __init__(self, q):\n            self.GET = {'q': q}\n\n    qs = Thingy.objects.all()\n    filtered_qs = backend.filter_queryset(\n        FakeRQLRequest('name==bob;age=gt=30'),\n        qs,\n        None\n    )\n\nTesting\n-------\n\nInstall testing dependencies:\n\n.. code:: sh\n\n    pip install -e .[testing]\n\nRun tests:\n\n.. code:: sh\n\n    py.test\n\n.. |Build Status| image:: https://travis-ci.org/njoyard/django-rql-filter.svg?branch=master\n   :target: https://travis-ci.org/njoyard/django-rql-filter\n.. |PyPi version| image:: https://badge.fury.io/py/django-rql-filter.png\n   :target: https://badge.fury.io/py/django-rql-filter\n.. |codecov| image:: https://codecov.io/gh/njoyard/django-rql-filter/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/njoyard/django-rql-filter", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/njoyard/django-rql-filter", "keywords": "django filter drf rest rql rsql fiql", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-rql-filter", "package_url": "https://pypi.org/project/django-rql-filter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-rql-filter/", "project_urls": {"Homepage": "https://github.com/njoyard/django-rql-filter"}, "release_url": "https://pypi.org/project/django-rql-filter/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "A RQL-enabled filter backend for django-rest-framework", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/njoyard/django-rql-filter\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a257423adc98a5c57aea4f9d679c5fcc5343c39c/68747470733a2f2f7472617669732d63692e6f72672f6e6a6f796172642f646a616e676f2d72716c2d66696c7465722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/django-rql-filter\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b300fe8a2f985ad7f60b5e30b02ae8098baeab3/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d72716c2d66696c7465722e706e67\"></a> <a href=\"https://codecov.io/gh/njoyard/django-rql-filter\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3e35c813483acd9463e1f5f1ed7aef5b1ccbeab/68747470733a2f2f636f6465636f762e696f2f67682f6e6a6f796172642f646a616e676f2d72716c2d66696c7465722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>This app implements a RQL/RSQL/FIQL filter backend for\n<a href=\"http://www.django-rest-framework.org\" rel=\"nofollow\">django-rest-framework</a> and\nenables passing arbitrary conditional expressions to filter entities.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-rql-filter\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add <tt>rql_filter</tt> to your project <tt>INSTALLED_APPS</tt>.</p>\n<p>Add the <tt>RQLFilterBackend</tt> to your viewset <tt>filter_backends</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rql_filter.backend</span> <span class=\"kn\">import</span> <span class=\"n\">RQLFilterBackend</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ThingyViewSet</span><span class=\"p\">(</span><span class=\"n\">viewsets</span><span class=\"o\">.</span><span class=\"n\">ReadOnlyModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"n\">filter_backends</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"o\">...</span>\n        <span class=\"n\">RQLFilterBackend</span><span class=\"p\">,</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>You may now pass a RQL/RSQL/FIQL query to API URLs using the <tt>q</tt>\nquerystring parameter:</p>\n<pre>curl http://my.app/api/thingies/?format<span class=\"o\">=</span>json<span class=\"p\">&amp;</span><span class=\"nv\">q</span><span class=\"o\">=</span><span class=\"nv\">name</span><span class=\"o\">==</span>bob<span class=\"p\">;</span><span class=\"nv\">age</span><span class=\"o\">=</span><span class=\"nv\">gt</span><span class=\"o\">=</span><span class=\"m\">30</span>\n</pre>\n</div>\n<div id=\"query-syntax\">\n<h2>Query syntax</h2>\n<p>A query is made using a combination of field comparisons. Comparisons\nare composed by a field name, an operator and a value.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Operator</th>\n<th>Meaning</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>==</tt></td>\n<td>Equal to</td>\n<td><tt><span class=\"pre\">name==bob</span></tt></td>\n</tr>\n<tr><td><tt>!=</tt></td>\n<td>Not equal to</td>\n<td><tt><span class=\"pre\">name!=bob</span></tt></td>\n</tr>\n<tr><td><tt>&lt;</tt> <tt>=lt=</tt></td>\n<td>Less than</td>\n<td><tt>age&lt;30</tt> <tt>age=lt=30</tt></td>\n</tr>\n<tr><td><tt>&lt;=</tt> <tt>=le=</tt></td>\n<td>Less than or equal to</td>\n<td><tt><span class=\"pre\">age&lt;=30</span></tt> <tt>age=le=30</tt></td>\n</tr>\n<tr><td><tt>&gt;</tt> <tt>=gt=</tt></td>\n<td>Greater than</td>\n<td><tt>age&gt;30</tt> <tt>age=gt=30</tt></td>\n</tr>\n<tr><td><tt>&gt;=</tt> <tt>=ge=</tt></td>\n<td>Greater than or equal to</td>\n<td><tt><span class=\"pre\">age&gt;=30</span></tt> <tt>age=ge=30</tt></td>\n</tr>\n<tr><td><tt>=in=</tt></td>\n<td>Belongs to set</td>\n<td><tt><span class=\"pre\">name=in=(bob,kate)</span></tt></td>\n</tr>\n<tr><td><tt>=out=</tt></td>\n<td>Does not belong to set</td>\n<td><tt><span class=\"pre\">name=out=(bob,kate)</span></tt></td>\n</tr>\n</tbody>\n</table>\n<p>Comparisons can traverse model relations by separating field names with\na double underscore: <tt><span class=\"pre\">father__name==bob</span></tt>.</p>\n<p>Values must be quoted with single or double quotes when they include\nspecial characters or spaces: <tt><span class=\"pre\">name==\"bob</span> katz\"</tt>.</p>\n<p>Comparisons may be combined using logical operators: <tt>;</tt> for a logical\nAND, and <tt>,</tt> for a logical OR: <tt><span class=\"pre\">name==\"bob\";age&gt;=30</span></tt>. AND has\npriority over OR; grouping is available using parentheses:\n<tt><span class=\"pre\">name==\"bob\";(age&gt;=30,age&lt;3)</span></tt>.</p>\n<p><strong>Note:</strong> RQL/RSQL/FIQL support is still incomplete, it will be enhanced\nover time.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p><tt>RQL_FILTER_QUERY_PARAM</tt> sets the querystring parameter name to use;\nit defaults to <tt>'q'</tt>.</p>\n</div>\n<div id=\"using-without-rest-framework\">\n<h2>Using without rest-framework</h2>\n<p>You may use the backend manually outside a rest-framework viewset:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rql_filter.backend</span> <span class=\"kn\">import</span> <span class=\"n\">RQLFilterBackend</span>\n\n<span class=\"c1\"># May be reused any number of times</span>\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">RQLFilterBackend</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Fake request object</span>\n<span class=\"k\">class</span> <span class=\"nc\">FakeRQLRequest</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">GET</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'q'</span><span class=\"p\">:</span> <span class=\"n\">q</span><span class=\"p\">}</span>\n\n<span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">Thingy</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"n\">filtered_qs</span> <span class=\"o\">=</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">filter_queryset</span><span class=\"p\">(</span>\n    <span class=\"n\">FakeRQLRequest</span><span class=\"p\">(</span><span class=\"s1\">'name==bob;age=gt=30'</span><span class=\"p\">),</span>\n    <span class=\"n\">qs</span><span class=\"p\">,</span>\n    <span class=\"kc\">None</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Install testing dependencies:</p>\n<pre>pip install -e .<span class=\"o\">[</span>testing<span class=\"o\">]</span>\n</pre>\n<p>Run tests:</p>\n<pre>py.test\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2266545, "releases": {"0.0.0": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "b267ce6566838ad229c0f9066bbd5e40", "sha256": "927e4eaa9c8dd61544bb0e25ee419bf0e926f3ed51c4f1b41d565f960a429954"}, "downloads": -1, "filename": "django-rql-filter-0.1.0.tar.gz", "has_sig": true, "md5_digest": "b267ce6566838ad229c0f9066bbd5e40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2862, "upload_time": "2016-08-05T11:23:48", "upload_time_iso_8601": "2016-08-05T11:23:48.881146Z", "url": "https://files.pythonhosted.org/packages/ff/5d/ec9c2e8eed76756727c84e60a5c9e765f2ef1a475afd0b12e0aee048571f/django-rql-filter-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "15616fbdba6c99d9ad5b2561b08d946b", "sha256": "0910d3824871e250075350e39e65eda7c8e39e5e5ae300364527e36ff00af6c0"}, "downloads": -1, "filename": "django-rql-filter-0.1.1.tar.gz", "has_sig": true, "md5_digest": "15616fbdba6c99d9ad5b2561b08d946b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3447, "upload_time": "2016-08-06T08:13:00", "upload_time_iso_8601": "2016-08-06T08:13:00.049829Z", "url": "https://files.pythonhosted.org/packages/5c/e9/87f9383b0d89bd70955716664bc54dd63ce783edb5754f7ccba5549cb1cb/django-rql-filter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3f1165564f531044c69aaeff865e4121", "sha256": "e3a5fc173de015c3720f79d734603a2d4c34fe8cccbf9507602b5fc32531fa2d"}, "downloads": -1, "filename": "django-rql-filter-0.1.2.tar.gz", "has_sig": true, "md5_digest": "3f1165564f531044c69aaeff865e4121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3454, "upload_time": "2016-08-07T10:25:18", "upload_time_iso_8601": "2016-08-07T10:25:18.067291Z", "url": "https://files.pythonhosted.org/packages/11/a4/ad289b459bb868ac94df404be82b583855aea55bcc06196876448d2986b9/django-rql-filter-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2060cb2e86444ed9b1531500d704c6a3", "sha256": "e8d7f6a67066feea6733a51151e92a480aeb7166fbb6ece5167c014c4f9fa688"}, "downloads": -1, "filename": "django-rql-filter-0.1.3.tar.gz", "has_sig": true, "md5_digest": "2060cb2e86444ed9b1531500d704c6a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5400, "upload_time": "2016-08-07T10:50:14", "upload_time_iso_8601": "2016-08-07T10:50:14.289981Z", "url": "https://files.pythonhosted.org/packages/b2/aa/f1f6bfbedba0d3e4c9a71e578201d0fa23162fc77d41eb3ab92f9bd86dba/django-rql-filter-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2060cb2e86444ed9b1531500d704c6a3", "sha256": "e8d7f6a67066feea6733a51151e92a480aeb7166fbb6ece5167c014c4f9fa688"}, "downloads": -1, "filename": "django-rql-filter-0.1.3.tar.gz", "has_sig": true, "md5_digest": "2060cb2e86444ed9b1531500d704c6a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5400, "upload_time": "2016-08-07T10:50:14", "upload_time_iso_8601": "2016-08-07T10:50:14.289981Z", "url": "https://files.pythonhosted.org/packages/b2/aa/f1f6bfbedba0d3e4c9a71e578201d0fa23162fc77d41eb3ab92f9bd86dba/django-rql-filter-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:53 2020"}