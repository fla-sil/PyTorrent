{"info": {"author": "Andy Goldschmidt", "author_email": "andygold@uw.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": ".. image:: https://readthedocs.org/projects/dmdlab/badge/?version=latest\n   :target: https://dmdlab.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n  \n.. image:: https://img.shields.io/badge/License-MIT-blue.svg\n   :target: https://lbesson.mit-license.org/\n   :alt: MIT License\n \nDynamic mode decomposition (DMD)is a tool for analyzing the dynamics of nonlinear systems.\n\nThis is an experimental DMD codebase for research purposes.\n\nAlternatively, check out `PyDMD <https://mathlab.github.io/PyDMD/>`_, a professionally maintained open source DMD\ncodebase for Python.\n\nInstallation:\n\n.. code-block:: python\n\n    pip install dmdlab\n\nUsage:\n\n.. code-block:: python\n\n    from dmdlab import DMD, plot_eigs\n    import numpy as np\n    from scipy.linalg import logm\n\n    # Generate toy data\n    ts = np.linspace(0,6,50)\n\n    theta = 1/10\n    A_dst = np.array([[np.cos(theta), -np.sin(theta)],\n                      [np.sin(theta), np.cos(theta)]])\n    A_cts = logm(A_dst)/(ts[1]-ts[0])\n\n    x0 = np.array([1,0])\n    X = np.vstack([expm(A_cts*ti)@x0 for ti in ts]).T\n\n    # Fit model\n    model = DMD.from_full(X, ts)\n\n    # Print the eigenvalue phases\n    print(np.angle(model.eigs))\n\n    >>> [0.1, -0.1]\n\n\nFor a technical reference, check out the `DMD book <http://www.dmdbook.com/>`_.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dmdlab", "package_url": "https://pypi.org/project/dmdlab/", "platform": "", "project_url": "https://pypi.org/project/dmdlab/", "project_urls": null, "release_url": "https://pypi.org/project/dmdlab/0.1.1/", "requires_dist": ["numpy (>=1.18.3,<2.0.0)", "scipy (>=1.4.1,<2.0.0)", "matplotlib (>=3.2.1,<4.0.0)", "sphinx (>=3.0.2,<4.0.0); extra == \"docs\"", "nbsphinx (>=0.6.1,<0.7.0); extra == \"docs\"", "jupyter_client (>=6.1.3,<7.0.0)", "ipykernel (>=5.2.1,<6.0.0)", "pytest (>=5.2,<6.0); extra == \"test\""], "requires_python": ">=3.7,<4.0", "summary": "Dynamic mode decompositon in python.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://dmdlab.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1d59bdbeb78e6bb833c6fedd53f0881d6ffcfd2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646d646c61622f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://lbesson.mit-license.org/\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a>\n<p>Dynamic mode decomposition (DMD)is a tool for analyzing the dynamics of nonlinear systems.</p>\n<p>This is an experimental DMD codebase for research purposes.</p>\n<p>Alternatively, check out <a href=\"https://mathlab.github.io/PyDMD/\" rel=\"nofollow\">PyDMD</a>, a professionally maintained open source DMD\ncodebase for Python.</p>\n<p>Installation:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dmdlab</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dmdlab</span> <span class=\"kn\">import</span> <span class=\"n\">DMD</span><span class=\"p\">,</span> <span class=\"n\">plot_eigs</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy.linalg</span> <span class=\"kn\">import</span> <span class=\"n\">logm</span>\n\n<span class=\"c1\"># Generate toy data</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">10</span>\n<span class=\"n\">A_dst</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)],</span>\n                  <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)]])</span>\n<span class=\"n\">A_cts</span> <span class=\"o\">=</span> <span class=\"n\">logm</span><span class=\"p\">(</span><span class=\"n\">A_dst</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"n\">ts</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">([</span><span class=\"n\">expm</span><span class=\"p\">(</span><span class=\"n\">A_cts</span><span class=\"o\">*</span><span class=\"n\">ti</span><span class=\"p\">)</span><span class=\"nd\">@x0</span> <span class=\"k\">for</span> <span class=\"n\">ti</span> <span class=\"ow\">in</span> <span class=\"n\">ts</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">T</span>\n\n<span class=\"c1\"># Fit model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">DMD</span><span class=\"o\">.</span><span class=\"n\">from_full</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print the eigenvalue phases</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">angle</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">eigs</span><span class=\"p\">))</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.1</span><span class=\"p\">]</span>\n</pre>\n<p>For a technical reference, check out the <a href=\"http://www.dmdbook.com/\" rel=\"nofollow\">DMD book</a>.</p>\n\n          </div>"}, "last_serial": 7116104, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8c93101695ef8f2252d6a0a46c2b4aa1", "sha256": "6a973fd009e38a1e24bd9c6e51f4c4615986e3c23dadca2f1a4c4f24c3cf579a"}, "downloads": -1, "filename": "dmdlab-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c93101695ef8f2252d6a0a46c2b4aa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7628, "upload_time": "2020-04-27T23:11:51", "upload_time_iso_8601": "2020-04-27T23:11:51.114935Z", "url": "https://files.pythonhosted.org/packages/00/cd/aa730d9f27b0f94a13e11da114b5e4d16b1a23ead51eb349e66bad5b515d/dmdlab-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb9fa9410f0b6595ebad52add7fe8216", "sha256": "bcf5b354064e726ea8f2f932035de3de0b0b0f27afff424abf5dd441bcc2505b"}, "downloads": -1, "filename": "dmdlab-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eb9fa9410f0b6595ebad52add7fe8216", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7278, "upload_time": "2020-04-27T23:11:53", "upload_time_iso_8601": "2020-04-27T23:11:53.004751Z", "url": "https://files.pythonhosted.org/packages/b3/fa/c776e7cc0901feb722434145cd37f55c66005dbfb04d6e0f5b69b8ebc19a/dmdlab-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "afa86ba56e5d2f0f2a640f384915fec0", "sha256": "f39934ba350284aa2850e90922debcba6eca62c30526fd6af5e54800c0167875"}, "downloads": -1, "filename": "dmdlab-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "afa86ba56e5d2f0f2a640f384915fec0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7967, "upload_time": "2020-04-28T00:06:20", "upload_time_iso_8601": "2020-04-28T00:06:20.702968Z", "url": "https://files.pythonhosted.org/packages/87/e4/53b981a7c1795143234f117cd10dcc031912bca2023baae4cb392988d8d0/dmdlab-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a69d973cd3059a73b7fdc45a0fac90b", "sha256": "8cecabdb4189942c3410094557b6b3588924fc4b9313b5f291c739e154168c75"}, "downloads": -1, "filename": "dmdlab-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a69d973cd3059a73b7fdc45a0fac90b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7975, "upload_time": "2020-04-28T00:06:22", "upload_time_iso_8601": "2020-04-28T00:06:22.329817Z", "url": "https://files.pythonhosted.org/packages/cd/9d/fbd7c439bdd2033f87e78c917ff9e13585a72f7d9423bf764eff9e28674c/dmdlab-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afa86ba56e5d2f0f2a640f384915fec0", "sha256": "f39934ba350284aa2850e90922debcba6eca62c30526fd6af5e54800c0167875"}, "downloads": -1, "filename": "dmdlab-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "afa86ba56e5d2f0f2a640f384915fec0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7967, "upload_time": "2020-04-28T00:06:20", "upload_time_iso_8601": "2020-04-28T00:06:20.702968Z", "url": "https://files.pythonhosted.org/packages/87/e4/53b981a7c1795143234f117cd10dcc031912bca2023baae4cb392988d8d0/dmdlab-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a69d973cd3059a73b7fdc45a0fac90b", "sha256": "8cecabdb4189942c3410094557b6b3588924fc4b9313b5f291c739e154168c75"}, "downloads": -1, "filename": "dmdlab-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a69d973cd3059a73b7fdc45a0fac90b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7975, "upload_time": "2020-04-28T00:06:22", "upload_time_iso_8601": "2020-04-28T00:06:22.329817Z", "url": "https://files.pythonhosted.org/packages/cd/9d/fbd7c439bdd2033f87e78c917ff9e13585a72f7d9423bf764eff9e28674c/dmdlab-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:15 2020"}