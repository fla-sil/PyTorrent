{"info": {"author": "John Readey", "author_email": "jreadey@hdfgroup.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "h5serv - REST-based service for HDF5 data\n===========================================\n\n.. image:: https://travis-ci.org/HDFGroup/h5serv.svg?branch=develop\n    :target: https://travis-ci.org/HDFGroup/h5serv\n\nIntroduction\n------------\nh5serv is a web service that implements a REST-based web service for HDF5 data stores\nas described in the paper: http://hdfgroup.org/pubs/papers/RESTful_HDF5.pdf.\n\nWebsites\n--------\n\n* Main website: http://www.hdfgroup.org\n* Source code: https://github.com/HDFGroup/h5serv\n* Mailing list: hdf-forum@lists.hdfgroup.org <hdf-forum@lists.hdfgroup.org>\n* Documentation: http://h5serv.readthedocs.org\n\n\nQuick Install\n-------------\n\nInstall Python (2.7 or later) and the following packages:\n\n* NumPy 1.10.4 or later\n* h5py 2.5 or later\n* tornado 4.0.2 or later\n* watchdog 0.8.3 or later\n* requests 2.3 or later (for client tests)\n\nClone the hdf5-json project: ``git clone https://github.com/HDFGroup/hdf5-json.git`` .\nNext, cd to the hdf5-json folder and run: ``python setup.py install``.\n\nClone this project: ``git clone https://github.com/HDFGroup/h5serv.git``.\n\nRunning the Server\n------------------\n\nStart the server:  ``cd h5serv/server; python app.py``.\n\nBy default the server will listen on port 5000.  The port and and several other defaults can be modified\nwith command line options.  For example to use port 8888 run:  ``python app.py --port=8888``.\n\nSee test cases for examples of interacting with the server.  Run: ``python testall.py`` from the test directory\nto run through the entire test suite.\n\nAlso, the interface (at least as far as read requests) can be explored in a browser. Go to: http://127.0.0.1:5000/.\nA JSON browser plugin will be helpful for formatting responses from the server to be more human readable.\n\nSee h5serv/docs/Installation.rst for step by step install instructions.\n\nRunning with Docker\n-------------------\n\nTo run h5serv as a docker container you just need to install Docker (no Python, h5py, etc. needed).\n\n* Install docker: https://docs.docker.com/installation/#installation.\n* Run the h5serv image: ``docker run -p 5000:5000 -d -v <mydata>:/data hdfgroup/h5serv`` where <mydata> is the folder path that contains any HDF5 files you want to made available through the h5serv REST API.  Since requests to the server can modify (or delete!) content, you probably want to create a new folder and copy files to it.\n* Go to http://192.168.99.100:5000/ in your browser to verify the server is up and running (replace 192.168.99.100 with the IP address of the system or VM that is running the container).\n\nWriting Client Applications\n----------------------------\nAs a REST service, clients be developed using almost any programming language.  The\ntest programs under: h5serv/test/integ illustrate some of the methods for peforming\ndifferent operations using Python.\n\nThe related project: https://github.com/HDFGroup/h5pyd provides a (mostly) h5py-compatible\ninterface to the server for Python clients.\n\n\nUninstalling\n------------\n\nh5serv does not modify anything in the system outside the directory where it was\ninstalled, so just remove the install directory and all contents to uninstall.\n\n\nReporting bugs (and general feedback)\n-------------------------------------\n\nCreate new issues at http://github.com/HDFGroup/h5serv/issues for any problems you find.\n\nFor general questions/feedback, please use the list (hdf-forum@lists.hdfgroup.org).", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HDFGroup/h5serv", "keywords": "json hdf5 numpy array data", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "h5serv", "package_url": "https://pypi.org/project/h5serv/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/h5serv/", "project_urls": {"Homepage": "https://github.com/HDFGroup/h5serv"}, "release_url": "https://pypi.org/project/h5serv/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "HDF REST Server", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/HDFGroup/h5serv\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/HDFGroup/h5serv.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/199c7e794d3f0978f170ad20020e0586309db8ae/68747470733a2f2f7472617669732d63692e6f72672f48444647726f75702f6835736572762e7376673f6272616e63683d646576656c6f70\"></a>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>h5serv is a web service that implements a REST-based web service for HDF5 data stores\nas described in the paper: <a href=\"http://hdfgroup.org/pubs/papers/RESTful_HDF5.pdf\" rel=\"nofollow\">http://hdfgroup.org/pubs/papers/RESTful_HDF5.pdf</a>.</p>\n</div>\n<div id=\"websites\">\n<h2>Websites</h2>\n<ul>\n<li>Main website: <a href=\"http://www.hdfgroup.org\" rel=\"nofollow\">http://www.hdfgroup.org</a></li>\n<li>Source code: <a href=\"https://github.com/HDFGroup/h5serv\" rel=\"nofollow\">https://github.com/HDFGroup/h5serv</a></li>\n<li>Mailing list: <a href=\"mailto:hdf-forum%40lists.hdfgroup.org\">hdf-forum<span>@</span>lists<span>.</span>hdfgroup<span>.</span>org</a> &lt;<a href=\"mailto:hdf-forum%40lists.hdfgroup.org\">hdf-forum<span>@</span>lists<span>.</span>hdfgroup<span>.</span>org</a>&gt;</li>\n<li>Documentation: <a href=\"http://h5serv.readthedocs.org\" rel=\"nofollow\">http://h5serv.readthedocs.org</a></li>\n</ul>\n</div>\n<div id=\"quick-install\">\n<h2>Quick Install</h2>\n<p>Install Python (2.7 or later) and the following packages:</p>\n<ul>\n<li>NumPy 1.10.4 or later</li>\n<li>h5py 2.5 or later</li>\n<li>tornado 4.0.2 or later</li>\n<li>watchdog 0.8.3 or later</li>\n<li>requests 2.3 or later (for client tests)</li>\n</ul>\n<p>Clone the hdf5-json project: <tt>git clone <span class=\"pre\">https://github.com/HDFGroup/hdf5-json.git</span></tt> .\nNext, cd to the hdf5-json folder and run: <tt>python setup.py install</tt>.</p>\n<p>Clone this project: <tt>git clone <span class=\"pre\">https://github.com/HDFGroup/h5serv.git</span></tt>.</p>\n</div>\n<div id=\"running-the-server\">\n<h2>Running the Server</h2>\n<p>Start the server:  <tt>cd h5serv/server; python app.py</tt>.</p>\n<p>By default the server will listen on port 5000.  The port and and several other defaults can be modified\nwith command line options.  For example to use port 8888 run:  <tt>python app.py <span class=\"pre\">--port=8888</span></tt>.</p>\n<p>See test cases for examples of interacting with the server.  Run: <tt>python testall.py</tt> from the test directory\nto run through the entire test suite.</p>\n<p>Also, the interface (at least as far as read requests) can be explored in a browser. Go to: <a href=\"http://127.0.0.1:5000/\" rel=\"nofollow\">http://127.0.0.1:5000/</a>.\nA JSON browser plugin will be helpful for formatting responses from the server to be more human readable.</p>\n<p>See h5serv/docs/Installation.rst for step by step install instructions.</p>\n</div>\n<div id=\"running-with-docker\">\n<h2>Running with Docker</h2>\n<p>To run h5serv as a docker container you just need to install Docker (no Python, h5py, etc. needed).</p>\n<ul>\n<li>Install docker: <a href=\"https://docs.docker.com/installation/#installation\" rel=\"nofollow\">https://docs.docker.com/installation/#installation</a>.</li>\n<li>Run the h5serv image: <tt>docker run <span class=\"pre\">-p</span> 5000:5000 <span class=\"pre\">-d</span> <span class=\"pre\">-v</span> <span class=\"pre\">&lt;mydata&gt;:/data</span> hdfgroup/h5serv</tt> where &lt;mydata&gt; is the folder path that contains any HDF5 files you want to made available through the h5serv REST API.  Since requests to the server can modify (or delete!) content, you probably want to create a new folder and copy files to it.</li>\n<li>Go to <a href=\"http://192.168.99.100:5000/\" rel=\"nofollow\">http://192.168.99.100:5000/</a> in your browser to verify the server is up and running (replace 192.168.99.100 with the IP address of the system or VM that is running the container).</li>\n</ul>\n</div>\n<div id=\"writing-client-applications\">\n<h2>Writing Client Applications</h2>\n<p>As a REST service, clients be developed using almost any programming language.  The\ntest programs under: h5serv/test/integ illustrate some of the methods for peforming\ndifferent operations using Python.</p>\n<p>The related project: <a href=\"https://github.com/HDFGroup/h5pyd\" rel=\"nofollow\">https://github.com/HDFGroup/h5pyd</a> provides a (mostly) h5py-compatible\ninterface to the server for Python clients.</p>\n</div>\n<div id=\"uninstalling\">\n<h2>Uninstalling</h2>\n<p>h5serv does not modify anything in the system outside the directory where it was\ninstalled, so just remove the install directory and all contents to uninstall.</p>\n</div>\n<div id=\"reporting-bugs-and-general-feedback\">\n<h2>Reporting bugs (and general feedback)</h2>\n<p>Create new issues at <a href=\"http://github.com/HDFGroup/h5serv/issues\" rel=\"nofollow\">http://github.com/HDFGroup/h5serv/issues</a> for any problems you find.</p>\n<p>For general questions/feedback, please use the list (<a href=\"mailto:hdf-forum%40lists.hdfgroup.org\">hdf-forum<span>@</span>lists<span>.</span>hdfgroup<span>.</span>org</a>).</p>\n</div>\n\n          </div>"}, "last_serial": 2477527, "releases": {"1.2.0": []}, "urls": [], "timestamp": "Fri May  8 00:52:54 2020"}