{"info": {"author": "Dustin Kleckner", "author_email": "dkleckner@ucmerced.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# simple_pyspin\nA Pythonic class-based wrapper for the FLIR PySpin Library.\n\nMore documentation can be found on [Github Pages](https://klecknerlab.github.io/simple_pyspin/), and the source can be found on [Github](https://github.com/klecknerlab/simple_pyspin).\n\n# Why?\nWhy does this even exist, as the PySpin module already exists?  Because it's a pain to use, and difficult to wrap your head around basic operations.  For example, on some camera manually setting frame rate requires accessing methods by finding nodes, which is quite complicated.  This library makes it incredibly simple, and can also auto-document all the features of your *specific* cameras for easy reference.  \n\n# Installation\n1. If you don't already have them, I would recommend installing Numpy and the Python Imaging Library.  The easiest way to do this is to install a scientific Python distribution like [Anaconda](https://www.anaconda.com/distribution/).\n2. [Install Spinnaker and PySpin from FLIR.](https://www.flir.com/products/spinnaker-sdk/)  \n    - You will likely need to follow several manual steps after the Spinnaker installation to get PySpin ([Mac Instructions](https://www.flir.com/support-center/iis/machine-vision/application-note/getting-started-with-spinnaker-sdk-on-macos/,))\n3. Install simple_pyspin module:\n    - Install from PyPi: `pip install simple-pyspin`.\n    - Download source from GitHub and use `setup.py`.\n\n# Usage\nSee the examples directory of the source for these examples and more.\n\n## Basic Usage\n```python\n# dead_simple.py\n\nfrom simple_pyspin import Camera\n\nwith Camera() as cam: # Acquire and initialize Camera\n    cam.start() # Start recording\n    imgs = [cam.get_array() for n in range(10)] # Get 10 frames\n    cam.stop() # Stop recording\n\nprint(imgs[0].shape, imgs[0].dtype) # Each image is a numpy array!\n```\nNote that as long as you open the camera using a `with` clause, you don't need to worry about initialization or cleanup of the camera -- the module handles this for you!\n\nEquivalently, you can do this manually; the following code is functionally identical to the above:\n```python\nfrom simple_pyspin import Camera\n\ncam = Camera() # Acquire Camera\ncam.init() # Initialize camera\n\ncam.start() # Start recording\nimgs = [cam.get_array() for n in range(10)] # Get 10 frames\ncam.stop() # Stop recording\n\ncam.close() # You should explicitly clean up\n\nprint(imgs[0].shape, imgs[0].dtype) # Each image is a numpy array!\n```\n\n## Changing Camera Settings\nHere is a more complicated example, which manual changes a number of settings, and saves a number of images using PIL.\n```python\n# manual_setup.py\n\nfrom simple_pyspin import Camera\nfrom PIL import Image\nimport os\n\nwith Camera() as cam: # Initialize Camera\n    # Set the area of interest (AOI) to the middle half\n    cam.Width = cam.SensorWidth // 2\n    cam.Height = cam.SensorHeight // 2\n    cam.OffsetX = cam.SensorWidth // 4\n    cam.OffsetY = cam.SensorHeight // 4\n\n    # If this is a color camera, get the image in RGB format.\n    if 'Bayer' in cam.PixelFormat:\n        cam.PixelFormat = \"RGB8\"\n\n    # To change the frame rate, we need to enable manual control\n    cam.AcquisitionFrameRateAuto = 'Off'\n    cam.AcquisitionFrameRateEnabled = True\n    cam.AcquisitionFrameRate = 20\n\n    # To control the exposure settings, we need to turn off auto\n    cam.GainAuto = 'Off'\n    # Set the gain to 20 dB or the maximum of the camera.\n    gain = min(20, cam.get_info('Gain')['max'])\n    print(\"Setting gain to %.1f dB\" % gain)\n    cam.Gain = gain\n    cam.ExposureAuto = 'Off'\n    cam.ExposureTime = 10000 # microseconds\n\n    # If we want an easily viewable image, turn on gamma correction.\n    # NOTE: for scientific image processing, you probably want to\n    #    _disable_ gamma correction!\n    try:\n        cam.GammaEnabled = True\n        cam.Gamma = 2.2\n    except:\n        print(\"Failed to change Gamma correction (not avaiable on some cameras).\")\n\n    cam.start() # Start recording\n    imgs = [cam.get_array() for n in range(10)] # Get 10 frames\n    cam.stop() # Stop recording\n\n# Make a directory to save some images\noutput_dir = 'test_images'\nif not os.path.exists(output_dir):\n    os.makedirs(output_dir)\n\nprint(\"Saving images to: %s\" % output_dir)\n\n# Save them\n# NOTE: images may be very dark or bright, depending on the camera lens and\n#   room conditions!\nfor n, img in enumerate(imgs):\n    Image.fromarray(img).save(os.path.join(output_dir, '%08d.png' % n))\n```\n\n# License\n\nCopyright 2019 Dustin Kleckner\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klecknerlab/simple_pyspin", "keywords": "", "license": "Apache 2.0 (http://www.apache.org/licenses/LICENSE-2.0)", "maintainer": "", "maintainer_email": "", "name": "simple-pyspin", "package_url": "https://pypi.org/project/simple-pyspin/", "platform": "", "project_url": "https://pypi.org/project/simple-pyspin/", "project_urls": {"Homepage": "https://github.com/klecknerlab/simple_pyspin"}, "release_url": "https://pypi.org/project/simple-pyspin/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "An easy-to-use Pythonic wrapper for the FLIR PySpin Library.  Developed by the Kleckner Lab at UC Merced.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>simple_pyspin</h1>\n<p>A Pythonic class-based wrapper for the FLIR PySpin Library.</p>\n<p>More documentation can be found on <a href=\"https://klecknerlab.github.io/simple_pyspin/\" rel=\"nofollow\">Github Pages</a>, and the source can be found on <a href=\"https://github.com/klecknerlab/simple_pyspin\" rel=\"nofollow\">Github</a>.</p>\n<h1>Why?</h1>\n<p>Why does this even exist, as the PySpin module already exists?  Because it's a pain to use, and difficult to wrap your head around basic operations.  For example, on some camera manually setting frame rate requires accessing methods by finding nodes, which is quite complicated.  This library makes it incredibly simple, and can also auto-document all the features of your <em>specific</em> cameras for easy reference.</p>\n<h1>Installation</h1>\n<ol>\n<li>If you don't already have them, I would recommend installing Numpy and the Python Imaging Library.  The easiest way to do this is to install a scientific Python distribution like <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">Anaconda</a>.</li>\n<li><a href=\"https://www.flir.com/products/spinnaker-sdk/\" rel=\"nofollow\">Install Spinnaker and PySpin from FLIR.</a>\n<ul>\n<li>You will likely need to follow several manual steps after the Spinnaker installation to get PySpin (<a href=\"https://www.flir.com/support-center/iis/machine-vision/application-note/getting-started-with-spinnaker-sdk-on-macos/,\" rel=\"nofollow\">Mac Instructions</a>)</li>\n</ul>\n</li>\n<li>Install simple_pyspin module:\n<ul>\n<li>Install from PyPi: <code>pip install simple-pyspin</code>.</li>\n<li>Download source from GitHub and use <code>setup.py</code>.</li>\n</ul>\n</li>\n</ol>\n<h1>Usage</h1>\n<p>See the examples directory of the source for these examples and more.</p>\n<h2>Basic Usage</h2>\n<pre><span class=\"c1\"># dead_simple.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">simple_pyspin</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Camera</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cam</span><span class=\"p\">:</span> <span class=\"c1\"># Acquire and initialize Camera</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span> <span class=\"c1\"># Start recording</span>\n    <span class=\"n\">imgs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">get_array</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span> <span class=\"c1\"># Get 10 frames</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span> <span class=\"c1\"># Stop recording</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span> <span class=\"c1\"># Each image is a numpy array!</span>\n</pre>\n<p>Note that as long as you open the camera using a <code>with</code> clause, you don't need to worry about initialization or cleanup of the camera -- the module handles this for you!</p>\n<p>Equivalently, you can do this manually; the following code is functionally identical to the above:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_pyspin</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"n\">cam</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">()</span> <span class=\"c1\"># Acquire Camera</span>\n<span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span> <span class=\"c1\"># Initialize camera</span>\n\n<span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span> <span class=\"c1\"># Start recording</span>\n<span class=\"n\">imgs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">get_array</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span> <span class=\"c1\"># Get 10 frames</span>\n<span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span> <span class=\"c1\"># Stop recording</span>\n\n<span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span> <span class=\"c1\"># You should explicitly clean up</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span> <span class=\"c1\"># Each image is a numpy array!</span>\n</pre>\n<h2>Changing Camera Settings</h2>\n<p>Here is a more complicated example, which manual changes a number of settings, and saves a number of images using PIL.</p>\n<pre><span class=\"c1\"># manual_setup.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">simple_pyspin</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Camera</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cam</span><span class=\"p\">:</span> <span class=\"c1\"># Initialize Camera</span>\n    <span class=\"c1\"># Set the area of interest (AOI) to the middle half</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">Width</span> <span class=\"o\">=</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">SensorWidth</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">Height</span> <span class=\"o\">=</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">SensorHeight</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">OffsetX</span> <span class=\"o\">=</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">SensorWidth</span> <span class=\"o\">//</span> <span class=\"mi\">4</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">OffsetY</span> <span class=\"o\">=</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">SensorHeight</span> <span class=\"o\">//</span> <span class=\"mi\">4</span>\n\n    <span class=\"c1\"># If this is a color camera, get the image in RGB format.</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'Bayer'</span> <span class=\"ow\">in</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">PixelFormat</span><span class=\"p\">:</span>\n        <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">PixelFormat</span> <span class=\"o\">=</span> <span class=\"s2\">\"RGB8\"</span>\n\n    <span class=\"c1\"># To change the frame rate, we need to enable manual control</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">AcquisitionFrameRateAuto</span> <span class=\"o\">=</span> <span class=\"s1\">'Off'</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">AcquisitionFrameRateEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">AcquisitionFrameRate</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n\n    <span class=\"c1\"># To control the exposure settings, we need to turn off auto</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">GainAuto</span> <span class=\"o\">=</span> <span class=\"s1\">'Off'</span>\n    <span class=\"c1\"># Set the gain to 20 dB or the maximum of the camera.</span>\n    <span class=\"n\">gain</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">get_info</span><span class=\"p\">(</span><span class=\"s1\">'Gain'</span><span class=\"p\">)[</span><span class=\"s1\">'max'</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Setting gain to </span><span class=\"si\">%.1f</span><span class=\"s2\"> dB\"</span> <span class=\"o\">%</span> <span class=\"n\">gain</span><span class=\"p\">)</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">Gain</span> <span class=\"o\">=</span> <span class=\"n\">gain</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">ExposureAuto</span> <span class=\"o\">=</span> <span class=\"s1\">'Off'</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">ExposureTime</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span> <span class=\"c1\"># microseconds</span>\n\n    <span class=\"c1\"># If we want an easily viewable image, turn on gamma correction.</span>\n    <span class=\"c1\"># NOTE: for scientific image processing, you probably want to</span>\n    <span class=\"c1\">#    _disable_ gamma correction!</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">GammaEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">Gamma</span> <span class=\"o\">=</span> <span class=\"mf\">2.2</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Failed to change Gamma correction (not avaiable on some cameras).\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span> <span class=\"c1\"># Start recording</span>\n    <span class=\"n\">imgs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">get_array</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span> <span class=\"c1\"># Get 10 frames</span>\n    <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span> <span class=\"c1\"># Stop recording</span>\n\n<span class=\"c1\"># Make a directory to save some images</span>\n<span class=\"n\">output_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'test_images'</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">):</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Saving images to: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">output_dir</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save them</span>\n<span class=\"c1\"># NOTE: images may be very dark or bright, depending on the camera lens and</span>\n<span class=\"c1\">#   room conditions!</span>\n<span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">img</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">imgs</span><span class=\"p\">):</span>\n    <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">fromarray</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%08d</span><span class=\"s1\">.png'</span> <span class=\"o\">%</span> <span class=\"n\">n</span><span class=\"p\">))</span>\n</pre>\n<h1>License</h1>\n<p>Copyright 2019 Dustin Kleckner</p>\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at: <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n          </div>"}, "last_serial": 6366906, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "84ff3a8822680560b5c7ca4dd5f3339d", "sha256": "75380455394ad0f42c2804bd36fdaf189ab03fe42d0bd0cbbb5f25a17ed76095"}, "downloads": -1, "filename": "simple_pyspin-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "84ff3a8822680560b5c7ca4dd5f3339d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12440, "upload_time": "2019-12-26T18:50:33", "upload_time_iso_8601": "2019-12-26T18:50:33.463883Z", "url": "https://files.pythonhosted.org/packages/c2/88/12d020fe2072d5bbafecb80aa0525287b0d480e0bd9edfde6c2949ba83e5/simple_pyspin-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc9d1f40e3a86621f204734c61e18c57", "sha256": "1ea31fb82ce7d3a0c3ec637018b665aae761dd126164ab426eee5c13df9ff873"}, "downloads": -1, "filename": "simple_pyspin-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dc9d1f40e3a86621f204734c61e18c57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8501, "upload_time": "2019-12-26T18:50:36", "upload_time_iso_8601": "2019-12-26T18:50:36.027749Z", "url": "https://files.pythonhosted.org/packages/49/d5/19679afbcb56becf7fae6ff953781278687c0462f29ac37571db4a74509d/simple_pyspin-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5a8dcee375ffa5b5cea909da36a16bce", "sha256": "53c365eb2f1fc97514d162720e3b9eb4ce2fc6eba648345ba8e3768b993af25c"}, "downloads": -1, "filename": "simple_pyspin-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a8dcee375ffa5b5cea909da36a16bce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12445, "upload_time": "2019-12-27T22:53:01", "upload_time_iso_8601": "2019-12-27T22:53:01.833490Z", "url": "https://files.pythonhosted.org/packages/82/9b/1693519389c89178842717987c76a3aa6d7738dc0da488bac4f0a8483c2f/simple_pyspin-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edbad07c79c8dceede6acd92caad58f3", "sha256": "31e27d8bede23a07d0c38ffe107827c9cacdf78af24e05295d057d47dc23617f"}, "downloads": -1, "filename": "simple_pyspin-0.1.1.tar.gz", "has_sig": false, "md5_digest": "edbad07c79c8dceede6acd92caad58f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8504, "upload_time": "2019-12-27T22:53:04", "upload_time_iso_8601": "2019-12-27T22:53:04.738491Z", "url": "https://files.pythonhosted.org/packages/d9/b4/487a3c037e4b11550e39a2bcb90ec4dbc7e849e0d632753627308503b4e3/simple_pyspin-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a8dcee375ffa5b5cea909da36a16bce", "sha256": "53c365eb2f1fc97514d162720e3b9eb4ce2fc6eba648345ba8e3768b993af25c"}, "downloads": -1, "filename": "simple_pyspin-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a8dcee375ffa5b5cea909da36a16bce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12445, "upload_time": "2019-12-27T22:53:01", "upload_time_iso_8601": "2019-12-27T22:53:01.833490Z", "url": "https://files.pythonhosted.org/packages/82/9b/1693519389c89178842717987c76a3aa6d7738dc0da488bac4f0a8483c2f/simple_pyspin-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edbad07c79c8dceede6acd92caad58f3", "sha256": "31e27d8bede23a07d0c38ffe107827c9cacdf78af24e05295d057d47dc23617f"}, "downloads": -1, "filename": "simple_pyspin-0.1.1.tar.gz", "has_sig": false, "md5_digest": "edbad07c79c8dceede6acd92caad58f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8504, "upload_time": "2019-12-27T22:53:04", "upload_time_iso_8601": "2019-12-27T22:53:04.738491Z", "url": "https://files.pythonhosted.org/packages/d9/b4/487a3c037e4b11550e39a2bcb90ec4dbc7e849e0d632753627308503b4e3/simple_pyspin-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:19 2020"}