{"info": {"author": "Alejandro Ricoveri", "author_email": "alejandroricoveri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: System :: Archiving :: Backup"], "description": "snaplayer\n=========\n\n**snaplayer** is a minimalist python command line tool for easily list\nand capture your Softlayer virtual servers into corresponding images with no\neffort whatsoever.\n\n\n-  `Quick start <#quick-start>`_\n-  `Requirements <#requirements>`_\n-  `Installation <#installation>`_\n-  `Basic usage <#basic-usage>`_\n-  `Options <#options>`_\n-  `Configuration file <#configuration-file>`_\n-  `Contributing <#contributing>`_\n-  `Donating <#donating>`_\n-  `Copyright and licensing <#copyright-and-licensing>`_\n\n\nQuick start\n===========\n\n::\n\n    # First of all, you need to install\n    pip3 install snaplayer\n\n    # Create a criteria configuration file\n    cat << EOF > my_config.yml\n    hourly: false\n    tags:\n        - cool\n        - cooler\n    domain: cool.io\n    EOF\n\n\n    # It's best to list your instances first\n    snaplayer --list my_config.yml\n\n    # Capture your instances into images!\n    snaplayer --capture my_config.yml\n\n\nRequirements\n============\n\n-  `python <http://python.org>`_ >= 3.3\n-  `softlayer <https://github.com/softlayer/softlayer-python>`_\n-  `clint <https://github.com/kennethreitz/clint>`_\n-  `docopt <http://docopt.org>`_\n-  `pyyaml <http://pyyaml.org>`_\n-  `schema <https://github.com/keleshev/schema>`_\n\n\nInstallation\n============\n\nInstallation of snaplayer can be made directly from source, via `pip <https://github.com/pypa/pip>`_ or\n`easy_install <http://pythonhosted.org/setuptools/easy_install.html>`_, whichever you prefer.\n\nOption # 1: pip\n---------------\n::\n\n    $ pip install snaplayer\n\nOption # 2: from source\n-----------------------\n::\n\n    $ git clone git@github.com:axltxl/snaplayer.git\n    $ cd snaplayer\n    $ python3 setup.py install\n\nOption # 3: easy_install\n------------------------\n::\n\n    $ easy_install snaplayer\n\nFrom this point you can edit your `configuration file <#configuration-file>`_\n::\n\n  $ vi /etc/snaplayer/snaplayer.yaml\n\nBasic Usage\n===========\nNormal execution\n::\n\n    $ snaplayer --capture /path/to/my/custom/snaplayer.yaml\n\nList instances\n::\n\n    $ snaplayer --list /path/to/my/custom/snaplayer.yaml\n\nQuiet output\n::\n\n    $ snaplayer -q\n\nDry run\n::\n\n    $ snaplayer -d\n\n\nConfiguration file\n==================\n\nsnaplayer lists and tells Softlayer to capture images based\non criteria information extracted from a 'criteria file' which is\nno more than a dead-simple YAML file with a handful key-value pairs,\nlike so:\n\n::\n\n    ---\n    # Example criteria YAML file\n    domain: mydomain.com\n    tags: [mydomain, production]\n    hourly: false\n    monthly: true\n    cpus: 2\n\nConfiguration options are correspondent to those of `SoftLayer.vs.list_instances <http://softlayer-python.readthedocs.org/en/latest/api/managers/vs.html#SoftLayer.managers.vs.VSManager.list_instances>`_\n\n\nOptions\n=======\n::\n\n    snaplayer [options] (--list | --capture) <config_file>\n\n\n-  ``--capture`` Capture instances and create images from them\n-  ``--list`` List instances only\n-  ``--version`` show version number and exit\n-  ``--list`` only list matching instances and exit\n-  ``-h | --help`` show a help message and exit\n-  ``-d | --dry-run`` don't actually do anything\n-  ``-q | --quiet`` quiet output\n-  ``--ll | --log-level=[num]`` set logging output level\n-  ``-l LOG_FILE | --log-file LOG_FILE set log file``\n\n\nContributing\n============\n\nThere are many ways in which you can contribute to snaplayer.\nCode patches are just one thing amongst others that you can submit to help the project.\nWe also welcome feedback, bug reports, feature requests, documentation improvements,\nadvertisement and testing.\n\nFeedback contributions\n----------------------\n\nThis is by far the easiest way to contribute something.\nIf you\u2019re using snaplayer for your own benefit, don\u2019t hesitate sharing.\nFeel free to `submit issues and enhancement requests. <https://github.com/axltxl/snaplayer/issues>`_\n\nCode contributions\n------------------\n\nCode contributions (patches, new features) are the most obvious way to help with the project\u2019s development.\nSince this is so common we ask you to follow our workflow to most efficiently work with us.\nFor code contributions, we follow the \"fork-and-pull\" Git workflow.\n\n\n1. Fork, then clone your repo on GitHub\n::\n\n  git clone git@github.com:your-username/snaplayer.git\n  git add origin upstream https://github.com/axltxl/snaplayer.git\n\nIf you already forked the repo, then be sure to merge\nthe most recent changes from \"upstream\" before making a pull request.\n::\n\n  git pull upstream\n\n2. Create a new feature branch in your local repo\n::\n\n  git checkout -b my_feature_branch\n\n3. Make your changes, then make sure the tests passes\n::\n\n  pyvenv snaplayer-pyve && source snaplayer-pyve/bin/activate\n  python3 setup.py test\n\n4. Commit your changes once done\n::\n\n  git commit -a -m \"My commit message\"\n  git push origin my_feature_branch\n\n5. Submit a `pull request <https://github.com/axltxl/snaplayer/compare/>`_ with your feature branch containing your changes.\n\n\nCopyright and Licensing\n=======================\n\nCopyright (c) Alejandro Ricoveri\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/axltxl/snaplayer/tarball/0.1.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axltxl/snaplayer", "keywords": "softlayer,backup", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "snaplayer", "package_url": "https://pypi.org/project/snaplayer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/snaplayer/", "project_urls": {"Download": "https://github.com/axltxl/snaplayer/tarball/0.1.1", "Homepage": "https://github.com/axltxl/snaplayer"}, "release_url": "https://pypi.org/project/snaplayer/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Make images out of your Softlayer virtual servers, painlessly", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"snaplayer\">\n<h2>snaplayer</h2>\n<p><strong>snaplayer</strong> is a minimalist python command line tool for easily list\nand capture your Softlayer virtual servers into corresponding images with no\neffort whatsoever.</p>\n<ul>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick start</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#basic-usage\" rel=\"nofollow\">Basic usage</a></li>\n<li><a href=\"#options\" rel=\"nofollow\">Options</a></li>\n<li><a href=\"#configuration-file\" rel=\"nofollow\">Configuration file</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#donating\" rel=\"nofollow\">Donating</a></li>\n<li><a href=\"#copyright-and-licensing\" rel=\"nofollow\">Copyright and licensing</a></li>\n</ul>\n</div>\n<div id=\"id1\">\n<h2>Quick start</h2>\n<pre># First of all, you need to install\npip3 install snaplayer\n\n# Create a criteria configuration file\ncat &lt;&lt; EOF &gt; my_config.yml\nhourly: false\ntags:\n    - cool\n    - cooler\ndomain: cool.io\nEOF\n\n\n# It's best to list your instances first\nsnaplayer --list my_config.yml\n\n# Capture your instances into images!\nsnaplayer --capture my_config.yml\n</pre>\n</div>\n<div id=\"id2\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://python.org\" rel=\"nofollow\">python</a> &gt;= 3.3</li>\n<li><a href=\"https://github.com/softlayer/softlayer-python\" rel=\"nofollow\">softlayer</a></li>\n<li><a href=\"https://github.com/kennethreitz/clint\" rel=\"nofollow\">clint</a></li>\n<li><a href=\"http://docopt.org\" rel=\"nofollow\">docopt</a></li>\n<li><a href=\"http://pyyaml.org\" rel=\"nofollow\">pyyaml</a></li>\n<li><a href=\"https://github.com/keleshev/schema\" rel=\"nofollow\">schema</a></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>Installation</h2>\n<p>Installation of snaplayer can be made directly from source, via <a href=\"https://github.com/pypa/pip\" rel=\"nofollow\">pip</a> or\n<a href=\"http://pythonhosted.org/setuptools/easy_install.html\" rel=\"nofollow\">easy_install</a>, whichever you prefer.</p>\n<div id=\"option-1-pip\">\n<h3>Option # 1: pip</h3>\n<pre>$ pip install snaplayer\n</pre>\n</div>\n<div id=\"option-2-from-source\">\n<h3>Option # 2: from source</h3>\n<pre>$ git clone git@github.com:axltxl/snaplayer.git\n$ cd snaplayer\n$ python3 setup.py install\n</pre>\n</div>\n<div id=\"option-3-easy-install\">\n<h3>Option # 3: easy_install</h3>\n<pre>$ easy_install snaplayer\n</pre>\n<p>From this point you can edit your <a href=\"#configuration-file\" rel=\"nofollow\">configuration file</a></p>\n<pre>$ vi /etc/snaplayer/snaplayer.yaml\n</pre>\n</div>\n</div>\n<div id=\"id5\">\n<h2>Basic Usage</h2>\n<p>Normal execution</p>\n<pre>$ snaplayer --capture /path/to/my/custom/snaplayer.yaml\n</pre>\n<p>List instances</p>\n<pre>$ snaplayer --list /path/to/my/custom/snaplayer.yaml\n</pre>\n<p>Quiet output</p>\n<pre>$ snaplayer -q\n</pre>\n<p>Dry run</p>\n<pre>$ snaplayer -d\n</pre>\n</div>\n<div id=\"id6\">\n<h2>Configuration file</h2>\n<p>snaplayer lists and tells Softlayer to capture images based\non criteria information extracted from a \u2018criteria file\u2019 which is\nno more than a dead-simple YAML file with a handful key-value pairs,\nlike so:</p>\n<pre>---\n# Example criteria YAML file\ndomain: mydomain.com\ntags: [mydomain, production]\nhourly: false\nmonthly: true\ncpus: 2\n</pre>\n<p>Configuration options are correspondent to those of <a href=\"http://softlayer-python.readthedocs.org/en/latest/api/managers/vs.html#SoftLayer.managers.vs.VSManager.list_instances\" rel=\"nofollow\">SoftLayer.vs.list_instances</a></p>\n</div>\n<div id=\"id7\">\n<h2>Options</h2>\n<pre>snaplayer [options] (--list | --capture) &lt;config_file&gt;\n</pre>\n<ul>\n<li><tt><span class=\"pre\">--capture</span></tt> Capture instances and create images from them</li>\n<li><tt><span class=\"pre\">--list</span></tt> List instances only</li>\n<li><tt><span class=\"pre\">--version</span></tt> show version number and exit</li>\n<li><tt><span class=\"pre\">--list</span></tt> only list matching instances and exit</li>\n<li><tt><span class=\"pre\">-h</span> | <span class=\"pre\">--help</span></tt> show a help message and exit</li>\n<li><tt><span class=\"pre\">-d</span> | <span class=\"pre\">--dry-run</span></tt> don\u2019t actually do anything</li>\n<li><tt><span class=\"pre\">-q</span> | <span class=\"pre\">--quiet</span></tt> quiet output</li>\n<li><tt><span class=\"pre\">--ll</span> | <span class=\"pre\">--log-level=[num]</span></tt> set logging output level</li>\n<li><tt><span class=\"pre\">-l</span> LOG_FILE | <span class=\"pre\">--log-file</span> LOG_FILE set log file</tt></li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>Contributing</h2>\n<p>There are many ways in which you can contribute to snaplayer.\nCode patches are just one thing amongst others that you can submit to help the project.\nWe also welcome feedback, bug reports, feature requests, documentation improvements,\nadvertisement and testing.</p>\n<div id=\"feedback-contributions\">\n<h3>Feedback contributions</h3>\n<p>This is by far the easiest way to contribute something.\nIf you\u2019re using snaplayer for your own benefit, don\u2019t hesitate sharing.\nFeel free to <a href=\"https://github.com/axltxl/snaplayer/issues\" rel=\"nofollow\">submit issues and enhancement requests.</a></p>\n</div>\n<div id=\"code-contributions\">\n<h3>Code contributions</h3>\n<p>Code contributions (patches, new features) are the most obvious way to help with the project\u2019s development.\nSince this is so common we ask you to follow our workflow to most efficiently work with us.\nFor code contributions, we follow the \u201cfork-and-pull\u201d Git workflow.</p>\n<p>1. Fork, then clone your repo on GitHub</p>\n<pre>git clone git@github.com:your-username/snaplayer.git\ngit add origin upstream https://github.com/axltxl/snaplayer.git\n</pre>\n<p>If you already forked the repo, then be sure to merge\nthe most recent changes from \u201cupstream\u201d before making a pull request.</p>\n<pre>git pull upstream\n</pre>\n<p>2. Create a new feature branch in your local repo</p>\n<pre>git checkout -b my_feature_branch\n</pre>\n<p>3. Make your changes, then make sure the tests passes</p>\n<pre>pyvenv snaplayer-pyve &amp;&amp; source snaplayer-pyve/bin/activate\npython3 setup.py test\n</pre>\n<p>4. Commit your changes once done</p>\n<pre>git commit -a -m \"My commit message\"\ngit push origin my_feature_branch\n</pre>\n<ol>\n<li>Submit a <a href=\"https://github.com/axltxl/snaplayer/compare/\" rel=\"nofollow\">pull request</a> with your feature branch containing your changes.</li>\n</ol>\n</div>\n</div>\n<div id=\"id9\">\n<h2>Copyright and Licensing</h2>\n<p>Copyright (c) Alejandro Ricoveri</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 1850648, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a44ac78c5b061d14647833bfbbabeb61", "sha256": "9f3c3dd8018dd61209918249f90a02fa150b24d19e34851cdbd356b47d245f0f"}, "downloads": -1, "filename": "snaplayer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a44ac78c5b061d14647833bfbbabeb61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9419, "upload_time": "2015-12-07T18:42:43", "upload_time_iso_8601": "2015-12-07T18:42:43.539953Z", "url": "https://files.pythonhosted.org/packages/57/12/e236c4b5913f094e86762f81f94e3c8cb19e9a0190fc20de4d60d4ab7b1b/snaplayer-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d84997cc2e010586d034e7e5ec375f79", "sha256": "1c76719909b93655bfdb7403132def8e75318563bcd913e4b39a18077811cdc2"}, "downloads": -1, "filename": "snaplayer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d84997cc2e010586d034e7e5ec375f79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9405, "upload_time": "2015-12-07T18:56:25", "upload_time_iso_8601": "2015-12-07T18:56:25.127269Z", "url": "https://files.pythonhosted.org/packages/16/62/9aae9723a3319c91fba50d3bcff41cc12b32029b3c0bdf6c60ef977fe0d5/snaplayer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d84997cc2e010586d034e7e5ec375f79", "sha256": "1c76719909b93655bfdb7403132def8e75318563bcd913e4b39a18077811cdc2"}, "downloads": -1, "filename": "snaplayer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d84997cc2e010586d034e7e5ec375f79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9405, "upload_time": "2015-12-07T18:56:25", "upload_time_iso_8601": "2015-12-07T18:56:25.127269Z", "url": "https://files.pythonhosted.org/packages/16/62/9aae9723a3319c91fba50d3bcff41cc12b32029b3c0bdf6c60ef977fe0d5/snaplayer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:34 2020"}