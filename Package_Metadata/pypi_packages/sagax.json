{"info": {"author": "Josh Benner", "author_email": "josh@bennerweb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: System :: Monitoring"], "description": "sagax\n=====\n\nSensu dashboard.\n\n\nBasic Install\n-------------\n\nBasic install\n\n.. code-block:: bash\n\n    pip install sagax\n\nRun hug's built-in development server\n\n.. code-block:: bash\n\n    SAGAX_CONFIG_FILE=/path/to/config.yml hug -m sagax.api\n\nProduction Install\n------------------\n\nInstall with Cython-compiled Falcon, to be served by Gunicorn, with LDAP\nauthentication.\n\n.. code-block:: bash\n\n    pip install cython gunicorn\n    pip install --no-binary falcon sagax[ldap]\n\nThen, you can run the web server:\n\n.. code-block:: bash\n\n    SAGAX_CONFIG_FILE=/path/to/config.yml gunicorn -w 4 sagax.api:__hug_wsgi__\n\nConfiguration\n-------------\n\nSet the environment variable ``SAGAX_CONFIG_FILE`` to point at the path of a YAML\nfile containing any config overrides.\n\nExample configuration file:\n\n.. code-block:: yaml\n\n    # Sensu configuration must be provided (no defaults).\n    sensu_type: Sensu1API\n    sensu:\n      url: https://sensu.example.com\n      insecure: true\n      timeout: 5\n\n    # Defaults to NO AUTHENTICATION. Here is LDAP example.\n    require_authentication: true\n    authentication_type: ldap\n    ldap:\n      url: ldaps://ldap.example.com\n      user_pattern: uid={},ou=Users,dc=example,dc=com\n      require_groups:\n        - operations\n\n    # Defaults shown here.\n    jwt:\n      secret_key: overrideme!\n      issuer: sagax\n      algorithm: HS256\n      ttl: 1209600\n\n    # All of these settings are sent to the frontend UI, so be sure not to put\n    # anything sensitive in here.\n    frontend:\n      extra_css:\n        - http://example.com/custom-sagax-styles.css\n      timestamp_format: L LT z\n      refresh_interval: 5\n      silence_intervals:\n        - 15 minutes\n        - 30 minutes\n        - 1 hour\n        - 2 hours\n        - 4 hours\n        - 8 hours\n        - 1 day\n      # Table fields can be overridden here. See config.py for defaults.\n      fields: {}\n\nBuilding\n--------\n\nBuild prerequisites:\n\n1. `yarn`_\n2. Python 3.5+\n\nTo build:\n\n.. code-block:: bash\n\n    git clone https://github.com/joshbenner/sagax.git\n    cd sagax\n    python setup.py bdist_wheel\n\n.. _yarn: https://yarnpkg.com/lang/en/docs/install\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joshbenner/sagax", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sagax", "package_url": "https://pypi.org/project/sagax/", "platform": "", "project_url": "https://pypi.org/project/sagax/", "project_urls": {"Homepage": "https://github.com/joshbenner/sagax"}, "release_url": "https://pypi.org/project/sagax/0.1.0/", "requires_dist": ["hug (<3,>=2.4)", "falcon", "requests (<3,>=2.18)", "configmanager (<2,>=1.34)", "pyyaml (<4,>=3.12)", "pyjwt (<2,>=1.6.0)", "ldap3 (<3,>=2.4); extra == 'ldap'", "pytest; extra == 'test'"], "requires_python": "", "summary": "Sensu dashboard", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Sensu dashboard.</p>\n<div id=\"basic-install\">\n<h2>Basic Install</h2>\n<p>Basic install</p>\n<pre>pip install sagax\n</pre>\n<p>Run hug\u2019s built-in development server</p>\n<pre><span class=\"nv\">SAGAX_CONFIG_FILE</span><span class=\"o\">=</span>/path/to/config.yml hug -m sagax.api\n</pre>\n</div>\n<div id=\"production-install\">\n<h2>Production Install</h2>\n<p>Install with Cython-compiled Falcon, to be served by Gunicorn, with LDAP\nauthentication.</p>\n<pre>pip install cython gunicorn\npip install --no-binary falcon sagax<span class=\"o\">[</span>ldap<span class=\"o\">]</span>\n</pre>\n<p>Then, you can run the web server:</p>\n<pre><span class=\"nv\">SAGAX_CONFIG_FILE</span><span class=\"o\">=</span>/path/to/config.yml gunicorn -w <span class=\"m\">4</span> sagax.api:__hug_wsgi__\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Set the environment variable <tt>SAGAX_CONFIG_FILE</tt> to point at the path of a YAML\nfile containing any config overrides.</p>\n<p>Example configuration file:</p>\n<pre><span class=\"c1\"># Sensu configuration must be provided (no defaults).</span>\n<span class=\"nt\">sensu_type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Sensu1API</span>\n<span class=\"nt\">sensu</span><span class=\"p\">:</span>\n  <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://sensu.example.com</span>\n  <span class=\"nt\">insecure</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n  <span class=\"nt\">timeout</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5</span>\n\n<span class=\"c1\"># Defaults to NO AUTHENTICATION. Here is LDAP example.</span>\n<span class=\"nt\">require_authentication</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"nt\">authentication_type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ldap</span>\n<span class=\"nt\">ldap</span><span class=\"p\">:</span>\n  <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ldaps://ldap.example.com</span>\n  <span class=\"nt\">user_pattern</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">uid={},ou=Users,dc=example,dc=com</span>\n  <span class=\"nt\">require_groups</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">operations</span>\n\n<span class=\"c1\"># Defaults shown here.</span>\n<span class=\"nt\">jwt</span><span class=\"p\">:</span>\n  <span class=\"nt\">secret_key</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">overrideme!</span>\n  <span class=\"nt\">issuer</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">sagax</span>\n  <span class=\"nt\">algorithm</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">HS256</span>\n  <span class=\"nt\">ttl</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">1209600</span>\n\n<span class=\"c1\"># All of these settings are sent to the frontend UI, so be sure not to put</span>\n<span class=\"c1\"># anything sensitive in here.</span>\n<span class=\"nt\">frontend</span><span class=\"p\">:</span>\n  <span class=\"nt\">extra_css</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">http://example.com/custom-sagax-styles.css</span>\n  <span class=\"nt\">timestamp_format</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">L LT z</span>\n  <span class=\"nt\">refresh_interval</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5</span>\n  <span class=\"nt\">silence_intervals</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">15 minutes</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">30 minutes</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">1 hour</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">2 hours</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">4 hours</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">8 hours</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">1 day</span>\n  <span class=\"c1\"># Table fields can be overridden here. See config.py for defaults.</span>\n  <span class=\"nt\">fields</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{}</span>\n</pre>\n</div>\n<div id=\"building\">\n<h2>Building</h2>\n<p>Build prerequisites:</p>\n<ol>\n<li><a href=\"https://yarnpkg.com/lang/en/docs/install\" rel=\"nofollow\">yarn</a></li>\n<li>Python 3.5+</li>\n</ol>\n<p>To build:</p>\n<pre>git clone https://github.com/joshbenner/sagax.git\n<span class=\"nb\">cd</span> sagax\npython setup.py bdist_wheel\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3862885, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9d3a0ea93616010bf2ef2cb4b5779e98", "sha256": "220e34ba7ae1e72f16a029f9883555d86c74369f925f4dc2f79c10ba091dce7b"}, "downloads": -1, "filename": "sagax-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9d3a0ea93616010bf2ef2cb4b5779e98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3364418, "upload_time": "2018-05-15T00:59:05", "upload_time_iso_8601": "2018-05-15T00:59:05.844848Z", "url": "https://files.pythonhosted.org/packages/3a/6f/b3051f37894aeac38ae465bceee36f2479d941bdffc6b8d4eff40b65dac9/sagax-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d3a0ea93616010bf2ef2cb4b5779e98", "sha256": "220e34ba7ae1e72f16a029f9883555d86c74369f925f4dc2f79c10ba091dce7b"}, "downloads": -1, "filename": "sagax-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9d3a0ea93616010bf2ef2cb4b5779e98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3364418, "upload_time": "2018-05-15T00:59:05", "upload_time_iso_8601": "2018-05-15T00:59:05.844848Z", "url": "https://files.pythonhosted.org/packages/3a/6f/b3051f37894aeac38ae465bceee36f2479d941bdffc6b8d4eff40b65dac9/sagax-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:20 2020"}