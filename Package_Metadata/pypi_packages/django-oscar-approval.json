{"info": {"author": "Tangentlabs", "author_email": "tangentlabs@tangentlabs.co.uk", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Unix", "Programming Language :: Python"], "description": "django-oscar-approval\n=====================\n\nOrder/Product approval extension for Django Oscar\n\n\nGetting started\n===============\n\nInstallation\n------------\n\nAdd ``'oscar_approval'`` to ``INSTALLED_APPS`` and run::\n\n    ./manage.py syncdb\n\n\nConfiguration\n--------------\n\nEdit your ``settings.py`` to set the following settings (example)::\n\n    OSCAR_LINE_APPROVAL_STATUS = statuses.PENDING_AUTHORISATION\n    OSCAR_ORDER_APPROVAL_STATUS = statuses.PENDING_AUTHORISATION\n\nInclude approval urls in your application::\n\n    from oscar_approval.apps.approval.app import application as approval_application\n\n    (r'^approval/', include(approval_application.urls)),\n\n\nIntegration into the project\n-----------------------------\nYou may choose to integrate any of the following components:\n\n1. Product model extension::\n\n    from oscar_approval.apps.catalogue.abstract_models import AbstractProduct as ApprovalAbstractProduct\n\n        ...\n    class Product(AbstractProduct, ApprovalAbstractProduct):\n        ...\n\n\n2. Basic behaviour on receiving ``'order_placed'`` signal::\n\n    from oscar.apps.order.signals import order_placed\n    from oscar_approval.apps.order.receivers import receive_order_placed\n\n    order_placed.connect(receive_order_placed)\n\nThis receiver simply sets ``OSCAR_LINE_APPROVAL_STATUS`` and ``OSCAR_ORDER_APPROVAL_STATUS`` for lines and orders that require approval.\n\n3. Pin authorisation tab in the user profile:\n\n    ...\n\n4. Dashboard application for managing reviewers and viewing approval event logs:\n\n    Extend user profile::\n\n        from oscar_approval.apps.customer.abstract_models import AbstractProfile as ApproverProfile\n\n        class Profile(ApproverProfile):\n            ...\n\n    Include dashboard application urls::\n\n        from oscar_approval.apps.dashboard.app import application as approval_dashboard_application\n\n        (r'^dashboard/approval/', include(approval_dashboard_application.urls))\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tangentlabs/django-oscar-approval", "keywords": "order approval,order authorisation", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-oscar-approval", "package_url": "https://pypi.org/project/django-oscar-approval/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-oscar-approval/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tangentlabs/django-oscar-approval"}, "release_url": "https://pypi.org/project/django-oscar-approval/0.1/", "requires_dist": null, "requires_python": null, "summary": "Order approval module for django-oscar", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-oscar-approval\">\n<h2>django-oscar-approval</h2>\n<p>Order/Product approval extension for Django Oscar</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Add <tt>'oscar_approval'</tt> to <tt>INSTALLED_APPS</tt> and run:</p>\n<pre>./manage.py syncdb\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Edit your <tt>settings.py</tt> to set the following settings (example):</p>\n<pre>OSCAR_LINE_APPROVAL_STATUS = statuses.PENDING_AUTHORISATION\nOSCAR_ORDER_APPROVAL_STATUS = statuses.PENDING_AUTHORISATION\n</pre>\n<p>Include approval urls in your application:</p>\n<pre>from oscar_approval.apps.approval.app import application as approval_application\n\n(r'^approval/', include(approval_application.urls)),\n</pre>\n</div>\n<div id=\"integration-into-the-project\">\n<h3>Integration into the project</h3>\n<p>You may choose to integrate any of the following components:</p>\n<ol>\n<li><p>Product model extension:</p>\n<pre>from oscar_approval.apps.catalogue.abstract_models import AbstractProduct as ApprovalAbstractProduct\n\n    ...\nclass Product(AbstractProduct, ApprovalAbstractProduct):\n    ...\n</pre>\n</li>\n<li><p>Basic behaviour on receiving <tt>'order_placed'</tt> signal:</p>\n<pre>from oscar.apps.order.signals import order_placed\nfrom oscar_approval.apps.order.receivers import receive_order_placed\n\norder_placed.connect(receive_order_placed)\n</pre>\n</li>\n</ol>\n<p>This receiver simply sets <tt>OSCAR_LINE_APPROVAL_STATUS</tt> and <tt>OSCAR_ORDER_APPROVAL_STATUS</tt> for lines and orders that require approval.</p>\n<ol>\n<li><p>Pin authorisation tab in the user profile:</p>\n<blockquote>\n<p>\u2026</p>\n</blockquote>\n</li>\n<li><p>Dashboard application for managing reviewers and viewing approval event logs:</p>\n<blockquote>\n<p>Extend user profile:</p>\n<pre>from oscar_approval.apps.customer.abstract_models import AbstractProfile as ApproverProfile\n\nclass Profile(ApproverProfile):\n    ...\n</pre>\n<p>Include dashboard application urls:</p>\n<pre>from oscar_approval.apps.dashboard.app import application as approval_dashboard_application\n\n(r'^dashboard/approval/', include(approval_dashboard_application.urls))\n</pre>\n</blockquote>\n</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1021096, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0ea1c5a07c654b7cb2031cf2812dd1bf", "sha256": "bb51ae8ea77c513cd7efb44db05fcc90b4cffd66c4520f18a8523405c1f8b09e"}, "downloads": -1, "filename": "django-oscar-approval-0.1.tar.gz", "has_sig": false, "md5_digest": "0ea1c5a07c654b7cb2031cf2812dd1bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7689, "upload_time": "2014-03-06T12:50:11", "upload_time_iso_8601": "2014-03-06T12:50:11.036469Z", "url": "https://files.pythonhosted.org/packages/a5/80/66824ce501103acbbc8f5ff87cf2b5e3c2c56002787e3e9026b6a723ab50/django-oscar-approval-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ea1c5a07c654b7cb2031cf2812dd1bf", "sha256": "bb51ae8ea77c513cd7efb44db05fcc90b4cffd66c4520f18a8523405c1f8b09e"}, "downloads": -1, "filename": "django-oscar-approval-0.1.tar.gz", "has_sig": false, "md5_digest": "0ea1c5a07c654b7cb2031cf2812dd1bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7689, "upload_time": "2014-03-06T12:50:11", "upload_time_iso_8601": "2014-03-06T12:50:11.036469Z", "url": "https://files.pythonhosted.org/packages/a5/80/66824ce501103acbbc8f5ff87cf2b5e3c2c56002787e3e9026b6a723ab50/django-oscar-approval-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:25 2020"}