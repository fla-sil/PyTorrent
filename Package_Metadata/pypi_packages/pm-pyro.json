{"info": {"author": "Suriyadeepan Ramamoorthy", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "![](images/logo-medium.png)\n\nPyMC3-like abstractions for pyro's stochastic function.\nDefine a model as a stochastic function in pyro.\nUse `pm_like` wrapper to create a PyMC3-esque `Model`.\nRandom variables are exposed to user as attributes of `Model`.\npm-pyro provides abstractions for inference (NUTS : No-U-Turn Sampler), trace plots, posterior plot and posterior predictive plots.\n\n\n## Install\n\nInstall from pypi\n\n```bash\npip install pm-pyro\n```\n\nDeveloper setup\n```bash\n# install requirements\npip install -r requirements-dev.txt\n# run tests\npython -m pytest pmpyro/tests.py\n```\n\n## Example\n\nBorrowed this example from a [PyMC3 tutorial](https://docs.pymc.io/notebooks/getting_started.html). Outcome variables `Y` is dependent on 2 features `X_1` and `X_2`. The notebook for this example is available [here](notebooks/motivating-example.ipynb)\n\n![](images/plot_data.png)\n\n\n## Model Specification\n\nWe design a simple Bayesian Linear Regression model.\n\n![](images/stfn.png)\n\n## Stochastic Function\n\nThe model specification is implemented as a stochastic function.\n\n\n```python\nimport pyro.distributions as dist\nimport pyro\nimport torch\n\ndef pyro_model(x1, x2, y):\n    alpha = pyro.sample('alpha', dist.Normal(0, 10))\n    beta = pyro.sample('beta',pdist.Normal(torch.zeros(2,), torch.ones(2,) * 10.))\n    sigma = pyro.sample('sigma', dist.HalfNormal(1.))\n\n    # Expected value of outcome\n    mu = alpha + beta[0] * x1 + beta[1] * x2\n\n    # Likelihood (sampling distribution) of observations\n    return pyro.sample('y_obs', dist.Normal(mu, sigma), obs=y)\n```\n\n## Context-manager Syntax\n\nThe `pm_like` wrapper creates a PyMC3-esque `Model`. \nWe can use the context manager syntax for running inference.\n`pm.sample` samples from the model using the NUTS sampler.\nThe trace is a python dictionary which contains the samples.\n\n```python\nfrom pmpyro import pm_like\nimport pmpyro as pm\n\nwith pm_like(pyro_model, X1, X2, Y) as model:\n    trace = pm.sample(1000)\n```\n\n```\nsample: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1300/1300 [00:16, 80.42it/s, step size=7.49e-01, acc. prob=0.911] \n```\n\n## Traceplot\n\nWe can visualize the samples using `traceplot`.\nSelect random variables by passing them as a list via `var_names = [ 'alpha' ... ]` argument.\n\n```python\npm.traceplot(trace)\n```\n\n![](images/traceplot.png)\n\n## Plot Posterior\n\nVisualize posterior of random variables using `plot_posterior`.\n\n```python\npm.plot_posterior(trace, var_names=['beta'])\n```\n\n![](images/posterior_plot.png)\n\n## Posterior Predictive Samples\n\nWe can sample from the posterior by running `plot_posterior_predictive` or `sample_posterior_predictive` with the same\nfunction signatures as the stochastic function `def pyro_model(x1, x2, y)`, replacing observed variable `Y` with `None`. \n\n```python\nppc = pm.plot_posterior_predictive(X1, X2, None,\n                          trace=trace, model=model, samples=60,\n                          alpha=0.08, obs={'y_obs' : Y})\n```\n\n![](images/ppc1.png)\n![](images/ppc2.png)\n\n\n## Trace Summary\n\nThe summary of random variables is available as a pandas array.\n\n```python\npm.summary()\n```\n\n![](images/trace_summary.png)\n\n\n## License\n\nThis project is licensed under the GPL v3 License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/suriyadeepan/pm-pyro", "keywords": "", "license": "GNU Affero General Public License v3 or later (AGPLv3+)", "maintainer": "", "maintainer_email": "", "name": "pm-pyro", "package_url": "https://pypi.org/project/pm-pyro/", "platform": "", "project_url": "https://pypi.org/project/pm-pyro/", "project_urls": {"Homepage": "https://github.com/suriyadeepan/pm-pyro"}, "release_url": "https://pypi.org/project/pm-pyro/0.3.3/", "requires_dist": ["arviz", "pymc3", "pyro-ppl"], "requires_python": ">=3.5", "summary": "A PyMC3-like Interface for Pyro Stochastic Functions", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ad6809ee44d2ea38061c0c62a4f04ad59ed5d11/696d616765732f6c6f676f2d6d656469756d2e706e67\"></p>\n<p>PyMC3-like abstractions for pyro's stochastic function.\nDefine a model as a stochastic function in pyro.\nUse <code>pm_like</code> wrapper to create a PyMC3-esque <code>Model</code>.\nRandom variables are exposed to user as attributes of <code>Model</code>.\npm-pyro provides abstractions for inference (NUTS : No-U-Turn Sampler), trace plots, posterior plot and posterior predictive plots.</p>\n<h2>Install</h2>\n<p>Install from pypi</p>\n<pre>pip install pm-pyro\n</pre>\n<p>Developer setup</p>\n<pre><span class=\"c1\"># install requirements</span>\npip install -r requirements-dev.txt\n<span class=\"c1\"># run tests</span>\npython -m pytest pmpyro/tests.py\n</pre>\n<h2>Example</h2>\n<p>Borrowed this example from a <a href=\"https://docs.pymc.io/notebooks/getting_started.html\" rel=\"nofollow\">PyMC3 tutorial</a>. Outcome variables <code>Y</code> is dependent on 2 features <code>X_1</code> and <code>X_2</code>. The notebook for this example is available <a href=\"notebooks/motivating-example.ipynb\" rel=\"nofollow\">here</a></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99da8c8381c2a68f023110d05796449f139caa55/696d616765732f706c6f745f646174612e706e67\"></p>\n<h2>Model Specification</h2>\n<p>We design a simple Bayesian Linear Regression model.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fad9e54e2bad3f7125ec8bce749ba4960c164c32/696d616765732f7374666e2e706e67\"></p>\n<h2>Stochastic Function</h2>\n<p>The model specification is implemented as a stochastic function.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyro.distributions</span> <span class=\"k\">as</span> <span class=\"nn\">dist</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyro</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">pyro_model</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">pyro</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"s1\">'alpha'</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">Normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n    <span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">pyro</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"s1\">'beta'</span><span class=\"p\">,</span><span class=\"n\">pdist</span><span class=\"o\">.</span><span class=\"n\">Normal</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"mf\">10.</span><span class=\"p\">))</span>\n    <span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">pyro</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"s1\">'sigma'</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">HalfNormal</span><span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Expected value of outcome</span>\n    <span class=\"n\">mu</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span> <span class=\"o\">+</span> <span class=\"n\">beta</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x1</span> <span class=\"o\">+</span> <span class=\"n\">beta</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x2</span>\n\n    <span class=\"c1\"># Likelihood (sampling distribution) of observations</span>\n    <span class=\"k\">return</span> <span class=\"n\">pyro</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"s1\">'y_obs'</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">Normal</span><span class=\"p\">(</span><span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"p\">),</span> <span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<h2>Context-manager Syntax</h2>\n<p>The <code>pm_like</code> wrapper creates a PyMC3-esque <code>Model</code>.\nWe can use the context manager syntax for running inference.\n<code>pm.sample</code> samples from the model using the NUTS sampler.\nThe trace is a python dictionary which contains the samples.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pmpyro</span> <span class=\"kn\">import</span> <span class=\"n\">pm_like</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmpyro</span> <span class=\"k\">as</span> <span class=\"nn\">pm</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pm_like</span><span class=\"p\">(</span><span class=\"n\">pyro_model</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">,</span> <span class=\"n\">X2</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">model</span><span class=\"p\">:</span>\n    <span class=\"n\">trace</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</pre>\n<pre><code>sample: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1300/1300 [00:16, 80.42it/s, step size=7.49e-01, acc. prob=0.911] \n</code></pre>\n<h2>Traceplot</h2>\n<p>We can visualize the samples using <code>traceplot</code>.\nSelect random variables by passing them as a list via <code>var_names = [ 'alpha' ... ]</code> argument.</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">traceplot</span><span class=\"p\">(</span><span class=\"n\">trace</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcc74f6c180237e5d8713fe0233cc6da0b31c843/696d616765732f7472616365706c6f742e706e67\"></p>\n<h2>Plot Posterior</h2>\n<p>Visualize posterior of random variables using <code>plot_posterior</code>.</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">plot_posterior</span><span class=\"p\">(</span><span class=\"n\">trace</span><span class=\"p\">,</span> <span class=\"n\">var_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'beta'</span><span class=\"p\">])</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0477ffd650e0d1b5ce9145595e889c12b0e1bef8/696d616765732f706f73746572696f725f706c6f742e706e67\"></p>\n<h2>Posterior Predictive Samples</h2>\n<p>We can sample from the posterior by running <code>plot_posterior_predictive</code> or <code>sample_posterior_predictive</code> with the same\nfunction signatures as the stochastic function <code>def pyro_model(x1, x2, y)</code>, replacing observed variable <code>Y</code> with <code>None</code>.</p>\n<pre><span class=\"n\">ppc</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">plot_posterior_predictive</span><span class=\"p\">(</span><span class=\"n\">X1</span><span class=\"p\">,</span> <span class=\"n\">X2</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                          <span class=\"n\">trace</span><span class=\"o\">=</span><span class=\"n\">trace</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">samples</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n                          <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.08</span><span class=\"p\">,</span> <span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'y_obs'</span> <span class=\"p\">:</span> <span class=\"n\">Y</span><span class=\"p\">})</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73aa8e7b2901d044bf222016e6c8092782075455/696d616765732f707063312e706e67\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e10cf9d35a7e10bac9783502be5a1cca1acff5f/696d616765732f707063322e706e67\"></p>\n<h2>Trace Summary</h2>\n<p>The summary of random variables is available as a pandas array.</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7ad292b89798c29c608bc9129a37aef78e78044/696d616765732f74726163655f73756d6d6172792e706e67\"></p>\n<h2>License</h2>\n<p>This project is licensed under the GPL v3 License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n\n          </div>"}, "last_serial": 6167631, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "f81cb9970234c708e204a21c3529d191", "sha256": "9156eced502c9b96fa9556ce0350c7305ad914c20f506fa62a50534a41558bb1"}, "downloads": -1, "filename": "pm_pyro-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f81cb9970234c708e204a21c3529d191", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22845, "upload_time": "2019-11-19T03:48:29", "upload_time_iso_8601": "2019-11-19T03:48:29.760086Z", "url": "https://files.pythonhosted.org/packages/86/fd/1c42447312aa64379f2a3fe2672807dcc45c304ab87fb6a8ba5c43e480b5/pm_pyro-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12e3d610ec443be61637dc1698ea48dc", "sha256": "61be2f92841f91fef1c718d5438ed088b60027c8d7e69dfe896765077de1c671"}, "downloads": -1, "filename": "pm-pyro-0.3.1.tar.gz", "has_sig": false, "md5_digest": "12e3d610ec443be61637dc1698ea48dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8653, "upload_time": "2019-11-19T03:48:33", "upload_time_iso_8601": "2019-11-19T03:48:33.245953Z", "url": "https://files.pythonhosted.org/packages/86/0a/daee569b43b31a9550addc0718ce9507f9b85124bc6e91c6f1c427964bd5/pm-pyro-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "039c7db19f331c86a79c100bd618b90e", "sha256": "55576b157b0170777cf04ad2463346ac8ad050958efa7f922043c6d86728f048"}, "downloads": -1, "filename": "pm_pyro-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "039c7db19f331c86a79c100bd618b90e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23105, "upload_time": "2019-11-20T06:24:09", "upload_time_iso_8601": "2019-11-20T06:24:09.603891Z", "url": "https://files.pythonhosted.org/packages/be/1c/0371cde23ef721b758263c8b9fa0375b9eb8996dafb345d67282555bb595/pm_pyro-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "827f859b9fa7b10c519cc50a1ada4dcc", "sha256": "0222ec846ecdcfb1a840124e45b1da6cc7833caea59ccb228e3bc77a7573ca67"}, "downloads": -1, "filename": "pm-pyro-0.3.2.tar.gz", "has_sig": false, "md5_digest": "827f859b9fa7b10c519cc50a1ada4dcc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8894, "upload_time": "2019-11-20T06:24:11", "upload_time_iso_8601": "2019-11-20T06:24:11.611119Z", "url": "https://files.pythonhosted.org/packages/f1/73/06dd66d4c2c25cb7fa286dcab88f55161e915c79d67b6dd19759996842fc/pm-pyro-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "c011194288e08d60ff3bdb67e3ce764d", "sha256": "c7c6475fbc62b486c2dca5fde9c1369546ab97601433663291fd642f916226ae"}, "downloads": -1, "filename": "pm_pyro-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c011194288e08d60ff3bdb67e3ce764d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23108, "upload_time": "2019-11-20T08:45:55", "upload_time_iso_8601": "2019-11-20T08:45:55.838588Z", "url": "https://files.pythonhosted.org/packages/20/7d/8c35154eeecd3c05079acdfe94ac3fea0089734ff8f56819027de0c27ad7/pm_pyro-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dff7373e4b90244f05c2899b3ee9745f", "sha256": "0b9841d7363c1805a7794a20ca342ce3bf67f13d56beb7747ea0ff0c245f1297"}, "downloads": -1, "filename": "pm-pyro-0.3.3.tar.gz", "has_sig": false, "md5_digest": "dff7373e4b90244f05c2899b3ee9745f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8905, "upload_time": "2019-11-20T08:45:57", "upload_time_iso_8601": "2019-11-20T08:45:57.697767Z", "url": "https://files.pythonhosted.org/packages/8f/88/07fc239ccbbabe5cc79180ed6e4da77227c70fc9de163a661e61dee3467b/pm-pyro-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c011194288e08d60ff3bdb67e3ce764d", "sha256": "c7c6475fbc62b486c2dca5fde9c1369546ab97601433663291fd642f916226ae"}, "downloads": -1, "filename": "pm_pyro-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c011194288e08d60ff3bdb67e3ce764d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23108, "upload_time": "2019-11-20T08:45:55", "upload_time_iso_8601": "2019-11-20T08:45:55.838588Z", "url": "https://files.pythonhosted.org/packages/20/7d/8c35154eeecd3c05079acdfe94ac3fea0089734ff8f56819027de0c27ad7/pm_pyro-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dff7373e4b90244f05c2899b3ee9745f", "sha256": "0b9841d7363c1805a7794a20ca342ce3bf67f13d56beb7747ea0ff0c245f1297"}, "downloads": -1, "filename": "pm-pyro-0.3.3.tar.gz", "has_sig": false, "md5_digest": "dff7373e4b90244f05c2899b3ee9745f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8905, "upload_time": "2019-11-20T08:45:57", "upload_time_iso_8601": "2019-11-20T08:45:57.697767Z", "url": "https://files.pythonhosted.org/packages/8f/88/07fc239ccbbabe5cc79180ed6e4da77227c70fc9de163a661e61dee3467b/pm-pyro-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:16 2020"}