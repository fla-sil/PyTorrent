{"info": {"author": "Andr\u00e9 Claudino", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Tensorflow Data for AWS Athena\n\nAn AWS athena library for `tensorflow.data.Dataset`. If you don't know `tf.data`, take a look at [documentation](https://www.tensorflow.org/api_docs/python/tf/data/Dataset) and this [example](https://www.tensorflow.org/guide/data).\n\n## How to use\nUse is almost as simple as another tf.Dataset implementation. You just need to create a dataset using the funciton `create_athena_dataset`\n\nno (it follows [aws authentication chain in boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/security.html#identity-and-access-management-intro)).  \n\n```PYTHON\n# imports\nfrom tf_data_athena import create_athena_dataset\n\n# connector parameters\ns3_output_location = \"s3://my-bucket/my-folder/athena-outputs\" # Athena output bucket folder\nwaiting_interval = 0.1 # Time (in seconds) to wait before asking for query state\n\n# query\nquery = \"select * from my_namespace.my_table\"\n\n# create dataset\ndataset = create_athena_dataset(query, s3_output_location)\n```\n\nNow, `dataset` is an instance of `tf.data.Dataset` containing query results.\n\n## Parameters\n\nThen factory funcion `create_athena_dataset` has the following parameters:\n\n* `query`: The query to be ran in athena\n* `s3_output_location`: An s3 path with write access for the current account where the query results file will be saved\n* `waiting_interval`: A float number representing the number of seconds between to wait before ask for query status on athena\n* `num_parallel_calls`: Argument for `tf.data.Dataset.map` (see documentation) while parsing result rows\n* *other named arguments*: Any other named argument will be used on `tf.data.TextLineDataset` constructor, please, see documentation.\n\n## AWS Authorization\nThis library uses [`boto3`](https://github.com/boto/boto3) behind the scenes, then, it follows the same authentication/authorization chain.\nAuthorized user or service needs permission to *create and execute athena queries* and *create and read s3 objects* in the folder defined by `s3_output_location`.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andreclaudino/tf-data-athena", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tf-data-athena", "package_url": "https://pypi.org/project/tf-data-athena/", "platform": "", "project_url": "https://pypi.org/project/tf-data-athena/", "project_urls": {"Homepage": "https://github.com/andreclaudino/tf-data-athena"}, "release_url": "https://pypi.org/project/tf-data-athena/1.0.1/", "requires_dist": ["tensorflow-datasets (==2.1.0)", "tensorflow (==2.1.0)", "boto3 (==1.12.17)"], "requires_python": "", "summary": "An implementation of tf.data.Dataset for aws Athena", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tensorflow Data for AWS Athena</h1>\n<p>An AWS athena library for <code>tensorflow.data.Dataset</code>. If you don't know <code>tf.data</code>, take a look at <a href=\"https://www.tensorflow.org/api_docs/python/tf/data/Dataset\" rel=\"nofollow\">documentation</a> and this <a href=\"https://www.tensorflow.org/guide/data\" rel=\"nofollow\">example</a>.</p>\n<h2>How to use</h2>\n<p>Use is almost as simple as another tf.Dataset implementation. You just need to create a dataset using the funciton <code>create_athena_dataset</code></p>\n<p>no (it follows <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/security.html#identity-and-access-management-intro\" rel=\"nofollow\">aws authentication chain in boto3</a>).</p>\n<pre><span class=\"c1\"># imports</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tf_data_athena</span> <span class=\"kn\">import</span> <span class=\"n\">create_athena_dataset</span>\n\n<span class=\"c1\"># connector parameters</span>\n<span class=\"n\">s3_output_location</span> <span class=\"o\">=</span> <span class=\"s2\">\"s3://my-bucket/my-folder/athena-outputs\"</span> <span class=\"c1\"># Athena output bucket folder</span>\n<span class=\"n\">waiting_interval</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span> <span class=\"c1\"># Time (in seconds) to wait before asking for query state</span>\n\n<span class=\"c1\"># query</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s2\">\"select * from my_namespace.my_table\"</span>\n\n<span class=\"c1\"># create dataset</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">create_athena_dataset</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">s3_output_location</span><span class=\"p\">)</span>\n</pre>\n<p>Now, <code>dataset</code> is an instance of <code>tf.data.Dataset</code> containing query results.</p>\n<h2>Parameters</h2>\n<p>Then factory funcion <code>create_athena_dataset</code> has the following parameters:</p>\n<ul>\n<li><code>query</code>: The query to be ran in athena</li>\n<li><code>s3_output_location</code>: An s3 path with write access for the current account where the query results file will be saved</li>\n<li><code>waiting_interval</code>: A float number representing the number of seconds between to wait before ask for query status on athena</li>\n<li><code>num_parallel_calls</code>: Argument for <code>tf.data.Dataset.map</code> (see documentation) while parsing result rows</li>\n<li><em>other named arguments</em>: Any other named argument will be used on <code>tf.data.TextLineDataset</code> constructor, please, see documentation.</li>\n</ul>\n<h2>AWS Authorization</h2>\n<p>This library uses <a href=\"https://github.com/boto/boto3\" rel=\"nofollow\"><code>boto3</code></a> behind the scenes, then, it follows the same authentication/authorization chain.\nAuthorized user or service needs permission to <em>create and execute athena queries</em> and <em>create and read s3 objects</em> in the folder defined by <code>s3_output_location</code>.</p>\n\n          </div>"}, "last_serial": 6801888, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "398a504eccdbee4cb77c3de4b966faf0", "sha256": "3259183c5c9f5468eb6bf6e30bb8b6db642f8b2e4746fa822a18d5d2a1db87e1"}, "downloads": -1, "filename": "tf_data_athena-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "398a504eccdbee4cb77c3de4b966faf0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2874, "upload_time": "2020-03-12T21:16:01", "upload_time_iso_8601": "2020-03-12T21:16:01.674607Z", "url": "https://files.pythonhosted.org/packages/6e/30/23147f06c4a11b5f2f34c34138223afefdc05d21087aece338dedbd7a215/tf_data_athena-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24e2b6c3af2093a28f94635bc7f18a2c", "sha256": "0fc4809d3c4d6b76e6e48266bc25d114c47a80020db1bfecd7969a0281c886aa"}, "downloads": -1, "filename": "tf-data-athena-1.0.0.tar.gz", "has_sig": false, "md5_digest": "24e2b6c3af2093a28f94635bc7f18a2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3088, "upload_time": "2020-03-12T21:16:03", "upload_time_iso_8601": "2020-03-12T21:16:03.876866Z", "url": "https://files.pythonhosted.org/packages/88/9b/0157b17c29362db58a69a759f4a27d0a402b3d7c571467e8ea665a9e1cff/tf-data-athena-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "120ef3ccab52a0916f9633ed57dab1c2", "sha256": "b3908cdb8b9a8e39c30f726e1fc618a9b14db85ec700b20e1ee43f5f543be417"}, "downloads": -1, "filename": "tf_data_athena-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "120ef3ccab52a0916f9633ed57dab1c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7331, "upload_time": "2020-03-12T21:37:11", "upload_time_iso_8601": "2020-03-12T21:37:11.573432Z", "url": "https://files.pythonhosted.org/packages/27/2b/29bfe9e64943591fe55c53e44ca46a48217ff88d859c1edcb2150b29fd10/tf_data_athena-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de3f881446156b10700ce690e5d8d771", "sha256": "500e09993a437fcd81486253380745e80953a14c7228431820dfc558c4a088e9"}, "downloads": -1, "filename": "tf-data-athena-1.0.1.tar.gz", "has_sig": false, "md5_digest": "de3f881446156b10700ce690e5d8d771", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4980, "upload_time": "2020-03-12T21:37:12", "upload_time_iso_8601": "2020-03-12T21:37:12.726379Z", "url": "https://files.pythonhosted.org/packages/c3/00/75f619656927b6c0e9b8008f2a43b73b7e6e6b198e1052320f6d31381bf5/tf-data-athena-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "120ef3ccab52a0916f9633ed57dab1c2", "sha256": "b3908cdb8b9a8e39c30f726e1fc618a9b14db85ec700b20e1ee43f5f543be417"}, "downloads": -1, "filename": "tf_data_athena-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "120ef3ccab52a0916f9633ed57dab1c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7331, "upload_time": "2020-03-12T21:37:11", "upload_time_iso_8601": "2020-03-12T21:37:11.573432Z", "url": "https://files.pythonhosted.org/packages/27/2b/29bfe9e64943591fe55c53e44ca46a48217ff88d859c1edcb2150b29fd10/tf_data_athena-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de3f881446156b10700ce690e5d8d771", "sha256": "500e09993a437fcd81486253380745e80953a14c7228431820dfc558c4a088e9"}, "downloads": -1, "filename": "tf-data-athena-1.0.1.tar.gz", "has_sig": false, "md5_digest": "de3f881446156b10700ce690e5d8d771", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4980, "upload_time": "2020-03-12T21:37:12", "upload_time_iso_8601": "2020-03-12T21:37:12.726379Z", "url": "https://files.pythonhosted.org/packages/c3/00/75f619656927b6c0e9b8008f2a43b73b7e6e6b198e1052320f6d31381bf5/tf-data-athena-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:40 2020"}