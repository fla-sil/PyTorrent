{"info": {"author": "LeafStorm/Pacific Science", "author_email": "pacsciadmin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.5", "Topic :: Software Development :: User Interfaces"], "description": "I/O ToolKit (IOTk)\n==================\nIOTk is a set of functions that make it easy to display output and get input\nfrom the command line.\n\nInput Functions\n---------------\n``ask_string``\n    Gets a string value from the user.\n``ask_int``\n    Asks the user for a value and makes sure that it's an integer.\n``ask_yes_no``\n    Checks for \"yes\" or \"no\" against 8 languages, plus plain old \"y\" and \"n\".\n``ask_filename``\n    Asks the user for a filename, then verifies that it exists.\n``ask_folder``\n    Asks the user for a folder name, then verifies that it exists.\n``ask_regex``\n    Gets a string from the user and verifies it against a regular expression.\n    It can be supplied a custom invalidation message so the user doesn't see\n    \"Must match the regular expression: \" followed by a bunch of apparently\n    random characters and stop using your program out of frustration.\n\n\nOutput Functions\n----------------\n``get_columns``\n    If the ``COLUMNS`` environment variable is set, this will take it. If not,\n    it assumes 80.\n``print_dict``\n    Prints the keys and values in a dictionary, with incredibly flexible\n    formatting options.\n``print_list``\n    Prints the items in a list, with the same formatting options as\n    ``print_dict``.\n``wrap_str``\n    A powerful word-wrapping function that will wrap words to a certain number\n    of columns.\n``print_string``\n    A thick wrapper around ``wrap_str`` that provides alignment and fill\n    options.\n``print_header``\n    Writes a line of text and underlines it.\n``trim_docstring``\n    The famous implementation from PEP 257, this will strip leading whitespace\n    from a docstring.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pac-sci.homeip.net/index.cgi/swproj/iotk", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "IOTk", "package_url": "https://pypi.org/project/IOTk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/IOTk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pac-sci.homeip.net/index.cgi/swproj/iotk"}, "release_url": "https://pypi.org/project/IOTk/1.1/", "requires_dist": null, "requires_python": null, "summary": "A set of input and output functions for the command line.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>IOTk is a set of functions that make it easy to display output and get input\nfrom the command line.</p>\n<div id=\"input-functions\">\n<h2>Input Functions</h2>\n<dl>\n<dt><tt>ask_string</tt></dt>\n<dd>Gets a string value from the user.</dd>\n<dt><tt>ask_int</tt></dt>\n<dd>Asks the user for a value and makes sure that it\u2019s an integer.</dd>\n<dt><tt>ask_yes_no</tt></dt>\n<dd>Checks for \u201cyes\u201d or \u201cno\u201d against 8 languages, plus plain old \u201cy\u201d and \u201cn\u201d.</dd>\n<dt><tt>ask_filename</tt></dt>\n<dd>Asks the user for a filename, then verifies that it exists.</dd>\n<dt><tt>ask_folder</tt></dt>\n<dd>Asks the user for a folder name, then verifies that it exists.</dd>\n<dt><tt>ask_regex</tt></dt>\n<dd>Gets a string from the user and verifies it against a regular expression.\nIt can be supplied a custom invalidation message so the user doesn\u2019t see\n\u201cMust match the regular expression: \u201d followed by a bunch of apparently\nrandom characters and stop using your program out of frustration.</dd>\n</dl>\n</div>\n<div id=\"output-functions\">\n<h2>Output Functions</h2>\n<dl>\n<dt><tt>get_columns</tt></dt>\n<dd>If the <tt>COLUMNS</tt> environment variable is set, this will take it. If not,\nit assumes 80.</dd>\n<dt><tt>print_dict</tt></dt>\n<dd>Prints the keys and values in a dictionary, with incredibly flexible\nformatting options.</dd>\n<dt><tt>print_list</tt></dt>\n<dd>Prints the items in a list, with the same formatting options as\n<tt>print_dict</tt>.</dd>\n<dt><tt>wrap_str</tt></dt>\n<dd>A powerful word-wrapping function that will wrap words to a certain number\nof columns.</dd>\n<dt><tt>print_string</tt></dt>\n<dd>A thick wrapper around <tt>wrap_str</tt> that provides alignment and fill\noptions.</dd>\n<dt><tt>print_header</tt></dt>\n<dd>Writes a line of text and underlines it.</dd>\n<dt><tt>trim_docstring</tt></dt>\n<dd>The famous implementation from PEP 257, this will strip leading whitespace\nfrom a docstring.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 784527, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "66e8747de94b08f53212eca3c6c15f9c", "sha256": "68735abbe2aa283b99489b713bd1aa2156ba363f6438cdd8b950fa53d2009827"}, "downloads": -1, "filename": "IOTk-1.0.tar.gz", "has_sig": false, "md5_digest": "66e8747de94b08f53212eca3c6c15f9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3857, "upload_time": "2008-11-27T23:34:47", "upload_time_iso_8601": "2008-11-27T23:34:47Z", "url": "https://files.pythonhosted.org/packages/6c/c6/60679c4feda827f6a111d545ba0d56b6f6b507b5ffbdb2ce8990020c7111/IOTk-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f97cb76d50108160c102d4c9df569df2", "sha256": "1e39b38ada3731b0f22c933e282e70ddb142a3a8617a29ee0f39e0e2bd1cb895"}, "downloads": -1, "filename": "IOTk-1.1.tar.gz", "has_sig": false, "md5_digest": "f97cb76d50108160c102d4c9df569df2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4609, "upload_time": "2009-01-01T05:02:38", "upload_time_iso_8601": "2009-01-01T05:02:38Z", "url": "https://files.pythonhosted.org/packages/c6/c6/58a0c71fbc2cadda5c353884cb30cf58199b5a7060477a33cc28b49932ff/IOTk-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f97cb76d50108160c102d4c9df569df2", "sha256": "1e39b38ada3731b0f22c933e282e70ddb142a3a8617a29ee0f39e0e2bd1cb895"}, "downloads": -1, "filename": "IOTk-1.1.tar.gz", "has_sig": false, "md5_digest": "f97cb76d50108160c102d4c9df569df2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4609, "upload_time": "2009-01-01T05:02:38", "upload_time_iso_8601": "2009-01-01T05:02:38Z", "url": "https://files.pythonhosted.org/packages/c6/c6/58a0c71fbc2cadda5c353884cb30cf58199b5a7060477a33cc28b49932ff/IOTk-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:49 2020"}