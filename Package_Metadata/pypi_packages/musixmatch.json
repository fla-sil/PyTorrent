{"info": {"author": "Luca De Vitis", "author_email": "luca@monkeython.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries"], "description": "Quick start\r\n===========\r\n\r\n1. First thing first, read the documentation at http://developers.musixmatch.com/documentation .\r\n2. Get an api key by signing up at http://developers.musixmatch.com/mmplans .\r\n3. Install the musixmatch package\r\n4. Run the python prompt\r\n\r\n>>> import musixmatch\r\n>>> apikey = '<your-apikey>'\r\n>>> try:\r\n...     chart = musixmatch.ws.track.chart.get(country='it', apikey=apikey)\r\n... except musixmatch.api.Error, e:\r\n...     pass\r\n\r\nIt's that simple. Last, you can brows this documentation and have fun with the other modules.\r\n\r\nBuilding / Installing\r\n=====================\r\n\r\nYou can just use setup.py to build and install python-musixmatch::\r\n\r\n   prompt $ python setup.py bdist_egg\r\n\r\nOnce built, you can use easy_install on the python egg.\r\n\r\nDocumentation\r\n=============\r\nYou can read documentation online_, or generate your own local copy using\r\n`Sphinx`_ trough the setup.py::\r\n\r\n   prompt $ python setup.py build_sphinx\r\n\r\n.. _Sphinx: http://sphinx.pocoo.org\r\n.. _online: http://projects.monkeython.com/musixmatch/python-musixmatch/html/index.html\r\n\r\nUnit testing\r\n============\r\npython-musixmatch comes with some essential unit testing. If you set up\r\n**musixmatch_apikey** environment variable, and have internet connection, you\r\ncan also run some tests on API calls::\r\n\r\n   prompt $ python setup.py test\r\n\r\nCaching support\r\n===============\r\n\r\nApplications using python-musixmatch may take advantage of standard\r\nurllib support for **http_proxy**, so they can just set up the proper\r\nenvironment variable:\r\n\r\nhttp_proxy\r\n   the complete HTTP proxy URL to use in queries.\r\n\r\nConsidering all the available HTTP proxy solutions, I'm reluctant to implement\r\na further caching support. Though i can consider serialization support.\r\n\r\nEnvironment variables\r\n=====================\r\n\r\npython-musixmatch takes advantage of operating system environment to get\r\n**apikey**, **format** and api **version** values to use in API calls:\r\n\r\nmusixmatch_apikey\r\n   the apikey value to use in query strings\r\nmusixmatch_format\r\n   the response message format. For example: json\r\nmusixmatch_wslocation\r\n   the webservice base url. For example: http://api.musixmatch.com/ws/1.1\r\nmusixmatch_apiversion\r\n   the api version to use in queryes. For example: 1.1.\r\n   Use of **musixmatch_apiversion** was deprecated in favour of\r\n   **musixmatch_wslocation**.", "description_content_type": null, "docs_url": "https://pythonhosted.org/musixmatch/", "download_url": "http://projects.monkeython.com/musixmatch/dists", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://projects.monkeython.com/musixmatch", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "musixmatch", "package_url": "https://pypi.org/project/musixmatch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/musixmatch/", "project_urls": {"Download": "http://projects.monkeython.com/musixmatch/dists", "Homepage": "http://projects.monkeython.com/musixmatch"}, "release_url": "https://pypi.org/project/musixmatch/0.9/", "requires_dist": null, "requires_python": null, "summary": "Package to interface with the Musixmatch API", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>First thing first, read the documentation at <a href=\"http://developers.musixmatch.com/documentation\" rel=\"nofollow\">http://developers.musixmatch.com/documentation</a> .</li>\n<li>Get an api key by signing up at <a href=\"http://developers.musixmatch.com/mmplans\" rel=\"nofollow\">http://developers.musixmatch.com/mmplans</a> .</li>\n<li>Install the musixmatch package</li>\n<li>Run the python prompt</li>\n</ol>\n<pre>&gt;&gt;&gt; import musixmatch\n&gt;&gt;&gt; apikey = '&lt;your-apikey&gt;'\n&gt;&gt;&gt; try:\n...     chart = musixmatch.ws.track.chart.get(country='it', apikey=apikey)\n... except musixmatch.api.Error, e:\n...     pass\n</pre>\n<p>It\u2019s that simple. Last, you can brows this documentation and have fun with the other modules.</p>\n</div>\n<div id=\"building-installing\">\n<h2>Building / Installing</h2>\n<p>You can just use setup.py to build and install python-musixmatch:</p>\n<pre>prompt $ python setup.py bdist_egg\n</pre>\n<p>Once built, you can use easy_install on the python egg.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>You can read documentation <a href=\"http://projects.monkeython.com/musixmatch/python-musixmatch/html/index.html\" rel=\"nofollow\">online</a>, or generate your own local copy using\n<a href=\"http://sphinx.pocoo.org\" rel=\"nofollow\">Sphinx</a> trough the setup.py:</p>\n<pre>prompt $ python setup.py build_sphinx\n</pre>\n</div>\n<div id=\"unit-testing\">\n<h2>Unit testing</h2>\n<p>python-musixmatch comes with some essential unit testing. If you set up\n<strong>musixmatch_apikey</strong> environment variable, and have internet connection, you\ncan also run some tests on API calls:</p>\n<pre>prompt $ python setup.py test\n</pre>\n</div>\n<div id=\"caching-support\">\n<h2>Caching support</h2>\n<p>Applications using python-musixmatch may take advantage of standard\nurllib support for <strong>http_proxy</strong>, so they can just set up the proper\nenvironment variable:</p>\n<dl>\n<dt>http_proxy</dt>\n<dd>the complete HTTP proxy URL to use in queries.</dd>\n</dl>\n<p>Considering all the available HTTP proxy solutions, I\u2019m reluctant to implement\na further caching support. Though i can consider serialization support.</p>\n</div>\n<div id=\"environment-variables\">\n<h2>Environment variables</h2>\n<p>python-musixmatch takes advantage of operating system environment to get\n<strong>apikey</strong>, <strong>format</strong> and api <strong>version</strong> values to use in API calls:</p>\n<dl>\n<dt>musixmatch_apikey</dt>\n<dd>the apikey value to use in query strings</dd>\n<dt>musixmatch_format</dt>\n<dd>the response message format. For example: json</dd>\n<dt>musixmatch_wslocation</dt>\n<dd>the webservice base url. For example: <a href=\"http://api.musixmatch.com/ws/1.1\" rel=\"nofollow\">http://api.musixmatch.com/ws/1.1</a></dd>\n<dt>musixmatch_apiversion</dt>\n<dd>the api version to use in queryes. For example: 1.1.\nUse of <strong>musixmatch_apiversion</strong> was deprecated in favour of\n<strong>musixmatch_wslocation</strong>.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 795106, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "b01769fb36bff682e8d07ac711aa4eb7", "sha256": "f31836889455a3a98cd6c1c76d20998d6ec607e54977bb74432026545f44b990"}, "downloads": -1, "filename": "musixmatch-0.9-py2.6.egg", "has_sig": false, "md5_digest": "b01769fb36bff682e8d07ac711aa4eb7", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 34785, "upload_time": "2011-08-11T18:45:03", "upload_time_iso_8601": "2011-08-11T18:45:03.619313Z", "url": "https://files.pythonhosted.org/packages/91/32/84b138629eb0e7e7d063c482c58043bc1ed30bd323f780b449a807e7c63e/musixmatch-0.9-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3fe0380bf1baa0b3ecfd8d08229302", "sha256": "d007aa5ff5cbf51fa00fa2cc35efb5ac24cccb5943bb17a8da74fad5fff9770b"}, "downloads": -1, "filename": "musixmatch-0.9-py2.7.egg", "has_sig": false, "md5_digest": "5d3fe0380bf1baa0b3ecfd8d08229302", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 34656, "upload_time": "2011-08-11T18:45:40", "upload_time_iso_8601": "2011-08-11T18:45:40.273404Z", "url": "https://files.pythonhosted.org/packages/af/49/5cd0ede1b1318869059dd155532f1bd363eb2263a97f95bba965d9b77053/musixmatch-0.9-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc1f15ca0e236e243963eaaace1c1cc", "sha256": "aac1c9bf7d9afecc402a5dae130fc4730011110f4912e33342d8e1a4bce6d70d"}, "downloads": -1, "filename": "musixmatch-0.9.tar.gz", "has_sig": false, "md5_digest": "acc1f15ca0e236e243963eaaace1c1cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20568, "upload_time": "2011-08-11T18:45:52", "upload_time_iso_8601": "2011-08-11T18:45:52.195689Z", "url": "https://files.pythonhosted.org/packages/24/88/0323c16ab0bd21f772e7128ccf20bb28360addad02af9442112786c7c6db/musixmatch-0.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6589e9b6463910c3d07160be9d23be0", "sha256": "1133a8d82626bf002a5899a42d8d7ac1cdcb677a5d9691b62e292a88c203ec87"}, "downloads": -1, "filename": "musixmatch-0.9.zip", "has_sig": false, "md5_digest": "c6589e9b6463910c3d07160be9d23be0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31105, "upload_time": "2011-08-11T18:45:52", "upload_time_iso_8601": "2011-08-11T18:45:52.486618Z", "url": "https://files.pythonhosted.org/packages/08/71/9c10733e7d3d717b26d7e7e3559f9ae300813c9ff76964632cec4fe5cde6/musixmatch-0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b01769fb36bff682e8d07ac711aa4eb7", "sha256": "f31836889455a3a98cd6c1c76d20998d6ec607e54977bb74432026545f44b990"}, "downloads": -1, "filename": "musixmatch-0.9-py2.6.egg", "has_sig": false, "md5_digest": "b01769fb36bff682e8d07ac711aa4eb7", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 34785, "upload_time": "2011-08-11T18:45:03", "upload_time_iso_8601": "2011-08-11T18:45:03.619313Z", "url": "https://files.pythonhosted.org/packages/91/32/84b138629eb0e7e7d063c482c58043bc1ed30bd323f780b449a807e7c63e/musixmatch-0.9-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3fe0380bf1baa0b3ecfd8d08229302", "sha256": "d007aa5ff5cbf51fa00fa2cc35efb5ac24cccb5943bb17a8da74fad5fff9770b"}, "downloads": -1, "filename": "musixmatch-0.9-py2.7.egg", "has_sig": false, "md5_digest": "5d3fe0380bf1baa0b3ecfd8d08229302", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 34656, "upload_time": "2011-08-11T18:45:40", "upload_time_iso_8601": "2011-08-11T18:45:40.273404Z", "url": "https://files.pythonhosted.org/packages/af/49/5cd0ede1b1318869059dd155532f1bd363eb2263a97f95bba965d9b77053/musixmatch-0.9-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc1f15ca0e236e243963eaaace1c1cc", "sha256": "aac1c9bf7d9afecc402a5dae130fc4730011110f4912e33342d8e1a4bce6d70d"}, "downloads": -1, "filename": "musixmatch-0.9.tar.gz", "has_sig": false, "md5_digest": "acc1f15ca0e236e243963eaaace1c1cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20568, "upload_time": "2011-08-11T18:45:52", "upload_time_iso_8601": "2011-08-11T18:45:52.195689Z", "url": "https://files.pythonhosted.org/packages/24/88/0323c16ab0bd21f772e7128ccf20bb28360addad02af9442112786c7c6db/musixmatch-0.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6589e9b6463910c3d07160be9d23be0", "sha256": "1133a8d82626bf002a5899a42d8d7ac1cdcb677a5d9691b62e292a88c203ec87"}, "downloads": -1, "filename": "musixmatch-0.9.zip", "has_sig": false, "md5_digest": "c6589e9b6463910c3d07160be9d23be0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31105, "upload_time": "2011-08-11T18:45:52", "upload_time_iso_8601": "2011-08-11T18:45:52.486618Z", "url": "https://files.pythonhosted.org/packages/08/71/9c10733e7d3d717b26d7e7e3559f9ae300813c9ff76964632cec4fe5cde6/musixmatch-0.9.zip", "yanked": false}], "timestamp": "Fri May  8 00:50:06 2020"}