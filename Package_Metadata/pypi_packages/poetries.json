{"info": {"author": "Soumasish Goswami", "author_email": "hello@soumasish.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "Poe[Trie]s\n======================\n\n\n## Description\nPoetries provides a thread-safe implementation of a Trie. While not limited, but the most common use case of a Trie is in implementing  auto-completion. The collection type exposes APIs to perform the following operations```add```, ```find``` and ```get_all_words_with_prefix```.\n\n## Dependencies\nPython 3\n\n## Installation\n```\npip install --upgrade poetries\n```\n\n## Usage\n\n```\nfrom poetries.trie import Trie\n\n\ntrie = Trie()\ntrie.add('foobar')              # Adds 'foobar' to the trie\ntrie.find('foo')                # Returns False since the word is not present.\ntrie.add('bar')                 # Adds 'bar' to the trie\ntrie.find('bar')                # Returns True\ntrie.add('foob')                # Adds 'foob' to the trie\ntrie.add('foof')                # Adds 'foof' to the trie\narr = list(trie.prefix('foo'))  # Returns the list of words beginning with foo in a list form, ['foobar', 'foo', 'foob', 'foof']\n\n```\n\n## License\nMIT\n\n## Changelog\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/soumasish/poetries", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "poetries", "package_url": "https://pypi.org/project/poetries/", "platform": "", "project_url": "https://pypi.org/project/poetries/", "project_urls": {"Homepage": "https://github.com/soumasish/poetries"}, "release_url": "https://pypi.org/project/poetries/1.0.0/", "requires_dist": ["readerwriterlock"], "requires_python": "", "summary": "A thread safe implementation of a Trie.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Poe[Trie]s</h1>\n<h2>Description</h2>\n<p>Poetries provides a thread-safe implementation of a Trie. While not limited, but the most common use case of a Trie is in implementing  auto-completion. The collection type exposes APIs to perform the following operations<code>add</code>, <code>find</code> and <code>get_all_words_with_prefix</code>.</p>\n<h2>Dependencies</h2>\n<p>Python 3</p>\n<h2>Installation</h2>\n<pre><code>pip install --upgrade poetries\n</code></pre>\n<h2>Usage</h2>\n<pre><code>from poetries.trie import Trie\n\n\ntrie = Trie()\ntrie.add('foobar')              # Adds 'foobar' to the trie\ntrie.find('foo')                # Returns False since the word is not present.\ntrie.add('bar')                 # Adds 'bar' to the trie\ntrie.find('bar')                # Returns True\ntrie.add('foob')                # Adds 'foob' to the trie\ntrie.add('foof')                # Adds 'foof' to the trie\narr = list(trie.prefix('foo'))  # Returns the list of words beginning with foo in a list form, ['foobar', 'foo', 'foob', 'foof']\n\n</code></pre>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Changelog</h2>\n\n          </div>"}, "last_serial": 6231431, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "51b7ba1c5776401bc58fe75463832f6b", "sha256": "316dbb5004194fbbd21e03f93a756bcba842bcc30deedd4a911dcc7f5392ab08"}, "downloads": -1, "filename": "poetries-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51b7ba1c5776401bc58fe75463832f6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2857, "upload_time": "2019-12-03T00:03:24", "upload_time_iso_8601": "2019-12-03T00:03:24.381639Z", "url": "https://files.pythonhosted.org/packages/e7/0b/3b217ecccb3a21792006a1cabdfa0acbe01849247a3d3459eb8ef7daf236/poetries-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec77b67837426064c48cf07625c3ded2", "sha256": "667924709cc7bb66e0fee6152094cb1988812323b3ca6726a04a963dc1529bf7"}, "downloads": -1, "filename": "poetries-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ec77b67837426064c48cf07625c3ded2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2176, "upload_time": "2019-12-03T00:03:26", "upload_time_iso_8601": "2019-12-03T00:03:26.734402Z", "url": "https://files.pythonhosted.org/packages/c0/b9/d5f50d57cd1a1b1d89131c9755cbb4955be69cfb2873beb905c6117d8e0b/poetries-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51b7ba1c5776401bc58fe75463832f6b", "sha256": "316dbb5004194fbbd21e03f93a756bcba842bcc30deedd4a911dcc7f5392ab08"}, "downloads": -1, "filename": "poetries-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51b7ba1c5776401bc58fe75463832f6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2857, "upload_time": "2019-12-03T00:03:24", "upload_time_iso_8601": "2019-12-03T00:03:24.381639Z", "url": "https://files.pythonhosted.org/packages/e7/0b/3b217ecccb3a21792006a1cabdfa0acbe01849247a3d3459eb8ef7daf236/poetries-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec77b67837426064c48cf07625c3ded2", "sha256": "667924709cc7bb66e0fee6152094cb1988812323b3ca6726a04a963dc1529bf7"}, "downloads": -1, "filename": "poetries-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ec77b67837426064c48cf07625c3ded2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2176, "upload_time": "2019-12-03T00:03:26", "upload_time_iso_8601": "2019-12-03T00:03:26.734402Z", "url": "https://files.pythonhosted.org/packages/c0/b9/d5f50d57cd1a1b1d89131c9755cbb4955be69cfb2873beb905c6117d8e0b/poetries-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:05 2020"}