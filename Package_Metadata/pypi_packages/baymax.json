{"info": {"author": "Dima Moroz", "author_email": "me@dimamoroz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "Baymax, a simple telegram bot framework on top of Python asyncio\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWork in progress\n\nRequirements\n~~~~~~~~~~~~\n\n-  Python 3.7 or higher\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: bash\n\n    pip install baymax\n\nBasic usage example\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from baymax.bot import Bot\n\n    bot = Bot('token')\n\n    @bot.on('/start')\n    async def start_handler(message):\n        await bot.reply(message, 'Welcome!')\n\n    bot.run()\n\nMiddleware example\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    @bot.middleware\n    async def message_logging_middleware(raw_update):\n        bot.logger.info('New update received: %s', raw_update['update_id'])\n\n..\n\n    NOTE: All middleware functions should be coroutines for now, even if\n    they do not have asynchronous actions.\n\nReply keyboard markup example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from baymax.markups import KeyboardButton, ReplyKeyboardMarkup\n\n    @bot.on('/rate')\n    async def rate_handler(message):\n        await bot.reply(message, 'Rate me', reply_markup=ReplyKeyboardMarkup(\n            [\n                [\n                    KeyboardButton('\u2b50\ufe0f'),\n                    KeyboardButton('\u2b50\ufe0f\u2b50\ufe0f'),\n                    KeyboardButton('\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f')\n                ]\n            ], resize_keyboard=True, one_time_keyboard=True))\n\n..\n\n    NOTE: Reply markup API / objects will be changing, they are far from\n    good now.\n\n\nRunning tests\n~~~~~~~~~~~~~\n\n.. code:: bash\n\n    git clone git@github.com:dmrz/baymax.git\n    pip install -e .\n    pip install -r requirements-test.txt\n    pytest\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmrz/baymax", "keywords": "telegram bot asyncio", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "baymax", "package_url": "https://pypi.org/project/baymax/", "platform": "", "project_url": "https://pypi.org/project/baymax/", "project_urls": {"Homepage": "https://github.com/dmrz/baymax"}, "release_url": "https://pypi.org/project/baymax/0.0.5/", "requires_dist": ["aiodns (==2.0.0)", "aiohttp (==3.5.4)", "async-timeout (==3.0.1)", "colorlog (==4.0.2)", "uvloop (==0.12.2)"], "requires_python": ">=3.7", "summary": "A simple telegram bot framework on top of Python asyncio", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"baymax-a-simple-telegram-bot-framework-on-top-of-python-asyncio\">\n<h2>Baymax, a simple telegram bot framework on top of Python asyncio</h2>\n<p>Work in progress</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.7 or higher</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install baymax\n</pre>\n</div>\n<div id=\"basic-usage-example\">\n<h2>Basic usage example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">baymax.bot</span> <span class=\"kn\">import</span> <span class=\"n\">Bot</span>\n\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">Bot</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@bot</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'/start'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">start_handler</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">await</span> <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"s1\">'Welcome!'</span><span class=\"p\">)</span>\n\n<span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"middleware-example\">\n<h2>Middleware example</h2>\n<pre><span class=\"nd\">@bot</span><span class=\"o\">.</span><span class=\"n\">middleware</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">message_logging_middleware</span><span class=\"p\">(</span><span class=\"n\">raw_update</span><span class=\"p\">):</span>\n    <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'New update received: </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">raw_update</span><span class=\"p\">[</span><span class=\"s1\">'update_id'</span><span class=\"p\">])</span>\n</pre>\n<blockquote>\nNOTE: All middleware functions should be coroutines for now, even if\nthey do not have asynchronous actions.</blockquote>\n</div>\n<div id=\"reply-keyboard-markup-example\">\n<h2>Reply keyboard markup example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">baymax.markups</span> <span class=\"kn\">import</span> <span class=\"n\">KeyboardButton</span><span class=\"p\">,</span> <span class=\"n\">ReplyKeyboardMarkup</span>\n\n<span class=\"nd\">@bot</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'/rate'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">rate_handler</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">await</span> <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"s1\">'Rate me'</span><span class=\"p\">,</span> <span class=\"n\">reply_markup</span><span class=\"o\">=</span><span class=\"n\">ReplyKeyboardMarkup</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">KeyboardButton</span><span class=\"p\">(</span><span class=\"s1\">'\u2b50\ufe0f'</span><span class=\"p\">),</span>\n                <span class=\"n\">KeyboardButton</span><span class=\"p\">(</span><span class=\"s1\">'\u2b50\ufe0f\u2b50\ufe0f'</span><span class=\"p\">),</span>\n                <span class=\"n\">KeyboardButton</span><span class=\"p\">(</span><span class=\"s1\">'\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f'</span><span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">],</span> <span class=\"n\">resize_keyboard</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">one_time_keyboard</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<blockquote>\nNOTE: Reply markup API / objects will be changing, they are far from\ngood now.</blockquote>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<pre>git clone git@github.com:dmrz/baymax.git\npip install -e .\npip install -r requirements-test.txt\npytest\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5204150, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a639e9d01af450743abf3efb960ec4f4", "sha256": "a72a91ab08fce5ece1621ab794511740953dcc2854554986dc2ae2b78081c2de"}, "downloads": -1, "filename": "baymax-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a639e9d01af450743abf3efb960ec4f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 6582, "upload_time": "2018-01-27T14:01:56", "upload_time_iso_8601": "2018-01-27T14:01:56.773795Z", "url": "https://files.pythonhosted.org/packages/82/7a/9f54e10793576bc8e5e7264c0da63a31ee458bf6e106f3b1004a5fe8db4a/baymax-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "769a1ec00b92dd3c9e573a3d637f042a", "sha256": "e72002bfa8942f3a0b72f09eb659d3b281bedf3cb03908e4c8b04184602b07ea"}, "downloads": -1, "filename": "baymax-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "769a1ec00b92dd3c9e573a3d637f042a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7680, "upload_time": "2018-01-27T14:20:48", "upload_time_iso_8601": "2018-01-27T14:20:48.614227Z", "url": "https://files.pythonhosted.org/packages/3a/5c/1e84d9b6c238a8aefc9d5827a9b023e103924df53e0d1b049bef10673cad/baymax-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "94d23eeb50396dcf21a0dc4cbd9a19b6", "sha256": "646a194299fd059e1c12346f5316590e49324effcc09105a89db097d54c8c471"}, "downloads": -1, "filename": "baymax-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "94d23eeb50396dcf21a0dc4cbd9a19b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7678, "upload_time": "2018-01-27T14:22:31", "upload_time_iso_8601": "2018-01-27T14:22:31.134496Z", "url": "https://files.pythonhosted.org/packages/1e/1a/76a0ff3b3c7380c88a3538c49c359fa33b1d20723f77df3b78e771aefc1a/baymax-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0c4cb81cc1876d24213f66f6c56cb594", "sha256": "d28406789aed4fe16ea3cd859055e7ef63a3165d74342f4428f627f03c95b871"}, "downloads": -1, "filename": "baymax-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c4cb81cc1876d24213f66f6c56cb594", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7686, "upload_time": "2018-01-28T15:31:44", "upload_time_iso_8601": "2018-01-28T15:31:44.460786Z", "url": "https://files.pythonhosted.org/packages/ca/4a/def551e76383d36d92443ef6af715ffb808b6bbbdbaf81cbda8c63f3c17a/baymax-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "015bb70c7757e978ef8e37b370d7d559", "sha256": "5965641222d08a2b03653ba1720d3947d4144d1c6af8760727fd08339e38ea27"}, "downloads": -1, "filename": "baymax-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "015bb70c7757e978ef8e37b370d7d559", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8085, "upload_time": "2018-02-01T20:36:14", "upload_time_iso_8601": "2018-02-01T20:36:14.331996Z", "url": "https://files.pythonhosted.org/packages/ce/b6/80c53f91885934df54b72e3a2fd6efc4960a0f16fcb8a4c8d030cb06998d/baymax-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "95af53b08d263c34d553023ee32f1f49", "sha256": "afaac70735bf2d358609c74ca97d704814b27ee7913d7c798ebd2f92ee303113"}, "downloads": -1, "filename": "baymax-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "95af53b08d263c34d553023ee32f1f49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9654, "upload_time": "2019-04-29T17:07:45", "upload_time_iso_8601": "2019-04-29T17:07:45.770867Z", "url": "https://files.pythonhosted.org/packages/c6/c2/b826bf0a9429c6cf9811fa777abda82daf48103b03205a1f76afdfcaf1b0/baymax-0.0.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95af53b08d263c34d553023ee32f1f49", "sha256": "afaac70735bf2d358609c74ca97d704814b27ee7913d7c798ebd2f92ee303113"}, "downloads": -1, "filename": "baymax-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "95af53b08d263c34d553023ee32f1f49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9654, "upload_time": "2019-04-29T17:07:45", "upload_time_iso_8601": "2019-04-29T17:07:45.770867Z", "url": "https://files.pythonhosted.org/packages/c6/c2/b826bf0a9429c6cf9811fa777abda82daf48103b03205a1f76afdfcaf1b0/baymax-0.0.5-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:14:41 2020"}