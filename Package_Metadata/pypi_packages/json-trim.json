{"info": {"author": "fahad", "author_email": "fahadsiddiqui707@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3"], "description": "django-jsonfield\n----------------\n\ndjango-jsonfield is a reusable Django field that allows you to store validated JSON in your model.\n\nIt silently takes care of serialization. To use, simply add the field to one of your models.\n\n**New: Python 3 & Django 1.7 supported!**\n\n**PostgreSQL?: Use https://github.com/bradjasper/django-jsonfield/tree/postgresql for now**\n\nInstall\n-------\n\n.. code-block:: python\n\n    pip install jsonfield\n\n\nUsage\n-----\n\n.. code-block:: python\n\n    from django.db import models\n    from jsonfield import JSONField\n\n    class MyModel(models.Model):\n      json = JSONField()\n\nAdvanced Usage\n--------------\n\nBy default python deserializes json into dict objects. This behavior differs from the standard json behavior because python dicts do not have ordered keys.\n\nTo overcome this limitation and keep the sort order of OrderedDict keys the deserialisation can be adjusted on model initialisation:\n\n.. code-block:: python\n\n    import collections\n    class MyModel(models.Model):\n      json = JSONField(load_kwargs={'object_pairs_hook': collections.OrderedDict})\n\n\nOther Fields\n------------\n\n**jsonfield.JSONCharField**\n\nIf you need to use your JSON field in an index or other constraint, you can use **JSONCharField** which subclasses **CharField** instead of **TextField**. You'll also need to specify a **max_length** parameter if you use this field.\n\n\nCompatibility\n--------------\n\ndjango-jsonfield supports Python 2.7-Python 3.3 and Django 1.4+\n\n**Why doesn't it support Python 2.6?**\n\nYou actually might be OK if you don't use an OrderedDict, but there are some issues with the simplejson API that make it cumbersome to support.\n\n**Why doesn't it support Django 1.3?**\n\nThere was a bug that could only be fixed by a feature in Django 1.4. `Read More`_ if you're interested in the details.\n\n.. _Read More: https://github.com/bradjasper/django-jsonfield/issues/33\n\n\nTravis CI\n---------\n\n.. image:: https://travis-ci.org/bradjasper/django-jsonfield.png?branch=master\n\n\nContact\n-------\nWeb: http://bradjasper.com\n\nTwitter: `@bradjasper`_\n\nEmail: `contact@bradjasper.com`_\n\n\n\n.. _contact@bradjasper.com: mailto:contact@bradjasper.com\n.. _@bradjasper: https://twitter.com/bradjasper\n\nChanges\n-------\n\nv0.9.23, 9/3/2014 -- Allowed tests to run in older versions of Django\n\nv0.9.22, 7/10/2014 -- Added Django 1.7 support\n\nv0.9.21, 5/26/2014 -- Added better support for Python 3 and tests for regex lookups\n\nv0.9.20, 11/14/2013 -- Fixed load_kwargs on form fields, added Django 1.6 to automated tests\n\nv0.9.19, 09/18/2013 -- Fixed changes to django.six.with_metaclass that broke django-jsonfield for Django 1.6\n\nv0.9.18, 08/23/2013 -- Fixed bugs with South datamigration\n\nv0.9.17, 06/07/2013 -- Fixed bugs in JSONCharField admin form\n\nv0.9.14/15/16, 04/29/2013 -- Python 3 support added!\n\nv0.9.11/12/13, 03/26/2013 -- PyPi changes\n\nv0.9.9/10/11, 03/21/2013 -- PyPi changes\n\nv0.9.8, 03/21/2013 -- Added support for native PostgreSQL JSON data type\n\nv0.9.7, 03/21/2013 -- Fix bug #33 where JSONField didn't correctly store some values inside of\nstrings", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fahadsiddiqui007", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "json-trim", "package_url": "https://pypi.org/project/json-trim/", "platform": "", "project_url": "https://pypi.org/project/json-trim/", "project_urls": {"Homepage": "https://github.com/fahadsiddiqui007"}, "release_url": "https://pypi.org/project/json-trim/0.1/", "requires_dist": null, "requires_python": "", "summary": "A reusable Django field that allows you to store validated JSON in your model.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-jsonfield\">\n<h2>django-jsonfield</h2>\n<p>django-jsonfield is a reusable Django field that allows you to store validated JSON in your model.</p>\n<p>It silently takes care of serialization. To use, simply add the field to one of your models.</p>\n<p><strong>New: Python 3 &amp; Django 1.7 supported!</strong></p>\n<p><strong>PostgreSQL?: Use https://github.com/bradjasper/django-jsonfield/tree/postgresql for now</strong></p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">jsonfield</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jsonfield</span> <span class=\"kn\">import</span> <span class=\"n\">JSONField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n  <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">JSONField</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced Usage</h2>\n<p>By default python deserializes json into dict objects. This behavior differs from the standard json behavior because python dicts do not have ordered keys.</p>\n<p>To overcome this limitation and keep the sort order of OrderedDict keys the deserialisation can be adjusted on model initialisation:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">collections</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n  <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">JSONField</span><span class=\"p\">(</span><span class=\"n\">load_kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'object_pairs_hook'</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">OrderedDict</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"other-fields\">\n<h2>Other Fields</h2>\n<p><strong>jsonfield.JSONCharField</strong></p>\n<p>If you need to use your JSON field in an index or other constraint, you can use <strong>JSONCharField</strong> which subclasses <strong>CharField</strong> instead of <strong>TextField</strong>. You\u2019ll also need to specify a <strong>max_length</strong> parameter if you use this field.</p>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>django-jsonfield supports Python 2.7-Python 3.3 and Django 1.4+</p>\n<p><strong>Why doesn\u2019t it support Python 2.6?</strong></p>\n<p>You actually might be OK if you don\u2019t use an OrderedDict, but there are some issues with the simplejson API that make it cumbersome to support.</p>\n<p><strong>Why doesn\u2019t it support Django 1.3?</strong></p>\n<p>There was a bug that could only be fixed by a feature in Django 1.4. <a href=\"https://github.com/bradjasper/django-jsonfield/issues/33\" rel=\"nofollow\">Read More</a> if you\u2019re interested in the details.</p>\n</div>\n<div id=\"travis-ci\">\n<h2>Travis CI</h2>\n<img alt=\"https://travis-ci.org/bradjasper/django-jsonfield.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5aebc5cab6947117074a6f8828a341e5bb2a2bd/68747470733a2f2f7472617669732d63692e6f72672f627261646a61737065722f646a616e676f2d6a736f6e6669656c642e706e673f6272616e63683d6d6173746572\">\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Web: <a href=\"http://bradjasper.com\" rel=\"nofollow\">http://bradjasper.com</a></p>\n<p>Twitter: <a href=\"https://twitter.com/bradjasper\" rel=\"nofollow\">@bradjasper</a></p>\n<p>Email: <a href=\"mailto:contact%40bradjasper.com\">contact<span>@</span>bradjasper<span>.</span>com</a></p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p>v0.9.23, 9/3/2014 \u2013 Allowed tests to run in older versions of Django</p>\n<p>v0.9.22, 7/10/2014 \u2013 Added Django 1.7 support</p>\n<p>v0.9.21, 5/26/2014 \u2013 Added better support for Python 3 and tests for regex lookups</p>\n<p>v0.9.20, 11/14/2013 \u2013 Fixed load_kwargs on form fields, added Django 1.6 to automated tests</p>\n<p>v0.9.19, 09/18/2013 \u2013 Fixed changes to django.six.with_metaclass that broke django-jsonfield for Django 1.6</p>\n<p>v0.9.18, 08/23/2013 \u2013 Fixed bugs with South datamigration</p>\n<p>v0.9.17, 06/07/2013 \u2013 Fixed bugs in JSONCharField admin form</p>\n<p>v0.9.14/15/16, 04/29/2013 \u2013 Python 3 support added!</p>\n<p>v0.9.11/12/13, 03/26/2013 \u2013 PyPi changes</p>\n<p>v0.9.9/10/11, 03/21/2013 \u2013 PyPi changes</p>\n<p>v0.9.8, 03/21/2013 \u2013 Added support for native PostgreSQL JSON data type</p>\n<p>v0.9.7, 03/21/2013 \u2013 Fix bug #33 where JSONField didn\u2019t correctly store some values inside of\nstrings</p>\n</div>\n\n          </div>"}, "last_serial": 3309540, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8078c2a131d95ab076dd2990af8fbbfb", "sha256": "37ca16fc6fe5498eef11bcc5240b2ba0bf6a4424013ac6d0c99883559e200e00"}, "downloads": -1, "filename": "json-trim-0.1.tar.gz", "has_sig": false, "md5_digest": "8078c2a131d95ab076dd2990af8fbbfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7306, "upload_time": "2017-11-06T14:19:51", "upload_time_iso_8601": "2017-11-06T14:19:51.064890Z", "url": "https://files.pythonhosted.org/packages/3a/1b/b1c540b909d88488cf566a1e44fdd7178a08674ad08370b5f2e1271b6037/json-trim-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8078c2a131d95ab076dd2990af8fbbfb", "sha256": "37ca16fc6fe5498eef11bcc5240b2ba0bf6a4424013ac6d0c99883559e200e00"}, "downloads": -1, "filename": "json-trim-0.1.tar.gz", "has_sig": false, "md5_digest": "8078c2a131d95ab076dd2990af8fbbfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7306, "upload_time": "2017-11-06T14:19:51", "upload_time_iso_8601": "2017-11-06T14:19:51.064890Z", "url": "https://files.pythonhosted.org/packages/3a/1b/b1c540b909d88488cf566a1e44fdd7178a08674ad08370b5f2e1271b6037/json-trim-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:34 2020"}