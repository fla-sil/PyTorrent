{"info": {"author": "Rashtrapathy", "author_email": "rashtrapathy.c@iotium.io", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.5"], "description": "```\n\n _       _   _                 _ _ _     \n(_)     | | (_)               | (_) |    \n _  ___ | |_ _ _   _ _ __ ___ | |_| |__  \n| |/ _ \\| __| | | | | '_ ` _ \\| | | '_ \\ \n| | (_) | |_| | |_| | | | | | | | | |_) |\n|_|\\___/ \\__|_|\\__,_|_| |_| |_|_|_|_.__/ \n\n\n\n```\n\n# Definition and Usage\n\nThe **iotiumlib** module allows you to access ioTium Orchestrator using APIs in Python.\n\n# Download and Install\n\n``pip install iotiumlib==19.11.26``\n\n## Org\n\n``iotiumlib.org.methodname(params)``\n\n| Method        \t| Required Params                       \t| Optional Params                                                 \t|\n|---------------\t|---------------------------------------\t|-----------------------------------------------------------------\t|\n| get           \t| NA                                      \t| org_id                                                          \t|\n| getv2         \t| NA                                    \t| filters                                                         \t|\n| add           \t| org_name, billing_name, billing_email \t| domain_name, timezone, headless_mode, two_factor, vlan_support \t|\n| delete        \t| org_id                                \t|                                                                 \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Node\n\n``iotiumlib.node.methodname(params)``\n\n| Method \t| Required Params                       \t| Optional Params                                         \t|\n|--------\t|---------------------------------------\t|---------------------------------------------------------\t|\n| getv2  \t| NA                                    \t| filters                                                 \t|\n| add    \t| inode_name, serial_number, profile_id \t| standalone_expires, label, data_saving_mode             \t|\n| edit   \t| node_id                               \t| inode_name, label, standalone_expires, data_saving_mode \t|\n| delete \t| node_id                               \t| NA                                                      \t|\n| reboot \t| node_id                               \t| NA                                                      \t|\n| notifications \t| node_id                                      \t| type, filters                                                   \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## PKI\n\n``iotiumlib.pki.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## Profile\n\n``iotiumlib.profile.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Network\n\n``iotiumlib.network.methodname(params)``\n\n\n| Method       \t| Required Params                        \t| Optional Params                                                                                                                                                      \t|\n|--------------\t|----------------------------------------\t|----------------------------------------------------------------------------------------------------------------------------------------------------------------------\t|\n| getv2        \t| NA                                     \t| filters                                                                                                                                                              \t|\n| add          \t| network_name, cidr,  start_ip, node_id \t| gateway_ip, end_ip, label, default_destination, connect_networks, firewall_selector, vlan_id, network_addressing, firewall_policy, service_addressing, static_routes \t|\n| edit         \t| network_id                             \t| network_name, cidr, gateway_ip, start_ip, end_ip, label, default_destination, connect_networks, firewall_selector,  vlan_id, firewall_policy, static_routes          \t|\n| delete       \t| network_id                             \t| firewall_policy, service_addressing, static_routes                                                                                                                   \t|\n| resetcounter \t| network_id                             \t|                                                                                                                                                                      \t|                                                                                  \t|\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Firewall\n\n``iotiumlib.firewall.methodname(params)``\n\n| Method \t| Required Params     \t| Optional Params         \t|\n|--------\t|---------------------\t|-------------------------\t|\n| getv2  \t| NA                  \t| filters                 \t|\n| add    \t| name, org_id, rules \t| label                   \t|\n| edit   \t| firewallgroup_id    \t| name, label, edit_rules \t|\n| delete \t| firewallgroup_id    \t| NA                      \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Service\n\n``iotiumlib.service.methodname(params)``\n\n| Method         \t| Required Params     \t| Optional Params \t|\n|----------------\t|---------------------\t|-----------------\t|\n| getv2          \t| NA                  \t| filters         \t|\n| getv2_template \t| NA                  \t| filters         \t|\n| add            \t| payload             \t|                 \t|\n| edit           \t| service_id, payload \t| NA              \t|\n| delete         \t| service_id          \t| NA              \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Secret\n\n``iotiumlib.secret.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n| add    \t| name, filename  \t| type            \t|\n| edit   \t| secret_id       \t| name, filename  \t|\n| delete \t| secret_id       \t| NA              \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## User\n\n``iotiumlib.user.methodname(params)``\n\n| Method \t| Required Params             \t| Optional Params \t|\n|--------\t|-----------------------------\t|-----------------\t|\n| getv2  \t| NA                          \t| filters         \t|\n| add    \t| name, email, password, role \t| NA        \t    |\n| edit   \t| user_id                     \t| name, role      \t|\n| delete \t| user_id                     \t| NA              \t|\n| notifications \t| NA                                      \t| org_id, node_id, type, filters                                                   \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n``iotiumlib.user.mysubscriptions.methodname(params)``\n\n| Method \t| Required Params          \t| Optional Params                                                \t|\n|--------\t|--------------------------\t|----------------------------------------------------------------\t|\n| getv2  \t| NA                       \t| filters                                                        \t|\n| add    \t| alert_name, type, org_id \t| node_id, include_child, duration pod_id, network_id, tunnel_id \t|\n| delete \t| sub_id                   \t| NA                                                               \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## Package Helper Functions\n\n``iotiumlib.helper.get_resource_id_by_name(resource, argument)``\n\n| Resource                      \t| Argument     \t|\n|-------------------------------\t|--------------\t|\n| iotiumlib.node                \t| node_name    \t|\n| iotiumlib.network             \t| network_name \t|\n| iotiumlib.service             \t| service_name \t|\n| iotiumlib.secret              \t| secret_name  \t|\n| iotiumlib.profile             \t| profile_name \t|\n| iotiumlib.org                 \t| org_name     \t|\n| iotiumlib.firewall            \t| csp_name     \t|\n| iotiumlib.user                \t| user_name    \t|\n| iotiumlib.org.mysubscriptions \t| alert_name   \t|\n\n``iotiumlib.helper.get_resource_name_by_id(resource, argument)``\n\n| Resource                      \t| Argument   \t|\n|-------------------------------\t|------------\t|\n| iotiumlib.node                \t| node_id    \t|\n| iotiumlib.network             \t| network_id \t|\n| iotiumlib.service             \t| pod_id     \t|\n| iotiumlib.secret              \t| secret_id  \t|\n| iotiumlib.profile             \t| profile_id \t|\n| iotiumlib.org                 \t| org_id     \t|\n| iotiumlib.firewall            \t| csp_id     \t|\n| iotiumlib.user                \t| user_id    \t|\n| iotiumlib.org.mysubscriptions \t| alert_id   \t|\n\n\n``iotiumlib.helper.get_all_networks_from_node(name)``\n\n``iotiumlib.helper.get_resource_by_label(resource, labelname)``\n\n### Python example\n\n```python\n\n## Importing the Library\nimport iotiumlib\n\n# Login to Orchestartor\niotiumlib.orch.ip = \"OrchHostIp\" # Orchestrator IP\nrespObj=iotiumlib.orchlogin.login(\"useremail@domain.io\", \"password\")\n\n# Getting the Token\niotiumlib.orch.token = respObj.Response.output['token']\n\n# Get ORG ID for logged in User\niotiumlib.orch.id = iotiumlib.org.get(org_id=None).Response.output['organization']['id']\n\n# Alternate Way to get ORG ID for logged in User\nORG_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.org, \"Org Name\")\n\n# Get PROFILE ID. Options: Edge, Virtual Edge, Virtual\nedge_profile_id = iotiumlib.helper.get_resource_id_by_name(iotiumlib.profile, \"Edge\")\n\n# Get list of Available Serial for Node provision\navail_serial_list = iotiumlib.pki.getv2(filters={\"assigned\":\"false\", \"own\":\"true\"}).Response.output\nfor pki in avail_serial_list:\n    print(pki['id'])\n\n###### Managing Users #######\n# Get User Roles for Your Organization\n#TODO\n\n# Adding a New User\nuserRespObj = iotiumlib.user.add(name=\"User Name\", email=\"email@domain.com\", password=\"Password@1234\", role=\"24c416ab-483c-402a-9b76-69bce4dd97ae\")\n\n# Getting User ID for specfic User\nUSER_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.user, \"User Name\")\n\n# Editing the User for name and role\niotiumlib.user.edit(user_id=USER_ID, role=\"ROLL_ID\")\niotiumlib.user.edit(user_id=USER_ID)\niotiumlib.user.edit(user_id=USER_ID, name=\"New User Name\", role=\"ROLL_ID\")\niotiumlib.user.edit(user_id=USER_ID, name=\"New User Name\")\n\n# Deleting specfic User\niotiumlib.user.delete(user_id=USER_ID)\n\n###### Provising an Edge iNode #######\n# Other avail params: \n# standalone_expires (int) in minutes. Default=0\n# data_saving_mode (string). Default=\"Fast\", Options: \"Slow\", \"Off\"\nrespObj = iotiumlib.node.add(inode_name=\"Node Name\", serial_number=\"pki-id\", profile_id=edge_profile_id, org_id=ORG_ID, label=\"key:value\")\nprint(respObj.Response.output)\n\n# Get Node ID for Node edit/delete/reboot/notifications\nNODE_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.node, \"Node Name\")\n\n# Edit Edge iNode for inode_name, label, standalone_expires, data_saving_mode\nrespObj_e = iotiumlib.node.edit(node_id=NODE_ID)\n\n# Initiate Reboot on specfic Edge iNode\nrespObj_r = iotiumlib.node.reboot(node_id=NODE_ID)\n\n# Delete Edge iNode\nrespObj_d = iotiumlib.node.delete(node_id=NODE_ID)\n\n# List iNode specfic event. Default: All Event. Options: type=node, network, service\n#start_date and end_date are in Epoch Time Stamp format\nrespObj_n = iotiumlib.node.notifications(node_id=NODE_ID)\nrespout = iotiumlib.node.notifications(node_id=NODE_ID, type=\"node\").Response.output\nrespout = iotiumlib.node.notifications(node_id=NODE_ID, type=\"node\", filters={\"start_date\":\"\", \"end_date\":\"\"}).Response.output\n\n\n###### Adding Local Network to Edge iNode #######\niotiumlib.network.add(node_id=NODE_ID, network_name=\"TAN Network\", cidr=\"192.168.0.0/28\", start_ip=\"192.168.0.1\", end_ip=\"192.168.0.14\")\n\n# Get Network ID for Network edit/delete\nTAN_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.network, \"TAN Network\")\n\n# Setting the Default Destination for Local Network to Edge iNode\u2019s WAN Network\niotiumlib.network.edit(network_id=TAN_ID, default_destination=\"WAN_ID\")\n\n# Connecting an Edge iNode Network to a Remote Virtual iNode network\niotiumlib.network.edit(network_id=TAN_ID, connect_networks=[{\"network_id\":\"Remote_Network_Id\", \"node_id\":\"Remote_Node_Id\"}])\n\n# Delete Edge Local Network\niotiumlib.network.delete(network_id=TAN_ID)\n\n###### Using Custom Security Policy #######\niotiumlib.firewall.add(name='FWG', org_id=ORG_ID,\n                        rules=[\n                            {'from_network':'name=TAN Network', 'to_network':'id=\"NETWORK-ID\"', 'protocol':'SSH'},\n                            {'from_network':'label=key:value', 'to_network':'type=wan', 'action':'ALLOW'},\n                            {'from_network':'label=key:value', 'to_network':'type=wan', 'action':'ALLOW', 'priority':'3000'},\n                        ])\n\n###### Using Secrets #######\niotiumlib.secret.add(name=\"Service Secret Name\", filename={'.dockerconfigjson': 'ContentInBase64Format'},type=\"Dockerconfigjson\")\n\niotiumlib.secret.add(name=\"Service Volume Name\", filename=[],type=\"Opaque\")\n\n###### Using Mysubscriptions #######\n#type: NODE_STATE_CHANGE, TUNNEL_STATE_CHANGE, SERVICE_STATE_CHANGE, NODE_IP_CHANGE, NODE_UPGRADE, HEADLESS_EXPIRY, CERT_EXPIRY\n#include_child(bool): True to include child orgs. Scope: ORG level\n#duration(int): default 5min. \n#node_id: Scope: iNode level\n#tunnel_id: for type=TUNNEL_STATE_CHANGE\n#pod_id: for type=SERVICE_STATE_CHANGE\niotiumlib.user.mysubscriptions.add(alert_name=\"Alert Name\", type=\"SERVICE_STATE_CHANGE\", org_id=\"OrgID\")\n\n###### Listing Events #######\n#Default: All Event. Options: type=node, network, service\n#start_date and end_date are in Epoch Time Stamp format\niotiumlib.user.notifications(filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\niotiumlib.user.notifications(node_id=NODE_ID, filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\niotiumlib.user.notifications(org_id=ORG_ID, filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\n\n\n```  \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://iotium.io", "keywords": "", "license": "Iotium | All rights reserved.", "maintainer": "", "maintainer_email": "", "name": "iotiumlib", "package_url": "https://pypi.org/project/iotiumlib/", "platform": "", "project_url": "https://pypi.org/project/iotiumlib/", "project_urls": {"Homepage": "https://iotium.io"}, "release_url": "https://pypi.org/project/iotiumlib/20.4.27/", "requires_dist": null, "requires_python": "", "summary": "ioTium API library", "version": "20.4.27", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre><code>\n _       _   _                 _ _ _     \n(_)     | | (_)               | (_) |    \n _  ___ | |_ _ _   _ _ __ ___ | |_| |__  \n| |/ _ \\| __| | | | | '_ ` _ \\| | | '_ \\ \n| | (_) | |_| | |_| | | | | | | | | |_) |\n|_|\\___/ \\__|_|\\__,_|_| |_| |_|_|_|_.__/ \n\n\n\n</code></pre>\n<h1>Definition and Usage</h1>\n<p>The <strong>iotiumlib</strong> module allows you to access ioTium Orchestrator using APIs in Python.</p>\n<h1>Download and Install</h1>\n<p><code>pip install iotiumlib==19.11.26</code></p>\n<h2>Org</h2>\n<p><code>iotiumlib.org.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>get</td>\n<td>NA</td>\n<td>org_id</td>\n</tr>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>org_name, billing_name, billing_email</td>\n<td>domain_name, timezone, headless_mode, two_factor, vlan_support</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>org_id</td>\n<td></td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Node</h2>\n<p><code>iotiumlib.node.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>inode_name, serial_number, profile_id</td>\n<td>standalone_expires, label, data_saving_mode</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>node_id</td>\n<td>inode_name, label, standalone_expires, data_saving_mode</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>node_id</td>\n<td>NA</td>\n</tr>\n<tr>\n<td>reboot</td>\n<td>node_id</td>\n<td>NA</td>\n</tr>\n<tr>\n<td>notifications</td>\n<td>node_id</td>\n<td>type, filters</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>PKI</h2>\n<p><code>iotiumlib.pki.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Profile</h2>\n<p><code>iotiumlib.profile.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Network</h2>\n<p><code>iotiumlib.network.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>network_name, cidr,  start_ip, node_id</td>\n<td>gateway_ip, end_ip, label, default_destination, connect_networks, firewall_selector, vlan_id, network_addressing, firewall_policy, service_addressing, static_routes</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>network_id</td>\n<td>network_name, cidr, gateway_ip, start_ip, end_ip, label, default_destination, connect_networks, firewall_selector,  vlan_id, firewall_policy, static_routes</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>network_id</td>\n<td>firewall_policy, service_addressing, static_routes</td>\n</tr>\n<tr>\n<td>resetcounter</td>\n<td>network_id</td>\n<td></td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Firewall</h2>\n<p><code>iotiumlib.firewall.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>name, org_id, rules</td>\n<td>label</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>firewallgroup_id</td>\n<td>name, label, edit_rules</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>firewallgroup_id</td>\n<td>NA</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Service</h2>\n<p><code>iotiumlib.service.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>getv2_template</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>payload</td>\n<td></td>\n</tr>\n<tr>\n<td>edit</td>\n<td>service_id, payload</td>\n<td>NA</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>service_id</td>\n<td>NA</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Secret</h2>\n<p><code>iotiumlib.secret.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>name, filename</td>\n<td>type</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>secret_id</td>\n<td>name, filename</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>secret_id</td>\n<td>NA</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>User</h2>\n<p><code>iotiumlib.user.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>name, email, password, role</td>\n<td>NA</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>user_id</td>\n<td>name, role</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>user_id</td>\n<td>NA</td>\n</tr>\n<tr>\n<td>notifications</td>\n<td>NA</td>\n<td>org_id, node_id, type, filters</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<p><code>iotiumlib.user.mysubscriptions.methodname(params)</code></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Required Params</th>\n<th>Optional Params</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getv2</td>\n<td>NA</td>\n<td>filters</td>\n</tr>\n<tr>\n<td>add</td>\n<td>alert_name, type, org_id</td>\n<td>node_id, include_child, duration pod_id, network_id, tunnel_id</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>sub_id</td>\n<td>NA</td>\n</tr></tbody></table>\n<blockquote>\n<p>returns a <strong>Response</strong> Object with all the response data (output, code, formattedOutput).</p>\n</blockquote>\n<h2>Package Helper Functions</h2>\n<p><code>iotiumlib.helper.get_resource_id_by_name(resource, argument)</code></p>\n<table>\n<thead>\n<tr>\n<th>Resource</th>\n<th>Argument</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iotiumlib.node</td>\n<td>node_name</td>\n</tr>\n<tr>\n<td>iotiumlib.network</td>\n<td>network_name</td>\n</tr>\n<tr>\n<td>iotiumlib.service</td>\n<td>service_name</td>\n</tr>\n<tr>\n<td>iotiumlib.secret</td>\n<td>secret_name</td>\n</tr>\n<tr>\n<td>iotiumlib.profile</td>\n<td>profile_name</td>\n</tr>\n<tr>\n<td>iotiumlib.org</td>\n<td>org_name</td>\n</tr>\n<tr>\n<td>iotiumlib.firewall</td>\n<td>csp_name</td>\n</tr>\n<tr>\n<td>iotiumlib.user</td>\n<td>user_name</td>\n</tr>\n<tr>\n<td>iotiumlib.org.mysubscriptions</td>\n<td>alert_name</td>\n</tr></tbody></table>\n<p><code>iotiumlib.helper.get_resource_name_by_id(resource, argument)</code></p>\n<table>\n<thead>\n<tr>\n<th>Resource</th>\n<th>Argument</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iotiumlib.node</td>\n<td>node_id</td>\n</tr>\n<tr>\n<td>iotiumlib.network</td>\n<td>network_id</td>\n</tr>\n<tr>\n<td>iotiumlib.service</td>\n<td>pod_id</td>\n</tr>\n<tr>\n<td>iotiumlib.secret</td>\n<td>secret_id</td>\n</tr>\n<tr>\n<td>iotiumlib.profile</td>\n<td>profile_id</td>\n</tr>\n<tr>\n<td>iotiumlib.org</td>\n<td>org_id</td>\n</tr>\n<tr>\n<td>iotiumlib.firewall</td>\n<td>csp_id</td>\n</tr>\n<tr>\n<td>iotiumlib.user</td>\n<td>user_id</td>\n</tr>\n<tr>\n<td>iotiumlib.org.mysubscriptions</td>\n<td>alert_id</td>\n</tr></tbody></table>\n<p><code>iotiumlib.helper.get_all_networks_from_node(name)</code></p>\n<p><code>iotiumlib.helper.get_resource_by_label(resource, labelname)</code></p>\n<h3>Python example</h3>\n<pre><span class=\"c1\">## Importing the Library</span>\n<span class=\"kn\">import</span> <span class=\"nn\">iotiumlib</span>\n\n<span class=\"c1\"># Login to Orchestartor</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">orch</span><span class=\"o\">.</span><span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"s2\">\"OrchHostIp\"</span> <span class=\"c1\"># Orchestrator IP</span>\n<span class=\"n\">respObj</span><span class=\"o\">=</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">orchlogin</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"useremail@domain.io\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Getting the Token</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">orch</span><span class=\"o\">.</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">respObj</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'token'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get ORG ID for logged in User</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">orch</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'organization'</span><span class=\"p\">][</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Alternate Way to get ORG ID for logged in User</span>\n<span class=\"n\">ORG_ID</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">get_resource_id_by_name</span><span class=\"p\">(</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"p\">,</span> <span class=\"s2\">\"Org Name\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get PROFILE ID. Options: Edge, Virtual Edge, Virtual</span>\n<span class=\"n\">edge_profile_id</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">get_resource_id_by_name</span><span class=\"p\">(</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">,</span> <span class=\"s2\">\"Edge\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get list of Available Serial for Node provision</span>\n<span class=\"n\">avail_serial_list</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">pki</span><span class=\"o\">.</span><span class=\"n\">getv2</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"assigned\"</span><span class=\"p\">:</span><span class=\"s2\">\"false\"</span><span class=\"p\">,</span> <span class=\"s2\">\"own\"</span><span class=\"p\">:</span><span class=\"s2\">\"true\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n<span class=\"k\">for</span> <span class=\"n\">pki</span> <span class=\"ow\">in</span> <span class=\"n\">avail_serial_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pki</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n\n<span class=\"c1\">###### Managing Users #######</span>\n<span class=\"c1\"># Get User Roles for Your Organization</span>\n<span class=\"c1\">#TODO</span>\n\n<span class=\"c1\"># Adding a New User</span>\n<span class=\"n\">userRespObj</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"User Name\"</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"email@domain.com\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"Password@1234\"</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"s2\">\"24c416ab-483c-402a-9b76-69bce4dd97ae\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Getting User ID for specfic User</span>\n<span class=\"n\">USER_ID</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">get_resource_id_by_name</span><span class=\"p\">(</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">\"User Name\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Editing the User for name and role</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">USER_ID</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"s2\">\"ROLL_ID\"</span><span class=\"p\">)</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">USER_ID</span><span class=\"p\">)</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">USER_ID</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"New User Name\"</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"s2\">\"ROLL_ID\"</span><span class=\"p\">)</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">USER_ID</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"New User Name\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Deleting specfic User</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">USER_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###### Provising an Edge iNode #######</span>\n<span class=\"c1\"># Other avail params: </span>\n<span class=\"c1\"># standalone_expires (int) in minutes. Default=0</span>\n<span class=\"c1\"># data_saving_mode (string). Default=\"Fast\", Options: \"Slow\", \"Off\"</span>\n<span class=\"n\">respObj</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">inode_name</span><span class=\"o\">=</span><span class=\"s2\">\"Node Name\"</span><span class=\"p\">,</span> <span class=\"n\">serial_number</span><span class=\"o\">=</span><span class=\"s2\">\"pki-id\"</span><span class=\"p\">,</span> <span class=\"n\">profile_id</span><span class=\"o\">=</span><span class=\"n\">edge_profile_id</span><span class=\"p\">,</span> <span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"n\">ORG_ID</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"key:value\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">respObj</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get Node ID for Node edit/delete/reboot/notifications</span>\n<span class=\"n\">NODE_ID</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">get_resource_id_by_name</span><span class=\"p\">(</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"s2\">\"Node Name\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Edit Edge iNode for inode_name, label, standalone_expires, data_saving_mode</span>\n<span class=\"n\">respObj_e</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initiate Reboot on specfic Edge iNode</span>\n<span class=\"n\">respObj_r</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">reboot</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Delete Edge iNode</span>\n<span class=\"n\">respObj_d</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># List iNode specfic event. Default: All Event. Options: type=node, network, service</span>\n<span class=\"c1\">#start_date and end_date are in Epoch Time Stamp format</span>\n<span class=\"n\">respObj_n</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">)</span>\n<span class=\"n\">respout</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"node\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n<span class=\"n\">respout</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"node\"</span><span class=\"p\">,</span> <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"start_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"end_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n\n\n<span class=\"c1\">###### Adding Local Network to Edge iNode #######</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">,</span> <span class=\"n\">network_name</span><span class=\"o\">=</span><span class=\"s2\">\"TAN Network\"</span><span class=\"p\">,</span> <span class=\"n\">cidr</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.0/28\"</span><span class=\"p\">,</span> <span class=\"n\">start_ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.1\"</span><span class=\"p\">,</span> <span class=\"n\">end_ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.14\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get Network ID for Network edit/delete</span>\n<span class=\"n\">TAN_ID</span> <span class=\"o\">=</span> <span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">get_resource_id_by_name</span><span class=\"p\">(</span><span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"p\">,</span> <span class=\"s2\">\"TAN Network\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Setting the Default Destination for Local Network to Edge iNode\u2019s WAN Network</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">network_id</span><span class=\"o\">=</span><span class=\"n\">TAN_ID</span><span class=\"p\">,</span> <span class=\"n\">default_destination</span><span class=\"o\">=</span><span class=\"s2\">\"WAN_ID\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Connecting an Edge iNode Network to a Remote Virtual iNode network</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">network_id</span><span class=\"o\">=</span><span class=\"n\">TAN_ID</span><span class=\"p\">,</span> <span class=\"n\">connect_networks</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">\"network_id\"</span><span class=\"p\">:</span><span class=\"s2\">\"Remote_Network_Id\"</span><span class=\"p\">,</span> <span class=\"s2\">\"node_id\"</span><span class=\"p\">:</span><span class=\"s2\">\"Remote_Node_Id\"</span><span class=\"p\">}])</span>\n\n<span class=\"c1\"># Delete Edge Local Network</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">network_id</span><span class=\"o\">=</span><span class=\"n\">TAN_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###### Using Custom Security Policy #######</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">firewall</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'FWG'</span><span class=\"p\">,</span> <span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"n\">ORG_ID</span><span class=\"p\">,</span>\n                        <span class=\"n\">rules</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                            <span class=\"p\">{</span><span class=\"s1\">'from_network'</span><span class=\"p\">:</span><span class=\"s1\">'name=TAN Network'</span><span class=\"p\">,</span> <span class=\"s1\">'to_network'</span><span class=\"p\">:</span><span class=\"s1\">'id=\"NETWORK-ID\"'</span><span class=\"p\">,</span> <span class=\"s1\">'protocol'</span><span class=\"p\">:</span><span class=\"s1\">'SSH'</span><span class=\"p\">},</span>\n                            <span class=\"p\">{</span><span class=\"s1\">'from_network'</span><span class=\"p\">:</span><span class=\"s1\">'label=key:value'</span><span class=\"p\">,</span> <span class=\"s1\">'to_network'</span><span class=\"p\">:</span><span class=\"s1\">'type=wan'</span><span class=\"p\">,</span> <span class=\"s1\">'action'</span><span class=\"p\">:</span><span class=\"s1\">'ALLOW'</span><span class=\"p\">},</span>\n                            <span class=\"p\">{</span><span class=\"s1\">'from_network'</span><span class=\"p\">:</span><span class=\"s1\">'label=key:value'</span><span class=\"p\">,</span> <span class=\"s1\">'to_network'</span><span class=\"p\">:</span><span class=\"s1\">'type=wan'</span><span class=\"p\">,</span> <span class=\"s1\">'action'</span><span class=\"p\">:</span><span class=\"s1\">'ALLOW'</span><span class=\"p\">,</span> <span class=\"s1\">'priority'</span><span class=\"p\">:</span><span class=\"s1\">'3000'</span><span class=\"p\">},</span>\n                        <span class=\"p\">])</span>\n\n<span class=\"c1\">###### Using Secrets #######</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Service Secret Name\"</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'.dockerconfigjson'</span><span class=\"p\">:</span> <span class=\"s1\">'ContentInBase64Format'</span><span class=\"p\">},</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"Dockerconfigjson\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Service Volume Name\"</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"p\">[],</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"Opaque\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###### Using Mysubscriptions #######</span>\n<span class=\"c1\">#type: NODE_STATE_CHANGE, TUNNEL_STATE_CHANGE, SERVICE_STATE_CHANGE, NODE_IP_CHANGE, NODE_UPGRADE, HEADLESS_EXPIRY, CERT_EXPIRY</span>\n<span class=\"c1\">#include_child(bool): True to include child orgs. Scope: ORG level</span>\n<span class=\"c1\">#duration(int): default 5min. </span>\n<span class=\"c1\">#node_id: Scope: iNode level</span>\n<span class=\"c1\">#tunnel_id: for type=TUNNEL_STATE_CHANGE</span>\n<span class=\"c1\">#pod_id: for type=SERVICE_STATE_CHANGE</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">mysubscriptions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">alert_name</span><span class=\"o\">=</span><span class=\"s2\">\"Alert Name\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"SERVICE_STATE_CHANGE\"</span><span class=\"p\">,</span> <span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"s2\">\"OrgID\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###### Listing Events #######</span>\n<span class=\"c1\">#Default: All Event. Options: type=node, network, service</span>\n<span class=\"c1\">#start_date and end_date are in Epoch Time Stamp format</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"start_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"end_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">},</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"node\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"o\">=</span><span class=\"n\">NODE_ID</span><span class=\"p\">,</span> <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"start_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"end_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">},</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"node\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n<span class=\"n\">iotiumlib</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">notifications</span><span class=\"p\">(</span><span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"n\">ORG_ID</span><span class=\"p\">,</span> <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"start_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"end_date\"</span><span class=\"p\">:</span><span class=\"s2\">\"\"</span><span class=\"p\">},</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"node\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">output</span>\n</pre>\n\n          </div>"}, "last_serial": 7111684, "releases": {"19.11.26": [{"comment_text": "", "digests": {"md5": "4711f206d7c9427780335a06d8a124b0", "sha256": "e7524e34119afd6db083f63da11f902f8d6ff70ae81baead5cdd35297310c19c"}, "downloads": -1, "filename": "iotiumlib-19.11.26-py3-none-any.whl", "has_sig": false, "md5_digest": "4711f206d7c9427780335a06d8a124b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38050, "upload_time": "2019-11-27T11:16:59", "upload_time_iso_8601": "2019-11-27T11:16:59.781742Z", "url": "https://files.pythonhosted.org/packages/30/84/18df70389c4119ff8efba57329943709308b2db70033059e23856c8dc555/iotiumlib-19.11.26-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2960888623afee6e71d2571aed2be3bd", "sha256": "102f0f78b66fcc3335b52f26ca0de7a1bf9526948fe591cf227a4e77e41ff536"}, "downloads": -1, "filename": "iotiumlib-19.11.26.tar.gz", "has_sig": false, "md5_digest": "2960888623afee6e71d2571aed2be3bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27833, "upload_time": "2019-11-27T11:17:03", "upload_time_iso_8601": "2019-11-27T11:17:03.806918Z", "url": "https://files.pythonhosted.org/packages/bd/61/b1b991356e475ba4b1f9203b37587425925fdd44cc379f26bfef8b464672/iotiumlib-19.11.26.tar.gz", "yanked": false}], "19.11.27": [{"comment_text": "", "digests": {"md5": "50f57ceaa201e0d488c76d4a28fd89e8", "sha256": "2845fbb240f047ae178852ae4e8a7786caa6986c98f8ac6f60d19b02c8b31d64"}, "downloads": -1, "filename": "iotiumlib-19.11.27-py3-none-any.whl", "has_sig": false, "md5_digest": "50f57ceaa201e0d488c76d4a28fd89e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38052, "upload_time": "2019-11-27T11:20:18", "upload_time_iso_8601": "2019-11-27T11:20:18.501118Z", "url": "https://files.pythonhosted.org/packages/49/6a/41e87d9c17f4acd1203c23d16dc15ecfd0d06af522cc808b6a50bf0a6dde/iotiumlib-19.11.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caa8d9a4382cc1e1feadef5e10515680", "sha256": "36df4eb650f3c902a56b5821b60320d7cae74f401aee7c31ecf27e39bedc2cb8"}, "downloads": -1, "filename": "iotiumlib-19.11.27.tar.gz", "has_sig": false, "md5_digest": "caa8d9a4382cc1e1feadef5e10515680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24148, "upload_time": "2019-11-27T11:20:21", "upload_time_iso_8601": "2019-11-27T11:20:21.063430Z", "url": "https://files.pythonhosted.org/packages/a2/24/e85ea63ab957029176da541e856d39cf67b0b6afdb1cfbaaa4b6c945e17e/iotiumlib-19.11.27.tar.gz", "yanked": false}], "19.11.28": [{"comment_text": "", "digests": {"md5": "e45822a1b7d5194b9cc733de7745a2d7", "sha256": "a8b59758c5a28b192bbb2b01a6f0969f75306bbf1373f7a11cccd2fad2f551e2"}, "downloads": -1, "filename": "iotiumlib-19.11.28-py3-none-any.whl", "has_sig": false, "md5_digest": "e45822a1b7d5194b9cc733de7745a2d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38198, "upload_time": "2019-12-02T16:48:05", "upload_time_iso_8601": "2019-12-02T16:48:05.854341Z", "url": "https://files.pythonhosted.org/packages/1f/29/40148a68a6e57138bd125464b9e1f597ef1900a8d411493ae19ffd22b49a/iotiumlib-19.11.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44987eff93b0f06d661c004774a8ab7d", "sha256": "93a65a0eb6496a97ed0ceff572c93343571ee86fad234b834584b146c6e1ed13"}, "downloads": -1, "filename": "iotiumlib-19.11.28.tar.gz", "has_sig": false, "md5_digest": "44987eff93b0f06d661c004774a8ab7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24329, "upload_time": "2019-12-02T16:48:08", "upload_time_iso_8601": "2019-12-02T16:48:08.610868Z", "url": "https://files.pythonhosted.org/packages/6a/5a/7b1dd0409687cca21289e09b3c11186118516ff59ebc11707a5e0dfd29a2/iotiumlib-19.11.28.tar.gz", "yanked": false}], "19.12.27": [{"comment_text": "", "digests": {"md5": "ab7cc8afd1cebbfb21aba48ed076618c", "sha256": "30b570185aa7f00eb63f446504206154db77d001807b72e176c91184cf0a2ba9"}, "downloads": -1, "filename": "iotiumlib-19.12.27-py3-none-any.whl", "has_sig": false, "md5_digest": "ab7cc8afd1cebbfb21aba48ed076618c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38482, "upload_time": "2019-12-27T05:11:07", "upload_time_iso_8601": "2019-12-27T05:11:07.898701Z", "url": "https://files.pythonhosted.org/packages/50/f0/6d9caf230c38f44c4c0713a0d25309f02c4c4372ba8933844eaa72a8c6be/iotiumlib-19.12.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed56792772c6b7c509f4a44732585b57", "sha256": "78d6b3402b669d709c01e75929f0ad738da05ecd71b0cdb3e07dba76312bab0f"}, "downloads": -1, "filename": "iotiumlib-19.12.27.tar.gz", "has_sig": false, "md5_digest": "ed56792772c6b7c509f4a44732585b57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24640, "upload_time": "2019-12-27T05:11:10", "upload_time_iso_8601": "2019-12-27T05:11:10.000079Z", "url": "https://files.pythonhosted.org/packages/13/67/5ad979c11288590a1c9fabc7d9f0301ab1e5d9dba1e8af0203ac64b98c33/iotiumlib-19.12.27.tar.gz", "yanked": false}], "20.3.3": [{"comment_text": "", "digests": {"md5": "6c154438e8e935fbcdc977ec91a85c84", "sha256": "377581203abf3e78f592ad2e337e57d07e9e63a65e2c3903c86ae432b3de385a"}, "downloads": -1, "filename": "iotiumlib-20.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6c154438e8e935fbcdc977ec91a85c84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38733, "upload_time": "2020-04-03T05:38:42", "upload_time_iso_8601": "2020-04-03T05:38:42.384498Z", "url": "https://files.pythonhosted.org/packages/33/a3/9bf3a4b16585a3d408bced0f6817acfb70df0612736eadbe21efb09cff9b/iotiumlib-20.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56fdb1a638369a11b95bfed6c4881202", "sha256": "93622a2945ac881f61f64ee086328d558a9ec8a6b73ddc3bd0dcef92e3817254"}, "downloads": -1, "filename": "iotiumlib-20.3.3.tar.gz", "has_sig": false, "md5_digest": "56fdb1a638369a11b95bfed6c4881202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24911, "upload_time": "2020-04-03T05:38:44", "upload_time_iso_8601": "2020-04-03T05:38:44.341814Z", "url": "https://files.pythonhosted.org/packages/05/ce/1403505bc6918441e2d92c07a30e86ccea36ed2e380eff242edda12a2e9f/iotiumlib-20.3.3.tar.gz", "yanked": false}], "20.4.27": [{"comment_text": "", "digests": {"md5": "9335e38ecaac4d2adbd2dd589b803951", "sha256": "026851f17afaee8c9512411d87837776b8756df9a774d4454ee7ba8915fa3045"}, "downloads": -1, "filename": "iotiumlib-20.4.27-py3-none-any.whl", "has_sig": false, "md5_digest": "9335e38ecaac4d2adbd2dd589b803951", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38727, "upload_time": "2020-04-27T13:15:59", "upload_time_iso_8601": "2020-04-27T13:15:59.457960Z", "url": "https://files.pythonhosted.org/packages/ec/3c/e04dce1c3d3ded632991f8057f80ce30a0479bd6e82e0e08be1b18211fe0/iotiumlib-20.4.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae0b92002a34a8578c611a32cfbd6fba", "sha256": "2498676036136cc1695d63d90d2765ae92f4f4b9c875c25469a1b16916e2511c"}, "downloads": -1, "filename": "iotiumlib-20.4.27.tar.gz", "has_sig": false, "md5_digest": "ae0b92002a34a8578c611a32cfbd6fba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24910, "upload_time": "2020-04-27T13:16:01", "upload_time_iso_8601": "2020-04-27T13:16:01.417690Z", "url": "https://files.pythonhosted.org/packages/42/96/bd8f8d39275890bb5527f2fd2ea1d4b72d9a842257b72d87f7267a72ba88/iotiumlib-20.4.27.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9335e38ecaac4d2adbd2dd589b803951", "sha256": "026851f17afaee8c9512411d87837776b8756df9a774d4454ee7ba8915fa3045"}, "downloads": -1, "filename": "iotiumlib-20.4.27-py3-none-any.whl", "has_sig": false, "md5_digest": "9335e38ecaac4d2adbd2dd589b803951", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38727, "upload_time": "2020-04-27T13:15:59", "upload_time_iso_8601": "2020-04-27T13:15:59.457960Z", "url": "https://files.pythonhosted.org/packages/ec/3c/e04dce1c3d3ded632991f8057f80ce30a0479bd6e82e0e08be1b18211fe0/iotiumlib-20.4.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae0b92002a34a8578c611a32cfbd6fba", "sha256": "2498676036136cc1695d63d90d2765ae92f4f4b9c875c25469a1b16916e2511c"}, "downloads": -1, "filename": "iotiumlib-20.4.27.tar.gz", "has_sig": false, "md5_digest": "ae0b92002a34a8578c611a32cfbd6fba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24910, "upload_time": "2020-04-27T13:16:01", "upload_time_iso_8601": "2020-04-27T13:16:01.417690Z", "url": "https://files.pythonhosted.org/packages/42/96/bd8f8d39275890bb5527f2fd2ea1d4b72d9a842257b72d87f7267a72ba88/iotiumlib-20.4.27.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:50 2020"}