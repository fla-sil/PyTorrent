{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": [], "description": "Summary\n-------\nCube for the Brainomics Project, see http://www.brainomics.net/\n\n\nUicfg documentation\n~~~~~~~~~~~~~~~~~~~\n\nIn Brainomics, we have experimented a new function for uicfg that\nallows to display specific rset/information within the 'attributes'\nor 'relations' sections of the primary view.\n\nThe display_rset method of uicfg take 3 arguments:\n\n    * the name of the etype concerned by the rule;\n\n    * the section where the information is displayed (attributes or relations);\n\n    * a dictionnary of properties.\n\nThe dictionnary of properties must have:\n\n   * a 'callback' item OR a 'rql' and a 'vid' items.\n\nThe 'callback' is a function that takes the entity and render an HTML snipet.\n\nThe 'rql' is a rql query where the variable 'X' is the current entity. The 'vid'\nis the __regid__ of the view that will be applied to the result of the rql query.\n\nIt could also have:\n\n   * a 'label' ('' if not given);\n\n   * an 'order' (9999 if not given);\n\nIt should be used as follows, e.g. using an etype property:\n\n  >>> _pvdc = uicfg.primaryview_display_ctrl\n  >>> _pvdc.display_rset('MyEtype', 'attributes',\n                         {'callback': lambda x: x.formatted_description,\n                          'label': _('description')})\n\nor with a 'rql' and 'vid' attributes:\n\n  >>> _pvdc = uicfg.primaryview_display_ctrl\n  >>> _pvdc.display_rset('MyEtype', 'relations',\n                         {'rql': 'Any Z WHERE X relation1 Y, Y relation2 Z',\n                          'vid': 'my-view',\n                          'label': _('My label')})\n\nor with a 'callback' using a view:\n\n\n  >>> _pvdc = uicfg.primaryview_display_ctrl\n  >>> _pvdc.display_rset('MyEtype', 'relations',\n                         {'callback': lambda x: x.view('my-secondary-view'),\n                         'order': 2,\n                         'label': _('My label')})", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/cubicweb-brainomics", "keywords": null, "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "cubicweb-brainomics", "package_url": "https://pypi.org/project/cubicweb-brainomics/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cubicweb-brainomics/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.cubicweb.org/project/cubicweb-brainomics"}, "release_url": "https://pypi.org/project/cubicweb-brainomics/0.12.0/", "requires_dist": null, "requires_python": null, "summary": "Cube for the Brainomics Project, see http://www.brainomics.net/", "version": "0.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Cube for the Brainomics Project, see <a href=\"http://www.brainomics.net/\" rel=\"nofollow\">http://www.brainomics.net/</a></p>\n<div id=\"uicfg-documentation\">\n<h2>Uicfg documentation</h2>\n<p>In Brainomics, we have experimented a new function for uicfg that\nallows to display specific rset/information within the \u2018attributes\u2019\nor \u2018relations\u2019 sections of the primary view.</p>\n<p>The display_rset method of uicfg take 3 arguments:</p>\n<blockquote>\n<ul>\n<li>the name of the etype concerned by the rule;</li>\n<li>the section where the information is displayed (attributes or relations);</li>\n<li>a dictionnary of properties.</li>\n</ul>\n</blockquote>\n<p>The dictionnary of properties must have:</p>\n<blockquote>\n<ul>\n<li>a \u2018callback\u2019 item OR a \u2018rql\u2019 and a \u2018vid\u2019 items.</li>\n</ul>\n</blockquote>\n<p>The \u2018callback\u2019 is a function that takes the entity and render an HTML snipet.</p>\n<p>The \u2018rql\u2019 is a rql query where the variable \u2018X\u2019 is the current entity. The \u2018vid\u2019\nis the __regid__ of the view that will be applied to the result of the rql query.</p>\n<p>It could also have:</p>\n<blockquote>\n<ul>\n<li>a \u2018label\u2019 (\u2018\u2019 if not given);</li>\n<li>an \u2018order\u2019 (9999 if not given);</li>\n</ul>\n</blockquote>\n<p>It should be used as follows, e.g. using an etype property:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; _pvdc = uicfg.primaryview_display_ctrl\n&gt;&gt;&gt; _pvdc.display_rset('MyEtype', 'attributes',\n                       {'callback': lambda x: x.formatted_description,\n                        'label': _('description')})\n</pre>\n</blockquote>\n<p>or with a \u2018rql\u2019 and \u2018vid\u2019 attributes:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; _pvdc = uicfg.primaryview_display_ctrl\n&gt;&gt;&gt; _pvdc.display_rset('MyEtype', 'relations',\n                       {'rql': 'Any Z WHERE X relation1 Y, Y relation2 Z',\n                        'vid': 'my-view',\n                        'label': _('My label')})\n</pre>\n</blockquote>\n<p>or with a \u2018callback\u2019 using a view:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; _pvdc = uicfg.primaryview_display_ctrl\n&gt;&gt;&gt; _pvdc.display_rset('MyEtype', 'relations',\n                       {'callback': lambda x: x.view('my-secondary-view'),\n                       'order': 2,\n                       'label': _('My label')})\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1390468, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "2193d875af35392f7c06c23c7b63fe4f", "sha256": "7e0caad34e390c88060ace90d29c4e01faf32d01f0ec61818f25f4ea932417dc"}, "downloads": -1, "filename": "cubicweb-brainomics-0.10.0.tar.gz", "has_sig": false, "md5_digest": "2193d875af35392f7c06c23c7b63fe4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121711, "upload_time": "2014-06-26T08:18:46", "upload_time_iso_8601": "2014-06-26T08:18:46.205550Z", "url": "https://files.pythonhosted.org/packages/54/ed/11fe3f95d18260253f97b4d934e4da1be77c0aafdf6c03bcf78801e5d764/cubicweb-brainomics-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "cc90c043c3d9046ec45650e2225ee8ff", "sha256": "c1433f2540b2200fa6205c39a31b2bec89335685c5113e294ee19bcaf03a987e"}, "downloads": -1, "filename": "cubicweb-brainomics-0.11.0.tar.gz", "has_sig": false, "md5_digest": "cc90c043c3d9046ec45650e2225ee8ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200887, "upload_time": "2014-06-26T08:39:24", "upload_time_iso_8601": "2014-06-26T08:39:24.418509Z", "url": "https://files.pythonhosted.org/packages/5c/02/593b5b38d862f8193d7dc73d74603c7aaeb8cb0728b71e4eb10a2c09635d/cubicweb-brainomics-0.11.0.tar.gz", "yanked": false}], "0.11.3": [{"comment_text": "", "digests": {"md5": "4ab4d13d3c551b1052d555726ed30066", "sha256": "e2ba0189acb74d461670416f82c89efbdf21900f322b3edf0510fb2797af0ab2"}, "downloads": -1, "filename": "cubicweb-brainomics-0.11.3.tar.gz", "has_sig": false, "md5_digest": "4ab4d13d3c551b1052d555726ed30066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201146, "upload_time": "2014-07-04T12:35:30", "upload_time_iso_8601": "2014-07-04T12:35:30.822532Z", "url": "https://files.pythonhosted.org/packages/11/57/5bbd126567a8877367f377b0b6d7646ed8e6154c82d72678956952398291/cubicweb-brainomics-0.11.3.tar.gz", "yanked": false}], "0.11.4": [{"comment_text": "", "digests": {"md5": "87097ec7eeb669a1c35d61ebf9494192", "sha256": "51e5b9777a72487e43243437ca20d5c99a94365ddbb00482bb75e7e26308c8e1"}, "downloads": -1, "filename": "cubicweb-brainomics-0.11.4.tar.gz", "has_sig": false, "md5_digest": "87097ec7eeb669a1c35d61ebf9494192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201301, "upload_time": "2014-09-24T14:43:33", "upload_time_iso_8601": "2014-09-24T14:43:33.264812Z", "url": "https://files.pythonhosted.org/packages/f8/40/81fcd7838927ff4122322a62c35031b20e3f5e74e5e3f0b3e87f46eec391/cubicweb-brainomics-0.11.4.tar.gz", "yanked": false}], "0.11.5": [{"comment_text": "", "digests": {"md5": "88507a38c343a27496b616cab4f1a913", "sha256": "e2dd2c3ef300d0e8ff29e2f88d7e020acb9c2a24a7533d67615f55df38a37eb0"}, "downloads": -1, "filename": "cubicweb-brainomics-0.11.5.tar.gz", "has_sig": false, "md5_digest": "88507a38c343a27496b616cab4f1a913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201399, "upload_time": "2014-11-25T17:53:16", "upload_time_iso_8601": "2014-11-25T17:53:16.616699Z", "url": "https://files.pythonhosted.org/packages/3f/18/9483ebea07e8ed2fdcf68594847b15947c85a46036b89fc68a1354a11503/cubicweb-brainomics-0.11.5.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "1873d9ac9edafe52938d450512a51ad0", "sha256": "3b62f9876f31ce28c6d47384256447bc2c009bf59d4ecb366b1ef3771f389a1e"}, "downloads": -1, "filename": "cubicweb-brainomics-0.12.0.tar.gz", "has_sig": false, "md5_digest": "1873d9ac9edafe52938d450512a51ad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204905, "upload_time": "2014-10-24T19:03:15", "upload_time_iso_8601": "2014-10-24T19:03:15.297487Z", "url": "https://files.pythonhosted.org/packages/9a/b4/8193d1cdc9951ed9710e4f14b21f279bdd85c0bd43b8dddaba6eb91c77b4/cubicweb-brainomics-0.12.0.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "38d325dc0e5d4b4ada308885b6fe0f82", "sha256": "ddee3b23516258ad264187562c2a447dd84461ca27ec8cb6e4323279469a2dc7"}, "downloads": -1, "filename": "cubicweb-brainomics-0.4.6.tar.gz", "has_sig": false, "md5_digest": "38d325dc0e5d4b4ada308885b6fe0f82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165717, "upload_time": "2014-04-30T12:03:20", "upload_time_iso_8601": "2014-04-30T12:03:20.901862Z", "url": "https://files.pythonhosted.org/packages/8f/0e/e20c9999daa48cb48351d112b958c457a64146459f4a144b586858a529c6/cubicweb-brainomics-0.4.6.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "936e0d06695e42266dd6eb807891f8bf", "sha256": "9e8435791ae08028ab8b00cd213bf3c7c568b6432ee2274018d26244cadda7c5"}, "downloads": -1, "filename": "cubicweb-brainomics-0.8.0.tar.gz", "has_sig": false, "md5_digest": "936e0d06695e42266dd6eb807891f8bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109085, "upload_time": "2014-02-17T09:33:38", "upload_time_iso_8601": "2014-02-17T09:33:38.626232Z", "url": "https://files.pythonhosted.org/packages/12/5b/de2b0b127733ffb2dd12d3113797e16ce1ab142bbf2960eb2749843a3189/cubicweb-brainomics-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "0779e52e039617202f39c408ae27ab56", "sha256": "7be0cf1472a709641b810df68eb9f6a823039e8e362d51bda65ffc9d57c81390"}, "downloads": -1, "filename": "cubicweb-brainomics-0.9.0.tar.gz", "has_sig": false, "md5_digest": "0779e52e039617202f39c408ae27ab56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115242, "upload_time": "2014-04-30T08:33:50", "upload_time_iso_8601": "2014-04-30T08:33:50.750516Z", "url": "https://files.pythonhosted.org/packages/30/3b/fc7d7e081a12ecd98190ccbb731d97bd808a240810ca4e937ba7b008f325/cubicweb-brainomics-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1873d9ac9edafe52938d450512a51ad0", "sha256": "3b62f9876f31ce28c6d47384256447bc2c009bf59d4ecb366b1ef3771f389a1e"}, "downloads": -1, "filename": "cubicweb-brainomics-0.12.0.tar.gz", "has_sig": false, "md5_digest": "1873d9ac9edafe52938d450512a51ad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204905, "upload_time": "2014-10-24T19:03:15", "upload_time_iso_8601": "2014-10-24T19:03:15.297487Z", "url": "https://files.pythonhosted.org/packages/9a/b4/8193d1cdc9951ed9710e4f14b21f279bdd85c0bd43b8dddaba6eb91c77b4/cubicweb-brainomics-0.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:30 2020"}