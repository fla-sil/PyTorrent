{"info": {"author": "Chmouel Boudjnah", "author_email": "chmouel@chmouel.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing", "Topic :: Utilities"], "description": "=========================================\n Python interface to Rackspace Cloud DNS\n=========================================\n\n:Homepage:  https://github.com/chmouel/python-clouddns\n:Credits:   Copyright 2011 Chmouel Boudjnah <chmouel@chmouel.com>\n:Licence:   BSD\n\n\nUsage\n=====\n\nA Rackspace Cloud username and API key are required and can be obtained\nfrom https://mycloud.rackspace.com.  \n\nDomains and records can be found by specifying their name or id.  To\nenable debugging output for the HTTP connection, include the keyword \nargument debuglevel=1.  Additional debugging output is available by\nsetting the 'PYTHON_CLOUDDNS_DEBUG' environment variable.\n\nList all domains::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    for domain in dns.get_domains():\n        print domain.name\n\nCreate a new domain::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    dns.create_domain(name='1234-example.com', ttl=300, \n                      emailAddress='me@you.com')\n\nImport a domain from a BIND zone file or string::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    with open('/tmp/example.com.zone', 'r') as f:\n        dns.import_domain(f)\n\nUpdate a domain::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    domain.update(ttl=600)\n\nDelete a domain::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    dns.delete_domain(domain.id)\n\nList all records for a domain::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    for record in domain.get_records():\n        print '(%s) %s -> %s' % (record.type, record.name, record.data)\n\nCreate new record::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    domain.create_record('www.1234-example.com', '127.0.0.1', 'A')\n\nUpdate a record::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    record = domain.get_record(name='www.1234-example.com')\n    record.update(data='10.1.1.1', ttl=600)\n\nDelete a record::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey')\n\n    domain = dns.get_domain(name='1234-example.com')\n    record = domain.get_record(name='www.1234-example.com')\n    domain.delete_record(record.id)\n\nAlternative Geographic Endpoints\n================================\n\nThe examples above use the default authentication endpoint in the US. For UK\naccounts, you must override the authentication URL::\n\n    #!/usr/bin/env python\n    import clouddns\n    dns = clouddns.connection.Connection('username','apikey',\n                                         authurl=clouddb.consts.uk_authurl)\n  \nGUI\n===\n\nA web based GUI is available here: https://github.com/rackerhacker/rackspace-clouddns-gui", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/chmouel/python-clouddns/zipball/0.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chmouel/python-clouddns", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python-clouddns", "package_url": "https://pypi.org/project/python-clouddns/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-clouddns/", "project_urls": {"Download": "https://github.com/chmouel/python-clouddns/zipball/0.0.0", "Homepage": "https://github.com/chmouel/python-clouddns"}, "release_url": "https://pypi.org/project/python-clouddns/0.0.0/", "requires_dist": null, "requires_python": null, "summary": "Python interface to Rackspace Cloud DNS", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Homepage:</th><td><a href=\"https://github.com/chmouel/python-clouddns\" rel=\"nofollow\">https://github.com/chmouel/python-clouddns</a></td>\n</tr>\n<tr><th>Credits:</th><td>Copyright 2011 Chmouel Boudjnah &lt;<a href=\"mailto:chmouel%40chmouel.com\">chmouel<span>@</span>chmouel<span>.</span>com</a>&gt;</td>\n</tr>\n<tr><th>Licence:</th><td>BSD</td>\n</tr>\n</tbody>\n</table>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>A Rackspace Cloud username and API key are required and can be obtained\nfrom <a href=\"https://mycloud.rackspace.com\" rel=\"nofollow\">https://mycloud.rackspace.com</a>.</p>\n<p>Domains and records can be found by specifying their name or id.  To\nenable debugging output for the HTTP connection, include the keyword\nargument debuglevel=1.  Additional debugging output is available by\nsetting the \u2018PYTHON_CLOUDDNS_DEBUG\u2019 environment variable.</p>\n<p>List all domains:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\nfor domain in dns.get_domains():\n    print domain.name\n</pre>\n<p>Create a new domain:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndns.create_domain(name='1234-example.com', ttl=300,\n                  emailAddress='me@you.com')\n</pre>\n<p>Import a domain from a BIND zone file or string:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\nwith open('/tmp/example.com.zone', 'r') as f:\n    dns.import_domain(f)\n</pre>\n<p>Update a domain:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\ndomain.update(ttl=600)\n</pre>\n<p>Delete a domain:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\ndns.delete_domain(domain.id)\n</pre>\n<p>List all records for a domain:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\nfor record in domain.get_records():\n    print '(%s) %s -&gt; %s' % (record.type, record.name, record.data)\n</pre>\n<p>Create new record:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\ndomain.create_record('www.1234-example.com', '127.0.0.1', 'A')\n</pre>\n<p>Update a record:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\nrecord = domain.get_record(name='www.1234-example.com')\nrecord.update(data='10.1.1.1', ttl=600)\n</pre>\n<p>Delete a record:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey')\n\ndomain = dns.get_domain(name='1234-example.com')\nrecord = domain.get_record(name='www.1234-example.com')\ndomain.delete_record(record.id)\n</pre>\n</div>\n<div id=\"alternative-geographic-endpoints\">\n<h2>Alternative Geographic Endpoints</h2>\n<p>The examples above use the default authentication endpoint in the US. For UK\naccounts, you must override the authentication URL:</p>\n<pre>#!/usr/bin/env python\nimport clouddns\ndns = clouddns.connection.Connection('username','apikey',\n                                     authurl=clouddb.consts.uk_authurl)\n</pre>\n</div>\n<div id=\"gui\">\n<h2>GUI</h2>\n<p>A web based GUI is available here: <a href=\"https://github.com/rackerhacker/rackspace-clouddns-gui\" rel=\"nofollow\">https://github.com/rackerhacker/rackspace-clouddns-gui</a></p>\n</div>\n\n          </div>"}, "last_serial": 770418, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "241c169dba36cb45daad80cc391f235c", "sha256": "e2912044c07e922ffb45e1f9753c9d1dc34afca4776fefacfe6e17e0021ec955"}, "downloads": -1, "filename": "python-clouddns-0.0.0.tar.gz", "has_sig": false, "md5_digest": "241c169dba36cb45daad80cc391f235c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10472, "upload_time": "2013-06-13T21:18:57", "upload_time_iso_8601": "2013-06-13T21:18:57.415037Z", "url": "https://files.pythonhosted.org/packages/04/18/cf4ceb6c7a33bd1a178c33844fe16539c4a3173952bdab702491243c8881/python-clouddns-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "241c169dba36cb45daad80cc391f235c", "sha256": "e2912044c07e922ffb45e1f9753c9d1dc34afca4776fefacfe6e17e0021ec955"}, "downloads": -1, "filename": "python-clouddns-0.0.0.tar.gz", "has_sig": false, "md5_digest": "241c169dba36cb45daad80cc391f235c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10472, "upload_time": "2013-06-13T21:18:57", "upload_time_iso_8601": "2013-06-13T21:18:57.415037Z", "url": "https://files.pythonhosted.org/packages/04/18/cf4ceb6c7a33bd1a178c33844fe16539c4a3173952bdab702491243c8881/python-clouddns-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:23 2020"}