{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# datasette-template-sql\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-template-sql.svg)](https://pypi.org/project/datasette-template-sql/)\n[![CircleCI](https://circleci.com/gh/simonw/datasette-template-sql.svg?style=svg)](https://circleci.com/gh/simonw/datasette-template-sql)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/datasette-template-sql/blob/master/LICENSE)\n\nDatasette plugin for executing SQL queries from templates.\n\n## Examples\n\n[www.niche-museums.com](https://www.niche-museums.com/) uses this plugin to run a custom themed website on top of Datasette. The full source code for the site [is here](https://github.com/simonw/museums) - see also [niche-museums.com, powered by Datasette](https://simonwillison.net/2019/Nov/25/niche-museums/).\n\n[simonw/til](https://github.com/simonw/til) is another simple example, described in [Using a self-rewriting README powered by GitHub Actions to track TILs](https://simonwillison.net/2020/Apr/20/self-rewriting-readme/).\n\n## Installation\n\nRun this command to install the plugin in the same environment as Datasette:\n\n    $ pip install datasette-template-sql\n\n## Usage\n\nThis plugin makes a new function, `sql(sql_query)`, available to your Datasette templates.\n\nYou can use it like this:\n\n```html+jinja\n{% for row in sql(\"select 1 + 1 as two, 2 * 4 as eight\") %}\n    {% for key in row.keys() %}\n        {{ key }}: {{ row[key] }}<br>\n    {% endfor %}\n{% endfor %}\n```\n\nThe plugin will execute SQL against the current database for the page in  `database.html`, `table.html` and `row.html` templates. If a template does not have a current database (`index.html` for example) the query will execute against the first attached database.\n\n### Queries with arguments\n\nYou can construct a SQL query using `?` or `:name` parameter syntax by passing a list or dictionary as a second argument:\n\n```html+jinja\n{% for row in sql(\"select distinct topic from til order by topic\") %}\n    <h2>{{ row.topic }}</h2>\n    <ul>\n        {% for til in sql(\"select * from til where topic = ?\", [row.topic]) %}\n            <li><a href=\"{{ til.url }}\">{{ til.title }}</a> - {{ til.created[:10] }}</li>\n        {% endfor %}\n    </ul>\n{% endfor %}\n```\n\nHere's the same example using the `:topic` style of parameters:\n\n```html+jinja\n{% for row in sql(\"select distinct topic from til order by topic\") %}\n    <h2>{{ row.topic }}</h2>\n    <ul>\n        {% for til in sql(\"select * from til where topic = :topic\", {\"topic\": row.topic}) %}\n            <li><a href=\"{{ til.url }}\">{{ til.title }}</a> - {{ til.created[:10] }}</li>\n        {% endfor %}\n    </ul>\n{% endfor %}\n```\n\n### Querying a different database\n\nYou can pass an optional `database=` argument to specify a named database to use for the query. For example, if you have attached a `news.db` database you could use this:\n\n```html+jinja\n{% for article in sql(\n    \"select headline, date, summary from articles order by date desc limit 5\",\n    database=\"news\"\n) %}\n    <h3>{{ article.headline }}</h2>\n    <p class=\"date\">{{ article.date }}</p>\n    <p>{{ article.summary }}</p>\n{% endfor %}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/datasette-template-sql", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "datasette-template-sql", "package_url": "https://pypi.org/project/datasette-template-sql/", "platform": "", "project_url": "https://pypi.org/project/datasette-template-sql/", "project_urls": {"Homepage": "https://github.com/simonw/datasette-template-sql"}, "release_url": "https://pypi.org/project/datasette-template-sql/1.0.1/", "requires_dist": ["datasette (~=0.32)", "pytest ; extra == 'test'", "pytest-asyncio ; extra == 'test'", "httpx ; extra == 'test'", "sqlite-utils ; extra == 'test'"], "requires_python": "", "summary": "Datasette plugin for executing SQL queries from templates", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datasette-template-sql</h1>\n<p><a href=\"https://pypi.org/project/datasette-template-sql/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62e0d753e3a17f4a95b669c000bf4ed0da3cf159/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6461746173657474652d74656d706c6174652d73716c2e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/datasette-template-sql\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/994e0b50b625e9d4a31a9546a61e3dd2e87c7fc4/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f6461746173657474652d74656d706c6174652d73716c2e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/simonw/datasette-template-sql/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Datasette plugin for executing SQL queries from templates.</p>\n<h2>Examples</h2>\n<p><a href=\"https://www.niche-museums.com/\" rel=\"nofollow\">www.niche-museums.com</a> uses this plugin to run a custom themed website on top of Datasette. The full source code for the site <a href=\"https://github.com/simonw/museums\" rel=\"nofollow\">is here</a> - see also <a href=\"https://simonwillison.net/2019/Nov/25/niche-museums/\" rel=\"nofollow\">niche-museums.com, powered by Datasette</a>.</p>\n<p><a href=\"https://github.com/simonw/til\" rel=\"nofollow\">simonw/til</a> is another simple example, described in <a href=\"https://simonwillison.net/2020/Apr/20/self-rewriting-readme/\" rel=\"nofollow\">Using a self-rewriting README powered by GitHub Actions to track TILs</a>.</p>\n<h2>Installation</h2>\n<p>Run this command to install the plugin in the same environment as Datasette:</p>\n<pre><code>$ pip install datasette-template-sql\n</code></pre>\n<h2>Usage</h2>\n<p>This plugin makes a new function, <code>sql(sql_query)</code>, available to your Datasette templates.</p>\n<p>You can use it like this:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">row</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span><span class=\"s2\">\"select 1 + 1 as two, 2 * 4 as eight\"</span><span class=\"o\">)</span> <span class=\"cp\">%}</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">key</span> <span class=\"k\">in</span> <span class=\"nv\">row.keys</span><span class=\"o\">()</span> <span class=\"cp\">%}</span>\n        <span class=\"cp\">{{</span> <span class=\"nv\">key</span> <span class=\"cp\">}}</span>: <span class=\"cp\">{{</span> <span class=\"nv\">row</span><span class=\"o\">[</span><span class=\"nv\">key</span><span class=\"o\">]</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;</span><span class=\"nt\">br</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre>\n<p>The plugin will execute SQL against the current database for the page in  <code>database.html</code>, <code>table.html</code> and <code>row.html</code> templates. If a template does not have a current database (<code>index.html</code> for example) the query will execute against the first attached database.</p>\n<h3>Queries with arguments</h3>\n<p>You can construct a SQL query using <code>?</code> or <code>:name</code> parameter syntax by passing a list or dictionary as a second argument:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">row</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span><span class=\"s2\">\"select distinct topic from til order by topic\"</span><span class=\"o\">)</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">row.topic</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n        <span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">til</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span><span class=\"s2\">\"select * from til where topic = ?\"</span><span class=\"o\">,</span> <span class=\"o\">[</span><span class=\"nv\">row.topic</span><span class=\"o\">])</span> <span class=\"cp\">%}</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"</span><span class=\"cp\">{{</span> <span class=\"nv\">til.url</span> <span class=\"cp\">}}</span><span class=\"s\">\"</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">til.title</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span> - <span class=\"cp\">{{</span> <span class=\"nv\">til.created</span><span class=\"o\">[:</span><span class=\"m\">10</span><span class=\"o\">]</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre>\n<p>Here's the same example using the <code>:topic</code> style of parameters:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">row</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span><span class=\"s2\">\"select distinct topic from til order by topic\"</span><span class=\"o\">)</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">row.topic</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n        <span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">til</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span><span class=\"s2\">\"select * from til where topic = :topic\"</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"s2\">\"topic\"</span><span class=\"o\">:</span> <span class=\"nv\">row.topic</span><span class=\"o\">})</span> <span class=\"cp\">%}</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"</span><span class=\"cp\">{{</span> <span class=\"nv\">til.url</span> <span class=\"cp\">}}</span><span class=\"s\">\"</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">til.title</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span> - <span class=\"cp\">{{</span> <span class=\"nv\">til.created</span><span class=\"o\">[:</span><span class=\"m\">10</span><span class=\"o\">]</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre>\n<h3>Querying a different database</h3>\n<p>You can pass an optional <code>database=</code> argument to specify a named database to use for the query. For example, if you have attached a <code>news.db</code> database you could use this:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">article</span> <span class=\"k\">in</span> <span class=\"nv\">sql</span><span class=\"o\">(</span>\n    <span class=\"s2\">\"select headline, date, summary from articles order by date desc limit 5\"</span><span class=\"o\">,</span>\n    <span class=\"nv\">database</span><span class=\"o\">=</span><span class=\"s2\">\"news\"</span>\n<span class=\"o\">)</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">article.headline</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"date\"</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">article.date</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">article.summary</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n</pre>\n\n          </div>"}, "last_serial": 7072857, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cfc7c24d6a4f6e2ef9a246c0d4e717e8", "sha256": "22394a1ba13d62b7db7b64b766ea57616f4431a6868cb2a32a5f9cfc5c07cb60"}, "downloads": -1, "filename": "datasette_template_sql-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cfc7c24d6a4f6e2ef9a246c0d4e717e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6696, "upload_time": "2019-11-14T23:43:06", "upload_time_iso_8601": "2019-11-14T23:43:06.061408Z", "url": "https://files.pythonhosted.org/packages/23/7a/607305faced4ec8b412449aaf97fbcf63ec4f345bdfa4f4259ae1ab464dc/datasette_template_sql-0.1-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "0c05b93062fa043965ee43c6c0606485", "sha256": "98b0ff2d07c1cb0ffe805dcf0878d7debf7f64f68ff1d6dbf1669fb006811db6"}, "downloads": -1, "filename": "datasette_template_sql-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0c05b93062fa043965ee43c6c0606485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7025, "upload_time": "2020-04-21T23:30:34", "upload_time_iso_8601": "2020-04-21T23:30:34.642624Z", "url": "https://files.pythonhosted.org/packages/1c/23/af569f9b30620c706e2d5c3717652f1f9521fb8d4b1d273978bfaa891f9d/datasette_template_sql-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a7b02bcc230e9e1ebd60452b90dcfbc6", "sha256": "b022ece8e797894b2e3ca637505352e02e7e8934c324809c16374c070a1908f8"}, "downloads": -1, "filename": "datasette_template_sql-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a7b02bcc230e9e1ebd60452b90dcfbc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7286, "upload_time": "2020-04-22T01:59:17", "upload_time_iso_8601": "2020-04-22T01:59:17.076783Z", "url": "https://files.pythonhosted.org/packages/9c/41/15d18a5cf9bf8af12002d79e08b68791b7f72da5bbb0035a204ae95cb377/datasette_template_sql-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7b02bcc230e9e1ebd60452b90dcfbc6", "sha256": "b022ece8e797894b2e3ca637505352e02e7e8934c324809c16374c070a1908f8"}, "downloads": -1, "filename": "datasette_template_sql-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a7b02bcc230e9e1ebd60452b90dcfbc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7286, "upload_time": "2020-04-22T01:59:17", "upload_time_iso_8601": "2020-04-22T01:59:17.076783Z", "url": "https://files.pythonhosted.org/packages/9c/41/15d18a5cf9bf8af12002d79e08b68791b7f72da5bbb0035a204ae95cb377/datasette_template_sql-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:40:11 2020"}