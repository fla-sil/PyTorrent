{"info": {"author": "W. Trevor King", "author_email": "wking@tremily.us", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "This package provides an object-oriented interface to the Comedi_\ndrivers.  The standard Python interface bundled with Comedilib is a\nsimple SWIG clone of the C interface.  In pycomedi, we convert the\nfunctions into class methods (see ``pycomedi.classes``), so you don't\nhave to worry about dragging around opaque types like ``comedi_t *``\ndevice pointers.  We also bundle related constants together in\n``_Enums`` and ``_Flags`` (see ``pycomedi.constants``), to make\nhandling common operations like flag manipulations simpler.  Finally,\nthere are a number of utility classes (see ``pycomedi.utility``) to\nmake common tasks like creating instructions or reading hardware-timed\nanalog input easier.\n\n\nInstallation\n============\n\nPackages\n--------\n\nGentoo\n~~~~~~\n\nI've packaged pycomedi for Gentoo.  You need layman_ and my `wtk\noverlay`_.  Install with::\n\n    # emerge -av app-portage/layman\n    # layman --add wtk\n    # emerge -av dev-python/pycomedi\n\n\nDependencies\n------------\n\nIf you're installing by hand or packaging pycomedi for another\ndistribution, you'll need the following dependencies:\n\n============  ===================  ================  ==============================\nPackage       Purpose              Debian_           Gentoo_\n============  ===================  ================  ==============================\nNumPy_        ?                    python-numpy      dev-python/numpy\nSciPy_        testing              python-scipy      sci-libs/scipy\nComedi_       Comedilib interface  python-comedilib  sci-libs/comedilib [#wtk]_\nnose_         testing              python-nose       dev-python/nose\nCython_       Comedilib interface  cython            dev-python/cython\npython-kmod_  Optional ext. info.                    dev-python/python-kmod [#wtk]_\n============  ===================  ================  ==============================\n\n.. [#wtk] In the `wtk overlay`_.\n\nIf python-kmod is installed, you will get additional module\ninformation from the ``info.py`` demo program.  If it is not\ninstalled, everything will still work, but ``info.py`` will only be\nable to get the module version, not the kernel version, staging-ness,\nparameters, etc.\n\n\nInstalling by hand\n------------------\n\nPycomedi is available as a Git_ repository::\n\n    $ git clone git://tremily.us/pycomedi.git\n\n\nSee the homepage_ for details.  To install the checkout, run the\nstandard::\n\n    $ python setup.py install\n\n\nUsage\n=====\n\nSee the examples in the ``doc`` directory.\n\n\nTesting\n=======\n\nRun integration tests with::\n\n    $ nosetests --with-doctest --doctest-extension=txt doc\n\nThe analog integration tests read from analog input channels 0 through\n3, and write to analog output channels 0 and 1, so you'll need a board\nwith that many channels.  You should also make sure that the analog\noutput channels aren't plugged into anything sensetive, since the\ntests sweep their output around over a reasonable chunk of the channel\nrange.  Some of the internal unit tests also write, so it's safest to\njust disconnect all digital lines and analog outputs before running\nthe tests.\n\nRun both integration tests and internal unit tests with::\n\n    $ ./test.sh\n\n\nLicence\n=======\n\nThis project is distributed under the `GNU General Public License\nVersion 2`_ or greater.\n\n\nAuthor\n======\n\nW. Trevor King\nwking@tremily.us\n\n\n.. _Comedi: http://www.comedi.org/\n.. _layman: http://layman.sourceforge.net/\n.. _wtk overlay: http://blog.tremily.us/posts/Gentoo_overlay/\n.. _science overlay: http://overlays.gentoo.org/proj/science/wiki/en\n.. _Debian: http://www.debian.org/\n.. _Gentoo: http://www.gentoo.org/\n.. _NumPy: http://numpy.scipy.org/\n.. _SciPy: http://www.scipy.org/\n.. _nose: http://somethingaboutorange.com/mrl/projects/nose/\n.. _Cython: http://www.cython.org/\n.. _python-kmod: https://github.com/agrover/python-kmod/\n.. _Git: http://git-scm.com/\n.. _homepage: http://blog.tremily.us/posts/pycomedi/\n.. _GNU General Public License Version 2:\n     http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt", "description_content_type": null, "docs_url": null, "download_url": "http://git.tremily.us/?p=pycomedi.git;a=snapshot;h=0.9;sf=tgz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://blog.tremily.us/posts/pycomedi/", "keywords": null, "license": "GNU General Public License (GPL)", "maintainer": null, "maintainer_email": null, "name": "pycomedi", "package_url": "https://pypi.org/project/pycomedi/", "platform": "all", "project_url": "https://pypi.org/project/pycomedi/", "project_urls": {"Download": "http://git.tremily.us/?p=pycomedi.git;a=snapshot;h=0.9;sf=tgz", "Homepage": "http://blog.tremily.us/posts/pycomedi/"}, "release_url": "https://pypi.org/project/pycomedi/0.9/", "requires_dist": null, "requires_python": null, "summary": "An object-oriented interface for the Comedi drivers.", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides an object-oriented interface to the <a href=\"http://www.comedi.org/\" rel=\"nofollow\">Comedi</a>\ndrivers.  The standard Python interface bundled with Comedilib is a\nsimple SWIG clone of the C interface.  In pycomedi, we convert the\nfunctions into class methods (see <tt>pycomedi.classes</tt>), so you don\u2019t\nhave to worry about dragging around opaque types like <tt>comedi_t *</tt>\ndevice pointers.  We also bundle related constants together in\n<tt>_Enums</tt> and <tt>_Flags</tt> (see <tt>pycomedi.constants</tt>), to make\nhandling common operations like flag manipulations simpler.  Finally,\nthere are a number of utility classes (see <tt>pycomedi.utility</tt>) to\nmake common tasks like creating instructions or reading hardware-timed\nanalog input easier.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"packages\">\n<h3>Packages</h3>\n<h3 id=\"gentoo\"><span class=\"section-subtitle\">Gentoo</span></h3>\n<p>I\u2019ve packaged pycomedi for Gentoo.  You need <a href=\"http://layman.sourceforge.net/\" rel=\"nofollow\">layman</a> and my <a href=\"http://blog.tremily.us/posts/Gentoo_overlay/\" rel=\"nofollow\">wtk\noverlay</a>.  Install with:</p>\n<pre># emerge -av app-portage/layman\n# layman --add wtk\n# emerge -av dev-python/pycomedi\n</pre>\n</div>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>If you\u2019re installing by hand or packaging pycomedi for another\ndistribution, you\u2019ll need the following dependencies:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Package</th>\n<th>Purpose</th>\n<th><a href=\"http://www.debian.org/\" rel=\"nofollow\">Debian</a></th>\n<th><a href=\"http://www.gentoo.org/\" rel=\"nofollow\">Gentoo</a></th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">NumPy</a></td>\n<td>?</td>\n<td>python-numpy</td>\n<td>dev-python/numpy</td>\n</tr>\n<tr><td><a href=\"http://www.scipy.org/\" rel=\"nofollow\">SciPy</a></td>\n<td>testing</td>\n<td>python-scipy</td>\n<td>sci-libs/scipy</td>\n</tr>\n<tr><td><a href=\"http://www.comedi.org/\" rel=\"nofollow\">Comedi</a></td>\n<td>Comedilib interface</td>\n<td>python-comedilib</td>\n<td>sci-libs/comedilib <a href=\"#wtk\" id=\"id1\" rel=\"nofollow\">[1]</a></td>\n</tr>\n<tr><td><a href=\"http://somethingaboutorange.com/mrl/projects/nose/\" rel=\"nofollow\">nose</a></td>\n<td>testing</td>\n<td>python-nose</td>\n<td>dev-python/nose</td>\n</tr>\n<tr><td><a href=\"http://www.cython.org/\" rel=\"nofollow\">Cython</a></td>\n<td>Comedilib interface</td>\n<td>cython</td>\n<td>dev-python/cython</td>\n</tr>\n<tr><td><a href=\"https://github.com/agrover/python-kmod/\" rel=\"nofollow\">python-kmod</a></td>\n<td>Optional ext. info.</td>\n<td>\u00a0</td>\n<td>dev-python/python-kmod <a href=\"#wtk\" id=\"id2\" rel=\"nofollow\">[1]</a></td>\n</tr>\n</tbody>\n</table>\n<table id=\"wtk\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id2\" rel=\"nofollow\">2</a>)</em> In the <a href=\"http://blog.tremily.us/posts/Gentoo_overlay/\" rel=\"nofollow\">wtk overlay</a>.</td></tr>\n</tbody>\n</table>\n<p>If python-kmod is installed, you will get additional module\ninformation from the <tt>info.py</tt> demo program.  If it is not\ninstalled, everything will still work, but <tt>info.py</tt> will only be\nable to get the module version, not the kernel version, staging-ness,\nparameters, etc.</p>\n</div>\n<div id=\"installing-by-hand\">\n<h3>Installing by hand</h3>\n<p>Pycomedi is available as a <a href=\"http://git-scm.com/\" rel=\"nofollow\">Git</a> repository:</p>\n<pre>$ git clone git://tremily.us/pycomedi.git\n</pre>\n<p>See the <a href=\"http://blog.tremily.us/posts/pycomedi/\" rel=\"nofollow\">homepage</a> for details.  To install the checkout, run the\nstandard:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>See the examples in the <tt>doc</tt> directory.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Run integration tests with:</p>\n<pre>$ nosetests --with-doctest --doctest-extension=txt doc\n</pre>\n<p>The analog integration tests read from analog input channels 0 through\n3, and write to analog output channels 0 and 1, so you\u2019ll need a board\nwith that many channels.  You should also make sure that the analog\noutput channels aren\u2019t plugged into anything sensetive, since the\ntests sweep their output around over a reasonable chunk of the channel\nrange.  Some of the internal unit tests also write, so it\u2019s safest to\njust disconnect all digital lines and analog outputs before running\nthe tests.</p>\n<p>Run both integration tests and internal unit tests with:</p>\n<pre>$ ./test.sh\n</pre>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>This project is distributed under the <a href=\"http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt\" rel=\"nofollow\">GNU General Public License\nVersion 2</a> or greater.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>W. Trevor King\n<a href=\"mailto:wking%40tremily.us\">wking<span>@</span>tremily<span>.</span>us</a></p>\n</div>\n\n          </div>"}, "last_serial": 1387346, "releases": {"0.3": [], "0.4": [], "0.5": [{"comment_text": "", "digests": {"md5": "f2625a26df1c55672d4b0aa027f3523a", "sha256": "cef94835963c61a96120d6e2ec25cedc391ce13b79a07abf9f53394eac748e4c"}, "downloads": -1, "filename": "pycomedi-0.5.tar.gz", "has_sig": true, "md5_digest": "f2625a26df1c55672d4b0aa027f3523a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32287, "upload_time": "2012-07-22T18:18:57", "upload_time_iso_8601": "2012-07-22T18:18:57.756794Z", "url": "https://files.pythonhosted.org/packages/d5/8d/dad4d1f01c935c7f02e5fd81a05845dc9be51066318089098b27f4a47396/pycomedi-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "3a9f3e94034727f7f34b9143abd3e49c", "sha256": "45629f10a89d8ca592c7a298898f48cf92220fa6fbc0795cc2eb47d1dcfd77c6"}, "downloads": -1, "filename": "pycomedi-0.6.tar.gz", "has_sig": false, "md5_digest": "3a9f3e94034727f7f34b9143abd3e49c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35877, "upload_time": "2012-11-20T03:22:30", "upload_time_iso_8601": "2012-11-20T03:22:30.794833Z", "url": "https://files.pythonhosted.org/packages/5f/ca/b54d6a201fa2de59e19eeda9e47eddb5f3ca445e50cde1b1d0106991342c/pycomedi-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "3f059133e24fef637ef40abda19f7ae8", "sha256": "a01922fbae3e3cf77a2c721cff398c9a87cc4c177dec0f57b9a30e969574e1b2"}, "downloads": -1, "filename": "pycomedi-0.7.tar.gz", "has_sig": false, "md5_digest": "3f059133e24fef637ef40abda19f7ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47440, "upload_time": "2013-02-06T23:10:55", "upload_time_iso_8601": "2013-02-06T23:10:55.771051Z", "url": "https://files.pythonhosted.org/packages/4c/5e/9297d45c2b9264c39985641b72ae454134970b735246074d0e7131d2506e/pycomedi-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "ae9980898b0bc0e9f6eb475a03ee5305", "sha256": "195110793a81e2ac898d110d89233caf2b0dabde37b43984dd6e36f99179dd9e"}, "downloads": -1, "filename": "pycomedi-0.8.tar.gz", "has_sig": false, "md5_digest": "ae9980898b0bc0e9f6eb475a03ee5305", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58087, "upload_time": "2014-07-18T00:06:18", "upload_time_iso_8601": "2014-07-18T00:06:18.359263Z", "url": "https://files.pythonhosted.org/packages/57/2d/dd0e5a53365e95ae3017873ce9f4fbc90847a482f7abb22fdc4897689c90/pycomedi-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "9d6cb18385446d9909f8d82c88fb4a8e", "sha256": "b552404e57e9c622d657dbe684382d541f194f0d821b588a33f613e6d4ae1f6e"}, "downloads": -1, "filename": "pycomedi-0.9.tar.gz", "has_sig": false, "md5_digest": "9d6cb18385446d9909f8d82c88fb4a8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57940, "upload_time": "2015-01-19T00:58:31", "upload_time_iso_8601": "2015-01-19T00:58:31.935093Z", "url": "https://files.pythonhosted.org/packages/78/ed/1d57726ed120c4b27f99315a19123ebde3571e92c18b178d3ad2075a2bdb/pycomedi-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d6cb18385446d9909f8d82c88fb4a8e", "sha256": "b552404e57e9c622d657dbe684382d541f194f0d821b588a33f613e6d4ae1f6e"}, "downloads": -1, "filename": "pycomedi-0.9.tar.gz", "has_sig": false, "md5_digest": "9d6cb18385446d9909f8d82c88fb4a8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57940, "upload_time": "2015-01-19T00:58:31", "upload_time_iso_8601": "2015-01-19T00:58:31.935093Z", "url": "https://files.pythonhosted.org/packages/78/ed/1d57726ed120c4b27f99315a19123ebde3571e92c18b178d3ad2075a2bdb/pycomedi-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:13 2020"}