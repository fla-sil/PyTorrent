{"info": {"author": "saberd", "author_email": "mail@saberd.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Utilities"], "description": "# Annotated images\n\nSplit folders with files (e.g. images) into train, validation and test folders. \n\nKeeps the annotation data (if there are any) together with their images.  \nGiven the input folder in the following format:\n\n```\ninput/\n        img1.jpg\n        img1.xml\n        img1.json\n        img1.*\n        img2.jpg\n        img2.xml\n        img2.json\n        img2.*\n        ...\n    ...\n```\n\nGives you this:\n\n```\noutput/\n    train/\n        img1.jpg\n        img1.xml\n        img1.json\n        img1.*\n        ...\n    val/\n        img2.jpg\n        img2.xml\n        img2.json\n        img2.*\n        ...\n    test/\n        whatever.jpg\n        whatever.xml\n        whatever.json\n        whatever.*\n        ...\n```\n-   Works on any file types.\n-   A [seed](https://docs.python.org/3/library/random.html#random.seed) lets you reproduce the splits.\n\n## Counting occurrences of tags\nThis package includes functions to count the occurrences of a tag in JSON and XML files.  \nThey can go through all files in a folder and count the occurrence of each tag on every (annotated) image.\n\n## Install\n\n```bash\npip install annotated-images\n```\n\n### Module\n\n```python\nimport annotated_images\n\n# To only split into training and validation set, set a tuple to `ratio`, i.e, `(.8, .2)`.\nannotated-images.split('input_folder', output=\"output\", seed=1337, ratio=(.8, .1, .1))\n```\n\n```python\nimport annotated_images\n\n# Returns total count of 'tag' found in all json files in 'path'\nannotated-images.findTagsJson('path', 'tag')\n\n# Returns total count of 'tag' found in all xml files in 'path'\nannotated-images.findTagsXml('path', 'tag')\n```\n\n### Ref\nthis package is forked from https://github.com/jfilter/split-folders", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/saberd/annotated-images", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "annotated-images", "package_url": "https://pypi.org/project/annotated-images/", "platform": "", "project_url": "https://pypi.org/project/annotated-images/", "project_urls": {"Homepage": "https://github.com/saberd/annotated-images"}, "release_url": "https://pypi.org/project/annotated-images/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Split training data images into training, validation and test (dataset) folders.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Annotated images</h1>\n<p>Split folders with files (e.g. images) into train, validation and test folders.</p>\n<p>Keeps the annotation data (if there are any) together with their images.<br>\nGiven the input folder in the following format:</p>\n<pre><code>input/\n        img1.jpg\n        img1.xml\n        img1.json\n        img1.*\n        img2.jpg\n        img2.xml\n        img2.json\n        img2.*\n        ...\n    ...\n</code></pre>\n<p>Gives you this:</p>\n<pre><code>output/\n    train/\n        img1.jpg\n        img1.xml\n        img1.json\n        img1.*\n        ...\n    val/\n        img2.jpg\n        img2.xml\n        img2.json\n        img2.*\n        ...\n    test/\n        whatever.jpg\n        whatever.xml\n        whatever.json\n        whatever.*\n        ...\n</code></pre>\n<ul>\n<li>Works on any file types.</li>\n<li>A <a href=\"https://docs.python.org/3/library/random.html#random.seed\" rel=\"nofollow\">seed</a> lets you reproduce the splits.</li>\n</ul>\n<h2>Counting occurrences of tags</h2>\n<p>This package includes functions to count the occurrences of a tag in JSON and XML files.<br>\nThey can go through all files in a folder and count the occurrence of each tag on every (annotated) image.</p>\n<h2>Install</h2>\n<pre>pip install annotated-images\n</pre>\n<h3>Module</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">annotated_images</span>\n\n<span class=\"c1\"># To only split into training and validation set, set a tuple to `ratio`, i.e, `(.8, .2)`.</span>\n<span class=\"n\">annotated</span><span class=\"o\">-</span><span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'input_folder'</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s2\">\"output\"</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1337</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">annotated_images</span>\n\n<span class=\"c1\"># Returns total count of 'tag' found in all json files in 'path'</span>\n<span class=\"n\">annotated</span><span class=\"o\">-</span><span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">findTagsJson</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">,</span> <span class=\"s1\">'tag'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Returns total count of 'tag' found in all xml files in 'path'</span>\n<span class=\"n\">annotated</span><span class=\"o\">-</span><span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">findTagsXml</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">,</span> <span class=\"s1\">'tag'</span><span class=\"p\">)</span>\n</pre>\n<h3>Ref</h3>\n<p>this package is forked from <a href=\"https://github.com/jfilter/split-folders\" rel=\"nofollow\">https://github.com/jfilter/split-folders</a></p>\n\n          </div>"}, "last_serial": 5124451, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e61f8ef518faaef10838c3fe9001b2ee", "sha256": "a8524695edf25aabbe456360561cc3d8865ae8805fb77384baac4ab45a606fae"}, "downloads": -1, "filename": "annotated_images-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e61f8ef518faaef10838c3fe9001b2ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3531, "upload_time": "2019-04-10T13:42:48", "upload_time_iso_8601": "2019-04-10T13:42:48.684192Z", "url": "https://files.pythonhosted.org/packages/a2/d0/006e0e6f5d34925a08649b70e0ccbad70acd5ebd24cdebef0ff4481fcb1d/annotated_images-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a8f11e5f03a4d400396bcf6ab85b0f7c", "sha256": "eb4ddaf0e1b32ee359cd3eca855af013c485704977ae71dab8ed640378b10703"}, "downloads": -1, "filename": "annotated_images-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a8f11e5f03a4d400396bcf6ab85b0f7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3507, "upload_time": "2019-04-10T14:18:31", "upload_time_iso_8601": "2019-04-10T14:18:31.209291Z", "url": "https://files.pythonhosted.org/packages/f5/2d/de65f42234d7f91db0cdb96e931c2331a71402edaa417ae43eba624a2cb5/annotated_images-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "869f6d24c3baece102dc5e1f490b7382", "sha256": "63011fbc41304ba0b1c06862b94eabcf92688a6f2f9922f6764e6eb7b1c84015"}, "downloads": -1, "filename": "annotated_images-0.1.2.tar.gz", "has_sig": false, "md5_digest": "869f6d24c3baece102dc5e1f490b7382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3531, "upload_time": "2019-04-10T14:24:08", "upload_time_iso_8601": "2019-04-10T14:24:08.644514Z", "url": "https://files.pythonhosted.org/packages/3a/b3/47d848751697ec83f2cdea0aa5b5db62e4c747e819dab561cd5a33236904/annotated_images-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "23ff6c0a274cdd486ff13e84f5dbbdf1", "sha256": "1ad2769bbd4b3d11b7f118c98a2bbb70b9f863921c9b0b99814b00df8723c8c5"}, "downloads": -1, "filename": "annotated_images-0.1.3.tar.gz", "has_sig": false, "md5_digest": "23ff6c0a274cdd486ff13e84f5dbbdf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3538, "upload_time": "2019-04-10T14:28:40", "upload_time_iso_8601": "2019-04-10T14:28:40.607893Z", "url": "https://files.pythonhosted.org/packages/64/cc/7dda95d250ddf339e645b22acfa37804965e1fde9790aca3612813c82bf9/annotated_images-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b290e5d9663fb131f510e5154972989b", "sha256": "a2ab7003e62649936f90643d0b4cd0101777b7579fa74248732a5de503653af9"}, "downloads": -1, "filename": "annotated_images-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b290e5d9663fb131f510e5154972989b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3538, "upload_time": "2019-04-10T14:31:01", "upload_time_iso_8601": "2019-04-10T14:31:01.305954Z", "url": "https://files.pythonhosted.org/packages/50/d6/e04b595a2d16847e66afdcc047bfff42607c34b6010327758aec89c5cc0a/annotated_images-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b290e5d9663fb131f510e5154972989b", "sha256": "a2ab7003e62649936f90643d0b4cd0101777b7579fa74248732a5de503653af9"}, "downloads": -1, "filename": "annotated_images-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b290e5d9663fb131f510e5154972989b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3538, "upload_time": "2019-04-10T14:31:01", "upload_time_iso_8601": "2019-04-10T14:31:01.305954Z", "url": "https://files.pythonhosted.org/packages/50/d6/e04b595a2d16847e66afdcc047bfff42607c34b6010327758aec89c5cc0a/annotated_images-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:07 2020"}