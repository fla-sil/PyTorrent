{"info": {"author": "Hakan Halil", "author_email": "hhalil@melontech.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# <img src=\"https://www.primorsko24.bg/files/images/2017/12/econt-logo.png\" height=\"120\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Python.svg/2000px-Python.svg.png\" height=\"120\">\n# Econt Package - Python 2.7/3.3/3.5-3.6/3.7\n# URL\n**PyPI** : https://pypi.org/project/econt-test/\n\n**GitLab** : https://gitlab.melontech.com/melontech/econt\n\n# Installation\n### Make sure you have pip and virtualenv installed\n* For **Python 2.7**\n```terminal\n$ sudo apt install python2.7 python-pip\n```\n```terminal\n$ sudo pip install virtualenv \n```\n* For **Python 3.X**\n```terminal\n$ sudo apt-get install python3-pip\n```\n```terminal\n$ sudo pip install virtualenv \n```\n## Using PyPI\n\n* Create the virtual environment\n```terminal\n$ virtualenv envname\n```\n\n* Activate the virtual environment\n\n```terminal\n$ source envname/bin/activate\n```\n\n* Install the package\n\n```commandline\n$ pip install econt-test\n```\n\n## Using the repository\n* Clone the repository\n\n```terminal\n$ git clone git@gitlab.melontech.com:melontech/econt.git\n```\n* Change the current directory\n\n```terminal\n$ cd econt\n```\n\n* Create the virtual environment\n\n```terminal\n$ virtualenv envname\n```\n* Activate the virtual environment\n\n```terminal\n$ source envname/bin/activate\n```\n* Install the libraries and packages used in the code\n\n```terminal\n$ pip install -r requirements.txt\n```\n\n## Econt class\n\n### `init(username, password, demo=True)`\nThe constructor takes **username**, **password** and **demo** as arguments.\n\nIf **demo** is **True**, the class uses the demo urls for Econt's services and parcels\n\nIf **demo** is **False**, the class uses the real urls for Econt's services and parcels\n\n\n### `request(url, xml)`\nThe method takes a URL and an XML as arguments and sends an XML request to the given URL.\n\nThe response from the Econt server is then converted to a Python dictionary and returned to the user.\n```python\nresponse = {'status':..., 'message': ..., 'data': ...}\n```\nEvery method of the class uses `request(url, xml)` so every response is of the above-mentioned format.\n\nThe `data` key holds the desired information, but if there are any <span style=\"color:red\">ERRORS it corresponds to `None` \n\nThe `status` key holds `StatusCode` which consists of 6 different values.\n\nThe `message` key holds **information** about the **error** if there is any, otherwise it is `OK`\n\n\n### `xml_builder(data, root_element='request', authenticate=False)`\nThe method takes **data**, **root_element**, and **authenticate** as arguments in [JSON](https://www.w3schools.com/js/js_json_objects.asp), string, and bool format respectively.\n\nWhen **authenticate** is **False**, the given JSON is converted to an XML and the XML is returned to the user.\n\nWhen **authenticate** is **True**, the user's username and password are added to the JSON, then converted to XML, and returned to the user.\n\n\n### `get_user_credentials()`\nThe method returns the **username** and **password** of the user wrapped in a **client** key as a python dict.\n\n\n### `validate_address(address_json)`\nThe method takes a JSON and sends an XML request to the server to decide whether the address is valid.\n\n\n### `register(data)`\nThe method takes a JSON and sends an XML request to the server to create an Econt account.\n\n\n### `retrieve_profile()`\nThe method takes sends an XML request to the server to retrieve the profile information of the current user. \n\n\n### `get_offices()`\nThe method returns information about all of the Econt offices in the world.\n\n\n### `cancel_shipment(shipment_number)`\nThe method takes an **int** as argument and sends an XML request to the server to cancel the shipment corresponding to that number.\n\n\n### `get_cities()`\nThe method returns a JSON containing all the cities with Econt offices and their details.\n\n\n### `get_streets()`\nThe method returns a JSON containing all the streets with Econt offices and their details.\n\n\n### `get_streets_by_city(city_post_code)`\nThe method takes an **int** or a **str** as an argument and returns a JSON containing the English and Bulgarian names of all the streets in the given city_post_code area.\n\n\n### `get_offices_by_city(city_post_code)`\nThe method takes an **int** or a **str** as an argument and returns a JSON containing all the offices in the given city_post_code area.\n\n\n### `get_countries()`\nThe method returns a JSON containing all the countries Econt operates in.\n\n\n### `get_seller_addresses()`\nThe method returns the addresses of the user\n\n\n### `get_quarters()`\nThe method returns a JSON containing all the quarters with Econt offices and their details.\n\n\n### `get_quarters_by_post_code(city_post_code)`\nThe method takes a **str** or an **int** as argument and returns a JSON containing all the quarters in the given **city_post_code** area and their details.\n\n\n### `get_regions()`\nThe method returns a JSON containing all the regions in every city and their details.\n\n\n### `get_zones()`\nThe method returns a JSON containing all the zones in every city and their details.\n\n\n### `__build_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, validate=False, only_calculate=False, process_all_parcels=False, error_email='')`\nAn internal method to create_shipment taking six **dicts**, three optional **bools**, and an optional **str** as arguments.\n\nThe optional arguments are used when this method is called from the wrappers below.\n\n\n### `create_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')`\nThe method takes six **dicts** and an optional **str** as arguments.\n\nIt generates a shipment and returns information about the created shipment.\n\nIf **error_email** is provided any errors that have occurred during the request are sent to the given email address.\n\n\n### `calculate_shipment_price(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')`\nThe method takes six **dicts** and an optional **str** as arguments.\n\nIt returns information about the price of the shipment without generating a cargo.\n\nIf **error_email** is provided any errors that have occurred during the request are sent to the given email address.\n\n\n### `validate_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')`\nThe method takes six **dicts** and an optional **str** as arguments.\n\nIt performs a check-up on the data that is provided without generating a cargo.\n\nIf **error_email** is provided any errors that have occurred during the request are sent to the given email address.\n\n\n### `get_clients()`\nThe method returns a JSON containing information about the clients of the user.\n\n\n### `validate_cd_agreement(name, cd_no)`\nThe function takes two **strs** as arguments and returns a JSON which tells whether the Punitive Decree agreement (given by **cd_no**) of the user (given by **name**) is valid.\n\n\n### `get_postboxes(city_name='', quarter_name='')`\nThe method takes two optional parameters as **strs**, gets information about all the postboxes while filtering them according to the parameters if applicable and returns them as a JSON.\n\n\n### `retrieve_shipment_info(shipment_ids, full_tracking=False)`\nThe method takes a **list** of shipment ids and an optional **bool** as arguments and returns information about the given shipment(s)\n\n\n### `get_post_tariff()`\nThe method takes no arguments and returns information about the current post tariff.\n\n\n## StatusCode class\nThere 6 class variables in here.\nEach variable indicates the following :\n```python\nSTATUS_OK = 0\nCONNECTION_ERROR = 1\nINVALID_URL_ERROR = 2\nEMPTY_URL_ERROR = 3\nXML_PARSE_ERROR = 4\nECONT_API_XML_ERROR = 5\nUNEXPECTED_ERROR = 6\n```\nThese variables are used in the `request` method to indicate the status of the response from Econt.\n\n## RequestType class\nThis class holds all of the request types that were implemented by us.\n```python\nACCESS_CLIENTS = 'access_clients'\nCHECK_ADDRESS = 'check_address'\nE_ECONT_REGISTRATION = 'e_econt_registration'\nPROFILE = 'profile'\nCANCEL_SHIPMENTS = 'cancel_shipments'\nSHIPPING = 'shipping'\nSHIPMENTS = 'shipments'\nSTREETS = 'cities_streets'\nOFFICES = 'offices'\nCOUNTRIES = 'countries'\nCITIES = 'cities'\nQUARTERS = 'cities_quarters'\nREGIONS = 'cities_regions'\nZONES = 'cities_zones'\nCD_AGREEMENT = 'check_cd_agreement'\nPOSTBOXES = 'post_boxes'\n```\n\n# Examples\n\n#### request(url, xml)\n**input**\n\n```javascript\nurl=''\nxml=''\n```\n**output**\n```javascript\n{'status': 3, 'message': 'Please provide http:// or https://!'}\n```\n#### create_shipment\n```python\n>>> from econt.api import Econt\n>>> SENDER_DATA = {\n    'city_en': 'Ruse',\n    'post_code': '7000',\n    'office_code': '7000',\n    'name': '\u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432',\n    'phone_num': '08888888888'\n}\n>>> RECEIVER_DATA = {\n    'city_en': 'Sofia',\n    'post_code': '1505',\n    'name': '\u041f\u0435\u0442\u044a\u0440 \u0418\u0432\u0430\u043d\u043e\u0432',\n    'phone_num': '08888888888',\n    'street': '\u0421\u043b\u0430\u0432\u044f\u043d\u0441\u043a\u0430',\n    'street_num': '16'\n}\n>>> SHIPMENT_DATA = {\n    'envelope_num': '111111,22222,3332342',\n    'shipment_type': 'PACK',\n    'description': 'description of the content content',\n    'pack_count': '3',\n    'weight': '1',\n    'tariff_sub_code': 'OFFICE_DOOR',\n    'pay_after_accept': '1',\n    'pay_after_test': '0'\n}\n>>> SERVICES_DATA = {\n    'dc': 'ON',\n    'oc': '44.99',\n    'cd': '44.99',\n    'cd_currency': 'BGN',\n    'cd_pay_options': {\n        'name': '\u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432',\n        'phone': '08888888888',\n        'money_transfer': '0',\n        'method': 'door',\n        'city': 'Sofia',\n        'post_code': '1505',\n        'quarter': 'gk Suhata Reka',\n        'street': 'bul. Botevgradsko Shose',\n        'street_num': '49'\n    }\n}\n>>> PAYMENT_DATA = {\n    'side': 'SENDER',\n    'method': 'CASH'\n}\n>>> INSTRUCTIONS_DATA = {\n    'e': {\n        'type': 'return',\n        'delivery_fail_action': 'return_to_office',\n        'return_name': '\u041c\u0430\u0440\u0438\u043d \u041c\u0430\u0440\u0438\u043d\u043e\u0432',\n        'return_phone': '088888888',\n        'return_email': 'ddd@ddd.dd',\n        'return_city': '\u0420\u0443\u0441\u0435',\n        'return_post_code': '7000',\n        'return_office_code': '7004',\n        'reject_delivery_payment_side': 'receiver',\n        'reject_return_payment_side': 'sender'\n    }\n}\n\n>>> service = Econt('demo', 'demo')\n>>> result = service.create_shipment(SENDER_DATA, RECEIVER_DATA, SHIPMENT_DATA,\nSERVICES_DATA,PAYMENT_DATA, INSTRUCTIONS_DATA)\n>>> print(result)\n{\n  'status': 0,\n  'message': 'OK',\n  'data': {\n    'result': OrderedDict([('loading_id', '2018090000003116'), ('loading_num', '1051601425135'),\n                           ('courier_request_id', None), ('delivery_date', '2018-09-12'),\n                           ('loading_price', OrderedDict([('C', '6.3'), ('DC', '3.5'),\n                           ('OC', '0.11'), ('CD', '1.08'), ('total', '10.99'), ('sender_total', '10.99'),\n                           ('receiver_total', '0'), ('other_total', '0'), ('currency', '\u043b\u0432'),\n                           ('currency_code', 'BGN')])), ('loading_discount', None),\n                           ('CD_percent', '2.4'),\n                           ('pdf_url', 'http://demo.econt.com/ee/api_export.php?exportMethod=printLoading&loading_num=1051601425135&_key=eda82e9392910a376c4a53102d5390381ce5dcd7&'),\n                           ('return_reason', None), ('prev_parcel_num', None), ('next_parcels', None)]),\n    'pdf': OrderedDict([('blank_yes', 'http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&print_media=template&nums[]=1051601425135'),\n                        ('blank_no', 'http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&print_media=double&nums[]=1051601425135')])\n  }\n}\n>>> url = result['data']['pdf']['blank_yes']\n# if you go to this url on your web browser you will see this pdf file\n```\nhttp://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&print_media=template&nums[]=1051601425135\n#### xml_builder(data, root_element='request', authenticate=False)\n**input**\n\n```javascript\ndata={'city': 'Sofia', 'post_code': '1113','street': 'Kosta Lulchev','street_num': '20', 'street_et': '3', }\nauthenticate=True\n```\n**output**\n```javascript\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<request>\n   <city>Sofia</city>\n   <post_code>1113</post_code>\n   <street>Kosta Lulchev</street>\n   <street_num>20</street_num>\n   <street_et>3</street_et>\n   <client>\n      <username>demo</username>\n      <password>demo</password>\n   </client>\n</request>\n```\n#### get_user_credentials()\n**input**\n\n```javascript\nNone\n```\n**output**\n```javascript\n{'client': {'username': 'demo','password': 'demo'}}\n\n```\n#### validate_address(address_json)\n**input**\n\n```javascript\naddress_json={'city': 'Sofia', 'post_code': '1113', 'street': Kosta Lulchev', 'street_num': '20', 'street_et': '3'}\n```\n**output**\n```javascript\n{'status': 0, 'message': ''}\n```\n\n# Testing\nTo test the function with the cases given in the **tests** simply run as following in the command line:\n```python\npython testrunner.py\n```\nThe test cases of each method of the **Econt class** collected in the **tests** folder will be run. An **OK** message should be returned to the console.\n\n**get_user_credentials** method is tested in the **api.py** with the help of a **doctest**.\n\n# Contribution\nIf you wish to contribute to this project and make changes, feel free to do so by branching master and posting a merge request later on.\n\nShould any problem arise, you can always contact us at\n\n> hhalil@melontech.com\n\n> ehaliloglu@melontech.com\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.melontech.com/melontech/econt.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "econt-test", "package_url": "https://pypi.org/project/econt-test/", "platform": "", "project_url": "https://pypi.org/project/econt-test/", "project_urls": {"Homepage": "https://gitlab.melontech.com/melontech/econt.git"}, "release_url": "https://pypi.org/project/econt-test/0.1.0/", "requires_dist": ["dicttoxml (~=1.7.4)", "lxml (~=4.2.5)", "nested-lookup (~=0.1.5)", "requests (~=2.18.4)", "unittest-xml (~=0.2.2)", "xmltodict (~=0.11.0)", "six (~=1.11.0)"], "requires_python": "", "summary": "Integrating Econt API using Python", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><img height=\"120\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb445701499959f341c14319b81184141a4455a5/68747470733a2f2f7777772e7072696d6f72736b6f32342e62672f66696c65732f696d616765732f323031372f31322f65636f6e742d6c6f676f2e706e67\"><img height=\"120\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48318938fba274a0760c3303d7c873b352d2a860/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f302f30612f507974686f6e2e7376672f3230303070782d507974686f6e2e7376672e706e67\"></h1>\n<h1>Econt Package - Python 2.7/3.3/3.5-3.6/3.7</h1>\n<h1>URL</h1>\n<p><strong>PyPI</strong> : <a href=\"https://pypi.org/project/econt-test/\" rel=\"nofollow\">https://pypi.org/project/econt-test/</a></p>\n<p><strong>GitLab</strong> : <a href=\"https://gitlab.melontech.com/melontech/econt\" rel=\"nofollow\">https://gitlab.melontech.com/melontech/econt</a></p>\n<h1>Installation</h1>\n<h3>Make sure you have pip and virtualenv installed</h3>\n<ul>\n<li>For <strong>Python 2.7</strong></li>\n</ul>\n<pre>$ sudo apt install python2.7 python-pip\n</pre>\n<pre>$ sudo pip install virtualenv \n</pre>\n<ul>\n<li>For <strong>Python 3.X</strong></li>\n</ul>\n<pre>$ sudo apt-get install python3-pip\n</pre>\n<pre>$ sudo pip install virtualenv \n</pre>\n<h2>Using PyPI</h2>\n<ul>\n<li>Create the virtual environment</li>\n</ul>\n<pre>$ virtualenv envname\n</pre>\n<ul>\n<li>Activate the virtual environment</li>\n</ul>\n<pre>$ source envname/bin/activate\n</pre>\n<ul>\n<li>Install the package</li>\n</ul>\n<pre>$ pip install econt-test\n</pre>\n<h2>Using the repository</h2>\n<ul>\n<li>Clone the repository</li>\n</ul>\n<pre>$ git clone git@gitlab.melontech.com:melontech/econt.git\n</pre>\n<ul>\n<li>Change the current directory</li>\n</ul>\n<pre>$ cd econt\n</pre>\n<ul>\n<li>Create the virtual environment</li>\n</ul>\n<pre>$ virtualenv envname\n</pre>\n<ul>\n<li>Activate the virtual environment</li>\n</ul>\n<pre>$ source envname/bin/activate\n</pre>\n<ul>\n<li>Install the libraries and packages used in the code</li>\n</ul>\n<pre>$ pip install -r requirements.txt\n</pre>\n<h2>Econt class</h2>\n<h3><code>init(username, password, demo=True)</code></h3>\n<p>The constructor takes <strong>username</strong>, <strong>password</strong> and <strong>demo</strong> as arguments.</p>\n<p>If <strong>demo</strong> is <strong>True</strong>, the class uses the demo urls for Econt's services and parcels</p>\n<p>If <strong>demo</strong> is <strong>False</strong>, the class uses the real urls for Econt's services and parcels</p>\n<h3><code>request(url, xml)</code></h3>\n<p>The method takes a URL and an XML as arguments and sends an XML request to the given URL.</p>\n<p>The response from the Econt server is then converted to a Python dictionary and returned to the user.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"p\">:</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">}</span>\n</pre>\n<p>Every method of the class uses <code>request(url, xml)</code> so every response is of the above-mentioned format.</p>\n<p>The <code>data</code> key holds the desired information, but if there are any <span>ERRORS it corresponds to <code>None</code></span></p>\n<p>The <code>status</code> key holds <code>StatusCode</code> which consists of 6 different values.</p>\n<p>The <code>message</code> key holds <strong>information</strong> about the <strong>error</strong> if there is any, otherwise it is <code>OK</code></p>\n<h3><code>xml_builder(data, root_element='request', authenticate=False)</code></h3>\n<p>The method takes <strong>data</strong>, <strong>root_element</strong>, and <strong>authenticate</strong> as arguments in <a href=\"https://www.w3schools.com/js/js_json_objects.asp\" rel=\"nofollow\">JSON</a>, string, and bool format respectively.</p>\n<p>When <strong>authenticate</strong> is <strong>False</strong>, the given JSON is converted to an XML and the XML is returned to the user.</p>\n<p>When <strong>authenticate</strong> is <strong>True</strong>, the user's username and password are added to the JSON, then converted to XML, and returned to the user.</p>\n<h3><code>get_user_credentials()</code></h3>\n<p>The method returns the <strong>username</strong> and <strong>password</strong> of the user wrapped in a <strong>client</strong> key as a python dict.</p>\n<h3><code>validate_address(address_json)</code></h3>\n<p>The method takes a JSON and sends an XML request to the server to decide whether the address is valid.</p>\n<h3><code>register(data)</code></h3>\n<p>The method takes a JSON and sends an XML request to the server to create an Econt account.</p>\n<h3><code>retrieve_profile()</code></h3>\n<p>The method takes sends an XML request to the server to retrieve the profile information of the current user.</p>\n<h3><code>get_offices()</code></h3>\n<p>The method returns information about all of the Econt offices in the world.</p>\n<h3><code>cancel_shipment(shipment_number)</code></h3>\n<p>The method takes an <strong>int</strong> as argument and sends an XML request to the server to cancel the shipment corresponding to that number.</p>\n<h3><code>get_cities()</code></h3>\n<p>The method returns a JSON containing all the cities with Econt offices and their details.</p>\n<h3><code>get_streets()</code></h3>\n<p>The method returns a JSON containing all the streets with Econt offices and their details.</p>\n<h3><code>get_streets_by_city(city_post_code)</code></h3>\n<p>The method takes an <strong>int</strong> or a <strong>str</strong> as an argument and returns a JSON containing the English and Bulgarian names of all the streets in the given city_post_code area.</p>\n<h3><code>get_offices_by_city(city_post_code)</code></h3>\n<p>The method takes an <strong>int</strong> or a <strong>str</strong> as an argument and returns a JSON containing all the offices in the given city_post_code area.</p>\n<h3><code>get_countries()</code></h3>\n<p>The method returns a JSON containing all the countries Econt operates in.</p>\n<h3><code>get_seller_addresses()</code></h3>\n<p>The method returns the addresses of the user</p>\n<h3><code>get_quarters()</code></h3>\n<p>The method returns a JSON containing all the quarters with Econt offices and their details.</p>\n<h3><code>get_quarters_by_post_code(city_post_code)</code></h3>\n<p>The method takes a <strong>str</strong> or an <strong>int</strong> as argument and returns a JSON containing all the quarters in the given <strong>city_post_code</strong> area and their details.</p>\n<h3><code>get_regions()</code></h3>\n<p>The method returns a JSON containing all the regions in every city and their details.</p>\n<h3><code>get_zones()</code></h3>\n<p>The method returns a JSON containing all the zones in every city and their details.</p>\n<h3><code>__build_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, validate=False, only_calculate=False, process_all_parcels=False, error_email='')</code></h3>\n<p>An internal method to create_shipment taking six <strong>dicts</strong>, three optional <strong>bools</strong>, and an optional <strong>str</strong> as arguments.</p>\n<p>The optional arguments are used when this method is called from the wrappers below.</p>\n<h3><code>create_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')</code></h3>\n<p>The method takes six <strong>dicts</strong> and an optional <strong>str</strong> as arguments.</p>\n<p>It generates a shipment and returns information about the created shipment.</p>\n<p>If <strong>error_email</strong> is provided any errors that have occurred during the request are sent to the given email address.</p>\n<h3><code>calculate_shipment_price(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')</code></h3>\n<p>The method takes six <strong>dicts</strong> and an optional <strong>str</strong> as arguments.</p>\n<p>It returns information about the price of the shipment without generating a cargo.</p>\n<p>If <strong>error_email</strong> is provided any errors that have occurred during the request are sent to the given email address.</p>\n<h3><code>validate_shipment(sender_data, receiver_data, shipment_data, services_data, payment_data, instructions_data, error_email='')</code></h3>\n<p>The method takes six <strong>dicts</strong> and an optional <strong>str</strong> as arguments.</p>\n<p>It performs a check-up on the data that is provided without generating a cargo.</p>\n<p>If <strong>error_email</strong> is provided any errors that have occurred during the request are sent to the given email address.</p>\n<h3><code>get_clients()</code></h3>\n<p>The method returns a JSON containing information about the clients of the user.</p>\n<h3><code>validate_cd_agreement(name, cd_no)</code></h3>\n<p>The function takes two <strong>strs</strong> as arguments and returns a JSON which tells whether the Punitive Decree agreement (given by <strong>cd_no</strong>) of the user (given by <strong>name</strong>) is valid.</p>\n<h3><code>get_postboxes(city_name='', quarter_name='')</code></h3>\n<p>The method takes two optional parameters as <strong>strs</strong>, gets information about all the postboxes while filtering them according to the parameters if applicable and returns them as a JSON.</p>\n<h3><code>retrieve_shipment_info(shipment_ids, full_tracking=False)</code></h3>\n<p>The method takes a <strong>list</strong> of shipment ids and an optional <strong>bool</strong> as arguments and returns information about the given shipment(s)</p>\n<h3><code>get_post_tariff()</code></h3>\n<p>The method takes no arguments and returns information about the current post tariff.</p>\n<h2>StatusCode class</h2>\n<p>There 6 class variables in here.\nEach variable indicates the following :</p>\n<pre><span class=\"n\">STATUS_OK</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">CONNECTION_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">INVALID_URL_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">EMPTY_URL_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">XML_PARSE_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"n\">ECONT_API_XML_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">UNEXPECTED_ERROR</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n</pre>\n<p>These variables are used in the <code>request</code> method to indicate the status of the response from Econt.</p>\n<h2>RequestType class</h2>\n<p>This class holds all of the request types that were implemented by us.</p>\n<pre><span class=\"n\">ACCESS_CLIENTS</span> <span class=\"o\">=</span> <span class=\"s1\">'access_clients'</span>\n<span class=\"n\">CHECK_ADDRESS</span> <span class=\"o\">=</span> <span class=\"s1\">'check_address'</span>\n<span class=\"n\">E_ECONT_REGISTRATION</span> <span class=\"o\">=</span> <span class=\"s1\">'e_econt_registration'</span>\n<span class=\"n\">PROFILE</span> <span class=\"o\">=</span> <span class=\"s1\">'profile'</span>\n<span class=\"n\">CANCEL_SHIPMENTS</span> <span class=\"o\">=</span> <span class=\"s1\">'cancel_shipments'</span>\n<span class=\"n\">SHIPPING</span> <span class=\"o\">=</span> <span class=\"s1\">'shipping'</span>\n<span class=\"n\">SHIPMENTS</span> <span class=\"o\">=</span> <span class=\"s1\">'shipments'</span>\n<span class=\"n\">STREETS</span> <span class=\"o\">=</span> <span class=\"s1\">'cities_streets'</span>\n<span class=\"n\">OFFICES</span> <span class=\"o\">=</span> <span class=\"s1\">'offices'</span>\n<span class=\"n\">COUNTRIES</span> <span class=\"o\">=</span> <span class=\"s1\">'countries'</span>\n<span class=\"n\">CITIES</span> <span class=\"o\">=</span> <span class=\"s1\">'cities'</span>\n<span class=\"n\">QUARTERS</span> <span class=\"o\">=</span> <span class=\"s1\">'cities_quarters'</span>\n<span class=\"n\">REGIONS</span> <span class=\"o\">=</span> <span class=\"s1\">'cities_regions'</span>\n<span class=\"n\">ZONES</span> <span class=\"o\">=</span> <span class=\"s1\">'cities_zones'</span>\n<span class=\"n\">CD_AGREEMENT</span> <span class=\"o\">=</span> <span class=\"s1\">'check_cd_agreement'</span>\n<span class=\"n\">POSTBOXES</span> <span class=\"o\">=</span> <span class=\"s1\">'post_boxes'</span>\n</pre>\n<h1>Examples</h1>\n<h4>request(url, xml)</h4>\n<p><strong>input</strong></p>\n<pre><span class=\"nx\">url</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"nx\">xml</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n</pre>\n<p><strong>output</strong></p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"o\">:</span> <span class=\"s1\">'Please provide http:// or https://!'</span><span class=\"p\">}</span>\n</pre>\n<h4>create_shipment</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">econt.api</span> <span class=\"kn\">import</span> <span class=\"n\">Econt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SENDER_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'city_en'</span><span class=\"p\">:</span> <span class=\"s1\">'Ruse'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'post_code'</span><span class=\"p\">:</span> <span class=\"s1\">'7000'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'office_code'</span><span class=\"p\">:</span> <span class=\"s1\">'7000'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'\u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone_num'</span><span class=\"p\">:</span> <span class=\"s1\">'08888888888'</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RECEIVER_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'city_en'</span><span class=\"p\">:</span> <span class=\"s1\">'Sofia'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'post_code'</span><span class=\"p\">:</span> <span class=\"s1\">'1505'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'\u041f\u0435\u0442\u044a\u0440 \u0418\u0432\u0430\u043d\u043e\u0432'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone_num'</span><span class=\"p\">:</span> <span class=\"s1\">'08888888888'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'street'</span><span class=\"p\">:</span> <span class=\"s1\">'\u0421\u043b\u0430\u0432\u044f\u043d\u0441\u043a\u0430'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'street_num'</span><span class=\"p\">:</span> <span class=\"s1\">'16'</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SHIPMENT_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'envelope_num'</span><span class=\"p\">:</span> <span class=\"s1\">'111111,22222,3332342'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'shipment_type'</span><span class=\"p\">:</span> <span class=\"s1\">'PACK'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'description of the content content'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'pack_count'</span><span class=\"p\">:</span> <span class=\"s1\">'3'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'tariff_sub_code'</span><span class=\"p\">:</span> <span class=\"s1\">'OFFICE_DOOR'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'pay_after_accept'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'pay_after_test'</span><span class=\"p\">:</span> <span class=\"s1\">'0'</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SERVICES_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'dc'</span><span class=\"p\">:</span> <span class=\"s1\">'ON'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'oc'</span><span class=\"p\">:</span> <span class=\"s1\">'44.99'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'cd'</span><span class=\"p\">:</span> <span class=\"s1\">'44.99'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'cd_currency'</span><span class=\"p\">:</span> <span class=\"s1\">'BGN'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'cd_pay_options'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'\u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'08888888888'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'money_transfer'</span><span class=\"p\">:</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"s1\">'door'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Sofia'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'post_code'</span><span class=\"p\">:</span> <span class=\"s1\">'1505'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'quarter'</span><span class=\"p\">:</span> <span class=\"s1\">'gk Suhata Reka'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'street'</span><span class=\"p\">:</span> <span class=\"s1\">'bul. Botevgradsko Shose'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'street_num'</span><span class=\"p\">:</span> <span class=\"s1\">'49'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">PAYMENT_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'side'</span><span class=\"p\">:</span> <span class=\"s1\">'SENDER'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"s1\">'CASH'</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">INSTRUCTIONS_DATA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'e'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'return'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'delivery_fail_action'</span><span class=\"p\">:</span> <span class=\"s1\">'return_to_office'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_name'</span><span class=\"p\">:</span> <span class=\"s1\">'\u041c\u0430\u0440\u0438\u043d \u041c\u0430\u0440\u0438\u043d\u043e\u0432'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_phone'</span><span class=\"p\">:</span> <span class=\"s1\">'088888888'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_email'</span><span class=\"p\">:</span> <span class=\"s1\">'ddd@ddd.dd'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_city'</span><span class=\"p\">:</span> <span class=\"s1\">'\u0420\u0443\u0441\u0435'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_post_code'</span><span class=\"p\">:</span> <span class=\"s1\">'7000'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'return_office_code'</span><span class=\"p\">:</span> <span class=\"s1\">'7004'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'reject_delivery_payment_side'</span><span class=\"p\">:</span> <span class=\"s1\">'receiver'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'reject_return_payment_side'</span><span class=\"p\">:</span> <span class=\"s1\">'sender'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">Econt</span><span class=\"p\">(</span><span class=\"s1\">'demo'</span><span class=\"p\">,</span> <span class=\"s1\">'demo'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">create_shipment</span><span class=\"p\">(</span><span class=\"n\">SENDER_DATA</span><span class=\"p\">,</span> <span class=\"n\">RECEIVER_DATA</span><span class=\"p\">,</span> <span class=\"n\">SHIPMENT_DATA</span><span class=\"p\">,</span>\n<span class=\"n\">SERVICES_DATA</span><span class=\"p\">,</span><span class=\"n\">PAYMENT_DATA</span><span class=\"p\">,</span> <span class=\"n\">INSTRUCTIONS_DATA</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'result'</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'loading_id'</span><span class=\"p\">,</span> <span class=\"s1\">'2018090000003116'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'loading_num'</span><span class=\"p\">,</span> <span class=\"s1\">'1051601425135'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'courier_request_id'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'delivery_date'</span><span class=\"p\">,</span> <span class=\"s1\">'2018-09-12'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'loading_price'</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'6.3'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'DC'</span><span class=\"p\">,</span> <span class=\"s1\">'3.5'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'OC'</span><span class=\"p\">,</span> <span class=\"s1\">'0.11'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'CD'</span><span class=\"p\">,</span> <span class=\"s1\">'1.08'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'total'</span><span class=\"p\">,</span> <span class=\"s1\">'10.99'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'sender_total'</span><span class=\"p\">,</span> <span class=\"s1\">'10.99'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'receiver_total'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'other_total'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'currency'</span><span class=\"p\">,</span> <span class=\"s1\">'\u043b\u0432'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'currency_code'</span><span class=\"p\">,</span> <span class=\"s1\">'BGN'</span><span class=\"p\">)])),</span> <span class=\"p\">(</span><span class=\"s1\">'loading_discount'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'CD_percent'</span><span class=\"p\">,</span> <span class=\"s1\">'2.4'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'pdf_url'</span><span class=\"p\">,</span> <span class=\"s1\">'http://demo.econt.com/ee/api_export.php?exportMethod=printLoading&amp;loading_num=1051601425135&amp;_key=eda82e9392910a376c4a53102d5390381ce5dcd7&amp;'</span><span class=\"p\">),</span>\n                           <span class=\"p\">(</span><span class=\"s1\">'return_reason'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'prev_parcel_num'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'next_parcels'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)]),</span>\n    <span class=\"s1\">'pdf'</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'blank_yes'</span><span class=\"p\">,</span> <span class=\"s1\">'http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&amp;print_media=template&amp;nums[]=1051601425135'</span><span class=\"p\">),</span>\n                        <span class=\"p\">(</span><span class=\"s1\">'blank_no'</span><span class=\"p\">,</span> <span class=\"s1\">'http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&amp;print_media=double&amp;nums[]=1051601425135'</span><span class=\"p\">)])</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"s1\">'pdf'</span><span class=\"p\">][</span><span class=\"s1\">'blank_yes'</span><span class=\"p\">]</span>\n<span class=\"c1\"># if you go to this url on your web browser you will see this pdf file</span>\n</pre>\n<p><a href=\"http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&amp;print_media=template&amp;nums%5B%5D=1051601425135\" rel=\"nofollow\">http://demo.econt.com/e-econt/api/api_pdf_shipment.php?user=demo&amp;print_media=template&amp;nums[]=1051601425135</a></p>\n<h4>xml_builder(data, root_element='request', authenticate=False)</h4>\n<p><strong>input</strong></p>\n<pre><span class=\"nx\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"o\">:</span> <span class=\"s1\">'Sofia'</span><span class=\"p\">,</span> <span class=\"s1\">'post_code'</span><span class=\"o\">:</span> <span class=\"s1\">'1113'</span><span class=\"p\">,</span><span class=\"s1\">'street'</span><span class=\"o\">:</span> <span class=\"s1\">'Kosta Lulchev'</span><span class=\"p\">,</span><span class=\"s1\">'street_num'</span><span class=\"o\">:</span> <span class=\"s1\">'20'</span><span class=\"p\">,</span> <span class=\"s1\">'street_et'</span><span class=\"o\">:</span> <span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"p\">}</span>\n<span class=\"nx\">authenticate</span><span class=\"o\">=</span><span class=\"nx\">True</span>\n</pre>\n<p><strong>output</strong></p>\n<pre><span class=\"o\">&lt;?</span><span class=\"nx\">xml</span> <span class=\"nx\">version</span><span class=\"o\">=</span><span class=\"s2\">\"1.0\"</span> <span class=\"nx\">encoding</span><span class=\"o\">=</span><span class=\"s2\">\"UTF-8\"</span> <span class=\"o\">?&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"nx\">request</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">city</span><span class=\"o\">&gt;</span><span class=\"nx\">Sofia</span><span class=\"o\">&lt;</span><span class=\"err\">/city&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">post_code</span><span class=\"o\">&gt;</span><span class=\"mi\">1113</span><span class=\"o\">&lt;</span><span class=\"err\">/post_code&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">street</span><span class=\"o\">&gt;</span><span class=\"nx\">Kosta</span> <span class=\"nx\">Lulchev</span><span class=\"o\">&lt;</span><span class=\"err\">/street&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">street_num</span><span class=\"o\">&gt;</span><span class=\"mi\">20</span><span class=\"o\">&lt;</span><span class=\"err\">/street_num&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">street_et</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"o\">&lt;</span><span class=\"err\">/street_et&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"nx\">client</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">username</span><span class=\"o\">&gt;</span><span class=\"nx\">demo</span><span class=\"o\">&lt;</span><span class=\"err\">/username&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">password</span><span class=\"o\">&gt;</span><span class=\"nx\">demo</span><span class=\"o\">&lt;</span><span class=\"err\">/password&gt;</span>\n   <span class=\"o\">&lt;</span><span class=\"err\">/client&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"err\">/request&gt;</span>\n</pre>\n<h4>get_user_credentials()</h4>\n<p><strong>input</strong></p>\n<pre><span class=\"nx\">None</span>\n</pre>\n<p><strong>output</strong></p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'client'</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"s1\">'username'</span><span class=\"o\">:</span> <span class=\"s1\">'demo'</span><span class=\"p\">,</span><span class=\"s1\">'password'</span><span class=\"o\">:</span> <span class=\"s1\">'demo'</span><span class=\"p\">}}</span>\n</pre>\n<h4>validate_address(address_json)</h4>\n<p><strong>input</strong></p>\n<pre><span class=\"nx\">address_json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"o\">:</span> <span class=\"s1\">'Sofia'</span><span class=\"p\">,</span> <span class=\"s1\">'post_code'</span><span class=\"o\">:</span> <span class=\"s1\">'1113'</span><span class=\"p\">,</span> <span class=\"s1\">'street'</span><span class=\"o\">:</span> <span class=\"nx\">Kosta</span> <span class=\"nx\">Lulchev</span><span class=\"s1\">', '</span><span class=\"nx\">street_num</span><span class=\"s1\">': '</span><span class=\"mi\">20</span><span class=\"s1\">', '</span><span class=\"nx\">street_et</span><span class=\"s1\">': '</span><span class=\"mi\">3</span><span class=\"err\">'</span><span class=\"p\">}</span>\n</pre>\n<p><strong>output</strong></p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"o\">:</span> <span class=\"s1\">''</span><span class=\"p\">}</span>\n</pre>\n<h1>Testing</h1>\n<p>To test the function with the cases given in the <strong>tests</strong> simply run as following in the command line:</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">testrunner</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre>\n<p>The test cases of each method of the <strong>Econt class</strong> collected in the <strong>tests</strong> folder will be run. An <strong>OK</strong> message should be returned to the console.</p>\n<p><strong>get_user_credentials</strong> method is tested in the <strong>api.py</strong> with the help of a <strong>doctest</strong>.</p>\n<h1>Contribution</h1>\n<p>If you wish to contribute to this project and make changes, feel free to do so by branching master and posting a merge request later on.</p>\n<p>Should any problem arise, you can always contact us at</p>\n<blockquote>\n<p><a href=\"mailto:hhalil@melontech.com\">hhalil@melontech.com</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"mailto:ehaliloglu@melontech.com\">ehaliloglu@melontech.com</a></p>\n</blockquote>\n\n          </div>"}, "last_serial": 4295741, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "17c4f17172b8aedd522852f9df0a49a9", "sha256": "57d854e167c67d19da4b2e8f92551952180f44bc8a996932eb537fbbfe6e12da"}, "downloads": -1, "filename": "econt_test-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "17c4f17172b8aedd522852f9df0a49a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41581, "upload_time": "2018-09-19T11:14:23", "upload_time_iso_8601": "2018-09-19T11:14:23.729243Z", "url": "https://files.pythonhosted.org/packages/ab/1a/a8dfa7dd7f75996a68cd7c1b2c294f2838903047619688ebe35c21e12a53/econt_test-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5423f0ca5f4ea21b0f9c52e782a2fbed", "sha256": "762b43e38802b0f3331c7e60bff4552015fb242212a68c94283aa26616f1f1e8"}, "downloads": -1, "filename": "econt_test-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5423f0ca5f4ea21b0f9c52e782a2fbed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29545, "upload_time": "2018-09-19T11:14:25", "upload_time_iso_8601": "2018-09-19T11:14:25.403848Z", "url": "https://files.pythonhosted.org/packages/de/7c/421cb9d7a79c3dca5d886a8f8f43991df645445844305b01a2557eecffa8/econt_test-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "719ad3763d20b9f80ad480e4a1feea69", "sha256": "7ec819269bd7b33d7871300a0498ba3d10a8bac31e2baef6c0eb5868b6e26f32"}, "downloads": -1, "filename": "econt_test-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "719ad3763d20b9f80ad480e4a1feea69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37454, "upload_time": "2018-09-21T09:17:29", "upload_time_iso_8601": "2018-09-21T09:17:29.460806Z", "url": "https://files.pythonhosted.org/packages/00/9e/1ecb286487fa416ae9960b66468a6e620e1f13ff3be07d6e30f7c0a28432/econt_test-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b18876cc8bb47c8e3001d17407402de", "sha256": "f9ae464ee2c513353db9e0720e8515f453d43c5301b7fb9d7b0cbcf3362a97d2"}, "downloads": -1, "filename": "econt_test-0.0.10.tar.gz", "has_sig": false, "md5_digest": "3b18876cc8bb47c8e3001d17407402de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30063, "upload_time": "2018-09-21T09:17:30", "upload_time_iso_8601": "2018-09-21T09:17:30.948952Z", "url": "https://files.pythonhosted.org/packages/7d/77/2b85f4957fea8751b349836fe08ade8f4e9afc44236847b016674028d645/econt_test-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "ad1a6343e65ab5acb765257d4117a5bc", "sha256": "0c844d586f01a5f3b27ce47ed2e2ee48605043821f9c8422ad0844cf977b857d"}, "downloads": -1, "filename": "econt_test-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "ad1a6343e65ab5acb765257d4117a5bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37421, "upload_time": "2018-09-21T09:25:05", "upload_time_iso_8601": "2018-09-21T09:25:05.972625Z", "url": "https://files.pythonhosted.org/packages/76/24/969093dae2869b49e223ffdeb50f51a3586741d80bcc4d9fc88d9adaeb59/econt_test-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f961e90152ea166069b26f645efa52ad", "sha256": "5b21903cec7ecae4f1b683f5dbe3f2113245e7c9bc1054552171e726c28cde05"}, "downloads": -1, "filename": "econt_test-0.0.11.tar.gz", "has_sig": false, "md5_digest": "f961e90152ea166069b26f645efa52ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29985, "upload_time": "2018-09-21T09:25:07", "upload_time_iso_8601": "2018-09-21T09:25:07.638519Z", "url": "https://files.pythonhosted.org/packages/b2/30/eeccb410c78bb8221766c13d3f0420a55146736ce4bd72726f3478597b0b/econt_test-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "e431ff9bfd7b94808f797125ff010142", "sha256": "843d34ff8b640a8228fda3904ad0356cf1ca31946b91a60cc75b85e989f0acd2"}, "downloads": -1, "filename": "econt_test-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "e431ff9bfd7b94808f797125ff010142", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37420, "upload_time": "2018-09-21T09:40:10", "upload_time_iso_8601": "2018-09-21T09:40:10.540948Z", "url": "https://files.pythonhosted.org/packages/ea/ff/36d7e7f633a0823e02f8a70fcaffea05ed810911be400b62997973b59f15/econt_test-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc96f6b3bf77f4be07421c778fddda58", "sha256": "80f4f8132c21bcbf14e3417765dd60f0b5a4451205e21e455729994837697876"}, "downloads": -1, "filename": "econt_test-0.0.12.tar.gz", "has_sig": false, "md5_digest": "cc96f6b3bf77f4be07421c778fddda58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29991, "upload_time": "2018-09-21T09:40:12", "upload_time_iso_8601": "2018-09-21T09:40:12.224818Z", "url": "https://files.pythonhosted.org/packages/11/61/05640db1eb59bc6d9d1ef3ce92c55ccbec2e592c45baebaffa6856308edb/econt_test-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "6f0b17269cc7278bd8cfd69ec44fe7cd", "sha256": "9b8355267a42095f7b8d5fa6d638044530380fbe91d6db6ef8129e19da3f33a4"}, "downloads": -1, "filename": "econt_test-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "6f0b17269cc7278bd8cfd69ec44fe7cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37421, "upload_time": "2018-09-21T09:47:52", "upload_time_iso_8601": "2018-09-21T09:47:52.891733Z", "url": "https://files.pythonhosted.org/packages/e9/a2/71c852ccbd328cd52d46281b7fc470480a9706205bb228b94ed8081d65d5/econt_test-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07ac4360f24043b09fc7e60011127ddd", "sha256": "60808ba93b4ea79347ea8bb2d7f9344cf1ab274e940af55976ed73e5f4aa6e48"}, "downloads": -1, "filename": "econt_test-0.0.13.tar.gz", "has_sig": false, "md5_digest": "07ac4360f24043b09fc7e60011127ddd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29999, "upload_time": "2018-09-21T09:47:55", "upload_time_iso_8601": "2018-09-21T09:47:55.253228Z", "url": "https://files.pythonhosted.org/packages/38/ff/1ef7dbdfcff99df1d0ad26e3f9063a034efe09f2c85e63a3ff79ca0c8bd9/econt_test-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "60000e41904cb6fdf145402f3dc0e6a6", "sha256": "7863a334a76666cee37385801e4d2bd4b11143979a3344bf1b0d81c0afa72891"}, "downloads": -1, "filename": "econt_test-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "60000e41904cb6fdf145402f3dc0e6a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37421, "upload_time": "2018-09-21T10:09:38", "upload_time_iso_8601": "2018-09-21T10:09:38.007064Z", "url": "https://files.pythonhosted.org/packages/73/96/166d92243d9e155d4835c7108615c9b6634e27489bee66553db898c3579e/econt_test-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dd9cb77ef9c72168fd3e8c7eaeb1c3d", "sha256": "42afa50b0f08e38c81e690cb50fb4ab3423ea29f9a6a9532746844c72d0ecf22"}, "downloads": -1, "filename": "econt_test-0.0.14.tar.gz", "has_sig": false, "md5_digest": "3dd9cb77ef9c72168fd3e8c7eaeb1c3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30030, "upload_time": "2018-09-21T10:09:40", "upload_time_iso_8601": "2018-09-21T10:09:40.190951Z", "url": "https://files.pythonhosted.org/packages/39/65/7e4f56d526b835a36513200bb0dd05f0deb74b3e2a93737556683079bdfa/econt_test-0.0.14.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c86fbddb30c401d3d9a8ca252fc35648", "sha256": "5fae12a3c39856fd59cc5feaa8aed4445b6a784e9f8e0bd33e90cc58a6c945cc"}, "downloads": -1, "filename": "econt_test-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c86fbddb30c401d3d9a8ca252fc35648", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41594, "upload_time": "2018-09-19T11:25:25", "upload_time_iso_8601": "2018-09-19T11:25:25.659414Z", "url": "https://files.pythonhosted.org/packages/8c/7f/049d5e50ced413ed49d8080cd9013ab67aa0e42f7ae46f7949de0d3a8cc8/econt_test-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e312dd3ce37a26124e079e42e3ff4797", "sha256": "a690d4332b73cc476d3a3bcf7223c9da3a21042dd0e10d65daf9a99ae90be3bd"}, "downloads": -1, "filename": "econt_test-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e312dd3ce37a26124e079e42e3ff4797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29566, "upload_time": "2018-09-19T11:25:27", "upload_time_iso_8601": "2018-09-19T11:25:27.289786Z", "url": "https://files.pythonhosted.org/packages/6f/71/25b2faa4cf9fe4a6535a8c551c031523e1cc4caa33074b4b2e0c9bed2341/econt_test-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6073251a804228b201a5de6fec40e773", "sha256": "f23be3bee3344f338d8c0dcbb4fdfbc186fdaabe44ec02002b62db7b5b7f869c"}, "downloads": -1, "filename": "econt_test-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6073251a804228b201a5de6fec40e773", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41598, "upload_time": "2018-09-19T12:17:18", "upload_time_iso_8601": "2018-09-19T12:17:18.219163Z", "url": "https://files.pythonhosted.org/packages/12/f5/eb190e340182e13f054d583d45c0aa532faf814e1234b04f7c0bcd9ab323/econt_test-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "133a7b0984ed8e9c8f3c54e7e62c9730", "sha256": "563e70b8c824c1a8817b7131960b1a9d6c37b51f650d18dc431f2fde1b3ff4a6"}, "downloads": -1, "filename": "econt_test-0.0.3.tar.gz", "has_sig": false, "md5_digest": "133a7b0984ed8e9c8f3c54e7e62c9730", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29565, "upload_time": "2018-09-19T12:17:19", "upload_time_iso_8601": "2018-09-19T12:17:19.884471Z", "url": "https://files.pythonhosted.org/packages/d7/1b/03d11a3b0b9c07d746866c8dd938e0b76ab484a4ba6f2be4a0ef6cbd8dfa/econt_test-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b135dbf769eeff452ffd790afc6f80d0", "sha256": "1bb96d1a1af002ff2853d644f431d485a1c3d0d634fd4f92003da69fd4d328af"}, "downloads": -1, "filename": "econt_test-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b135dbf769eeff452ffd790afc6f80d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36292, "upload_time": "2018-09-19T12:20:01", "upload_time_iso_8601": "2018-09-19T12:20:01.136270Z", "url": "https://files.pythonhosted.org/packages/af/5e/225fff8cc8d0bc236a222138ef8343820cc0351c53c0689df7fb33bc586d/econt_test-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6049a328571e69803f1b74eda676b029", "sha256": "d80a96a0f94e09ca27f4f5573a748ddcdd75318bc3ca0b99ebe655e1c777d0e3"}, "downloads": -1, "filename": "econt_test-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6049a328571e69803f1b74eda676b029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29572, "upload_time": "2018-09-19T12:20:03", "upload_time_iso_8601": "2018-09-19T12:20:03.160704Z", "url": "https://files.pythonhosted.org/packages/59/72/4b0862167e9b99255408fc18414207c76c1d362954a2f615704ecc54e6c6/econt_test-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "7aeba5474af13886d69f2a2ca1f0956b", "sha256": "1d3b7dfa30f95fe76bdeddfeabdc2991e6363dd6f68ee4c705d55ebe6f18d6a7"}, "downloads": -1, "filename": "econt_test-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7aeba5474af13886d69f2a2ca1f0956b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36226, "upload_time": "2018-09-19T12:23:33", "upload_time_iso_8601": "2018-09-19T12:23:33.297303Z", "url": "https://files.pythonhosted.org/packages/c8/6c/ab42dae1a6cc94a9f7f1ffc2c4db693522f9d2c8103e0884e6f5985502fb/econt_test-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fafb5ef9acbb2eec59b596ff1316c392", "sha256": "adccb7d34de10dd14d0a9824ed1db5f8a0491f5571d723d26625ad5afb79bdba"}, "downloads": -1, "filename": "econt_test-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fafb5ef9acbb2eec59b596ff1316c392", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29416, "upload_time": "2018-09-19T12:23:34", "upload_time_iso_8601": "2018-09-19T12:23:34.895515Z", "url": "https://files.pythonhosted.org/packages/bc/fa/fe8c5c698ed0a98edfbcbb7e87909af335801d611bf0ba7154c4c519cd0f/econt_test-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "ab1ff6932f531d5e2adad1da01d878e4", "sha256": "1c1963368cd59b5490bfe703c00a5f56ba7cfe8255d29484c6a98eec4739de5e"}, "downloads": -1, "filename": "econt_test-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ab1ff6932f531d5e2adad1da01d878e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36291, "upload_time": "2018-09-19T12:37:13", "upload_time_iso_8601": "2018-09-19T12:37:13.292140Z", "url": "https://files.pythonhosted.org/packages/b7/ed/c9524d8d47907a2e76bc2f44c5b5f7e05c950fbbb3368f4389cc3847396a/econt_test-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58380a81574e17531fcb889d115bf4b4", "sha256": "99138b9886c0929eba0b5680b44abd22e56d51b82c499e44c67696faae2baf0c"}, "downloads": -1, "filename": "econt_test-0.0.6.tar.gz", "has_sig": false, "md5_digest": "58380a81574e17531fcb889d115bf4b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29600, "upload_time": "2018-09-19T12:37:43", "upload_time_iso_8601": "2018-09-19T12:37:43.767929Z", "url": "https://files.pythonhosted.org/packages/53/cc/a25e50e78eafd5167e2e9d05a7716a41727d480b7dbe18cfde3a5cb259eb/econt_test-0.0.6.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "50cd67665a3330deb85b5d5bb9cf765e", "sha256": "573f818619464055944a0cc3f7dd745d0119ead416963a8b91a26a072f13dde4"}, "downloads": -1, "filename": "econt_test-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "50cd67665a3330deb85b5d5bb9cf765e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37445, "upload_time": "2018-09-21T09:03:43", "upload_time_iso_8601": "2018-09-21T09:03:43.405075Z", "url": "https://files.pythonhosted.org/packages/27/c5/17b3a0043ea710ad000048b8579580fb61526119b4ae2716683c4dc095d8/econt_test-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40789c2dccfef2acdbf539b95016dcdd", "sha256": "1726ce9bc0f3102b1eb69dc8128a0e3f0c09019aa91e81b900642d828d28b308"}, "downloads": -1, "filename": "econt_test-0.0.9.tar.gz", "has_sig": false, "md5_digest": "40789c2dccfef2acdbf539b95016dcdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30024, "upload_time": "2018-09-21T09:03:45", "upload_time_iso_8601": "2018-09-21T09:03:45.245197Z", "url": "https://files.pythonhosted.org/packages/62/29/ff0f87ce07bc1cafaa14b66d2c94c5a5a794c55a84696e1091a697a109d0/econt_test-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "36321efbd1f36cfb8cdfded4d29b0de1", "sha256": "f5ac63608cc58460260afd2d534b393f13259c11222bbfe88878310bb65f50f4"}, "downloads": -1, "filename": "econt_test-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36321efbd1f36cfb8cdfded4d29b0de1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37391, "upload_time": "2018-09-21T10:50:34", "upload_time_iso_8601": "2018-09-21T10:50:34.712325Z", "url": "https://files.pythonhosted.org/packages/64/79/ce71388960a6e3909bb274aa850490c39fa5f751908cb5abf93ae8e52acc/econt_test-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0520152bfd2fe49f84c99290cb0b6f8f", "sha256": "724a684f8cfde8c364a71377c00d3cc20cf880802c1b649aa962ed90f278c870"}, "downloads": -1, "filename": "econt_test-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0520152bfd2fe49f84c99290cb0b6f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29997, "upload_time": "2018-09-21T10:50:36", "upload_time_iso_8601": "2018-09-21T10:50:36.392355Z", "url": "https://files.pythonhosted.org/packages/c9/dc/d885e304a14753783f041964ed0c624431a4b20a7c2e5188ac3902557849/econt_test-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36321efbd1f36cfb8cdfded4d29b0de1", "sha256": "f5ac63608cc58460260afd2d534b393f13259c11222bbfe88878310bb65f50f4"}, "downloads": -1, "filename": "econt_test-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36321efbd1f36cfb8cdfded4d29b0de1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37391, "upload_time": "2018-09-21T10:50:34", "upload_time_iso_8601": "2018-09-21T10:50:34.712325Z", "url": "https://files.pythonhosted.org/packages/64/79/ce71388960a6e3909bb274aa850490c39fa5f751908cb5abf93ae8e52acc/econt_test-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0520152bfd2fe49f84c99290cb0b6f8f", "sha256": "724a684f8cfde8c364a71377c00d3cc20cf880802c1b649aa962ed90f278c870"}, "downloads": -1, "filename": "econt_test-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0520152bfd2fe49f84c99290cb0b6f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29997, "upload_time": "2018-09-21T10:50:36", "upload_time_iso_8601": "2018-09-21T10:50:36.392355Z", "url": "https://files.pythonhosted.org/packages/c9/dc/d885e304a14753783f041964ed0c624431a4b20a7c2e5188ac3902557849/econt_test-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:58 2020"}