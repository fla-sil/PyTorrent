{"info": {"author": "Mike Elson", "author_email": "mike.elson@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux"], "description": "globexc\n=======\n\nIntroduction\n------------\n\nglobexc is a library which makes the Python interpreter write a detailed stack trace if an unhandled exception occurs in a script. This trace is written to a separate file and includes, for each level of the stack, the values of local variables and a few lines of context code. This allows the developer to perform a basic post-mortem analysis of an error without having to recreate the scenario inside a debugger or using verbose logging.\n\nThe output is similar to the in-browser stack trace given by the Werkzeug or Django web frameworks but available to any Python program even if it's not a web server. \n\nExample\n-------\n\nTo generate a stack trace:\n\n  .. code:: python\n\n\timport globexc\n\n\t# install the exception handler\n\tglobexc.init_globexc()\n\n\t# cause an unhandled exception\n\ta = 1 / 0\n\nAnd the resulting terminal output:\n\n\n\tCRITICAL Exception <type 'exceptions.ZeroDivisionError'> (tests/sample.py:15) integer\n\tdivision or modulo by zero. Trace file written to '/home/user/trace.dump'.\n\nAnd for the stack trace see https://github.com/mjem/globexc/blob/master/extra/trace.dump.\n\nInstallation\n------------\n\nInstall using setuptools:\n\n  .. code:: sh\n\n\tpython setup.py build\n\tpython setup.py install\n\nOr from pypi:\n\n  .. code:: sh\n\n\tpip install globexc\n\nUsage\n-----\n\nCall ``init_globexc()`` during program startup to install the global exception handler. The stack trace will then be generated when any unhandled exception occurs. The output works whether or not the Python logging system has been initialised.\n\nEnvironment variables\n---------------------\n\nYou can set the following environment variable to configure the library:\n\n**GLOBEXC**\n  Choose an alternative filename for stack traces.\n\nRequirements\n------------\n\nNone\n\nCompatibility\n-------------\n\nThis code has been tested under Linux and using Python 2.7 only.\n\nLegal\n-----\n\nglobexc is copyright 2013 Mike Elson\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this software except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nChangeLog\n---------\n\n0.1.1 (2013-11-11)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed pypi index page\n\n0.1 (2013-11-11)\n~~~~~~~~~~~~~~~~\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mjem/globexc", "keywords": null, "license": "Apache-2", "maintainer": null, "maintainer_email": null, "name": "globexc", "package_url": "https://pypi.org/project/globexc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/globexc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mjem/globexc"}, "release_url": "https://pypi.org/project/globexc/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Write a detailed stack trace if a program crashes", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>globexc is a library which makes the Python interpreter write a detailed stack trace if an unhandled exception occurs in a script. This trace is written to a separate file and includes, for each level of the stack, the values of local variables and a few lines of context code. This allows the developer to perform a basic post-mortem analysis of an error without having to recreate the scenario inside a debugger or using verbose logging.</p>\n<p>The output is similar to the in-browser stack trace given by the Werkzeug or Django web frameworks but available to any Python program even if it\u2019s not a web server.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To generate a stack trace:</p>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">globexc</span>\n\n<span class=\"c1\"># install the exception handler</span>\n<span class=\"n\">globexc</span><span class=\"o\">.</span><span class=\"n\">init_globexc</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># cause an unhandled exception</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>\n</pre>\n</blockquote>\n<p>And the resulting terminal output:</p>\n<blockquote>\nCRITICAL Exception &lt;type \u2018exceptions.ZeroDivisionError\u2019&gt; (tests/sample.py:15) integer\ndivision or modulo by zero. Trace file written to \u2018/home/user/trace.dump\u2019.</blockquote>\n<p>And for the stack trace see <a href=\"https://github.com/mjem/globexc/blob/master/extra/trace.dump\" rel=\"nofollow\">https://github.com/mjem/globexc/blob/master/extra/trace.dump</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using setuptools:</p>\n<blockquote>\n<pre>python setup.py build\npython setup.py install\n</pre>\n</blockquote>\n<p>Or from pypi:</p>\n<blockquote>\n<pre>pip install globexc\n</pre>\n</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Call <tt>init_globexc()</tt> during program startup to install the global exception handler. The stack trace will then be generated when any unhandled exception occurs. The output works whether or not the Python logging system has been initialised.</p>\n</div>\n<div id=\"environment-variables\">\n<h2>Environment variables</h2>\n<p>You can set the following environment variable to configure the library:</p>\n<dl>\n<dt><strong>GLOBEXC</strong></dt>\n<dd>Choose an alternative filename for stack traces.</dd>\n</dl>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>None</p>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>This code has been tested under Linux and using Python 2.7 only.</p>\n</div>\n<div id=\"legal\">\n<h2>Legal</h2>\n<p>globexc is copyright 2013 Mike Elson</p>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this software except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<blockquote>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></blockquote>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n</div>\n<div id=\"changelog\">\n<h2>ChangeLog</h2>\n<div id=\"id1\">\n<h3>0.1.1 (2013-11-11)</h3>\n<ul>\n<li>Fixed pypi index page</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2013-11-11)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 916046, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b56eac804c0ab30ef570dffb96e09f1c", "sha256": "f563b7ac71d7ff0f28e2793a1637aa53185c3f9c5516dd71125b900f28a6b7fc"}, "downloads": -1, "filename": "globexc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b56eac804c0ab30ef570dffb96e09f1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10848, "upload_time": "2013-11-11T01:04:06", "upload_time_iso_8601": "2013-11-11T01:04:06.752148Z", "url": "https://files.pythonhosted.org/packages/ac/95/fcab77b24c21ea7a1dafa2e0cfedaa0dba365a74f95f8ccc8904426e2b66/globexc-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4f79ca8c71bebe93cbef47c624bc5844", "sha256": "a1c0b86046bfd5b5b5b6a9a1296008c6c391921f3f4d8c827dbdcc26114fe349"}, "downloads": -1, "filename": "globexc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4f79ca8c71bebe93cbef47c624bc5844", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10938, "upload_time": "2013-11-11T01:35:08", "upload_time_iso_8601": "2013-11-11T01:35:08.412575Z", "url": "https://files.pythonhosted.org/packages/dd/e5/c63bd7cd330ef84cd000fecf06375ec4c06c566bccbe0ef345e1ce590c5c/globexc-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f79ca8c71bebe93cbef47c624bc5844", "sha256": "a1c0b86046bfd5b5b5b6a9a1296008c6c391921f3f4d8c827dbdcc26114fe349"}, "downloads": -1, "filename": "globexc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4f79ca8c71bebe93cbef47c624bc5844", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10938, "upload_time": "2013-11-11T01:35:08", "upload_time_iso_8601": "2013-11-11T01:35:08.412575Z", "url": "https://files.pythonhosted.org/packages/dd/e5/c63bd7cd330ef84cd000fecf06375ec4c06c566bccbe0ef345e1ce590c5c/globexc-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:33 2020"}