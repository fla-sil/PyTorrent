{"info": {"author": "Serena Dollive, Kyle Bittinger", "author_email": "kylebittinger@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "BROCC\n=====\n\nGenerate consensus-based taxonomic assignments from BLAST results.\n\nPlease cite the following paper when using BROCC:\n\nDollive S, Peterfreund GL, Sherrill-Mix S, Bittinger K, Sinha R, Hoffmann C, Nabel CS, Hill DA, Artis D, Bachman MA, Custers-Allen R, Grunberg S, Wu GD, Lewis JD, Bushman FD.  A tool kit for quantifying eukaryotic rRNA gene sequences from human microbiome samples.  Genome Biol. 2012 Jul 3;13(7):R60. doi: 10.1186/gb-2012-13-7-r60.\n\nInstallion\n----------\n\nTo install BROCC, run this command in the current directory.\n\n    pip install .\n\nBROCC has two methods of looking up taxon names: it can use a local\ncopy of the NCBI taxonomy, or it can use NCBI's E-utilities to ask for\nnames over the web.  Using a local copy of the NCBI taxonomy is much\nfaster and more reliable.  To prepare this taxonomy database, use the\ncommand:\n\n    create_local_taxonomy_db.py\n\nYou will need about 5G for the taxonomy databaase, which is stored at\n`~/.brocc/taxonomy.db` by default.\n\nRunning\n-------\n\nThe BROCC classifier takes BLAST results as input, using output format\n7 (see BLAST documentation).  The following BLAST parameters are\nfound to work best for amplicon-based sequence sets:\n\n    blastn -query <SEQUENCES (FASTA FORMAT)> -evalue 1e-5 -outfmt 7 -db nt -out <BLAST RESULTS> -num_threads 8 -max_target_seqs 100\n\nThe BROCC program requires two input files and the name of an output directory:\n\n    brocc.py -i <SEQUENCES (FASTA FORMAT)> -b <BLAST RESULTS> -o <OUTPUT DIRECTORY>\n\n`brocc.py` outputs a QIIME-formated taxonomy map and a couple of log\nfiles, giving details on the voting.\n\nSettings\n--------\n\nThe BROCC command has several options for consensus formation:\n\n* minimum hit coverage (for consideration)\n* minimum species identity (for consideration at the species level)\n* minimum genus identity (for consideration at the genus level)\n\nThe defaults are currently set for the ITS1 gene, because these\nsettings seem to work well over several different amplicons.  The\nminimum identity defaults for ITS1 are 95.2% at the species level and\n83.05% at the genus level (taken from Liggenstoffer et al).  For 18S,\nsettings of 99.0% at the species level and 96.0% at the genus level\nseem to produce the most accurate and stable assignments.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kylebittinger/brocc", "keywords": "", "license": "", "maintainer": "Kyle Bittinger", "maintainer_email": "kylebittinger@gmail.com", "name": "brocc", "package_url": "https://pypi.org/project/brocc/", "platform": "", "project_url": "https://pypi.org/project/brocc/", "project_urls": {"Homepage": "https://github.com/kylebittinger/brocc"}, "release_url": "https://pypi.org/project/brocc/1.4.0/", "requires_dist": null, "requires_python": "", "summary": "BLAST READ and OTU Consensus Classifier", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BROCC</h1>\n<p>Generate consensus-based taxonomic assignments from BLAST results.</p>\n<p>Please cite the following paper when using BROCC:</p>\n<p>Dollive S, Peterfreund GL, Sherrill-Mix S, Bittinger K, Sinha R, Hoffmann C, Nabel CS, Hill DA, Artis D, Bachman MA, Custers-Allen R, Grunberg S, Wu GD, Lewis JD, Bushman FD.  A tool kit for quantifying eukaryotic rRNA gene sequences from human microbiome samples.  Genome Biol. 2012 Jul 3;13(7):R60. doi: 10.1186/gb-2012-13-7-r60.</p>\n<h2>Installion</h2>\n<p>To install BROCC, run this command in the current directory.</p>\n<pre><code>pip install .\n</code></pre>\n<p>BROCC has two methods of looking up taxon names: it can use a local\ncopy of the NCBI taxonomy, or it can use NCBI's E-utilities to ask for\nnames over the web.  Using a local copy of the NCBI taxonomy is much\nfaster and more reliable.  To prepare this taxonomy database, use the\ncommand:</p>\n<pre><code>create_local_taxonomy_db.py\n</code></pre>\n<p>You will need about 5G for the taxonomy databaase, which is stored at\n<code>~/.brocc/taxonomy.db</code> by default.</p>\n<h2>Running</h2>\n<p>The BROCC classifier takes BLAST results as input, using output format\n7 (see BLAST documentation).  The following BLAST parameters are\nfound to work best for amplicon-based sequence sets:</p>\n<pre><code>blastn -query &lt;SEQUENCES (FASTA FORMAT)&gt; -evalue 1e-5 -outfmt 7 -db nt -out &lt;BLAST RESULTS&gt; -num_threads 8 -max_target_seqs 100\n</code></pre>\n<p>The BROCC program requires two input files and the name of an output directory:</p>\n<pre><code>brocc.py -i &lt;SEQUENCES (FASTA FORMAT)&gt; -b &lt;BLAST RESULTS&gt; -o &lt;OUTPUT DIRECTORY&gt;\n</code></pre>\n<p><code>brocc.py</code> outputs a QIIME-formated taxonomy map and a couple of log\nfiles, giving details on the voting.</p>\n<h2>Settings</h2>\n<p>The BROCC command has several options for consensus formation:</p>\n<ul>\n<li>minimum hit coverage (for consideration)</li>\n<li>minimum species identity (for consideration at the species level)</li>\n<li>minimum genus identity (for consideration at the genus level)</li>\n</ul>\n<p>The defaults are currently set for the ITS1 gene, because these\nsettings seem to work well over several different amplicons.  The\nminimum identity defaults for ITS1 are 95.2% at the species level and\n83.05% at the genus level (taken from Liggenstoffer et al).  For 18S,\nsettings of 99.0% at the species level and 96.0% at the genus level\nseem to produce the most accurate and stable assignments.</p>\n\n          </div>"}, "last_serial": 4298592, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "d9797af392e3c4ddb6d86068e37560f4", "sha256": "be799bbbb5b5549d46da98b2695b7c47d3305022cb5ae9778de558b09d3094b0"}, "downloads": -1, "filename": "brocc-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9797af392e3c4ddb6d86068e37560f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13594, "upload_time": "2018-09-22T02:00:03", "upload_time_iso_8601": "2018-09-22T02:00:03.450420Z", "url": "https://files.pythonhosted.org/packages/08/0b/5d21397b377fae075e80dfcfe60329165b25f1d4017313ca6418a7cd7052/brocc-1.4.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9797af392e3c4ddb6d86068e37560f4", "sha256": "be799bbbb5b5549d46da98b2695b7c47d3305022cb5ae9778de558b09d3094b0"}, "downloads": -1, "filename": "brocc-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9797af392e3c4ddb6d86068e37560f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13594, "upload_time": "2018-09-22T02:00:03", "upload_time_iso_8601": "2018-09-22T02:00:03.450420Z", "url": "https://files.pythonhosted.org/packages/08/0b/5d21397b377fae075e80dfcfe60329165b25f1d4017313ca6418a7cd7052/brocc-1.4.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:36:16 2020"}