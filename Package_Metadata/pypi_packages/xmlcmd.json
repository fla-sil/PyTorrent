{"info": {"author": "Ben Bass", "author_email": "benbass@codedstructure.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Unix Shell"], "description": "xmlcmd\n~~~~~~\n\nxmlcmd is a proof of concept experiment in augmenting standard POSIX commands\nwith superpowers, such as outputting xml.\n\nSadly it is more sleight of hand than any real magic.\n\nTo begin with, a directory which is first on the ``PATH`` must be created\n(e.g. ~/bin). This should not be on the path which ``whereis`` uses, so if\nthings go wrong you can always do ``$(whereis cmd)`` to execute affected\ncommands.\n\nThe idea is to put symlinks to xmlcmd (which is created in the normal ``python\nsetup.py install`` installation) into this directory for a number of commands.\nWhen these commands are run with an --xml option, the _{cmd} module will be\nimported from the xmlcmd package and the ``main()`` function run with two\narguments: the original list of command line arguments (typically corresponding\nto sys.argv) minus the ``--xml``, and the full path to the 'original' file\nwhich would have been run if the ``--xml`` option had not been specified.\n\nThis is similar to the way ``busybox`` works to implement a whole range of\nUNIX commands from a single binary, by using argv[0] to determine the required\naction.  This allows the relevant logic to be factored out into a single place.\n\n::\n\n    ben$ sudo pip install xmlcmd\n    ...\n    ben$ ln -s $(which xmlcmd) ~/bin/ls\n    ben$ ls --xml\n    <an XMLish representation of a file listing...>\n\nPlans:\n\n#. Add a few more commands (currently only supports ls and ps)\n#. Put a bunch of actually helpful XML output things into the xmlcmd\n   package to simplify creation of additional command helpers\n#. A more useful ``xpath`` command than the perl program of that name\n   on my OS X and Ubuntu installs\n\nBen Bass 2011", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/codedstructure/xmlcmd", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "xmlcmd", "package_url": "https://pypi.org/project/xmlcmd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xmlcmd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/codedstructure/xmlcmd"}, "release_url": "https://pypi.org/project/xmlcmd/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "half-baked support for adding --xml support to POSIX commands", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>xmlcmd is a proof of concept experiment in augmenting standard POSIX commands\nwith superpowers, such as outputting xml.</p>\n<p>Sadly it is more sleight of hand than any real magic.</p>\n<p>To begin with, a directory which is first on the <tt>PATH</tt> must be created\n(e.g. ~/bin). This should not be on the path which <tt>whereis</tt> uses, so if\nthings go wrong you can always do <tt>$(whereis cmd)</tt> to execute affected\ncommands.</p>\n<p>The idea is to put symlinks to xmlcmd (which is created in the normal <tt>python\nsetup.py install</tt> installation) into this directory for a number of commands.\nWhen these commands are run with an \u2013xml option, the _{cmd} module will be\nimported from the xmlcmd package and the <tt>main()</tt> function run with two\narguments: the original list of command line arguments (typically corresponding\nto sys.argv) minus the <tt><span class=\"pre\">--xml</span></tt>, and the full path to the \u2018original\u2019 file\nwhich would have been run if the <tt><span class=\"pre\">--xml</span></tt> option had not been specified.</p>\n<p>This is similar to the way <tt>busybox</tt> works to implement a whole range of\nUNIX commands from a single binary, by using argv[0] to determine the required\naction.  This allows the relevant logic to be factored out into a single place.</p>\n<pre>ben$ sudo pip install xmlcmd\n...\nben$ ln -s $(which xmlcmd) ~/bin/ls\nben$ ls --xml\n&lt;an XMLish representation of a file listing...&gt;\n</pre>\n<p>Plans:</p>\n<ol>\n<li>Add a few more commands (currently only supports ls and ps)</li>\n<li>Put a bunch of actually helpful XML output things into the xmlcmd\npackage to simplify creation of additional command helpers</li>\n<li>A more useful <tt>xpath</tt> command than the perl program of that name\non my OS X and Ubuntu installs</li>\n</ol>\n<p>Ben Bass 2011</p>\n\n          </div>"}, "last_serial": 801851, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "434d301bb856f627331abbda74c47a31", "sha256": "c08351222fa8490f4a5140daf829b795b63ef4417e0f5cab92bff8c84f20bf9a"}, "downloads": -1, "filename": "xmlcmd-0.1.tar.gz", "has_sig": false, "md5_digest": "434d301bb856f627331abbda74c47a31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3085, "upload_time": "2011-04-05T00:18:37", "upload_time_iso_8601": "2011-04-05T00:18:37.889185Z", "url": "https://files.pythonhosted.org/packages/0f/8c/047e3bb1b3a18d1b9346bb3a6db0eff084bb53812b51a16e7bd1c3189bf8/xmlcmd-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "14d5608f8879e707d22d5f7e9293d626", "sha256": "f235d49283af6b25f45251da1b2b5b7e1706c7c29e8a1668cb95c2311b7b1441"}, "downloads": -1, "filename": "xmlcmd-0.1.2.tar.gz", "has_sig": false, "md5_digest": "14d5608f8879e707d22d5f7e9293d626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3110, "upload_time": "2011-04-06T23:42:14", "upload_time_iso_8601": "2011-04-06T23:42:14.550418Z", "url": "https://files.pythonhosted.org/packages/3c/5f/4ea6915924023b7e442cbac93e8023bd3be328bdb563c2b5a9c2ced7990a/xmlcmd-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14d5608f8879e707d22d5f7e9293d626", "sha256": "f235d49283af6b25f45251da1b2b5b7e1706c7c29e8a1668cb95c2311b7b1441"}, "downloads": -1, "filename": "xmlcmd-0.1.2.tar.gz", "has_sig": false, "md5_digest": "14d5608f8879e707d22d5f7e9293d626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3110, "upload_time": "2011-04-06T23:42:14", "upload_time_iso_8601": "2011-04-06T23:42:14.550418Z", "url": "https://files.pythonhosted.org/packages/3c/5f/4ea6915924023b7e442cbac93e8023bd3be328bdb563c2b5a9c2ced7990a/xmlcmd-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:04 2020"}