{"info": {"author": "Andy Chase", "author_email": "theandychase@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Pipeless\n========\n\n*A simple library for building a data pipeline.*\n\n|Build Status|\n\nIt's an advanced version of this:\n``function4(function3(function2(function1(0))))``\n\nIt looks like this:\n\n.. code-block:: python\n\n    from pipeless import pipeline\n\n    error_handler = lambda item, exception: None\n    function, run, _ = pipeline(error_handler)\n\n\n    @function\n    def add_one(_):\n        return _ + 1\n    \n    list(run([1, 2, 3]))  # [2, 3, 4]\n\n\n    @function\n    def doubler(_):\n        yield _\n        yield _ * 2\n\n    list(run([1, 2, 3]))  # [2, 4, 3, 6, 4, 8]\n\n*  Pipelines operate over a source iterator (like a generator or a list).\n*  Functions can return 1 Item, None to drop the item, or\n   a generator. If a generator is given, the items all continue along the pipeline,\n   creating a fork.\n\n..\n\n     add_one  doubler\n    [1]--|-2----\\-----2\n    Input        -----4\n                    Output [2,4]\n\n*  All exception are caught and handled by the optional ``error_handler`` input argument\n   to prevent one broken item from stopping the flow. If the handler returns something,\n   that something continues on down the pipeline.\n*  Functions can be grouped with an optional argument on the annotator i.e. ``@function('my_group')``.\n   Set up your functions this way and you can skip groups with the ``function_groups_to_skip`` argument\n   on the pipeline runner.\n\nSee the docstrings in ``pipeline.py`` for more information!\n\nVersions:\n\n- *2.0* Removed cli generator and optional tuples\n- *1.1* Function builders optional.\n- *1.0.1* Fixed ordering problem.\n\nInstallation\n~~~~~~~~~~~~\n\nSupports Python 2.6, 2.7, 3.x, pypy.\n\n.. code-block:: bash\n\n    pip install pipeless\n\nor copy ``pipeless.py`` into your project.\n\nSupport\n~~~~~~~\n\nNeed some help? Send me an email at theandychase@gmail.com and I'll do my best to help you.\n\nContribution\n~~~~~~~~~~~~\n\nSend me suggestions, issues, and pull requests on Github and I'll gladly review them!\n\nLicence\n~~~~~~~\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Andrew Chase\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. |Build Status| image:: https://travis-ci.org/andychase/pipeless.svg?branch=master\n   :target: https://travis-ci.org/andychase/pipeless", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/andychase/pipeless/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://andychase.me/pipeless", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "Pipeless", "package_url": "https://pypi.org/project/Pipeless/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Pipeless/", "project_urls": {"Download": "https://github.com/andychase/pipeless/archive/master.zip", "Homepage": "https://andychase.me/pipeless"}, "release_url": "https://pypi.org/project/Pipeless/2.0.0/", "requires_dist": null, "requires_python": null, "summary": "Simple data pipeline building library", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Pipeless<br>========<br><br>*A simple library for building a data pipeline.*<br><br>|Build Status|<br><br>It's an advanced version of this:<br>``function4(function3(function2(function1(0))))``<br><br>It looks like this:<br><br>.. code-block:: python<br><br>    from pipeless import pipeline<br><br>    error_handler = lambda item, exception: None<br>    function, run, _ = pipeline(error_handler)<br><br><br>    @function<br>    def add_one(_):<br>        return _ + 1<br>    <br>    list(run([1, 2, 3]))  # [2, 3, 4]<br><br><br>    @function<br>    def doubler(_):<br>        yield _<br>        yield _ * 2<br><br>    list(run([1, 2, 3]))  # [2, 4, 3, 6, 4, 8]<br><br>*  Pipelines operate over a source iterator (like a generator or a list).<br>*  Functions can return 1 Item, None to drop the item, or<br>   a generator. If a generator is given, the items all continue along the pipeline,<br>   creating a fork.<br><br>..<br><br>     add_one  doubler<br>    [1]--|-2----\\-----2<br>    Input        -----4<br>                    Output [2,4]<br><br>*  All exception are caught and handled by the optional ``error_handler`` input argument<br>   to prevent one broken item from stopping the flow. If the handler returns something,<br>   that something continues on down the pipeline.<br>*  Functions can be grouped with an optional argument on the annotator i.e. ``@function('my_group')``.<br>   Set up your functions this way and you can skip groups with the ``function_groups_to_skip`` argument<br>   on the pipeline runner.<br><br>See the docstrings in ``pipeline.py`` for more information!<br><br>Versions:<br><br>- *2.0* Removed cli generator and optional tuples<br>- *1.1* Function builders optional.<br>- *1.0.1* Fixed ordering problem.<br><br>Installation<br>~~~~~~~~~~~~<br><br>Supports Python 2.6, 2.7, 3.x, pypy.<br><br>.. code-block:: bash<br><br>    pip install pipeless<br><br>or copy ``pipeless.py`` into your project.<br><br>Support<br>~~~~~~~<br><br>Need some help? Send me an email at theandychase@gmail.com and I'll do my best to help you.<br><br>Contribution<br>~~~~~~~~~~~~<br><br>Send me suggestions, issues, and pull requests on Github and I'll gladly review them!<br><br>Licence<br>~~~~~~~<br><br>The MIT License (MIT)<br><br>Copyright (c) 2013 Andrew Chase<br><br>Permission is hereby granted, free of charge, to any person obtaining a<br>copy of this software and associated documentation files (the<br>\"Software\"), to deal in the Software without restriction, including<br>without limitation the rights to use, copy, modify, merge, publish,<br>distribute, sublicense, and/or sell copies of the Software, and to<br>permit persons to whom the Software is furnished to do so, subject to<br>the following conditions:<br><br>The above copyright notice and this permission notice shall be included<br>in all copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS<br>OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF<br>MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.<br>IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY<br>CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,<br>TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE<br>SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br><br>.. |Build Status| image:: https://travis-ci.org/andychase/pipeless.svg?branch=master<br>   :target: https://travis-ci.org/andychase/pipeless\n          </div>"}, "last_serial": 2074391, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c40d1549d562a0cab2094e46dbd40c37", "sha256": "adce06c93193650864f161f5c3eb9618c9cdfdc401242f02f09ee94fea2c65c5"}, "downloads": -1, "filename": "Pipeless-1.0.zip", "has_sig": true, "md5_digest": "c40d1549d562a0cab2094e46dbd40c37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4248, "upload_time": "2013-11-05T22:51:44", "upload_time_iso_8601": "2013-11-05T22:51:44.331665Z", "url": "https://files.pythonhosted.org/packages/5a/e7/a3c0e1c253d7899e9f2c628feb99486736a33237fe36ec7aa949a5ae28de/Pipeless-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6340c7fb242217b00a59005acae7c44a", "sha256": "405cc335b4fe839c980164cf19a1c9bac30f737a7d6f133ff47d6eaf5e63c506"}, "downloads": -1, "filename": "Pipeless-1.0.1.zip", "has_sig": true, "md5_digest": "6340c7fb242217b00a59005acae7c44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4285, "upload_time": "2013-11-06T03:03:26", "upload_time_iso_8601": "2013-11-06T03:03:26.895129Z", "url": "https://files.pythonhosted.org/packages/18/a8/ea59f732dee8817c65f4f55d25134b9d75a88ee16f547fc5d33874a92ae3/Pipeless-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bd2829728a9407bfa30d531f98545487", "sha256": "b0c456fce53a57388ade5ec2660cc0eb942484df1ac9636e7ca84fdabc53a672"}, "downloads": -1, "filename": "Pipeless-1.0.2.zip", "has_sig": true, "md5_digest": "bd2829728a9407bfa30d531f98545487", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4201, "upload_time": "2013-11-06T08:37:06", "upload_time_iso_8601": "2013-11-06T08:37:06.998968Z", "url": "https://files.pythonhosted.org/packages/6c/38/37faeb6994da586b556617e773f59b3bbdd37b03df9e1f44ab23c6603708/Pipeless-1.0.2.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "9774717412af889fb7f59f80304ba4bf", "sha256": "d33bdc2253092e162a234fd414daa04cf7c5d844b7cdca410ed50910ed777b43"}, "downloads": -1, "filename": "Pipeless-1.1.zip", "has_sig": true, "md5_digest": "9774717412af889fb7f59f80304ba4bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5372, "upload_time": "2013-11-06T20:16:40", "upload_time_iso_8601": "2013-11-06T20:16:40.268803Z", "url": "https://files.pythonhosted.org/packages/d3/9f/e6d4b0340012af41ad743f1d2370b7848f47f89e6bfb088b07f56fec9699/Pipeless-1.1.zip", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "289da4223e35653d5a2c7b212fa0ca60", "sha256": "a9e968fe2d4ddb1a0fddc4cd5c3ea77a7185887ad63b150430baef01d4ff3cac"}, "downloads": -1, "filename": "Pipeless-1.1.1.zip", "has_sig": true, "md5_digest": "289da4223e35653d5a2c7b212fa0ca60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5441, "upload_time": "2013-11-06T21:37:02", "upload_time_iso_8601": "2013-11-06T21:37:02.489112Z", "url": "https://files.pythonhosted.org/packages/b7/b2/f654e73a0f34cd3b68108fd99ef37bbc758762b6839fc24dcd6205594b34/Pipeless-1.1.1.zip", "yanked": false}], "1.11": [], "2.0.0": [{"comment_text": "", "digests": {"md5": "83f71cd4f2d95669e837840de013facc", "sha256": "b95993961d5059b6ac15fb3f76d2001c57becde1d8b8ec94138c96e7dc904548"}, "downloads": -1, "filename": "Pipeless-2.0.0.tar.gz", "has_sig": false, "md5_digest": "83f71cd4f2d95669e837840de013facc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3969, "upload_time": "2016-04-20T15:43:03", "upload_time_iso_8601": "2016-04-20T15:43:03.448028Z", "url": "https://files.pythonhosted.org/packages/17/dc/023adff4dd8c8d6c8dc1a945fa72f5b0257a13a8d09952325dd209932188/Pipeless-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83f71cd4f2d95669e837840de013facc", "sha256": "b95993961d5059b6ac15fb3f76d2001c57becde1d8b8ec94138c96e7dc904548"}, "downloads": -1, "filename": "Pipeless-2.0.0.tar.gz", "has_sig": false, "md5_digest": "83f71cd4f2d95669e837840de013facc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3969, "upload_time": "2016-04-20T15:43:03", "upload_time_iso_8601": "2016-04-20T15:43:03.448028Z", "url": "https://files.pythonhosted.org/packages/17/dc/023adff4dd8c8d6c8dc1a945fa72f5b0257a13a8d09952325dd209932188/Pipeless-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:20 2020"}