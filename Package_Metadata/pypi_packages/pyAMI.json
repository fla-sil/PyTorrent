{"info": {"author": "The AMI Team", "author_email": "atlas-bookkeeping@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Utilities"], "description": ".. -*- mode: rst -*-\n\nFor more information see the full\n`pyAMI documentation <https://end.web.cern.ch/end/projects/pyAMI/>`_\n\npyAMI 4 is a major upgrade of the AMI python client. The command line syntax\nhas been rationalized, with improved help functions. pyAMI is available in the\nATLAS software release and also installed centrally on lxplus.\npyAMI can be installed standalone on a laptop. Instructions are given below for\nlinux and windows.\n\nAll commands are simply subcommands of ``ami``.\n\nList AOD datasets matching a pattern::\n\n   ami list datasets --type AOD data11_7TeV\n\nlist files in a dataset::\n\n   ami list files -lhc dataset.name\n   \nlist latest NTUP_TAUMEDIUM data datasets (and number of events in each one)\noriginating from AOD in periods L1 and L2 that are contained in a good runs list\n(GRL)::\n\n   ami list data --project data11_7TeV --type NTUP_TAUMEDIUM --parent-type AOD \\\n   --periods L1,L2 --stream physics_JetTauEtmiss --latest --fields events \\\n   --grl mygrl.xml\n   \nlist runs in a period or multiple periods::\n\n   ami list runs B M\n\ndisplay dataset metadata::\n\n   ami dataset info dataset.name\n\nand query projects, data types, dataset provenance, etc.\n``pyAMI`` also provides an API allowing you to perform all of the same queries\nfrom within your own Python program.\n\n\nLXPLUS and CVMFS\n================\n\npyAMI is installed centrally on LXPLUS at CERN. To begin using pyAMI simply::\n\n    source /afs/cern.ch/atlas/software/tools/pyAMI/setup.sh\n\nthen authenticate yourself if you haven't already (see below).\n\n\npyAMI is also available through CVMFS::\n\n   export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase \n   source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh\n   localSetupPyAMI\n\nNote : You may need to get a particular version of pyAMI - SLC6 requires::\n\n   source /afs/cern.ch/atlas/software/tools/pyAMI/python2.6/setup.sh\n\nInstallation\n============\n\npyAMI requires at least Python 2.4. `lxml <http://lxml.de/>`_ is optional but\nrequired for XSL transformations. libxml2 and libxslt (dev packages) must be\ninstalled to build lxml.\n\n\nAutomatic Installation\n----------------------\n\nAutomatically install the latest version of pyAMI with\n`pip <http://pypi.python.org/pypi/pip>`_::\n\n    pip install --user pyAMI\n\nor with ``easy_install``::\n\n    easy_install --user pyAMI\n\nOmit the ``--user`` for a system-wide installation (requires root privileges).\nAdd ``${HOME}/.local/bin`` to your ``${PATH}`` if using ``--user`` and if\nit is not there already (put this in your .bashrc)::\n\n   export PATH=${HOME}/.local/bin${PATH:+:$PATH}\n\nTo upgrade an existing installation use the ``-U`` option in the ``pip``\nor ``easy_install`` commands above.\n\n\nManual Installation\n-------------------\n\nGet the latest tarball on `PyPI <http://pypi.python.org/pypi/pyAMI/>`_\n\nUntar and install (replace X appropriately)::\n\n   tar -zxvf pyAMI-X.tar.gz\n   cd pyAMI-X\n\npyAMI uses distribute to install but you may revert to a basic\ndistutils install by setting the environment variable::\n\n   export PYAMI_NO_DISTRIBUTE=1\n\nOne advantage of using distribute is that all dependencies are automatically\ndownloaded and installed for you. To install pyAMI into your home directory\nif using at least Python 2.6::\n\n   python setup.py install --user\n\nor with older Python versions::\n\n   python setup.py install --prefix=~/.local\n\nAdd ``${HOME}/.local/bin`` to your ``${PATH}`` if it is not there\nalready (put this in your .bashrc)::\n\n   export PATH=${HOME}/.local/bin${PATH:+:$PATH}\n\nIf you are unable to satisfy the dependency on lxml (only used for XSL\ntransformations) then you may disable this dependency before installation with::\n\n   export PYAMI_NO_LXML=1\n\nInstallation on MAC\n-------------------\n\nTested with System: OXS 10.7.4, Python 2.7.1, GCC 4.2.1\n\nJust follow the instructions for Manual Installation, except that to change the PATH you should do::\n\n\texport PATH=/Users/yourName/Library/Python/2.7/bin${PATH:+:$PATH}\n\n\nInstallation on Windows\n-----------------------\n\n1. Install python, for example\n   `Python 2.7.3 <http://www.python.org/getit/releases/2.7.3/>`_\n\n2. Install `distribute <http://python-distribute.org/distribute_setup.py>`__\n   (for easy installation of dependences). For 64 bit machines there may be problems,\n   see `bugs.python.org/issue6792 <http://bugs.python.org/issue6792>`__.\n\n3. Download pip. For example  `pip-1.1.tar.gz <http://pypi.python.org/packages/source/p/pip/pip-1.1.tar.gz>`__.\n\n4. Install pip. Open a \"cmd\" terminal in windows. Assuming that you installed pip\n   below Python::\n\n      cd C:\\Python27\\pip-1.1\n      C:\\Python27\\python setup.py install\n\n5. Install pyAMI. ``pip.exe`` should be in ``C:\\Python27\\Scripts``::\n   \n      cd C:\\Python27\\Scripts\n      pip install pyAMI\n\n6. You might need to install lxml to enable XSLT in a different step - sometimes\n   pip seems to prefer a version which will not build. If you don't install\n   lxml, pyAMI will still work, but you will only be able to obtain XML output\n   on the command line. However if you only want to use the API of pyAMI you may\n   skip this step.::\n\n      easy_install --allow-hosts=lxml.de,*.python.org lxml==2.2.8\n\n7. Now so that you can use pyAMI conveniently you must adjust your paths in the\n   Windows environment. If you do not know how to do this follow the instructions\n   here `www.java.com/en/download/help/path.xml <http://www.java.com/en/download/help/path.xml>`__.\n   Add to the path::\n\n      PATH    C:\\PYTHON27;C:\\PYTHON27\\Scripts\n\n8. Lastly explain to Windows that a python script can be executed.\n   Add to the ``PATHEXT`` variable::\n   \n      PATHEXT .PY\n\n9. Then change the name of the file ``ami``  in ``C:\\Python27\\Scripts`` to ``ami.py``\n   so that script ami.py can be executed just by typing ``ami``.\n\n.. note:: If you are not administrator of your machine you will probably need to\n   create the PATHEXT variable in your windows user environment.\n\n\nAuthentication\n==============\n\nVOMS authentication is supported::\n\n   voms-proxy-init -voms atlas\n\nThe alternative option (if gLite is not available)\nis to send your username and password along with each AMI command. You can do\nthis explicitly, or you can set up an encrypted configuration file by running::\n\n   ami auth\n\nThis will prompt you for your AMI username and password.\nYou will only need to do this once since your credentials are stored in\n``~/.pyami/ami.cfg`` for later use. If your credentials change just\nrun ``ami auth`` again. If you would like to keep your pyAMI configuration\nin a directory other than ``~/.pyami`` then set the environment\nvariable ``PYAMI_CONFIG_DIR``.\n\n.. note:: Once you make an ami configuration file it will override your voms proxy.\n   You should destroy it if you want to use a proxy. We implemented it this way because \n   the most common user error seemed to be trying to run pyAMI with an expired proxy!\n   Explicitly giving a username and password will override the configuration file.\n.. -*- mode: rst -*-\n\nVersion 4.1.2 (26/2/2013)\n-------------------------\n\n* Upgrade to distribute 0.6.34\n* Fix installation on Windows\n* Docs now build properly with buildout\n* Install setup_pyAMI with the pyAMI bundle for backward compatibility\n\nVersion 4.1.1 (13/2/2013)\n-------------------------\n\n* Upgrade to buildout 2.0.0\n* Fix a few import issues in pyAMI.extern.ZSI\n\nVersion 4.1.0 (4/2/2013)\n------------------------\n\n* A patched version of ZSI is now included in pyAMI.extern that removes\n  dependency on PyXML.\n* argparse is now included in pyAMI.extern.\n* A minimal pyAMI installation (no lxml) now does not depend on any external\n  non-standard library packages.\n* Added the -F and --from-file to the \"ami list datasets\" command where the\n  pattern is interpreted as a file name which will be read for patterns (one per\n  line, ignoring blank lines or lines beginning with #).\n* Added the option to perform literal matches with \"ami list datasets\"\n  using the new optional flags -L or --literal-match. In this case the pattern\n  is interpreted as a literal string and the results must match exactly.\n  A literal match query is much faster than a patterned match and can greatly\n  speed up commands where you want to query information for known elements.\n  This option pairs nicely with the new --from-file feature mentioned above for\n  files listing many complete dataset names that should be interpreted literally\n  and not as patterns.\n* AMI errors are now printed correctly.\n\nVersion 4.0.4 (6/11/2012)\n-------------------------\n\n* Fix globbing issue. Only surround pattern with % if the pattern didn't have %\n  on both ends originally. (it needed more fixing!)\n  \nVersion 4.0.3 (11/10/2012)\n--------------------------\n\n* Skip version 4.0.2 to sync with ATLAS SVN tag version\n* Fix setup.py for py2.4 compatibility\n* Make ami-status=VALID default\n* Fix globbing issue. Only surround pattern with % if the pattern didn't have %\n  on both ends originally.\n\nVersion 4.0.1 (20/9/2012)\n-------------------------\n\n* This is pyAMI-04-00-01 in the ATLAS release\n* Minor syntax changes in the API\n* Added Windows installation to the doc\n* Expanded doc section on API\n\nVersion 4.0.0a3 (17/4/2012)\n---------------------------\n\n* Make distribute the default install method\n* Include patched urllib2 module in pyAMI.backports\n\nVersion 4.0.0a2 (10/4/2012)\n---------------------------\n\n* Second prerelease of the new pyAMI\n* Support for connection through a proxy (BNL)\n* Other minor improvements \n\nVersion 4.0.0a1 (28/3/2012)\n---------------------------\n\n* Prerelease of the new pyAMI\n* Package renamed to pyAMI\n* Speed improvements\n* VOMS authentication\n* Fixed permissions of ~/.pyami/ami.cfg\n* Removed intermediate ami package\n  Everything is now under pyAMI\n\natlasmeta versions below:\n\nVersion 0.4.0 (4/2/2012)\n------------------------\n\n* Now compatible with Python 2.4\n* Install with distutils by default and make installation with distribute optional\n* Improved parent-type feature in dataset query\n* Ability to specify a good runs list (GRL) in 'ami list data' and only\n  the runs contained in the GRL are shown\n* Installed on LXPLUS at CERN\n* XSL transformations reimplemented\n\nVersion 0.3.1 (10/1/2012)\n-------------------------\n\t\n* Fix bug in file listing where size/events is NULL in database\n\nVersion 0.3 (20/12/2011)\n------------------------\n\t\n* Add ability to query datasets by parent type with --parent-type option\n* list files in dataset with 'ami list files' and optionally display total size\n  and events\n* new schema module replicating AMI schema\n* query files, projects, subprojects, datatypes, subdatatypes, tags, nomenclatures,\n  production steps\n\nVersion 0.2 (17/12/2011)\n------------------------\n\n* Query and display additional dataset fields (i.e. datatype, number of events)\n\nVersion 0.1 (1/12/2011)\n-----------------------\n\n* Forked pyAMI\n* Major code rewrite\n* better command-line interface", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/packages/source/p/pyAMI/pyAMI-4.1.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://atlas-ami.cern.ch/AMI/pyAMI/", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "pyAMI", "package_url": "https://pypi.org/project/pyAMI/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyAMI/", "project_urls": {"Download": "http://pypi.python.org/packages/source/p/pyAMI/pyAMI-4.1.3.tar.gz", "Homepage": "https://atlas-ami.cern.ch/AMI/pyAMI/"}, "release_url": "https://pypi.org/project/pyAMI/4.1.3/", "requires_dist": null, "requires_python": null, "summary": "The ATLAS Metadata Interface", "version": "4.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>For more information see the full\n<a href=\"https://end.web.cern.ch/end/projects/pyAMI/\" rel=\"nofollow\">pyAMI documentation</a></p>\n<p>pyAMI 4 is a major upgrade of the AMI python client. The command line syntax\nhas been rationalized, with improved help functions. pyAMI is available in the\nATLAS software release and also installed centrally on lxplus.\npyAMI can be installed standalone on a laptop. Instructions are given below for\nlinux and windows.</p>\n<p>All commands are simply subcommands of <tt>ami</tt>.</p>\n<p>List AOD datasets matching a pattern:</p>\n<pre>ami list datasets --type AOD data11_7TeV\n</pre>\n<p>list files in a dataset:</p>\n<pre>ami list files -lhc dataset.name\n</pre>\n<p>list latest NTUP_TAUMEDIUM data datasets (and number of events in each one)\noriginating from AOD in periods L1 and L2 that are contained in a good runs list\n(GRL):</p>\n<pre>ami list data --project data11_7TeV --type NTUP_TAUMEDIUM --parent-type AOD \\\n--periods L1,L2 --stream physics_JetTauEtmiss --latest --fields events \\\n--grl mygrl.xml\n</pre>\n<p>list runs in a period or multiple periods:</p>\n<pre>ami list runs B M\n</pre>\n<p>display dataset metadata:</p>\n<pre>ami dataset info dataset.name\n</pre>\n<p>and query projects, data types, dataset provenance, etc.\n<tt>pyAMI</tt> also provides an API allowing you to perform all of the same queries\nfrom within your own Python program.</p>\n<div id=\"lxplus-and-cvmfs\">\n<h2>LXPLUS and CVMFS</h2>\n<p>pyAMI is installed centrally on LXPLUS at CERN. To begin using pyAMI simply:</p>\n<pre>source /afs/cern.ch/atlas/software/tools/pyAMI/setup.sh\n</pre>\n<p>then authenticate yourself if you haven\u2019t already (see below).</p>\n<p>pyAMI is also available through CVMFS:</p>\n<pre>export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase\nsource $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh\nlocalSetupPyAMI\n</pre>\n<p>Note : You may need to get a particular version of pyAMI - SLC6 requires:</p>\n<pre>source /afs/cern.ch/atlas/software/tools/pyAMI/python2.6/setup.sh\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>pyAMI requires at least Python 2.4. <a href=\"http://lxml.de/\" rel=\"nofollow\">lxml</a> is optional but\nrequired for XSL transformations. libxml2 and libxslt (dev packages) must be\ninstalled to build lxml.</p>\n<div id=\"automatic-installation\">\n<h3>Automatic Installation</h3>\n<p>Automatically install the latest version of pyAMI with\n<a href=\"http://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install --user pyAMI\n</pre>\n<p>or with <tt>easy_install</tt>:</p>\n<pre>easy_install --user pyAMI\n</pre>\n<p>Omit the <tt><span class=\"pre\">--user</span></tt> for a system-wide installation (requires root privileges).\nAdd <tt><span class=\"pre\">${HOME}/.local/bin</span></tt> to your <tt>${PATH}</tt> if using <tt><span class=\"pre\">--user</span></tt> and if\nit is not there already (put this in your .bashrc):</p>\n<pre>export PATH=${HOME}/.local/bin${PATH:+:$PATH}\n</pre>\n<p>To upgrade an existing installation use the <tt><span class=\"pre\">-U</span></tt> option in the <tt>pip</tt>\nor <tt>easy_install</tt> commands above.</p>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual Installation</h3>\n<p>Get the latest tarball on <a href=\"http://pypi.python.org/pypi/pyAMI/\" rel=\"nofollow\">PyPI</a></p>\n<p>Untar and install (replace X appropriately):</p>\n<pre>tar -zxvf pyAMI-X.tar.gz\ncd pyAMI-X\n</pre>\n<p>pyAMI uses distribute to install but you may revert to a basic\ndistutils install by setting the environment variable:</p>\n<pre>export PYAMI_NO_DISTRIBUTE=1\n</pre>\n<p>One advantage of using distribute is that all dependencies are automatically\ndownloaded and installed for you. To install pyAMI into your home directory\nif using at least Python 2.6:</p>\n<pre>python setup.py install --user\n</pre>\n<p>or with older Python versions:</p>\n<pre>python setup.py install --prefix=~/.local\n</pre>\n<p>Add <tt><span class=\"pre\">${HOME}/.local/bin</span></tt> to your <tt>${PATH}</tt> if it is not there\nalready (put this in your .bashrc):</p>\n<pre>export PATH=${HOME}/.local/bin${PATH:+:$PATH}\n</pre>\n<p>If you are unable to satisfy the dependency on lxml (only used for XSL\ntransformations) then you may disable this dependency before installation with:</p>\n<pre>export PYAMI_NO_LXML=1\n</pre>\n</div>\n<div id=\"installation-on-mac\">\n<h3>Installation on MAC</h3>\n<p>Tested with System: OXS 10.7.4, Python 2.7.1, GCC 4.2.1</p>\n<p>Just follow the instructions for Manual Installation, except that to change the PATH you should do:</p>\n<pre>export PATH=/Users/yourName/Library/Python/2.7/bin${PATH:+:$PATH}\n</pre>\n</div>\n<div id=\"installation-on-windows\">\n<h3>Installation on Windows</h3>\n<ol>\n<li><p>Install python, for example\n<a href=\"http://www.python.org/getit/releases/2.7.3/\" rel=\"nofollow\">Python 2.7.3</a></p>\n</li>\n<li><p>Install <a href=\"http://python-distribute.org/distribute_setup.py\" rel=\"nofollow\">distribute</a>\n(for easy installation of dependences). For 64 bit machines there may be problems,\nsee <a href=\"http://bugs.python.org/issue6792\" rel=\"nofollow\">bugs.python.org/issue6792</a>.</p>\n</li>\n<li><p>Download pip. For example  <a href=\"http://pypi.python.org/packages/source/p/pip/pip-1.1.tar.gz\" rel=\"nofollow\">pip-1.1.tar.gz</a>.</p>\n</li>\n<li><p>Install pip. Open a \u201ccmd\u201d terminal in windows. Assuming that you installed pip\nbelow Python:</p>\n<pre>cd C:\\Python27\\pip-1.1\nC:\\Python27\\python setup.py install\n</pre>\n</li>\n<li><p>Install pyAMI. <tt>pip.exe</tt> should be in <tt><span class=\"pre\">C:\\Python27\\Scripts</span></tt>:</p>\n<pre>cd C:\\Python27\\Scripts\npip install pyAMI\n</pre>\n</li>\n<li><p>You might need to install lxml to enable XSLT in a different step - sometimes\npip seems to prefer a version which will not build. If you don\u2019t install\nlxml, pyAMI will still work, but you will only be able to obtain XML output\non the command line. However if you only want to use the API of pyAMI you may\nskip this step.:</p>\n<pre>easy_install --allow-hosts=lxml.de,*.python.org lxml==2.2.8\n</pre>\n</li>\n<li><p>Now so that you can use pyAMI conveniently you must adjust your paths in the\nWindows environment. If you do not know how to do this follow the instructions\nhere <a href=\"http://www.java.com/en/download/help/path.xml\" rel=\"nofollow\">www.java.com/en/download/help/path.xml</a>.\nAdd to the path:</p>\n<pre>PATH    C:\\PYTHON27;C:\\PYTHON27\\Scripts\n</pre>\n</li>\n<li><p>Lastly explain to Windows that a python script can be executed.\nAdd to the <tt>PATHEXT</tt> variable:</p>\n<pre>PATHEXT .PY\n</pre>\n</li>\n<li><p>Then change the name of the file <tt>ami</tt>  in <tt><span class=\"pre\">C:\\Python27\\Scripts</span></tt> to <tt>ami.py</tt>\nso that script ami.py can be executed just by typing <tt>ami</tt>.</p>\n</li>\n</ol>\n<div>\n<p>Note</p>\n<p>If you are not administrator of your machine you will probably need to\ncreate the PATHEXT variable in your windows user environment.</p>\n</div>\n</div>\n</div>\n<div id=\"authentication\">\n<h2>Authentication</h2>\n<p>VOMS authentication is supported:</p>\n<pre>voms-proxy-init -voms atlas\n</pre>\n<p>The alternative option (if gLite is not available)\nis to send your username and password along with each AMI command. You can do\nthis explicitly, or you can set up an encrypted configuration file by running:</p>\n<pre>ami auth\n</pre>\n<p>This will prompt you for your AMI username and password.\nYou will only need to do this once since your credentials are stored in\n<tt><span class=\"pre\">~/.pyami/ami.cfg</span></tt> for later use. If your credentials change just\nrun <tt>ami auth</tt> again. If you would like to keep your pyAMI configuration\nin a directory other than <tt><span class=\"pre\">~/.pyami</span></tt> then set the environment\nvariable <tt>PYAMI_CONFIG_DIR</tt>.</p>\n<div>\n<p>Note</p>\n<p>Once you make an ami configuration file it will override your voms proxy.\nYou should destroy it if you want to use a proxy. We implemented it this way because\nthe most common user error seemed to be trying to run pyAMI with an expired proxy!\nExplicitly giving a username and password will override the configuration file.</p>\n</div>\n<div id=\"version-4-1-2-26-2-2013\">\n<h3>Version 4.1.2 (26/2/2013)</h3>\n<ul>\n<li>Upgrade to distribute 0.6.34</li>\n<li>Fix installation on Windows</li>\n<li>Docs now build properly with buildout</li>\n<li>Install setup_pyAMI with the pyAMI bundle for backward compatibility</li>\n</ul>\n</div>\n<div id=\"version-4-1-1-13-2-2013\">\n<h3>Version 4.1.1 (13/2/2013)</h3>\n<ul>\n<li>Upgrade to buildout 2.0.0</li>\n<li>Fix a few import issues in pyAMI.extern.ZSI</li>\n</ul>\n</div>\n<div id=\"version-4-1-0-4-2-2013\">\n<h3>Version 4.1.0 (4/2/2013)</h3>\n<ul>\n<li>A patched version of ZSI is now included in pyAMI.extern that removes\ndependency on PyXML.</li>\n<li>argparse is now included in pyAMI.extern.</li>\n<li>A minimal pyAMI installation (no lxml) now does not depend on any external\nnon-standard library packages.</li>\n<li>Added the -F and \u2013from-file to the \u201cami list datasets\u201d command where the\npattern is interpreted as a file name which will be read for patterns (one per\nline, ignoring blank lines or lines beginning with #).</li>\n<li>Added the option to perform literal matches with \u201cami list datasets\u201d\nusing the new optional flags -L or \u2013literal-match. In this case the pattern\nis interpreted as a literal string and the results must match exactly.\nA literal match query is much faster than a patterned match and can greatly\nspeed up commands where you want to query information for known elements.\nThis option pairs nicely with the new \u2013from-file feature mentioned above for\nfiles listing many complete dataset names that should be interpreted literally\nand not as patterns.</li>\n<li>AMI errors are now printed correctly.</li>\n</ul>\n</div>\n<div id=\"version-4-0-4-6-11-2012\">\n<h3>Version 4.0.4 (6/11/2012)</h3>\n<ul>\n<li>Fix globbing issue. Only surround pattern with % if the pattern didn\u2019t have %\non both ends originally. (it needed more fixing!)</li>\n</ul>\n</div>\n<div id=\"version-4-0-3-11-10-2012\">\n<h3>Version 4.0.3 (11/10/2012)</h3>\n<ul>\n<li>Skip version 4.0.2 to sync with ATLAS SVN tag version</li>\n<li>Fix setup.py for py2.4 compatibility</li>\n<li>Make ami-status=VALID default</li>\n<li>Fix globbing issue. Only surround pattern with % if the pattern didn\u2019t have %\non both ends originally.</li>\n</ul>\n</div>\n<div id=\"version-4-0-1-20-9-2012\">\n<h3>Version 4.0.1 (20/9/2012)</h3>\n<ul>\n<li>This is pyAMI-04-00-01 in the ATLAS release</li>\n<li>Minor syntax changes in the API</li>\n<li>Added Windows installation to the doc</li>\n<li>Expanded doc section on API</li>\n</ul>\n</div>\n<div id=\"version-4-0-0a3-17-4-2012\">\n<h3>Version 4.0.0a3 (17/4/2012)</h3>\n<ul>\n<li>Make distribute the default install method</li>\n<li>Include patched urllib2 module in pyAMI.backports</li>\n</ul>\n</div>\n<div id=\"version-4-0-0a2-10-4-2012\">\n<h3>Version 4.0.0a2 (10/4/2012)</h3>\n<ul>\n<li>Second prerelease of the new pyAMI</li>\n<li>Support for connection through a proxy (BNL)</li>\n<li>Other minor improvements</li>\n</ul>\n</div>\n<div id=\"version-4-0-0a1-28-3-2012\">\n<h3>Version 4.0.0a1 (28/3/2012)</h3>\n<ul>\n<li>Prerelease of the new pyAMI</li>\n<li>Package renamed to pyAMI</li>\n<li>Speed improvements</li>\n<li>VOMS authentication</li>\n<li>Fixed permissions of ~/.pyami/ami.cfg</li>\n<li>Removed intermediate ami package\nEverything is now under pyAMI</li>\n</ul>\n<p>atlasmeta versions below:</p>\n</div>\n<div id=\"version-0-4-0-4-2-2012\">\n<h3>Version 0.4.0 (4/2/2012)</h3>\n<ul>\n<li>Now compatible with Python 2.4</li>\n<li>Install with distutils by default and make installation with distribute optional</li>\n<li>Improved parent-type feature in dataset query</li>\n<li>Ability to specify a good runs list (GRL) in \u2018ami list data\u2019 and only\nthe runs contained in the GRL are shown</li>\n<li>Installed on LXPLUS at CERN</li>\n<li>XSL transformations reimplemented</li>\n</ul>\n</div>\n<div id=\"version-0-3-1-10-1-2012\">\n<h3>Version 0.3.1 (10/1/2012)</h3>\n<ul>\n<li>Fix bug in file listing where size/events is NULL in database</li>\n</ul>\n</div>\n<div id=\"version-0-3-20-12-2011\">\n<h3>Version 0.3 (20/12/2011)</h3>\n<ul>\n<li>Add ability to query datasets by parent type with \u2013parent-type option</li>\n<li>list files in dataset with \u2018ami list files\u2019 and optionally display total size\nand events</li>\n<li>new schema module replicating AMI schema</li>\n<li>query files, projects, subprojects, datatypes, subdatatypes, tags, nomenclatures,\nproduction steps</li>\n</ul>\n</div>\n<div id=\"version-0-2-17-12-2011\">\n<h3>Version 0.2 (17/12/2011)</h3>\n<ul>\n<li>Query and display additional dataset fields (i.e. datatype, number of events)</li>\n</ul>\n</div>\n<div id=\"version-0-1-1-12-2011\">\n<h3>Version 0.1 (1/12/2011)</h3>\n<ul>\n<li>Forked pyAMI</li>\n<li>Major code rewrite</li>\n<li>better command-line interface</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 906354, "releases": {"4.0.0a3": [{"comment_text": "", "digests": {"md5": "fbbd712e5504428d40e2aec4f9e584c7", "sha256": "d789a74f3bcc37d9823e6d8eed1aa34de91e0dca3246ca0cf0c157792bb0b115"}, "downloads": -1, "filename": "pyAMI-4.0.0a3.tar.gz", "has_sig": false, "md5_digest": "fbbd712e5504428d40e2aec4f9e584c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56746, "upload_time": "2012-04-18T03:15:31", "upload_time_iso_8601": "2012-04-18T03:15:31.368534Z", "url": "https://files.pythonhosted.org/packages/53/c8/39341d2a39ea7fcd222cf6cff3211eb87146b4f2913563cfb0e644817a54/pyAMI-4.0.0a3.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "b288551eac3023d7f0a8edcd63e83f38", "sha256": "6fb5b3602f82672859f13a5da4c877335fe9b4bca7ba19e2de35ddd0a1e65731"}, "downloads": -1, "filename": "pyAMI-4.0.1.tar.gz", "has_sig": false, "md5_digest": "b288551eac3023d7f0a8edcd63e83f38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47178, "upload_time": "2012-09-22T06:15:38", "upload_time_iso_8601": "2012-09-22T06:15:38.909447Z", "url": "https://files.pythonhosted.org/packages/26/bc/1aad623b1614cd62e3d7654989c0b6323ef583ac7c105c0d26ee2dbc97e2/pyAMI-4.0.1.tar.gz", "yanked": false}], "4.0.3": [{"comment_text": "", "digests": {"md5": "3680cc27d55785c8fc15385b69f564db", "sha256": "da3132ebdc8903adf4ffd9dc5bfd016ad447d682978a25a2e83c8a86169cc489"}, "downloads": -1, "filename": "pyAMI-4.0.3.tar.gz", "has_sig": false, "md5_digest": "3680cc27d55785c8fc15385b69f564db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61238, "upload_time": "2012-10-10T17:30:51", "upload_time_iso_8601": "2012-10-10T17:30:51.749090Z", "url": "https://files.pythonhosted.org/packages/9b/90/91cd53d2c7f38a808df5df553923642075bed8f26fc10d4a2c0d7d4d3f95/pyAMI-4.0.3.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "188dd6493ba9d386b3295200342f0308", "sha256": "fd7bbdbb513f0a81ca84a6163c4161cdeb9b64090ebf956476347ab2356f21c0"}, "downloads": -1, "filename": "pyAMI-4.1.0.tar.gz", "has_sig": false, "md5_digest": "188dd6493ba9d386b3295200342f0308", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 233535, "upload_time": "2013-02-11T10:25:04", "upload_time_iso_8601": "2013-02-11T10:25:04.739871Z", "url": "https://files.pythonhosted.org/packages/8a/0a/1703b4309a4cbe68ff31271b6a840a9680934b8cfbc8b0414e3bca656b1d/pyAMI-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "b8b8a11becdc9944c5f6eb830d5bc665", "sha256": "b5374d0d72897b2f330fc56e71beee53d27813513b0d4d7f958f31aab69b56c4"}, "downloads": -1, "filename": "pyAMI-4.1.1.tar.gz", "has_sig": false, "md5_digest": "b8b8a11becdc9944c5f6eb830d5bc665", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 233322, "upload_time": "2013-02-14T09:39:26", "upload_time_iso_8601": "2013-02-14T09:39:26.801273Z", "url": "https://files.pythonhosted.org/packages/b5/7e/71330f98b0658d99152d2dda88012f7f2cfc78297029625e5675486c5cd2/pyAMI-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "19434ea76370dd93e8d16a3f9838968b", "sha256": "03ef96a847eb5f38ca508ea5e54ecf1f935c829d6b9b2ed79f559f4e0cd8b098"}, "downloads": -1, "filename": "pyAMI-4.1.2.tar.gz", "has_sig": false, "md5_digest": "19434ea76370dd93e8d16a3f9838968b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234581, "upload_time": "2013-02-26T09:56:43", "upload_time_iso_8601": "2013-02-26T09:56:43.556828Z", "url": "https://files.pythonhosted.org/packages/41/93/e07fa3af1d508358de775c5e728f93f1f70364da0c501a80c3da8fa607f8/pyAMI-4.1.2.tar.gz", "yanked": false}], "4.1.3": [{"comment_text": "", "digests": {"md5": "9e6a29fbe0e3ef987a7d9211aefd0241", "sha256": "ba26b68365e49d1b209851f898e95a16a227ba8b72525c25ae57a6967f156afa"}, "downloads": -1, "filename": "pyAMI-4.1.3.tar.gz", "has_sig": false, "md5_digest": "9e6a29fbe0e3ef987a7d9211aefd0241", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235483, "upload_time": "2013-10-29T14:43:26", "upload_time_iso_8601": "2013-10-29T14:43:26.629756Z", "url": "https://files.pythonhosted.org/packages/4c/b8/8b671be78a83a116734fab3056cf9f42ab30c1c3dd018656608521d2831a/pyAMI-4.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e6a29fbe0e3ef987a7d9211aefd0241", "sha256": "ba26b68365e49d1b209851f898e95a16a227ba8b72525c25ae57a6967f156afa"}, "downloads": -1, "filename": "pyAMI-4.1.3.tar.gz", "has_sig": false, "md5_digest": "9e6a29fbe0e3ef987a7d9211aefd0241", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235483, "upload_time": "2013-10-29T14:43:26", "upload_time_iso_8601": "2013-10-29T14:43:26.629756Z", "url": "https://files.pythonhosted.org/packages/4c/b8/8b671be78a83a116734fab3056cf9f42ab30c1c3dd018656608521d2831a/pyAMI-4.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:44 2020"}