{"info": {"author": "Aaron Biller", "author_email": "aaronbiller@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Database", "Topic :: Utilities"], "description": "|Comparator|\n\nCOMPARATOR\n==========\n\n|pypi| |versions| |CircleCI| |Coverage Status|\n\nComparator is a utility for comparing the results of queries run against\ntwo databases. Future development will include support for APIs, static\nfiles, and more.\n\nInstallation\n------------\n\n.. code:: bash\n\n   pip install comparator\n\nUsage\n-----\n\nOverview\n~~~~~~~~\n\n.. code:: python\n\n   from spackl import db\n\n   import comparator as cpt\n\n   conf = db.Config()\n   l = db.Postgres(**conf.default)\n   r = db.Postgres(**conf.other_db)\n   query = 'SELECT * FROM my_table ORDER BY 1'\n\n   c = cpt.Comparator(l, query, r)\n   c.run_comparisons()\n\n::\n\n   [('basic_comp', True)]\n\nIncluded Comparisons\n~~~~~~~~~~~~~~~~~~~~\n\nThere are some basic comparisons included, and they can be imported and\npassed using constants.\n\n.. code:: python\n\n   from comparator.comps import BASIC_COMP, LEN_COMP\n\n   c = cpt.Comparator(l, query, r, comps=[BASIC_COMP, LEN_COMP])\n   c.run_comparisons()\n\n::\n\n   [('basic_comp', True), ('len_comp', True)]\n\nQueries and Exceptions\n~~~~~~~~~~~~~~~~~~~~~~\n\nIt\u2019s possible to run different queries against each database. You can\nraise exceptions if that\u2019s your speed.\n\n.. code:: python\n\n   lq = 'SELECT * FROM my_table ORDER BY 1'\n   rq = 'SELECT id, uuid, name FROM reporting.my_table ORDER BY 1'\n   comparisons = [BASIC_COMP, LEN_COMP]\n\n   c = cpt.Comparator(l, lq, r, rq, comps=comparisons)\n\n   for result in c.compare():\n       if not result:\n           raise Exception('{} check failed!'.format(result.name))\n\nCustom Comparisons\n~~~~~~~~~~~~~~~~~~\n\nYou\u2019ll probably want to define your own comparison checks. You can do so\nby defining functions that accept ``left`` and ``right`` args, which correspond\nto the results of the queries against your \"left\" and \"right\" data source,\nrespectively. Perform whatever magic you like, and return a boolean (or not\u2026 your choice).\n\n.. code:: python\n\n   def left_is_longer(left, right):\n       # Return True if left contains more rows than right\n       return len(left) > len(right)\n\n\n   def totals_are_equal(left, right):\n       # Return True if sum(left) == sum(right)\n       sl, sr = 0, 0\n       for row in left:\n           sl += int(row[1])\n       for row in right:\n           sr += int(row[1])\n       return sl == sr\n\n\n   c = cpt.Comparator(l, query, r, comps=[left_is_longer, totals_are_equal])\n   c.run_comparisons()\n\n::\n\n   [('left_is_longer', False), ('totals_are_equal', True)]\n\nAccess Comparator and Query Results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe results of both queries and comparisons can be checked using\nstandard operators, as well as for \u201ctruthiness\u201d (ex:\n``failures = [result.name for result in c.compare() if result is False]``).\n\nComparisons do not always need to return a boolean. Accessing the\nresulting value of such a comparison is simple.\n\n.. code:: python\n\n   def len_diff(left, right):\n       return len(left) - len(right)\n\n\n   c = cpt.Comparator(l, query, r, comps=len_diff)\n   res = c.run_comparisons()[0]\n   if res == 0:\n       print('They match')\n   elif res < 0:\n       print('Left is shorter by {}'.format(res.result))\n   else:\n       print('Left is longer by {}'.format(res.result))\n\nIt's recommended that you use the ``spackl`` package for instantiating your\n\"left\" and \"right\" data source objects (``pip install spackl``). This package\nwas originally part of ``comparator``, and provides the following functionality:\n\nQuery results are contained in the ``QueryResult`` class, which provides\nsimple yet powerful ways to look up and access the output of the query.\nData can be retrieved as a dict, list, json string, or pandas DataFrame.\nRows/columns can be accesed by index, attribute, or key. Iterating on\nthe ``QueryResult`` returns a ``QueryResultRow``, which has the same\nlookup functionality, as well as standard operators (<, >, =, etc).\n\n.. code:: python\n\n   from spackl import db\n\n   conf = db.Config()\n   pg = db.Postgres(**conf.default)\n   res = pg.query(query_string)\n\n   res          # [{'a': 1, 'b': 2, 'c': 3}, {'a': 4, 'b': 5, 'c': 6}, {'a': 7, 'b': 8, 'c': 9}]\n\n   res.a        # (1, 4, 7)\n   res['a']     # (1, 4, 7)\n   res[0]       # QueryResultRow : (1, 2, 3)\n\n   res[0].a     # 1\n   res[0]['a']  # 1\n   res[0][0]    # 1\n\n   res.dict()   # {'a': (1, 4, 7), 'b': (2, 5, 8), 'c': (3, 6, 9)}\n   res.list()   # [(1, 2, 3), (4, 5, 6), (7, 8, 9)]\n   res.first()  # QueryResultRow : (1, 2, 3)\n\nThese result sets can be used to great effect in comparison callables.\nFor example, accessing the result of a query as a pandas DataFrame\nallows for an endless variety of checks/manipulations do be done on a\nsingle query output.\n\nSupport is being added to ``spackl`` to allow for querying from files and APIs\nusing the same methods, allowing for easy comparison between many disparate\ndata sources. Stay tuned.\n\n.. |Comparator| image:: https://raw.githubusercontent.com/aaronbiller/comparator/master/docs/comparator.jpg\n.. |pypi| image:: https://img.shields.io/pypi/v/comparator.svg\n   :target: https://pypi.org/project/comparator/\n.. |versions| image:: https://img.shields.io/pypi/pyversions/comparator.svg\n   :target: https://pypi.org/project/comparator/\n.. |CircleCI| image:: https://circleci.com/gh/aaronbiller/comparator/tree/master.svg?style=shield\n   :target: https://circleci.com/gh/aaronbiller/comparator/tree/master\n.. |Coverage Status| image:: https://coveralls.io/repos/github/aaronbiller/comparator/badge.svg?branch=master\n   :target: https://coveralls.io/github/aaronbiller/comparator?branch=master\n\nCHANGELOG\n=========\n\n0.4.0 (2019-03-09)\n------------------\n\n- BREAKING - All ``source`` modules and methods have been stripped out\n- Functionality has been moved to the ``spackl`` package (``pip install spackl``)\n- The ``comparator`` package will expect ``spackl`` to be used for all ``left`` and ``right`` data sources\n\n0.4.0rc3 (2018-12-05)\n---------------------\n\n- Adds better transaction handling in the PostgresDb class\n- Cleans up calls to connect() in the Db classes\n\n0.4.0rc2 (2018-12-05)\n---------------------\n\n- BREAKING - ``QueryPair`` arguments order has changed (``QueryPair(left, lquery, right, rquery)``)\n- ``QueryPair``, ``Comparator``, and ``ComparatorSet`` no longer require a \"right\" Db\n\n0.4.0rc1 (2018-11-07)\n---------------------\n\n- DEPRECATED - the ``from_list`` method on ``ComparatorSet``\n- adds the ``QueryPair`` class\n- BREAKING - ``Comparator`` and ``ComparatorSet`` are instantiated with ``QueryPair`` objects\n- BREAKING - ``ComparatorSet.from_dict()`` requires the dict as the first argument\n- BREAKING - ``QueryResult.keys()`` and ``QueryResult.values()`` both return generators\n- the ``rquery`` passed to a ``QueryPair`` can be formatted with the ``lquery`` query result\n- adds the ``QueryResultCol`` class\n- adds the ``append``, ``pop``, ``extend``, and ``filter`` methods on ``QueryResult``\n- downgrades pandas version requirement to >=0.22.0\n- improves docstrings on ``QueryResult`` methods\n- adds slice handling to ``QueryResult``\n- adds ``empty`` property to ``QueryResult``\n\n0.3.2 (2018-10-04)\n------------------\n\n- adds MANIFEST.in for readme and changes\n\n0.3.1 (2018-10-03)\n------------------\n\n- adds ``creds_file`` to possible BigQueryDb init kwargs\n\n0.3.0 (2018-10-03)\n------------------\n\n-  DEPRECATED - the ``query_df`` method on ``BaseDb`` and subclasses\n-  DEPRECATED - the ``output`` kwarg for Comparator results\n-  adds the ``execute`` method on ``BaseDb`` and subclasses\n-  adds the ``QueryResult`` and ``QueryResultRow`` classes\n-  adds the ``ComparatorSet`` class\n-  adds ``list_tables`` and ``delete_table`` methods to ``BigQueryDb``\n-  cleans up some python 2/3 compatability using six\n\n0.2.1 (2018-09-19)\n------------------\n\n-  officially support Python 2.7, 3.6, and 3.7\n\n0.2.0 (2018-09-18)\n------------------\n\n-  adds ``query_df`` methods for returning pandas DataFrames\n-  adds ``output`` kwarg to Comparator to allow calling the ``query_df`` method\n\n0.1.0 (2018-09-12)\n------------------\n\n-  initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aaronbiller/comparator", "keywords": "utility compare database", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "comparator", "package_url": "https://pypi.org/project/comparator/", "platform": "", "project_url": "https://pypi.org/project/comparator/", "project_urls": {"Homepage": "https://github.com/aaronbiller/comparator"}, "release_url": "https://pypi.org/project/comparator/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Utility for comparing results between data sources", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Comparator\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c80e4b6c3b135e186bfd14202d8eaec8bc923fcc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6161726f6e62696c6c65722f636f6d70617261746f722f6d61737465722f646f63732f636f6d70617261746f722e6a7067\"></p>\n<div id=\"comparator\">\n<h2>COMPARATOR</h2>\n<p><a href=\"https://pypi.org/project/comparator/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29d217b476b935ee948708cdb19015ae7e386bed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6d70617261746f722e737667\"></a> <a href=\"https://pypi.org/project/comparator/\" rel=\"nofollow\"><img alt=\"versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c0e0595a8312bd6d4f2fc9923ab4fdef8a0ffd9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6d70617261746f722e737667\"></a> <a href=\"https://circleci.com/gh/aaronbiller/comparator/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40fe4fae14aa6ecee951352c09653cbf50f0ccff/68747470733a2f2f636972636c6563692e636f6d2f67682f6161726f6e62696c6c65722f636f6d70617261746f722f747265652f6d61737465722e7376673f7374796c653d736869656c64\"></a> <a href=\"https://coveralls.io/github/aaronbiller/comparator?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d28ef3f7b37e21e1d62824f797bbec6ecd2c8d8c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6161726f6e62696c6c65722f636f6d70617261746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Comparator is a utility for comparing the results of queries run against\ntwo databases. Future development will include support for APIs, static\nfiles, and more.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install comparator\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"overview\">\n<h4>Overview</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spackl</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">comparator</span> <span class=\"k\">as</span> <span class=\"nn\">cpt</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Postgres</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Postgres</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">other_db</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT * FROM my_table ORDER BY 1'</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cpt</span><span class=\"o\">.</span><span class=\"n\">Comparator</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run_comparisons</span><span class=\"p\">()</span>\n</pre>\n<pre>[('basic_comp', True)]\n</pre>\n</div>\n<div id=\"included-comparisons\">\n<h4>Included Comparisons</h4>\n<p>There are some basic comparisons included, and they can be imported and\npassed using constants.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">comparator.comps</span> <span class=\"kn\">import</span> <span class=\"n\">BASIC_COMP</span><span class=\"p\">,</span> <span class=\"n\">LEN_COMP</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cpt</span><span class=\"o\">.</span><span class=\"n\">Comparator</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">comps</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">BASIC_COMP</span><span class=\"p\">,</span> <span class=\"n\">LEN_COMP</span><span class=\"p\">])</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run_comparisons</span><span class=\"p\">()</span>\n</pre>\n<pre>[('basic_comp', True), ('len_comp', True)]\n</pre>\n</div>\n<div id=\"queries-and-exceptions\">\n<h4>Queries and Exceptions</h4>\n<p>It\u2019s possible to run different queries against each database. You can\nraise exceptions if that\u2019s your speed.</p>\n<pre><span class=\"n\">lq</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT * FROM my_table ORDER BY 1'</span>\n<span class=\"n\">rq</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT id, uuid, name FROM reporting.my_table ORDER BY 1'</span>\n<span class=\"n\">comparisons</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">BASIC_COMP</span><span class=\"p\">,</span> <span class=\"n\">LEN_COMP</span><span class=\"p\">]</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cpt</span><span class=\"o\">.</span><span class=\"n\">Comparator</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">lq</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">rq</span><span class=\"p\">,</span> <span class=\"n\">comps</span><span class=\"o\">=</span><span class=\"n\">comparisons</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">compare</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\"> check failed!'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"custom-comparisons\">\n<h4>Custom Comparisons</h4>\n<p>You\u2019ll probably want to define your own comparison checks. You can do so\nby defining functions that accept <tt>left</tt> and <tt>right</tt> args, which correspond\nto the results of the queries against your \u201cleft\u201d and \u201cright\u201d data source,\nrespectively. Perform whatever magic you like, and return a boolean (or not\u2026 your choice).</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">left_is_longer</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Return True if left contains more rows than right</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">right</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">totals_are_equal</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Return True if sum(left) == sum(right)</span>\n    <span class=\"n\">sl</span><span class=\"p\">,</span> <span class=\"n\">sr</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">left</span><span class=\"p\">:</span>\n        <span class=\"n\">sl</span> <span class=\"o\">+=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">right</span><span class=\"p\">:</span>\n        <span class=\"n\">sr</span> <span class=\"o\">+=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">sl</span> <span class=\"o\">==</span> <span class=\"n\">sr</span>\n\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cpt</span><span class=\"o\">.</span><span class=\"n\">Comparator</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">comps</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">left_is_longer</span><span class=\"p\">,</span> <span class=\"n\">totals_are_equal</span><span class=\"p\">])</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run_comparisons</span><span class=\"p\">()</span>\n</pre>\n<pre>[('left_is_longer', False), ('totals_are_equal', True)]\n</pre>\n</div>\n<div id=\"access-comparator-and-query-results\">\n<h4>Access Comparator and Query Results</h4>\n<p>The results of both queries and comparisons can be checked using\nstandard operators, as well as for \u201ctruthiness\u201d (ex:\n<tt>failures = [result.name for result in c.compare() if result is False]</tt>).</p>\n<p>Comparisons do not always need to return a boolean. Accessing the\nresulting value of such a comparison is simple.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">len_diff</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">right</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cpt</span><span class=\"o\">.</span><span class=\"n\">Comparator</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">comps</span><span class=\"o\">=</span><span class=\"n\">len_diff</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run_comparisons</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">if</span> <span class=\"n\">res</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'They match'</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">res</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Left is shorter by </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Left is longer by </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">))</span>\n</pre>\n<p>It\u2019s recommended that you use the <tt>spackl</tt> package for instantiating your\n\u201cleft\u201d and \u201cright\u201d data source objects (<tt>pip install spackl</tt>). This package\nwas originally part of <tt>comparator</tt>, and provides the following functionality:</p>\n<p>Query results are contained in the <tt>QueryResult</tt> class, which provides\nsimple yet powerful ways to look up and access the output of the query.\nData can be retrieved as a dict, list, json string, or pandas DataFrame.\nRows/columns can be accesed by index, attribute, or key. Iterating on\nthe <tt>QueryResult</tt> returns a <tt>QueryResultRow</tt>, which has the same\nlookup functionality, as well as standard operators (&lt;, &gt;, =, etc).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spackl</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">pg</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Postgres</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">query_string</span><span class=\"p\">)</span>\n\n<span class=\"n\">res</span>          <span class=\"c1\"># [{'a': 1, 'b': 2, 'c': 3}, {'a': 4, 'b': 5, 'c': 6}, {'a': 7, 'b': 8, 'c': 9}]</span>\n\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">a</span>        <span class=\"c1\"># (1, 4, 7)</span>\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>     <span class=\"c1\"># (1, 4, 7)</span>\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>       <span class=\"c1\"># QueryResultRow : (1, 2, 3)</span>\n\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">a</span>     <span class=\"c1\"># 1</span>\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>  <span class=\"c1\"># 1</span>\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>    <span class=\"c1\"># 1</span>\n\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">()</span>   <span class=\"c1\"># {'a': (1, 4, 7), 'b': (2, 5, 8), 'c': (3, 6, 9)}</span>\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>   <span class=\"c1\"># [(1, 2, 3), (4, 5, 6), (7, 8, 9)]</span>\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>  <span class=\"c1\"># QueryResultRow : (1, 2, 3)</span>\n</pre>\n<p>These result sets can be used to great effect in comparison callables.\nFor example, accessing the result of a query as a pandas DataFrame\nallows for an endless variety of checks/manipulations do be done on a\nsingle query output.</p>\n<p>Support is being added to <tt>spackl</tt> to allow for querying from files and APIs\nusing the same methods, allowing for easy comparison between many disparate\ndata sources. Stay tuned.</p>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"id1\">\n<h3>0.4.0 (2019-03-09)</h3>\n<ul>\n<li>BREAKING - All <tt>source</tt> modules and methods have been stripped out</li>\n<li>Functionality has been moved to the <tt>spackl</tt> package (<tt>pip install spackl</tt>)</li>\n<li>The <tt>comparator</tt> package will expect <tt>spackl</tt> to be used for all <tt>left</tt> and <tt>right</tt> data sources</li>\n</ul>\n</div>\n<div id=\"rc3-2018-12-05\">\n<h3>0.4.0rc3 (2018-12-05)</h3>\n<ul>\n<li>Adds better transaction handling in the PostgresDb class</li>\n<li>Cleans up calls to connect() in the Db classes</li>\n</ul>\n</div>\n<div id=\"rc2-2018-12-05\">\n<h3>0.4.0rc2 (2018-12-05)</h3>\n<ul>\n<li>BREAKING - <tt>QueryPair</tt> arguments order has changed (<tt>QueryPair(left, lquery, right, rquery)</tt>)</li>\n<li><tt>QueryPair</tt>, <tt>Comparator</tt>, and <tt>ComparatorSet</tt> no longer require a \u201cright\u201d Db</li>\n</ul>\n</div>\n<div id=\"rc1-2018-11-07\">\n<h3>0.4.0rc1 (2018-11-07)</h3>\n<ul>\n<li>DEPRECATED - the <tt>from_list</tt> method on <tt>ComparatorSet</tt></li>\n<li>adds the <tt>QueryPair</tt> class</li>\n<li>BREAKING - <tt>Comparator</tt> and <tt>ComparatorSet</tt> are instantiated with <tt>QueryPair</tt> objects</li>\n<li>BREAKING - <tt>ComparatorSet.from_dict()</tt> requires the dict as the first argument</li>\n<li>BREAKING - <tt>QueryResult.keys()</tt> and <tt>QueryResult.values()</tt> both return generators</li>\n<li>the <tt>rquery</tt> passed to a <tt>QueryPair</tt> can be formatted with the <tt>lquery</tt> query result</li>\n<li>adds the <tt>QueryResultCol</tt> class</li>\n<li>adds the <tt>append</tt>, <tt>pop</tt>, <tt>extend</tt>, and <tt>filter</tt> methods on <tt>QueryResult</tt></li>\n<li>downgrades pandas version requirement to &gt;=0.22.0</li>\n<li>improves docstrings on <tt>QueryResult</tt> methods</li>\n<li>adds slice handling to <tt>QueryResult</tt></li>\n<li>adds <tt>empty</tt> property to <tt>QueryResult</tt></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.2 (2018-10-04)</h3>\n<ul>\n<li>adds MANIFEST.in for readme and changes</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.1 (2018-10-03)</h3>\n<ul>\n<li>adds <tt>creds_file</tt> to possible BigQueryDb init kwargs</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.0 (2018-10-03)</h3>\n<ul>\n<li>DEPRECATED - the <tt>query_df</tt> method on <tt>BaseDb</tt> and subclasses</li>\n<li>DEPRECATED - the <tt>output</tt> kwarg for Comparator results</li>\n<li>adds the <tt>execute</tt> method on <tt>BaseDb</tt> and subclasses</li>\n<li>adds the <tt>QueryResult</tt> and <tt>QueryResultRow</tt> classes</li>\n<li>adds the <tt>ComparatorSet</tt> class</li>\n<li>adds <tt>list_tables</tt> and <tt>delete_table</tt> methods to <tt>BigQueryDb</tt></li>\n<li>cleans up some python 2/3 compatability using six</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.1 (2018-09-19)</h3>\n<ul>\n<li>officially support Python 2.7, 3.6, and 3.7</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2.0 (2018-09-18)</h3>\n<ul>\n<li>adds <tt>query_df</tt> methods for returning pandas DataFrames</li>\n<li>adds <tt>output</tt> kwarg to Comparator to allow calling the <tt>query_df</tt> method</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.0 (2018-09-12)</h3>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4918209, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6bc5c49efc81ec6940b657c0dc891ff2", "sha256": "11715001c1230c143cabab2ee485ed528885f1909cfda0afb66554e363e92fae"}, "downloads": -1, "filename": "comparator-0.1.0-py3.6.egg", "has_sig": false, "md5_digest": "6bc5c49efc81ec6940b657c0dc891ff2", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 36999, "upload_time": "2018-09-12T03:00:35", "upload_time_iso_8601": "2018-09-12T03:00:35.735334Z", "url": "https://files.pythonhosted.org/packages/22/91/f825c450a4765356ed610613ffe5908711a6e51fbd26b76a24bd30026c2f/comparator-0.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaa8a5a4d1964476d5c9e5a657ffd246", "sha256": "17a9e3fb6b3a3bf4f2ff3a9a1c3261f789e49c4c75f2d4866e574014a6fa5d69"}, "downloads": -1, "filename": "comparator-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eaa8a5a4d1964476d5c9e5a657ffd246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10580, "upload_time": "2018-09-12T03:00:36", "upload_time_iso_8601": "2018-09-12T03:00:36.977909Z", "url": "https://files.pythonhosted.org/packages/06/40/768a3b6d1b52d5bb824b1b43cf95a65319f0ad89a1b3f0b6a024cf89e95d/comparator-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b98c0ba01942eef80eb42da23dc5677a", "sha256": "5ada3832641911e36a7298aa079ac7cd65c45bc3f9443427071296cff6775932"}, "downloads": -1, "filename": "comparator-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "b98c0ba01942eef80eb42da23dc5677a", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 39440, "upload_time": "2018-09-18T22:38:55", "upload_time_iso_8601": "2018-09-18T22:38:55.280929Z", "url": "https://files.pythonhosted.org/packages/ed/63/30be1092a0bce40160f2e2ad171ce862fd8a103650c78331101a56c569e6/comparator-0.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7a6545eb961e6f49a8d2caa6988dbbc", "sha256": "7720922ce54c9353aa39b98828d9e2d5caf88781406559b9047cc1446fb2f0c0"}, "downloads": -1, "filename": "comparator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a7a6545eb961e6f49a8d2caa6988dbbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11567, "upload_time": "2018-09-18T22:38:56", "upload_time_iso_8601": "2018-09-18T22:38:56.547291Z", "url": "https://files.pythonhosted.org/packages/bc/de/8215834f7e42fad71a339c546aabee280106ff58f9b2bea4d9cd8fa3c021/comparator-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "086729fb5c79265b3389f5139e3b1807", "sha256": "b7d97518861c69fc8fa5f5198f6ab18839a7a45f99f98d858073c7cea3f34078"}, "downloads": -1, "filename": "comparator-0.2.1-py2.7.egg", "has_sig": false, "md5_digest": "086729fb5c79265b3389f5139e3b1807", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 39043, "upload_time": "2018-09-19T05:44:04", "upload_time_iso_8601": "2018-09-19T05:44:04.290833Z", "url": "https://files.pythonhosted.org/packages/05/3f/41d8f9816c0c164a4fa30f0a1297aeb153b2dc2c8c4bdff6dc898ca3a5f0/comparator-0.2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "809f2ea8aeed1f961d3fe79e1d1daf53", "sha256": "4a27132f8f1bf97214625d48422f6dd312798802b40c37bdcc0b44ac0d638a7e"}, "downloads": -1, "filename": "comparator-0.2.1-py3.6.egg", "has_sig": false, "md5_digest": "809f2ea8aeed1f961d3fe79e1d1daf53", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 39487, "upload_time": "2018-09-19T05:44:05", "upload_time_iso_8601": "2018-09-19T05:44:05.339799Z", "url": "https://files.pythonhosted.org/packages/ce/e5/27e8e224437314edd941e96054e92a6f6c827ab4a379ea7c7878c65ab72d/comparator-0.2.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4070b6d209967abf80b2ae091ae6ee1c", "sha256": "6b38255ec19f21555b03aaffd2b2bca1f8136252593185b78ee0a91f72803a6e"}, "downloads": -1, "filename": "comparator-0.2.1-py3.7.egg", "has_sig": false, "md5_digest": "4070b6d209967abf80b2ae091ae6ee1c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 39516, "upload_time": "2018-09-19T05:44:06", "upload_time_iso_8601": "2018-09-19T05:44:06.660952Z", "url": "https://files.pythonhosted.org/packages/e3/96/7f0eeb38c27c292a6f85a8c8431ded13b4506978e0b845586f9bd6d74d60/comparator-0.2.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9ada1956562f20fc7df43b62112119f", "sha256": "a9715a45693751ab6ca887cab818c3e86ed6b01a43b2027bd328ba3ca8530b1f"}, "downloads": -1, "filename": "comparator-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d9ada1956562f20fc7df43b62112119f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11802, "upload_time": "2018-09-19T05:44:08", "upload_time_iso_8601": "2018-09-19T05:44:08.016940Z", "url": "https://files.pythonhosted.org/packages/7a/b3/2b67ff1921a944acee34074a377aadc4ada5b938528a0824778bde85771c/comparator-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0a1e769e3dd021de70648a2cf327dbd7", "sha256": "8fd399cedf915005ca7d9e4f816e34483a178c321dd9107a09935c9b9b924f11"}, "downloads": -1, "filename": "comparator-0.3.0-py2.7.egg", "has_sig": false, "md5_digest": "0a1e769e3dd021de70648a2cf327dbd7", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 62520, "upload_time": "2018-10-03T18:01:25", "upload_time_iso_8601": "2018-10-03T18:01:25.351868Z", "url": "https://files.pythonhosted.org/packages/3c/90/3750e1dae1eed3edbc119604d0bbf6760620a14ddc7b3602f70a9ff8bfc1/comparator-0.3.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ddab05e255b752519308d688bf83159", "sha256": "09723ae5735b06308c65cbc0574d9be72756ed2097003b8e9ee4bd307879a153"}, "downloads": -1, "filename": "comparator-0.3.0-py3.6.egg", "has_sig": false, "md5_digest": "9ddab05e255b752519308d688bf83159", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 63262, "upload_time": "2018-10-03T18:01:27", "upload_time_iso_8601": "2018-10-03T18:01:27.281900Z", "url": "https://files.pythonhosted.org/packages/d4/59/d108ea31ba84b9b339ac2de9be929be948a6f14b5a2cd3d38f7a3889a530/comparator-0.3.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8aa3c6458447a7afd45194030f6ca97d", "sha256": "885870c30838f6a03cea34ce079d88c901a932818dedaa2de79e0afe58d2f878"}, "downloads": -1, "filename": "comparator-0.3.0-py3.7.egg", "has_sig": false, "md5_digest": "8aa3c6458447a7afd45194030f6ca97d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 63381, "upload_time": "2018-10-03T18:01:28", "upload_time_iso_8601": "2018-10-03T18:01:28.757609Z", "url": "https://files.pythonhosted.org/packages/d1/29/a3a0e49e363a3faa04f8a1040be36f4b1e935aac80acf80bc6d8741d45fd/comparator-0.3.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "86744eb7ccf17f7940903ffae643eb42", "sha256": "361abef76acd9a3dc177d7cddf11546b05fa4d1a7e166e0d10105796ebd1faff"}, "downloads": -1, "filename": "comparator-0.3.0.tar.gz", "has_sig": false, "md5_digest": "86744eb7ccf17f7940903ffae643eb42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21644, "upload_time": "2018-10-03T18:01:29", "upload_time_iso_8601": "2018-10-03T18:01:29.819300Z", "url": "https://files.pythonhosted.org/packages/31/6f/09db514dae66e83e6df9c74fb089910f0270626b75e95d9dac572a7b9743/comparator-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ad6d42456439a985d1adaadcd2099c05", "sha256": "62f93056ed1335d23f553a3b2153f6add6a11f25d423f526c2dc735c68560efc"}, "downloads": -1, "filename": "comparator-0.3.1-py2.7.egg", "has_sig": false, "md5_digest": "ad6d42456439a985d1adaadcd2099c05", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 62855, "upload_time": "2018-10-03T20:24:08", "upload_time_iso_8601": "2018-10-03T20:24:08.664613Z", "url": "https://files.pythonhosted.org/packages/da/72/cd04be1b00397deb0531574cf5be398258f0143e4cb2ae2894ec96307ca6/comparator-0.3.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "16adae8f5aa66f1e6f9d9836e2ea15de", "sha256": "4763ee335d058e5fa9101fd5569d0eb50c26537f8440ef13816762bde9ed5e96"}, "downloads": -1, "filename": "comparator-0.3.1-py3.6.egg", "has_sig": false, "md5_digest": "16adae8f5aa66f1e6f9d9836e2ea15de", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 63569, "upload_time": "2018-10-03T20:24:10", "upload_time_iso_8601": "2018-10-03T20:24:10.461618Z", "url": "https://files.pythonhosted.org/packages/88/41/12004813812d97d9871741957eb492a057d538b4cc192e207c37fa67f927/comparator-0.3.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a947cfe3bbc3d90b4c87decab437c21", "sha256": "4e477d7a81b0b201729e55fec4b9b9833fd9b8258ec7bca923fe73d82dc9bf0f"}, "downloads": -1, "filename": "comparator-0.3.1-py3.7.egg", "has_sig": false, "md5_digest": "4a947cfe3bbc3d90b4c87decab437c21", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 63692, "upload_time": "2018-10-03T20:24:11", "upload_time_iso_8601": "2018-10-03T20:24:11.880184Z", "url": "https://files.pythonhosted.org/packages/4b/67/8917558defb16478b11b33d73c03aeb35463f1502b8e38ba4e5858c7ef5f/comparator-0.3.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d86936c6510745f0acadce39c073bc8", "sha256": "bae388ece481018509387118cfaa58b832a16495ffac493758f6b19c9a6bc1fa"}, "downloads": -1, "filename": "comparator-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9d86936c6510745f0acadce39c073bc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21828, "upload_time": "2018-10-03T20:24:13", "upload_time_iso_8601": "2018-10-03T20:24:13.087975Z", "url": "https://files.pythonhosted.org/packages/fc/d8/c8c1d362fe38fd9c60eacc5dfd470163cd250d6c4b67fb147b9a16d21e24/comparator-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "dae1fe1b84c536ed4cd9d879128b297e", "sha256": "04d4dace3190a5f1a839796960824e0d77c24c57df4224de51402c702e812d72"}, "downloads": -1, "filename": "comparator-0.3.2-py2.7.egg", "has_sig": false, "md5_digest": "dae1fe1b84c536ed4cd9d879128b297e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 62883, "upload_time": "2018-10-04T13:55:52", "upload_time_iso_8601": "2018-10-04T13:55:52.347610Z", "url": "https://files.pythonhosted.org/packages/60/bd/253bd63bf2277227971b73feaaf2eafdb171758ae9c3a367ba3589fa5931/comparator-0.3.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2206676fb33c6391e27013b35fb1da8", "sha256": "5f13f3759ee5672205b488d2b43418197bc8a7f6e87064fe56de31d103895e66"}, "downloads": -1, "filename": "comparator-0.3.2-py3.6.egg", "has_sig": false, "md5_digest": "e2206676fb33c6391e27013b35fb1da8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 63596, "upload_time": "2018-10-04T13:55:53", "upload_time_iso_8601": "2018-10-04T13:55:53.734681Z", "url": "https://files.pythonhosted.org/packages/2d/da/c615a616abc8f7633932d842b3aff39a795b0613d6f8dcd8899620812a19/comparator-0.3.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d5650a5f079da88e2659134f51e6842", "sha256": "4484d48a62ea742c0b56f11712942cabcd246c3790b617c1ba24fc93ed173de5"}, "downloads": -1, "filename": "comparator-0.3.2-py3.7.egg", "has_sig": false, "md5_digest": "5d5650a5f079da88e2659134f51e6842", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 63718, "upload_time": "2018-10-04T13:55:54", "upload_time_iso_8601": "2018-10-04T13:55:54.989062Z", "url": "https://files.pythonhosted.org/packages/82/d1/d178d5163f2c0c9920ac8f8eda5b21c7224cd27e245513048aa9d3d9baf2/comparator-0.3.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1688d8787990fab24a9f74fa48530ae", "sha256": "25db2e597e2c2b967cc682a62366fb14aa489d0f81f8e1f77ad265a306b3b960"}, "downloads": -1, "filename": "comparator-0.3.2.tar.gz", "has_sig": false, "md5_digest": "e1688d8787990fab24a9f74fa48530ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37075, "upload_time": "2018-10-04T13:55:56", "upload_time_iso_8601": "2018-10-04T13:55:56.300279Z", "url": "https://files.pythonhosted.org/packages/0f/bd/f4c83c365c32a33159d89507074c63bf003f842e668085528663076ac5d9/comparator-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d69d4e941361f74022e46343ca96c14e", "sha256": "e22854c27d5cbdfb36000ae7b76c110d612b780251a351e95dfd940f84a5a06c"}, "downloads": -1, "filename": "comparator-0.4.0-py2.7.egg", "has_sig": false, "md5_digest": "d69d4e941361f74022e46343ca96c14e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26189, "upload_time": "2019-03-09T06:49:01", "upload_time_iso_8601": "2019-03-09T06:49:01.111875Z", "url": "https://files.pythonhosted.org/packages/1a/dd/22aeb41084dc7a6f05684712800c756db41ccd14874c7d5d49aad017247e/comparator-0.4.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b14600734013f6358015d99645676fb", "sha256": "9c2db02a6384dc0ef69e4271f921d30829e6b0bd1d898325f6bad54401469d9f"}, "downloads": -1, "filename": "comparator-0.4.0-py3.6.egg", "has_sig": false, "md5_digest": "9b14600734013f6358015d99645676fb", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 26327, "upload_time": "2019-03-09T06:49:02", "upload_time_iso_8601": "2019-03-09T06:49:02.617795Z", "url": "https://files.pythonhosted.org/packages/43/2f/718a97a0aab4738d3b6e44112c4997c8a38da9b72df09b4b258415ddd1f2/comparator-0.4.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "baf73303f8ce27ee20de8b9363d72f79", "sha256": "6c7f38461b4313a19d82b148a464267a92c1e743676e94676d7b6d41f7d65070"}, "downloads": -1, "filename": "comparator-0.4.0-py3.7.egg", "has_sig": false, "md5_digest": "baf73303f8ce27ee20de8b9363d72f79", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 26351, "upload_time": "2019-03-09T06:49:03", "upload_time_iso_8601": "2019-03-09T06:49:03.986784Z", "url": "https://files.pythonhosted.org/packages/af/0c/30dbafed195e4f1ca1291d0595bbbade1cac8f959ed4693602ce91c5ccff/comparator-0.4.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "07192d6f8a2d056beb3ad42416c98994", "sha256": "2b1ba8532a07ac82c453f7471aa2b13ced91e2f3f55eca3d9180f1cde4e09521"}, "downloads": -1, "filename": "comparator-0.4.0.tar.gz", "has_sig": false, "md5_digest": "07192d6f8a2d056beb3ad42416c98994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13735, "upload_time": "2019-03-09T06:49:05", "upload_time_iso_8601": "2019-03-09T06:49:05.335550Z", "url": "https://files.pythonhosted.org/packages/48/ff/65fe002c2422b60324034984ff3ddda1e2033b16c30c5aedca60c9d435b6/comparator-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d69d4e941361f74022e46343ca96c14e", "sha256": "e22854c27d5cbdfb36000ae7b76c110d612b780251a351e95dfd940f84a5a06c"}, "downloads": -1, "filename": "comparator-0.4.0-py2.7.egg", "has_sig": false, "md5_digest": "d69d4e941361f74022e46343ca96c14e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26189, "upload_time": "2019-03-09T06:49:01", "upload_time_iso_8601": "2019-03-09T06:49:01.111875Z", "url": "https://files.pythonhosted.org/packages/1a/dd/22aeb41084dc7a6f05684712800c756db41ccd14874c7d5d49aad017247e/comparator-0.4.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b14600734013f6358015d99645676fb", "sha256": "9c2db02a6384dc0ef69e4271f921d30829e6b0bd1d898325f6bad54401469d9f"}, "downloads": -1, "filename": "comparator-0.4.0-py3.6.egg", "has_sig": false, "md5_digest": "9b14600734013f6358015d99645676fb", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 26327, "upload_time": "2019-03-09T06:49:02", "upload_time_iso_8601": "2019-03-09T06:49:02.617795Z", "url": "https://files.pythonhosted.org/packages/43/2f/718a97a0aab4738d3b6e44112c4997c8a38da9b72df09b4b258415ddd1f2/comparator-0.4.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "baf73303f8ce27ee20de8b9363d72f79", "sha256": "6c7f38461b4313a19d82b148a464267a92c1e743676e94676d7b6d41f7d65070"}, "downloads": -1, "filename": "comparator-0.4.0-py3.7.egg", "has_sig": false, "md5_digest": "baf73303f8ce27ee20de8b9363d72f79", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 26351, "upload_time": "2019-03-09T06:49:03", "upload_time_iso_8601": "2019-03-09T06:49:03.986784Z", "url": "https://files.pythonhosted.org/packages/af/0c/30dbafed195e4f1ca1291d0595bbbade1cac8f959ed4693602ce91c5ccff/comparator-0.4.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "07192d6f8a2d056beb3ad42416c98994", "sha256": "2b1ba8532a07ac82c453f7471aa2b13ced91e2f3f55eca3d9180f1cde4e09521"}, "downloads": -1, "filename": "comparator-0.4.0.tar.gz", "has_sig": false, "md5_digest": "07192d6f8a2d056beb3ad42416c98994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13735, "upload_time": "2019-03-09T06:49:05", "upload_time_iso_8601": "2019-03-09T06:49:05.335550Z", "url": "https://files.pythonhosted.org/packages/48/ff/65fe002c2422b60324034984ff3ddda1e2033b16c30c5aedca60c9d435b6/comparator-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:17 2020"}