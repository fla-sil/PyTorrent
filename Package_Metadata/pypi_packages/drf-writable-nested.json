{"info": {"author": "beda.software", "author_email": "drfwritablenested@beda.software", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP"], "description": "DRF Writable Nested\n====================\n[![Build Status](https://travis-ci.com/beda-software/drf-writable-nested.svg?branch=master)](https://travis-ci.com/beda-software/drf-writable-nested)\n[![codecov](https://codecov.io/gh/beda-software/drf-writable-nested/branch/master/graph/badge.svg)](https://codecov.io/gh/beda-software/drf-writable-nested)\n[![pypi](https://img.shields.io/pypi/v/drf-writable-nested.svg)](https://pypi.python.org/pypi/drf-writable-nested)\n[![pyversions](https://img.shields.io/pypi/pyversions/drf-writable-nested.svg)](https://pypi.python.org/pypi/drf-writable-nested)\n\nThis is a writable nested model serializer for Django REST Framework which\nallows you to create/update your models with related nested data.\n\nThe following relations are supported:\n- OneToOne (direct/reverse)\n- ForeignKey (direct/reverse)\n- ManyToMany (direct/reverse excluding m2m relations with through model)\n- GenericRelation (this is always only reverse)\n\nRequirements\n============\n\n- Python (3.5, 3.6, 3.7, 3.8)\n- Django (2.2, 2.3, 3.0)\n- djangorestframework (3.8+)\n\nInstallation\n============\n\n```\npip install drf-writable-nested\n```\n\nUsage\n=====\n\nFor example, for the following model structure:\n```python\nfrom django.db import models\n\n\nclass Site(models.Model):\n    url = models.CharField(max_length=100)\n\n\nclass User(models.Model):\n    username = models.CharField(max_length=100)\n\n\nclass AccessKey(models.Model):\n    key = models.CharField(max_length=100)\n\n\nclass Profile(models.Model):\n    sites = models.ManyToManyField(Site)\n    user = models.OneToOneField(User)\n    access_key = models.ForeignKey(AccessKey, null=True)\n\n\nclass Avatar(models.Model):\n    image = models.CharField(max_length=100)\n    profile = models.ForeignKey(Profile, related_name='avatars')\n```\n\nWe should create the following list of serializers:\n\n```python\nfrom rest_framework import serializers\nfrom drf_writable_nested.serializers import WritableNestedModelSerializer\n\n\nclass AvatarSerializer(serializers.ModelSerializer):\n    image = serializers.CharField()\n\n    class Meta:\n        model = Avatar\n        fields = ('pk', 'image',)\n\n\nclass SiteSerializer(serializers.ModelSerializer):\n    url = serializers.CharField()\n\n    class Meta:\n        model = Site\n        fields = ('pk', 'url',)\n\n\nclass AccessKeySerializer(serializers.ModelSerializer):\n\n    class Meta:\n        model = AccessKey\n        fields = ('pk', 'key',)\n\n\nclass ProfileSerializer(WritableNestedModelSerializer):\n    # Direct ManyToMany relation\n    sites = SiteSerializer(many=True)\n\n    # Reverse FK relation\n    avatars = AvatarSerializer(many=True)\n\n    # Direct FK relation\n    access_key = AccessKeySerializer(allow_null=True)\n\n    class Meta:\n        model = Profile\n        fields = ('pk', 'sites', 'avatars', 'access_key',)\n\n\nclass UserSerializer(WritableNestedModelSerializer):\n    # Reverse OneToOne relation\n    profile = ProfileSerializer()\n\n    class Meta:\n        model = User\n        fields = ('pk', 'profile', 'username',)\n```\n\nAlso, you can use `NestedCreateMixin` or `NestedUpdateMixin` from this package\nif you want to support only create or update logic.\n\nFor example, we can pass the following data with related nested fields to our\nmain serializer:\n\n```python\ndata = {\n    'username': 'test',\n    'profile': {\n        'access_key': {\n            'key': 'key',\n        },\n        'sites': [\n            {\n                'url': 'http://google.com',\n            },\n            {\n                'url': 'http://yahoo.com',\n            },\n        ],\n        'avatars': [\n            {\n                'image': 'image-1.png',\n            },\n            {\n                'image': 'image-2.png',\n            },\n        ],\n    },\n}\n\nuser_serializer = UserSerializer(data=data)\nuser_serializer.is_valid(raise_exception=True)\nuser = user_serializer.save()\n```\n\nThis serializer will automatically create all nested relations and we receive a\ncomplete instance with filled data.\n```python\nuser_serializer = UserSerializer(instance=user)\nprint(user_serializer.data)\n```\n\n```python\n{\n    'pk': 1,\n    'username': 'test',\n    'profile': {\n        'pk': 1,\n        'access_key': {\n            'pk': 1,\n            'key': 'key'\n        },\n        'sites': [\n            {\n                'pk': 1,\n                'url': 'http://google.com',\n            },\n            {\n                'pk': 2,\n                'url': 'http://yahoo.com',\n            },\n        ],\n        'avatars': [\n            {\n                'pk': 1,\n                'image': 'image-1.png',\n            },\n            {\n                'pk': 2,\n                'image': 'image-2.png',\n            },\n        ],\n    },\n}\n```\n\nIt is also possible to pass through values to nested serializers from the call\nto the base serializer's `save` method. These `kwargs` must be of type `dict`. E g:\n\n```python\n# user_serializer created with 'data' as above\nuser = user_serializer.save(\n    profile={\n        'access_key': {'key': 'key2'},\n    },\n)\nprint(user.profile.access_key.key)\n```\n\n```python\n'key2'\n```\n\nNote: The same value will be used for all nested instances like default value but with higher priority.\n\n\nKnown problems with solutions\n=============================\n\n\n##### Validation problem for nested serializers with unique fields on update\nWe have a special mixin `UniqueFieldsMixin` which solves this problem.\nThe mixin moves` UniqueValidator`'s from the validation stage to the save stage.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\n###### Example of usage:\n```python\nclass Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on serializer\nwhich has unique fields.\n\n###### Mixin ordering\nWhen you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.\n\nFor example:\n```python\nclass ChildSerializer(UniqueFieldsMixin, NestedUpdateMixin,\n        serializers.ModelSerializer):\n```\n\n\n\n\nAuthors\n=======\n2014-2020, beda.software\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/beda-software/drf-writable-nested", "keywords": "drf restframework rest_framework django_rest_framework serializers drf_writable_nested", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "drf-writable-nested", "package_url": "https://pypi.org/project/drf-writable-nested/", "platform": "", "project_url": "https://pypi.org/project/drf-writable-nested/", "project_urls": {"Homepage": "http://github.com/beda-software/drf-writable-nested"}, "release_url": "https://pypi.org/project/drf-writable-nested/0.6.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Writable nested helpers for django-rest-framework's serializers", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DRF Writable Nested</h1>\n<p><a href=\"https://travis-ci.com/beda-software/drf-writable-nested\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb867315c825ba34faa879bdeee283e2c7ef5225/68747470733a2f2f7472617669732d63692e636f6d2f626564612d736f6674776172652f6472662d7772697461626c652d6e65737465642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/beda-software/drf-writable-nested\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fe121d6ac1276092a59fcfc32b557928a133ef0/68747470733a2f2f636f6465636f762e696f2f67682f626564612d736f6674776172652f6472662d7772697461626c652d6e65737465642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/drf-writable-nested\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1ba088d1cde4d4be79222573d3569d18c77a40c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472662d7772697461626c652d6e65737465642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/drf-writable-nested\" rel=\"nofollow\"><img alt=\"pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/445d92ba6be7520eef527162cca6bfe811780a15/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6472662d7772697461626c652d6e65737465642e737667\"></a></p>\n<p>This is a writable nested model serializer for Django REST Framework which\nallows you to create/update your models with related nested data.</p>\n<p>The following relations are supported:</p>\n<ul>\n<li>OneToOne (direct/reverse)</li>\n<li>ForeignKey (direct/reverse)</li>\n<li>ManyToMany (direct/reverse excluding m2m relations with through model)</li>\n<li>GenericRelation (this is always only reverse)</li>\n</ul>\n<h1>Requirements</h1>\n<ul>\n<li>Python (3.5, 3.6, 3.7, 3.8)</li>\n<li>Django (2.2, 2.3, 3.0)</li>\n<li>djangorestframework (3.8+)</li>\n</ul>\n<h1>Installation</h1>\n<pre><code>pip install drf-writable-nested\n</code></pre>\n<h1>Usage</h1>\n<p>For example, for the following model structure:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Site</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AccessKey</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Profile</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">sites</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"n\">Site</span><span class=\"p\">)</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">OneToOneField</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n    <span class=\"n\">access_key</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">AccessKey</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Avatar</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Profile</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'avatars'</span><span class=\"p\">)</span>\n</pre>\n<p>We should create the following list of serializers:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drf_writable_nested.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">WritableNestedModelSerializer</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AvatarSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Avatar</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"s1\">'image'</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SiteSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Site</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AccessKeySerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">AccessKey</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"s1\">'key'</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ProfileSerializer</span><span class=\"p\">(</span><span class=\"n\">WritableNestedModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Direct ManyToMany relation</span>\n    <span class=\"n\">sites</span> <span class=\"o\">=</span> <span class=\"n\">SiteSerializer</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Reverse FK relation</span>\n    <span class=\"n\">avatars</span> <span class=\"o\">=</span> <span class=\"n\">AvatarSerializer</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Direct FK relation</span>\n    <span class=\"n\">access_key</span> <span class=\"o\">=</span> <span class=\"n\">AccessKeySerializer</span><span class=\"p\">(</span><span class=\"n\">allow_null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Profile</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"s1\">'sites'</span><span class=\"p\">,</span> <span class=\"s1\">'avatars'</span><span class=\"p\">,</span> <span class=\"s1\">'access_key'</span><span class=\"p\">,)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">WritableNestedModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Reverse OneToOne relation</span>\n    <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">ProfileSerializer</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"s1\">'profile'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">,)</span>\n</pre>\n<p>Also, you can use <code>NestedCreateMixin</code> or <code>NestedUpdateMixin</code> from this package\nif you want to support only create or update logic.</p>\n<p>For example, we can pass the following data with related nested fields to our\nmain serializer:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'profile'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'access_key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'key'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'sites'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://google.com'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://yahoo.com'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'avatars'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'image'</span><span class=\"p\">:</span> <span class=\"s1\">'image-1.png'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'image'</span><span class=\"p\">:</span> <span class=\"s1\">'image-2.png'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">user_serializer</span> <span class=\"o\">=</span> <span class=\"n\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">user_serializer</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">(</span><span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user_serializer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>This serializer will automatically create all nested relations and we receive a\ncomplete instance with filled data.</p>\n<pre><span class=\"n\">user_serializer</span> <span class=\"o\">=</span> <span class=\"n\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user_serializer</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'profile'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'access_key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'key'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'sites'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://google.com'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://yahoo.com'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'avatars'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">'image'</span><span class=\"p\">:</span> <span class=\"s1\">'image-1.png'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s1\">'image'</span><span class=\"p\">:</span> <span class=\"s1\">'image-2.png'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>It is also possible to pass through values to nested serializers from the call\nto the base serializer's <code>save</code> method. These <code>kwargs</code> must be of type <code>dict</code>. E g:</p>\n<pre><span class=\"c1\"># user_serializer created with 'data' as above</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user_serializer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span>\n    <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'access_key'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'key2'</span><span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">access_key</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"s1\">'key2'</span>\n</pre>\n<p>Note: The same value will be used for all nested instances like default value but with higher priority.</p>\n<h1>Known problems with solutions</h1>\n<h5>Validation problem for nested serializers with unique fields on update</h5>\n<p>We have a special mixin <code>UniqueFieldsMixin</code> which solves this problem.\nThe mixin moves<code>UniqueValidator</code>'s from the validation stage to the save stage.</p>\n<p>If you want more details, you can read related issues and articles:\n<a href=\"https://github.com/beda-software/drf-writable-nested/issues/1\" rel=\"nofollow\">https://github.com/beda-software/drf-writable-nested/issues/1</a>\n<a href=\"http://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\" rel=\"nofollow\">http://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers</a></p>\n<h6>Example of usage:</h6>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Child</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">child</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'Child'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ChildSerializer</span><span class=\"p\">(</span><span class=\"n\">UniqueFieldsMixin</span><span class=\"p\">,</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Child</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ParentSerializer</span><span class=\"p\">(</span><span class=\"n\">NestedUpdateMixin</span><span class=\"p\">,</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">child</span> <span class=\"o\">=</span> <span class=\"n\">ChildSerializer</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Parent</span>\n</pre>\n<p>Note: <code>UniqueFieldsMixin</code> must be applied only on serializer\nwhich has unique fields.</p>\n<h6>Mixin ordering</h6>\n<p>When you are using both mixins\n(<code>UniqueFieldsMixin</code> and <code>NestedCreateMixin</code> or <code>NestedUpdateMixin</code>)\nyou should put <code>UniqueFieldsMixin</code> ahead.</p>\n<p>For example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ChildSerializer</span><span class=\"p\">(</span><span class=\"n\">UniqueFieldsMixin</span><span class=\"p\">,</span> <span class=\"n\">NestedUpdateMixin</span><span class=\"p\">,</span>\n        <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n</pre>\n<h1>Authors</h1>\n<p>2014-2020, beda.software</p>\n\n          </div>"}, "last_serial": 7002840, "releases": {"0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "691bf1eb480527116f7a277e2c53bb47", "sha256": "b77fa4030db08cfb76c1069f2217a88ed9bee0470106db2a876d06313ce9149c"}, "downloads": -1, "filename": "drf-writable-nested-0.0.3.tar.gz", "has_sig": false, "md5_digest": "691bf1eb480527116f7a277e2c53bb47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7893, "upload_time": "2017-02-18T13:25:24", "upload_time_iso_8601": "2017-02-18T13:25:24.721053Z", "url": "https://files.pythonhosted.org/packages/ea/01/ba0ad9f6c001175d50e72f29dc138f68358b34810cfb9b13fc9b170930dc/drf-writable-nested-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6ce96091b7049a9aa31d29ad7bae8718", "sha256": "875cfb76343a676332abfde2e1b3c590169052665a2f3583138947ab4aeb8250"}, "downloads": -1, "filename": "drf-writable-nested-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6ce96091b7049a9aa31d29ad7bae8718", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6425, "upload_time": "2017-02-20T14:15:55", "upload_time_iso_8601": "2017-02-20T14:15:55.799612Z", "url": "https://files.pythonhosted.org/packages/0e/34/baa43ad4e8eff5647faa06792c3b9c2e4432dc4c3516a29ce9346c101564/drf-writable-nested-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "73a56dd362d8d068cf779d4c52e9755a", "sha256": "0391e337f79b7c28e13f2ef7df0a45a75c682432df8ba7b5da15a8513519699b"}, "downloads": -1, "filename": "drf-writable-nested-0.1.1.tar.gz", "has_sig": false, "md5_digest": "73a56dd362d8d068cf779d4c52e9755a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6464, "upload_time": "2017-03-21T06:33:20", "upload_time_iso_8601": "2017-03-21T06:33:20.720636Z", "url": "https://files.pythonhosted.org/packages/a2/01/b8b053686d4294c2700cb3610edc7285f492faac31ee7766f968687607e6/drf-writable-nested-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "461c23ea9044b3f24368eba99fd95c95", "sha256": "403d09ecad768381a474ac960ab169334cb9890940b7ab2815e690fe5f108872"}, "downloads": -1, "filename": "drf-writable-nested-0.1.2.tar.gz", "has_sig": false, "md5_digest": "461c23ea9044b3f24368eba99fd95c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6507, "upload_time": "2017-03-21T09:51:52", "upload_time_iso_8601": "2017-03-21T09:51:52.144010Z", "url": "https://files.pythonhosted.org/packages/03/68/c90f90838ae8d329ae7e87241c276d96709070ad452a986ceea031205ea6/drf-writable-nested-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f7dbf426a7c3c7cbeb6837ec63050d3b", "sha256": "2ca379b845fd3d8ed4052798654a9cc2a80838a93785221552ddd97ee1a8f675"}, "downloads": -1, "filename": "drf-writable-nested-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f7dbf426a7c3c7cbeb6837ec63050d3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6537, "upload_time": "2017-05-07T05:26:05", "upload_time_iso_8601": "2017-05-07T05:26:05.427932Z", "url": "https://files.pythonhosted.org/packages/f2/de/7c126f689c473a945a4d41c4af72aba6122030fd4bd3c613ac1213d9fe39/drf-writable-nested-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "231554c3fac90d5ca7ada2f59f517268", "sha256": "ae31d4dc317c352c1242523a5b5ba751102bc0772181681d5e927851a4b157ad"}, "downloads": -1, "filename": "drf-writable-nested-0.1.4.tar.gz", "has_sig": false, "md5_digest": "231554c3fac90d5ca7ada2f59f517268", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6707, "upload_time": "2017-05-22T04:04:44", "upload_time_iso_8601": "2017-05-22T04:04:44.157437Z", "url": "https://files.pythonhosted.org/packages/60/31/d7f7a3c4f5c8d699cbfe92e9bbc14ba3c2302d6dda0014344aab4f100f73/drf-writable-nested-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2d43e8402e4b746a8352a0aa899649d9", "sha256": "8ac0219c2fa7ad2b9dd651fa7c5ad934b85e488c0244357f0761c262fe249074"}, "downloads": -1, "filename": "drf-writable-nested-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2d43e8402e4b746a8352a0aa899649d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7043, "upload_time": "2017-06-22T02:54:57", "upload_time_iso_8601": "2017-06-22T02:54:57.437679Z", "url": "https://files.pythonhosted.org/packages/f3/0d/d7834cffb9de1de9974ef3e786c86c1ae5273312f4154f00ab3201d3d2e2/drf-writable-nested-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d45b7ecf434f002c638b9d7c679d537d", "sha256": "55dc3abde6fba58dcc5605e40efe496f3f97d6220dc92c536e4f113e8b944af7"}, "downloads": -1, "filename": "drf-writable-nested-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d45b7ecf434f002c638b9d7c679d537d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7073, "upload_time": "2017-08-16T04:45:42", "upload_time_iso_8601": "2017-08-16T04:45:42.591561Z", "url": "https://files.pythonhosted.org/packages/77/c0/2edaf41d6687623ff6b63a1f223a5f27f4cef6079a28ef1421736d4d6b12/drf-writable-nested-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b43c9e4129f853d7ed1fff289bdc34d0", "sha256": "d7a67b71ede298338162b8d0807856a833a117d5da72c6a3bbfe67e9e7e0fae2"}, "downloads": -1, "filename": "drf-writable-nested-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b43c9e4129f853d7ed1fff289bdc34d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7034, "upload_time": "2017-08-16T04:46:15", "upload_time_iso_8601": "2017-08-16T04:46:15.026482Z", "url": "https://files.pythonhosted.org/packages/03/5d/1358fe35d2e5aee665dc42f0cfd06bd93dbdbf18e0248e8d1dacc67e4fc1/drf-writable-nested-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9d759260dfdbc258e7abd2857b3acceb", "sha256": "c878f2fea134731dd1b8747e248649109d480fb60e28553f59db22c9de459d03"}, "downloads": -1, "filename": "drf-writable-nested-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9d759260dfdbc258e7abd2857b3acceb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7059, "upload_time": "2017-10-13T04:09:23", "upload_time_iso_8601": "2017-10-13T04:09:23.682156Z", "url": "https://files.pythonhosted.org/packages/0e/ff/622f613f7008c126031ac96972c11b8bdd7abb963de22f04a7a50bc792a0/drf-writable-nested-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "8aa6906d95e889db9db2a637071bfa17", "sha256": "87caf734cc83d5fb44589e8919c4bf32efa59d944c93f8da8f91dac06b8dd488"}, "downloads": -1, "filename": "drf-writable-nested-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8aa6906d95e889db9db2a637071bfa17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7136, "upload_time": "2017-11-19T06:17:48", "upload_time_iso_8601": "2017-11-19T06:17:48.997871Z", "url": "https://files.pythonhosted.org/packages/ea/42/0d1706afcbe0cc7cecafc9795601a2e80681696050f4576df2df36e9ed8c/drf-writable-nested-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "6df094ea40992f802924efd2ddb185b7", "sha256": "78bb8470d2c8bc772a68bc1f344f8b7002f173b7bc44c60ac46fe4ff2da6c657"}, "downloads": -1, "filename": "drf-writable-nested-0.3.3.tar.gz", "has_sig": false, "md5_digest": "6df094ea40992f802924efd2ddb185b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8050, "upload_time": "2018-01-20T05:05:07", "upload_time_iso_8601": "2018-01-20T05:05:07.425801Z", "url": "https://files.pythonhosted.org/packages/3e/6e/b3ba58a9435d0861ad3345941ac26f719ba08bcc825dc9520a3f398f115c/drf-writable-nested-0.3.3.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "aa9a7d019906a654f3d410fa1503007f", "sha256": "5fd83da52a25c1856e66b8819c54041f0255bfdfc613cb7ea2f868d05526e2b9"}, "downloads": -1, "filename": "drf-writable-nested-0.4.1.tar.gz", "has_sig": false, "md5_digest": "aa9a7d019906a654f3d410fa1503007f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8070, "upload_time": "2018-01-20T05:21:31", "upload_time_iso_8601": "2018-01-20T05:21:31.130043Z", "url": "https://files.pythonhosted.org/packages/ec/c1/8b5dca1ac49bed6bd795ad4728f36d3639a7d20a34398c8ad57018e6b8e0/drf-writable-nested-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "42d2a493b91de5530ff329dc69538e2c", "sha256": "72e77e610c568ee4dc3f2be1efd324c915c7e0ddaa97cab02a006e7d5c076751"}, "downloads": -1, "filename": "drf-writable-nested-0.4.2.tar.gz", "has_sig": false, "md5_digest": "42d2a493b91de5530ff329dc69538e2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8251, "upload_time": "2018-04-20T17:30:57", "upload_time_iso_8601": "2018-04-20T17:30:57.215961Z", "url": "https://files.pythonhosted.org/packages/05/3e/85e974d017c4b4a5c8723b127f5a6de88c243f9e02116bfae3a9ed7d8bc6/drf-writable-nested-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "51f17794497b906aa77a7fc808b660dd", "sha256": "728ee97dfe4e912334cb469cfcfb9a19f42f5ec85b58fe91775273be3b19deaa"}, "downloads": -1, "filename": "drf-writable-nested-0.4.3.tar.gz", "has_sig": false, "md5_digest": "51f17794497b906aa77a7fc808b660dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7848, "upload_time": "2018-07-04T11:10:42", "upload_time_iso_8601": "2018-07-04T11:10:42.625951Z", "url": "https://files.pythonhosted.org/packages/8b/95/61a5764ec17cf6ef0c46f1374c1a05975cd7fa6292c0e7a3fd292f9c265e/drf-writable-nested-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "101b5cba6201011c4ec01e0ea0a0b931", "sha256": "7038bb1310a76e60a13be0aed899f6bc9209b4f152fc21e771f5685f796ee4d2"}, "downloads": -1, "filename": "drf-writable-nested-0.5.0.tar.gz", "has_sig": false, "md5_digest": "101b5cba6201011c4ec01e0ea0a0b931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8979, "upload_time": "2018-08-23T10:11:13", "upload_time_iso_8601": "2018-08-23T10:11:13.385490Z", "url": "https://files.pythonhosted.org/packages/c6/8d/9c60d6eda6f22f6d43931143463771abe8addc9da38f4c04acc863535c12/drf-writable-nested-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "85907930e1bf3885fc1241c9cedeca46", "sha256": "5c54eca93d74dc22014fb7ea54b6dbd559a058587596feba4d79078e32a83e16"}, "downloads": -1, "filename": "drf-writable-nested-0.5.1.tar.gz", "has_sig": false, "md5_digest": "85907930e1bf3885fc1241c9cedeca46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9007, "upload_time": "2018-09-17T08:09:19", "upload_time_iso_8601": "2018-09-17T08:09:19.073581Z", "url": "https://files.pythonhosted.org/packages/3f/76/aa9fb72cb76d90941bf1ddeb2db35fefaa35d3df9999f8de03806b3722c7/drf-writable-nested-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "06e91728c9d3036c1ed3821a2c414948", "sha256": "b76db29f8a71b7b7140856dfee7b2535856c7a0aebe9233ecdf03107b12b1b2d"}, "downloads": -1, "filename": "drf-writable-nested-0.5.2.tar.gz", "has_sig": false, "md5_digest": "06e91728c9d3036c1ed3821a2c414948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9147, "upload_time": "2019-11-17T09:10:53", "upload_time_iso_8601": "2019-11-17T09:10:53.035115Z", "url": "https://files.pythonhosted.org/packages/73/4e/1aeed80048692e30bc10977fb2e6f281e6a7b3a2e8c25740bb210269d988/drf-writable-nested-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "f1e2cc1e141f89125b82a8ff85ee6294", "sha256": "f9be37c4b43e27a698e96e110934498572287296707e903451b06af69c5d79f1"}, "downloads": -1, "filename": "drf-writable-nested-0.5.3.tar.gz", "has_sig": false, "md5_digest": "f1e2cc1e141f89125b82a8ff85ee6294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9151, "upload_time": "2019-11-17T09:11:07", "upload_time_iso_8601": "2019-11-17T09:11:07.535504Z", "url": "https://files.pythonhosted.org/packages/f5/40/d5206fcaff23e8fda4bd94c4456055be7c2ae56debc19d777e3f933c0c6e/drf-writable-nested-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "520a0e738f858cca8cc12614dac57619", "sha256": "79839ac42a7bf393dcc03fbe4a8c51966c28f423aee8e2de1b27124fd2c4f94a"}, "downloads": -1, "filename": "drf-writable-nested-0.5.4.tar.gz", "has_sig": false, "md5_digest": "520a0e738f858cca8cc12614dac57619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9220, "upload_time": "2019-12-23T03:19:46", "upload_time_iso_8601": "2019-12-23T03:19:46.319706Z", "url": "https://files.pythonhosted.org/packages/8e/ed/dece914de340b3dff9376adc0a4d17f6cd27e36d7fd6f2d11a8db35c2a98/drf-writable-nested-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "dfd3b4b5b833c3f051dd64b839807c5b", "sha256": "e3c0bcdc3ca92af0a16474868bb3bc487df0f62a8010f824f20141fc87557301"}, "downloads": -1, "filename": "drf_writable_nested-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dfd3b4b5b833c3f051dd64b839807c5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8720, "upload_time": "2020-04-12T04:12:40", "upload_time_iso_8601": "2020-04-12T04:12:40.274630Z", "url": "https://files.pythonhosted.org/packages/d6/30/4e4bd8b0cac8fc48ec9dd6ce76293258445b0985599de97b29d0333614ce/drf_writable_nested-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4f9e7aa1fe7348441d875fe68d45c1b", "sha256": "4ad864d91003f8cce56f22bc2b4fa9aa0d2e57b05b5cc5c44c8bde6e40c5cf9f"}, "downloads": -1, "filename": "drf-writable-nested-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e4f9e7aa1fe7348441d875fe68d45c1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9322, "upload_time": "2020-04-12T04:12:42", "upload_time_iso_8601": "2020-04-12T04:12:42.339764Z", "url": "https://files.pythonhosted.org/packages/c3/86/7e60955965fc45e15127e2b3b5eb062b3ca16f0a588bf29cbc15a54ca72b/drf-writable-nested-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfd3b4b5b833c3f051dd64b839807c5b", "sha256": "e3c0bcdc3ca92af0a16474868bb3bc487df0f62a8010f824f20141fc87557301"}, "downloads": -1, "filename": "drf_writable_nested-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dfd3b4b5b833c3f051dd64b839807c5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8720, "upload_time": "2020-04-12T04:12:40", "upload_time_iso_8601": "2020-04-12T04:12:40.274630Z", "url": "https://files.pythonhosted.org/packages/d6/30/4e4bd8b0cac8fc48ec9dd6ce76293258445b0985599de97b29d0333614ce/drf_writable_nested-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4f9e7aa1fe7348441d875fe68d45c1b", "sha256": "4ad864d91003f8cce56f22bc2b4fa9aa0d2e57b05b5cc5c44c8bde6e40c5cf9f"}, "downloads": -1, "filename": "drf-writable-nested-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e4f9e7aa1fe7348441d875fe68d45c1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9322, "upload_time": "2020-04-12T04:12:42", "upload_time_iso_8601": "2020-04-12T04:12:42.339764Z", "url": "https://files.pythonhosted.org/packages/c3/86/7e60955965fc45e15127e2b3b5eb062b3ca16f0a588bf29cbc15a54ca72b/drf-writable-nested-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:38 2020"}