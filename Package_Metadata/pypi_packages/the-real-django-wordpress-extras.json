{"info": {"author": "Jeremy Carbaugh", "author_email": "jcarbaugh@sunlightfoundation.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "=======================\ndjango-wordpress-extras\n=======================\n\nA collection of useful, non-WordPress extensions for\ndjango-wordpress (the real one).\n\n::\n\n    pip install the-real-django-wordpress-extras\n\nAdd *wordpressext* to INSTALLED_APPS in settings.py.\n\nBe sure to put *wordpressext* **above** *wordpress* in urls.py::\n\n    urlpatterns += patterns('',\n        ...\n        url(r'^blog/', include('wordpressext.urls')),\n        url(r'^blog/', include('wordpress.urls')),\n        ...\n    )\n\nEmail sender is determined in the following order:\n\n    #. **settings.WPEXT_SENDER** email address\n    #. **settings.POSTMARK_SENDER** if Postmark settings are configured and WPEXT_SENDER does not exist\n    #. **settings.ADMINS** the first admin email address, if POSTMARK_SENDER does not exist\n\n\n--------\nFeatures\n--------\n\nParse.ly Meta Template Tag\n==========================\n\nGenerate a `Parse.ly <http://parse.ly/>`_ meta tag::\n\n    {% parselymeta post %}\n\n\nDisqus Comment Notifications\n============================\n\nIt's the only feature for now! And it's only half implemented!\n\nIf you use `Disqus <http://disqus.com/>`_ for comments, you can provide a\npost-comment JavaScript hook to notify post authors of the new comment.\nHere is some example JavaScript you can do enable comment notifications::\n\n    var newComment = function(comment) {\n        var url = window.location.href + \"disqus/\";\n        var params = {\n            id: comment.id,\n            text: comment.text,\n            csrfmiddlewaretoken: csrftoken  // you'll have to get this from somewhere\n        };\n        $.post(url, comment, function(data) {\n            // don't really need to do anything\n        });\n    };\n\n    var disqus_config = function() {\n        this.callbacks.onNewComment = [function(comment) { newComment(comment); }];\n    };\n\nThe comment endpoint is located at ``<path_to_blog>/<year>/<month>/<day>/<slug>/disqus/``. It accepts the following POST parameters:\n\n    * *id* the Disqus ID of the comment\n    * *text* the text of the comment\n    * *csrfmiddlewaretoken* a CSRF token, if protection is enabled\n\nRefer to the `onNewComment <http://help.disqus.com/customer/portal/articles/466258-how-can-i-capture-disqus-commenting-activity-in-my-own-analytics-tool->`_ callback on how to implement your own.\n\nFuture versions will connect with the Disqus API to do various things.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sunlightlabs/django-wordpress-extras/", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "the-real-django-wordpress-extras", "package_url": "https://pypi.org/project/the-real-django-wordpress-extras/", "platform": "any", "project_url": "https://pypi.org/project/the-real-django-wordpress-extras/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/sunlightlabs/django-wordpress-extras/"}, "release_url": "https://pypi.org/project/the-real-django-wordpress-extras/0.4/", "requires_dist": null, "requires_python": null, "summary": "A collection of non-WordPress extensions for django-wordpress (the real one)", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A collection of useful, non-WordPress extensions for\ndjango-wordpress (the real one).</p>\n<pre>pip install the-real-django-wordpress-extras\n</pre>\n<p>Add <em>wordpressext</em> to INSTALLED_APPS in settings.py.</p>\n<p>Be sure to put <em>wordpressext</em> <strong>above</strong> <em>wordpress</em> in urls.py:</p>\n<pre>urlpatterns += patterns('',\n    ...\n    url(r'^blog/', include('wordpressext.urls')),\n    url(r'^blog/', include('wordpress.urls')),\n    ...\n)\n</pre>\n<p>Email sender is determined in the following order:</p>\n<blockquote>\n<ol>\n<li><strong>settings.WPEXT_SENDER</strong> email address</li>\n<li><strong>settings.POSTMARK_SENDER</strong> if Postmark settings are configured and WPEXT_SENDER does not exist</li>\n<li><strong>settings.ADMINS</strong> the first admin email address, if POSTMARK_SENDER does not exist</li>\n</ol>\n</blockquote>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"parse-ly-meta-template-tag\">\n<h3>Parse.ly Meta Template Tag</h3>\n<p>Generate a <a href=\"http://parse.ly/\" rel=\"nofollow\">Parse.ly</a> meta tag:</p>\n<pre>{% parselymeta post %}\n</pre>\n</div>\n<div id=\"disqus-comment-notifications\">\n<h3>Disqus Comment Notifications</h3>\n<p>It\u2019s the only feature for now! And it\u2019s only half implemented!</p>\n<p>If you use <a href=\"http://disqus.com/\" rel=\"nofollow\">Disqus</a> for comments, you can provide a\npost-comment JavaScript hook to notify post authors of the new comment.\nHere is some example JavaScript you can do enable comment notifications:</p>\n<pre>var newComment = function(comment) {\n    var url = window.location.href + \"disqus/\";\n    var params = {\n        id: comment.id,\n        text: comment.text,\n        csrfmiddlewaretoken: csrftoken  // you'll have to get this from somewhere\n    };\n    $.post(url, comment, function(data) {\n        // don't really need to do anything\n    });\n};\n\nvar disqus_config = function() {\n    this.callbacks.onNewComment = [function(comment) { newComment(comment); }];\n};\n</pre>\n<p>The comment endpoint is located at <tt><span class=\"pre\">&lt;path_to_blog&gt;/&lt;year&gt;/&lt;month&gt;/&lt;day&gt;/&lt;slug&gt;/disqus/</span></tt>. It accepts the following POST parameters:</p>\n<blockquote>\n<ul>\n<li><em>id</em> the Disqus ID of the comment</li>\n<li><em>text</em> the text of the comment</li>\n<li><em>csrfmiddlewaretoken</em> a CSRF token, if protection is enabled</li>\n</ul>\n</blockquote>\n<p>Refer to the <a href=\"http://help.disqus.com/customer/portal/articles/466258-how-can-i-capture-disqus-commenting-activity-in-my-own-analytics-tool-\" rel=\"nofollow\">onNewComment</a> callback on how to implement your own.</p>\n<p>Future versions will connect with the Disqus API to do various things.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 800545, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b4b81084300b1edcad43ffb6a3d9ae17", "sha256": "d3d3093ad6182aa17ca1eba3da3b8701f5ecc079ecfd91441a8e71d003c21f16"}, "downloads": -1, "filename": "the-real-django-wordpress-extras-0.1.tar.gz", "has_sig": false, "md5_digest": "b4b81084300b1edcad43ffb6a3d9ae17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3971, "upload_time": "2012-10-12T18:34:25", "upload_time_iso_8601": "2012-10-12T18:34:25.232028Z", "url": "https://files.pythonhosted.org/packages/7b/3d/d50ba976f869acf31d5e0f99a8b8bc539be00c7cdf60d95aa828eb9369eb/the-real-django-wordpress-extras-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "140adedfe654214258bd449119a13832", "sha256": "6fdaed428fe3bc856ee5788c77e5b3ac729ec508cc237a922a3a6a809649ce1b"}, "downloads": -1, "filename": "the-real-django-wordpress-extras-0.2.tar.gz", "has_sig": false, "md5_digest": "140adedfe654214258bd449119a13832", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4563, "upload_time": "2013-01-08T16:56:26", "upload_time_iso_8601": "2013-01-08T16:56:26.957722Z", "url": "https://files.pythonhosted.org/packages/bb/c0/211f80383ba42389e09368e2790dbfe55ab07d53a1705c6b44dafc28084e/the-real-django-wordpress-extras-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "f5de4e7919f37ae3202623b6b830dea6", "sha256": "a276d053699d0f75e48e043f8bdd8e7e19c12ffb377f00e29b28918acd23daf5"}, "downloads": -1, "filename": "the-real-django-wordpress-extras-0.3.tar.gz", "has_sig": false, "md5_digest": "f5de4e7919f37ae3202623b6b830dea6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4629, "upload_time": "2013-04-03T19:05:48", "upload_time_iso_8601": "2013-04-03T19:05:48.712972Z", "url": "https://files.pythonhosted.org/packages/2c/f3/aa0636236d3e401c0fcddd49eec6381c722fadcf66266bfd60013b62e66c/the-real-django-wordpress-extras-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "69e3886c64e99420a6957aaa6c9d4dea", "sha256": "24ea0465c33d233025d45d1671db716e19bbf4f554a06dc909f35747392e686e"}, "downloads": -1, "filename": "the-real-django-wordpress-extras-0.4.tar.gz", "has_sig": false, "md5_digest": "69e3886c64e99420a6957aaa6c9d4dea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4612, "upload_time": "2013-04-08T14:14:07", "upload_time_iso_8601": "2013-04-08T14:14:07.473335Z", "url": "https://files.pythonhosted.org/packages/78/94/56106ab2a780bf7cf621644cf864ac5b77fa6d111d3278f25d00bdff34e2/the-real-django-wordpress-extras-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69e3886c64e99420a6957aaa6c9d4dea", "sha256": "24ea0465c33d233025d45d1671db716e19bbf4f554a06dc909f35747392e686e"}, "downloads": -1, "filename": "the-real-django-wordpress-extras-0.4.tar.gz", "has_sig": false, "md5_digest": "69e3886c64e99420a6957aaa6c9d4dea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4612, "upload_time": "2013-04-08T14:14:07", "upload_time_iso_8601": "2013-04-08T14:14:07.473335Z", "url": "https://files.pythonhosted.org/packages/78/94/56106ab2a780bf7cf621644cf864ac5b77fa6d111d3278f25d00bdff34e2/the-real-django-wordpress-extras-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:02 2020"}