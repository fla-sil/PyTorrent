{"info": {"author": "Tony Young", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Video", "Topic :: Software Development :: Libraries", "Topic :: Text Processing :: Markup"], "description": "# python-ass\n\nA library for parsing and manipulating\nAdvanced SubStation Alpha subtitle files.\n\n## Documents\n\nExample file: [**tests/test.ass**](./tests/test.ass)\n\nYou can parse the file:\n\n```py\n>>> import ass\n>>> with open(\"tests/test.ass\", encoding='utf_8_sig') as f:\n...     doc = ass.parse(f)\n...\n```\n\nAccess its meta info:\n\n```py\n>>> doc.info\nScriptInfoSection('Script Info', OrderedDict([('ScriptType', 'v4.00+'), ('PlayResX', 500), ('PlayResY', 500)]))\n>>> doc.info['PlayResX']\n500\n```\n\nAccess its styles:\n\n```py\n>>> doc.styles\nStylesSection('V4+ Styles', [Style(name='Default', fontname='Arial', fontsize=20.0, primary_color=Color(r=0xff, g=0xff, b=0xff, a=0x00), secondary_color=Color(r=0xff, g=0x00, b=0x00, a=0x00), outline_color=Color(r=0x00, g=0x00, b=0x00, a=0x00), back_color=Color(r=0x00, g=0x00, b=0x00, a=0x00), bold=False, italic=False, underline=False, strike_out=False, scale_x=100.0, scale_y=100.0, spacing=0.0, angle=0.0, border_style=1, outline=1.0, shadow=2.0, alignment=5, margin_l=10, margin_r=10, margin_v=10, encoding=1)])\n>>> doc.styles[0].fontname\n'Arial'\n>>> doc.styles[0].primary_color  # \"color\", not \"colour\"\nColor(r=0xff, g=0xff, b=0xff, a=0x00)\n```\n\nAccess its event lines:\n\n```py\n>>> doc.events\nEventsSection('Events', [Dialogue(layer=0, start=datetime.timedelta(0), end=datetime.timedelta(seconds=5), style='Default', name='', margin_l=0, margin_r=0, margin_v=0, effect='', text='{\\\\3c&H0000FF}this is a test\\\\N{\\\\3c&H00FF00}this is a test\\\\N{\\\\3c&HFF0000}this is a test'), ...])\n>>> doc.events[0].text\n'{\\\\3c&H0000FF}this is a test\\\\N{\\\\3c&H00FF00}this is a test\\\\N{\\\\3c&HFF0000}this is a test'\n```\n\nOr any other section data:\n\n```py\n>>> list(doc.sections.keys())\n['Script Info', 'Aegisub Project Garbage', 'Custom Section', 'V4+ Styles', 'Events', 'Aegisub Extradata']\n>>> doc.sections['Aegisub Project Garbage']['Scroll Position']\n'30'\n```\n\nYou can dump everything out into ASS format, too:\n\n```py\n>>> doc.events[0].dump()\n'0,0:00:00.00,0:00:05.00,Default,,0,0,0,,{\\\\3c&H0000FF}this is a test\\\\N{\\\\3c&H00FF00}this is a test\\\\N{\\\\3c&HFF0000}this is a test'\n```\n\nOr maybe the whole file:\n\n```py\n>>> with open(\"out.ass\", \"w\", encoding='utf_8_sig') as f:\n...     doc.dump_file(f)\n...\n```\n\n\n## Tags\n\nFor parsing ASS tags, you may want to consider `ass-tag-parser`:\n<https://pypi.org/project/ass-tag-parser/>\n(on [GitHub](https://github.com/rr-/ass_tag_parser)).\n\n\n## Rendering\n\n*The following has been unmaintained for years.*\n\npython-ass can use libass for rendering.\n\nFirst you need to allocate a libass context:\n\n    >>> ctx = ass.renderer.Context()\n\nThen you need to convert the `ass.document.Document` to a `ass.renderer.Track`:\n\n    >>> t = ctx.make_track()\n    >>> t.populate(doc)\n\nThen make a renderer to render the track:\n\n    >>> r = ctx.make_renderer()\n    >>> r.set_fonts(fontconfig_config=\"/usr/local/etc/fonts/fonts.conf\")\n    >>> r.set_all_sizes((1280, 720))\n\nYou can render a frame at a given time:\n\n    >>> imgs = r.render_frame(t, timedelta(0))\n\nExample using PIL to render to a bitmap:\n\n    >>> im_out = Image.new(\"RGB\", (1280, 720))\n    >>> im_data = im_out.load()\n    >>> for img in imgs:\n    ...     r, g, b, a = img.rgba\n    ...     for y in range(img.h):\n    ...         for x in range(img.w):\n    ...             a_src = img[x, y] * (256 - a) // 256\n    ...             r_dst, g_dst, b_dst = im_data[x + img.dst_x, y + img.dst_y]\n    ...             r_out = ((r * a_src) + (r_dst * (256 - a_src))) // 256\n    ...             g_out = ((g * a_src) + (g_dst * (256 - a_src))) // 256\n    ...             b_out = ((b * a_src) + (b_dst * (256 - a_src))) // 256\n    ...             im_data[x + img.dst_x, y + img.dst_y] = (r_out, g_out, b_out)\n    ...\n    >>> im_out.show()\n\n### Sample Rendering (from `renderer_test.py`)\n\n![Test rendering](test.png)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/chireiden/python-ass", "keywords": "ass subtitle substation alpha", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ass", "package_url": "https://pypi.org/project/ass/", "platform": "", "project_url": "https://pypi.org/project/ass/", "project_urls": {"Homepage": "http://github.com/chireiden/python-ass"}, "release_url": "https://pypi.org/project/ass/0.5.0/", "requires_dist": ["setuptools"], "requires_python": "", "summary": "A library for parsing and manipulating Advanced SubStation Alpha subtitle files.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-ass</h1>\n<p>A library for parsing and manipulating\nAdvanced SubStation Alpha subtitle files.</p>\n<h2>Documents</h2>\n<p>Example file: <a href=\"./tests/test.ass\" rel=\"nofollow\"><strong>tests/test.ass</strong></a></p>\n<p>You can parse the file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"tests/test.ass\"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf_8_sig'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">ass</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<p>Access its meta info:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">info</span>\n<span class=\"n\">ScriptInfoSection</span><span class=\"p\">(</span><span class=\"s1\">'Script Info'</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'ScriptType'</span><span class=\"p\">,</span> <span class=\"s1\">'v4.00+'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'PlayResX'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'PlayResY'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">)]))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">'PlayResX'</span><span class=\"p\">]</span>\n<span class=\"mi\">500</span>\n</pre>\n<p>Access its styles:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">styles</span>\n<span class=\"n\">StylesSection</span><span class=\"p\">(</span><span class=\"s1\">'V4+ Styles'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Style</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Default'</span><span class=\"p\">,</span> <span class=\"n\">fontname</span><span class=\"o\">=</span><span class=\"s1\">'Arial'</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mf\">20.0</span><span class=\"p\">,</span> <span class=\"n\">primary_color</span><span class=\"o\">=</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">),</span> <span class=\"n\">secondary_color</span><span class=\"o\">=</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">),</span> <span class=\"n\">outline_color</span><span class=\"o\">=</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">),</span> <span class=\"n\">back_color</span><span class=\"o\">=</span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">),</span> <span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">italic</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">underline</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">strike_out</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">scale_x</span><span class=\"o\">=</span><span class=\"mf\">100.0</span><span class=\"p\">,</span> <span class=\"n\">scale_y</span><span class=\"o\">=</span><span class=\"mf\">100.0</span><span class=\"p\">,</span> <span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">border_style</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">outline</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">shadow</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">alignment</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">margin_l</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">margin_r</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">margin_v</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">styles</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">fontname</span>\n<span class=\"s1\">'Arial'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">styles</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">primary_color</span>  <span class=\"c1\"># \"color\", not \"colour\"</span>\n<span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mh\">0xff</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mh\">0x00</span><span class=\"p\">)</span>\n</pre>\n<p>Access its event lines:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">events</span>\n<span class=\"n\">EventsSection</span><span class=\"p\">(</span><span class=\"s1\">'Events'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Dialogue</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s1\">'Default'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">margin_l</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">margin_r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">margin_v</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">effect</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H0000FF}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H00FF00}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;HFF0000}this is a test'</span><span class=\"p\">),</span> <span class=\"o\">...</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H0000FF}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H00FF00}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;HFF0000}this is a test'</span>\n</pre>\n<p>Or any other section data:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">sections</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"s1\">'Script Info'</span><span class=\"p\">,</span> <span class=\"s1\">'Aegisub Project Garbage'</span><span class=\"p\">,</span> <span class=\"s1\">'Custom Section'</span><span class=\"p\">,</span> <span class=\"s1\">'V4+ Styles'</span><span class=\"p\">,</span> <span class=\"s1\">'Events'</span><span class=\"p\">,</span> <span class=\"s1\">'Aegisub Extradata'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">sections</span><span class=\"p\">[</span><span class=\"s1\">'Aegisub Project Garbage'</span><span class=\"p\">][</span><span class=\"s1\">'Scroll Position'</span><span class=\"p\">]</span>\n<span class=\"s1\">'30'</span>\n</pre>\n<p>You can dump everything out into ASS format, too:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">()</span>\n<span class=\"s1\">'0,0:00:00.00,0:00:05.00,Default,,0,0,0,,{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H0000FF}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;H00FF00}this is a test</span><span class=\"se\">\\\\</span><span class=\"s1\">N{</span><span class=\"se\">\\\\</span><span class=\"s1\">3c&amp;HFF0000}this is a test'</span>\n</pre>\n<p>Or maybe the whole file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"out.ass\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf_8_sig'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">dump_file</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h2>Tags</h2>\n<p>For parsing ASS tags, you may want to consider <code>ass-tag-parser</code>:\n<a href=\"https://pypi.org/project/ass-tag-parser/\" rel=\"nofollow\">https://pypi.org/project/ass-tag-parser/</a>\n(on <a href=\"https://github.com/rr-/ass_tag_parser\" rel=\"nofollow\">GitHub</a>).</p>\n<h2>Rendering</h2>\n<p><em>The following has been unmaintained for years.</em></p>\n<p>python-ass can use libass for rendering.</p>\n<p>First you need to allocate a libass context:</p>\n<pre><code>&gt;&gt;&gt; ctx = ass.renderer.Context()\n</code></pre>\n<p>Then you need to convert the <code>ass.document.Document</code> to a <code>ass.renderer.Track</code>:</p>\n<pre><code>&gt;&gt;&gt; t = ctx.make_track()\n&gt;&gt;&gt; t.populate(doc)\n</code></pre>\n<p>Then make a renderer to render the track:</p>\n<pre><code>&gt;&gt;&gt; r = ctx.make_renderer()\n&gt;&gt;&gt; r.set_fonts(fontconfig_config=\"/usr/local/etc/fonts/fonts.conf\")\n&gt;&gt;&gt; r.set_all_sizes((1280, 720))\n</code></pre>\n<p>You can render a frame at a given time:</p>\n<pre><code>&gt;&gt;&gt; imgs = r.render_frame(t, timedelta(0))\n</code></pre>\n<p>Example using PIL to render to a bitmap:</p>\n<pre><code>&gt;&gt;&gt; im_out = Image.new(\"RGB\", (1280, 720))\n&gt;&gt;&gt; im_data = im_out.load()\n&gt;&gt;&gt; for img in imgs:\n...     r, g, b, a = img.rgba\n...     for y in range(img.h):\n...         for x in range(img.w):\n...             a_src = img[x, y] * (256 - a) // 256\n...             r_dst, g_dst, b_dst = im_data[x + img.dst_x, y + img.dst_y]\n...             r_out = ((r * a_src) + (r_dst * (256 - a_src))) // 256\n...             g_out = ((g * a_src) + (g_dst * (256 - a_src))) // 256\n...             b_out = ((b * a_src) + (b_dst * (256 - a_src))) // 256\n...             im_data[x + img.dst_x, y + img.dst_y] = (r_out, g_out, b_out)\n...\n&gt;&gt;&gt; im_out.show()\n</code></pre>\n<h3>Sample Rendering (from <code>renderer_test.py</code>)</h3>\n<p><img alt=\"Test rendering\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ef0a725af390a16ef820ecc60db6e167056c20f/746573742e706e67\"></p>\n\n          </div>"}, "last_serial": 6689634, "releases": {"0.4.3": [], "0.4.4": [{"comment_text": "", "digests": {"md5": "284981308d2e6cee5e1b2a006c000116", "sha256": "bf420da2b15754b18a7d05324daabd151c2722c43fbcbb0dd675ff7ccc34fe98"}, "downloads": -1, "filename": "ass-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "284981308d2e6cee5e1b2a006c000116", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11835, "upload_time": "2019-01-26T00:28:47", "upload_time_iso_8601": "2019-01-26T00:28:47.006630Z", "url": "https://files.pythonhosted.org/packages/4d/c1/211e6d5568643643e40918be8bc3e4948934ee75a83222008cf652adac94/ass-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c80cbc03bd836d6c0cacbe200e1f0d7a", "sha256": "1a24e3b0877a850ea41e195e05d50cde8f7be428b9d71046226bd9cccb8e67d4"}, "downloads": -1, "filename": "ass-0.4.4.tar.gz", "has_sig": false, "md5_digest": "c80cbc03bd836d6c0cacbe200e1f0d7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12445, "upload_time": "2019-01-26T00:28:48", "upload_time_iso_8601": "2019-01-26T00:28:48.416015Z", "url": "https://files.pythonhosted.org/packages/dd/86/11dc4eea3f08ea1e4ec08ab86b01f0b30b50de27355d15d421ccde2b5897/ass-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "9c511a2edcc20c34bdff408facb20849", "sha256": "bf26950b43a713df1cfe52386194c93dd3aef3aa2f7091c07e5d236d62017207"}, "downloads": -1, "filename": "ass-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9c511a2edcc20c34bdff408facb20849", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11942, "upload_time": "2020-02-24T16:41:26", "upload_time_iso_8601": "2020-02-24T16:41:26.628439Z", "url": "https://files.pythonhosted.org/packages/be/66/aac65fb2959c6fbde24cc5982dc5091bbdb1937eef085abed29661b63e25/ass-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87c631d3e3552cc7174efc9d50d8ead7", "sha256": "9243d00b74e663019e0ccfe8802c6081254443052d351ff9cc788009d1e26df2"}, "downloads": -1, "filename": "ass-0.4.5.tar.gz", "has_sig": false, "md5_digest": "87c631d3e3552cc7174efc9d50d8ead7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12908, "upload_time": "2020-02-24T16:41:30", "upload_time_iso_8601": "2020-02-24T16:41:30.694779Z", "url": "https://files.pythonhosted.org/packages/83/bd/97f9e0007306d635dbb042bca5ff2d41167fe02c8ffa1c8073f57989756a/ass-0.4.5.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "71b0cd00df1e1a8fd563de1ace1317c0", "sha256": "7e59a8b92871bbb3970f19903ffed95809b53bda254d1b1f7a9d9f500ebf2f18"}, "downloads": -1, "filename": "ass-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71b0cd00df1e1a8fd563de1ace1317c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14823, "upload_time": "2020-02-24T16:41:28", "upload_time_iso_8601": "2020-02-24T16:41:28.135699Z", "url": "https://files.pythonhosted.org/packages/60/ac/b130d69e8154da7cb08b3cadff633c636e62e97928d5fd44702204436a68/ass-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9cd2efda854c1a65e198e1e77bd88fc", "sha256": "8b5df3e450314bf7941c4eeea3962524905c10c57f1bac2cfa1256e67814fed7"}, "downloads": -1, "filename": "ass-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b9cd2efda854c1a65e198e1e77bd88fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14818, "upload_time": "2020-02-24T16:41:31", "upload_time_iso_8601": "2020-02-24T16:41:31.950199Z", "url": "https://files.pythonhosted.org/packages/b5/ab/b6842e96b2cab6cde9e4a01c6029344ae8b6503a5410777fe4fce3a22a74/ass-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71b0cd00df1e1a8fd563de1ace1317c0", "sha256": "7e59a8b92871bbb3970f19903ffed95809b53bda254d1b1f7a9d9f500ebf2f18"}, "downloads": -1, "filename": "ass-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71b0cd00df1e1a8fd563de1ace1317c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14823, "upload_time": "2020-02-24T16:41:28", "upload_time_iso_8601": "2020-02-24T16:41:28.135699Z", "url": "https://files.pythonhosted.org/packages/60/ac/b130d69e8154da7cb08b3cadff633c636e62e97928d5fd44702204436a68/ass-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9cd2efda854c1a65e198e1e77bd88fc", "sha256": "8b5df3e450314bf7941c4eeea3962524905c10c57f1bac2cfa1256e67814fed7"}, "downloads": -1, "filename": "ass-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b9cd2efda854c1a65e198e1e77bd88fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14818, "upload_time": "2020-02-24T16:41:31", "upload_time_iso_8601": "2020-02-24T16:41:31.950199Z", "url": "https://files.pythonhosted.org/packages/b5/ab/b6842e96b2cab6cde9e4a01c6029344ae8b6503a5410777fe4fce3a22a74/ass-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:54 2020"}