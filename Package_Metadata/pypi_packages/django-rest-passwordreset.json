{"info": {"author": "Harald Nezbeda", "author_email": "hnezbeda@anexia-it.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "\n# Django Rest Password Reset\n\n[![PyPI version](https://badge.fury.io/py/django-rest-passwordreset.svg)](https://badge.fury.io/py/django-rest-passwordreset)\n[![Build Status](https://travis-ci.org/anexia-it/django-rest-passwordreset.svg?branch=master)](https://travis-ci.org/anexia-it/django-rest-passwordreset)\n\nThis python package provides a simple password reset strategy for django rest framework, where users can request password \nreset tokens via their registered e-mail address.\n\nThe main idea behind this package is to not make any assumptions about how the token is delivered to the end-user (e-mail, text-message, etc...).\nInstead, this package provides a signal that can be reacted on (e.g., by sending an e-mail or a text message).\n\nThis package basically provides two REST endpoints:\n\n* Request a token\n* Verify (confirm) a token (and change the password)\n\n## Quickstart\n\n1. Install the package from pypi using pip:\n```bash\npip install django-rest-passwordreset\n```\n\n2. Add ``django_rest_passwordreset`` to your ``INSTALLED_APPS`` (after ``rest_framework``) within your Django settings file:\n```python\nINSTALLED_APPS = (\n    ...\n    'django.contrib.auth',\n    ...\n    'rest_framework',\n    ...\n    'django_rest_passwordreset',\n    ...\n)\n```\n\n3. This package stores tokens in a separate database table (see [django_rest_passwordreset/models.py](django_rest_passwordreset/models.py)). Therefore, you have to run django migrations:\n```bash\npython manage.py migrate\n```\n\n4. This package provides two endpoints, which can be included by including ``django_rest_passwordreset.urls`` in your ``urls.py`` as follows:\n```python\nfrom django.conf.urls import url, include\n\n\nurlpatterns = [\n    ...\n    url(r'^api/password_reset/', include('django_rest_passwordreset.urls', namespace='password_reset')),\n    ...\n]    \n```\n**Note**: You can adapt the url to your needs.\n\n### Endpoints\n\nThe following endpoints are provided:\n\n * `POST ${API_URL}/reset_password/` - request a reset password token by using the ``email`` parameter\n * `POST ${API_URL}/reset_password/confirm/` - using a valid ``token``, the users password is set to the provided ``password``\n * `POST ${API_URL}/reset_password/validate_token/` - will return a 200 if a given ``token`` is valid\n\nwhere `${API_URL}/` is the url specified in your *urls.py* (e.g., `api/password_reset/`)\n\n### Signals\n\n* ``reset_password_token_created(sender, instance, reset_password_token)`` Fired when a reset password token is generated\n* ``pre_password_reset(sender, user)`` - fired just before a password is being reset\n* ``post_password_reset(sender, user)`` - fired after a password has been reset\n\n### Example for sending an e-mail\n\n1. Create two new django templates: `email/user_reset_password.html` and `email/user_reset_password.txt`. Those templates will contain the e-mail message sent to the user, aswell as the password reset link (or token).\nWithin the templates, you can access the following context variables: `current_user`, `username`, `email`, `reset_password_url`. Feel free to adapt this to your needs.\n\n2. Add the following code, which contains a Django Signal Receiver (`@receiver(...)`), to your application. Take care where to put this code, as it needs to be executed by the python interpreter (see the section *The `reset_password_token_created` signal is not fired* below, aswell as [this part of the django documentation](https://docs.djangoproject.com/en/1.11/topics/signals/#connecting-receiver-functions) and [How to Create Django Signals Tutorial](https://simpleisbetterthancomplex.com/tutorial/2016/07/28/how-to-create-django-signals.html) for more information).\n```python\nfrom django.core.mail import EmailMultiAlternatives\nfrom django.dispatch import receiver\nfrom django.template.loader import render_to_string\nfrom django.urls import reverse\n\nfrom django_rest_passwordreset.signals import reset_password_token_created\n\n\n@receiver(reset_password_token_created)\ndef password_reset_token_created(sender, instance, reset_password_token, *args, **kwargs):\n    \"\"\"\n    Handles password reset tokens\n    When a token is created, an e-mail needs to be sent to the user\n    :param sender: View Class that sent the signal\n    :param instance: View Instance that sent the signal\n    :param reset_password_token: Token Model Object\n    :param args:\n    :param kwargs:\n    :return:\n    \"\"\"\n    # send an e-mail to the user\n    context = {\n        'current_user': reset_password_token.user,\n        'username': reset_password_token.user.username,\n        'email': reset_password_token.user.email,\n        'reset_password_url': \"{}?token={}\".format(reverse('password_reset:reset-password-request'), reset_password_token.key)\n    }\n\n    # render email text\n    email_html_message = render_to_string('email/user_reset_password.html', context)\n    email_plaintext_message = render_to_string('email/user_reset_password.txt', context)\n\n    msg = EmailMultiAlternatives(\n        # title:\n        \"Password Reset for {title}\".format(title=\"Some website title\"),\n        # message:\n        email_plaintext_message,\n        # from:\n        \"noreply@somehost.local\",\n        # to:\n        [reset_password_token.user.email]\n    )\n    msg.attach_alternative(email_html_message, \"text/html\")\n    msg.send()\n\n```\n\n3. You should now be able to use the endpoints to request a password reset token via your e-mail address. \nIf you want to test this locally, I recommend using some kind of fake mailserver (such as maildump).\n\n\n\n# Configuration / Settings\n\nThe following settings can be set in Djangos ``settings.py`` file:\n\n* `DJANGO_REST_MULTITOKENAUTH_RESET_TOKEN_EXPIRY_TIME` - time in hours about how long the token is active (Default: 24)\n\n  **Please note**: expired tokens are automatically cleared based on this setting in every call of ``ResetPasswordRequestToken.post``.\n\n* `DJANGO_REST_PASSWORDRESET_NO_INFORMATION_LEAKAGE` - will cause a 200 to be returned on `POST ${API_URL}/reset_password/`\n  even if the user doesn't exist in the databse (Default: False) \n\n* `DJANGO_REST_MULTITOKENAUTH_REQUIRE_USABLE_PASSWORD` - allows password reset for a user that does not \n  [have a usable password](https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#django.contrib.auth.models.User.has_usable_password) (Default: True)\n\n## Custom Email Lookup\n\nBy default, `email` lookup is used to find the user instance. You can change that by adding \n```python\nDJANGO_REST_LOOKUP_FIELD = 'custom_email_field'\n```\ninto Django settings.py file.\n\n## Custom Remote IP Address and User Agent Header Lookup\n\nIf your setup demands that the IP adress of the user is in another header (e.g., 'X-Forwarded-For'), you can configure that (using Django Request Headers):\n\n```python\nDJANGO_REST_PASSWORDRESET_IP_ADDRESS_HEADER = 'HTTP_X_FORWARDED_FOR'\n```\n\nThe same is true for the user agent:\n\n```python\nHTTP_USER_AGENT_HEADER = 'HTTP_USER_AGENT'\n```\n\n## Custom Token Generator\n\nBy default, a random string token of length 10 to 50 is generated using the ``RandomStringTokenGenerator`` class.\nThis library offers a possibility to configure the params of ``RandomStringTokenGenerator`` as well as switch to\nanother token generator, e.g. ``RandomNumberTokenGenerator``. You can also generate your own token generator class.\n\nYou can change that by adding \n```python\nDJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {\n    \"CLASS\": ...,\n    \"OPTIONS\": {...}\n}\n```\ninto Django settings.py file.\n\n\n### RandomStringTokenGenerator\nThis is the default configuration. \n```python\nDJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {\n    \"CLASS\": \"django_rest_passwordreset.tokens.RandomStringTokenGenerator\"\n}\n```\n\nYou can configure the length as follows:\n```python\nDJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {\n    \"CLASS\": \"django_rest_passwordreset.tokens.RandomStringTokenGenerator\",\n    \"OPTIONS\": {\n        \"min_length\": 20,\n        \"max_length\": 30\n    }\n}\n```\n\nIt uses `os.urandom()` to generate a good random string.\n\n\n### RandomNumberTokenGenerator\n```python\nDJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {\n    \"CLASS\": \"django_rest_passwordreset.tokens.RandomNumberTokenGenerator\"\n}\n```\n\nYou can configure the minimum and maximum number as follows:\n```python\nDJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {\n    \"CLASS\": \"django_rest_passwordreset.tokens.RandomNumberTokenGenerator\",\n    \"OPTIONS\": {\n        \"min_number\": 1500,\n        \"max_number\": 9999\n    }\n}\n```\n\nIt uses `random.SystemRandom().randint()` to generate a good random number.\n\n\n### Write your own Token Generator\n\nPlease see [token_configuration/django_rest_passwordreset/tokens.py](token_configuration/django_rest_passwordreset/tokens.py) for example implementation of number and string token generator.\n\nThe basic idea is to create a new class that inherits from BaseTokenGenerator, takes arbitrary arguments (`args` and `kwargs`)\nin the ``__init__`` function as well as implementing a `generate_token` function.\n\n```python\nfrom django_rest_passwordreset.tokens import BaseTokenGenerator\n\n\nclass RandomStringTokenGenerator(BaseTokenGenerator):\n    \"\"\"\n    Generates a random string with min and max length using os.urandom and binascii.hexlify\n    \"\"\"\n\n    def __init__(self, min_length=10, max_length=50, *args, **kwargs):\n        self.min_length = min_length\n        self.max_length = max_length\n\n    def generate_token(self, *args, **kwargs):\n        \"\"\" generates a pseudo random code using os.urandom and binascii.hexlify \"\"\"\n        # determine the length based on min_length and max_length\n        length = random.randint(self.min_length, self.max_length)\n\n        # generate the token using os.urandom and hexlify\n        return binascii.hexlify(\n            os.urandom(self.max_length)\n        ).decode()[0:length]\n```\n\n\n## Compatibility Matrix\n\nThis library should be compatible with the latest Django and Django Rest Framework Versions. For reference, here is\na matrix showing the guaranteed and tested compatibility.\n\ndjango-rest-passwordreset Version | Django Versions | Django Rest Framework Versions\n--------------------------------- | ----------------| ------------------------------\n0.9.7 | 1.8, 1.11, 2.0, 2.1 | 3.6 - 3.9\n1.0 | 1.11, 2.0, 2.2 | 3.6 - 3.9\n1.1 | 1.11, 2.2 | 3.6 - 3.9\n\n## Documentation / Browsable API\n\nThis package supports the [DRF auto-generated documentation](https://www.django-rest-framework.org/topics/documenting-your-api/) (via `coreapi`) as well as the [DRF browsable API](https://www.django-rest-framework.org/topics/browsable-api/).\n\n![drf_browsable_email_validation](docs/browsable_api_email_validation.png \"Browsable API E-Mail Validation\")\n\n![drf_browsable_password_validation](docs/browsable_api_password_validation.png \"Browsable API E-Mail Validation\")\n\n![coreapi_docs](docs/coreapi_docs.png \"Core API Docs\")\n\n\n## Known Issues / FAQ\n\n### Django 2.1 Migrations - Multiple Primary keys for table ...\nDjango 2.1 introduced a breaking change for migrations (see [Django Issue #29790](https://code.djangoproject.com/ticket/29790)). We therefore had to rewrite the migration [0002_pk_migration.py](django_rest_passwordreset/migrations/0002_pk_migration.py) such that it covers Django versions before (`<`) 2.1 and later (`>=`) 2.1.\n\nSome information is written down in Issue #8.\n\n### The `reset_password_token_created` signal is not fired\nYou need to make sure that the code with `@receiver(reset_password_token_created)` is executed by the python interpreter. To ensure this, you have two options:\n\n1. Put the code at a place that is automatically loaded by Django (e.g., models.py, views.py), or\n\n2. Import the file that contains the signal within your app.py `ready` function:\n\n  *some_app/signals.py*\n  ```python\n  from django.core.mail import EmailMultiAlternatives\n  from django.dispatch import receiver\n  from django.template.loader import render_to_string\n  from django.urls import reverse\n\n  from django_rest_passwordreset.signals import reset_password_token_created\n\n\n  @receiver(reset_password_token_created)\n  def password_reset_token_created(sender, instance, reset_password_token, *args, **kwargs):\n      # ...\n  ```\n\n  *some_app/app.py*\n  ```python\n  from django.apps import AppConfig\n\n  class SomeAppConfig(AppConfig):\n      name = 'your_django_project.some_app'\n      verbose_name = 'Some App'\n\n      def ready(self):\n          import your_django_project.some_app.signals  # noqa\n  ```\n\n  *some_app/__init__.py*\n  ```python\n  default_app_config = 'your_django_project.some_app.SomeAppConfig'\n  ```\n\n### MongoDB not working\n\nApparently, the following piece of code in the Django Model prevents MongodB from working:\n\n```python\n id = models.AutoField( \n     primary_key=True \n ) \n```\n\nSee issue #49 for details.\n\n## Contributions\n\nThis library tries to follow the unix philosophy of \"do one thing and do it well\" (which is providing a basic password reset endpoint for Django Rest Framework). Contributions are welcome in the form of pull requests and issues! If you create a pull request, please make sure that you are not introducing breaking changes. \n\n## Tests\n\nSee folder [tests/](tests/). Basically, all endpoints are covered with multiple\nunit tests.\n\nUse this code snippet to run tests:\n```bash\npip install -r requirements_test.txt\npython setup.py install\ncd tests\npython manage.py test\n```\n\n## Release on PyPi\n\nTo release this package on pypi, the following steps are used:\n\n```bash\nrm -rf dist/ build/\npython setup.py sdist\ntwine upload dist/*\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anexia-it/django-rest-passwordreset", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-rest-passwordreset", "package_url": "https://pypi.org/project/django-rest-passwordreset/", "platform": "", "project_url": "https://pypi.org/project/django-rest-passwordreset/", "project_urls": {"Homepage": "https://github.com/anexia-it/django-rest-passwordreset"}, "release_url": "https://pypi.org/project/django-rest-passwordreset/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "An extension of django rest framework, providing a configurable password reset strategy", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Rest Password Reset</h1>\n<p><a href=\"https://badge.fury.io/py/django-rest-passwordreset\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebead6fc2a0e71c7aa6f4cddd3d8ff81b06cc983/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d726573742d70617373776f726472657365742e737667\"></a>\n<a href=\"https://travis-ci.org/anexia-it/django-rest-passwordreset\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe314a35b573487a2e8916244b9245d591d126b3/68747470733a2f2f7472617669732d63692e6f72672f616e657869612d69742f646a616e676f2d726573742d70617373776f726472657365742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This python package provides a simple password reset strategy for django rest framework, where users can request password\nreset tokens via their registered e-mail address.</p>\n<p>The main idea behind this package is to not make any assumptions about how the token is delivered to the end-user (e-mail, text-message, etc...).\nInstead, this package provides a signal that can be reacted on (e.g., by sending an e-mail or a text message).</p>\n<p>This package basically provides two REST endpoints:</p>\n<ul>\n<li>Request a token</li>\n<li>Verify (confirm) a token (and change the password)</li>\n</ul>\n<h2>Quickstart</h2>\n<ol>\n<li>Install the package from pypi using pip:</li>\n</ol>\n<pre>pip install django-rest-passwordreset\n</pre>\n<ol>\n<li>Add <code>django_rest_passwordreset</code> to your <code>INSTALLED_APPS</code> (after <code>rest_framework</code>) within your Django settings file:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'rest_framework'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_rest_passwordreset'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<ol>\n<li>This package stores tokens in a separate database table (see <a href=\"django_rest_passwordreset/models.py\" rel=\"nofollow\">django_rest_passwordreset/models.py</a>). Therefore, you have to run django migrations:</li>\n</ol>\n<pre>python manage.py migrate\n</pre>\n<ol>\n<li>This package provides two endpoints, which can be included by including <code>django_rest_passwordreset.urls</code> in your <code>urls.py</code> as follows:</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">include</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^api/password_reset/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_rest_passwordreset.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'password_reset'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>    \n</pre>\n<p><strong>Note</strong>: You can adapt the url to your needs.</p>\n<h3>Endpoints</h3>\n<p>The following endpoints are provided:</p>\n<ul>\n<li><code>POST ${API_URL}/reset_password/</code> - request a reset password token by using the <code>email</code> parameter</li>\n<li><code>POST ${API_URL}/reset_password/confirm/</code> - using a valid <code>token</code>, the users password is set to the provided <code>password</code></li>\n<li><code>POST ${API_URL}/reset_password/validate_token/</code> - will return a 200 if a given <code>token</code> is valid</li>\n</ul>\n<p>where <code>${API_URL}/</code> is the url specified in your <em>urls.py</em> (e.g., <code>api/password_reset/</code>)</p>\n<h3>Signals</h3>\n<ul>\n<li><code>reset_password_token_created(sender, instance, reset_password_token)</code> Fired when a reset password token is generated</li>\n<li><code>pre_password_reset(sender, user)</code> - fired just before a password is being reset</li>\n<li><code>post_password_reset(sender, user)</code> - fired after a password has been reset</li>\n</ul>\n<h3>Example for sending an e-mail</h3>\n<ol>\n<li>\n<p>Create two new django templates: <code>email/user_reset_password.html</code> and <code>email/user_reset_password.txt</code>. Those templates will contain the e-mail message sent to the user, aswell as the password reset link (or token).\nWithin the templates, you can access the following context variables: <code>current_user</code>, <code>username</code>, <code>email</code>, <code>reset_password_url</code>. Feel free to adapt this to your needs.</p>\n</li>\n<li>\n<p>Add the following code, which contains a Django Signal Receiver (<code>@receiver(...)</code>), to your application. Take care where to put this code, as it needs to be executed by the python interpreter (see the section <em>The <code>reset_password_token_created</code> signal is not fired</em> below, aswell as <a href=\"https://docs.djangoproject.com/en/1.11/topics/signals/#connecting-receiver-functions\" rel=\"nofollow\">this part of the django documentation</a> and <a href=\"https://simpleisbetterthancomplex.com/tutorial/2016/07/28/how-to-create-django-signals.html\" rel=\"nofollow\">How to Create Django Signals Tutorial</a> for more information).</p>\n</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.core.mail</span> <span class=\"kn\">import</span> <span class=\"n\">EmailMultiAlternatives</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template.loader</span> <span class=\"kn\">import</span> <span class=\"n\">render_to_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_rest_passwordreset.signals</span> <span class=\"kn\">import</span> <span class=\"n\">reset_password_token_created</span>\n\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">reset_password_token_created</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">password_reset_token_created</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">reset_password_token</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Handles password reset tokens</span>\n<span class=\"sd\">    When a token is created, an e-mail needs to be sent to the user</span>\n<span class=\"sd\">    :param sender: View Class that sent the signal</span>\n<span class=\"sd\">    :param instance: View Instance that sent the signal</span>\n<span class=\"sd\">    :param reset_password_token: Token Model Object</span>\n<span class=\"sd\">    :param args:</span>\n<span class=\"sd\">    :param kwargs:</span>\n<span class=\"sd\">    :return:</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"c1\"># send an e-mail to the user</span>\n    <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'current_user'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span>\n        <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n        <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">,</span>\n        <span class=\"s1\">'reset_password_url'</span><span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">?token=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'password_reset:reset-password-request'</span><span class=\"p\">),</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># render email text</span>\n    <span class=\"n\">email_html_message</span> <span class=\"o\">=</span> <span class=\"n\">render_to_string</span><span class=\"p\">(</span><span class=\"s1\">'email/user_reset_password.html'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n    <span class=\"n\">email_plaintext_message</span> <span class=\"o\">=</span> <span class=\"n\">render_to_string</span><span class=\"p\">(</span><span class=\"s1\">'email/user_reset_password.txt'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">EmailMultiAlternatives</span><span class=\"p\">(</span>\n        <span class=\"c1\"># title:</span>\n        <span class=\"s2\">\"Password Reset for </span><span class=\"si\">{title}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Some website title\"</span><span class=\"p\">),</span>\n        <span class=\"c1\"># message:</span>\n        <span class=\"n\">email_plaintext_message</span><span class=\"p\">,</span>\n        <span class=\"c1\"># from:</span>\n        <span class=\"s2\">\"noreply@somehost.local\"</span><span class=\"p\">,</span>\n        <span class=\"c1\"># to:</span>\n        <span class=\"p\">[</span><span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">attach_alternative</span><span class=\"p\">(</span><span class=\"n\">email_html_message</span><span class=\"p\">,</span> <span class=\"s2\">\"text/html\"</span><span class=\"p\">)</span>\n    <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>You should now be able to use the endpoints to request a password reset token via your e-mail address.\nIf you want to test this locally, I recommend using some kind of fake mailserver (such as maildump).</li>\n</ol>\n<h1>Configuration / Settings</h1>\n<p>The following settings can be set in Djangos <code>settings.py</code> file:</p>\n<ul>\n<li>\n<p><code>DJANGO_REST_MULTITOKENAUTH_RESET_TOKEN_EXPIRY_TIME</code> - time in hours about how long the token is active (Default: 24)</p>\n<p><strong>Please note</strong>: expired tokens are automatically cleared based on this setting in every call of <code>ResetPasswordRequestToken.post</code>.</p>\n</li>\n<li>\n<p><code>DJANGO_REST_PASSWORDRESET_NO_INFORMATION_LEAKAGE</code> - will cause a 200 to be returned on <code>POST ${API_URL}/reset_password/</code>\neven if the user doesn't exist in the databse (Default: False)</p>\n</li>\n<li>\n<p><code>DJANGO_REST_MULTITOKENAUTH_REQUIRE_USABLE_PASSWORD</code> - allows password reset for a user that does not\n<a href=\"https://docs.djangoproject.com/en/2.2/ref/contrib/auth/#django.contrib.auth.models.User.has_usable_password\" rel=\"nofollow\">have a usable password</a> (Default: True)</p>\n</li>\n</ul>\n<h2>Custom Email Lookup</h2>\n<p>By default, <code>email</code> lookup is used to find the user instance. You can change that by adding</p>\n<pre><span class=\"n\">DJANGO_REST_LOOKUP_FIELD</span> <span class=\"o\">=</span> <span class=\"s1\">'custom_email_field'</span>\n</pre>\n<p>into Django settings.py file.</p>\n<h2>Custom Remote IP Address and User Agent Header Lookup</h2>\n<p>If your setup demands that the IP adress of the user is in another header (e.g., 'X-Forwarded-For'), you can configure that (using Django Request Headers):</p>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_IP_ADDRESS_HEADER</span> <span class=\"o\">=</span> <span class=\"s1\">'HTTP_X_FORWARDED_FOR'</span>\n</pre>\n<p>The same is true for the user agent:</p>\n<pre><span class=\"n\">HTTP_USER_AGENT_HEADER</span> <span class=\"o\">=</span> <span class=\"s1\">'HTTP_USER_AGENT'</span>\n</pre>\n<h2>Custom Token Generator</h2>\n<p>By default, a random string token of length 10 to 50 is generated using the <code>RandomStringTokenGenerator</code> class.\nThis library offers a possibility to configure the params of <code>RandomStringTokenGenerator</code> as well as switch to\nanother token generator, e.g. <code>RandomNumberTokenGenerator</code>. You can also generate your own token generator class.</p>\n<p>You can change that by adding</p>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"CLASS\"</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>into Django settings.py file.</p>\n<h3>RandomStringTokenGenerator</h3>\n<p>This is the default configuration.</p>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"CLASS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django_rest_passwordreset.tokens.RandomStringTokenGenerator\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can configure the length as follows:</p>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"CLASS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django_rest_passwordreset.tokens.RandomStringTokenGenerator\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"min_length\"</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_length\"</span><span class=\"p\">:</span> <span class=\"mi\">30</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>It uses <code>os.urandom()</code> to generate a good random string.</p>\n<h3>RandomNumberTokenGenerator</h3>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"CLASS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django_rest_passwordreset.tokens.RandomNumberTokenGenerator\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can configure the minimum and maximum number as follows:</p>\n<pre><span class=\"n\">DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"CLASS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django_rest_passwordreset.tokens.RandomNumberTokenGenerator\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"min_number\"</span><span class=\"p\">:</span> <span class=\"mi\">1500</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_number\"</span><span class=\"p\">:</span> <span class=\"mi\">9999</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>It uses <code>random.SystemRandom().randint()</code> to generate a good random number.</p>\n<h3>Write your own Token Generator</h3>\n<p>Please see <a href=\"token_configuration/django_rest_passwordreset/tokens.py\" rel=\"nofollow\">token_configuration/django_rest_passwordreset/tokens.py</a> for example implementation of number and string token generator.</p>\n<p>The basic idea is to create a new class that inherits from BaseTokenGenerator, takes arbitrary arguments (<code>args</code> and <code>kwargs</code>)\nin the <code>__init__</code> function as well as implementing a <code>generate_token</code> function.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_rest_passwordreset.tokens</span> <span class=\"kn\">import</span> <span class=\"n\">BaseTokenGenerator</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RandomStringTokenGenerator</span><span class=\"p\">(</span><span class=\"n\">BaseTokenGenerator</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Generates a random string with min and max length using os.urandom and binascii.hexlify</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">min_length</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span> <span class=\"o\">=</span> <span class=\"n\">min_length</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_length</span> <span class=\"o\">=</span> <span class=\"n\">max_length</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_token</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" generates a pseudo random code using os.urandom and binascii.hexlify \"\"\"</span>\n        <span class=\"c1\"># determine the length based on min_length and max_length</span>\n        <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># generate the token using os.urandom and hexlify</span>\n        <span class=\"k\">return</span> <span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">hexlify</span><span class=\"p\">(</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">urandom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">length</span><span class=\"p\">]</span>\n</pre>\n<h2>Compatibility Matrix</h2>\n<p>This library should be compatible with the latest Django and Django Rest Framework Versions. For reference, here is\na matrix showing the guaranteed and tested compatibility.</p>\n<table>\n<thead>\n<tr>\n<th>django-rest-passwordreset Version</th>\n<th>Django Versions</th>\n<th>Django Rest Framework Versions</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.9.7</td>\n<td>1.8, 1.11, 2.0, 2.1</td>\n<td>3.6 - 3.9</td>\n</tr>\n<tr>\n<td>1.0</td>\n<td>1.11, 2.0, 2.2</td>\n<td>3.6 - 3.9</td>\n</tr>\n<tr>\n<td>1.1</td>\n<td>1.11, 2.2</td>\n<td>3.6 - 3.9</td>\n</tr></tbody></table>\n<h2>Documentation / Browsable API</h2>\n<p>This package supports the <a href=\"https://www.django-rest-framework.org/topics/documenting-your-api/\" rel=\"nofollow\">DRF auto-generated documentation</a> (via <code>coreapi</code>) as well as the <a href=\"https://www.django-rest-framework.org/topics/browsable-api/\" rel=\"nofollow\">DRF browsable API</a>.</p>\n<p><img alt=\"drf_browsable_email_validation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/309ec62ba5c1ca97bc3e1ea79d05f4ca0b62caa3/646f63732f62726f777361626c655f6170695f656d61696c5f76616c69646174696f6e2e706e67\"></p>\n<p><img alt=\"drf_browsable_password_validation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea82940bfc39745971c87995ed3c2156d32a3c70/646f63732f62726f777361626c655f6170695f70617373776f72645f76616c69646174696f6e2e706e67\"></p>\n<p><img alt=\"coreapi_docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/791c03aa4acde5361ba603577f3cd29b712e7331/646f63732f636f72656170695f646f63732e706e67\"></p>\n<h2>Known Issues / FAQ</h2>\n<h3>Django 2.1 Migrations - Multiple Primary keys for table ...</h3>\n<p>Django 2.1 introduced a breaking change for migrations (see <a href=\"https://code.djangoproject.com/ticket/29790\" rel=\"nofollow\">Django Issue #29790</a>). We therefore had to rewrite the migration <a href=\"django_rest_passwordreset/migrations/0002_pk_migration.py\" rel=\"nofollow\">0002_pk_migration.py</a> such that it covers Django versions before (<code>&lt;</code>) 2.1 and later (<code>&gt;=</code>) 2.1.</p>\n<p>Some information is written down in Issue #8.</p>\n<h3>The <code>reset_password_token_created</code> signal is not fired</h3>\n<p>You need to make sure that the code with <code>@receiver(reset_password_token_created)</code> is executed by the python interpreter. To ensure this, you have two options:</p>\n<ol>\n<li>\n<p>Put the code at a place that is automatically loaded by Django (e.g., models.py, views.py), or</p>\n</li>\n<li>\n<p>Import the file that contains the signal within your app.py <code>ready</code> function:</p>\n</li>\n</ol>\n<p><em>some_app/signals.py</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.core.mail</span> <span class=\"kn\">import</span> <span class=\"n\">EmailMultiAlternatives</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template.loader</span> <span class=\"kn\">import</span> <span class=\"n\">render_to_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_rest_passwordreset.signals</span> <span class=\"kn\">import</span> <span class=\"n\">reset_password_token_created</span>\n\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">reset_password_token_created</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">password_reset_token_created</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">reset_password_token</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p><em>some_app/app.py</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.apps</span> <span class=\"kn\">import</span> <span class=\"n\">AppConfig</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SomeAppConfig</span><span class=\"p\">(</span><span class=\"n\">AppConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'your_django_project.some_app'</span>\n    <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s1\">'Some App'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">ready</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">your_django_project.some_app.signals</span>  <span class=\"c1\"># noqa</span>\n</pre>\n<p><em>some_app/<strong>init</strong>.py</em></p>\n<pre><span class=\"n\">default_app_config</span> <span class=\"o\">=</span> <span class=\"s1\">'your_django_project.some_app.SomeAppConfig'</span>\n</pre>\n<h3>MongoDB not working</h3>\n<p>Apparently, the following piece of code in the Django Model prevents MongodB from working:</p>\n<pre> <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AutoField</span><span class=\"p\">(</span> \n     <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span> \n <span class=\"p\">)</span> \n</pre>\n<p>See issue #49 for details.</p>\n<h2>Contributions</h2>\n<p>This library tries to follow the unix philosophy of \"do one thing and do it well\" (which is providing a basic password reset endpoint for Django Rest Framework). Contributions are welcome in the form of pull requests and issues! If you create a pull request, please make sure that you are not introducing breaking changes.</p>\n<h2>Tests</h2>\n<p>See folder <a href=\"tests/\" rel=\"nofollow\">tests/</a>. Basically, all endpoints are covered with multiple\nunit tests.</p>\n<p>Use this code snippet to run tests:</p>\n<pre>pip install -r requirements_test.txt\npython setup.py install\n<span class=\"nb\">cd</span> tests\npython manage.py <span class=\"nb\">test</span>\n</pre>\n<h2>Release on PyPi</h2>\n<p>To release this package on pypi, the following steps are used:</p>\n<pre>rm -rf dist/ build/\npython setup.py sdist\ntwine upload dist/*\n</pre>\n\n          </div>"}, "last_serial": 6543768, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "88a203534ab76d7bdb2076598e54c5ca", "sha256": "52ff86fa214a4a0967631067cd32f805c2f6f8fe692c144b8374e327009293e6"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.0.tar.gz", "has_sig": false, "md5_digest": "88a203534ab76d7bdb2076598e54c5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9795, "upload_time": "2017-08-10T05:41:26", "upload_time_iso_8601": "2017-08-10T05:41:26.101454Z", "url": "https://files.pythonhosted.org/packages/70/1c/c004943e76918c276c964581f93181334a789ec82d149e8315a3a0cdf694/django-rest-passwordreset-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "856c9788517aecd51ddc656b46348d39", "sha256": "eb7146dca4272fc2a769fd6ad9f6f6d3779818fb362794ed51f4eb48a75adfaf"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.1.tar.gz", "has_sig": false, "md5_digest": "856c9788517aecd51ddc656b46348d39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9817, "upload_time": "2017-08-10T05:43:56", "upload_time_iso_8601": "2017-08-10T05:43:56.890665Z", "url": "https://files.pythonhosted.org/packages/e6/fa/ba520f7a19b1bd092a5e17d0fe0f291907908a25f64998871e0ef86ebd78/django-rest-passwordreset-0.9.1.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "4c4c989e5d5f3f893cac9444e3019d51", "sha256": "d7d00048040327f97cffd10e0a90573f0d4f4ba182437ba7367585a6d46ecb09"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.3.tar.gz", "has_sig": false, "md5_digest": "4c4c989e5d5f3f893cac9444e3019d51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9899, "upload_time": "2018-05-08T15:00:56", "upload_time_iso_8601": "2018-05-08T15:00:56.598377Z", "url": "https://files.pythonhosted.org/packages/fc/90/fc7b27ae2de0f75dfaeb5d2c8bede3b68625930be653ca108e226b625369/django-rest-passwordreset-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "e18dd782c97f8797bfabeab99578c112", "sha256": "cb917af9d7054b2d46353ca5970b13884ac52dd0451a40630ce300042e186f8c"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.4.tar.gz", "has_sig": false, "md5_digest": "e18dd782c97f8797bfabeab99578c112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9920, "upload_time": "2018-06-08T13:03:31", "upload_time_iso_8601": "2018-06-08T13:03:31.134509Z", "url": "https://files.pythonhosted.org/packages/d9/82/1a20c167d3f99a1a07716c8499572948b1fe10c5dd176a17ba7703b15189/django-rest-passwordreset-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "c6cac251417b0860676154684b761677", "sha256": "9671c5a63701a9d10bd1ac314ca8dc988194590672787fc9b6cf5b83fdc487c0"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.5.tar.gz", "has_sig": false, "md5_digest": "c6cac251417b0860676154684b761677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13222, "upload_time": "2018-08-27T07:20:40", "upload_time_iso_8601": "2018-08-27T07:20:40.530470Z", "url": "https://files.pythonhosted.org/packages/a6/7d/0be489a69e8b5e91fb9326af0ad19958e800c332db6512c417a7bacb7d77/django-rest-passwordreset-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "10c4e610ae364e2d92c320bbdf0b29d8", "sha256": "ebfea9c2a108cf1acdac02ef42bba9ddb09458e31e621452b1ab57016d39e7db"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.6.tar.gz", "has_sig": false, "md5_digest": "10c4e610ae364e2d92c320bbdf0b29d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13193, "upload_time": "2018-10-16T15:00:36", "upload_time_iso_8601": "2018-10-16T15:00:36.213810Z", "url": "https://files.pythonhosted.org/packages/f8/64/62745c76f6e5028136b03799d1d22b2e6856da825ef4e5c569fa7b0502f9/django-rest-passwordreset-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "6e433e7ae4942c4965026379fa2f8802", "sha256": "dabbceab96a0b2424e91e95ae453f2dd1f28aee297846b74cc544c0bed566bd5"}, "downloads": -1, "filename": "django-rest-passwordreset-0.9.7.tar.gz", "has_sig": false, "md5_digest": "6e433e7ae4942c4965026379fa2f8802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14167, "upload_time": "2018-10-17T06:34:37", "upload_time_iso_8601": "2018-10-17T06:34:37.630819Z", "url": "https://files.pythonhosted.org/packages/25/80/e0aef1953f920af2a88aea374efd7057199da5b6b05cda96695cd2117f2d/django-rest-passwordreset-0.9.7.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "d6d77c9e730096f4d1d679735a3fc74c", "sha256": "abd27349cd5702d3704f87412a2cd51630b5da95a3ffde01f123e586d7d46b5a"}, "downloads": -1, "filename": "django-rest-passwordreset-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d6d77c9e730096f4d1d679735a3fc74c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200303, "upload_time": "2019-04-15T07:13:24", "upload_time_iso_8601": "2019-04-15T07:13:24.798104Z", "url": "https://files.pythonhosted.org/packages/34/f5/8bf32378a9183bbef9f195d4c4fb2a4ce97b2e56b1f88214434a2036bb64/django-rest-passwordreset-1.0.0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "e9ae5b163e799a807ef85b9d36728d80", "sha256": "0431c8fee320d9266af6ecc1a77042a8eabafb4e6c879197d553f4976bd351f4"}, "downloads": -1, "filename": "django-rest-passwordreset-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "e9ae5b163e799a807ef85b9d36728d80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200066, "upload_time": "2019-02-18T16:16:52", "upload_time_iso_8601": "2019-02-18T16:16:52.117814Z", "url": "https://files.pythonhosted.org/packages/b3/c1/d9120cc9e30bf2948fe5a7f5f3ec25efa0ba4c4c86bfb9f1471906ed7c0c/django-rest-passwordreset-1.0.0a1.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "7526b97a27c539b37198a9aa9f4917a6", "sha256": "c1ffe212d2eb35968e5221044d833e6ec4aea1fadc81c4125ce2b126cc83dc0b"}, "downloads": -1, "filename": "django-rest-passwordreset-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "7526b97a27c539b37198a9aa9f4917a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200236, "upload_time": "2019-03-25T06:55:11", "upload_time_iso_8601": "2019-03-25T06:55:11.606018Z", "url": "https://files.pythonhosted.org/packages/f5/be/b0393a401a1684190cb0ed568d1913ea98082d50b8955c6c04292046b763/django-rest-passwordreset-1.0.0a2.tar.gz", "yanked": false}], "1.0.0a3": [{"comment_text": "", "digests": {"md5": "5e32fdbe363755eb29dffbacbcdce8f2", "sha256": "e53ccd45ddeb6d5dee1d9db7d304cc9055ace26f3de945e9589e89c416b563a1"}, "downloads": -1, "filename": "django-rest-passwordreset-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "5e32fdbe363755eb29dffbacbcdce8f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200256, "upload_time": "2019-03-28T13:14:33", "upload_time_iso_8601": "2019-03-28T13:14:33.116242Z", "url": "https://files.pythonhosted.org/packages/2b/d9/e4d8fdd479ec64f917599333fd6836e46145c2e5e82d27c9d36f33b9ba27/django-rest-passwordreset-1.0.0a3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1dc00886b599de1e8efc146ce19c9e25", "sha256": "d1c8a97d5b4d35320bf2c6109f464500809705c5a4a4b182bbeeb3e57adf6e72"}, "downloads": -1, "filename": "django_rest_passwordreset-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1dc00886b599de1e8efc146ce19c9e25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24572, "upload_time": "2020-01-30T14:29:37", "upload_time_iso_8601": "2020-01-30T14:29:37.471106Z", "url": "https://files.pythonhosted.org/packages/ff/cd/658923805733fc1bf3caca415bca27247d8d92be4585a9ec342e266335e3/django_rest_passwordreset-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3a56a3d6cf90ae7ce51eb6a79d4f851", "sha256": "3c97b25d35fb1f05d5b87596eb0c0f7cfce39e1803c9f4045ec42d567b03c85f"}, "downloads": -1, "filename": "django-rest-passwordreset-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a3a56a3d6cf90ae7ce51eb6a79d4f851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207756, "upload_time": "2020-01-30T14:29:39", "upload_time_iso_8601": "2020-01-30T14:29:39.741426Z", "url": "https://files.pythonhosted.org/packages/22/f6/6012863f1bd45c8cb461fe7017774e0b5443a1ca6ff74556394c7230197d/django-rest-passwordreset-1.1.0.tar.gz", "yanked": false}], "1.1.0rc1": [{"comment_text": "", "digests": {"md5": "ac1676802446d22c3e7a4998fedf6202", "sha256": "4a0d745ff7a668dc01219d7b38c2fc234dbb039630fead62d7fcc48241842ee6"}, "downloads": -1, "filename": "django-rest-passwordreset-1.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "ac1676802446d22c3e7a4998fedf6202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201794, "upload_time": "2019-05-28T06:03:38", "upload_time_iso_8601": "2019-05-28T06:03:38.353940Z", "url": "https://files.pythonhosted.org/packages/db/be/e047a687825cee889d9cdbf50bf7315444f84c78d0a3bffde1cf61445b90/django-rest-passwordreset-1.1.0rc1.tar.gz", "yanked": false}], "1.1.0rc2": [{"comment_text": "", "digests": {"md5": "4209bccc8d1026f70a690ddad0cdce4b", "sha256": "0edb7ab5c73704ecfe7f8d8e02fccfc25e23675ec020a8c7e3c1cd7892744e00"}, "downloads": -1, "filename": "django_rest_passwordreset-1.1.0rc2-py3.6.egg", "has_sig": false, "md5_digest": "4209bccc8d1026f70a690ddad0cdce4b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 43634, "upload_time": "2019-08-09T05:56:20", "upload_time_iso_8601": "2019-08-09T05:56:20.188855Z", "url": "https://files.pythonhosted.org/packages/25/52/39037835d180d0a5f743d37bde3b1130707c1a61aaa3370c5c76b3512faf/django_rest_passwordreset-1.1.0rc2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0aa9845597299d071ecaa2d681d601e4", "sha256": "b06b6c42b39b5f85ffc4450b947a1d3ce30a6c3b35269aad047e6435e3f03474"}, "downloads": -1, "filename": "django-rest-passwordreset-1.1.0rc2.tar.gz", "has_sig": false, "md5_digest": "0aa9845597299d071ecaa2d681d601e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 202692, "upload_time": "2019-07-31T14:02:02", "upload_time_iso_8601": "2019-07-31T14:02:02.862779Z", "url": "https://files.pythonhosted.org/packages/05/93/03a242b0bf54be9c3f6823836446444454842f9d556f7809c12c5f3f8199/django-rest-passwordreset-1.1.0rc2.tar.gz", "yanked": false}], "1.1.0rc3": [{"comment_text": "", "digests": {"md5": "ab21fe3aee37eab13e46e7544990b6b6", "sha256": "fbf6d326a14c2080a9f44b70aaad780cd9d82489cef50d4dd7d7c32f5617bb03"}, "downloads": -1, "filename": "django-rest-passwordreset-1.1.0rc3.tar.gz", "has_sig": false, "md5_digest": "ab21fe3aee37eab13e46e7544990b6b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204242, "upload_time": "2019-08-09T05:56:24", "upload_time_iso_8601": "2019-08-09T05:56:24.157499Z", "url": "https://files.pythonhosted.org/packages/ac/fa/d6f265e4b77e59c747d858b86c4bad3a5a28c03ec5314e38c44ce8855b15/django-rest-passwordreset-1.1.0rc3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1dc00886b599de1e8efc146ce19c9e25", "sha256": "d1c8a97d5b4d35320bf2c6109f464500809705c5a4a4b182bbeeb3e57adf6e72"}, "downloads": -1, "filename": "django_rest_passwordreset-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1dc00886b599de1e8efc146ce19c9e25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24572, "upload_time": "2020-01-30T14:29:37", "upload_time_iso_8601": "2020-01-30T14:29:37.471106Z", "url": "https://files.pythonhosted.org/packages/ff/cd/658923805733fc1bf3caca415bca27247d8d92be4585a9ec342e266335e3/django_rest_passwordreset-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3a56a3d6cf90ae7ce51eb6a79d4f851", "sha256": "3c97b25d35fb1f05d5b87596eb0c0f7cfce39e1803c9f4045ec42d567b03c85f"}, "downloads": -1, "filename": "django-rest-passwordreset-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a3a56a3d6cf90ae7ce51eb6a79d4f851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 207756, "upload_time": "2020-01-30T14:29:39", "upload_time_iso_8601": "2020-01-30T14:29:39.741426Z", "url": "https://files.pythonhosted.org/packages/22/f6/6012863f1bd45c8cb461fe7017774e0b5443a1ca6ff74556394c7230197d/django-rest-passwordreset-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:01 2020"}