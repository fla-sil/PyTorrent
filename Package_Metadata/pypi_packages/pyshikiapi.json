{"info": {"author": "a68366", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pyshikiapi\nPython wrapper for shikimori API\n\n# Install\n`pip install pyshikiapi`\n\n# Usage\n```\nfrom pyshikiapi import API\n\napp_name = 'YOUR_APP_NAME'\nclient_id = 'YOUR_APP_CLIENT_ID'\nclient_secret = 'YOUR_APP_SECRET'\n\napi = API(app_name, client_id, client_secret)\nprint('Please visit the link and copy authorization code:', api.authorization_url)\ncode = input('The code: ')\napi.fetch_token(code)\n\n# Now you can use the api object to send requests\n```\n\nIf you want to save the token to use it later, pass the `token_update_callback` argument to API:\n```\ndef token_file_saver(token):  # A function which accepts 1 dict-like argument\n    with open('token.json', 'w') as f:\n        json.dump(token, f)\n\napi = API(app_name, client_id, client_secret, token_update_callback=token_file_saver)\n```\n\nNext time you start, load the token:\n```\nwith open('token.json') as f:\n    token = json.load(f)\napi = API(app_name, client_id, client_secret, token)\n```\n\n# Examples\n```\napi.animes.GET(page=2, limit=10)  # will send GET-request animes?page=2&limit=10\napi.animes(5).roles.GET()  # will send GET-request animes/5/roles\n\ncomment = {'body': 'hello', 'commentable_type': 'User', 'commentable_id': 4193}\napi.comments.POST(comment=comment, broadcast=False)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/a68366/pyshikiapi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyshikiapi", "package_url": "https://pypi.org/project/pyshikiapi/", "platform": "", "project_url": "https://pypi.org/project/pyshikiapi/", "project_urls": {"Homepage": "https://github.com/a68366/pyshikiapi"}, "release_url": "https://pypi.org/project/pyshikiapi/1.0.1/", "requires_dist": ["requests-oauthlib"], "requires_python": "", "summary": "Python wrapper for shikimori API", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyshikiapi</h1>\n<p>Python wrapper for shikimori API</p>\n<h1>Install</h1>\n<p><code>pip install pyshikiapi</code></p>\n<h1>Usage</h1>\n<pre><code>from pyshikiapi import API\n\napp_name = 'YOUR_APP_NAME'\nclient_id = 'YOUR_APP_CLIENT_ID'\nclient_secret = 'YOUR_APP_SECRET'\n\napi = API(app_name, client_id, client_secret)\nprint('Please visit the link and copy authorization code:', api.authorization_url)\ncode = input('The code: ')\napi.fetch_token(code)\n\n# Now you can use the api object to send requests\n</code></pre>\n<p>If you want to save the token to use it later, pass the <code>token_update_callback</code> argument to API:</p>\n<pre><code>def token_file_saver(token):  # A function which accepts 1 dict-like argument\n    with open('token.json', 'w') as f:\n        json.dump(token, f)\n\napi = API(app_name, client_id, client_secret, token_update_callback=token_file_saver)\n</code></pre>\n<p>Next time you start, load the token:</p>\n<pre><code>with open('token.json') as f:\n    token = json.load(f)\napi = API(app_name, client_id, client_secret, token)\n</code></pre>\n<h1>Examples</h1>\n<pre><code>api.animes.GET(page=2, limit=10)  # will send GET-request animes?page=2&amp;limit=10\napi.animes(5).roles.GET()  # will send GET-request animes/5/roles\n\ncomment = {'body': 'hello', 'commentable_type': 'User', 'commentable_id': 4193}\napi.comments.POST(comment=comment, broadcast=False)\n</code></pre>\n\n          </div>"}, "last_serial": 5497205, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8abdef56ccd40cba9ee119a377c67b25", "sha256": "c36638c4ccf6f268d8fe67cb8222a24e35f7d9dd78dcf0ff9098adb043d1104c"}, "downloads": -1, "filename": "pyshikiapi-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8abdef56ccd40cba9ee119a377c67b25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7720, "upload_time": "2019-06-29T20:37:01", "upload_time_iso_8601": "2019-06-29T20:37:01.753597Z", "url": "https://files.pythonhosted.org/packages/ba/08/1c74663a5cc518fb7352792d918878c3043b66db11f0c5f9ec6dae1cdd44/pyshikiapi-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a4511976050e2d6ec9f56346ac14c16", "sha256": "80fd24b85c82b1d95e355d4495543668aa8481c71822d613946f461e9f187cd5"}, "downloads": -1, "filename": "pyshikiapi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3a4511976050e2d6ec9f56346ac14c16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2906, "upload_time": "2019-06-29T20:37:42", "upload_time_iso_8601": "2019-06-29T20:37:42.279602Z", "url": "https://files.pythonhosted.org/packages/3e/9e/1ce1a99065616aeda879ce0e01809afc993d915bca9b1473f2e1af6206cf/pyshikiapi-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4bc36b764ce62eec7d3a5545f7cc3c4d", "sha256": "b81abf11388af0b0f18b648895cfedc15e3ef0413adbe1bc688844be9f43752c"}, "downloads": -1, "filename": "pyshikiapi-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4bc36b764ce62eec7d3a5545f7cc3c4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8089, "upload_time": "2019-07-07T13:33:21", "upload_time_iso_8601": "2019-07-07T13:33:21.031740Z", "url": "https://files.pythonhosted.org/packages/54/cc/0ae462f9450781acf262db3f8b1df71f364e0a78b540e9a9a594d8a6e10c/pyshikiapi-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "528b6dd602aae2a056c9554327efea54", "sha256": "ec998d1482a86a6964aa900bb8f01f6d90833eb1036d75ffdf2dd01d128dddd1"}, "downloads": -1, "filename": "pyshikiapi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "528b6dd602aae2a056c9554327efea54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3258, "upload_time": "2019-07-07T13:33:22", "upload_time_iso_8601": "2019-07-07T13:33:22.590269Z", "url": "https://files.pythonhosted.org/packages/49/fa/c67c0f4a5e92bca2c69b153c498aa9f82766cbcca04b9f7baed0af175e1e/pyshikiapi-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bc36b764ce62eec7d3a5545f7cc3c4d", "sha256": "b81abf11388af0b0f18b648895cfedc15e3ef0413adbe1bc688844be9f43752c"}, "downloads": -1, "filename": "pyshikiapi-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4bc36b764ce62eec7d3a5545f7cc3c4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8089, "upload_time": "2019-07-07T13:33:21", "upload_time_iso_8601": "2019-07-07T13:33:21.031740Z", "url": "https://files.pythonhosted.org/packages/54/cc/0ae462f9450781acf262db3f8b1df71f364e0a78b540e9a9a594d8a6e10c/pyshikiapi-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "528b6dd602aae2a056c9554327efea54", "sha256": "ec998d1482a86a6964aa900bb8f01f6d90833eb1036d75ffdf2dd01d128dddd1"}, "downloads": -1, "filename": "pyshikiapi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "528b6dd602aae2a056c9554327efea54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3258, "upload_time": "2019-07-07T13:33:22", "upload_time_iso_8601": "2019-07-07T13:33:22.590269Z", "url": "https://files.pythonhosted.org/packages/49/fa/c67c0f4a5e92bca2c69b153c498aa9f82766cbcca04b9f7baed0af175e1e/pyshikiapi-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:58 2020"}