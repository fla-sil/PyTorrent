{"info": {"author": "Daniel Farrell", "author_email": "dan@excitonlabs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization"], "description": "![](https://raw.githubusercontent.com/danieljfarrell/pvtrace/master/docs/logo.png)\n\n> Optical ray tracing for luminescent materials and spectral converter photovoltaic devices \n\n## Install\n\n    pip install pvtrace\n\nTutorials are in Jupyter notebook form so to view those\n\n    pip install jupyter\n\n### pyenv\n\nYou may want to use [pyenv](https://github.com/pyenv/pyenv) to create a clean virtual environment for pvtrace.\n\n    pyenv virtualenv 3.7.2 pvtrace-env\n    pyenv activate pvtrace-env\n    pip install pvtrace\n    # download the examples/hello_world.py from GitHub\n    python hello_world.py\n\n## Introduction\n\npvtrace is a statistical photon path tracer written in Python. It follows photons through a 3D scene and records their interactions with objects to build up statistical information about energy flow. This approach is particularly useful in photovoltaics and non-imaging optics where the goal is to design systems which efficiently transport light to target locations.\n\n## Documentation\n\nInteractive Jupyter notebooks are in [examples directory](https://github.com/danieljfarrell/pvtrace/tree/master/examples), download and take a look, although they can be viewed online.\n\nAPI documentation and some background at [https://pvtrace.readthedocs.io](https://pvtrace.readthedocs.io/)\n\n## Capabilities\n\npvtrace was originally written to characterise the performance of Luminescent Solar Concentrators (LSC) and takes a Monte-Carlo approach to ray-tracing. Each ray is independent and can interact with objects in the scene via reflection and refraction. Objects can have different optical properties: refractive index, absorption coefficient, emission spectrum and quantum yield.\n\nOne of the key features of pvtrace is the ability to simulate re-absorption of photons in luminescent materials. This requires following thousands of rays to build intensity profiles and spectra of incoming and outgoing photons because these process cannot be approximated in a continuous way.\n\npvtrace may also be useful to researches or designers interested in ray-optics simulations but will be slower at running these simulations compared to other software packages because it follows each ray individually.\n\n![](https://raw.githubusercontent.com/danieljfarrell/pvtrace/master/docs/example.png)\n    \nA minimal working example that traces a glass sphere\n\n```python\nimport time\nimport sys\nimport functools\nimport numpy as np\nfrom pvtrace import *\n\nworld = Node(\n    name=\"world (air)\",\n    geometry=Sphere(\n        radius=10.0,\n        material=Material(refractive_index=1.0),\n    )\n)\n\nsphere = Node(\n    name=\"sphere (glass)\",\n    geometry=Sphere(\n        radius=1.0,\n        material=Material(refractive_index=1.5),\n    ),\n    parent=world\n)\nsphere.location = (0, 0, 2)\n\nlight = Node(\n    name=\"Light (555nm)\",\n    light=Light(direction=functools.partial(cone, np.pi/8)),\n    parent=world\n)\n\nrenderer = MeshcatRenderer(wireframe=True, open_browser=True)\nscene = Scene(world)\nrenderer.render(scene)\nfor ray in scene.emit(100):\n    steps = photon_tracer.follow(scene, ray)\n    path, events = zip(*steps)\n    renderer.add_ray_path(path)\n    time.sleep(0.1)\n\n# Wait for Ctrl-C to terminate the script; keep the window open\nprint(\"Ctrl-C to close\")\nwhile True:\n    try:\n        time.sleep(.3)\n    except KeyboardInterrupt:\n        sys.exit()\n```\n\n## Architecture\n\n![](https://raw.githubusercontent.com/danieljfarrell/pvtrace/master/docs/pvtrace-design.png)\n\n*pvtrace* is designed in layers each with as limited scope as possible.\n\n<dl>\n  <dt>Scene</dt>\n  <dd>Graph data structure of node and the thing that is ray-traced.</dd>\n  \n  <dt>Node</dt>\n  <dd>Provides a coordinate system, can be nested inside one another, perform arbitrary rotation and translation transformations.</dd>\n  \n  <dt>Geometry</dt>\n  <dd>Attached to nodes to define different shapes (Sphere, Box, Cylinder, Mesh) and handles all ray intersections.</dd>\n  \n  <dt>Material</dt>\n  <dd>Attached to geometry objects to assign physical properties to shapes such as refractive index.</dd>\n  \n  <dt>Surface</dt>\n  <dd>Handles details of interaction between material surfaces and a customisation point for simulation of wavelength selective coatings.</dd>\n  \n  <dt>Components</dt>\n  <dd>Specifies optical properties of the geometries volume, absorption coefficient, scattering coefficient, quantum yield, emission spectrum.</dd>\n</dl>\n\n## Dependancies\n\nBasic environment requires the following packages which will be installed with `pip` automatically\n\n* python >= 3.7.2\n* numpy\n* trimesh[easy]\n* meshcat >= 0.0.16\n* anytree", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/danieljfarrell/pvtrace/archive/v2.1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danieljfarrell/pvtrace", "keywords": "optics,simulation,ray tracing,photovoltaics,solar,energy,nonimaging,luminescence,spectroscopy", "license": "", "maintainer": "", "maintainer_email": "", "name": "pvtrace", "package_url": "https://pypi.org/project/pvtrace/", "platform": "", "project_url": "https://pypi.org/project/pvtrace/", "project_urls": {"Download": "https://github.com/danieljfarrell/pvtrace/archive/v2.1.2.tar.gz", "Homepage": "https://github.com/danieljfarrell/pvtrace"}, "release_url": "https://pypi.org/project/pvtrace/2.1.2/", "requires_dist": null, "requires_python": ">=3.7.2", "summary": "Optical ray tracing for luminescent materials and spectral converter photovoltaic devices.", "version": "2.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/854f6b3b349f5fadd512ac52c45fbdeec4b90d0d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64616e69656c6a66617272656c6c2f707674726163652f6d61737465722f646f63732f6c6f676f2e706e67\"></p>\n<blockquote>\n<p>Optical ray tracing for luminescent materials and spectral converter photovoltaic devices</p>\n</blockquote>\n<h2>Install</h2>\n<pre><code>pip install pvtrace\n</code></pre>\n<p>Tutorials are in Jupyter notebook form so to view those</p>\n<pre><code>pip install jupyter\n</code></pre>\n<h3>pyenv</h3>\n<p>You may want to use <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a> to create a clean virtual environment for pvtrace.</p>\n<pre><code>pyenv virtualenv 3.7.2 pvtrace-env\npyenv activate pvtrace-env\npip install pvtrace\n# download the examples/hello_world.py from GitHub\npython hello_world.py\n</code></pre>\n<h2>Introduction</h2>\n<p>pvtrace is a statistical photon path tracer written in Python. It follows photons through a 3D scene and records their interactions with objects to build up statistical information about energy flow. This approach is particularly useful in photovoltaics and non-imaging optics where the goal is to design systems which efficiently transport light to target locations.</p>\n<h2>Documentation</h2>\n<p>Interactive Jupyter notebooks are in <a href=\"https://github.com/danieljfarrell/pvtrace/tree/master/examples\" rel=\"nofollow\">examples directory</a>, download and take a look, although they can be viewed online.</p>\n<p>API documentation and some background at <a href=\"https://pvtrace.readthedocs.io/\" rel=\"nofollow\">https://pvtrace.readthedocs.io</a></p>\n<h2>Capabilities</h2>\n<p>pvtrace was originally written to characterise the performance of Luminescent Solar Concentrators (LSC) and takes a Monte-Carlo approach to ray-tracing. Each ray is independent and can interact with objects in the scene via reflection and refraction. Objects can have different optical properties: refractive index, absorption coefficient, emission spectrum and quantum yield.</p>\n<p>One of the key features of pvtrace is the ability to simulate re-absorption of photons in luminescent materials. This requires following thousands of rays to build intensity profiles and spectra of incoming and outgoing photons because these process cannot be approximated in a continuous way.</p>\n<p>pvtrace may also be useful to researches or designers interested in ray-optics simulations but will be slower at running these simulations compared to other software packages because it follows each ray individually.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c6fb22919fbe903678715cc91b04e8e0b17717b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64616e69656c6a66617272656c6c2f707674726163652f6d61737465722f646f63732f6578616d706c652e706e67\"></p>\n<p>A minimal working example that traces a glass sphere</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pvtrace</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"world (air)\"</span><span class=\"p\">,</span>\n    <span class=\"n\">geometry</span><span class=\"o\">=</span><span class=\"n\">Sphere</span><span class=\"p\">(</span>\n        <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"n\">refractive_index</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"sphere (glass)\"</span><span class=\"p\">,</span>\n    <span class=\"n\">geometry</span><span class=\"o\">=</span><span class=\"n\">Sphere</span><span class=\"p\">(</span>\n        <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"n\">refractive_index</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">),</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">world</span>\n<span class=\"p\">)</span>\n<span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">light</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Light (555nm)\"</span><span class=\"p\">,</span>\n    <span class=\"n\">light</span><span class=\"o\">=</span><span class=\"n\">Light</span><span class=\"p\">(</span><span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">cone</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">)),</span>\n    <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">world</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">renderer</span> <span class=\"o\">=</span> <span class=\"n\">MeshcatRenderer</span><span class=\"p\">(</span><span class=\"n\">wireframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">open_browser</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">Scene</span><span class=\"p\">(</span><span class=\"n\">world</span><span class=\"p\">)</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">ray</span> <span class=\"ow\">in</span> <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"n\">steps</span> <span class=\"o\">=</span> <span class=\"n\">photon_tracer</span><span class=\"o\">.</span><span class=\"n\">follow</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">ray</span><span class=\"p\">)</span>\n    <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">steps</span><span class=\"p\">)</span>\n    <span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">add_ray_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Wait for Ctrl-C to terminate the script; keep the window open</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Ctrl-C to close\"</span><span class=\"p\">)</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">()</span>\n</pre>\n<h2>Architecture</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92bcac196981d7f6a4e922a0cb9c80be42379223/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64616e69656c6a66617272656c6c2f707674726163652f6d61737465722f646f63732f707674726163652d64657369676e2e706e67\"></p>\n<p><em>pvtrace</em> is designed in layers each with as limited scope as possible.</p>\n<dl>\n  <dt>Scene</dt>\n  <dd>Graph data structure of node and the thing that is ray-traced.</dd>\n  <dt>Node</dt>\n  <dd>Provides a coordinate system, can be nested inside one another, perform arbitrary rotation and translation transformations.</dd>\n  <dt>Geometry</dt>\n  <dd>Attached to nodes to define different shapes (Sphere, Box, Cylinder, Mesh) and handles all ray intersections.</dd>\n  <dt>Material</dt>\n  <dd>Attached to geometry objects to assign physical properties to shapes such as refractive index.</dd>\n  <dt>Surface</dt>\n  <dd>Handles details of interaction between material surfaces and a customisation point for simulation of wavelength selective coatings.</dd>\n  <dt>Components</dt>\n  <dd>Specifies optical properties of the geometries volume, absorption coefficient, scattering coefficient, quantum yield, emission spectrum.</dd>\n</dl>\n<h2>Dependancies</h2>\n<p>Basic environment requires the following packages which will be installed with <code>pip</code> automatically</p>\n<ul>\n<li>python &gt;= 3.7.2</li>\n<li>numpy</li>\n<li>trimesh[easy]</li>\n<li>meshcat &gt;= 0.0.16</li>\n<li>anytree</li>\n</ul>\n\n          </div>"}, "last_serial": 6734111, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "b8a2210b9c3637023507fedea43b0708", "sha256": "d3b51cacf5daebca24b5aa1c56473f20351ee8489486f4448e01cbfddc412501"}, "downloads": -1, "filename": "pvtrace-2.0.1.tar.gz", "has_sig": false, "md5_digest": "b8a2210b9c3637023507fedea43b0708", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 49838, "upload_time": "2019-04-18T18:45:41", "upload_time_iso_8601": "2019-04-18T18:45:41.197559Z", "url": "https://files.pythonhosted.org/packages/f3/ea/b20e26feda259bd58b7c8ea4f46b5816d58f5fbfaee0d731c9cd4a1a4a17/pvtrace-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "471e5f918ad8b90828fc2d2b0f884594", "sha256": "8971ff8c58d68fe60cbdbbed3e56809b5aefc55cef0f743650f3dc076f0b3c2b"}, "downloads": -1, "filename": "pvtrace-2.0.2.tar.gz", "has_sig": false, "md5_digest": "471e5f918ad8b90828fc2d2b0f884594", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 52934, "upload_time": "2019-04-22T08:54:14", "upload_time_iso_8601": "2019-04-22T08:54:14.208398Z", "url": "https://files.pythonhosted.org/packages/17/cc/b06b29c0db1ce0951ac3193aa7e2d331e9954783a399d4b1bc234effcdb7/pvtrace-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "4f3d992e0cb5d21bbe0eae63b98960ce", "sha256": "9b634302acfe84eb2e24d14268f838f2145953ab929668b95ad7505516ded7e0"}, "downloads": -1, "filename": "pvtrace-2.0.3.tar.gz", "has_sig": false, "md5_digest": "4f3d992e0cb5d21bbe0eae63b98960ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 54649, "upload_time": "2019-05-27T18:29:19", "upload_time_iso_8601": "2019-05-27T18:29:19.047483Z", "url": "https://files.pythonhosted.org/packages/18/f6/7dcf5d0ac3b1bb2ed0d93b19476d8d054ccf944d8328bae369d5d687d55b/pvtrace-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "1a57a1061415dd56f2d902293d62b125", "sha256": "f2505908913e49731565beaf30c9697ca09ea09b30db1c9e4519d5d2a18a76f9"}, "downloads": -1, "filename": "pvtrace-2.0.4.tar.gz", "has_sig": false, "md5_digest": "1a57a1061415dd56f2d902293d62b125", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 55481, "upload_time": "2019-06-29T14:59:06", "upload_time_iso_8601": "2019-06-29T14:59:06.905106Z", "url": "https://files.pythonhosted.org/packages/47/d0/ab311e7bf2fbb817c585cb8236188303ca36edba306248d2bec42732572e/pvtrace-2.0.4.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "e5eab040fbd970426933e4c23bf23b1e", "sha256": "7b5d4843f70bec07b2515610e9d7e38892456fbf2380f55744694b1ae4db61bc"}, "downloads": -1, "filename": "pvtrace-2.1.0.tar.gz", "has_sig": false, "md5_digest": "e5eab040fbd970426933e4c23bf23b1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 54310, "upload_time": "2020-03-02T01:29:45", "upload_time_iso_8601": "2020-03-02T01:29:45.451188Z", "url": "https://files.pythonhosted.org/packages/3e/6d/cbb9221630dcab3ece5b88bf2059e01b6b03f29dfb0feb5a683cb6bb0446/pvtrace-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "8fcc732f72019bcab4bf31b0feed7484", "sha256": "5adb7a03f14067ce6ba2d07cbc4c2ee43dc7fb50329db61242f6676a46a7bd2c"}, "downloads": -1, "filename": "pvtrace-2.1.1.tar.gz", "has_sig": false, "md5_digest": "8fcc732f72019bcab4bf31b0feed7484", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 54676, "upload_time": "2020-03-02T12:27:42", "upload_time_iso_8601": "2020-03-02T12:27:42.243425Z", "url": "https://files.pythonhosted.org/packages/29/92/cb9201030e224a53b02e1fe1efd66b05d6af1821f2e0ddc2b833674d81e6/pvtrace-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "3c00aea2b211d252afd05b07c49bc04f", "sha256": "e27d9c92114877e7ae0a12ceaa32a481637479d644fb66fcb6b325128262bb38"}, "downloads": -1, "filename": "pvtrace-2.1.2.tar.gz", "has_sig": false, "md5_digest": "3c00aea2b211d252afd05b07c49bc04f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 54682, "upload_time": "2020-03-02T15:22:37", "upload_time_iso_8601": "2020-03-02T15:22:37.640089Z", "url": "https://files.pythonhosted.org/packages/95/24/df802177fcc6ebcda9ffbd401493695fc64732da5f40e2ad120bc7f30f7d/pvtrace-2.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c00aea2b211d252afd05b07c49bc04f", "sha256": "e27d9c92114877e7ae0a12ceaa32a481637479d644fb66fcb6b325128262bb38"}, "downloads": -1, "filename": "pvtrace-2.1.2.tar.gz", "has_sig": false, "md5_digest": "3c00aea2b211d252afd05b07c49bc04f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.2", "size": 54682, "upload_time": "2020-03-02T15:22:37", "upload_time_iso_8601": "2020-03-02T15:22:37.640089Z", "url": "https://files.pythonhosted.org/packages/95/24/df802177fcc6ebcda9ffbd401493695fc64732da5f40e2ad120bc7f30f7d/pvtrace-2.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:55 2020"}