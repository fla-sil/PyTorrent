{"info": {"author": "Leopold Talirz", "author_email": "leopold.talirz@epfl.ch", "bugtrack_url": null, "classifiers": ["Framework :: AiiDA", "Programming Language :: Python"], "description": "[![Build Status](https://travis-ci.org/ltalirz/aiida-zeopp.svg?branch=master)](https://travis-ci.org/ltalirz/aiida-zeopp)\n[![Coverage Status](https://coveralls.io/repos/github/ltalirz/aiida-zeopp/badge.svg?branch=master)](https://coveralls.io/github/ltalirz/aiida-zeopp?branch=master)\n[![Docs status](https://readthedocs.org/projects/aiida-zeopp/badge)](http://aiida-zeopp.readthedocs.io/)\n[![PyPI version](https://badge.fury.io/py/aiida-zeopp.svg)](https://badge.fury.io/py/aiida-zeopp)\n\n# aiida-zeopp\n\nAiiDA plugin for [Zeo++](http://www.zeoplusplus.org/)\n\n## Installation\n\n```shell\npip install aiida-zeopp\nreentry scan\nverdi quicksetup  # better to set up a new profile\nverdi calculation plugins  # should now show your calclulation plugins\n```\n\n## Features\n\n * Add input structure in CIF format\n  ```python\n  CifData = DataFactory('cif')\n  inputs['structure'] = CifData(file='/path/to/file')\n  ```\n * Specify command line options using a python dictionary and `NetworkParameters`\n  ```python\n  d = { 'sa': [1.82, 1.82, 1000], 'volpo': [1.82, 1.82, 1000], 'chan': 1.2 }\n  NetworkParameters = DataFactory('zeopp.parameters')\n  inputs['parameters'] = NetworkParameters(dict=d)\n  ```\n * `NetworkParameters` validates the command line options using [voluptuous](https://github.com/alecthomas/voluptuous).\n   Find out about supported options:\n  ```python\n  NetworkParameters = DataFactory('zeopp.parameters')\n  print(NetworkParameters.schema)\n  ```\n * Add alternative atomic radii file\n  ```python\n  SinglefileData = DataFactory('singlefile')\n  inputs['atomic_radii'] = SinglefileData(file='/path/to/file')\n  ```\n\n## Examples\n\nSee `examples` folder for complete examples of setting up a calculation.\n\n```shell\nverdi daemon start         # make sure the daemon is running\ncd examples\nverdi run examples/example_01.py  # runs test calculatio\n```\n\n## Tests\n\n`aiida_zeopp` comes with a number of tests that are run at every commit.\n\nThe following will discover and run all unit tests:\n```shell\npip install -e .[testing]\npytest\n```\n\n## Analyzing output\n\n```shell\n$ verdi process show 88\n-----------  ------------------------------------------------------------------------------\ntype         NetworkCalculation\npk           88\nuuid         deb63433-4dcd-4ca1-9165-cb97877496b3\nlabel        aiida_zeopp example calculation\ndescription  Converts .cif to .cssr format, computes surface area, pore volume and channels\nctime        2018-11-19 09:12:55.259776+00:00\nmtime        2018-11-19 09:15:15.708275+00:00\ncomputer     [1] localhost\ncode         network\n-----------  ------------------------------------------------------------------------------\n##### INPUTS:\nLink label      PK  Type\n------------  ----  -----------------\nparameters      87  NetworkParameters\nstructure       86  CifData\n##### OUTPUTS:\nLink label           PK  Type\n-----------------  ----  --------------\nremote_folder        89  RemoteData\nretrieved            90  FolderData\nstructure_cssr       91  SinglefileData\noutput_parameters    92  ParameterData\n\n$ verdi calcjob res 88\n{\n  \"ASA_A^2\": 3532.09,\n  \"ASA_m^2/cm^3\": 1932.13,\n  \"ASA_m^2/g\": 2197.86,\n  \"Channel_surface_area_A^2\": 3532.09,\n  \"Channels\": {\n    \"Dimensionalities\": [\n      3\n    ],\n    \"Largest_free_spheres\": [\n      6.74621\n    ],\n    \"Largest_included_free_spheres\": [\n      13.1994\n    ],\n    \"Largest_included_spheres\": [\n      13.1994\n    ]\n  },\n  \"Density\": 0.879097,\n  \"Input_chan\": 1.2,\n  \"Input_cssr\": true,\n  \"Input_sa\": [\n    1.82,\n    1.82,\n    1000\n  ],\n  \"Input_structure_filename\": \"HKUST-1.cif\",\n  \"Input_volpo\": [\n    1.82,\n    1.82,\n    1000\n  ],\n  \"NASA_A^2\": 0.0,\n  \"NASA_m^2/cm^3\": 0.0,\n  \"NASA_m^2/g\": 0.0,\n  \"Number_of_channels\": 1,\n  \"Number_of_pockets\": 0,\n  \"POAV_A^3\": 9049.01,\n  \"POAV_Volume_fraction\": 0.495,\n  \"POAV_cm^3/g\": 0.563078,\n  \"PONAV_A^3\": 0.0,\n  \"PONAV_Volume_fraction\": 0.0,\n  \"PONAV_cm^3/g\": 0.0,\n  \"Pocket_surface_area_A^2\": 0.0,\n  \"Unitcell_volume\": 18280.8\n}\n\n$ verdi calcjob outputls 88\n_scheduler-stderr.txt\n_scheduler-stdout.txt\nout.chan\nout.cssr\nout.sa\nout.volpo\n\n$ verdi calcjob outputcat 88 -p out.sa\n@ out.sa Unitcell_volume: 18280.8   Density: 0.879097   ASA_A^2: 3532.09 ASA_m^2/cm^3: 1932.13 ASA_m^2/g: 2197.86 NASA_A^2: 0 NASA_m^2/cm^3: 0 NASA_m^2/g: 0\nNumber_of_channels: 1 Channel_surface_area_A^2: 3532.09\nNumber_of_pockets: 0 Pocket_surface_area_A^2:\n```\n\n## License\n\nMIT\n\n## Contact\nleopold.talirz@gmail.com\n\n\n## Acknowledgements\nThis work is supported by:\n* the [MARVEL National Centre for Competency in Research](<http://nccr-marvel.ch>) funded by the [Swiss National Science Foundation](<http://www.snf.ch/en>);\n* the [swissuniversities P-5 project \"Materials Cloud\"](<https://www.materialscloud.org/swissuniversities>).\n\n<img src=\"miscellaneous/logos/MARVEL.png\" alt=\"MARVEL\" style=\"padding:10px;\" width=\"150\"/>\n<img src=\"miscellaneous/logos/swissuniversities.png\" alt=\"swissuniversities\" style=\"padding:10px;\" width=\"250\"/>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ltalirz/aiida-zeopp", "keywords": "", "license": "Creative Commons", "maintainer": "", "maintainer_email": "", "name": "aiida-zeopp", "package_url": "https://pypi.org/project/aiida-zeopp/", "platform": "", "project_url": "https://pypi.org/project/aiida-zeopp/", "project_urls": {"Homepage": "https://github.com/ltalirz/aiida-zeopp"}, "release_url": "https://pypi.org/project/aiida-zeopp/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "AiiDA plugin for zeo++", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/ltalirz/aiida-zeopp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4dac791433f0a563e111bb2065a748f9ca2fb66c/68747470733a2f2f7472617669732d63692e6f72672f6c74616c69727a2f61696964612d7a656f70702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/ltalirz/aiida-zeopp?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7826e8f3fdb69f30bdf16e922c0d46ce08382fe/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c74616c69727a2f61696964612d7a656f70702f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://aiida-zeopp.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Docs status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6978f3bcdaee341b244a44bfb5948f8a4b4dc59/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696964612d7a656f70702f6261646765\"></a>\n<a href=\"https://badge.fury.io/py/aiida-zeopp\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12846abb64d8642694a83d87cc5bf2086b0faae5/68747470733a2f2f62616467652e667572792e696f2f70792f61696964612d7a656f70702e737667\"></a></p>\n<h1>aiida-zeopp</h1>\n<p>AiiDA plugin for <a href=\"http://www.zeoplusplus.org/\" rel=\"nofollow\">Zeo++</a></p>\n<h2>Installation</h2>\n<pre>pip install aiida-zeopp\nreentry scan\nverdi quicksetup  <span class=\"c1\"># better to set up a new profile</span>\nverdi calculation plugins  <span class=\"c1\"># should now show your calclulation plugins</span>\n</pre>\n<h2>Features</h2>\n<ul>\n<li>Add input structure in CIF format</li>\n</ul>\n<pre><span class=\"n\">CifData</span> <span class=\"o\">=</span> <span class=\"n\">DataFactory</span><span class=\"p\">(</span><span class=\"s1\">'cif'</span><span class=\"p\">)</span>\n<span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s1\">'structure'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">CifData</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/file'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Specify command line options using a python dictionary and <code>NetworkParameters</code></li>\n</ul>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'sa'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.82</span><span class=\"p\">,</span> <span class=\"mf\">1.82</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">],</span> <span class=\"s1\">'volpo'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.82</span><span class=\"p\">,</span> <span class=\"mf\">1.82</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">],</span> <span class=\"s1\">'chan'</span><span class=\"p\">:</span> <span class=\"mf\">1.2</span> <span class=\"p\">}</span>\n<span class=\"n\">NetworkParameters</span> <span class=\"o\">=</span> <span class=\"n\">DataFactory</span><span class=\"p\">(</span><span class=\"s1\">'zeopp.parameters'</span><span class=\"p\">)</span>\n<span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s1\">'parameters'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">NetworkParameters</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"o\">=</span><span class=\"n\">d</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>NetworkParameters</code> validates the command line options using <a href=\"https://github.com/alecthomas/voluptuous\" rel=\"nofollow\">voluptuous</a>.\nFind out about supported options:</li>\n</ul>\n<pre><span class=\"n\">NetworkParameters</span> <span class=\"o\">=</span> <span class=\"n\">DataFactory</span><span class=\"p\">(</span><span class=\"s1\">'zeopp.parameters'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">NetworkParameters</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Add alternative atomic radii file</li>\n</ul>\n<pre><span class=\"n\">SinglefileData</span> <span class=\"o\">=</span> <span class=\"n\">DataFactory</span><span class=\"p\">(</span><span class=\"s1\">'singlefile'</span><span class=\"p\">)</span>\n<span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s1\">'atomic_radii'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">SinglefileData</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/file'</span><span class=\"p\">)</span>\n</pre>\n<h2>Examples</h2>\n<p>See <code>examples</code> folder for complete examples of setting up a calculation.</p>\n<pre>verdi daemon start         <span class=\"c1\"># make sure the daemon is running</span>\n<span class=\"nb\">cd</span> examples\nverdi run examples/example_01.py  <span class=\"c1\"># runs test calculatio</span>\n</pre>\n<h2>Tests</h2>\n<p><code>aiida_zeopp</code> comes with a number of tests that are run at every commit.</p>\n<p>The following will discover and run all unit tests:</p>\n<pre>pip install -e .<span class=\"o\">[</span>testing<span class=\"o\">]</span>\npytest\n</pre>\n<h2>Analyzing output</h2>\n<pre>$ verdi process show <span class=\"m\">88</span>\n-----------  ------------------------------------------------------------------------------\n<span class=\"nb\">type</span>         NetworkCalculation\npk           <span class=\"m\">88</span>\nuuid         deb63433-4dcd-4ca1-9165-cb97877496b3\nlabel        aiida_zeopp example calculation\ndescription  Converts .cif to .cssr format, computes surface area, pore volume and channels\nctime        <span class=\"m\">2018</span>-11-19 <span class=\"m\">09</span>:12:55.259776+00:00\nmtime        <span class=\"m\">2018</span>-11-19 <span class=\"m\">09</span>:15:15.708275+00:00\ncomputer     <span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span> localhost\ncode         network\n-----------  ------------------------------------------------------------------------------\n<span class=\"c1\">##### INPUTS:</span>\nLink label      PK  Type\n------------  ----  -----------------\nparameters      <span class=\"m\">87</span>  NetworkParameters\nstructure       <span class=\"m\">86</span>  CifData\n<span class=\"c1\">##### OUTPUTS:</span>\nLink label           PK  Type\n-----------------  ----  --------------\nremote_folder        <span class=\"m\">89</span>  RemoteData\nretrieved            <span class=\"m\">90</span>  FolderData\nstructure_cssr       <span class=\"m\">91</span>  SinglefileData\noutput_parameters    <span class=\"m\">92</span>  ParameterData\n\n$ verdi calcjob res <span class=\"m\">88</span>\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"ASA_A^2\"</span>: <span class=\"m\">3532</span>.09,\n  <span class=\"s2\">\"ASA_m^2/cm^3\"</span>: <span class=\"m\">1932</span>.13,\n  <span class=\"s2\">\"ASA_m^2/g\"</span>: <span class=\"m\">2197</span>.86,\n  <span class=\"s2\">\"Channel_surface_area_A^2\"</span>: <span class=\"m\">3532</span>.09,\n  <span class=\"s2\">\"Channels\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"Dimensionalities\"</span>: <span class=\"o\">[</span>\n      <span class=\"m\">3</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"Largest_free_spheres\"</span>: <span class=\"o\">[</span>\n      <span class=\"m\">6</span>.74621\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"Largest_included_free_spheres\"</span>: <span class=\"o\">[</span>\n      <span class=\"m\">13</span>.1994\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"Largest_included_spheres\"</span>: <span class=\"o\">[</span>\n      <span class=\"m\">13</span>.1994\n    <span class=\"o\">]</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"Density\"</span>: <span class=\"m\">0</span>.879097,\n  <span class=\"s2\">\"Input_chan\"</span>: <span class=\"m\">1</span>.2,\n  <span class=\"s2\">\"Input_cssr\"</span>: true,\n  <span class=\"s2\">\"Input_sa\"</span>: <span class=\"o\">[</span>\n    <span class=\"m\">1</span>.82,\n    <span class=\"m\">1</span>.82,\n    <span class=\"m\">1000</span>\n  <span class=\"o\">]</span>,\n  <span class=\"s2\">\"Input_structure_filename\"</span>: <span class=\"s2\">\"HKUST-1.cif\"</span>,\n  <span class=\"s2\">\"Input_volpo\"</span>: <span class=\"o\">[</span>\n    <span class=\"m\">1</span>.82,\n    <span class=\"m\">1</span>.82,\n    <span class=\"m\">1000</span>\n  <span class=\"o\">]</span>,\n  <span class=\"s2\">\"NASA_A^2\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"NASA_m^2/cm^3\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"NASA_m^2/g\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"Number_of_channels\"</span>: <span class=\"m\">1</span>,\n  <span class=\"s2\">\"Number_of_pockets\"</span>: <span class=\"m\">0</span>,\n  <span class=\"s2\">\"POAV_A^3\"</span>: <span class=\"m\">9049</span>.01,\n  <span class=\"s2\">\"POAV_Volume_fraction\"</span>: <span class=\"m\">0</span>.495,\n  <span class=\"s2\">\"POAV_cm^3/g\"</span>: <span class=\"m\">0</span>.563078,\n  <span class=\"s2\">\"PONAV_A^3\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"PONAV_Volume_fraction\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"PONAV_cm^3/g\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"Pocket_surface_area_A^2\"</span>: <span class=\"m\">0</span>.0,\n  <span class=\"s2\">\"Unitcell_volume\"</span>: <span class=\"m\">18280</span>.8\n<span class=\"o\">}</span>\n\n$ verdi calcjob outputls <span class=\"m\">88</span>\n_scheduler-stderr.txt\n_scheduler-stdout.txt\nout.chan\nout.cssr\nout.sa\nout.volpo\n\n$ verdi calcjob outputcat <span class=\"m\">88</span> -p out.sa\n@ out.sa Unitcell_volume: <span class=\"m\">18280</span>.8   Density: <span class=\"m\">0</span>.879097   ASA_A^2: <span class=\"m\">3532</span>.09 ASA_m^2/cm^3: <span class=\"m\">1932</span>.13 ASA_m^2/g: <span class=\"m\">2197</span>.86 NASA_A^2: <span class=\"m\">0</span> NASA_m^2/cm^3: <span class=\"m\">0</span> NASA_m^2/g: <span class=\"m\">0</span>\nNumber_of_channels: <span class=\"m\">1</span> Channel_surface_area_A^2: <span class=\"m\">3532</span>.09\nNumber_of_pockets: <span class=\"m\">0</span> Pocket_surface_area_A^2:\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Contact</h2>\n<p><a href=\"mailto:leopold.talirz@gmail.com\">leopold.talirz@gmail.com</a></p>\n<h2>Acknowledgements</h2>\n<p>This work is supported by:</p>\n<ul>\n<li>the <a href=\"http://nccr-marvel.ch\" rel=\"nofollow\">MARVEL National Centre for Competency in Research</a> funded by the <a href=\"http://www.snf.ch/en\" rel=\"nofollow\">Swiss National Science Foundation</a>;</li>\n<li>the <a href=\"https://www.materialscloud.org/swissuniversities\" rel=\"nofollow\">swissuniversities P-5 project \"Materials Cloud\"</a>.</li>\n</ul>\n<img alt=\"MARVEL\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b6c0eca0be05ecff3231a07abda829ac49906be/6d697363656c6c616e656f75732f6c6f676f732f4d415256454c2e706e67\" width=\"150\">\n<img alt=\"swissuniversities\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a44e5c2a73c92626051e048796c6d4ff20a68e87/6d697363656c6c616e656f75732f6c6f676f732f7377697373756e697665727369746965732e706e67\" width=\"250\">\n\n          </div>"}, "last_serial": 6618033, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "167667a3b5cd7e418ae4ca6f216a30da", "sha256": "6a66e2603c7d704ba80530264524cfd5aec6580c298efce346bde27c083038ee"}, "downloads": -1, "filename": "aiida_zeopp-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "167667a3b5cd7e418ae4ca6f216a30da", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15009, "upload_time": "2018-05-02T11:25:47", "upload_time_iso_8601": "2018-05-02T11:25:47.553084Z", "url": "https://files.pythonhosted.org/packages/aa/75/5e0389ce4bef8668f1d13f0ea4a82d4f441eef6cc230069487ee7d43d9a0/aiida_zeopp-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26b0a432b69b4540d0ce55c242998d18", "sha256": "dcb66e5c12d7a882c0730de8832d3ba5de57790214f62a80b2ea15aef290d066"}, "downloads": -1, "filename": "aiida-zeopp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "26b0a432b69b4540d0ce55c242998d18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10738, "upload_time": "2018-05-02T11:25:48", "upload_time_iso_8601": "2018-05-02T11:25:48.974588Z", "url": "https://files.pythonhosted.org/packages/c8/6b/0fd20141dff44af53d68b36fbd101d2e472e74445dc24cf051631929a0d8/aiida-zeopp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "aa4d4179e719f93b542ccc65347d535a", "sha256": "ace9b3e0d9857b520a13856105be15663aa9c04e6bdfde550ebf477ec7fd1eb4"}, "downloads": -1, "filename": "aiida_zeopp-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "aa4d4179e719f93b542ccc65347d535a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15762, "upload_time": "2018-06-06T21:22:27", "upload_time_iso_8601": "2018-06-06T21:22:27.989379Z", "url": "https://files.pythonhosted.org/packages/2e/da/2bc7c533f6dcda56676cdaf1a0411d31a436a1c51a892645cbe81af2e873/aiida_zeopp-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfa5ebdecfc30422cf111098217a002e", "sha256": "b2323f0e326423370b9258e086e8ea1bdd43b3420b4031b5ad270b0ce8d849db"}, "downloads": -1, "filename": "aiida-zeopp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bfa5ebdecfc30422cf111098217a002e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11242, "upload_time": "2018-06-06T21:22:29", "upload_time_iso_8601": "2018-06-06T21:22:29.446072Z", "url": "https://files.pythonhosted.org/packages/17/ec/8cd5f2dd583c3b78a574087d5ffb23335c1f1cd3f519c896d0293784ca67/aiida-zeopp-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f1576f2efea549384f8ddba6afe4e7c9", "sha256": "e426a39137e87dc8c5e301f187a9c9ccb06f83cb5b7b60693570878bc6c0d389"}, "downloads": -1, "filename": "aiida_zeopp-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f1576f2efea549384f8ddba6afe4e7c9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21491, "upload_time": "2018-11-19T11:09:38", "upload_time_iso_8601": "2018-11-19T11:09:38.193503Z", "url": "https://files.pythonhosted.org/packages/72/63/97ed7dc99650a683ca65cbb251ef751ed542afb63bdf5fc88d0801415f0e/aiida_zeopp-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75dd04041b301825df23ab607bff5b63", "sha256": "456cba1313b86026155318deac0d55dba9d1cc8e58a84287c886e53d8cb68953"}, "downloads": -1, "filename": "aiida-zeopp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "75dd04041b301825df23ab607bff5b63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13516, "upload_time": "2018-11-19T11:09:39", "upload_time_iso_8601": "2018-11-19T11:09:39.967608Z", "url": "https://files.pythonhosted.org/packages/81/36/a2086e3f7e45e05fb90c3e02e0a317f683eaaa5c20b93304b2732d8d3ff6/aiida-zeopp-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f76a994d1e52e9a45db22c1516b2e0a4", "sha256": "8378912546d4fbd6e130bedd3ac46914ae97bf3fdb456418f554b35b27d3dc1e"}, "downloads": -1, "filename": "aiida_zeopp-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f76a994d1e52e9a45db22c1516b2e0a4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21638, "upload_time": "2019-04-26T12:50:34", "upload_time_iso_8601": "2019-04-26T12:50:34.778798Z", "url": "https://files.pythonhosted.org/packages/bc/a1/fb927c91faed0fe5fec28a71365b2319c9bad1280d203c5d41434701c1c3/aiida_zeopp-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6e0fbb915722a2fdb95f7e6c5decc97", "sha256": "adb7e0ebd67d3236a52bf72c49987762a69dde25b043e0f328bd7e16ebd3f09c"}, "downloads": -1, "filename": "aiida-zeopp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f6e0fbb915722a2fdb95f7e6c5decc97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15115, "upload_time": "2019-04-26T12:50:37", "upload_time_iso_8601": "2019-04-26T12:50:37.890965Z", "url": "https://files.pythonhosted.org/packages/ab/49/d679adaeab3de69670b79b3e147e48566b652093a27e6bd4e31096a86d3b/aiida-zeopp-0.2.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "edf607ff82a18bd28ec5005ddfad88a3", "sha256": "f57c50b57a9021741cd46e37811683b855f715fb03231f5bea3d341d9a519d15"}, "downloads": -1, "filename": "aiida-zeopp-1.0.0.tar.gz", "has_sig": false, "md5_digest": "edf607ff82a18bd28ec5005ddfad88a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15315, "upload_time": "2019-10-10T07:35:03", "upload_time_iso_8601": "2019-10-10T07:35:03.300837Z", "url": "https://files.pythonhosted.org/packages/72/db/8e8490997981ca21527c3ec3397d4eaa07dc0dc239ce10b1712417519302/aiida-zeopp-1.0.0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "2f67525de68c716a5def364728084223", "sha256": "d5c66765e102f6db8ce6692beb7469f7461dc98d9452dbf2c0cc9e2a32fe0ce1"}, "downloads": -1, "filename": "aiida-zeopp-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "2f67525de68c716a5def364728084223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15679, "upload_time": "2019-04-05T23:39:57", "upload_time_iso_8601": "2019-04-05T23:39:57.106153Z", "url": "https://files.pythonhosted.org/packages/6b/b8/1cce8aae2b94667fd0959914c647472ae54309269c59b327cdd41ec3e410/aiida-zeopp-1.0.0a1.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "f7d7605262e330e6e1495c8a19991eb9", "sha256": "3dd60683974e0f24a9d4bf939fbc9089725ea34120c0e9836c0927480af22653"}, "downloads": -1, "filename": "aiida-zeopp-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "f7d7605262e330e6e1495c8a19991eb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15679, "upload_time": "2019-04-10T21:47:32", "upload_time_iso_8601": "2019-04-10T21:47:32.283009Z", "url": "https://files.pythonhosted.org/packages/e4/2e/852fbac220b60368c95162646283384e5c773c9bb19c95123e1f82ff3ccb/aiida-zeopp-1.0.0a2.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "d927c3fbccb3e45a489c482c908a8a70", "sha256": "c9b3dea338e03d70aeb4a6127ff0785b255e593504c73aef9b447ddff84300f9"}, "downloads": -1, "filename": "aiida-zeopp-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "d927c3fbccb3e45a489c482c908a8a70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15829, "upload_time": "2019-06-26T16:13:20", "upload_time_iso_8601": "2019-06-26T16:13:20.489777Z", "url": "https://files.pythonhosted.org/packages/ff/12/8e9fc288d28fe62db8afbe0f2a9adc7a89571581bd10048cc925928c37ed/aiida-zeopp-1.0.0b1.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "bffeee5ccff11b54061566fce1223eed", "sha256": "c14e82504d9db00bfdbd9e3b7df159248d0192bfce9178e9afc629411e9d1606"}, "downloads": -1, "filename": "aiida_zeopp-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bffeee5ccff11b54061566fce1223eed", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22959, "upload_time": "2019-11-11T14:43:20", "upload_time_iso_8601": "2019-11-11T14:43:20.291401Z", "url": "https://files.pythonhosted.org/packages/9b/a0/3dfa2943336c6fcde9216a7f2c0e832357af7b324b53082eeb6c517befde/aiida_zeopp-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3489977d3a712dbe09c3d47a49a729f3", "sha256": "600738fc3c8b067caa35a6f3d216e89f577227ace80b2ec04037c6ca3ec054a7"}, "downloads": -1, "filename": "aiida-zeopp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3489977d3a712dbe09c3d47a49a729f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17648, "upload_time": "2019-11-11T14:43:22", "upload_time_iso_8601": "2019-11-11T14:43:22.062778Z", "url": "https://files.pythonhosted.org/packages/19/0f/b601b669453e88fb07fce8b82ed83b3c2cb9a5c3c5db4fb14265b271ef38/aiida-zeopp-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f1675476cb58b5ba0e8c28b143269d2b", "sha256": "a19cc7d83a36ce3fd93b1af28b5ecc57d0c13a59c0b5e3061c82abb79ef4b8e4"}, "downloads": -1, "filename": "aiida_zeopp-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1675476cb58b5ba0e8c28b143269d2b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22960, "upload_time": "2019-11-11T14:47:14", "upload_time_iso_8601": "2019-11-11T14:47:14.367073Z", "url": "https://files.pythonhosted.org/packages/36/b3/95567fb6ecfaf1316e54a4b2bf7479c30bfa25adf200e9a674210c96b585/aiida_zeopp-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeef15eef775d85b8928ca23048180d9", "sha256": "1815fec9fca4e0d6e186d2efccbadd34763d2ac5078046cc89abae3932626240"}, "downloads": -1, "filename": "aiida-zeopp-1.0.2.tar.gz", "has_sig": false, "md5_digest": "eeef15eef775d85b8928ca23048180d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17653, "upload_time": "2019-11-11T14:47:16", "upload_time_iso_8601": "2019-11-11T14:47:16.226786Z", "url": "https://files.pythonhosted.org/packages/9c/78/d94beb3c765112d2c166ad227734779fc0587d9b0bdc02096199a878a3d0/aiida-zeopp-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "b8e45ff872699cda7acea44ce06d16bf", "sha256": "204cba818b417df3b1283287fdd8970bbc6f060bea1150c3a1db9b47fe907f1a"}, "downloads": -1, "filename": "aiida-zeopp-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b8e45ff872699cda7acea44ce06d16bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16299, "upload_time": "2019-11-11T15:50:49", "upload_time_iso_8601": "2019-11-11T15:50:49.400466Z", "url": "https://files.pythonhosted.org/packages/d0/37/869c0f1af7978c870249aef33cd156bf6885517a826309a3e04292c913cd/aiida-zeopp-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "18a51380e1332237ad9172d95cd32f7c", "sha256": "9fd3744817f8b147b6893f1568865d55f2eb715a44b67186cc322c8e5fea8efc"}, "downloads": -1, "filename": "aiida-zeopp-1.1.0.tar.gz", "has_sig": false, "md5_digest": "18a51380e1332237ad9172d95cd32f7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16633, "upload_time": "2020-02-08T11:21:22", "upload_time_iso_8601": "2020-02-08T11:21:22.597595Z", "url": "https://files.pythonhosted.org/packages/60/aa/851c3b5c3fc11381a7809650aab211e57248bae808a7df935bffab566a36/aiida-zeopp-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "66ce6a11fb8dd04c60ae2324cb11b5b7", "sha256": "8e2b459a914a3d177010438af32e041dc9b0cb72ae4a915f0a5ad0b637f57741"}, "downloads": -1, "filename": "aiida-zeopp-1.1.1.tar.gz", "has_sig": false, "md5_digest": "66ce6a11fb8dd04c60ae2324cb11b5b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16596, "upload_time": "2020-02-12T18:42:08", "upload_time_iso_8601": "2020-02-12T18:42:08.662087Z", "url": "https://files.pythonhosted.org/packages/a0/9b/b90f28913ab7ca757eecf0ef7f033cd265f8be7a2a89bbe2724c5a47c51d/aiida-zeopp-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66ce6a11fb8dd04c60ae2324cb11b5b7", "sha256": "8e2b459a914a3d177010438af32e041dc9b0cb72ae4a915f0a5ad0b637f57741"}, "downloads": -1, "filename": "aiida-zeopp-1.1.1.tar.gz", "has_sig": false, "md5_digest": "66ce6a11fb8dd04c60ae2324cb11b5b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16596, "upload_time": "2020-02-12T18:42:08", "upload_time_iso_8601": "2020-02-12T18:42:08.662087Z", "url": "https://files.pythonhosted.org/packages/a0/9b/b90f28913ab7ca757eecf0ef7f033cd265f8be7a2a89bbe2724c5a47c51d/aiida-zeopp-1.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:59 2020"}