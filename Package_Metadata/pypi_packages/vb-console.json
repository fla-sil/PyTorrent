{"info": {"author": "vb YAZILIM", "author_email": "hello@vbyazilim.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "![Python](https://img.shields.io/badge/python-3.7.3-green.svg)\n[![PyPI version](https://badge.fury.io/py/django-vb-console.svg)](https://badge.fury.io/py/django-vb-console)\n\n# vb-console\n\nA custom Python object inspector with style.\n\n## Installation and Usage\n\n```bash\n$ pip install vb-console\n```\n\nBy default, console output is disabled. You can enable output via setting\nthe `ENABLE_CONSOLE` environment variable. Launch Python reply:\n\n```bash\n$ ENABLE_CONSOLE=1 python\n```\n\nthen;\n\n```python\nPython 3.7.3 (default, Jul  6 2019, 07:47:04) \n[Clang 11.0.0 (clang-1100.0.20.17)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n>>> from console import console\n>>> console = console(source=__name__) \n>>> console('Hello World')\n[__main__]*****************************************************************************\n('Hello World',)\n***************************************************************************************\n\n>>> console.dir([1,2,3])\n[__main__ : instance of list | <class 'list'>]*****************************************\n{   'internal_methods': [   '__add__', '__class__', '__contains__', '__delattr__', \n                            '__delitem__', '__dir__', '__doc__', '__eq__', '__format__',\n                            '__ge__', '__getattribute__', '__getitem__', '__gt__', \n                            '__hash__', '__iadd__', '__imul__', '__init__', \n                            '__init_subclass__', '__iter__', '__le__', '__len__', \n                            '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', \n                            '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', \n                            '__setattr__', '__setitem__', '__sizeof__', '__str__', \n                            '__subclasshook__'],\n    'public_attributes': [  'append', 'clear', 'copy', 'count', 'extend', 'index', \n                            'insert', 'pop', 'remove', 'reverse', 'sort']}\n***************************************************************************************\n```\n\nYou have few options for console output:\n\n- `console(object)`\n- `console(object, object, object, ...)`\n- `console.dir(object)`\n\nYou can custom `console` instance;\n\n```python\nfrom console import console\n\n# default/basic\nconsole = console(source=__name__)\n\n# set screen width and indentation\nconsole = console(\n    source=__name__,\n    indent=8,\n    width=64,\n)\n\n# set color mode\nconsole = console(\n    source=__name__,\n    color='yellow',\n)\n\n# inline color\nconsole('hello', 'world', [1, 2, 3], color='red')\n```\n\nValid colors are:\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `default`\n\nDefaults are;\n\n- `width` is `79`\n- `indent` is `4`\n- `seperator_char` is `*`\n- `color` is `yellow`\n\nExample of complex object inspection:\n\n```python\nclass MyClass:\n    klass_var1 = 1\n    klass_var2 = 2\n\n    def __init__(self):\n        self.name = 'Name'\n\n    def start(self):\n        return 'method'\n\n    @property\n    def admin(self):\n        return True\n\n    @staticmethod\n    def statik():\n        return 'Static'\n\n    @classmethod\n    def klass_method(cls):\n        return 'kls'\n\nmc = MyClass()\n\nconsole.dir(MyClass)\n```\n\nOutput:\n\n```bash\n[__main__ : MyClass | <class 'type'>]*******************************************\n{   'class_methods': ['klass_method'],\n    'internal_methods': [   '__class__', '__delattr__', '__dict__', '__dir__',\n                            '__doc__', '__eq__', '__format__', '__ge__',\n                            '__getattribute__', '__gt__', '__hash__',\n                            '__init_subclass__', '__le__', '__lt__',\n                            '__module__', '__ne__', '__new__', '__reduce__',\n                            '__reduce_ex__', '__repr__', '__setattr__',\n                            '__sizeof__', '__str__', '__subclasshook__',\n                            '__weakref__'],\n    'property_list': ['admin'],\n    'public_attributes': ['klass_var1', 'klass_var2'],\n    'public_methods': ['__init__', 'start'],\n    'static_methods': ['statik']}\n*******************************************************************************\n```\n\nMore;\n\n```python\nconsole.dir(mc)\n```\n\nOutput:\n\n```bash\nIn [6]: console.dir(mc)                                                         \n[__main__ : instance of MyClass | <class '__main__.MyClass'>]*******************\n{   'instance_attributes': ['name'],\n    'internal_methods': [   '__class__', '__delattr__', '__dict__', '__dir__',\n                            '__doc__', '__eq__', '__format__', '__ge__',\n                            '__getattribute__', '__gt__', '__hash__',\n                            '__init__', '__init_subclass__', '__le__', '__lt__',\n                            '__module__', '__ne__', '__new__', '__reduce__',\n                            '__reduce_ex__', '__repr__', '__setattr__',\n                            '__sizeof__', '__str__', '__subclasshook__',\n                            '__weakref__'],\n    'public_attributes': [   'admin', 'klass_method', 'klass_var1',\n                             'klass_var2', 'start', 'statik']}\n********************************************************************************\n```\n\nStandard objects:\n\n```python\nconsole.dir(dict)\n```\n\nOutput:\n\n```bash\n[__main__ : dict | <class 'type'>]**********************************************\n{   'internal_methods': [   '__class__', '__contains__', '__delattr__',\n                            '__delitem__', '__dir__', '__doc__', '__eq__',\n                            '__format__', '__ge__', '__getattribute__',\n                            '__getitem__', '__gt__', '__hash__', '__init__',\n                            '__init_subclass__', '__iter__', '__le__',\n                            '__len__', '__lt__', '__ne__', '__new__',\n                            '__reduce__', '__reduce_ex__', '__repr__',\n                            '__setattr__', '__setitem__', '__sizeof__',\n                            '__str__', '__subclasshook__'],\n    'public_attributes': [   'clear', 'copy', 'fromkeys', 'get', 'items',\n                             'keys', 'pop', 'popitem', 'setdefault', 'update',\n                             'values']}\n********************************************************************************\n```\n\n### Using with Django\n\n`console` also checks for Django\u2019s `DEBUG` settings value: `settings.DEBUG`.\nExample usage for Django project;\n\n```python\nfrom django.views.generic.base import TemplateView\n\nfrom console import console\n\nconsole = console(source=__name__)\n\n\nclass IndexView(TemplateView):\n    template_name = 'index.html'\n\n    def get_context_data(self, **kwargs):\n        kwargs = super().get_context_data(**kwargs)\n        console('kwargs', kwargs)\n        console.log(kwargs)\n        return kwargs\n```\n\n---\n\n## License\n\nThis project is licensed under MIT\n\n---\n\n## Contributer(s)\n\n* [U\u011fur \"vigo\" \u00d6zy\u0131lmazel](https://github.com/vigo) - Creator, maintainer\n\n---\n\n## Contribute\n\nAll PR\u2019s are welcome!\n\n1. `fork` (https://github.com/vbyazilim/django-vb-console/fork)\n1. Create your `branch` (`git checkout -b my-features`)\n1. `commit` yours (`git commit -am 'added killer options'`)\n1. `push` your `branch` (`git push origin my-features`)\n1. Than create a new **Pull Request**!\n\n---\n\n## Change Log\n\n**2019-10-03**\n\n- Fix some of the code\n- Add `ENABLE_CONSOLE` environment variable\n- Update README\n\n**2019-09-29**\n\n- Init repo!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vbyazilim/vb-console", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vb-console", "package_url": "https://pypi.org/project/vb-console/", "platform": "", "project_url": "https://pypi.org/project/vb-console/", "project_urls": {"Homepage": "https://github.com/vbyazilim/vb-console"}, "release_url": "https://pypi.org/project/vb-console/0.1.1/", "requires_dist": null, "requires_python": ">=3.0", "summary": "Logger and object inspector for Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29bf37ec290e94a58775da4419cbedf94510526f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372e332d677265656e2e737667\">\n<a href=\"https://badge.fury.io/py/django-vb-console\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba29edbf1e340a9262326079ace03c62ea716f9e/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d76622d636f6e736f6c652e737667\"></a></p>\n<h1>vb-console</h1>\n<p>A custom Python object inspector with style.</p>\n<h2>Installation and Usage</h2>\n<pre>$ pip install vb-console\n</pre>\n<p>By default, console output is disabled. You can enable output via setting\nthe <code>ENABLE_CONSOLE</code> environment variable. Launch Python reply:</p>\n<pre>$ <span class=\"nv\">ENABLE_CONSOLE</span><span class=\"o\">=</span><span class=\"m\">1</span> python\n</pre>\n<p>then;</p>\n<pre><span class=\"n\">Python</span> <span class=\"mf\">3.7</span><span class=\"o\">.</span><span class=\"mi\">3</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Jul</span>  <span class=\"mi\">6</span> <span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">07</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">)</span> \n<span class=\"p\">[</span><span class=\"n\">Clang</span> <span class=\"mf\">11.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1100.0</span><span class=\"o\">.</span><span class=\"mf\">20.17</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s2\">\"help\"</span><span class=\"p\">,</span> <span class=\"s2\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s2\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">console</span> <span class=\"kn\">import</span> <span class=\"n\">console</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">console</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">console</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">__main__</span><span class=\"p\">]</span><span class=\"o\">*****************************************************************************</span>\n<span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">,)</span>\n<span class=\"o\">***************************************************************************************</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"n\">__main__</span> <span class=\"p\">:</span> <span class=\"n\">instance</span> <span class=\"n\">of</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">list</span><span class=\"s1\">'&gt;]*****************************************</span>\n<span class=\"p\">{</span>   <span class=\"s1\">'internal_methods'</span><span class=\"p\">:</span> <span class=\"p\">[</span>   <span class=\"s1\">'__add__'</span><span class=\"p\">,</span> <span class=\"s1\">'__class__'</span><span class=\"p\">,</span> <span class=\"s1\">'__contains__'</span><span class=\"p\">,</span> <span class=\"s1\">'__delattr__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__delitem__'</span><span class=\"p\">,</span> <span class=\"s1\">'__dir__'</span><span class=\"p\">,</span> <span class=\"s1\">'__doc__'</span><span class=\"p\">,</span> <span class=\"s1\">'__eq__'</span><span class=\"p\">,</span> <span class=\"s1\">'__format__'</span><span class=\"p\">,</span>\n                            <span class=\"s1\">'__ge__'</span><span class=\"p\">,</span> <span class=\"s1\">'__getattribute__'</span><span class=\"p\">,</span> <span class=\"s1\">'__getitem__'</span><span class=\"p\">,</span> <span class=\"s1\">'__gt__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__hash__'</span><span class=\"p\">,</span> <span class=\"s1\">'__iadd__'</span><span class=\"p\">,</span> <span class=\"s1\">'__imul__'</span><span class=\"p\">,</span> <span class=\"s1\">'__init__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__init_subclass__'</span><span class=\"p\">,</span> <span class=\"s1\">'__iter__'</span><span class=\"p\">,</span> <span class=\"s1\">'__le__'</span><span class=\"p\">,</span> <span class=\"s1\">'__len__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__lt__'</span><span class=\"p\">,</span> <span class=\"s1\">'__mul__'</span><span class=\"p\">,</span> <span class=\"s1\">'__ne__'</span><span class=\"p\">,</span> <span class=\"s1\">'__new__'</span><span class=\"p\">,</span> <span class=\"s1\">'__reduce__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__reduce_ex__'</span><span class=\"p\">,</span> <span class=\"s1\">'__repr__'</span><span class=\"p\">,</span> <span class=\"s1\">'__reversed__'</span><span class=\"p\">,</span> <span class=\"s1\">'__rmul__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__setattr__'</span><span class=\"p\">,</span> <span class=\"s1\">'__setitem__'</span><span class=\"p\">,</span> <span class=\"s1\">'__sizeof__'</span><span class=\"p\">,</span> <span class=\"s1\">'__str__'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'__subclasshook__'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'public_attributes'</span><span class=\"p\">:</span> <span class=\"p\">[</span>  <span class=\"s1\">'append'</span><span class=\"p\">,</span> <span class=\"s1\">'clear'</span><span class=\"p\">,</span> <span class=\"s1\">'copy'</span><span class=\"p\">,</span> <span class=\"s1\">'count'</span><span class=\"p\">,</span> <span class=\"s1\">'extend'</span><span class=\"p\">,</span> <span class=\"s1\">'index'</span><span class=\"p\">,</span> \n                            <span class=\"s1\">'insert'</span><span class=\"p\">,</span> <span class=\"s1\">'pop'</span><span class=\"p\">,</span> <span class=\"s1\">'remove'</span><span class=\"p\">,</span> <span class=\"s1\">'reverse'</span><span class=\"p\">,</span> <span class=\"s1\">'sort'</span><span class=\"p\">]}</span>\n<span class=\"o\">***************************************************************************************</span>\n</pre>\n<p>You have few options for console output:</p>\n<ul>\n<li><code>console(object)</code></li>\n<li><code>console(object, object, object, ...)</code></li>\n<li><code>console.dir(object)</code></li>\n</ul>\n<p>You can custom <code>console</code> instance;</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">console</span> <span class=\"kn\">import</span> <span class=\"n\">console</span>\n\n<span class=\"c1\"># default/basic</span>\n<span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">console</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set screen width and indentation</span>\n<span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">console</span><span class=\"p\">(</span>\n    <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n    <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># set color mode</span>\n<span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">console</span><span class=\"p\">(</span>\n    <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'yellow'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># inline color</span>\n<span class=\"n\">console</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"s1\">'world'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">)</span>\n</pre>\n<p>Valid colors are:</p>\n<ul>\n<li><code>black</code></li>\n<li><code>red</code></li>\n<li><code>green</code></li>\n<li><code>yellow</code></li>\n<li><code>blue</code></li>\n<li><code>magenta</code></li>\n<li><code>cyan</code></li>\n<li><code>white</code></li>\n<li><code>default</code></li>\n</ul>\n<p>Defaults are;</p>\n<ul>\n<li><code>width</code> is <code>79</code></li>\n<li><code>indent</code> is <code>4</code></li>\n<li><code>seperator_char</code> is <code>*</code></li>\n<li><code>color</code> is <code>yellow</code></li>\n</ul>\n<p>Example of complex object inspection:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">:</span>\n    <span class=\"n\">klass_var1</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">klass_var2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Name'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'method'</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">admin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">statik</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'Static'</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">klass_method</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'kls'</span>\n\n<span class=\"n\">mc</span> <span class=\"o\">=</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n\n<span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">[</span>__main__ : MyClass <span class=\"p\">|</span> &lt;class <span class=\"s1\">'type'</span>&gt;<span class=\"o\">]</span>*******************************************\n<span class=\"o\">{</span>   <span class=\"s1\">'class_methods'</span>: <span class=\"o\">[</span><span class=\"s1\">'klass_method'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'internal_methods'</span>: <span class=\"o\">[</span>   <span class=\"s1\">'__class__'</span>, <span class=\"s1\">'__delattr__'</span>, <span class=\"s1\">'__dict__'</span>, <span class=\"s1\">'__dir__'</span>,\n                            <span class=\"s1\">'__doc__'</span>, <span class=\"s1\">'__eq__'</span>, <span class=\"s1\">'__format__'</span>, <span class=\"s1\">'__ge__'</span>,\n                            <span class=\"s1\">'__getattribute__'</span>, <span class=\"s1\">'__gt__'</span>, <span class=\"s1\">'__hash__'</span>,\n                            <span class=\"s1\">'__init_subclass__'</span>, <span class=\"s1\">'__le__'</span>, <span class=\"s1\">'__lt__'</span>,\n                            <span class=\"s1\">'__module__'</span>, <span class=\"s1\">'__ne__'</span>, <span class=\"s1\">'__new__'</span>, <span class=\"s1\">'__reduce__'</span>,\n                            <span class=\"s1\">'__reduce_ex__'</span>, <span class=\"s1\">'__repr__'</span>, <span class=\"s1\">'__setattr__'</span>,\n                            <span class=\"s1\">'__sizeof__'</span>, <span class=\"s1\">'__str__'</span>, <span class=\"s1\">'__subclasshook__'</span>,\n                            <span class=\"s1\">'__weakref__'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'property_list'</span>: <span class=\"o\">[</span><span class=\"s1\">'admin'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'public_attributes'</span>: <span class=\"o\">[</span><span class=\"s1\">'klass_var1'</span>, <span class=\"s1\">'klass_var2'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'public_methods'</span>: <span class=\"o\">[</span><span class=\"s1\">'__init__'</span>, <span class=\"s1\">'start'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'static_methods'</span>: <span class=\"o\">[</span><span class=\"s1\">'statik'</span><span class=\"o\">]}</span>\n*******************************************************************************\n</pre>\n<p>More;</p>\n<pre><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"n\">mc</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre>In <span class=\"o\">[</span><span class=\"m\">6</span><span class=\"o\">]</span>: console.dir<span class=\"o\">(</span>mc<span class=\"o\">)</span>                                                         \n<span class=\"o\">[</span>__main__ : instance of MyClass <span class=\"p\">|</span> &lt;class <span class=\"s1\">'__main__.MyClass'</span>&gt;<span class=\"o\">]</span>*******************\n<span class=\"o\">{</span>   <span class=\"s1\">'instance_attributes'</span>: <span class=\"o\">[</span><span class=\"s1\">'name'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'internal_methods'</span>: <span class=\"o\">[</span>   <span class=\"s1\">'__class__'</span>, <span class=\"s1\">'__delattr__'</span>, <span class=\"s1\">'__dict__'</span>, <span class=\"s1\">'__dir__'</span>,\n                            <span class=\"s1\">'__doc__'</span>, <span class=\"s1\">'__eq__'</span>, <span class=\"s1\">'__format__'</span>, <span class=\"s1\">'__ge__'</span>,\n                            <span class=\"s1\">'__getattribute__'</span>, <span class=\"s1\">'__gt__'</span>, <span class=\"s1\">'__hash__'</span>,\n                            <span class=\"s1\">'__init__'</span>, <span class=\"s1\">'__init_subclass__'</span>, <span class=\"s1\">'__le__'</span>, <span class=\"s1\">'__lt__'</span>,\n                            <span class=\"s1\">'__module__'</span>, <span class=\"s1\">'__ne__'</span>, <span class=\"s1\">'__new__'</span>, <span class=\"s1\">'__reduce__'</span>,\n                            <span class=\"s1\">'__reduce_ex__'</span>, <span class=\"s1\">'__repr__'</span>, <span class=\"s1\">'__setattr__'</span>,\n                            <span class=\"s1\">'__sizeof__'</span>, <span class=\"s1\">'__str__'</span>, <span class=\"s1\">'__subclasshook__'</span>,\n                            <span class=\"s1\">'__weakref__'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'public_attributes'</span>: <span class=\"o\">[</span>   <span class=\"s1\">'admin'</span>, <span class=\"s1\">'klass_method'</span>, <span class=\"s1\">'klass_var1'</span>,\n                             <span class=\"s1\">'klass_var2'</span>, <span class=\"s1\">'start'</span>, <span class=\"s1\">'statik'</span><span class=\"o\">]}</span>\n********************************************************************************\n</pre>\n<p>Standard objects:</p>\n<pre><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">[</span>__main__ : dict <span class=\"p\">|</span> &lt;class <span class=\"s1\">'type'</span>&gt;<span class=\"o\">]</span>**********************************************\n<span class=\"o\">{</span>   <span class=\"s1\">'internal_methods'</span>: <span class=\"o\">[</span>   <span class=\"s1\">'__class__'</span>, <span class=\"s1\">'__contains__'</span>, <span class=\"s1\">'__delattr__'</span>,\n                            <span class=\"s1\">'__delitem__'</span>, <span class=\"s1\">'__dir__'</span>, <span class=\"s1\">'__doc__'</span>, <span class=\"s1\">'__eq__'</span>,\n                            <span class=\"s1\">'__format__'</span>, <span class=\"s1\">'__ge__'</span>, <span class=\"s1\">'__getattribute__'</span>,\n                            <span class=\"s1\">'__getitem__'</span>, <span class=\"s1\">'__gt__'</span>, <span class=\"s1\">'__hash__'</span>, <span class=\"s1\">'__init__'</span>,\n                            <span class=\"s1\">'__init_subclass__'</span>, <span class=\"s1\">'__iter__'</span>, <span class=\"s1\">'__le__'</span>,\n                            <span class=\"s1\">'__len__'</span>, <span class=\"s1\">'__lt__'</span>, <span class=\"s1\">'__ne__'</span>, <span class=\"s1\">'__new__'</span>,\n                            <span class=\"s1\">'__reduce__'</span>, <span class=\"s1\">'__reduce_ex__'</span>, <span class=\"s1\">'__repr__'</span>,\n                            <span class=\"s1\">'__setattr__'</span>, <span class=\"s1\">'__setitem__'</span>, <span class=\"s1\">'__sizeof__'</span>,\n                            <span class=\"s1\">'__str__'</span>, <span class=\"s1\">'__subclasshook__'</span><span class=\"o\">]</span>,\n    <span class=\"s1\">'public_attributes'</span>: <span class=\"o\">[</span>   <span class=\"s1\">'clear'</span>, <span class=\"s1\">'copy'</span>, <span class=\"s1\">'fromkeys'</span>, <span class=\"s1\">'get'</span>, <span class=\"s1\">'items'</span>,\n                             <span class=\"s1\">'keys'</span>, <span class=\"s1\">'pop'</span>, <span class=\"s1\">'popitem'</span>, <span class=\"s1\">'setdefault'</span>, <span class=\"s1\">'update'</span>,\n                             <span class=\"s1\">'values'</span><span class=\"o\">]}</span>\n********************************************************************************\n</pre>\n<h3>Using with Django</h3>\n<p><code>console</code> also checks for Django\u2019s <code>DEBUG</code> settings value: <code>settings.DEBUG</code>.\nExample usage for Django project;</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">console</span> <span class=\"kn\">import</span> <span class=\"n\">console</span>\n\n<span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">console</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">IndexView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'index.html'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">console</span><span class=\"p\">(</span><span class=\"s1\">'kwargs'</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">kwargs</span>\n</pre>\n<hr>\n<h2>License</h2>\n<p>This project is licensed under MIT</p>\n<hr>\n<h2>Contributer(s)</h2>\n<ul>\n<li><a href=\"https://github.com/vigo\" rel=\"nofollow\">U\u011fur \"vigo\" \u00d6zy\u0131lmazel</a> - Creator, maintainer</li>\n</ul>\n<hr>\n<h2>Contribute</h2>\n<p>All PR\u2019s are welcome!</p>\n<ol>\n<li><code>fork</code> (<a href=\"https://github.com/vbyazilim/django-vb-console/fork\" rel=\"nofollow\">https://github.com/vbyazilim/django-vb-console/fork</a>)</li>\n<li>Create your <code>branch</code> (<code>git checkout -b my-features</code>)</li>\n<li><code>commit</code> yours (<code>git commit -am 'added killer options'</code>)</li>\n<li><code>push</code> your <code>branch</code> (<code>git push origin my-features</code>)</li>\n<li>Than create a new <strong>Pull Request</strong>!</li>\n</ol>\n<hr>\n<h2>Change Log</h2>\n<p><strong>2019-10-03</strong></p>\n<ul>\n<li>Fix some of the code</li>\n<li>Add <code>ENABLE_CONSOLE</code> environment variable</li>\n<li>Update README</li>\n</ul>\n<p><strong>2019-09-29</strong></p>\n<ul>\n<li>Init repo!</li>\n</ul>\n\n          </div>"}, "last_serial": 5925344, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "c764ad68837f0e3708fc70b5093b0369", "sha256": "0d65108826fedf87cf02715a18670426fd859a03049f74e2a62bebdec0e52bf6"}, "downloads": -1, "filename": "vb_console-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c764ad68837f0e3708fc70b5093b0369", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 6223, "upload_time": "2019-10-03T20:30:35", "upload_time_iso_8601": "2019-10-03T20:30:35.371804Z", "url": "https://files.pythonhosted.org/packages/62/5c/c1318d6fd48e3c7748ca741fff6764cb52e9a39375dcf0f3e47b48968f9a/vb_console-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "574bae63e15961de6a3abe996de614d0", "sha256": "be97959fbb8b77f547793fac61a143027d9b1f42ab4567e67f52cd8da496e259"}, "downloads": -1, "filename": "vb-console-0.1.1.tar.gz", "has_sig": false, "md5_digest": "574bae63e15961de6a3abe996de614d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 5650, "upload_time": "2019-10-03T20:30:38", "upload_time_iso_8601": "2019-10-03T20:30:38.310359Z", "url": "https://files.pythonhosted.org/packages/fc/dd/2b60ab47f7181452ba9a9fd774ba434a3823cf69f0a57d2479405ddf8405/vb-console-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c764ad68837f0e3708fc70b5093b0369", "sha256": "0d65108826fedf87cf02715a18670426fd859a03049f74e2a62bebdec0e52bf6"}, "downloads": -1, "filename": "vb_console-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c764ad68837f0e3708fc70b5093b0369", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 6223, "upload_time": "2019-10-03T20:30:35", "upload_time_iso_8601": "2019-10-03T20:30:35.371804Z", "url": "https://files.pythonhosted.org/packages/62/5c/c1318d6fd48e3c7748ca741fff6764cb52e9a39375dcf0f3e47b48968f9a/vb_console-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "574bae63e15961de6a3abe996de614d0", "sha256": "be97959fbb8b77f547793fac61a143027d9b1f42ab4567e67f52cd8da496e259"}, "downloads": -1, "filename": "vb-console-0.1.1.tar.gz", "has_sig": false, "md5_digest": "574bae63e15961de6a3abe996de614d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 5650, "upload_time": "2019-10-03T20:30:38", "upload_time_iso_8601": "2019-10-03T20:30:38.310359Z", "url": "https://files.pythonhosted.org/packages/fc/dd/2b60ab47f7181452ba9a9fd774ba434a3823cf69f0a57d2479405ddf8405/vb-console-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:37 2020"}