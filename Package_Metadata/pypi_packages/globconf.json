{"info": {"author": "Steffen Schumacher", "author_email": "ssch@wheel.dk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# globconf\n\nCreates a global configparser object, regardless of the project and module in need of it\n\n## Getting Started\nIn project using globconf:\n```\nfrom globconf import config\n# config will attempt to read local config.ini file if present - required options are verified using.\nfrom globconf import verify_required_options\ncfg = verify_required_options('Section name', ['list', 'of', 'required', 'options', 'for', 'the', 'section'])\n\n# if config.ini is not found, then defaults can be read from a string, within the module relying on globconf like so:\nif 'Section name' not in config.sections():\n    config.read_string(\"\"\"\n    [important section]\n    host = critical-system.com\n    user = REST_USER\n    pwd = REST_PASSWORD\n    verify_ssl = false\n    \"\"\")\n# or \nconfig.read('some_other_config.ini')\n```\n\nIn modules:\n```\nfrom globconf import config, verify_required_options\nclass module(object):\n    def __init__(self):\n        sec = 'service now'\n        self.cfg = verify_required_options(sec, ['host', 'user', 'pwd'])\n        if not self.cfg.getboolean('verify_ssl', fallback=True):\n            import urllib3\n            urllib3.disable_warnings(InsecureRequestWarning)\n```\n\nAnd your module is happy as long as someone has initialised the needed section in the global config.\n\n### Prerequisites\n\nconfigparser\n\n\n### Building\nBuild:\n```\nsudo python setup.py sdist bdist_wheel\ntwine upload dist/*\n```\n\n\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Authors\n\n* **Steffen Schumacher** - *Initial work* - [steffenschumacher](https://github.com/steffenschumacher)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Hat tip to anyone whose code was used\n* Inspiration\n* etc\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/steffenschumacher/globconf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "globconf", "package_url": "https://pypi.org/project/globconf/", "platform": "", "project_url": "https://pypi.org/project/globconf/", "project_urls": {"Homepage": "https://github.com/steffenschumacher/globconf"}, "release_url": "https://pypi.org/project/globconf/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "global configparser object to be used across modules", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>globconf</h1>\n<p>Creates a global configparser object, regardless of the project and module in need of it</p>\n<h2>Getting Started</h2>\n<p>In project using globconf:</p>\n<pre><code>from globconf import config\n# config will attempt to read local config.ini file if present - required options are verified using.\nfrom globconf import verify_required_options\ncfg = verify_required_options('Section name', ['list', 'of', 'required', 'options', 'for', 'the', 'section'])\n\n# if config.ini is not found, then defaults can be read from a string, within the module relying on globconf like so:\nif 'Section name' not in config.sections():\n    config.read_string(\"\"\"\n    [important section]\n    host = critical-system.com\n    user = REST_USER\n    pwd = REST_PASSWORD\n    verify_ssl = false\n    \"\"\")\n# or \nconfig.read('some_other_config.ini')\n</code></pre>\n<p>In modules:</p>\n<pre><code>from globconf import config, verify_required_options\nclass module(object):\n    def __init__(self):\n        sec = 'service now'\n        self.cfg = verify_required_options(sec, ['host', 'user', 'pwd'])\n        if not self.cfg.getboolean('verify_ssl', fallback=True):\n            import urllib3\n            urllib3.disable_warnings(InsecureRequestWarning)\n</code></pre>\n<p>And your module is happy as long as someone has initialised the needed section in the global config.</p>\n<h3>Prerequisites</h3>\n<p>configparser</p>\n<h3>Building</h3>\n<p>Build:</p>\n<pre><code>sudo python setup.py sdist bdist_wheel\ntwine upload dist/*\n</code></pre>\n<p>End with an example of getting some data out of the system or using it for a little demo</p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Steffen Schumacher</strong> - <em>Initial work</em> - <a href=\"https://github.com/steffenschumacher\" rel=\"nofollow\">steffenschumacher</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>Hat tip to anyone whose code was used</li>\n<li>Inspiration</li>\n<li>etc</li>\n</ul>\n\n          </div>"}, "last_serial": 4401947, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "245ae4d03d2f6973266b83628ac5dcd8", "sha256": "c0126320c22637a25b78b4f8f3d2e258cd3e90250ffa36b77cdbeb6f894cee14"}, "downloads": -1, "filename": "globconf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "245ae4d03d2f6973266b83628ac5dcd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2330, "upload_time": "2018-07-09T10:32:35", "upload_time_iso_8601": "2018-07-09T10:32:35.234096Z", "url": "https://files.pythonhosted.org/packages/21/f2/f02133b2f416bb7af8a439f9b867c1c31a33f7b7cb341f543fdfa34ffbe8/globconf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22c41bd1f43ebe5491ca6487935651a1", "sha256": "a745e50968a859fc7843acecc11599dab89a37ba3c5bdb2964eef47f9becc4d0"}, "downloads": -1, "filename": "globconf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "22c41bd1f43ebe5491ca6487935651a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2154, "upload_time": "2018-07-09T10:32:36", "upload_time_iso_8601": "2018-07-09T10:32:36.493888Z", "url": "https://files.pythonhosted.org/packages/81/c7/8c2b458c62152976092e1fd83dc2ebe15058f4328b2529128f195ef7a454/globconf-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "14b06fb92fbf3e4bb27c14f5e8a270a7", "sha256": "a2f1b6c37e0687d061df8783ba78a8509a220d1fc5574ec50c10f1eba053dd20"}, "downloads": -1, "filename": "globconf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14b06fb92fbf3e4bb27c14f5e8a270a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2489, "upload_time": "2018-10-22T11:25:02", "upload_time_iso_8601": "2018-10-22T11:25:02.813004Z", "url": "https://files.pythonhosted.org/packages/76/61/e6807778ec103f135eb4f9a09aa1be764aa8283a4e8cc114cd7d3a941415/globconf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1714cea1572c52f7a9f1641b9c137e", "sha256": "3bc5887ed97f3856eff5e015735f7934e1e4c09f81374e412faf7f512302ddcc"}, "downloads": -1, "filename": "globconf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8c1714cea1572c52f7a9f1641b9c137e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2264, "upload_time": "2018-10-22T11:25:05", "upload_time_iso_8601": "2018-10-22T11:25:05.240382Z", "url": "https://files.pythonhosted.org/packages/1e/2c/7e13e267b7776c59bba451123104287eb560d7320e7b81a57cf6b2bcf6c6/globconf-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14b06fb92fbf3e4bb27c14f5e8a270a7", "sha256": "a2f1b6c37e0687d061df8783ba78a8509a220d1fc5574ec50c10f1eba053dd20"}, "downloads": -1, "filename": "globconf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14b06fb92fbf3e4bb27c14f5e8a270a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2489, "upload_time": "2018-10-22T11:25:02", "upload_time_iso_8601": "2018-10-22T11:25:02.813004Z", "url": "https://files.pythonhosted.org/packages/76/61/e6807778ec103f135eb4f9a09aa1be764aa8283a4e8cc114cd7d3a941415/globconf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1714cea1572c52f7a9f1641b9c137e", "sha256": "3bc5887ed97f3856eff5e015735f7934e1e4c09f81374e412faf7f512302ddcc"}, "downloads": -1, "filename": "globconf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8c1714cea1572c52f7a9f1641b9c137e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2264, "upload_time": "2018-10-22T11:25:05", "upload_time_iso_8601": "2018-10-22T11:25:05.240382Z", "url": "https://files.pythonhosted.org/packages/1e/2c/7e13e267b7776c59bba451123104287eb560d7320e7b81a57cf6b2bcf6c6/globconf-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:33 2020"}