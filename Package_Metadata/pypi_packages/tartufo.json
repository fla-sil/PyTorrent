{"info": {"author": "GoDaddy", "author_email": "oss@godaddy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security", "Topic :: Software Development :: Version Control :: Git"], "description": "# ![tartufo logo](docs/source/_static/img/tartufo.png)\n\n![Travis (.org)](https://img.shields.io/travis/godaddy/tartufo)\n![Codecov](https://img.shields.io/codecov/c/github/godaddy/tartufo)\n![PyPI](https://img.shields.io/pypi/v/tartufo)\n![PyPI - Status](https://img.shields.io/pypi/status/tartufo)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/tartufo)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/tartufo)\n[![Documentation Status](https://readthedocs.org/projects/tartufo/badge/?version=latest)](https://tartufo.readthedocs.io/en/latest/?badge=latest)\n\n`tartufo` searches through git repositories for secrets, digging deep into\ncommit history and branches. This is effective at finding secrets accidentally\ncommitted. `tartufo` also can be used by git pre-commit scripts to screen\nchanges for secrets before they are committed to the repository.\n\nThis tool will go through the entire commit history of each branch, and check\neach diff from each commit, and check for secrets. This is both by regex and by\nentropy. For entropy checks, tartufo will evaluate the shannon entropy for both\nthe base64 char set and hexidecimal char set for every blob of text greater\nthan 20 characters comprised of those character sets in each diff. If at any\npoint a high entropy string > 20 characters is detected, it will print to the\nscreen.\n\n## Example\n\n![Example Issue](docs/source/_static/img/example_issue.png)\n\n## Documentation\n\nOur main documentation site is hosted by Read The Docs, at\n<https://tartufo.readthedocs.io>.\n\n## Usage\n\n```bash\nUsage: tartufo [OPTIONS] [GIT_URL]\n\n  Find secrets hidden in the depths of git.\n\n  Tartufo will, by default, scan the entire history of a git repository for\n  any text which looks like a secret, password, credential, etc. It can also\n  be made to work in pre-commit mode, for scanning blobs of text as a pre-\n  commit hook.\n\nOptions:\n  --json / --no-json              Output in JSON format.\n  --rules FILENAME                Path(s) to regex rules json list file(s).\n  --default-regexes / --no-default-regexes\n                                  Whether to include the default regex list\n                                  when configuring search patterns. Only\n                                  applicable if --rules is also specified.\n                                  [default: --default-regexes]\n  --entropy / --no-entropy        Enable entropy checks. [default: True]\n  --regex / --no-regex            Enable high signal regexes checks. [default:\n                                  False]\n  --since-commit TEXT             Only scan from a given commit hash.\n  --max-depth INTEGER             The max commit depth to go back when\n                                  searching for secrets. [default: 1000000]\n  --branch TEXT                   Specify a branch name to scan only that\n                                  branch.\n  -i, --include-paths FILENAME    File with regular expressions (one per\n                                  line), at least one of which must match a\n                                  Git object path in order for it to be\n                                  scanned; lines starting with '#' are treated\n                                  as comments and are ignored. If empty or not\n                                  provided (default), all Git object paths are\n                                  included unless otherwise excluded via the\n                                  --exclude-paths option.\n  -x, --exclude-paths FILENAME    File with regular expressions (one per\n                                  line), none of which may match a Git object\n                                  path in order for it to be scanned; lines\n                                  starting with '#' are treated as comments\n                                  and are ignored. If empty or not provided\n                                  (default), no Git object paths are excluded\n                                  unless effectively excluded via the\n                                  --include-paths option.\n  --repo-path DIRECTORY           Path to local repo clone. If provided,\n                                  git_url will not be used.\n  --cleanup / --no-cleanup        Clean up all temporary result files.\n                                  [default: False]\n  --pre-commit                    Scan staged files in local repo clone.\n  --git-rules-repo TEXT           A file path, or git URL, pointing to a git\n                                  repository containing regex rules to be used\n                                  for scanning. By default, all .json files\n                                  will be loaded from the root of that\n                                  repository. --git-rules-files can be used to\n                                  override this behavior and load specific\n                                  files.\n  --git-rules-files TEXT          Used in conjunction with --git-rules-repo,\n                                  specify glob-style patterns for files from\n                                  which to load the regex rules. Can be\n                                  specified multiple times.\n  --config FILE                   Read configuration from specified file.\n                                  [default: pyproject.toml]\n  -h, --help                      Show this message and exit.\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING.md](./CONTRIBUTING.md).\n\n## Attributions\n\nThis project was inspired by and built off of the work done by Dylan Ayrey on\nthe [truffleHog] project.\n\n[pre-commit]: https://pre-commit.com/\n[truffleHog]: https://github.com/dxa4481/truffleHog\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/tartufo/#files", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/godaddy/tartufo", "keywords": "", "license": "GNU", "maintainer": "", "maintainer_email": "", "name": "tartufo", "package_url": "https://pypi.org/project/tartufo/", "platform": "", "project_url": "https://pypi.org/project/tartufo/", "project_urls": {"Download": "https://pypi.org/project/tartufo/#files", "Homepage": "https://github.com/godaddy/tartufo"}, "release_url": "https://pypi.org/project/tartufo/1.1.2/", "requires_dist": ["click (<8.0.0,>=7.0.0)", "GitPython (<4.0.0,>=2.1.1)", "toml (<1.0.0,>=0.10.0)", "truffleHogRegexes (<1.0.0,>=0.0.7)", "pathlib2 ; python_version < \"3.4\"", "typing ; python_version < \"3.5\"", "recommonmark (<1.0.0,>=0.6.0) ; extra == 'docs'", "sphinx (<3.0.0,>=2.3.0) ; extra == 'docs'", "sphinx-rtd-theme (<1.0.0,>=0.4.3) ; extra == 'docs'", "coverage ; extra == 'tests'", "pre-commit ; extra == 'tests'", "pytest (<5.4.0) ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "pytest-sugar ; extra == 'tests'", "tox ; extra == 'tests'", "vulture ; extra == 'tests'", "mock ; (python_version == \"2.7\") and extra == 'tests'", "black (==19.10b0) ; (python_version >= \"3.6\" and platform_python_implementation == \"CPython\") and extra == 'tests'"], "requires_python": "", "summary": "tartufo is a tool for scanning git repositories for secrets/passwords/high-entropy data", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><img alt=\"tartufo logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42d064d9e0bcc9fd84577e35abd35d42b4ea79a1/646f63732f736f757263652f5f7374617469632f696d672f7461727475666f2e706e67\"></h1>\n<p><img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/104a4a2c4a8115c7224350754e55f1d837ea56e7/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f676f64616464792f7461727475666f\">\n<img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b33d3b2c56bad7a706ecded8a9fdcaa3018dc582/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f676f64616464792f7461727475666f\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3ae953a8f6102847e94dd2e1388e80bf185d926/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7461727475666f\">\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea8aaf9c9fb66e0d812deafc2f8c3e549bf5a1e4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7461727475666f\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ce2976422f14b3ea866359999985fac414ec259/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7461727475666f\">\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62b68600966779f7d9c960f6c12f589e25f7e47a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7461727475666f\">\n<a href=\"https://tartufo.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41a48318c61ea667b8d13ed90ce92c963a68b8a4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7461727475666f2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><code>tartufo</code> searches through git repositories for secrets, digging deep into\ncommit history and branches. This is effective at finding secrets accidentally\ncommitted. <code>tartufo</code> also can be used by git pre-commit scripts to screen\nchanges for secrets before they are committed to the repository.</p>\n<p>This tool will go through the entire commit history of each branch, and check\neach diff from each commit, and check for secrets. This is both by regex and by\nentropy. For entropy checks, tartufo will evaluate the shannon entropy for both\nthe base64 char set and hexidecimal char set for every blob of text greater\nthan 20 characters comprised of those character sets in each diff. If at any\npoint a high entropy string &gt; 20 characters is detected, it will print to the\nscreen.</p>\n<h2>Example</h2>\n<p><img alt=\"Example Issue\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0de7326cdbc3f0fb049c380a3253f9f25b5fc1d6/646f63732f736f757263652f5f7374617469632f696d672f6578616d706c655f69737375652e706e67\"></p>\n<h2>Documentation</h2>\n<p>Our main documentation site is hosted by Read The Docs, at\n<a href=\"https://tartufo.readthedocs.io\" rel=\"nofollow\">https://tartufo.readthedocs.io</a>.</p>\n<h2>Usage</h2>\n<pre>Usage: tartufo <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>GIT_URL<span class=\"o\">]</span>\n\n  Find secrets hidden in the depths of git.\n\n  Tartufo will, by default, scan the entire <span class=\"nb\">history</span> of a git repository <span class=\"k\">for</span>\n  any text which looks like a secret, password, credential, etc. It can also\n  be made to work in pre-commit mode, <span class=\"k\">for</span> scanning blobs of text as a pre-\n  commit hook.\n\nOptions:\n  --json / --no-json              Output in JSON format.\n  --rules FILENAME                Path<span class=\"o\">(</span>s<span class=\"o\">)</span> to regex rules json list file<span class=\"o\">(</span>s<span class=\"o\">)</span>.\n  --default-regexes / --no-default-regexes\n                                  Whether to include the default regex list\n                                  when configuring search patterns. Only\n                                  applicable <span class=\"k\">if</span> --rules is also specified.\n                                  <span class=\"o\">[</span>default: --default-regexes<span class=\"o\">]</span>\n  --entropy / --no-entropy        Enable entropy checks. <span class=\"o\">[</span>default: True<span class=\"o\">]</span>\n  --regex / --no-regex            Enable high signal regexes checks. <span class=\"o\">[</span>default:\n                                  False<span class=\"o\">]</span>\n  --since-commit TEXT             Only scan from a given commit hash.\n  --max-depth INTEGER             The max commit depth to go back when\n                                  searching <span class=\"k\">for</span> secrets. <span class=\"o\">[</span>default: <span class=\"m\">1000000</span><span class=\"o\">]</span>\n  --branch TEXT                   Specify a branch name to scan only that\n                                  branch.\n  -i, --include-paths FILENAME    File with regular expressions <span class=\"o\">(</span>one per\n                                  line<span class=\"o\">)</span>, at least one of which must match a\n                                  Git object path in order <span class=\"k\">for</span> it to be\n                                  scanned<span class=\"p\">;</span> lines starting with <span class=\"s1\">'#'</span> are treated\n                                  as comments and are ignored. If empty or not\n                                  provided <span class=\"o\">(</span>default<span class=\"o\">)</span>, all Git object paths are\n                                  included unless otherwise excluded via the\n                                  --exclude-paths option.\n  -x, --exclude-paths FILENAME    File with regular expressions <span class=\"o\">(</span>one per\n                                  line<span class=\"o\">)</span>, none of which may match a Git object\n                                  path in order <span class=\"k\">for</span> it to be scanned<span class=\"p\">;</span> lines\n                                  starting with <span class=\"s1\">'#'</span> are treated as comments\n                                  and are ignored. If empty or not provided\n                                  <span class=\"o\">(</span>default<span class=\"o\">)</span>, no Git object paths are excluded\n                                  unless effectively excluded via the\n                                  --include-paths option.\n  --repo-path DIRECTORY           Path to <span class=\"nb\">local</span> repo clone. If provided,\n                                  git_url will not be used.\n  --cleanup / --no-cleanup        Clean up all temporary result files.\n                                  <span class=\"o\">[</span>default: False<span class=\"o\">]</span>\n  --pre-commit                    Scan staged files in <span class=\"nb\">local</span> repo clone.\n  --git-rules-repo TEXT           A file path, or git URL, pointing to a git\n                                  repository containing regex rules to be used\n                                  <span class=\"k\">for</span> scanning. By default, all .json files\n                                  will be loaded from the root of that\n                                  repository. --git-rules-files can be used to\n                                  override this behavior and load specific\n                                  files.\n  --git-rules-files TEXT          Used in conjunction with --git-rules-repo,\n                                  specify glob-style patterns <span class=\"k\">for</span> files from\n                                  which to load the regex rules. Can be\n                                  specified multiple times.\n  --config FILE                   Read configuration from specified file.\n                                  <span class=\"o\">[</span>default: pyproject.toml<span class=\"o\">]</span>\n  -h, --help                      Show this message and exit.\n</pre>\n<h2>Contributing</h2>\n<p>Please see <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a>.</p>\n<h2>Attributions</h2>\n<p>This project was inspired by and built off of the work done by Dylan Ayrey on\nthe <a href=\"https://github.com/dxa4481/truffleHog\" rel=\"nofollow\">truffleHog</a> project.</p>\n\n          </div>"}, "last_serial": 7070520, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f18ad3e0491a69161e1ee32450612ba8", "sha256": "8da72e8f7971e7f36b124b4896237b2cc7299fcd8a491839d003d571d7b3c02d"}, "downloads": -1, "filename": "tartufo-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f18ad3e0491a69161e1ee32450612ba8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15875, "upload_time": "2019-10-23T17:59:44", "upload_time_iso_8601": "2019-10-23T17:59:44.704382Z", "url": "https://files.pythonhosted.org/packages/b8/87/875eec7626f553b5804197252f455f2f0ac556652be48316062f858f62f9/tartufo-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac76c0c940a7f2a2294ea2aed0d51cc3", "sha256": "b5243394b26b0205d2f2dd5b5fd5b4364235e77b0396828d8e0eca1cd9d55dc3"}, "downloads": -1, "filename": "tartufo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ac76c0c940a7f2a2294ea2aed0d51cc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11699, "upload_time": "2019-10-23T17:59:46", "upload_time_iso_8601": "2019-10-23T17:59:46.840766Z", "url": "https://files.pythonhosted.org/packages/de/de/927bf15d6995a446c729c3135a219d91d322bf745878072f2a91eea4a2e0/tartufo-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "75f9c707758b998944519f665a075b5e", "sha256": "b43126652503ef46f70e85bc76cd92e83a89fb77a734bf903083200139c2969b"}, "downloads": -1, "filename": "tartufo-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75f9c707758b998944519f665a075b5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20145, "upload_time": "2019-10-23T19:56:53", "upload_time_iso_8601": "2019-10-23T19:56:53.811434Z", "url": "https://files.pythonhosted.org/packages/03/d2/d8f9f23dc5b8e696370f3115a40a322423bebb20645f3daede524f81980c/tartufo-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0e6ccb29e7d18bc7bdf903d0f3f7f3e", "sha256": "add4a0820282de7221aaac70aee9dbb1dddbe59d0a20b326a4113f6c3b4ecc2e"}, "downloads": -1, "filename": "tartufo-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f0e6ccb29e7d18bc7bdf903d0f3f7f3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16839, "upload_time": "2019-10-23T19:56:54", "upload_time_iso_8601": "2019-10-23T19:56:54.929886Z", "url": "https://files.pythonhosted.org/packages/f1/e7/d8cbb11df00261f19c0177c02e908351dd5101a496e29db666d4d8710012/tartufo-0.0.2.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f206b3e6798cced778fc29fe74a263a2", "sha256": "b745cfe155ad52c3927db023ee346e172d42ff6a68659cb1b822a74147a9c6a1"}, "downloads": -1, "filename": "tartufo-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f206b3e6798cced778fc29fe74a263a2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20922, "upload_time": "2019-11-19T18:05:56", "upload_time_iso_8601": "2019-11-19T18:05:56.598783Z", "url": "https://files.pythonhosted.org/packages/17/a0/bd0b119557ce2be0c5acae8ae7ac41c71ba1e6fdc922625c3b4cecf0bfc2/tartufo-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82d7c49224078a491f81b3c8c3f416c7", "sha256": "c145a4e328e4d7c50e3e98f228ed009e77c6b4d08c3c5244cc9b591eb226862c"}, "downloads": -1, "filename": "tartufo-1.0.2.tar.gz", "has_sig": false, "md5_digest": "82d7c49224078a491f81b3c8c3f416c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17441, "upload_time": "2019-11-19T18:05:57", "upload_time_iso_8601": "2019-11-19T18:05:57.901524Z", "url": "https://files.pythonhosted.org/packages/32/58/222eb3781d0782067583e7015c469a515544cd8b7f60cc6fac8d0683c9a0/tartufo-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8e8f784ccb4acfee35c81452a6f91dea", "sha256": "e3849ec8c77479d79d96447bec51b8df0f58af863d82c13f2fbef5cf2737e26e"}, "downloads": -1, "filename": "tartufo-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e8f784ccb4acfee35c81452a6f91dea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21858, "upload_time": "2019-11-27T18:40:21", "upload_time_iso_8601": "2019-11-27T18:40:21.330004Z", "url": "https://files.pythonhosted.org/packages/2c/df/2fceaf9c2635dcd36fbc95f030d0077744ba1c2417bc1b99f05ce1b30c6d/tartufo-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77d5943bec6ee03fe63ae414749e41a2", "sha256": "252060e5c6521c46e915e4010a6d8a7ecf5e05f443ae8bb0898e165f292cd847"}, "downloads": -1, "filename": "tartufo-1.1.0.tar.gz", "has_sig": false, "md5_digest": "77d5943bec6ee03fe63ae414749e41a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18440, "upload_time": "2019-11-27T18:40:22", "upload_time_iso_8601": "2019-11-27T18:40:22.731172Z", "url": "https://files.pythonhosted.org/packages/7c/f5/32f67bccae8337e6a1913a2cfe0f8c60d238f8b9f85c64c0bb7934c6839e/tartufo-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5089488b091902c90dea18957060cc8c", "sha256": "17728a857c4d4665c6794bc100d7e0054538533efc9edf1acd6e820c12abe925"}, "downloads": -1, "filename": "tartufo-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5089488b091902c90dea18957060cc8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21851, "upload_time": "2019-12-13T20:14:21", "upload_time_iso_8601": "2019-12-13T20:14:21.799580Z", "url": "https://files.pythonhosted.org/packages/19/61/f0dd06c9dffa3bda8034a03b9ac977effb7c122b86c9c3c02f07ea3a7b0b/tartufo-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdfd604ac401b4b3b7b0478783a63c58", "sha256": "b4eb41f60f9d322baa345e1c6fc1ed8d592ca08c64c88d5b8b9899f698eff8f8"}, "downloads": -1, "filename": "tartufo-1.1.1.tar.gz", "has_sig": false, "md5_digest": "fdfd604ac401b4b3b7b0478783a63c58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18495, "upload_time": "2019-12-13T20:14:23", "upload_time_iso_8601": "2019-12-13T20:14:23.185878Z", "url": "https://files.pythonhosted.org/packages/0f/68/2509a7b8f368684d7bded9a2af182c42303b991faa885cea99ab9cc5643a/tartufo-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ca0908b4530c32dc7c116ccfa0ad62f2", "sha256": "ad03aa64ed7907775e736ecb1215040874fce770c87fb12498266cfcd5b58da5"}, "downloads": -1, "filename": "tartufo-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca0908b4530c32dc7c116ccfa0ad62f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19900, "upload_time": "2020-04-21T19:05:07", "upload_time_iso_8601": "2020-04-21T19:05:07.530362Z", "url": "https://files.pythonhosted.org/packages/65/7d/4d8e65c25f4662bc4798c136a61e3b9552c3e686c12e6af555c4084b5e95/tartufo-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4e4fd6c06e2ac006456c049af3e429f", "sha256": "6e398a975317aa83343357dcfbff5bbee9ebcf96b4ca593fbfcfefd286b22702"}, "downloads": -1, "filename": "tartufo-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f4e4fd6c06e2ac006456c049af3e429f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14518, "upload_time": "2020-04-21T19:05:08", "upload_time_iso_8601": "2020-04-21T19:05:08.900163Z", "url": "https://files.pythonhosted.org/packages/eb/8a/c4299805abde544750a420be93149d797703cf0af6bc433467fedef86f27/tartufo-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca0908b4530c32dc7c116ccfa0ad62f2", "sha256": "ad03aa64ed7907775e736ecb1215040874fce770c87fb12498266cfcd5b58da5"}, "downloads": -1, "filename": "tartufo-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca0908b4530c32dc7c116ccfa0ad62f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19900, "upload_time": "2020-04-21T19:05:07", "upload_time_iso_8601": "2020-04-21T19:05:07.530362Z", "url": "https://files.pythonhosted.org/packages/65/7d/4d8e65c25f4662bc4798c136a61e3b9552c3e686c12e6af555c4084b5e95/tartufo-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4e4fd6c06e2ac006456c049af3e429f", "sha256": "6e398a975317aa83343357dcfbff5bbee9ebcf96b4ca593fbfcfefd286b22702"}, "downloads": -1, "filename": "tartufo-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f4e4fd6c06e2ac006456c049af3e429f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14518, "upload_time": "2020-04-21T19:05:08", "upload_time_iso_8601": "2020-04-21T19:05:08.900163Z", "url": "https://files.pythonhosted.org/packages/eb/8a/c4299805abde544750a420be93149d797703cf0af6bc433467fedef86f27/tartufo-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:51 2020"}