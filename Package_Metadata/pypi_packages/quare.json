{"info": {"author": "James Estevez", "author_email": "j@jstvz.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# quare\n\n[![pipeline status](https://gitlab.com/jstvz/quare/badges/master/pipeline.svg)](https://gitlab.com/jstvz/quare/commits/master)\n[![coverage report](https://gitlab.com/jstvz/quare/badges/master/coverage.svg)](https://gitlab.com/jstvz/quare/commits/master)\n[![PyPI - License](https://img.shields.io/pypi/l/quare.svg)](https://www.gnu.org/licenses/lgpl-3.0.en.html)\n![PyPI](https://img.shields.io/pypi/v/quare.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/quare.svg)\n![PyPI - Status](https://img.shields.io/pypi/status/quare.svg)\n\nInteract with Quip from the command line.\n\n![quare streaming messages](https://github.com/jstvz/quare/blob/master/docs/assets/quare.png?raw=true)\n\n## Introduction ##\nquare allows interaction with [Quip](https://quip.com) via the command line. While `quare` is in alpha, there are some features you may find useful:\n- Pipe the output of a command to a chat or document and format it as monospace.\n- Archive messages by piping them into a local file\n- Securely store authentication tokens for multiple Quip instances.\n\nThis tool is in its early stages of development, and is subject to change (or abandonment) at any time. Use at your own risk.\n\n## Installation ##\n\n```console\n$ pipx install quare\n```\n\n## Usage ##\n\n### Authentication ###\nStore a Quip API token (See: https://quip.com/dev/token):\n\n```console\n$ quare auth\nToken: long_token_string\nToken stored.\n```\nIf you have multiple Quip instances (like multiple Slack Workspaces), you can specify an alias for them. You can also pass your token directly to `auth`:\n\n```console\n$ quare msg auth --alias test_server --token 't1DJBQWBXHCYgh1=|2983928392|nYtRFIhV7nl4...'\n```\n\n#### Whoami ####\n\nTo see information about the logged in user:\n```console\n$ quare msg whoami\n\u250cDefault\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name         \u2502 Tests Testeri \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Email(s)     \u2502 t@testz.dev   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Quip User ID \u2502 mRLA6Zdn3PO   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n### Sending messages ###\nThe destination may be a document or chat:\n\n```console\n$ quare msg send --room room_id --content 'Hello everyone!'\n```\n\n#### Pipe content from `stdin` ####\n\nMessage content can be piped from `stdin`:\n```console\n$ uname -a | quare msg send --room room_id --content '-'\n```\n\nWhile Quip allows formatting messages using some markdown markup, it doesn't recognize markdown code blocks (\"\\`\\`\\`\"). To define a code block, use the `--monospace` option:\n\n```console\n$ dmesg | tail -n 5 | quare msg send --room room_id --content '-' --monospace\n```\n\n### Receiving messages ###\n\n#### Stream to stdout ####\nTo stream every message appearing in the Updates tab:\n\n```console\n$ quare msg stream\nStreaming updates... press Ctrl-C to exit.\n[Sun Jun 30 17:23:09 2019 | (Test Log) | @Tests Testeri] ok ok\n```\n\n#### Dump the content of a chat room ####\nTo get the last 5 messages in a chat room or document:\n```console\n$ quare msg get --room room_id --last 5\n[Sat Jun 29 03:19:09 2019 | @Tester Testeri] This is a monologue!\n[Sat Jun 29 16:00:12 2019 | @Tester Testeri] ok\n[Sat Jun 29 16:34:51 2019 | @Tester Testeri] I'm done!\n[Sun Jun 30 17:30:14 2019 | @Tester Testeri] \ud83c\udf2e\n[Sun Jun 30 17:30:27 2019 | @Tester Testeri] \ud83e\udd43\n```\n\nTo get the last 2 messages as JSON:\n```console\n$ quare msg get  -r \"IcTAAAtVxXb\" --last 2 --json\n[{\"author_id\": \"mRLA6Zdn3PO\", \"visible\": true, \"id\": \"IcderpEe8wG\", \"created_usec\": 1561849212672040, \"updated_usec\": 1561849212696571, \"text\": \"ok\", \"author_name\": \"Tester Testeri\"}, {\"author_id\": \"mRLA6Zdn3PO\", \"visible\": true, \"id\": \"IcNodg7n2Tx\", \"created_usec\": 1561851291612434, \"updated_usec\": 1561851291620308, \"text\": \"chat\", \"author_name\": \"Tester Testeri\"}]\n```\n\nTo dump the last 200 messages in a chat room into a text file:\n```console\n$ quare msg get --room room_id --last 200 > interesting_conversation.log\n```\n\nTo get all messages since a datetime:\n```console\n$ quare msg get --room room_id --since 2019-01-01T00:32:00Z > greppable_archive.log\n```\n\nThe `--since` option recognizes any date recognized by [dateparser](https://dateparser.readthedocs.io/en/latest/):\n```console\n$ quare msg get --room room_id --since 'Monday' > this_week.log\n$ quare msg get --room room_id --since '2 months ago' > this_quarter.log\n```\n\n### Editing documents ###\n\nTo append a markdown file to an existing document\n```console\n$ quare doc append --id xxxDoc_IDxxx --file /tmp/foo.md\n$ cat /tmp/foo.md | quare doc append --id xxxDoc_IDxxx --file -\n```\n\nTo append a markdown-format string to an existing document\n```console\n$ quare doc append --id xxxDoc_IDxxx --content '## Headline\\n\\n'\n```\n\n## Development ##\n\nThis work is licensed under the terms of the [LGPL-3.0](https://www.gnu.org/licenses/lgpl-3.0.en.html).\n### Contributions ###\nSee CONTRIBUTING.rst\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jstvz/quare", "keywords": "", "license": "LGPL-3.0+", "maintainer": "", "maintainer_email": "", "name": "quare", "package_url": "https://pypi.org/project/quare/", "platform": "", "project_url": "https://pypi.org/project/quare/", "project_urls": {"Homepage": "https://github.com/jstvz/quare", "Repository": "https://github.com/jstvz/quare"}, "release_url": "https://pypi.org/project/quare/0.2.4/", "requires_dist": ["Click (>=7.0,<8.0)", "colorama (>=0.4.1,<0.5.0)", "dateparser (>=0.7.1,<0.8.0)", "keyring (>=18.0,<19.0)", "terminaltables (>=3.1,<4.0)", "websocket-client (>=0.56.0,<0.57.0)"], "requires_python": ">=3.7,<4.0", "summary": "quare is a CLI client for Quip.", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>quare</h1>\n<p><a href=\"https://gitlab.com/jstvz/quare/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33da314d4cdfbd614cb419cc4a021ee785d3b77a/68747470733a2f2f6769746c61622e636f6d2f6a7374767a2f71756172652f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/jstvz/quare/commits/master\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fa08a11c34a3293b164971d04d0a5aca5a645f6/68747470733a2f2f6769746c61622e636f6d2f6a7374767a2f71756172652f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://www.gnu.org/licenses/lgpl-3.0.en.html\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a43bbca9f74a878dd538c3fd16fdb670d0e465b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f71756172652e737667\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec0739b321ed19fabb06d647dcf453ca235e53d0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f71756172652e737667\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ac947c608e6e7f6de8045df759331628e9cb735/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f71756172652e737667\">\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caefce075db4e35be65bf06489d73241565987fe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f71756172652e737667\"></p>\n<p>Interact with Quip from the command line.</p>\n<p><img alt=\"quare streaming messages\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f87d65e92cacd7ff8cb20c4197abcf90f0e3d47e/68747470733a2f2f6769746875622e636f6d2f6a7374767a2f71756172652f626c6f622f6d61737465722f646f63732f6173736574732f71756172652e706e673f7261773d74727565\"></p>\n<h2>Introduction</h2>\n<p>quare allows interaction with <a href=\"https://quip.com\" rel=\"nofollow\">Quip</a> via the command line. While <code>quare</code> is in alpha, there are some features you may find useful:</p>\n<ul>\n<li>Pipe the output of a command to a chat or document and format it as monospace.</li>\n<li>Archive messages by piping them into a local file</li>\n<li>Securely store authentication tokens for multiple Quip instances.</li>\n</ul>\n<p>This tool is in its early stages of development, and is subject to change (or abandonment) at any time. Use at your own risk.</p>\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pipx install quare\n</pre>\n<h2>Usage</h2>\n<h3>Authentication</h3>\n<p>Store a Quip API token (See: <a href=\"https://quip.com/dev/token\" rel=\"nofollow\">https://quip.com/dev/token</a>):</p>\n<pre><span class=\"gp\">$</span> quare auth\n<span class=\"go\">Token: long_token_string</span>\n<span class=\"go\">Token stored.</span>\n</pre>\n<p>If you have multiple Quip instances (like multiple Slack Workspaces), you can specify an alias for them. You can also pass your token directly to <code>auth</code>:</p>\n<pre><span class=\"gp\">$</span> quare msg auth --alias test_server --token <span class=\"s1\">'t1DJBQWBXHCYgh1=|2983928392|nYtRFIhV7nl4...'</span>\n</pre>\n<h4>Whoami</h4>\n<p>To see information about the logged in user:</p>\n<pre><span class=\"gp\">$</span> quare msg whoami\n<span class=\"go\">\u250cDefault\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510</span>\n<span class=\"go\">\u2502 Name         \u2502 Tests Testeri \u2502</span>\n<span class=\"go\">\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524</span>\n<span class=\"go\">\u2502 Email(s)     \u2502 t@testz.dev   \u2502</span>\n<span class=\"go\">\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524</span>\n<span class=\"go\">\u2502 Quip User ID \u2502 mRLA6Zdn3PO   \u2502</span>\n<span class=\"go\">\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518</span>\n</pre>\n<h3>Sending messages</h3>\n<p>The destination may be a document or chat:</p>\n<pre><span class=\"gp\">$</span> quare msg send --room room_id --content <span class=\"s1\">'Hello everyone!'</span>\n</pre>\n<h4>Pipe content from <code>stdin</code></h4>\n<p>Message content can be piped from <code>stdin</code>:</p>\n<pre><span class=\"gp\">$</span> uname -a <span class=\"p\">|</span> quare msg send --room room_id --content <span class=\"s1\">'-'</span>\n</pre>\n<p>While Quip allows formatting messages using some markdown markup, it doesn't recognize markdown code blocks (\"```\"). To define a code block, use the <code>--monospace</code> option:</p>\n<pre><span class=\"gp\">$</span> dmesg <span class=\"p\">|</span> tail -n <span class=\"m\">5</span> <span class=\"p\">|</span> quare msg send --room room_id --content <span class=\"s1\">'-'</span> --monospace\n</pre>\n<h3>Receiving messages</h3>\n<h4>Stream to stdout</h4>\n<p>To stream every message appearing in the Updates tab:</p>\n<pre><span class=\"gp\">$</span> quare msg stream\n<span class=\"go\">Streaming updates... press Ctrl-C to exit.</span>\n<span class=\"go\">[Sun Jun 30 17:23:09 2019 | (Test Log) | @Tests Testeri] ok ok</span>\n</pre>\n<h4>Dump the content of a chat room</h4>\n<p>To get the last 5 messages in a chat room or document:</p>\n<pre><span class=\"gp\">$</span> quare msg get --room room_id --last <span class=\"m\">5</span>\n<span class=\"go\">[Sat Jun 29 03:19:09 2019 | @Tester Testeri] This is a monologue!</span>\n<span class=\"go\">[Sat Jun 29 16:00:12 2019 | @Tester Testeri] ok</span>\n<span class=\"go\">[Sat Jun 29 16:34:51 2019 | @Tester Testeri] I'm done!</span>\n<span class=\"go\">[Sun Jun 30 17:30:14 2019 | @Tester Testeri] \ud83c\udf2e</span>\n<span class=\"go\">[Sun Jun 30 17:30:27 2019 | @Tester Testeri] \ud83e\udd43</span>\n</pre>\n<p>To get the last 2 messages as JSON:</p>\n<pre><span class=\"gp\">$</span> quare msg get  -r <span class=\"s2\">\"IcTAAAtVxXb\"</span> --last <span class=\"m\">2</span> --json\n<span class=\"go\">[{\"author_id\": \"mRLA6Zdn3PO\", \"visible\": true, \"id\": \"IcderpEe8wG\", \"created_usec\": 1561849212672040, \"updated_usec\": 1561849212696571, \"text\": \"ok\", \"author_name\": \"Tester Testeri\"}, {\"author_id\": \"mRLA6Zdn3PO\", \"visible\": true, \"id\": \"IcNodg7n2Tx\", \"created_usec\": 1561851291612434, \"updated_usec\": 1561851291620308, \"text\": \"chat\", \"author_name\": \"Tester Testeri\"}]</span>\n</pre>\n<p>To dump the last 200 messages in a chat room into a text file:</p>\n<pre><span class=\"gp\">$</span> quare msg get --room room_id --last <span class=\"m\">200</span> &gt; interesting_conversation.log\n</pre>\n<p>To get all messages since a datetime:</p>\n<pre><span class=\"gp\">$</span> quare msg get --room room_id --since <span class=\"m\">2019</span>-01-01T00:32:00Z &gt; greppable_archive.log\n</pre>\n<p>The <code>--since</code> option recognizes any date recognized by <a href=\"https://dateparser.readthedocs.io/en/latest/\" rel=\"nofollow\">dateparser</a>:</p>\n<pre><span class=\"gp\">$</span> quare msg get --room room_id --since <span class=\"s1\">'Monday'</span> &gt; this_week.log\n<span class=\"gp\">$</span> quare msg get --room room_id --since <span class=\"s1\">'2 months ago'</span> &gt; this_quarter.log\n</pre>\n<h3>Editing documents</h3>\n<p>To append a markdown file to an existing document</p>\n<pre><span class=\"gp\">$</span> quare doc append --id xxxDoc_IDxxx --file /tmp/foo.md\n<span class=\"gp\">$</span> cat /tmp/foo.md <span class=\"p\">|</span> quare doc append --id xxxDoc_IDxxx --file -\n</pre>\n<p>To append a markdown-format string to an existing document</p>\n<pre><span class=\"gp\">$</span> quare doc append --id xxxDoc_IDxxx --content <span class=\"s1\">'## Headline\\n\\n'</span>\n</pre>\n<h2>Development</h2>\n<p>This work is licensed under the terms of the <a href=\"https://www.gnu.org/licenses/lgpl-3.0.en.html\" rel=\"nofollow\">LGPL-3.0</a>.</p>\n<h3>Contributions</h3>\n<p>See CONTRIBUTING.rst</p>\n\n          </div>"}, "last_serial": 6840785, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f45b0136890e1d48f7a479bd917a7ee2", "sha256": "38aabf2258a799d39f3bbb981abfdca7f55b1baaab6e753661a992784b573383"}, "downloads": -1, "filename": "quare-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f45b0136890e1d48f7a479bd917a7ee2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 62089, "upload_time": "2019-07-01T04:14:37", "upload_time_iso_8601": "2019-07-01T04:14:37.101497Z", "url": "https://files.pythonhosted.org/packages/4c/fc/7c0fe8092268d50efab9c67e4ddbd771b02bfe7fe66b9781a141d0b6d9c0/quare-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70c1ee0615d61690a87bb8b63d08f724", "sha256": "56270957d577d25053d55813e6ae636964d40d1d14b8e229c00b68d3d50b3523"}, "downloads": -1, "filename": "quare-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70c1ee0615d61690a87bb8b63d08f724", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 18003, "upload_time": "2019-07-01T04:14:39", "upload_time_iso_8601": "2019-07-01T04:14:39.629590Z", "url": "https://files.pythonhosted.org/packages/7b/03/6f9b9823cfb5903b0aba4b0c9fc8c679fb65e7e5d7748d689b288aa87613/quare-0.1.0.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "07348dac363b096bd3afe4054e4ae34a", "sha256": "db6b071f8296b74388c5ca1aceab83e465ccea50ad67da76a5c2702a477bda20"}, "downloads": -1, "filename": "quare-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "07348dac363b096bd3afe4054e4ae34a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 22527, "upload_time": "2019-09-08T18:11:43", "upload_time_iso_8601": "2019-09-08T18:11:43.639606Z", "url": "https://files.pythonhosted.org/packages/dd/c1/658ddfa1bf4b453e7df435168e8df7dd4acccc754542747bfb70a16621dc/quare-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41797775ab8d5b26f63b9eed610ac9b4", "sha256": "b4bdd0c235b087b49f14e62c286b2c21a533dd99dcbefc710c236ce9b49ffbeb"}, "downloads": -1, "filename": "quare-0.2.3.tar.gz", "has_sig": false, "md5_digest": "41797775ab8d5b26f63b9eed610ac9b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 22021, "upload_time": "2019-09-08T18:11:44", "upload_time_iso_8601": "2019-09-08T18:11:44.787728Z", "url": "https://files.pythonhosted.org/packages/86/06/d3f21a7f76763fa7f4a56a5d48aaef6435a2b6ee34b9628fc4de9c7edace/quare-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "196cca3da5e2c8d22bdd3006893d5c6f", "sha256": "b61f7e53e3ecbc8d88dd631a81d6fabb72b2b474991d0c0b732c7f997922933c"}, "downloads": -1, "filename": "quare-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "196cca3da5e2c8d22bdd3006893d5c6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 22603, "upload_time": "2020-03-19T02:28:29", "upload_time_iso_8601": "2020-03-19T02:28:29.949774Z", "url": "https://files.pythonhosted.org/packages/ab/4f/34683793a528eb5d2a982f840604d3ea9c7fd6f5cb845402d8c0c02cf2c1/quare-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b51b7e14599fdc36410e2effc880ac7", "sha256": "1d571e7fcedb80d0e52bcd9806777840af27fb78233399dcbbc38ad158d7c880"}, "downloads": -1, "filename": "quare-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0b51b7e14599fdc36410e2effc880ac7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 22274, "upload_time": "2020-03-19T02:28:31", "upload_time_iso_8601": "2020-03-19T02:28:31.189293Z", "url": "https://files.pythonhosted.org/packages/3f/e7/82d0cd932e30d8c971ec3144f250484295723ef5fef5a10186e2fa13ccd3/quare-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "196cca3da5e2c8d22bdd3006893d5c6f", "sha256": "b61f7e53e3ecbc8d88dd631a81d6fabb72b2b474991d0c0b732c7f997922933c"}, "downloads": -1, "filename": "quare-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "196cca3da5e2c8d22bdd3006893d5c6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 22603, "upload_time": "2020-03-19T02:28:29", "upload_time_iso_8601": "2020-03-19T02:28:29.949774Z", "url": "https://files.pythonhosted.org/packages/ab/4f/34683793a528eb5d2a982f840604d3ea9c7fd6f5cb845402d8c0c02cf2c1/quare-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b51b7e14599fdc36410e2effc880ac7", "sha256": "1d571e7fcedb80d0e52bcd9806777840af27fb78233399dcbbc38ad158d7c880"}, "downloads": -1, "filename": "quare-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0b51b7e14599fdc36410e2effc880ac7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 22274, "upload_time": "2020-03-19T02:28:31", "upload_time_iso_8601": "2020-03-19T02:28:31.189293Z", "url": "https://files.pythonhosted.org/packages/3f/e7/82d0cd932e30d8c971ec3144f250484295723ef5fef5a10186e2fa13ccd3/quare-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:48 2020"}