{"info": {"author": "Andrea Stagi", "author_email": "stagi.andrea@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "pyphoton\n========\n\n\ud83d\uddfa Light Photon client written in Python\n\n|Latest Version| |codecov| |Build Status| |License: MIT|\n\nInstall\n-------\n\n.. code:: sh\n\n    pip install pyphoton\n\nUsage\n-----\n\nIf you need some code ready to use,\n`spike.py <https://github.com/astagi/pyphoton/blob/master/spike.py>`__\nis a good starting point\n\nExecute queries\n~~~~~~~~~~~~~~~\n\nPython Photon client allows you to make queries to Photon service\neasily.\n\n.. code:: py\n\n    from pyphoton import Photon\n\n\n    client = Photon()\n    location = client.query('berlin', limit=1)\n\n    print (location.city)\n    print (location.latitude)\n    print (location.longitude)\n\n``Photon`` object accepts two parameters:\n\n-  ``host``: the url where Photon instance is running (default\n   ``https://photon.komoot.de``)\n-  ``language``: the preferred language (default is ``en``)\n\nYou can pass the ``query`` method the following parameters along the\nquery string:\n\n-  ``limit``: limit number of results\n-  ``language``: force language in the query\n-  ``latitude`` and ``longitude``: use them to search with priority to a\n   geo position\n-  ``location_bias_scale``: use to search with location bias\n-  ``osm_tags``: a ``string`` or ``list`` containing `osm tags\n   filters <https://github.com/komoot/photon#filter-results-by-tags-and-values>`__\n-  ``bbox``: a ``string`` with comma-separated values or ``list``\n   containing `bounding box\n   coordinates <https://github.com/komoot/photon#filter-results-by-bounding-box>`__\n\n``Location`` object (or objects if you don't set limit=1) is generated\nfrom the json returned and contains all the information you need: name,\nstate, street, city, osm attributes, extent\\_from.latitude,\nextent\\_from.longitude, extent\\_to.latitude, extent\\_to.longitude ...\n\nReverse search\n~~~~~~~~~~~~~~\n\nPython Photon client allows you to make reverse search.\n\n.. code:: py\n\n    from pyphoton import Photon\n\n\n    client = Photon()\n    locations = client.reverse(latitude=52, longitude=10)\n\n    for location in locations:\n        print ('\ud83c\udf09 Location #{0}\\n{1}\\n'.format(location.osm_id, location))\n\nYou can pass to the ``reverse`` method the following parameters:\n\n-  ``latitude`` and ``longitude``: use them to search using a geo\n   position\n-  ``limit``: limit number of results\n\nDeal with errors\n~~~~~~~~~~~~~~~~\n\nIf there's an error in your query, a ``PhotonException`` will be raised\n\n.. code:: py\n\n    from pyphoton import Photon\n    from pyphoton.errors import PhotonException\n\n\n    client = Photon()\n    try:\n        location = client.query('', limit=1)\n    except PhotonException as ex:\n        print (ex)\n\nRun tests\n---------\n\n.. code:: sh\n\n    pip install -r requirements-dev.txt\n    make test\n\nWIP Features\n------------\n\n-  Method to fetch `latest\n   data <http://download1.graphhopper.com/public/>`__\n\n.. |Latest Version| image:: https://img.shields.io/pypi/v/pyphoton.svg\n   :target: https://pypi.python.org/pypi/pyphoton/\n.. |codecov| image:: https://codecov.io/gh/astagi/pyphoton/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/astagi/pyphoton\n.. |Build Status| image:: https://travis-ci.org/astagi/pyphoton.svg?branch=master\n   :target: https://travis-ci.org/astagi/pyphoton\n.. |License: MIT| image:: https://img.shields.io/badge/License-MIT-blue.svg\n   :target: https://github.com/astagi/pyphoton/blob/master/LICENSE\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyphoton", "package_url": "https://pypi.org/project/pyphoton/", "platform": "", "project_url": "https://pypi.org/project/pyphoton/", "project_urls": null, "release_url": "https://pypi.org/project/pyphoton/0.9.3/", "requires_dist": ["requests (==2.23.0)"], "requires_python": "", "summary": "Photon Python client", "version": "0.9.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\ud83d\uddfa Light Photon client written in Python</p>\n<p><a href=\"https://pypi.python.org/pypi/pyphoton/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6158ff2406fddf7485da20c658fa56ea430ecce3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707970686f746f6e2e737667\"></a> <a href=\"https://codecov.io/gh/astagi/pyphoton\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c3cc8664fb07cbef24de65508485585adac95ae/68747470733a2f2f636f6465636f762e696f2f67682f6173746167692f707970686f746f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://travis-ci.org/astagi/pyphoton\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90a1acc16bfe13eac00de4ad24b48d61ad43b782/68747470733a2f2f7472617669732d63692e6f72672f6173746167692f707970686f746f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/astagi/pyphoton/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install pyphoton\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>If you need some code ready to use,\n<a href=\"https://github.com/astagi/pyphoton/blob/master/spike.py\" rel=\"nofollow\">spike.py</a>\nis a good starting point</p>\n<div id=\"execute-queries\">\n<h3>Execute queries</h3>\n<p>Python Photon client allows you to make queries to Photon service\neasily.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyphoton</span> <span class=\"kn\">import</span> <span class=\"n\">Photon</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Photon</span><span class=\"p\">()</span>\n<span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">'berlin'</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">.</span><span class=\"n\">city</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">.</span><span class=\"n\">latitude</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">.</span><span class=\"n\">longitude</span><span class=\"p\">)</span>\n</pre>\n<p><tt>Photon</tt> object accepts two parameters:</p>\n<ul>\n<li><tt>host</tt>: the url where Photon instance is running (default\n<tt><span class=\"pre\">https://photon.komoot.de</span></tt>)</li>\n<li><tt>language</tt>: the preferred language (default is <tt>en</tt>)</li>\n</ul>\n<p>You can pass the <tt>query</tt> method the following parameters along the\nquery string:</p>\n<ul>\n<li><tt>limit</tt>: limit number of results</li>\n<li><tt>language</tt>: force language in the query</li>\n<li><tt>latitude</tt> and <tt>longitude</tt>: use them to search with priority to a\ngeo position</li>\n<li><tt>location_bias_scale</tt>: use to search with location bias</li>\n<li><tt>osm_tags</tt>: a <tt>string</tt> or <tt>list</tt> containing <a href=\"https://github.com/komoot/photon#filter-results-by-tags-and-values\" rel=\"nofollow\">osm tags\nfilters</a></li>\n<li><tt>bbox</tt>: a <tt>string</tt> with comma-separated values or <tt>list</tt>\ncontaining <a href=\"https://github.com/komoot/photon#filter-results-by-bounding-box\" rel=\"nofollow\">bounding box\ncoordinates</a></li>\n</ul>\n<p><tt>Location</tt> object (or objects if you don\u2019t set limit=1) is generated\nfrom the json returned and contains all the information you need: name,\nstate, street, city, osm attributes, extent_from.latitude,\nextent_from.longitude, extent_to.latitude, extent_to.longitude \u2026</p>\n</div>\n<div id=\"reverse-search\">\n<h3>Reverse search</h3>\n<p>Python Photon client allows you to make reverse search.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyphoton</span> <span class=\"kn\">import</span> <span class=\"n\">Photon</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Photon</span><span class=\"p\">()</span>\n<span class=\"n\">locations</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">location</span> <span class=\"ow\">in</span> <span class=\"n\">locations</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">'\ud83c\udf09 Location #</span><span class=\"si\">{0}</span><span class=\"se\">\\n</span><span class=\"si\">{1}</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">.</span><span class=\"n\">osm_id</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">))</span>\n</pre>\n<p>You can pass to the <tt>reverse</tt> method the following parameters:</p>\n<ul>\n<li><tt>latitude</tt> and <tt>longitude</tt>: use them to search using a geo\nposition</li>\n<li><tt>limit</tt>: limit number of results</li>\n</ul>\n</div>\n<div id=\"deal-with-errors\">\n<h3>Deal with errors</h3>\n<p>If there\u2019s an error in your query, a <tt>PhotonException</tt> will be raised</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyphoton</span> <span class=\"kn\">import</span> <span class=\"n\">Photon</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyphoton.errors</span> <span class=\"kn\">import</span> <span class=\"n\">PhotonException</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Photon</span><span class=\"p\">()</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">PhotonException</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"run-tests\">\n<h2>Run tests</h2>\n<pre>pip install -r requirements-dev.txt\nmake <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"wip-features\">\n<h2>WIP Features</h2>\n<ul>\n<li>Method to fetch <a href=\"http://download1.graphhopper.com/public/\" rel=\"nofollow\">latest\ndata</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6705403, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "3d4567d8a5a790a5d4718985056dc057", "sha256": "21a4d74e47670373a6bd2ea81c66c2a4c6628ad61a34be8f31f2d40ddf71f1fc"}, "downloads": -1, "filename": "pyphoton-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3d4567d8a5a790a5d4718985056dc057", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5565, "upload_time": "2020-02-26T10:09:23", "upload_time_iso_8601": "2020-02-26T10:09:23.858461Z", "url": "https://files.pythonhosted.org/packages/64/7c/f25d81501bbd64679b08783db30b19414279bc74842f794d064a42884b30/pyphoton-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "870e2594a504f4319ab8ad98504b4930", "sha256": "2b528519c25ce147eda1d2cd731ff3838fcb9ca8ac23a79093b164c56b980d83"}, "downloads": -1, "filename": "pyphoton-0.9.0.tar.gz", "has_sig": false, "md5_digest": "870e2594a504f4319ab8ad98504b4930", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3595, "upload_time": "2020-02-26T10:09:26", "upload_time_iso_8601": "2020-02-26T10:09:26.083021Z", "url": "https://files.pythonhosted.org/packages/dc/2f/4e7ec67516e7f16e960f7d4a254d764b2cbc277286623162ebabcb7dc763/pyphoton-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "e560e7bd253f66b2e0754057d99e60f3", "sha256": "31b96b08d2c9552e08092f5e056c60aeb4b26e66b731ebf479d7363925703dc4"}, "downloads": -1, "filename": "pyphoton-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e560e7bd253f66b2e0754057d99e60f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5738, "upload_time": "2020-02-26T16:04:55", "upload_time_iso_8601": "2020-02-26T16:04:55.874768Z", "url": "https://files.pythonhosted.org/packages/34/68/d0ba3ee71e184484740a2a3025cc4cb8ac5da2116c6ddf48f9d28ae8f42d/pyphoton-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8713b803abf1e08217039f47f0cbad00", "sha256": "77bc194d840fd811448ed4c908223a66d695dac2c5dcdaa08e37c425f8d616d5"}, "downloads": -1, "filename": "pyphoton-0.9.1.tar.gz", "has_sig": false, "md5_digest": "8713b803abf1e08217039f47f0cbad00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3782, "upload_time": "2020-02-26T16:04:57", "upload_time_iso_8601": "2020-02-26T16:04:57.642778Z", "url": "https://files.pythonhosted.org/packages/03/3e/dcc5fc0890d24e041db00b1ae83263bcfc3858d7a48f06e101ff324ec8e5/pyphoton-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "706796234f424d00adadd44af2108fae", "sha256": "ea61717fe6f3eae2352351fc8013ffb5d7673aef16a906303514e96881803216"}, "downloads": -1, "filename": "pyphoton-0.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "706796234f424d00adadd44af2108fae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6268, "upload_time": "2020-02-26T16:06:03", "upload_time_iso_8601": "2020-02-26T16:06:03.070651Z", "url": "https://files.pythonhosted.org/packages/be/cf/3f37eb6a8c531261d6d813f8a21c327cf3811724605ffe2c903a744ec1bf/pyphoton-0.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd3bdbc34562132b92df46bbfe822b22", "sha256": "96d1177d8496c1ce34733110c9d5d18157fb19b8c320a02e5058c538354560cb"}, "downloads": -1, "filename": "pyphoton-0.9.2.tar.gz", "has_sig": false, "md5_digest": "bd3bdbc34562132b92df46bbfe822b22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4103, "upload_time": "2020-02-26T16:06:04", "upload_time_iso_8601": "2020-02-26T16:06:04.533729Z", "url": "https://files.pythonhosted.org/packages/60/17/10614797a954d2f561ff0d2088f877c12fd36a574dc1c4cb3e459425f61a/pyphoton-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "9843345ac6e61376881d70bde0b536d8", "sha256": "ddb493cf849a873145290dd71f3fb7cd34f7ef97e7e39c8ffee95ac72f84aa1a"}, "downloads": -1, "filename": "pyphoton-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9843345ac6e61376881d70bde0b536d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6473, "upload_time": "2020-02-26T18:31:37", "upload_time_iso_8601": "2020-02-26T18:31:37.662453Z", "url": "https://files.pythonhosted.org/packages/67/27/01a8e2914e8835eb43ae8cca628a391d3aef59bc099d138d5479f76ba3ce/pyphoton-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "858d7a03f36b0f0b20af80736145d2f4", "sha256": "4e8950338a9d2edcd8c3de3741da772c5df312c6e522bf6b8d4fbd9bbb71c5d3"}, "downloads": -1, "filename": "pyphoton-0.9.3.tar.gz", "has_sig": false, "md5_digest": "858d7a03f36b0f0b20af80736145d2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4233, "upload_time": "2020-02-26T18:31:39", "upload_time_iso_8601": "2020-02-26T18:31:39.263641Z", "url": "https://files.pythonhosted.org/packages/d7/35/e13f6688139966abbc667c5ee595e8a1e31f11f9b8315b65424e5635450d/pyphoton-0.9.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9843345ac6e61376881d70bde0b536d8", "sha256": "ddb493cf849a873145290dd71f3fb7cd34f7ef97e7e39c8ffee95ac72f84aa1a"}, "downloads": -1, "filename": "pyphoton-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9843345ac6e61376881d70bde0b536d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6473, "upload_time": "2020-02-26T18:31:37", "upload_time_iso_8601": "2020-02-26T18:31:37.662453Z", "url": "https://files.pythonhosted.org/packages/67/27/01a8e2914e8835eb43ae8cca628a391d3aef59bc099d138d5479f76ba3ce/pyphoton-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "858d7a03f36b0f0b20af80736145d2f4", "sha256": "4e8950338a9d2edcd8c3de3741da772c5df312c6e522bf6b8d4fbd9bbb71c5d3"}, "downloads": -1, "filename": "pyphoton-0.9.3.tar.gz", "has_sig": false, "md5_digest": "858d7a03f36b0f0b20af80736145d2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4233, "upload_time": "2020-02-26T18:31:39", "upload_time_iso_8601": "2020-02-26T18:31:39.263641Z", "url": "https://files.pythonhosted.org/packages/d7/35/e13f6688139966abbc667c5ee595e8a1e31f11f9b8315b65424e5635450d/pyphoton-0.9.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:38 2020"}