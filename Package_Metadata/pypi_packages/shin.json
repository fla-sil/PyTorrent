{"info": {"author": "Maurice Berk", "author_email": "maurice@mauriceberk.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# shin\n\nA Python implementation of Shin's method [[1](#1), [2](#2)] for calculating implied probabilities from bookmaker odds.\n\nProbabilities calculated in this way have been shown to be more accurate than those obtained by the standard approach\nof dividing the inverse odds by the booksum [[3](#3)].\n\n# Installation\n\nRequires Python 3.5 or above.\n\n```\npip install shin\n```\n\n# Usage\n\n## Three or more outcomes\n\n```python\nimport shin\n\nshin.calculate_implied_probabilities([2.6, 2.4, 4.3])\n```\n\n```\n{'implied_probabilities': [0.37299406033208965,\n  0.4047794109200184,\n  0.2222265287474275],\n 'iterations': 425,\n 'delta': 9.667822098435863e-13,\n 'z': 0.01694251276407055}\n```\n\nThe returned `dict` contains the following fields:\n\n* `implied_probablities`\n* `iterations` - with three or more outcomes, Shin's method uses an iterative procedure. Compare this value to the\n`max_iterations` argument (default = `1000`) to check for failed convergence\n* `delta` - the final change in `z` (see below) for the final iteration. Compare with the `convergence_threshold`\nargument (default = `1e-12`) to assess convergence\n* `z` - the estimated proportion of theoretical betting volume coming from insider traders\n\n## Two outcomes \n\n```python\nimport shin\n\nshin.calculate_implied_probabilities([1.5, 2.74])\n```\n\n```\n{'implied_probabilities': [0.6508515815085157, 0.3491484184914841],\n 'iterations': 0,\n 'delta': 0,\n 'z': 0.03172728540646625}\n```\n\nWhen there are only two outcomes, `z` can be calculated analytically [[3](#3)]. In this case, the `iterations` and\n`delta` fields of the returned `dict` are `0` to reflect this.\n\nNote that with two outcomes, Shin's method is equivalent to the Additive Method of [[4](#4)].  \n\n# References\n\n<a id=\"1\">[1]</a> \n[H. S. Shin, \u201cPrices of State Contingent Claims with Insider\ntraders, and the Favorite-Longshot Bias\u201d. The Economic\nJournal, 1992, 102, pp. 426-435.](https://doi.org/10.2307/2234526)\n\n<a id=\"2\">[2]</a> \n[H. S. Shin, \u201cMeasuring the Incidence of Insider Trading in a\nMarket for State-Contingent Claims\u201d. The Economic Journal,\n1993, 103(420), pp. 1141-1153.](https://doi.org/10.2307/2234240)\n\n<a id=\"3\">[3]</a>\n[E. \u0160trumbelj, \"On determining probability forecasts from betting odds\".\nInternational Journal of Forecasting, 2014, Volume 30, Issue 4,\npp. 934-943.](https://doi.org/10.1016/j.ijforecast.2014.02.008)\n\n<a id=\"3\">[4]</a>\n[S. Clarke, S. Kovalchik, M. Ingram, \"Adjusting bookmaker\u2019s odds to allow for\noverround\". American Journal of Sports Science, 2017, Volume 5, Issue 6,\npp. 45-49.](https://doi.org/10.11648/j.ajss.20170506.12)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mberk/shin", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "shin", "package_url": "https://pypi.org/project/shin/", "platform": "", "project_url": "https://pypi.org/project/shin/", "project_urls": {"Homepage": "https://github.com/mberk/shin"}, "release_url": "https://pypi.org/project/shin/0.0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Python implementation of Shin's method for calculating implied probabilities from bookmaker odds", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>shin</h1>\n<p>A Python implementation of Shin's method [<a href=\"#1\" rel=\"nofollow\">1</a>, <a href=\"#2\" rel=\"nofollow\">2</a>] for calculating implied probabilities from bookmaker odds.</p>\n<p>Probabilities calculated in this way have been shown to be more accurate than those obtained by the standard approach\nof dividing the inverse odds by the booksum [<a href=\"#3\" rel=\"nofollow\">3</a>].</p>\n<h1>Installation</h1>\n<p>Requires Python 3.5 or above.</p>\n<pre><code>pip install shin\n</code></pre>\n<h1>Usage</h1>\n<h2>Three or more outcomes</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">shin</span>\n\n<span class=\"n\">shin</span><span class=\"o\">.</span><span class=\"n\">calculate_implied_probabilities</span><span class=\"p\">([</span><span class=\"mf\">2.6</span><span class=\"p\">,</span> <span class=\"mf\">2.4</span><span class=\"p\">,</span> <span class=\"mf\">4.3</span><span class=\"p\">])</span>\n</pre>\n<pre><code>{'implied_probabilities': [0.37299406033208965,\n  0.4047794109200184,\n  0.2222265287474275],\n 'iterations': 425,\n 'delta': 9.667822098435863e-13,\n 'z': 0.01694251276407055}\n</code></pre>\n<p>The returned <code>dict</code> contains the following fields:</p>\n<ul>\n<li><code>implied_probablities</code></li>\n<li><code>iterations</code> - with three or more outcomes, Shin's method uses an iterative procedure. Compare this value to the\n<code>max_iterations</code> argument (default = <code>1000</code>) to check for failed convergence</li>\n<li><code>delta</code> - the final change in <code>z</code> (see below) for the final iteration. Compare with the <code>convergence_threshold</code>\nargument (default = <code>1e-12</code>) to assess convergence</li>\n<li><code>z</code> - the estimated proportion of theoretical betting volume coming from insider traders</li>\n</ul>\n<h2>Two outcomes</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">shin</span>\n\n<span class=\"n\">shin</span><span class=\"o\">.</span><span class=\"n\">calculate_implied_probabilities</span><span class=\"p\">([</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">2.74</span><span class=\"p\">])</span>\n</pre>\n<pre><code>{'implied_probabilities': [0.6508515815085157, 0.3491484184914841],\n 'iterations': 0,\n 'delta': 0,\n 'z': 0.03172728540646625}\n</code></pre>\n<p>When there are only two outcomes, <code>z</code> can be calculated analytically [<a href=\"#3\" rel=\"nofollow\">3</a>]. In this case, the <code>iterations</code> and\n<code>delta</code> fields of the returned <code>dict</code> are <code>0</code> to reflect this.</p>\n<p>Note that with two outcomes, Shin's method is equivalent to the Additive Method of [<a href=\"#4\" rel=\"nofollow\">4</a>].</p>\n<h1>References</h1>\n<p><a id=\"1\">[1]</a>\n<a href=\"https://doi.org/10.2307/2234526\" rel=\"nofollow\">H. S. Shin, \u201cPrices of State Contingent Claims with Insider\ntraders, and the Favorite-Longshot Bias\u201d. The Economic\nJournal, 1992, 102, pp. 426-435.</a></p>\n<p><a id=\"2\">[2]</a>\n<a href=\"https://doi.org/10.2307/2234240\" rel=\"nofollow\">H. S. Shin, \u201cMeasuring the Incidence of Insider Trading in a\nMarket for State-Contingent Claims\u201d. The Economic Journal,\n1993, 103(420), pp. 1141-1153.</a></p>\n<p><a id=\"3\">[3]</a>\n<a href=\"https://doi.org/10.1016/j.ijforecast.2014.02.008\" rel=\"nofollow\">E. \u0160trumbelj, \"On determining probability forecasts from betting odds\".\nInternational Journal of Forecasting, 2014, Volume 30, Issue 4,\npp. 934-943.</a></p>\n<p><a id=\"3\">[4]</a>\n<a href=\"https://doi.org/10.11648/j.ajss.20170506.12\" rel=\"nofollow\">S. Clarke, S. Kovalchik, M. Ingram, \"Adjusting bookmaker\u2019s odds to allow for\noverround\". American Journal of Sports Science, 2017, Volume 5, Issue 6,\npp. 45-49.</a></p>\n\n          </div>"}, "last_serial": 7058597, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c727161ab822cc72904ed96fbb7abc0f", "sha256": "b5e23e8681c44913f159daf7632052e8a86e3134b18cac48d2aeb8efa59c84f5"}, "downloads": -1, "filename": "shin-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c727161ab822cc72904ed96fbb7abc0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3462, "upload_time": "2020-03-24T11:51:27", "upload_time_iso_8601": "2020-03-24T11:51:27.247691Z", "url": "https://files.pythonhosted.org/packages/b0/51/e0f4da28cc45c39684deeffe198a37bf3a58ca6f3154e8118f7e46916fa7/shin-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d28a491238e0f35dc4d26e7e8781b062", "sha256": "82e0be0498d0a7080098fe0a639b67ad9d06d4d1a7ff7f6b4427dbc53d202d03"}, "downloads": -1, "filename": "shin-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d28a491238e0f35dc4d26e7e8781b062", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2531, "upload_time": "2020-03-24T11:51:29", "upload_time_iso_8601": "2020-03-24T11:51:29.584233Z", "url": "https://files.pythonhosted.org/packages/5e/97/a138c27127c89bd1d49b38892d4a1c8865d04aa00a3f4b0a7ead647e7df5/shin-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62dc9533fea06109f4b38f4eeccffabe", "sha256": "a64b0583f4a55a31bfb5de4f467d4cc3a1b1cf06472916846aeae14af7d63ee7"}, "downloads": -1, "filename": "shin-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62dc9533fea06109f4b38f4eeccffabe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3869, "upload_time": "2020-04-20T09:01:19", "upload_time_iso_8601": "2020-04-20T09:01:19.992098Z", "url": "https://files.pythonhosted.org/packages/b8/39/d0cb8bd1a2c197476cdc1cc17bd48af9041c4543600e5f9a8c12cd376cbe/shin-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46365aa49995f55d4797841cef4a6296", "sha256": "986db17fbe6cedb75b4f6da0fcd28c127fc5eb6677b28bfd31aac569248a1ddf"}, "downloads": -1, "filename": "shin-0.0.2.tar.gz", "has_sig": false, "md5_digest": "46365aa49995f55d4797841cef4a6296", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3069, "upload_time": "2020-04-20T09:01:21", "upload_time_iso_8601": "2020-04-20T09:01:21.350196Z", "url": "https://files.pythonhosted.org/packages/de/77/61c64af2eba8840274feab1cc433901415d2b3df3613a83b404a610d5c76/shin-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62dc9533fea06109f4b38f4eeccffabe", "sha256": "a64b0583f4a55a31bfb5de4f467d4cc3a1b1cf06472916846aeae14af7d63ee7"}, "downloads": -1, "filename": "shin-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62dc9533fea06109f4b38f4eeccffabe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3869, "upload_time": "2020-04-20T09:01:19", "upload_time_iso_8601": "2020-04-20T09:01:19.992098Z", "url": "https://files.pythonhosted.org/packages/b8/39/d0cb8bd1a2c197476cdc1cc17bd48af9041c4543600e5f9a8c12cd376cbe/shin-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46365aa49995f55d4797841cef4a6296", "sha256": "986db17fbe6cedb75b4f6da0fcd28c127fc5eb6677b28bfd31aac569248a1ddf"}, "downloads": -1, "filename": "shin-0.0.2.tar.gz", "has_sig": false, "md5_digest": "46365aa49995f55d4797841cef4a6296", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3069, "upload_time": "2020-04-20T09:01:21", "upload_time_iso_8601": "2020-04-20T09:01:21.350196Z", "url": "https://files.pythonhosted.org/packages/de/77/61c64af2eba8840274feab1cc433901415d2b3df3613a83b404a610d5c76/shin-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:06 2020"}