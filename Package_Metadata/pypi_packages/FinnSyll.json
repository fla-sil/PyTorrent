{"info": {"author": "Naomi Tachikawa Shapiro", "author_email": "coder@tsnaomi.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Scientific/Engineering"], "description": ".. image:: https://travis-ci.org/tsnaomi/finnsyll.svg?branch=master\n    :target: https://travis-ci.org/tsnaomi/finnsyll\n\nFinnSyll\n********\n\nFinnSyll is a Python library that syllabifies words according to Finnish syllabification principles.\nIt is also equipped with a Finnish compound splitter. \nMore details/docs to come.\n\nInstallation\n============\n::\n\n        $ pip install FinnSyll\n\nBasic usage\n===========\n\nFirst, instantiate a ``FinnSyll`` object. ::\n\n        >>> from finnsyll import FinnSyll\n        >>> f = FinnSyll()\n\nTo syllabify: ::\n\n        >>> f.syllabify('runoja')\n        ['ru.no.ja']  # internal syllable boundaries are indicated with '.'\n\nTo segment compounds: ::\n\n        >>> f.split('sosiaalidemokraattien')\n        'sosiaali=demokraattien'  # internal word boundaries are indicated with '='\n\nOptional arguments\n==================\n\nThe syllabifier can be customized along two different parameters: variation and compound splitting.  \n\nvariation\n---------\n\nInstantiating a ``FinnSyll`` object with ``variation=True`` (default) will allow the syllabifier to return multiple syllabifications if variation is predicted. When ``variation=True``, the syllabifier will return a list. Setting ``variation`` to ``False`` will cause the syllabifier to return a string containing the first predicted syllabification. \n\n*Variation*: ::\n\n        >>> f = FinnSyll(variation=True) \n        >>> f.syllabify('runoja')\n        ['ru.no.ja']\n        >>> f.syllabify('vapaus')\n        ['va.pa.us', 'va.paus']\n\n*No variation*: ::\n\n        >>> f = FinnSyll(variation=False)\n        >>> f.syllabify('runoja')\n        'ru.no.ja'\n        >>> f.syllabify('vapaus')\n        'va.pa.us'\n\nsplit_compounds\n---------------\n\nWhen instantiating a ``FinnSyll`` object with ``split_compounds=True`` (default), the syllabifier will first attempt to split the input into constituent words before syllabifying it. This forces the syllabifier to insert a syllable boundary in between identified constituent words. The syllabifier will skip this step if ``split_compounds`` is set to ``False``.\n\n*Compound splitting*: ::\n\n        >>> f = FinnSyll(split_compounds=True) \n        >>> f.syllabify('rahoituserien')  # rahoitus=erien\n        ['ra.hoi.tus.e.ri.en']\n\n*No compound splitting*: ::\n\n        >>> f = FinnSyll(split_compounds=False) \n        >>> f.syllabify('rahoituserien')\n        ['ra.hoi.tu.se.ri.en']  # incorrect  \n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tsnaomi/finnsyll", "keywords": "Finnish syllabifier compound segmenter", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "FinnSyll", "package_url": "https://pypi.org/project/FinnSyll/", "platform": "", "project_url": "https://pypi.org/project/FinnSyll/", "project_urls": {"Homepage": "https://github.com/tsnaomi/finnsyll"}, "release_url": "https://pypi.org/project/FinnSyll/2.0.0/", "requires_dist": ["morfessor"], "requires_python": "", "summary": "Finnish syllabifier and compound segmenter", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/tsnaomi/finnsyll\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/tsnaomi/finnsyll.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01ad4d11bcfd79e19ce0c3ec9cdbc5d0b98545c0/68747470733a2f2f7472617669732d63692e6f72672f74736e616f6d692f66696e6e73796c6c2e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"finnsyll\">\n<h2>FinnSyll</h2>\n<p>FinnSyll is a Python library that syllabifies words according to Finnish syllabification principles.\nIt is also equipped with a Finnish compound splitter.\nMore details/docs to come.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install FinnSyll\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h3>Basic usage</h3>\n<p>First, instantiate a <tt>FinnSyll</tt> object.</p>\n<pre>&gt;&gt;&gt; from finnsyll import FinnSyll\n&gt;&gt;&gt; f = FinnSyll()\n</pre>\n<p>To syllabify:</p>\n<pre>&gt;&gt;&gt; f.syllabify('runoja')\n['ru.no.ja']  # internal syllable boundaries are indicated with '.'\n</pre>\n<p>To segment compounds:</p>\n<pre>&gt;&gt;&gt; f.split('sosiaalidemokraattien')\n'sosiaali=demokraattien'  # internal word boundaries are indicated with '='\n</pre>\n</div>\n<div id=\"optional-arguments\">\n<h3>Optional arguments</h3>\n<p>The syllabifier can be customized along two different parameters: variation and compound splitting.</p>\n<div id=\"variation\">\n<h4>variation</h4>\n<p>Instantiating a <tt>FinnSyll</tt> object with <tt>variation=True</tt> (default) will allow the syllabifier to return multiple syllabifications if variation is predicted. When <tt>variation=True</tt>, the syllabifier will return a list. Setting <tt>variation</tt> to <tt>False</tt> will cause the syllabifier to return a string containing the first predicted syllabification.</p>\n<p><em>Variation</em>:</p>\n<pre>&gt;&gt;&gt; f = FinnSyll(variation=True)\n&gt;&gt;&gt; f.syllabify('runoja')\n['ru.no.ja']\n&gt;&gt;&gt; f.syllabify('vapaus')\n['va.pa.us', 'va.paus']\n</pre>\n<p><em>No variation</em>:</p>\n<pre>&gt;&gt;&gt; f = FinnSyll(variation=False)\n&gt;&gt;&gt; f.syllabify('runoja')\n'ru.no.ja'\n&gt;&gt;&gt; f.syllabify('vapaus')\n'va.pa.us'\n</pre>\n</div>\n<div id=\"split-compounds\">\n<h4>split_compounds</h4>\n<p>When instantiating a <tt>FinnSyll</tt> object with <tt>split_compounds=True</tt> (default), the syllabifier will first attempt to split the input into constituent words before syllabifying it. This forces the syllabifier to insert a syllable boundary in between identified constituent words. The syllabifier will skip this step if <tt>split_compounds</tt> is set to <tt>False</tt>.</p>\n<p><em>Compound splitting</em>:</p>\n<pre>&gt;&gt;&gt; f = FinnSyll(split_compounds=True)\n&gt;&gt;&gt; f.syllabify('rahoituserien')  # rahoitus=erien\n['ra.hoi.tus.e.ri.en']\n</pre>\n<p><em>No compound splitting</em>:</p>\n<pre>&gt;&gt;&gt; f = FinnSyll(split_compounds=False)\n&gt;&gt;&gt; f.syllabify('rahoituserien')\n['ra.hoi.tu.se.ri.en']  # incorrect\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2852565, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "400151c94fb6219e060b98b156d6573c", "sha256": "eb2e99f0d6202dd97651dc9a89ab57996cd04dcd260f0021f26a231abc940ac4"}, "downloads": -1, "filename": "FinnSyll-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "400151c94fb6219e060b98b156d6573c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 830951, "upload_time": "2016-09-24T17:05:48", "upload_time_iso_8601": "2016-09-24T17:05:48.835458Z", "url": "https://files.pythonhosted.org/packages/3d/1d/8846f9261181de7e3445ca4d344a25ddc0e3e7fc1c790d51bf6df1cc1578/FinnSyll-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2881e11a3fe6f1078eefdaf173c2ec67", "sha256": "3598b7cc7c8d1a3a0414570401e89014c33e7f44c5007a543f53370e46b7475d"}, "downloads": -1, "filename": "FinnSyll-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2881e11a3fe6f1078eefdaf173c2ec67", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 871375, "upload_time": "2016-12-22T10:15:30", "upload_time_iso_8601": "2016-12-22T10:15:30.669361Z", "url": "https://files.pythonhosted.org/packages/c8/7d/f18454c2bc056e4640771f8b1d2b53339d49d875e892b64ecfe2106224ae/FinnSyll-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7c78b4cd1fdfe449e7c4e759de72fd71", "sha256": "44702508f3790f6a89c741be5a378c602822c8a9aa5579bae9b76f1dad5c2d8d"}, "downloads": -1, "filename": "FinnSyll-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7c78b4cd1fdfe449e7c4e759de72fd71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 871384, "upload_time": "2016-12-22T11:03:16", "upload_time_iso_8601": "2016-12-22T11:03:16.815330Z", "url": "https://files.pythonhosted.org/packages/89/34/5b9b63e942911b0255f52ea575d564da0eb236c3990032c9980e843b2bdd/FinnSyll-1.0.2-py2.py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5ca27d41ba94258e147dc8c13503ff7b", "sha256": "d177d14739c42edc6755899de667888bf88fccdfd767704b84150cd8a2a9100d"}, "downloads": -1, "filename": "FinnSyll-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ca27d41ba94258e147dc8c13503ff7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 871385, "upload_time": "2016-12-22T23:05:29", "upload_time_iso_8601": "2016-12-22T23:05:29.105773Z", "url": "https://files.pythonhosted.org/packages/e3/d6/047897c4c64a74fb88b86d9ef8b794bcc9826a7d3488f971eece97ee799e/FinnSyll-1.0.3-py2.py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "237bbae5a706885f28864e363ba57562", "sha256": "364df4c6276c95d6327b169724c6d87778d310059ca82f5996577a63a996a95e"}, "downloads": -1, "filename": "FinnSyll-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "237bbae5a706885f28864e363ba57562", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 884474, "upload_time": "2017-05-04T23:03:37", "upload_time_iso_8601": "2017-05-04T23:03:37.685742Z", "url": "https://files.pythonhosted.org/packages/93/a9/929b873616be5ec218bf33a3fde332f86aa6a61d306557c8f5a1549a6784/FinnSyll-2.0.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "237bbae5a706885f28864e363ba57562", "sha256": "364df4c6276c95d6327b169724c6d87778d310059ca82f5996577a63a996a95e"}, "downloads": -1, "filename": "FinnSyll-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "237bbae5a706885f28864e363ba57562", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 884474, "upload_time": "2017-05-04T23:03:37", "upload_time_iso_8601": "2017-05-04T23:03:37.685742Z", "url": "https://files.pythonhosted.org/packages/93/a9/929b873616be5ec218bf33a3fde332f86aa6a61d306557c8f5a1549a6784/FinnSyll-2.0.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:20 2020"}