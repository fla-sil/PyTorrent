{"info": {"author": "Rustam Krikbayev", "author_email": "rkrikbaev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PythonEcometClient\n\n` pip install PyFaceplateClient==0.0.1\n  pip install websockets=>8.1`\n\nfrom pyfaceplateclient import Client\n\n## 1 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\n`host=\"host_ip_address\"\n port=\"port\"\n login=\"login\" \n password=\"password\"`\n\n` a=ecomet.EcometClient(host, port, login, password)`\n\n## 2 \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430 \u0430\u0440\u0445\u0438\u0432\u043e\u0432\n\n` archives = a.get_names()`\n\n` print(archives)`\n\n## 3 \u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u0430 \u0430\u0440\u0445\u0438\u0432\u043e\u0432 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u0434\u0430\u0442\u043e\u0439 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a.\n\n`id_count=1                              # \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u043d\u0430 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u0443)\n archives=['archive', 'AI_0->archive']   # \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043c\u0435\u043d \u0430\u0440\u0445\u0438\u0432\u043e\u0432 (\u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445: list)\n start_date=\"2020-01-13T08:46:16Z\"       # \u0434\u0430\u0442\u0430-\u0432\u0440\u0435\u043c\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n step_count=10                           # \u043a\u043e\u043b-\u0432\u043e \u0442\u043e\u0447\u0435\u043a \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u0437 \u0430\u0440\u0445\u0438\u0432\u0430\n step_size=1                             # \u0448\u0430\u0433, \u0438\u0437\u043c\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445`\n\n`data = a.get_data(id_count, archives, start_date, step_count, step_size)`\n\n# Example\n\n    from pyfaceplate import Client as cli\n\n    def main():\n\n        #1 Create connector\n\n        host=\"localhost\"\n        port=\"4000\"\n\n        a=ecomet.EcometClient(host, port, login=\"login\", password=\"password\")\n\n        #2 Get archive names\n\n        archives = a.get_names()\n\n        #3 Get all data\n\n        data = a.get_data(id_count=1, archives=archives, start_date=\"2020-01-13T08:46:16Z\", step_count=100, step_size=10)\n\n    retrun data\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rkrikbaev/pyfaceplateclient", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyFaceplateClient", "package_url": "https://pypi.org/project/PyFaceplateClient/", "platform": "", "project_url": "https://pypi.org/project/PyFaceplateClient/", "project_urls": {"Homepage": "https://github.com/rkrikbaev/pyfaceplateclient"}, "release_url": "https://pypi.org/project/PyFaceplateClient/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Client for Faceplate powered by Ecomet database", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PythonEcometClient</h1>\n<p><code>pip install PyFaceplateClient==0.0.1 pip install websockets=&gt;8.1</code></p>\n<p>from pyfaceplateclient import Client</p>\n<h2>1 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438</h2>\n<p><code>host=\"host_ip_address\" port=\"port\" login=\"login\" password=\"password\"</code></p>\n<p><code>a=ecomet.EcometClient(host, port, login, password)</code></p>\n<h2>2 \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430 \u0430\u0440\u0445\u0438\u0432\u043e\u0432</h2>\n<p><code>archives = a.get_names()</code></p>\n<p><code>print(archives)</code></p>\n<h2>3 \u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u0430 \u0430\u0440\u0445\u0438\u0432\u043e\u0432 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u0434\u0430\u0442\u043e\u0439 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a.</h2>\n<p><code>id_count=1 # \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u043d\u0430 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u0443) archives=['archive', 'AI_0-&gt;archive'] # \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043c\u0435\u043d \u0430\u0440\u0445\u0438\u0432\u043e\u0432 (\u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445: list) start_date=\"2020-01-13T08:46:16Z\" # \u0434\u0430\u0442\u0430-\u0432\u0440\u0435\u043c\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 step_count=10 # \u043a\u043e\u043b-\u0432\u043e \u0442\u043e\u0447\u0435\u043a \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u0437 \u0430\u0440\u0445\u0438\u0432\u0430 step_size=1 # \u0448\u0430\u0433, \u0438\u0437\u043c\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445</code></p>\n<p><code>data = a.get_data(id_count, archives, start_date, step_count, step_size)</code></p>\n<h1>Example</h1>\n<pre><code>from pyfaceplate import Client as cli\n\ndef main():\n\n    #1 Create connector\n\n    host=\"localhost\"\n    port=\"4000\"\n\n    a=ecomet.EcometClient(host, port, login=\"login\", password=\"password\")\n\n    #2 Get archive names\n\n    archives = a.get_names()\n\n    #3 Get all data\n\n    data = a.get_data(id_count=1, archives=archives, start_date=\"2020-01-13T08:46:16Z\", step_count=100, step_size=10)\n\nretrun data\n</code></pre>\n\n          </div>"}, "last_serial": 6475134, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "825453765b32d18c3d828d2ef440cf28", "sha256": "e25fa42b4933acbe83a1861f0349d9f8ba26cf82db3963004d7ee26dd167a345"}, "downloads": -1, "filename": "PyFaceplateClient-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "825453765b32d18c3d828d2ef440cf28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6828, "upload_time": "2020-01-17T21:09:35", "upload_time_iso_8601": "2020-01-17T21:09:35.523224Z", "url": "https://files.pythonhosted.org/packages/79/a8/be30c1a782eb797b756aa25cf078d85062a1986d2ff91cec52633861d1aa/PyFaceplateClient-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cbe8b55a3bd1fba49f12ed3e22988eb", "sha256": "74cd064087d1e362ca04d9f487ba74205a54653972eb1be74855a721c3f25ce4"}, "downloads": -1, "filename": "PyFaceplateClient-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6cbe8b55a3bd1fba49f12ed3e22988eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3401, "upload_time": "2020-01-17T21:09:37", "upload_time_iso_8601": "2020-01-17T21:09:37.227123Z", "url": "https://files.pythonhosted.org/packages/95/ce/1f8b5dd7f01eacbb9ac27b9852d9fe9218bcadea6051a7b541db05617d3a/PyFaceplateClient-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "825453765b32d18c3d828d2ef440cf28", "sha256": "e25fa42b4933acbe83a1861f0349d9f8ba26cf82db3963004d7ee26dd167a345"}, "downloads": -1, "filename": "PyFaceplateClient-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "825453765b32d18c3d828d2ef440cf28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6828, "upload_time": "2020-01-17T21:09:35", "upload_time_iso_8601": "2020-01-17T21:09:35.523224Z", "url": "https://files.pythonhosted.org/packages/79/a8/be30c1a782eb797b756aa25cf078d85062a1986d2ff91cec52633861d1aa/PyFaceplateClient-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cbe8b55a3bd1fba49f12ed3e22988eb", "sha256": "74cd064087d1e362ca04d9f487ba74205a54653972eb1be74855a721c3f25ce4"}, "downloads": -1, "filename": "PyFaceplateClient-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6cbe8b55a3bd1fba49f12ed3e22988eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3401, "upload_time": "2020-01-17T21:09:37", "upload_time_iso_8601": "2020-01-17T21:09:37.227123Z", "url": "https://files.pythonhosted.org/packages/95/ce/1f8b5dd7f01eacbb9ac27b9852d9fe9218bcadea6051a7b541db05617d3a/PyFaceplateClient-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:03 2020"}