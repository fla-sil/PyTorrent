{"info": {"author": "Alex Sparrow", "author_email": "alspar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "What is this?\n-------------------\n*gitwalker* is a tool for collecting data from git repositories. It automates\nthe process of checking out each revision, running some command and logging the\noutput to a JSON file. Additional commands can be added by writing Python classes.\n\nWhat can it do?\n-------------------\nCurrently _gitwalker_ supports two built in commands:\n\n * A LaTeX word count\n * du disk usage command\n * Arbitrary shell commands\n\nIts straightforward to add additional commands - see the file `tools.py`\n\nThe included script `gitwalk_plot` uses the\n[matplotlib](http://matplotlib.sourceforge.net/index.html) framework to produce\ntime-series graphs overlaying multiple data files.\n\nGetting It\n-------------------\nIf you have *pip* installed, simply\n    pip install gitwalker\n\nUsage\n--------------------\nTo word count a git-tracked LaTeX project across all commits:\n\n    gitwalk --wordcount myfile.tex --out wordcount.json /path/to/project\n\nThis will clone the repository at `/path/to/project` to a temporary directory\nbefore checking out each revision and running a word count on the file\nmyfile.tex in the repository. The results will be output to the file `wordcount.json`\n\n*gitwalker* also supports incremental update of a previously produced log file. To add newly committed revisions,\n\n    gitwalk --update wordcount.json --wordcount myfile.tex /path/to/project\n\nThere is an attached script to plot a number of such output files on the same\naxes using matplotlib. e.g.\n\n    gitwalk_plot --plot file1.json me red --plot you.json you blue wordcount/wordcount\n\nWill plot the files `file1.json` and `file2.json` on the same axes using the\nspecified labels and colours. The value will be dug out from the JSON file via\nthe path format at the end of the command line - in this case `wordcount/wordcount`. One could also run\n\n    gitwalk_plot --plot file1.json me red --plot you.json you blue wordcount/nfigures\n\nto plot the number of LaTeX figures present in each commit.\n\nTo run a shell command on each commit,\n\n    gitwalk --shell=\"ls | wc -l\" /path/to/project\n\nTodo\n--------------------\n* Add git-notes option", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexsparrow/gitwalker", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "gitwalker", "package_url": "https://pypi.org/project/gitwalker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gitwalker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alexsparrow/gitwalker"}, "release_url": "https://pypi.org/project/gitwalker/0.1.7/", "requires_dist": null, "requires_python": null, "summary": "A tool for collecting data from git repositories.", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p><em>gitwalker</em> is a tool for collecting data from git repositories. It automates\nthe process of checking out each revision, running some command and logging the\noutput to a JSON file. Additional commands can be added by writing Python classes.</p>\n</div>\n<div id=\"what-can-it-do\">\n<h2>What can it do?</h2>\n<p>Currently _gitwalker_ supports two built in commands:</p>\n<blockquote>\n<ul>\n<li>A LaTeX word count</li>\n<li>du disk usage command</li>\n<li>Arbitrary shell commands</li>\n</ul>\n</blockquote>\n<p>Its straightforward to add additional commands - see the file <cite>tools.py</cite></p>\n<p>The included script <cite>gitwalk_plot</cite> uses the\n[matplotlib](<a href=\"http://matplotlib.sourceforge.net/index.html\" rel=\"nofollow\">http://matplotlib.sourceforge.net/index.html</a>) framework to produce\ntime-series graphs overlaying multiple data files.</p>\n</div>\n<div id=\"getting-it\">\n<h2>Getting It</h2>\n<dl>\n<dt>If you have <em>pip</em> installed, simply</dt>\n<dd>pip install gitwalker</dd>\n</dl>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To word count a git-tracked LaTeX project across all commits:</p>\n<blockquote>\ngitwalk \u2013wordcount myfile.tex \u2013out wordcount.json /path/to/project</blockquote>\n<p>This will clone the repository at <cite>/path/to/project</cite> to a temporary directory\nbefore checking out each revision and running a word count on the file\nmyfile.tex in the repository. The results will be output to the file <cite>wordcount.json</cite></p>\n<p><em>gitwalker</em> also supports incremental update of a previously produced log file. To add newly committed revisions,</p>\n<blockquote>\ngitwalk \u2013update wordcount.json \u2013wordcount myfile.tex /path/to/project</blockquote>\n<p>There is an attached script to plot a number of such output files on the same\naxes using matplotlib. e.g.</p>\n<blockquote>\ngitwalk_plot \u2013plot file1.json me red \u2013plot you.json you blue wordcount/wordcount</blockquote>\n<p>Will plot the files <cite>file1.json</cite> and <cite>file2.json</cite> on the same axes using the\nspecified labels and colours. The value will be dug out from the JSON file via\nthe path format at the end of the command line - in this case <cite>wordcount/wordcount</cite>. One could also run</p>\n<blockquote>\ngitwalk_plot \u2013plot file1.json me red \u2013plot you.json you blue wordcount/nfigures</blockquote>\n<p>to plot the number of LaTeX figures present in each commit.</p>\n<p>To run a shell command on each commit,</p>\n<blockquote>\ngitwalk \u2013shell=\u201dls | wc -l\u201d /path/to/project</blockquote>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Add git-notes option</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 792490, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a3ae0a6e558fd6f730cbccd756e605b9", "sha256": "4eb057187114c7d74bebba1b6a6c6e702bdf6f55b91c40fd14f7ca9cd13f6c0d"}, "downloads": -1, "filename": "gitwalker-0.1-py2.7.egg", "has_sig": false, "md5_digest": "a3ae0a6e558fd6f730cbccd756e605b9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 41369, "upload_time": "2011-12-19T19:05:46", "upload_time_iso_8601": "2011-12-19T19:05:46.993438Z", "url": "https://files.pythonhosted.org/packages/5f/f3/fd8b55658c70a2c4e7fe2ec9f8e98c040af6bcdd3484fe5b7345c372e2fc/gitwalker-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0346eea06f01dee25f99fbfc8463d09", "sha256": "5de80e15e2d0406dac3214676afc77f46d13b6634cae8694c6c1857e67b323c9"}, "downloads": -1, "filename": "gitwalker-0.1.tar.gz", "has_sig": false, "md5_digest": "f0346eea06f01dee25f99fbfc8463d09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34423, "upload_time": "2011-12-19T19:05:43", "upload_time_iso_8601": "2011-12-19T19:05:43.382295Z", "url": "https://files.pythonhosted.org/packages/8f/c7/8939073823438755f1dc435d974669d591e8f7fa5090707612bae91f6618/gitwalker-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ce5bc53164895fff9fecc95214277652", "sha256": "fa698b15f9a24683726f3f8e860dfd406e8337a6bc0028892bbf40692608e220"}, "downloads": -1, "filename": "gitwalker-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ce5bc53164895fff9fecc95214277652", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34560, "upload_time": "2011-12-19T20:08:01", "upload_time_iso_8601": "2011-12-19T20:08:01.297604Z", "url": "https://files.pythonhosted.org/packages/ac/fc/c23168392c88a44c82b1a39650541a3e306f05c7c9494f8e061ea4f95359/gitwalker-0.1.1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a8a11c35ee3648703ae6b387e5c03e20", "sha256": "6a0bd7079fb3c60ae351fdfa3e1d9850795bdf31bfb4666dac32a1a98ded9ebc"}, "downloads": -1, "filename": "gitwalker-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a8a11c35ee3648703ae6b387e5c03e20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34825, "upload_time": "2011-12-20T00:33:13", "upload_time_iso_8601": "2011-12-20T00:33:13.279461Z", "url": "https://files.pythonhosted.org/packages/ae/98/9fcf1b011b30658cbdb98c27220528ba003a0d627a15c09f81b036d7bcc3/gitwalker-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "8b69de8b0942e841dca9091aa4bf7c6b", "sha256": "8da905b2f8c8350b118f25f91a866d04e121495cfda45408863a133a16ae3122"}, "downloads": -1, "filename": "gitwalker-0.1.6.tar.gz", "has_sig": false, "md5_digest": "8b69de8b0942e841dca9091aa4bf7c6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34965, "upload_time": "2011-12-21T23:01:41", "upload_time_iso_8601": "2011-12-21T23:01:41.416871Z", "url": "https://files.pythonhosted.org/packages/2c/84/ec1728b96bd060ec46a76fbce64319688083790f153f49a0c007b8a378f5/gitwalker-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2257f1fee922ae6c0ea491be91300ec6", "sha256": "25163e564d8c4d2b019ec155fdffb791a142de7bef43d490fd4f39a899c82e23"}, "downloads": -1, "filename": "gitwalker-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2257f1fee922ae6c0ea491be91300ec6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35001, "upload_time": "2012-01-04T19:50:12", "upload_time_iso_8601": "2012-01-04T19:50:12.369103Z", "url": "https://files.pythonhosted.org/packages/9d/10/f0934372e13d88441ba49af25b46491c8be04c6bcce67559233ec6e03663/gitwalker-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2257f1fee922ae6c0ea491be91300ec6", "sha256": "25163e564d8c4d2b019ec155fdffb791a142de7bef43d490fd4f39a899c82e23"}, "downloads": -1, "filename": "gitwalker-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2257f1fee922ae6c0ea491be91300ec6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35001, "upload_time": "2012-01-04T19:50:12", "upload_time_iso_8601": "2012-01-04T19:50:12.369103Z", "url": "https://files.pythonhosted.org/packages/9d/10/f0934372e13d88441ba49af25b46491c8be04c6bcce67559233ec6e03663/gitwalker-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:43 2020"}