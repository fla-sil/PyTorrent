{"info": {"author": "Jeff Nelson, Dave Campbell, and Colton Saska", "author_email": "colt.saska@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# coveragecheck\ncoveragecheck is a tool that reports lines of code from diff that are not covered (or excluded) in project coverage report. \nThe intent is for this tool to be invoked in a continuous integration pipeline to enforce that merging code has full statement \ncoverage.\n\nThe tool is compatible with any diff in unified diff format, and a coverage report formatted as a JSON dictionary similar to the\noutput of [coverage.py](https://coverage.readthedocs.io). Example usage is shown below.\n\n## Installing\nThe simplest way to install is to use pip:\n```\npip install coveragecheck\n```\n\nThe tool can also be installed by cloning this repository and putting coveragecheck.py on your path:\n```\ngit clone https://github.com/jdn5126/CoverageChecker.git\n```\n\n## Continuous Integration Pipeline\nFor an example script for a continuous integration pipeline, check out the GitHub Actions configured for this repository in\n`.github/workflows/coverage_check.yml`. These steps should translate to any continuous integration application/automation server.\n\n## Example\nThe example directory, which contains a simple Python library and test file, allows us to test `coveragecheck`:\n\nAdd a new class to `example/lib.py` without any test coverage:\n```\nclass Bar(object):\n    def __init__(self, name):\n        self.name = name\n\n    def getName(self):\n        return self.name\n```\n\nGenerate the coverage report using [coverage.py](https://coverage.readthedocs.io):\n```\n$ cd example\n$ coverage run -m unittest discover\n$ coverage json\n```\n\nInvoke `coveragecheck` to show missing coverage:\n```\n$ git diff | coveragecheck -r coverage.json\nFailure\nFiles missing coverage:\n\nexample/lib.py:\n16       self.name = name\n19       return self.name\n```\n\nAdd coverage to `test.py`:\n```\nfrom lib import Foo, Bar\n...\n\nclass TestBarCoverage(unittest.TestCase):\n    def test_bar(self):\n        print( 'TestBarCoverage: test_bar')\n        bar = Bar(\"bar\")\n        assert bar.getName() == \"bar\"\n```\n\nRegenerate coverage report as shown above, then invoke `coveragecheck`:\n```\n$ git diff | coveragecheck.py -r coverage.json\nSuccess!\n```\n\n## Contributing\nContributions and issues are welcome!\n\nTo get started, simply install the required Python dependencies using:\n`pip install -r requirements.txt`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jdn5126/CoverageChecker", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "coveragecheck", "package_url": "https://pypi.org/project/coveragecheck/", "platform": "", "project_url": "https://pypi.org/project/coveragecheck/", "project_urls": {"Homepage": "https://github.com/jdn5126/CoverageChecker"}, "release_url": "https://pypi.org/project/coveragecheck/0.0.3/", "requires_dist": ["coverage"], "requires_python": ">=3.6", "summary": "Set of tools for validating code coverage as a merge criterion in a CI pipeline.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>coveragecheck</h1>\n<p>coveragecheck is a tool that reports lines of code from diff that are not covered (or excluded) in project coverage report.\nThe intent is for this tool to be invoked in a continuous integration pipeline to enforce that merging code has full statement\ncoverage.</p>\n<p>The tool is compatible with any diff in unified diff format, and a coverage report formatted as a JSON dictionary similar to the\noutput of <a href=\"https://coverage.readthedocs.io\" rel=\"nofollow\">coverage.py</a>. Example usage is shown below.</p>\n<h2>Installing</h2>\n<p>The simplest way to install is to use pip:</p>\n<pre><code>pip install coveragecheck\n</code></pre>\n<p>The tool can also be installed by cloning this repository and putting coveragecheck.py on your path:</p>\n<pre><code>git clone https://github.com/jdn5126/CoverageChecker.git\n</code></pre>\n<h2>Continuous Integration Pipeline</h2>\n<p>For an example script for a continuous integration pipeline, check out the GitHub Actions configured for this repository in\n<code>.github/workflows/coverage_check.yml</code>. These steps should translate to any continuous integration application/automation server.</p>\n<h2>Example</h2>\n<p>The example directory, which contains a simple Python library and test file, allows us to test <code>coveragecheck</code>:</p>\n<p>Add a new class to <code>example/lib.py</code> without any test coverage:</p>\n<pre><code>class Bar(object):\n    def __init__(self, name):\n        self.name = name\n\n    def getName(self):\n        return self.name\n</code></pre>\n<p>Generate the coverage report using <a href=\"https://coverage.readthedocs.io\" rel=\"nofollow\">coverage.py</a>:</p>\n<pre><code>$ cd example\n$ coverage run -m unittest discover\n$ coverage json\n</code></pre>\n<p>Invoke <code>coveragecheck</code> to show missing coverage:</p>\n<pre><code>$ git diff | coveragecheck -r coverage.json\nFailure\nFiles missing coverage:\n\nexample/lib.py:\n16       self.name = name\n19       return self.name\n</code></pre>\n<p>Add coverage to <code>test.py</code>:</p>\n<pre><code>from lib import Foo, Bar\n...\n\nclass TestBarCoverage(unittest.TestCase):\n    def test_bar(self):\n        print( 'TestBarCoverage: test_bar')\n        bar = Bar(\"bar\")\n        assert bar.getName() == \"bar\"\n</code></pre>\n<p>Regenerate coverage report as shown above, then invoke <code>coveragecheck</code>:</p>\n<pre><code>$ git diff | coveragecheck.py -r coverage.json\nSuccess!\n</code></pre>\n<h2>Contributing</h2>\n<p>Contributions and issues are welcome!</p>\n<p>To get started, simply install the required Python dependencies using:\n<code>pip install -r requirements.txt</code></p>\n\n          </div>"}, "last_serial": 7124868, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "2dcccb46bd9741b14ab02649016fb600", "sha256": "334ed1b4d32fcaa59dad150dd8655145241657a30809b765c3b33b84cd66d95b"}, "downloads": -1, "filename": "coveragecheck-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2dcccb46bd9741b14ab02649016fb600", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6645, "upload_time": "2020-04-29T01:35:03", "upload_time_iso_8601": "2020-04-29T01:35:03.893806Z", "url": "https://files.pythonhosted.org/packages/bc/6f/77867e410e68e32d8bbe1e4fe228e0de48eeab18007e49dcf3e54c95d25b/coveragecheck-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2713d2907b48e9f015cf10baccb73460", "sha256": "f1e29f674540747fd69a07cf32c4ac80910adb6fb4aa7aa59325098557492e56"}, "downloads": -1, "filename": "coveragecheck-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2713d2907b48e9f015cf10baccb73460", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4770, "upload_time": "2020-04-29T01:35:05", "upload_time_iso_8601": "2020-04-29T01:35:05.226292Z", "url": "https://files.pythonhosted.org/packages/1f/86/2cf58a19dc67b43d6b5d8fa1f1b77a0ffc87fb4bf5e931aaee4c7ed01175/coveragecheck-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2dcccb46bd9741b14ab02649016fb600", "sha256": "334ed1b4d32fcaa59dad150dd8655145241657a30809b765c3b33b84cd66d95b"}, "downloads": -1, "filename": "coveragecheck-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2dcccb46bd9741b14ab02649016fb600", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6645, "upload_time": "2020-04-29T01:35:03", "upload_time_iso_8601": "2020-04-29T01:35:03.893806Z", "url": "https://files.pythonhosted.org/packages/bc/6f/77867e410e68e32d8bbe1e4fe228e0de48eeab18007e49dcf3e54c95d25b/coveragecheck-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2713d2907b48e9f015cf10baccb73460", "sha256": "f1e29f674540747fd69a07cf32c4ac80910adb6fb4aa7aa59325098557492e56"}, "downloads": -1, "filename": "coveragecheck-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2713d2907b48e9f015cf10baccb73460", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4770, "upload_time": "2020-04-29T01:35:05", "upload_time_iso_8601": "2020-04-29T01:35:05.226292Z", "url": "https://files.pythonhosted.org/packages/1f/86/2cf58a19dc67b43d6b5d8fa1f1b77a0ffc87fb4bf5e931aaee4c7ed01175/coveragecheck-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}