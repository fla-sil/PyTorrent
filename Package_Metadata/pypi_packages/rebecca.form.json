{"info": {"author": "Atsushi Odagiri", "author_email": "aodagx@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pyramid", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "rebecca.form\n====================\n\n`pyramid <http://pypi.python.org/pyramid>`_ view components based on `FormAlchemy <http://pypi.python.org/Formalchemy>`_ .\n\nComponents\n-------------------\n\n- FormView\n- AddFormView\n- EditFormView\n- DisplayView\n\n\nExamples\n--------------------\n\nModel for Example ::\n\n    class Item(Base):\n        __tablename__ = 'items'\n        id = sa.Column(sa.Integer, primary_key=True)\n        name = sa.Column(sa.Unicode(255), nullable=False)\n        value = sa.Column(sa.Integer, nullable=False)\n\n        def __unicode__(self):\n            return u\"Item id={id}, name={name}, value={value}\".format(id=self.id, name=self.name, value=self.value)\n\nAddFormView ::\n\n    class AddItemView(AddFormView):\n        __x_model__ = Item\n        __x_session__ = DBSession\n\nEditFormView ::\n\n    class EditItemView(EditFormView):\n        __x_factory__ = item_finder\n\nDisplayView ::\n\n    class DisplayItemView(DisplayView):\n        __x_factory__ = item_finder\n\n`__x_factory__` is callable to find model from request.\n\nUtilities\n----------------------\n\n`MatchDictFinder` queries for specified Model with conditions from `Request.matchdict`.\n\nFor example, create finder for ::\n\n    item_finder = MatchDictFinder(Item, DBSession, [(Item.id, 'item_id')])\n\nitem_finder executes like this ::\n\n    DBSession.query(Item).filter(Item.id==request.matchdict['item_id']).one()\n\n\nContributors\n============\n\n\n- Atsushi Odagiri, original author\n\nChangelog\n=========\n\n0.1\n-----------\n\n- first release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rebeccaframework/rebecca.form", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "rebecca.form", "package_url": "https://pypi.org/project/rebecca.form/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rebecca.form/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rebeccaframework/rebecca.form"}, "release_url": "https://pypi.org/project/rebecca.form/0.1/", "requires_dist": null, "requires_python": null, "summary": "pyramid view components based on formalchemy", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"rebecca-form\">\n<h2>rebecca.form</h2>\n<p><a href=\"http://pypi.python.org/pyramid\" rel=\"nofollow\">pyramid</a> view components based on <a href=\"http://pypi.python.org/Formalchemy\" rel=\"nofollow\">FormAlchemy</a> .</p>\n<div id=\"components\">\n<h3>Components</h3>\n<ul>\n<li>FormView</li>\n<li>AddFormView</li>\n<li>EditFormView</li>\n<li>DisplayView</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Model for Example</p>\n<pre>class Item(Base):\n    __tablename__ = 'items'\n    id = sa.Column(sa.Integer, primary_key=True)\n    name = sa.Column(sa.Unicode(255), nullable=False)\n    value = sa.Column(sa.Integer, nullable=False)\n\n    def __unicode__(self):\n        return u\"Item id={id}, name={name}, value={value}\".format(id=self.id, name=self.name, value=self.value)\n</pre>\n<p>AddFormView</p>\n<pre>class AddItemView(AddFormView):\n    __x_model__ = Item\n    __x_session__ = DBSession\n</pre>\n<p>EditFormView</p>\n<pre>class EditItemView(EditFormView):\n    __x_factory__ = item_finder\n</pre>\n<p>DisplayView</p>\n<pre>class DisplayItemView(DisplayView):\n    __x_factory__ = item_finder\n</pre>\n<p><cite>__x_factory__</cite> is callable to find model from request.</p>\n</div>\n<div id=\"utilities\">\n<h3>Utilities</h3>\n<p><cite>MatchDictFinder</cite> queries for specified Model with conditions from <cite>Request.matchdict</cite>.</p>\n<p>For example, create finder for</p>\n<pre>item_finder = MatchDictFinder(Item, DBSession, [(Item.id, 'item_id')])\n</pre>\n<p>item_finder executes like this</p>\n<pre>DBSession.query(Item).filter(Item.id==request.matchdict['item_id']).one()\n</pre>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Atsushi Odagiri, original author</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1</span></h2>\n<ul>\n<li>first release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 722968, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5a0348bb83f4412bc61f1fbc9e7253f5", "sha256": "7e29a8bffa4e2ecd165a017a16857642ba7f4af98ad6c8660b5fca9d8121610b"}, "downloads": -1, "filename": "rebecca.form-0.1.tar.gz", "has_sig": false, "md5_digest": "5a0348bb83f4412bc61f1fbc9e7253f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3437, "upload_time": "2012-11-17T09:24:40", "upload_time_iso_8601": "2012-11-17T09:24:40.090235Z", "url": "https://files.pythonhosted.org/packages/69/19/c93e6182c31a0af51bcb4dd43b69273d67a6b500cb0d7d998d74d761f15c/rebecca.form-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a0348bb83f4412bc61f1fbc9e7253f5", "sha256": "7e29a8bffa4e2ecd165a017a16857642ba7f4af98ad6c8660b5fca9d8121610b"}, "downloads": -1, "filename": "rebecca.form-0.1.tar.gz", "has_sig": false, "md5_digest": "5a0348bb83f4412bc61f1fbc9e7253f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3437, "upload_time": "2012-11-17T09:24:40", "upload_time_iso_8601": "2012-11-17T09:24:40.090235Z", "url": "https://files.pythonhosted.org/packages/69/19/c93e6182c31a0af51bcb4dd43b69273d67a6b500cb0d7d998d74d761f15c/rebecca.form-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:18 2020"}