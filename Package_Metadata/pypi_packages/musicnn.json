{"info": {"author": "Jordi Pons", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: ISC License (ISCL)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Multimedia :: Sound/Audio :: Analysis"], "description": "# musicnn\nPronounced as \"musician\", `musicnn` is a set of pre-trained musically motivated convolutional neural networks for music audio tagging. This repository also includes some pre-trained [vgg-like](https://github.com/jordipons/musicnn/blob/master/vgg_example.ipynb) baselines.\n\nCheck the [documentation](https://github.com/jordipons/musicnn/blob/master/DOCUMENTATION.md) and our [basic](https://github.com/jordipons/musicnn/blob/master/tagging_example.ipynb) / [advanced](https://github.com/jordipons/musicnn/blob/master/musicnn_example.ipynb) examples to understand how to use `musicnn`.\n\nDo you have questions? Check the [FAQs](https://github.com/jordipons/musicnn/blob/master/FAQs.md).\n\n## Installation\n```pip install musicnn```\n\nor, to get bigger models and all the documentation (including jupyter notebooks), install from source:\n\n``` git clone https://github.com/jordipons/musicnn.git```\n\n``` python setup.py install```\n\n## Predict tags\n\nFrom within **python**, you can estimate the topN tags:\n~~~~python\nfrom musicnn.tagger import top_tags\ntop_tags('./audio/joram-moments_of_clarity-08-solipsism-59-88.mp3', model='MTT_musicnn', topN=10)\n~~~~\n>['techno', 'electronic', 'synth', 'fast', 'beat', 'drums', 'no vocals', 'no vocal', 'dance', 'ambient']\n\nLet's try another song!\n\n~~~~python\ntop_tags('./audio/TRWJAZW128F42760DD_test.mp3')\n~~~~\n>['guitar', 'piano', 'fast']\n\nFrom the **command-line**, you can also print the topN tags on the screen:\n\n~~~~\npython -m musicnn.tagger file_name.ogg --print\npython -m musicnn.tagger file_name.au --model 'MSD_musicnn' --topN 3 --length 3 --overlap 1.5 --print\n~~~~~\n\nor save to a file:\n\n~~~~\npython -m musicnn.tagger file_name.wav --save out.tags\npython -m musicnn.tagger file_name.mp3 --model 'MTT_musicnn' --topN 10 --length 3 --overlap 1 --print --save out.tags\n~~~~\n\n## Extract the Taggram\n\nYou can also compute the taggram using **python** (see our [basic](https://github.com/jordipons/musicnn/blob/master/tagging_example.ipynb) example for more details on how to depict it):\n\n~~~~python\nfrom musicnn.extractor import extractor\ntaggram, tags = extractor('./audio/joram-moments_of_clarity-08-solipsism-59-88.mp3', model='MTT_musicnn')\n~~~~\n![Taggram](./images/taggram.png \"Taggram\")\n\nThe above analyzed music clips are included in the `./audio/` folder of this repository. \n\nYou can listen to those and evaluate `musicnn` yourself!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jordipons/musicnn", "keywords": "audio music deep learning tagging tensorflow machine listening", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "musicnn", "package_url": "https://pypi.org/project/musicnn/", "platform": "", "project_url": "https://pypi.org/project/musicnn/", "project_urls": {"Homepage": "http://github.com/jordipons/musicnn"}, "release_url": "https://pypi.org/project/musicnn/0.1.0/", "requires_dist": ["librosa (>=0.7.0)", "tensorflow (>=1.14)", "numpy (<1.17,>=1.14.5)"], "requires_python": "", "summary": "Pronounced as \"musician\", musicnn is a set of pre-trained deep convolutional neural networks for music audio tagging", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>musicnn</h1>\n<p>Pronounced as \"musician\", <code>musicnn</code> is a set of pre-trained musically motivated convolutional neural networks for music audio tagging. This repository also includes some pre-trained <a href=\"https://github.com/jordipons/musicnn/blob/master/vgg_example.ipynb\" rel=\"nofollow\">vgg-like</a> baselines.</p>\n<p>Check the <a href=\"https://github.com/jordipons/musicnn/blob/master/DOCUMENTATION.md\" rel=\"nofollow\">documentation</a> and our <a href=\"https://github.com/jordipons/musicnn/blob/master/tagging_example.ipynb\" rel=\"nofollow\">basic</a> / <a href=\"https://github.com/jordipons/musicnn/blob/master/musicnn_example.ipynb\" rel=\"nofollow\">advanced</a> examples to understand how to use <code>musicnn</code>.</p>\n<p>Do you have questions? Check the <a href=\"https://github.com/jordipons/musicnn/blob/master/FAQs.md\" rel=\"nofollow\">FAQs</a>.</p>\n<h2>Installation</h2>\n<p><code>pip install musicnn</code></p>\n<p>or, to get bigger models and all the documentation (including jupyter notebooks), install from source:</p>\n<p><code>git clone https://github.com/jordipons/musicnn.git</code></p>\n<p><code>python setup.py install</code></p>\n<h2>Predict tags</h2>\n<p>From within <strong>python</strong>, you can estimate the topN tags:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">musicnn.tagger</span> <span class=\"kn\">import</span> <span class=\"n\">top_tags</span>\n<span class=\"n\">top_tags</span><span class=\"p\">(</span><span class=\"s1\">'./audio/joram-moments_of_clarity-08-solipsism-59-88.mp3'</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'MTT_musicnn'</span><span class=\"p\">,</span> <span class=\"n\">topN</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>['techno', 'electronic', 'synth', 'fast', 'beat', 'drums', 'no vocals', 'no vocal', 'dance', 'ambient']</p>\n</blockquote>\n<p>Let's try another song!</p>\n<pre><span class=\"n\">top_tags</span><span class=\"p\">(</span><span class=\"s1\">'./audio/TRWJAZW128F42760DD_test.mp3'</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>['guitar', 'piano', 'fast']</p>\n</blockquote>\n<p>From the <strong>command-line</strong>, you can also print the topN tags on the screen:</p>\n<pre><code>python -m musicnn.tagger file_name.ogg --print\npython -m musicnn.tagger file_name.au --model 'MSD_musicnn' --topN 3 --length 3 --overlap 1.5 --print\n</code></pre>\n<p>or save to a file:</p>\n<pre><code>python -m musicnn.tagger file_name.wav --save out.tags\npython -m musicnn.tagger file_name.mp3 --model 'MTT_musicnn' --topN 10 --length 3 --overlap 1 --print --save out.tags\n</code></pre>\n<h2>Extract the Taggram</h2>\n<p>You can also compute the taggram using <strong>python</strong> (see our <a href=\"https://github.com/jordipons/musicnn/blob/master/tagging_example.ipynb\" rel=\"nofollow\">basic</a> example for more details on how to depict it):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">musicnn.extractor</span> <span class=\"kn\">import</span> <span class=\"n\">extractor</span>\n<span class=\"n\">taggram</span><span class=\"p\">,</span> <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">extractor</span><span class=\"p\">(</span><span class=\"s1\">'./audio/joram-moments_of_clarity-08-solipsism-59-88.mp3'</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'MTT_musicnn'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Taggram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eda432d454ee50a62a32b58de302668fa83202cd/2e2f696d616765732f7461676772616d2e706e67\"></p>\n<p>The above analyzed music clips are included in the <code>./audio/</code> folder of this repository.</p>\n<p>You can listen to those and evaluate <code>musicnn</code> yourself!</p>\n\n          </div>"}, "last_serial": 5696026, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2c313e9f58c8a316c9ed1ceb4b2156b0", "sha256": "bf46025c2508fbbd616fbf679c0328c1aeb210b5eef643fd0307f63938968e14"}, "downloads": -1, "filename": "musicnn-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2c313e9f58c8a316c9ed1ceb4b2156b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8290792, "upload_time": "2019-07-18T10:17:21", "upload_time_iso_8601": "2019-07-18T10:17:21.136160Z", "url": "https://files.pythonhosted.org/packages/52/63/c2fd048167767d2aba2106c197b54f22072da132bb8f929fb18056893a1c/musicnn-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce67ae41dee457e41622accb04ef0f06", "sha256": "4a4df4f3bc7f729aa51ed596d1e360e2bf8da0c08f81b61a6be4cb420fc12d25"}, "downloads": -1, "filename": "musicnn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ce67ae41dee457e41622accb04ef0f06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8284851, "upload_time": "2019-07-18T10:17:38", "upload_time_iso_8601": "2019-07-18T10:17:38.507886Z", "url": "https://files.pythonhosted.org/packages/bf/27/4812189821ef607a28c000821bd11d15b988ca7d937a9a681923ed2a7993/musicnn-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c94125b36f982d9cc1887f4807ee7e16", "sha256": "ea7a05deb32a7ed9dfe019d05fb30692d194c37572f010494090636d5872186a"}, "downloads": -1, "filename": "musicnn-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c94125b36f982d9cc1887f4807ee7e16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8290828, "upload_time": "2019-07-18T14:02:45", "upload_time_iso_8601": "2019-07-18T14:02:45.307248Z", "url": "https://files.pythonhosted.org/packages/f7/8b/a673c0f33e981f206d4fe7c1f3715e3674114df8c84d4b626324831419eb/musicnn-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "851748dc11f86d40836b45a95125c50f", "sha256": "ba9e0875f59965c91fa0a729955eda35724daf923f614b9895fa89b847842edd"}, "downloads": -1, "filename": "musicnn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "851748dc11f86d40836b45a95125c50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8284922, "upload_time": "2019-07-18T14:03:06", "upload_time_iso_8601": "2019-07-18T14:03:06.457793Z", "url": "https://files.pythonhosted.org/packages/5a/85/4e413f95f86f4f4e2b1a6be035b34b6132fa1a5ae00529468401893bf4b3/musicnn-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ba58de010a56c8475c48bccc9f71be70", "sha256": "fed3f83f23fe44bbe6d12a015847e844fd49b9381132c13da1f4858364407499"}, "downloads": -1, "filename": "musicnn-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ba58de010a56c8475c48bccc9f71be70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22910372, "upload_time": "2019-08-01T14:06:20", "upload_time_iso_8601": "2019-08-01T14:06:20.679381Z", "url": "https://files.pythonhosted.org/packages/a3/5b/0afd1e86b17e379ec316e6025aad50d7c262355e1382312010d75d7e52e5/musicnn-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97aa91ce63bb1a4df59727adbe6a9a40", "sha256": "b503a9121c94c6c947799ca6185c4274951c26094342158ed36aa0ef87739be9"}, "downloads": -1, "filename": "musicnn-0.0.3.tar.gz", "has_sig": false, "md5_digest": "97aa91ce63bb1a4df59727adbe6a9a40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22895566, "upload_time": "2019-08-01T14:07:00", "upload_time_iso_8601": "2019-08-01T14:07:00.024823Z", "url": "https://files.pythonhosted.org/packages/82/17/8406fcae01a6a7cbf83658f286f6773f8440fb730cd1e17ff98ab0aa567d/musicnn-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2a85814f64949bda403313676f65f2ec", "sha256": "275f29d4a12a7730f2f465afe6a6c5451e5a5c8987e74eb1f12594030108d176"}, "downloads": -1, "filename": "musicnn-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2a85814f64949bda403313676f65f2ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22910336, "upload_time": "2019-08-01T14:45:36", "upload_time_iso_8601": "2019-08-01T14:45:36.429340Z", "url": "https://files.pythonhosted.org/packages/10/9f/4b1a84372c142d00d04a0867893ad775fffd36756dd50632c18fe7f8eea4/musicnn-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd51d58bf813b9b53a98cc14656d9806", "sha256": "a3681c7c6080e9c6acf243822480f83bbd92fa95012f5c0da9118e77e6f65001"}, "downloads": -1, "filename": "musicnn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "bd51d58bf813b9b53a98cc14656d9806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22895539, "upload_time": "2019-08-01T14:46:11", "upload_time_iso_8601": "2019-08-01T14:46:11.392780Z", "url": "https://files.pythonhosted.org/packages/68/6f/cec96f3089354f17748ff0a24e2b68aed0a86bef0604047051f078715e16/musicnn-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "0dd876f9d6e62bbc9a97f11d191c2780", "sha256": "f38a4890c648c1ddbb141c5d96d2b0a8cfcd36746002d896989f7b88beb65cfa"}, "downloads": -1, "filename": "musicnn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0dd876f9d6e62bbc9a97f11d191c2780", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29292476, "upload_time": "2019-08-18T22:43:18", "upload_time_iso_8601": "2019-08-18T22:43:18.234044Z", "url": "https://files.pythonhosted.org/packages/1b/6f/38229e7d99c438e11114bbfa39c8c39185458c398011d0b6d7d7c7401617/musicnn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8737fd75155e85fd457969904033bbc4", "sha256": "674ccc1fb638e6894f99197cfc2794b90d96444292ea28cedee96de0f74c4abd"}, "downloads": -1, "filename": "musicnn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8737fd75155e85fd457969904033bbc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29272610, "upload_time": "2019-08-18T22:44:03", "upload_time_iso_8601": "2019-08-18T22:44:03.490409Z", "url": "https://files.pythonhosted.org/packages/16/0a/e274cd010cd0b2a2dd63d4aaa3d51a51821ffcc8ee19c76194f835c302bc/musicnn-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dd876f9d6e62bbc9a97f11d191c2780", "sha256": "f38a4890c648c1ddbb141c5d96d2b0a8cfcd36746002d896989f7b88beb65cfa"}, "downloads": -1, "filename": "musicnn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0dd876f9d6e62bbc9a97f11d191c2780", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29292476, "upload_time": "2019-08-18T22:43:18", "upload_time_iso_8601": "2019-08-18T22:43:18.234044Z", "url": "https://files.pythonhosted.org/packages/1b/6f/38229e7d99c438e11114bbfa39c8c39185458c398011d0b6d7d7c7401617/musicnn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8737fd75155e85fd457969904033bbc4", "sha256": "674ccc1fb638e6894f99197cfc2794b90d96444292ea28cedee96de0f74c4abd"}, "downloads": -1, "filename": "musicnn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8737fd75155e85fd457969904033bbc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29272610, "upload_time": "2019-08-18T22:44:03", "upload_time_iso_8601": "2019-08-18T22:44:03.490409Z", "url": "https://files.pythonhosted.org/packages/16/0a/e274cd010cd0b2a2dd63d4aaa3d51a51821ffcc8ee19c76194f835c302bc/musicnn-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:08 2020"}