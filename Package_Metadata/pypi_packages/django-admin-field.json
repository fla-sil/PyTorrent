{"info": {"author": "Alexander Klimenko", "author_email": "alex@erix.ru", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "django-admin-field\n==================\n\nDjango ModelAdmin field syntax simplifier.\n\nCommon django admin field customization syntax for looks like this. ::\n\n    class FileAdmin(ModelAdmin)\n        list_display = ('name', 'human_size')\n\n        def human_size(self, obj):\n            return filesizeformat(obj.size)\n        human_size.short_description = 'size'\n        human_size.admin_order_field = 'size'\n\n\nThis lib allows allows to sorten it and make it reusable. ::\n\n\n    class FileAdmin(ModelAdmin)\n        list_display = ('name', 'human_size')\n        human_size = AdminField('size', filesizeformat)\n\n\nInheritance\n------------------\nYou can create some reusable fields, for multipy usage. ::\n\n    class AdminSizeField(AdminFieldBase):\n        DEFAULT_FIELD = 'size'\n        method = staticmethod(human_size)\n\n\n    class FileAdmin(ModelAdmin)\n        list_display = ('name', 'human_size')\n        human_size = AdminSizeField()\n\nAttributes\n------------------\nBy default, 'short description' and 'admin order field' will be taken from the\nfield name. But you can overide it by kwargs. ::\n\n    class FileAdmin(ModelAdmin)\n        list_display = ('name', 'human_size')\n        human_size = AdminField('size', filesizeformat,\n            short_description='real size', allow_tags=True)\n\nForeign keys\n------------------\nBy default ModelAdmin doesn't allow you to use foreign keys in list_display.\nFeel free to do it with AdminField. It will atomaticaly optain description\nand sort field. ::\n\n    class UserFileAdmin(ModelAdmin)\n        list_display = ('name', 'file__size')\n        file__size = AdminField('file__size', filesizeformat)\n\nDon't forget to select related model. ::\n\n    class UserFileAdmin(ModelAdmin)\n        select_related = ['file']\n        list_display = ('name', 'file__size')\n        file__size = AdminField('file__size', filesizeformat)\n\n        def queryset(self, request):\n            return super(AdminModelSelectRelated, self).queryset(request).select_related(*self.select_related)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/meteozond/django-admin-field", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-admin-field", "package_url": "https://pypi.org/project/django-admin-field/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-admin-field/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/meteozond/django-admin-field"}, "release_url": "https://pypi.org/project/django-admin-field/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Django ModelAdmin field syntax simplifier.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django ModelAdmin field syntax simplifier.</p>\n<p>Common django admin field customization syntax for looks like this.</p>\n<pre>class FileAdmin(ModelAdmin)\n    list_display = ('name', 'human_size')\n\n    def human_size(self, obj):\n        return filesizeformat(obj.size)\n    human_size.short_description = 'size'\n    human_size.admin_order_field = 'size'\n</pre>\n<p>This lib allows allows to sorten it and make it reusable.</p>\n<pre>class FileAdmin(ModelAdmin)\n    list_display = ('name', 'human_size')\n    human_size = AdminField('size', filesizeformat)\n</pre>\n<div id=\"inheritance\">\n<h2>Inheritance</h2>\n<p>You can create some reusable fields, for multipy usage.</p>\n<pre>class AdminSizeField(AdminFieldBase):\n    DEFAULT_FIELD = 'size'\n    method = staticmethod(human_size)\n\n\nclass FileAdmin(ModelAdmin)\n    list_display = ('name', 'human_size')\n    human_size = AdminSizeField()\n</pre>\n</div>\n<div id=\"attributes\">\n<h2>Attributes</h2>\n<p>By default, \u2018short description\u2019 and \u2018admin order field\u2019 will be taken from the\nfield name. But you can overide it by kwargs.</p>\n<pre>class FileAdmin(ModelAdmin)\n    list_display = ('name', 'human_size')\n    human_size = AdminField('size', filesizeformat,\n        short_description='real size', allow_tags=True)\n</pre>\n</div>\n<div id=\"foreign-keys\">\n<h2>Foreign keys</h2>\n<p>By default ModelAdmin doesn\u2019t allow you to use foreign keys in list_display.\nFeel free to do it with AdminField. It will atomaticaly optain description\nand sort field.</p>\n<pre>class UserFileAdmin(ModelAdmin)\n    list_display = ('name', 'file__size')\n    file__size = AdminField('file__size', filesizeformat)\n</pre>\n<p>Don\u2019t forget to select related model.</p>\n<pre>class UserFileAdmin(ModelAdmin)\n    select_related = ['file']\n    list_display = ('name', 'file__size')\n    file__size = AdminField('file__size', filesizeformat)\n\n    def queryset(self, request):\n        return super(AdminModelSelectRelated, self).queryset(request).select_related(*self.select_related)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 789045, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "287d680b258fa0e9df09d98cff666db6", "sha256": "fd06536b05c6dcd72126627e2e9508709c75a7d738fa5cf03d6d2b14e34fce0f"}, "downloads": -1, "filename": "django-admin-field-0.0.1.tar.gz", "has_sig": false, "md5_digest": "287d680b258fa0e9df09d98cff666db6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1854, "upload_time": "2013-04-29T10:22:19", "upload_time_iso_8601": "2013-04-29T10:22:19.558419Z", "url": "https://files.pythonhosted.org/packages/c8/13/a25980387c84872823d80b7f91ee325ab54db82f9e7dda042a244ab0bf1e/django-admin-field-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "287d680b258fa0e9df09d98cff666db6", "sha256": "fd06536b05c6dcd72126627e2e9508709c75a7d738fa5cf03d6d2b14e34fce0f"}, "downloads": -1, "filename": "django-admin-field-0.0.1.tar.gz", "has_sig": false, "md5_digest": "287d680b258fa0e9df09d98cff666db6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1854, "upload_time": "2013-04-29T10:22:19", "upload_time_iso_8601": "2013-04-29T10:22:19.558419Z", "url": "https://files.pythonhosted.org/packages/c8/13/a25980387c84872823d80b7f91ee325ab54db82f9e7dda042a244ab0bf1e/django-admin-field-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:49 2020"}