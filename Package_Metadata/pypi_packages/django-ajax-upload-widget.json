{"info": {"author": "Zach Mathew", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "Django Ajax Upload Widget\n=========================\n\nProvides AJAX file upload functionality for FileFields and ImageFields with a simple widget replacement in the form.\n\nNo change is required your model fields or app logic. This plugin acts transparently so your model forms can treat files as if they were uploaded by \"traditional\" browser file upload.\n\n\nFeatures\n--------\n\n* Drop-in replacement for Django's built-in ``ClearableFileInput`` widget (no change required to your model).\n* Works in all major browsers including IE 7+.\n* Random hash string added to file names to ensure uploaded file paths are not guessable by others.\n\n\nUsage\n-----\n\nRefer to the ``example`` app included in the package for a working example.\n\nServer Side\n'''''''''''\n\nIn your form, use the ``AjaxClearableFileInput`` on your ``FileField`` or ``ImageField``.\n::\n\n    from django import forms\n    from ajax_upload.widgets import AjaxClearableFileInput\n\n    class MyForm(forms.Form):\n        my_image_field = forms.ImageField(widget=AjaxClearableFileInput())\n\n\nOr, if using a ``ModelForm`` you can just override the widget.\n::\n\n    from django import forms\n    from ajax_upload.widgets import AjaxClearableFileInput\n\n    class MyForm(forms.ModelForm):\n        class Meta:\n            model = MyModel\n            widgets = {\n                'my_image_field': AjaxClearableFileInput\n            }\n\n\nClient Side\n'''''''''''\n\nInclude the Javascript (and optionally CSS) files in your page and call the ``autoDiscover`` function.\nThis will search the page for all the AJAX file input fields and apply the necessary Javascript.\n::\n\n    <link href=\"{{ STATIC_URL }}ajax_upload/css/ajax-upload-widget.css\" rel=\"stylesheet\" type=\"text/css\"/>\n    <script src=\"{{ STATIC_URL }}ajax_upload/js/jquery.iframe-transport.js\"></script>\n    <script src=\"{{ STATIC_URL }}ajax_upload/js/ajax-upload-widget.js\"></script>\n\n    <script>\n        $(function() {\n            AjaxUploadWidget.autoDiscover();\n        });\n    </script>\n\n\nYou can also pass options to ``autoDiscover()``:\n::\n\n    <script>\n        $(function() {\n            AjaxUploadWidget.autoDiscover({\n                changeButtonText: 'Click to change',\n                onError: function(data) { alert('Error!'); }\n                // see source for full list of options\n            });\n        });\n    </script>\n\n\nOR ... you can explicitly instantiate an AjaxUploadWidget on an AJAX file input field:\n::\n\n    <input id=\"Foo\" name=\"foo\" type=\"file\" data-upload-url=\"/ajax-upload/\" data-filename=\"\" data-required=\"\"/>\n    <!-- The input field needs to be outputed by Django to contain the appropriate data attributes -->\n\n    <script>\n        new AjaxUploadWidget($('#Foo'), {\n            // options\n        });\n    </script>\n\n\nDependencies\n------------\n* jQuery 1.7+\n* jQuery Iframe Transport plugin (included in this package)\n\n\nApp Installation\n----------------\n\n1. Add ``ajax_upload`` to your ``INSTALLED_APPS`` setting.\n\n1. Hook in the urls.\n::\n\n    # urls.py\n    urlpatterns += patterns('',\n        (r'^ajax-upload/', include('ajax_upload.urls')),\n    )\n\n1. That's it (don't forget include the Javascript as mentioned above).\n\n\nRunning the Tests\n-----------------\n::\n\n    ./manage.py test ajax_upload\n\n\nLicense\n-------\n\nThis app is licensed under the BSD license. See the LICENSE file for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/zmathew/django-ajax-upload-widget", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-ajax-upload-widget", "package_url": "https://pypi.org/project/django-ajax-upload-widget/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-ajax-upload-widget/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/zmathew/django-ajax-upload-widget"}, "release_url": "https://pypi.org/project/django-ajax-upload-widget/0.5.5/", "requires_dist": null, "requires_python": null, "summary": "Provides AJAX file upload functionality for FileFields and ImageFields with a simple widget replacement in the form.", "version": "0.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Provides AJAX file upload functionality for FileFields and ImageFields with a simple widget replacement in the form.</p>\n<p>No change is required your model fields or app logic. This plugin acts transparently so your model forms can treat files as if they were uploaded by \u201ctraditional\u201d browser file upload.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Drop-in replacement for Django\u2019s built-in <tt>ClearableFileInput</tt> widget (no change required to your model).</li>\n<li>Works in all major browsers including IE 7+.</li>\n<li>Random hash string added to file names to ensure uploaded file paths are not guessable by others.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Refer to the <tt>example</tt> app included in the package for a working example.</p>\n<div id=\"server-side\">\n<h3>Server Side</h3>\n<p>In your form, use the <tt>AjaxClearableFileInput</tt> on your <tt>FileField</tt> or <tt>ImageField</tt>.</p>\n<pre>from django import forms\nfrom ajax_upload.widgets import AjaxClearableFileInput\n\nclass MyForm(forms.Form):\n    my_image_field = forms.ImageField(widget=AjaxClearableFileInput())\n</pre>\n<p>Or, if using a <tt>ModelForm</tt> you can just override the widget.</p>\n<pre>from django import forms\nfrom ajax_upload.widgets import AjaxClearableFileInput\n\nclass MyForm(forms.ModelForm):\n    class Meta:\n        model = MyModel\n        widgets = {\n            'my_image_field': AjaxClearableFileInput\n        }\n</pre>\n</div>\n<div id=\"client-side\">\n<h3>Client Side</h3>\n<p>Include the Javascript (and optionally CSS) files in your page and call the <tt>autoDiscover</tt> function.\nThis will search the page for all the AJAX file input fields and apply the necessary Javascript.</p>\n<pre>&lt;link href=\"{{ STATIC_URL }}ajax_upload/css/ajax-upload-widget.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n&lt;script src=\"{{ STATIC_URL }}ajax_upload/js/jquery.iframe-transport.js\"&gt;&lt;/script&gt;\n&lt;script src=\"{{ STATIC_URL }}ajax_upload/js/ajax-upload-widget.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    $(function() {\n        AjaxUploadWidget.autoDiscover();\n    });\n&lt;/script&gt;\n</pre>\n<p>You can also pass options to <tt>autoDiscover()</tt>:</p>\n<pre>&lt;script&gt;\n    $(function() {\n        AjaxUploadWidget.autoDiscover({\n            changeButtonText: 'Click to change',\n            onError: function(data) { alert('Error!'); }\n            // see source for full list of options\n        });\n    });\n&lt;/script&gt;\n</pre>\n<p>OR \u2026 you can explicitly instantiate an AjaxUploadWidget on an AJAX file input field:</p>\n<pre>&lt;input id=\"Foo\" name=\"foo\" type=\"file\" data-upload-url=\"/ajax-upload/\" data-filename=\"\" data-required=\"\"/&gt;\n&lt;!-- The input field needs to be outputed by Django to contain the appropriate data attributes --&gt;\n\n&lt;script&gt;\n    new AjaxUploadWidget($('#Foo'), {\n        // options\n    });\n&lt;/script&gt;\n</pre>\n</div>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>jQuery 1.7+</li>\n<li>jQuery Iframe Transport plugin (included in this package)</li>\n</ul>\n</div>\n<div id=\"app-installation\">\n<h2>App Installation</h2>\n<ol>\n<li>Add <tt>ajax_upload</tt> to your <tt>INSTALLED_APPS</tt> setting.</li>\n</ol>\n<p>1. Hook in the urls.</p>\n<pre># urls.py\nurlpatterns += patterns('',\n    (r'^ajax-upload/', include('ajax_upload.urls')),\n)\n</pre>\n<ol>\n<li>That\u2019s it (don\u2019t forget include the Javascript as mentioned above).</li>\n</ol>\n</div>\n<div id=\"running-the-tests\">\n<h2>Running the Tests</h2>\n<pre>./manage.py test ajax_upload\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This app is licensed under the BSD license. See the LICENSE file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 922877, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "a300abc6f6c5ef3e389a02fe51eb8573", "sha256": "d5ad7689448d78a438a57ca381616249a50b06422d81790c8c88bcf31cbbc316"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a300abc6f6c5ef3e389a02fe51eb8573", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6430, "upload_time": "2012-08-26T19:42:57", "upload_time_iso_8601": "2012-08-26T19:42:57.067559Z", "url": "https://files.pythonhosted.org/packages/96/8f/03d9666b6ffc211c3ce6d02d73b9c34701d74d51222193acf55912229b27/django-ajax-upload-widget-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1d65e4a196f5098f14d4eb82ccf35bfd", "sha256": "db6a5dcb44506cb3727a0145fd304129b49b72afb502c65245f98fd9646bf39c"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.1.tar.gz", "has_sig": false, "md5_digest": "1d65e4a196f5098f14d4eb82ccf35bfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6457, "upload_time": "2012-08-26T20:02:14", "upload_time_iso_8601": "2012-08-26T20:02:14.606230Z", "url": "https://files.pythonhosted.org/packages/01/92/b2fe5f8121ec18ba95d4fe1399ff9879bb8bab872c072b0351a22bb0dd56/django-ajax-upload-widget-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "7e2c2acfcc72f8b0279caa8fc4d6dbb4", "sha256": "16ec2dcb38429de53e58c247f37b0ed2443b841b4a0bef59261836dd604d2adf"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.2.tar.gz", "has_sig": false, "md5_digest": "7e2c2acfcc72f8b0279caa8fc4d6dbb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82258, "upload_time": "2012-09-10T14:59:53", "upload_time_iso_8601": "2012-09-10T14:59:53.281308Z", "url": "https://files.pythonhosted.org/packages/bf/95/bee56b7ee8ceb8d514ce266c22317c3536383bbed79cbd3a490fa38ef02c/django-ajax-upload-widget-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "aeea18634d7c3b32521e1aa69235e383", "sha256": "775adda4d97ce462c6d0ec975844499be77731808b73d1fba5192a946a64a149"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.3.tar.gz", "has_sig": false, "md5_digest": "aeea18634d7c3b32521e1aa69235e383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82666, "upload_time": "2012-11-05T22:05:43", "upload_time_iso_8601": "2012-11-05T22:05:43.449126Z", "url": "https://files.pythonhosted.org/packages/fb/02/6b496a4e567be69d813ffb2a2cc6b398acd808b90b2257dfa31bb133da3f/django-ajax-upload-widget-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "117ee85f8d6e61371ca9ad649dd99a5f", "sha256": "93fbf08ec82746be27675501802cea478c6f6425a36e1c6f1c5073d64b8b2ca2"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.4.tar.gz", "has_sig": false, "md5_digest": "117ee85f8d6e61371ca9ad649dd99a5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83271, "upload_time": "2013-10-17T01:34:17", "upload_time_iso_8601": "2013-10-17T01:34:17.816385Z", "url": "https://files.pythonhosted.org/packages/cf/ed/b82905a5ba7498cd6152ae3e93bd88fb743e7806374fa8cd80f9734d57f2/django-ajax-upload-widget-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "b0efcb721b789a4744500ce32ab2f7a6", "sha256": "559ec219cad196769f9d52a63c6189efc6a4c581f48ae1b372c3176f1674ff26"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.5.tar.gz", "has_sig": false, "md5_digest": "b0efcb721b789a4744500ce32ab2f7a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83308, "upload_time": "2013-11-18T17:26:03", "upload_time_iso_8601": "2013-11-18T17:26:03.298533Z", "url": "https://files.pythonhosted.org/packages/96/31/1d5c1ab28da5995bbf39422e147ed6c144fb00957cec2a03c0e717e804dc/django-ajax-upload-widget-0.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0efcb721b789a4744500ce32ab2f7a6", "sha256": "559ec219cad196769f9d52a63c6189efc6a4c581f48ae1b372c3176f1674ff26"}, "downloads": -1, "filename": "django-ajax-upload-widget-0.5.5.tar.gz", "has_sig": false, "md5_digest": "b0efcb721b789a4744500ce32ab2f7a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83308, "upload_time": "2013-11-18T17:26:03", "upload_time_iso_8601": "2013-11-18T17:26:03.298533Z", "url": "https://files.pythonhosted.org/packages/96/31/1d5c1ab28da5995bbf39422e147ed6c144fb00957cec2a03c0e717e804dc/django-ajax-upload-widget-0.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:44 2020"}