{"info": {"author": "Steve Mactaggart", "author_email": "steve@whitesquaresoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Code Generators", "Topic :: System :: Boot", "Topic :: Utilities"], "description": "Config Butler\n=============\n\n.. image:: https://travis-ci.org/stevemac007/config-butler.svg?branch=master\n   :target: https://travis-ci.org/stevemac007/config-butler\n   :alt: Travis build badge\n\n.. image:: https://coveralls.io/repos/github/stevemac007/config-butler/badge.svg?branch=master\n   :target: https://coveralls.io/github/stevemac007/config-butler?branch=master\n   :alt: Coveralls build badge\n\n.. image:: https://img.shields.io/pypi/v/configbutler.svg\n   :target: https://pypi.python.org/pypi/configbutler/\n   :alt: PyPI version badge\n\n\nThis tool is an extensible framework that provides an ability to manage\nserver configuration files composed from properties available in the\nservers environment.\n\nModern server solutions are comprimised of many components, which we\ncurrently build and manage in a very monolitic way. This tool aims to\ninverse the coupling of service configuration in a kind of dependancy\ninjection workflow.\n\nConfiguration\n-------------\n\nThe tool holds a strong opinion of convention over configuration, but\naims to support extensions a key points to enable integration and\ncustomisation to a wide range of solution requirements.\n\nAt its heart is the ``/etc/configbutler`` folder, which contains a\nnumber of service config definitions which drive the framework to\nsupport ``on-boot`` configuration of services.\n\nThese service files are enumerated in alphabetical order to provide a\ncontrolled sequence. The theory of design is that different services can\ncompose different config sets into a single server, allowing the actual\nvalues and configuration to be resolved at runtime.\n\nThese service files can contain multiple outputs resolved from a single\nset of properties.\n\nThe output of the configuration files are templated using jinja, with a\nmap of parameters used for flow control and replacement.\n\nThe properties are resolved through a number of extensible sources such\nas:\n\n-  local host information\n-  AWS instance tags\n-  AWS instance metadata\n-  AWS SSM parameter store\n\n``003-example.config``\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   format: 1.0\n   properties:\n\n       HOST_NAME: host|hostname\n       HOST_MEMORY: host|total_memory\n       ENVIRONMENT: aws|tags|aws:cloudformation:stack-name\n\n       appd_enabled: aws|paramstore|${ENVIRONMENT}.appd_enabled\n\n       application_name: string|sample-app\n       controller_licence: aws|paramstore|${ENVIRONMENT}/appd/licence\n       controller_host: aws|paramstore|${ENVIRONMENT}/appd/controller\n       controller_url: string|/\n       controller_port: string|1234\n       use_ssl: string|true\n\n       jvm_memory: math|multiply|${HOST_MEMORY}|0.8\n\n   files:\n       -\n         mode: jinja2\n         src: /tmp/appdynamics.conf.j2\n         dest: /opt/appd/config/appdynamics.conf\n\n       - mode: jinja2\n         src: /tmp/setenv.sh.j2\n         dest: /usr/local/tomcat7/conf/setenv.sh\n\nAnd config templates\n\n``/tmp/setenv.sh.j2``\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   export JAVA_OPTS=\"-Xmx {{ jvm_memory }}\"\n\n   {% if appd_enabled %}\n   export JAVA_OPTS=\"${JAVA_OPTS} -javaagent:/opt/appd/appd.jar\"\n   {% endif %}\n\n``/tmp/appdynamics.conf.j2``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   <controller-info>\n\n       <controller-host>{{ controller_host }}.{{ controller_url }}</controller-host>\n       <controller-port>{{ controller_port }}</controller-port>\n       <controller-ssl-enabled>{{ use_ssl }}</controller-ssl-enabled>\n       <enable-orchestration>false</enable-orchestration>\n       <unique-host-id></unique-host-id>\n       <account-access-key>{{ controller_licence }} </account-access-key>\n       <account-name>{{ controller_host }}</account-name>\n       <machine-path></machine-path>\n       <application-name>{{ application_name }}</application-name>\n       <tier-name>{{ tier_name }}</tier-name>\n       <node-name>{{ ansible_ec2_hostname }}</node-name>\n\n   </controller-info>\n\nProperty functions\n------------------\n\nMath functions\n~~~~~~~~~~~~~~\n\nFunctions that can be used to to manipulate figures to perform basic\ncalculations\n\n-  ``add`` - adds two parameters together (eg.\n   ``math|add|1|${CLUSTER_SIZE}``)\n-  ``subtract`` - subtracts the second from the first parameter (eg.\n   ``math|subtract|15|${CLUSTER_SIZE}``)\n-  ``multiply`` - multiplys the parameters together (eg.\n   ``math|multiply|${TOTAL_MEMORY}|0.8``)\n-  ``divide`` - divides the first by the second parameter (eg.\n   ``math|divide|${TOTAL_MEMORY}|1024``)\n\n*Example usage*\n\n::\n\n   properties:\n       HOST_MEMORY: host|total_memory\n       sub_memory: math|multiply|${HOST_MEMORY}|0.8\n       jvm_memory: math|divide|${sub_memory}|1024\n\nMap lookups\n~~~~~~~~~~~\n\n``Un supported (At the moment!)``\n\nConditionals\n~~~~~~~~~~~~\n\n``Un supported (At the moment!)``\n\nProperty scope\n--------------\n\nhost\n~~~~\n\n-  ``hostname`` - the local hostname (eg ``host|hostname``)\n-  ``fqdn`` - the local fully qualified domain name (eg ``host|fqdn``)\n-  ``ipaddress`` - the ipaddress of eth0 (eg ``host|ipaddress``)\n-  ``cpu_count`` - the number of available CPU cores (eg\n   ``host|cpu_count``)\n-  ``total_memory`` - the total memory available (eg\n   ``host|total_memory``)\n\n*Example usage*\n\n::\n\n   properties:\n       HOSTNAME: host|hostname\n\naws\n~~~\n\nA set of properties that are resolved from AWS scoped services\n\nmetadata\n^^^^^^^^\n\n-  ``account_id``\n-  ``ami_id``\n-  ``ami_launch_index``\n-  ``availability_zone``\n-  ``iam_info``\n-  ``instance_action``\n-  ``instance_id``\n-  ``instance_profile_arn``\n-  ``instance_profile_id``\n-  ``instance_type``\n-  ``private_hostname``\n-  ``private_ipv4``\n-  ``public_hostname``\n-  ``public_ipv4``\n-  ``security_groups``\n-  ``region``\n\n*Example usage*\n\n::\n\n   properties:\n       aws_account_id: aws|metadata|account_id\n       aws_region: aws|metadata|region\n       instance_type: aws|metadata|instance_type\n       internal_ip: aws|metadata|private_ipv4\n\ntags\n^^^^\n\nTag values are lookups to the current host\u2019s tags.\n\neg. Cloudformation tags\n\n-  ``aws:cloudformation:logical-id``\n-  ``aws:cloudformation:stack-id``\n-  ``aws:cloudformation:stack-name``\n\n*Example usage*\n\n::\n\n   properties:\n       stack_name: aws|tags|aws:cloudformation:stack-name\n       monitoring_tags: aws|tags|monitoring\n\n\nIn some locations it has been identified that Tags were not resolvable when the servers were initially launched.\nIf no tags are returned for the current host (but asked for in configuration) ``configbutler`` assumes they have not been set yet and will wait and retry the tag lookup.\n\nThis lookup will occur 5 times, each one doubling the time waited between requests.\n\n::\n\n   ERROR:configbutler:No AWS::tag values found, waiting 1sec to retry.\n   ERROR:configbutler:No AWS::tag values found, waiting 2sec to retry.\n   ERROR:configbutler:No AWS::tag values found, waiting 4sec to retry.\n   ERROR:configbutler:No AWS::tag values found, waiting 8sec to retry.\n   ERROR:configbutler:No AWS::tag values found, waiting 16sec to retry.\n   ERROR:configbutler:No AWS::tag values found, continuing with no tags.\n\nIf eventually no tags are found after 5 attempts, ``configbutler`` will give up and return ``None`` for any additional tag lookup.\n\nparamstore\n^^^^^^^^^^\n\nValues looked up from parameter store, where the key may be composed by other resolved variables.\n\n*Example usage*\n\n::\n\n   properties:\n       ENVIRONMENT: string|test\n       application: string|garden\n\n       splunk_password: aws|paramstore|/Splunk/SplunkPassword\n       controller_licence: aws|paramstore|/${application}/${ENVIRONMENT}/AppD/account-access-key\n       controller_host: aws|paramstore|/${application}/${ENVIRONMENT}/AppD/controller", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/stevemac007/config-butler/archive/0.1.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stevemac007/config-butler", "keywords": "config configuration generation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "configbutler", "package_url": "https://pypi.org/project/configbutler/", "platform": "", "project_url": "https://pypi.org/project/configbutler/", "project_urls": {"Download": "https://github.com/stevemac007/config-butler/archive/0.1.4.tar.gz", "Homepage": "https://github.com/stevemac007/config-butler"}, "release_url": "https://pypi.org/project/configbutler/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Service to manage generation of server config from various configuration sources", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/stevemac007/config-butler\" rel=\"nofollow\"><img alt=\"Travis build badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a1219b102d2c3229776c3b4f0cb968e6555ab8d/68747470733a2f2f7472617669732d63692e6f72672f73746576656d61633030372f636f6e6669672d6275746c65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/stevemac007/config-butler?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls build badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcf00dd5dd6f2a1a45d8a0490f885d41aa0e640b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f73746576656d61633030372f636f6e6669672d6275746c65722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/configbutler/\" rel=\"nofollow\"><img alt=\"PyPI version badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e1fc74d67b9c5280fe811b18ae5875a6188b6d1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6e6669676275746c65722e737667\"></a>\n<p>This tool is an extensible framework that provides an ability to manage\nserver configuration files composed from properties available in the\nservers environment.</p>\n<p>Modern server solutions are comprimised of many components, which we\ncurrently build and manage in a very monolitic way. This tool aims to\ninverse the coupling of service configuration in a kind of dependancy\ninjection workflow.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The tool holds a strong opinion of convention over configuration, but\naims to support extensions a key points to enable integration and\ncustomisation to a wide range of solution requirements.</p>\n<p>At its heart is the <tt>/etc/configbutler</tt> folder, which contains a\nnumber of service config definitions which drive the framework to\nsupport <tt><span class=\"pre\">on-boot</span></tt> configuration of services.</p>\n<p>These service files are enumerated in alphabetical order to provide a\ncontrolled sequence. The theory of design is that different services can\ncompose different config sets into a single server, allowing the actual\nvalues and configuration to be resolved at runtime.</p>\n<p>These service files can contain multiple outputs resolved from a single\nset of properties.</p>\n<p>The output of the configuration files are templated using jinja, with a\nmap of parameters used for flow control and replacement.</p>\n<p>The properties are resolved through a number of extensible sources such\nas:</p>\n<ul>\n<li>local host information</li>\n<li>AWS instance tags</li>\n<li>AWS instance metadata</li>\n<li>AWS SSM parameter store</li>\n</ul>\n<div id=\"example-config\">\n<h3><tt><span class=\"pre\">003-example.config</span></tt></h3>\n<pre>format: 1.0\nproperties:\n\n    HOST_NAME: host|hostname\n    HOST_MEMORY: host|total_memory\n    ENVIRONMENT: aws|tags|aws:cloudformation:stack-name\n\n    appd_enabled: aws|paramstore|${ENVIRONMENT}.appd_enabled\n\n    application_name: string|sample-app\n    controller_licence: aws|paramstore|${ENVIRONMENT}/appd/licence\n    controller_host: aws|paramstore|${ENVIRONMENT}/appd/controller\n    controller_url: string|/\n    controller_port: string|1234\n    use_ssl: string|true\n\n    jvm_memory: math|multiply|${HOST_MEMORY}|0.8\n\nfiles:\n    -\n      mode: jinja2\n      src: /tmp/appdynamics.conf.j2\n      dest: /opt/appd/config/appdynamics.conf\n\n    - mode: jinja2\n      src: /tmp/setenv.sh.j2\n      dest: /usr/local/tomcat7/conf/setenv.sh\n</pre>\n<p>And config templates</p>\n</div>\n<div id=\"tmp-setenv-sh-j2\">\n<h3><tt>/tmp/setenv.sh.j2</tt></h3>\n<pre>export JAVA_OPTS=\"-Xmx {{ jvm_memory }}\"\n\n{% if appd_enabled %}\nexport JAVA_OPTS=\"${JAVA_OPTS} -javaagent:/opt/appd/appd.jar\"\n{% endif %}\n</pre>\n</div>\n<div id=\"tmp-appdynamics-conf-j2\">\n<h3><tt>/tmp/appdynamics.conf.j2</tt></h3>\n<pre>&lt;controller-info&gt;\n\n    &lt;controller-host&gt;{{ controller_host }}.{{ controller_url }}&lt;/controller-host&gt;\n    &lt;controller-port&gt;{{ controller_port }}&lt;/controller-port&gt;\n    &lt;controller-ssl-enabled&gt;{{ use_ssl }}&lt;/controller-ssl-enabled&gt;\n    &lt;enable-orchestration&gt;false&lt;/enable-orchestration&gt;\n    &lt;unique-host-id&gt;&lt;/unique-host-id&gt;\n    &lt;account-access-key&gt;{{ controller_licence }} &lt;/account-access-key&gt;\n    &lt;account-name&gt;{{ controller_host }}&lt;/account-name&gt;\n    &lt;machine-path&gt;&lt;/machine-path&gt;\n    &lt;application-name&gt;{{ application_name }}&lt;/application-name&gt;\n    &lt;tier-name&gt;{{ tier_name }}&lt;/tier-name&gt;\n    &lt;node-name&gt;{{ ansible_ec2_hostname }}&lt;/node-name&gt;\n\n&lt;/controller-info&gt;\n</pre>\n</div>\n</div>\n<div id=\"property-functions\">\n<h2>Property functions</h2>\n<div id=\"math-functions\">\n<h3>Math functions</h3>\n<p>Functions that can be used to to manipulate figures to perform basic\ncalculations</p>\n<ul>\n<li><tt>add</tt> - adds two parameters together (eg.\n<tt><span class=\"pre\">math|add|1|${CLUSTER_SIZE}</span></tt>)</li>\n<li><tt>subtract</tt> - subtracts the second from the first parameter (eg.\n<tt><span class=\"pre\">math|subtract|15|${CLUSTER_SIZE}</span></tt>)</li>\n<li><tt>multiply</tt> - multiplys the parameters together (eg.\n<tt><span class=\"pre\">math|multiply|${TOTAL_MEMORY}|0.8</span></tt>)</li>\n<li><tt>divide</tt> - divides the first by the second parameter (eg.\n<tt><span class=\"pre\">math|divide|${TOTAL_MEMORY}|1024</span></tt>)</li>\n</ul>\n<p><em>Example usage</em></p>\n<pre>properties:\n    HOST_MEMORY: host|total_memory\n    sub_memory: math|multiply|${HOST_MEMORY}|0.8\n    jvm_memory: math|divide|${sub_memory}|1024\n</pre>\n</div>\n<div id=\"map-lookups\">\n<h3>Map lookups</h3>\n<p><tt>Un supported (At the moment!)</tt></p>\n</div>\n<div id=\"conditionals\">\n<h3>Conditionals</h3>\n<p><tt>Un supported (At the moment!)</tt></p>\n</div>\n</div>\n<div id=\"property-scope\">\n<h2>Property scope</h2>\n<div id=\"host\">\n<h3>host</h3>\n<ul>\n<li><tt>hostname</tt> - the local hostname (eg <tt>host|hostname</tt>)</li>\n<li><tt>fqdn</tt> - the local fully qualified domain name (eg <tt>host|fqdn</tt>)</li>\n<li><tt>ipaddress</tt> - the ipaddress of eth0 (eg <tt>host|ipaddress</tt>)</li>\n<li><tt>cpu_count</tt> - the number of available CPU cores (eg\n<tt>host|cpu_count</tt>)</li>\n<li><tt>total_memory</tt> - the total memory available (eg\n<tt>host|total_memory</tt>)</li>\n</ul>\n<p><em>Example usage</em></p>\n<pre>properties:\n    HOSTNAME: host|hostname\n</pre>\n</div>\n<div id=\"aws\">\n<h3>aws</h3>\n<p>A set of properties that are resolved from AWS scoped services</p>\n<div id=\"metadata\">\n<h4>metadata</h4>\n<ul>\n<li><tt>account_id</tt></li>\n<li><tt>ami_id</tt></li>\n<li><tt>ami_launch_index</tt></li>\n<li><tt>availability_zone</tt></li>\n<li><tt>iam_info</tt></li>\n<li><tt>instance_action</tt></li>\n<li><tt>instance_id</tt></li>\n<li><tt>instance_profile_arn</tt></li>\n<li><tt>instance_profile_id</tt></li>\n<li><tt>instance_type</tt></li>\n<li><tt>private_hostname</tt></li>\n<li><tt>private_ipv4</tt></li>\n<li><tt>public_hostname</tt></li>\n<li><tt>public_ipv4</tt></li>\n<li><tt>security_groups</tt></li>\n<li><tt>region</tt></li>\n</ul>\n<p><em>Example usage</em></p>\n<pre>properties:\n    aws_account_id: aws|metadata|account_id\n    aws_region: aws|metadata|region\n    instance_type: aws|metadata|instance_type\n    internal_ip: aws|metadata|private_ipv4\n</pre>\n</div>\n<div id=\"tags\">\n<h4>tags</h4>\n<p>Tag values are lookups to the current host\u2019s tags.</p>\n<p>eg. Cloudformation tags</p>\n<ul>\n<li><tt><span class=\"pre\">aws:cloudformation:logical-id</span></tt></li>\n<li><tt><span class=\"pre\">aws:cloudformation:stack-id</span></tt></li>\n<li><tt><span class=\"pre\">aws:cloudformation:stack-name</span></tt></li>\n</ul>\n<p><em>Example usage</em></p>\n<pre>properties:\n    stack_name: aws|tags|aws:cloudformation:stack-name\n    monitoring_tags: aws|tags|monitoring\n</pre>\n<p>In some locations it has been identified that Tags were not resolvable when the servers were initially launched.\nIf no tags are returned for the current host (but asked for in configuration) <tt>configbutler</tt> assumes they have not been set yet and will wait and retry the tag lookup.</p>\n<p>This lookup will occur 5 times, each one doubling the time waited between requests.</p>\n<pre>ERROR:configbutler:No AWS::tag values found, waiting 1sec to retry.\nERROR:configbutler:No AWS::tag values found, waiting 2sec to retry.\nERROR:configbutler:No AWS::tag values found, waiting 4sec to retry.\nERROR:configbutler:No AWS::tag values found, waiting 8sec to retry.\nERROR:configbutler:No AWS::tag values found, waiting 16sec to retry.\nERROR:configbutler:No AWS::tag values found, continuing with no tags.\n</pre>\n<p>If eventually no tags are found after 5 attempts, <tt>configbutler</tt> will give up and return <tt>None</tt> for any additional tag lookup.</p>\n</div>\n<div id=\"paramstore\">\n<h4>paramstore</h4>\n<p>Values looked up from parameter store, where the key may be composed by other resolved variables.</p>\n<p><em>Example usage</em></p>\n<pre>properties:\n    ENVIRONMENT: string|test\n    application: string|garden\n\n    splunk_password: aws|paramstore|/Splunk/SplunkPassword\n    controller_licence: aws|paramstore|/${application}/${ENVIRONMENT}/AppD/account-access-key\n    controller_host: aws|paramstore|/${application}/${ENVIRONMENT}/AppD/controller\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3905476, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "a9a609c1aa71a2f8237dac019f8e4c19", "sha256": "7bafe5eaaa6edbeb16426d1f7e9c4ec03836f41387b24a0edc3816ae12d2467c"}, "downloads": -1, "filename": "configbutler-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a9a609c1aa71a2f8237dac019f8e4c19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8377, "upload_time": "2018-05-07T10:48:56", "upload_time_iso_8601": "2018-05-07T10:48:56.430236Z", "url": "https://files.pythonhosted.org/packages/00/c7/a4a0127c87a6b187533ea4d20c211afa52538338f411bd18ee79bd1d3921/configbutler-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "850eb71be45a0377eb0a59b666eae58e", "sha256": "f3708a2cbf6c5d1db1efe3ad3d24a4e9a0785d4b80c0c9216fe0677d9687b5e2"}, "downloads": -1, "filename": "configbutler-0.0.3.tar.gz", "has_sig": false, "md5_digest": "850eb71be45a0377eb0a59b666eae58e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9129, "upload_time": "2018-05-07T10:55:16", "upload_time_iso_8601": "2018-05-07T10:55:16.541774Z", "url": "https://files.pythonhosted.org/packages/5b/06/a00c76816e7201e8c91609b91d473bacfe29702ad7e7737130b716b80022/configbutler-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "3a443d5b7d044a6c50640ee0ab3e37a5", "sha256": "a0ad138bfbe7c228c70f568975c07028908646a7df23dc324962def4a9e5a3fd"}, "downloads": -1, "filename": "configbutler-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3a443d5b7d044a6c50640ee0ab3e37a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8562, "upload_time": "2018-05-07T11:24:37", "upload_time_iso_8601": "2018-05-07T11:24:37.589195Z", "url": "https://files.pythonhosted.org/packages/94/2e/076c49fe558e9869471ede8231f7738e30340bb091909a19944729da8bb3/configbutler-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ad763014a783a45388dd51c9655e4c31", "sha256": "339feb7f6eaee415ce9025712af732a03b344097fae210145dcc75ae5b95a600"}, "downloads": -1, "filename": "configbutler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ad763014a783a45388dd51c9655e4c31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8823, "upload_time": "2018-05-08T10:56:56", "upload_time_iso_8601": "2018-05-08T10:56:56.155896Z", "url": "https://files.pythonhosted.org/packages/12/8c/1406e543afb8169f90788bc911f169c2dd742836245f86558cb9919e2e54/configbutler-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d6a3e45aeeb3def52b462347fd78af0d", "sha256": "88a94f6d2eaaa0857539f2a5d24b664a5800b6cbc7308c95fc1c4aa4383f52df"}, "downloads": -1, "filename": "configbutler-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d6a3e45aeeb3def52b462347fd78af0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8830, "upload_time": "2018-05-14T00:54:32", "upload_time_iso_8601": "2018-05-14T00:54:32.807367Z", "url": "https://files.pythonhosted.org/packages/9f/72/e641a0f7928dd0ad73387107ebaad12e55c728bdb02c957c64a4948ac8c9/configbutler-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0886141f249ae98de59946d54188d25c", "sha256": "be120fa377a7f22f6c4f3767e32a9de084d3764c9c685a6a7ac036a5506ea896"}, "downloads": -1, "filename": "configbutler-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0886141f249ae98de59946d54188d25c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8865, "upload_time": "2018-05-26T00:44:06", "upload_time_iso_8601": "2018-05-26T00:44:06.287648Z", "url": "https://files.pythonhosted.org/packages/21/69/18b949e9100def0e454d9c0c4cc2162792d508f461b00464dbaeae5bad8f/configbutler-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a8b8e39c306544909795fbbec2d1cad3", "sha256": "cec15015c7eb27c91de24e15b00e7f9ef6867cc662f58d25422c3b9f850adc60"}, "downloads": -1, "filename": "configbutler-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a8b8e39c306544909795fbbec2d1cad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9358, "upload_time": "2018-05-28T12:05:34", "upload_time_iso_8601": "2018-05-28T12:05:34.716242Z", "url": "https://files.pythonhosted.org/packages/c5/42/799800d99acdc73e6490b7a4056bc8246d8496c5b36a45647ab2699a60e5/configbutler-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8b8e39c306544909795fbbec2d1cad3", "sha256": "cec15015c7eb27c91de24e15b00e7f9ef6867cc662f58d25422c3b9f850adc60"}, "downloads": -1, "filename": "configbutler-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a8b8e39c306544909795fbbec2d1cad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9358, "upload_time": "2018-05-28T12:05:34", "upload_time_iso_8601": "2018-05-28T12:05:34.716242Z", "url": "https://files.pythonhosted.org/packages/c5/42/799800d99acdc73e6490b7a4056bc8246d8496c5b36a45647ab2699a60e5/configbutler-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:58 2020"}