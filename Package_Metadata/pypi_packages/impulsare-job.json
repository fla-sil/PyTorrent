{"info": {"author": "Emmanuel Dyan", "author_email": "emmanuel@impulsare.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: System :: Distributed Computing", "Topic :: System :: Systems Administration"], "description": "impulsare/job\n=============\n\n\n.. image:: https://travis-ci.org/impulsare/job.svg?branch=master\n    :target: https://travis-ci.org/impulsare/job\n\n.. image:: https://scrutinizer-ci.com/g/impulsare/job/badges/quality-score.png?b=master\n    :target: https://scrutinizer-ci.com/g/impulsare/job/\n\n.. image:: https://scrutinizer-ci.com/g/impulsare/job/badges/coverage.png?b=master\n    :target: https://travis-ci.org/impulsare/job\n\nOverview\n--------\n\nA jobs manager, specific to **impulsare**. It reads, write and delete jobs from an sqlite db.\n\nSee ``tests/static/`` for examples of configuration.\n\n\nInstallation / Usage\n====================\nTo install use pip:\n\n.. code-block:: bash\n\n    $ pip install --upgrade impulsare-job\n\n\nConfiguration\n=============\nYou need to create a configuration file that contains:\n\n.. code-block:: yaml\n\n    job:\n        db: /tmp/test.db # required\n\n\nArchitecture\n============\nWriter\n------\nimpulsare/job implements a writer to :\n\n- Create / Update jobs (``save()``)\n- Delete jobs (``delete()``)\n- Add / Remove Hooks (`hooks_writer.add_hook()` and ``hooks_writer.del_hook()``)\n- Add / Remove Fields (``fields_writer.add_field()`` and ``fields_writer.del_field()``)\n- Add / Remove Rules related to Fields (``fields_writer.add_rule()`` and ``fields_writer.del_rule()``)\n\n\nReader\n------\nAnd a Reader to :\n\n- Get a Job\n- Get related hooks\n- Get related fields + their rules\n\n\nProperties of a job\n-------------------------\n\n.. code-block:: python\n\n    {\n        'name': str, # required\n        'active': bool, # default : True\n        'description': str,\n        'priority': int, # default : 1\n        'input': str, # required\n        'input_parameters': dict,\n        'output': str, # required\n        'output_parameters': dict,\n        'mode': str # c (create), u (update), cu (create/update), d (delete). Default: c\n    }\n\n\nExamples\n--------\nCreate a simple Job (no hooks / rules)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from impulsare_job import Writer\n\n\n    writer = Writer('/etc/impulsare/config.yml')\n    writer.set_prop('name', 'My Job')\n    writer.set_prop('input', 'csv')\n    writer.set_prop('input_parameters', {'delimiter': 'csv'})\n    writer.set_prop('output', 'sql')\n    writer.set_prop('output_parameters', {'db': 'test'})\n    job = writer.save()\n\n\nUpdate a Job\n~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from impulsare_job import Writer\n\n\n    # Lets assume the job id = 1\n    writer = Writer('/etc/impulsare/config.yml', 'My Job')\n    job = writer.get_job()\n    print(job.name)\n    # Output: 'My Job'\n\n    # Set the job to Inactive\n    writer.set_prop('active', False)\n    writer.save()\n\n\n\nVerify if a hook exists, else add it\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    # .... continuation of code above\n    if not writer.hooks_writer.hook_exists('test'):\n        writer.hooks_writer.add_hook(name='upload_file', method='upload_file', when='after_process')\n\n\nAllowed properties for hooks:\n\n.. code-block:: python\n\n    {\n        'name': str, # required\n        'method': str, # required\n        'when': str, # required\n        'description': str,\n        'active': bool, # Default : True\n        'priority': int # Default: 1\n    }\n\n\nOther methods:\n\n- `hooks_writer.get_hooks`\n- `hooks_writer.del_hook`\n\n\nThere is no method `update`, to update a hook, delete it then recreate it.\n\n\nVerify if a field exists, else update it and add a transformation rule\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n**Warning** : a field is identified by its ``output`` value that must be unique\n(we can't send two values for the same field while we can use the same input field\nfor various output).\n\n\n**Field**\n\n.. code-block:: python\n\n    # .... continuation of code above\n    if writer.fields_writer.field_exists('firstname'):\n        writer.fields_writer.del_field('firstname')\n\n    writer.fields_writer.add_field(input='first_name', output='firstname')\n\n\nAllowed properties for fields:\n\n.. code-block:: python\n\n    {\n        'input': str, # required\n        'output': str, # required\n    }\n\n\nOther methods:\n\n- `fields_writer.get_field`\n- `fields_writer.get_fields`\n\n\nThere is no method `update`, to update a field, delete it then recreate it.\n\n\nAdd a rule\n~~~~~~~~~~\n\n.. code-block:: python\n\n    writer.fields_writer.add_rule(output_field='firstname', name='uppercase', method='uppercase')\n\n\nAllowed properties for rules:\n\n.. code-block:: python\n\n    {\n        'name': str, # required\n        'method': str, # required\n        'description': str,\n        'active': bool, # Default : True\n        'params': list,\n        'blocking': bool, # Default : False\n        'priority': int # Default: 1\n    }\n\n\nOther methods:\n\n- `fields_writer.del_rule`\n- `fields_writer.get_rules`\n- `fields_writer.rule_exists`\n\n\nThere is no method ``update``, to update a rule, delete it then recreate it.\n\n\nRetrieve a Job, its hooks and fields\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from impulsare_job import Reader\n\n\n    Reader = Reader('/etc/impulsare/config.yml', 'My Job')\n    job = Reader.get_job()\n    hooks = Reader.get_hooks()\n    fields = Reader.get_fields() # Get rules for first field : rules = fields[0].rules\n\n\nDevelopment & Tests\n===================\n\n.. code-block:: bash\n\n    $ pip install -r requirements.txt\n    $ pip install -r requirements-dev.txt\n    $ py.test\n\n\n\nTODO\n----\nDon't check if table exists on each model but do it on app installation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nTo get the DB :\n\n.. code-block:: python\n\n    from impulsare_job import models\n\n\n    db = models.get_db('/etc/impulsare/config.yml')\n    db.create_tables([models.Job, models.Hook, models.Rule])\n\n\nRefactor writer\n~~~~~~~~~~~~~~~\nTo have a class for hooks, and another for rules.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/impulsare/job/tarball/1.0a2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/impulsare/job", "keywords": "job,python,yaml", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "impulsare-job", "package_url": "https://pypi.org/project/impulsare-job/", "platform": "", "project_url": "https://pypi.org/project/impulsare-job/", "project_urls": {"Download": "https://github.com/impulsare/job/tarball/1.0a2", "Homepage": "https://github.com/impulsare/job"}, "release_url": "https://pypi.org/project/impulsare-job/1.0a2/", "requires_dist": null, "requires_python": "", "summary": "A job reader / writer to define mappings for impulsare.", "version": "1.0a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"impulsare-job\">\n<h2>impulsare/job</h2>\n<a href=\"https://travis-ci.org/impulsare/job\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/impulsare/job.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9bd22eff68ec9123a7ed02463f92bc872686f0c/68747470733a2f2f7472617669732d63692e6f72672f696d70756c736172652f6a6f622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://scrutinizer-ci.com/g/impulsare/job/\" rel=\"nofollow\"><img alt=\"https://scrutinizer-ci.com/g/impulsare/job/badges/quality-score.png?b=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08a650945e9ffa9614c9ec604e0707a7ee4159cd/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f696d70756c736172652f6a6f622f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/impulsare/job\" rel=\"nofollow\"><img alt=\"https://scrutinizer-ci.com/g/impulsare/job/badges/coverage.png?b=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee19ed73b033071b7f080fdd39ab231de526a0f8/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f696d70756c736172652f6a6f622f6261646765732f636f7665726167652e706e673f623d6d6173746572\"></a>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>A jobs manager, specific to <strong>impulsare</strong>. It reads, write and delete jobs from an sqlite db.</p>\n<p>See <tt>tests/static/</tt> for examples of configuration.</p>\n</div>\n</div>\n<div id=\"installation-usage\">\n<h2>Installation / Usage</h2>\n<p>To install use pip:</p>\n<pre>$ pip install --upgrade impulsare-job\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You need to create a configuration file that contains:</p>\n<pre><span class=\"nt\">job</span><span class=\"p\">:</span>\n    <span class=\"nt\">db</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/tmp/test.db</span> <span class=\"c1\"># required</span>\n</pre>\n</div>\n<div id=\"architecture\">\n<h2>Architecture</h2>\n<div id=\"writer\">\n<h3>Writer</h3>\n<p>impulsare/job implements a writer to :</p>\n<ul>\n<li>Create / Update jobs (<tt>save()</tt>)</li>\n<li>Delete jobs (<tt>delete()</tt>)</li>\n<li>Add / Remove Hooks (<cite>hooks_writer.add_hook()</cite> and <tt>hooks_writer.del_hook()</tt>)</li>\n<li>Add / Remove Fields (<tt>fields_writer.add_field()</tt> and <tt>fields_writer.del_field()</tt>)</li>\n<li>Add / Remove Rules related to Fields (<tt>fields_writer.add_rule()</tt> and <tt>fields_writer.del_rule()</tt>)</li>\n</ul>\n</div>\n<div id=\"reader\">\n<h3>Reader</h3>\n<p>And a Reader to :</p>\n<ul>\n<li>Get a Job</li>\n<li>Get related hooks</li>\n<li>Get related fields + their rules</li>\n</ul>\n</div>\n<div id=\"properties-of-a-job\">\n<h3>Properties of a job</h3>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"c1\"># default : True</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"s1\">'priority'</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"c1\"># default : 1</span>\n    <span class=\"s1\">'input'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'input_parameters'</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span>\n    <span class=\"s1\">'output'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'output_parameters'</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span>\n    <span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># c (create), u (update), cu (create/update), d (delete). Default: c</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<div id=\"create-a-simple-job-no-hooks-rules\">\n<h4>Create a simple Job (no hooks / rules)</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">impulsare_job</span> <span class=\"kn\">import</span> <span class=\"n\">Writer</span>\n\n\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">Writer</span><span class=\"p\">(</span><span class=\"s1\">'/etc/impulsare/config.yml'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'My Job'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'input'</span><span class=\"p\">,</span> <span class=\"s1\">'csv'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'input_parameters'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'delimiter'</span><span class=\"p\">:</span> <span class=\"s1\">'csv'</span><span class=\"p\">})</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"s1\">'sql'</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'output_parameters'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'db'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">})</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"update-a-job\">\n<h4>Update a Job</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">impulsare_job</span> <span class=\"kn\">import</span> <span class=\"n\">Writer</span>\n\n\n<span class=\"c1\"># Lets assume the job id = 1</span>\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">Writer</span><span class=\"p\">(</span><span class=\"s1\">'/etc/impulsare/config.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'My Job'</span><span class=\"p\">)</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">get_job</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"c1\"># Output: 'My Job'</span>\n\n<span class=\"c1\"># Set the job to Inactive</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">set_prop</span><span class=\"p\">(</span><span class=\"s1\">'active'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"verify-if-a-hook-exists-else-add-it\">\n<h4>Verify if a hook exists, else add it</h4>\n<pre><span class=\"c1\"># .... continuation of code above</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">hooks_writer</span><span class=\"o\">.</span><span class=\"n\">hook_exists</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">):</span>\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">hooks_writer</span><span class=\"o\">.</span><span class=\"n\">add_hook</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'upload_file'</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'upload_file'</span><span class=\"p\">,</span> <span class=\"n\">when</span><span class=\"o\">=</span><span class=\"s1\">'after_process'</span><span class=\"p\">)</span>\n</pre>\n<p>Allowed properties for hooks:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"c1\"># Default : True</span>\n    <span class=\"s1\">'priority'</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"c1\"># Default: 1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Other methods:</p>\n<ul>\n<li><cite>hooks_writer.get_hooks</cite></li>\n<li><cite>hooks_writer.del_hook</cite></li>\n</ul>\n<p>There is no method <cite>update</cite>, to update a hook, delete it then recreate it.</p>\n</div>\n<div id=\"verify-if-a-field-exists-else-update-it-and-add-a-transformation-rule\">\n<h4>Verify if a field exists, else update it and add a transformation rule</h4>\n<p><strong>Warning</strong> : a field is identified by its <tt>output</tt> value that must be unique\n(we can\u2019t send two values for the same field while we can use the same input field\nfor various output).</p>\n<p><strong>Field</strong></p>\n<pre><span class=\"c1\"># .... continuation of code above</span>\n<span class=\"k\">if</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">fields_writer</span><span class=\"o\">.</span><span class=\"n\">field_exists</span><span class=\"p\">(</span><span class=\"s1\">'firstname'</span><span class=\"p\">):</span>\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">fields_writer</span><span class=\"o\">.</span><span class=\"n\">del_field</span><span class=\"p\">(</span><span class=\"s1\">'firstname'</span><span class=\"p\">)</span>\n\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">fields_writer</span><span class=\"o\">.</span><span class=\"n\">add_field</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"o\">=</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s1\">'firstname'</span><span class=\"p\">)</span>\n</pre>\n<p>Allowed properties for fields:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'input'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'output'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Other methods:</p>\n<ul>\n<li><cite>fields_writer.get_field</cite></li>\n<li><cite>fields_writer.get_fields</cite></li>\n</ul>\n<p>There is no method <cite>update</cite>, to update a field, delete it then recreate it.</p>\n</div>\n<div id=\"add-a-rule\">\n<h4>Add a rule</h4>\n<pre><span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">fields_writer</span><span class=\"o\">.</span><span class=\"n\">add_rule</span><span class=\"p\">(</span><span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"s1\">'firstname'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'uppercase'</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'uppercase'</span><span class=\"p\">)</span>\n</pre>\n<p>Allowed properties for rules:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># required</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"c1\"># Default : True</span>\n    <span class=\"s1\">'params'</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">,</span>\n    <span class=\"s1\">'blocking'</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"c1\"># Default : False</span>\n    <span class=\"s1\">'priority'</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"c1\"># Default: 1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Other methods:</p>\n<ul>\n<li><cite>fields_writer.del_rule</cite></li>\n<li><cite>fields_writer.get_rules</cite></li>\n<li><cite>fields_writer.rule_exists</cite></li>\n</ul>\n<p>There is no method <tt>update</tt>, to update a rule, delete it then recreate it.</p>\n</div>\n<div id=\"retrieve-a-job-its-hooks-and-fields\">\n<h4>Retrieve a Job, its hooks and fields</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">impulsare_job</span> <span class=\"kn\">import</span> <span class=\"n\">Reader</span>\n\n\n<span class=\"n\">Reader</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"s1\">'/etc/impulsare/config.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'My Job'</span><span class=\"p\">)</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"o\">.</span><span class=\"n\">get_job</span><span class=\"p\">()</span>\n<span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"o\">.</span><span class=\"n\">get_hooks</span><span class=\"p\">()</span>\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"o\">.</span><span class=\"n\">get_fields</span><span class=\"p\">()</span> <span class=\"c1\"># Get rules for first field : rules = fields[0].rules</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"development-tests\">\n<h2>Development &amp; Tests</h2>\n<pre>$ pip install -r requirements.txt\n$ pip install -r requirements-dev.txt\n$ py.test\n</pre>\n<div id=\"todo\">\n<h3>TODO</h3>\n<div id=\"don-t-check-if-table-exists-on-each-model-but-do-it-on-app-installation\">\n<h4>Don\u2019t check if table exists on each model but do it on app installation</h4>\n<p>To get the DB :</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">impulsare_job</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">get_db</span><span class=\"p\">(</span><span class=\"s1\">'/etc/impulsare/config.yml'</span><span class=\"p\">)</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">create_tables</span><span class=\"p\">([</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Job</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hook</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Rule</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"refactor-writer\">\n<h4>Refactor writer</h4>\n<p>To have a class for hooks, and another for rules.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3098309, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "f046b88fed9fb5ea5450c227ef007715", "sha256": "c316fd050099452c05d53bbc5e02dd3267db3885a621eb81e50ba32382c2a441"}, "downloads": -1, "filename": "impulsare-job-1.0a1.tar.gz", "has_sig": false, "md5_digest": "f046b88fed9fb5ea5450c227ef007715", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9199, "upload_time": "2017-08-15T10:04:05", "upload_time_iso_8601": "2017-08-15T10:04:05.649092Z", "url": "https://files.pythonhosted.org/packages/0e/53/02e40d457ab40f365450504e06265747b23ccd2cf746dd3b29cc0128d6da/impulsare-job-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "5b02c5f0c7abce6e6140d3502f4e849c", "sha256": "b3390d972bcf31a08a08d1656d1db86c6a6b6da65d0f0635381ad6a482393c95"}, "downloads": -1, "filename": "impulsare-job-1.0a2.tar.gz", "has_sig": false, "md5_digest": "5b02c5f0c7abce6e6140d3502f4e849c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9420, "upload_time": "2017-08-15T14:21:40", "upload_time_iso_8601": "2017-08-15T14:21:40.297215Z", "url": "https://files.pythonhosted.org/packages/64/a2/8c0edf747ce51928bac082223f6f1f3a1a7c18f19f853f78e24c5dec4b99/impulsare-job-1.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b02c5f0c7abce6e6140d3502f4e849c", "sha256": "b3390d972bcf31a08a08d1656d1db86c6a6b6da65d0f0635381ad6a482393c95"}, "downloads": -1, "filename": "impulsare-job-1.0a2.tar.gz", "has_sig": false, "md5_digest": "5b02c5f0c7abce6e6140d3502f4e849c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9420, "upload_time": "2017-08-15T14:21:40", "upload_time_iso_8601": "2017-08-15T14:21:40.297215Z", "url": "https://files.pythonhosted.org/packages/64/a2/8c0edf747ce51928bac082223f6f1f3a1a7c18f19f853f78e24c5dec4b99/impulsare-job-1.0a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:29 2020"}