{"info": {"author": "Paul Trippett", "author_email": "paul@stormrets.com", "bugtrack_url": null, "classifiers": [], "description": "======\npyRETS\n======\n\npyRETS is a Pure Python library for accessing RETS Servers to download\nReal Estate Listings.\n\nlibRETS is a great library but takes to long to setup and manage when you run a\ncluster of import workers and it has a tendancy to require newer versions of\npackages than are available from RHEL6 without compiling the required packages\nfrom source. And so pyRETS is born from pure python so we can `pip` and `puppet`\nour rets library without fear of having to break packages on our servers.\n\nThis library is still under development.\n\nRecusing Metadata Example:\n\n    pyrets = pyRETS('serverurl', 'username', 'password')\n    if (pyrets.Login()):\n        for resource in pyrets.GetMetadata().GetMetadataAsObject().Resource:\n            print \"Found Resource:\", resource.ResourceID\n            \n            if \"Class\" in resource:\n                for a in resource.Class:\n                    print \"- Found Class:\", a.ClassName\n                    if \"Field\" in a:\n                        for b in a.Field:\n                            print \"  - Found Field:\", b.SystemName\n            \n            if \"Object\" in resource:\n                for c in resource.Object:\n                    print \"  - Found Object:\", c.ObjectType\n            \n            if \"LookupType\" in resource:\n                for d in resource.LookupType:\n                    print \"    - Found LookupType:\", d.LookupName\n                    if \"Lookup\" in d:\n                        for e in d.Lookup:\n                            print \"      - Found LookupValue:\", e.ShortValue,\n                                                        \",\", e.LongValue", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.stormrets.com/plugins/pyrets/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "pyRETS", "package_url": "https://pypi.org/project/pyRETS/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyRETS/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.stormrets.com/plugins/pyrets/"}, "release_url": "https://pypi.org/project/pyRETS/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "RETS Client Library in Pure Python", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ======<br>pyRETS<br>======<br><br>pyRETS is a Pure Python library for accessing RETS Servers to download<br>Real Estate Listings.<br><br>libRETS is a great library but takes to long to setup and manage when you run a<br>cluster of import workers and it has a tendancy to require newer versions of<br>packages than are available from RHEL6 without compiling the required packages<br>from source. And so pyRETS is born from pure python so we can `pip` and `puppet`<br>our rets library without fear of having to break packages on our servers.<br><br>This library is still under development.<br><br>Recusing Metadata Example:<br><br>    pyrets = pyRETS('serverurl', 'username', 'password')<br>    if (pyrets.Login()):<br>        for resource in pyrets.GetMetadata().GetMetadataAsObject().Resource:<br>            print \"Found Resource:\", resource.ResourceID<br>            <br>            if \"Class\" in resource:<br>                for a in resource.Class:<br>                    print \"- Found Class:\", a.ClassName<br>                    if \"Field\" in a:<br>                        for b in a.Field:<br>                            print \"  - Found Field:\", b.SystemName<br>            <br>            if \"Object\" in resource:<br>                for c in resource.Object:<br>                    print \"  - Found Object:\", c.ObjectType<br>            <br>            if \"LookupType\" in resource:<br>                for d in resource.LookupType:<br>                    print \"    - Found LookupType:\", d.LookupName<br>                    if \"Lookup\" in d:<br>                        for e in d.Lookup:<br>                            print \"      - Found LookupValue:\", e.ShortValue,<br>                                                        \",\", e.LongValue\n          </div>"}, "last_serial": 796922, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4bdc0b2fc4b5f0426888925af43ef199", "sha256": "ad0b1b3654f0132dd3962380122f804e5372a96432f56e7031529793391bcbbc"}, "downloads": -1, "filename": "pyRETS-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4bdc0b2fc4b5f0426888925af43ef199", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1374, "upload_time": "2012-12-09T22:58:02", "upload_time_iso_8601": "2012-12-09T22:58:02.182176Z", "url": "https://files.pythonhosted.org/packages/92/5f/c417636a547ff49eff550139ff0cf19279aa0de77b26377428e457b40c98/pyRETS-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bdc0b2fc4b5f0426888925af43ef199", "sha256": "ad0b1b3654f0132dd3962380122f804e5372a96432f56e7031529793391bcbbc"}, "downloads": -1, "filename": "pyRETS-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4bdc0b2fc4b5f0426888925af43ef199", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1374, "upload_time": "2012-12-09T22:58:02", "upload_time_iso_8601": "2012-12-09T22:58:02.182176Z", "url": "https://files.pythonhosted.org/packages/92/5f/c417636a547ff49eff550139ff0cf19279aa0de77b26377428e457b40c98/pyRETS-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:50 2020"}