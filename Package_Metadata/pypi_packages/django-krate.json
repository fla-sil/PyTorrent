{"info": {"author": "Jes\u00fas Espino Garc\u00eda", "author_email": "jespinog@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "Django Kaleidos Rate\n====================\n\nDjango Kaleidos Rate is a django application for rate objects.\n\nConfiguration\n-------------\n\nConfigure the app in your setting INSTALLED_APPS::\n\n  INSTALLED_APPS = [\n     ...\n     krate,\n     ...\n  ]\n\n\nDBRateHandler configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nconfigure the dbratehandler, for example::\n\n  INSTALLED_APPS = [\n     ...\n     krate.ratehandlers.dbratehandler,\n     ...\n  ]\n\nConfigure the rate handler on settings.py, for example::\n\n  KRATE_RATE_HANDLER = \"krate.ratehandlers.dbratehandler.DBRateHandler\"\n\nIf you want to have an copy of the average rate stored in the models add the\nKRateableMixin to your models, for example::\n\n  from krate.ratehandlers.dbratehandler.models import KRateableMixin\n\n  class MyModel(models.Model, KRateableMixin):\n      ... # My model definition...\n\nIf you want to show and manage the valorations of the objects in the admin\npanel add a new inline to your models admin classes, for example:: \n\n  from django.contrib.contenttypes.generic import GenericTabularInline\n  from krate.ratehandlers.dbratehandler.models import ObjRate, ObjRateAggregate\n\n  class ObjRateInline(GenericTabularInline):\n      model = ObjRate\n\n  class ObjRateAggregateInline(GenericTabularInline):\n      model = ObjRateAggregate\n  \n  class MyModelAdmin(admin.ModelAdmin):\n      model = models.MyModel\n      inlines = [MyOtherInlines, ...,  ObjRateAggregateInline, ObjRateAggregateInline]\n\nUsage\n-----\n\nNow you can use rate_object in your views to store the rate from users, and use\nthe {% krate object %} and {% mykrate request_or_user object %} to get the average rate, and my\nown rate.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kaleidos/django-krate", "keywords": "django,visit,counter", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-krate", "package_url": "https://pypi.org/project/django-krate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-krate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kaleidos/django-krate"}, "release_url": "https://pypi.org/project/django-krate/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Django application to rate objects", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django Kaleidos Rate is a django application for rate objects.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configure the app in your setting INSTALLED_APPS:</p>\n<pre>INSTALLED_APPS = [\n   ...\n   krate,\n   ...\n]\n</pre>\n<div id=\"dbratehandler-configuration\">\n<h3>DBRateHandler configuration</h3>\n<p>configure the dbratehandler, for example:</p>\n<pre>INSTALLED_APPS = [\n   ...\n   krate.ratehandlers.dbratehandler,\n   ...\n]\n</pre>\n<p>Configure the rate handler on settings.py, for example:</p>\n<pre>KRATE_RATE_HANDLER = \"krate.ratehandlers.dbratehandler.DBRateHandler\"\n</pre>\n<p>If you want to have an copy of the average rate stored in the models add the\nKRateableMixin to your models, for example:</p>\n<pre>from krate.ratehandlers.dbratehandler.models import KRateableMixin\n\nclass MyModel(models.Model, KRateableMixin):\n    ... # My model definition...\n</pre>\n<p>If you want to show and manage the valorations of the objects in the admin\npanel add a new inline to your models admin classes, for example:</p>\n<pre>from django.contrib.contenttypes.generic import GenericTabularInline\nfrom krate.ratehandlers.dbratehandler.models import ObjRate, ObjRateAggregate\n\nclass ObjRateInline(GenericTabularInline):\n    model = ObjRate\n\nclass ObjRateAggregateInline(GenericTabularInline):\n    model = ObjRateAggregate\n\nclass MyModelAdmin(admin.ModelAdmin):\n    model = models.MyModel\n    inlines = [MyOtherInlines, ...,  ObjRateAggregateInline, ObjRateAggregateInline]\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Now you can use rate_object in your views to store the rate from users, and use\nthe {% krate object %} and {% mykrate request_or_user object %} to get the average rate, and my\nown rate.</p>\n</div>\n\n          </div>"}, "last_serial": 764667, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "988fa720b2cd0b2e5bb04618cdfdd1f3", "sha256": "bb2de11834ff64f8825590ebde5b0cbbf020afe3bde59de548f5b63f2eddf119"}, "downloads": -1, "filename": "django-krate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "988fa720b2cd0b2e5bb04618cdfdd1f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6232, "upload_time": "2013-06-10T06:32:47", "upload_time_iso_8601": "2013-06-10T06:32:47.990171Z", "url": "https://files.pythonhosted.org/packages/16/69/416c61eff30276f4205a48cef80241d1985da72e3012282f068fc6603631/django-krate-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "988fa720b2cd0b2e5bb04618cdfdd1f3", "sha256": "bb2de11834ff64f8825590ebde5b0cbbf020afe3bde59de548f5b63f2eddf119"}, "downloads": -1, "filename": "django-krate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "988fa720b2cd0b2e5bb04618cdfdd1f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6232, "upload_time": "2013-06-10T06:32:47", "upload_time_iso_8601": "2013-06-10T06:32:47.990171Z", "url": "https://files.pythonhosted.org/packages/16/69/416c61eff30276f4205a48cef80241d1985da72e3012282f068fc6603631/django-krate-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:25 2020"}