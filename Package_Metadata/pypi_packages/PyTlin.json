{"info": {"author": "F. G. Rejon Barrera", "author_email": "f.g.rejonbarrera@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "PyTlin\n======\n\nModule implementing the Kotlin functions ``also``, ``let``, and ``run``\nin Python. Additionally it includes sh-like (and Mathematica-like)\npiping syntax.\n\nThe Kotlin functions are documented in\n`here <http://kotlinlang.org/api/latest/jvm/stdlib/kotlin/index.html>`__.\n\nInstall\n=======\n\n.. code:: python\n\n   pip install PyTlin\n\nSyntax\n======\n\n.. code:: python\n\n   from PyTlin import k\n\n   k(obj).let(func).also(func)\n   k.run(func)\n   k(obj) | func1 | func2 | ...\n   k(obj) @ func1 @ func2 @ ...\n\nHere all expressions (except ``k.run(func)``) is wrapped in the class\n``k``. To recover ``obj`` one can apply either of these\n\n.. code:: python\n\n   k(obj).end\n   k(obj) | 'end'\n   k(obj) | 0\n   k(obj) @ 'end'\n   k(obj) @ 0\n\nExample\n=======\n\n.. code:: python\n\n   from PyTlin import k\n   class Person:\n       def __init__(self,name,age):\n           self.name = name\n           self.age = age\n       def __repr__(self):\n           return '%s, %d' % (self.name, self.age)\n       def increaseAge(self):\n           self.age = self.age + 1\n       def nameToUpperCase(self):\n           self.name = self.name.upper()\n\n   student = Person('Pete', 18)\n   print(student) #Pete, 18\n\nlet\n---\n\n.. code:: python\n\n   name = k(student).let(lambda x: (print(x),x.name)[1]) #Pete, 18\n   print(name) #Pete\n\nalso\n----\n\n.. code:: python\n\n   newstudent = k(student).also(lambda x: (x.increaseAge(), x.nameToUpperCase()))\n   print(newstudent) #PETE, 19\n\nrun\n---\n\n.. code:: python\n\n   mood = 'sad'\n   k.run(lambda mood = 'happy': print(mood)) #happy\n   print(mood) #sad\n\nPiping\n------\n\nPiping can be done with either ``.let`` or with pipe operators ``@``\n(Mathematica-like in reverse order) or ``|`` (sh-like).\n\n.. code:: python\n\n   ops=k(4).let(lambda x: x*2).let(lambda x: x+3)\n   print(ops) #11\n   print(type(ops)) #<class 'PyTlin.k'>\n   print(ops.end) #11\n   print(type(ops.end)) #<class 'int'>\n\n   print(ops.end ==\n    k(4) @ (lambda x: x*2) @ (lambda x: x+3) @ 'end') #True\n\n   print(ops.end ==\n    k(4) | (lambda x: x*2) | (lambda x: x+3) | 0) #True\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frejonb/PyTlin", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyTlin", "package_url": "https://pypi.org/project/PyTlin/", "platform": "", "project_url": "https://pypi.org/project/PyTlin/", "project_urls": {"Homepage": "https://github.com/frejonb/PyTlin"}, "release_url": "https://pypi.org/project/PyTlin/1.2/", "requires_dist": null, "requires_python": "", "summary": "Kotlin functions also, let, and run, as well as sh-like (and Mathematica-like) piping syntax", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pytlin\">\n<h2>PyTlin</h2>\n<p>Module implementing the Kotlin functions <tt>also</tt>, <tt>let</tt>, and <tt>run</tt>\nin Python. Additionally it includes sh-like (and Mathematica-like)\npiping syntax.</p>\n<p>The Kotlin functions are documented in\n<a href=\"http://kotlinlang.org/api/latest/jvm/stdlib/kotlin/index.html\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">PyTlin</span>\n</pre>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyTlin</span> <span class=\"kn\">import</span> <span class=\"n\">k</span>\n\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">let</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">also</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n<span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">func1</span> <span class=\"o\">|</span> <span class=\"n\">func2</span> <span class=\"o\">|</span> <span class=\"o\">...</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"n\">func1</span> <span class=\"o\">@</span> <span class=\"n\">func2</span> <span class=\"o\">@</span> <span class=\"o\">...</span>\n</pre>\n<p>Here all expressions (except <tt>k.run(func)</tt>) is wrapped in the class\n<tt>k</tt>. To recover <tt>obj</tt> one can apply either of these</p>\n<pre><span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">end</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"s1\">'end'</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"mi\">0</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"s1\">'end'</span>\n<span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"mi\">0</span>\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyTlin</span> <span class=\"kn\">import</span> <span class=\"n\">k</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">age</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">increaseAge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"k\">def</span> <span class=\"nf\">nameToUpperCase</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n\n<span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'Pete'</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">student</span><span class=\"p\">)</span> <span class=\"c1\">#Pete, 18</span>\n</pre>\n<div id=\"let\">\n<h3>let</h3>\n<pre><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">student</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">let</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"c1\">#Pete, 18</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"c1\">#Pete</span>\n</pre>\n</div>\n<div id=\"also\">\n<h3>also</h3>\n<pre><span class=\"n\">newstudent</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"p\">(</span><span class=\"n\">student</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">also</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">increaseAge</span><span class=\"p\">(),</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">nameToUpperCase</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">newstudent</span><span class=\"p\">)</span> <span class=\"c1\">#PETE, 19</span>\n</pre>\n</div>\n<div id=\"run\">\n<h3>run</h3>\n<pre><span class=\"n\">mood</span> <span class=\"o\">=</span> <span class=\"s1\">'sad'</span>\n<span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">mood</span> <span class=\"o\">=</span> <span class=\"s1\">'happy'</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mood</span><span class=\"p\">))</span> <span class=\"c1\">#happy</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mood</span><span class=\"p\">)</span> <span class=\"c1\">#sad</span>\n</pre>\n</div>\n<div id=\"piping\">\n<h3>Piping</h3>\n<p>Piping can be done with either <tt>.let</tt> or with pipe operators <tt>@</tt>\n(Mathematica-like in reverse order) or <tt>|</tt> (sh-like).</p>\n<pre><span class=\"n\">ops</span><span class=\"o\">=</span><span class=\"n\">k</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">let</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">let</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"p\">)</span> <span class=\"c1\">#11</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"p\">))</span> <span class=\"c1\">#&lt;class 'PyTlin.k'&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">)</span> <span class=\"c1\">#11</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">))</span> <span class=\"c1\">#&lt;class 'int'&gt;</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">end</span> <span class=\"o\">==</span>\n <span class=\"n\">k</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"s1\">'end'</span><span class=\"p\">)</span> <span class=\"c1\">#True</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">end</span> <span class=\"o\">==</span>\n <span class=\"n\">k</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\">#True</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3948046, "releases": {"1.2": [{"comment_text": "", "digests": {"md5": "e1c965f191e1b9b728f9f9de66985ebf", "sha256": "a85502cb32f9f594d59376a4f7912a9e6a0576c4f7632ec55b38b46d4acb253b"}, "downloads": -1, "filename": "PyTlin-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1c965f191e1b9b728f9f9de66985ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3862, "upload_time": "2018-06-10T19:26:26", "upload_time_iso_8601": "2018-06-10T19:26:26.286248Z", "url": "https://files.pythonhosted.org/packages/48/16/7c7ce59bcc3b2d4689b96eed0ecad8a493c78c34aa2ff376d3b0a7b9d0c4/PyTlin-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "346e4d225359ce2dac4aa081acb042e8", "sha256": "9cfd11488708c55db4d97ff2d7c802867e34f4e37a42faa2ba1a8b62355c6140"}, "downloads": -1, "filename": "PyTlin-1.2.tar.gz", "has_sig": false, "md5_digest": "346e4d225359ce2dac4aa081acb042e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1992, "upload_time": "2018-06-10T19:26:27", "upload_time_iso_8601": "2018-06-10T19:26:27.557981Z", "url": "https://files.pythonhosted.org/packages/fa/c2/0c6cfa86895c8cbf558b2942c8cd6e6f748eb6e0a0627e5c1fdbe17cae36/PyTlin-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1c965f191e1b9b728f9f9de66985ebf", "sha256": "a85502cb32f9f594d59376a4f7912a9e6a0576c4f7632ec55b38b46d4acb253b"}, "downloads": -1, "filename": "PyTlin-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1c965f191e1b9b728f9f9de66985ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3862, "upload_time": "2018-06-10T19:26:26", "upload_time_iso_8601": "2018-06-10T19:26:26.286248Z", "url": "https://files.pythonhosted.org/packages/48/16/7c7ce59bcc3b2d4689b96eed0ecad8a493c78c34aa2ff376d3b0a7b9d0c4/PyTlin-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "346e4d225359ce2dac4aa081acb042e8", "sha256": "9cfd11488708c55db4d97ff2d7c802867e34f4e37a42faa2ba1a8b62355c6140"}, "downloads": -1, "filename": "PyTlin-1.2.tar.gz", "has_sig": false, "md5_digest": "346e4d225359ce2dac4aa081acb042e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1992, "upload_time": "2018-06-10T19:26:27", "upload_time_iso_8601": "2018-06-10T19:26:27.557981Z", "url": "https://files.pythonhosted.org/packages/fa/c2/0c6cfa86895c8cbf558b2942c8cd6e6f748eb6e0a0627e5c1fdbe17cae36/PyTlin-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:12 2020"}