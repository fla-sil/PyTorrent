{"info": {"author": "Corbin Simpson", "author_email": "simpsoco@osuosl.org", "bugtrack_url": null, "classifiers": ["Framework :: Django", "License :: OSI Approved :: MIT License"], "description": "========================================\nDjango Object Log \n========================================\n\nThis app provides the ability to log user actions on model instances. Action \ntypes can be defined by app developers, and can reference multiple objects. \nEach action type defines it's own template used for rendering output of the \nmessage. It allows verbose messages specific to the action that occurred.\n\nObject Log includes shortcuts both for adding entries and building views to \ndisplay them.\n\n\nInstallation\n----------------------------------------\n\nThere are several ways to install Object Log.\n\nObject Log ships a standard distutils setup.py. A classic invocation\nto install from setup.py might be::\n\n $ python setup.py install\n\nYou may need to add sudo in order to install to the system Python.\n\n::\n\n $ sudo python setup.py install\n\nWe also have Object Log on PyPI, so it can be installed using pip.\n(easy_install also works, but we do not recommend easy_install. Just use pip.)\n\n::\n\n $ pip install django-object-log\n\nIf you are installing Object Log directly into a Django app, and want\nto distribute Object Log with your app, simply copy the\nobject_log folder into your Django project.\n\nConfiguring Your Django Project\n----------------------------------------\n\n1) Add \"object_log\" to INSTALLED_APPS\n2) Run ./manage.py syncdb\n3) Add object_log.urls to urls if you wish to add views for displaying logs\n\nUsing Object Log\n----------------------------------------\n\nFirst, register some action types.  This can be done at any time but should\nideally be done once in models.py.  LogActions require both a key and a\ntemplate used to render that Action type.\n\n>>> from object_log.models import LogAction\n>>> LogAction.objects.register('MY_ACTION', 'path/to/my/template.html')\n\nNow, that LogAction type can be used whenever that action occurs\n\n>>> from object_log.models import LogItem\n>>> log = LogItem.objects.log_action\n>>> log('MY_ACTION', user, some_object)\n>>> log('EDIT', user, some_object)\n>>> log('DELETE', user, some_object)\n\nArbitrary data can also be included with each log entry by including a \ndict  It is available in the LogAction template as {{data}}.  This is\nuseful for caching information to reduce related queries when rendering\nlogs\n\n>>> log('MY_ACTION', user, {'my_obj':str(obj1})\n\nThe data dict can be automatically populated from objects using a cache\nfunction registered with the LogAction.  The cache function recieves the user, \nobjects, and any data passed to log_Action().  It should return a dict.  This \ndata overwrites manual data, you must merge it manually if you want to use both.\n\n>>> def cache(user, obj1, obj2, obj3, data):\n>>>    return dict(obj_str=str(obj1))\n>>>\n>>> LogAction.objects.register('MY_ACTION', 'path/to/my/template.html', cache)\n\nlog_action can then be used as normal.\n\n>>> log('MY_ACTION', user, some_object)\n\n\nSee the wiki for more details:\nhttp://code.osuosl.org/projects/django-object-log/wiki\n\nAuthors\n-------\n\nObject Log was implemented at the Oregon State University Open Source Lab \n(OSUOSL).  The primary author was Peter Krenesky.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.osuosl.org/projects/django-object-log", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-object-log", "package_url": "https://pypi.org/project/django-object-log/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-object-log/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.osuosl.org/projects/django-object-log"}, "release_url": "https://pypi.org/project/django-object-log/0.7.1/", "requires_dist": null, "requires_python": null, "summary": "A method for logging user actions on models", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This app provides the ability to log user actions on model instances. Action\ntypes can be defined by app developers, and can reference multiple objects.\nEach action type defines it\u2019s own template used for rendering output of the\nmessage. It allows verbose messages specific to the action that occurred.</p>\n<p>Object Log includes shortcuts both for adding entries and building views to\ndisplay them.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are several ways to install Object Log.</p>\n<p>Object Log ships a standard distutils setup.py. A classic invocation\nto install from setup.py might be:</p>\n<pre>$ python setup.py install\n</pre>\n<p>You may need to add sudo in order to install to the system Python.</p>\n<pre>$ sudo python setup.py install\n</pre>\n<p>We also have Object Log on PyPI, so it can be installed using pip.\n(easy_install also works, but we do not recommend easy_install. Just use pip.)</p>\n<pre>$ pip install django-object-log\n</pre>\n<p>If you are installing Object Log directly into a Django app, and want\nto distribute Object Log with your app, simply copy the\nobject_log folder into your Django project.</p>\n</div>\n<div id=\"configuring-your-django-project\">\n<h2>Configuring Your Django Project</h2>\n<ol>\n<li>Add \u201cobject_log\u201d to INSTALLED_APPS</li>\n<li>Run ./manage.py syncdb</li>\n<li>Add object_log.urls to urls if you wish to add views for displaying logs</li>\n</ol>\n</div>\n<div id=\"using-object-log\">\n<h2>Using Object Log</h2>\n<p>First, register some action types.  This can be done at any time but should\nideally be done once in models.py.  LogActions require both a key and a\ntemplate used to render that Action type.</p>\n<pre>&gt;&gt;&gt; from object_log.models import LogAction\n&gt;&gt;&gt; LogAction.objects.register('MY_ACTION', 'path/to/my/template.html')\n</pre>\n<p>Now, that LogAction type can be used whenever that action occurs</p>\n<pre>&gt;&gt;&gt; from object_log.models import LogItem\n&gt;&gt;&gt; log = LogItem.objects.log_action\n&gt;&gt;&gt; log('MY_ACTION', user, some_object)\n&gt;&gt;&gt; log('EDIT', user, some_object)\n&gt;&gt;&gt; log('DELETE', user, some_object)\n</pre>\n<p>Arbitrary data can also be included with each log entry by including a\ndict  It is available in the LogAction template as {{data}}.  This is\nuseful for caching information to reduce related queries when rendering\nlogs</p>\n<pre>&gt;&gt;&gt; log('MY_ACTION', user, {'my_obj':str(obj1})\n</pre>\n<p>The data dict can be automatically populated from objects using a cache\nfunction registered with the LogAction.  The cache function recieves the user,\nobjects, and any data passed to log_Action().  It should return a dict.  This\ndata overwrites manual data, you must merge it manually if you want to use both.</p>\n<pre>&gt;&gt;&gt; def cache(user, obj1, obj2, obj3, data):\n&gt;&gt;&gt;    return dict(obj_str=str(obj1))\n&gt;&gt;&gt;\n&gt;&gt;&gt; LogAction.objects.register('MY_ACTION', 'path/to/my/template.html', cache)\n</pre>\n<p>log_action can then be used as normal.</p>\n<pre>&gt;&gt;&gt; log('MY_ACTION', user, some_object)\n</pre>\n<p>See the wiki for more details:\n<a href=\"http://code.osuosl.org/projects/django-object-log/wiki\" rel=\"nofollow\">http://code.osuosl.org/projects/django-object-log/wiki</a></p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Object Log was implemented at the Oregon State University Open Source Lab\n(OSUOSL).  The primary author was Peter Krenesky.</p>\n</div>\n\n          </div>"}, "last_serial": 1205888, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "c8d92fe3cf3ec16a53193482fd2f0c65", "sha256": "54e446d55ad29440da78006a286e7e7d37d83b89fdd84bccedb78fa0947cea80"}, "downloads": -1, "filename": "django-object-log-0.6.tar.gz", "has_sig": false, "md5_digest": "c8d92fe3cf3ec16a53193482fd2f0c65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11548, "upload_time": "2011-06-18T00:27:06", "upload_time_iso_8601": "2011-06-18T00:27:06.476609Z", "url": "https://files.pythonhosted.org/packages/e2/7b/25ec1d4299687eca6a4c4c06ab2f10d9048e96f0cccd7a4aa92acad83704/django-object-log-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "0ae76e7f4d673562e4d21d63a0b56a98", "sha256": "311041b9f541939f1704265c8704902d5432ac302a5ee8acbc525ca79d9dabf2"}, "downloads": -1, "filename": "django-object-log-0.7.tar.gz", "has_sig": false, "md5_digest": "0ae76e7f4d673562e4d21d63a0b56a98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11765, "upload_time": "2011-11-18T01:27:31", "upload_time_iso_8601": "2011-11-18T01:27:31.481384Z", "url": "https://files.pythonhosted.org/packages/49/c0/0b3f20b19476e9ecc16e0452511b74b0df59fa8187a72656caece87ce3cc/django-object-log-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "7a02848d0957ce3c4e5b7a2554a1402f", "sha256": "d5c38788ea45acfebffe3917d2c0db5e69c6f56c7f57028b3383f270119c5cb1"}, "downloads": -1, "filename": "django-object-log-0.7.1.tar.gz", "has_sig": false, "md5_digest": "7a02848d0957ce3c4e5b7a2554a1402f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13334, "upload_time": "2014-04-22T22:25:47", "upload_time_iso_8601": "2014-04-22T22:25:47.927911Z", "url": "https://files.pythonhosted.org/packages/63/0b/34369b71a81e45cac478f0a64c6c86dca50cee22a87fdb00774172553bf6/django-object-log-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a02848d0957ce3c4e5b7a2554a1402f", "sha256": "d5c38788ea45acfebffe3917d2c0db5e69c6f56c7f57028b3383f270119c5cb1"}, "downloads": -1, "filename": "django-object-log-0.7.1.tar.gz", "has_sig": false, "md5_digest": "7a02848d0957ce3c4e5b7a2554a1402f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13334, "upload_time": "2014-04-22T22:25:47", "upload_time_iso_8601": "2014-04-22T22:25:47.927911Z", "url": "https://files.pythonhosted.org/packages/63/0b/34369b71a81e45cac478f0a64c6c86dca50cee22a87fdb00774172553bf6/django-object-log-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:35 2020"}