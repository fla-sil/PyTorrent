{"info": {"author": "Matthieu Poncin", "author_email": "poncin.matthieu@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Security :: Cryptography"], "description": "skrm [![Coverage Status](https://coveralls.io/repos/github/PoncinMatthieu/skrm/badge.svg?branch=master)](https://coveralls.io/github/PoncinMatthieu/skrm?branch=master)\n====\n\nskrm stands for simple keyring manager.\nIt is a small python script allowing you to store keys associated to tags into an encrypted file, using GPG.\n\nThis is a very handy solution for unix users to store securely their passwords and retreive them quicky.\n\n\nUser Prefs\n----------\nskrm uses an optional configuration file to avoid you setting every options in the command line.\nHere is an exemple of userpref file that should be placed in '~/.skrm/user.prefs':\n\n    File=/home/ponpon/.skrm/bdd.gpg\n    recipient=Poncin Matthieu\n\n\nUsage\n-----\n\n    usage: ./skrm [OPTIONS] [COMMANDS] [TAGS]\n    skrm stands for simple keyring manager, it stores keys with tags into a file encrypted using gpg.\n    skrm will ask for the master password to encrypt/decrypt the storing file.\n    OPTIONS:\n        -h, --help: Print usage.\n        -g, --get: Return keyrings matching strictly the given tags. This option is used by default. If a keyId is selected, a get or a search return only the keyring matching the keyId.\n        -s, --search: Return keyrings matching the given tags (tags are interpreted as a regex expression).\n        -c, --clip: Copy the key of the last matched keyring from a get or a search into the clipboard using xclip. Nothing will be printed out to the shell.\n    COMMANDS:\n        --file=[FILENAME]: use the given file to read/store keyrings.\n        --recipient=[USER_ID_NAME]: set the user id name for gpg to get the key and encrypt the file.\n        --pass=[MASTER_PASS]: set the master pass to use when encrypting or decrypting the file.\n        --add=[KEY]: add a key to the file with the specified tags.\n        --select=[KEYID]: select a keyring using its key id. To use with a command like \"remove\" or \"update\".\n        --remove: remove the selected key.\n        --update=[KEY]: update the selected key.\n        --backup=[HOSTDEST]: scp the bdd file to the given host destination.\n    TAGS:\n        A list of strings to define tags you want to use for any commands keyring related management.\n\n\nExamples\n--------\nTo add a new key with the associated tags: Password WebSite Twitter MyUserName\n\n    skrm --add=\"myPass\" Password WebSite Twitter MyUserName\n\nTo get one or multiple keys, you only need to specify the tags you want to match.\nThe tags are not case sensitive.\n\n    skrm twitter\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nIf you don't remember the exact string for your tags, you can use the option -s\n\n    skrm -s twit\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nTo copy directly your key into the clipboard\n\n    skrm -c twitter\n    -> copy the key into the clipboard.\n\nTo select a keyring, you must use its key id\n\n    skrm --select=0\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nTo remove a keyring\n\n    skrm --select=0 --remove\n\nTo update a key\n\n    skrm --select=0 --update=\"MyNewPass\"\n\nTo insert new tags to a keyring\n\n    skrm --select=0 --insert=2 MyNewTag1 MyNewTag2\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyNewTag1', 'MyNewTag2', 'MyUserName', 'myPass']\n\nTo backup your bdd file to a remote server using scp\n\n    skrm --backup=\"myBackupServer:~/.skrm/\"", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PoncinMatthieu/skrm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "skrm", "package_url": "https://pypi.org/project/skrm/", "platform": "", "project_url": "https://pypi.org/project/skrm/", "project_urls": {"Homepage": "https://github.com/PoncinMatthieu/skrm"}, "release_url": "https://pypi.org/project/skrm/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Simple keyring manager - Allows you to store keys associated to tags into an encrypted file, using GPG.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>skrm <a href=\"https://coveralls.io/github/PoncinMatthieu/skrm?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe2e15a059d643e42027d527b7863df7e03ab8ca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f506f6e63696e4d617474686965752f736b726d2f62616467652e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>skrm stands for simple keyring manager.\nIt is a small python script allowing you to store keys associated to tags into an encrypted file, using GPG.</p>\n<p>This is a very handy solution for unix users to store securely their passwords and retreive them quicky.</p>\n<h2>User Prefs</h2>\n<p>skrm uses an optional configuration file to avoid you setting every options in the command line.\nHere is an exemple of userpref file that should be placed in '~/.skrm/user.prefs':</p>\n<pre><code>File=/home/ponpon/.skrm/bdd.gpg\nrecipient=Poncin Matthieu\n</code></pre>\n<h2>Usage</h2>\n<pre><code>usage: ./skrm [OPTIONS] [COMMANDS] [TAGS]\nskrm stands for simple keyring manager, it stores keys with tags into a file encrypted using gpg.\nskrm will ask for the master password to encrypt/decrypt the storing file.\nOPTIONS:\n    -h, --help: Print usage.\n    -g, --get: Return keyrings matching strictly the given tags. This option is used by default. If a keyId is selected, a get or a search return only the keyring matching the keyId.\n    -s, --search: Return keyrings matching the given tags (tags are interpreted as a regex expression).\n    -c, --clip: Copy the key of the last matched keyring from a get or a search into the clipboard using xclip. Nothing will be printed out to the shell.\nCOMMANDS:\n    --file=[FILENAME]: use the given file to read/store keyrings.\n    --recipient=[USER_ID_NAME]: set the user id name for gpg to get the key and encrypt the file.\n    --pass=[MASTER_PASS]: set the master pass to use when encrypting or decrypting the file.\n    --add=[KEY]: add a key to the file with the specified tags.\n    --select=[KEYID]: select a keyring using its key id. To use with a command like \"remove\" or \"update\".\n    --remove: remove the selected key.\n    --update=[KEY]: update the selected key.\n    --backup=[HOSTDEST]: scp the bdd file to the given host destination.\nTAGS:\n    A list of strings to define tags you want to use for any commands keyring related management.\n</code></pre>\n<h2>Examples</h2>\n<p>To add a new key with the associated tags: Password WebSite Twitter MyUserName</p>\n<pre><code>skrm --add=\"myPass\" Password WebSite Twitter MyUserName\n</code></pre>\n<p>To get one or multiple keys, you only need to specify the tags you want to match.\nThe tags are not case sensitive.</p>\n<pre><code>skrm twitter\n-&gt; 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n</code></pre>\n<p>If you don't remember the exact string for your tags, you can use the option -s</p>\n<pre><code>skrm -s twit\n-&gt; 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n</code></pre>\n<p>To copy directly your key into the clipboard</p>\n<pre><code>skrm -c twitter\n-&gt; copy the key into the clipboard.\n</code></pre>\n<p>To select a keyring, you must use its key id</p>\n<pre><code>skrm --select=0\n-&gt; 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n</code></pre>\n<p>To remove a keyring</p>\n<pre><code>skrm --select=0 --remove\n</code></pre>\n<p>To update a key</p>\n<pre><code>skrm --select=0 --update=\"MyNewPass\"\n</code></pre>\n<p>To insert new tags to a keyring</p>\n<pre><code>skrm --select=0 --insert=2 MyNewTag1 MyNewTag2\n-&gt; 0 : ['Password', 'WebSite', 'Twitter', 'MyNewTag1', 'MyNewTag2', 'MyUserName', 'myPass']\n</code></pre>\n<p>To backup your bdd file to a remote server using scp</p>\n<pre><code>skrm --backup=\"myBackupServer:~/.skrm/\"\n</code></pre>\n\n          </div>"}, "last_serial": 4802178, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0644decf96932ecb4fdea6049979bb00", "sha256": "fc0d029e1b2ce5361443497801b158d16e8bcd9bbe91feae3c82ec8980ad1dee"}, "downloads": -1, "filename": "skrm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0644decf96932ecb4fdea6049979bb00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5174, "upload_time": "2019-02-10T13:42:44", "upload_time_iso_8601": "2019-02-10T13:42:44.489857Z", "url": "https://files.pythonhosted.org/packages/11/e9/dffa393e9deb8e46abcb1678f82d3f0a3f0b8763f6ca59e747a46f5dbfa0/skrm-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0644decf96932ecb4fdea6049979bb00", "sha256": "fc0d029e1b2ce5361443497801b158d16e8bcd9bbe91feae3c82ec8980ad1dee"}, "downloads": -1, "filename": "skrm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0644decf96932ecb4fdea6049979bb00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5174, "upload_time": "2019-02-10T13:42:44", "upload_time_iso_8601": "2019-02-10T13:42:44.489857Z", "url": "https://files.pythonhosted.org/packages/11/e9/dffa393e9deb8e46abcb1678f82d3f0a3f0b8763f6ca59e747a46f5dbfa0/skrm-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:52 2020"}