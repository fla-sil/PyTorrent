{"info": {"author": "SheepDogInc", "author_email": "development@sheepdoginc.ca", "bugtrack_url": null, "classifiers": [], "description": "django-newrelic-extensions\n==========================\n\nThis package provides a Django middleware class that attaches custom attributes\nto the stack trace that the New Relic agent sends to your console.  For\nexample, if a server error occurs you may wish to know the username of the user\nwho received it.\n\nInstallation\n------------\n\nInstall via pip:\n\n::\n\n    $ pip install django-newrelic-extensions\n\nOr from Github:\n\n::\n\n    $ pip install -e git://github.com/sheepdoginc/django-newrelic-extensions.git#egg=django-newrelic-extensions\n\nAdd the middleware class to your ``MIDDLEWARE_CLASSES``:\n\n::\n\n    MIDDLEWARE_CLASSES = (\n        'django.middleware.common.CommonMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'django.contrib.messages.middleware.MessageMiddleware',\n        'newrelicextensions.middleware.NewRelicMiddleware',\n    )\n\nAnd then add your settings.\n\nSettings\n--------\n\n\n* ``NEW_RELIC_EXTENSIONS_ENABLED``: This allows you to disable the extensions\n  during development. (Default: ``False``)\n\n* ``NEW_RELIC_EXTENSIONS_DEBUG``: This enables the extensions but instead of\n  sending trace backs to New Relic, it prints them out to the console.\n  (Default: ``True``)\n\n* ``NEW_RELIC_EXTENSIONS_ATTRIBUTES``: This is how you specify what attributes\n  of the Django ``HttpRequest`` instance you care about.  This should be a ``dict``.\n  Please see below for examples.\n\nExamples\n--------\n\n::\n    \n    NEW_RELIC_EXTENSIONS_ATTRIBUTES = {\n        'user': {\n            'username': 'Django username',\n            'is_superuser': 'Django super user'\n        },\n        'is_secure': 'Django secure conneciton',\n        'something random': 'Name'\n    }\n\nThis will log the user's username under the key of ``Django username`` and so\non.  If a variable is callable (like ``is_secure`` above), it will be called.\nIf it doesn't exist, it will silently die (unless you have debug on).\n\nFor a list of examples attributes that you can log, see the `HttpRequest docs\n<https://docs.djangoproject.com/en/dev/ref/request-response/#httprequest-objects>`_.\n\nTo learn more about New Relic's Python integration, please see their `Python\ntips and tricks <https://newrelic.com/docs/python/python-tips-and-tricks>`_\npage.\n\n\nLicense\n-------\n\nBSD, short and sweet.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-newrelic-extensions", "package_url": "https://pypi.org/project/django-newrelic-extensions/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-newrelic-extensions/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-newrelic-extensions/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "New Relic extensions for Django", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a Django middleware class that attaches custom attributes\nto the stack trace that the New Relic agent sends to your console.  For\nexample, if a server error occurs you may wish to know the username of the user\nwho received it.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install via pip:</p>\n<pre>$ pip install django-newrelic-extensions\n</pre>\n<p>Or from Github:</p>\n<pre>$ pip install -e git://github.com/sheepdoginc/django-newrelic-extensions.git#egg=django-newrelic-extensions\n</pre>\n<p>Add the middleware class to your <tt>MIDDLEWARE_CLASSES</tt>:</p>\n<pre>MIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'newrelicextensions.middleware.NewRelicMiddleware',\n)\n</pre>\n<p>And then add your settings.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<ul>\n<li><tt>NEW_RELIC_EXTENSIONS_ENABLED</tt>: This allows you to disable the extensions\nduring development. (Default: <tt>False</tt>)</li>\n<li><tt>NEW_RELIC_EXTENSIONS_DEBUG</tt>: This enables the extensions but instead of\nsending trace backs to New Relic, it prints them out to the console.\n(Default: <tt>True</tt>)</li>\n<li><tt>NEW_RELIC_EXTENSIONS_ATTRIBUTES</tt>: This is how you specify what attributes\nof the Django <tt>HttpRequest</tt> instance you care about.  This should be a <tt>dict</tt>.\nPlease see below for examples.</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>NEW_RELIC_EXTENSIONS_ATTRIBUTES = {\n    'user': {\n        'username': 'Django username',\n        'is_superuser': 'Django super user'\n    },\n    'is_secure': 'Django secure conneciton',\n    'something random': 'Name'\n}\n</pre>\n<p>This will log the user\u2019s username under the key of <tt>Django username</tt> and so\non.  If a variable is callable (like <tt>is_secure</tt> above), it will be called.\nIf it doesn\u2019t exist, it will silently die (unless you have debug on).</p>\n<p>For a list of examples attributes that you can log, see the <a href=\"https://docs.djangoproject.com/en/dev/ref/request-response/#httprequest-objects\" rel=\"nofollow\">HttpRequest docs</a>.</p>\n<p>To learn more about New Relic\u2019s Python integration, please see their <a href=\"https://newrelic.com/docs/python/python-tips-and-tricks\" rel=\"nofollow\">Python\ntips and tricks</a>\npage.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>BSD, short and sweet.</p>\n</div>\n\n          </div>"}, "last_serial": 790159, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "96b02d4a6082a4816097aaa7a881bc8b", "sha256": "45eccd1c2df0ffd7de84284526dcdaaf0e677d7def1d203bbc1a464163684b54"}, "downloads": -1, "filename": "django-newrelic-extensions-0.0.1.tar.gz", "has_sig": false, "md5_digest": "96b02d4a6082a4816097aaa7a881bc8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3690, "upload_time": "2012-03-06T20:38:28", "upload_time_iso_8601": "2012-03-06T20:38:28.948203Z", "url": "https://files.pythonhosted.org/packages/fd/69/53ddb7c928728f9132360f69fc396a9f8e9db47ecb229de39157a2e2ee14/django-newrelic-extensions-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96b02d4a6082a4816097aaa7a881bc8b", "sha256": "45eccd1c2df0ffd7de84284526dcdaaf0e677d7def1d203bbc1a464163684b54"}, "downloads": -1, "filename": "django-newrelic-extensions-0.0.1.tar.gz", "has_sig": false, "md5_digest": "96b02d4a6082a4816097aaa7a881bc8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3690, "upload_time": "2012-03-06T20:38:28", "upload_time_iso_8601": "2012-03-06T20:38:28.948203Z", "url": "https://files.pythonhosted.org/packages/fd/69/53ddb7c928728f9132360f69fc396a9f8e9db47ecb229de39157a2e2ee14/django-newrelic-extensions-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:42 2020"}