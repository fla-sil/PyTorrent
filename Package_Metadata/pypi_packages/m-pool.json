{"info": {"author": "Charlie Taylor", "author_email": "cet@appliedpython.com", "bugtrack_url": null, "classifiers": [], "description": "        .. image:: https://travis-ci.org/sonofeft/M_Pool.svg?branch=master\r\r\n        \r\r\n        .. image:: https://img.shields.io/pypi/v/M_Pool.svg\r\r\n                \r\r\n        .. image:: https://img.shields.io/badge/python-3.6|3.7-blue\r\r\n        \r\r\n        .. image:: https://img.shields.io/pypi/l/M_Pool.svg\r\r\n        \r\r\n        **A Wrapper For Numpy Arrays**\r\r\n        \r\r\n        Provides Named Axes, Interpolation, Iteration, Disk Persistence And Numerical Calcs\r\r\n        \r\r\n        \r\r\n        See the Code at: `<https://github.com/sonofeft/M_Pool>`_\r\r\n        \r\r\n        See the Docs at: `<http://m_pool.readthedocs.org/en/latest/>`_\r\r\n        \r\r\n        See PyPI page at:`<https://pypi.python.org/pypi/m_pool>`_\r\r\n        \r\r\n        \r\r\n        M_Pool wraps multidimensional numpy arrays to provide the following features::\r\r\n        \r\r\n            #. MatrixPool objects contain related Axis and Matrix objects\r\r\n                - MP = MatrixPool(name='N2O4_MMH')\r\r\n                \r\r\n            #. Axis objects are added by name and interpolation transform (used to linearize interpolation)\r\r\n                - epsAxis = Axis({'name':'eps', 'valueL':[10., 20., 30., 40., 50.], 'units':'', 'transform':'log10'})\r\r\n                - pcAxis = Axis({'name':'pc', 'valueL':[100.,200.,300,400], 'units':'psia', 'transform':'log10'})\r\r\n                - mrAxis = Axis({'name':'mr', 'valueL':[1,2,3], 'units':'', 'transform':''})\r\r\n                \r\r\n            #. Matrix objects added by name \r\r\n                - M = MP.add_matrix( name='cea_isp', units='sec', axisNameL=['eps','pc','mr'] )\r\r\n                \r\r\n            #. Find interpolated minimum or maximum\r\r\n                - interpD, max_val = M.solve_interp_max( order=3, method='TNC', tol=1.0E-8)\r\r\n                    - where interpD and max_val look something like:\r\r\n                    - interpD = {'pc': 225.00641803120988, 'eps': 34.991495018803455, 'mr': 1.7499612975876655}\r\r\n                    - max_val = -0.000155216246295\r\r\n            \r\r\n            #. Disk-based persistence\r\r\n                - Save to pickle or hdf5 file\r\r\n                    - MP.save_to_pickle() # saves MP to \"N2O4_MMH_matrix.pool\"\r\r\n                    \r\r\n            #. Built-in statistics (standard deviation, median, mean/average, sum, minimum, maximum\r\r\n                - M.get_range()\r\r\n                - M.get_ave()\r\r\n                - M.get_mean()\r\r\n                - M.get_std()\r\r\n                - M.get_median()\r\r\n            \r\r\n            #. Interpolation on axes with named values\r\r\n                - interp_val = M.interp(order=2, pc=100, eps=20, mr=2.0)\r\r\n                - Uses transformed axes to help linearize interpolation\r\r\n                \r\r\n            #. Iterate over matrix\r\r\n                - for indeces,D,val in M.full_iter_items():\r\r\n                    - gives something like:\r\r\n                    - (0, 0, 0) {'pc': 100.0, 'eps': 10.0, 'mr': 1.0} 111.0\r\r\n                    - (0, 0, 1) {'pc': 100.0, 'eps': 10.0, 'mr': 2.0} 112.0\r\r\n                    - (0, 0, 2) {'pc': 100.0, 'eps': 10.0, 'mr': 3.0} 113.0\r\r\n                    - ...\r\r\n        \r\r\n        \r\nKeywords: m_pool setuptools development\r\nPlatform: any\r\nClassifier: Development Status :: 3 - Alpha\r\nClassifier: Operating System :: OS Independent\r\nClassifier: Intended Audience :: Developers\r\nClassifier: Intended Audience :: End Users/Desktop\r\nClassifier: Topic :: Software Development :: Build Tools\r\nClassifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: Programming Language :: Python :: 3.7\r\nProvides-Extra: dev\r\nProvides-Extra: test\r\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/sonofeft/M_Pool", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://m_pool.readthedocs.org/en/latest/", "keywords": "", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "m-pool", "package_url": "https://pypi.org/project/m-pool/", "platform": "", "project_url": "https://pypi.org/project/m-pool/", "project_urls": {"Download": "https://github.com/sonofeft/M_Pool", "Homepage": "http://m_pool.readthedocs.org/en/latest/"}, "release_url": "https://pypi.org/project/m-pool/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "A wrapper for numpy arrays providing named axes, interpolation, iteration, disk persistence and numerical calcs", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<img alt=\"https://travis-ci.org/sonofeft/M_Pool.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98c2803e33e7031c0d272e8935ec00586403307f/68747470733a2f2f7472617669732d63692e6f72672f736f6e6f666566742f4d5f506f6f6c2e7376673f6272616e63683d6d6173746572\">\n<img alt=\"https://img.shields.io/pypi/v/M_Pool.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/271f7a3099c825fc7d926897e7ea58abbb363667/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f4d5f506f6f6c2e737667\">\n<img alt=\"https://img.shields.io/badge/python-3.6|3.7-blue\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a76fdf64916b025cefd4ac79c394b1c2d36a5316/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e367c332e372d626c7565\">\n<img alt=\"https://img.shields.io/pypi/l/M_Pool.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b356495ccc014072bda5985e7dc94f9dedf25fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f4d5f506f6f6c2e737667\">\n<p><strong>A Wrapper For Numpy Arrays</strong></p>\n<p>Provides Named Axes, Interpolation, Iteration, Disk Persistence And Numerical Calcs</p>\n<p>See the Code at: <a href=\"https://github.com/sonofeft/M_Pool\" rel=\"nofollow\">https://github.com/sonofeft/M_Pool</a></p>\n<p>See the Docs at: <a href=\"http://m_pool.readthedocs.org/en/latest/\" rel=\"nofollow\">http://m_pool.readthedocs.org/en/latest/</a></p>\n<p>See PyPI page at:<a href=\"https://pypi.python.org/pypi/m_pool\" rel=\"nofollow\">https://pypi.python.org/pypi/m_pool</a></p>\n<p>M_Pool wraps multidimensional numpy arrays to provide the following features:</p>\n<pre>#. MatrixPool objects contain related Axis and Matrix objects\n\n    - MP = MatrixPool(name='N2O4_MMH')\n\n\n\n#. Axis objects are added by name and interpolation transform (used to linearize interpolation)\n\n    - epsAxis = Axis({'name':'eps', 'valueL':[10., 20., 30., 40., 50.], 'units':'', 'transform':'log10'})\n\n    - pcAxis = Axis({'name':'pc', 'valueL':[100.,200.,300,400], 'units':'psia', 'transform':'log10'})\n\n    - mrAxis = Axis({'name':'mr', 'valueL':[1,2,3], 'units':'', 'transform':''})\n\n\n\n#. Matrix objects added by name\n\n    - M = MP.add_matrix( name='cea_isp', units='sec', axisNameL=['eps','pc','mr'] )\n\n\n\n#. Find interpolated minimum or maximum\n\n    - interpD, max_val = M.solve_interp_max( order=3, method='TNC', tol=1.0E-8)\n\n        - where interpD and max_val look something like:\n\n        - interpD = {'pc': 225.00641803120988, 'eps': 34.991495018803455, 'mr': 1.7499612975876655}\n\n        - max_val = -0.000155216246295\n\n\n\n#. Disk-based persistence\n\n    - Save to pickle or hdf5 file\n\n        - MP.save_to_pickle() # saves MP to \"N2O4_MMH_matrix.pool\"\n\n\n\n#. Built-in statistics (standard deviation, median, mean/average, sum, minimum, maximum\n\n    - M.get_range()\n\n    - M.get_ave()\n\n    - M.get_mean()\n\n    - M.get_std()\n\n    - M.get_median()\n\n\n\n#. Interpolation on axes with named values\n\n    - interp_val = M.interp(order=2, pc=100, eps=20, mr=2.0)\n\n    - Uses transformed axes to help linearize interpolation\n\n\n\n#. Iterate over matrix\n\n    - for indeces,D,val in M.full_iter_items():\n\n        - gives something like:\n\n        - (0, 0, 0) {'pc': 100.0, 'eps': 10.0, 'mr': 1.0} 111.0\n\n        - (0, 0, 1) {'pc': 100.0, 'eps': 10.0, 'mr': 2.0} 112.0\n\n        - (0, 0, 2) {'pc': 100.0, 'eps': 10.0, 'mr': 3.0} 113.0\n\n        - ...\n</pre>\n</blockquote>\n<p>Keywords: m_pool setuptools development\nPlatform: any\nClassifier: Development Status :: 3 - Alpha\nClassifier: Operating System :: OS Independent\nClassifier: Intended Audience :: Developers\nClassifier: Intended Audience :: End Users/Desktop\nClassifier: Topic :: Software Development :: Build Tools\nClassifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nProvides-Extra: dev\nProvides-Extra: test</p>\n\n          </div>"}, "last_serial": 6945374, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "804adcc7df62ea90e6aa8b8fdeee846a", "sha256": "587f618cf2b1349cb9686ee1c8ed431877e945e0be3f7a5bc50e37911845b6ef"}, "downloads": -1, "filename": "m_pool-0.0.1.win32.exe", "has_sig": false, "md5_digest": "804adcc7df62ea90e6aa8b8fdeee846a", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 221086, "upload_time": "2015-11-14T08:41:32", "upload_time_iso_8601": "2015-11-14T08:41:32.767720Z", "url": "https://files.pythonhosted.org/packages/6d/90/64dab3053f4fbe5e75b754210b9552f865e3abc6758b0aacf77781df4d3e/m_pool-0.0.1.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3ae9d473dba71d945a4e2c1569d71ba", "sha256": "1e40e32e2462b994a4b92e53a3c1631e3a3a749541105f2ead91510b31f25339"}, "downloads": -1, "filename": "m_pool-0.0.1.zip", "has_sig": false, "md5_digest": "d3ae9d473dba71d945a4e2c1569d71ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40968, "upload_time": "2015-11-14T08:41:26", "upload_time_iso_8601": "2015-11-14T08:41:26.621732Z", "url": "https://files.pythonhosted.org/packages/11/81/0279aac5d0bb82f76276e59b24b7ba05eb6c5fe00d8cce013c6d8f8ee3c4/m_pool-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b45bb4de22e966fc082a5d429a6fc8fd", "sha256": "7e2369fc517360dd6f1219a65d7df2a3e08007e43804084da3577ab560795b75"}, "downloads": -1, "filename": "m_pool-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b45bb4de22e966fc082a5d429a6fc8fd", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 33096, "upload_time": "2018-06-28T05:51:43", "upload_time_iso_8601": "2018-06-28T05:51:43.322504Z", "url": "https://files.pythonhosted.org/packages/fc/90/013db831cea218654ed4b17803253155b09a27a2d71dc1d278e531505bcf/m_pool-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "486b49074636b7b4907fd9778bface3b", "sha256": "ce6299c7056ebd50895c54ac39d23099f4fc4bdfae5d7d3ff1f55023f3a84000"}, "downloads": -1, "filename": "m_pool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "486b49074636b7b4907fd9778bface3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38878, "upload_time": "2018-06-28T05:51:41", "upload_time_iso_8601": "2018-06-28T05:51:41.466685Z", "url": "https://files.pythonhosted.org/packages/fc/6e/f7a6d1d245c213c5cc797e7ad1555551c4c540f6173f945d9627b8705a9e/m_pool-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "01e46572497c8f5837d80fa6057d01c3", "sha256": "12212d34d1c596690b0e5a04634eb2d30a13bf6f7bf351950d0f1a8d18118533"}, "downloads": -1, "filename": "m_pool-0.0.4.tar.gz", "has_sig": false, "md5_digest": "01e46572497c8f5837d80fa6057d01c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4274661, "upload_time": "2020-03-24T20:53:19", "upload_time_iso_8601": "2020-03-24T20:53:19.130259Z", "url": "https://files.pythonhosted.org/packages/26/7a/b67017179af07b08aa0d85103d0f432aa1a296bee1c2194342b776e0bd20/m_pool-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "8cba9ed090ccb5725a5f94d1f9ca32ea", "sha256": "3ef7efcc18310bc5e30f14902677bb0e2c19ed33b1f333e93580a01753b38a1c"}, "downloads": -1, "filename": "m_pool-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8cba9ed090ccb5725a5f94d1f9ca32ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4281379, "upload_time": "2020-04-03T18:52:26", "upload_time_iso_8601": "2020-04-03T18:52:26.569807Z", "url": "https://files.pythonhosted.org/packages/d4/f7/ccf4be80775700941156c9b7243684f1659783dcbf925c97847e377ad3ca/m_pool-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8cba9ed090ccb5725a5f94d1f9ca32ea", "sha256": "3ef7efcc18310bc5e30f14902677bb0e2c19ed33b1f333e93580a01753b38a1c"}, "downloads": -1, "filename": "m_pool-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8cba9ed090ccb5725a5f94d1f9ca32ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4281379, "upload_time": "2020-04-03T18:52:26", "upload_time_iso_8601": "2020-04-03T18:52:26.569807Z", "url": "https://files.pythonhosted.org/packages/d4/f7/ccf4be80775700941156c9b7243684f1659783dcbf925c97847e377ad3ca/m_pool-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:11 2020"}