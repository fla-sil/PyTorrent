{"info": {"author": "Robert Moggach", "author_email": "rob@moggach.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Systems Administration", "Topic :: Text Processing :: Markup :: XML"], "description": "|Build Status| |Latest Version| |Supported Python versions| |Downloads|\n|Documentation Status|\n\nOpenClip XML Media Management Python Module\n===========================================\n\nOpenclip is a python abstraction of the openclip XML media\nclassification format. It provides ORM-style access to \"dotclip\" data\n(file or generated) to make the life of a python developer much easier.\nThis module is not meant to be a complete solution but rather a stable\nand standardized component of various other scripts, tools, guis, and\nsoftware integrations.\n\n-  `Documentation on ReadTheDocs <http://openclip.readthedocs.org>`__\n-  `Source on GitHub <https://github.com/robmoggach/python-openclip>`__\n-  `Packages on PyPI <https://pypi.python.org/pypi/openclip>`__\n-  `Builds on Travis\n   CI <https://travis-ci.org/robmoggach/python-openclip>`__\n\nAbout the *OpenClip* format\n---------------------------\n\n    *the following is adapted from the Autodesk documentation of the\n    Gateway Clip specification...*\n\nThe **``.clip``** **OpenClip** XML format is an XML wrapper which points\nto single or multiple video and/or audio sources and wraps them in a\nsingle entity. The XML is built to reflect the structure of a complex\nclip, with the most atomic portions (paths to media) at the bottom of\nthe hierarchy, and the clip at the top most entity.\n\nAn **OpenClip** XML structured file describes at least the following\ninformation:\n\n-  Physical location of files\n-  additional metadata information, such as timecode and keycode\n-  Clip versions\n\nStructure of OpenClip\n~~~~~~~~~~~~~~~~~~~~~\n\nThe following is a basic representation of the structure of an Open\nClip:\n\n``<clip>``\n^^^^^^^^^^\n\n-  highest level wrapper entity\n-  comprises entire clip (Tracks, Versions)\n-  defines global options (Clip Name, Comments)\n\n``<track>``\n^^^^^^^^^^^\n\n-  found within ``<tracks>`` container\n-  all information about a single channel\n-  ChannelType (Video, Audio, Generic)\n-  Extended Channel Type (eg. Matte, Normals, Shadow)\n\n``<feed>``\n^^^^^^^^^^\n\n-  found within ``<feeds>`` container\n-  Track Version or \"View\"\n-  Distinguished by a Version Number\n-  Storage Format (bit-depth, resolution, etc.)\n\n``<span>``\n^^^^^^^^^^\n\n-  found within ``<spans>`` container\n-  Media (Image sequence or streaming media/container eg. QuickTime)\n-  Path(s) to media\n\nWithin a ``clip``, you have ``tracks``, within ``tracks`` you have\n``feeds`` and within ``feeds``, ``spans``.\n\nInstallation\n------------\n\nThis should be easy. You may need administrator priveleges depending on\nyour system configuration.\n\n    Note: Some software have their own isolated python environment for a\n    good reason - try at your own risk to integrate this library...\n\nFor the latest dev branch:\n\n::\n\n    git clone https://github.com/robmoggach/python-openclip.git\n    cd python-openclip\n    python setup.py install\n\nor for the latest (possibly stable?) release:\n\n::\n\n    pip install openclip\n\nor\n\n::\n\n    easy_install openclip\n\n    **Note:** I prefer markdown for documentation but setuptools prefers\n    restructuredText. For this reason the ``setup.py`` file\n    **optionally** requires package ``pypandoc`` which can be installed\n    using ``pip install pypandoc``.\n\nlxml.etree\n~~~~~~~~~~\n\n``lxml.etree`` has been used in development for this project but it does\nhave fallbacks for system xml element tree tools. It's faster and\nproduces cleaner xml so it's preferable but not implicitly required. If\nyou don't want it, remove it from the ``setup.py`` file and you'll be\ngood to go.\n\nUsage\n-----\n\nThe documentation (non-existent) provides more on this but essentially\nyou create an OpenClip object / class instance and that object has a\nnumber of built in methods for manipulating the data within.\n\nExample\n~~~~~~~\n\nHere's an example that creates a generic clip object. (no file\nspecified)\n\n::\n\n    >>> import openclip\n    >>> oc = openclip.OpenClip()\n    >>> oc.clip\n    <openclip.elements.Clip object at 0x102529c90>\n    >>> print oc.clip.xml\n    <clip type=\"clip\" version=\"3\"><name type=\"string\">OpenClip_20160108_120119_93</name></clip>\n    >>> oc.clip.tracks\n    <openclip.elements.Tracks object at 0x10252e910>\n    >>> oc.clip.versions\n    <openclip.elements.Versions object at 0x10252e950>\n    >>> oc.clip.tracks.track_list\n    []\n    >>> oc.clip.versions.version_list\n    []\n\nProduct Requirements (IMO) are (in order):\n------------------------------------------\n\nThe following are my own requirements for this module, in no particular\norder. *Some have already been satisfied.*\n\n-  to model openclip xml in an atomic building block fashion using\n   python classes\n-  to create working openclip xml documents from input or by parsing\n   existing files\n-  to safely retain/backup metadata in potentially destructive write\n   operations\n-  to have it intuitively and recursively create clip files from a tree\n   using pyseq,lss,mls etc.\n-  to introspect existing clip files and allow interactive wizard-style\n   editing\n-  to merge clip files\n-  to change paths on clip files\n-  to generate placeholder media for sequences that don't exist\n\nFuture:\n-------\n\n-  pluggable openclip module for use in maya, houdini, nuke, hiero, fcp?\n-  truly open format\n-  interactive wizard style component\n-  qt/pyside\n\nTests |Build Status|\n--------------------\n\nI use ``tox`` for testing and `Travis CI <https://travis-ci.org>`__ (a\ndistributed continuous integration service used to build and test\nprojects hosted at GitHub).\n\nRunning the tests should be as easy as typing:\n\n::\n\n    tox\n\n(assuming you have tox and pytest installed of course.)\n\nDependencies\n------------\n\n**python-openclip** uses a number of opensource packages.\n\n-  `Parse <https://github.com/r1chardj0n3s/parse>`__ is the opposite of\n   the python ``format`` command.\n-  `PySeq <https://github.com/rsgalloway/pyseq>`__ finds groups of items\n   that follow a naming convention containing a numerical sequence.\n-  `timecode <https://github.com/eoyilmaz/timecode>`__ provides timecode\n   manipulation functions.\n-  `colorama <https://github.com/tartley/colorama>`__ provides\n   cross-platform colored terminal text in Python.\n-  `colorlog <https://github.com/borntyping/python-colorlog>`__ is a\n   colored formatter for the python logging module.\n-  `Munch <https://github.com/Infinidat/munch>`__ *(previously bunch)*\n   is a Python dictionary that provides attribute-style access.\n\nAuthor(s)\n---------\n\n-  `Robert Moggach <http://moggach.com>`__\n-  \n\nMaintainers\n-----------\n\n-  `Robert Moggach <http://moggach.com>`__\n-  \n\nContributors\n------------\n\n-  \n\nThe MIT License (MIT)\n---------------------\n\nCopyright (c) 2016 `Robert Moggach <http://moggach.com>`__\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. |Build Status| image:: https://travis-ci.org/robmoggach/python-openclip.svg?branch=master\n   :target: https://travis-ci.org/robmoggach/python-openclip\n.. |Latest Version| image:: https://img.shields.io/pypi/v/openclip.svg\n   :target: https://pypi.python.org/pypi/openclip/\n.. |Supported Python versions| image:: https://img.shields.io/pypi/pyversions/openclip.svg\n   :target: https://pypi.python.org/pypi/openclip/\n.. |Downloads| image:: https://img.shields.io/pypi/dm/openclip.svg\n   :target: https://pypi.python.org/pypi/openclip/\n.. |Documentation Status| image:: https://readthedocs.org/projects/openclip/badge/?version=latest\n   :target: https://readthedocs.org/projects/openclip/?badge=latest", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/robmoggach/python-openclip/tarball/v0.0.12", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/robmoggach/python-openclip", "keywords": "filesystem media utilities vfx", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "openclip", "package_url": "https://pypi.org/project/openclip/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/openclip/", "project_urls": {"Download": "https://github.com/robmoggach/python-openclip/tarball/v0.0.12", "Homepage": "http://github.com/robmoggach/python-openclip"}, "release_url": "https://pypi.org/project/openclip/0.0.12/", "requires_dist": null, "requires_python": null, "summary": "OpenClip XML Media Management Python Module 0.0.12", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/robmoggach/python-openclip\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca2c03c06a3f85619a0f5973ab8ef37f31990322/68747470733a2f2f7472617669732d63692e6f72672f726f626d6f67676163682f707974686f6e2d6f70656e636c69702e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/openclip/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac2bf014589b4711e8174dc6378edd82b5ea295e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f70656e636c69702e737667\"></a> <a href=\"https://pypi.python.org/pypi/openclip/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/600ae189ae501b9817693d6142ce23b101c1e4a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f70656e636c69702e737667\"></a> <a href=\"https://pypi.python.org/pypi/openclip/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74463eacadf2a287fbd6fd88c8a44940164ae462/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f70656e636c69702e737667\"></a>\n<a href=\"https://readthedocs.org/projects/openclip/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/195676a968e141f7f0e1c0871d9c26c0f20d31ed/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6f70656e636c69702f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<div id=\"openclip-xml-media-management-python-module\">\n<h2>OpenClip XML Media Management Python Module</h2>\n<p>Openclip is a python abstraction of the openclip XML media\nclassification format. It provides ORM-style access to \u201cdotclip\u201d data\n(file or generated) to make the life of a python developer much easier.\nThis module is not meant to be a complete solution but rather a stable\nand standardized component of various other scripts, tools, guis, and\nsoftware integrations.</p>\n<ul>\n<li><a href=\"http://openclip.readthedocs.org\" rel=\"nofollow\">Documentation on ReadTheDocs</a></li>\n<li><a href=\"https://github.com/robmoggach/python-openclip\" rel=\"nofollow\">Source on GitHub</a></li>\n<li><a href=\"https://pypi.python.org/pypi/openclip\" rel=\"nofollow\">Packages on PyPI</a></li>\n<li><a href=\"https://travis-ci.org/robmoggach/python-openclip\" rel=\"nofollow\">Builds on Travis\nCI</a></li>\n</ul>\n<div id=\"about-the-openclip-format\">\n<h3>About the <em>OpenClip</em> format</h3>\n<blockquote>\n<em>the following is adapted from the Autodesk documentation of the\nGateway Clip specification\u2026</em></blockquote>\n<p>The <strong>``.clip``</strong> <strong>OpenClip</strong> XML format is an XML wrapper which points\nto single or multiple video and/or audio sources and wraps them in a\nsingle entity. The XML is built to reflect the structure of a complex\nclip, with the most atomic portions (paths to media) at the bottom of\nthe hierarchy, and the clip at the top most entity.</p>\n<p>An <strong>OpenClip</strong> XML structured file describes at least the following\ninformation:</p>\n<ul>\n<li>Physical location of files</li>\n<li>additional metadata information, such as timecode and keycode</li>\n<li>Clip versions</li>\n</ul>\n<div id=\"structure-of-openclip\">\n<h4>Structure of OpenClip</h4>\n<p>The following is a basic representation of the structure of an Open\nClip:</p>\n<div id=\"clip\">\n<h5><tt>&lt;clip&gt;</tt></h5>\n<ul>\n<li>highest level wrapper entity</li>\n<li>comprises entire clip (Tracks, Versions)</li>\n<li>defines global options (Clip Name, Comments)</li>\n</ul>\n</div>\n<div id=\"track\">\n<h5><tt>&lt;track&gt;</tt></h5>\n<ul>\n<li>found within <tt>&lt;tracks&gt;</tt> container</li>\n<li>all information about a single channel</li>\n<li>ChannelType (Video, Audio, Generic)</li>\n<li>Extended Channel Type (eg. Matte, Normals, Shadow)</li>\n</ul>\n</div>\n<div id=\"feed\">\n<h5><tt>&lt;feed&gt;</tt></h5>\n<ul>\n<li>found within <tt>&lt;feeds&gt;</tt> container</li>\n<li>Track Version or \u201cView\u201d</li>\n<li>Distinguished by a Version Number</li>\n<li>Storage Format (bit-depth, resolution, etc.)</li>\n</ul>\n</div>\n<div id=\"span\">\n<h5><tt>&lt;span&gt;</tt></h5>\n<ul>\n<li>found within <tt>&lt;spans&gt;</tt> container</li>\n<li>Media (Image sequence or streaming media/container eg. QuickTime)</li>\n<li>Path(s) to media</li>\n</ul>\n<p>Within a <tt>clip</tt>, you have <tt>tracks</tt>, within <tt>tracks</tt> you have\n<tt>feeds</tt> and within <tt>feeds</tt>, <tt>spans</tt>.</p>\n</div>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>This should be easy. You may need administrator priveleges depending on\nyour system configuration.</p>\n<blockquote>\nNote: Some software have their own isolated python environment for a\ngood reason - try at your own risk to integrate this library\u2026</blockquote>\n<p>For the latest dev branch:</p>\n<pre>git clone https://github.com/robmoggach/python-openclip.git\ncd python-openclip\npython setup.py install\n</pre>\n<p>or for the latest (possibly stable?) release:</p>\n<pre>pip install openclip\n</pre>\n<p>or</p>\n<pre>easy_install openclip\n\n**Note:** I prefer markdown for documentation but setuptools prefers\nrestructuredText. For this reason the ``setup.py`` file\n**optionally** requires package ``pypandoc`` which can be installed\nusing ``pip install pypandoc``.\n</pre>\n<div id=\"lxml-etree\">\n<h4>lxml.etree</h4>\n<p><tt>lxml.etree</tt> has been used in development for this project but it does\nhave fallbacks for system xml element tree tools. It\u2019s faster and\nproduces cleaner xml so it\u2019s preferable but not implicitly required. If\nyou don\u2019t want it, remove it from the <tt>setup.py</tt> file and you\u2019ll be\ngood to go.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The documentation (non-existent) provides more on this but essentially\nyou create an OpenClip object / class instance and that object has a\nnumber of built in methods for manipulating the data within.</p>\n<div id=\"example\">\n<h4>Example</h4>\n<p>Here\u2019s an example that creates a generic clip object. (no file\nspecified)</p>\n<pre>&gt;&gt;&gt; import openclip\n&gt;&gt;&gt; oc = openclip.OpenClip()\n&gt;&gt;&gt; oc.clip\n&lt;openclip.elements.Clip object at 0x102529c90&gt;\n&gt;&gt;&gt; print oc.clip.xml\n&lt;clip type=\"clip\" version=\"3\"&gt;&lt;name type=\"string\"&gt;OpenClip_20160108_120119_93&lt;/name&gt;&lt;/clip&gt;\n&gt;&gt;&gt; oc.clip.tracks\n&lt;openclip.elements.Tracks object at 0x10252e910&gt;\n&gt;&gt;&gt; oc.clip.versions\n&lt;openclip.elements.Versions object at 0x10252e950&gt;\n&gt;&gt;&gt; oc.clip.tracks.track_list\n[]\n&gt;&gt;&gt; oc.clip.versions.version_list\n[]\n</pre>\n</div>\n</div>\n<div id=\"product-requirements-imo-are-in-order\">\n<h3>Product Requirements (IMO) are (in order):</h3>\n<p>The following are my own requirements for this module, in no particular\norder. <em>Some have already been satisfied.</em></p>\n<ul>\n<li>to model openclip xml in an atomic building block fashion using\npython classes</li>\n<li>to create working openclip xml documents from input or by parsing\nexisting files</li>\n<li>to safely retain/backup metadata in potentially destructive write\noperations</li>\n<li>to have it intuitively and recursively create clip files from a tree\nusing pyseq,lss,mls etc.</li>\n<li>to introspect existing clip files and allow interactive wizard-style\nediting</li>\n<li>to merge clip files</li>\n<li>to change paths on clip files</li>\n<li>to generate placeholder media for sequences that don\u2019t exist</li>\n</ul>\n</div>\n<div id=\"future\">\n<h3>Future:</h3>\n<ul>\n<li>pluggable openclip module for use in maya, houdini, nuke, hiero, fcp?</li>\n<li>truly open format</li>\n<li>interactive wizard style component</li>\n<li>qt/pyside</li>\n</ul>\n</div>\n<div id=\"tests-build-status\">\n<h3>Tests <a href=\"https://travis-ci.org/robmoggach/python-openclip\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca2c03c06a3f85619a0f5973ab8ef37f31990322/68747470733a2f2f7472617669732d63692e6f72672f726f626d6f67676163682f707974686f6e2d6f70656e636c69702e7376673f6272616e63683d6d6173746572\"></a></h3>\n<p>I use <tt>tox</tt> for testing and <a href=\"https://travis-ci.org\" rel=\"nofollow\">Travis CI</a> (a\ndistributed continuous integration service used to build and test\nprojects hosted at GitHub).</p>\n<p>Running the tests should be as easy as typing:</p>\n<pre>tox\n</pre>\n<p>(assuming you have tox and pytest installed of course.)</p>\n</div>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p><strong>python-openclip</strong> uses a number of opensource packages.</p>\n<ul>\n<li><a href=\"https://github.com/r1chardj0n3s/parse\" rel=\"nofollow\">Parse</a> is the opposite of\nthe python <tt>format</tt> command.</li>\n<li><a href=\"https://github.com/rsgalloway/pyseq\" rel=\"nofollow\">PySeq</a> finds groups of items\nthat follow a naming convention containing a numerical sequence.</li>\n<li><a href=\"https://github.com/eoyilmaz/timecode\" rel=\"nofollow\">timecode</a> provides timecode\nmanipulation functions.</li>\n<li><a href=\"https://github.com/tartley/colorama\" rel=\"nofollow\">colorama</a> provides\ncross-platform colored terminal text in Python.</li>\n<li><a href=\"https://github.com/borntyping/python-colorlog\" rel=\"nofollow\">colorlog</a> is a\ncolored formatter for the python logging module.</li>\n<li><a href=\"https://github.com/Infinidat/munch\" rel=\"nofollow\">Munch</a> <em>(previously bunch)</em>\nis a Python dictionary that provides attribute-style access.</li>\n</ul>\n</div>\n<div id=\"author-s\">\n<h3>Author(s)</h3>\n<ul>\n<li><a href=\"http://moggach.com\" rel=\"nofollow\">Robert Moggach</a></li>\n<li>\n</ul>\n</div>\n<div id=\"maintainers\">\n<h3>Maintainers</h3>\n<ul>\n<li><a href=\"http://moggach.com\" rel=\"nofollow\">Robert Moggach</a></li>\n<li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>\n</ul>\n</div>\n<div id=\"the-mit-license-mit\">\n<h3>The MIT License (MIT)</h3>\n<p>Copyright (c) 2016 <a href=\"http://moggach.com\" rel=\"nofollow\">Robert Moggach</a></p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1898160, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "6b26c4e4a1502ca75a84cbb9e0c7acec", "sha256": "f0a6be063cffe6e724250e41934de36c76ca9ca624e67b083b879931ce1c3ee6"}, "downloads": -1, "filename": "openclip-0.0.10.tar.gz", "has_sig": false, "md5_digest": "6b26c4e4a1502ca75a84cbb9e0c7acec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20263, "upload_time": "2016-01-10T20:35:49", "upload_time_iso_8601": "2016-01-10T20:35:49.805067Z", "url": "https://files.pythonhosted.org/packages/ac/34/7ce17826838a54eefcf44dfd371b37ad6e2f58ffbfc1a427503a32808ec0/openclip-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "91345c51e5a08dd2198d89487e012ace", "sha256": "35bf74b482a1b9551d5adfa254817ed49eec97e24fc994724e0126d8ae2ba0e5"}, "downloads": -1, "filename": "openclip-0.0.11.tar.gz", "has_sig": false, "md5_digest": "91345c51e5a08dd2198d89487e012ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20306, "upload_time": "2016-01-10T20:49:01", "upload_time_iso_8601": "2016-01-10T20:49:01.519646Z", "url": "https://files.pythonhosted.org/packages/45/0c/19e3a46aa1aafe500620f3a8986f05ab5d5ae53d0a6614cf5bdb1f42ca21/openclip-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "763020609eda8e7b95ce515c3143ae78", "sha256": "dc97cea051e7ea79edd86e8337cb76e4bc7d09765770fc0968e9395b5b31df54"}, "downloads": -1, "filename": "openclip-0.0.12.tar.gz", "has_sig": false, "md5_digest": "763020609eda8e7b95ce515c3143ae78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20336, "upload_time": "2016-01-10T22:06:24", "upload_time_iso_8601": "2016-01-10T22:06:24.231120Z", "url": "https://files.pythonhosted.org/packages/55/73/ea5ac5a13d4ef5f98f1cfe3931a13b93d395007a9afd4dd76d0bf9b811f8/openclip-0.0.12.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "da303b4dcefcabaf4cf34c514612bb4e", "sha256": "eb886dd4c8c9bffd5f6be20b76ae790c02f441f10eaa879b51e933f08f877b46"}, "downloads": -1, "filename": "openclip-0.0.9.tar.gz", "has_sig": false, "md5_digest": "da303b4dcefcabaf4cf34c514612bb4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19653, "upload_time": "2016-01-10T08:52:43", "upload_time_iso_8601": "2016-01-10T08:52:43.411387Z", "url": "https://files.pythonhosted.org/packages/07/28/634a60c360b8e298df7a83a3e13cd7e3e1d2053610271df01dc7dd383630/openclip-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "763020609eda8e7b95ce515c3143ae78", "sha256": "dc97cea051e7ea79edd86e8337cb76e4bc7d09765770fc0968e9395b5b31df54"}, "downloads": -1, "filename": "openclip-0.0.12.tar.gz", "has_sig": false, "md5_digest": "763020609eda8e7b95ce515c3143ae78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20336, "upload_time": "2016-01-10T22:06:24", "upload_time_iso_8601": "2016-01-10T22:06:24.231120Z", "url": "https://files.pythonhosted.org/packages/55/73/ea5ac5a13d4ef5f98f1cfe3931a13b93d395007a9afd4dd76d0bf9b811f8/openclip-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:21 2020"}