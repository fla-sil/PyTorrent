{"info": {"author": "", "author_email": "ericmajinglong@gmail.com", "bugtrack_url": null, "classifiers": ["Topic :: Scientific/Engineering :: Visualization"], "description": "# squarest-divisors\n\nA small utility to compute the squarest pair of divisors for an integer.\n\n# Installation\n\nInstall from PyPI:\n\n```\n$ pip install sqdiv\n```\n\n# Usage\n\nThe original intended usage is with `matplotlib`, to automatically figure out how many rows and columns are needed based on the number of subplots I actually need to plot.\n\nLet's say I had a series of 11 things I needed to plot on a `matplotlib` figure, something akin to a [`seaborn.FacetGrid`](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html), but with some custom things added.\n\n```python\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\nfrom sqdiv import n_rows_cols\n\nheight = 3\nnrows, ncols = n_rows_cols(len(labels))  # len(labels) == 11\nfig = plt.figure(figsize=(ncols * height, nrows * height))\ngs = GridSpec(nrows=nrows, ncols=ncols)\n\n# Now, setup the axes to plot on.\naxes = dict()\nfor i, c in enumerate(labels):\n    # This allows us to share axes across the plots.\n    if i != 0:\n        axes[c] = fig.add_subplot(gs[i], sharey=axes[labels[0]])\n    else:\n        axes[c] = fig.add_subplot(gs[i])\n    axes[c].set_title(f'{c}')\n    axes[c].set_xlabel('x')\n    axes[c].set_ylabel('y')\n\n# Below here, plot to your heart's content on each axes object.\n```\n\nThe trivial case (1 by number of items) is not provided as part of the functionality because, hey, it's trivial!\n\n# Feature Requests\n\nContributions are welcome. If you'd like to submit something, let's discuss on the [GitHub Issues tracker](https://github.com/ericmjl/squarest-divisors/issues) first.\n\nBecause `sqdiv` is currently maintained by volunteers and has no fiscal support, any feature requests will be prioritized according to what maintainers encounter as a need in our day-to-day jobs. Please temper expectations accordingly.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ericmjl/squarest-divisors", "keywords": "math,geometry,matplotlib", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sqdiv", "package_url": "https://pypi.org/project/sqdiv/", "platform": "", "project_url": "https://pypi.org/project/sqdiv/", "project_urls": {"Homepage": "https://github.com/ericmjl/squarest-divisors"}, "release_url": "https://pypi.org/project/sqdiv/0.1/", "requires_dist": ["numpy", "hypothesis"], "requires_python": "", "summary": "A small utility to compute the squarest pair of divisors for an integer.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # squarest-divisors<br><br>A small utility to compute the squarest pair of divisors for an integer.<br><br># Installation<br><br>Install from PyPI:<br><br>```<br>$ pip install sqdiv<br>```<br><br># Usage<br><br>The original intended usage is with `matplotlib`, to automatically figure out how many rows and columns are needed based on the number of subplots I actually need to plot.<br><br>Let's say I had a series of 11 things I needed to plot on a `matplotlib` figure, something akin to a [`seaborn.FacetGrid`](https://seaborn.pydata.org/generated/seaborn.FacetGrid.html), but with some custom things added.<br><br>```python<br>import matplotlib.pyplot as plt<br>from matplotlib.gridspec import GridSpec<br>from sqdiv import n_rows_cols<br><br>height = 3<br>nrows, ncols = n_rows_cols(len(labels))  # len(labels) == 11<br>fig = plt.figure(figsize=(ncols * height, nrows * height))<br>gs = GridSpec(nrows=nrows, ncols=ncols)<br><br># Now, setup the axes to plot on.<br>axes = dict()<br>for i, c in enumerate(labels):<br>    # This allows us to share axes across the plots.<br>    if i != 0:<br>        axes[c] = fig.add_subplot(gs[i], sharey=axes[labels[0]])<br>    else:<br>        axes[c] = fig.add_subplot(gs[i])<br>    axes[c].set_title(f'{c}')<br>    axes[c].set_xlabel('x')<br>    axes[c].set_ylabel('y')<br><br># Below here, plot to your heart's content on each axes object.<br>```<br><br>The trivial case (1 by number of items) is not provided as part of the functionality because, hey, it's trivial!<br><br># Feature Requests<br><br>Contributions are welcome. If you'd like to submit something, let's discuss on the [GitHub Issues tracker](https://github.com/ericmjl/squarest-divisors/issues) first.<br><br>Because `sqdiv` is currently maintained by volunteers and has no fiscal support, any feature requests will be prioritized according to what maintainers encounter as a need in our day-to-day jobs. Please temper expectations accordingly.<br><br><br>\n          </div>"}, "last_serial": 4109902, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8d51bf2b1fc30c1d2a47f64456180029", "sha256": "be20beb0f16fb4a49f08b8b58c0f0f2640085c5edd6b521c6ec227ef05f44502"}, "downloads": -1, "filename": "sqdiv-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8d51bf2b1fc30c1d2a47f64456180029", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2586, "upload_time": "2018-07-27T18:54:45", "upload_time_iso_8601": "2018-07-27T18:54:45.484853Z", "url": "https://files.pythonhosted.org/packages/a2/47/ea576c92978e0e162d511fea597a11984c839866fda427df1c5218bc650f/sqdiv-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8d6f3f71a95a94f8f26eb8610c8f4e1", "sha256": "a390b05f4177d9d5b4234751004c7210dd28496194830761220a9405996c0fdc"}, "downloads": -1, "filename": "sqdiv-0.1.tar.gz", "has_sig": false, "md5_digest": "c8d6f3f71a95a94f8f26eb8610c8f4e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2680, "upload_time": "2018-07-27T18:54:46", "upload_time_iso_8601": "2018-07-27T18:54:46.750042Z", "url": "https://files.pythonhosted.org/packages/0a/3b/f76dd7dacd030acd412c0dd2d2e1571ae8f1ac7460d56d7804e45263f70f/sqdiv-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d51bf2b1fc30c1d2a47f64456180029", "sha256": "be20beb0f16fb4a49f08b8b58c0f0f2640085c5edd6b521c6ec227ef05f44502"}, "downloads": -1, "filename": "sqdiv-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8d51bf2b1fc30c1d2a47f64456180029", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2586, "upload_time": "2018-07-27T18:54:45", "upload_time_iso_8601": "2018-07-27T18:54:45.484853Z", "url": "https://files.pythonhosted.org/packages/a2/47/ea576c92978e0e162d511fea597a11984c839866fda427df1c5218bc650f/sqdiv-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8d6f3f71a95a94f8f26eb8610c8f4e1", "sha256": "a390b05f4177d9d5b4234751004c7210dd28496194830761220a9405996c0fdc"}, "downloads": -1, "filename": "sqdiv-0.1.tar.gz", "has_sig": false, "md5_digest": "c8d6f3f71a95a94f8f26eb8610c8f4e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2680, "upload_time": "2018-07-27T18:54:46", "upload_time_iso_8601": "2018-07-27T18:54:46.750042Z", "url": "https://files.pythonhosted.org/packages/0a/3b/f76dd7dacd030acd412c0dd2d2e1571ae8f1ac7460d56d7804e45263f70f/sqdiv-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:03 2020"}