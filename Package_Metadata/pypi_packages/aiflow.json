{"info": {"author": "Xianxian Huang", "author_email": "hxianxian@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries"], "description": "# AI Flow\n\n## Introduction\nAI Flow, which offers various reusable operators & processing units in AI modeling, helps AI engineer to write less, reuse more, integrate easily.\n\n## Install\n\n```\npip install aiflow\n```\n\n\n## Concepts\n\n### Operators VS. Units\n\nIdeally, we agree:\n- An **Operator** would contain lot of units, which will be integrated into `airflow` for building non-realtime processing workflow;\n- A **Unit** is a small calculation unit, which could be a function, or just a simple modeling logic, and it could be picked as bricks to build an operator. Besides, it could be reused anywhere for realtime calculation.\n\n## Classes\n\n### Operators\n\n#### MongoToCSVOperator\n\n#### Elastic2CSVOperator\n\n#### RegExLabellingOperator\n\n### Units\n\n#### Doc2VecUnit\n\n#### Doc2MatUnit\n\n## Tests & Examples\n\n### Example: Use Units to Build Your Castle\n\n\n### Example: Working with Airflow\n\nIn `tests/docker/` folder, we provide examples on how to use `aiflow` with `airflow`.\nIt is a docker image, you could simply copy and start to use it!\n\nIn project root directory, run commands first:\n```\ndocker-compose up --build aiflow\n```\n\nThen open `localhost:8080` in your browser, you can see all the examples `aiflow` provided!\nNote: both the default username & password are `admin`\n\nEnjoy!\n\n## Contribution\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Marcnuth/aiflow", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "aiflow", "package_url": "https://pypi.org/project/aiflow/", "platform": "", "project_url": "https://pypi.org/project/aiflow/", "project_urls": {"Homepage": "https://github.com/Marcnuth/aiflow"}, "release_url": "https://pypi.org/project/aiflow/1.0.0/", "requires_dist": ["apache-airflow", "pymongo", "pathlib", "jsonpath", "pandas", "numpy", "gensim", "nltk", "elasticsearch (<7.0.0,>=6.0.0)"], "requires_python": "", "summary": "AI Flow, an extend operators library for airflow, which helps AI engineer to write less, reuse more, integrate easily.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AI Flow</h1>\n<h2>Introduction</h2>\n<p>AI Flow, which offers various reusable operators &amp; processing units in AI modeling, helps AI engineer to write less, reuse more, integrate easily.</p>\n<h2>Install</h2>\n<pre><code>pip install aiflow\n</code></pre>\n<h2>Concepts</h2>\n<h3>Operators VS. Units</h3>\n<p>Ideally, we agree:</p>\n<ul>\n<li>An <strong>Operator</strong> would contain lot of units, which will be integrated into <code>airflow</code> for building non-realtime processing workflow;</li>\n<li>A <strong>Unit</strong> is a small calculation unit, which could be a function, or just a simple modeling logic, and it could be picked as bricks to build an operator. Besides, it could be reused anywhere for realtime calculation.</li>\n</ul>\n<h2>Classes</h2>\n<h3>Operators</h3>\n<h4>MongoToCSVOperator</h4>\n<h4>Elastic2CSVOperator</h4>\n<h4>RegExLabellingOperator</h4>\n<h3>Units</h3>\n<h4>Doc2VecUnit</h4>\n<h4>Doc2MatUnit</h4>\n<h2>Tests &amp; Examples</h2>\n<h3>Example: Use Units to Build Your Castle</h3>\n<h3>Example: Working with Airflow</h3>\n<p>In <code>tests/docker/</code> folder, we provide examples on how to use <code>aiflow</code> with <code>airflow</code>.\nIt is a docker image, you could simply copy and start to use it!</p>\n<p>In project root directory, run commands first:</p>\n<pre><code>docker-compose up --build aiflow\n</code></pre>\n<p>Then open <code>localhost:8080</code> in your browser, you can see all the examples <code>aiflow</code> provided!\nNote: both the default username &amp; password are <code>admin</code></p>\n<p>Enjoy!</p>\n<h2>Contribution</h2>\n\n          </div>"}, "last_serial": 6150017, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e7eba66d1589d9e21708ab8a0a4a0b9a", "sha256": "3988de5665408623e51ac03d49d7dd811229a217a2547101d255b18193c9d3f5"}, "downloads": -1, "filename": "aiflow-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e7eba66d1589d9e21708ab8a0a4a0b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5904, "upload_time": "2019-11-12T08:36:29", "upload_time_iso_8601": "2019-11-12T08:36:29.477411Z", "url": "https://files.pythonhosted.org/packages/a9/40/19257c2949a558bab0adbbad07b842959dae9ea154eb913af8fa9c5e01e0/aiflow-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e4008dc5de78c6659930bf09bd806b4", "sha256": "4884aadc664cc22db808b0760137b358ac3f66525c0b66dcd1c96f40c7b2e07a"}, "downloads": -1, "filename": "aiflow-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5e4008dc5de78c6659930bf09bd806b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1560, "upload_time": "2019-11-12T08:36:32", "upload_time_iso_8601": "2019-11-12T08:36:32.332857Z", "url": "https://files.pythonhosted.org/packages/4b/68/afae39cf6a96125d313bbd3cf5ae6221cc5ce8cbc59bbc1a55447b8812fd/aiflow-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "50de71e09714f8dfa0b03d9ab6b6b69e", "sha256": "1fc3d0db04036fa3bb288760b035257fac9fc4324b930ae403108d6a7200dc45"}, "downloads": -1, "filename": "aiflow-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50de71e09714f8dfa0b03d9ab6b6b69e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16023, "upload_time": "2019-11-17T10:07:14", "upload_time_iso_8601": "2019-11-17T10:07:14.393340Z", "url": "https://files.pythonhosted.org/packages/5f/75/93b8ca20b80525e71d862e76ea66949fc03e2447e67d10b674a8d0d8c174/aiflow-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4cd7f51c71d5f0a5727a01b353ddf79", "sha256": "1f11099ffe8a7a13822cd838b1f7a630088e58eeb40b134fc76963c15c18b35d"}, "downloads": -1, "filename": "aiflow-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f4cd7f51c71d5f0a5727a01b353ddf79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8061, "upload_time": "2019-11-17T10:07:15", "upload_time_iso_8601": "2019-11-17T10:07:15.976135Z", "url": "https://files.pythonhosted.org/packages/a3/8d/5b4db2abac3791e5ca26402a24154e93a00749b15a29a18b88ffe5b8fb7a/aiflow-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50de71e09714f8dfa0b03d9ab6b6b69e", "sha256": "1fc3d0db04036fa3bb288760b035257fac9fc4324b930ae403108d6a7200dc45"}, "downloads": -1, "filename": "aiflow-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50de71e09714f8dfa0b03d9ab6b6b69e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16023, "upload_time": "2019-11-17T10:07:14", "upload_time_iso_8601": "2019-11-17T10:07:14.393340Z", "url": "https://files.pythonhosted.org/packages/5f/75/93b8ca20b80525e71d862e76ea66949fc03e2447e67d10b674a8d0d8c174/aiflow-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4cd7f51c71d5f0a5727a01b353ddf79", "sha256": "1f11099ffe8a7a13822cd838b1f7a630088e58eeb40b134fc76963c15c18b35d"}, "downloads": -1, "filename": "aiflow-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f4cd7f51c71d5f0a5727a01b353ddf79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8061, "upload_time": "2019-11-17T10:07:15", "upload_time_iso_8601": "2019-11-17T10:07:15.976135Z", "url": "https://files.pythonhosted.org/packages/a3/8d/5b4db2abac3791e5ca26402a24154e93a00749b15a29a18b88ffe5b8fb7a/aiflow-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:06 2020"}