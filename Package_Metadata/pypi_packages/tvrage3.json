{"info": {"author": "Kalle Lindqvist", "author_email": "kalle.lindqvist@mykolab.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "===============================\ntvrage3\n===============================\n\n.. image:: https://badge.fury.io/py/tvrage3.png\n    :target: http://badge.fury.io/py/tvrage3\n    \n.. image:: https://travis-ci.org/kalind/tvrage3.png?branch=master\n        :target: https://travis-ci.org/kalind/tvrage3\n\n\nPython3 client for accessing tv show information from www.tvrage.com\n\n* Free software: BSD license\n* Documentation: http://tvrage3.rtfd.org.\n\nFeatures\n--------\n\n* Lazy, you can search tvrage with quick-search and still get all the\n  information as you would get with a full search about the specified show.\n  When a Show object is asked to return information not provided by\n  the search method used, it will query tvrage for the information.\n\n\n* Will handle the occasional database errors and information inconsistencies\n  in the tvrage database sane and gracefully.\n\n\n* High-level api, handles all the XML stuff for you.\n\n\nUsage\n--------\n\n* Searching\n\n\n  * Full search\n\n    Returns a list of Show objects.\n\n    .. code-block:: python\n\n       from tvrage3.search import search\n       results = search('Buffy')\n       first = results[0]\n       first.name # => 'Buffy the Vampire Slayer'\n\n\n  * Quick search\n\n    Returns a show object, the closest match to search term or None.\n\n    .. code-block:: python\n\n       from tvrage3.search import quick_info\n       result = quick_info('Csi crime')\n       result.name # => 'CSI: Crime Scene Investigation'\n\n       # Enable stricter matching\n       result = quick_info('CSI crime', exact=True)\n       result == None # => True\n\n\n  * Search by id\n\n    Returns a Show object, or None if id is incorrect.\n\n    .. code-block:: python\n\n       from tvrage3.search import search_id\n       result = search_id('2930')\n       result.name # => 'Buffy the Vampire Slayer'\n\n\n* Show objects\n\n  Show objects should not be initialized manually, it should be done by one of\n  the search functions, but for this example we do.\n\n  .. code-block:: python\n\n     from tvrage3.api import Show\n     show = Show(show_id='3183')\n\n     show.air_day        # => 'Wednesday'\n     show.air_time       # => '22:00'\n     show.classification # => 'Scripted'\n     show.country        # => 'US'\n     show.ended_year     # => None\n     show.genres         # => ['Action', 'Crime', 'Drama']\n     show.link           # => 'http://www.tvrage.com/CSI'\n     show.name           # => 'CSI: Crime Scene Investigation'\n     show.network        # => OrderedDict([('@country', 'US'), ('#text', 'CBS')])\n     show.runtime        # => 60\n     show.seasons        # => 14\n     show.show_id        # => '3183'\n     show.started_year   # => 2000\n     show.status         # => 'Returning Series'\n\n\n\n\nHistory\n-------\n\n0.1.1 (2014-05-10)\n++++++++++++++++++\n\n* Fixed some style errors\n\n\n0.1.0 (2014-05-10)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kalind/tvrage3", "keywords": "tvrage,tv,show", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "tvrage3", "package_url": "https://pypi.org/project/tvrage3/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tvrage3/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kalind/tvrage3"}, "release_url": "https://pypi.org/project/tvrage3/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Python3 client for accessing tv show information from www.tvrage.com", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/tvrage3\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/tvrage3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81b9d81ed5aea1bc5d8207059afebaac9f094eb3/68747470733a2f2f62616467652e667572792e696f2f70792f747672616765332e706e67\"></a>\n<a href=\"https://travis-ci.org/kalind/tvrage3\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/kalind/tvrage3.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a2008bc05db5193e7dcc56f38c640b9144121e2/68747470733a2f2f7472617669732d63692e6f72672f6b616c696e642f747672616765332e706e673f6272616e63683d6d6173746572\"></a>\n<p>Python3 client for accessing tv show information from www.tvrage.com</p>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"http://tvrage3.rtfd.org\" rel=\"nofollow\">http://tvrage3.rtfd.org</a>.</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Lazy, you can search tvrage with quick-search and still get all the\ninformation as you would get with a full search about the specified show.\nWhen a Show object is asked to return information not provided by\nthe search method used, it will query tvrage for the information.</li>\n<li>Will handle the occasional database errors and information inconsistencies\nin the tvrage database sane and gracefully.</li>\n<li>High-level api, handles all the XML stuff for you.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><p>Searching</p>\n<ul>\n<li><p>Full search</p>\n<p>Returns a list of Show objects.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvrage3.search</span> <span class=\"kn\">import</span> <span class=\"n\">search</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Buffy'</span><span class=\"p\">)</span>\n<span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">first</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># =&gt; 'Buffy the Vampire Slayer'</span>\n</pre>\n</li>\n<li><p>Quick search</p>\n<p>Returns a show object, the closest match to search term or None.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvrage3.search</span> <span class=\"kn\">import</span> <span class=\"n\">quick_info</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">quick_info</span><span class=\"p\">(</span><span class=\"s1\">'Csi crime'</span><span class=\"p\">)</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># =&gt; 'CSI: Crime Scene Investigation'</span>\n\n<span class=\"c1\"># Enable stricter matching</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">quick_info</span><span class=\"p\">(</span><span class=\"s1\">'CSI crime'</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"kc\">None</span> <span class=\"c1\"># =&gt; True</span>\n</pre>\n</li>\n<li><p>Search by id</p>\n<p>Returns a Show object, or None if id is incorrect.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvrage3.search</span> <span class=\"kn\">import</span> <span class=\"n\">search_id</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">search_id</span><span class=\"p\">(</span><span class=\"s1\">'2930'</span><span class=\"p\">)</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># =&gt; 'Buffy the Vampire Slayer'</span>\n</pre>\n</li>\n</ul>\n</li>\n<li><p>Show objects</p>\n<p>Show objects should not be initialized manually, it should be done by one of\nthe search functions, but for this example we do.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvrage3.api</span> <span class=\"kn\">import</span> <span class=\"n\">Show</span>\n<span class=\"n\">show</span> <span class=\"o\">=</span> <span class=\"n\">Show</span><span class=\"p\">(</span><span class=\"n\">show_id</span><span class=\"o\">=</span><span class=\"s1\">'3183'</span><span class=\"p\">)</span>\n\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">air_day</span>        <span class=\"c1\"># =&gt; 'Wednesday'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">air_time</span>       <span class=\"c1\"># =&gt; '22:00'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">classification</span> <span class=\"c1\"># =&gt; 'Scripted'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">country</span>        <span class=\"c1\"># =&gt; 'US'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">ended_year</span>     <span class=\"c1\"># =&gt; None</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">genres</span>         <span class=\"c1\"># =&gt; ['Action', 'Crime', 'Drama']</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">link</span>           <span class=\"c1\"># =&gt; 'http://www.tvrage.com/CSI'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">name</span>           <span class=\"c1\"># =&gt; 'CSI: Crime Scene Investigation'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">network</span>        <span class=\"c1\"># =&gt; OrderedDict([('@country', 'US'), ('#text', 'CBS')])</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">runtime</span>        <span class=\"c1\"># =&gt; 60</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">seasons</span>        <span class=\"c1\"># =&gt; 14</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">show_id</span>        <span class=\"c1\"># =&gt; '3183'</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">started_year</span>   <span class=\"c1\"># =&gt; 2000</span>\n<span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">status</span>         <span class=\"c1\"># =&gt; 'Returning Series'</span>\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.1 (2014-05-10)</h3>\n<ul>\n<li>Fixed some style errors</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2014-05-10)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1087745, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7a31023ae0b533503c83c28f11a5dc84", "sha256": "1169fd3eeeed0d4d94c037e64e7cd93642f9cc3a9d2f43067149d68eb98a81cc"}, "downloads": -1, "filename": "tvrage3-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7a31023ae0b533503c83c28f11a5dc84", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7191, "upload_time": "2014-05-10T00:20:37", "upload_time_iso_8601": "2014-05-10T00:20:37.357347Z", "url": "https://files.pythonhosted.org/packages/fa/0f/b12fbb2a340b5c7e0dd15c9bd61d025a7e5872bfbc3877b2c9fbdfea7524/tvrage3-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73dc2b4860d63f67e9dca70eb9a8d9de", "sha256": "e200b06850ab6d9361a18387b22d8a4a761f43073e8546e1814b79584f0fdd5e"}, "downloads": -1, "filename": "tvrage3-0.1.0.tar.gz", "has_sig": false, "md5_digest": "73dc2b4860d63f67e9dca70eb9a8d9de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14658, "upload_time": "2014-05-10T00:20:34", "upload_time_iso_8601": "2014-05-10T00:20:34.108550Z", "url": "https://files.pythonhosted.org/packages/3b/b3/d8aff7776d70bb150abf44c89284e3843e9f78248dc86fdfea2280be43fb/tvrage3-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "17ddac04326c17d7de301e9bd5e9eec5", "sha256": "a1a4496569a87c3033d1ef6cb7b12c668e26a3eccb808f024d21a95a49c86304"}, "downloads": -1, "filename": "tvrage3-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "17ddac04326c17d7de301e9bd5e9eec5", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7183, "upload_time": "2014-05-10T08:24:55", "upload_time_iso_8601": "2014-05-10T08:24:55.325772Z", "url": "https://files.pythonhosted.org/packages/e6/14/635571323ee16c37af3d3307b9f36cc2f09afd8e23d5db6179a3accfcb8a/tvrage3-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09071cea0eaaed1546d9bb06f0706944", "sha256": "da1c24386e0f6b6988ca01d18dcfc57562ebf2d2c13306d031aa14bf0801c396"}, "downloads": -1, "filename": "tvrage3-0.1.1.tar.gz", "has_sig": false, "md5_digest": "09071cea0eaaed1546d9bb06f0706944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14647, "upload_time": "2014-05-10T08:24:38", "upload_time_iso_8601": "2014-05-10T08:24:38.909474Z", "url": "https://files.pythonhosted.org/packages/a8/be/f13fae37d6dea5ee789a9251273545233b0e415e49df946c19c551870f05/tvrage3-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "17ddac04326c17d7de301e9bd5e9eec5", "sha256": "a1a4496569a87c3033d1ef6cb7b12c668e26a3eccb808f024d21a95a49c86304"}, "downloads": -1, "filename": "tvrage3-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "17ddac04326c17d7de301e9bd5e9eec5", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7183, "upload_time": "2014-05-10T08:24:55", "upload_time_iso_8601": "2014-05-10T08:24:55.325772Z", "url": "https://files.pythonhosted.org/packages/e6/14/635571323ee16c37af3d3307b9f36cc2f09afd8e23d5db6179a3accfcb8a/tvrage3-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09071cea0eaaed1546d9bb06f0706944", "sha256": "da1c24386e0f6b6988ca01d18dcfc57562ebf2d2c13306d031aa14bf0801c396"}, "downloads": -1, "filename": "tvrage3-0.1.1.tar.gz", "has_sig": false, "md5_digest": "09071cea0eaaed1546d9bb06f0706944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14647, "upload_time": "2014-05-10T08:24:38", "upload_time_iso_8601": "2014-05-10T08:24:38.909474Z", "url": "https://files.pythonhosted.org/packages/a8/be/f13fae37d6dea5ee789a9251273545233b0e415e49df946c19c551870f05/tvrage3-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:19 2020"}