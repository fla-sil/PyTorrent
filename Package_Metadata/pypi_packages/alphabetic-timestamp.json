{"info": {"author": "ShadowCodeCz", "author_email": "shadow.code.cz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# Alphabetic Timestamp\n\n[![PyPI-Status](https://img.shields.io/pypi/v/alphabetic-timestamp.svg)](https://pypi.org/project/alphabetic-timestamp/)\n[![PyPI-Versions](https://img.shields.io/pypi/pyversions/alphabetic-timestamp.svg)](https://pypi.org/project/alphabetic-timestamp/)\n[![GitHub issues](https://img.shields.io/github/issues/ShadowCodeCz/alphabetic_timestamp)](https://github.com/ShadowCodeCz/alphabetic_timestamp/issues)\n[![Build Status](https://travis-ci.com/ShadowCodeCz/alphabetic_timestamp.svg?branch=master)](https://travis-ci.com/ShadowCodeCz/alphabetic_timestamp)\n![PyPI - Status](https://img.shields.io/pypi/status/alphabetic-timestamp)\n[![GitHub license](https://img.shields.io/github/license/ShadowCodeCz/alphabetic_timestamp)](https://github.com/ShadowCodeCz/alphabetic_timestamp/blob/master/LICENSE)\n\n\nThis is small Python package which encode standard timestamp to shorted form by using alphabetic symbols. \n\n## Installation \n\n```python\npip install alphabetic-timestamp \n``` \n\n## Description\n\nUser can use two base for coding. It other words two different lists of symbols for encoding.\n * Base36\n \n * Base62\n\n### Example of coding \nThis example show coding of datetime 2020-01-01 20:20:20.002000. It means timestamp 1577906420.002.\n\n\n| Time Units     | Base36       | Base62   |\n| -------------- |:------------:|:--------:|\n| seconds        |  q3g0dw      | 1IMJxy   |\n| deciseconds    |  78yg3uw     | hdRlpu   |\n| centiseconds   |  20hkh2kw    | 2MeBs6Q  |\n| milliseconds   |  k4voqpsy    | rMm2x6q  |\n\n\n ### Symbols of Base 36\n```python\nimport alphabetic_timestamp as ats\n\nprint(ats.base36.symbols)\n\n>>> 0123456789abcdefghijklmnopqrstuvwxyz\n``` \n \n### Symbols of Base 62\n```python\nimport alphabetic_timestamp as ats\n\nprint(ats.base62.symbols)\n\n>>> 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\n``` \n\n## Interface\nThe example shows interface of base36. The interface is same for base62.\n```python\nimport datetime\nimport alphabetic_timestamp as ats\n\ndt = datetime.datetime.now()\nts = dt.timestamp()\n\nats.base36.now(time_unit=ats.TimeUnit.seconds)\nats.base36.from_datetime(dt, time_unit=ats.TimeUnit.seconds)\nats.base36.from_timestamp(ts, time_unit=ats.TimeUnit.seconds)\n\nats.base36.to_datetime(\"q67vhw\", time_unit=ats.TimeUnit.seconds, time_zone=None)\nats.base36.to_timestamp(\"q67vhw\", time_unit=ats.TimeUnit.seconds)\n``` \n\nNote: The string \"q67vhw\" is only example of encoded timestamp.\n\n## Examples\nThis package is compatible with Python2.7 and Python3.4+. However these examples are written in Python3.6.\n\n### Encode & Print\n```python\nimport alphabetic_timestamp as ats\n\nprint(ats.base36.now())\n\n# Current DT: 2020-02-24 18:34:44.349162\n>>> q67vhw\n``` \n\n### Encoded & Decode\n```python\nimport datetime\nimport alphabetic_timestamp as ats\n\n\n# DATETIME -> ALPHABETIC_TIMESTAMP -> DATETIME\ndt = datetime.datetime.now()\n\nalphabetic_ts_36 = ats.base36.from_datetime(dt)\ndecoded_ts_36 = ats.base36.to_datetime(alphabetic_ts_36)\n\nalphabetic_ts_62 = ats.base62.from_datetime(dt)\ndecoded_ts_62 = ats.base62.to_datetime(alphabetic_ts_62) \n\n\n# TIMESTAMP -> ALPHABETIC_TIMESTAMP -> TIMESTAMP \nts = dt.timestamp()\n\nalphabetic_ts_36 = ats.base36.from_timestamp(ts)\ndecoded_ts_36 = ats.base36.to_timestamp(alphabetic_ts_36)\n\nalphabetic_ts_62 = ats.base62.from_timestamp(ts)\ndecoded_ts_62 = ats.base62.to_timestamp(alphabetic_ts_62)\n``` \n\n### Time units\n```python\nimport datetime\nimport alphabetic_timestamp as ats\n\ndt = datetime.datetime.now()\n\n\n# Set time unit for current timestamp\n\nnow36_ts = ats.base36.now() # default: ats.TimeUnit.seconds\nnow36_ts = ats.base36.now(time_unit=ats.TimeUnit.seconds)\n\n\n# Set time unit for specific datetime and timestamp\n\nalphabetic_ts_36 = ats.base36.from_datetime(dt, time_unit=ats.TimeUnit.seconds)\nalphabetic_ts_36 = ats.base36.from_timestamp(dt.timestamp(), time_unit=ats.TimeUnit.seconds)\n\n\n# Examples of available time units\n\nnow36_ts = ats.base36.now(time_unit=ats.TimeUnit.seconds)\nnow36_ts = ats.base36.now(time_unit=ats.TimeUnit.deciseconds)\nnow36_ts = ats.base36.now(time_unit=ats.TimeUnit.centiseconds)\nnow36_ts = ats.base36.now(time_unit=ats.TimeUnit.milliseconds)\n``` \n\n## Possible Issue\nThere is a possible issue caused by [bug in standard datetime module](https://bugs.python.org/issue37527).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ShadowCodeCz/alphabetic_timestamp", "keywords": "timestamp alphabetic", "license": "GNU Affero General Public License v3 or later (AGPLv3+)", "maintainer": "", "maintainer_email": "", "name": "alphabetic-timestamp", "package_url": "https://pypi.org/project/alphabetic-timestamp/", "platform": "", "project_url": "https://pypi.org/project/alphabetic-timestamp/", "project_urls": {"Homepage": "https://github.com/ShadowCodeCz/alphabetic_timestamp", "Source": "https://github.com/ShadowCodeCz/alphabetic_timestamp", "Tracker": "https://github.com/ShadowCodeCz/alphabetic_timestamp/issues"}, "release_url": "https://pypi.org/project/alphabetic-timestamp/1.1.5/", "requires_dist": null, "requires_python": "", "summary": "This is small Python package which encode standard timestamp to shorted form by using alphabetic symbols.", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Alphabetic Timestamp</h1>\n<p><a href=\"https://pypi.org/project/alphabetic-timestamp/\" rel=\"nofollow\"><img alt=\"PyPI-Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba361a334b6b058635362e44f1a3d907b2a5b0af/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616c70686162657469632d74696d657374616d702e737667\"></a>\n<a href=\"https://pypi.org/project/alphabetic-timestamp/\" rel=\"nofollow\"><img alt=\"PyPI-Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28aed14f553050a06b8fbc37aa081450580e5d24/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616c70686162657469632d74696d657374616d702e737667\"></a>\n<a href=\"https://github.com/ShadowCodeCz/alphabetic_timestamp/issues\" rel=\"nofollow\"><img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aed91dd645399d25772f9c74f12d7877ca45d3e1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f536861646f77436f6465437a2f616c70686162657469635f74696d657374616d70\"></a>\n<a href=\"https://travis-ci.com/ShadowCodeCz/alphabetic_timestamp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15f8f5f9b723da28cf874e4c5cadc78572f53ce8/68747470733a2f2f7472617669732d63692e636f6d2f536861646f77436f6465437a2f616c70686162657469635f74696d657374616d702e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d9bdd0fb60d9cc1d6911a17386e360f21c3f143/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f616c70686162657469632d74696d657374616d70\">\n<a href=\"https://github.com/ShadowCodeCz/alphabetic_timestamp/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b068912456b2baba74194cd0540e9380c1d987a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f536861646f77436f6465437a2f616c70686162657469635f74696d657374616d70\"></a></p>\n<p>This is small Python package which encode standard timestamp to shorted form by using alphabetic symbols.</p>\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">alphabetic</span><span class=\"o\">-</span><span class=\"n\">timestamp</span> \n</pre>\n<h2>Description</h2>\n<p>User can use two base for coding. It other words two different lists of symbols for encoding.</p>\n<ul>\n<li>\n<p>Base36</p>\n</li>\n<li>\n<p>Base62</p>\n</li>\n</ul>\n<h3>Example of coding</h3>\n<p>This example show coding of datetime 2020-01-01 20:20:20.002000. It means timestamp 1577906420.002.</p>\n<table>\n<thead>\n<tr>\n<th>Time Units</th>\n<th align=\"center\">Base36</th>\n<th align=\"center\">Base62</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>seconds</td>\n<td align=\"center\">q3g0dw</td>\n<td align=\"center\">1IMJxy</td>\n</tr>\n<tr>\n<td>deciseconds</td>\n<td align=\"center\">78yg3uw</td>\n<td align=\"center\">hdRlpu</td>\n</tr>\n<tr>\n<td>centiseconds</td>\n<td align=\"center\">20hkh2kw</td>\n<td align=\"center\">2MeBs6Q</td>\n</tr>\n<tr>\n<td>milliseconds</td>\n<td align=\"center\">k4voqpsy</td>\n<td align=\"center\">rMm2x6q</td>\n</tr></tbody></table>\n<h3>Symbols of Base 36</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">0123456789</span><span class=\"n\">abcdefghijklmnopqrstuvwxyz</span>\n</pre>\n<h3>Symbols of Base 62</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base62</span><span class=\"o\">.</span><span class=\"n\">symbols</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">0123456789</span><span class=\"n\">abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span>\n</pre>\n<h2>Interface</h2>\n<p>The example shows interface of base36. The interface is same for base62.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span>\n\n<span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n<span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_datetime</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n<span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n\n<span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"s2\">\"q67vhw\"</span><span class=\"p\">,</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">to_timestamp</span><span class=\"p\">(</span><span class=\"s2\">\"q67vhw\"</span><span class=\"p\">,</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n</pre>\n<p>Note: The string \"q67vhw\" is only example of encoded timestamp.</p>\n<h2>Examples</h2>\n<p>This package is compatible with Python2.7 and Python3.4+. However these examples are written in Python3.6.</p>\n<h3>Encode &amp; Print</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Current DT: 2020-02-24 18:34:44.349162</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q67vhw</span>\n</pre>\n<h3>Encoded &amp; Decode</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n\n<span class=\"c1\"># DATETIME -&gt; ALPHABETIC_TIMESTAMP -&gt; DATETIME</span>\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n\n<span class=\"n\">alphabetic_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_datetime</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">)</span>\n<span class=\"n\">decoded_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">alphabetic_ts_36</span><span class=\"p\">)</span>\n\n<span class=\"n\">alphabetic_ts_62</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base62</span><span class=\"o\">.</span><span class=\"n\">from_datetime</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">)</span>\n<span class=\"n\">decoded_ts_62</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base62</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">alphabetic_ts_62</span><span class=\"p\">)</span> \n\n\n<span class=\"c1\"># TIMESTAMP -&gt; ALPHABETIC_TIMESTAMP -&gt; TIMESTAMP </span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span>\n\n<span class=\"n\">alphabetic_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span>\n<span class=\"n\">decoded_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">to_timestamp</span><span class=\"p\">(</span><span class=\"n\">alphabetic_ts_36</span><span class=\"p\">)</span>\n\n<span class=\"n\">alphabetic_ts_62</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base62</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span>\n<span class=\"n\">decoded_ts_62</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base62</span><span class=\"o\">.</span><span class=\"n\">to_timestamp</span><span class=\"p\">(</span><span class=\"n\">alphabetic_ts_62</span><span class=\"p\">)</span>\n</pre>\n<h3>Time units</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">alphabetic_timestamp</span> <span class=\"k\">as</span> <span class=\"nn\">ats</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Set time unit for current timestamp</span>\n\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"c1\"># default: ats.TimeUnit.seconds</span>\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Set time unit for specific datetime and timestamp</span>\n\n<span class=\"n\">alphabetic_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_datetime</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n<span class=\"n\">alphabetic_ts_36</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">from_timestamp</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">(),</span> <span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Examples of available time units</span>\n\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">)</span>\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">deciseconds</span><span class=\"p\">)</span>\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">centiseconds</span><span class=\"p\">)</span>\n<span class=\"n\">now36_ts</span> <span class=\"o\">=</span> <span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">base36</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">time_unit</span><span class=\"o\">=</span><span class=\"n\">ats</span><span class=\"o\">.</span><span class=\"n\">TimeUnit</span><span class=\"o\">.</span><span class=\"n\">milliseconds</span><span class=\"p\">)</span>\n</pre>\n<h2>Possible Issue</h2>\n<p>There is a possible issue caused by <a href=\"https://bugs.python.org/issue37527\" rel=\"nofollow\">bug in standard datetime module</a>.</p>\n\n          </div>"}, "last_serial": 7009334, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "aefabc06b2a6f4fd93aef81a3561bab3", "sha256": "e55efa70558951012e681433c57336ad499048411de5dfb656013435b56923c1"}, "downloads": -1, "filename": "alphabetic_timestamp-1.0.tar.gz", "has_sig": false, "md5_digest": "aefabc06b2a6f4fd93aef81a3561bab3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3776, "upload_time": "2020-03-29T08:59:29", "upload_time_iso_8601": "2020-03-29T08:59:29.524129Z", "url": "https://files.pythonhosted.org/packages/1f/70/cf6e41c039befee800a7d7da90b4de03d8f7e2b167b8609cac0d9f7c0fa6/alphabetic_timestamp-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7d286cb82cab941ff75de6a96bc53ec8", "sha256": "4bce4f0a5ee1ff0c96fdf8ab24e8e5b19010e1dd7058d47fe439310d00a410da"}, "downloads": -1, "filename": "alphabetic_timestamp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7d286cb82cab941ff75de6a96bc53ec8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3408, "upload_time": "2020-04-04T11:39:09", "upload_time_iso_8601": "2020-04-04T11:39:09.798736Z", "url": "https://files.pythonhosted.org/packages/b0/d9/523c4db322938db38493afb7569e2ce9699ef8fd9904d04bcd49af960a2a/alphabetic_timestamp-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "23a1240eca30c7ac249b3e782b6f0062", "sha256": "0fb937f31c073fe838678f1cbdff0101ee8a3d9a690e5af27cae952821920c6c"}, "downloads": -1, "filename": "alphabetic_timestamp-1.1.0.tar.gz", "has_sig": false, "md5_digest": "23a1240eca30c7ac249b3e782b6f0062", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3380, "upload_time": "2020-04-04T18:16:47", "upload_time_iso_8601": "2020-04-04T18:16:47.422005Z", "url": "https://files.pythonhosted.org/packages/e9/76/b87ffb89bb66f0e0f394027de2e3d64b78f2a0cae1a5dd021b76105f6e02/alphabetic_timestamp-1.1.0.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "6f38ff5cbdb4f0747f582e7fde439550", "sha256": "1b61aae6e1157948d61157b4277fa7f9ba2437981f9c2e99d76589c101169356"}, "downloads": -1, "filename": "alphabetic_timestamp-1.1.5.tar.gz", "has_sig": false, "md5_digest": "6f38ff5cbdb4f0747f582e7fde439550", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3572, "upload_time": "2020-04-13T11:24:37", "upload_time_iso_8601": "2020-04-13T11:24:37.473315Z", "url": "https://files.pythonhosted.org/packages/c3/f0/310cae5b425e237ce3c8420ee2cc68261fd24b5cd6a2f0238ba681c61f67/alphabetic_timestamp-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f38ff5cbdb4f0747f582e7fde439550", "sha256": "1b61aae6e1157948d61157b4277fa7f9ba2437981f9c2e99d76589c101169356"}, "downloads": -1, "filename": "alphabetic_timestamp-1.1.5.tar.gz", "has_sig": false, "md5_digest": "6f38ff5cbdb4f0747f582e7fde439550", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3572, "upload_time": "2020-04-13T11:24:37", "upload_time_iso_8601": "2020-04-13T11:24:37.473315Z", "url": "https://files.pythonhosted.org/packages/c3/f0/310cae5b425e237ce3c8420ee2cc68261fd24b5cd6a2f0238ba681c61f67/alphabetic_timestamp-1.1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:18 2020"}