{"info": {"author": "Craig Kerstiens", "author_email": "craig.kerstiens@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=====================\nDjango Database Tools\n=====================\n\nDjango Db Tools is a set of Database tools that are helpful when running \napplications with Django in production. The primary initial tool allows for\nflipping a site in and out of a read-only mode. \n\nCurrently the following functionality is being worked on:\n\n- A header displaying the read only mode\n- Ability to render a template explaining posts are not allowed\n\nInstallation\n============\n\n#. Add the ``db_tools`` directory to your Python path.\n\n#. Add the following middleware to your project's ``settings.py`` file::\n\n       MIDDLEWARE_CLASSES = (\n           # ...\n           'dbtools.middleware.ReadOnlyMiddleware',\n           # ...\n       )\n\nConfiguration\n=============\n\nThe db tools has two modes which you can control:\n\n#. READ_ONLY_MODE\n\nThis mode ensures all users even if already logged in act as anonymous users \non your site. To enable this you need to set the following environment variable:\n\n    READ_ONLY_MODE = True\n\n#. GET_ONLY_MODE\n\nThis mode disallows all POST requests to your site. If your site only allows \ninserting data as POSTS then this should be sufficient to allow your users to\nview their data, but also ensure no new data is written. To enable this set the \nfollowing environment variable:\n\n    GET_ONLY_MODE = True", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/craigkerstiens/django-db-tools", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-db-tools", "package_url": "https://pypi.org/project/django-db-tools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-db-tools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/craigkerstiens/django-db-tools"}, "release_url": "https://pypi.org/project/django-db-tools/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A read only mode tool for your database", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django Db Tools is a set of Database tools that are helpful when running\napplications with Django in production. The primary initial tool allows for\nflipping a site in and out of a read-only mode.</p>\n<p>Currently the following functionality is being worked on:</p>\n<ul>\n<li>A header displaying the read only mode</li>\n<li>Ability to render a template explaining posts are not allowed</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Add the <tt>db_tools</tt> directory to your Python path.</p>\n</li>\n<li><p>Add the following middleware to your project\u2019s <tt>settings.py</tt> file:</p>\n<pre>MIDDLEWARE_CLASSES = (\n    # ...\n    'dbtools.middleware.ReadOnlyMiddleware',\n    # ...\n)\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The db tools has two modes which you can control:</p>\n<ol>\n<li>READ_ONLY_MODE</li>\n</ol>\n<p>This mode ensures all users even if already logged in act as anonymous users\non your site. To enable this you need to set the following environment variable:</p>\n<blockquote>\nREAD_ONLY_MODE = True</blockquote>\n<ol>\n<li>GET_ONLY_MODE</li>\n</ol>\n<p>This mode disallows all POST requests to your site. If your site only allows\ninserting data as POSTS then this should be sufficient to allow your users to\nview their data, but also ensure no new data is written. To enable this set the\nfollowing environment variable:</p>\n<blockquote>\nGET_ONLY_MODE = True</blockquote>\n</div>\n\n          </div>"}, "last_serial": 789434, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "648eb0d8b150f7bbf38e0c85ca05cb68", "sha256": "f903bb174df9c9a22c7e3c186659470f3a4150667388992d6e68f8afbcf3e6ea"}, "downloads": -1, "filename": "django-db-tools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "648eb0d8b150f7bbf38e0c85ca05cb68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3460, "upload_time": "2013-03-04T15:47:12", "upload_time_iso_8601": "2013-03-04T15:47:12.194026Z", "url": "https://files.pythonhosted.org/packages/1e/8c/c9dfcd27edf80ee708091c4c9bb2f67f88ac79f31293d0fdd9852e4785a6/django-db-tools-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "648eb0d8b150f7bbf38e0c85ca05cb68", "sha256": "f903bb174df9c9a22c7e3c186659470f3a4150667388992d6e68f8afbcf3e6ea"}, "downloads": -1, "filename": "django-db-tools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "648eb0d8b150f7bbf38e0c85ca05cb68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3460, "upload_time": "2013-03-04T15:47:12", "upload_time_iso_8601": "2013-03-04T15:47:12.194026Z", "url": "https://files.pythonhosted.org/packages/1e/8c/c9dfcd27edf80ee708091c4c9bb2f67f88ac79f31293d0fdd9852e4785a6/django-db-tools-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:38 2020"}