{"info": {"author": "TRAN QUANG HUY", "author_email": "huy.tran@f4.intek.edu.vn", "bugtrack_url": null, "classifiers": [], "description": "## Intro:\n&nbsp; The project is generally used for detecting sprites inside an sprite sheets, providing bounding box of each sprite. It can also detect most used color. It can also draw and colorize a mask from the initial image.\n\n## Usage:\n#### &ensp; Create a SpriteSheet object using:\n##### &ensp;&nbsp; SpriteSheet(fd, background_color=None):\n\n             @fd: the name and path (a string) that references an image file in the local file system;\n             OR a pathlib.Path object that references an image file in the local file system ; a file object that MUST implement read(), seek(), and tell() methods, and be opened in binary mode;\n             OR a Image object.\n\n             @background_color: an integer if the mode is grayscale;\n             OR a tuple (red, green, blue) of integers if the mode is RGB;\n             OR a tuple (red, green, blue, alpha) of integers if the mode is RGBA. The alpha element is optional. If not defined, while the image mode is RGBA, the constructor considers the alpha element to be 255.\n\n#### &ensp; Class SpriteSheet provides following methods:\n\n##### &ensp;&nbsp; SpriteSheet.find_most_common_color(image):\n\n\tFind most used color in an Image object\n\targ: image: MUST be an Image object\n\tReturn most used color in the image with the same format image's mode\n\n##### &ensp;&nbsp; SpriteSheet_object.create_sprite_labels_image():\n\n\tDraws the masks of the sprites at the exact same position that the sprites were in the original image.\n        Returns an image of equal dimension (width and height) as the original image that was passed to the function\n\n##### &ensp;&nbsp; SpriteSheet_object.find_sprites():\n\n    \tDetect sprites inside the image\n    \tReturn a 2D label map and a dict that stores:\n            key: sprite's label\n            value: its Sprite's object\n\n\n## Installation:\nThe project require Python 3.8+ to run\n\n#### &ensp; FOR USER:\n##### &emsp; In Terminal, use command:\n\n\t\t pip3 install spritessheet\n\n#### &ensp; FOR DEVELOPMENT:\n##### &emsp; Step 1: Clone or Downloads the project, using this command:\n\n\t\t git clone http://\n##### &emsp; Step 2: Install required libs and tools, using this command in Terminal:\n\n\t\t pip3 install -r requirements.txt\n##### &emsp; Step 3: Edit the source code as you wish.\n\n## Contact:\n&emsp;&emsp;&emsp; During the usage of the project, if you have any question, please contact me personally at INTEK HCM City or via my Github page: https://github.com/tquang97\n\n## Contributors:\n&emsp;&emsp;&emsp; tquang97 from INTEK Institute, HCM City\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "TRAN QUANG HUY", "maintainer_email": "", "name": "spritessheet-tquang97", "package_url": "https://pypi.org/project/spritessheet-tquang97/", "platform": "", "project_url": "https://pypi.org/project/spritessheet-tquang97/", "project_urls": null, "release_url": "https://pypi.org/project/spritessheet-tquang97/1.0.0/", "requires_dist": ["numpy (==1.18.1)", "Pillow (==7.0.0)"], "requires_python": "", "summary": "", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Intro:</h2>\n<p>\u00a0 The project is generally used for detecting sprites inside an sprite sheets, providing bounding box of each sprite. It can also detect most used color. It can also draw and colorize a mask from the initial image.</p>\n<h2>Usage:</h2>\n<h4>\u2002 Create a SpriteSheet object using:</h4>\n<h5>\u2002\u00a0 SpriteSheet(fd, background_color=None):</h5>\n<pre><code>         @fd: the name and path (a string) that references an image file in the local file system;\n         OR a pathlib.Path object that references an image file in the local file system ; a file object that MUST implement read(), seek(), and tell() methods, and be opened in binary mode;\n         OR a Image object.\n\n         @background_color: an integer if the mode is grayscale;\n         OR a tuple (red, green, blue) of integers if the mode is RGB;\n         OR a tuple (red, green, blue, alpha) of integers if the mode is RGBA. The alpha element is optional. If not defined, while the image mode is RGBA, the constructor considers the alpha element to be 255.\n</code></pre>\n<h4>\u2002 Class SpriteSheet provides following methods:</h4>\n<h5>\u2002\u00a0 SpriteSheet.find_most_common_color(image):</h5>\n<pre><code>Find most used color in an Image object\narg: image: MUST be an Image object\nReturn most used color in the image with the same format image's mode\n</code></pre>\n<h5>\u2002\u00a0 SpriteSheet_object.create_sprite_labels_image():</h5>\n<pre><code>Draws the masks of the sprites at the exact same position that the sprites were in the original image.\n    Returns an image of equal dimension (width and height) as the original image that was passed to the function\n</code></pre>\n<h5>\u2002\u00a0 SpriteSheet_object.find_sprites():</h5>\n<pre><code>\tDetect sprites inside the image\n\tReturn a 2D label map and a dict that stores:\n        key: sprite's label\n        value: its Sprite's object\n</code></pre>\n<h2>Installation:</h2>\n<p>The project require Python 3.8+ to run</p>\n<h4>\u2002 FOR USER:</h4>\n<h5>\u2003 In Terminal, use command:</h5>\n<pre><code>\t pip3 install spritessheet\n</code></pre>\n<h4>\u2002 FOR DEVELOPMENT:</h4>\n<h5>\u2003 Step 1: Clone or Downloads the project, using this command:</h5>\n<pre><code>\t git clone http://\n</code></pre>\n<h5>\u2003 Step 2: Install required libs and tools, using this command in Terminal:</h5>\n<pre><code>\t pip3 install -r requirements.txt\n</code></pre>\n<h5>\u2003 Step 3: Edit the source code as you wish.</h5>\n<h2>Contact:</h2>\n<p>\u2003\u2003\u2003 During the usage of the project, if you have any question, please contact me personally at INTEK HCM City or via my Github page: <a href=\"https://github.com/tquang97\" rel=\"nofollow\">https://github.com/tquang97</a></p>\n<h2>Contributors:</h2>\n<p>\u2003\u2003\u2003 tquang97 from INTEK Institute, HCM City</p>\n\n          </div>"}, "last_serial": 6666325, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "546149316e01fd9652ff3d154b1370ce", "sha256": "cccf046e4c4fea2a0408a8be8261247a6524228631f713abf5b44e67c70fb80d"}, "downloads": -1, "filename": "spritessheet_tquang97-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "546149316e01fd9652ff3d154b1370ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8602, "upload_time": "2020-02-20T07:10:50", "upload_time_iso_8601": "2020-02-20T07:10:50.550640Z", "url": "https://files.pythonhosted.org/packages/e2/54/4f6d6dfc1292d55ee8bf55c83aa53e03524520bcebdea576ed0f844a5cb5/spritessheet_tquang97-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "148a9869a3407e07cf8e2014599f1f73", "sha256": "17c8c6599c84a0cce478f1606815e9c3d4e76f34b3c608362f82f567e1df4ddc"}, "downloads": -1, "filename": "spritessheet_tquang97-1.0.0.tar.gz", "has_sig": false, "md5_digest": "148a9869a3407e07cf8e2014599f1f73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6751, "upload_time": "2020-02-20T07:10:52", "upload_time_iso_8601": "2020-02-20T07:10:52.839926Z", "url": "https://files.pythonhosted.org/packages/bf/db/a081f49a11145a23bbc0a506bdc0a890930378a7b77fa5c58bebd46ad252/spritessheet_tquang97-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "546149316e01fd9652ff3d154b1370ce", "sha256": "cccf046e4c4fea2a0408a8be8261247a6524228631f713abf5b44e67c70fb80d"}, "downloads": -1, "filename": "spritessheet_tquang97-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "546149316e01fd9652ff3d154b1370ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8602, "upload_time": "2020-02-20T07:10:50", "upload_time_iso_8601": "2020-02-20T07:10:50.550640Z", "url": "https://files.pythonhosted.org/packages/e2/54/4f6d6dfc1292d55ee8bf55c83aa53e03524520bcebdea576ed0f844a5cb5/spritessheet_tquang97-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "148a9869a3407e07cf8e2014599f1f73", "sha256": "17c8c6599c84a0cce478f1606815e9c3d4e76f34b3c608362f82f567e1df4ddc"}, "downloads": -1, "filename": "spritessheet_tquang97-1.0.0.tar.gz", "has_sig": false, "md5_digest": "148a9869a3407e07cf8e2014599f1f73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6751, "upload_time": "2020-02-20T07:10:52", "upload_time_iso_8601": "2020-02-20T07:10:52.839926Z", "url": "https://files.pythonhosted.org/packages/bf/db/a081f49a11145a23bbc0a506bdc0a890930378a7b77fa5c58bebd46ad252/spritessheet_tquang97-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:21 2020"}