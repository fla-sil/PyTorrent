{"info": {"author": "Michael Mulqueen", "author_email": "michael@mulqueen.me.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Office/Business :: Financial :: Spreadsheet"], "description": "odswriter\n=========\n\nA pure-Python module for writing OpenDocument spreadsheets (similar to csv.writer).\n\n[![Build Status](https://travis-ci.org/mmulqueen/odswriter.png?branch=master)](https://travis-ci.org/mmulqueen/odswriter)\n\nFeatures\n-------------\n - Pure python\n - Automatically converts Python types into OpenDocument equivalents\n - Includes support for datetime, date and time types\n - Includes support for Decimal type\n - Compatible with Python 2.7 and 3.3 (and probably others)\n - Support for writing formulae (but not evaluating their results)\n\nLicense\n-----------\nThe MIT License (MIT), refer to LICENSE.txt\n\nExample\n---------\n```python\nimport datetime\nimport decimal\nimport odswriter as ods\n\n\n# Single sheet mode\nwith ods.writer(open(\"test.ods\",\"wb\")) as odsfile:\n    odsfile.writerow([\"String\", \"ABCDEF123456\", \"123456\"])\n    # Lose the 2L below if you want to run this example code on Python 3, Python 3 has no long type.\n    odsfile.writerow([\"Float\", 1, 123, 123.123, decimal.Decimal(\"10.321\")])\n    odsfile.writerow([\"Date/DateTime\", datetime.datetime.now(), datetime.date(1989, 11, 9)])\n    odsfile.writerow([\"Time\",datetime.time(13, 37),datetime.time(16, 17, 18)])\n    odsfile.writerow([\"Bool\", True, False, True])\n    odsfile.writerow([\"Formula\", 1, 2, 3, ods.Formula(\"IF(A1=2,B1,C1)\")])\n\n# Multiple sheet mode\nwith ods.writer(open(\"test-multi.ods\",\"wb\")) as odsfile:\n    bears = odsfile.new_sheet(\"Bears\")\n    bears.writerow([\"American Black Bear\", \"Asiatic Black Bear\", \"Brown Bear\", \"Giant Panda\", \"Qinling Panda\", \n                     \"Sloth Bear\", \"Sun Bear\", \"Polar Bear\", \"Spectacled Bear\"])\n    sloths = odsfile.new_sheet(\"Sloths\")\n    sloths.writerow([\"Pygmy Three-Toed Sloth\", \"Maned Sloth\", \"Pale-Throated Sloth\", \"Brown-Throated Sloth\",\n                     \"Linneaeus's Two-Twoed Sloth\", \"Hoffman's Two-Toed Sloth\"])\n\nCompatibility\n-------------\nOdswriter is tested (see Travis CI) for compatibility with LibreOffice and Gnumeric. Compatibility with OpenOffice\nshould be good.\n\njOpenDocument is not compatible out-of-the-box, but by specifying the number of columns (odswriter will pad with empty\ncells up to that number) it can be made compatible. Code example:\n\n```python\nimport odswriter as ods\n\nwith ods.writer(open(\"test-multi.ods\",\"wb\")) as odsfile:\n    my_sheet = odsfile.new_sheet(\"My Sheet\", cols=3)\n    my_sheet.writerows([[\"One\"],\n                        [\"Two\", \"Four\", \"Sixteen\"],\n                        [\"Three\", \"Nine\", \"Twenty seven\"]])\n\n```\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mmulqueen/odswriter", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "odswriter", "package_url": "https://pypi.org/project/odswriter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/odswriter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mmulqueen/odswriter"}, "release_url": "https://pypi.org/project/odswriter/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "A pure-Python module for writing OpenDocument spreadsheets (similar to csv.writer).", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            odswriter<br>=========<br><br>A pure-Python module for writing OpenDocument spreadsheets (similar to csv.writer).<br><br>[![Build Status](https://travis-ci.org/mmulqueen/odswriter.png?branch=master)](https://travis-ci.org/mmulqueen/odswriter)<br><br>Features<br>-------------<br> - Pure python<br> - Automatically converts Python types into OpenDocument equivalents<br> - Includes support for datetime, date and time types<br> - Includes support for Decimal type<br> - Compatible with Python 2.7 and 3.3 (and probably others)<br> - Support for writing formulae (but not evaluating their results)<br><br>License<br>-----------<br>The MIT License (MIT), refer to LICENSE.txt<br><br>Example<br>---------<br>```python<br>import datetime<br>import decimal<br>import odswriter as ods<br><br><br># Single sheet mode<br>with ods.writer(open(\"test.ods\",\"wb\")) as odsfile:<br>    odsfile.writerow([\"String\", \"ABCDEF123456\", \"123456\"])<br>    # Lose the 2L below if you want to run this example code on Python 3, Python 3 has no long type.<br>    odsfile.writerow([\"Float\", 1, 123, 123.123, decimal.Decimal(\"10.321\")])<br>    odsfile.writerow([\"Date/DateTime\", datetime.datetime.now(), datetime.date(1989, 11, 9)])<br>    odsfile.writerow([\"Time\",datetime.time(13, 37),datetime.time(16, 17, 18)])<br>    odsfile.writerow([\"Bool\", True, False, True])<br>    odsfile.writerow([\"Formula\", 1, 2, 3, ods.Formula(\"IF(A1=2,B1,C1)\")])<br><br># Multiple sheet mode<br>with ods.writer(open(\"test-multi.ods\",\"wb\")) as odsfile:<br>    bears = odsfile.new_sheet(\"Bears\")<br>    bears.writerow([\"American Black Bear\", \"Asiatic Black Bear\", \"Brown Bear\", \"Giant Panda\", \"Qinling Panda\", <br>                     \"Sloth Bear\", \"Sun Bear\", \"Polar Bear\", \"Spectacled Bear\"])<br>    sloths = odsfile.new_sheet(\"Sloths\")<br>    sloths.writerow([\"Pygmy Three-Toed Sloth\", \"Maned Sloth\", \"Pale-Throated Sloth\", \"Brown-Throated Sloth\",<br>                     \"Linneaeus's Two-Twoed Sloth\", \"Hoffman's Two-Toed Sloth\"])<br><br>Compatibility<br>-------------<br>Odswriter is tested (see Travis CI) for compatibility with LibreOffice and Gnumeric. Compatibility with OpenOffice<br>should be good.<br><br>jOpenDocument is not compatible out-of-the-box, but by specifying the number of columns (odswriter will pad with empty<br>cells up to that number) it can be made compatible. Code example:<br><br>```python<br>import odswriter as ods<br><br>with ods.writer(open(\"test-multi.ods\",\"wb\")) as odsfile:<br>    my_sheet = odsfile.new_sheet(\"My Sheet\", cols=3)<br>    my_sheet.writerows([[\"One\"],<br>                        [\"Two\", \"Four\", \"Sixteen\"],<br>                        [\"Three\", \"Nine\", \"Twenty seven\"]])<br><br>```<br>\n          </div>"}, "last_serial": 1689522, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "59d871e3b29db4ea0f02cb98c66f975e", "sha256": "1deb0c090b977ae244a5136d7754f902a989e629831d7e53d8f47cb28388180a"}, "downloads": -1, "filename": "odswriter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "59d871e3b29db4ea0f02cb98c66f975e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4621, "upload_time": "2014-04-02T22:03:54", "upload_time_iso_8601": "2014-04-02T22:03:54.644104Z", "url": "https://files.pythonhosted.org/packages/9d/89/1acc3fd4bf2672d50bd8d401cfc3daedaa7ebf41ac17bbf580f98d10ce6c/odswriter-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "450acbbcd2de636f525d2e95f916b904", "sha256": "2aa5cf827932aaf7b3c4d3afc6272e5e13d5ceb57a2a004f28004a095cecb420"}, "downloads": -1, "filename": "odswriter-0.2.0.tar.gz", "has_sig": false, "md5_digest": "450acbbcd2de636f525d2e95f916b904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4991, "upload_time": "2014-12-07T21:03:04", "upload_time_iso_8601": "2014-12-07T21:03:04.904639Z", "url": "https://files.pythonhosted.org/packages/bd/a7/62f8305da06418f0e166dea612bdfc0f5f1c2c69b8a76687c38d459e23b6/odswriter-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d008fc52f5f7f7f47492026806775151", "sha256": "06efb5267eaa597ec9a27a28ac28e6bd34f656c4dc9fa0834abbf7f2bc47479d"}, "downloads": -1, "filename": "odswriter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d008fc52f5f7f7f47492026806775151", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5476, "upload_time": "2015-07-28T18:35:45", "upload_time_iso_8601": "2015-07-28T18:35:45.433974Z", "url": "https://files.pythonhosted.org/packages/ef/8d/b757fc4d8ff53e44c45c4984992d54bec2b6d18667815ff571bb41587d88/odswriter-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "fa8f5eb19468af7176ca4663fe261ca8", "sha256": "f4c6195dc95cc4a7c2bd98a8e174ddfb9eb98b0329ffe9a740ee825a319d62a0"}, "downloads": -1, "filename": "odswriter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fa8f5eb19468af7176ca4663fe261ca8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5901, "upload_time": "2015-08-23T12:26:02", "upload_time_iso_8601": "2015-08-23T12:26:02.896195Z", "url": "https://files.pythonhosted.org/packages/32/8a/ee8f99d639c5ae4861b55f955f7941730f559ddb753977e48bd920752e5e/odswriter-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa8f5eb19468af7176ca4663fe261ca8", "sha256": "f4c6195dc95cc4a7c2bd98a8e174ddfb9eb98b0329ffe9a740ee825a319d62a0"}, "downloads": -1, "filename": "odswriter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fa8f5eb19468af7176ca4663fe261ca8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5901, "upload_time": "2015-08-23T12:26:02", "upload_time_iso_8601": "2015-08-23T12:26:02.896195Z", "url": "https://files.pythonhosted.org/packages/32/8a/ee8f99d639c5ae4861b55f955f7941730f559ddb753977e48bd920752e5e/odswriter-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:03 2020"}