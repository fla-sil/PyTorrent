{"info": {"author": "SamHDev", "author_email": "samhdev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Hermitcraft Video API\nThis is a python wrapper for the Hermitcraft.com api, that supports retrieving data for hermits and their videos.\n\nThe Site was created by hypnotised, and the api is used within the site to get the latest videos and see when hermits are live. This uses those api endpoints allowing us to get the data that the site uses.\n\n# Getting started\n\nGo ahead and import the library.\n```py\nimport hermitcraftvideos\n```\n\nNext, we get a hermit from the api. Let's use Xisumavoid for this example.\n```py\nhermit = hermitcraftvideos.getHermit(\"xisumavoid\")\n```\nMake sure that you use the right name. It needs to be the EXACT channel name in the youtube URL in lower case. ``Example: Mumbo --> https://www.youtube.com/user/ThatMumboJumbo --> thatmumbojumbo``\n\nHow we have our hermit from the api, we can find out data.\n\nSuch as a profile picture\n```py\nprint(hermit.picture) #https://yt3.ggpht.com/-x5tq4dTokyM/AAAAAAAAAAI/AAAAAAAAAAA/x4s30KOqUVA/s88-c-k-no/photo.jpg\n```\n\nOr we can find out a twitter:\n```py\nprint(\"@{} - {}\".format(hermit.twitter.name,hermit.twitter.url)) #@xisumavoid - https://twitter.com/xisumavoid\n```\n\nOr better, if they are live on youtube, twitch or mixer(beam)\n```py\nprint(hermit.youtube.live) #False\nprint(hermit.twitch.live) #True\nprint(hermit.mixer.live) #False\n```\n\nWe can also get videos!\n```py\nvideos = hermit.getVideos()\n```\n\nYou can get simple data from the video\n```py\nvideo = videos[0]\nprint(video.title) #Hermitcraft VI 712 Already Its The End!\n```\n\nAnd Some handy data\n```py\nprint(\"video is {} mins long\".format(video.duration_time)) #video is 22:49 mins long\nprint(\"uploaded {}\".format(video.uploaded_time)) #uploaded 7 hours ago \n```\n\nOooooh. Statistics\n```py\nprint(video.views) #44430\nprint(video.likes) # 2785\n```\n\nOooooooooooooooooooooooooooooooooooooh. Updated Statistics\n```py\nvideo.update()\nprint(video.views) #44440\nprint(video.likes) # 2790\n```\n\nAnd That's Mostly it. You can also get a jumble of videos with\n```\nhermitcraftvideos.getLatestVideos()\n```\n\n# API Reference\n\nSoon!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamHDev/Hermitcraft-Video-Api", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hermitcraftvideos", "package_url": "https://pypi.org/project/hermitcraftvideos/", "platform": "", "project_url": "https://pypi.org/project/hermitcraftvideos/", "project_urls": {"Homepage": "https://github.com/SamHDev/Hermitcraft-Video-Api"}, "release_url": "https://pypi.org/project/hermitcraftvideos/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A Wrapper for Hermicraft Video API", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Hermitcraft Video API</h1>\n<p>This is a python wrapper for the Hermitcraft.com api, that supports retrieving data for hermits and their videos.</p>\n<p>The Site was created by hypnotised, and the api is used within the site to get the latest videos and see when hermits are live. This uses those api endpoints allowing us to get the data that the site uses.</p>\n<h1>Getting started</h1>\n<p>Go ahead and import the library.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hermitcraftvideos</span>\n</pre>\n<p>Next, we get a hermit from the api. Let's use Xisumavoid for this example.</p>\n<pre><span class=\"n\">hermit</span> <span class=\"o\">=</span> <span class=\"n\">hermitcraftvideos</span><span class=\"o\">.</span><span class=\"n\">getHermit</span><span class=\"p\">(</span><span class=\"s2\">\"xisumavoid\"</span><span class=\"p\">)</span>\n</pre>\n<p>Make sure that you use the right name. It needs to be the EXACT channel name in the youtube URL in lower case. <code>Example: Mumbo --&gt; https://www.youtube.com/user/ThatMumboJumbo --&gt; thatmumbojumbo</code></p>\n<p>How we have our hermit from the api, we can find out data.</p>\n<p>Such as a profile picture</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">picture</span><span class=\"p\">)</span> <span class=\"c1\">#https://yt3.ggpht.com/-x5tq4dTokyM/AAAAAAAAAAI/AAAAAAAAAAA/x4s30KOqUVA/s88-c-k-no/photo.jpg</span>\n</pre>\n<p>Or we can find out a twitter:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"@</span><span class=\"si\">{}</span><span class=\"s2\"> - </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">twitter</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">twitter</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">))</span> <span class=\"c1\">#@xisumavoid - https://twitter.com/xisumavoid</span>\n</pre>\n<p>Or better, if they are live on youtube, twitch or mixer(beam)</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">youtube</span><span class=\"o\">.</span><span class=\"n\">live</span><span class=\"p\">)</span> <span class=\"c1\">#False</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">twitch</span><span class=\"o\">.</span><span class=\"n\">live</span><span class=\"p\">)</span> <span class=\"c1\">#True</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">mixer</span><span class=\"o\">.</span><span class=\"n\">live</span><span class=\"p\">)</span> <span class=\"c1\">#False</span>\n</pre>\n<p>We can also get videos!</p>\n<pre><span class=\"n\">videos</span> <span class=\"o\">=</span> <span class=\"n\">hermit</span><span class=\"o\">.</span><span class=\"n\">getVideos</span><span class=\"p\">()</span>\n</pre>\n<p>You can get simple data from the video</p>\n<pre><span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">videos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span> <span class=\"c1\">#Hermitcraft VI 712 Already Its The End!</span>\n</pre>\n<p>And Some handy data</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"video is </span><span class=\"si\">{}</span><span class=\"s2\"> mins long\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">duration_time</span><span class=\"p\">))</span> <span class=\"c1\">#video is 22:49 mins long</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"uploaded </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">uploaded_time</span><span class=\"p\">))</span> <span class=\"c1\">#uploaded 7 hours ago </span>\n</pre>\n<p>Oooooh. Statistics</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">views</span><span class=\"p\">)</span> <span class=\"c1\">#44430</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">likes</span><span class=\"p\">)</span> <span class=\"c1\"># 2785</span>\n</pre>\n<p>Oooooooooooooooooooooooooooooooooooooh. Updated Statistics</p>\n<pre><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">views</span><span class=\"p\">)</span> <span class=\"c1\">#44440</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">likes</span><span class=\"p\">)</span> <span class=\"c1\"># 2790</span>\n</pre>\n<p>And That's Mostly it. You can also get a jumble of videos with</p>\n<pre><code>hermitcraftvideos.getLatestVideos()\n</code></pre>\n<h1>API Reference</h1>\n<p>Soon!</p>\n\n          </div>"}, "last_serial": 4102633, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "23f0fc6f94925b83a1ac18c1aa7b7201", "sha256": "49e96945ce52f15741b9d5c8e6728ab269a8820c9704b72fcbbdd06723c509e3"}, "downloads": -1, "filename": "hermitcraftvideos-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23f0fc6f94925b83a1ac18c1aa7b7201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4388, "upload_time": "2018-07-26T01:10:29", "upload_time_iso_8601": "2018-07-26T01:10:29.153735Z", "url": "https://files.pythonhosted.org/packages/67/39/03d7c9ea6dc100155ac5fad39b6c3c11466ade78385d5e5eeae798728c13/hermitcraftvideos-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62350d770d19af66b6fbbecc02fa2ee8", "sha256": "26f153e309de1090cde3858cf9caa283b31616a1e302f1b997079b0147195ee4"}, "downloads": -1, "filename": "hermitcraftvideos-0.1.1.tar.gz", "has_sig": false, "md5_digest": "62350d770d19af66b6fbbecc02fa2ee8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3327, "upload_time": "2018-07-26T01:10:30", "upload_time_iso_8601": "2018-07-26T01:10:30.470986Z", "url": "https://files.pythonhosted.org/packages/89/3e/99f45902d61bac972def272455b087cb15b2249b8e6bf1a495f7438ed726/hermitcraftvideos-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23f0fc6f94925b83a1ac18c1aa7b7201", "sha256": "49e96945ce52f15741b9d5c8e6728ab269a8820c9704b72fcbbdd06723c509e3"}, "downloads": -1, "filename": "hermitcraftvideos-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23f0fc6f94925b83a1ac18c1aa7b7201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4388, "upload_time": "2018-07-26T01:10:29", "upload_time_iso_8601": "2018-07-26T01:10:29.153735Z", "url": "https://files.pythonhosted.org/packages/67/39/03d7c9ea6dc100155ac5fad39b6c3c11466ade78385d5e5eeae798728c13/hermitcraftvideos-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62350d770d19af66b6fbbecc02fa2ee8", "sha256": "26f153e309de1090cde3858cf9caa283b31616a1e302f1b997079b0147195ee4"}, "downloads": -1, "filename": "hermitcraftvideos-0.1.1.tar.gz", "has_sig": false, "md5_digest": "62350d770d19af66b6fbbecc02fa2ee8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3327, "upload_time": "2018-07-26T01:10:30", "upload_time_iso_8601": "2018-07-26T01:10:30.470986Z", "url": "https://files.pythonhosted.org/packages/89/3e/99f45902d61bac972def272455b087cb15b2249b8e6bf1a495f7438ed726/hermitcraftvideos-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:32 2020"}