{"info": {"author": "Sefik Ilkin Serengil", "author_email": "serengil@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# deepface\n\n[![Downloads](https://pepy.tech/badge/deepface)](https://pepy.tech/project/deepface)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/deepface/master/icon/deepface-icon-labeled.png\" width=\"200\" height=\"240\"></p>\n\n**Deepface** is a lightweight facial analysis framework including [face recognition](https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/) and demography ([age](https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/), [gender](https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/), [emotion](https://sefiks.com/2018/01/01/facial-expression-recognition-with-keras/) and [race](https://sefiks.com/2019/11/11/race-and-ethnicity-prediction-in-keras/)) for Python. You can apply facial analysis with a few lines of code. It plans to bridge a gap between software engineering and machine learning studies.\n\n# Installation\n\nThe easiest way to install deepface is to download it from [PyPI](https://pypi.org/project/deepface/).\n\n```python\npip install deepface\n```\n\n# Face Recognition\n\nVerify function under the DeepFace interface is used for face recognition.\n\n```python\nfrom deepface import DeepFace\nresult = DeepFace.verify(\"img1.jpg\", \"img2.jpg\")\n\nprint(\"Is verified: \", result[\"verified\"])\n```\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/deepface/master/icon/stock-1.jpg\" width=\"95%\" height=\"95%\"></p>\n\nModern face recognition pipelines consist of 4 stages: detect, [align](https://sefiks.com/2020/02/23/face-alignment-for-face-recognition-in-python-within-opencv/), represent and verify. Deepface handles all these common stages in the background.\n\nEach call of verification function builds a face recognition model from scratch and this is a costly operation. If you are going to verify multiple faces sequentially, then you should pass an array of faces to verification function to speed the operation up. In this way, complex face recognition models will be built once.\n\n```python\ndataset = [\n\t['dataset/img1.jpg', 'dataset/img2.jpg'],\n\t['dataset/img1.jpg', 'dataset/img3.jpg']\n]\nresult = DeepFace.verify(dataset)\n```\n\n## Face recognition models\n\nFace recognition can be handled by different models. Currently, [`VGG-Face`](https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/) , [`Google FaceNet`](https://sefiks.com/2018/09/03/face-recognition-with-facenet-in-keras/), [`OpenFace`](https://sefiks.com/2019/07/21/face-recognition-with-openface-in-keras/) and [`Facebook DeepFace`](https://sefiks.com/2020/02/17/face-recognition-with-facebook-deepface-in-keras/) models are supported in deepface. The default configuration verifies faces with **VGG-Face** model. You can set the base model while verification as illustared below. Accuracy and speed show difference based on the performing model.\n\n```python\nvggface_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\") #default is VGG-Face\n#vggface_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\") #identical to the line above\nfacenet_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"Facenet\")\nopenface_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"OpenFace\")\ndeepface_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"DeepFace\")\n```\n\nThe complexity and response time of each face recognition model is different so do accuracy scores. Mean \u00b1 std. dev. of 7 runs on CPU for each model in my experiments is illustrated in the following table.\n\n| Model        | VGG-Face         | OpenFace         | Google FaceNet   | Facebook DeepFace |\n| ---          | ---              | ---              | ---              | ---               |\n| Building     | 2.35 s \u00b1 46.9 ms | 6.37 s \u00b1 1.28 s  | 25.7 s \u00b1 7.93 s  | 23.9 s \u00b1 2.52 s   |\n| Verification | 897 ms \u00b1 38.3 ms | 616 ms \u00b1 12.1 ms | 684 ms \u00b1 7.69 ms | 605 ms \u00b1 13.2 ms  |\n\n## Passing pre-built models\n\nYou can build a face recognition model once and pass this to verify function as well. This might be logical if you need to call verify function several times.\n\n```python\nfrom deepface.basemodels import VGGFace, OpenFace, Facenet, FbDeepFace\nmodel = VGGFace.loadModel() #all face recognition models have loadModel() function in their interfaces\nDeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\", model = model)\n```\n\n## Similarity\n\nThese models actually find the vector embeddings of faces. In other words, we use face recognition models as [`autoencoders`](https://sefiks.com/2018/03/23/convolutional-autoencoder-clustering-images-with-neural-networks/). Decision of verification is based on the distance between vectors. Distance could be found by different metrics such as [`Cosine Similarity`](https://sefiks.com/2018/08/13/cosine-similarity-in-machine-learning/), Euclidean Distance and L2 form. The default configuration finds the **cosine similarity**. You can alternatively set the similarity metric while verification as demostratred below.\n\n```python\nresult = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\", distance_metric = \"cosine\")\nresult = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\", distance_metric = \"euclidean\")\nresult = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\", distance_metric = \"euclidean_l2\")\n```\n\n# Facial Attribute Analysis\n\nDeepface also offers facial attribute analysis including [`age`](https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/), [`gender`](https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/), [`emotion`](https://sefiks.com/2018/01/01/facial-expression-recognition-with-keras/) (including angry, fear, neutral, sad, disgust, happy and surprise)and [`race`](https://sefiks.com/2019/11/11/race-and-ethnicity-prediction-in-keras/) (including asian, white, middle eastern, indian, latino and black) predictions. Analysis function under the DeepFace interface is used to find demography of a face.\n\n```python\nfrom deepface import DeepFace\ndemography = DeepFace.analyze(\"img4.jpg\") #passing nothing as 2nd argument will find everything\n#demography = DeepFace.analyze(\"img4.jpg\", ['age', 'gender', 'race', 'emotion']) #identical to the line above\n#demographies = DeepFace.analyze([\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]) #analyzing multiple faces same time\n\nprint(\"Age: \", demography[\"age\"])\nprint(\"Gender: \", demography[\"gender\"])\nprint(\"Emotion: \", demography[\"dominant_emotion\"])\nprint(\"Race: \", demography[\"dominant_race\"])\n```\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/deepface/master/icon/stock-2.jpg\" width=\"95%\" height=\"95%\"></p>\n\nModel building and prediction times are different for those facial analysis models. Mean \u00b1 std. dev. of 7 runs on CPU for each model in my experiments is illustrated in the following table.\n\n| Model      | Emotion          | Age              | Gender           | Race             |\n| ---        | ---              | ---              | ---              | ---              |\n| Building   | 243 ms \u00b1 15.2 ms | 2.25 s \u00b1 34.9    | 2.25 s \u00b1 90.9 ms | 2.23 s \u00b1 68.6 ms |\n| Prediction | 389 ms \u00b1 11.4 ms | 524 ms \u00b1 16.1 ms | 516 ms \u00b1 10.8 ms | 493 ms \u00b1 20.3 ms |\n\n## Passing pre-built models\n\nYou can build facial attribute analysis models once and pass these to analyze function as well. This might be logical if you need to call analyze function several times.\n\n```python\nimport json\nfrom deepface.extendedmodels import Age, Gender, Race, Emotion\n\nmodels = {}\nmodels[\"emotion\"] = Emotion.loadModel()\nmodels[\"age\"] = Age.loadModel()\nmodels[\"gender\"] = Gender.loadModel()\nmodels[\"race\"] = Race.loadModel()\n\nDeepFace.analyze(\"img1.jpg\", models=models)\n```\n\n# Streaming and Real Time Analysis\n\nYou can run deepface for real time videos as well. Calling stream function under the DeepFace interface will access your webcam and apply both face recognition and facial attribute analysis. Stream function expects a database folder including face images. VGG-Face is the default face recognition model and cosine similarity is the default distance metric similar to verify function. The function starts to analyze if it can focus a face sequantially 5 frames. Then, it shows results 5 seconds.\n\n```python\nfrom deepface import DeepFace\nDeepFace.stream(\"/user/database\")\n```\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/deepface/master/icon/stock-3.jpg\" width=\"90%\" height=\"90%\"></p>\n\nYou can watch a **demo** of real time analysis [`here`](https://youtu.be/-c9sSJcx6wI).\n\nEven though face recognition is based on one-shot learning, you can use multiple face pictures of a person as well. You should rearrange your directory structure as illustrated below.\n\n```bash\nuser\n\u251c\u2500\u2500 database\n\u2502   \u251c\u2500\u2500 Alice\n\u2502   \u2502   \u251c\u2500\u2500 Alice1.jpg\n\u2502   \u2502   \u251c\u2500\u2500 Alice2.jpg\n\u2502   \u251c\u2500\u2500 Bob\n\u2502   \u2502   \u251c\u2500\u2500 Bob.jpg\n```\n\nBTW, you should use regular slash ( / ) instead of backslash ( \\ ) in Windows OS while passing the path to stream function. E.g. `DeepFace.stream(\"C:/User/Sefik/Desktop/database\")`.\n\n# API\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/deepface/master/icon/deepface-api.jpg\" width=\"90%\" height=\"90%\"></p>\n\nDeepface [serves](https://youtu.be/HeKCQ6U9XmI) an API as well. You can clone [`/api/api.py`](https://github.com/serengil/deepface/tree/master/api/api.py) and pass it to python command as an argument. This will get a rest service up.\n\n```\npython api.py\n```\n\nThe both face recognition and facial attribute analysis are covered in the API. You are expected to call these functions as http post methods. Service endpoints will be `http://127.0.0.1:5000/verify` for face recognition and `http://127.0.0.1:5000/analyze` for facial attribute analysis. You should pass input images as base64 encoded string in this case. [Here](https://github.com/serengil/deepface/tree/master/api), you can find a postman project.\n\n# Playlist\n\nDeepface is mentioned in this [youtube playlist](https://www.youtube.com/watch?v=KRCvkNCOphE&list=PLsS_1RYmYQQFdWqxQggXHynP1rqaYXv_E).\n\n# Disclaimer\n\nReference face recognition models have different type of licenses. This framework is just a wrapper for those models. That's why, licence types are inherited as well. You should check the licenses for the face recognition models before use.\n\nHerein, [OpenFace](https://github.com/cmusatyalab/openface/blob/master/LICENSE) is licensed under Apache License 2.0. [FB DeepFace](https://github.com/swghosh/DeepFace) and [Facenet](https://github.com/davidsandberg/facenet/blob/master/LICENSE.md) is licensed under MIT License. The both Apache License 2.0 and MIT license types allow you to use for commercial purpose. \n\nOn the other hand, [VGG-Face](http://www.robots.ox.ac.uk/~vgg/software/vgg_face/) is licensed under Creative Commons Attribution License. That's why, it is restricted to adopt VGG-Face for commercial use.\n\n# Support\n\nThere are many ways to support a project - starring\u2b50\ufe0f the GitHub repos is just one.\n\nYou can also support this project through Patreon.\n\n<a href=\"https://www.patreon.com/bePatron?u=31795557\"><img src=\"https://c5.patreon.com/external/logo/become_a_patron_button.png\"></img></a>\n\n# Licence\n\nDeepface is licensed under the MIT License - see [`LICENSE`](https://github.com/serengil/deepface/blob/master/LICENSE) for more details.\n\n[Logo](https://thenounproject.com/term/face-recognition/2965879/) is created by [Adrien Coquet](https://thenounproject.com/coquet_adrien/). Licensed under [Creative Commons: By Attribution 3.0 License](https://creativecommons.org/licenses/by/3.0/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/serengil/deepface", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "deepface", "package_url": "https://pypi.org/project/deepface/", "platform": "", "project_url": "https://pypi.org/project/deepface/", "project_urls": {"Homepage": "https://github.com/serengil/deepface"}, "release_url": "https://pypi.org/project/deepface/0.0.22/", "requires_dist": ["numpy (>=1.14.0)", "pandas (>=0.23.4)", "tqdm (>=4.30.0)", "gdown (>=3.10.1)", "Pillow (>=5.2.0)", "opencv-python (>=3.4.4)", "tensorflow (>=1.9.0)", "keras (>=2.2.0)", "Flask (>=1.1.2)"], "requires_python": ">=3.5.5", "summary": "Deep Face Analysis Framework for Face Recognition and Demography", "version": "0.0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>deepface</h1>\n<p><a href=\"https://pepy.tech/project/deepface\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d845b9ffdbb74f0de01358214cfd8e8b7137196a/68747470733a2f2f706570792e746563682f62616467652f6465657066616365\"></a></p>\n<p align=\"center\"><img height=\"240\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/902cc808c72f9247a3df377f968721d0ef0c29f0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572656e67696c2f64656570666163652f6d61737465722f69636f6e2f64656570666163652d69636f6e2d6c6162656c65642e706e67\" width=\"200\"></p>\n<p><strong>Deepface</strong> is a lightweight facial analysis framework including <a href=\"https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/\" rel=\"nofollow\">face recognition</a> and demography (<a href=\"https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/\" rel=\"nofollow\">age</a>, <a href=\"https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/\" rel=\"nofollow\">gender</a>, <a href=\"https://sefiks.com/2018/01/01/facial-expression-recognition-with-keras/\" rel=\"nofollow\">emotion</a> and <a href=\"https://sefiks.com/2019/11/11/race-and-ethnicity-prediction-in-keras/\" rel=\"nofollow\">race</a>) for Python. You can apply facial analysis with a few lines of code. It plans to bridge a gap between software engineering and machine learning studies.</p>\n<h1>Installation</h1>\n<p>The easiest way to install deepface is to download it from <a href=\"https://pypi.org/project/deepface/\" rel=\"nofollow\">PyPI</a>.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">deepface</span>\n</pre>\n<h1>Face Recognition</h1>\n<p>Verify function under the DeepFace interface is used for face recognition.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepface</span> <span class=\"kn\">import</span> <span class=\"n\">DeepFace</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is verified: \"</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s2\">\"verified\"</span><span class=\"p\">])</span>\n</pre>\n<p align=\"center\"><img height=\"95%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e9f60e1f780dbaa834b02f3f7b1320ad4dd79c4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572656e67696c2f64656570666163652f6d61737465722f69636f6e2f73746f636b2d312e6a7067\" width=\"95%\"></p>\n<p>Modern face recognition pipelines consist of 4 stages: detect, <a href=\"https://sefiks.com/2020/02/23/face-alignment-for-face-recognition-in-python-within-opencv/\" rel=\"nofollow\">align</a>, represent and verify. Deepface handles all these common stages in the background.</p>\n<p>Each call of verification function builds a face recognition model from scratch and this is a costly operation. If you are going to verify multiple faces sequentially, then you should pass an array of faces to verification function to speed the operation up. In this way, complex face recognition models will be built once.</p>\n<pre><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n\t<span class=\"p\">[</span><span class=\"s1\">'dataset/img1.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'dataset/img2.jpg'</span><span class=\"p\">],</span>\n\t<span class=\"p\">[</span><span class=\"s1\">'dataset/img1.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'dataset/img3.jpg'</span><span class=\"p\">]</span>\n<span class=\"p\">]</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n</pre>\n<h2>Face recognition models</h2>\n<p>Face recognition can be handled by different models. Currently, <a href=\"https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/\" rel=\"nofollow\"><code>VGG-Face</code></a> , <a href=\"https://sefiks.com/2018/09/03/face-recognition-with-facenet-in-keras/\" rel=\"nofollow\"><code>Google FaceNet</code></a>, <a href=\"https://sefiks.com/2019/07/21/face-recognition-with-openface-in-keras/\" rel=\"nofollow\"><code>OpenFace</code></a> and <a href=\"https://sefiks.com/2020/02/17/face-recognition-with-facebook-deepface-in-keras/\" rel=\"nofollow\"><code>Facebook DeepFace</code></a> models are supported in deepface. The default configuration verifies faces with <strong>VGG-Face</strong> model. You can set the base model while verification as illustared below. Accuracy and speed show difference based on the performing model.</p>\n<pre><span class=\"n\">vggface_result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">)</span> <span class=\"c1\">#default is VGG-Face</span>\n<span class=\"c1\">#vggface_result = DeepFace.verify(\"img1.jpg\", \"img2.jpg\", model_name = \"VGG-Face\") #identical to the line above</span>\n<span class=\"n\">facenet_result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Facenet\"</span><span class=\"p\">)</span>\n<span class=\"n\">openface_result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"OpenFace\"</span><span class=\"p\">)</span>\n<span class=\"n\">deepface_result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"DeepFace\"</span><span class=\"p\">)</span>\n</pre>\n<p>The complexity and response time of each face recognition model is different so do accuracy scores. Mean \u00b1 std. dev. of 7 runs on CPU for each model in my experiments is illustrated in the following table.</p>\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>VGG-Face</th>\n<th>OpenFace</th>\n<th>Google FaceNet</th>\n<th>Facebook DeepFace</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Building</td>\n<td>2.35 s \u00b1 46.9 ms</td>\n<td>6.37 s \u00b1 1.28 s</td>\n<td>25.7 s \u00b1 7.93 s</td>\n<td>23.9 s \u00b1 2.52 s</td>\n</tr>\n<tr>\n<td>Verification</td>\n<td>897 ms \u00b1 38.3 ms</td>\n<td>616 ms \u00b1 12.1 ms</td>\n<td>684 ms \u00b1 7.69 ms</td>\n<td>605 ms \u00b1 13.2 ms</td>\n</tr></tbody></table>\n<h2>Passing pre-built models</h2>\n<p>You can build a face recognition model once and pass this to verify function as well. This might be logical if you need to call verify function several times.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepface.basemodels</span> <span class=\"kn\">import</span> <span class=\"n\">VGGFace</span><span class=\"p\">,</span> <span class=\"n\">OpenFace</span><span class=\"p\">,</span> <span class=\"n\">Facenet</span><span class=\"p\">,</span> <span class=\"n\">FbDeepFace</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">VGGFace</span><span class=\"o\">.</span><span class=\"n\">loadModel</span><span class=\"p\">()</span> <span class=\"c1\">#all face recognition models have loadModel() function in their interfaces</span>\n<span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"VGG-Face\"</span><span class=\"p\">,</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n</pre>\n<h2>Similarity</h2>\n<p>These models actually find the vector embeddings of faces. In other words, we use face recognition models as <a href=\"https://sefiks.com/2018/03/23/convolutional-autoencoder-clustering-images-with-neural-networks/\" rel=\"nofollow\"><code>autoencoders</code></a>. Decision of verification is based on the distance between vectors. Distance could be found by different metrics such as <a href=\"https://sefiks.com/2018/08/13/cosine-similarity-in-machine-learning/\" rel=\"nofollow\"><code>Cosine Similarity</code></a>, Euclidean Distance and L2 form. The default configuration finds the <strong>cosine similarity</strong>. You can alternatively set the similarity metric while verification as demostratred below.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"VGG-Face\"</span><span class=\"p\">,</span> <span class=\"n\">distance_metric</span> <span class=\"o\">=</span> <span class=\"s2\">\"cosine\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"VGG-Face\"</span><span class=\"p\">,</span> <span class=\"n\">distance_metric</span> <span class=\"o\">=</span> <span class=\"s2\">\"euclidean\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"img2.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"VGG-Face\"</span><span class=\"p\">,</span> <span class=\"n\">distance_metric</span> <span class=\"o\">=</span> <span class=\"s2\">\"euclidean_l2\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Facial Attribute Analysis</h1>\n<p>Deepface also offers facial attribute analysis including <a href=\"https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/\" rel=\"nofollow\"><code>age</code></a>, <a href=\"https://sefiks.com/2019/02/13/apparent-age-and-gender-prediction-in-keras/\" rel=\"nofollow\"><code>gender</code></a>, <a href=\"https://sefiks.com/2018/01/01/facial-expression-recognition-with-keras/\" rel=\"nofollow\"><code>emotion</code></a> (including angry, fear, neutral, sad, disgust, happy and surprise)and <a href=\"https://sefiks.com/2019/11/11/race-and-ethnicity-prediction-in-keras/\" rel=\"nofollow\"><code>race</code></a> (including asian, white, middle eastern, indian, latino and black) predictions. Analysis function under the DeepFace interface is used to find demography of a face.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepface</span> <span class=\"kn\">import</span> <span class=\"n\">DeepFace</span>\n<span class=\"n\">demography</span> <span class=\"o\">=</span> <span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">analyze</span><span class=\"p\">(</span><span class=\"s2\">\"img4.jpg\"</span><span class=\"p\">)</span> <span class=\"c1\">#passing nothing as 2nd argument will find everything</span>\n<span class=\"c1\">#demography = DeepFace.analyze(\"img4.jpg\", ['age', 'gender', 'race', 'emotion']) #identical to the line above</span>\n<span class=\"c1\">#demographies = DeepFace.analyze([\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]) #analyzing multiple faces same time</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Age: \"</span><span class=\"p\">,</span> <span class=\"n\">demography</span><span class=\"p\">[</span><span class=\"s2\">\"age\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Gender: \"</span><span class=\"p\">,</span> <span class=\"n\">demography</span><span class=\"p\">[</span><span class=\"s2\">\"gender\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Emotion: \"</span><span class=\"p\">,</span> <span class=\"n\">demography</span><span class=\"p\">[</span><span class=\"s2\">\"dominant_emotion\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Race: \"</span><span class=\"p\">,</span> <span class=\"n\">demography</span><span class=\"p\">[</span><span class=\"s2\">\"dominant_race\"</span><span class=\"p\">])</span>\n</pre>\n<p align=\"center\"><img height=\"95%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa496081df1a66b0cd197f80c7f8439c8c4f86f5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572656e67696c2f64656570666163652f6d61737465722f69636f6e2f73746f636b2d322e6a7067\" width=\"95%\"></p>\n<p>Model building and prediction times are different for those facial analysis models. Mean \u00b1 std. dev. of 7 runs on CPU for each model in my experiments is illustrated in the following table.</p>\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>Emotion</th>\n<th>Age</th>\n<th>Gender</th>\n<th>Race</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Building</td>\n<td>243 ms \u00b1 15.2 ms</td>\n<td>2.25 s \u00b1 34.9</td>\n<td>2.25 s \u00b1 90.9 ms</td>\n<td>2.23 s \u00b1 68.6 ms</td>\n</tr>\n<tr>\n<td>Prediction</td>\n<td>389 ms \u00b1 11.4 ms</td>\n<td>524 ms \u00b1 16.1 ms</td>\n<td>516 ms \u00b1 10.8 ms</td>\n<td>493 ms \u00b1 20.3 ms</td>\n</tr></tbody></table>\n<h2>Passing pre-built models</h2>\n<p>You can build facial attribute analysis models once and pass these to analyze function as well. This might be logical if you need to call analyze function several times.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">deepface.extendedmodels</span> <span class=\"kn\">import</span> <span class=\"n\">Age</span><span class=\"p\">,</span> <span class=\"n\">Gender</span><span class=\"p\">,</span> <span class=\"n\">Race</span><span class=\"p\">,</span> <span class=\"n\">Emotion</span>\n\n<span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">models</span><span class=\"p\">[</span><span class=\"s2\">\"emotion\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Emotion</span><span class=\"o\">.</span><span class=\"n\">loadModel</span><span class=\"p\">()</span>\n<span class=\"n\">models</span><span class=\"p\">[</span><span class=\"s2\">\"age\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Age</span><span class=\"o\">.</span><span class=\"n\">loadModel</span><span class=\"p\">()</span>\n<span class=\"n\">models</span><span class=\"p\">[</span><span class=\"s2\">\"gender\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Gender</span><span class=\"o\">.</span><span class=\"n\">loadModel</span><span class=\"p\">()</span>\n<span class=\"n\">models</span><span class=\"p\">[</span><span class=\"s2\">\"race\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Race</span><span class=\"o\">.</span><span class=\"n\">loadModel</span><span class=\"p\">()</span>\n\n<span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">analyze</span><span class=\"p\">(</span><span class=\"s2\">\"img1.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"p\">)</span>\n</pre>\n<h1>Streaming and Real Time Analysis</h1>\n<p>You can run deepface for real time videos as well. Calling stream function under the DeepFace interface will access your webcam and apply both face recognition and facial attribute analysis. Stream function expects a database folder including face images. VGG-Face is the default face recognition model and cosine similarity is the default distance metric similar to verify function. The function starts to analyze if it can focus a face sequantially 5 frames. Then, it shows results 5 seconds.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepface</span> <span class=\"kn\">import</span> <span class=\"n\">DeepFace</span>\n<span class=\"n\">DeepFace</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">(</span><span class=\"s2\">\"/user/database\"</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\"><img height=\"90%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93eda72b529cf798753e83ba188f19d038e27290/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572656e67696c2f64656570666163652f6d61737465722f69636f6e2f73746f636b2d332e6a7067\" width=\"90%\"></p>\n<p>You can watch a <strong>demo</strong> of real time analysis <a href=\"https://youtu.be/-c9sSJcx6wI\" rel=\"nofollow\"><code>here</code></a>.</p>\n<p>Even though face recognition is based on one-shot learning, you can use multiple face pictures of a person as well. You should rearrange your directory structure as illustrated below.</p>\n<pre>user\n\u251c\u2500\u2500 database\n\u2502   \u251c\u2500\u2500 Alice\n\u2502   \u2502   \u251c\u2500\u2500 Alice1.jpg\n\u2502   \u2502   \u251c\u2500\u2500 Alice2.jpg\n\u2502   \u251c\u2500\u2500 Bob\n\u2502   \u2502   \u251c\u2500\u2500 Bob.jpg\n</pre>\n<p>BTW, you should use regular slash ( / ) instead of backslash ( \\ ) in Windows OS while passing the path to stream function. E.g. <code>DeepFace.stream(\"C:/User/Sefik/Desktop/database\")</code>.</p>\n<h1>API</h1>\n<p align=\"center\"><img height=\"90%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb2b2ebe7a65adb7fd4decdb89a087da5f8e80d4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572656e67696c2f64656570666163652f6d61737465722f69636f6e2f64656570666163652d6170692e6a7067\" width=\"90%\"></p>\n<p>Deepface <a href=\"https://youtu.be/HeKCQ6U9XmI\" rel=\"nofollow\">serves</a> an API as well. You can clone <a href=\"https://github.com/serengil/deepface/tree/master/api/api.py\" rel=\"nofollow\"><code>/api/api.py</code></a> and pass it to python command as an argument. This will get a rest service up.</p>\n<pre><code>python api.py\n</code></pre>\n<p>The both face recognition and facial attribute analysis are covered in the API. You are expected to call these functions as http post methods. Service endpoints will be <code>http://127.0.0.1:5000/verify</code> for face recognition and <code>http://127.0.0.1:5000/analyze</code> for facial attribute analysis. You should pass input images as base64 encoded string in this case. <a href=\"https://github.com/serengil/deepface/tree/master/api\" rel=\"nofollow\">Here</a>, you can find a postman project.</p>\n<h1>Playlist</h1>\n<p>Deepface is mentioned in this <a href=\"https://www.youtube.com/watch?v=KRCvkNCOphE&amp;list=PLsS_1RYmYQQFdWqxQggXHynP1rqaYXv_E\" rel=\"nofollow\">youtube playlist</a>.</p>\n<h1>Disclaimer</h1>\n<p>Reference face recognition models have different type of licenses. This framework is just a wrapper for those models. That's why, licence types are inherited as well. You should check the licenses for the face recognition models before use.</p>\n<p>Herein, <a href=\"https://github.com/cmusatyalab/openface/blob/master/LICENSE\" rel=\"nofollow\">OpenFace</a> is licensed under Apache License 2.0. <a href=\"https://github.com/swghosh/DeepFace\" rel=\"nofollow\">FB DeepFace</a> and <a href=\"https://github.com/davidsandberg/facenet/blob/master/LICENSE.md\" rel=\"nofollow\">Facenet</a> is licensed under MIT License. The both Apache License 2.0 and MIT license types allow you to use for commercial purpose.</p>\n<p>On the other hand, <a href=\"http://www.robots.ox.ac.uk/%7Evgg/software/vgg_face/\" rel=\"nofollow\">VGG-Face</a> is licensed under Creative Commons Attribution License. That's why, it is restricted to adopt VGG-Face for commercial use.</p>\n<h1>Support</h1>\n<p>There are many ways to support a project - starring\u2b50\ufe0f the GitHub repos is just one.</p>\n<p>You can also support this project through Patreon.</p>\n<p><a href=\"https://www.patreon.com/bePatron?u=31795557\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf6b2799bdc4927927a79c4813b7b540815cd744/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e2e706e67\"></a></p>\n<h1>Licence</h1>\n<p>Deepface is licensed under the MIT License - see <a href=\"https://github.com/serengil/deepface/blob/master/LICENSE\" rel=\"nofollow\"><code>LICENSE</code></a> for more details.</p>\n<p><a href=\"https://thenounproject.com/term/face-recognition/2965879/\" rel=\"nofollow\">Logo</a> is created by <a href=\"https://thenounproject.com/coquet_adrien/\" rel=\"nofollow\">Adrien Coquet</a>. Licensed under <a href=\"https://creativecommons.org/licenses/by/3.0/\" rel=\"nofollow\">Creative Commons: By Attribution 3.0 License</a>.</p>\n\n          </div>"}, "last_serial": 7162277, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "edf973b91c9b892e89ab20eda2f7ed4f", "sha256": "12618720959797285e35926878bbc4e81c93cfb278e1aa7d7c7fb4af1d951895"}, "downloads": -1, "filename": "deepface-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "edf973b91c9b892e89ab20eda2f7ed4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 12427, "upload_time": "2020-02-08T20:53:04", "upload_time_iso_8601": "2020-02-08T20:53:04.978154Z", "url": "https://files.pythonhosted.org/packages/37/30/0da9f64088a59fdcfb187866b961c7cf9fb60ae96691e2f5bd24d7d9af8a/deepface-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c6a13dfe25f9e6d853d8c244b155acf", "sha256": "27ef595376313cb5df3048142f9ae24ab25c4605b1f72f36f43e52bfce50a9c5"}, "downloads": -1, "filename": "deepface-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8c6a13dfe25f9e6d853d8c244b155acf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 10184, "upload_time": "2020-02-08T20:53:07", "upload_time_iso_8601": "2020-02-08T20:53:07.081966Z", "url": "https://files.pythonhosted.org/packages/4c/34/f84ca8fd8258df3c4672c6abc97ad3f53d3cb5d5f5f0fb3d7c800c773c31/deepface-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "03e0639f23faa3e468e054f390137a43", "sha256": "4877b05daf75c8f11088e2e6dfd4bc2a7bb818d43ce37f7a3aa47ea7d04d023a"}, "downloads": -1, "filename": "deepface-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "03e0639f23faa3e468e054f390137a43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 22235, "upload_time": "2020-03-05T12:25:24", "upload_time_iso_8601": "2020-03-05T12:25:24.270948Z", "url": "https://files.pythonhosted.org/packages/62/b7/4c960e8f2d15a97d9644b4f2b78bc77de2849a063ad4d3169a10628dacc4/deepface-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eb52195d503188c29e85b9933215f7e", "sha256": "16fd4a2f857a8b5142d044874c446e08a42f00de407585e62b5d7282c19a7880"}, "downloads": -1, "filename": "deepface-0.0.10.tar.gz", "has_sig": false, "md5_digest": "1eb52195d503188c29e85b9933215f7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 16656, "upload_time": "2020-03-05T12:25:25", "upload_time_iso_8601": "2020-03-05T12:25:25.621851Z", "url": "https://files.pythonhosted.org/packages/10/0d/2fd1f4e8ec9c9359ff293eb603989a6ccefe7ecb47182aff1a49431b7918/deepface-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "a1274276d4036661d2b7a5f97f916a0c", "sha256": "00214b2fb591026f31e5053fd86a097a54ca976b546d0e942a70a87d3d68af6e"}, "downloads": -1, "filename": "deepface-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "a1274276d4036661d2b7a5f97f916a0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26613, "upload_time": "2020-03-31T20:30:59", "upload_time_iso_8601": "2020-03-31T20:30:59.355427Z", "url": "https://files.pythonhosted.org/packages/42/60/588f04fd3d17e9dbbf6896b108621f58b6d09e7b5ca80ad50f94a3509469/deepface-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a27bde53f5668a220ac64b15b0cc769", "sha256": "1110c385fde8764f4cb890bca605ca230a81cf5b1d2257a7f0bdbb45aec31342"}, "downloads": -1, "filename": "deepface-0.0.11.tar.gz", "has_sig": false, "md5_digest": "1a27bde53f5668a220ac64b15b0cc769", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20140, "upload_time": "2020-03-31T20:31:01", "upload_time_iso_8601": "2020-03-31T20:31:01.021815Z", "url": "https://files.pythonhosted.org/packages/b3/0f/4925ff6bfaa3363b2a5fc6ac70b64dc4ce4ed1a6742e0c00585d1ae5c102/deepface-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "b9b54551a6d4840edcbf0750ffc36906", "sha256": "430a41dd2697125ee6783fb7a1af571ee7bd6d04cb619981e93c55f1250c2033"}, "downloads": -1, "filename": "deepface-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "b9b54551a6d4840edcbf0750ffc36906", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26655, "upload_time": "2020-04-02T17:05:33", "upload_time_iso_8601": "2020-04-02T17:05:33.181434Z", "url": "https://files.pythonhosted.org/packages/be/35/6152d8850d7f127c50db0419d172e0be43e68700208e4ced17019de7055b/deepface-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fdc28f7fa3188d5aea32729b137620e", "sha256": "538a20d231ee3bd121ceff332341642c7dec7ebe30765903c778edd01d729240"}, "downloads": -1, "filename": "deepface-0.0.12.tar.gz", "has_sig": false, "md5_digest": "1fdc28f7fa3188d5aea32729b137620e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20174, "upload_time": "2020-04-02T17:05:34", "upload_time_iso_8601": "2020-04-02T17:05:34.774567Z", "url": "https://files.pythonhosted.org/packages/3c/64/a0e14ffb717363c91c52e11e5ca70773ab9c48ff64701b080be8676a3c39/deepface-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "e0d4d04838da735916314556ef10098d", "sha256": "c2aa06b1ba1fe3b4be03f3199897b3009a54097bcfdd89e79f41cc22701211d8"}, "downloads": -1, "filename": "deepface-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "e0d4d04838da735916314556ef10098d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26297, "upload_time": "2020-04-09T09:30:47", "upload_time_iso_8601": "2020-04-09T09:30:47.510520Z", "url": "https://files.pythonhosted.org/packages/b5/6c/f125c9222b1df14d6ac342353680721eec3b38d53c6635982b1495be1920/deepface-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b9bb66966cb6920f84ec68c4dc5306d", "sha256": "95d07046d5cfd03a70d1587f99c224898c9e37ec00bc8375cf9ea77bdf19f82e"}, "downloads": -1, "filename": "deepface-0.0.13.tar.gz", "has_sig": false, "md5_digest": "5b9bb66966cb6920f84ec68c4dc5306d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20746, "upload_time": "2020-04-09T09:30:49", "upload_time_iso_8601": "2020-04-09T09:30:49.257966Z", "url": "https://files.pythonhosted.org/packages/1a/1c/de1ac05175f8fdf8c0457ab417f729262ccae511569183416aadcc6eae1c/deepface-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "95325935b463632d047fcddb265db4cf", "sha256": "306b39c960dd23ca8089d7cc1e0c279857b89001ee01417c1b4d5369498d2e30"}, "downloads": -1, "filename": "deepface-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "95325935b463632d047fcddb265db4cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26094, "upload_time": "2020-04-09T13:08:39", "upload_time_iso_8601": "2020-04-09T13:08:39.643511Z", "url": "https://files.pythonhosted.org/packages/0a/a2/d9f82d43dd759239b8de4edfde2501a750039743b41c6b390969390b3817/deepface-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88c2d8273051fbd9e236c31644d7b0a5", "sha256": "ca6300d5755b2453bc46dc5674347fcd4d9b9d5405733ade54c1bb9f305be499"}, "downloads": -1, "filename": "deepface-0.0.14.tar.gz", "has_sig": false, "md5_digest": "88c2d8273051fbd9e236c31644d7b0a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20576, "upload_time": "2020-04-09T13:08:41", "upload_time_iso_8601": "2020-04-09T13:08:41.241699Z", "url": "https://files.pythonhosted.org/packages/03/77/664d0ca8c0aa663cc96e5ce55b113c341141f877449f73ef6836ff0ae213/deepface-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "85d6498723950ab8bddc50badfabe9e1", "sha256": "33570795c92be0ae528765e98fe5c020bd0fd3586fc15b386fed91f6e585ebd6"}, "downloads": -1, "filename": "deepface-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "85d6498723950ab8bddc50badfabe9e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26080, "upload_time": "2020-04-09T13:11:29", "upload_time_iso_8601": "2020-04-09T13:11:29.875525Z", "url": "https://files.pythonhosted.org/packages/13/de/3ededff89a2f36fe4d7e53ecec63647fff51dd24005197e50625870b0ab4/deepface-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be647c1754684802e71566231378ef86", "sha256": "88ebe294f1ad37d4c2fd60813f846865d04103577f6c577f3d63b1e892e776bc"}, "downloads": -1, "filename": "deepface-0.0.15.tar.gz", "has_sig": false, "md5_digest": "be647c1754684802e71566231378ef86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20553, "upload_time": "2020-04-09T13:11:31", "upload_time_iso_8601": "2020-04-09T13:11:31.486063Z", "url": "https://files.pythonhosted.org/packages/57/16/58c6f246a3fb2ca5bb9a9d9d84b95be8a2a6f779764f98738c58c67db80b/deepface-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "0c49dc4e3edfd093812c07997256e3f9", "sha256": "de06a12e3e70c264c3a4d5f275860191165cd30b587d34e8134d0850f862d0f9"}, "downloads": -1, "filename": "deepface-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "0c49dc4e3edfd093812c07997256e3f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26072, "upload_time": "2020-04-09T14:13:12", "upload_time_iso_8601": "2020-04-09T14:13:12.447888Z", "url": "https://files.pythonhosted.org/packages/dd/4b/9637c8bf980373664a96e35c7071c1aecbb472c75ce1e394e5a48278d3b8/deepface-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3852b8c8bde66b8970f025fae11c3b64", "sha256": "abed5961557bb8d4c0576db91172afaef0327dea567a139080a585e963eb0b78"}, "downloads": -1, "filename": "deepface-0.0.16.tar.gz", "has_sig": false, "md5_digest": "3852b8c8bde66b8970f025fae11c3b64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20548, "upload_time": "2020-04-09T14:13:13", "upload_time_iso_8601": "2020-04-09T14:13:13.949868Z", "url": "https://files.pythonhosted.org/packages/91/15/bd289824edbc61ded6f7953a88913be269a2f4ad1b1a3b0e577f0e060169/deepface-0.0.16.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "d9612545bbbb63fda164959e33c1bcce", "sha256": "02d47beca44a31e93617bcf77342f1b0012574581897611787e6ee2581f99279"}, "downloads": -1, "filename": "deepface-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "d9612545bbbb63fda164959e33c1bcce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26897, "upload_time": "2020-04-09T16:16:18", "upload_time_iso_8601": "2020-04-09T16:16:18.629901Z", "url": "https://files.pythonhosted.org/packages/95/30/778a099c47f0eaa90b06771d21e9c1acc9fe1b0b1c8cfd7d9f282c130793/deepface-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "742f029b4ce7565c075fb2d609dbb26e", "sha256": "ae372c8448f714199cb2fae5205a48b270e2711e378254a5c4d5ef71c26c6f99"}, "downloads": -1, "filename": "deepface-0.0.18.tar.gz", "has_sig": false, "md5_digest": "742f029b4ce7565c075fb2d609dbb26e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20544, "upload_time": "2020-04-09T16:16:21", "upload_time_iso_8601": "2020-04-09T16:16:21.057072Z", "url": "https://files.pythonhosted.org/packages/29/ac/33f7d8f67026e7a96c24965cb8350ca31fbc32ddc8b2d484df241b9a22f8/deepface-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "f836bd0e28fe1ec94d0f66312ffda20c", "sha256": "82b526858a81fb08e0fd354e76827f0181f49cdaa26a21a71e189988be36942b"}, "downloads": -1, "filename": "deepface-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "f836bd0e28fe1ec94d0f66312ffda20c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 26196, "upload_time": "2020-04-17T17:25:28", "upload_time_iso_8601": "2020-04-17T17:25:28.268992Z", "url": "https://files.pythonhosted.org/packages/3d/b3/6759577fa74fcd21882beac7c8e018cac7f2b807ebc660d9de02b817dfc5/deepface-0.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b09bf66a5774b0014c7f49ee51fd123", "sha256": "c08ca653a7edc568d6935e97032e65f20223c33c6d8424443e2fe50829a1a82a"}, "downloads": -1, "filename": "deepface-0.0.19.tar.gz", "has_sig": false, "md5_digest": "8b09bf66a5774b0014c7f49ee51fd123", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 20682, "upload_time": "2020-04-17T17:25:29", "upload_time_iso_8601": "2020-04-17T17:25:29.862946Z", "url": "https://files.pythonhosted.org/packages/23/2e/9bc9194f72baeb8fa6d5fa84f47bf09cef6ffe8596744fd405a5452f7656/deepface-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7644ef0309cbac02c5bf68e9dd309885", "sha256": "5935d88cdc210c0d6fe75f92e2670dcee2e3c83aeba5e375b37adfe4361a8e40"}, "downloads": -1, "filename": "deepface-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7644ef0309cbac02c5bf68e9dd309885", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 17838, "upload_time": "2020-02-10T17:38:52", "upload_time_iso_8601": "2020-02-10T17:38:52.449551Z", "url": "https://files.pythonhosted.org/packages/bf/2b/eb3e11618a9e7c374d1b62ac0d73a38ce8a008e9e0ec99be4f7acba5e851/deepface-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42b54730d4d21e6839d71f4f25072035", "sha256": "b2054ef9e573b21f4edd9e8e857ba04a3781fe1e7b0da86e0791e96d14d90673"}, "downloads": -1, "filename": "deepface-0.0.2.tar.gz", "has_sig": false, "md5_digest": "42b54730d4d21e6839d71f4f25072035", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 14215, "upload_time": "2020-02-10T17:38:54", "upload_time_iso_8601": "2020-02-10T17:38:54.044345Z", "url": "https://files.pythonhosted.org/packages/2c/64/a26856fc6ce4a2d25c501ae96e12e9d7fd22c95914a1224061a46a76f377/deepface-0.0.2.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "9e46e6170bd9ed740ef32aef6b515a87", "sha256": "a7317b22df9b0b4bd080e5b931167cd45a257634827de078c5ae8f049a07ddc1"}, "downloads": -1, "filename": "deepface-0.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "9e46e6170bd9ed740ef32aef6b515a87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 27202, "upload_time": "2020-04-20T11:32:35", "upload_time_iso_8601": "2020-04-20T11:32:35.106235Z", "url": "https://files.pythonhosted.org/packages/96/1e/e7e257da321ce8f8dd07c4dc09489aca4a8b071c35a299398f9f8dfc24c2/deepface-0.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c301f55321319a3c9cc54912cfc3022", "sha256": "89397cda500c21abcb8a7a5d2ed0124724142bb023b76a5b54edb57c252f7166"}, "downloads": -1, "filename": "deepface-0.0.20.tar.gz", "has_sig": false, "md5_digest": "2c301f55321319a3c9cc54912cfc3022", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 21574, "upload_time": "2020-04-20T11:32:37", "upload_time_iso_8601": "2020-04-20T11:32:37.771859Z", "url": "https://files.pythonhosted.org/packages/33/08/6497452e8310cd6076050bdc2c383f0d896c45231c5c346408c931ed40a3/deepface-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "8ee07e6fec7232675c777d155f52414c", "sha256": "1f38302e19bfb249c18dba55c7055b4c92758b96e4c033d6ced9ba3e6045296c"}, "downloads": -1, "filename": "deepface-0.0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "8ee07e6fec7232675c777d155f52414c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 27967, "upload_time": "2020-05-04T07:59:03", "upload_time_iso_8601": "2020-05-04T07:59:03.059897Z", "url": "https://files.pythonhosted.org/packages/b1/00/f04cf55db7a9586e2f64c0c8e9b7df4ead208ce317d6c7fcd11fd47abc28/deepface-0.0.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "062703c8c31dafecbe2ee78feb765d05", "sha256": "779428f988ea223a97f15b0538dfc5de8435e8d2040202ffbcb3b33812ee978b"}, "downloads": -1, "filename": "deepface-0.0.21.tar.gz", "has_sig": false, "md5_digest": "062703c8c31dafecbe2ee78feb765d05", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 22459, "upload_time": "2020-05-04T07:59:04", "upload_time_iso_8601": "2020-05-04T07:59:04.443926Z", "url": "https://files.pythonhosted.org/packages/90/d2/1b81407f032a90fb528cae1c381f21a836c174e95403d86f80eb081934f0/deepface-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "b1e1664efcb84af510ad2d9bcb928ace", "sha256": "c6c6c677829b40213837649baeb8a546e7b150f28d2f532b49a8b6099b6ef994"}, "downloads": -1, "filename": "deepface-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "b1e1664efcb84af510ad2d9bcb928ace", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 28035, "upload_time": "2020-05-04T08:51:47", "upload_time_iso_8601": "2020-05-04T08:51:47.684085Z", "url": "https://files.pythonhosted.org/packages/07/98/129c02a4666ee57bc1f2632c2d2c460934495634869dbb6841ff390a1a37/deepface-0.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e70a662966f619c9322d62a3bdfa655", "sha256": "c9040994c43e9f1b4f3f71cebf497118f662cf8c3927de54dd65dc70109802e7"}, "downloads": -1, "filename": "deepface-0.0.22.tar.gz", "has_sig": false, "md5_digest": "3e70a662966f619c9322d62a3bdfa655", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 22536, "upload_time": "2020-05-04T08:51:48", "upload_time_iso_8601": "2020-05-04T08:51:48.811548Z", "url": "https://files.pythonhosted.org/packages/89/7c/8b11a7a1ab377ea66eacdd6ff314cd41f3c1362dc3f6dd7714449ff782b6/deepface-0.0.22.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c8fd25637e5bea0b69a91c6b21a6e61d", "sha256": "ec819c538d04c4d6ef17253a548d951d4806479f1a6f7250216e98dcb67f4573"}, "downloads": -1, "filename": "deepface-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c8fd25637e5bea0b69a91c6b21a6e61d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 17959, "upload_time": "2020-02-12T18:02:28", "upload_time_iso_8601": "2020-02-12T18:02:28.685101Z", "url": "https://files.pythonhosted.org/packages/f2/69/4063671dd8ab89fcf23e080198e1aa74c263dcd268dc2811907b95fb3b2c/deepface-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ab5fb61fb606c0069f2cf370643af06", "sha256": "2fc715deb05f9d130e3fa29afa8388dcca597ae2931c2351b9104198bfe5f45e"}, "downloads": -1, "filename": "deepface-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5ab5fb61fb606c0069f2cf370643af06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 14251, "upload_time": "2020-02-12T18:02:30", "upload_time_iso_8601": "2020-02-12T18:02:30.184364Z", "url": "https://files.pythonhosted.org/packages/cb/a8/b35a025aaf7218f00c44d375d8a5556b4959dd6b67ed279e504d47c7915a/deepface-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6bcc780c05fe3612bde89fec02d32075", "sha256": "1aff680d4bfe216ccbdd3aac6b170fdf891707cd5bb689b608643074274a8518"}, "downloads": -1, "filename": "deepface-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6bcc780c05fe3612bde89fec02d32075", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 18013, "upload_time": "2020-02-13T07:23:50", "upload_time_iso_8601": "2020-02-13T07:23:50.557594Z", "url": "https://files.pythonhosted.org/packages/95/02/686c6c2046d0f96af1996ef8e3e883f941504891fa0b34c988b1420f7ec7/deepface-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f26bfa518bb3967b4b907b8655b2777", "sha256": "4363be88e836d4e24a2ca6c096ef5810eddd1147d297634ab3f4ae55e39a636f"}, "downloads": -1, "filename": "deepface-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9f26bfa518bb3967b4b907b8655b2777", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 14283, "upload_time": "2020-02-13T07:23:52", "upload_time_iso_8601": "2020-02-13T07:23:52.291565Z", "url": "https://files.pythonhosted.org/packages/44/9c/8d696e953c155a77839f3f775a655a22d46d1d987395e1b1620212114e26/deepface-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "2a0b6fd661791467e66414c8c51d2bce", "sha256": "52fd1e520f74e96043a0ee4a091cf12d188377aec663f7931eae25f02e47769e"}, "downloads": -1, "filename": "deepface-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2a0b6fd661791467e66414c8c51d2bce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 19817, "upload_time": "2020-02-15T15:57:08", "upload_time_iso_8601": "2020-02-15T15:57:08.378876Z", "url": "https://files.pythonhosted.org/packages/11/69/0bcaf89d09d576f04ad83fc693b4e29c2fcc820f8a9c2123ad2dbc9a51ad/deepface-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a696603407a55964324cea90370541c3", "sha256": "0034f0a115d77f07b914734913c41b7e0902f8b48c40037e71062f5634183ced"}, "downloads": -1, "filename": "deepface-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a696603407a55964324cea90370541c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 15058, "upload_time": "2020-02-15T15:57:10", "upload_time_iso_8601": "2020-02-15T15:57:10.054681Z", "url": "https://files.pythonhosted.org/packages/cd/b5/51175bf4a6839d4459f7d2c6419cab3cfb7d407c3866048f32e29d71fbf5/deepface-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "72f4b70e2032bf4095a7ba70af9c4069", "sha256": "3f617850232267ef3477830a372f3907da805b64ea06685bc5abf17d7890c309"}, "downloads": -1, "filename": "deepface-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "72f4b70e2032bf4095a7ba70af9c4069", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 20506, "upload_time": "2020-02-16T06:15:04", "upload_time_iso_8601": "2020-02-16T06:15:04.940557Z", "url": "https://files.pythonhosted.org/packages/01/0f/8c4790aa8ccd36236060493c53700af67e556214f272931ceb25678e0743/deepface-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19aced95d012d4c2333f30202b3939d4", "sha256": "38ff5b14459cf526dbeb488a120859c85d4f4a9f94288fd6656f383c091402ec"}, "downloads": -1, "filename": "deepface-0.0.6.tar.gz", "has_sig": false, "md5_digest": "19aced95d012d4c2333f30202b3939d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 14897, "upload_time": "2020-02-16T06:15:07", "upload_time_iso_8601": "2020-02-16T06:15:07.300974Z", "url": "https://files.pythonhosted.org/packages/60/28/caf97953ac31b4f281147cb2c485fd8dfa86c3c5ee33628a5c8beca1a321/deepface-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "4bf229e89b6c673992b757913e10bb2c", "sha256": "68b7a9bee354c462f85992d59029b2a54cd936573e497ccc5dd1faa93297ec37"}, "downloads": -1, "filename": "deepface-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "4bf229e89b6c673992b757913e10bb2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 20654, "upload_time": "2020-02-23T20:27:26", "upload_time_iso_8601": "2020-02-23T20:27:26.411438Z", "url": "https://files.pythonhosted.org/packages/f0/b5/694422d068d1199780e1d655344efb8577e969202f46f42639f8423c4852/deepface-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8973b69a9e0da093be1e36ad008ce1b", "sha256": "2d01b7a19ff6e011ee07bd6e088c7b924ddb7160ee80a63e234b3dcab0c04571"}, "downloads": -1, "filename": "deepface-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c8973b69a9e0da093be1e36ad008ce1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 15856, "upload_time": "2020-02-23T20:27:28", "upload_time_iso_8601": "2020-02-23T20:27:28.113655Z", "url": "https://files.pythonhosted.org/packages/65/22/9acb94c21f211b3e8b87ea951ca23df32725dbaa7df7d7a739f2810cc13b/deepface-0.0.7.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "37403fff881205920927d70061f69bb2", "sha256": "c6454a241e606aec0fe51f8cf8584e39da50e36521ddab900f4ce54748c0a977"}, "downloads": -1, "filename": "deepface-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "37403fff881205920927d70061f69bb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 20791, "upload_time": "2020-02-25T19:13:53", "upload_time_iso_8601": "2020-02-25T19:13:53.947861Z", "url": "https://files.pythonhosted.org/packages/f2/93/584acd249a9aa1a19ae5ea8679cd89b3dce70726bad7ea1458a56905d131/deepface-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab9f850ebb0b49dda353e82c5fde1614", "sha256": "1c1de856033c8136a7adce9777d17c9fe71d8e84c1a603b21c8d6ba7795df630"}, "downloads": -1, "filename": "deepface-0.0.9.tar.gz", "has_sig": false, "md5_digest": "ab9f850ebb0b49dda353e82c5fde1614", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 15984, "upload_time": "2020-02-25T19:13:55", "upload_time_iso_8601": "2020-02-25T19:13:55.460639Z", "url": "https://files.pythonhosted.org/packages/50/83/d3a83b793f3efa6d0be728bdf7b402983c8abed7c8e94d29935a89127acc/deepface-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1e1664efcb84af510ad2d9bcb928ace", "sha256": "c6c6c677829b40213837649baeb8a546e7b150f28d2f532b49a8b6099b6ef994"}, "downloads": -1, "filename": "deepface-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "b1e1664efcb84af510ad2d9bcb928ace", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 28035, "upload_time": "2020-05-04T08:51:47", "upload_time_iso_8601": "2020-05-04T08:51:47.684085Z", "url": "https://files.pythonhosted.org/packages/07/98/129c02a4666ee57bc1f2632c2d2c460934495634869dbb6841ff390a1a37/deepface-0.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e70a662966f619c9322d62a3bdfa655", "sha256": "c9040994c43e9f1b4f3f71cebf497118f662cf8c3927de54dd65dc70109802e7"}, "downloads": -1, "filename": "deepface-0.0.22.tar.gz", "has_sig": false, "md5_digest": "3e70a662966f619c9322d62a3bdfa655", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 22536, "upload_time": "2020-05-04T08:51:48", "upload_time_iso_8601": "2020-05-04T08:51:48.811548Z", "url": "https://files.pythonhosted.org/packages/89/7c/8b11a7a1ab377ea66eacdd6ff314cd41f3c1362dc3f6dd7714449ff782b6/deepface-0.0.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:25 2020"}