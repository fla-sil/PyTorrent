{"info": {"author": "Sven Kreiss", "author_email": "research@svenkreiss.com", "bugtrack_url": null, "classifiers": [], "description": "# openpifpaf\n\nContinuously tested on Linux, MacOS and Windows: [![Build Status](https://travis-ci.org/vita-epfl/openpifpaf.svg?branch=master)](https://travis-ci.org/vita-epfl/openpifpaf)<br />\n[CVPR 2019 paper](http://openaccess.thecvf.com/content_CVPR_2019/html/Kreiss_PifPaf_Composite_Fields_for_Human_Pose_Estimation_CVPR_2019_paper.html),\n[arxiv.org/abs/1903.06593](https://arxiv.org/abs/1903.06593)\n\n> We propose a new bottom-up method for multi-person 2D human pose\n> estimation that is particularly well suited for urban mobility such as self-driving cars\n> and delivery robots. The new method, PifPaf, uses a Part Intensity Field (PIF) to\n> localize body parts and a Part Association Field (PAF) to associate body parts with each other to form\n> full human poses.\n> Our method outperforms previous methods at low resolution and in crowded,\n> cluttered and occluded scenes\n> thanks to (i) our new composite field PAF encoding fine-grained information and (ii) the choice of Laplace loss for regressions which incorporates a notion of uncertainty.\n> Our architecture is based on a fully\n> convolutional, single-shot, box-free design.\n> We perform on par with the existing\n> state-of-the-art bottom-up method on the standard COCO keypoint task\n> and produce state-of-the-art results on a modified COCO keypoint task for\n> the transportation domain.\n\n\n# Demo\n\n![example image with overlaid pose skeleton](docs/coco/000000081988.jpg.skeleton.png)\n\nImage credit: \"[Learning to surf](https://www.flickr.com/photos/fotologic/6038911779/in/photostream/)\" by fotologic which is licensed under [CC-BY-2.0].<br />\nCreated with:\n`python3 -m openpifpaf.predict --show docs/coco/000000081988.jpg`\n\nMore demos:\n* [openpifpafwebdemo](https://github.com/vita-epfl/openpifpafwebdemo) project (best performance)\n* OpenPifPaf running in your browser: https://vita-epfl.github.io/openpifpafwebdemo/ (experimental)\n* the `openpifpaf.webcam` command (requires OpenCV)\n* [Google Colab demo](https://colab.research.google.com/drive/1H8T4ZE6wc0A9xJE4oGnhgHpUpAH5HL7W)\n\n<img src=\"docs/wave3.gif\" height=250 alt=\"example image\" />\n\n\n# Install\n\nPython 3 is required. Python 2 is not supported.\nDo not clone this repository\nand make sure there is no folder named `openpifpaf` in your current directory.\n\n```sh\npip3 install openpifpaf\n```\n\nFor a live demo, we recommend to try the\n[openpifpafwebdemo](https://github.com/vita-epfl/openpifpafwebdemo) project.\nAlternatively, `openpifpaf.webcam` provides a live demo as well.\nIt requires OpenCV.\n\nFor development of the openpifpaf source code itself, you need to clone this repository and then:\n\n```sh\npip3 install numpy cython\npip3 install --editable '.[train,test]'\n```\n\nThe last command installs the Python package in the current directory\n(signified by the dot) with the optional dependencies needed for training and\ntesting.\n\n\n# Interfaces\n\n* `python3 -m openpifpaf.predict --help`: [help screen](docs/cli-help-predict.txt)\n* `python3 -m openpifpaf.webcam --help`: [help screen](docs/cli-help-webcam.txt)\n* `python3 -m openpifpaf.train --help`: [help screen](docs/cli-help-train.txt)\n* `python3 -m openpifpaf.eval_coco --help`: [help screen](docs/cli-help-eval_coco.txt)\n* `python3 -m openpifpaf.logs --help`: [help screen](docs/cli-help-logs.txt)\n\nTools to work with models:\n\n* `python3 -m openpifpaf.migrate --help`: [help screen](docs/cli-help-migrate.txt)\n* `python3 -m openpifpaf.export_onnx --help`: [help screen](docs/cli-help-export_onnx.txt)\n\n\n# Pre-trained Models\n\nPerformance metrics with version 0.10.1 on the COCO val set obtained with a GTX1080Ti:\n\n| Backbone               | AP       | AP\u1d39      | AP\u1d38      | t_{total} [ms]  | t_{dec} [ms] |\n|-----------------------:|:--------:|:--------:|:--------:|:---------------:|:------------:|\n| [shufflenetv2x2]       | __60.4__ | 55.5     | 67.8     | 56              | 33           |\n| [resnet50]             | __64.4__ | 61.1     | 69.9     | 76              | 32           |\n| [(v0.8) resnext50]     | __63.8__ | 61.1     | 68.1     | 93              | 33           |\n| [resnet101]            | __67.8__ | 63.6     | 74.3     | 97              | 28           |\n| [(v0.8) resnet152]     | __67.8__ | 64.4     | 73.3     | 122             | 30           |\n\n[SHUFFLENETV2X1]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.1.0/shufflenetv2x1-pif-paf-edge401-190705-151607-d9a35d7e.pkl\n[shufflenetv2x2]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/shufflenetv2x2-pif-paf-paf25-edge401-191010-172527-ef704f06.pkl\n[resnet18]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.1/resnet18-pif-paf-paf25-edge401-191022-210137-84326f0f.pkl\n[resnet50]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/resnet50-pif-paf-paf25-edge401-191016-192503-d2b85396.pkl\n[(v0.8) resnext50]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.1.0/resnext50block5-pif-paf-edge401-190629-151121-24491655.pkl\n[resnet101]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/resnet101block5-pif-paf-paf25-edge401-191012-132602-a2bf7ecd.pkl\n[(v0.8) resnet152]: https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.1.0/resnet152block5-pif-paf-edge401-190625-185426-3e2f28ed.pkl\n\nPretrained model files are shared in the releases of the\n__[openpifpaf-torchhub](https://github.com/vita-epfl/openpifpaf-torchhub)__\nrepository. The pretrained models are downloaded automatically when\nusing the command line option `--checkpoint backbonenameasintableabove`.\n\nTo visualize logs:\n\n```sh\npython3 -m openpifpaf.logs \\\n  outputs/resnet50block5-pif-paf-edge401-190424-122009.pkl.log \\\n  outputs/resnet101block5-pif-paf-edge401-190412-151013.pkl.log \\\n  outputs/resnet152block5-pif-paf-edge401-190412-121848.pkl.log\n```\n\n\n# Train\n\nSee [datasets](docs/datasets.md) for setup instructions.\nSee [studies.ipynb](docs/studies.ipynb) for previous studies.\n\nThe exact training command that was used for a model is in the first\nline of the training log file.\n\nTrain a ResNet model:\n\n```sh\ntime CUDA_VISIBLE_DEVICES=0,1 python3 -m openpifpaf.train \\\n  --lr=1e-3 \\\n  --momentum=0.95 \\\n  --epochs=150 \\\n  --lr-decay 120 140 \\\n  --batch-size=16 \\\n  --basenet=resnet101 \\\n  --head-quad=1 \\\n  --headnets pif paf paf25 \\\n  --square-edge=401 \\\n  --lambdas 10 1 1 15 1 1 15 1 1\n```\n\nShuffleNet models are trained without ImageNet pretraining:\n\n```sh\ntime CUDA_VISIBLE_DEVICES=0,1 python3 -m openpifpaf.train \\\n  --batch-size=64 \\\n  --basenet=shufflenetv2x2 \\\n  --head-quad=1 \\\n  --epochs=150 \\\n  --momentum=0.9 \\\n  --headnets pif paf paf25 \\\n  --lambdas 30 2 2 50 3 3 50 3 3 \\\n  --loader-workers=16 \\\n  --lr=0.1 \\\n  --lr-decay 120 140 \\\n  --no-pretrain \\\n  --weight-decay=1e-5 \\\n  --update-batchnorm-runningstatistics \\\n  --ema=0.03\n```\n\nYou can refine an existing model with the `--checkpoint` option.\n\nTo produce evaluations at every epoch, check the directory for new\nsnapshots every 5 minutes:\n\n```\nwhile true; do \\\n  CUDA_VISIBLE_DEVICES=0 find outputs/ -name \"resnet101block5-pif-paf-l1-190109-113346.pkl.epoch???\" -exec \\\n    python3 -m openpifpaf.eval_coco --checkpoint {} -n 500 --long-edge=641 --skip-existing \\; \\\n  ; \\\n  sleep 300; \\\ndone\n```\n\n\n# Person Skeletons\n\nCOCO / kinematic tree / dense:\n\n<img src=\"docs/skeleton_coco.png\" height=\"250\" /><img src=\"docs/skeleton_kinematic_tree.png\" height=\"250\" /><img src=\"docs/skeleton_dense.png\" height=\"250\" />\n\nCreated with `python3 -m openpifpaf.data`.\n\n\n# Video\n\nProcessing a video frame by frame from `video.avi` to `video.pose.mp4` using ffmpeg:\n\n```sh\nexport VIDEO=video.avi  # change to your video file\n\nmkdir ${VIDEO}.images\nffmpeg -i ${VIDEO} -qscale:v 2 -vf scale=641:-1 -f image2 ${VIDEO}.images/%05d.jpg\npython3 -m openpifpaf.predict --checkpoint resnet152 --glob \"${VIDEO}.images/*.jpg\"\nffmpeg -framerate 24 -pattern_type glob -i ${VIDEO}.images/'*.jpg.skeleton.png' -vf scale=640:-2 -c:v libx264 -pix_fmt yuv420p ${VIDEO}.pose.mp4\n```\n\nIn this process, ffmpeg scales the video to `641px` which can be adjusted.\n\n\n# Documentation Pages\n\n* [datasets](docs/datasets.md)\n* [Google Colab demo](https://colab.research.google.com/drive/1H8T4ZE6wc0A9xJE4oGnhgHpUpAH5HL7W)\n* [studies.ipynb](docs/studies.ipynb)\n* [evaluation logs](docs/eval_logs.md)\n* [performance analysis](docs/performance.md)\n* [history](HISTORY.md)\n* [contributing](CONTRIBUTING.md)\n\n\n# Related Projects\n\n* [monoloco](https://github.com/vita-epfl/monoloco): \"Monocular 3D Pedestrian Localization and Uncertainty Estimation\" which uses OpenPifPaf for poses.\n* [openpifpafwebdemo](https://github.com/vita-epfl/openpifpafwebdemo): web front-end.\n\n\n# Citation\n\n```\n@InProceedings{kreiss2019pifpaf,\n  author = {Kreiss, Sven and Bertoni, Lorenzo and Alahi, Alexandre},\n  title = {PifPaf: Composite Fields for Human Pose Estimation},\n  booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n  month = {June},\n  year = {2019}\n}\n```\n\n\n[CC-BY-2.0]: https://creativecommons.org/licenses/by/2.0/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vita-epfl/openpifpaf", "keywords": "", "license": "GNU AGPLv3", "maintainer": "", "maintainer_email": "", "name": "openpifpaf", "package_url": "https://pypi.org/project/openpifpaf/", "platform": "", "project_url": "https://pypi.org/project/openpifpaf/", "project_urls": {"Homepage": "https://github.com/vita-epfl/openpifpaf"}, "release_url": "https://pypi.org/project/openpifpaf/0.10.1/", "requires_dist": null, "requires_python": "", "summary": "PifPaf: Composite Fields for Human Pose Estimation", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>openpifpaf</h1>\n<p>Continuously tested on Linux, MacOS and Windows: <a href=\"https://travis-ci.org/vita-epfl/openpifpaf\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49112c7050fea0987fbb85d1ebfd652bed3d51f9/68747470733a2f2f7472617669732d63692e6f72672f766974612d6570666c2f6f70656e7069667061662e7376673f6272616e63683d6d6173746572\"></a><br>\n<a href=\"http://openaccess.thecvf.com/content_CVPR_2019/html/Kreiss_PifPaf_Composite_Fields_for_Human_Pose_Estimation_CVPR_2019_paper.html\" rel=\"nofollow\">CVPR 2019 paper</a>,\n<a href=\"https://arxiv.org/abs/1903.06593\" rel=\"nofollow\">arxiv.org/abs/1903.06593</a></p>\n<blockquote>\n<p>We propose a new bottom-up method for multi-person 2D human pose\nestimation that is particularly well suited for urban mobility such as self-driving cars\nand delivery robots. The new method, PifPaf, uses a Part Intensity Field (PIF) to\nlocalize body parts and a Part Association Field (PAF) to associate body parts with each other to form\nfull human poses.\nOur method outperforms previous methods at low resolution and in crowded,\ncluttered and occluded scenes\nthanks to (i) our new composite field PAF encoding fine-grained information and (ii) the choice of Laplace loss for regressions which incorporates a notion of uncertainty.\nOur architecture is based on a fully\nconvolutional, single-shot, box-free design.\nWe perform on par with the existing\nstate-of-the-art bottom-up method on the standard COCO keypoint task\nand produce state-of-the-art results on a modified COCO keypoint task for\nthe transportation domain.</p>\n</blockquote>\n<h1>Demo</h1>\n<p><img alt=\"example image with overlaid pose skeleton\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7f128a072d9779918a8b60d084becb4a4952e99/646f63732f636f636f2f3030303030303038313938382e6a70672e736b656c65746f6e2e706e67\"></p>\n<p>Image credit: \"<a href=\"https://www.flickr.com/photos/fotologic/6038911779/in/photostream/\" rel=\"nofollow\">Learning to surf</a>\" by fotologic which is licensed under <a href=\"https://creativecommons.org/licenses/by/2.0/\" rel=\"nofollow\">CC-BY-2.0</a>.<br>\nCreated with:\n<code>python3 -m openpifpaf.predict --show docs/coco/000000081988.jpg</code></p>\n<p>More demos:</p>\n<ul>\n<li><a href=\"https://github.com/vita-epfl/openpifpafwebdemo\" rel=\"nofollow\">openpifpafwebdemo</a> project (best performance)</li>\n<li>OpenPifPaf running in your browser: <a href=\"https://vita-epfl.github.io/openpifpafwebdemo/\" rel=\"nofollow\">https://vita-epfl.github.io/openpifpafwebdemo/</a> (experimental)</li>\n<li>the <code>openpifpaf.webcam</code> command (requires OpenCV)</li>\n<li><a href=\"https://colab.research.google.com/drive/1H8T4ZE6wc0A9xJE4oGnhgHpUpAH5HL7W\" rel=\"nofollow\">Google Colab demo</a></li>\n</ul>\n<img alt=\"example image\" height=\"250\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c729137166052696cd3991e9b4897822eaedca4/646f63732f77617665332e676966\">\n<h1>Install</h1>\n<p>Python 3 is required. Python 2 is not supported.\nDo not clone this repository\nand make sure there is no folder named <code>openpifpaf</code> in your current directory.</p>\n<pre>pip3 install openpifpaf\n</pre>\n<p>For a live demo, we recommend to try the\n<a href=\"https://github.com/vita-epfl/openpifpafwebdemo\" rel=\"nofollow\">openpifpafwebdemo</a> project.\nAlternatively, <code>openpifpaf.webcam</code> provides a live demo as well.\nIt requires OpenCV.</p>\n<p>For development of the openpifpaf source code itself, you need to clone this repository and then:</p>\n<pre>pip3 install numpy cython\npip3 install --editable <span class=\"s1\">'.[train,test]'</span>\n</pre>\n<p>The last command installs the Python package in the current directory\n(signified by the dot) with the optional dependencies needed for training and\ntesting.</p>\n<h1>Interfaces</h1>\n<ul>\n<li><code>python3 -m openpifpaf.predict --help</code>: <a href=\"docs/cli-help-predict.txt\" rel=\"nofollow\">help screen</a></li>\n<li><code>python3 -m openpifpaf.webcam --help</code>: <a href=\"docs/cli-help-webcam.txt\" rel=\"nofollow\">help screen</a></li>\n<li><code>python3 -m openpifpaf.train --help</code>: <a href=\"docs/cli-help-train.txt\" rel=\"nofollow\">help screen</a></li>\n<li><code>python3 -m openpifpaf.eval_coco --help</code>: <a href=\"docs/cli-help-eval_coco.txt\" rel=\"nofollow\">help screen</a></li>\n<li><code>python3 -m openpifpaf.logs --help</code>: <a href=\"docs/cli-help-logs.txt\" rel=\"nofollow\">help screen</a></li>\n</ul>\n<p>Tools to work with models:</p>\n<ul>\n<li><code>python3 -m openpifpaf.migrate --help</code>: <a href=\"docs/cli-help-migrate.txt\" rel=\"nofollow\">help screen</a></li>\n<li><code>python3 -m openpifpaf.export_onnx --help</code>: <a href=\"docs/cli-help-export_onnx.txt\" rel=\"nofollow\">help screen</a></li>\n</ul>\n<h1>Pre-trained Models</h1>\n<p>Performance metrics with version 0.10.1 on the COCO val set obtained with a GTX1080Ti:</p>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Backbone</th>\n<th align=\"center\">AP</th>\n<th align=\"center\">AP\u1d39</th>\n<th align=\"center\">AP\u1d38</th>\n<th align=\"center\">t_{total} [ms]</th>\n<th align=\"center\">t_{dec} [ms]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/shufflenetv2x2-pif-paf-paf25-edge401-191010-172527-ef704f06.pkl\" rel=\"nofollow\">shufflenetv2x2</a></td>\n<td align=\"center\"><strong>60.4</strong></td>\n<td align=\"center\">55.5</td>\n<td align=\"center\">67.8</td>\n<td align=\"center\">56</td>\n<td align=\"center\">33</td>\n</tr>\n<tr>\n<td align=\"right\"><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/resnet50-pif-paf-paf25-edge401-191016-192503-d2b85396.pkl\" rel=\"nofollow\">resnet50</a></td>\n<td align=\"center\"><strong>64.4</strong></td>\n<td align=\"center\">61.1</td>\n<td align=\"center\">69.9</td>\n<td align=\"center\">76</td>\n<td align=\"center\">32</td>\n</tr>\n<tr>\n<td align=\"right\"><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.1.0/resnext50block5-pif-paf-edge401-190629-151121-24491655.pkl\" rel=\"nofollow\">(v0.8) resnext50</a></td>\n<td align=\"center\"><strong>63.8</strong></td>\n<td align=\"center\">61.1</td>\n<td align=\"center\">68.1</td>\n<td align=\"center\">93</td>\n<td align=\"center\">33</td>\n</tr>\n<tr>\n<td align=\"right\"><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.10.0/resnet101block5-pif-paf-paf25-edge401-191012-132602-a2bf7ecd.pkl\" rel=\"nofollow\">resnet101</a></td>\n<td align=\"center\"><strong>67.8</strong></td>\n<td align=\"center\">63.6</td>\n<td align=\"center\">74.3</td>\n<td align=\"center\">97</td>\n<td align=\"center\">28</td>\n</tr>\n<tr>\n<td align=\"right\"><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub/releases/download/v0.1.0/resnet152block5-pif-paf-edge401-190625-185426-3e2f28ed.pkl\" rel=\"nofollow\">(v0.8) resnet152</a></td>\n<td align=\"center\"><strong>67.8</strong></td>\n<td align=\"center\">64.4</td>\n<td align=\"center\">73.3</td>\n<td align=\"center\">122</td>\n<td align=\"center\">30</td>\n</tr></tbody></table>\n<p>Pretrained model files are shared in the releases of the\n<strong><a href=\"https://github.com/vita-epfl/openpifpaf-torchhub\" rel=\"nofollow\">openpifpaf-torchhub</a></strong>\nrepository. The pretrained models are downloaded automatically when\nusing the command line option <code>--checkpoint backbonenameasintableabove</code>.</p>\n<p>To visualize logs:</p>\n<pre>python3 -m openpifpaf.logs <span class=\"se\">\\</span>\n  outputs/resnet50block5-pif-paf-edge401-190424-122009.pkl.log <span class=\"se\">\\</span>\n  outputs/resnet101block5-pif-paf-edge401-190412-151013.pkl.log <span class=\"se\">\\</span>\n  outputs/resnet152block5-pif-paf-edge401-190412-121848.pkl.log\n</pre>\n<h1>Train</h1>\n<p>See <a href=\"docs/datasets.md\" rel=\"nofollow\">datasets</a> for setup instructions.\nSee <a href=\"docs/studies.ipynb\" rel=\"nofollow\">studies.ipynb</a> for previous studies.</p>\n<p>The exact training command that was used for a model is in the first\nline of the training log file.</p>\n<p>Train a ResNet model:</p>\n<pre><span class=\"nb\">time</span> <span class=\"nv\">CUDA_VISIBLE_DEVICES</span><span class=\"o\">=</span><span class=\"m\">0</span>,1 python3 -m openpifpaf.train <span class=\"se\">\\</span>\n  --lr<span class=\"o\">=</span>1e-3 <span class=\"se\">\\</span>\n  --momentum<span class=\"o\">=</span><span class=\"m\">0</span>.95 <span class=\"se\">\\</span>\n  --epochs<span class=\"o\">=</span><span class=\"m\">150</span> <span class=\"se\">\\</span>\n  --lr-decay <span class=\"m\">120</span> <span class=\"m\">140</span> <span class=\"se\">\\</span>\n  --batch-size<span class=\"o\">=</span><span class=\"m\">16</span> <span class=\"se\">\\</span>\n  --basenet<span class=\"o\">=</span>resnet101 <span class=\"se\">\\</span>\n  --head-quad<span class=\"o\">=</span><span class=\"m\">1</span> <span class=\"se\">\\</span>\n  --headnets pif paf paf25 <span class=\"se\">\\</span>\n  --square-edge<span class=\"o\">=</span><span class=\"m\">401</span> <span class=\"se\">\\</span>\n  --lambdas <span class=\"m\">10</span> <span class=\"m\">1</span> <span class=\"m\">1</span> <span class=\"m\">15</span> <span class=\"m\">1</span> <span class=\"m\">1</span> <span class=\"m\">15</span> <span class=\"m\">1</span> <span class=\"m\">1</span>\n</pre>\n<p>ShuffleNet models are trained without ImageNet pretraining:</p>\n<pre><span class=\"nb\">time</span> <span class=\"nv\">CUDA_VISIBLE_DEVICES</span><span class=\"o\">=</span><span class=\"m\">0</span>,1 python3 -m openpifpaf.train <span class=\"se\">\\</span>\n  --batch-size<span class=\"o\">=</span><span class=\"m\">64</span> <span class=\"se\">\\</span>\n  --basenet<span class=\"o\">=</span>shufflenetv2x2 <span class=\"se\">\\</span>\n  --head-quad<span class=\"o\">=</span><span class=\"m\">1</span> <span class=\"se\">\\</span>\n  --epochs<span class=\"o\">=</span><span class=\"m\">150</span> <span class=\"se\">\\</span>\n  --momentum<span class=\"o\">=</span><span class=\"m\">0</span>.9 <span class=\"se\">\\</span>\n  --headnets pif paf paf25 <span class=\"se\">\\</span>\n  --lambdas <span class=\"m\">30</span> <span class=\"m\">2</span> <span class=\"m\">2</span> <span class=\"m\">50</span> <span class=\"m\">3</span> <span class=\"m\">3</span> <span class=\"m\">50</span> <span class=\"m\">3</span> <span class=\"m\">3</span> <span class=\"se\">\\</span>\n  --loader-workers<span class=\"o\">=</span><span class=\"m\">16</span> <span class=\"se\">\\</span>\n  --lr<span class=\"o\">=</span><span class=\"m\">0</span>.1 <span class=\"se\">\\</span>\n  --lr-decay <span class=\"m\">120</span> <span class=\"m\">140</span> <span class=\"se\">\\</span>\n  --no-pretrain <span class=\"se\">\\</span>\n  --weight-decay<span class=\"o\">=</span>1e-5 <span class=\"se\">\\</span>\n  --update-batchnorm-runningstatistics <span class=\"se\">\\</span>\n  --ema<span class=\"o\">=</span><span class=\"m\">0</span>.03\n</pre>\n<p>You can refine an existing model with the <code>--checkpoint</code> option.</p>\n<p>To produce evaluations at every epoch, check the directory for new\nsnapshots every 5 minutes:</p>\n<pre><code>while true; do \\\n  CUDA_VISIBLE_DEVICES=0 find outputs/ -name \"resnet101block5-pif-paf-l1-190109-113346.pkl.epoch???\" -exec \\\n    python3 -m openpifpaf.eval_coco --checkpoint {} -n 500 --long-edge=641 --skip-existing \\; \\\n  ; \\\n  sleep 300; \\\ndone\n</code></pre>\n<h1>Person Skeletons</h1>\n<p>COCO / kinematic tree / dense:</p>\n<p><img height=\"250\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45f08e2ece519477f1129ed354afbb6c2d983be1/646f63732f736b656c65746f6e5f636f636f2e706e67\"><img height=\"250\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d44735492619254ef443abd4f0e69df4cfc2f606/646f63732f736b656c65746f6e5f6b696e656d617469635f747265652e706e67\"><img height=\"250\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04f8ae9f765bee5dc62684f06fbe15046258cbe6/646f63732f736b656c65746f6e5f64656e73652e706e67\"></p>\n<p>Created with <code>python3 -m openpifpaf.data</code>.</p>\n<h1>Video</h1>\n<p>Processing a video frame by frame from <code>video.avi</code> to <code>video.pose.mp4</code> using ffmpeg:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">VIDEO</span><span class=\"o\">=</span>video.avi  <span class=\"c1\"># change to your video file</span>\n\nmkdir <span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span>.images\nffmpeg -i <span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span> -qscale:v <span class=\"m\">2</span> -vf <span class=\"nv\">scale</span><span class=\"o\">=</span><span class=\"m\">641</span>:-1 -f image2 <span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span>.images/%05d.jpg\npython3 -m openpifpaf.predict --checkpoint resnet152 --glob <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span><span class=\"s2\">.images/*.jpg\"</span>\nffmpeg -framerate <span class=\"m\">24</span> -pattern_type glob -i <span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span>.images/<span class=\"s1\">'*.jpg.skeleton.png'</span> -vf <span class=\"nv\">scale</span><span class=\"o\">=</span><span class=\"m\">640</span>:-2 -c:v libx264 -pix_fmt yuv420p <span class=\"si\">${</span><span class=\"nv\">VIDEO</span><span class=\"si\">}</span>.pose.mp4\n</pre>\n<p>In this process, ffmpeg scales the video to <code>641px</code> which can be adjusted.</p>\n<h1>Documentation Pages</h1>\n<ul>\n<li><a href=\"docs/datasets.md\" rel=\"nofollow\">datasets</a></li>\n<li><a href=\"https://colab.research.google.com/drive/1H8T4ZE6wc0A9xJE4oGnhgHpUpAH5HL7W\" rel=\"nofollow\">Google Colab demo</a></li>\n<li><a href=\"docs/studies.ipynb\" rel=\"nofollow\">studies.ipynb</a></li>\n<li><a href=\"docs/eval_logs.md\" rel=\"nofollow\">evaluation logs</a></li>\n<li><a href=\"docs/performance.md\" rel=\"nofollow\">performance analysis</a></li>\n<li><a href=\"HISTORY.md\" rel=\"nofollow\">history</a></li>\n<li><a href=\"CONTRIBUTING.md\" rel=\"nofollow\">contributing</a></li>\n</ul>\n<h1>Related Projects</h1>\n<ul>\n<li><a href=\"https://github.com/vita-epfl/monoloco\" rel=\"nofollow\">monoloco</a>: \"Monocular 3D Pedestrian Localization and Uncertainty Estimation\" which uses OpenPifPaf for poses.</li>\n<li><a href=\"https://github.com/vita-epfl/openpifpafwebdemo\" rel=\"nofollow\">openpifpafwebdemo</a>: web front-end.</li>\n</ul>\n<h1>Citation</h1>\n<pre><code>@InProceedings{kreiss2019pifpaf,\n  author = {Kreiss, Sven and Bertoni, Lorenzo and Alahi, Alexandre},\n  title = {PifPaf: Composite Fields for Human Pose Estimation},\n  booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n  month = {June},\n  year = {2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6265543, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "c6bc9511c2c99d60e2cab330e7fc2749", "sha256": "c8cc4ac2476ef735171e74b290c68f02ef60e4cdd1ee9fe4ec4379227dd569d6"}, "downloads": -1, "filename": "openpifpaf-0.10.0.tar.gz", "has_sig": false, "md5_digest": "c6bc9511c2c99d60e2cab330e7fc2749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 187817, "upload_time": "2019-10-21T12:00:08", "upload_time_iso_8601": "2019-10-21T12:00:08.977512Z", "url": "https://files.pythonhosted.org/packages/89/10/69322ce1dbb8ac047ccb6f1a0dbb5d446b1c568baeae275178c1de499d74/openpifpaf-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "8b90cfe4d79408bbfe2063091cf60914", "sha256": "402b29c139a6f6117bc3f2ebb3bdda0cf1f5009fad30d80ee4de6925826638ad"}, "downloads": -1, "filename": "openpifpaf-0.10.1.tar.gz", "has_sig": false, "md5_digest": "8b90cfe4d79408bbfe2063091cf60914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189715, "upload_time": "2019-12-09T09:42:15", "upload_time_iso_8601": "2019-12-09T09:42:15.703178Z", "url": "https://files.pythonhosted.org/packages/02/28/13ca69f1e8b3dc0c0a45c034c84093a98f217206d733015983b181682fb5/openpifpaf-0.10.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e477e5b4f1e0abe6be52ecbca27b3cc0", "sha256": "7e225a7fa7e958148e44488e9f2f8d8a15d01e03cb03f0678a1077cc19778761"}, "downloads": -1, "filename": "openpifpaf-0.2.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "e477e5b4f1e0abe6be52ecbca27b3cc0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 166663, "upload_time": "2019-03-15T16:58:08", "upload_time_iso_8601": "2019-03-15T16:58:08.062921Z", "url": "https://files.pythonhosted.org/packages/ea/21/6e8ba81042a002699f8b3133b0f16c1263316494335e792206a6c74a59a2/openpifpaf-0.2.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad4df5d02b741b6cabe3cc544751080d", "sha256": "1d4aa4b67750ab4eeb7d9fb199e721b6ef31d9c65af4858ee4871cf66ffd780f"}, "downloads": -1, "filename": "openpifpaf-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ad4df5d02b741b6cabe3cc544751080d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162418, "upload_time": "2019-03-15T16:58:10", "upload_time_iso_8601": "2019-03-15T16:58:10.449630Z", "url": "https://files.pythonhosted.org/packages/b8/ed/bc1fb03f4b8a72b15a837973a26b06e41c46171029fbb12e34855e4229a2/openpifpaf-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1f4eee32da6d2f30a9c17cb155b43b36", "sha256": "b626a2f21cc2f4f2e1464a9d0cdc9c0aa6594fdac0a5b92e1f7a6d759672fe8e"}, "downloads": -1, "filename": "openpifpaf-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1f4eee32da6d2f30a9c17cb155b43b36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162596, "upload_time": "2019-03-16T07:05:22", "upload_time_iso_8601": "2019-03-16T07:05:22.882302Z", "url": "https://files.pythonhosted.org/packages/5c/3a/9ea5857ebd82168dc085afc25dd69f945ba337b91ebc91acc8ae2819ab3e/openpifpaf-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "454d46702a1c7be91db4514167413f57", "sha256": "2e0a1b6e491545e6362707e927f9651ab7ebdf1e513f50a841e44a32d58a6416"}, "downloads": -1, "filename": "openpifpaf-0.2.2.tar.gz", "has_sig": false, "md5_digest": "454d46702a1c7be91db4514167413f57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162819, "upload_time": "2019-03-17T11:20:48", "upload_time_iso_8601": "2019-03-17T11:20:48.548734Z", "url": "https://files.pythonhosted.org/packages/08/e6/d7a782285accb0cf4c812a57bf404da7d94971a14dd24ea8bd1eb4d0b2eb/openpifpaf-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "20204907f618dce5e8bb09603ebe5c7f", "sha256": "cee55c595ef03b643f84c65b03750399670fa492b234e7f82b404d0d8858b72f"}, "downloads": -1, "filename": "openpifpaf-0.2.3.tar.gz", "has_sig": false, "md5_digest": "20204907f618dce5e8bb09603ebe5c7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163223, "upload_time": "2019-03-19T12:16:09", "upload_time_iso_8601": "2019-03-19T12:16:09.696736Z", "url": "https://files.pythonhosted.org/packages/c8/4d/14c9b8e83109d9d767fb2b01b24fef5a8e1036d82c32693ee71e9876f9a7/openpifpaf-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "216b4aee135e449bee673886741212b8", "sha256": "af13ff1f0911c9a1decf93d821ae8c9d6646718db7a0ffd7fd2be163deddf366"}, "downloads": -1, "filename": "openpifpaf-0.3.0.tar.gz", "has_sig": false, "md5_digest": "216b4aee135e449bee673886741212b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 164479, "upload_time": "2019-04-03T05:38:40", "upload_time_iso_8601": "2019-04-03T05:38:40.311005Z", "url": "https://files.pythonhosted.org/packages/dc/69/a4add299023194b4e8e19a40f4eeab47c18351ba7ab232eee569470c4f19/openpifpaf-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "382b22d221f62a8335b856add074c9bc", "sha256": "296b53c49720370a2ceaeeb2c589488938b167668e4b9a8cfff1a93ea3b51f8b"}, "downloads": -1, "filename": "openpifpaf-0.3.1.tar.gz", "has_sig": false, "md5_digest": "382b22d221f62a8335b856add074c9bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 164518, "upload_time": "2019-04-03T07:09:17", "upload_time_iso_8601": "2019-04-03T07:09:17.200092Z", "url": "https://files.pythonhosted.org/packages/ef/69/7887a4af5314fc7550aef9ac911ee4d0b1dd2b290f24949b90e390245131/openpifpaf-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0dc099202e58202a038b156b12c2e2a0", "sha256": "b6ec9d800800680177168c25d2883892881ba43bc2d878791b039529c1949029"}, "downloads": -1, "filename": "openpifpaf-0.3.2.tar.gz", "has_sig": false, "md5_digest": "0dc099202e58202a038b156b12c2e2a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165704, "upload_time": "2019-04-05T12:04:09", "upload_time_iso_8601": "2019-04-05T12:04:09.453864Z", "url": "https://files.pythonhosted.org/packages/2d/4b/34586d19688cc7445f3b05afa6f3f69653245ba15929bf9c9c2541a386a7/openpifpaf-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b209f5458ee6de44e4d7c1ee19a2dc60", "sha256": "4f20ed2e705374840e15e1755390182d15542f4ca3e611a41a0c420f3d526cdc"}, "downloads": -1, "filename": "openpifpaf-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b209f5458ee6de44e4d7c1ee19a2dc60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165569, "upload_time": "2019-04-08T18:36:06", "upload_time_iso_8601": "2019-04-08T18:36:06.061966Z", "url": "https://files.pythonhosted.org/packages/cb/ed/75f6336a49581955824bd803896ddade9bc6962ccfde67271a2e9d648c27/openpifpaf-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "57cf4b5e6bc35415ffedfb766669155f", "sha256": "b23124d24b6344bee8e333a9fa04793e7f397f65ae1d7ec0e4c9c15a7385ae5b"}, "downloads": -1, "filename": "openpifpaf-0.5.0.tar.gz", "has_sig": false, "md5_digest": "57cf4b5e6bc35415ffedfb766669155f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169584, "upload_time": "2019-04-26T11:25:44", "upload_time_iso_8601": "2019-04-26T11:25:44.733970Z", "url": "https://files.pythonhosted.org/packages/c2/b5/b70bee48f14fd9d7e6a028087b25d17e11bf95a1adee4ae60edf50368943/openpifpaf-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6f5b33fccad1108365853ee9c6c3de29", "sha256": "717400bdd864504e45892404e1ad9c1ca01d634a6c6a9a180558df7482e14d56"}, "downloads": -1, "filename": "openpifpaf-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6f5b33fccad1108365853ee9c6c3de29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169612, "upload_time": "2019-05-01T11:03:31", "upload_time_iso_8601": "2019-05-01T11:03:31.701530Z", "url": "https://files.pythonhosted.org/packages/05/2e/5d03e9c16df1689ab513c11ac975b94e897157b0713f4f87a8509a03bf3a/openpifpaf-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "d18b9c69fc62d465a09e7bb58b16f410", "sha256": "eff39da5b2bad6d243aabc0183a2675e32ba887f5a2be3241710bdfa599e77cb"}, "downloads": -1, "filename": "openpifpaf-0.5.2.tar.gz", "has_sig": false, "md5_digest": "d18b9c69fc62d465a09e7bb58b16f410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169613, "upload_time": "2019-05-07T19:07:33", "upload_time_iso_8601": "2019-05-07T19:07:33.995946Z", "url": "https://files.pythonhosted.org/packages/a9/e0/45b6c8731ce79d50a66aca88f484ba8c7fd8f290d34f8a49571262c91fd1/openpifpaf-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "ac05a0980baa41178ab4369240d7c3a2", "sha256": "c9bddfab0806ce97fc075651e6e1a896abdaf0763284cb56be5755e25add8969"}, "downloads": -1, "filename": "openpifpaf-0.6.0.tar.gz", "has_sig": false, "md5_digest": "ac05a0980baa41178ab4369240d7c3a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173393, "upload_time": "2019-05-07T13:55:48", "upload_time_iso_8601": "2019-05-07T13:55:48.140362Z", "url": "https://files.pythonhosted.org/packages/3b/cd/c0efd03e4afa48a2b37c31d083452908363b577d9933a6c5a0067fd9c992/openpifpaf-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "c6855fe9ccff4e09acb61117b439c893", "sha256": "91cea40bd8f7740f4f57d50f4fd1779ea58601f581f61f93e59200121d47a75b"}, "downloads": -1, "filename": "openpifpaf-0.6.1.tar.gz", "has_sig": false, "md5_digest": "c6855fe9ccff4e09acb61117b439c893", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 175108, "upload_time": "2019-05-13T13:07:44", "upload_time_iso_8601": "2019-05-13T13:07:44.879380Z", "url": "https://files.pythonhosted.org/packages/69/01/2433ff056039ba639f1119fbe9ca0ef49963e31016cfe8fddf3ff31d0148/openpifpaf-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "88fe181f3b14569086839b996bb6ccde", "sha256": "7090ce79480a20f9677ad6e2cc0fd75145d4eb6cde8450615b9955ac27068463"}, "downloads": -1, "filename": "openpifpaf-0.6.2.tar.gz", "has_sig": false, "md5_digest": "88fe181f3b14569086839b996bb6ccde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180368, "upload_time": "2019-05-23T21:02:02", "upload_time_iso_8601": "2019-05-23T21:02:02.103978Z", "url": "https://files.pythonhosted.org/packages/2e/e6/96a0a027b094c598516ad4a3dba90fc04e91673a7b6c7353aaf9d8f7dc39/openpifpaf-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "acbb0cf253fa90dea8491a19bf8d816b", "sha256": "24647c824dd9059f10509336fa7b336323830995d6ae43aca023af39b020ec95"}, "downloads": -1, "filename": "openpifpaf-0.6.3.tar.gz", "has_sig": false, "md5_digest": "acbb0cf253fa90dea8491a19bf8d816b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180939, "upload_time": "2019-05-28T13:57:02", "upload_time_iso_8601": "2019-05-28T13:57:02.657267Z", "url": "https://files.pythonhosted.org/packages/d5/9d/daf0fdd4aeb7515cbcba9a4daeebc6b3e1344abe903caa1f12d558c1d602/openpifpaf-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "0ae15630d3d01a089747415b7106a56f", "sha256": "c153652105db8afef0e514fc3b1da01c6cab10af1c4b7eb91873fdcc3757c715"}, "downloads": -1, "filename": "openpifpaf-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0ae15630d3d01a089747415b7106a56f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 177908, "upload_time": "2019-06-06T13:19:15", "upload_time_iso_8601": "2019-06-06T13:19:15.186222Z", "url": "https://files.pythonhosted.org/packages/c5/34/e45fd69c602138410ef300205e3cd86db8e91e52691671a5a20b7e55778f/openpifpaf-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "8e90bf63ba1ea5dfbf89e4c22db23a71", "sha256": "82087cc9d02d2a9deaab63500137696463aeeb08291bb03db302891cc3472cd0"}, "downloads": -1, "filename": "openpifpaf-0.8.0.tar.gz", "has_sig": false, "md5_digest": "8e90bf63ba1ea5dfbf89e4c22db23a71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 177288, "upload_time": "2019-07-08T12:03:01", "upload_time_iso_8601": "2019-07-08T12:03:01.405262Z", "url": "https://files.pythonhosted.org/packages/c7/6d/fd6390233b214de19f6745be730978d6737a669c369af8309a31d57773ed/openpifpaf-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "ab427e9a6b43e7842a17e95e9cebf46b", "sha256": "7d6dda2babd9cc9a9dac3247dd3b4379a4222c5e62d7bb9208d3a91f6ac1ad4b"}, "downloads": -1, "filename": "openpifpaf-0.9.0.tar.gz", "has_sig": false, "md5_digest": "ab427e9a6b43e7842a17e95e9cebf46b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178464, "upload_time": "2019-07-30T10:03:45", "upload_time_iso_8601": "2019-07-30T10:03:45.178147Z", "url": "https://files.pythonhosted.org/packages/4f/20/1afac866246c8e5b4a0d09d6bb855d621fa38aa48613107e045198073296/openpifpaf-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b90cfe4d79408bbfe2063091cf60914", "sha256": "402b29c139a6f6117bc3f2ebb3bdda0cf1f5009fad30d80ee4de6925826638ad"}, "downloads": -1, "filename": "openpifpaf-0.10.1.tar.gz", "has_sig": false, "md5_digest": "8b90cfe4d79408bbfe2063091cf60914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189715, "upload_time": "2019-12-09T09:42:15", "upload_time_iso_8601": "2019-12-09T09:42:15.703178Z", "url": "https://files.pythonhosted.org/packages/02/28/13ca69f1e8b3dc0c0a45c034c84093a98f217206d733015983b181682fb5/openpifpaf-0.10.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:42 2020"}