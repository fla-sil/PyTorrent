{"info": {"author": "Adam Birdsall", "author_email": "abirdsall@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Atmospheric Science", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "pyvap 0.1.1: kinetic model of particle evaporation\n==================================================\n\n.. image:: https://img.shields.io/pypi/v/pyvap.svg\n    :target: https://pypi.python.org/pypi/pyvap/\n\n.. image:: https://travis-ci.org/awbirdsall/pyvap.svg?branch=master\n    :target: https://travis-ci.org/awbirdsall/pyvap\n\npyvap models evaporation of components from a multicomponent spherical\nparticle. The model follows the treatment of Maxwellian flux given in\n*Atmospheric Chemistry & Physics* by Seinfeld and Pandis. The model is\nwritten in Python 3, with Scipy's ode solver.\n\nUsage\n-----\n\nExample code to model the evaporation of an equimolar mixture of\npolyethylene trimer and hexamer (PEG-3 and PEG-6) in a particle with\nstarting radius 5 micron, and create a figure of the output:\n\n::\n\n    import pyvap\n    import matplotlib.pyplot as plt\n    import numpy as np\n\n    # define model parameters\n    peg3 = {\"name\": \"PEG-3\",\n            \"Dg\": 5.95e-6,\n            \"M\": 0.1502,\n            \"rho\": 1108.0,\n            \"cinf\": 0,\n            \"p298\": 6.68e-2,\n            \"delh\": 78.3e+3}\n    peg6 = {\"name\": \"PEG-6\",\n            \"Dg\": 4.26e-6,\n            \"M\": 0.2823,\n            \"rho\": 1180.0,\n            \"cinf\": 0,\n            \"p298\": 3.05e-5,\n            \"delh\": 102.1e+3}\n    cmpds = [peg3, peg6]\n    # equimolar mixture of PEG-3 and PEG-6\n    comp = [0.5, 0.5]\n    r_init = 5e-6 # starting radius, m\n    time = 2*60*60 # integration time, s\n    numpts = 2000 # number of points to integrate\n    temp = 298 # K\n\n    # run model\n    model = pyvap.analyze_evap(cmpds, comp, r_init, time, numpts, temp,\n                               makefig=True)\n\n    # display generated figure during, e.g., interactive ipython session\n    plt.show()\n\n    # save generated figure\n    evap_fig, (evap_ax0, evap_ax1) = model[\"evap_fig\"]\n    evap_fig.savefig(\"evaporation.png\")\n\n    # save csv of evaporation model output (no. of molecules of each component,\n    # at each timestep)\n    np.savetxt(\"evaporation.csv\", model[\"evap_a\"], delimiter=\",\")\n\nInstallation\n------------\n\nInstall using ``pip``.\n\nInstall from PyPI:\n\n::\n\n    pip install pyvap\n\nInstall most recent Github commit (stability not guaranteed):\n\n::\n\n    pip install git+https://github.com/awbirdsall/pyvap\n\nDependencies\n------------\n\nTested on Python 2.7 and 3.5.\n\nRequires ``numpy``, ``scipy``, and ``matplotlib>=1.5`` (automatically handled\nif using ``pip`` to install). I recommend using conda_ to install the Scipy\nstack on a Windows machine if ``pip`` is having issues.\n\n.. _conda: http://conda.pydata.org/docs/index.html\n\nRunning the tests requires ``pytest``.\n\nTesting\n-------\n\nTests are located in the ``tests/`` subfolder and can be run using ``pytest``. Tests also require ``numpy``.\n\nDevelopment\n-----------\n\nPosting issues or pull requests to the `github page`_ is welcome!\n\n.. _github page: https://github.com/awbirdsall/pyvap\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/awbirdsall/pyvap", "keywords": "kinetics,chemistry,evaporation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyvap", "package_url": "https://pypi.org/project/pyvap/", "platform": "", "project_url": "https://pypi.org/project/pyvap/", "project_urls": {"Homepage": "https://github.com/awbirdsall/pyvap"}, "release_url": "https://pypi.org/project/pyvap/0.1.1/", "requires_dist": ["matplotlib (>=1.5)", "numpy", "scipy"], "requires_python": "", "summary": "Kinetic model of particle evaporation", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pyvap/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pyvap.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8492d7fec9718140a8f6d96e797a2f0ce469372/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70797661702e737667\"></a>\n<a href=\"https://travis-ci.org/awbirdsall/pyvap\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/awbirdsall/pyvap.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc5325c9a0e0630b24ae432ebeafa0d44e452d20/68747470733a2f2f7472617669732d63692e6f72672f61776269726473616c6c2f70797661702e7376673f6272616e63683d6d6173746572\"></a>\n<p>pyvap models evaporation of components from a multicomponent spherical\nparticle. The model follows the treatment of Maxwellian flux given in\n<em>Atmospheric Chemistry &amp; Physics</em> by Seinfeld and Pandis. The model is\nwritten in Python 3, with Scipy\u2019s ode solver.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Example code to model the evaporation of an equimolar mixture of\npolyethylene trimer and hexamer (PEG-3 and PEG-6) in a particle with\nstarting radius 5 micron, and create a figure of the output:</p>\n<pre>import pyvap\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# define model parameters\npeg3 = {\"name\": \"PEG-3\",\n        \"Dg\": 5.95e-6,\n        \"M\": 0.1502,\n        \"rho\": 1108.0,\n        \"cinf\": 0,\n        \"p298\": 6.68e-2,\n        \"delh\": 78.3e+3}\npeg6 = {\"name\": \"PEG-6\",\n        \"Dg\": 4.26e-6,\n        \"M\": 0.2823,\n        \"rho\": 1180.0,\n        \"cinf\": 0,\n        \"p298\": 3.05e-5,\n        \"delh\": 102.1e+3}\ncmpds = [peg3, peg6]\n# equimolar mixture of PEG-3 and PEG-6\ncomp = [0.5, 0.5]\nr_init = 5e-6 # starting radius, m\ntime = 2*60*60 # integration time, s\nnumpts = 2000 # number of points to integrate\ntemp = 298 # K\n\n# run model\nmodel = pyvap.analyze_evap(cmpds, comp, r_init, time, numpts, temp,\n                           makefig=True)\n\n# display generated figure during, e.g., interactive ipython session\nplt.show()\n\n# save generated figure\nevap_fig, (evap_ax0, evap_ax1) = model[\"evap_fig\"]\nevap_fig.savefig(\"evaporation.png\")\n\n# save csv of evaporation model output (no. of molecules of each component,\n# at each timestep)\nnp.savetxt(\"evaporation.csv\", model[\"evap_a\"], delimiter=\",\")\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <tt>pip</tt>.</p>\n<p>Install from PyPI:</p>\n<pre>pip install pyvap\n</pre>\n<p>Install most recent Github commit (stability not guaranteed):</p>\n<pre>pip install git+https://github.com/awbirdsall/pyvap\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Tested on Python 2.7 and 3.5.</p>\n<p>Requires <tt>numpy</tt>, <tt>scipy</tt>, and <tt><span class=\"pre\">matplotlib&gt;=1.5</span></tt> (automatically handled\nif using <tt>pip</tt> to install). I recommend using <a href=\"http://conda.pydata.org/docs/index.html\" rel=\"nofollow\">conda</a> to install the Scipy\nstack on a Windows machine if <tt>pip</tt> is having issues.</p>\n<p>Running the tests requires <tt>pytest</tt>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Tests are located in the <tt>tests/</tt> subfolder and can be run using <tt>pytest</tt>. Tests also require <tt>numpy</tt>.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Posting issues or pull requests to the <a href=\"https://github.com/awbirdsall/pyvap\" rel=\"nofollow\">github page</a> is welcome!</p>\n</div>\n\n          </div>"}, "last_serial": 3123977, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "643efc09b68fbca21c5e0fe8e10178c1", "sha256": "07d13c4d060408f729b80b89336900b7b9376e82caf0246184507a5891e2430e"}, "downloads": -1, "filename": "pyvap-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "643efc09b68fbca21c5e0fe8e10178c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6942, "upload_time": "2017-08-24T20:41:39", "upload_time_iso_8601": "2017-08-24T20:41:39.851956Z", "url": "https://files.pythonhosted.org/packages/77/a6/d53a0060b99e75132c7ba894811469d3d7a710c57a8a68f96ff2ad58d5a8/pyvap-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bef38b20f2fb0aa89c0f82ef7baf97e9", "sha256": "46e06d5f3053a896366a640d2b7cb793cf7150e6b4063dad999b69355a6511dd"}, "downloads": -1, "filename": "pyvap-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bef38b20f2fb0aa89c0f82ef7baf97e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7211, "upload_time": "2017-08-24T20:41:40", "upload_time_iso_8601": "2017-08-24T20:41:40.873637Z", "url": "https://files.pythonhosted.org/packages/a3/b6/97ef1ee02d12cf2a6efee20f78e7a42cd3b8f26b945f431028c15fe52b4b/pyvap-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2b8d70e7f9cdc562ec3f5002c05c8cba", "sha256": "72da6b13b34b038d641b65f5e339e8b2fc73781db305421903f7561870d536e1"}, "downloads": -1, "filename": "pyvap-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b8d70e7f9cdc562ec3f5002c05c8cba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6948, "upload_time": "2017-08-25T15:43:22", "upload_time_iso_8601": "2017-08-25T15:43:22.418045Z", "url": "https://files.pythonhosted.org/packages/a3/72/f1916a537d9737ea0fc5e9c52b559a5ec4a649f9f630fa05ee5fe37438ff/pyvap-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e19a67f91a100bc4e966a645c396f7b9", "sha256": "1c8be1c65ffe5d79c31e4f011e60a19f2434fee46a541bccd282e405ef649877"}, "downloads": -1, "filename": "pyvap-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e19a67f91a100bc4e966a645c396f7b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7686, "upload_time": "2017-08-25T15:43:23", "upload_time_iso_8601": "2017-08-25T15:43:23.229932Z", "url": "https://files.pythonhosted.org/packages/dc/4f/bb513221159466e5c669d7fb029d87608313cb6ef41d6a0e0302305259c7/pyvap-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4c247b4389a51b52a0da7eccfb0ea6e0", "sha256": "0b14e63a39c63bc474c20be9b6a1f520775f68ae55d68261e61c60851fb6b3cd"}, "downloads": -1, "filename": "pyvap-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c247b4389a51b52a0da7eccfb0ea6e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9776, "upload_time": "2017-08-25T20:13:55", "upload_time_iso_8601": "2017-08-25T20:13:55.661468Z", "url": "https://files.pythonhosted.org/packages/04/b1/8a058a3061963d1f9f7ecd0a886ac94467f950e527098d07270b4972b571/pyvap-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c398eed3dee9d28ae149622b2b79d6b9", "sha256": "624d415616079d01d70f1cf886470b05b16c4a37bde4ee3ca7e54b2adcbd26bd"}, "downloads": -1, "filename": "pyvap-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c398eed3dee9d28ae149622b2b79d6b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7675, "upload_time": "2017-08-25T20:13:57", "upload_time_iso_8601": "2017-08-25T20:13:57.470811Z", "url": "https://files.pythonhosted.org/packages/49/f6/55b8c999d712468f8aad64572313aa593a2b258e6450dd71a23f8d6440a6/pyvap-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c247b4389a51b52a0da7eccfb0ea6e0", "sha256": "0b14e63a39c63bc474c20be9b6a1f520775f68ae55d68261e61c60851fb6b3cd"}, "downloads": -1, "filename": "pyvap-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c247b4389a51b52a0da7eccfb0ea6e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9776, "upload_time": "2017-08-25T20:13:55", "upload_time_iso_8601": "2017-08-25T20:13:55.661468Z", "url": "https://files.pythonhosted.org/packages/04/b1/8a058a3061963d1f9f7ecd0a886ac94467f950e527098d07270b4972b571/pyvap-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c398eed3dee9d28ae149622b2b79d6b9", "sha256": "624d415616079d01d70f1cf886470b05b16c4a37bde4ee3ca7e54b2adcbd26bd"}, "downloads": -1, "filename": "pyvap-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c398eed3dee9d28ae149622b2b79d6b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7675, "upload_time": "2017-08-25T20:13:57", "upload_time_iso_8601": "2017-08-25T20:13:57.470811Z", "url": "https://files.pythonhosted.org/packages/49/f6/55b8c999d712468f8aad64572313aa593a2b258e6450dd71a23f8d6440a6/pyvap-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:13 2020"}