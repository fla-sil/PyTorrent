{"info": {"author": "Ying Jin", "author_email": "yjin@cshl.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: Unix", "Programming Language :: C++", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "=======\r\nezBAMQC\r\n=======\r\n\r\n*\"ezBAMQC, a tool to check the quality of mapped next generation sequencing files.\"*\r\n\r\n:Codeology Icon:\r\n\r\n   .. image:: https://raw.githubusercontent.com/mhammell-laboratory/bamqc/master/doc/bamqc-icon.gif\r\n     :alt: generated at codeology.braintreepayments.com/mhammell-laboratory/bamqc\r\n     :align: right\r\n     :target: http://codeology.braintreepayments.com/mhammell-laboratory/bamqc\r\n\r\n:Description:\r\n\r\n   ezBAMQC is a tool to check the quality of either one or many mapped next-generation-sequencing datasets. It conducts comprehensive evaluations of aligned sequencing data from multiple aspects including: clipping profile, mapping quality distribution, mapped read length distribution, genomic/transcriptomic mapping distribution, inner distance distribution (for paired-end reads), ribosomal RNA contamination, transcript 5\u2019 and 3\u2019 end bias, transcription dropout rate, sample correlations, sample reproducibility, sample variations. It outputs a set of tables and plots and one HTML page that contains a summary of the results. Many metrics are designed for RNA-seq data specifically, but ezBAMQC can be applied to any mapped sequencing dataset such as RNA-seq, CLIP-seq, GRO-seq, ChIP-seq, DNA-seq and so on.\r\n\r\n:Links:\r\n\r\n    `Github Page <https://github.com/mhammell-laboratory/bamqc>`_\r\n\r\n    `Pypi Page <https://pypi.python.org/pypi/ezBAMQC>`_\r\n\r\n    `MHammell Lab <http://hammelllab.labsites.cshl.edu/software>`_\r\n\r\n:Authors:\r\n    Ying Jin, David Molik, and Molly Hammell\r\n\r\n:Version: 0.6.7\r\n\r\n:Contact:\r\n    Ying Jin (yjin@cshl.edu)\r\n\r\nInstallation guide for ezBAMQC for from source installs\r\n=======================================================\r\n\r\nWhen installing ezBAMQC there are several options, but the main point is: since ezBAMQC uses C++ STD 11 you'll need a version of GCC that can support that, this useally means 4.8 or 4.9. beyond that, you'll need Python, R and Corrplot for interfacing with the C code.\r\n\r\n:Intallation:\r\n   `Source Code <https://github.com/mhammell-laboratory/ezBAMQC/releases>`_\r\n\r\n   `Pypi <https://pypi.python.org/pypi?:action=display&name=ezBAMQC>`_\r\n\r\n:Prerequisites:\r\n    * `python2.7 <https://www.python.org/download/releases/2.7/>`_\r\n    * `R <https://www.r-project.org/>`_\r\n    * `corrplot <https://cran.r-project.org/web/packages/corrplot/>`_\r\n    * `GCC 4.8.1 or greater <https://gcc.gnu.org/gcc-4.8/>`_ GCC 4.9.1 or greater is recomended for PyPi install \r\n\r\n:Notes:\r\n    * While there are multiple methods of installing the prerequistes it may help to look at (if using a yum based linux distro):*\r\n    * `Devtoolset-3 <https://access.redhat.com/documentation/en-US/Red_Hat_Developer_Toolset/3/html/User_Guide/sect-Red_Hat_Developer_Toolset-Install.html>`_ for GCC compilers\r\n    * `IUS <https://ius.io/>`_ for Python2.7\r\n    * `Software Collections <https://www.softwarecollections.org/>`_ for collections of software (like devtoolset 3 or python)\r\n    * `rpmfinder <https://www.rpmfind.net/>`_ for searching rpms across mutliple systems\r\n\r\nSetup\r\n=====\r\n\r\n1) Make sure that the GCC comiler is in your PATH:\r\n\r\n::\r\n\r\n   export PATH=/path/to/gcc:$PATH\r\n\r\n2) Make sure that python2.7 is in your PYTHONPATH:\r\n\r\n::\r\n\r\n   export PYTHONPATH=/path/to/python2.7/site-packages:$PYTHONPATH\r\n\r\n3) There are three methods of installation of ezBAMQC, from source, from setup.py, and from pypi, once prequistes are setup. \r\n\r\nFrom Source\r\n~~~~~~~~~~~\r\n\r\n1) Download source \r\n\r\n2) Unpack tarball and go to the directory of the package: \r\n\r\n::\r\n\r\n   tar xvfz bamqc-0.6.7.tar.gz\r\n\r\n   cd bamqc-0.6.7\r\n\r\n3) Run make:\r\n\r\n::\r\n\r\n   make\r\n\r\nFrom Setup.py\r\n~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n   python2.7 setup.py install \r\n\r\nFrom Pypi\r\n~~~~~~~~~\r\n\r\n::\r\n\r\n   pip2.7 install BAMqc\r\n\r\nUsage\r\n=====\r\n\r\n::\r\n\r\n   ezBAMQC [-h] -i alignment_files [alignment_files ...] -r [refgene]\r\n   [-f [attrID]] [--rRNA [rRNA]] -o [dir] [--stranded [stranded]]\r\n   [-q [mapq]] [-l labels [labels ...]] [-t NUMTHREADS]\r\n\r\noptional arguments:\r\n\r\n::\r\n\r\n   -h, --help               show this help message and exit.\r\n   -i, --inputFile          alignment files. Could be multiple SAM/BAM files separated by space. Required.\r\n   -r, --refgene            gene annotation file in GTF format. Required\r\n   -f                       the read summation at which feature level in the GTF file. DEFAULT: gene_id.\r\n   --rRNA                   rRNA coordinates in BED format.\r\n   -o, --outputDir          output directory. Required.\r\n   --stranded               strandness of the library? \r\n                            yes : sense stranded\r\n                            reverse : reverse stranded\r\n                            no : not stranded\r\n                            DEFAULT: yes.\r\n   -q, --mapq               Minimum mapping quality (phred scaled) for an alignment to be called uniquely mapped. DEFAULT:30\r\n   -l, --label              Labels of input files. DEFAULT:smp1 smp2 ...\r\n   -t, --threads            Number of threads to use. DEFAULT:1\r\n\r\nExample: \r\n\r\n::\r\n\r\n   ezBAMQC -i test-data/exp_data/treat1.bam test-data/exp_data/treat2.bam test-data/exp_data/treat3.bam -r test-data/exp_data/hg9_refGene.gtf -q 30 --rRNA test-data/exp_data/hg19_rRNA.bed -o exp_output2\r\n\r\n   Please find the example output from folder test-data.\r\n\r\nDemo\r\n====\r\n\r\nWant to try ezBAMQC before trying it? you can now utilize our tool demo hosted on our `Yabi Demo <https://demo.bsr.tools/yabi>`_ to do so.\r\n\r\n+------------------------------------+\r\n|To login use username and password: |\r\n+====================================+\r\n|- username: **tdemo**               |\r\n|- password: **tdemo**               |\r\n+------------------------------------+\r\n\r\n.. image:: https://raw.githubusercontent.com/mhammell-laboratory/ezBAMQC/master/doc/demo-login.png\r\n  :alt: The BSR/MHammell lab yabi installation\r\n  :align: center\r\n  :target: https://demo.bsr.tools/yabi\r\n\r\nThe login screen, usernname and password go in the top right corner.\r\n\r\n.. image:: https://raw.githubusercontent.com/mhammell-laboratory/ezBAMQC/master/doc/demo-show-all.png\r\n  :alt: The BSR/MHammell lab yabi installation\r\n  :align: center\r\n  :target: https://demo.bsr.tools/yabi\r\n\r\nThe \"Design\" Frame, use the \"show all\" button to make visable the ezBAMQC tool.\r\n\r\n.. image:: https://raw.githubusercontent.com/mhammell-laboratory/ezBAMQC/master/doc/demo-show-files.png\r\n  :alt: The BSR/MHammell lab yabi installation\r\n  :align: center\r\n  :target: https://demo.bsr.tools/yabi\r\n\r\nThe ezBAMQC tool page, select appropriate files from the S3 instance or upload your own. \r\n\r\n  *A note on Yabi, Yabi was created by the Centre For Comparative Genomics, https://ccg.murdoch.edu.au/ . You can check our their more extensive Yabi Demo, https://ccgapps.com.au/yabi/ or their Yabi Wiki, https://bitbucket.org/ccgmurdoch/yabi/wiki/Home for more information.*\r\n\r\nFAQ\r\n===\r\nQ: Why use ezBAMQC?\r\n\r\nA: ezBAMQC is efficient and easy to use. With one command line, it reports a comprehensive evaluation of the data with a set of plots and tables.The ability to assess multiple samples together with high efficiency make it especially useful in cases where there are a large number of samples from the same condition, genotype, or treatment. ezBAMQC was written in C++ and supports multithreading. A mouse RNA-seq sample with 120M alignments can be done in 8 minutes with 5 threads.\r\n\r\nQ: Why the total number of reads reported by ezBAMQC does not match with samtools flagstat?\r\n\r\nA: The difference is because of non-uniquely mapped reads or multiply aligned reads (multi-reads). Samtools flagstat counts each multiple aligment as a different reads, but ezBAMQC counts reads accoriding to the read ID, i.e., each individual read will be counted once no matter that it is a uniquely mapped read or multi-read. \r\n\r\nQ: What is \"Low Quality Reads\" ?\r\n\r\nA: Reads marked as qc fail accoriding to SAM format or reads with mapping quality lower than the value set by the option -q will be considered as \"Low Quality Reads\".\r\n\r\nQ: How the setting of option -q alter the results? \r\n\r\nA: Reads with low quality, i.e., did not pass -q cutoff, are only counted in Total Reads, Mapped Reads, and Mappability by mapping quality plot. The rest of the report does not include low quality reads. \r\n\r\nQ: Do multi-reads (non-uniquely mapped reads) have been considered in Read distribution and gene quantification?\r\n\r\nA: No. Only uniquely mapped reads were counted. \r\n\r\n\r\nAcknowledgements\r\n================\r\n\r\n#) Samtools contributors\r\n#) Users' valuable feedback\r\n\r\nCopying & Distribution\r\n======================\r\n\r\nezBAMQC is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut *WITHOUT ANY WARRANTY*; without even the implied warranty of\r\n*MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE*.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with ezBAMQC.  If not, see `this website <http://www.gnu.org/licenses/>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://hammelllab.labsites.cshl.edu/software#BAMqc", "keywords": "Quality control BAM file", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "ezBAMQC", "package_url": "https://pypi.org/project/ezBAMQC/", "platform": "Linux", "project_url": "https://pypi.org/project/ezBAMQC/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://hammelllab.labsites.cshl.edu/software#BAMqc"}, "release_url": "https://pypi.org/project/ezBAMQC/0.6.7/", "requires_dist": null, "requires_python": null, "summary": "Quality control tools for NGS alignment file", "version": "0.6.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>\u201cezBAMQC, a tool to check the quality of mapped next generation sequencing files.\u201d</em></p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Codeology Icon:</th><td><a href=\"http://codeology.braintreepayments.com/mhammell-laboratory/bamqc\" rel=\"nofollow\"><img alt=\"generated at codeology.braintreepayments.com/mhammell-laboratory/bamqc\" class=\"align-right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20df00b455549efa2be0a867e06df6455a7251a2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d68616d6d656c6c2d6c61626f7261746f72792f62616d71632f6d61737465722f646f632f62616d71632d69636f6e2e676966\"></a>\n</td>\n</tr>\n<tr><th>Description:</th><td><p>ezBAMQC is a tool to check the quality of either one or many mapped next-generation-sequencing datasets. It conducts comprehensive evaluations of aligned sequencing data from multiple aspects including: clipping profile, mapping quality distribution, mapped read length distribution, genomic/transcriptomic mapping distribution, inner distance distribution (for paired-end reads), ribosomal RNA contamination, transcript 5\u2019 and 3\u2019 end bias, transcription dropout rate, sample correlations, sample reproducibility, sample variations. It outputs a set of tables and plots and one HTML page that contains a summary of the results. Many metrics are designed for RNA-seq data specifically, but ezBAMQC can be applied to any mapped sequencing dataset such as RNA-seq, CLIP-seq, GRO-seq, ChIP-seq, DNA-seq and so on.</p>\n</td>\n</tr>\n<tr><th>Links:</th><td><p><a href=\"https://github.com/mhammell-laboratory/bamqc\" rel=\"nofollow\">Github Page</a></p>\n<p><a href=\"https://pypi.python.org/pypi/ezBAMQC\" rel=\"nofollow\">Pypi Page</a></p>\n<p><a href=\"http://hammelllab.labsites.cshl.edu/software\" rel=\"nofollow\">MHammell Lab</a></p>\n</td>\n</tr>\n<tr><th>Authors:</th><td><p>Ying Jin, David Molik, and Molly Hammell</p>\n</td>\n</tr>\n<tr><th>Version:</th><td><p>0.6.7</p>\n</td>\n</tr>\n<tr><th>Contact:</th><td><p>Ying Jin (<a href=\"mailto:yjin%40cshl.edu\">yjin<span>@</span>cshl<span>.</span>edu</a>)</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"installation-guide-for-ezbamqc-for-from-source-installs\">\n<h2>Installation guide for ezBAMQC for from source installs</h2>\n<p>When installing ezBAMQC there are several options, but the main point is: since ezBAMQC uses C++ STD 11 you\u2019ll need a version of GCC that can support that, this useally means 4.8 or 4.9. beyond that, you\u2019ll need Python, R and Corrplot for interfacing with the C code.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Intallation:</th><td><p><a href=\"https://github.com/mhammell-laboratory/ezBAMQC/releases\" rel=\"nofollow\">Source Code</a></p>\n<p><a href=\"https://pypi.python.org/pypi?:action=display&amp;name=ezBAMQC\" rel=\"nofollow\">Pypi</a></p>\n</td>\n</tr>\n<tr><th>Prerequisites:</th><td><ul>\n<li><a href=\"https://www.python.org/download/releases/2.7/\" rel=\"nofollow\">python2.7</a></li>\n<li><a href=\"https://www.r-project.org/\" rel=\"nofollow\">R</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/\" rel=\"nofollow\">corrplot</a></li>\n<li><a href=\"https://gcc.gnu.org/gcc-4.8/\" rel=\"nofollow\">GCC 4.8.1 or greater</a> GCC 4.9.1 or greater is recomended for PyPi install</li>\n</ul>\n</td>\n</tr>\n<tr><th>Notes:</th><td><ul>\n<li>While there are multiple methods of installing the prerequistes it may help to look at (if using a yum based linux distro):*</li>\n<li><a href=\"https://access.redhat.com/documentation/en-US/Red_Hat_Developer_Toolset/3/html/User_Guide/sect-Red_Hat_Developer_Toolset-Install.html\" rel=\"nofollow\">Devtoolset-3</a> for GCC compilers</li>\n<li><a href=\"https://ius.io/\" rel=\"nofollow\">IUS</a> for Python2.7</li>\n<li><a href=\"https://www.softwarecollections.org/\" rel=\"nofollow\">Software Collections</a> for collections of software (like devtoolset 3 or python)</li>\n<li><a href=\"https://www.rpmfind.net/\" rel=\"nofollow\">rpmfinder</a> for searching rpms across mutliple systems</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<ol>\n<li>Make sure that the GCC comiler is in your PATH:</li>\n</ol>\n<pre>export PATH=/path/to/gcc:$PATH\n</pre>\n<ol>\n<li>Make sure that python2.7 is in your PYTHONPATH:</li>\n</ol>\n<pre>export PYTHONPATH=/path/to/python2.7/site-packages:$PYTHONPATH\n</pre>\n<ol>\n<li>There are three methods of installation of ezBAMQC, from source, from setup.py, and from pypi, once prequistes are setup.</li>\n</ol>\n<div id=\"from-source\">\n<h3>From Source</h3>\n<ol>\n<li>Download source</li>\n<li>Unpack tarball and go to the directory of the package:</li>\n</ol>\n<pre>tar xvfz bamqc-0.6.7.tar.gz\n\ncd bamqc-0.6.7\n</pre>\n<ol>\n<li>Run make:</li>\n</ol>\n<pre>make\n</pre>\n</div>\n<div id=\"from-setup-py\">\n<h3>From Setup.py</h3>\n<pre>python2.7 setup.py install\n</pre>\n</div>\n<div id=\"from-pypi\">\n<h3>From Pypi</h3>\n<pre>pip2.7 install BAMqc\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>ezBAMQC [-h] -i alignment_files [alignment_files ...] -r [refgene]\n[-f [attrID]] [--rRNA [rRNA]] -o [dir] [--stranded [stranded]]\n[-q [mapq]] [-l labels [labels ...]] [-t NUMTHREADS]\n</pre>\n<p>optional arguments:</p>\n<pre>-h, --help               show this help message and exit.\n-i, --inputFile          alignment files. Could be multiple SAM/BAM files separated by space. Required.\n-r, --refgene            gene annotation file in GTF format. Required\n-f                       the read summation at which feature level in the GTF file. DEFAULT: gene_id.\n--rRNA                   rRNA coordinates in BED format.\n-o, --outputDir          output directory. Required.\n--stranded               strandness of the library?\n                         yes : sense stranded\n                         reverse : reverse stranded\n                         no : not stranded\n                         DEFAULT: yes.\n-q, --mapq               Minimum mapping quality (phred scaled) for an alignment to be called uniquely mapped. DEFAULT:30\n-l, --label              Labels of input files. DEFAULT:smp1 smp2 ...\n-t, --threads            Number of threads to use. DEFAULT:1\n</pre>\n<p>Example:</p>\n<pre>ezBAMQC -i test-data/exp_data/treat1.bam test-data/exp_data/treat2.bam test-data/exp_data/treat3.bam -r test-data/exp_data/hg9_refGene.gtf -q 30 --rRNA test-data/exp_data/hg19_rRNA.bed -o exp_output2\n\nPlease find the example output from folder test-data.\n</pre>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>Want to try ezBAMQC before trying it? you can now utilize our tool demo hosted on our <a href=\"https://demo.bsr.tools/yabi\" rel=\"nofollow\">Yabi Demo</a> to do so.</p>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>To login use username and password:</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><ul>\n<li>username: <strong>tdemo</strong></li>\n<li>password: <strong>tdemo</strong></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<a href=\"https://demo.bsr.tools/yabi\" rel=\"nofollow\"><img alt=\"The BSR/MHammell lab yabi installation\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bc76932f31c9426a797e8790b224278070b73e3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d68616d6d656c6c2d6c61626f7261746f72792f657a42414d51432f6d61737465722f646f632f64656d6f2d6c6f67696e2e706e67\"></a>\n<p>The login screen, usernname and password go in the top right corner.</p>\n<a href=\"https://demo.bsr.tools/yabi\" rel=\"nofollow\"><img alt=\"The BSR/MHammell lab yabi installation\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b594c225c87f94e555afd82e803de6a71d2213c8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d68616d6d656c6c2d6c61626f7261746f72792f657a42414d51432f6d61737465722f646f632f64656d6f2d73686f772d616c6c2e706e67\"></a>\n<p>The \u201cDesign\u201d Frame, use the \u201cshow all\u201d button to make visable the ezBAMQC tool.</p>\n<a href=\"https://demo.bsr.tools/yabi\" rel=\"nofollow\"><img alt=\"The BSR/MHammell lab yabi installation\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2471d6049f08b6ba2895bbd937002404ea0bc7c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d68616d6d656c6c2d6c61626f7261746f72792f657a42414d51432f6d61737465722f646f632f64656d6f2d73686f772d66696c65732e706e67\"></a>\n<p>The ezBAMQC tool page, select appropriate files from the S3 instance or upload your own.</p>\n<blockquote>\n<em>A note on Yabi, Yabi was created by the Centre For Comparative Genomics, https://ccg.murdoch.edu.au/ . You can check our their more extensive Yabi Demo, https://ccgapps.com.au/yabi/ or their Yabi Wiki, https://bitbucket.org/ccgmurdoch/yabi/wiki/Home for more information.</em></blockquote>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<p>Q: Why use ezBAMQC?</p>\n<p>A: ezBAMQC is efficient and easy to use. With one command line, it reports a comprehensive evaluation of the data with a set of plots and tables.The ability to assess multiple samples together with high efficiency make it especially useful in cases where there are a large number of samples from the same condition, genotype, or treatment. ezBAMQC was written in C++ and supports multithreading. A mouse RNA-seq sample with 120M alignments can be done in 8 minutes with 5 threads.</p>\n<p>Q: Why the total number of reads reported by ezBAMQC does not match with samtools flagstat?</p>\n<p>A: The difference is because of non-uniquely mapped reads or multiply aligned reads (multi-reads). Samtools flagstat counts each multiple aligment as a different reads, but ezBAMQC counts reads accoriding to the read ID, i.e., each individual read will be counted once no matter that it is a uniquely mapped read or multi-read.</p>\n<p>Q: What is \u201cLow Quality Reads\u201d ?</p>\n<p>A: Reads marked as qc fail accoriding to SAM format or reads with mapping quality lower than the value set by the option -q will be considered as \u201cLow Quality Reads\u201d.</p>\n<p>Q: How the setting of option -q alter the results?</p>\n<p>A: Reads with low quality, i.e., did not pass -q cutoff, are only counted in Total Reads, Mapped Reads, and Mappability by mapping quality plot. The rest of the report does not include low quality reads.</p>\n<p>Q: Do multi-reads (non-uniquely mapped reads) have been considered in Read distribution and gene quantification?</p>\n<p>A: No. Only uniquely mapped reads were counted.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<ol>\n<li>Samtools contributors</li>\n<li>Users\u2019 valuable feedback</li>\n</ol>\n</div>\n<div id=\"copying-distribution\">\n<h2>Copying &amp; Distribution</h2>\n<p>ezBAMQC is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut <em>WITHOUT ANY WARRANTY</em>; without even the implied warranty of\n<em>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE</em>.  See the\nGNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with ezBAMQC.  If not, see <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">this website</a></p>\n</div>\n\n          </div>"}, "last_serial": 2053901, "releases": {"0.6.5": [], "0.6.6": [{"comment_text": "", "digests": {"md5": "b90bd45d2bff9234d61ab209b53136ef", "sha256": "435a812945a6f1cb43ea620f90a7ebbda08f69933b299c527eecbe09e2db728d"}, "downloads": -1, "filename": "ezBAMQC-0.6.6.tar.gz", "has_sig": false, "md5_digest": "b90bd45d2bff9234d61ab209b53136ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 983741, "upload_time": "2016-03-25T15:34:10", "upload_time_iso_8601": "2016-03-25T15:34:10.351439Z", "url": "https://files.pythonhosted.org/packages/b6/99/ac47337055b44c440a946cdc10ba639ae1756bff0500cf079a1a0c51450e/ezBAMQC-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "555b8b2911372b17d9f50474a86b44db", "sha256": "478560c3763bbca11e1dba3311eae83968fdcb7b8f0279801032466cf2cb7fed"}, "downloads": -1, "filename": "ezBAMQC-0.6.7.tar.gz", "has_sig": false, "md5_digest": "555b8b2911372b17d9f50474a86b44db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2103533, "upload_time": "2016-03-28T14:30:19", "upload_time_iso_8601": "2016-03-28T14:30:19.796972Z", "url": "https://files.pythonhosted.org/packages/eb/eb/ea7db33f3d7cac11e837e82ddc4f238947b855a7ae99ec1e6d2206b1a070/ezBAMQC-0.6.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "555b8b2911372b17d9f50474a86b44db", "sha256": "478560c3763bbca11e1dba3311eae83968fdcb7b8f0279801032466cf2cb7fed"}, "downloads": -1, "filename": "ezBAMQC-0.6.7.tar.gz", "has_sig": false, "md5_digest": "555b8b2911372b17d9f50474a86b44db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2103533, "upload_time": "2016-03-28T14:30:19", "upload_time_iso_8601": "2016-03-28T14:30:19.796972Z", "url": "https://files.pythonhosted.org/packages/eb/eb/ea7db33f3d7cac11e837e82ddc4f238947b855a7ae99ec1e6d2206b1a070/ezBAMQC-0.6.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:24 2020"}