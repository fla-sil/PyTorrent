{"info": {"author": "Guillaume Doumenc", "author_email": "gdoumenc@fpr-coworks.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: System :: Distributed Computing"], "description": "=======\nCoWorks\n=======\n\n.. image:: https://travis-ci.com/gdoumenc/coworks.svg?branch=master\n  :target: https://travis-ci.com/gdoumenc/coworks\n  :alt: Travis CI\n.. image:: https://readthedocs.org/projects/coworks/badge/?version=latest\n  :target: https://readthedocs.org/projects/coworks/badge/\n  :alt: Documentation Status\n.. image:: https://codecov.io/gh/gdoumenc/coworks/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/gdoumenc/coworks\n  :alt: Documentation Status\n\nCoWorks is an unified compositional microservices framework over AWS technologies and\nbased on the `Chalice <https://github.com/aws/chalice>`__ microframework.\nThe aim of this project, is to offer a very simplified experience of microservices over the awesome technologies of AWS.\n\nEach atomic microservice (Tech Microservice) is a simple python class deployed on the serverless Lambda product and\ncomposition of microservices (Biz Microservice) is performed over the Step Function product. Other AWS products are used\nfor logging, administrate, ...\n\nGet started with `installation <https://coworks.readthedocs.io/en/latest/installation.html>`_ and then\nget an overview with the `quickstart <https://coworks.readthedocs.io/en/latest/quickstart.html>`_.\nRead `faq <https://coworks.readthedocs.io/en/latest/faq.html>`_ for a quick presentation,\na complete presentation can be found `here <https://coworks.readthedocs.io/en/latest/>`_.\n\n\nInstallation\n------------\n\nInstall the extension with::\n\n    $ pip install coworks\n\nLet's see how it works\n----------------------\n\nAs a simple example is often more helpful and descriptive than a complete manual, lets write our first simple\nmicroservice in file `app.py`.\n\n.. code-block:: python\n\n\tfrom coworks import TechMicroService\n\n\tclass SimpleExampleMicroservice(TechMicroService):\n\n\t\tdef get(self, usage=\"test\"):\n\t\t\treturn f\"Simple microservice for {usage}.\\n\"\n\n\tapp = SimpleExampleMicroservice(app_name=\"demo\")\n\ninitialize the coworks project::\n\n    $ cws init\n\nThen make our microservice run locally::\n\n    $ cws run\n    Serving on http://127.0.0.1:8000\n    127.0.0.1 - - [26/Dec/2019 18:29:11] \"GET / HTTP/1.1\" 200 -\n\nNow test our microservice::\n\n\t$ curl http://127.0.1:8000\n\tSimple microservice for test.\n\t$ curl http://127.0.1:8000?usage=me\n\tSimple microservice for me.\n\nNow complete it with more entrypoints:\n\n.. code-block:: python\n\n\tfrom collections import defaultdict\n\tfrom coworks import TechMicroService\n\n\tclass SimpleExampleMicroservice(TechMicroService):\n\t\tvalues = defaultdict(int)\n\n\t\tdef get(self, usage=\"test\"):\n\t\t\treturn f\"Simple microservice for {usage}.\\n\"\n\n\t\tdef get_value(self, index):\n\t\t\treturn f\"{self.values[index]}\\n\"\n\n\t\tdef put_value(self, index, value=0):\n\t\t\tself.values[index] = value\n\n\tapp = SimpleExampleMicroservice(app_name=\"demo\")\n\nNow test our completion::\n\n\t$ curl http://127.0.1:8000/value/123\n\t0\n\t$ curl -X PUT -d '{\"value\":456}' -H \"Content-Type: application/json\" http://127.0.1:8000/value/123\n\tnull\n\t$ curl http://127.0.1:8000/value/123\n\t456\n\t$ curl -X PUT -d '789' -H \"Content-Type: application/json\" http://127.0.1:8000/value/123\n\tnull\n\t$ curl http://127.0.1:8000/value/123\n\t789\n\n\nDeploy this first simple microservice on AWS with Chalice\n---------------------------------------------------------\n\nJust deploy the microservice::\n\n    $ pip freeze > requirements.txt\n    $ chalice deploy\n\tCreating deployment package.\n\tUpdating policy for IAM role: simple-dev\n\tUpdating lambda function: simple-dev\n\tUpdating rest API\n\tResources deployed:\n\t  - Lambda ARN: arn:aws:lambda:eu-west-1:760589174259:function:simple-dev\n\t  - Rest API URL: https://bd2ht6jc2m.execute-api.eu-west-1.amazonaws.com/dev/\n\nThen test it::\n\n\t$ curl https://bd2ht6jc2m.execute-api.eu-west-1.amazonaws.com/dev/\n\tSimple microservice for test.\n\nDelete it\n---------\n\nJust delete the microservice with ::\n\n\t$ chalice delete\n\nRelated Projects\n----------------\n\n* `Chalice <https://github.com/aws/chalice>`__ - Python Serverless Microframework for AWS.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gdoumenc/coworks", "keywords": "restful microservice aws chalice serverless", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "coworks", "package_url": "https://pypi.org/project/coworks/", "platform": "", "project_url": "https://pypi.org/project/coworks/", "project_urls": {"Homepage": "https://github.com/gdoumenc/coworks"}, "release_url": "https://pypi.org/project/coworks/0.2.12/", "requires_dist": null, "requires_python": "", "summary": "CoWorks is a unified compositional serverless microservices framework over AWS technologies.", "version": "0.2.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/gdoumenc/coworks\" rel=\"nofollow\"><img alt=\"Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f540c85346269c3ba3575fc8ece8d95ad31a6b4f/68747470733a2f2f7472617669732d63692e636f6d2f67646f756d656e632f636f776f726b732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://readthedocs.org/projects/coworks/badge/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed0adaa0cf635c7544bb5620351f0936b05db1ab/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636f776f726b732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/gdoumenc/coworks\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0348e72a8cf17226db59192976cb757654343555/68747470733a2f2f636f6465636f762e696f2f67682f67646f756d656e632f636f776f726b732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>CoWorks is an unified compositional microservices framework over AWS technologies and\nbased on the <a href=\"https://github.com/aws/chalice\" rel=\"nofollow\">Chalice</a> microframework.\nThe aim of this project, is to offer a very simplified experience of microservices over the awesome technologies of AWS.</p>\n<p>Each atomic microservice (Tech Microservice) is a simple python class deployed on the serverless Lambda product and\ncomposition of microservices (Biz Microservice) is performed over the Step Function product. Other AWS products are used\nfor logging, administrate, \u2026</p>\n<p>Get started with <a href=\"https://coworks.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">installation</a> and then\nget an overview with the <a href=\"https://coworks.readthedocs.io/en/latest/quickstart.html\" rel=\"nofollow\">quickstart</a>.\nRead <a href=\"https://coworks.readthedocs.io/en/latest/faq.html\" rel=\"nofollow\">faq</a> for a quick presentation,\na complete presentation can be found <a href=\"https://coworks.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>.</p>\n<div id=\"id1\">\n<h2>Installation</h2>\n<p>Install the extension with:</p>\n<pre>$ pip install coworks\n</pre>\n</div>\n<div id=\"let-s-see-how-it-works\">\n<h2>Let\u2019s see how it works</h2>\n<p>As a simple example is often more helpful and descriptive than a complete manual, lets write our first simple\nmicroservice in file <cite>app.py</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coworks</span> <span class=\"kn\">import</span> <span class=\"n\">TechMicroService</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SimpleExampleMicroservice</span><span class=\"p\">(</span><span class=\"n\">TechMicroService</span><span class=\"p\">):</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">usage</span><span class=\"o\">=</span><span class=\"s2\">\"test\"</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Simple microservice for </span><span class=\"si\">{</span><span class=\"n\">usage</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">SimpleExampleMicroservice</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">\"demo\"</span><span class=\"p\">)</span>\n</pre>\n<p>initialize the coworks project:</p>\n<pre>$ cws init\n</pre>\n<p>Then make our microservice run locally:</p>\n<pre>$ cws run\nServing on http://127.0.0.1:8000\n127.0.0.1 - - [26/Dec/2019 18:29:11] \"GET / HTTP/1.1\" 200 -\n</pre>\n<p>Now test our microservice:</p>\n<pre>$ curl http://127.0.1:8000\nSimple microservice for test.\n$ curl http://127.0.1:8000?usage=me\nSimple microservice for me.\n</pre>\n<p>Now complete it with more entrypoints:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coworks</span> <span class=\"kn\">import</span> <span class=\"n\">TechMicroService</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SimpleExampleMicroservice</span><span class=\"p\">(</span><span class=\"n\">TechMicroService</span><span class=\"p\">):</span>\n        <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">usage</span><span class=\"o\">=</span><span class=\"s2\">\"test\"</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Simple microservice for </span><span class=\"si\">{</span><span class=\"n\">usage</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">put_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">SimpleExampleMicroservice</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">\"demo\"</span><span class=\"p\">)</span>\n</pre>\n<p>Now test our completion:</p>\n<pre>$ curl http://127.0.1:8000/value/123\n0\n$ curl -X PUT -d '{\"value\":456}' -H \"Content-Type: application/json\" http://127.0.1:8000/value/123\nnull\n$ curl http://127.0.1:8000/value/123\n456\n$ curl -X PUT -d '789' -H \"Content-Type: application/json\" http://127.0.1:8000/value/123\nnull\n$ curl http://127.0.1:8000/value/123\n789\n</pre>\n</div>\n<div id=\"deploy-this-first-simple-microservice-on-aws-with-chalice\">\n<h2>Deploy this first simple microservice on AWS with Chalice</h2>\n<p>Just deploy the microservice:</p>\n<pre>$ pip freeze &gt; requirements.txt\n$ chalice deploy\n    Creating deployment package.\n    Updating policy for IAM role: simple-dev\n    Updating lambda function: simple-dev\n    Updating rest API\n    Resources deployed:\n      - Lambda ARN: arn:aws:lambda:eu-west-1:760589174259:function:simple-dev\n      - Rest API URL: https://bd2ht6jc2m.execute-api.eu-west-1.amazonaws.com/dev/\n</pre>\n<p>Then test it:</p>\n<pre>$ curl https://bd2ht6jc2m.execute-api.eu-west-1.amazonaws.com/dev/\nSimple microservice for test.\n</pre>\n</div>\n<div id=\"delete-it\">\n<h2>Delete it</h2>\n<p>Just delete the microservice with</p>\n<pre>$ chalice delete\n</pre>\n</div>\n<div id=\"related-projects\">\n<h2>Related Projects</h2>\n<ul>\n<li><a href=\"https://github.com/aws/chalice\" rel=\"nofollow\">Chalice</a> - Python Serverless Microframework for AWS.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6889837, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4c818d1086f18e7127bdee710399c66c", "sha256": "53cdbe24b1ddd86b1bf44281d6353c575b0ded8537d39b32cb694db957f0ac00"}, "downloads": -1, "filename": "coworks-0.1.tar.gz", "has_sig": false, "md5_digest": "4c818d1086f18e7127bdee710399c66c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4800, "upload_time": "2019-12-17T11:57:29", "upload_time_iso_8601": "2019-12-17T11:57:29.316310Z", "url": "https://files.pythonhosted.org/packages/0e/0d/1c00235aad4b4015531cc77a9e1bae17cb6790263822e37e6b57f849b9eb/coworks-0.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6c159c9a81cd36143ac672e0689577e2", "sha256": "91615e217af71ccc5d34f3c603f87dc5ea92c863ae1175d6784b0a0d0cb58d45"}, "downloads": -1, "filename": "coworks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6c159c9a81cd36143ac672e0689577e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10323, "upload_time": "2019-12-27T12:26:40", "upload_time_iso_8601": "2019-12-27T12:26:40.888194Z", "url": "https://files.pythonhosted.org/packages/82/ae/7419ab664da55034cd52ffb48df3268c38534a8e64ea366728f9cc89c93e/coworks-0.2.0.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "a6ae7b0717add882db6a9ea5d56fa220", "sha256": "3f46318660abb149a4cbf80c2372567cd1c1ba18d191406df9a4f549346207ad"}, "downloads": -1, "filename": "coworks-0.2.10.tar.gz", "has_sig": false, "md5_digest": "a6ae7b0717add882db6a9ea5d56fa220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15739, "upload_time": "2020-01-14T16:05:17", "upload_time_iso_8601": "2020-01-14T16:05:17.002240Z", "url": "https://files.pythonhosted.org/packages/85/95/e3d8044b4dadbf1cce588b4e715b646717e469d041ac5a1277e7b9d0e563/coworks-0.2.10.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "183de3a3068ced85d92a568ada01accd", "sha256": "0684bb0d53db382bae66076b9f8a918e3adb22cfaf03121c6d077e2ae2b17d3f"}, "downloads": -1, "filename": "coworks-0.2.12.tar.gz", "has_sig": false, "md5_digest": "183de3a3068ced85d92a568ada01accd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25783, "upload_time": "2020-03-26T17:27:39", "upload_time_iso_8601": "2020-03-26T17:27:39.974781Z", "url": "https://files.pythonhosted.org/packages/91/22/2144cde08d9ff73b7a6f444d01d4fbc7264ea5d5c900063be11d361104e3/coworks-0.2.12.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "53dc3efd995d67b53e74dd0164ee79f4", "sha256": "552c0f60e9a2dd49c32a6e3b53989c17b3b1b9701a1f5c2280f07634cef188b9"}, "downloads": -1, "filename": "coworks-0.2.2.tar.gz", "has_sig": false, "md5_digest": "53dc3efd995d67b53e74dd0164ee79f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11074, "upload_time": "2019-12-30T21:26:53", "upload_time_iso_8601": "2019-12-30T21:26:53.205498Z", "url": "https://files.pythonhosted.org/packages/1b/01/c40e9773e48ca0413fd822cecdfa9fce097ae9d04c3af92d7c70b938b575/coworks-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "ebcf283e7ae6ab0ed0486370fb367703", "sha256": "b383ef8a74970a2abcdf2a31e7044526251195aac151e1444e962ad158128b1a"}, "downloads": -1, "filename": "coworks-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ebcf283e7ae6ab0ed0486370fb367703", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12390, "upload_time": "2020-01-01T15:23:59", "upload_time_iso_8601": "2020-01-01T15:23:59.549160Z", "url": "https://files.pythonhosted.org/packages/41/f7/5260a8d73bfff6d9c9644a35e42ec8c1030ea1e0544b72ede81d693dd5fa/coworks-0.2.3.tar.gz", "yanked": false}], "0.2.3.1": [{"comment_text": "", "digests": {"md5": "440b07ec82329b64534ed3f39b460724", "sha256": "1adb97ba603d30eec56f3ee2802485eb2d369975b95c5a6723993416899f4b19"}, "downloads": -1, "filename": "coworks-0.2.3.1.tar.gz", "has_sig": false, "md5_digest": "440b07ec82329b64534ed3f39b460724", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12188, "upload_time": "2020-01-01T16:13:28", "upload_time_iso_8601": "2020-01-01T16:13:28.925216Z", "url": "https://files.pythonhosted.org/packages/17/d8/054e82d5bbe673fa75569e068f57870e9c8320c742c01508bab16b345cb4/coworks-0.2.3.1.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "c5d6baae3ea2b300ff3708acf282da3b", "sha256": "c529b2758d24b6a32a68c841dfcdda5445b6fb02b077e46ab8369315255e0c7e"}, "downloads": -1, "filename": "coworks-0.2.4.tar.gz", "has_sig": false, "md5_digest": "c5d6baae3ea2b300ff3708acf282da3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12718, "upload_time": "2020-01-02T16:24:50", "upload_time_iso_8601": "2020-01-02T16:24:50.779593Z", "url": "https://files.pythonhosted.org/packages/ed/a7/6139ca88fa66fdd2b8e3d06b40629219c390129b411ca49a7066fb960aee/coworks-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "56287184c418c5f81c7554ff3e095f4b", "sha256": "ef96e9ffa295693fdfee83c2ca74f81e3978ac7fc2ccc2f2d820b4e45e596eaf"}, "downloads": -1, "filename": "coworks-0.2.5.tar.gz", "has_sig": false, "md5_digest": "56287184c418c5f81c7554ff3e095f4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12892, "upload_time": "2020-01-03T16:17:15", "upload_time_iso_8601": "2020-01-03T16:17:15.193240Z", "url": "https://files.pythonhosted.org/packages/fc/39/eae9caccad4dee5cf8f75f5141f7339a6e96039f0813e09a767863d12235/coworks-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "506d5e3a385c03a66f273a89b1a3d77e", "sha256": "174f05ee4c51c8c3da68ac45ea2e45b281b5740a902d5955d955366330062b1b"}, "downloads": -1, "filename": "coworks-0.2.6.tar.gz", "has_sig": false, "md5_digest": "506d5e3a385c03a66f273a89b1a3d77e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13031, "upload_time": "2020-01-03T16:50:34", "upload_time_iso_8601": "2020-01-03T16:50:34.697010Z", "url": "https://files.pythonhosted.org/packages/f3/c2/0490ad1302540da72a502cda0c47a9d47077f58a2e4692f1b9992d1cf139/coworks-0.2.6.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "912e7120dcc76cb3b61d97f33c8d6f4d", "sha256": "1d8fa4e46bbb42338166eb61c00785afc5f478a71a2fffdf36c0f034d7f68481"}, "downloads": -1, "filename": "coworks-0.2.8.tar.gz", "has_sig": false, "md5_digest": "912e7120dcc76cb3b61d97f33c8d6f4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14269, "upload_time": "2020-01-08T11:35:21", "upload_time_iso_8601": "2020-01-08T11:35:21.841697Z", "url": "https://files.pythonhosted.org/packages/bb/20/b456fe3e721a4b31281f988efbe4a208a447374f801b67c973d56cfc3541/coworks-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "5f1389c8385fef7eed013f3add2ca67a", "sha256": "5f97009a16ad8cc84fae1efb221c2ef9d06f4a2895b6049e19e8a84dfed08dff"}, "downloads": -1, "filename": "coworks-0.2.9.tar.gz", "has_sig": false, "md5_digest": "5f1389c8385fef7eed013f3add2ca67a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15482, "upload_time": "2020-01-12T15:02:52", "upload_time_iso_8601": "2020-01-12T15:02:52.391560Z", "url": "https://files.pythonhosted.org/packages/fd/e0/7f1468bfcb7d48adb86c77ee985d4c24aed3f25effdcf431ac79f3e02350/coworks-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "183de3a3068ced85d92a568ada01accd", "sha256": "0684bb0d53db382bae66076b9f8a918e3adb22cfaf03121c6d077e2ae2b17d3f"}, "downloads": -1, "filename": "coworks-0.2.12.tar.gz", "has_sig": false, "md5_digest": "183de3a3068ced85d92a568ada01accd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25783, "upload_time": "2020-03-26T17:27:39", "upload_time_iso_8601": "2020-03-26T17:27:39.974781Z", "url": "https://files.pythonhosted.org/packages/91/22/2144cde08d9ff73b7a6f444d01d4fbc7264ea5d5c900063be11d361104e3/coworks-0.2.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:43 2020"}