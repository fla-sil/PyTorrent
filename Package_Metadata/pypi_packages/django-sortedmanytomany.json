{"info": {"author": "Paulo Cereigido", "author_email": "paulocereigido@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-sortedmanytomany\n=======================\n\n> In Django, if you need to order a many to many relation you will have to do it by using inlines width a foreign key and a sorting field. If there is no need to add another field in this relation, use inlines would make the admin interface complex where a simple many to many should do the trick.\n\nInstallation\n------------\n\n```sh\npip install django-sortedmanytomany\n```\n\nAdding to installed apps\n------------------------\n\n- To use the many to many sorted field, you have to add it to your INSTALLED_APPS on your project's settings.py so the needed static files can be loaded:\n\n```python\n    INSTALLED_APPS = (\n        ...\n        'sortedmanytomany',\n    )\n```\n\nUsing SortedManyToManyField\n---------------------------\n\n- To use SortedManyToMany field, just create a field as if you were adding the default ManyToMany\n\n```python\n    from django.db import models\n    from sortedmanytomany.models import SortedManyToManyField\n\n    class Album(models.Model):\n        ...\n        tracks = SortedManyToManyField('Track')\n\n    class Track(models.Model):\n        ...\n```\n\nLicense\n-------\n\nMIT", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/cereigido/django-sortedmanytomany//tarball/0.1.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cereigido/django-sortedmanytomany/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-sortedmanytomany", "package_url": "https://pypi.org/project/django-sortedmanytomany/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-sortedmanytomany/", "project_urls": {"Download": "https://github.com/cereigido/django-sortedmanytomany//tarball/0.1.3", "Homepage": "https://github.com/cereigido/django-sortedmanytomany/"}, "release_url": "https://pypi.org/project/django-sortedmanytomany/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "An extension of Django ManyToMany with ordering", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-sortedmanytomany<br>=======================<br><br>&gt; In Django, if you need to order a many to many relation you will have to do it by using inlines width a foreign key and a sorting field. If there is no need to add another field in this relation, use inlines would make the admin interface complex where a simple many to many should do the trick.<br><br>Installation<br>------------<br><br>```sh<br>pip install django-sortedmanytomany<br>```<br><br>Adding to installed apps<br>------------------------<br><br>- To use the many to many sorted field, you have to add it to your INSTALLED_APPS on your project's settings.py so the needed static files can be loaded:<br><br>```python<br>    INSTALLED_APPS = (<br>        ...<br>        'sortedmanytomany',<br>    )<br>```<br><br>Using SortedManyToManyField<br>---------------------------<br><br>- To use SortedManyToMany field, just create a field as if you were adding the default ManyToMany<br><br>```python<br>    from django.db import models<br>    from sortedmanytomany.models import SortedManyToManyField<br><br>    class Album(models.Model):<br>        ...<br>        tracks = SortedManyToManyField('Track')<br><br>    class Track(models.Model):<br>        ...<br>```<br><br>License<br>-------<br><br>MIT\n          </div>"}, "last_serial": 2418741, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0a1529d82d0e28ee9a04abbc7b1d0882", "sha256": "74a962167b758c46c7c1ca53ca97e91581fb6efe10aa57d511fbcf7952ca0471"}, "downloads": -1, "filename": "django-sortedmanytomany-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0a1529d82d0e28ee9a04abbc7b1d0882", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4051, "upload_time": "2016-07-24T05:27:41", "upload_time_iso_8601": "2016-07-24T05:27:41.587288Z", "url": "https://files.pythonhosted.org/packages/c9/0d/9fe8603434789e0951186a15b8bc1a3ec8ed266e1792b8d66b30a4819fc6/django-sortedmanytomany-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fbc02106ed28705d69117cf18820ee41", "sha256": "3298a5cca42e4a586f28ca9343515f720ab0750a2b6c501477da6f3161a29db6"}, "downloads": -1, "filename": "django-sortedmanytomany-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fbc02106ed28705d69117cf18820ee41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7850, "upload_time": "2016-07-24T06:03:09", "upload_time_iso_8601": "2016-07-24T06:03:09.042922Z", "url": "https://files.pythonhosted.org/packages/52/f0/e548bee613a007d5871005819db148ad13f268f416f77e96d38fa57e5252/django-sortedmanytomany-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4424ccd6d70f49f887b9c00ffd7dc4a1", "sha256": "537ba04e9fbdfb97b6fd0cca8d45f45fae8fc515c0767e6f8c6b80463573f2b3"}, "downloads": -1, "filename": "django-sortedmanytomany-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4424ccd6d70f49f887b9c00ffd7dc4a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7976, "upload_time": "2016-07-25T03:28:47", "upload_time_iso_8601": "2016-07-25T03:28:47.034256Z", "url": "https://files.pythonhosted.org/packages/20/96/a704247b0d3ac46683239fa4b4d82b3b807e60d09fe09c8fca2d3f352d33/django-sortedmanytomany-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bfbb269df1d4831ef42e858cbfd10619", "sha256": "9f937a4263141b83779f558bb0a14ccaaac9047b2383eb759d7aec687be2cd2c"}, "downloads": -1, "filename": "django-sortedmanytomany-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bfbb269df1d4831ef42e858cbfd10619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8394, "upload_time": "2016-10-23T20:37:49", "upload_time_iso_8601": "2016-10-23T20:37:49.533266Z", "url": "https://files.pythonhosted.org/packages/10/b7/479531ba88b41d706707c560cc5943153c55684b996350a447281b6a86de/django-sortedmanytomany-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bfbb269df1d4831ef42e858cbfd10619", "sha256": "9f937a4263141b83779f558bb0a14ccaaac9047b2383eb759d7aec687be2cd2c"}, "downloads": -1, "filename": "django-sortedmanytomany-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bfbb269df1d4831ef42e858cbfd10619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8394, "upload_time": "2016-10-23T20:37:49", "upload_time_iso_8601": "2016-10-23T20:37:49.533266Z", "url": "https://files.pythonhosted.org/packages/10/b7/479531ba88b41d706707c560cc5943153c55684b996350a447281b6a86de/django-sortedmanytomany-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}