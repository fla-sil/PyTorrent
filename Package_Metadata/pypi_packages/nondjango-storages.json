{"info": {"author": "Alan Justino da Silva", "author_email": "alan.justino@yahoo.com.br", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# nondjango.storages\n\n[![Build Status](https://travis-ci.org/alanjds/nondjango-storages.svg?branch=master)](https://travis-ci.org/alanjds/nondjango-storages)\n[![Join the chat at https://gitter.im/nondjango/storages](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/nondjango/storages?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis package provides implementations of\n[Django' File Storage API](https://docs.djangoproject.com/en/3.0/ref/files/storage/#module-django.core.files.storage)\nbut without having Django as dependency. This is inspired on\n[django-storages](https://pypi.org/project/django-storages/) package, that implements\nseveral storages as Azure, Dropbox, SFTP and so, but depends on Django.\n\n## Why nondjango?\n\nDjango is recognized as a \"beast\" web framework, with everything and a sink.\nIs very good to have your needs covered. But when you want to fly light, Django\nis waaay too much.\n\nAfter using Django for some time you realize that several parts are not really\ntied to Django and could be useful outside of it. Storage is one of this parts.\n\n## Why a Django interface if not using Django itself?\n\nThen you end up doing little scripts to fit your needs. And your co-workers do\nthe same. After that, a newcomer on the company (or to the project) will have to\nlearn how to interact with half-dozen of ways to upload a file,\ndepending on the project and backing storage choices like S3 or Azure or IPFS.\n\nThis makes maintenance harder and learning curve steeper.\n\nInstead, stick with a well-known interface that have usage tutorials available\nonline and is generic enough to not tie you on a vendor or implementation.\nHad you tried to exchange from SFTP to S3 on the past?\nIdeally, it should be as easy as pointing the driver.\n\n\n## Requirements & Compatibility\n\n-  Python (3.5, 3.6, 3.7, 3.8)\n-  `boto3` for S3 backend\n-  `flit` for installation from sources\n\n## Installation\n\nYou can install this library using pip:\n\n```console\npip install nondjango-storages\n```\n\nOr via sources, using [Flit](https://pypi.org/project/flit/):\n\n```console\ngit clone https://github.com/alanjds/nondjango-storages.git\ncd nondjango-storages\npip install flit\nflit install\n```\n\n\n## Quickstart\n\nThe interface loosely implements the Django's [Storage class interface](https://docs.djangoproject.com/en/3.0/ref/files/storage/#the-storage-class), described on `nondjango.storages.BaseStorage`. Right now there is implementations for\nFilesystemStorage and S3Storage only,\naside from the TemporaryFilesystemStorage used on automated tests.\n\nInstantiate the desired storage, `BaseStorage.open()` your filelike\nand manipulate it. When done, remember to `.close()` it.\nClosing the file is specially important on some storages, as S3.\n\n\n### Initializing some storage\n\nAs the storages are not tied to a central settings file, more than one can be\ninstantiated at the same time.\n\n```python\nfrom nondjango.storages import S3Storage, TemporaryFilesystemStorage\n\n# Initializing a local temporary folder storage:\ndisposable_storage = TemporaryFilesystemStorage()\n\n# Initializing an S3Storage:\nS3_SETTINGS = {\n    'AWS_ACCESS_KEY_ID': 'Q3AM3UQ867SPQQA43P2F',\n    'AWS_SECRET_ACCESS_KEY': 'zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG',\n    'AWS_S3_REGION_NAME': 'us-east-1',\n    'AWS_S3_ENDPOINT_URL': 'https://play.min.io:9000',\n    'AWS_S3_SIGNATURE_VERSION': 's3v4',\n}\ns3_storage = S3Storage(settings=S3_SETTINGS, workdir='s3://nondjango-storages-test/storage-test-readme/')\n```\n\n### Opening and manipulating a file\n\nAccess files via `BaseStorage.open()` implementations,\nfollowing the [Django docs](https://docs.djangoproject.com/en/3.0/ref/files/storage/#django.core.files.storage.Storage.open) over its usage.\n\n```python\nwith s3_storage.open('spam.txt', 'w') as file_on_cloud:\n    file_on_cloud.write('Eggs')\n\nwith disposable_storage.open('spam.txt', 'w') as file_on_disk:\n    file_on_disk.write('Eggs')\n```\n\nIf you are not using files as context managers, **remember to close your files**:\n\n```python\n>>> file_on_cloud = s3_storage.open('span.txt', 'r')\n>>> file_on_cloud.read()\n'Eggs'\n>>> file_on_cloud.close()\n```\n\n## Advanced\n\nMost of the generally-useful interface of Django Filestorage API is implemented,\nas BaseStorage `.size()`, `.url()`, `.listdir()`, `.exists()` and `.delete()`.\nAlso some extra tools like `.hash()`, that computes or grabs the file hashes if\navailable. For now, S3Storage keeps the MD5 and Sha256 of the files on upload.\nFilesystem-backed storages computes them on the fly.\n\n```python\n>>> file_on_cloud = s3_storage.open('span.txt')\n>>> file_on_cloud.hash('md5')\n'9890f06976131702b942e59eda2f750a'\n>>> file_on_cloud.hash('sha256')\n'f1c1f57728f932efde20e53703ee5f96b1cebdc15b8578b7faa727c89dbfe03f'\n```\n\n\n## Testing\n\nIn order to get started with testing, you will need to install [tox](https://tox.readthedocs.io/en/latest/).\nOnce installed, you can then run one environment locally, to speed up your development cycle:\n\n```\n$ tox -e py37\n```\n\nOnce you submit a pull request, your changes will be run against many environments with Travis CI.\n\n\n## License\n\nThis package is licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nand can undestand more at http://choosealicense.com/licenses/apache/ on the\nsidebar notes. Another copy is attached on the LICENSE file on the root of this\nrepo.\n\nApache Licence v2.0 is a MIT-like licence. This means, in plain English:\n- It's truly open source\n- You can use it as you wish, for money or not\n- You can sublicense it (change the licence!!)\n- This way, you can even use it on your closed-source project\nAs long as:\n- You cannot use the authors name, logos, etc, to endorse a project\n- You keep the authors copyright notices where this code got used, even on your closed-source project\n(come on, even Microsoft kept BSD notices on Windows about its TCP/IP stack :P)\n\n### API License?\n\nAfter the Oracle vs Google claim, the copyright of APIs became a grey area.\nDespite personal believes, consider that the reimplemented API is of Django and\nDjango is licensed as 3-Clause BSD. Such license is included on the\nLICENSE-DJANGO file in the root folder.\nThis should be enough even if Oracle wins and come to buy Django somehow someday.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alanjds/nondjango-storages/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nondjango-storages", "package_url": "https://pypi.org/project/nondjango-storages/", "platform": "", "project_url": "https://pypi.org/project/nondjango-storages/", "project_urls": {"Homepage": "https://github.com/alanjds/nondjango-storages/"}, "release_url": "https://pypi.org/project/nondjango-storages/0.3.1/", "requires_dist": ["boto3", "pytest ; extra == \"test\"", "pytest-cov ; extra == \"test\""], "requires_python": ">=3.5", "summary": "nondjango-storages - Because the API is great but dependency on Django is not.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nondjango.storages</h1>\n<p><a href=\"https://travis-ci.org/alanjds/nondjango-storages\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/343ca263aa1c7efae914a476b9d0fd0d1591c7c8/68747470733a2f2f7472617669732d63692e6f72672f616c616e6a64732f6e6f6e646a616e676f2d73746f72616765732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://gitter.im/nondjango/storages?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/nondjango/storages\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></p>\n<p>This package provides implementations of\n<a href=\"https://docs.djangoproject.com/en/3.0/ref/files/storage/#module-django.core.files.storage\" rel=\"nofollow\">Django' File Storage API</a>\nbut without having Django as dependency. This is inspired on\n<a href=\"https://pypi.org/project/django-storages/\" rel=\"nofollow\">django-storages</a> package, that implements\nseveral storages as Azure, Dropbox, SFTP and so, but depends on Django.</p>\n<h2>Why nondjango?</h2>\n<p>Django is recognized as a \"beast\" web framework, with everything and a sink.\nIs very good to have your needs covered. But when you want to fly light, Django\nis waaay too much.</p>\n<p>After using Django for some time you realize that several parts are not really\ntied to Django and could be useful outside of it. Storage is one of this parts.</p>\n<h2>Why a Django interface if not using Django itself?</h2>\n<p>Then you end up doing little scripts to fit your needs. And your co-workers do\nthe same. After that, a newcomer on the company (or to the project) will have to\nlearn how to interact with half-dozen of ways to upload a file,\ndepending on the project and backing storage choices like S3 or Azure or IPFS.</p>\n<p>This makes maintenance harder and learning curve steeper.</p>\n<p>Instead, stick with a well-known interface that have usage tutorials available\nonline and is generic enough to not tie you on a vendor or implementation.\nHad you tried to exchange from SFTP to S3 on the past?\nIdeally, it should be as easy as pointing the driver.</p>\n<h2>Requirements &amp; Compatibility</h2>\n<ul>\n<li>Python (3.5, 3.6, 3.7, 3.8)</li>\n<li><code>boto3</code> for S3 backend</li>\n<li><code>flit</code> for installation from sources</li>\n</ul>\n<h2>Installation</h2>\n<p>You can install this library using pip:</p>\n<pre><span class=\"go\">pip install nondjango-storages</span>\n</pre>\n<p>Or via sources, using <a href=\"https://pypi.org/project/flit/\" rel=\"nofollow\">Flit</a>:</p>\n<pre><span class=\"go\">git clone https://github.com/alanjds/nondjango-storages.git</span>\n<span class=\"go\">cd nondjango-storages</span>\n<span class=\"go\">pip install flit</span>\n<span class=\"go\">flit install</span>\n</pre>\n<h2>Quickstart</h2>\n<p>The interface loosely implements the Django's <a href=\"https://docs.djangoproject.com/en/3.0/ref/files/storage/#the-storage-class\" rel=\"nofollow\">Storage class interface</a>, described on <code>nondjango.storages.BaseStorage</code>. Right now there is implementations for\nFilesystemStorage and S3Storage only,\naside from the TemporaryFilesystemStorage used on automated tests.</p>\n<p>Instantiate the desired storage, <code>BaseStorage.open()</code> your filelike\nand manipulate it. When done, remember to <code>.close()</code> it.\nClosing the file is specially important on some storages, as S3.</p>\n<h3>Initializing some storage</h3>\n<p>As the storages are not tied to a central settings file, more than one can be\ninstantiated at the same time.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nondjango.storages</span> <span class=\"kn\">import</span> <span class=\"n\">S3Storage</span><span class=\"p\">,</span> <span class=\"n\">TemporaryFilesystemStorage</span>\n\n<span class=\"c1\"># Initializing a local temporary folder storage:</span>\n<span class=\"n\">disposable_storage</span> <span class=\"o\">=</span> <span class=\"n\">TemporaryFilesystemStorage</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Initializing an S3Storage:</span>\n<span class=\"n\">S3_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'AWS_ACCESS_KEY_ID'</span><span class=\"p\">:</span> <span class=\"s1\">'Q3AM3UQ867SPQQA43P2F'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'AWS_SECRET_ACCESS_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'AWS_S3_REGION_NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'us-east-1'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'AWS_S3_ENDPOINT_URL'</span><span class=\"p\">:</span> <span class=\"s1\">'https://play.min.io:9000'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'AWS_S3_SIGNATURE_VERSION'</span><span class=\"p\">:</span> <span class=\"s1\">'s3v4'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">s3_storage</span> <span class=\"o\">=</span> <span class=\"n\">S3Storage</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">=</span><span class=\"n\">S3_SETTINGS</span><span class=\"p\">,</span> <span class=\"n\">workdir</span><span class=\"o\">=</span><span class=\"s1\">'s3://nondjango-storages-test/storage-test-readme/'</span><span class=\"p\">)</span>\n</pre>\n<h3>Opening and manipulating a file</h3>\n<p>Access files via <code>BaseStorage.open()</code> implementations,\nfollowing the <a href=\"https://docs.djangoproject.com/en/3.0/ref/files/storage/#django.core.files.storage.Storage.open\" rel=\"nofollow\">Django docs</a> over its usage.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">s3_storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'spam.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file_on_cloud</span><span class=\"p\">:</span>\n    <span class=\"n\">file_on_cloud</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'Eggs'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">disposable_storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'spam.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file_on_disk</span><span class=\"p\">:</span>\n    <span class=\"n\">file_on_disk</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'Eggs'</span><span class=\"p\">)</span>\n</pre>\n<p>If you are not using files as context managers, <strong>remember to close your files</strong>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span> <span class=\"o\">=</span> <span class=\"n\">s3_storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'span.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"s1\">'Eggs'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Advanced</h2>\n<p>Most of the generally-useful interface of Django Filestorage API is implemented,\nas BaseStorage <code>.size()</code>, <code>.url()</code>, <code>.listdir()</code>, <code>.exists()</code> and <code>.delete()</code>.\nAlso some extra tools like <code>.hash()</code>, that computes or grabs the file hashes if\navailable. For now, S3Storage keeps the MD5 and Sha256 of the files on upload.\nFilesystem-backed storages computes them on the fly.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span> <span class=\"o\">=</span> <span class=\"n\">s3_storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'span.txt'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s1\">'md5'</span><span class=\"p\">)</span>\n<span class=\"s1\">'9890f06976131702b942e59eda2f750a'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_on_cloud</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s1\">'sha256'</span><span class=\"p\">)</span>\n<span class=\"s1\">'f1c1f57728f932efde20e53703ee5f96b1cebdc15b8578b7faa727c89dbfe03f'</span>\n</pre>\n<h2>Testing</h2>\n<p>In order to get started with testing, you will need to install <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>.\nOnce installed, you can then run one environment locally, to speed up your development cycle:</p>\n<pre><code>$ tox -e py37\n</code></pre>\n<p>Once you submit a pull request, your changes will be run against many environments with Travis CI.</p>\n<h2>License</h2>\n<p>This package is licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>\nand can undestand more at <a href=\"http://choosealicense.com/licenses/apache/\" rel=\"nofollow\">http://choosealicense.com/licenses/apache/</a> on the\nsidebar notes. Another copy is attached on the LICENSE file on the root of this\nrepo.</p>\n<p>Apache Licence v2.0 is a MIT-like licence. This means, in plain English:</p>\n<ul>\n<li>It's truly open source</li>\n<li>You can use it as you wish, for money or not</li>\n<li>You can sublicense it (change the licence!!)</li>\n<li>This way, you can even use it on your closed-source project\nAs long as:</li>\n<li>You cannot use the authors name, logos, etc, to endorse a project</li>\n<li>You keep the authors copyright notices where this code got used, even on your closed-source project\n(come on, even Microsoft kept BSD notices on Windows about its TCP/IP stack :P)</li>\n</ul>\n<h3>API License?</h3>\n<p>After the Oracle vs Google claim, the copyright of APIs became a grey area.\nDespite personal believes, consider that the reimplemented API is of Django and\nDjango is licensed as 3-Clause BSD. Such license is included on the\nLICENSE-DJANGO file in the root folder.\nThis should be enough even if Oracle wins and come to buy Django somehow someday.</p>\n\n          </div>"}, "last_serial": 7094386, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3317bbaeddac31be58487f16703b09c2", "sha256": "7d511a53e24305c19ec947da6ad5a2e407ca0e6c68f5658d4d0022b26f31e177"}, "downloads": -1, "filename": "nondjango_storages-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3317bbaeddac31be58487f16703b09c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27431, "upload_time": "2019-04-28T05:23:40", "upload_time_iso_8601": "2019-04-28T05:23:40.242776Z", "url": "https://files.pythonhosted.org/packages/f8/6d/15ac4942cab285dff889f428cca24f119ec2b71d7c4148e3528444955a91/nondjango_storages-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8fd4c119bee707d1a40740fcbb6cb3c", "sha256": "23808cf1a06ee0d43d17b510978e3a391be8ba97b0542a0b48572f32bf72f4ef"}, "downloads": -1, "filename": "nondjango-storages-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b8fd4c119bee707d1a40740fcbb6cb3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11669, "upload_time": "2019-04-28T05:24:19", "upload_time_iso_8601": "2019-04-28T05:24:19.978781Z", "url": "https://files.pythonhosted.org/packages/99/30/248394c99afb5db9cad4e9db9c88b76faf220319255ef2db2f804f434fed/nondjango-storages-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8d57f0c94b80eed5fb4b51f298082525", "sha256": "e7274b60c32aec6a640e6cc3b5777768baeafa715286d85c3f03c7a923e4b9dd"}, "downloads": -1, "filename": "nondjango_storages-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d57f0c94b80eed5fb4b51f298082525", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27467, "upload_time": "2019-06-05T18:24:08", "upload_time_iso_8601": "2019-06-05T18:24:08.709884Z", "url": "https://files.pythonhosted.org/packages/90/f8/595e51d589e887fd6e70450389d616aab1950a481836372f352641800c50/nondjango_storages-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e600fc711ad67396f512f59314da61fb", "sha256": "9eb6a24db5ad44d895f1539bc5b93bdb708c376abb87af1a354fd299607ef15e"}, "downloads": -1, "filename": "nondjango-storages-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e600fc711ad67396f512f59314da61fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11831, "upload_time": "2019-06-05T18:24:16", "upload_time_iso_8601": "2019-06-05T18:24:16.994313Z", "url": "https://files.pythonhosted.org/packages/4a/c3/6edaf0702c025b69e3ec3584e6fd73893932a1f27ccf8b998e635a1f7930/nondjango-storages-0.1.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "776b93a836a561cee718db7360a061d9", "sha256": "fedb4bfd10c7f4fbbd861852c148ae9d248593a6b29a8bc1715be2384d10d19f"}, "downloads": -1, "filename": "nondjango_storages-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "776b93a836a561cee718db7360a061d9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12520, "upload_time": "2020-04-17T16:23:23", "upload_time_iso_8601": "2020-04-17T16:23:23.547448Z", "url": "https://files.pythonhosted.org/packages/36/90/c4c5d1f8755c966d699e674031dbb580a1f3f66dd5ce3370522d264904e8/nondjango_storages-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11f658d37401037b44967bdac3920370", "sha256": "f8d33e528bec14242759189682293b30b76e22056bbe44880f0ecfef05e2af35"}, "downloads": -1, "filename": "nondjango_storages-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "11f658d37401037b44967bdac3920370", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15399, "upload_time": "2020-04-17T16:28:09", "upload_time_iso_8601": "2020-04-17T16:28:09.969227Z", "url": "https://files.pythonhosted.org/packages/1b/e8/966569df3f1fed5400b1173aa938e001458b8da1e83cd7b7bbcdf143abf9/nondjango_storages-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70bfc5085b4441cdcc9ae5c3a12493d6", "sha256": "a8967881b8f8482a8c55946466a23d0932c78fba8363b6450a963b6e3f0bd4b0"}, "downloads": -1, "filename": "nondjango-storages-0.2.3.tar.gz", "has_sig": false, "md5_digest": "70bfc5085b4441cdcc9ae5c3a12493d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17023, "upload_time": "2020-04-17T16:23:38", "upload_time_iso_8601": "2020-04-17T16:23:38.962909Z", "url": "https://files.pythonhosted.org/packages/da/e0/5296c75726af3c567d2a00205049844c5335181daac6dbf7bbd47357620d/nondjango-storages-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "8e09b32279991c3489fad4eade961b3e", "sha256": "18b73242ea3cbbbe10570d0c96137d7a4a4b16495e0f6f0a964d9f9cfbf6ee33"}, "downloads": -1, "filename": "nondjango_storages-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8e09b32279991c3489fad4eade961b3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15401, "upload_time": "2020-04-17T16:28:39", "upload_time_iso_8601": "2020-04-17T16:28:39.083691Z", "url": "https://files.pythonhosted.org/packages/44/30/6d98ebe7e717a4d1c0e665cf899d483ecfb0779edfa9bb28510b434c20f4/nondjango_storages-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c919ccd25c039736f93a5947b59921d8", "sha256": "d5a4c6e351d87adb86cf88860ea0386bf8de2e2955e8cda83e730fdd6b28767e"}, "downloads": -1, "filename": "nondjango-storages-0.2.4.tar.gz", "has_sig": false, "md5_digest": "c919ccd25c039736f93a5947b59921d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17077, "upload_time": "2020-04-17T16:28:44", "upload_time_iso_8601": "2020-04-17T16:28:44.239742Z", "url": "https://files.pythonhosted.org/packages/7a/3a/eadab6dca464d483aa561afb2b8aa529023f435f38bef2737a7be40d4eb5/nondjango-storages-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "a14aaa43c8efa2f52a256e7e72262829", "sha256": "278899ae7bce2bc41a4ee54885e47802c73be994d9caf6ea3ba6493bbc4d85e2"}, "downloads": -1, "filename": "nondjango_storages-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a14aaa43c8efa2f52a256e7e72262829", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15401, "upload_time": "2020-04-17T16:38:07", "upload_time_iso_8601": "2020-04-17T16:38:07.951177Z", "url": "https://files.pythonhosted.org/packages/00/1c/a853134db60a941cfc813a0e34018a8eb1e18a70b743cbfd1dff73680ca4/nondjango_storages-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38d6a336928572d4050d3b46612a488a", "sha256": "ce2e120824d3f688f63f78379bfeccb54383096e3d87e12b3e023f0757afc711"}, "downloads": -1, "filename": "nondjango-storages-0.2.5.tar.gz", "has_sig": false, "md5_digest": "38d6a336928572d4050d3b46612a488a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17074, "upload_time": "2020-04-17T16:38:13", "upload_time_iso_8601": "2020-04-17T16:38:13.182228Z", "url": "https://files.pythonhosted.org/packages/0c/d0/1ad4ac28e22b9a01873e4f565b6a04681bf98bc4da84d235486d8258f8b7/nondjango-storages-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8a1ecccad36406acf3702bc2cd446d53", "sha256": "88ab049f2fbead45422783a6c4a329ce426af30cd172d42fed354982f2e445c8"}, "downloads": -1, "filename": "nondjango_storages-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1ecccad36406acf3702bc2cd446d53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15544, "upload_time": "2020-04-22T18:29:49", "upload_time_iso_8601": "2020-04-22T18:29:49.045164Z", "url": "https://files.pythonhosted.org/packages/24/8c/bedea33fc1935577654ba36192ff87984f5bae7bae8bf170480abb6ffaca/nondjango_storages-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1836636fbaa87b4fef916fc6433663b", "sha256": "24ca36017b12a8198b4aa97d2a28f8ff0268fcd0648913c1575c12063eec5a88"}, "downloads": -1, "filename": "nondjango-storages-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a1836636fbaa87b4fef916fc6433663b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17230, "upload_time": "2020-04-22T18:29:58", "upload_time_iso_8601": "2020-04-22T18:29:58.049619Z", "url": "https://files.pythonhosted.org/packages/3c/4f/6c093e1a5827bccb1da6cb30d7a22621dcabd640926eb6e2ad1766da1ad4/nondjango-storages-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "fd9adfdd84d29553b5f3f472422f6dd5", "sha256": "a50e5f861eb7cb8b7b358d98e26e9e898d6204f57b99814a361e000879e61b86"}, "downloads": -1, "filename": "nondjango_storages-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd9adfdd84d29553b5f3f472422f6dd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15681, "upload_time": "2020-04-24T16:46:30", "upload_time_iso_8601": "2020-04-24T16:46:30.664973Z", "url": "https://files.pythonhosted.org/packages/1f/d4/e6eaea04a78d3eb2f06297aac942192bfeebebb2037de3be45cb7b50447c/nondjango_storages-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63a720be03e9dc9a612cb22d4afec453", "sha256": "493f9d514eb75dfec0e7d45fe3f31d53292c9f5d1b11031a8bef80535d3f20c9"}, "downloads": -1, "filename": "nondjango-storages-0.3.1.tar.gz", "has_sig": false, "md5_digest": "63a720be03e9dc9a612cb22d4afec453", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17403, "upload_time": "2020-04-24T16:46:35", "upload_time_iso_8601": "2020-04-24T16:46:35.459980Z", "url": "https://files.pythonhosted.org/packages/79/77/d94605c76d04bfced9e2bee9d8f4552076c2431bb247a75183e71d8e96ee/nondjango-storages-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd9adfdd84d29553b5f3f472422f6dd5", "sha256": "a50e5f861eb7cb8b7b358d98e26e9e898d6204f57b99814a361e000879e61b86"}, "downloads": -1, "filename": "nondjango_storages-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd9adfdd84d29553b5f3f472422f6dd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15681, "upload_time": "2020-04-24T16:46:30", "upload_time_iso_8601": "2020-04-24T16:46:30.664973Z", "url": "https://files.pythonhosted.org/packages/1f/d4/e6eaea04a78d3eb2f06297aac942192bfeebebb2037de3be45cb7b50447c/nondjango_storages-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63a720be03e9dc9a612cb22d4afec453", "sha256": "493f9d514eb75dfec0e7d45fe3f31d53292c9f5d1b11031a8bef80535d3f20c9"}, "downloads": -1, "filename": "nondjango-storages-0.3.1.tar.gz", "has_sig": false, "md5_digest": "63a720be03e9dc9a612cb22d4afec453", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17403, "upload_time": "2020-04-24T16:46:35", "upload_time_iso_8601": "2020-04-24T16:46:35.459980Z", "url": "https://files.pythonhosted.org/packages/79/77/d94605c76d04bfced9e2bee9d8f4552076c2431bb247a75183e71d8e96ee/nondjango-storages-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:53 2020"}