{"info": {"author": "Kailash Nadh", "author_email": "kailash.nadh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Database", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===========\r\nSimpleMysql\r\n===========\r\n\r\nAn ultra simplistic wrapper for Python MySQLdb with very basic functionality\r\n\r\nhttp://nadh.in/code/simplemysql\r\n\r\nLicense: GPL v2\r\n\r\nInstallation\r\n------------\r\n``pip install simplemysql``\r\n\r\nUsage\r\n-----\r\n\r\n::\r\n\r\n\tfrom simplemysql import SimpleMysql\r\n\r\n\tdb = SimpleMysql(\r\n\t\t\thost=\"localhost\",\r\n\t\t\tdb=\"mydatabase\",\r\n\t\t\tuser=\"username\",\r\n\t\t\tpasswd=\"password\"\r\n\t)\r\n\r\n\t# insert a record to the *books* table\r\n\tdb.insert(\"books\", {\"type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55, year: \"1997\"})\r\n\r\n\tbook = db.getOne(\"books\", [\"name\"], [\"year = 1997\"])\r\n\r\n\tprint \"The book's name is \" + book.name\r\n\r\nQuery methods\r\n-------------\r\n\r\ninsert(), update(), delete(), getOne(), getAll(), query()\r\n\r\ninsert(table, record{})\r\n^^^^^^^^^^^^^^^^^^^^^^^\r\nInserts a single record into a table.\r\n\r\n::\r\n\r\n  db.insert(\"food\", {\"type\": \"fruit\", \"name\": \"Apple\", \"color\": \"red\"})\r\n  db.insert(\"books\", {\"type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55})\r\n\r\n\r\nupdate(table, row{}, condition[])\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nUpdate one more or rows based on a condition (or no condition).\r\n\r\n::\r\n\r\n  # update all rows\r\n  db.update(\"books\", {\"discount\": 0})\r\n\r\n  # update rows based on a simple hardcoded condition\r\n  db.update(\"books\",\r\n          {\"discount\": 10},\r\n          [\"id=1\"]\r\n  )\r\n\r\n  # update rows based on a parametrized condition\r\n  db.update(\"books\",\r\n          {\"discount\": 10},\r\n          (\"id=%s AND year=%s\", [id, year])\r\n  )\r\n\r\ninsertOrUpdate(table, row{}, key)\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nInsert a new row, or update if there is a primary key conflict.\r\n\r\n::\r\n\r\n  # insert a book with id 123. if it already exists, update values\r\n  db.insert(\"books\",\r\n                  {\"id\": 123, type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55},\r\n                  \"id\"\r\n  )\r\n\r\ngetOne(table, fields[], condition[], order[], limit[])\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\ngetAll(table, fields[], condition[], order[], limit[])\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nGet a single record or multiple records from a table given a condition (or no condition). The resultant rows are returned as namedtuples. getOne() returns a single namedtuple, and getAll() returns a list of namedtuples.\r\n\r\n::\r\n\r\n  book = db.getOne(\"books\", [\"id\", \"name\"])\r\n\r\n  # get a row based on a simple hardcoded condition\r\n  book = db.getOne(\"books\", [\"name\", \"year\"], (\"id=1\"))\r\n\r\n  # get a row based on a simple hardcoded condition\r\n  book = db.getOne(\"books\", [\"name\", \"year\"], (\"id=1\"))\r\n\r\n  # get multiple rows based on a parametrized condition\r\n  books = db.getAll(\"books\",\r\n          [\"id\", \"name\"],\r\n          (\"year > %s and price < 15\", [year, 12.99])\r\n  )\r\n\r\n  # get multiple rows based on a parametrized condition with an order and limit specified\r\n  books = db.getAll(\"books\",\r\n          [\"id\", \"name\", \"year\"],\r\n          (\"year > %s and price < 15\", [year, 12.99]),\r\n          [\"year\", \"DESC\"],       # ORDER BY year DESC\r\n          [0, 10]                 # LIMIT 0, 10\r\n  )\r\n\r\nlastId()\r\n^^^^^^^^\r\nGet the last insert id\r\n\r\n\r\ndelete(table, fields[], condition[], order[], limit[])\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nDelete one or more records based on a condition (or no condition)\r\n\r\n::\r\n\r\n  # delete all rows\r\n  db.delete(\"books\")\r\n\r\n  # delete rows based on a condition\r\n  db.delete(\"books\", (\"price > %s AND year < %s\", [25, 1999]))\r\n\r\nquery(table)\r\n^^^^^^^^^^^^\r\nRun a raw SQL query. The MySQLdb cursor is returned.\r\n\r\n::\r\n\r\n  db.query(\"DELETE FROM books WHERE year > 2005\")\r\n", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/knadh/simplemysql", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://nadh.in/code/simplemysql", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "simplemysql", "package_url": "https://pypi.org/project/simplemysql/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/simplemysql/", "project_urls": {"Download": "http://github.com/knadh/simplemysql", "Homepage": "http://nadh.in/code/simplemysql"}, "release_url": "https://pypi.org/project/simplemysql/1.25/", "requires_dist": null, "requires_python": null, "summary": "An ultra simple wrapper for Python MySQLdb with very basic functionality", "version": "1.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An ultra simplistic wrapper for Python MySQLdb with very basic functionality</p>\n<p><a href=\"http://nadh.in/code/simplemysql\" rel=\"nofollow\">http://nadh.in/code/simplemysql</a></p>\n<p>License: GPL v2</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install simplemysql</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>from simplemysql import SimpleMysql\n\ndb = SimpleMysql(\n                host=\"localhost\",\n                db=\"mydatabase\",\n                user=\"username\",\n                passwd=\"password\"\n)\n\n# insert a record to the *books* table\ndb.insert(\"books\", {\"type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55, year: \"1997\"})\n\nbook = db.getOne(\"books\", [\"name\"], [\"year = 1997\"])\n\nprint \"The book's name is \" + book.name\n</pre>\n</div>\n<div id=\"query-methods\">\n<h2>Query methods</h2>\n<p>insert(), update(), delete(), getOne(), getAll(), query()</p>\n<div id=\"insert-table-record\">\n<h3>insert(table, record{})</h3>\n<p>Inserts a single record into a table.</p>\n<pre>db.insert(\"food\", {\"type\": \"fruit\", \"name\": \"Apple\", \"color\": \"red\"})\ndb.insert(\"books\", {\"type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55})\n</pre>\n</div>\n<div id=\"update-table-row-condition\">\n<h3>update(table, row{}, condition[])</h3>\n<p>Update one more or rows based on a condition (or no condition).</p>\n<pre># update all rows\ndb.update(\"books\", {\"discount\": 0})\n\n# update rows based on a simple hardcoded condition\ndb.update(\"books\",\n        {\"discount\": 10},\n        [\"id=1\"]\n)\n\n# update rows based on a parametrized condition\ndb.update(\"books\",\n        {\"discount\": 10},\n        (\"id=%s AND year=%s\", [id, year])\n)\n</pre>\n</div>\n<div id=\"insertorupdate-table-row-key\">\n<h3>insertOrUpdate(table, row{}, key)</h3>\n<p>Insert a new row, or update if there is a primary key conflict.</p>\n<pre># insert a book with id 123. if it already exists, update values\ndb.insert(\"books\",\n                {\"id\": 123, type\": \"paperback\", \"name\": \"Time Machine\", \"price\": 5.55},\n                \"id\"\n)\n</pre>\n</div>\n<div id=\"getone-table-fields-condition-order-limit\">\n<h3>getOne(table, fields[], condition[], order[], limit[])</h3>\n</div>\n<div id=\"getall-table-fields-condition-order-limit\">\n<h3>getAll(table, fields[], condition[], order[], limit[])</h3>\n<p>Get a single record or multiple records from a table given a condition (or no condition). The resultant rows are returned as namedtuples. getOne() returns a single namedtuple, and getAll() returns a list of namedtuples.</p>\n<pre>book = db.getOne(\"books\", [\"id\", \"name\"])\n\n# get a row based on a simple hardcoded condition\nbook = db.getOne(\"books\", [\"name\", \"year\"], (\"id=1\"))\n\n# get a row based on a simple hardcoded condition\nbook = db.getOne(\"books\", [\"name\", \"year\"], (\"id=1\"))\n\n# get multiple rows based on a parametrized condition\nbooks = db.getAll(\"books\",\n        [\"id\", \"name\"],\n        (\"year &gt; %s and price &lt; 15\", [year, 12.99])\n)\n\n# get multiple rows based on a parametrized condition with an order and limit specified\nbooks = db.getAll(\"books\",\n        [\"id\", \"name\", \"year\"],\n        (\"year &gt; %s and price &lt; 15\", [year, 12.99]),\n        [\"year\", \"DESC\"],       # ORDER BY year DESC\n        [0, 10]                 # LIMIT 0, 10\n)\n</pre>\n</div>\n<div id=\"lastid\">\n<h3>lastId()</h3>\n<p>Get the last insert id</p>\n</div>\n<div id=\"delete-table-fields-condition-order-limit\">\n<h3>delete(table, fields[], condition[], order[], limit[])</h3>\n<p>Delete one or more records based on a condition (or no condition)</p>\n<pre># delete all rows\ndb.delete(\"books\")\n\n# delete rows based on a condition\ndb.delete(\"books\", (\"price &gt; %s AND year &lt; %s\", [25, 1999]))\n</pre>\n</div>\n<div id=\"query-table\">\n<h3>query(table)</h3>\n<p>Run a raw SQL query. The MySQLdb cursor is returned.</p>\n<pre>db.query(\"DELETE FROM books WHERE year &gt; 2005\")\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2527423, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "29bb7f88cbd2a2eeedcd6cdf4b2e68f0", "sha256": "ed62222c49f313e42958084917d8e3e63032386b3641d83429440cf52e2ddf80"}, "downloads": -1, "filename": "simplemysql-0.1.zip", "has_sig": false, "md5_digest": "29bb7f88cbd2a2eeedcd6cdf4b2e68f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6247, "upload_time": "2013-06-04T09:08:43", "upload_time_iso_8601": "2013-06-04T09:08:43.801955Z", "url": "https://files.pythonhosted.org/packages/7c/52/df84dae024ff8b343e9b42d815b12cf3e93f38ad22d1572ef427bdbcf4e4/simplemysql-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6e4d51397287c959919510d11a694c2c", "sha256": "61a04e04e57debe1c97fa97bc73dd905f20306ace1de49dffe1e66c74ad05709"}, "downloads": -1, "filename": "simplemysql-0.2.zip", "has_sig": false, "md5_digest": "6e4d51397287c959919510d11a694c2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6381, "upload_time": "2013-06-06T10:35:56", "upload_time_iso_8601": "2013-06-06T10:35:56.268130Z", "url": "https://files.pythonhosted.org/packages/40/e8/f2cc4b8326038841f109084e288e7299c4dd3e6c818722d40e109a66175c/simplemysql-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d6c8502904af7d87986aa77b848300b3", "sha256": "4757ad66e07f780c86543ed17aa05d23eeae9e378b21aed4d4804b9448811108"}, "downloads": -1, "filename": "simplemysql-0.3.zip", "has_sig": false, "md5_digest": "d6c8502904af7d87986aa77b848300b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6378, "upload_time": "2013-06-17T07:54:04", "upload_time_iso_8601": "2013-06-17T07:54:04.488687Z", "url": "https://files.pythonhosted.org/packages/dd/c9/2868576ee2295ccf238e9b7429d6c205b35455bbde86d626fdbb0abd96e6/simplemysql-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f8072e13bfd1d8fba5ca3e8478270826", "sha256": "504192f8b5b2c2aab9e66fad1f25b599f59038844b8ca018b6fb8896c75f3264"}, "downloads": -1, "filename": "simplemysql-0.4.zip", "has_sig": false, "md5_digest": "f8072e13bfd1d8fba5ca3e8478270826", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6383, "upload_time": "2013-06-17T08:18:58", "upload_time_iso_8601": "2013-06-17T08:18:58.605624Z", "url": "https://files.pythonhosted.org/packages/18/93/dd4a337e1843b0ff8e18a9814fc5c4fd8f14651e17f681a954d66f60bf6d/simplemysql-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "d8d9b9b87b607f1c2ec6195a9939961a", "sha256": "824054ca8eb5b651556e01b6c1c7ec767ee71c2c55352e7e307924a7818db56a"}, "downloads": -1, "filename": "simplemysql-0.5.zip", "has_sig": false, "md5_digest": "d8d9b9b87b607f1c2ec6195a9939961a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6384, "upload_time": "2013-06-17T09:27:50", "upload_time_iso_8601": "2013-06-17T09:27:50.749998Z", "url": "https://files.pythonhosted.org/packages/29/e4/47546edd5ecca529a8a8950c4b72036a178e70752f61f38fbc623b63bd36/simplemysql-0.5.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "b60e98f99673d8dd8358f16f86fbd623", "sha256": "ac26b40b9a01bd33a7fd9e1732255f343a57d845d9bfedf049dec030bec692af"}, "downloads": -1, "filename": "simplemysql-0.6.zip", "has_sig": false, "md5_digest": "b60e98f99673d8dd8358f16f86fbd623", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6387, "upload_time": "2013-07-03T04:24:00", "upload_time_iso_8601": "2013-07-03T04:24:00.517215Z", "url": "https://files.pythonhosted.org/packages/ca/e4/14df4e79978e0f4fa1659217d9573da4b2bbeecd1131d1c6e4e5ceffdfcc/simplemysql-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "606ff1dc6f54dcce2713770c092ce8fc", "sha256": "c08d68a32d9da08e5c23793d837b94073cd67d14def6ad4fb94c6524abb43fa8"}, "downloads": -1, "filename": "simplemysql-0.7.zip", "has_sig": false, "md5_digest": "606ff1dc6f54dcce2713770c092ce8fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6421, "upload_time": "2013-07-05T11:51:48", "upload_time_iso_8601": "2013-07-05T11:51:48.678056Z", "url": "https://files.pythonhosted.org/packages/79/91/0229b18133dfeb270421057ac20785918b4fab65447b98de8afc2f2e6dd4/simplemysql-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "cd873462252bea4ae7c274fa418a8097", "sha256": "5c29a3a24edfb1f7903b9c524726e98047cd9146f1d54682a7307f03729b8594"}, "downloads": -1, "filename": "simplemysql-0.8.zip", "has_sig": false, "md5_digest": "cd873462252bea4ae7c274fa418a8097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6453, "upload_time": "2013-08-01T09:21:44", "upload_time_iso_8601": "2013-08-01T09:21:44.857744Z", "url": "https://files.pythonhosted.org/packages/3a/ed/2245022049c78f7e6b9a4c07826b0e85cbc30b67eee5073d8d329f4dbb13/simplemysql-0.8.zip", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "7f27abdd6f22e67da423baa5ce0f5720", "sha256": "39a298c0ad9cbbdf98b0b92f384c2a3091cc8c6bc871740dbeab8df1c0d3c190"}, "downloads": -1, "filename": "simplemysql-0.9.zip", "has_sig": false, "md5_digest": "7f27abdd6f22e67da423baa5ce0f5720", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6472, "upload_time": "2013-08-24T05:50:46", "upload_time_iso_8601": "2013-08-24T05:50:46.680182Z", "url": "https://files.pythonhosted.org/packages/97/64/b103a7e0a24e661ebbe8cea7ac73f4cf8a27cb43197a5ddf25f070d1e10c/simplemysql-0.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "3ab94b33b77b0c1bc092af8f707d5d35", "sha256": "dd134dfe4422c0c21f709177e231ecaaa021fb356055d16961cbc7a5847b93af"}, "downloads": -1, "filename": "simplemysql-1.0.zip", "has_sig": false, "md5_digest": "3ab94b33b77b0c1bc092af8f707d5d35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6516, "upload_time": "2014-02-23T12:21:14", "upload_time_iso_8601": "2014-02-23T12:21:14.338487Z", "url": "https://files.pythonhosted.org/packages/de/e5/1f075f8a7b7f5b58dedd77ba0f7686ccb00503eb724350f566d749d641ad/simplemysql-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "9c2d81b456f2ab4cd21fdad97f6783d9", "sha256": "93c3c64f8ec06aaabb322968844e4d8e8286be070f02a16c39d3e239ad04b16d"}, "downloads": -1, "filename": "simplemysql-1.1.tar.gz", "has_sig": false, "md5_digest": "9c2d81b456f2ab4cd21fdad97f6783d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4238, "upload_time": "2015-12-12T11:10:56", "upload_time_iso_8601": "2015-12-12T11:10:56.688510Z", "url": "https://files.pythonhosted.org/packages/b5/ac/07d06aad041473fd9320000330db4bbdd1b7c5fee3f30d2be1dda68d3780/simplemysql-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "8f56115b2d6e22c7d87b280d6565fcf5", "sha256": "89c6e25ec546942a50efa6992e52b90eb8e97509643ddd0008c081448c4f4ca9"}, "downloads": -1, "filename": "simplemysql-1.2.tar.gz", "has_sig": false, "md5_digest": "8f56115b2d6e22c7d87b280d6565fcf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4290, "upload_time": "2016-05-17T05:32:20", "upload_time_iso_8601": "2016-05-17T05:32:20.797388Z", "url": "https://files.pythonhosted.org/packages/f6/3e/6858ecab5e95682c99ac2162460311df66261027b2e05078cf856e9959b8/simplemysql-1.2.tar.gz", "yanked": false}], "1.25": [{"comment_text": "", "digests": {"md5": "4262841d62a6e369ed3bdc04f2441ae7", "sha256": "fd437c6bc7141f4bac40581725f42e7c645d79ec9ce6512227119506883de698"}, "downloads": -1, "filename": "simplemysql-1.25.tar.gz", "has_sig": false, "md5_digest": "4262841d62a6e369ed3bdc04f2441ae7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4479, "upload_time": "2016-12-19T03:54:10", "upload_time_iso_8601": "2016-12-19T03:54:10.769253Z", "url": "https://files.pythonhosted.org/packages/9a/d8/6c14e05a28ef89035a456c7f94ebe67a68fb13c1f2e3bc3bab6e81e0a9d6/simplemysql-1.25.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4262841d62a6e369ed3bdc04f2441ae7", "sha256": "fd437c6bc7141f4bac40581725f42e7c645d79ec9ce6512227119506883de698"}, "downloads": -1, "filename": "simplemysql-1.25.tar.gz", "has_sig": false, "md5_digest": "4262841d62a6e369ed3bdc04f2441ae7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4479, "upload_time": "2016-12-19T03:54:10", "upload_time_iso_8601": "2016-12-19T03:54:10.769253Z", "url": "https://files.pythonhosted.org/packages/9a/d8/6c14e05a28ef89035a456c7f94ebe67a68fb13c1f2e3bc3bab6e81e0a9d6/simplemysql-1.25.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:27 2020"}