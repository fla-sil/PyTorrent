{"info": {"author": "Allamand Sebastien", "author_email": "sebastien@allamand.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: Public Domain", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Utilities"], "description": "pwd-cli\n=========\n\n*A simple python CLI for your on-premise instance of Play With Docker*\n\n\n*Create a 5 node Cluster Swarm in 5 seconds!*\n\n\nPurpose\n-------\n\nThis is a CLI that allows you to create, connecte to, view, and delete \ninstances of Play-With-Docker.\n\n- You Need to have an instance of [Play-With-Docker](https://github.com/franela/play-with-docker) without the Capcha test.\n\nThe Goal of this project is to allow you or your users to quickly create ready to uses clusters swarm, and uses it without\nleaving your terminal.\n\nInstallation\n------------\n\nThe easiest way is to install from Pypi library::\n\n    $ pip install pwdc\n\n\nUsage\n-----\n\nYou can just uses the following commands to create and use your cluster::\n\n    $ pwdc init --pwd-url=http://<your-pwd-server>\n\nInitialise the pwdc configuration file in ~/.pwdc.\nYou need to update the ~/.pwdc value with the url of your PWD instance if not given the `--pwd-url` parameter::\n\n    $ pwdc create\n\nThis will uses the PWD instance from your `~/.pwdc` file, then :\n\n- create a PWD session\n- create 5 nodes\n- init a swarm with a master on node1\n- join the swarm from the node2 to node5\n- provides informations on your cluster\n\nThe Cluster is ready to uses, just point your docker CLI on the new Swarm::\n\n\n    $ eval $(pwdc env)\n    $ docker info\n\n\n>From then, you can manipulaite the swarm cluster with your docker or docker-compose CLI::\n\n    $ pwdc info\n\nShow you the informations about your PWD session.\n\n\nYou can have multiple PWD session, this is manage with the `--session_file` parameter, which locally store your PWD session informations.\n\n\nAfter a while, the session will be aumatically deleted, but you can also delete it manually when you are done with your session::\n\n    $ pwdc delete\n    $ eval $(pwdc env -u)\n\nthe last eval if to reset your docker client config\n\n\n\nContribution\n------------\n\nIf you've cloned this project, and want to install the library (*and all\ndevelopment dependencies*), the command you'll want to run is::\n\n    $ pip install -e .[test]\n\nIf you'd like to run all tests for this project (*assuming you've written\nsome*), you would run the following command::\n\n    $ python setup.py test\n\nThis will trigger `py.test <http://pytest.org/latest/>`_, along with its popular\n`coverage <https://pypi.python.org/pypi/pytest-cov>`_ plugin.\n\nLastly, if you'd like to cut a new release of this CLI tool, and publish it to\nthe Python Package Index (`PyPI <https://pypi.python.org/pypi>`_), you can do so\nby running::\n\n    $ python setup.py sdist bdist_wheel\n    $ twine upload dist/*\n\nThis will build both a source tarball of your CLI tool, as well as a newer wheel\nbuild (*and this will, by default, run on all platforms*).\n\nThe ``twine upload`` command (which requires you to install the `twine\n<https://pypi.python.org/pypi/twine>`_ tool) will then securely upload your\nnew package to PyPI so everyone in the world can use it!\n\n\n\nCr\u00e9dit\n------\n\nThis Works is based on the [skele-cli](https://github.com/rdegges/skele-cli) python cli project skeleton\nand uses the powerfull opensource project [Play-With-Docker](https://github.com/franela/play-with-docker).\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/allamand/pwdc", "keywords": "cli", "license": "UNLICENSE", "maintainer": "", "maintainer_email": "", "name": "pwdc", "package_url": "https://pypi.org/project/pwdc/", "platform": "", "project_url": "https://pypi.org/project/pwdc/", "project_urls": {"Homepage": "https://github.com/allamand/pwdc"}, "release_url": "https://pypi.org/project/pwdc/0.0.3/", "requires_dist": ["docopt", "click", "coverage; extra == 'test'", "pytest; extra == 'test'", "pytest-cov; extra == 'test'"], "requires_python": "", "summary": "A simple python CLI for Play With Docker", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>A simple python CLI for your on-premise instance of Play With Docker</em></p>\n<p><em>Create a 5 node Cluster Swarm in 5 seconds!</em></p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>This is a CLI that allows you to create, connecte to, view, and delete\ninstances of Play-With-Docker.</p>\n<ul>\n<li>You Need to have an instance of [Play-With-Docker](<a href=\"https://github.com/franela/play-with-docker\" rel=\"nofollow\">https://github.com/franela/play-with-docker</a>) without the Capcha test.</li>\n</ul>\n<p>The Goal of this project is to allow you or your users to quickly create ready to uses clusters swarm, and uses it without\nleaving your terminal.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way is to install from Pypi library:</p>\n<pre>$ pip install pwdc\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can just uses the following commands to create and use your cluster:</p>\n<pre>$ pwdc init --pwd-url=http://&lt;your-pwd-server&gt;\n</pre>\n<p>Initialise the pwdc configuration file in ~/.pwdc.\nYou need to update the ~/.pwdc value with the url of your PWD instance if not given the <cite>\u2013pwd-url</cite> parameter:</p>\n<pre>$ pwdc create\n</pre>\n<p>This will uses the PWD instance from your <cite>~/.pwdc</cite> file, then :</p>\n<ul>\n<li>create a PWD session</li>\n<li>create 5 nodes</li>\n<li>init a swarm with a master on node1</li>\n<li>join the swarm from the node2 to node5</li>\n<li>provides informations on your cluster</li>\n</ul>\n<p>The Cluster is ready to uses, just point your docker CLI on the new Swarm:</p>\n<pre>$ eval $(pwdc env)\n$ docker info\n</pre>\n<p>&gt;From then, you can manipulaite the swarm cluster with your docker or docker-compose CLI:</p>\n<pre>$ pwdc info\n</pre>\n<p>Show you the informations about your PWD session.</p>\n<p>You can have multiple PWD session, this is manage with the <cite>\u2013session_file</cite> parameter, which locally store your PWD session informations.</p>\n<p>After a while, the session will be aumatically deleted, but you can also delete it manually when you are done with your session:</p>\n<pre>$ pwdc delete\n$ eval $(pwdc env -u)\n</pre>\n<p>the last eval if to reset your docker client config</p>\n</div>\n<div id=\"contribution\">\n<h2>Contribution</h2>\n<p>If you\u2019ve cloned this project, and want to install the library (<em>and all\ndevelopment dependencies</em>), the command you\u2019ll want to run is:</p>\n<pre>$ pip install -e .[test]\n</pre>\n<p>If you\u2019d like to run all tests for this project (<em>assuming you\u2019ve written\nsome</em>), you would run the following command:</p>\n<pre>$ python setup.py test\n</pre>\n<p>This will trigger <a href=\"http://pytest.org/latest/\" rel=\"nofollow\">py.test</a>, along with its popular\n<a href=\"https://pypi.python.org/pypi/pytest-cov\" rel=\"nofollow\">coverage</a> plugin.</p>\n<p>Lastly, if you\u2019d like to cut a new release of this CLI tool, and publish it to\nthe Python Package Index (<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a>), you can do so\nby running:</p>\n<pre>$ python setup.py sdist bdist_wheel\n$ twine upload dist/*\n</pre>\n<p>This will build both a source tarball of your CLI tool, as well as a newer wheel\nbuild (<em>and this will, by default, run on all platforms</em>).</p>\n<p>The <tt>twine upload</tt> command (which requires you to install the <a href=\"https://pypi.python.org/pypi/twine\" rel=\"nofollow\">twine</a> tool) will then securely upload your\nnew package to PyPI so everyone in the world can use it!</p>\n</div>\n<div id=\"credit\">\n<h2>Cr\u00e9dit</h2>\n<p>This Works is based on the [skele-cli](<a href=\"https://github.com/rdegges/skele-cli\" rel=\"nofollow\">https://github.com/rdegges/skele-cli</a>) python cli project skeleton\nand uses the powerfull opensource project [Play-With-Docker](<a href=\"https://github.com/franela/play-with-docker\" rel=\"nofollow\">https://github.com/franela/play-with-docker</a>).</p>\n</div>\n\n          </div>"}, "last_serial": 2703022, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5dd90cc8f57c702db75492dcdff1db2f", "sha256": "294452578f1834fd566cf3b8aad431a9b4be6fba571a4ae4ad8b036e744697dc"}, "downloads": -1, "filename": "pwdc-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5dd90cc8f57c702db75492dcdff1db2f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12880, "upload_time": "2017-02-02T17:10:46", "upload_time_iso_8601": "2017-02-02T17:10:46.424329Z", "url": "https://files.pythonhosted.org/packages/60/15/81ee9cd3a6f5ff44cd60fba64184aec31064858beaf5992b8e99f619e6de/pwdc-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8034a7306c6c10eeced60513252288ab", "sha256": "c1aea5006829127ec884fe458b6867a7a79b306f38f1e384b7cb1ccb7ba28d4e"}, "downloads": -1, "filename": "pwdc-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8034a7306c6c10eeced60513252288ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9619, "upload_time": "2017-02-02T17:10:48", "upload_time_iso_8601": "2017-02-02T17:10:48.117292Z", "url": "https://files.pythonhosted.org/packages/81/00/5ddfde8b3f98bf09ee3c73a3627c91c0093b544f6b189a575243575277cc/pwdc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b97fcc7823ebb73f351b69fd6d80d00f", "sha256": "02d590c0e301f0049517d3a0da46e55a9d0134f405f66c7ab634465c7fd23f65"}, "downloads": -1, "filename": "pwdc-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b97fcc7823ebb73f351b69fd6d80d00f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12886, "upload_time": "2017-02-02T17:20:01", "upload_time_iso_8601": "2017-02-02T17:20:01.279067Z", "url": "https://files.pythonhosted.org/packages/1d/a0/0094aae62ad517386f8cacc6e8bcd61d34e909896f7fdf83bbef565c045c/pwdc-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87c19cf3ddc0d38db7d9e2e79bc5be3c", "sha256": "f242ee2b5054d7d6cd151ee6af66ff1586afd2fce1ca558322f1b953308b2315"}, "downloads": -1, "filename": "pwdc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "87c19cf3ddc0d38db7d9e2e79bc5be3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9612, "upload_time": "2017-02-02T17:20:03", "upload_time_iso_8601": "2017-02-02T17:20:03.984737Z", "url": "https://files.pythonhosted.org/packages/37/24/464e61b8f152f1813f057c70594b3a79baacb78b3151bc790a4e8b02b202/pwdc-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a04cf03805566bd5eb62e8038e5d065b", "sha256": "e625678fe7b322faddba05b8d71f189c687a1013632d2a533cf3931915db981d"}, "downloads": -1, "filename": "pwdc-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a04cf03805566bd5eb62e8038e5d065b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14047, "upload_time": "2017-03-13T16:58:30", "upload_time_iso_8601": "2017-03-13T16:58:30.368421Z", "url": "https://files.pythonhosted.org/packages/09/3d/5073683343b3cedceb2b22ed6afac7bb10cb645b15def4420bd2ef76fd5a/pwdc-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08ef4b884bb95e717ef8d8d5f2a15e71", "sha256": "3463ea01496272bb255afd5f99e879333001a3da838dca29426d73c59144da9e"}, "downloads": -1, "filename": "pwdc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "08ef4b884bb95e717ef8d8d5f2a15e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8775, "upload_time": "2017-03-13T16:58:32", "upload_time_iso_8601": "2017-03-13T16:58:32.797224Z", "url": "https://files.pythonhosted.org/packages/d6/4e/dc7adfba788dabb7eb844ed49945a71a494f1fedf341b21b47f84595c756/pwdc-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a04cf03805566bd5eb62e8038e5d065b", "sha256": "e625678fe7b322faddba05b8d71f189c687a1013632d2a533cf3931915db981d"}, "downloads": -1, "filename": "pwdc-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a04cf03805566bd5eb62e8038e5d065b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14047, "upload_time": "2017-03-13T16:58:30", "upload_time_iso_8601": "2017-03-13T16:58:30.368421Z", "url": "https://files.pythonhosted.org/packages/09/3d/5073683343b3cedceb2b22ed6afac7bb10cb645b15def4420bd2ef76fd5a/pwdc-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08ef4b884bb95e717ef8d8d5f2a15e71", "sha256": "3463ea01496272bb255afd5f99e879333001a3da838dca29426d73c59144da9e"}, "downloads": -1, "filename": "pwdc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "08ef4b884bb95e717ef8d8d5f2a15e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8775, "upload_time": "2017-03-13T16:58:32", "upload_time_iso_8601": "2017-03-13T16:58:32.797224Z", "url": "https://files.pythonhosted.org/packages/d6/4e/dc7adfba788dabb7eb844ed49945a71a494f1fedf341b21b47f84595c756/pwdc-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:50 2020"}