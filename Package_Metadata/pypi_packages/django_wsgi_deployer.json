{"info": {"author": "Evili del Rio", "author_email": "evili.del.rio@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Utilities"], "description": "django_deployer\n===============\n\n\nDjango Projects Deployer. It tries to automate deploying of Django\nprojects/apps into an existing Apache/WSGI server.\n\nYou should prepare your apache httpd to serve WSGI scripts from a\ncertain directory (default: /var/www/wsgi).  Then you could edit a cfg\nfile like this:\n\n###### myproject.cfg\n    [deploy]\n    name = myproject\n    src = http://source/of/your/repo/myproject\n    scm = svn\n\n\nQuick Usage\n-----------\n    # only the first time\n    pip install django_deployer\n    # where the wsgi scripts are served\n    cd /var/www/wsgi\n    # edit config (see below)\n    vim myproject.cfg\n    # deploy\n    django_wsgi_deploy myproject\n    # reload apache\n    systemctl reload httpd\n\n\nConfig keywords\n---------------\n##### `name`\nThe Name of the project or application to deploy (*mandatory*)\n##### `src`\nThe URL of the source code of the project (*mandatory*).\n##### `scm`\nThe source code management used (`svn`, `git`, or `hg` for the moment).\n_Default_: `'git'`.\n##### `scm_clone`\nThe SCM command to clone (aka: checkout) the source tree.\n_Default_: `'clone'`\n##### `dst`\nDestination directory.\n##### `settings`\nSettings module name.\n_Default_: `name+'_production'`.\n##### `url`\nRelative URL where the project will be deployed\n_Default_: `name`.\n##### `build`\nBuild script used to prepare your project (relative to the projects code base).\n_Default_: `'build/build.sh'`.\n##### `deploy_requires`\nList of python packages needed in deployment.\n_Default_: `None`\n##### `deploy_commands`\nList of django commands to run for deployment (makemigrations, collectstatic,\n etc.).\n_Default_: `migrate`\n##### `wsgi`\nWSGI script name.\n_Default_:`'wsgi.py'`\n##### `allowed_hosts`\nHosts allowed to run the deployed project.\n_Default_: `os.environ['HTTPD_HOST']`\n##### `secret_key`\nSecret key to use as SECRET_KEY in django settings.\n_Default_: Automatically generated on deploy.\n##### `media_root`\nWhere your media files will be stored.\n_Default_: `os.path.join(HTTPD_MEDIA_BASE, name),`\n##### `static_root`\nWhere your static files will be collected\n_Default_: `os.path.join(HTTPD_STATIC_BASE, name)`\n##### `settings_append`\nAdditional settings that will go into the final `settings` module (tipically DATABASES definition, etc).\n_Default_:\n\n     LOGGING = {\n      'version': 1,\n      'disable_existing_loggers': False,\n      'handlers': {\n        'file': {\n          'level': 'DEBUG',\n          'class': 'logging.FileHandler',\n          'filename': '/var/tmp/%(name)-wsgi.log',\n        },\n      },\n      'loggers': {\n        '': {\n          'handlers': ['file'],\n          'level': 'WARNING',\n          'propagate': True,\n        }\n      }\n     }\n\n\nEnvironment Variables\n---------------------\n\n##### `WSGI_BASE_PATH`\nDirectory were the Django projects will be deployed.\n_Default_: `/var/www/wsgi`\n\n##### `HTTPD_CONF_DIR`\nDirectory were the apache httpd .conf files will be installed.\n_Default_: `/etc/httpd/locations.d`\n\n##### `HTTPD_HOST`\nHost name under which the Django projects will be\nauthrized to run (`ALLOWED_HOSTS`settings).\n_Default_: Default hostname.\n\n##### `HTTPD_MEDIA_BASE`\nDirectory under wich the media files will be stored. By default, each\nproject will create a subdirectory under it.\n_Default_: `/var/www/media`\n\n##### `HTTPD_STATIC_BASE`\nDirectory under wich the static files will be collected. By default, each\nproject will create a subdirectory under it.\n_Default_: `/var/www/static`\n\n##### `SECRET_KEY_GEN`\nCommand to generate the `SECRET_KEY` in Django settings.\n_Default_: `/usr/bin/pwgen -c -n -y 78 1| /usr/bin/tr -d \"%\"`", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evili/django_wsgi_deployer", "keywords": "django wsgi apache deployment", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "django_wsgi_deployer", "package_url": "https://pypi.org/project/django_wsgi_deployer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_wsgi_deployer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/evili/django_wsgi_deployer"}, "release_url": "https://pypi.org/project/django_wsgi_deployer/0.3.3/", "requires_dist": null, "requires_python": null, "summary": "Django WSGI Project Deployer", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            django_deployer<br>===============<br><br><br>Django Projects Deployer. It tries to automate deploying of Django<br>projects/apps into an existing Apache/WSGI server.<br><br>You should prepare your apache httpd to serve WSGI scripts from a<br>certain directory (default: /var/www/wsgi).  Then you could edit a cfg<br>file like this:<br><br>###### myproject.cfg<br>    [deploy]<br>    name = myproject<br>    src = http://source/of/your/repo/myproject<br>    scm = svn<br><br><br>Quick Usage<br>-----------<br>    # only the first time<br>    pip install django_deployer<br>    # where the wsgi scripts are served<br>    cd /var/www/wsgi<br>    # edit config (see below)<br>    vim myproject.cfg<br>    # deploy<br>    django_wsgi_deploy myproject<br>    # reload apache<br>    systemctl reload httpd<br><br><br>Config keywords<br>---------------<br>##### `name`<br>The Name of the project or application to deploy (*mandatory*)<br>##### `src`<br>The URL of the source code of the project (*mandatory*).<br>##### `scm`<br>The source code management used (`svn`, `git`, or `hg` for the moment).<br>_Default_: `'git'`.<br>##### `scm_clone`<br>The SCM command to clone (aka: checkout) the source tree.<br>_Default_: `'clone'`<br>##### `dst`<br>Destination directory.<br>##### `settings`<br>Settings module name.<br>_Default_: `name+'_production'`.<br>##### `url`<br>Relative URL where the project will be deployed<br>_Default_: `name`.<br>##### `build`<br>Build script used to prepare your project (relative to the projects code base).<br>_Default_: `'build/build.sh'`.<br>##### `deploy_requires`<br>List of python packages needed in deployment.<br>_Default_: `None`<br>##### `deploy_commands`<br>List of django commands to run for deployment (makemigrations, collectstatic,<br> etc.).<br>_Default_: `migrate`<br>##### `wsgi`<br>WSGI script name.<br>_Default_:`'wsgi.py'`<br>##### `allowed_hosts`<br>Hosts allowed to run the deployed project.<br>_Default_: `os.environ['HTTPD_HOST']`<br>##### `secret_key`<br>Secret key to use as SECRET_KEY in django settings.<br>_Default_: Automatically generated on deploy.<br>##### `media_root`<br>Where your media files will be stored.<br>_Default_: `os.path.join(HTTPD_MEDIA_BASE, name),`<br>##### `static_root`<br>Where your static files will be collected<br>_Default_: `os.path.join(HTTPD_STATIC_BASE, name)`<br>##### `settings_append`<br>Additional settings that will go into the final `settings` module (tipically DATABASES definition, etc).<br>_Default_:<br><br>     LOGGING = {<br>      'version': 1,<br>      'disable_existing_loggers': False,<br>      'handlers': {<br>        'file': {<br>          'level': 'DEBUG',<br>          'class': 'logging.FileHandler',<br>          'filename': '/var/tmp/%(name)-wsgi.log',<br>        },<br>      },<br>      'loggers': {<br>        '': {<br>          'handlers': ['file'],<br>          'level': 'WARNING',<br>          'propagate': True,<br>        }<br>      }<br>     }<br><br><br>Environment Variables<br>---------------------<br><br>##### `WSGI_BASE_PATH`<br>Directory were the Django projects will be deployed.<br>_Default_: `/var/www/wsgi`<br><br>##### `HTTPD_CONF_DIR`<br>Directory were the apache httpd .conf files will be installed.<br>_Default_: `/etc/httpd/locations.d`<br><br>##### `HTTPD_HOST`<br>Host name under which the Django projects will be<br>authrized to run (`ALLOWED_HOSTS`settings).<br>_Default_: Default hostname.<br><br>##### `HTTPD_MEDIA_BASE`<br>Directory under wich the media files will be stored. By default, each<br>project will create a subdirectory under it.<br>_Default_: `/var/www/media`<br><br>##### `HTTPD_STATIC_BASE`<br>Directory under wich the static files will be collected. By default, each<br>project will create a subdirectory under it.<br>_Default_: `/var/www/static`<br><br>##### `SECRET_KEY_GEN`<br>Command to generate the `SECRET_KEY` in Django settings.<br>_Default_: `/usr/bin/pwgen -c -n -y 78 1| /usr/bin/tr -d \"%\"`\n          </div>"}, "last_serial": 1411220, "releases": {"0.3.3": [{"comment_text": "", "digests": {"md5": "d7534351aa4f8ba3ffdddc139ba05b33", "sha256": "9153120b32878fb9add94dce25ad466ea12daa051bfe155e7a1fce98b1aa4f31"}, "downloads": -1, "filename": "django_wsgi_deployer-0.3.3.tar.gz", "has_sig": true, "md5_digest": "d7534351aa4f8ba3ffdddc139ba05b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5741, "upload_time": "2015-02-05T17:41:47", "upload_time_iso_8601": "2015-02-05T17:41:47.548207Z", "url": "https://files.pythonhosted.org/packages/32/3c/0d745731ad6670bf4c63647367f49942c51e39f86252d2122b36d63010ca/django_wsgi_deployer-0.3.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e02aacffe698b3419ba2288afe45e5a", "sha256": "9fcec66f755fbc9f128bdfcb8c76633035fc7643ee1bfd6551d44afcd071d17c"}, "downloads": -1, "filename": "django_wsgi_deployer-0.3.3.zip", "has_sig": true, "md5_digest": "8e02aacffe698b3419ba2288afe45e5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10972, "upload_time": "2015-02-05T17:41:35", "upload_time_iso_8601": "2015-02-05T17:41:35.606811Z", "url": "https://files.pythonhosted.org/packages/8b/44/2dcc4df7340ec9cb05b90399edb882682c2e923939991646db468413ce67/django_wsgi_deployer-0.3.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7534351aa4f8ba3ffdddc139ba05b33", "sha256": "9153120b32878fb9add94dce25ad466ea12daa051bfe155e7a1fce98b1aa4f31"}, "downloads": -1, "filename": "django_wsgi_deployer-0.3.3.tar.gz", "has_sig": true, "md5_digest": "d7534351aa4f8ba3ffdddc139ba05b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5741, "upload_time": "2015-02-05T17:41:47", "upload_time_iso_8601": "2015-02-05T17:41:47.548207Z", "url": "https://files.pythonhosted.org/packages/32/3c/0d745731ad6670bf4c63647367f49942c51e39f86252d2122b36d63010ca/django_wsgi_deployer-0.3.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e02aacffe698b3419ba2288afe45e5a", "sha256": "9fcec66f755fbc9f128bdfcb8c76633035fc7643ee1bfd6551d44afcd071d17c"}, "downloads": -1, "filename": "django_wsgi_deployer-0.3.3.zip", "has_sig": true, "md5_digest": "8e02aacffe698b3419ba2288afe45e5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10972, "upload_time": "2015-02-05T17:41:35", "upload_time_iso_8601": "2015-02-05T17:41:35.606811Z", "url": "https://files.pythonhosted.org/packages/8b/44/2dcc4df7340ec9cb05b90399edb882682c2e923939991646db468413ce67/django_wsgi_deployer-0.3.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:51:49 2020"}