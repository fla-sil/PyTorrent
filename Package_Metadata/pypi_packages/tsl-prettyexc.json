{"info": {"author": "Ryan Pineo", "author_email": "ry@tsl.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "Pretty-Exception for Python\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nprettyexc provides common exception representation to make human-readable exception in easy way.\n\nYou can install the package from PyPI\n\n    $ pip install tsl-prettyexc\n\n\nExample\n-------\n\nPrelude::\n\t>>> from prettyexc import PrettyException\n\nPut and get your arguments always::\n\t>>> class SimpleException(PrettyException):\n\t...     pass\n\t... \n\t>>> e = SimpleException('any', 'plain', 'args', code=200, description='OK')\n\t>>> raise e\n\tTraceback (most recent call last):\n\t  File \"<stdin>\", line 1, in <module>\n\t__main__.SimpleException: \"any\",\"plain\",\"args\",code=200,description=\"OK\"\n\tSimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")\n\t>>> print [e, e]\n\t[<SimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")>, <SimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")>]\n\nSet default message::\n    >>> class MessageException(PrettyException):\n    ...     message = u'You should select a user'\n    ... \n    >>> e = MessageException(user_id=10)\n    >>> raise e\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    __main__.MessageException: You should select a user\n    >>> print [e, e]\n    [<MessageException(user_id=10)>, <MessageException(user_id=10)>]\n\nSet message formatter::\n    >>> class FormatException(PrettyException):\n    ...     message_format = u'User {user_id} has no permission.'\n    ... \n    >>> e = FormatException(user_id=10)\n    >>> raise e\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    __main__.FormatException: User 10 has no permission.\n    >>> print e.message\n    User 10 has no permission.\n\nPatch existing exceptions::\n    >>> from prettyexc import patch\n    >>> class AnException(Exception): pass\n    ... \n    >>> patch(AnException, PrettyException)\n    >>> raise AnException(status=404)\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    __main__.AnException: status=404", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/silverlogic/prettyexc", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "tsl-prettyexc", "package_url": "https://pypi.org/project/tsl-prettyexc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tsl-prettyexc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/silverlogic/prettyexc"}, "release_url": "https://pypi.org/project/tsl-prettyexc/0.5.2/", "requires_dist": null, "requires_python": null, "summary": "Make any exception human readable in easy way.", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>prettyexc provides common exception representation to make human-readable exception in easy way.</p>\n<p>You can install the package from PyPI</p>\n<blockquote>\n$ pip install tsl-prettyexc</blockquote>\n<div id=\"example\">\n<h2>Example</h2>\n<dl>\n<dt>Prelude::</dt>\n<dd><pre>&gt;&gt;&gt; from prettyexc import PrettyException\n</pre>\n</dd>\n<dt>Put and get your arguments always::</dt>\n<dd><pre>&gt;&gt;&gt; class SimpleException(PrettyException):\n...     pass\n...\n&gt;&gt;&gt; e = SimpleException('any', 'plain', 'args', code=200, description='OK')\n&gt;&gt;&gt; raise e\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n__main__.SimpleException: \"any\",\"plain\",\"args\",code=200,description=\"OK\"\nSimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")\n&gt;&gt;&gt; print [e, e]\n[&lt;SimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")&gt;, &lt;SimpleException(\"any\",\"plain\",\"args\",code=200,description=\"OK\")&gt;]\n</pre>\n</dd>\n<dt>Set default message::</dt>\n<dd><pre>&gt;&gt;&gt; class MessageException(PrettyException):\n...     message = u'You should select a user'\n...\n&gt;&gt;&gt; e = MessageException(user_id=10)\n&gt;&gt;&gt; raise e\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n__main__.MessageException: You should select a user\n&gt;&gt;&gt; print [e, e]\n[&lt;MessageException(user_id=10)&gt;, &lt;MessageException(user_id=10)&gt;]\n</pre>\n</dd>\n<dt>Set message formatter::</dt>\n<dd><pre>&gt;&gt;&gt; class FormatException(PrettyException):\n...     message_format = u'User {user_id} has no permission.'\n...\n&gt;&gt;&gt; e = FormatException(user_id=10)\n&gt;&gt;&gt; raise e\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n__main__.FormatException: User 10 has no permission.\n&gt;&gt;&gt; print e.message\nUser 10 has no permission.\n</pre>\n</dd>\n<dt>Patch existing exceptions::</dt>\n<dd><pre>&gt;&gt;&gt; from prettyexc import patch\n&gt;&gt;&gt; class AnException(Exception): pass\n...\n&gt;&gt;&gt; patch(AnException, PrettyException)\n&gt;&gt;&gt; raise AnException(status=404)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n__main__.AnException: status=404\n</pre>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 1701875, "releases": {"0.5.2": [{"comment_text": "", "digests": {"md5": "c09438c07d24ddddce0deed2fe9be7da", "sha256": "3b0d9c80c8ecd34253652c3949dbf50cd2dee46112eff1a027bb0757897a7432"}, "downloads": -1, "filename": "tsl-prettyexc-0.5.2.tar.gz", "has_sig": false, "md5_digest": "c09438c07d24ddddce0deed2fe9be7da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6284, "upload_time": "2015-08-31T16:52:43", "upload_time_iso_8601": "2015-08-31T16:52:43.358401Z", "url": "https://files.pythonhosted.org/packages/b1/34/bc3fea486b36eacb9b178943a5df0fb96c6b7308b6229b5446e638f0d7f2/tsl-prettyexc-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c09438c07d24ddddce0deed2fe9be7da", "sha256": "3b0d9c80c8ecd34253652c3949dbf50cd2dee46112eff1a027bb0757897a7432"}, "downloads": -1, "filename": "tsl-prettyexc-0.5.2.tar.gz", "has_sig": false, "md5_digest": "c09438c07d24ddddce0deed2fe9be7da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6284, "upload_time": "2015-08-31T16:52:43", "upload_time_iso_8601": "2015-08-31T16:52:43.358401Z", "url": "https://files.pythonhosted.org/packages/b1/34/bc3fea486b36eacb9b178943a5df0fb96c6b7308b6229b5446e638f0d7f2/tsl-prettyexc-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:16 2020"}