{"info": {"author": "Steffen Vinther S\u00f8rensen", "author_email": "svs@logiva.dk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# What is going on here ?\n\nThis is to solve a problem where it is required to dynamically vary/repeat the number of generated manifests for each \nof the otherwise quite similar dev, qa, staging, prod environments.\n\nAn environment is usually a set of workloads, e.g microservices, e.g antivirus, ocr and other components that are\n able to scale horizontally and service the complete environment.\nBut what if we for a given environment want to also run a n-times repeated set of \"customer installation\" sets as well. \n\nAs an example, we might need to run N instances of a legacy application server (HelmRelease), so we want to define this \nhelmrelease manifest just once, and then specify only the small configuration differences for each of needed instances.  \n\nThis turns out to be an uneasy scenario to solve with Kustomize, because kustomizations is based on\noverlays that targets base manifests using specific (kind,namespace,name) coordinates, and for defining\nour N sets of \"customer installations\" we must vary the name part of the coordinates for each.\n\n\n# Managing a gitrepo for fluxd\n\nThe repo structure is for the initial empty state\n\n```\n\u2514\u2500\u2500 releases\n    |\u2014\u2014 .flux.yaml \n\u2514\u2500\u2500 environments\n\u2514\u2500\u2500 basetemplates\n```\n\nThe releases folder is meant to be configured as the fluxcd --git-path=releases argument \nalong with --manifest-generation=true\n\nThe environments directory is to be populated with subdirectories defining an instance of our \nworkloads. Each subdirectory is to contain an editable copy of the root templates folder,\nand by editing these templates it will directly affect everything that is generator\nbased on these templates.  \n\nThe basetemplates folder is for base templates, editing these templates will only affect new\ninstances, as nothing is directly generated from the base templates\n\n## Populating the basetemplates\n\nThe basetemplates are directories with sets of template files, e.g kubernetes yaml manifest files\nmeant for jinja2 template processing\n\ne.g.\n```\n\u2514\u2500\u2500 basetemplates\n    \u2514\u2500\u2500 SET1\n        |\u2500\u2500 template1.yaml\n        |\u2500\u2500 template2.yaml\n    \u2514\u2500\u2500 SET2\n        |\u2500\u2500 template1.yaml\n        |\u2500\u2500 template2.yaml\n```\n\n## Create a new workload configuration in the environments folder\n\nAn environment instance is expressed as subfolder in the environements folder, containing\n\n1. A snapshot copy of the basetemplates. E.g `cp -r basetemplates environments/NAME`\n2. folder `generatorconfigs` with the `.yaml` files with `generatorconfig` manifests  \n\n```\n\u2514\u2500\u2500 environments\n    \u2514\u2500\u2500 NAME\n        \u2514\u2500\u2500 templates\n            \u2514\u2500\u2500 SET1\n                |\u2500\u2500 template1.yaml\n                |\u2500\u2500 template2.yaml\n            \u2514\u2500\u2500 SET2\n                |\u2500\u2500 template1.yaml\n                |\u2500\u2500 template2.yaml\n        \u2514\u2500\u2500 generatorconfigs\n            |\u2500\u2500 SET1-a-generatorconfig.yaml\n            |\u2500\u2500 SET2-b-generatorconfig.yaml\n            |\u2500\u2500 SET2-c-generatorconfig.yaml\n            |\u2500\u2500 SET2-d-generatorconfig.yaml\n```\n\n# The `generatorconfig` format\n\nThe format is meant to be basically just properties, meaning pure configuration without much structure structure.\n\n```\ngeneratorconfigversion: 1\ntemplateset: SET2\nid: set2-a\nimport_substitution_parameters:\n  - set1\nsubstitution_parameters:\n  NAME1: VALUE\n  NAME2: VALUE\noverrides:\n  - manifest:\n      kind: MFKIND\n      namespace: MFNAMESPACE\n      name: MFNAME \n    values:\n      PATH: OVERRIDE\n```\n\nThere are 2 mandatory parts:\n* generatorconfigversion : must be 1\n* templateset : pointer to template set directory for the environment, e.g SET2\n\nThe rest is optional:\n* id: is optional, only useful if other generatorconfig needs to reference this config\n* import_substitution_parameters: List of generatorconfig ids to import substitution parameters from. \nEach of the imported parameters can be overridden\n* substitution_parameters: is the parameters for jinja2 templating of the templates\n* overrides: Use it to override anything in the generated manifests. The section is a list with:\n   * manifest: Optional if there is just 1 manifest in the template SET, otherwise the manifest (kind,namespace,name) coordinates\n   * values: yaml to override anything in the jinja2 generated manifests\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/logiva/nmanifest", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nmanifest", "package_url": "https://pypi.org/project/nmanifest/", "platform": "", "project_url": "https://pypi.org/project/nmanifest/", "project_urls": {"Homepage": "https://github.com/logiva/nmanifest"}, "release_url": "https://pypi.org/project/nmanifest/0.0.2/", "requires_dist": ["dict-recursive-update (>=1.0.1)", "Jinja2 (>=2.10.3)", "MarkupSafe (>=1.1.1)", "oyaml (>=0.9)"], "requires_python": ">=3.5", "summary": "Generate dynamic number of manifest repetitions using minimum configuration", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>What is going on here ?</h1>\n<p>This is to solve a problem where it is required to dynamically vary/repeat the number of generated manifests for each\nof the otherwise quite similar dev, qa, staging, prod environments.</p>\n<p>An environment is usually a set of workloads, e.g microservices, e.g antivirus, ocr and other components that are\nable to scale horizontally and service the complete environment.\nBut what if we for a given environment want to also run a n-times repeated set of \"customer installation\" sets as well.</p>\n<p>As an example, we might need to run N instances of a legacy application server (HelmRelease), so we want to define this\nhelmrelease manifest just once, and then specify only the small configuration differences for each of needed instances.</p>\n<p>This turns out to be an uneasy scenario to solve with Kustomize, because kustomizations is based on\noverlays that targets base manifests using specific (kind,namespace,name) coordinates, and for defining\nour N sets of \"customer installations\" we must vary the name part of the coordinates for each.</p>\n<h1>Managing a gitrepo for fluxd</h1>\n<p>The repo structure is for the initial empty state</p>\n<pre><code>\u2514\u2500\u2500 releases\n    |\u2014\u2014 .flux.yaml \n\u2514\u2500\u2500 environments\n\u2514\u2500\u2500 basetemplates\n</code></pre>\n<p>The releases folder is meant to be configured as the fluxcd --git-path=releases argument\nalong with --manifest-generation=true</p>\n<p>The environments directory is to be populated with subdirectories defining an instance of our\nworkloads. Each subdirectory is to contain an editable copy of the root templates folder,\nand by editing these templates it will directly affect everything that is generator\nbased on these templates.</p>\n<p>The basetemplates folder is for base templates, editing these templates will only affect new\ninstances, as nothing is directly generated from the base templates</p>\n<h2>Populating the basetemplates</h2>\n<p>The basetemplates are directories with sets of template files, e.g kubernetes yaml manifest files\nmeant for jinja2 template processing</p>\n<p>e.g.</p>\n<pre><code>\u2514\u2500\u2500 basetemplates\n    \u2514\u2500\u2500 SET1\n        |\u2500\u2500 template1.yaml\n        |\u2500\u2500 template2.yaml\n    \u2514\u2500\u2500 SET2\n        |\u2500\u2500 template1.yaml\n        |\u2500\u2500 template2.yaml\n</code></pre>\n<h2>Create a new workload configuration in the environments folder</h2>\n<p>An environment instance is expressed as subfolder in the environements folder, containing</p>\n<ol>\n<li>A snapshot copy of the basetemplates. E.g <code>cp -r basetemplates environments/NAME</code></li>\n<li>folder <code>generatorconfigs</code> with the <code>.yaml</code> files with <code>generatorconfig</code> manifests</li>\n</ol>\n<pre><code>\u2514\u2500\u2500 environments\n    \u2514\u2500\u2500 NAME\n        \u2514\u2500\u2500 templates\n            \u2514\u2500\u2500 SET1\n                |\u2500\u2500 template1.yaml\n                |\u2500\u2500 template2.yaml\n            \u2514\u2500\u2500 SET2\n                |\u2500\u2500 template1.yaml\n                |\u2500\u2500 template2.yaml\n        \u2514\u2500\u2500 generatorconfigs\n            |\u2500\u2500 SET1-a-generatorconfig.yaml\n            |\u2500\u2500 SET2-b-generatorconfig.yaml\n            |\u2500\u2500 SET2-c-generatorconfig.yaml\n            |\u2500\u2500 SET2-d-generatorconfig.yaml\n</code></pre>\n<h1>The <code>generatorconfig</code> format</h1>\n<p>The format is meant to be basically just properties, meaning pure configuration without much structure structure.</p>\n<pre><code>generatorconfigversion: 1\ntemplateset: SET2\nid: set2-a\nimport_substitution_parameters:\n  - set1\nsubstitution_parameters:\n  NAME1: VALUE\n  NAME2: VALUE\noverrides:\n  - manifest:\n      kind: MFKIND\n      namespace: MFNAMESPACE\n      name: MFNAME \n    values:\n      PATH: OVERRIDE\n</code></pre>\n<p>There are 2 mandatory parts:</p>\n<ul>\n<li>generatorconfigversion : must be 1</li>\n<li>templateset : pointer to template set directory for the environment, e.g SET2</li>\n</ul>\n<p>The rest is optional:</p>\n<ul>\n<li>id: is optional, only useful if other generatorconfig needs to reference this config</li>\n<li>import_substitution_parameters: List of generatorconfig ids to import substitution parameters from.\nEach of the imported parameters can be overridden</li>\n<li>substitution_parameters: is the parameters for jinja2 templating of the templates</li>\n<li>overrides: Use it to override anything in the generated manifests. The section is a list with:\n<ul>\n<li>manifest: Optional if there is just 1 manifest in the template SET, otherwise the manifest (kind,namespace,name) coordinates</li>\n<li>values: yaml to override anything in the jinja2 generated manifests</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6350441, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0df38263107bc9ecf4a1ea546661219c", "sha256": "fc5a9d1e7ada424354f25cca6dbe89e6b2c5394b7e43864c3c952f3039a2c64f"}, "downloads": -1, "filename": "nmanifest-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0df38263107bc9ecf4a1ea546661219c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5870, "upload_time": "2019-12-23T10:35:43", "upload_time_iso_8601": "2019-12-23T10:35:43.188214Z", "url": "https://files.pythonhosted.org/packages/d6/12/616ae4df3a9affdf7a973133b6f2c268e969d3721d51104724a6e4b42266/nmanifest-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb2d4cee29442dffe832e431ed457b50", "sha256": "a36ed22569bdf71c8c49e3a91db91471661a4f775875cd45f5ea6e857e6ed9f5"}, "downloads": -1, "filename": "nmanifest-0.0.1.tar.gz", "has_sig": false, "md5_digest": "eb2d4cee29442dffe832e431ed457b50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4986, "upload_time": "2019-12-23T10:35:45", "upload_time_iso_8601": "2019-12-23T10:35:45.634913Z", "url": "https://files.pythonhosted.org/packages/56/d5/5d5ca97a7545a64c8c300c667b7115976db44c60fe14fcc6551a75e7dd3e/nmanifest-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8d3c21fc7a4e379d90a55909a54cc6bc", "sha256": "a1c95f6ac59540956856aa6730ccfa70b164bd085ceb000508aaad923b6496cf"}, "downloads": -1, "filename": "nmanifest-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d3c21fc7a4e379d90a55909a54cc6bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5938, "upload_time": "2019-12-23T11:05:13", "upload_time_iso_8601": "2019-12-23T11:05:13.591895Z", "url": "https://files.pythonhosted.org/packages/62/a8/ced8f78fbd3e17ec6bdde5c482a31eb2474fdc3e05b6ba7ad74b50641f3c/nmanifest-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f1b36e17f69fb5d511fc892f52e98c9", "sha256": "ea668e27f89722e5e4400323f6dc328889520b2d48b307c8d181499b192fd561"}, "downloads": -1, "filename": "nmanifest-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3f1b36e17f69fb5d511fc892f52e98c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5080, "upload_time": "2019-12-23T11:05:14", "upload_time_iso_8601": "2019-12-23T11:05:14.626133Z", "url": "https://files.pythonhosted.org/packages/f0/b9/c2dc4ad32639942b2d5c792ad518da262e161396f879cb768d55a3c28090/nmanifest-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d3c21fc7a4e379d90a55909a54cc6bc", "sha256": "a1c95f6ac59540956856aa6730ccfa70b164bd085ceb000508aaad923b6496cf"}, "downloads": -1, "filename": "nmanifest-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d3c21fc7a4e379d90a55909a54cc6bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5938, "upload_time": "2019-12-23T11:05:13", "upload_time_iso_8601": "2019-12-23T11:05:13.591895Z", "url": "https://files.pythonhosted.org/packages/62/a8/ced8f78fbd3e17ec6bdde5c482a31eb2474fdc3e05b6ba7ad74b50641f3c/nmanifest-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f1b36e17f69fb5d511fc892f52e98c9", "sha256": "ea668e27f89722e5e4400323f6dc328889520b2d48b307c8d181499b192fd561"}, "downloads": -1, "filename": "nmanifest-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3f1b36e17f69fb5d511fc892f52e98c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5080, "upload_time": "2019-12-23T11:05:14", "upload_time_iso_8601": "2019-12-23T11:05:14.626133Z", "url": "https://files.pythonhosted.org/packages/f0/b9/c2dc4ad32639942b2d5c792ad518da262e161396f879cb768d55a3c28090/nmanifest-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:08 2020"}