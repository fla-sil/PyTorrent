{"info": {"author": "Ross Patterson", "author_email": "me@rpatterson.net", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============================================\nbuster-selenium\n==============================================\nBuster.js Selenium and Python Test Integration\n==============================================\n\nThis package provides wrappers for the `Buster.js`_ server and test\nrunner that integrate bits of selenium to control the capture of\n`Buster slaves`_.  It also provides wrappers for running Buster.js\ntests as a part of a `Python`_ test suite and further integration with\n`zope.testrunner`_ for doing test discovery and `testing layers`_ for\ncontrolling the `buster-server`_ and capturing Buster.JS browser\nslaves.\n\nManaging ``buster-server`` and Capturing Browser Slaves\n=======================================================\n\nThe ``buster_selenium.case.BusterJSTestCase`` class is a sub-class of\n`unittest.TestCase`_ and can be used to create Python test cases that\nwill run a Buster.JS test suite corresponding to one ``buster.js`` test\nconfiguration:\n\n    >>> from buster_selenium import case\n    >>> def suite():\n    >>>     suite = unittest.TestSuite()\n    ...     suite.addTest(\n    ...         case.BusterJSTestCase('/path/to/buster.js'))\n    ...     return suite\n\nThe test case will start ``buster-server``, launch a browser, and\ncapture a browser slave in the test ``setUp``.  Then it will invoke\n``buster-test`` passing the ``buster.js`` config file and will report\nfailure if ``buster-test`` exits with a status code of ``1`` or will\nreport erro if it exits with any other non-zero status code.  Finally,\nit will shutdown the browser slave and the ``buster-server``.\n\nThe ``BusterJSTestCase`` class uses a few environment variables to\ncontrol how the ``buster-test`` executable is invoked and what is done\nwith its output:\n\nBUSTER_TEST_EXECUTABLE\n  If defined, the value of this will be used as the path to the\n  ``buster-test`` executable to be used to run the tests.  Useful if\n  you're installing/building Buster.JS as a part of your\n  build/deployment environment.  If this variable is not defined, the\n  first ``buster-test`` available on ``PATH`` will be used.\n\nBUSTER_TEST_OPTIONS\n  If defined, the value of this variable will be passed to Python's\n  `shlex.split`_ and passed as arguments/options to the ``buster-test``\n  executable.  This can be useful, for example, to use different\n  `buster-test --report`_ options.\n\nBUSTER_TEST_STDOUT\n  If defined, the stdout output of the ``buster-test`` executable will\n  be written to this file.\n\nBUSTER_SERVER_EXECUTABLE\n  Like ``BUSTER_TEST_EXECUTABLE``, if defined, the path given will be\n  used as the ``buster-server`` executable.  Otherwise the first\n  ``buster-server`` found on ``PATH`` will be used.\n\nBUSTER_SLAVE_BROWSER_EXECUTABLE\n  If defined, the executable at the path given will be invoked as a\n  slave browser and captured by the ``buster-server`` previously\n  started.  If the ``selenium.webdriver`` package is availble, setting\n  this overrides the default behavior of capturing a browser slave via\n  Selenium.\n\nBUSTER_SLAVE_BROWSER_OPTIONS\n  If defined, the value of this variable will be passed to Python's\n  `shlex.split`_ and passed as arguments/options to the\n  ``BUSTER_SLAVE_BROWSER_EXECUTABLE`` executable.\n\nBUSTER_SLAVE_SELENIUM_DRIVER\n  If the ``selenium.webdriver`` package is availble and this variable is\n  set, the value will be used to retrieve a Selenium driver from the\n  `selenium.webdriver Python module`_.  By default, ``Firefox`` is used.\n\nBUSTER_SLAVE_SELENIUM_ARGS\n  If defined, the value of this variable will be passed to Python's\n  `shlex.split`_ and passed as positional arguments to the\n  ``selenium.webdriver`` used.\n\nBUSTER_SLAVE_SELENIUM_GRID_BROWSERNAME, BUSTER_SLAVE_SELENIUM_GRID_VERSION, BUSTER_SLAVE_SELENIUM_GRID_PLATFORM, BUSTER_SLAVE_SELENIUM_GRID_JAVASCRIPTENABLED\n  If using `Selenium Grid`_ by setting\n  ``BUSTER_SLAVE_SELENIUM_DRIVER=Remote`` and this variable defined,\n  these values will be used to modify the values for the\n  ``browserName``, ``version``, ``platform``, and ``javascriptEnabled`` keys\n  in the ``selenium.webdriver.DesiredCapabilities`` dictionaries.  This\n  is useful to run your buster tests against different OS's, browsers,\n  and versions.\n\nBuster.JS Test Discovery\n========================\n\nThe ``buster-selenium`` package provides a ``buster-testrunner`` console\nscript which adds discovery of Buster.JS tests to the\n`zope.testrunner`_ support for `automatically finding tests`_\nthroughout a project.  In particular, it will create test suites from\nany directory under a valid ``buster-testrunner --test-path`` that has a\n``buster.js`` file::\n\n    $ buster-testrunner --test-path=/path/to/project/module --test-path=/path/to/project/other-module\n\nSee the `zope.testrunner`_ docs or ``buster-testrunner --help`` for more\ndetails on controlling test discovery and which tests are run.\n\nSharing ``buster-server`` and Browser Slave Capture Between Tests\n=================================================================\n\nThe ``buster_selenium.layer`` module uses ``zope.testrunner`` support for\n`testing layers`_ to start ``buster-server``, launch a browser, and\ncapture a browser slave and use those for all ``buster-test`` runs when\nthe tests are run with ``buster-testrunner``.  This can help speed up\nthe running of multiple Buster.JS test suites while still providing\nclean mangement of the ``buster-server`` and captured browser slaves.\nThese layers are used automatically when using the test discovery\ndescribed above.\n\nManaging Browser Slaves with Selenium Webdriver\n===============================================\n\nIf the selenium Python package is available, by default the\n``BusterJSTestCase`` and testing layer support described above will\nuse `selenium.webdriver`_ to open, capture, and clean up a browser\nslave.  The way that ``selenium.webdriver`` launches browsers provides\nan additional degree of isolation from user extensions, profiles,\nthemes, and other add-ons and provides greater isolation for Buster.JS\ntests.\n\n\n.. _Buster.js: http://busterjs.org/\n.. _Buster slaves: http://busterjs.org/docs/capture-server/\n.. _Python: http://python.org\n.. _zope.testrunner: http://pypi.python.org/pypi/zope.testrunner\n.. _testing layers: http://pypi.python.org/pypi/zope.testrunner#layers\n.. _buster-server: http://busterjs.org/docs/server-cli/\n.. _unittest.TestCase: http://docs.python.org/library/unittest.html#unittest.TestCase\n.. _automatically finding tests: http://pypi.python.org/pypi/zope.testrunner#test-runner\n.. _selenium.webdriver: http://seleniumhq.org/docs/03_webdriver.html\n.. _shlex.split: http://docs.python.org/library/shlex.html#shlex.split\n.. _buster-test --report: http://busterjs.org/docs/test/reporters\n.. _selenium.webdriver Python module: http://seleniumhq.org/docs/03_webdriver.html#selenium-webdriver-s-drivers\n.. _Selenium Grid: http://selenium-grid.seleniumhq.org/\n\n\nChangelog\n=========\n\n0.1 - 2012-09-23\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/plone/buster-selenium", "keywords": "buster selenium js javascript ecmascript", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "buster-selenium", "package_url": "https://pypi.org/project/buster-selenium/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/buster-selenium/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/plone/buster-selenium"}, "release_url": "https://pypi.org/project/buster-selenium/0.1/", "requires_dist": null, "requires_python": null, "summary": "Manage buster.js slave browsers using selenium.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"buster-js-selenium-and-python-test-integration\">\n<h2>Buster.js Selenium and Python Test Integration</h2>\n<p>This package provides wrappers for the <a href=\"http://busterjs.org/\" rel=\"nofollow\">Buster.js</a> server and test\nrunner that integrate bits of selenium to control the capture of\n<a href=\"http://busterjs.org/docs/capture-server/\" rel=\"nofollow\">Buster slaves</a>.  It also provides wrappers for running Buster.js\ntests as a part of a <a href=\"http://python.org\" rel=\"nofollow\">Python</a> test suite and further integration with\n<a href=\"http://pypi.python.org/pypi/zope.testrunner\" rel=\"nofollow\">zope.testrunner</a> for doing test discovery and <a href=\"http://pypi.python.org/pypi/zope.testrunner#layers\" rel=\"nofollow\">testing layers</a> for\ncontrolling the <a href=\"http://busterjs.org/docs/server-cli/\" rel=\"nofollow\">buster-server</a> and capturing Buster.JS browser\nslaves.</p>\n</div>\n<div id=\"managing-buster-server-and-capturing-browser-slaves\">\n<h2>Managing <tt><span class=\"pre\">buster-server</span></tt> and Capturing Browser Slaves</h2>\n<p>The <tt>buster_selenium.case.BusterJSTestCase</tt> class is a sub-class of\n<a href=\"http://docs.python.org/library/unittest.html#unittest.TestCase\" rel=\"nofollow\">unittest.TestCase</a> and can be used to create Python test cases that\nwill run a Buster.JS test suite corresponding to one <tt>buster.js</tt> test\nconfiguration:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from buster_selenium import case\n&gt;&gt;&gt; def suite():\n&gt;&gt;&gt;     suite = unittest.TestSuite()\n...     suite.addTest(\n...         case.BusterJSTestCase('/path/to/buster.js'))\n...     return suite\n</pre>\n</blockquote>\n<p>The test case will start <tt><span class=\"pre\">buster-server</span></tt>, launch a browser, and\ncapture a browser slave in the test <tt>setUp</tt>.  Then it will invoke\n<tt><span class=\"pre\">buster-test</span></tt> passing the <tt>buster.js</tt> config file and will report\nfailure if <tt><span class=\"pre\">buster-test</span></tt> exits with a status code of <tt>1</tt> or will\nreport erro if it exits with any other non-zero status code.  Finally,\nit will shutdown the browser slave and the <tt><span class=\"pre\">buster-server</span></tt>.</p>\n<p>The <tt>BusterJSTestCase</tt> class uses a few environment variables to\ncontrol how the <tt><span class=\"pre\">buster-test</span></tt> executable is invoked and what is done\nwith its output:</p>\n<dl>\n<dt>BUSTER_TEST_EXECUTABLE</dt>\n<dd>If defined, the value of this will be used as the path to the\n<tt><span class=\"pre\">buster-test</span></tt> executable to be used to run the tests.  Useful if\nyou\u2019re installing/building Buster.JS as a part of your\nbuild/deployment environment.  If this variable is not defined, the\nfirst <tt><span class=\"pre\">buster-test</span></tt> available on <tt>PATH</tt> will be used.</dd>\n<dt>BUSTER_TEST_OPTIONS</dt>\n<dd>If defined, the value of this variable will be passed to Python\u2019s\n<a href=\"http://docs.python.org/library/shlex.html#shlex.split\" rel=\"nofollow\">shlex.split</a> and passed as arguments/options to the <tt><span class=\"pre\">buster-test</span></tt>\nexecutable.  This can be useful, for example, to use different\n<a href=\"http://busterjs.org/docs/test/reporters\" rel=\"nofollow\">buster-test \u2013report</a> options.</dd>\n<dt>BUSTER_TEST_STDOUT</dt>\n<dd>If defined, the stdout output of the <tt><span class=\"pre\">buster-test</span></tt> executable will\nbe written to this file.</dd>\n<dt>BUSTER_SERVER_EXECUTABLE</dt>\n<dd>Like <tt>BUSTER_TEST_EXECUTABLE</tt>, if defined, the path given will be\nused as the <tt><span class=\"pre\">buster-server</span></tt> executable.  Otherwise the first\n<tt><span class=\"pre\">buster-server</span></tt> found on <tt>PATH</tt> will be used.</dd>\n<dt>BUSTER_SLAVE_BROWSER_EXECUTABLE</dt>\n<dd>If defined, the executable at the path given will be invoked as a\nslave browser and captured by the <tt><span class=\"pre\">buster-server</span></tt> previously\nstarted.  If the <tt>selenium.webdriver</tt> package is availble, setting\nthis overrides the default behavior of capturing a browser slave via\nSelenium.</dd>\n<dt>BUSTER_SLAVE_BROWSER_OPTIONS</dt>\n<dd>If defined, the value of this variable will be passed to Python\u2019s\n<a href=\"http://docs.python.org/library/shlex.html#shlex.split\" rel=\"nofollow\">shlex.split</a> and passed as arguments/options to the\n<tt>BUSTER_SLAVE_BROWSER_EXECUTABLE</tt> executable.</dd>\n<dt>BUSTER_SLAVE_SELENIUM_DRIVER</dt>\n<dd>If the <tt>selenium.webdriver</tt> package is availble and this variable is\nset, the value will be used to retrieve a Selenium driver from the\n<a href=\"http://seleniumhq.org/docs/03_webdriver.html#selenium-webdriver-s-drivers\" rel=\"nofollow\">selenium.webdriver Python module</a>.  By default, <tt>Firefox</tt> is used.</dd>\n<dt>BUSTER_SLAVE_SELENIUM_ARGS</dt>\n<dd>If defined, the value of this variable will be passed to Python\u2019s\n<a href=\"http://docs.python.org/library/shlex.html#shlex.split\" rel=\"nofollow\">shlex.split</a> and passed as positional arguments to the\n<tt>selenium.webdriver</tt> used.</dd>\n<dt>BUSTER_SLAVE_SELENIUM_GRID_BROWSERNAME, BUSTER_SLAVE_SELENIUM_GRID_VERSION, BUSTER_SLAVE_SELENIUM_GRID_PLATFORM, BUSTER_SLAVE_SELENIUM_GRID_JAVASCRIPTENABLED</dt>\n<dd>If using <a href=\"http://selenium-grid.seleniumhq.org/\" rel=\"nofollow\">Selenium Grid</a> by setting\n<tt>BUSTER_SLAVE_SELENIUM_DRIVER=Remote</tt> and this variable defined,\nthese values will be used to modify the values for the\n<tt>browserName</tt>, <tt>version</tt>, <tt>platform</tt>, and <tt>javascriptEnabled</tt> keys\nin the <tt>selenium.webdriver.DesiredCapabilities</tt> dictionaries.  This\nis useful to run your buster tests against different OS\u2019s, browsers,\nand versions.</dd>\n</dl>\n</div>\n<div id=\"buster-js-test-discovery\">\n<h2>Buster.JS Test Discovery</h2>\n<p>The <tt><span class=\"pre\">buster-selenium</span></tt> package provides a <tt><span class=\"pre\">buster-testrunner</span></tt> console\nscript which adds discovery of Buster.JS tests to the\n<a href=\"http://pypi.python.org/pypi/zope.testrunner\" rel=\"nofollow\">zope.testrunner</a> support for <a href=\"http://pypi.python.org/pypi/zope.testrunner#test-runner\" rel=\"nofollow\">automatically finding tests</a>\nthroughout a project.  In particular, it will create test suites from\nany directory under a valid <tt><span class=\"pre\">buster-testrunner</span> <span class=\"pre\">--test-path</span></tt> that has a\n<tt>buster.js</tt> file:</p>\n<pre>$ buster-testrunner --test-path=/path/to/project/module --test-path=/path/to/project/other-module\n</pre>\n<p>See the <a href=\"http://pypi.python.org/pypi/zope.testrunner\" rel=\"nofollow\">zope.testrunner</a> docs or <tt><span class=\"pre\">buster-testrunner</span> <span class=\"pre\">--help</span></tt> for more\ndetails on controlling test discovery and which tests are run.</p>\n</div>\n<div id=\"sharing-buster-server-and-browser-slave-capture-between-tests\">\n<h2>Sharing <tt><span class=\"pre\">buster-server</span></tt> and Browser Slave Capture Between Tests</h2>\n<p>The <tt>buster_selenium.layer</tt> module uses <tt>zope.testrunner</tt> support for\n<a href=\"http://pypi.python.org/pypi/zope.testrunner#layers\" rel=\"nofollow\">testing layers</a> to start <tt><span class=\"pre\">buster-server</span></tt>, launch a browser, and\ncapture a browser slave and use those for all <tt><span class=\"pre\">buster-test</span></tt> runs when\nthe tests are run with <tt><span class=\"pre\">buster-testrunner</span></tt>.  This can help speed up\nthe running of multiple Buster.JS test suites while still providing\nclean mangement of the <tt><span class=\"pre\">buster-server</span></tt> and captured browser slaves.\nThese layers are used automatically when using the test discovery\ndescribed above.</p>\n</div>\n<div id=\"managing-browser-slaves-with-selenium-webdriver\">\n<h2>Managing Browser Slaves with Selenium Webdriver</h2>\n<p>If the selenium Python package is available, by default the\n<tt>BusterJSTestCase</tt> and testing layer support described above will\nuse <a href=\"http://seleniumhq.org/docs/03_webdriver.html\" rel=\"nofollow\">selenium.webdriver</a> to open, capture, and clean up a browser\nslave.  The way that <tt>selenium.webdriver</tt> launches browsers provides\nan additional degree of isolation from user extensions, profiles,\nthemes, and other add-ons and provides greater isolation for Buster.JS\ntests.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1 - 2012-09-23</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 787139, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dfbf6fb6058ffcab508b3f7458bceaf5", "sha256": "1a1e877659613530787ff503dbefb0ae6ecc63502bf3d6260177a60e18c33721"}, "downloads": -1, "filename": "buster-selenium-0.1.tar.gz", "has_sig": false, "md5_digest": "dfbf6fb6058ffcab508b3f7458bceaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7529, "upload_time": "2012-09-24T03:55:11", "upload_time_iso_8601": "2012-09-24T03:55:11.330216Z", "url": "https://files.pythonhosted.org/packages/d0/70/20db49de7a54a553f2d2cef8b25e995cf0e4cfe3c0621a852e488d61c4fb/buster-selenium-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfbf6fb6058ffcab508b3f7458bceaf5", "sha256": "1a1e877659613530787ff503dbefb0ae6ecc63502bf3d6260177a60e18c33721"}, "downloads": -1, "filename": "buster-selenium-0.1.tar.gz", "has_sig": false, "md5_digest": "dfbf6fb6058ffcab508b3f7458bceaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7529, "upload_time": "2012-09-24T03:55:11", "upload_time_iso_8601": "2012-09-24T03:55:11.330216Z", "url": "https://files.pythonhosted.org/packages/d0/70/20db49de7a54a553f2d2cef8b25e995cf0e4cfe3c0621a852e488d61c4fb/buster-selenium-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:56 2020"}