{"info": {"author": "Shenggao Zhu", "author_email": "zshgao@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "MIDict (Multi-Index Dict)\n=========================\n\n.. image:: https://img.shields.io/pypi/l/midict.svg\n    :alt: License\n    :target: ./LICENSE\n\n.. image:: https://img.shields.io/pypi/v/midict.svg\n    :target: https://pypi.python.org/pypi/midict\n    :alt: PyPI Release\n\n.. image:: https://img.shields.io/pypi/pyversions/midict.svg\n    :target: https://pypi.python.org/pypi/midict\n    :alt: Supported Python versions\n\n.. .. image:: https://img.shields.io/pypi/dm/midict.svg\n    :target: https://pypi.python.org/pypi/midict\n    :alt: PyPI Downloads\n\n.. image:: https://readthedocs.org/projects/midict/badge/?version=latest\n    :target: https://midict.readthedocs.org/\n    :alt: Documentation\n\n.. image:: https://travis-ci.org/ShenggaoZhu/midict.svg?branch=master\n    :target: https://travis-ci.org/ShenggaoZhu/midict\n    :alt: Travis Build Status\n\n.. image:: https://coveralls.io/repos/github/ShenggaoZhu/midict/badge.svg?branch=master\n    :target: https://coveralls.io/github/ShenggaoZhu/midict?branch=master\n    :alt: Test coverage\n\n\n.. image:: https://api.codacy.com/project/badge/Grade/206345cabe8f44598c3632fb0a553eb1\n    :target: https://www.codacy.com/app/zshgao/midict\n    :alt: Code quality\n\n\n\n``MIDict`` is an ordered \"dictionary\" with multiple indices\nwhere any index can serve as \"keys\" or \"values\",\ncapable of assessing multiple values via its powerful indexing syntax,\nand suitable as a bidirectional/inverse dict (a drop-in replacement\nfor dict/OrderedDict in Python 2 & 3).\n\n\n\n\nFeatures\n--------\n\n* Multiple indices\n* Multi-value indexing syntax\n* Convenient indexing shortcuts\n* Bidirectional/inverse dict\n* Compatible with normal dict in Python 2 & 3\n* Accessing keys via attributes\n* Extended methods for multi-indices\n* Additional APIs to handle indices\n* Duplicate keys/values handling\n\n\nQuickstart\n----------\n\n+---------+---------+---------+\n|  name   |   uid   |   ip    |\n+=========+=========+=========+\n|  jack   |    1    |  192.1  |\n+---------+---------+---------+\n|  tony   |    2    |  192.2  |\n+---------+---------+---------+\n\nThe above table-like data set (with multiple columns/indices) can be represented using a ``MIDict``:\n\n.. code-block:: python\n\n    user = MIDict([['jack', 1, '192.1'], # list of items (rows of data)\n                   ['tony', 2, '192.2']],\n                  ['name', 'uid', 'ip']) # a list of index names\n\nAccess a key and get a value or a list of values (similar to a normal ``dict``):\n\n.. code-block:: python\n\n    user['jack'] == [1, '192.1']\n\nAny index (column) can be used as the \"keys\" or \"values\" via the advanced\n\"multi-indexing\" syntax ``d[index_key:key, index_value]``.\nBoth ``index_key`` and ``index_value`` can be a normal index name\nor an ``int`` (the order the index), and ``index_value`` can also be a\n``tuple``, ``list`` or ``slice`` object to specify multiple values, e.g.:\n\n.. code-block:: python\n\n    user['name':'jack', 'uid'] == 1\n    user['ip':'192.1', 'name'] == 'jack'\n\n    user['name':'jack', ('uid', 'ip')] == [1, '192.1']\n    user[0:'jack', [1, 2]]             == [1, '192.1']\n    user['name':'jack', 'uid':]        == [1, '192.1']\n\nThe \"multi-indexing\" syntax also has convenient shortcuts:\n\n.. code-block:: python\n\n    user['jack'] == [1, '192.1']\n    user[:'192.1'] == ['jack', 1]\n    user['jack', :] == ['jack', 1, '192.1']\n\nA ``MIDict`` with 2 indices can be used as a bidirectional/inverse dict:\n\n.. code-block:: python\n\n    mi_dict = MIDict(jack=1, tony=2)\n\n    mi_dict['jack'] == 1 # forward indexing: d[key] -> value\n    mi_dict[:1]     == 'jack' # backward/inverse indexing: d[:value] -> key\n\n\n\nDocumentation\n-------------\n\nSee https://midict.readthedocs.io\n\n\nInstallation\n------------\n\n``pip install midict``\n\nPyPI repository: https://pypi.python.org/pypi/midict\n\nDevelopment\n-----------\n\nSource code:  https://github.com/ShenggaoZhu/midict\n\nReport issues: https://github.com/ShenggaoZhu/midict/issues/new\n\nTesting\n^^^^^^^\n\n``python tests/tests.py``\n\nTested with both Python 2.7 and Python 3,3, 3.4, 3.5.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ShenggaoZhu/midict", "keywords": "dict,dictionary,mapping,bidirectional,bijective,two-way,double,inverse,reverse,multiple,index,multiple indices,multiple values,multiple keys,MIMapping,MIDict,FrozenMIDict,AttrDict,IndexDict,multi-indexing syntax", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "midict", "package_url": "https://pypi.org/project/midict/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/midict/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ShenggaoZhu/midict"}, "release_url": "https://pypi.org/project/midict/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "MIDict (Multi-Index Dict) can be indexed by any \"keys\" or \"values\", suitable as a bidirectional/inverse dict or a multi-key/multi-value dict (a drop-in replacement for dict in Python 2 & 3).", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"./LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb96eba56f27bc88f4f5471a8208dd2023b2b62a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d69646963742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/midict\" rel=\"nofollow\"><img alt=\"PyPI Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f500d190a1a58508b238032315c1d13cb552113c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d69646963742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/midict\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/163142314a7aa41c36d6de7ec0d4b0cad57ba238/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d69646963742e737667\"></a>\n<a href=\"https://midict.readthedocs.org/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/254fb290ace89b55b4af695fc4173d1d2cf59cf9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d69646963742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/ShenggaoZhu/midict\" rel=\"nofollow\"><img alt=\"Travis Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d89f8ce6464f8beba6edf6ecd54bf5e9cf1a0e0/68747470733a2f2f7472617669732d63692e6f72672f5368656e6767616f5a68752f6d69646963742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/ShenggaoZhu/midict?branch=master\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b89c259d0def2c887eabd1a0a5a3b037d23f3fc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5368656e6767616f5a68752f6d69646963742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/app/zshgao/midict\" rel=\"nofollow\"><img alt=\"Code quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20e1d77eda2379bfdd2dd2919ff7fbd1b8e3a122/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3230363334356361626538663434353938633336333266623061353533656231\"></a>\n<p><tt>MIDict</tt> is an ordered \u201cdictionary\u201d with multiple indices\nwhere any index can serve as \u201ckeys\u201d or \u201cvalues\u201d,\ncapable of assessing multiple values via its powerful indexing syntax,\nand suitable as a bidirectional/inverse dict (a drop-in replacement\nfor dict/OrderedDict in Python 2 &amp; 3).</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Multiple indices</li>\n<li>Multi-value indexing syntax</li>\n<li>Convenient indexing shortcuts</li>\n<li>Bidirectional/inverse dict</li>\n<li>Compatible with normal dict in Python 2 &amp; 3</li>\n<li>Accessing keys via attributes</li>\n<li>Extended methods for multi-indices</li>\n<li>Additional APIs to handle indices</li>\n<li>Duplicate keys/values handling</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>name</th>\n<th>uid</th>\n<th>ip</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>jack</td>\n<td>1</td>\n<td>192.1</td>\n</tr>\n<tr><td>tony</td>\n<td>2</td>\n<td>192.2</td>\n</tr>\n</tbody>\n</table>\n<p>The above table-like data set (with multiple columns/indices) can be represented using a <tt>MIDict</tt>:</p>\n<pre><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">MIDict</span><span class=\"p\">([[</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">],</span> <span class=\"c1\"># list of items (rows of data)</span>\n               <span class=\"p\">[</span><span class=\"s1\">'tony'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'192.2'</span><span class=\"p\">]],</span>\n              <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'uid'</span><span class=\"p\">,</span> <span class=\"s1\">'ip'</span><span class=\"p\">])</span> <span class=\"c1\"># a list of index names</span>\n</pre>\n<p>Access a key and get a value or a list of values (similar to a normal <tt>dict</tt>):</p>\n<pre><span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n</pre>\n<p>Any index (column) can be used as the \u201ckeys\u201d or \u201cvalues\u201d via the advanced\n\u201cmulti-indexing\u201d syntax <tt>d[index_key:key, index_value]</tt>.\nBoth <tt>index_key</tt> and <tt>index_value</tt> can be a normal index name\nor an <tt>int</tt> (the order the index), and <tt>index_value</tt> can also be a\n<tt>tuple</tt>, <tt>list</tt> or <tt>slice</tt> object to specify multiple values, e.g.:</p>\n<pre><span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"s1\">'uid'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'ip'</span><span class=\"p\">:</span><span class=\"s1\">'192.1'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'jack'</span>\n\n<span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'uid'</span><span class=\"p\">,</span> <span class=\"s1\">'ip'</span><span class=\"p\">)]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n<span class=\"n\">user</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]]</span>             <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n<span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"s1\">'uid'</span><span class=\"p\">:]</span>        <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n</pre>\n<p>The \u201cmulti-indexing\u201d syntax also has convenient shortcuts:</p>\n<pre><span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n<span class=\"n\">user</span><span class=\"p\">[:</span><span class=\"s1\">'192.1'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'192.1'</span><span class=\"p\">]</span>\n</pre>\n<p>A <tt>MIDict</tt> with 2 indices can be used as a bidirectional/inverse dict:</p>\n<pre><span class=\"n\">mi_dict</span> <span class=\"o\">=</span> <span class=\"n\">MIDict</span><span class=\"p\">(</span><span class=\"n\">jack</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">tony</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">mi_dict</span><span class=\"p\">[</span><span class=\"s1\">'jack'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"c1\"># forward indexing: d[key] -&gt; value</span>\n<span class=\"n\">mi_dict</span><span class=\"p\">[:</span><span class=\"mi\">1</span><span class=\"p\">]</span>     <span class=\"o\">==</span> <span class=\"s1\">'jack'</span> <span class=\"c1\"># backward/inverse indexing: d[:value] -&gt; key</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>See <a href=\"https://midict.readthedocs.io\" rel=\"nofollow\">https://midict.readthedocs.io</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install midict</tt></p>\n<p>PyPI repository: <a href=\"https://pypi.python.org/pypi/midict\" rel=\"nofollow\">https://pypi.python.org/pypi/midict</a></p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Source code:  <a href=\"https://github.com/ShenggaoZhu/midict\" rel=\"nofollow\">https://github.com/ShenggaoZhu/midict</a></p>\n<p>Report issues: <a href=\"https://github.com/ShenggaoZhu/midict/issues/new\" rel=\"nofollow\">https://github.com/ShenggaoZhu/midict/issues/new</a></p>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p><tt>python tests/tests.py</tt></p>\n<p>Tested with both Python 2.7 and Python 3,3, 3.4, 3.5.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2121872, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a54d716526b2f99689d518639d009e45", "sha256": "ee44bf76bc27f9086bef2a3957d2b64d748d723a74061dee7b138dad37e8d083"}, "downloads": -1, "filename": "midict-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a54d716526b2f99689d518639d009e45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15976, "upload_time": "2016-05-16T15:17:07", "upload_time_iso_8601": "2016-05-16T15:17:07.518869Z", "url": "https://files.pythonhosted.org/packages/1a/51/f7c845a6d17f7f892ef6f24f924e75f89ff60cd9aac5a42f276be5c1ec6f/midict-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "04be659a6b5834df6f20545cd6e45fd3", "sha256": "6d246def5d1ea46439ea8acc29eb86900bdcbcd14917609c8385ce29140dcd8d"}, "downloads": -1, "filename": "midict-0.1.1.tar.gz", "has_sig": false, "md5_digest": "04be659a6b5834df6f20545cd6e45fd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16413, "upload_time": "2016-05-17T07:38:14", "upload_time_iso_8601": "2016-05-17T07:38:14.866684Z", "url": "https://files.pythonhosted.org/packages/9d/15/14116d417d97b3c97dd708f1a6a529ac44c5af9345c9ebdf4145a65da9c1/midict-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "57728c062fd548039ec428df4d2b9a4b", "sha256": "1d825bbeedfc582bbc6f2e390146b7ff0ae46e6e56bec81f6ae0a210bdb9802b"}, "downloads": -1, "filename": "midict-0.1.2.tar.gz", "has_sig": false, "md5_digest": "57728c062fd548039ec428df4d2b9a4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16395, "upload_time": "2016-05-18T04:08:18", "upload_time_iso_8601": "2016-05-18T04:08:18.504996Z", "url": "https://files.pythonhosted.org/packages/43/c2/8a0c4ea02c6724401b1db6a9f06930ea11ea7639d66f485842abc644c74b/midict-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c116ae7f3ada492a9fde5059511166ce", "sha256": "6c3c4573a15a61096405dd221dea8c08bf11a03f2b71ce9862062cbf5775b74a"}, "downloads": -1, "filename": "midict-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c116ae7f3ada492a9fde5059511166ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16437, "upload_time": "2016-05-18T09:44:47", "upload_time_iso_8601": "2016-05-18T09:44:47.727748Z", "url": "https://files.pythonhosted.org/packages/c8/c2/2bb15a53a31b66f4f50b8d30c2cc3eeb10f84382a10539053d61c07932b7/midict-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f19dc249fda538739b61d1dabaf7b17b", "sha256": "27cdb3116f1fcd8e5291d62ecea5c6de319e5db3d726e93de5c8f00aa172645c"}, "downloads": -1, "filename": "midict-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f19dc249fda538739b61d1dabaf7b17b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16446, "upload_time": "2016-05-18T14:28:48", "upload_time_iso_8601": "2016-05-18T14:28:48.114844Z", "url": "https://files.pythonhosted.org/packages/30/6b/d697c05b33da2b8b8330914021c0bedb75a3591839d36b9b912d30c812c0/midict-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f19dc249fda538739b61d1dabaf7b17b", "sha256": "27cdb3116f1fcd8e5291d62ecea5c6de319e5db3d726e93de5c8f00aa172645c"}, "downloads": -1, "filename": "midict-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f19dc249fda538739b61d1dabaf7b17b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16446, "upload_time": "2016-05-18T14:28:48", "upload_time_iso_8601": "2016-05-18T14:28:48.114844Z", "url": "https://files.pythonhosted.org/packages/30/6b/d697c05b33da2b8b8330914021c0bedb75a3591839d36b9b912d30c812c0/midict-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:51 2020"}