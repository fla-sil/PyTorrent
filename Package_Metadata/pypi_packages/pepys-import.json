{"info": {"author": "Ian Mayo", "author_email": "ian@planetmayo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Welcome\n=======\n\nPepys-import is a Python library to be used in the parsing and\ncollation of data to be used in platform based spatial analysis.\n\nThe library provides tools to help work through text data-files, and then\npush data measurements (and supporting metadata) to a databaes.\n\nPostGres and SQLite databases are currently supported, with SQLite being\nthe low-friction option favoured for getting started with Pepys-Import, or\nfor project maintainers.\n\nHere's a working demonstrator of datafile import: |binder|\n\n.. |binder| image:: https://mybinder.org/badge_logo.svg\n  :target: https://mybinder.org/v2/gh/debrief/pepys-import/develop?filepath=examples%2Fnotebooks%2Fdata_store_sqlite.ipynb\n\nOnline documentation\n--------------------\n\nLearn more here: |docs|\n\n.. |docs| image:: https://readthedocs.org/projects/pepys-import/badge/?version=latest\n  :target:  https://pepys-import.readthedocs.io/\n\n\nDevelopment\n===========\n\nCode coverage\n-------------\n\nWe're aiming for 100% code coverage on the project, track our progress\nhere: |code_cov|\n\n.. |code_cov| image:: https://codecov.io/gh/debrief/pepys-import/branch/develop/graph/badge.svg\n   :target: https://codecov.io/gh/debrief/pepys-import/branch/develop\n\nUpstream security\n-----------------\n\nWe have continuous vulnerability testing on the Open Source libraries\nwe depend upon for development: |dev_req| and production: |plain_req|\n\n.. |plain_req| image:: https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements.txt\n   :target: https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements.txt\n\n.. |dev_req| image:: https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements_dev.txt\n   :target: https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements_dev.txt\n\nCode Style\n----------\nBlack is used on the project: |black|\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n :target: https://github.com/python/black\n\nIt is suggested to install a pre-commit hook in order to apply Black before pushing commits::\n\n    $ pip install pre-commit\n    $ pre-commit install\n\n\nProject Progres\n----------------\n\nView the project Kanban board `here <https://github.com/debrief/pepys-import/projects/3>`_\n\nSetup\n-----\n\nTo prepare for running ensure these tools and packages are installed:\n\n* Python 3 - at least Python 3.6.4 or later\n* SQL Alchemy 1.3\n\nFor Postgres support and unit tests these packages are also required:\n\n* geoalchemy2\n* psycopg2\n* nose2 (0.9.1)\n\nDependencies\n------------\n\nInstall the python dependencies with: :code:`pip install -r requirements.txt`\n\nUnit tests\n----------\n\n* Run the unit test suite with:  :code:`coverage3 run -m unittest discover -v`\n* View the unit test coverage with: :code:`coverage report`\n\nCommand Line Instructions\n-------------------------\n\nTo run from the command line go to the top level directory of the library in\nyour bash shell or terminal program\n\nRun by specifying the program as a module with :code:`-m` and\nleaving off the .py file extension\n\nThe exact executable name for invoking python will depend how\nyou have it installed, but most commonly it's just :code:`python`\n\nFor example run the Sqlite example using:\n:code:`python -m Experiments.DataStore_sqliteExperiment`\n\nIntelliJ Instructions\n---------------------\n\nTo run from inside IntelliJ open the project\nMark the :code:`Store` package as source by right clicking on\nthe directory and selecting :code:`Mark Directory as -> Source Root`\n\nOpen any python module you want to run in the main editor\nwindow, right click anywhere in the editor and choose the\n:code:`Run` or :code:`Debug` option\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/debrief/pepys-import", "keywords": "pepys_import", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "pepys-import", "package_url": "https://pypi.org/project/pepys-import/", "platform": "", "project_url": "https://pypi.org/project/pepys-import/", "project_urls": {"Homepage": "https://github.com/debrief/pepys-import"}, "release_url": "https://pypi.org/project/pepys-import/0.0.4/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Python library to handle database ingest of geospatial track (and other) data", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome</h1>\n<p>Pepys-import is a Python library to be used in the parsing and\ncollation of data to be used in platform based spatial analysis.</p>\n<p>The library provides tools to help work through text data-files, and then\npush data measurements (and supporting metadata) to a databaes.</p>\n<p>PostGres and SQLite databases are currently supported, with SQLite being\nthe low-friction option favoured for getting started with Pepys-Import, or\nfor project maintainers.</p>\n<p>Here's a working demonstrator of datafile import: |binder|</p>\n<p>.. |binder| image:: <a href=\"https://mybinder.org/badge_logo.svg\" rel=\"nofollow\">https://mybinder.org/badge_logo.svg</a>\n:target: <a href=\"https://mybinder.org/v2/gh/debrief/pepys-import/develop?filepath=examples%2Fnotebooks%2Fdata_store_sqlite.ipynb\" rel=\"nofollow\">https://mybinder.org/v2/gh/debrief/pepys-import/develop?filepath=examples%2Fnotebooks%2Fdata_store_sqlite.ipynb</a></p>\n<h2>Online documentation</h2>\n<p>Learn more here: |docs|</p>\n<p>.. |docs| image:: <a href=\"https://readthedocs.org/projects/pepys-import/badge/?version=latest\" rel=\"nofollow\">https://readthedocs.org/projects/pepys-import/badge/?version=latest</a>\n:target:  <a href=\"https://pepys-import.readthedocs.io/\" rel=\"nofollow\">https://pepys-import.readthedocs.io/</a></p>\n<h1>Development</h1>\n<h2>Code coverage</h2>\n<p>We're aiming for 100% code coverage on the project, track our progress\nhere: |code_cov|</p>\n<p>.. |code_cov| image:: <a href=\"https://codecov.io/gh/debrief/pepys-import/branch/develop/graph/badge.svg\" rel=\"nofollow\">https://codecov.io/gh/debrief/pepys-import/branch/develop/graph/badge.svg</a>\n:target: <a href=\"https://codecov.io/gh/debrief/pepys-import/branch/develop\" rel=\"nofollow\">https://codecov.io/gh/debrief/pepys-import/branch/develop</a></p>\n<h2>Upstream security</h2>\n<p>We have continuous vulnerability testing on the Open Source libraries\nwe depend upon for development: |dev_req| and production: |plain_req|</p>\n<p>.. |plain_req| image:: <a href=\"https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements.txt\" rel=\"nofollow\">https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements.txt</a>\n:target: <a href=\"https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements.txt\" rel=\"nofollow\">https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements.txt</a></p>\n<p>.. |dev_req| image:: <a href=\"https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements_dev.txt\" rel=\"nofollow\">https://snyk.io/test/github/debrief/pepys-import/badge.svg?targetFile=requirements_dev.txt</a>\n:target: <a href=\"https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements_dev.txt\" rel=\"nofollow\">https://snyk.io/test/github/debrief/pepys-import?targetFile=requirements_dev.txt</a></p>\n<h2>Code Style</h2>\n<p>Black is used on the project: |black|</p>\n<p>.. |black| image:: <a href=\"https://img.shields.io/badge/code%20style-black-000000.svg\" rel=\"nofollow\">https://img.shields.io/badge/code%20style-black-000000.svg</a>\n:target: <a href=\"https://github.com/python/black\" rel=\"nofollow\">https://github.com/python/black</a></p>\n<p>It is suggested to install a pre-commit hook in order to apply Black before pushing commits::</p>\n<pre><code>$ pip install pre-commit\n$ pre-commit install\n</code></pre>\n<h2>Project Progres</h2>\n<p>View the project Kanban board <code>here &lt;https://github.com/debrief/pepys-import/projects/3&gt;</code>_</p>\n<h2>Setup</h2>\n<p>To prepare for running ensure these tools and packages are installed:</p>\n<ul>\n<li>Python 3 - at least Python 3.6.4 or later</li>\n<li>SQL Alchemy 1.3</li>\n</ul>\n<p>For Postgres support and unit tests these packages are also required:</p>\n<ul>\n<li>geoalchemy2</li>\n<li>psycopg2</li>\n<li>nose2 (0.9.1)</li>\n</ul>\n<h2>Dependencies</h2>\n<p>Install the python dependencies with: :code:<code>pip install -r requirements.txt</code></p>\n<h2>Unit tests</h2>\n<ul>\n<li>Run the unit test suite with:  :code:<code>coverage3 run -m unittest discover -v</code></li>\n<li>View the unit test coverage with: :code:<code>coverage report</code></li>\n</ul>\n<h2>Command Line Instructions</h2>\n<p>To run from the command line go to the top level directory of the library in\nyour bash shell or terminal program</p>\n<p>Run by specifying the program as a module with :code:<code>-m</code> and\nleaving off the .py file extension</p>\n<p>The exact executable name for invoking python will depend how\nyou have it installed, but most commonly it's just :code:<code>python</code></p>\n<p>For example run the Sqlite example using:\n:code:<code>python -m Experiments.DataStore_sqliteExperiment</code></p>\n<h2>IntelliJ Instructions</h2>\n<p>To run from inside IntelliJ open the project\nMark the :code:<code>Store</code> package as source by right clicking on\nthe directory and selecting :code:<code>Mark Directory as -&gt; Source Root</code></p>\n<p>Open any python module you want to run in the main editor\nwindow, right click anywhere in the editor and choose the\n:code:<code>Run</code> or :code:<code>Debug</code> option</p>\n\n          </div>"}, "last_serial": 6636927, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "19d07fffeecc53f92c6dd59d989feb7d", "sha256": "108ff70a85dafe30eadb098ba33617a7deb2746807cdf3343775154dbbffc720"}, "downloads": -1, "filename": "pepys_import-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19d07fffeecc53f92c6dd59d989feb7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 24619, "upload_time": "2019-11-09T12:35:24", "upload_time_iso_8601": "2019-11-09T12:35:24.112049Z", "url": "https://files.pythonhosted.org/packages/86/25/a4b745a33e2c03fda60982f1158d6ca700744a10c71ebfca8f89657989ec/pepys_import-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1471d2de86976558e811e5afb3755738", "sha256": "e2b45ed31c2ffe924ff0d0ad9697138c957a6d84fb16649063012d743d4d6d81"}, "downloads": -1, "filename": "pepys_import-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1471d2de86976558e811e5afb3755738", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 30800, "upload_time": "2019-11-09T12:35:26", "upload_time_iso_8601": "2019-11-09T12:35:26.398307Z", "url": "https://files.pythonhosted.org/packages/97/e1/0ca2f4cf1f32e3bb2deaf825c41d3e40ccddb150d38d52804f2a746b25d4/pepys_import-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "660db601a73ab0ce301652f7cd770f9b", "sha256": "efd704c4eeed77c82a3f31d07845656f8b7f45ab5a581292cb70af17bd780df3"}, "downloads": -1, "filename": "pepys_import-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "660db601a73ab0ce301652f7cd770f9b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 25774, "upload_time": "2019-11-09T12:56:20", "upload_time_iso_8601": "2019-11-09T12:56:20.278965Z", "url": "https://files.pythonhosted.org/packages/ae/0c/bdd2143f9a2701781cc6fb9597e9f2050894a1db1dc1687824d321781dd5/pepys_import-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd350a864a3a7657b84819ef176efbdc", "sha256": "781cc4c4864ec045a84504db6ded8d6e481f86582b4cf819df167641fe5950cf"}, "downloads": -1, "filename": "pepys_import-0.0.2.tar.gz", "has_sig": false, "md5_digest": "cd350a864a3a7657b84819ef176efbdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32186, "upload_time": "2019-11-09T12:56:21", "upload_time_iso_8601": "2019-11-09T12:56:21.924265Z", "url": "https://files.pythonhosted.org/packages/08/11/f1d87f9d62569280e8b0993841046ec968cbbbd3f655d01c83de2ebf8655/pepys_import-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "de18fe77e694843778079b04371ae465", "sha256": "cf16dcc6cd19c2ec83d29620ecba6065898fca56161bd843a438bb00c67d3dda"}, "downloads": -1, "filename": "pepys_import-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de18fe77e694843778079b04371ae465", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32714, "upload_time": "2019-11-12T11:34:47", "upload_time_iso_8601": "2019-11-12T11:34:47.213774Z", "url": "https://files.pythonhosted.org/packages/7d/b7/b32dee87805003b64409a4f2f3d6112061e489e32559b59f8fa375f0482f/pepys_import-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c3ff21870464034b8a16f3987e6eee0", "sha256": "56e09c87895ea60d0b9aa1d934032dea950c11c1b2d638bb773b2f5285f64f20"}, "downloads": -1, "filename": "pepys_import-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3c3ff21870464034b8a16f3987e6eee0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 374385, "upload_time": "2019-11-12T11:34:49", "upload_time_iso_8601": "2019-11-12T11:34:49.394829Z", "url": "https://files.pythonhosted.org/packages/f9/37/adc3e08e494bc1099d74f27205caef914369aedcd799702e71719d0a3fa6/pepys_import-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f8feb249afcde7afc12da52f66a1ad97", "sha256": "7b0d499fb49cd65861d5cdf7de683766c087a52fd6ff9b907a03fa00f546260a"}, "downloads": -1, "filename": "pepys_import-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8feb249afcde7afc12da52f66a1ad97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 39510, "upload_time": "2020-02-15T16:27:48", "upload_time_iso_8601": "2020-02-15T16:27:48.333344Z", "url": "https://files.pythonhosted.org/packages/61/19/d904ff8e5a98bc0e972acf90864007faf5a8d6da27433fadccc7c09d2e65/pepys_import-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "027894ea0ed45acfec4b4b3e095b2c5d", "sha256": "7f000b7311ae6fc76ce60fc9a4eefd525c58f94c81c315f719d433a9641d79fa"}, "downloads": -1, "filename": "pepys_import-0.0.4.tar.gz", "has_sig": false, "md5_digest": "027894ea0ed45acfec4b4b3e095b2c5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 79533, "upload_time": "2020-02-15T16:27:49", "upload_time_iso_8601": "2020-02-15T16:27:49.970317Z", "url": "https://files.pythonhosted.org/packages/81/45/410e6d846d7ac759b30ec2010721f94c44894e9de2c065196545fb0dfd40/pepys_import-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8feb249afcde7afc12da52f66a1ad97", "sha256": "7b0d499fb49cd65861d5cdf7de683766c087a52fd6ff9b907a03fa00f546260a"}, "downloads": -1, "filename": "pepys_import-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8feb249afcde7afc12da52f66a1ad97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 39510, "upload_time": "2020-02-15T16:27:48", "upload_time_iso_8601": "2020-02-15T16:27:48.333344Z", "url": "https://files.pythonhosted.org/packages/61/19/d904ff8e5a98bc0e972acf90864007faf5a8d6da27433fadccc7c09d2e65/pepys_import-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "027894ea0ed45acfec4b4b3e095b2c5d", "sha256": "7f000b7311ae6fc76ce60fc9a4eefd525c58f94c81c315f719d433a9641d79fa"}, "downloads": -1, "filename": "pepys_import-0.0.4.tar.gz", "has_sig": false, "md5_digest": "027894ea0ed45acfec4b4b3e095b2c5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 79533, "upload_time": "2020-02-15T16:27:49", "upload_time_iso_8601": "2020-02-15T16:27:49.970317Z", "url": "https://files.pythonhosted.org/packages/81/45/410e6d846d7ac759b30ec2010721f94c44894e9de2c065196545fb0dfd40/pepys_import-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:23 2020"}