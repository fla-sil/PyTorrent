{"info": {"author": "Pauline Barbet, Arnaud Felten", "author_email": "pauline.barbet@anses.fr, arnaud.felten@anses.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "GENIAL : GENes Identification with Abricate for Lucky biologists\n================================================================\n\nAuthors : Barbet Pauline, Felten Arnaud\n\nAffiliation: [Food Safety Laboratory - ANSES Maisons Alfort (France)](https://www.anses.fr/en/content/laboratory-food-safety-maisons-alfort-and-boulogne-sur-mer)\n\nYou can find the latest version of the tool at [https://github.com/p-barbet/GENIAL](https://github.com/p-barbet/GENIAL)\n\n\nGENIAL\n======\n\nGENIAL aims to identify antimicrobial resistance and virulence genes from bacterial genomes matching them to a database gathering genes of interest using [ABRicate](https://github.com/tseemann/abricate).\n\n### Databases\n\nDefault databases available are ([Resfinder](https://cge.cbs.dtu.dk/services/ResFinder/), [CARD](https://card.mcmaster.ca/), [ARG-ANNOT](http://backup.mediterranee-infection.com/article.php?laref=282&titre=arg-annot), [NCBI](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA313047), [EcOH](https://github.com/katholt/srst2/tree/master/data), [PlasmidFinder](https://cge.cbs.dtu.dk/services/PlasmidFinder/), [Ecoli_VF](https://github.com/phac-nml/ecoli_vf) and [VFDB](http://www.mgc.ac.cn/VFs/))\n\nAs well as this databes, it's posible to use your own database.\n\nThe tool is divided into two scripts.\n\n### GENIALanalysis\n\nGENIALanalysis aims to run ABricate. It takes in input a tsv file containing genomes fasta files paths and IDs.If you want to use your own database you also need to provide a multifasta whith genes IDs as headers. Then the script run ABricate and produce in output one ABRicate result file per genome, corresponding to a tsv file including genes found in each sample.\n\n### GENIALresults\n\nGENIALresults aims to conditionning ABRicate results in the form of matrixes and heatmaps of presence/absence. It takes in input a temporary file produced by the Abricate analysis containing the genomes Abricate results paths and IDs. In the case of vfdb database a file containing the virulence factors names, their family and species is automticaly included in the script.\n\nThe output depending on the database used :\n\n* In any cases a matrix in tsv format and a heatmap in png format with all genes found are created\n\n\nOn top of that:\n\n* If you use one of the default databases [Resfinder](https://cge.cbs.dtu.dk/services/ResFinder/) or [VFDB](http://www.mgc.ac.cn/VFs/) news matrix and heatmap by gene type are produced with a correspondace table between the gene name, its family and its number in all genomes.\n\n* If you don't use one of the two previous databases or if you use your own database, only a corespondance table between the gene name and its number in all genomes is produced in addition.\n\n![](workflow.PNG?raw=true \"script workflow\")\n\n\nDependencies\n============\n\nThe script has been developed with python 3.6 (tested with 3.6.6)\n\n### External dependencies\n\n* [ABRicate](https://github.com/tseemann/abricate) tested with 0.8.7\n* [Pandas](https://pandas.pydata.org/) tested with 0.23.4\n* [seaborn](https://seaborn.pydata.org/installing.html) tested with 0.9.0\n\n\nParameters\n==========\n\n### Command line options\n\n\n|   Options   |                                                              Description                                                              |        Required        |      Default     |\n|:-----------:|:-------------------------------------------------------------------------------------------------------------------------------------:|:----------------------:|:----------------:|\n|      -f     |                                            tsv file with FASTA files paths ans strains IDs                                            |           Yes          |                  |\n|     -dbp    |                                   Path to ABRicate databases repertory. Implies -dbf and --privatedb                                  |   Yes if --privatedb   |                  |\n|     -dbf    |                           Multifasta containing the private database sequences. Implies -dbp and --privatedb                          |   Yes if --privatedb   |                  |\n|      -T     |                                                        Number of thread to use                                                        |           No           |         1        |\n|      -w     |                                                           Working directory                                                           |           No           |         .        |\n|      -r     |                                                         Results directory name                                                        |           No           | ABRicate_results |\n| --defaultdb |  default databases available : resfinder, card, argannot, acoh, ecoli_vf, plasmidfinder, vfdb or ncbi. Incompatible with --privatedb  | Yes if not --privatedb |                  |\n| --privatedb |                              Private database name. Implies -dbp and -dbf. Incompatible with --defaultdb                              | Yes if not --defaultdb |                  |\n|   --mincov  |                                                   Minimum proportion of gene covered                                                  |           No           |        80        |\n|   --minid   |                                             Minimum proportion of exact nucleotide matches                                            |           No           |        90        |\n|     --R     |                                          Remove genes present in all genomes from the matrix                                          |           No           |       False      |\n\nTest \n====\n\nAfter installing ABRicate and Pandas and seaborn you can test the script with the command line :\n\n## Default database\n\n\tpython AntiViruce.py -f input_file.tsv --defaultdb vfdb -r results_directory --minid 90 --mincov 80\n\n## Private database\n\n\tpython AntiViruce.py -f input_file.tsv  --privatedb private_db_name -T 10 -r results_directory --minid 90 --mincov 80 -dbp path_to_abricate_databases_repertory -dbf private_db_multifasta_path\n\n\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/p-barbet/GENIAL", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "GENIALbiologists", "package_url": "https://pypi.org/project/GENIALbiologists/", "platform": "", "project_url": "https://pypi.org/project/GENIALbiologists/", "project_urls": {"Homepage": "https://github.com/p-barbet/GENIAL"}, "release_url": "https://pypi.org/project/GENIALbiologists/0.9.0/", "requires_dist": ["pandas", "seaborn", "biopython"], "requires_python": "", "summary": "GENIAL: GENes Indentification with Abricate for Lucky biologists", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GENIAL : GENes Identification with Abricate for Lucky biologists</h1>\n<p>Authors : Barbet Pauline, Felten Arnaud</p>\n<p>Affiliation: <a href=\"https://www.anses.fr/en/content/laboratory-food-safety-maisons-alfort-and-boulogne-sur-mer\" rel=\"nofollow\">Food Safety Laboratory - ANSES Maisons Alfort (France)</a></p>\n<p>You can find the latest version of the tool at <a href=\"https://github.com/p-barbet/GENIAL\" rel=\"nofollow\">https://github.com/p-barbet/GENIAL</a></p>\n<h1>GENIAL</h1>\n<p>GENIAL aims to identify antimicrobial resistance and virulence genes from bacterial genomes matching them to a database gathering genes of interest using <a href=\"https://github.com/tseemann/abricate\" rel=\"nofollow\">ABRicate</a>.</p>\n<h3>Databases</h3>\n<p>Default databases available are (<a href=\"https://cge.cbs.dtu.dk/services/ResFinder/\" rel=\"nofollow\">Resfinder</a>, <a href=\"https://card.mcmaster.ca/\" rel=\"nofollow\">CARD</a>, <a href=\"http://backup.mediterranee-infection.com/article.php?laref=282&amp;titre=arg-annot\" rel=\"nofollow\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/bioproject/PRJNA313047\" rel=\"nofollow\">NCBI</a>, <a href=\"https://github.com/katholt/srst2/tree/master/data\" rel=\"nofollow\">EcOH</a>, <a href=\"https://cge.cbs.dtu.dk/services/PlasmidFinder/\" rel=\"nofollow\">PlasmidFinder</a>, <a href=\"https://github.com/phac-nml/ecoli_vf\" rel=\"nofollow\">Ecoli_VF</a> and <a href=\"http://www.mgc.ac.cn/VFs/\" rel=\"nofollow\">VFDB</a>)</p>\n<p>As well as this databes, it's posible to use your own database.</p>\n<p>The tool is divided into two scripts.</p>\n<h3>GENIALanalysis</h3>\n<p>GENIALanalysis aims to run ABricate. It takes in input a tsv file containing genomes fasta files paths and IDs.If you want to use your own database you also need to provide a multifasta whith genes IDs as headers. Then the script run ABricate and produce in output one ABRicate result file per genome, corresponding to a tsv file including genes found in each sample.</p>\n<h3>GENIALresults</h3>\n<p>GENIALresults aims to conditionning ABRicate results in the form of matrixes and heatmaps of presence/absence. It takes in input a temporary file produced by the Abricate analysis containing the genomes Abricate results paths and IDs. In the case of vfdb database a file containing the virulence factors names, their family and species is automticaly included in the script.</p>\n<p>The output depending on the database used :</p>\n<ul>\n<li>In any cases a matrix in tsv format and a heatmap in png format with all genes found are created</li>\n</ul>\n<p>On top of that:</p>\n<ul>\n<li>\n<p>If you use one of the default databases <a href=\"https://cge.cbs.dtu.dk/services/ResFinder/\" rel=\"nofollow\">Resfinder</a> or <a href=\"http://www.mgc.ac.cn/VFs/\" rel=\"nofollow\">VFDB</a> news matrix and heatmap by gene type are produced with a correspondace table between the gene name, its family and its number in all genomes.</p>\n</li>\n<li>\n<p>If you don't use one of the two previous databases or if you use your own database, only a corespondance table between the gene name and its number in all genomes is produced in addition.</p>\n</li>\n</ul>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2d83a1b14ca295a7fbdfd395889e3318e79560b/776f726b666c6f772e504e473f7261773d74727565\"></p>\n<h1>Dependencies</h1>\n<p>The script has been developed with python 3.6 (tested with 3.6.6)</p>\n<h3>External dependencies</h3>\n<ul>\n<li><a href=\"https://github.com/tseemann/abricate\" rel=\"nofollow\">ABRicate</a> tested with 0.8.7</li>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">Pandas</a> tested with 0.23.4</li>\n<li><a href=\"https://seaborn.pydata.org/installing.html\" rel=\"nofollow\">seaborn</a> tested with 0.9.0</li>\n</ul>\n<h1>Parameters</h1>\n<h3>Command line options</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Options</th>\n<th align=\"center\">Description</th>\n<th align=\"center\">Required</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">-f</td>\n<td align=\"center\">tsv file with FASTA files paths ans strains IDs</td>\n<td align=\"center\">Yes</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">-dbp</td>\n<td align=\"center\">Path to ABRicate databases repertory. Implies -dbf and --privatedb</td>\n<td align=\"center\">Yes if --privatedb</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">-dbf</td>\n<td align=\"center\">Multifasta containing the private database sequences. Implies -dbp and --privatedb</td>\n<td align=\"center\">Yes if --privatedb</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">-T</td>\n<td align=\"center\">Number of thread to use</td>\n<td align=\"center\">No</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">-w</td>\n<td align=\"center\">Working directory</td>\n<td align=\"center\">No</td>\n<td align=\"center\">.</td>\n</tr>\n<tr>\n<td align=\"center\">-r</td>\n<td align=\"center\">Results directory name</td>\n<td align=\"center\">No</td>\n<td align=\"center\">ABRicate_results</td>\n</tr>\n<tr>\n<td align=\"center\">--defaultdb</td>\n<td align=\"center\">default databases available : resfinder, card, argannot, acoh, ecoli_vf, plasmidfinder, vfdb or ncbi. Incompatible with --privatedb</td>\n<td align=\"center\">Yes if not --privatedb</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">--privatedb</td>\n<td align=\"center\">Private database name. Implies -dbp and -dbf. Incompatible with --defaultdb</td>\n<td align=\"center\">Yes if not --defaultdb</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">--mincov</td>\n<td align=\"center\">Minimum proportion of gene covered</td>\n<td align=\"center\">No</td>\n<td align=\"center\">80</td>\n</tr>\n<tr>\n<td align=\"center\">--minid</td>\n<td align=\"center\">Minimum proportion of exact nucleotide matches</td>\n<td align=\"center\">No</td>\n<td align=\"center\">90</td>\n</tr>\n<tr>\n<td align=\"center\">--R</td>\n<td align=\"center\">Remove genes present in all genomes from the matrix</td>\n<td align=\"center\">No</td>\n<td align=\"center\">False</td>\n</tr></tbody></table>\n<h1>Test</h1>\n<p>After installing ABRicate and Pandas and seaborn you can test the script with the command line :</p>\n<h2>Default database</h2>\n<pre><code>python AntiViruce.py -f input_file.tsv --defaultdb vfdb -r results_directory --minid 90 --mincov 80\n</code></pre>\n<h2>Private database</h2>\n<pre><code>python AntiViruce.py -f input_file.tsv  --privatedb private_db_name -T 10 -r results_directory --minid 90 --mincov 80 -dbp path_to_abricate_databases_repertory -dbf private_db_multifasta_path\n</code></pre>\n\n          </div>"}, "last_serial": 4811253, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "4d7e8f5ffaab55009d52267fddaac81a", "sha256": "20cb8d33ebef6a8240b4d61edd89ffa384c9eb422cfe0c3a9bf767039bd3b9b6"}, "downloads": -1, "filename": "GENIALbiologists-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d7e8f5ffaab55009d52267fddaac81a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27022, "upload_time": "2019-02-12T14:58:33", "upload_time_iso_8601": "2019-02-12T14:58:33.224993Z", "url": "https://files.pythonhosted.org/packages/3f/21/23a3db9ceef6171f0a4fe3744c25ef87e24c71291a40a3e3c88ed6f9c813/GENIALbiologists-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "718785ea87d2f40e933642c83a33c66e", "sha256": "9376d696e78349e342ea88eb6b391eb05dea0e2d0e51cdfe3f352cff64586eb4"}, "downloads": -1, "filename": "GENIALbiologists-0.9.0.tar.gz", "has_sig": false, "md5_digest": "718785ea87d2f40e933642c83a33c66e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12815, "upload_time": "2019-02-12T14:58:35", "upload_time_iso_8601": "2019-02-12T14:58:35.341295Z", "url": "https://files.pythonhosted.org/packages/75/65/042d99504140e45fae8e24004d93dc3db862bd8a83063ce7452ac1b3200b/GENIALbiologists-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d7e8f5ffaab55009d52267fddaac81a", "sha256": "20cb8d33ebef6a8240b4d61edd89ffa384c9eb422cfe0c3a9bf767039bd3b9b6"}, "downloads": -1, "filename": "GENIALbiologists-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d7e8f5ffaab55009d52267fddaac81a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27022, "upload_time": "2019-02-12T14:58:33", "upload_time_iso_8601": "2019-02-12T14:58:33.224993Z", "url": "https://files.pythonhosted.org/packages/3f/21/23a3db9ceef6171f0a4fe3744c25ef87e24c71291a40a3e3c88ed6f9c813/GENIALbiologists-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "718785ea87d2f40e933642c83a33c66e", "sha256": "9376d696e78349e342ea88eb6b391eb05dea0e2d0e51cdfe3f352cff64586eb4"}, "downloads": -1, "filename": "GENIALbiologists-0.9.0.tar.gz", "has_sig": false, "md5_digest": "718785ea87d2f40e933642c83a33c66e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12815, "upload_time": "2019-02-12T14:58:35", "upload_time_iso_8601": "2019-02-12T14:58:35.341295Z", "url": "https://files.pythonhosted.org/packages/75/65/042d99504140e45fae8e24004d93dc3db862bd8a83063ce7452ac1b3200b/GENIALbiologists-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:22 2020"}