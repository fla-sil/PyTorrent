{"info": {"author": "Jeremy Peters", "author_email": "contact@celltec.dev", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# simple-ipc\n\n#### Inter-process communication based on stdio\n\n[![Python Version](https://badgen.net/badge/python/2.7%20%7C%203/)](https://www.python.org/downloads)\n[![PyPI Version](https://badgen.net/pypi/v/simple-ipc/)](https://pypi.org/project/simple-ipc)\n[![License](https://badgen.net/badge/license/MIT/)](https://opensource.org/licenses/mit-license.php)\n\nA simple python interface for inter-process communication, a way to asynchronously \nexchange data with external programs at runtime. The internal mechanism functions \nby writing data to *stdout* and reading from *stdin* using multi threading. \n\n## Installation\n`pip install simple-ipc`\n\n## Usage\nImport the module first:\n- `import ipc`\n- `from ipc import Worker`\n\n### Parameters\n```\nWorker(command, callback=None, start=True, verbose=False)\n```\n\n- `command` a path to an executable along with optional arguments  \n  - **list:** may include spaces \n  - **str:** no support for spaces\n\n- `callback` *(optional)* a function that is called after new data has been received  \n  - must take exactly one argument\n\n- `start` *(optional)* start the worker automatically when created\n\n- `verbose` *(optional)* print status messages\n\n#### Examples\n```python\nworker = Worker(['with space.exe', 'spaced arg'], start=False)\n```\n\n```python\nwith Worker('program.exe', verbose=True) as worker:\n    ...\n```\n\n```python\nWorker('path/to/program.exe arg', lambda data: print(data))\n```\n\n### A worker object\n\nAll data will be converted to type `str` internally.\n\n#### Methods\n- `start()` starts the worker\n- `send(data)` sends the data to the external process\n- `stop()` initiates the termination of all threads and clears all data\n\n#### Properties\n- `running` indicates the status of the worker *(read-only)*\n- `data` contains the most recent value *(read-only)*\n\n## Example program\n```python\nfrom random import randint\nfrom ipc import Worker\n\ndef process(data):\n    if int(data) == 5:\n        print('Process data...')\n\nworker = Worker('program.exe', process)\n\nwhile worker.running:\n    number = randint(1, 10)\n    worker.send(number)\n    print(f'Data: {worker.data}')\n```\n\nMore example code can be found [here](https://github.com/celltec/simple-ipc/tree/master/example/example.py).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/celltec/simple-ipc", "keywords": "ipc stdio stdin stdout send process program communicate interact transmit transfer communication interaction transmission simple", "license": "", "maintainer": "", "maintainer_email": "", "name": "simple-ipc", "package_url": "https://pypi.org/project/simple-ipc/", "platform": "", "project_url": "https://pypi.org/project/simple-ipc/", "project_urls": {"Homepage": "https://github.com/celltec/simple-ipc", "Source": "https://github.com/celltec/simple-ipc/tree/master/src/ipc/worker.py"}, "release_url": "https://pypi.org/project/simple-ipc/1.2.1/", "requires_dist": null, "requires_python": ">=2.7, <4", "summary": "Inter-process communication based on stdio", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>simple-ipc</h1>\n<h4>Inter-process communication based on stdio</h4>\n<p><a href=\"https://www.python.org/downloads\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/007143f54bf178612a0d2d9e2bf50fed59f4ec01/68747470733a2f2f62616467656e2e6e65742f62616467652f707974686f6e2f322e37253230253743253230332f\"></a>\n<a href=\"https://pypi.org/project/simple-ipc\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb84b9518c8e864d0aa5e8442036af4156e5de4a/68747470733a2f2f62616467656e2e6e65742f707970692f762f73696d706c652d6970632f\"></a>\n<a href=\"https://opensource.org/licenses/mit-license.php\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d45db1273e1de14b17098f60187adcada7c0a019/68747470733a2f2f62616467656e2e6e65742f62616467652f6c6963656e73652f4d49542f\"></a></p>\n<p>A simple python interface for inter-process communication, a way to asynchronously\nexchange data with external programs at runtime. The internal mechanism functions\nby writing data to <em>stdout</em> and reading from <em>stdin</em> using multi threading.</p>\n<h2>Installation</h2>\n<p><code>pip install simple-ipc</code></p>\n<h2>Usage</h2>\n<p>Import the module first:</p>\n<ul>\n<li><code>import ipc</code></li>\n<li><code>from ipc import Worker</code></li>\n</ul>\n<h3>Parameters</h3>\n<pre><code>Worker(command, callback=None, start=True, verbose=False)\n</code></pre>\n<ul>\n<li>\n<p><code>command</code> a path to an executable along with optional arguments</p>\n<ul>\n<li><strong>list:</strong> may include spaces</li>\n<li><strong>str:</strong> no support for spaces</li>\n</ul>\n</li>\n<li>\n<p><code>callback</code> <em>(optional)</em> a function that is called after new data has been received</p>\n<ul>\n<li>must take exactly one argument</li>\n</ul>\n</li>\n<li>\n<p><code>start</code> <em>(optional)</em> start the worker automatically when created</p>\n</li>\n<li>\n<p><code>verbose</code> <em>(optional)</em> print status messages</p>\n</li>\n</ul>\n<h4>Examples</h4>\n<pre><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">Worker</span><span class=\"p\">([</span><span class=\"s1\">'with space.exe'</span><span class=\"p\">,</span> <span class=\"s1\">'spaced arg'</span><span class=\"p\">],</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"k\">with</span> <span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"s1\">'program.exe'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">worker</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</pre>\n<pre><span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"s1\">'path/to/program.exe arg'</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">))</span>\n</pre>\n<h3>A worker object</h3>\n<p>All data will be converted to type <code>str</code> internally.</p>\n<h4>Methods</h4>\n<ul>\n<li><code>start()</code> starts the worker</li>\n<li><code>send(data)</code> sends the data to the external process</li>\n<li><code>stop()</code> initiates the termination of all threads and clears all data</li>\n</ul>\n<h4>Properties</h4>\n<ul>\n<li><code>running</code> indicates the status of the worker <em>(read-only)</em></li>\n<li><code>data</code> contains the most recent value <em>(read-only)</em></li>\n</ul>\n<h2>Example program</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ipc</span> <span class=\"kn\">import</span> <span class=\"n\">Worker</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Process data...'</span><span class=\"p\">)</span>\n\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"s1\">'program.exe'</span><span class=\"p\">,</span> <span class=\"n\">process</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">running</span><span class=\"p\">:</span>\n    <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Data: </span><span class=\"si\">{</span><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>More example code can be found <a href=\"https://github.com/celltec/simple-ipc/tree/master/example/example.py\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 6962977, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "90bdb408d92da168419e64e3b7305934", "sha256": "8386ec58683fee7b20617fc85cf191ee88a44caa2155398e83174b65f950a804"}, "downloads": -1, "filename": "simple_ipc-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "90bdb408d92da168419e64e3b7305934", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, <4", "size": 4207, "upload_time": "2020-01-25T14:31:21", "upload_time_iso_8601": "2020-01-25T14:31:21.488005Z", "url": "https://files.pythonhosted.org/packages/95/de/2bf7ce4d35329cf3deef63cfa1fcbbb8b28772e80ee169f42868cee89b5d/simple_ipc-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2a4dc501f98ce3c9a55e10edb4d0f17", "sha256": "fee284ab67822de1ab2fa171fc52b82b1b85cac0c40849a5edb695e9d400cca3"}, "downloads": -1, "filename": "simple-ipc-1.0.4.tar.gz", "has_sig": false, "md5_digest": "f2a4dc501f98ce3c9a55e10edb4d0f17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <4", "size": 3287, "upload_time": "2020-01-25T14:31:23", "upload_time_iso_8601": "2020-01-25T14:31:23.233616Z", "url": "https://files.pythonhosted.org/packages/17/fe/8a6c1109354ed595509084c1fe7a44381860f73a1b9579da452c76baf27c/simple-ipc-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "10d18a9664bab88eb403759018dd1d09", "sha256": "60f75df1e1dae09284086ca0266ada8886e907b566f1ab74bd77f57cee9984c5"}, "downloads": -1, "filename": "simple_ipc-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "10d18a9664bab88eb403759018dd1d09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, <4", "size": 4256, "upload_time": "2020-01-25T21:21:03", "upload_time_iso_8601": "2020-01-25T21:21:03.501805Z", "url": "https://files.pythonhosted.org/packages/24/2c/619db0454da22d90f569064c37c98e22a7529ce5566982615021263324fe/simple_ipc-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55899be10c8249ffc2f7c8ce784954d3", "sha256": "1d5c0520287e875ebad2876fa15dffa51325d47658a8c7626c0685f8539fe2a2"}, "downloads": -1, "filename": "simple-ipc-1.1.0.tar.gz", "has_sig": false, "md5_digest": "55899be10c8249ffc2f7c8ce784954d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <4", "size": 3328, "upload_time": "2020-01-25T21:21:05", "upload_time_iso_8601": "2020-01-25T21:21:05.011621Z", "url": "https://files.pythonhosted.org/packages/80/10/31457dcf69f58b27d08b238d20e791a4fe624ea87e8ad7476f86f6fe5750/simple-ipc-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9e6d20c1e975b2df36c8adb7d02c3715", "sha256": "a9aeb2405abc51ea7406fdba18a2e3a4a6fa4fda996844b40a9e48d666fa568b"}, "downloads": -1, "filename": "simple_ipc-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9e6d20c1e975b2df36c8adb7d02c3715", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, <4", "size": 4518, "upload_time": "2020-02-03T17:18:59", "upload_time_iso_8601": "2020-02-03T17:18:59.556439Z", "url": "https://files.pythonhosted.org/packages/8f/e1/1ece498cf4daad79f47b643171e9a97c2c3a0b4223cd657a6745455ca310/simple_ipc-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51331ac037b5b4a2314a0827c403854c", "sha256": "53c35d6ef896f4669eb04662ccab69ececf8d3804c1e198cfaaddadc81d67752"}, "downloads": -1, "filename": "simple-ipc-1.2.0.tar.gz", "has_sig": false, "md5_digest": "51331ac037b5b4a2314a0827c403854c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <4", "size": 3564, "upload_time": "2020-02-03T17:19:00", "upload_time_iso_8601": "2020-02-03T17:19:00.777052Z", "url": "https://files.pythonhosted.org/packages/b7/dd/f8cf90e1faeaaa9d1c599ee52c372f446d60dcedf9843a4431664473f9c5/simple-ipc-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "54aa9eb3db299f1df0f592dda16caf07", "sha256": "f81dd4799a33d5b613f1737e6d61bf0adfd6a21562aa5dbb123fff6c9c71b9eb"}, "downloads": -1, "filename": "simple_ipc-1.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "54aa9eb3db299f1df0f592dda16caf07", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7, <4", "size": 4457, "upload_time": "2020-04-06T16:37:39", "upload_time_iso_8601": "2020-04-06T16:37:39.951254Z", "url": "https://files.pythonhosted.org/packages/39/30/56d1ad8f50e101389e542af2e4a070787cc442a8d78e0d587b0883bf5b6a/simple_ipc-1.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d84b64ed8d4c7cb040b434c71635371a", "sha256": "f4170c8e0b3b4849da3affc7447f461c657e3de7f9bf2e184007fd1f81a486d1"}, "downloads": -1, "filename": "simple-ipc-1.2.1.tar.gz", "has_sig": false, "md5_digest": "d84b64ed8d4c7cb040b434c71635371a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <4", "size": 3274, "upload_time": "2020-04-06T16:37:41", "upload_time_iso_8601": "2020-04-06T16:37:41.098550Z", "url": "https://files.pythonhosted.org/packages/a5/f5/2912383a76b735a44d552b661c4c2a2865cd594e46607f970bfba032e2fa/simple-ipc-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54aa9eb3db299f1df0f592dda16caf07", "sha256": "f81dd4799a33d5b613f1737e6d61bf0adfd6a21562aa5dbb123fff6c9c71b9eb"}, "downloads": -1, "filename": "simple_ipc-1.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "54aa9eb3db299f1df0f592dda16caf07", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7, <4", "size": 4457, "upload_time": "2020-04-06T16:37:39", "upload_time_iso_8601": "2020-04-06T16:37:39.951254Z", "url": "https://files.pythonhosted.org/packages/39/30/56d1ad8f50e101389e542af2e4a070787cc442a8d78e0d587b0883bf5b6a/simple_ipc-1.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d84b64ed8d4c7cb040b434c71635371a", "sha256": "f4170c8e0b3b4849da3affc7447f461c657e3de7f9bf2e184007fd1f81a486d1"}, "downloads": -1, "filename": "simple-ipc-1.2.1.tar.gz", "has_sig": false, "md5_digest": "d84b64ed8d4c7cb040b434c71635371a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <4", "size": 3274, "upload_time": "2020-04-06T16:37:41", "upload_time_iso_8601": "2020-04-06T16:37:41.098550Z", "url": "https://files.pythonhosted.org/packages/a5/f5/2912383a76b735a44d552b661c4c2a2865cd594e46607f970bfba032e2fa/simple-ipc-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:41 2020"}