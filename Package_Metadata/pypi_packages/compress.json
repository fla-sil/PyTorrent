{"info": {"author": "Sanhe Hu", "author_email": "husanhe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Archiving :: Compression"], "description": ".. image:: https://travis-ci.org/MacHu-GWU/compress-project.svg?branch=master\n    :target: https://travis-ci.org/MacHu-GWU/compress-project?branch=master\n\n.. image:: https://codecov.io/gh/MacHu-GWU/compress-project/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/MacHu-GWU/compress-project\n\n.. image:: https://img.shields.io/pypi/v/compress.svg\n    :target: https://pypi.python.org/pypi/compress\n\n.. image:: https://img.shields.io/pypi/l/compress.svg\n    :target: https://pypi.python.org/pypi/compress\n\n.. image:: https://img.shields.io/pypi/pyversions/compress.svg\n    :target: https://pypi.python.org/pypi/compress\n\n.. image:: https://img.shields.io/badge/Star_Me_on_GitHub!--None.svg?style=social\n    :target: https://github.com/MacHu-GWU/compress-project\n\n\nWelcome to ``compress`` Documentation\n==============================================================================\n\nThere's lots of mature data compression algorithm you can choose from, ``compress`` provides **normalized API** to use them and **switch between them**.\n\nIt supports:\n\n- `zlib <https://docs.python.org/2/library/zlib.html>`_.\n- `bz2 <https://docs.python.org/2/library/bz2.html>`_.\n- `lzma <https://docs.python.org/3/library/lzma.html>`_, high compression ratio but slow (it's part of standard library after Python3.4, you can use `backports.lzma <https://pypi.python.org/pypi/backports.lzma>`_ for versions before that.)\n- `pylzma <https://pypi.python.org/pypi/pylzma>`_, another implementation, faster in decompression than ``lzma``.\n- `snappy <https://pypi.python.org/pypi/python-snappy>`_, from Google, lower compression ratio but super fast!\n- `lz4 <https://pypi.python.org/pypi/lz4>`_, lower ratio, super fast!\n\n.. note::\n\n    some package are not installed along with ``compress``. Because **all of them needs C compiler**, you have to manually install them. If you have trouble installing C compiler for your OS, read `THIS TUTORIAL <https://github.com/MacHu-GWU/Setup-Environment-for-Python-Developer/blob/master/05-FAQ-Failed-to-compile-source-code.rst>`_.\n\n\nUsage::\n\n    >>> from compress import Compressor\n    >>> c = Compressor()\n    >>> c.use_zlib() # or use_bz2, use_lzma, use_lz4, use_snappy\n    >>> c.compress(binary_data, zlib_level=9)\n    >>> c.decompress(binary_data)\n\n`This website <https://quixdb.github.io/squash-benchmark/>`_ provides comprehensive comparison and visualization. But how do you know **how it works on your own production environment?**.\n\n``compress`` comes with a tool to run benchmark test for **All test case, All algorithm, All parameters**, and you will get informative stats about ratio, compress/decompress speed in ``.tab`` and ``ascii table`` format. Then You are able to visualize it in the way you preferred.\n\nTo run benchmark test, just::\n\n    make up\n    make benchmark\n\nIf you use **Windows** (doesn't have ``make`` command), this is the `SOLUTION <https://pygitrepo.readthedocs.io/index.html#software-environment-you-should-have>`_\n\nOf course, you can **extend with your own test case** (`How to extend test case <https://github.com/MacHu-GWU/compress-project/blob/master/benchmark/README.rst>`_).\n\n\nQuick Links\n------------------------------------------------------------------------------\n\n- .. image:: https://img.shields.io/badge/Link-Document-red.svg\n      :target: https://compress.readthedocs.io/index.html\n\n- .. image:: https://img.shields.io/badge/Link-API_Reference_and_Source_Code-red.svg\n      :target: https://compress.readthedocs.io/py-modindex.html\n\n- .. image:: https://img.shields.io/badge/Link-Install-red.svg\n      :target: `install`_\n\n- .. image:: https://img.shields.io/badge/Link-GitHub-blue.svg\n      :target: https://github.com/MacHu-GWU/compress-project\n\n- .. image:: https://img.shields.io/badge/Link-Submit_Issue_and_Feature_Request-blue.svg\n      :target: https://github.com/MacHu-GWU/compress-project/issues\n\n- .. image:: https://img.shields.io/badge/Link-Download-blue.svg\n      :target: https://pypi.python.org/pypi/compress#downloads\n\n\n.. _install:\n\nInstall\n------------------------------------------------------------------------------\n\n``compress`` is released on PyPI, so all you need is:\n\n.. code-block:: console\n\n    $ pip install compress\n\nTo upgrade to latest version:\n\n.. code-block:: console\n\n    $ pip install --upgrade compress\n\n.. note::\n\n    to install lzma, snappy, lz4 for python, it may requires gcc comiler. If you are using Windows,\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/MacHu-GWU//tarball/2017-11-15", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MacHu-GWU/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "compress", "package_url": "https://pypi.org/project/compress/", "platform": "Windows", "project_url": "https://pypi.org/project/compress/", "project_urls": {"Download": "https://github.com/MacHu-GWU//tarball/2017-11-15", "Homepage": "https://github.com/MacHu-GWU/"}, "release_url": "https://pypi.org/project/compress/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "All in one data compression library.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/MacHu-GWU/compress-project?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MacHu-GWU/compress-project.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/307902d3f0af2f78bbf6bfae668f8cfd433b8392/68747470733a2f2f7472617669732d63692e6f72672f4d616348752d4757552f636f6d70726573732d70726f6a6563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/MacHu-GWU/compress-project\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/MacHu-GWU/compress-project/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27f049871a63d681c7ac79c3104ebd0546098696/68747470733a2f2f636f6465636f762e696f2f67682f4d616348752d4757552f636f6d70726573732d70726f6a6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/compress\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/compress.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5f9365d9a039f3541194d81611e238ba9f79523/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6d70726573732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/compress\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/compress.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdde9649be25ecf6ac6875c73d8224533bc320e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6d70726573732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/compress\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/compress.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/384cbb8a3a2f512c0a00fee74be5ebc987cb8f85/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6d70726573732e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/compress-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Star_Me_on_GitHub!--None.svg?style=social\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91e8618c34f58a016f2ad17f11cbbd258aa3aefc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537461725f4d655f6f6e5f476974487562212d2d4e6f6e652e7376673f7374796c653d736f6369616c\"></a>\n<div id=\"welcome-to-compress-documentation\">\n<h2>Welcome to <tt>compress</tt> Documentation</h2>\n<p>There\u2019s lots of mature data compression algorithm you can choose from, <tt>compress</tt> provides <strong>normalized API</strong> to use them and <strong>switch between them</strong>.</p>\n<p>It supports:</p>\n<ul>\n<li><a href=\"https://docs.python.org/2/library/zlib.html\" rel=\"nofollow\">zlib</a>.</li>\n<li><a href=\"https://docs.python.org/2/library/bz2.html\" rel=\"nofollow\">bz2</a>.</li>\n<li><a href=\"https://docs.python.org/3/library/lzma.html\" rel=\"nofollow\">lzma</a>, high compression ratio but slow (it\u2019s part of standard library after Python3.4, you can use <a href=\"https://pypi.python.org/pypi/backports.lzma\" rel=\"nofollow\">backports.lzma</a> for versions before that.)</li>\n<li><a href=\"https://pypi.python.org/pypi/pylzma\" rel=\"nofollow\">pylzma</a>, another implementation, faster in decompression than <tt>lzma</tt>.</li>\n<li><a href=\"https://pypi.python.org/pypi/python-snappy\" rel=\"nofollow\">snappy</a>, from Google, lower compression ratio but super fast!</li>\n<li><a href=\"https://pypi.python.org/pypi/lz4\" rel=\"nofollow\">lz4</a>, lower ratio, super fast!</li>\n</ul>\n<div>\n<p>Note</p>\n<p>some package are not installed along with <tt>compress</tt>. Because <strong>all of them needs C compiler</strong>, you have to manually install them. If you have trouble installing C compiler for your OS, read <a href=\"https://github.com/MacHu-GWU/Setup-Environment-for-Python-Developer/blob/master/05-FAQ-Failed-to-compile-source-code.rst\" rel=\"nofollow\">THIS TUTORIAL</a>.</p>\n</div>\n<p>Usage:</p>\n<pre>&gt;&gt;&gt; from compress import Compressor\n&gt;&gt;&gt; c = Compressor()\n&gt;&gt;&gt; c.use_zlib() # or use_bz2, use_lzma, use_lz4, use_snappy\n&gt;&gt;&gt; c.compress(binary_data, zlib_level=9)\n&gt;&gt;&gt; c.decompress(binary_data)\n</pre>\n<p><a href=\"https://quixdb.github.io/squash-benchmark/\" rel=\"nofollow\">This website</a> provides comprehensive comparison and visualization. But how do you know <strong>how it works on your own production environment?</strong>.</p>\n<p><tt>compress</tt> comes with a tool to run benchmark test for <strong>All test case, All algorithm, All parameters</strong>, and you will get informative stats about ratio, compress/decompress speed in <tt>.tab</tt> and <tt>ascii table</tt> format. Then You are able to visualize it in the way you preferred.</p>\n<p>To run benchmark test, just:</p>\n<pre>make up\nmake benchmark\n</pre>\n<p>If you use <strong>Windows</strong> (doesn\u2019t have <tt>make</tt> command), this is the <a href=\"https://pygitrepo.readthedocs.io/index.html#software-environment-you-should-have\" rel=\"nofollow\">SOLUTION</a></p>\n<p>Of course, you can <strong>extend with your own test case</strong> (<a href=\"https://github.com/MacHu-GWU/compress-project/blob/master/benchmark/README.rst\" rel=\"nofollow\">How to extend test case</a>).</p>\n<div id=\"quick-links\">\n<h3>Quick Links</h3>\n<ul>\n<li><a href=\"https://compress.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Document-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07d5df5ebfde6f244cdf6ce8228662d5f7a45385/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f63756d656e742d7265642e737667\"></a>\n</li>\n<li><a href=\"https://compress.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-API_Reference_and_Source_Code-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/979006b753c870a8b60e999550b5b32f0d8b168f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4150495f5265666572656e63655f616e645f536f757263655f436f64652d7265642e737667\"></a>\n</li>\n<li><a href=\"#install\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Install-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/144498b36867a7d312ce8b3502b4135af59d2fd0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d496e7374616c6c2d7265642e737667\"></a>\n</li>\n<li><a href=\"https://github.com/MacHu-GWU/compress-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-GitHub-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40760fc6f9c2f034b2f44fb3441622fd43d33f71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4769744875622d626c75652e737667\"></a>\n</li>\n<li><a href=\"https://github.com/MacHu-GWU/compress-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Submit_Issue_and_Feature_Request-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bfac7eda79e735dae17782a18d23c84a7fce77/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d5375626d69745f49737375655f616e645f466561747572655f526571756573742d626c75652e737667\"></a>\n</li>\n<li><a href=\"https://pypi.python.org/pypi/compress#downloads\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Download-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01616d53c2f6efee987f922046ed988550b12ff9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f776e6c6f61642d626c75652e737667\"></a>\n</li>\n</ul>\n</div>\n<div id=\"id1\">\n<span id=\"install\"></span><h3>Install</h3>\n<p><tt>compress</tt> is released on PyPI, so all you need is:</p>\n<pre><span class=\"gp\">$</span> pip install compress\n</pre>\n<p>To upgrade to latest version:</p>\n<pre><span class=\"gp\">$</span> pip install --upgrade compress\n</pre>\n<div>\n<p>Note</p>\n<p>to install lzma, snappy, lz4 for python, it may requires gcc comiler. If you are using Windows,</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3334504, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5e6629e7275f2d3af3edcea425481655", "sha256": "029ca725807104c842d146259863838ab37850b43b74202ff26cc7334014d705"}, "downloads": -1, "filename": "compress-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5e6629e7275f2d3af3edcea425481655", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4054, "upload_time": "2017-11-12T00:35:08", "upload_time_iso_8601": "2017-11-12T00:35:08.691764Z", "url": "https://files.pythonhosted.org/packages/36/f2/ebb84b6c9a4aeeaf8d52dda0347bc960169a6b829003022c0e0af534cf2f/compress-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab19171cf29316b563683050a165e89", "sha256": "204e929d69bae10bd106ffaa595091da32c1a552d2e4da7b55b9df183b2f91f4"}, "downloads": -1, "filename": "compress-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0ab19171cf29316b563683050a165e89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4935, "upload_time": "2017-11-12T00:35:09", "upload_time_iso_8601": "2017-11-12T00:35:09.719349Z", "url": "https://files.pythonhosted.org/packages/c3/89/ee2b7cd546585cd7b5de3c4955a8568a9433caa0d3d3cb04f0c12e3bc613/compress-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e9479d93278501afedae04cd5721e2b8", "sha256": "04bbfa76cc1f0e33ae5de76145a2933208e95cb7d5ccd2e60287afd169030943"}, "downloads": -1, "filename": "compress-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "e9479d93278501afedae04cd5721e2b8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 46649, "upload_time": "2017-11-15T09:20:41", "upload_time_iso_8601": "2017-11-15T09:20:41.145277Z", "url": "https://files.pythonhosted.org/packages/b1/de/6b765ea415f156828e4033ee76c0825d9f14f5b07ad59567602f6750c504/compress-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be08655e97645aa663bd345d237f6598", "sha256": "95d68985b8c0e3e0bb794f60e7b6be5af048355aba0eaea4b613f651d4d4ed40"}, "downloads": -1, "filename": "compress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "be08655e97645aa663bd345d237f6598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25322, "upload_time": "2017-11-15T09:20:42", "upload_time_iso_8601": "2017-11-15T09:20:42.498923Z", "url": "https://files.pythonhosted.org/packages/c4/63/74d1ab91e52f34c31c142cb0098d34107671434d2453af83ad0940d2466d/compress-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9479d93278501afedae04cd5721e2b8", "sha256": "04bbfa76cc1f0e33ae5de76145a2933208e95cb7d5ccd2e60287afd169030943"}, "downloads": -1, "filename": "compress-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "e9479d93278501afedae04cd5721e2b8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 46649, "upload_time": "2017-11-15T09:20:41", "upload_time_iso_8601": "2017-11-15T09:20:41.145277Z", "url": "https://files.pythonhosted.org/packages/b1/de/6b765ea415f156828e4033ee76c0825d9f14f5b07ad59567602f6750c504/compress-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be08655e97645aa663bd345d237f6598", "sha256": "95d68985b8c0e3e0bb794f60e7b6be5af048355aba0eaea4b613f651d4d4ed40"}, "downloads": -1, "filename": "compress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "be08655e97645aa663bd345d237f6598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25322, "upload_time": "2017-11-15T09:20:42", "upload_time_iso_8601": "2017-11-15T09:20:42.498923Z", "url": "https://files.pythonhosted.org/packages/c4/63/74d1ab91e52f34c31c142cb0098d34107671434d2453af83ad0940d2466d/compress-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:10 2020"}