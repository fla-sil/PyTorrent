{"info": {"author": "Noufal Ibrahim", "author_email": "noufal@nibrahim.net.in", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "===============\npytest_bugzilla\n===============\n\npy.test plugin to integrate it with bugzilla so that it's possible to\nannotate tests with the identifier of the bug they're testing.\n\nIf the bug has been closed but the test still fails, a warning is\ngenerated and if the bug is still open, the test is flagged as\nanalysed (instead of Failed)\n\nUsage\n-----\n\nAfter installation (e.g. via ``pip install pytest-bugzilla``) you can\njust invoke ``py.test``with the ``--bugzilla`` flag.\n\nUse ``py.test --help`` for additional options.\n\nAnnotating tests\n----------------\n\nTo mark a test as being for a specific issue (say issue no. 12345),\nPut \"#12345\" somewhere in the test functions docstring e.g.::\n  \n  def test_something():\n    \"This test is for bug #12345\"\n    do_test()\n\nBugzilla credentials\n--------------------\n\nYou have to change the bugzilla server URL/username/password using\ncommand line options. You can edit the plugin file to change the\ndefaults so that they work without having to pass these options\nexplicitly.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/nibrahim/pytest_bugzilla", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "pytest-bugzilla", "package_url": "https://pypi.org/project/pytest-bugzilla/", "platform": "linux,osx,win32", "project_url": "https://pypi.org/project/pytest-bugzilla/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/nibrahim/pytest_bugzilla"}, "release_url": "https://pypi.org/project/pytest-bugzilla/0.2/", "requires_dist": null, "requires_python": null, "summary": "py.test bugzilla integration plugin", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>py.test plugin to integrate it with bugzilla so that it\u2019s possible to\nannotate tests with the identifier of the bug they\u2019re testing.</p>\n<p>If the bug has been closed but the test still fails, a warning is\ngenerated and if the bug is still open, the test is flagged as\nanalysed (instead of Failed)</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After installation (e.g. via <tt>pip install <span class=\"pre\">pytest-bugzilla</span></tt>) you can\njust invoke <tt><span class=\"pre\">py.test``with</span> the <span class=\"pre\">``--bugzilla</span></tt> flag.</p>\n<p>Use <tt>py.test <span class=\"pre\">--help</span></tt> for additional options.</p>\n</div>\n<div id=\"annotating-tests\">\n<h2>Annotating tests</h2>\n<p>To mark a test as being for a specific issue (say issue no. 12345),\nPut \u201c#12345\u201d somewhere in the test functions docstring e.g.:</p>\n<pre>def test_something():\n  \"This test is for bug #12345\"\n  do_test()\n</pre>\n</div>\n<div id=\"bugzilla-credentials\">\n<h2>Bugzilla credentials</h2>\n<p>You have to change the bugzilla server URL/username/password using\ncommand line options. You can edit the plugin file to change the\ndefaults so that they work without having to pass these options\nexplicitly.</p>\n</div>\n\n          </div>"}, "last_serial": 797813, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "90a69ec74ad15aa5a3725b0961bf396b", "sha256": "27e79a57bbf908d87655052c793a6d28cb92072fece73fcf90e7842eb5cb033d"}, "downloads": -1, "filename": "pytest-bugzilla-0.1.tar.gz", "has_sig": false, "md5_digest": "90a69ec74ad15aa5a3725b0961bf396b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3384, "upload_time": "2010-05-05T21:07:55", "upload_time_iso_8601": "2010-05-05T21:07:55.442399Z", "url": "https://files.pythonhosted.org/packages/1e/f6/834e8cf04dc5c496ab25d220971c36bad8ed8190e074675b3308b220e52c/pytest-bugzilla-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "cbbd00d4a7d9154854019a11c8f8f82c", "sha256": "36a52b4e231ad3481b6c92a9d0e0db05842cdcedff61dc15e822c5611802d62d"}, "downloads": -1, "filename": "pytest-bugzilla-0.2.tar.gz", "has_sig": false, "md5_digest": "cbbd00d4a7d9154854019a11c8f8f82c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3463, "upload_time": "2010-05-05T21:47:23", "upload_time_iso_8601": "2010-05-05T21:47:23.141004Z", "url": "https://files.pythonhosted.org/packages/e9/72/8679de835d8b725b10081ba48f3803705617de04da68e4c2dbe7835d005b/pytest-bugzilla-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbbd00d4a7d9154854019a11c8f8f82c", "sha256": "36a52b4e231ad3481b6c92a9d0e0db05842cdcedff61dc15e822c5611802d62d"}, "downloads": -1, "filename": "pytest-bugzilla-0.2.tar.gz", "has_sig": false, "md5_digest": "cbbd00d4a7d9154854019a11c8f8f82c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3463, "upload_time": "2010-05-05T21:47:23", "upload_time_iso_8601": "2010-05-05T21:47:23.141004Z", "url": "https://files.pythonhosted.org/packages/e9/72/8679de835d8b725b10081ba48f3803705617de04da68e4c2dbe7835d005b/pytest-bugzilla-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:22 2020"}