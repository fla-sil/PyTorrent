{"info": {"author": "Luca Foppiano", "author_email": "FOPPIANO.Luca@nims.go.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6"], "description": "Python client for Grobid Quantities\n===================================\n\n.. image:: http://img.shields.io/:license-apache-blue.svg\n   :target: http://www.apache.org/licenses/LICENSE-2.0.html\n\n.. image:: https://travis-ci.org/hirmeos/entity-fishing-client-python.svg?branch=master\n   :target: https://travis-ci.org/hirmeos/entity-fishing-client-python\n\n\nPython client to query the `Grobid Quantities service API`_\nFor more information about Grobid Quantities, please check the `Grobid Quantities Documentation`_.\n\n.. _Grobid Quantities service API: http://github.com/kermitt2/grobid-quantities\n.. _Grobid Quantities Documentation: http://nerd.readthedocs.io\n\n\nInstallation\n------------\n\nThe client can be installed using `pip`:\n\n   pip install grobid-quantities-python\n\nUsage\n-----\n\nProcess Text / PDF\n##################\n\n.. code-block:: python\n\n    from grobid_quantities.quantities import QuantitiesClient\n    client = QuantitiesClient(apiBase=server_url)\n\n\nTo process raw text:\n\n.. code-block:: python\n\n    client.process_text(\n        \"I lost two minutes\"\n    )\n\nTo process PDF\n\n.. code-block:: python\n\n    client.process_pdf(pdfFile)\n\n\nTo parse the measurements\n\n.. code-block:: python\n\n    client.parse_measures(\"from\": \"10\", \"to\": \"20\", \"unit\": \"km\")\n\n\n\nThe response is a tuple where the first element is the status code and and the second element the response body as a dictionary.\nHere an example: \n\n.. code-block:: python\n\n    (\n        200,\n        {\n          \"runtime\": 123,\n          \"measurements\": [\n            {\n              \"type\": \"value\",\n              \"quantity\": {\n                \"type\": \"time\",\n                \"rawValue\": \"two\",\n                \"rawUnit\": {\n                  \"name\": \"minutes\",\n                  \"type\": \"time\",\n                  \"system\": \"non SI\",\n                  \"offsetStart\": 11,\n                  \"offsetEnd\": 18\n                },\n                \"parsedValue\": {\n                  \"numeric\": 2,\n                  \"structure\": {\n                    \"type\": \"ALPHABETIC\",\n                    \"formatted\": \"two\"\n                  },\n                  \"parsed\": \"two\"\n                },\n                \"normalizedQuantity\": 120,\n                \"normalizedUnit\": {\n                  \"name\": \"s\",\n                  \"type\": \"time\",\n                  \"system\": \"SI base\"\n                },\n                \"offsetStart\": 7,\n                \"offsetEnd\": 11\n              }\n            }\n          ]\n        }\n   )\n\nBatch processing\n######################\nThe batch processing is implemented in the class ``QuantitiesBatch``.\nThe class can be instantiated by defining the entity-fishing url in the constructor, else the default one is used.\n\nTo run the processing, the method `process` requires the `input` directory, a callback and the number of threads/processes.\nThere is an already ready implementation in `script/batchSample.py`.\n\nTo run it:\n - under this work branch, prepare two folders: `input` which containing the input PDF files to be processed and `output` which collecting the processing result\n - we recommend to create a new virtualenv, activate it and install all the requirements needed in this virtual environment using `$ pip install -r /path/of/grobid-quantities-python-client/source/requirements.txt`\n - (temporarly, until this branch is not merged) install entity-fishing **multithread branch** in edit mode (`pip install -e /path/of/client-python/source`)\n - run it with `python runFile.py input output 5`", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lfoppiano/grobid-quantitites-python-client", "keywords": "measurements,text mining,tdm,grobid", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "grobid-quantities-client", "package_url": "https://pypi.org/project/grobid-quantities-client/", "platform": "", "project_url": "https://pypi.org/project/grobid-quantities-client/", "project_urls": {"Homepage": "https://github.com/lfoppiano/grobid-quantitites-python-client"}, "release_url": "https://pypi.org/project/grobid-quantities-client/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A minimal client for grobid-quantities service.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"nofollow\"><img alt=\"http://img.shields.io/:license-apache-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/724f2d37f253c99e15c1b837c77def8e40d50f68/687474703a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d6170616368652d626c75652e737667\"></a>\n<a href=\"https://travis-ci.org/hirmeos/entity-fishing-client-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/hirmeos/entity-fishing-client-python.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9acfab9f147a578b4804dc9261a47d704d0f38b6/68747470733a2f2f7472617669732d63692e6f72672f6869726d656f732f656e746974792d66697368696e672d636c69656e742d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<p>Python client to query the <a href=\"http://github.com/kermitt2/grobid-quantities\" rel=\"nofollow\">Grobid Quantities service API</a>\nFor more information about Grobid Quantities, please check the <a href=\"http://nerd.readthedocs.io\" rel=\"nofollow\">Grobid Quantities Documentation</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The client can be installed using <cite>pip</cite>:</p>\n<blockquote>\npip install grobid-quantities-python</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"process-text-pdf\">\n<h3>Process Text / PDF</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">grobid_quantities.quantities</span> <span class=\"kn\">import</span> <span class=\"n\">QuantitiesClient</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">QuantitiesClient</span><span class=\"p\">(</span><span class=\"n\">apiBase</span><span class=\"o\">=</span><span class=\"n\">server_url</span><span class=\"p\">)</span>\n</pre>\n<p>To process raw text:</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">process_text</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"I lost two minutes\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To process PDF</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">process_pdf</span><span class=\"p\">(</span><span class=\"n\">pdfFile</span><span class=\"p\">)</span>\n</pre>\n<p>To parse the measurements</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">parse_measures</span><span class=\"p\">(</span><span class=\"s2\">\"from\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10\"</span><span class=\"p\">,</span> <span class=\"s2\">\"to\"</span><span class=\"p\">:</span> <span class=\"s2\">\"20\"</span><span class=\"p\">,</span> <span class=\"s2\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"km\"</span><span class=\"p\">)</span>\n</pre>\n<p>The response is a tuple where the first element is the status code and and the second element the response body as a dictionary.\nHere an example:</p>\n<pre> <span class=\"p\">(</span>\n     <span class=\"mi\">200</span><span class=\"p\">,</span>\n     <span class=\"p\">{</span>\n       <span class=\"s2\">\"runtime\"</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"measurements\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"p\">{</span>\n           <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"quantity\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n             <span class=\"s2\">\"rawValue\"</span><span class=\"p\">:</span> <span class=\"s2\">\"two\"</span><span class=\"p\">,</span>\n             <span class=\"s2\">\"rawUnit\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n               <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"minutes\"</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"non SI\"</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"offsetStart\"</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"offsetEnd\"</span><span class=\"p\">:</span> <span class=\"mi\">18</span>\n             <span class=\"p\">},</span>\n             <span class=\"s2\">\"parsedValue\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n               <span class=\"s2\">\"numeric\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"structure\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                 <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ALPHABETIC\"</span><span class=\"p\">,</span>\n                 <span class=\"s2\">\"formatted\"</span><span class=\"p\">:</span> <span class=\"s2\">\"two\"</span>\n               <span class=\"p\">},</span>\n               <span class=\"s2\">\"parsed\"</span><span class=\"p\">:</span> <span class=\"s2\">\"two\"</span>\n             <span class=\"p\">},</span>\n             <span class=\"s2\">\"normalizedQuantity\"</span><span class=\"p\">:</span> <span class=\"mi\">120</span><span class=\"p\">,</span>\n             <span class=\"s2\">\"normalizedUnit\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n               <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"s\"</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n               <span class=\"s2\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SI base\"</span>\n             <span class=\"p\">},</span>\n             <span class=\"s2\">\"offsetStart\"</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span>\n             <span class=\"s2\">\"offsetEnd\"</span><span class=\"p\">:</span> <span class=\"mi\">11</span>\n           <span class=\"p\">}</span>\n         <span class=\"p\">}</span>\n       <span class=\"p\">]</span>\n     <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"batch-processing\">\n<h3>Batch processing</h3>\n<p>The batch processing is implemented in the class <tt>QuantitiesBatch</tt>.\nThe class can be instantiated by defining the entity-fishing url in the constructor, else the default one is used.</p>\n<p>To run the processing, the method <cite>process</cite> requires the <cite>input</cite> directory, a callback and the number of threads/processes.\nThere is an already ready implementation in <cite>script/batchSample.py</cite>.</p>\n<dl>\n<dt>To run it:</dt>\n<dd><ul>\n<li>under this work branch, prepare two folders: <cite>input</cite> which containing the input PDF files to be processed and <cite>output</cite> which collecting the processing result</li>\n<li>we recommend to create a new virtualenv, activate it and install all the requirements needed in this virtual environment using <cite>$ pip install -r /path/of/grobid-quantities-python-client/source/requirements.txt</cite></li>\n<li>(temporarly, until this branch is not merged) install entity-fishing <strong>multithread branch</strong> in edit mode (<cite>pip install -e /path/of/client-python/source</cite>)</li>\n<li>run it with <cite>python runFile.py input output 5</cite></li>\n</ul>\n</dd>\n</dl>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5236498, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "63658336ee70be9c669b0eac2111c541", "sha256": "4ab7b85f8da648b13191d401c916d9b7866d57138b7407394e9c269e50a44db8"}, "downloads": -1, "filename": "grobid-quantities-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "63658336ee70be9c669b0eac2111c541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5972, "upload_time": "2019-04-10T07:16:37", "upload_time_iso_8601": "2019-04-10T07:16:37.140905Z", "url": "https://files.pythonhosted.org/packages/fe/2f/35d0e5ba545c5c68e2d6013f4f65cd0b583b9201262dc6e7a94572172452/grobid-quantities-client-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e34668d56b43bcccb8ba722ba709d77a", "sha256": "6409cd9f4806d53ab6219c1d0504b80e907ac268e7906e6bfd71537375c9b280"}, "downloads": -1, "filename": "grobid-quantities-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e34668d56b43bcccb8ba722ba709d77a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6028, "upload_time": "2019-04-10T07:16:39", "upload_time_iso_8601": "2019-04-10T07:16:39.546921Z", "url": "https://files.pythonhosted.org/packages/6a/ea/c364d5fe9c239f35dd37278f43ed829feaf955b9cac9cc0f30e8b63145be/grobid-quantities-client-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f9f0404573a4bab06033209c20e17658", "sha256": "30839d22ee87c19c6c0f7d223a1b7622e3160f6d5ddd6486a629473b0a80e632"}, "downloads": -1, "filename": "grobid-quantities-client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f9f0404573a4bab06033209c20e17658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6023, "upload_time": "2019-05-07T07:33:00", "upload_time_iso_8601": "2019-05-07T07:33:00.758569Z", "url": "https://files.pythonhosted.org/packages/48/f4/a5a5c272f120dff40b52242fb30473cd1fe5d0f7243696586e6a224d7545/grobid-quantities-client-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9f0404573a4bab06033209c20e17658", "sha256": "30839d22ee87c19c6c0f7d223a1b7622e3160f6d5ddd6486a629473b0a80e632"}, "downloads": -1, "filename": "grobid-quantities-client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f9f0404573a4bab06033209c20e17658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6023, "upload_time": "2019-05-07T07:33:00", "upload_time_iso_8601": "2019-05-07T07:33:00.758569Z", "url": "https://files.pythonhosted.org/packages/48/f4/a5a5c272f120dff40b52242fb30473cd1fe5d0f7243696586e6a224d7545/grobid-quantities-client-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:09 2020"}