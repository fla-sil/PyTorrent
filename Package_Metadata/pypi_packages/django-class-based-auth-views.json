{"info": {"author": "Stefan Foulis", "author_email": "stefan@foulis.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "=============================\ndjango-class-based-auth-views\n=============================\n\nrelated packages\n================\n\n* `django-password-reset <https://github.com/brutasse/django-password-reset>`_ has class based views to reset\n  forgotten passwords by email confirmation.\n\n\nA reimplementation of ``django.contrib.auth.views`` as class based views. Hopefully at some point this project or\nsomething similar will make it into django proper.\n\nCurrently ``LoginView`` and ``LogoutView`` are implemented.\n\n\nInstallation\n============\n\n::\n\n    pip install django-class-based-auth-views\n\n\nBasic usage\n===========\n\nInstead of including ``django.contrib.auth.login`` into your ``urls.py``, just use the one provided by this project.\n``urls.py``::\n\n    from class_based_auth_views.views import LoginView, LogoutView\n    urlpatterns = patterns('',\n        url(r'^login/$', LoginView.as_view(form_class=EmailAsUsernameAuthenticationForm), name=\"login\"),\n        url(r'^logout/$', LogoutView.as_view(), name=\"logout\"),\n    )\n\n\nBe aware that the logout view requires a ``POST`` to actually logout. So the ``registration/logout.html`` template\nshould contain a form with a submit button.\n\n\nExtending LoginView Example\n===========================\n\nNow that LoginView is based on generic class based views it is much easier to extend. Say you need to implement a\n2 step login procedure with a one time password::\n\n\n    from django.contrib.auth import login\n\n    class PhaseOneLoginView(LoginView):\n        def form_valid(self, form):\n            \"\"\"\n            Forces superusers to login in a 2 step process (One Time Password). Other users are logged in normally\n            \"\"\"\n            user = form.get_user()\n            if user.is_superuser:\n                self.save_user(user)\n                return HttpResponseRedirect(self.get_phase_two_url())\n            else:\n                login(self.request, user)\n                return HttpResponseRedirect(self.get_success_url())\n\n        def get_phase_two_url(self):\n            return reverse('phase_two_login')\n\n        def save_user(self, user):\n            self.request.session['otp_user'] = user\n\n\n    class PhaseTwoLoginView(FormView):\n        form_class = OTPTokenForm\n\n        def get_user(self):\n            return self.request.session.get('otp_user', None)\n\n        def clean_user(self):\n            if 'otp_user' in self.request.session:\n                del self.request.session['otp_user']\n\n        def form_valid(self, form):\n            code = form.cleaned_data.get('code')\n            user = self.get_user()\n            login(request, user)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/stefanfoulis/django-class-based-auth-views", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-class-based-auth-views", "package_url": "https://pypi.org/project/django-class-based-auth-views/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-class-based-auth-views/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/stefanfoulis/django-class-based-auth-views"}, "release_url": "https://pypi.org/project/django-class-based-auth-views/0.4/", "requires_dist": null, "requires_python": null, "summary": "A reimplementation of django.contrib.auth.views as class based views.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"related-packages\">\n<h2>related packages</h2>\n<ul>\n<li><a href=\"https://github.com/brutasse/django-password-reset\" rel=\"nofollow\">django-password-reset</a> has class based views to reset\nforgotten passwords by email confirmation.</li>\n</ul>\n<p>A reimplementation of <tt>django.contrib.auth.views</tt> as class based views. Hopefully at some point this project or\nsomething similar will make it into django proper.</p>\n<p>Currently <tt>LoginView</tt> and <tt>LogoutView</tt> are implemented.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-class-based-auth-views\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>Instead of including <tt>django.contrib.auth.login</tt> into your <tt>urls.py</tt>, just use the one provided by this project.\n<tt>urls.py</tt>:</p>\n<pre>from class_based_auth_views.views import LoginView, LogoutView\nurlpatterns = patterns('',\n    url(r'^login/$', LoginView.as_view(form_class=EmailAsUsernameAuthenticationForm), name=\"login\"),\n    url(r'^logout/$', LogoutView.as_view(), name=\"logout\"),\n)\n</pre>\n<p>Be aware that the logout view requires a <tt>POST</tt> to actually logout. So the <tt>registration/logout.html</tt> template\nshould contain a form with a submit button.</p>\n</div>\n<div id=\"extending-loginview-example\">\n<h2>Extending LoginView Example</h2>\n<p>Now that LoginView is based on generic class based views it is much easier to extend. Say you need to implement a\n2 step login procedure with a one time password:</p>\n<pre>from django.contrib.auth import login\n\nclass PhaseOneLoginView(LoginView):\n    def form_valid(self, form):\n        \"\"\"\n        Forces superusers to login in a 2 step process (One Time Password). Other users are logged in normally\n        \"\"\"\n        user = form.get_user()\n        if user.is_superuser:\n            self.save_user(user)\n            return HttpResponseRedirect(self.get_phase_two_url())\n        else:\n            login(self.request, user)\n            return HttpResponseRedirect(self.get_success_url())\n\n    def get_phase_two_url(self):\n        return reverse('phase_two_login')\n\n    def save_user(self, user):\n        self.request.session['otp_user'] = user\n\n\nclass PhaseTwoLoginView(FormView):\n    form_class = OTPTokenForm\n\n    def get_user(self):\n        return self.request.session.get('otp_user', None)\n\n    def clean_user(self):\n        if 'otp_user' in self.request.session:\n            del self.request.session['otp_user']\n\n    def form_valid(self, form):\n        code = form.cleaned_data.get('code')\n        user = self.get_user()\n        login(request, user)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3552956, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "9f009d5ffcd8450904c9a52fef6fbce2", "sha256": "58bca16129bf81131a7234c3cce3e106f22a5adf59a84709af3dbc147ecb3ded"}, "downloads": -1, "filename": "django-class-based-auth-views-0.1a1.tar.gz", "has_sig": false, "md5_digest": "9f009d5ffcd8450904c9a52fef6fbce2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3992, "upload_time": "2011-08-17T07:24:49", "upload_time_iso_8601": "2011-08-17T07:24:49.509837Z", "url": "https://files.pythonhosted.org/packages/57/8e/b5880a45de3eecf241c60dcdeb22b976fda2cb03e78fb1bb76f6999882d5/django-class-based-auth-views-0.1a1.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "73c6f9305ffe42f3293ed3cdd13407a0", "sha256": "f687c041366ddcf75ee6167ab14f92ddc749ac131a3f5d6b66a7203022ce55d4"}, "downloads": -1, "filename": "django-class-based-auth-views-0.1a2.tar.gz", "has_sig": false, "md5_digest": "73c6f9305ffe42f3293ed3cdd13407a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5107, "upload_time": "2013-01-13T17:58:48", "upload_time_iso_8601": "2013-01-13T17:58:48.240303Z", "url": "https://files.pythonhosted.org/packages/f0/54/45b601ed90e587041547731b0a530004273970d3cdeaffaaf3ef4841c1d6/django-class-based-auth-views-0.1a2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "270daa767b1ea409e4f598265da23235", "sha256": "eb10895ce63c170eec7a34e5e169894d02b0f62cfc7b9c0bd4d1547c4a872950"}, "downloads": -1, "filename": "django-class-based-auth-views-0.2.tar.gz", "has_sig": false, "md5_digest": "270daa767b1ea409e4f598265da23235", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094, "upload_time": "2013-08-08T07:54:31", "upload_time_iso_8601": "2013-08-08T07:54:31.906959Z", "url": "https://files.pythonhosted.org/packages/37/18/27585dd2bc4ac911e1d5b13321c1f8c0a326b5063e83072c88a712363862/django-class-based-auth-views-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c7692ca6800508175927307b6755719e", "sha256": "ba6f71cc9f976107a7ebef3bd8d7b25fb3b4ace9e67a928d3d319f1c9cdc6c49"}, "downloads": -1, "filename": "django-class-based-auth-views-0.3.tar.gz", "has_sig": false, "md5_digest": "c7692ca6800508175927307b6755719e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4957, "upload_time": "2015-02-12T10:02:26", "upload_time_iso_8601": "2015-02-12T10:02:26.828066Z", "url": "https://files.pythonhosted.org/packages/b7/9a/25f227fd6ff08969cfbd646bccfd412cb6ab3dec046851701ac31098e379/django-class-based-auth-views-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1a9fcb50937fd92d16fe4803ecfd5c14", "sha256": "466b68f5ff345b88b75db1959de3032cfa7f0fab0d5aa0765373f825f692e8f0"}, "downloads": -1, "filename": "django_class_based_auth_views-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "1a9fcb50937fd92d16fe4803ecfd5c14", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7042, "upload_time": "2016-04-15T10:48:36", "upload_time_iso_8601": "2016-04-15T10:48:36.033607Z", "url": "https://files.pythonhosted.org/packages/43/3c/f984270c2193161451fbe36b171537f5f3f1fe2e2cef34ffc1c142e9c3ae/django_class_based_auth_views-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fefe3d4ca54357ef36e02b606cd657b8", "sha256": "52f9fe1576fbb5fff20c26a5f8db8280342e6925644af73fdd0cf37848745269"}, "downloads": -1, "filename": "django-class-based-auth-views-0.4.tar.gz", "has_sig": false, "md5_digest": "fefe3d4ca54357ef36e02b606cd657b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5075, "upload_time": "2016-04-15T10:46:00", "upload_time_iso_8601": "2016-04-15T10:46:00.311503Z", "url": "https://files.pythonhosted.org/packages/ff/c0/08d972d24cbb67f4139deb2b5c2ef02dada60a71b4be477ef687f88c962d/django-class-based-auth-views-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a9fcb50937fd92d16fe4803ecfd5c14", "sha256": "466b68f5ff345b88b75db1959de3032cfa7f0fab0d5aa0765373f825f692e8f0"}, "downloads": -1, "filename": "django_class_based_auth_views-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "1a9fcb50937fd92d16fe4803ecfd5c14", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7042, "upload_time": "2016-04-15T10:48:36", "upload_time_iso_8601": "2016-04-15T10:48:36.033607Z", "url": "https://files.pythonhosted.org/packages/43/3c/f984270c2193161451fbe36b171537f5f3f1fe2e2cef34ffc1c142e9c3ae/django_class_based_auth_views-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fefe3d4ca54357ef36e02b606cd657b8", "sha256": "52f9fe1576fbb5fff20c26a5f8db8280342e6925644af73fdd0cf37848745269"}, "downloads": -1, "filename": "django-class-based-auth-views-0.4.tar.gz", "has_sig": false, "md5_digest": "fefe3d4ca54357ef36e02b606cd657b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5075, "upload_time": "2016-04-15T10:46:00", "upload_time_iso_8601": "2016-04-15T10:46:00.311503Z", "url": "https://files.pythonhosted.org/packages/ff/c0/08d972d24cbb67f4139deb2b5c2ef02dada60a71b4be477ef687f88c962d/django-class-based-auth-views-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:08 2020"}