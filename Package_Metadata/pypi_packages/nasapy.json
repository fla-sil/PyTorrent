{"info": {"author": "Aaron Schlegel", "author_email": "aaron@aaronschlegel.me", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# NasaPy\n\n[![Documentation Status](https://readthedocs.org/projects/nasapy/badge/?version=latest)](https://nasapy.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.org/aschleg/nasapy.svg?branch=master)](https://travis-ci.org/aschleg/nasapy)\n[![Build status](https://ci.appveyor.com/api/projects/status/h36pef9i0o1rjosy?svg=true)](https://ci.appveyor.com/project/aschleg/nasapy)\n[![Coverage Status](https://coveralls.io/repos/github/aschleg/nasapy/badge.svg)](https://coveralls.io/github/aschleg/nasapy)\n[![codecov](https://codecov.io/gh/aschleg/nasapy/branch/master/graph/badge.svg)](https://codecov.io/gh/aschleg/nasapy)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/ff660e1ce59a432493b19bd6f4751347)](https://www.codacy.com/manual/aschleg/nasapy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=aschleg/nasapy&amp;utm_campaign=Badge_Grade)\n[![Dependencies](https://img.shields.io/librariesio/github/aschleg/nasapy.svg?label=dependencies)](https://libraries.io/github/aschleg/nasapy)\n[![https://pypi.org/project/nasapy/](https://img.shields.io/badge/pypi%20version-0.1.0-blue.svg)](https://pypi.org/project/nasapy/)\n[![https://pypi.org/project/nasapy/](https://img.shields.io/badge/python-3.4%2C%203.5%2C%203.6%2C%203.7-blue.svg)](https://pypi.org/project/nasapy/)\n\nPython wrapper for the [nasa.gov API](https://api.nasa.gov/).\n\n## Installation\n\n`nasapy` is most easily installed using `pip`.\n\n```bash\npip install nasapy\n```\n\nThe library can also be cloned or downloaded into a location of your choosing and then installed using the `setup.py` \nfile per the following:\n\n~~~ bash\ngit clone git@github.com:aschleg/nasapy.git\ncd nasapy\npython setup.py install\n~~~\n\n## Documentation\n\n* [nasapy Documentation](https://nasapy.readthedocs.io/)\n* [Nasa's API documentation page](https://api.nasa.gov/)\n\n## Requirements\n\n* Python 3.4+\n* `requests>=2.18`\n* `pandas>=0.22.0`\n  - Although not strictly required to use `nasapy`, the [pandas](https://pandas.pydata.org/) library is needed \n    for returning results as a DataFrame.\n\n## Tutorials and In-Depth Examples\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/aschleg/nasapy/master?filepath=notebooks)\n\nThe following are Jupyter Notebooks that explore a facet of the `nasapy` library in more depth. The notebooks can \nalso be launched interactively with binder by clicking the \"launch binder\" badge above.\n\n* [Plot Earth Fireball Impacts with nasapy, pandas and folium](https://github.com/aschleg/nasapy/blob/master/notebooks/Plot%20Earth%20Fireball%20Impacts%20with%20nasapy%2C%20pandas%20and%20folium.ipynb)\n\n## Examples and Usage\n\nAlthough not strictly required to begin interacting with the NASA API, it is recommended to sign up \nto receive an [API access key](https://api.nasa.gov/) that has a significantly higher usage limit available compared \nto the demo key option. Many methods do not require an API key, but for those that do, it is typically a good option to \nuse a provided API key rather than the demo key. Using a received API key allows for 1,000 requests per hour, while the \ndemo key has 30 requests limit per hour and 50 requests per day.\n\n### Authentication\n\nAssuming an API key was received after signing up, authentication to the NASA API happens when initializing the `Nasa` \nclass.\n\n~~~ python\nnasa = Nasa(key=key)\n~~~  \n\nIf using a demo key, the initialization does not require any parameters to be passed.\n\n~~~ python\nnasa = Nasa()\n~~~\n\n### Remaining Requests Available\n\nThe `limit_remaining` attribute of the initialized `Nasa` class allows one to see the number of available requests \nremaining.\n\n~~~ python\nnasa.limit_remaining\n~~~\n\n### Examples\n\nThe following are some quick examples to get started.\n\n#### Astronomy Picture of the Day\n\n~~~ python\n# Return today's picture of the day\nnasa.picture_of_the_day()\n# Return a previous date's picture of the day with the high-definition URL included.\nnasa.picture_of_the_day('2019-01-01', hd=True)\n~~~\n\n#### Mars Weather\n\n~~~ python\n# Return the most recent data for the previous seven Sols (Martian Days)\nnasa.mars_weather()\n~~~\n\n#### Asteroid Feed\n\n~~~ python\n# Get asteroids approaching Earth at the beginning of 2019.\nnasa.asteroid_feed(start_date='2019-01-01')\n~~~\n\n#### Get Asteroid Data\n\n~~~ python\n# Get entire asteroid data set.\nnasa.get_asteroids()\n# Get asteroid with ID 3542519\nnasa.get_asteroids(asteroid_id=3542519)\n~~~\n\n#### DONKI (Space Weather Database of Notifications, Knowledge and Information)\n\n~~~ python\n# Coronal Mass Ejection Event Data\n\n# View data from coronal mass ejection events from the last thirty days\nnasa.coronal_mass_ejection()\n# View all CME events from the beginning of 2019.\nnasa.coronal_mass_ejection(start_date='2019-01-01', end_date=datetime.datetime.today())\n\n# Geomagnetic Storm Event Data\n\n# Get geomagnetic storm events from the last thirty days.\nnasa.geomagnetic_storm()\n\n# Solar Flare Event Data \n\n# Get solar flare events from May of 2019\nnasa.solar_flare(start_date='2019-05-01', end_date='2019-05-31')\n\n# Solar Energetic Particle Data\n\n# Get data from April 2017\nnasa.solar_energetic_particle(start_date='2017-04-01', end_date='2017-04-30')\n\n# Magnetopause Crossing Data\n\n# Get data on magnetopause crossing events from 2018 to the current date.\nnasa.magnetopause_crossing(start_date='2018-01-01')\n\n# Radiation Belt Enhancement Data\n\n# Get data on radiation belt enhancement events from the last 30 days.\nnasa.radiation_belt_enhancement()\n\n# Hight Speed Stream Data\n\n# Get data on hight speed stream events from the beginning of September 2019.\nnasa.hight_speed_stream()\n\n# WSA Enlil-Simulation Data\n\n# Get data from the first simulation performed in 2019.\nwsa = n.wsa_enlil_simulation(start_date='2019-01-01')\nwsa[0]\n~~~\n\n#### EPIC (DSCOVR's Earth Polychromatic Imaging Camera)\n\n~~~ python\n# Get EPIC data from the beginning of 2019.\ne = nasa.epic(date='2019-01-01')\n# Print the first result\ne[0]\n~~~\n\n#### Exoplanets\n\n~~~ python\n# Get all exoplanets data as a pandas DataFrame.\nexoplanets(return_df=True)\n# Get all confirmed planets in the Kepler field.\nexoplanets(where='pl_kepflag=1')\n# Stars known to host exoplanets as a pandas DataFrame.\nexoplanets(select='distinct pl_hostname', order='pl_hostname', return_df=True)\n~~~\n\n#### Landsat Images for a given Latitude-Longitude\n\n~~~ python\n# Get imagery at latitude 1.5, longitude 100.75 and include the computed cloud score calculation.\nnasa.earth_imagery(lon=100.75, lat=1.5, cloud_score=True)\n\n# Get assets available beginning from 2014-02-01 at lat-lon 100.75, 1.5\nnasa.earth_assets(lat=100.75, lon=1.5, begin_date='2014-02-01')\n~~~ \n\n#### Available Image data collected by the Mars rovers Curiosity, Discovery and Spirit.\n\n~~~ python\n# Return image data collected on Curiosity's 1000th sol.\nnasa.mars_rover(sol=1000)\n~~~\n\n#### Access GeneLab and Other Bioinformatics Databases\n\n~~~ python\n# Find Gene studies in the cgene database related to 'mouse liver'\nn.genelab_search(term='mouse liver')\n~~~ \n\nThe following functions do not require authentication with an API or demo key.\n\n#### CelesTrak Two-Line Element Set Records\n\n~~~ python\n# Retrieve available data for a specific satellite ID.\ntle(satellite_number=43553)\n~~~ \n\n#### Search for Available Imagery and Audio from the images.nasa.gov API\n\n~~~ python\n# Search for media related to 'apollo 11' with 'moon landing' in the description of the items.\nr = media_search(query='apollo 11', description='moon landing')\n# Print the first returned media item from the resulting collection.\nr['items'][0]\n~~~\n\n#### Asteroid and Comet Close Approaches to planets in the past and future\n\n~~~ python\n# Get all close-approach object data in the year 2019 with a maximum approach distance of 0.01AU.\nclose_approach(date_min='2019-01-01', date_max='2019-12-31', dist_max=0.01)\n# Get close-approach data for asteroid 433 Eros within 0.2AU from the years 1900 to 2100.\nclose_approach(des='433', date_min='1900-01-01', date_max='2100-01-01', dist_max=0.2)\n# Return close-approach data from the beginning of 2000 to the beginning of 2020 as a pandas DataFrame.\nclose_approach(date_min='2000-01-01', date_max='2020-01-01', return_df=True)\n~~~\n\n#### Fireball atmospheric impact data reported by US Government sensors\n\n~~~ python\n# Get all available data in reverse chronological order\nn = fireballs()\n# Return the earlieset record\nfireballs(limit=1)\n# Get data from the beginning of 2019\nfireballs(date_min='2019-01-01')\n# Return fireball data from the beginning of the millennium to the beginning of 2020 as a pandas DataFrame.\nfireballs(date_min='2000-01-01', date_max='2020-01-01', return_df=True)\n~~~\n\n#### Jet Propulsion Laboratory/Solar System Dynamics small body mission design suite API\n\n~~~ python\n# Search for mission design data for SPK-ID 2000433\nr = mission_design(spk=2000433)\n# Print the object data from the returned dictionary object.\nr['object']\n~~~\n\n#### Get Data on Near-Earth Object Human Space Flight Accessible Targets\n\n~~~ python\n# Get all available summary data for NHATS objects.\nn = nhats()\n# Get summary data as a pandas DataFrame\nn = nhats(return_df=True)\n# Get the results from a 'standard' search on the NHATS webpage.\nnhats(delta_v=6, duration=360, stay=8, magnitude=26, launch='2020-2045', orbit_condition_code=7)\n# Return data for a specific object by its designation\nnhats(des=99942)\n~~~\n\n#### Get Data from NASA's Center for Near-Earth Object Studies (CNEOS) Scout system\n\n~~~ python\n# Get all available summary data.\nscout()\n# Return all summary data as a pandas DataFrame.\nscout(return_df=True)\n# Return data and plot files for a specific object by its temporary designation. Note the object may no longer\n# exist in the current database\nscout(tdes='P20UvyK')\n# Get ephemeris data for a specific object at the current time with a Field of View diameter of 5 arc-minutes\n# with a limiting V-magnitude of 23.1.\nscout(tdes='P20UvyK', fov_diam=5, fov_vmag=23.1)\n~~~\n\n#### Get Data from the Center for Near Earth Object Studies (CNEOS) Sentry system\n\n~~~ python\n# Get summary data for available sentry objects.\nsentry()\n# Get summary data as a pandas DataFrame\nsentry(return_df=True)\n# Get data for a specific Sentry object by its designation.\nsentry(des=99942)\n# Get data for objects removed from the Sentry system.\nsentry(removed=1)\n~~~\n\nOther function examples\n\n#### Getting the Julian and Modified Julian Date\n\n~~~ python \n# Return the modified Julian Date for the current time.\njulian_date()\n# Return the non-modified Julian Date for the current time.\njulian_date(modified=False)\n# Get the modified Julian Date for 2019-01-01 at midnight.\njulian_date(year=2019)\n~~~\n\n## License\n\nMIT\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nasapy", "package_url": "https://pypi.org/project/nasapy/", "platform": "", "project_url": "https://pypi.org/project/nasapy/", "project_urls": null, "release_url": "https://pypi.org/project/nasapy/0.2.6/", "requires_dist": ["requests (>=2.18)"], "requires_python": "", "summary": "Python wrapper for the NASA API", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NasaPy</h1>\n<p><a href=\"https://nasapy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d45c1347c326e6ddf261fdd3de2127acd590ed33/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e61736170792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/aschleg/nasapy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f66964a777115b2bce0b6d8fba887cc6db159b20/68747470733a2f2f7472617669732d63692e6f72672f617363686c65672f6e61736170792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/aschleg/nasapy\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49a470ba0c6103774869f0d83cb2a32904996307/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6833367065663969306f31726a6f73793f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/github/aschleg/nasapy\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cd766dbdbb2d1f2d71dc16c96a7f3dc1d400e23/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f617363686c65672f6e61736170792f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/aschleg/nasapy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc043433b15bd712796153a21d5e5d7fd61f138a/68747470733a2f2f636f6465636f762e696f2f67682f617363686c65672f6e61736170792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codacy.com/manual/aschleg/nasapy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=aschleg/nasapy&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02a1321351b76db0a5af6bc46657e214d02356b4/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6666363630653163653539613433323439336231396264366634373531333437\"></a>\n<a href=\"https://libraries.io/github/aschleg/nasapy\" rel=\"nofollow\"><img alt=\"Dependencies\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8eaaaf2f68ab798375ea30d64f4dc76aab97c99/68747470733a2f2f696d672e736869656c64732e696f2f6c6962726172696573696f2f6769746875622f617363686c65672f6e61736170792e7376673f6c6162656c3d646570656e64656e63696573\"></a>\n<a href=\"https://pypi.org/project/nasapy/\" rel=\"nofollow\"><img alt=\"https://pypi.org/project/nasapy/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45a28a2aaa4c32dc33c78bf2737b36e2777a786e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7079706925323076657273696f6e2d302e312e302d626c75652e737667\"></a>\n<a href=\"https://pypi.org/project/nasapy/\" rel=\"nofollow\"><img alt=\"https://pypi.org/project/nasapy/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be316eac78093291a4747c3e9ff1e1871aee1950/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e34253243253230332e35253243253230332e36253243253230332e372d626c75652e737667\"></a></p>\n<p>Python wrapper for the <a href=\"https://api.nasa.gov/\" rel=\"nofollow\">nasa.gov API</a>.</p>\n<h2>Installation</h2>\n<p><code>nasapy</code> is most easily installed using <code>pip</code>.</p>\n<pre>pip install nasapy\n</pre>\n<p>The library can also be cloned or downloaded into a location of your choosing and then installed using the <code>setup.py</code>\nfile per the following:</p>\n<pre>git clone git@github.com:aschleg/nasapy.git\n<span class=\"nb\">cd</span> nasapy\npython setup.py install\n</pre>\n<h2>Documentation</h2>\n<ul>\n<li><a href=\"https://nasapy.readthedocs.io/\" rel=\"nofollow\">nasapy Documentation</a></li>\n<li><a href=\"https://api.nasa.gov/\" rel=\"nofollow\">Nasa's API documentation page</a></li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.4+</li>\n<li><code>requests&gt;=2.18</code></li>\n<li><code>pandas&gt;=0.22.0</code>\n<ul>\n<li>Although not strictly required to use <code>nasapy</code>, the <a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">pandas</a> library is needed\nfor returning results as a DataFrame.</li>\n</ul>\n</li>\n</ul>\n<h2>Tutorials and In-Depth Examples</h2>\n<p><a href=\"https://mybinder.org/v2/gh/aschleg/nasapy/master?filepath=notebooks\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></p>\n<p>The following are Jupyter Notebooks that explore a facet of the <code>nasapy</code> library in more depth. The notebooks can\nalso be launched interactively with binder by clicking the \"launch binder\" badge above.</p>\n<ul>\n<li><a href=\"https://github.com/aschleg/nasapy/blob/master/notebooks/Plot%20Earth%20Fireball%20Impacts%20with%20nasapy%2C%20pandas%20and%20folium.ipynb\" rel=\"nofollow\">Plot Earth Fireball Impacts with nasapy, pandas and folium</a></li>\n</ul>\n<h2>Examples and Usage</h2>\n<p>Although not strictly required to begin interacting with the NASA API, it is recommended to sign up\nto receive an <a href=\"https://api.nasa.gov/\" rel=\"nofollow\">API access key</a> that has a significantly higher usage limit available compared\nto the demo key option. Many methods do not require an API key, but for those that do, it is typically a good option to\nuse a provided API key rather than the demo key. Using a received API key allows for 1,000 requests per hour, while the\ndemo key has 30 requests limit per hour and 50 requests per day.</p>\n<h3>Authentication</h3>\n<p>Assuming an API key was received after signing up, authentication to the NASA API happens when initializing the <code>Nasa</code>\nclass.</p>\n<pre><span class=\"n\">nasa</span> <span class=\"o\">=</span> <span class=\"n\">Nasa</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</pre>\n<p>If using a demo key, the initialization does not require any parameters to be passed.</p>\n<pre><span class=\"n\">nasa</span> <span class=\"o\">=</span> <span class=\"n\">Nasa</span><span class=\"p\">()</span>\n</pre>\n<h3>Remaining Requests Available</h3>\n<p>The <code>limit_remaining</code> attribute of the initialized <code>Nasa</code> class allows one to see the number of available requests\nremaining.</p>\n<pre><span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">limit_remaining</span>\n</pre>\n<h3>Examples</h3>\n<p>The following are some quick examples to get started.</p>\n<h4>Astronomy Picture of the Day</h4>\n<pre><span class=\"c1\"># Return today's picture of the day</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">picture_of_the_day</span><span class=\"p\">()</span>\n<span class=\"c1\"># Return a previous date's picture of the day with the high-definition URL included.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">picture_of_the_day</span><span class=\"p\">(</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span> <span class=\"n\">hd</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4>Mars Weather</h4>\n<pre><span class=\"c1\"># Return the most recent data for the previous seven Sols (Martian Days)</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">mars_weather</span><span class=\"p\">()</span>\n</pre>\n<h4>Asteroid Feed</h4>\n<pre><span class=\"c1\"># Get asteroids approaching Earth at the beginning of 2019.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">asteroid_feed</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">)</span>\n</pre>\n<h4>Get Asteroid Data</h4>\n<pre><span class=\"c1\"># Get entire asteroid data set.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">get_asteroids</span><span class=\"p\">()</span>\n<span class=\"c1\"># Get asteroid with ID 3542519</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">get_asteroids</span><span class=\"p\">(</span><span class=\"n\">asteroid_id</span><span class=\"o\">=</span><span class=\"mi\">3542519</span><span class=\"p\">)</span>\n</pre>\n<h4>DONKI (Space Weather Database of Notifications, Knowledge and Information)</h4>\n<pre><span class=\"c1\"># Coronal Mass Ejection Event Data</span>\n\n<span class=\"c1\"># View data from coronal mass ejection events from the last thirty days</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">coronal_mass_ejection</span><span class=\"p\">()</span>\n<span class=\"c1\"># View all CME events from the beginning of 2019.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">coronal_mass_ejection</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Geomagnetic Storm Event Data</span>\n\n<span class=\"c1\"># Get geomagnetic storm events from the last thirty days.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">geomagnetic_storm</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Solar Flare Event Data </span>\n\n<span class=\"c1\"># Get solar flare events from May of 2019</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">solar_flare</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-05-01'</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-05-31'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Solar Energetic Particle Data</span>\n\n<span class=\"c1\"># Get data from April 2017</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">solar_energetic_particle</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2017-04-01'</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2017-04-30'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Magnetopause Crossing Data</span>\n\n<span class=\"c1\"># Get data on magnetopause crossing events from 2018 to the current date.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">magnetopause_crossing</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-01'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Radiation Belt Enhancement Data</span>\n\n<span class=\"c1\"># Get data on radiation belt enhancement events from the last 30 days.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">radiation_belt_enhancement</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Hight Speed Stream Data</span>\n\n<span class=\"c1\"># Get data on hight speed stream events from the beginning of September 2019.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">hight_speed_stream</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># WSA Enlil-Simulation Data</span>\n\n<span class=\"c1\"># Get data from the first simulation performed in 2019.</span>\n<span class=\"n\">wsa</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">wsa_enlil_simulation</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">)</span>\n<span class=\"n\">wsa</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h4>EPIC (DSCOVR's Earth Polychromatic Imaging Camera)</h4>\n<pre><span class=\"c1\"># Get EPIC data from the beginning of 2019.</span>\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">epic</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Print the first result</span>\n<span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h4>Exoplanets</h4>\n<pre><span class=\"c1\"># Get all exoplanets data as a pandas DataFrame.</span>\n<span class=\"n\">exoplanets</span><span class=\"p\">(</span><span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get all confirmed planets in the Kepler field.</span>\n<span class=\"n\">exoplanets</span><span class=\"p\">(</span><span class=\"n\">where</span><span class=\"o\">=</span><span class=\"s1\">'pl_kepflag=1'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Stars known to host exoplanets as a pandas DataFrame.</span>\n<span class=\"n\">exoplanets</span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"o\">=</span><span class=\"s1\">'distinct pl_hostname'</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">'pl_hostname'</span><span class=\"p\">,</span> <span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4>Landsat Images for a given Latitude-Longitude</h4>\n<pre><span class=\"c1\"># Get imagery at latitude 1.5, longitude 100.75 and include the computed cloud score calculation.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">earth_imagery</span><span class=\"p\">(</span><span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"mf\">100.75</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"n\">cloud_score</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get assets available beginning from 2014-02-01 at lat-lon 100.75, 1.5</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">earth_assets</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"mf\">100.75</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"n\">begin_date</span><span class=\"o\">=</span><span class=\"s1\">'2014-02-01'</span><span class=\"p\">)</span>\n</pre>\n<h4>Available Image data collected by the Mars rovers Curiosity, Discovery and Spirit.</h4>\n<pre><span class=\"c1\"># Return image data collected on Curiosity's 1000th sol.</span>\n<span class=\"n\">nasa</span><span class=\"o\">.</span><span class=\"n\">mars_rover</span><span class=\"p\">(</span><span class=\"n\">sol</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</pre>\n<h4>Access GeneLab and Other Bioinformatics Databases</h4>\n<pre><span class=\"c1\"># Find Gene studies in the cgene database related to 'mouse liver'</span>\n<span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">genelab_search</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">=</span><span class=\"s1\">'mouse liver'</span><span class=\"p\">)</span>\n</pre>\n<p>The following functions do not require authentication with an API or demo key.</p>\n<h4>CelesTrak Two-Line Element Set Records</h4>\n<pre><span class=\"c1\"># Retrieve available data for a specific satellite ID.</span>\n<span class=\"n\">tle</span><span class=\"p\">(</span><span class=\"n\">satellite_number</span><span class=\"o\">=</span><span class=\"mi\">43553</span><span class=\"p\">)</span>\n</pre>\n<h4>Search for Available Imagery and Audio from the images.nasa.gov API</h4>\n<pre><span class=\"c1\"># Search for media related to 'apollo 11' with 'moon landing' in the description of the items.</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">media_search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s1\">'apollo 11'</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'moon landing'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Print the first returned media item from the resulting collection.</span>\n<span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'items'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h4>Asteroid and Comet Close Approaches to planets in the past and future</h4>\n<pre><span class=\"c1\"># Get all close-approach object data in the year 2019 with a maximum approach distance of 0.01AU.</span>\n<span class=\"n\">close_approach</span><span class=\"p\">(</span><span class=\"n\">date_min</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span> <span class=\"n\">date_max</span><span class=\"o\">=</span><span class=\"s1\">'2019-12-31'</span><span class=\"p\">,</span> <span class=\"n\">dist_max</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get close-approach data for asteroid 433 Eros within 0.2AU from the years 1900 to 2100.</span>\n<span class=\"n\">close_approach</span><span class=\"p\">(</span><span class=\"n\">des</span><span class=\"o\">=</span><span class=\"s1\">'433'</span><span class=\"p\">,</span> <span class=\"n\">date_min</span><span class=\"o\">=</span><span class=\"s1\">'1900-01-01'</span><span class=\"p\">,</span> <span class=\"n\">date_max</span><span class=\"o\">=</span><span class=\"s1\">'2100-01-01'</span><span class=\"p\">,</span> <span class=\"n\">dist_max</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n<span class=\"c1\"># Return close-approach data from the beginning of 2000 to the beginning of 2020 as a pandas DataFrame.</span>\n<span class=\"n\">close_approach</span><span class=\"p\">(</span><span class=\"n\">date_min</span><span class=\"o\">=</span><span class=\"s1\">'2000-01-01'</span><span class=\"p\">,</span> <span class=\"n\">date_max</span><span class=\"o\">=</span><span class=\"s1\">'2020-01-01'</span><span class=\"p\">,</span> <span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4>Fireball atmospheric impact data reported by US Government sensors</h4>\n<pre><span class=\"c1\"># Get all available data in reverse chronological order</span>\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">fireballs</span><span class=\"p\">()</span>\n<span class=\"c1\"># Return the earlieset record</span>\n<span class=\"n\">fireballs</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get data from the beginning of 2019</span>\n<span class=\"n\">fireballs</span><span class=\"p\">(</span><span class=\"n\">date_min</span><span class=\"o\">=</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Return fireball data from the beginning of the millennium to the beginning of 2020 as a pandas DataFrame.</span>\n<span class=\"n\">fireballs</span><span class=\"p\">(</span><span class=\"n\">date_min</span><span class=\"o\">=</span><span class=\"s1\">'2000-01-01'</span><span class=\"p\">,</span> <span class=\"n\">date_max</span><span class=\"o\">=</span><span class=\"s1\">'2020-01-01'</span><span class=\"p\">,</span> <span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4>Jet Propulsion Laboratory/Solar System Dynamics small body mission design suite API</h4>\n<pre><span class=\"c1\"># Search for mission design data for SPK-ID 2000433</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">mission_design</span><span class=\"p\">(</span><span class=\"n\">spk</span><span class=\"o\">=</span><span class=\"mi\">2000433</span><span class=\"p\">)</span>\n<span class=\"c1\"># Print the object data from the returned dictionary object.</span>\n<span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'object'</span><span class=\"p\">]</span>\n</pre>\n<h4>Get Data on Near-Earth Object Human Space Flight Accessible Targets</h4>\n<pre><span class=\"c1\"># Get all available summary data for NHATS objects.</span>\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">nhats</span><span class=\"p\">()</span>\n<span class=\"c1\"># Get summary data as a pandas DataFrame</span>\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">nhats</span><span class=\"p\">(</span><span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the results from a 'standard' search on the NHATS webpage.</span>\n<span class=\"n\">nhats</span><span class=\"p\">(</span><span class=\"n\">delta_v</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">360</span><span class=\"p\">,</span> <span class=\"n\">stay</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">magnitude</span><span class=\"o\">=</span><span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"n\">launch</span><span class=\"o\">=</span><span class=\"s1\">'2020-2045'</span><span class=\"p\">,</span> <span class=\"n\">orbit_condition_code</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"c1\"># Return data for a specific object by its designation</span>\n<span class=\"n\">nhats</span><span class=\"p\">(</span><span class=\"n\">des</span><span class=\"o\">=</span><span class=\"mi\">99942</span><span class=\"p\">)</span>\n</pre>\n<h4>Get Data from NASA's Center for Near-Earth Object Studies (CNEOS) Scout system</h4>\n<pre><span class=\"c1\"># Get all available summary data.</span>\n<span class=\"n\">scout</span><span class=\"p\">()</span>\n<span class=\"c1\"># Return all summary data as a pandas DataFrame.</span>\n<span class=\"n\">scout</span><span class=\"p\">(</span><span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Return data and plot files for a specific object by its temporary designation. Note the object may no longer</span>\n<span class=\"c1\"># exist in the current database</span>\n<span class=\"n\">scout</span><span class=\"p\">(</span><span class=\"n\">tdes</span><span class=\"o\">=</span><span class=\"s1\">'P20UvyK'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get ephemeris data for a specific object at the current time with a Field of View diameter of 5 arc-minutes</span>\n<span class=\"c1\"># with a limiting V-magnitude of 23.1.</span>\n<span class=\"n\">scout</span><span class=\"p\">(</span><span class=\"n\">tdes</span><span class=\"o\">=</span><span class=\"s1\">'P20UvyK'</span><span class=\"p\">,</span> <span class=\"n\">fov_diam</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fov_vmag</span><span class=\"o\">=</span><span class=\"mf\">23.1</span><span class=\"p\">)</span>\n</pre>\n<h4>Get Data from the Center for Near Earth Object Studies (CNEOS) Sentry system</h4>\n<pre><span class=\"c1\"># Get summary data for available sentry objects.</span>\n<span class=\"n\">sentry</span><span class=\"p\">()</span>\n<span class=\"c1\"># Get summary data as a pandas DataFrame</span>\n<span class=\"n\">sentry</span><span class=\"p\">(</span><span class=\"n\">return_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get data for a specific Sentry object by its designation.</span>\n<span class=\"n\">sentry</span><span class=\"p\">(</span><span class=\"n\">des</span><span class=\"o\">=</span><span class=\"mi\">99942</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get data for objects removed from the Sentry system.</span>\n<span class=\"n\">sentry</span><span class=\"p\">(</span><span class=\"n\">removed</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Other function examples</p>\n<h4>Getting the Julian and Modified Julian Date</h4>\n<pre><span class=\"c1\"># Return the modified Julian Date for the current time.</span>\n<span class=\"n\">julian_date</span><span class=\"p\">()</span>\n<span class=\"c1\"># Return the non-modified Julian Date for the current time.</span>\n<span class=\"n\">julian_date</span><span class=\"p\">(</span><span class=\"n\">modified</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the modified Julian Date for 2019-01-01 at midnight.</span>\n<span class=\"n\">julian_date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">2019</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6431306, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7537e522ea54ff4fbc769a4fda732c77", "sha256": "f05ab2d6d3d5aa9c581343af1ab778b1d8927460011d9a409e0882ee694b2baf"}, "downloads": -1, "filename": "nasapy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7537e522ea54ff4fbc769a4fda732c77", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13163, "upload_time": "2019-10-12T12:57:25", "upload_time_iso_8601": "2019-10-12T12:57:25.077462Z", "url": "https://files.pythonhosted.org/packages/f9/ac/6a64906f3bb887d01f167b24161c44d71296f12e7ef4d813eafc1d4578a6/nasapy-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ffe32b4e35a3faac34df8a9fd14c1d0", "sha256": "9e01521a148ca468b37bfa44ddd04731d006d48ddc3930e1ef433c59a3d72e35"}, "downloads": -1, "filename": "nasapy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2ffe32b4e35a3faac34df8a9fd14c1d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12806, "upload_time": "2019-10-12T12:57:27", "upload_time_iso_8601": "2019-10-12T12:57:27.575400Z", "url": "https://files.pythonhosted.org/packages/24/0d/6a9320536b55010948dcbca145100bdadbcf02a915c260fc22989f088be1/nasapy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c7c9975221c7e14e6882f601a838bf6c", "sha256": "5edc0504fea7dd94259cc77393aa0404c1bf00a72b6312af2ad0cc95b9fa811a"}, "downloads": -1, "filename": "nasapy-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c7c9975221c7e14e6882f601a838bf6c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26154, "upload_time": "2019-11-28T13:13:21", "upload_time_iso_8601": "2019-11-28T13:13:21.122395Z", "url": "https://files.pythonhosted.org/packages/f4/37/08b35d7aaeebf3749eac57644e9a245f45c4cd360ce677a41261684c2eab/nasapy-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cc8da4b6052ac046c92c8033cddf395", "sha256": "8007040668e026f40c338761f24a052f640199d94786e3f6209fb849c364c53c"}, "downloads": -1, "filename": "nasapy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4cc8da4b6052ac046c92c8033cddf395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27765, "upload_time": "2019-11-28T13:13:22", "upload_time_iso_8601": "2019-11-28T13:13:22.903350Z", "url": "https://files.pythonhosted.org/packages/a5/36/001af564c1c29970abe383d7215d6a77fe88655fbacdf63d40b1a85c5995/nasapy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "605fca17bda4dfa1835a85872da5debd", "sha256": "3ee84362319d9bacb1097ae454b4b4d5538f46bed37cbbd8429e25a51e13dbed"}, "downloads": -1, "filename": "nasapy-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "605fca17bda4dfa1835a85872da5debd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26155, "upload_time": "2019-11-28T13:48:12", "upload_time_iso_8601": "2019-11-28T13:48:12.581607Z", "url": "https://files.pythonhosted.org/packages/af/e1/168d6497576cdfacab3076b4e58b1c64a41afc50cfd83a3e537c0ee65f6f/nasapy-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "869446eee7f9c2bf1784e40e2fa97232", "sha256": "80c1cf0fe297d5ba7fb4b6f75f2a13949cfc274e3cc61e5529b7edf4e8097dd9"}, "downloads": -1, "filename": "nasapy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "869446eee7f9c2bf1784e40e2fa97232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27763, "upload_time": "2019-11-28T13:48:14", "upload_time_iso_8601": "2019-11-28T13:48:14.450106Z", "url": "https://files.pythonhosted.org/packages/c5/ea/0d272ba03a47671a926a5e3ed31a05711581ecb1a0d885645ff17f9792bf/nasapy-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "7b50cd3d78b45ea4ccb3332aa17d65cb", "sha256": "7c9f5d81504465894e41370f1b47cca526070ea5456371576965243aa0d97bd8"}, "downloads": -1, "filename": "nasapy-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b50cd3d78b45ea4ccb3332aa17d65cb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27833, "upload_time": "2019-12-08T14:58:49", "upload_time_iso_8601": "2019-12-08T14:58:49.444097Z", "url": "https://files.pythonhosted.org/packages/45/9c/c16ce9a5957b062f4c4f1331a1a7f7bb4f6c5c7111e8c7f9bd4110da46bd/nasapy-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f660f0d4c544c7bc33459cb5521be2ff", "sha256": "46ff554f3cfc7321b6bc665928f2d20bce247b725dd3c17235fc33cc670e9760"}, "downloads": -1, "filename": "nasapy-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f660f0d4c544c7bc33459cb5521be2ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29589, "upload_time": "2019-12-08T14:58:50", "upload_time_iso_8601": "2019-12-08T14:58:50.938185Z", "url": "https://files.pythonhosted.org/packages/18/54/e604c69a828459a40c137d01ac9a8c4adfe301c103b1239cf1eff74e0e1e/nasapy-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "6e9a57cc5f928218de15a6b8a89ea056", "sha256": "1c3ffbffc464e22f8bf46232efce07692c818767fa0ca3a580fa25da4a33b550"}, "downloads": -1, "filename": "nasapy-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6e9a57cc5f928218de15a6b8a89ea056", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28586, "upload_time": "2020-01-01T14:26:23", "upload_time_iso_8601": "2020-01-01T14:26:23.826211Z", "url": "https://files.pythonhosted.org/packages/e8/1e/1b6b38ae2e10ce5924ad975a61420c0257cca2da30e1f3f2516137589efc/nasapy-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d4ae9e0ac2b54acafc15a6d7988f18b", "sha256": "57097f1529bfbd4042f2803be9f1ed646f97f2e9a57d7944396dbe9f72e50df5"}, "downloads": -1, "filename": "nasapy-0.2.4.tar.gz", "has_sig": false, "md5_digest": "3d4ae9e0ac2b54acafc15a6d7988f18b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30533, "upload_time": "2020-01-01T14:26:25", "upload_time_iso_8601": "2020-01-01T14:26:25.631094Z", "url": "https://files.pythonhosted.org/packages/96/21/e8c1f64bd5533d1efa2f0adee44f363315edee7982439e0901f986beaf69/nasapy-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "c716655ed74beb8ccb089b98c7654158", "sha256": "d0ae973cb51be763389c6cad3917976ac64e4ccfd4397f241ab735031f8effda"}, "downloads": -1, "filename": "nasapy-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c716655ed74beb8ccb089b98c7654158", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28834, "upload_time": "2020-01-05T13:17:53", "upload_time_iso_8601": "2020-01-05T13:17:53.306377Z", "url": "https://files.pythonhosted.org/packages/02/18/65a7198009fb86ce3cdd28a123782d19ad89ecb9778aca183781347d4236/nasapy-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "951b6b76a1eb184122e5a0807f522e95", "sha256": "ecc87ec4b696390f5c0c2010b81305f0e91ee8fb319751fa78eb67da575dcfc0"}, "downloads": -1, "filename": "nasapy-0.2.5.tar.gz", "has_sig": false, "md5_digest": "951b6b76a1eb184122e5a0807f522e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31029, "upload_time": "2020-01-05T13:17:55", "upload_time_iso_8601": "2020-01-05T13:17:55.001819Z", "url": "https://files.pythonhosted.org/packages/b5/d0/c86d15fb93797a5b3e8e89bfc8188fa3caa23f10aa3de498d4e8a30e78fb/nasapy-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "c197b5b454f31deb9837066fe2eca583", "sha256": "abeff6bc417e772c6973a737c0398cdad609eecef62fc6988198ed70ae4e330f"}, "downloads": -1, "filename": "nasapy-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c197b5b454f31deb9837066fe2eca583", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29724, "upload_time": "2020-01-10T16:01:58", "upload_time_iso_8601": "2020-01-10T16:01:58.317634Z", "url": "https://files.pythonhosted.org/packages/56/e9/abe5009d84741a91fcdbd7e98d90e7b77df2e79b597d9b87631c20a6ee87/nasapy-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "084e39cc715ef4528c50105c7d72b8a7", "sha256": "c21e3a2b8b9b356c4bec0b6a8e24ce088c6f771ebfaa05c94f9f984130d4ac1d"}, "downloads": -1, "filename": "nasapy-0.2.6.tar.gz", "has_sig": false, "md5_digest": "084e39cc715ef4528c50105c7d72b8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32728, "upload_time": "2020-01-10T16:02:00", "upload_time_iso_8601": "2020-01-10T16:02:00.458370Z", "url": "https://files.pythonhosted.org/packages/f0/3a/8e5d14b1cbd97814c7038d9d5ae1049c43e59b6d9c489709ee366b8eeca0/nasapy-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c197b5b454f31deb9837066fe2eca583", "sha256": "abeff6bc417e772c6973a737c0398cdad609eecef62fc6988198ed70ae4e330f"}, "downloads": -1, "filename": "nasapy-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c197b5b454f31deb9837066fe2eca583", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29724, "upload_time": "2020-01-10T16:01:58", "upload_time_iso_8601": "2020-01-10T16:01:58.317634Z", "url": "https://files.pythonhosted.org/packages/56/e9/abe5009d84741a91fcdbd7e98d90e7b77df2e79b597d9b87631c20a6ee87/nasapy-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "084e39cc715ef4528c50105c7d72b8a7", "sha256": "c21e3a2b8b9b356c4bec0b6a8e24ce088c6f771ebfaa05c94f9f984130d4ac1d"}, "downloads": -1, "filename": "nasapy-0.2.6.tar.gz", "has_sig": false, "md5_digest": "084e39cc715ef4528c50105c7d72b8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32728, "upload_time": "2020-01-10T16:02:00", "upload_time_iso_8601": "2020-01-10T16:02:00.458370Z", "url": "https://files.pythonhosted.org/packages/f0/3a/8e5d14b1cbd97814c7038d9d5ae1049c43e59b6d9c489709ee366b8eeca0/nasapy-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:27 2020"}