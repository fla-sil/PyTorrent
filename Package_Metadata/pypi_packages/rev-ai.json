{"info": {"author": "Rev Ai", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Rev.ai Python SDK\n\n[![Build Status](https://travis-ci.org/revdotcom/revai-python-sdk.svg?branch=develop)](https://travis-ci.org/revdotcom/revai-python-sdk)\n\n## Documentation\n\nSee the [API docs](https://www.rev.ai/docs) for more information about the API and\nmore python examples.\n\n## Installation\n\nYou don't need this source code unless you want to modify the package. If you just\nwant to use the package, just run:\n\n    pip install --upgrade rev_ai\n\nInstall from source with:\n\n    python setup.py install\n\n### Requirements\n\n- Python 2.7+ or Python 3.4+\n\n## Usage\n\nAll you need to get started is your Access Token, which can be generated on\nyour [Settings Page](https://www.rev.ai/settings). Create a client with the\ngiven Access Token:\n\n```python\nfrom rev_ai import apiclient\n\n# create your client\nclient = apiclient.RevAiAPIClient(\"ACCESS TOKEN\")\n```\n\n### Sending a file\n\nOnce you've set up your client with your Access Token sending a file is easy!\n\n```python\n# you can send a local file\njob = client.submit_job_local_file(\"FILE PATH\")\n\n# or send a link to the file you want transcribed\njob = client.submit_job_url(\"https://example.com/file-to-transcribe.mp3\")\n```\n\n`job` will contain all the information normally found in a successful response from our\n[Submit Job](https://www.rev.ai/docs#operation/SubmitTranscriptionJob) endpoint.\n\nIf you want to get fancy, both send job methods take `metadata`, `callback_url`,\n`skip_diarization`, `skip_punctuation`, `speaker_channels_count`, `custom_vocabularies` and `filter_profanity` as optional parameters, these are described in the request body of\nthe [Submit Job](https://www.rev.ai/docs#operation/SubmitTranscriptionJob) endpoint.\n\n### Checking your file's status\n\nYou can check the status of your transcription job using its `id`\n\n```python\njob_details = client.get_job_details(job.id)\n```\n\n`job_details` will contain all information normally found in a successful response from\nour [Get Job](https://www.rev.ai/docs#operation/GetJobById) endpoint\n\n### Checking multiple files\n\nYou can retrieve a list of transcription jobs with optional parameters\n\n```python\njobs = client.get_list_of_jobs()\n\n# limit amount of retrieved jobs\njobs = client.get_list_of_jobs(limits=3)\n\n# get jobs starting after a certain job id\njobs = client.get_list_of_jobs(starting_after='Umx5c6F7pH7r')\n```\n\n`jobs` will contain a list of job details having all information normally found in a successful response\nfrom our [Get List of Jobs](https://www.rev.ai/docs#operation/GetListOfJobs) endpoint\n\n### Deleting a job\n\nYou can delete a transcription job using its `id`\n\n```python\nclient.delete_job(job.id)\n```\n\n All data related to the job, such as input media and transcript, will be permanently deleted.\n A job can only by deleted once it's completed (either with success or failure).\n\n### Getting your transcript\n\nOnce your file is transcribed, you can get your transcript in a few different forms:\n\n```python\n# as text\ntranscript_text = client.get_transcript_text(job.id)\n\n# as json\ntranscript_json = client.get_transcript_json(job.id)\n\n# or as a python object\ntranscript_object = client.get_transcript_object(job.id)\n```\n\nBoth the json and object forms contain all the formation outlined in the response\nof the [Get Transcript](https://www.rev.ai/docs#operation/GetTranscriptById) endpoint\nwhen using the json response schema. While the text output is a string containing\njust the text of your transcript\n\n### Getting captions output\n\nYou can also get captions output from the SDK. We offer both SRT and VTT caption formats.\nIf you submitted your job as speaker channel audio then you must also provide a `channel_id` to be captioned:\n\n```python\ncaptions = client.get_captions(job.id, content_type=CaptionType.SRT, channel_id=None)\n```\n\n### Streamed outputs\n\nAny output format can be retrieved as a stream. In these cases we return the raw http response to you. The output can be retrieved via `response.content`, `response.iter_lines()` or `response.iter_content()`.\n\n```python\ntext_stream = client.get_transcript_text_as_stream(job.id)\n\njson_stream = client.get_transcript_json_as_stream(job.id)\n\ncaptions_stream = client.get_captions_as_stream(job.id)\n```\n\n## Streaming audio\n\nIn order to stream audio, you will need to setup a streaming client and a media configuration for the audio you will be sending.\n\n```python\nfrom rev_ai.streamingclient import RevAiStreamingClient\nfrom rev_ai.models import MediaConfig\n\n#on_error(error)\n#on_close(code, reason)\n#on_connected(id)\n\nconfig = MediaConfig()\nstreaming_client = RevAiStreamingClient(\"ACCESS TOKEN\",\n                                        config,\n                                        on_error=ERRORFUNC,\n                                        on_close=CLOSEFUNC,\n                                        on_connected=CONNECTEDFUNC)\n```\n\n`on_error`, `on_close`, and `on_connected` are optional parameters that are functions to be called when the websocket errors, closes, and connects respectively. The default `on_error` raises the error, `on_close` prints out the code and reason for closing, and `on_connected` prints out the job ID.\nIf passing in custom functions, make sure you provide the right parameters. See the sample code for the parameters.\n\nOnce you have a streaming client setup with a `MediaConfig` and access token, you can obtain a transcription generator of your audio. You can also use a custom vocabulary with your streaming job by supplying the optional `custom_vocabulary_id` when starting a connection!\n\nMore optional parameters can be supplied when starting a connection, these are `metadata` and `filter_profanity`. For a description of these optional parameters look at our [streaming documentation](https://www.rev.ai/docs/streaming#section/WebSocket-Endpoint).\n\n```python\nresponse_generator = streaming_client.start(AUDIO_GENERATOR, custom_vocabulary_id=\"CUSTOM VOCAB ID\")\n```\n\n`response_generator` is a generator object that yields the transcription results of the audio including partial and final transcriptions. The `start` method creates a thread sending audio pieces from the `AUDIO_GENERATOR` to our\n[streaming] endpoint.\n\nIf you want to end the connection early, you can!\n\n```python\nstreaming_client.end()\n```\n\nOtherwise, the connection will end when the server obtains an \"EOS\" message.\n\n### Submitting Custom Vocabularies\n\nIn addition to passing custom vocabularies as parameters in the async api client, you can create and submit your custom vocabularies independently and directly to the custom vocabularies api, as well as check on their progress.\n\nPrimarily, the custom vocabularies client allows you to submit and preprocess vocabularies for use with the streaming client, in order to have streaming jobs with custom vocabularies!\n\nIn this example you see how to construct custom vocabulary objects, submit them to the api, and check on their progress - and metadata!\n\n```python\nfrom rev_ai import custom_vocabularies_client\nfrom rev_ai.models import CustomVocabulary\n# Create a client\nclient = custom_vocabularies_client.RevAiCustomVocabulariesClient(\"ACCESS TOKEN\")\n\n# Construct a CustomVocabulary object using your desired phrases\ncustom_vocabulary = CustomVocabulary([\"Patrick Henry Winston\", \"Robert C Berwick\", \"Noam Chomsky\"])\n\n# Submit the CustomVocabulary\ncustom_vocabularies_job = client.submit_custom_vocabularies([custom_vocabulary])\n\n# View the job's progress\njob_state = client.get_custom_vocabularies_information(custom_vocabularies_job['id'])\n```\n\nFor more details, check out the custom vocabularies example in our [examples](https://github.com/revdotcom/revai-python-sdk/tree/develop/examples).\n\n# For Rev.ai Python SDK Developers\n\nRemember in your development to follow the PEP8 style guide. Your code editor likely has Python PEP8 linting packages which can assist you in your development.\n\n\n=======\nHistory\n=======\n\n0.0.0 (2018-09-28)\n------------------\n\n* Initial alpha release\n\n2.1.0\n------------------\n\n* Revamped official release\n\n2.1.1\n------------------\n\n* File upload bug fixes\n\n2.2.1\n------------------\n\n* Better Documentation\n\n2.2.2\n------------------\n\n* Fix pypi readme formatting\n\n2.3.0\n------------------\n\n* Add get_list_of_jobs\n\n2.4.0\n------------------\n\n* Add support for custom vocabularies\n\n2.5.0\n------------------\n\n* Add examples\n* Improve error handling\n* Add streaming client\n\n2.6.0\n------------------\n\n* Support skip_punctuation\n* Support .vtt captions output\n* Support speaker channel jobs\n\n2.6.1\n------------------\n\n* Add metadata to streaming client\n\n2.7.0\n------------------\n\n* Add custom vocabularies to streaming client\n\n2.7.1\n------------------\n\n* Use v1 of the streaming api\n* Add custom vocabulary to async example\n* Add filter_profanity to async and streaming clients, examples, and documentation\n* Add remove_disfluencies to async client\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/revdotcom/revai-python-sdk", "keywords": "rev_ai", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "rev-ai", "package_url": "https://pypi.org/project/rev-ai/", "platform": "", "project_url": "https://pypi.org/project/rev-ai/", "project_urls": {"Homepage": "https://github.com/revdotcom/revai-python-sdk"}, "release_url": "https://pypi.org/project/rev-ai/2.8.0/", "requires_dist": ["requests (==2.21.0)", "enum34 (==1.1.6)", "six (==1.12.0)", "websocket-client (==0.56.0)", "mock (==3.0.5)"], "requires_python": "", "summary": "Rev.ai makes speech applications easy to build!", "version": "2.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rev.ai Python SDK</h1>\n<p><a href=\"https://travis-ci.org/revdotcom/revai-python-sdk\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46d3b24b7ac30514f0cf7d20f55b8ea695403b41/68747470733a2f2f7472617669732d63692e6f72672f726576646f74636f6d2f72657661692d707974686f6e2d73646b2e7376673f6272616e63683d646576656c6f70\"></a></p>\n<h2>Documentation</h2>\n<p>See the <a href=\"https://www.rev.ai/docs\" rel=\"nofollow\">API docs</a> for more information about the API and\nmore python examples.</p>\n<h2>Installation</h2>\n<p>You don't need this source code unless you want to modify the package. If you just\nwant to use the package, just run:</p>\n<pre><code>pip install --upgrade rev_ai\n</code></pre>\n<p>Install from source with:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.7+ or Python 3.4+</li>\n</ul>\n<h2>Usage</h2>\n<p>All you need to get started is your Access Token, which can be generated on\nyour <a href=\"https://www.rev.ai/settings\" rel=\"nofollow\">Settings Page</a>. Create a client with the\ngiven Access Token:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rev_ai</span> <span class=\"kn\">import</span> <span class=\"n\">apiclient</span>\n\n<span class=\"c1\"># create your client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">apiclient</span><span class=\"o\">.</span><span class=\"n\">RevAiAPIClient</span><span class=\"p\">(</span><span class=\"s2\">\"ACCESS TOKEN\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Sending a file</h3>\n<p>Once you've set up your client with your Access Token sending a file is easy!</p>\n<pre><span class=\"c1\"># you can send a local file</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">submit_job_local_file</span><span class=\"p\">(</span><span class=\"s2\">\"FILE PATH\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or send a link to the file you want transcribed</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">submit_job_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://example.com/file-to-transcribe.mp3\"</span><span class=\"p\">)</span>\n</pre>\n<p><code>job</code> will contain all the information normally found in a successful response from our\n<a href=\"https://www.rev.ai/docs#operation/SubmitTranscriptionJob\" rel=\"nofollow\">Submit Job</a> endpoint.</p>\n<p>If you want to get fancy, both send job methods take <code>metadata</code>, <code>callback_url</code>,\n<code>skip_diarization</code>, <code>skip_punctuation</code>, <code>speaker_channels_count</code>, <code>custom_vocabularies</code> and <code>filter_profanity</code> as optional parameters, these are described in the request body of\nthe <a href=\"https://www.rev.ai/docs#operation/SubmitTranscriptionJob\" rel=\"nofollow\">Submit Job</a> endpoint.</p>\n<h3>Checking your file's status</h3>\n<p>You can check the status of your transcription job using its <code>id</code></p>\n<pre><span class=\"n\">job_details</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_job_details</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<p><code>job_details</code> will contain all information normally found in a successful response from\nour <a href=\"https://www.rev.ai/docs#operation/GetJobById\" rel=\"nofollow\">Get Job</a> endpoint</p>\n<h3>Checking multiple files</h3>\n<p>You can retrieve a list of transcription jobs with optional parameters</p>\n<pre><span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_list_of_jobs</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># limit amount of retrieved jobs</span>\n<span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_list_of_jobs</span><span class=\"p\">(</span><span class=\"n\">limits</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get jobs starting after a certain job id</span>\n<span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_list_of_jobs</span><span class=\"p\">(</span><span class=\"n\">starting_after</span><span class=\"o\">=</span><span class=\"s1\">'Umx5c6F7pH7r'</span><span class=\"p\">)</span>\n</pre>\n<p><code>jobs</code> will contain a list of job details having all information normally found in a successful response\nfrom our <a href=\"https://www.rev.ai/docs#operation/GetListOfJobs\" rel=\"nofollow\">Get List of Jobs</a> endpoint</p>\n<h3>Deleting a job</h3>\n<p>You can delete a transcription job using its <code>id</code></p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete_job</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<p>All data related to the job, such as input media and transcript, will be permanently deleted.\nA job can only by deleted once it's completed (either with success or failure).</p>\n<h3>Getting your transcript</h3>\n<p>Once your file is transcribed, you can get your transcript in a few different forms:</p>\n<pre><span class=\"c1\"># as text</span>\n<span class=\"n\">transcript_text</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_transcript_text</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># as json</span>\n<span class=\"n\">transcript_json</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_transcript_json</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or as a python object</span>\n<span class=\"n\">transcript_object</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_transcript_object</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<p>Both the json and object forms contain all the formation outlined in the response\nof the <a href=\"https://www.rev.ai/docs#operation/GetTranscriptById\" rel=\"nofollow\">Get Transcript</a> endpoint\nwhen using the json response schema. While the text output is a string containing\njust the text of your transcript</p>\n<h3>Getting captions output</h3>\n<p>You can also get captions output from the SDK. We offer both SRT and VTT caption formats.\nIf you submitted your job as speaker channel audio then you must also provide a <code>channel_id</code> to be captioned:</p>\n<pre><span class=\"n\">captions</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_captions</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">CaptionType</span><span class=\"o\">.</span><span class=\"n\">SRT</span><span class=\"p\">,</span> <span class=\"n\">channel_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<h3>Streamed outputs</h3>\n<p>Any output format can be retrieved as a stream. In these cases we return the raw http response to you. The output can be retrieved via <code>response.content</code>, <code>response.iter_lines()</code> or <code>response.iter_content()</code>.</p>\n<pre><span class=\"n\">text_stream</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_transcript_text_as_stream</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n<span class=\"n\">json_stream</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_transcript_json_as_stream</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n<span class=\"n\">captions_stream</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_captions_as_stream</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<h2>Streaming audio</h2>\n<p>In order to stream audio, you will need to setup a streaming client and a media configuration for the audio you will be sending.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rev_ai.streamingclient</span> <span class=\"kn\">import</span> <span class=\"n\">RevAiStreamingClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rev_ai.models</span> <span class=\"kn\">import</span> <span class=\"n\">MediaConfig</span>\n\n<span class=\"c1\">#on_error(error)</span>\n<span class=\"c1\">#on_close(code, reason)</span>\n<span class=\"c1\">#on_connected(id)</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">MediaConfig</span><span class=\"p\">()</span>\n<span class=\"n\">streaming_client</span> <span class=\"o\">=</span> <span class=\"n\">RevAiStreamingClient</span><span class=\"p\">(</span><span class=\"s2\">\"ACCESS TOKEN\"</span><span class=\"p\">,</span>\n                                        <span class=\"n\">config</span><span class=\"p\">,</span>\n                                        <span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"n\">ERRORFUNC</span><span class=\"p\">,</span>\n                                        <span class=\"n\">on_close</span><span class=\"o\">=</span><span class=\"n\">CLOSEFUNC</span><span class=\"p\">,</span>\n                                        <span class=\"n\">on_connected</span><span class=\"o\">=</span><span class=\"n\">CONNECTEDFUNC</span><span class=\"p\">)</span>\n</pre>\n<p><code>on_error</code>, <code>on_close</code>, and <code>on_connected</code> are optional parameters that are functions to be called when the websocket errors, closes, and connects respectively. The default <code>on_error</code> raises the error, <code>on_close</code> prints out the code and reason for closing, and <code>on_connected</code> prints out the job ID.\nIf passing in custom functions, make sure you provide the right parameters. See the sample code for the parameters.</p>\n<p>Once you have a streaming client setup with a <code>MediaConfig</code> and access token, you can obtain a transcription generator of your audio. You can also use a custom vocabulary with your streaming job by supplying the optional <code>custom_vocabulary_id</code> when starting a connection!</p>\n<p>More optional parameters can be supplied when starting a connection, these are <code>metadata</code> and <code>filter_profanity</code>. For a description of these optional parameters look at our <a href=\"https://www.rev.ai/docs/streaming#section/WebSocket-Endpoint\" rel=\"nofollow\">streaming documentation</a>.</p>\n<pre><span class=\"n\">response_generator</span> <span class=\"o\">=</span> <span class=\"n\">streaming_client</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">AUDIO_GENERATOR</span><span class=\"p\">,</span> <span class=\"n\">custom_vocabulary_id</span><span class=\"o\">=</span><span class=\"s2\">\"CUSTOM VOCAB ID\"</span><span class=\"p\">)</span>\n</pre>\n<p><code>response_generator</code> is a generator object that yields the transcription results of the audio including partial and final transcriptions. The <code>start</code> method creates a thread sending audio pieces from the <code>AUDIO_GENERATOR</code> to our\n[streaming] endpoint.</p>\n<p>If you want to end the connection early, you can!</p>\n<pre><span class=\"n\">streaming_client</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>\n</pre>\n<p>Otherwise, the connection will end when the server obtains an \"EOS\" message.</p>\n<h3>Submitting Custom Vocabularies</h3>\n<p>In addition to passing custom vocabularies as parameters in the async api client, you can create and submit your custom vocabularies independently and directly to the custom vocabularies api, as well as check on their progress.</p>\n<p>Primarily, the custom vocabularies client allows you to submit and preprocess vocabularies for use with the streaming client, in order to have streaming jobs with custom vocabularies!</p>\n<p>In this example you see how to construct custom vocabulary objects, submit them to the api, and check on their progress - and metadata!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rev_ai</span> <span class=\"kn\">import</span> <span class=\"n\">custom_vocabularies_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rev_ai.models</span> <span class=\"kn\">import</span> <span class=\"n\">CustomVocabulary</span>\n<span class=\"c1\"># Create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">custom_vocabularies_client</span><span class=\"o\">.</span><span class=\"n\">RevAiCustomVocabulariesClient</span><span class=\"p\">(</span><span class=\"s2\">\"ACCESS TOKEN\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Construct a CustomVocabulary object using your desired phrases</span>\n<span class=\"n\">custom_vocabulary</span> <span class=\"o\">=</span> <span class=\"n\">CustomVocabulary</span><span class=\"p\">([</span><span class=\"s2\">\"Patrick Henry Winston\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Robert C Berwick\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Noam Chomsky\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Submit the CustomVocabulary</span>\n<span class=\"n\">custom_vocabularies_job</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">submit_custom_vocabularies</span><span class=\"p\">([</span><span class=\"n\">custom_vocabulary</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># View the job's progress</span>\n<span class=\"n\">job_state</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_custom_vocabularies_information</span><span class=\"p\">(</span><span class=\"n\">custom_vocabularies_job</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n</pre>\n<p>For more details, check out the custom vocabularies example in our <a href=\"https://github.com/revdotcom/revai-python-sdk/tree/develop/examples\" rel=\"nofollow\">examples</a>.</p>\n<h1>For Rev.ai Python SDK Developers</h1>\n<p>Remember in your development to follow the PEP8 style guide. Your code editor likely has Python PEP8 linting packages which can assist you in your development.</p>\n<h1>=======\nHistory</h1>\n<h2>0.0.0 (2018-09-28)</h2>\n<ul>\n<li>Initial alpha release</li>\n</ul>\n<h2>2.1.0</h2>\n<ul>\n<li>Revamped official release</li>\n</ul>\n<h2>2.1.1</h2>\n<ul>\n<li>File upload bug fixes</li>\n</ul>\n<h2>2.2.1</h2>\n<ul>\n<li>Better Documentation</li>\n</ul>\n<h2>2.2.2</h2>\n<ul>\n<li>Fix pypi readme formatting</li>\n</ul>\n<h2>2.3.0</h2>\n<ul>\n<li>Add get_list_of_jobs</li>\n</ul>\n<h2>2.4.0</h2>\n<ul>\n<li>Add support for custom vocabularies</li>\n</ul>\n<h2>2.5.0</h2>\n<ul>\n<li>Add examples</li>\n<li>Improve error handling</li>\n<li>Add streaming client</li>\n</ul>\n<h2>2.6.0</h2>\n<ul>\n<li>Support skip_punctuation</li>\n<li>Support .vtt captions output</li>\n<li>Support speaker channel jobs</li>\n</ul>\n<h2>2.6.1</h2>\n<ul>\n<li>Add metadata to streaming client</li>\n</ul>\n<h2>2.7.0</h2>\n<ul>\n<li>Add custom vocabularies to streaming client</li>\n</ul>\n<h2>2.7.1</h2>\n<ul>\n<li>Use v1 of the streaming api</li>\n<li>Add custom vocabulary to async example</li>\n<li>Add filter_profanity to async and streaming clients, examples, and documentation</li>\n<li>Add remove_disfluencies to async client</li>\n</ul>\n\n          </div>"}, "last_serial": 6825377, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "199c3b11b26f6845d73b53b3e574773c", "sha256": "162a1cd1ce844c2eba19751fb7fc9eab447d9209b859d1165ca8a345f6dc9a26"}, "downloads": -1, "filename": "rev_ai-0.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "199c3b11b26f6845d73b53b3e574773c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3032, "upload_time": "2018-10-09T17:38:23", "upload_time_iso_8601": "2018-10-09T17:38:23.916416Z", "url": "https://files.pythonhosted.org/packages/9e/0a/a6c388ece6a404aa63548a1f40035bb326b92ae9e3eedf7dab2acd059937/rev_ai-0.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b47159dc3c021fe340d0f3142828774f", "sha256": "57cff5958ae85dee8b461de5f2cd1c161752733bd4c8917703398061f7550c0f"}, "downloads": -1, "filename": "rev_ai-0.0.0.tar.gz", "has_sig": false, "md5_digest": "b47159dc3c021fe340d0f3142828774f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7517, "upload_time": "2018-10-09T17:38:25", "upload_time_iso_8601": "2018-10-09T17:38:25.449177Z", "url": "https://files.pythonhosted.org/packages/4f/ff/1c5ef7c24368eb958394b7c8d5aecee8ad1da620195ce858e707cacd1921/rev_ai-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "412a7233a7238c018db3ead7dde9666a", "sha256": "099d476c9fcaad857a1a8479439070d18e8190ffef96723e1de26043d4061798"}, "downloads": -1, "filename": "rev_ai-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "412a7233a7238c018db3ead7dde9666a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3067, "upload_time": "2018-10-09T17:48:43", "upload_time_iso_8601": "2018-10-09T17:48:43.004101Z", "url": "https://files.pythonhosted.org/packages/ce/1e/46376126ab6a2a7b0f86ece7a790dd5106788dcbfbfaac7a870cfe9172da/rev_ai-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "895c37d0eb4f084843b5b5fd32855bfc", "sha256": "d8c5ca214fb39372f75ba380a3053510fa586f37c5f5d5639a72d4c67ac5d52c"}, "downloads": -1, "filename": "rev_ai-0.0.1.tar.gz", "has_sig": false, "md5_digest": "895c37d0eb4f084843b5b5fd32855bfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7547, "upload_time": "2018-10-09T17:48:44", "upload_time_iso_8601": "2018-10-09T17:48:44.335366Z", "url": "https://files.pythonhosted.org/packages/c9/c1/71943b2cebec218e281e84656469308b77f556ab35af5d852e4b5cf184a7/rev_ai-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3d0f283c4ca76d74ffbd8574b8b304eb", "sha256": "6c186b6b61634714001b8150621cc36cf9d02c1fabf18222891eafb5d157d98e"}, "downloads": -1, "filename": "rev_ai-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d0f283c4ca76d74ffbd8574b8b304eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3107, "upload_time": "2018-10-09T17:53:52", "upload_time_iso_8601": "2018-10-09T17:53:52.380156Z", "url": "https://files.pythonhosted.org/packages/aa/fe/9c8a58dd8739ed7c23dcbc3a76feb0e24f08657a8b7a9e13e889aec2c34b/rev_ai-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42a9c667aa94a8f81825af5b800fb781", "sha256": "26b0c88c711e698cb365ab1418d0e2556d356d3dc3221fdc875b489ba4832ffe"}, "downloads": -1, "filename": "rev_ai-0.0.2.tar.gz", "has_sig": false, "md5_digest": "42a9c667aa94a8f81825af5b800fb781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7593, "upload_time": "2018-10-09T17:53:53", "upload_time_iso_8601": "2018-10-09T17:53:53.731228Z", "url": "https://files.pythonhosted.org/packages/c5/8a/e3966db71a83b37f0df57a6c44332d7dbda5a45f8f1d7c234cf458701a75/rev_ai-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4037e9cb0382c5b99c3a24ac629bf9b2", "sha256": "c4647f97e8e6608b29f2be8263d4fe61ba44565307749f4249b5545bbe28a773"}, "downloads": -1, "filename": "rev_ai-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4037e9cb0382c5b99c3a24ac629bf9b2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4215, "upload_time": "2018-10-20T15:13:29", "upload_time_iso_8601": "2018-10-20T15:13:29.885990Z", "url": "https://files.pythonhosted.org/packages/66/e0/b6e04918ec578bb3c434e139680dd49db81f0775283f6463080eee6f4657/rev_ai-0.0.3-py2.py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "a9060df5e1e56fc13d5b242ac8abe035", "sha256": "4ca1765d146cb1f72966611def48f40f94ae6c3f8c70b4c83794d5f645d7b15f"}, "downloads": -1, "filename": "rev_ai-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9060df5e1e56fc13d5b242ac8abe035", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7436, "upload_time": "2019-01-31T01:31:22", "upload_time_iso_8601": "2019-01-31T01:31:22.428603Z", "url": "https://files.pythonhosted.org/packages/40/db/db6f28896956d070ebb5849aa01769725824725e608acf6ed34bf3bcde21/rev_ai-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "645f4b3d524f00703ab2f366addfdf97", "sha256": "885ec1b1b3a9624f408109a6c511d92c368a80e244169fb81935af769731788d"}, "downloads": -1, "filename": "rev_ai-2.0.0.tar.gz", "has_sig": false, "md5_digest": "645f4b3d524f00703ab2f366addfdf97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11550, "upload_time": "2019-01-31T01:31:23", "upload_time_iso_8601": "2019-01-31T01:31:23.792101Z", "url": "https://files.pythonhosted.org/packages/d4/b5/632fd11115fd7a9a6514a81af11f532bbf7a9744894b16a7d9e8cc183679/rev_ai-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "fd0d2a9789508e3c77e60926ee6b7d84", "sha256": "cac97b56b4346b4c29c59b469b3ad76d8805b5e51611a81acf0a353b969b8c7d"}, "downloads": -1, "filename": "rev_ai-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd0d2a9789508e3c77e60926ee6b7d84", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7294, "upload_time": "2019-02-01T22:26:56", "upload_time_iso_8601": "2019-02-01T22:26:56.794806Z", "url": "https://files.pythonhosted.org/packages/11/06/15f519220637f54b426c19d28ddca76e3e547ccec2f28fd05a576385ba4b/rev_ai-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce4440d73346597bf9878279aa17e480", "sha256": "8306e645c2b809c32adafc4a8bc43d3867f6d35cb1144022e62efcdde4192cb7"}, "downloads": -1, "filename": "rev_ai-2.1.0.tar.gz", "has_sig": false, "md5_digest": "ce4440d73346597bf9878279aa17e480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12256, "upload_time": "2019-02-01T22:26:58", "upload_time_iso_8601": "2019-02-01T22:26:58.258146Z", "url": "https://files.pythonhosted.org/packages/a3/83/02482bf81832b34b21850b37c660b9d65b1c6c8537e7f5f5ace5adc7ac7f/rev_ai-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "c96c7e45d60a9cac09200930828321f4", "sha256": "808efea56400c57a687d8eac86328b654271b79ec5335828e5dcdda898d63f08"}, "downloads": -1, "filename": "rev_ai-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c96c7e45d60a9cac09200930828321f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7494, "upload_time": "2019-02-05T22:21:57", "upload_time_iso_8601": "2019-02-05T22:21:57.288596Z", "url": "https://files.pythonhosted.org/packages/5f/81/096763210b7446ab2cbb93c88fe3f7621cbc65a4e42a92633d341eaac38e/rev_ai-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9d8c0c7a8897a02cff53cf53da96c30", "sha256": "3240b1572f4e1db71c6d9bd4ec61581b949cf5b821d461fda35ebd50bbe4c87f"}, "downloads": -1, "filename": "rev_ai-2.1.1.tar.gz", "has_sig": false, "md5_digest": "f9d8c0c7a8897a02cff53cf53da96c30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12662, "upload_time": "2019-02-05T22:21:58", "upload_time_iso_8601": "2019-02-05T22:21:58.949288Z", "url": "https://files.pythonhosted.org/packages/35/58/c2c0a892027bc41bfd4ec2d9dbba8de88092cc6a85a4474a2bd661c05311/rev_ai-2.1.1.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "fc04942515d9731a886db0b6d7c1e63b", "sha256": "b03ec5c01108af5ff3e7ca66aae93756d955da8c386aca68dc61d0675aa33edf"}, "downloads": -1, "filename": "rev_ai-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc04942515d9731a886db0b6d7c1e63b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8417, "upload_time": "2019-02-13T19:19:05", "upload_time_iso_8601": "2019-02-13T19:19:05.146580Z", "url": "https://files.pythonhosted.org/packages/93/66/539d1d6978baebb3f76964ec749080c3a9319ae822ec150073609d4681b3/rev_ai-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2adf695f0d8af402501a75ea2e68d39", "sha256": "1107113fb2dea901c26757eff6cc7f79f9f5bc38212ff91ac500f79390703bff"}, "downloads": -1, "filename": "rev_ai-2.2.1.tar.gz", "has_sig": false, "md5_digest": "b2adf695f0d8af402501a75ea2e68d39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10420, "upload_time": "2019-02-13T19:19:06", "upload_time_iso_8601": "2019-02-13T19:19:06.937392Z", "url": "https://files.pythonhosted.org/packages/8a/8d/6b8e12ca4755bf22c18ac9960f91d898471107fbe22f000c27358ffff77d/rev_ai-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "a6ade5cb827d2ea55543e61b490c4f47", "sha256": "e2387eab803982447277ecb30decc0fb88a28b27b01f54fd439937070e2da5a3"}, "downloads": -1, "filename": "rev_ai-2.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6ade5cb827d2ea55543e61b490c4f47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8464, "upload_time": "2019-02-25T19:35:01", "upload_time_iso_8601": "2019-02-25T19:35:01.408130Z", "url": "https://files.pythonhosted.org/packages/c9/c4/41ba48ac5b4f9156eb632ff0e0db8a0a653c4ee7c66d3a8472104aa4e04a/rev_ai-2.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be5d7914448f4d9cb0df195ae155ff37", "sha256": "faf28060f1d89d44a94dea85a69137e280f1c119deb77cc4b1864af635831968"}, "downloads": -1, "filename": "rev_ai-2.2.2.tar.gz", "has_sig": false, "md5_digest": "be5d7914448f4d9cb0df195ae155ff37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10496, "upload_time": "2019-02-25T19:35:03", "upload_time_iso_8601": "2019-02-25T19:35:03.206872Z", "url": "https://files.pythonhosted.org/packages/5a/87/4328d2804c430f0ec810d7c432f624292e7421cb4d2a6d9d2983c539dbcd/rev_ai-2.2.2.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "11129261a11ef7c3fb5d6814ef1420ec", "sha256": "8b311474da531636683671bdb46af5ec0ec5ee874667d2a9ba590cf5d6c05ef3"}, "downloads": -1, "filename": "rev_ai-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11129261a11ef7c3fb5d6814ef1420ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9083, "upload_time": "2019-03-05T23:01:38", "upload_time_iso_8601": "2019-03-05T23:01:38.402938Z", "url": "https://files.pythonhosted.org/packages/88/d0/61c5f94eed5e2f2064b669212030eadcbe6e80554722a8a3a69abf1a65de/rev_ai-2.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3aaff97a43360f07dc7784c34c07d27", "sha256": "13565f667f8be61c949747f6b694f33cd7d7b9c38913d287a34adc50d7577f60"}, "downloads": -1, "filename": "rev_ai-2.3.0.tar.gz", "has_sig": false, "md5_digest": "d3aaff97a43360f07dc7784c34c07d27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11244, "upload_time": "2019-03-05T23:01:39", "upload_time_iso_8601": "2019-03-05T23:01:39.743705Z", "url": "https://files.pythonhosted.org/packages/ec/9d/a13bb2072ebcb31b0c691ec50c8201a59710ade6a286e82a2a39be3320cf/rev_ai-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "05a0e6af552f3b37da83eb7bad5b7f2d", "sha256": "8e6fbff2e3ac23d596c50d24f7969c477a19d45ec0611bd7665eabd2e730af4e"}, "downloads": -1, "filename": "rev_ai-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05a0e6af552f3b37da83eb7bad5b7f2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9303, "upload_time": "2019-03-14T23:15:57", "upload_time_iso_8601": "2019-03-14T23:15:57.399122Z", "url": "https://files.pythonhosted.org/packages/73/5f/5087eb5c4374c1339aab07db330eaabab985f4961cec24d317485fb63a42/rev_ai-2.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c83340609f7d868c8950c0d2b6a5f8a8", "sha256": "3ede38a8f06222eac1724542dfdb3b9f0352b69835089c0166132322c5877f1d"}, "downloads": -1, "filename": "rev_ai-2.4.0.tar.gz", "has_sig": false, "md5_digest": "c83340609f7d868c8950c0d2b6a5f8a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11529, "upload_time": "2019-03-14T23:15:58", "upload_time_iso_8601": "2019-03-14T23:15:58.927945Z", "url": "https://files.pythonhosted.org/packages/86/49/7d24f6308b339e54131dd76cfbd37f7d4928aadd91d400b059fbd0ec7341/rev_ai-2.4.0.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "1ae69d7ef189bbbb45919f1f3dc52bb5", "sha256": "1e46d3e634197c5a7b58ed26b48c6579b8333b01ab2df6f112cfc72ff7c0b4ec"}, "downloads": -1, "filename": "rev_ai-2.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1ae69d7ef189bbbb45919f1f3dc52bb5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13212, "upload_time": "2019-06-25T00:00:49", "upload_time_iso_8601": "2019-06-25T00:00:49.668549Z", "url": "https://files.pythonhosted.org/packages/9b/5a/96e4562d2e935729fdbb41b0999dd84b721bf094e3a0bca7c0ec96f4dae5/rev_ai-2.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58da2b1873f6788f26c0bec3839382a3", "sha256": "6ec3aaa810af3444c47930fce30845a055537bfdcaeafe244139bc265f52044b"}, "downloads": -1, "filename": "rev_ai-2.5.0.tar.gz", "has_sig": false, "md5_digest": "58da2b1873f6788f26c0bec3839382a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15809, "upload_time": "2019-06-25T00:00:51", "upload_time_iso_8601": "2019-06-25T00:00:51.321144Z", "url": "https://files.pythonhosted.org/packages/9d/b5/936f5e21a8d70c3bba117e47a1b8ab0f95b3d16603e1d028b2f1273b636b/rev_ai-2.5.0.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "724f00ae5157a4bc1e57fcc6abe52420", "sha256": "cbe91048a2a4f9074f16d538c1755026946778952f110b8ca714032d37910897"}, "downloads": -1, "filename": "rev_ai-2.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "724f00ae5157a4bc1e57fcc6abe52420", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14507, "upload_time": "2019-08-27T00:34:20", "upload_time_iso_8601": "2019-08-27T00:34:20.925897Z", "url": "https://files.pythonhosted.org/packages/80/88/659bb6397e396ed1ec505a9cb1de66986cd57be165f04bb2ba5b22e3bfde/rev_ai-2.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de6648c14c2d7d4a0fcfe536afa23b33", "sha256": "5d9fff466e09028dec8f31481e635c803c7bd7998e5d264852f52751dedc8dd4"}, "downloads": -1, "filename": "rev_ai-2.6.0.tar.gz", "has_sig": false, "md5_digest": "de6648c14c2d7d4a0fcfe536afa23b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16900, "upload_time": "2019-08-27T00:34:22", "upload_time_iso_8601": "2019-08-27T00:34:22.321760Z", "url": "https://files.pythonhosted.org/packages/4d/5a/0e633429143e7bf8620141cedd28af12e8c210fcc8567eb429d0d882388e/rev_ai-2.6.0.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "5f0197451994553208befe115a1b1670", "sha256": "662351e8fd2f85a70ac698ed23f71d987f851e9717143036861af1c38ac60384"}, "downloads": -1, "filename": "rev_ai-2.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5f0197451994553208befe115a1b1670", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14654, "upload_time": "2019-10-07T16:59:42", "upload_time_iso_8601": "2019-10-07T16:59:42.651858Z", "url": "https://files.pythonhosted.org/packages/07/30/9d9f0a2afeb8fe987cdcb81e6193a59b398874f8767bddf86f7b0b3cb762/rev_ai-2.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f9860bd402dc5c6059fae60e84c1703", "sha256": "e34b272c7ca1ed6bc77dde2b312fb030bad5baa0ae228cf0a01067cacb211a33"}, "downloads": -1, "filename": "rev_ai-2.6.1.tar.gz", "has_sig": false, "md5_digest": "6f9860bd402dc5c6059fae60e84c1703", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17077, "upload_time": "2019-10-07T16:59:44", "upload_time_iso_8601": "2019-10-07T16:59:44.550367Z", "url": "https://files.pythonhosted.org/packages/da/5e/c5b90a6babb7d18df48bb65c50dff39066c185b76aed48ce057060db0bbd/rev_ai-2.6.1.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "0861f4805c865472c129a0f42b6a2f19", "sha256": "3368b59f610ed8d9fabab1e285f1ed5a07575b9f8051001e24852a3ff5b13f27"}, "downloads": -1, "filename": "rev_ai-2.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0861f4805c865472c129a0f42b6a2f19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17766, "upload_time": "2019-11-18T22:01:09", "upload_time_iso_8601": "2019-11-18T22:01:09.147993Z", "url": "https://files.pythonhosted.org/packages/b6/5c/92e48bdbadcc374f6cb90a93545f5676142b9dabac786f7f492be9c1ea39/rev_ai-2.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d2ffe1ebe90a024cf82ff579781954f", "sha256": "25b1cde6a27884077ff4eeb5f093cead54102b4e0b2eefffe7ddbb41014b9022"}, "downloads": -1, "filename": "rev_ai-2.7.0.tar.gz", "has_sig": false, "md5_digest": "6d2ffe1ebe90a024cf82ff579781954f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19273, "upload_time": "2019-11-18T22:01:10", "upload_time_iso_8601": "2019-11-18T22:01:10.646043Z", "url": "https://files.pythonhosted.org/packages/88/64/23f047cbca8d9cac210ff89a09eece21dda34141fc10062e7f353a640f4e/rev_ai-2.7.0.tar.gz", "yanked": false}], "2.8.0": [{"comment_text": "", "digests": {"md5": "b76d9db90769807346faf3ff1b55bbbb", "sha256": "63c30a845dce0f055b81ef557aad11236fa590bc0d1532a30a3ee662c717e9f8"}, "downloads": -1, "filename": "rev_ai-2.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b76d9db90769807346faf3ff1b55bbbb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18165, "upload_time": "2020-03-17T01:46:20", "upload_time_iso_8601": "2020-03-17T01:46:20.547368Z", "url": "https://files.pythonhosted.org/packages/a8/a3/2a3e9aa36ea2122ffb5e8813244edb6c65ab9d7a8204d3a871315103f598/rev_ai-2.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a799e0e406fd6c585cc59ae72c4fe86c", "sha256": "6c85a9cdfd5a891945b68441e55c8f44b87264af9a6d406138bb51fd826f1d42"}, "downloads": -1, "filename": "rev_ai-2.8.0.tar.gz", "has_sig": false, "md5_digest": "a799e0e406fd6c585cc59ae72c4fe86c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24334, "upload_time": "2020-03-17T01:46:21", "upload_time_iso_8601": "2020-03-17T01:46:21.796208Z", "url": "https://files.pythonhosted.org/packages/c2/67/04d2f3d78c004fe1edf11f0fd115b809986b2f9abac7fc45dcac1b2e9904/rev_ai-2.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b76d9db90769807346faf3ff1b55bbbb", "sha256": "63c30a845dce0f055b81ef557aad11236fa590bc0d1532a30a3ee662c717e9f8"}, "downloads": -1, "filename": "rev_ai-2.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b76d9db90769807346faf3ff1b55bbbb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18165, "upload_time": "2020-03-17T01:46:20", "upload_time_iso_8601": "2020-03-17T01:46:20.547368Z", "url": "https://files.pythonhosted.org/packages/a8/a3/2a3e9aa36ea2122ffb5e8813244edb6c65ab9d7a8204d3a871315103f598/rev_ai-2.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a799e0e406fd6c585cc59ae72c4fe86c", "sha256": "6c85a9cdfd5a891945b68441e55c8f44b87264af9a6d406138bb51fd826f1d42"}, "downloads": -1, "filename": "rev_ai-2.8.0.tar.gz", "has_sig": false, "md5_digest": "a799e0e406fd6c585cc59ae72c4fe86c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24334, "upload_time": "2020-03-17T01:46:21", "upload_time_iso_8601": "2020-03-17T01:46:21.796208Z", "url": "https://files.pythonhosted.org/packages/c2/67/04d2f3d78c004fe1edf11f0fd115b809986b2f9abac7fc45dcac1b2e9904/rev_ai-2.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:19 2020"}