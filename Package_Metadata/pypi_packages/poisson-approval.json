{"info": {"author": "Fran\u00e7ois Durand", "author_email": "fradurand@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "================\nPoisson Approval\n================\n\n\n.. image:: https://img.shields.io/pypi/v/poisson_approval.svg\n        :target: https://pypi.python.org/pypi/poisson_approval\n\n.. image:: https://img.shields.io/travis/francois-durand/poisson_approval.svg\n        :target: https://travis-ci.org/francois-durand/poisson_approval\n\n.. image:: https://readthedocs.org/projects/poisson-approval/badge/?version=latest\n        :target: https://poisson-approval.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/francois-durand/poisson_approval/branch/master/graphs/badge.svg\n        :target: https://codecov.io/gh/francois-durand/poisson_approval/branch/master/graphs/badge\n        :alt: Code Coverage\n\n\nPoisson Approval studies the Poisson Game of Approval Voting.\n\n\n* Free software: GNU General Public License v3\n* Documentation: https://poisson-approval.readthedocs.io.\n\n--------\nFeatures\n--------\n\n* Implement only the case of 3 candidates.\n* Deal with ordinal or cardinal profiles.\n* Compute the asymptotic developments of the probability of pivot events when the number of players tends to infinity.\n* Compute the best response to a given tau-vector.\n* Explore automatically a grid of ordinal profiles or a grid of tau-vectors.\n* Perform Monte-Carlo experiments on profiles or tau-vectors.\n* Search an equilibrium by iterated voting or fictitious play.\n* In addition to Approval, implement Plurality and Anti-plurality as Poisson games.\n* Perform numeric or symbolic computation.\n\n-------\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n----------------------------------------------------------------\n0.23.0 (2020-03-29): Improve Iterated Voting and Fictitious Play\n----------------------------------------------------------------\n\n* Random initialization of iterated voting and fictitious play:\n\n  * Add the option ``'random_tau'``: a random tau-vector that is consistent with the voting rule.\n  * Add the option ``'random_tau_undominated'``: a random tau-vector where each voter randomly uses an undominated\n    ballot. Relies on the new method ``Profile.random_tau_undominated``.\n  * Remove the option ``'random_strategy'``: it had an unnatural behavior for Plurality and Anti-Plurality.\n    Subsequently, remove also the method ``Profile.random_strategy``.\n\n* In iterated voting and fictitious play, winning frequencies are computed from t=1 instead of t=0. The motivation is\n  twofold. Firstly, if the result at initialization is essentially arbitrary and, for example, candidate `a` always\n  wins afterwards, we consider it more natural to have a winning frequency of 1 for `a`. Secondly, when using the\n  arithmetic average, the denominator is the number of steps, rather than the number of steps plus one. As a\n  consequence, we updated the helper functions in order to account for this time translation:\n\n  * Replace ``one_over_t_plus_one`` with ``one_over_t``.\n  * Replace ``one_over_sqrt_t_plus_one`` with ``one_over_sqrt_t``.\n  * Replace ``one_over_log_t_plus_two`` with ``one_over_log_t_plus_one``.\n  * Replace ``one_over_log_log_t_plus_fifteen`` with ``one_over_log_log_t_plus_fourteen``.\n\n* Fix a rare bug: in some tau-vectors, when computing the trio event, an offset was found greater than 1, whereas theory\n  shows that it is lower than 1. This used to cause a collateral error when computing the best response with the\n  offset method.\n\n---------------------------------\n0.22.0 (2020-03-22): Binary Plots\n---------------------------------\n\n* Implement *binary plots*, i.e. plots designed to study profiles based on two ranking with varying utilities. Cf. the\n  corresponding tutorial.\n\n  * Intensity heat maps.\n  * Candidate heat maps.\n  * Annotate the Condorcet regions.\n\n* Utilities:\n\n  * Add ``d_candidate_ordinal_utility``: ordinal utility of a candidate for a given preference order.\n  * Add ``my_range``: similar to ``range``, but works also for fractions.\n  * Add ``my_sign``: sign of a number. Return an integer in {-1, 0, 1}, unlike ``np.sign``.\n\n---------------------------------------------------\n0.21.0 (2020-03-12): Iterables and Random Factories\n---------------------------------------------------\n\n* Add new iterables and random factories for profiles, tau-vectors and strategies. These iterables and random factories\n  are very flexible: you can specify that some types have a fixed share, that only some types have a variable share,\n  etc. Cf. the corresponding tutorials and the corresponding section in Reference.\n* Remove ``ExploreGridProfilesOrdinal`` and ``ExploreGridTaus``: their features are included in the new iterables.\n* Remove all classes whose name began with ``Generator``: their features are included in the new random factories.\n* All the methods that had a parameter ``generator`` now have a parameter ``factory`` instead. This choice is due to\n  the fact that the word \"generator\" has another meaning in Python, which could be misleading.\n* ``SimplexToProfile`` works similarly to the new iterables and random factories. In particular it is now allowed to\n  use the same type several times, for example in the fixed shares and in the variable shares.\n* There is a new syntax option to define a ``ProfileHistogram``, which is especially convenient for\n  iterables and random factories.\n* Utilities:\n\n  * Add ``iterator_integers_fixed_sum``: iterate over vectors of integers with a fixed sum.\n  * Add ``iterate_simplex_grid``: iterate over the points in the simplex, with rational coordinates of a given\n    denominator.\n  * Add ``allowed_ballots``: allowed ballots in a voting rule.\n\n* Complete revision of the tutorials.\n\n-----------------------------------------\n0.20.0 (2020-03-03): Symbolic Computation\n-----------------------------------------\n\n* ``Profile`` and its subclasses, ``TauVector``, ``Asymptotic`` and its constructors (such as\n  ``Asymptotic.poisson_value``, ``Asymptotic.poisson_eq``, etc.) accept an optional argument ``symbolic``. If False\n  (default), then all computations are numeric as before. If True, then almost all computations are symbolic; the\n  only exception is when the trio event can be evaluated only via the Dual Magnitude Theorem. Please note that:\n\n  * This feature relies on the external package `sympy` and works with its current version (1.5.1) but we cannot\n    guarantee that it will still work with future versions of `sympy`.\n  * When activated, it slows downs the computation considerably. In particular, it is strongly advised not to use\n    fictitious play or iterated voting in symbolic mode.\n\n* Equality and closeness tests:\n\n  * ``Asymptotic.isclose`` is renamed to ``look_equal``: in numeric mode, it is still a closeness test, but in\n    symbolic mode, it is an equality test.\n  * Remove ``StrategyThreshold.isclose``: this method was not used anymore.\n\n* ``Event`` and its subclasses take a ``TauVector`` as input, instead of the dictionary of its coefficients. Firstly, it\n  speeds up computation. Secondly, it avoids a minor bug in symbolic mode.\n\n* Utilities:\n\n  * Add the classes ``ComputationEngine``, ``ComputationEngineNumeric`` and ``ComputationEngineSymbolic``, defining\n    how some mathematical operations are performed.\n  * Add the function ``computation_engine``: choose the computation engine.\n  * Remove the utility function ``barycenter`` and include it as a method in ``ComputationEngine``.\n\n-------------------------------------\n0.19.0 (2020-02-27): Mixed Strategies\n-------------------------------------\n\n* ``StrategyThreshold``: for each ranking, there is a ``threshold`` (like before) and an optional ``ratio_optimistic``.\n  Voters whose utility for their second candidate is equal to the threshold of the strategy are split: a share\n  ``ratio_optimistic`` behave as if the threshold was higher (in Approval, they vote only for their top candidate)\n  and the rest behave as if the threshold was lower (in Approval, they vote for their two first candidates). Hence the\n  strategy is mixed. Note that this only makes a difference when the profile has \"atoms\" (concentration of voters on a\n  single utility point); currently, this is only the case in ``ProfileDiscrete``.\n* For ``ProfileDiscrete``, fictitious play and iterated voting consider that the responses use a ratio of optimistic\n  voters equal to 1/2.\n* Add ``ProfileCardinalContinuous``: this abstract class is a child of ``ProfileCardinal`` and a parent class\n  of ``ProfileNoisyDiscrete`` and ``ProfileHistogram``. In these profiles, the ratios of optimistic voters are not\n  important because there is no \"atom\".\n* ``GeneratorStrategyThresholdUniform``: for each ranking, the ratio of optimistic voters is also chosen uniformly.\n* The utility ``DictPrintingInOrderIgnoringNone`` now also ignores values that are iterables containing only None.\n\n-------------------------------------------\n0.18.0 (2020-02-26): Improved Ternary Plots\n-------------------------------------------\n\n* Nicer colors than before. For example, an equal mix of candidate `a` (red) and `b` (green) was brownish, whereas it\n  is now yellow. Similarly, a mix of the three candidates (red, green, blue) was gray, and it is now white. Etc.\n* Improved ternary plot shortcuts ``ternary_plot_n_equilibria``, ``ternary_plot_winners_at_equilibrium`` and\n  ``ternary_plot_winning_frequencies``:\n\n  * New versions of these functions with more options. Cf. the tutorial on ternary plots.\n  * Add class ``SimplexToProfile`` to map a point of the simplex to a profile. This includes the possibility of\n    having fixed additional voters.\n\n* ``TernaryAxesSubplotPoisson``:\n\n  * Add methods ``legend_color_patches`` and ``legend_palette``: two different styles of legends for candidate\n    heat maps.\n  * The method ``heatmap_candidates`` has a new parameter ``legend_style``.\n  * The method ``annotate_condorcet`` has a new parameter ``d_order_fixed_share`` to account for fixed additional\n    voters.\n  * In several methods, the old parameters ``color_a``, ``color_b`` and ``color_c`` are suppressed, because\n    the colors for `a`, `b`, `c` are not modifiable anymore.\n\n* Random strategies:\n\n  * Add ``GeneratorStrategyTwelveUniform``.\n  * Add method ``Profile.random_strategy``: return a random strategy that is suitable for the profile (e.g. an ordinal\n    strategy for an ordinal profile, etc.).\n  * ``ProfileCardinal.iterated_voting`` and ``ProfileCardinal.fictitious_play`` now accept the parameter\n    ``init='random'`` for an initialization with a random strategy.\n\n* Add ``Profile.order_and_label``: order and label of a discrete type. This auxiliary function is used for the ternary\n  plots.\n\n----------------------------------------\n0.17.0 (2020-02-24): Analyzed Strategies\n----------------------------------------\n\n* ``Profile`` and its subclasses:\n\n  * The method ``analyzed_strategies`` now inputs an iterator of strategies: it perform an analysis on all the\n    strategies given by this iterator.\n  * Add pre-defined iterators of strategies:\n\n    * ``strategies_ordinal`` is defined for any profile.\n    * ``strategies_pure`` is defined for any discrete profile, such as ``ProfileDiscrete`` or ``ProfileTwelve``.\n    * ``strategies_group`` is defined for any profile where a reasonable notion of \"group\" is defined, such as\n      ``ProfileNoisyDiscrete`` or ``ProfileHistogram``.\n\n  * Add the attributes ``analyzed_strategies_ordinal``, ``analyzed_strategies_pure``, ``analyzed_strategies_group``.\n    Not only do they provide shortcuts combining ``analyzed_strategies`` with the relevant iterator, but they also have\n    the added value of being cached properties: if the user accesses the same attribute several times, it is only\n    computed once.\n\n  * Remove the attribute ``winners_at_equilibrium``. Instead, the corresponding attribute is added to the class\n    ``AnalyzedStrategies``. This gives more flexibility because it is defined for any ``AnalyzedStrategies`` object.\n\n* The consequences on ternary plots are temporary and are likely to change in the near future, with a new release\n  focusing on improved ternary plots.\n\n  * ``ternary_plot_winners_at_equilibrium`` becomes ``ternary_plot_winners_at_equilibrium_ordinal``.\n  * ``ternary_plot_n_bloc_equilibria`` becomes ``ternary_plot_n_equilibria_ordinal``.\n\n* ``Strategy.deepcopy_with_attached_profile`` now also copies the voting rule of the given profile.\n\n-------------------------------------------------------------------------\n0.16.1 (2020-02-24): More Flexible Initialization of ProfileNoisyDiscrete\n-------------------------------------------------------------------------\n\n* ``ProfileNoisyDiscrete``: add a parameter ``noise`` that enables not to mention explicitly the value of the noise for\n  each group of voters. This is especially convenient in the quite common case where all groups of voters have the\n  same noise.\n\n-----------------------------------------\n0.16.0 (2020-02-22): ProfileNoisyDiscrete\n-----------------------------------------\n\n* Add ``ProfileNoisyDiscrete``: a profile with a discrete distribution of voters, with noise.\n\n--------------------------------\n0.15.0 (2020-02-20): Weak Orders\n--------------------------------\n\n* Implement weak orders:\n\n  * ``Profile`` now has attributes ``d_weak_order_share``, ``support_in_weak_orders``, ``contains_weak_orders``,\n    ``contains_rankings``, ``d_ballot_weak_voters_sincere``, ``d_ballot_weak_voters_fanatic``.\n  * Subclasses of Profile have a parameter ``d_weak_order_share``.\n  * Remove methods ``ProfileOrdinal.support`` and ``ProfileOrdinal.is_generic``: with the presence of weak orders,\n    their names had become misleading, whereas ``support_in_rankings`` and ``is_generic_in_ranking`` is non-ambiguous.\n  * ``TernaryAxesSubplotPoisson.annotate_condorcet`` now also works with weak orders. However, it may not work on\n    all distributions because it relies on the external package `shapely`. If there are only rankings, it should still\n    work anyway.\n  * Add utilities ``is_weak_order``, ``is_lover``, ``is_hater``, ``sort_weak_order``.\n\n* Add shortcut functions for some common ternary plots:\n\n  * ``ternary_plot_n_bloc_equilibria``: number of bloc equilibria.\n  * ``ternary_plot_winners_at_equilibrium``: winners at equilibrium.\n  * ``ternary_plot_winning_frequencies``: winning frequencies in fictitious play.\n\n* Methods ``ProfileCardinal.iterated_voting`` and ``ProfileCardinal.fictitious_play`` have a new parameter\n  ``winning_frequency_update_ratio``, indicating how the winning frequencies are computed in case of non-convergence.\n  Note however that in case of convergence to a periodical orbit (for iterated voting), it remains the arithmetic\n  average anyway.\n\n* Add utility ``my_division``: division of two numbers, trying to be exact if it is reasonable.\n\n---------------------------------------------------------------------------------\n0.14.0 (2020-02-16): Flexible Initialization of Iterated Voting / Fictitious Play\n---------------------------------------------------------------------------------\n\n* Instead of a parameter ``strategy_ini``, the methods ``ProfileCardinal.iterated_voting`` and\n  ``ProfileCardinal.fictitious_play`` now have a parameter ``init`` that can be either a strategy (like before), or a\n  tau-vector, or a string ``'sincere'`` or ``'fanatic'``.\n\n----------------------------------\n0.13.0 (2020-02-16): Ternary Plots\n----------------------------------\n\n* Draw plots on the simplex where points have 3 coordinates summing to 1. Cf. the corresponding tutorial.\n\n  * Intensity heat maps.\n  * Candidate heat maps.\n  * Annotate the Condorcet regions.\n\n* Add ``Profile.winners_at_equilibrium``: for the classes of profile that have a method ``analyzed_strategies``,\n  give the set of winners at equilibrium.\n\n-----------------------------------------------------------------\n0.12.0 (2020-02-09): GeneratorProfileHistogramSinglePeakedUniform\n-----------------------------------------------------------------\n\n* Add ``GeneratorProfileHistogramSinglePeakedUniform``: a generator of single-peaked histogram-profiles following\n  the uniform distribution.\n* Add examples of functions to be used as update ratios for ``ProfileCardinal.fictitious_play``:\n  ``one_over_t_plus_one``, ``one_over_sqrt_t_plus_one``, ``one_over_log_t_plus_two``,\n  ``one_over_log_log_t_plus_fifteen``.\n\n-----------------------------------------------------------------------------\n0.11.0 (2020-02-09): Winning frequencies in iterated voting / fictitious play\n-----------------------------------------------------------------------------\n\n* ``ProfileCardinal.iterated_voting`` and ``ProfileCardinal.fictitious_play`` now also output the winning frequency of\n  each candidate (limit frequency in case of convergence, frequency over the history otherwise).\n* New utilities:\n\n  * Add ``candidates_to_d_candidate_probability``: convert a set of candidates to a dictionary of probabilities (random\n    tie-break)\n  * Add ``candidates_to_probabilities``: convert a set of candidates to an array of probabilities (random tie-break).\n  * Add ``array_to_d_candidate_value``: convert an array to a dictionary of candidates and values.\n  * Add ``d_candidate_value_to_array``: convert a dictionary of candidates and values to an array.\n\n--------------------------------------------------------\n0.10.0 (2020-02-09): ProfileDiscrete.analyzed_strategies\n--------------------------------------------------------\n\n* Implement ``ProfileDiscrete.analyzed_strategies``: exhaustive analysis of all pure strategies of the profile.\n\n------------------------------------------------\n0.9.0 (2020-02-09): Plurality and Anti-plurality\n------------------------------------------------\n\n* Implement Plurality and Anti-plurality (cf. the corresponding tutorial).\n* Python 3.5 is not officially supported anymore. However, in practice, the package should still essentially work with\n  Python 3.5, the only notable difference being the order in which the dictionaries are printed.\n* New utilities:\n\n  * Add ``ballot_two``: ballot for the second candidate of a ranking (used for Plurality).\n  * Add ``ballot_one_three``: ballot against the second candidate of a ranking (used for Anti-plurality).\n  * Add ``ballot_low_u`` and ``ballot_high_u``: the ballot chosen by the voters who have a low (resp. high) utility\n    for their middle candidate, depending on the voting rule.\n  * Add ``product_dict``: Cartesian product for a dictionary of iterables.\n  * Add ``DictPrintingInOrderIgnoringNone``: dictionary that prints in the order of the keys, ignoring value None.\n  * In the ``UtilCache`` module, add ``property_deleting_cache``: define a property that deletes the cache when set or\n    deleted. This is used for parameters like ``ratio_sincere``, ``voting_rule``, etc.\n\n-----------------------------------------------------------------\n0.8.1 (2020-02-04): Better Handling of Edge Cases in BestResponse\n-----------------------------------------------------------------\n\n* ``BestResponse``: the focus of this release is to correct rare bugs that used to happen when some offsets are very\n  close to 1.\n\n  * API change: ``BestResponse`` now takes as parameters the tau-vector and the ranking, instead of all the events\n    that are used for the computation.\n  * Exchanged the justifications ``'Easy vs difficult pivot'`` and ``'Difficult vs easy pivot'`` (their usages\n    were switched, even if the result itself was correct).\n  * Use the asymptotic method only when there are two consecutive zeros in the \"compass diagram\" of the tau-vector\n    (instead of: whenever it gives a result). The motivation is that the asymptotic method may rely on events that rely\n    more on numerical approximation than the limit pivot theorem approach.\n  * To determine whether pivots are easy or difficult, we rely on expected scores in the duo events, instead of the\n    pseudo-offsets of the trio. The motivation is that in some cases, the trio is computed with a numerical optimizer\n    that relies more on numerical approximation than the duo events, which use only basic operations like addition,\n    multiplication, etc. In the rare cases where the two methods differ, the latter is thus more reliable.\n  * Add a sub-algorithm of the \"Offset method\", called \"Offset method with trio\n    approximation correction\". This is used in some rare cases where both pivots are difficult, but the numeric\n    approximations of the trio event lead to an offset that is equal or even slightly greater than 1 (which is abnormal\n    and leads to infinite geometric sums). In those cases, we now consider that the offset is lower and infinitely close\n    to 1.\n  * Corrected a bug in the asymptotic method that could happen when the two personalized pivots had very close\n    magnitudes. This uses the correction of ``Asymptotic.limit`` mentioned below.\n\n* ``TauVector``: added the attribute ``has_two_consecutive_zeros``.\n\n* ``Event``: now computes the pseudo-offsets, e.g. ``psi_a``, ``psi_ab``, etc.\n\n* ``Asymptotic``: handles some edge cases more nicely.\n\n  * ``__str__`` displays a coefficient as 0, 1 or -1 only if it is equal to that value. Close is not enough.\n  * ``limit`` does not use closeness to 0. It is not its role to decide what coefficients are negligible in the context.\n    Only operations like multiplication are allowed to use closeness: for example, if ``mu_1`` and ``- mu_2`` are\n    relatively close, the multiplication operator is allowed to decide that ``mu_1 + mu_2`` is equal to 0.\n  * In multiplication, when the two magnitudes are close, the resulting magnitude is now always equal to the maximum.\n    The same applies for the resulting `nu` when the `nu`'s are also equal.\n\n* ``cached_property``: corrected a bug. In the case of nested cached properties, the inner one was sometimes not\n  recorded in cache. It did not lead to incorrect results but slowed down the program.\n\n----------------------------------\n0.8.0 (2020-01-30): Fanatic voters\n----------------------------------\n\n* Implement the notion of fanatic voting, a variant of sincere voting: a given ratio of voters vote for their top\n  candidate only. This is implemented for all subclasses of ``Profile``.\n* The utility ``barycenter`` now accepts iterables.\n* Corrected bug: ``Profile.standardized_version`` now takes into account the auxiliary parameters like\n  ``ratio_sincere``, ``well_informed_voters``, etc.\n\n-----------------------------------\n0.7.0 (2020-01-30): ProfileDiscrete\n-----------------------------------\n\n* Add ``ProfileDiscrete``: a profile with a discrete distribution of voters.\n* Subclasses of ``Profile``: better handling of the additional parameters like ``well_informed_voters`` or\n  ``ratio_sincere``. In the conversions to string (``str`` or ``repr``), they are now mentioned. They are also used in\n  the equality tests between two profiles.\n\n-----------------------------------\n0.6.0 (2020-01-29): Fictitious Play\n-----------------------------------\n\n* Implement ``ProfileCardinal.fictitious_play``, where the update ratios of the perceived tau-vector and the actual\n  tau-vector can be functions of the time. It is also faster that ``ProfileCardinal.iterated_voting``, but can\n  not detect cycles (only convergence).\n* ``ProfileCardinal.iterated_voting_taus`` is renamed to ``ProfileCardinal.iterated_voting``. It has been generalized\n  by implementing a notion of perceived tau-vector, like for ``ProfileCardinal.fictitious_play``. The syntax has been\n  modified in consequence.\n* ``ProfileCardinal.iterated_voting_strategies`` is deprecated and suppressed.\n* Iterated voting and fictitious play do not need a ``StrategyThreshold`` as initial strategy, but any strategy that is\n  consistent with the profile subclass. For example, with ``ProfileTwelve``, you can use a ``StrategyTwelve``.\n* ``Strategy.profile`` is now a property that can be reassigned after the creation of the object.\n* Add ``Strategy.deepcopy_with_attached_profile``: make a deep copy and attach a given profile.\n* Add the utility ``to_callable``: convert an object to a callable (making it a constant function if it is not\n  callable already).\n\n----------------------------------------------------------\n0.5.1 (2020-01-18): Configure Codecov and Improve Coverage\n----------------------------------------------------------\n\n* Configure Codecov.\n* Reach 100% coverage for this version.\n\n----------------------------------------------------------------------------\n0.5.0 (2020-01-11): Sincere Voting and Progressive Update in Iterated Voting\n----------------------------------------------------------------------------\n\n* In iterated voting, implement the possibility to move only *progressively* towards the best response:\n\n  * Add ``ProfileCardinal.iterated_voting_taus``: at each iteration, a given ratio of voters update their ballot.\n  * Replace the former method ``ProfileCardinal.iterated_voting`` by ``ProfileCardinal.iterated_voting_strategies``:\n    as in former versions, at each iteration, the threshold utility of each ranking's strategy is moved in the\n    direction of the best response's threshold utility. The method now returns a cycle of tau-vectors and the\n    corresponding cycle of best response strategies, in order to be consistent with\n    ``ProfileCardinal.iterated_voting_taus``.\n  * Add the utility ``barycenter``: compute a barycenter while respecting the type of one input if the other input has\n    weight 0.\n  * Accelerate the algorithm used in iterated voting.\n\n* In ``ProfileCardinal``, add the possibility of partial sincere voting:\n\n  * Add parameter ``ratio_sincere``: ratio of sincere voters.\n  * Add property ``tau_sincere``: the tau-vector if all voters vote sincerely.\n  * The former method ``tau`` is renamed ``tau_strategic``: the tau_vector if all voters vote strategically.\n  * The new method ``tau`` takes both sincere and strategic voting into account.\n  * The method ``is_equilibrium`` has a new implementation to take this feature into account.\n\n* Add ``TauVector.isclose``: whether the tau-vector is close to another tau-vector (in the sense of\n  ``math.isclose``). This method is used by the new version of ``ProfileCardinal.is_equilibrium``.\n\n* Add ``Profile.best_responses_to_strategy``: convert a dictionary of best responses to a ``StrategyThreshold`` that\n  mentions only the rankings that are present in the profile.\n\n* In random generators of profiles (``GeneratorProfileOrdinalUniform``, ``GeneratorProfileOrdinalGridUniform``,\n  ``GeneratorProfileOrdinalVariations``, ``GeneratorProfileHistogramUniform``): instead of having explicit arguments\n  like ``well_informed_voters`` or ``ratio_sincere``, there are ``**kwargs`` that are directly passed to the\n  ``__init__`` of the relevant Profile subclass.\n\n* Update the tutorials with these new features.\n\n----------------------------------------------\n0.4.0 (2020-01-08): Add ``image_distribution``\n----------------------------------------------\n\n* Add ``image_distribution``: estimate the distribution of ``f(something)`` for a random ``something``.\n* Update the tutorial on mass simulations with this new feature.\n\n-----------------------------------------\n0.3.0 (2020-01-08): New Random Generators\n-----------------------------------------\n\n* Add new random generators:\n\n  * ``GeneratorExamples``: run another generator until the generated object meets a given test.\n  * ``GeneratorStrategyOrdinalUniform``: draw a StrategyOrdinal uniformly.\n  * ``GeneratorProfileOrdinalGridUniform``: draw a ProfileOrdinal uniformly on a grid of rational numbers.\n  * ``GeneratorTauVectorGridUniform``: draw a TauVector uniformly on a grid of rational numbers.\n\n* Utilities:\n\n  * Add ``rand_integers_fixed_sum``: draw an array of integers with a given sum.\n  * Add ``rand_simplex_grid``: draw a random point in the simplex, with rational coordinates of a given denominator.\n  * Update ``probability``: allow for a tuple of generators.\n\n* Tutorials:\n\n  * Add a tutorial on asymptotic developments.\n  * Update the tutorial on mass simulations with the new features.\n\n------------------------------------------\n0.2.1 (2020-01-05): Fix Deployment on PyPI\n------------------------------------------\n\n* Relaunch deployment.\n\n--------------------------------------------------------------\n0.2.0 (2020-01-05): Add Tutorials + Various Minor Improvements\n--------------------------------------------------------------\n\n* Add ``GeneratorProfileStrategyThreshold``.\n* Add ``ProfileHistogram.plot_cdf``.\n* Modify ``masks_distribution``: remove the trailing zeros. This has the same impact on\n  ``ProfileOrdinal.distribution_equilibria``.\n* Modify ``NiceStatsProfileOrdinal.plot_cutoff``: center the textual indications.\n* Replace all notations ``r`` with ``profile`` and ``sigma`` with ``strategy``.\n* Add tutorials.\n\n-----------------------------------------------------------------\n0.1.1 (2019-12-24): Convert all the Documentation to NumPy Format\n-----------------------------------------------------------------\n\n* Convert all the documentation to NumPy format, making it more readable in plain text.\n\n-----------------------------------------\n0.1.0 (2019-12-20): First release on PyPI\n-----------------------------------------\n\n* First release on PyPI.\n* Implement only the case of 3 candidates.\n* Deal with ordinal or cardinal profiles.\n* Compute the asymptotic developments of the probability of pivot events when the number of players tends to infinity.\n* Compute the best response to a given tau-vector.\n* Explore automatically a grid of ordinal profiles or a grid of tau-vectors.\n* Perform Monte-Carlo experiments on profiles or tau-vectors.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/francois-durand/poisson_approval", "keywords": "poisson_approval", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "poisson-approval", "package_url": "https://pypi.org/project/poisson-approval/", "platform": "", "project_url": "https://pypi.org/project/poisson-approval/", "project_urls": {"Homepage": "https://github.com/francois-durand/poisson_approval"}, "release_url": "https://pypi.org/project/poisson-approval/0.23.0/", "requires_dist": ["numpy", "scipy", "matplotlib", "python-ternary", "shapely", "sympy"], "requires_python": ">=3.6", "summary": "Poisson Approval studies the Poisson Game of Approval Voting.", "version": "0.23.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"poisson-approval\">\n<h2>Poisson Approval</h2>\n<a href=\"https://pypi.python.org/pypi/poisson_approval\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/poisson_approval.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e1f2dee660052121981839f92db682eb04f1ddb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706f6973736f6e5f617070726f76616c2e737667\"></a>\n<a href=\"https://travis-ci.org/francois-durand/poisson_approval\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/francois-durand/poisson_approval.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd4e1cea96a91a35048ec4ecec35eacfa8dff0ed/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6672616e636f69732d647572616e642f706f6973736f6e5f617070726f76616c2e737667\"></a>\n<a href=\"https://poisson-approval.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97a87e972e71e5048735c98b0b4ee4fff08e18d4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706f6973736f6e2d617070726f76616c2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/francois-durand/poisson_approval/branch/master/graphs/badge\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e937dff3d59e5657209857361669145cb36575f/68747470733a2f2f636f6465636f762e696f2f67682f6672616e636f69732d647572616e642f706f6973736f6e5f617070726f76616c2f6272616e63682f6d61737465722f6772617068732f62616467652e737667\"></a>\n<p>Poisson Approval studies the Poisson Game of Approval Voting.</p>\n<ul>\n<li>Free software: GNU General Public License v3</li>\n<li>Documentation: <a href=\"https://poisson-approval.readthedocs.io\" rel=\"nofollow\">https://poisson-approval.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Implement only the case of 3 candidates.</li>\n<li>Deal with ordinal or cardinal profiles.</li>\n<li>Compute the asymptotic developments of the probability of pivot events when the number of players tends to infinity.</li>\n<li>Compute the best response to a given tau-vector.</li>\n<li>Explore automatically a grid of ordinal profiles or a grid of tau-vectors.</li>\n<li>Perform Monte-Carlo experiments on profiles or tau-vectors.</li>\n<li>Search an equilibrium by iterated voting or fictitious play.</li>\n<li>In addition to Approval, implement Plurality and Anti-plurality as Poisson games.</li>\n<li>Perform numeric or symbolic computation.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"improve-iterated-voting-and-fictitious-play\">\n<h3>0.23.0 (2020-03-29): Improve Iterated Voting and Fictitious Play</h3>\n<ul>\n<li>Random initialization of iterated voting and fictitious play:<ul>\n<li>Add the option <tt>'random_tau'</tt>: a random tau-vector that is consistent with the voting rule.</li>\n<li>Add the option <tt>'random_tau_undominated'</tt>: a random tau-vector where each voter randomly uses an undominated\nballot. Relies on the new method <tt>Profile.random_tau_undominated</tt>.</li>\n<li>Remove the option <tt>'random_strategy'</tt>: it had an unnatural behavior for Plurality and Anti-Plurality.\nSubsequently, remove also the method <tt>Profile.random_strategy</tt>.</li>\n</ul>\n</li>\n<li>In iterated voting and fictitious play, winning frequencies are computed from t=1 instead of t=0. The motivation is\ntwofold. Firstly, if the result at initialization is essentially arbitrary and, for example, candidate <cite>a</cite> always\nwins afterwards, we consider it more natural to have a winning frequency of 1 for <cite>a</cite>. Secondly, when using the\narithmetic average, the denominator is the number of steps, rather than the number of steps plus one. As a\nconsequence, we updated the helper functions in order to account for this time translation:<ul>\n<li>Replace <tt>one_over_t_plus_one</tt> with <tt>one_over_t</tt>.</li>\n<li>Replace <tt>one_over_sqrt_t_plus_one</tt> with <tt>one_over_sqrt_t</tt>.</li>\n<li>Replace <tt>one_over_log_t_plus_two</tt> with <tt>one_over_log_t_plus_one</tt>.</li>\n<li>Replace <tt>one_over_log_log_t_plus_fifteen</tt> with <tt>one_over_log_log_t_plus_fourteen</tt>.</li>\n</ul>\n</li>\n<li>Fix a rare bug: in some tau-vectors, when computing the trio event, an offset was found greater than 1, whereas theory\nshows that it is lower than 1. This used to cause a collateral error when computing the best response with the\noffset method.</li>\n</ul>\n</div>\n<div id=\"binary-plots\">\n<h3>0.22.0 (2020-03-22): Binary Plots</h3>\n<ul>\n<li>Implement <em>binary plots</em>, i.e. plots designed to study profiles based on two ranking with varying utilities. Cf. the\ncorresponding tutorial.<ul>\n<li>Intensity heat maps.</li>\n<li>Candidate heat maps.</li>\n<li>Annotate the Condorcet regions.</li>\n</ul>\n</li>\n<li>Utilities:<ul>\n<li>Add <tt>d_candidate_ordinal_utility</tt>: ordinal utility of a candidate for a given preference order.</li>\n<li>Add <tt>my_range</tt>: similar to <tt>range</tt>, but works also for fractions.</li>\n<li>Add <tt>my_sign</tt>: sign of a number. Return an integer in {-1, 0, 1}, unlike <tt>np.sign</tt>.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"iterables-and-random-factories\">\n<h3>0.21.0 (2020-03-12): Iterables and Random Factories</h3>\n<ul>\n<li>Add new iterables and random factories for profiles, tau-vectors and strategies. These iterables and random factories\nare very flexible: you can specify that some types have a fixed share, that only some types have a variable share,\netc. Cf. the corresponding tutorials and the corresponding section in Reference.</li>\n<li>Remove <tt>ExploreGridProfilesOrdinal</tt> and <tt>ExploreGridTaus</tt>: their features are included in the new iterables.</li>\n<li>Remove all classes whose name began with <tt>Generator</tt>: their features are included in the new random factories.</li>\n<li>All the methods that had a parameter <tt>generator</tt> now have a parameter <tt>factory</tt> instead. This choice is due to\nthe fact that the word \u201cgenerator\u201d has another meaning in Python, which could be misleading.</li>\n<li><tt>SimplexToProfile</tt> works similarly to the new iterables and random factories. In particular it is now allowed to\nuse the same type several times, for example in the fixed shares and in the variable shares.</li>\n<li>There is a new syntax option to define a <tt>ProfileHistogram</tt>, which is especially convenient for\niterables and random factories.</li>\n<li>Utilities:<ul>\n<li>Add <tt>iterator_integers_fixed_sum</tt>: iterate over vectors of integers with a fixed sum.</li>\n<li>Add <tt>iterate_simplex_grid</tt>: iterate over the points in the simplex, with rational coordinates of a given\ndenominator.</li>\n<li>Add <tt>allowed_ballots</tt>: allowed ballots in a voting rule.</li>\n</ul>\n</li>\n<li>Complete revision of the tutorials.</li>\n</ul>\n</div>\n<div id=\"symbolic-computation\">\n<h3>0.20.0 (2020-03-03): Symbolic Computation</h3>\n<ul>\n<li><tt>Profile</tt> and its subclasses, <tt>TauVector</tt>, <tt>Asymptotic</tt> and its constructors (such as\n<tt>Asymptotic.poisson_value</tt>, <tt>Asymptotic.poisson_eq</tt>, etc.) accept an optional argument <tt>symbolic</tt>. If False\n(default), then all computations are numeric as before. If True, then almost all computations are symbolic; the\nonly exception is when the trio event can be evaluated only via the Dual Magnitude Theorem. Please note that:<ul>\n<li>This feature relies on the external package <cite>sympy</cite> and works with its current version (1.5.1) but we cannot\nguarantee that it will still work with future versions of <cite>sympy</cite>.</li>\n<li>When activated, it slows downs the computation considerably. In particular, it is strongly advised not to use\nfictitious play or iterated voting in symbolic mode.</li>\n</ul>\n</li>\n<li>Equality and closeness tests:<ul>\n<li><tt>Asymptotic.isclose</tt> is renamed to <tt>look_equal</tt>: in numeric mode, it is still a closeness test, but in\nsymbolic mode, it is an equality test.</li>\n<li>Remove <tt>StrategyThreshold.isclose</tt>: this method was not used anymore.</li>\n</ul>\n</li>\n<li><tt>Event</tt> and its subclasses take a <tt>TauVector</tt> as input, instead of the dictionary of its coefficients. Firstly, it\nspeeds up computation. Secondly, it avoids a minor bug in symbolic mode.</li>\n<li>Utilities:<ul>\n<li>Add the classes <tt>ComputationEngine</tt>, <tt>ComputationEngineNumeric</tt> and <tt>ComputationEngineSymbolic</tt>, defining\nhow some mathematical operations are performed.</li>\n<li>Add the function <tt>computation_engine</tt>: choose the computation engine.</li>\n<li>Remove the utility function <tt>barycenter</tt> and include it as a method in <tt>ComputationEngine</tt>.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"mixed-strategies\">\n<h3>0.19.0 (2020-02-27): Mixed Strategies</h3>\n<ul>\n<li><tt>StrategyThreshold</tt>: for each ranking, there is a <tt>threshold</tt> (like before) and an optional <tt>ratio_optimistic</tt>.\nVoters whose utility for their second candidate is equal to the threshold of the strategy are split: a share\n<tt>ratio_optimistic</tt> behave as if the threshold was higher (in Approval, they vote only for their top candidate)\nand the rest behave as if the threshold was lower (in Approval, they vote for their two first candidates). Hence the\nstrategy is mixed. Note that this only makes a difference when the profile has \u201catoms\u201d (concentration of voters on a\nsingle utility point); currently, this is only the case in <tt>ProfileDiscrete</tt>.</li>\n<li>For <tt>ProfileDiscrete</tt>, fictitious play and iterated voting consider that the responses use a ratio of optimistic\nvoters equal to 1/2.</li>\n<li>Add <tt>ProfileCardinalContinuous</tt>: this abstract class is a child of <tt>ProfileCardinal</tt> and a parent class\nof <tt>ProfileNoisyDiscrete</tt> and <tt>ProfileHistogram</tt>. In these profiles, the ratios of optimistic voters are not\nimportant because there is no \u201catom\u201d.</li>\n<li><tt>GeneratorStrategyThresholdUniform</tt>: for each ranking, the ratio of optimistic voters is also chosen uniformly.</li>\n<li>The utility <tt>DictPrintingInOrderIgnoringNone</tt> now also ignores values that are iterables containing only None.</li>\n</ul>\n</div>\n<div id=\"improved-ternary-plots\">\n<h3>0.18.0 (2020-02-26): Improved Ternary Plots</h3>\n<ul>\n<li>Nicer colors than before. For example, an equal mix of candidate <cite>a</cite> (red) and <cite>b</cite> (green) was brownish, whereas it\nis now yellow. Similarly, a mix of the three candidates (red, green, blue) was gray, and it is now white. Etc.</li>\n<li>Improved ternary plot shortcuts <tt>ternary_plot_n_equilibria</tt>, <tt>ternary_plot_winners_at_equilibrium</tt> and\n<tt>ternary_plot_winning_frequencies</tt>:<ul>\n<li>New versions of these functions with more options. Cf. the tutorial on ternary plots.</li>\n<li>Add class <tt>SimplexToProfile</tt> to map a point of the simplex to a profile. This includes the possibility of\nhaving fixed additional voters.</li>\n</ul>\n</li>\n<li><tt>TernaryAxesSubplotPoisson</tt>:<ul>\n<li>Add methods <tt>legend_color_patches</tt> and <tt>legend_palette</tt>: two different styles of legends for candidate\nheat maps.</li>\n<li>The method <tt>heatmap_candidates</tt> has a new parameter <tt>legend_style</tt>.</li>\n<li>The method <tt>annotate_condorcet</tt> has a new parameter <tt>d_order_fixed_share</tt> to account for fixed additional\nvoters.</li>\n<li>In several methods, the old parameters <tt>color_a</tt>, <tt>color_b</tt> and <tt>color_c</tt> are suppressed, because\nthe colors for <cite>a</cite>, <cite>b</cite>, <cite>c</cite> are not modifiable anymore.</li>\n</ul>\n</li>\n<li>Random strategies:<ul>\n<li>Add <tt>GeneratorStrategyTwelveUniform</tt>.</li>\n<li>Add method <tt>Profile.random_strategy</tt>: return a random strategy that is suitable for the profile (e.g. an ordinal\nstrategy for an ordinal profile, etc.).</li>\n<li><tt>ProfileCardinal.iterated_voting</tt> and <tt>ProfileCardinal.fictitious_play</tt> now accept the parameter\n<tt><span class=\"pre\">init='random'</span></tt> for an initialization with a random strategy.</li>\n</ul>\n</li>\n<li>Add <tt>Profile.order_and_label</tt>: order and label of a discrete type. This auxiliary function is used for the ternary\nplots.</li>\n</ul>\n</div>\n<div id=\"analyzed-strategies\">\n<h3>0.17.0 (2020-02-24): Analyzed Strategies</h3>\n<ul>\n<li><tt>Profile</tt> and its subclasses:<ul>\n<li>The method <tt>analyzed_strategies</tt> now inputs an iterator of strategies: it perform an analysis on all the\nstrategies given by this iterator.</li>\n<li>Add pre-defined iterators of strategies:<ul>\n<li><tt>strategies_ordinal</tt> is defined for any profile.</li>\n<li><tt>strategies_pure</tt> is defined for any discrete profile, such as <tt>ProfileDiscrete</tt> or <tt>ProfileTwelve</tt>.</li>\n<li><tt>strategies_group</tt> is defined for any profile where a reasonable notion of \u201cgroup\u201d is defined, such as\n<tt>ProfileNoisyDiscrete</tt> or <tt>ProfileHistogram</tt>.</li>\n</ul>\n</li>\n<li>Add the attributes <tt>analyzed_strategies_ordinal</tt>, <tt>analyzed_strategies_pure</tt>, <tt>analyzed_strategies_group</tt>.\nNot only do they provide shortcuts combining <tt>analyzed_strategies</tt> with the relevant iterator, but they also have\nthe added value of being cached properties: if the user accesses the same attribute several times, it is only\ncomputed once.</li>\n<li>Remove the attribute <tt>winners_at_equilibrium</tt>. Instead, the corresponding attribute is added to the class\n<tt>AnalyzedStrategies</tt>. This gives more flexibility because it is defined for any <tt>AnalyzedStrategies</tt> object.</li>\n</ul>\n</li>\n<li>The consequences on ternary plots are temporary and are likely to change in the near future, with a new release\nfocusing on improved ternary plots.<ul>\n<li><tt>ternary_plot_winners_at_equilibrium</tt> becomes <tt>ternary_plot_winners_at_equilibrium_ordinal</tt>.</li>\n<li><tt>ternary_plot_n_bloc_equilibria</tt> becomes <tt>ternary_plot_n_equilibria_ordinal</tt>.</li>\n</ul>\n</li>\n<li><tt>Strategy.deepcopy_with_attached_profile</tt> now also copies the voting rule of the given profile.</li>\n</ul>\n</div>\n<div id=\"more-flexible-initialization-of-profilenoisydiscrete\">\n<h3>0.16.1 (2020-02-24): More Flexible Initialization of ProfileNoisyDiscrete</h3>\n<ul>\n<li><tt>ProfileNoisyDiscrete</tt>: add a parameter <tt>noise</tt> that enables not to mention explicitly the value of the noise for\neach group of voters. This is especially convenient in the quite common case where all groups of voters have the\nsame noise.</li>\n</ul>\n</div>\n<div id=\"profilenoisydiscrete\">\n<h3>0.16.0 (2020-02-22): ProfileNoisyDiscrete</h3>\n<ul>\n<li>Add <tt>ProfileNoisyDiscrete</tt>: a profile with a discrete distribution of voters, with noise.</li>\n</ul>\n</div>\n<div id=\"weak-orders\">\n<h3>0.15.0 (2020-02-20): Weak Orders</h3>\n<ul>\n<li>Implement weak orders:<ul>\n<li><tt>Profile</tt> now has attributes <tt>d_weak_order_share</tt>, <tt>support_in_weak_orders</tt>, <tt>contains_weak_orders</tt>,\n<tt>contains_rankings</tt>, <tt>d_ballot_weak_voters_sincere</tt>, <tt>d_ballot_weak_voters_fanatic</tt>.</li>\n<li>Subclasses of Profile have a parameter <tt>d_weak_order_share</tt>.</li>\n<li>Remove methods <tt>ProfileOrdinal.support</tt> and <tt>ProfileOrdinal.is_generic</tt>: with the presence of weak orders,\ntheir names had become misleading, whereas <tt>support_in_rankings</tt> and <tt>is_generic_in_ranking</tt> is non-ambiguous.</li>\n<li><tt>TernaryAxesSubplotPoisson.annotate_condorcet</tt> now also works with weak orders. However, it may not work on\nall distributions because it relies on the external package <cite>shapely</cite>. If there are only rankings, it should still\nwork anyway.</li>\n<li>Add utilities <tt>is_weak_order</tt>, <tt>is_lover</tt>, <tt>is_hater</tt>, <tt>sort_weak_order</tt>.</li>\n</ul>\n</li>\n<li>Add shortcut functions for some common ternary plots:<ul>\n<li><tt>ternary_plot_n_bloc_equilibria</tt>: number of bloc equilibria.</li>\n<li><tt>ternary_plot_winners_at_equilibrium</tt>: winners at equilibrium.</li>\n<li><tt>ternary_plot_winning_frequencies</tt>: winning frequencies in fictitious play.</li>\n</ul>\n</li>\n<li>Methods <tt>ProfileCardinal.iterated_voting</tt> and <tt>ProfileCardinal.fictitious_play</tt> have a new parameter\n<tt>winning_frequency_update_ratio</tt>, indicating how the winning frequencies are computed in case of non-convergence.\nNote however that in case of convergence to a periodical orbit (for iterated voting), it remains the arithmetic\naverage anyway.</li>\n<li>Add utility <tt>my_division</tt>: division of two numbers, trying to be exact if it is reasonable.</li>\n</ul>\n</div>\n<div id=\"flexible-initialization-of-iterated-voting-fictitious-play\">\n<h3>0.14.0 (2020-02-16): Flexible Initialization of Iterated Voting / Fictitious Play</h3>\n<ul>\n<li>Instead of a parameter <tt>strategy_ini</tt>, the methods <tt>ProfileCardinal.iterated_voting</tt> and\n<tt>ProfileCardinal.fictitious_play</tt> now have a parameter <tt>init</tt> that can be either a strategy (like before), or a\ntau-vector, or a string <tt>'sincere'</tt> or <tt>'fanatic'</tt>.</li>\n</ul>\n</div>\n<div id=\"ternary-plots\">\n<h3>0.13.0 (2020-02-16): Ternary Plots</h3>\n<ul>\n<li>Draw plots on the simplex where points have 3 coordinates summing to 1. Cf. the corresponding tutorial.<ul>\n<li>Intensity heat maps.</li>\n<li>Candidate heat maps.</li>\n<li>Annotate the Condorcet regions.</li>\n</ul>\n</li>\n<li>Add <tt>Profile.winners_at_equilibrium</tt>: for the classes of profile that have a method <tt>analyzed_strategies</tt>,\ngive the set of winners at equilibrium.</li>\n</ul>\n</div>\n<div id=\"generatorprofilehistogramsinglepeakeduniform\">\n<h3>0.12.0 (2020-02-09): GeneratorProfileHistogramSinglePeakedUniform</h3>\n<ul>\n<li>Add <tt>GeneratorProfileHistogramSinglePeakedUniform</tt>: a generator of single-peaked histogram-profiles following\nthe uniform distribution.</li>\n<li>Add examples of functions to be used as update ratios for <tt>ProfileCardinal.fictitious_play</tt>:\n<tt>one_over_t_plus_one</tt>, <tt>one_over_sqrt_t_plus_one</tt>, <tt>one_over_log_t_plus_two</tt>,\n<tt>one_over_log_log_t_plus_fifteen</tt>.</li>\n</ul>\n</div>\n<div id=\"winning-frequencies-in-iterated-voting-fictitious-play\">\n<h3>0.11.0 (2020-02-09): Winning frequencies in iterated voting / fictitious play</h3>\n<ul>\n<li><tt>ProfileCardinal.iterated_voting</tt> and <tt>ProfileCardinal.fictitious_play</tt> now also output the winning frequency of\neach candidate (limit frequency in case of convergence, frequency over the history otherwise).</li>\n<li>New utilities:<ul>\n<li>Add <tt>candidates_to_d_candidate_probability</tt>: convert a set of candidates to a dictionary of probabilities (random\ntie-break)</li>\n<li>Add <tt>candidates_to_probabilities</tt>: convert a set of candidates to an array of probabilities (random tie-break).</li>\n<li>Add <tt>array_to_d_candidate_value</tt>: convert an array to a dictionary of candidates and values.</li>\n<li>Add <tt>d_candidate_value_to_array</tt>: convert a dictionary of candidates and values to an array.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"profilediscrete-analyzed-strategies\">\n<h3>0.10.0 (2020-02-09): ProfileDiscrete.analyzed_strategies</h3>\n<ul>\n<li>Implement <tt>ProfileDiscrete.analyzed_strategies</tt>: exhaustive analysis of all pure strategies of the profile.</li>\n</ul>\n</div>\n<div id=\"plurality-and-anti-plurality\">\n<h3>0.9.0 (2020-02-09): Plurality and Anti-plurality</h3>\n<ul>\n<li>Implement Plurality and Anti-plurality (cf. the corresponding tutorial).</li>\n<li>Python 3.5 is not officially supported anymore. However, in practice, the package should still essentially work with\nPython 3.5, the only notable difference being the order in which the dictionaries are printed.</li>\n<li>New utilities:<ul>\n<li>Add <tt>ballot_two</tt>: ballot for the second candidate of a ranking (used for Plurality).</li>\n<li>Add <tt>ballot_one_three</tt>: ballot against the second candidate of a ranking (used for Anti-plurality).</li>\n<li>Add <tt>ballot_low_u</tt> and <tt>ballot_high_u</tt>: the ballot chosen by the voters who have a low (resp. high) utility\nfor their middle candidate, depending on the voting rule.</li>\n<li>Add <tt>product_dict</tt>: Cartesian product for a dictionary of iterables.</li>\n<li>Add <tt>DictPrintingInOrderIgnoringNone</tt>: dictionary that prints in the order of the keys, ignoring value None.</li>\n<li>In the <tt>UtilCache</tt> module, add <tt>property_deleting_cache</tt>: define a property that deletes the cache when set or\ndeleted. This is used for parameters like <tt>ratio_sincere</tt>, <tt>voting_rule</tt>, etc.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"better-handling-of-edge-cases-in-bestresponse\">\n<h3>0.8.1 (2020-02-04): Better Handling of Edge Cases in BestResponse</h3>\n<ul>\n<li><tt>BestResponse</tt>: the focus of this release is to correct rare bugs that used to happen when some offsets are very\nclose to 1.<ul>\n<li>API change: <tt>BestResponse</tt> now takes as parameters the tau-vector and the ranking, instead of all the events\nthat are used for the computation.</li>\n<li>Exchanged the justifications <tt>'Easy vs difficult pivot'</tt> and <tt>'Difficult vs easy pivot'</tt> (their usages\nwere switched, even if the result itself was correct).</li>\n<li>Use the asymptotic method only when there are two consecutive zeros in the \u201ccompass diagram\u201d of the tau-vector\n(instead of: whenever it gives a result). The motivation is that the asymptotic method may rely on events that rely\nmore on numerical approximation than the limit pivot theorem approach.</li>\n<li>To determine whether pivots are easy or difficult, we rely on expected scores in the duo events, instead of the\npseudo-offsets of the trio. The motivation is that in some cases, the trio is computed with a numerical optimizer\nthat relies more on numerical approximation than the duo events, which use only basic operations like addition,\nmultiplication, etc. In the rare cases where the two methods differ, the latter is thus more reliable.</li>\n<li>Add a sub-algorithm of the \u201cOffset method\u201d, called \u201cOffset method with trio\napproximation correction\u201d. This is used in some rare cases where both pivots are difficult, but the numeric\napproximations of the trio event lead to an offset that is equal or even slightly greater than 1 (which is abnormal\nand leads to infinite geometric sums). In those cases, we now consider that the offset is lower and infinitely close\nto 1.</li>\n<li>Corrected a bug in the asymptotic method that could happen when the two personalized pivots had very close\nmagnitudes. This uses the correction of <tt>Asymptotic.limit</tt> mentioned below.</li>\n</ul>\n</li>\n<li><tt>TauVector</tt>: added the attribute <tt>has_two_consecutive_zeros</tt>.</li>\n<li><tt>Event</tt>: now computes the pseudo-offsets, e.g. <tt>psi_a</tt>, <tt>psi_ab</tt>, etc.</li>\n<li><tt>Asymptotic</tt>: handles some edge cases more nicely.<ul>\n<li><tt>__str__</tt> displays a coefficient as 0, 1 or -1 only if it is equal to that value. Close is not enough.</li>\n<li><tt>limit</tt> does not use closeness to 0. It is not its role to decide what coefficients are negligible in the context.\nOnly operations like multiplication are allowed to use closeness: for example, if <tt>mu_1</tt> and <tt>- mu_2</tt> are\nrelatively close, the multiplication operator is allowed to decide that <tt>mu_1 + mu_2</tt> is equal to 0.</li>\n<li>In multiplication, when the two magnitudes are close, the resulting magnitude is now always equal to the maximum.\nThe same applies for the resulting <cite>nu</cite> when the <cite>nu</cite>\u2019s are also equal.</li>\n</ul>\n</li>\n<li><tt>cached_property</tt>: corrected a bug. In the case of nested cached properties, the inner one was sometimes not\nrecorded in cache. It did not lead to incorrect results but slowed down the program.</li>\n</ul>\n</div>\n<div id=\"fanatic-voters\">\n<h3>0.8.0 (2020-01-30): Fanatic voters</h3>\n<ul>\n<li>Implement the notion of fanatic voting, a variant of sincere voting: a given ratio of voters vote for their top\ncandidate only. This is implemented for all subclasses of <tt>Profile</tt>.</li>\n<li>The utility <tt>barycenter</tt> now accepts iterables.</li>\n<li>Corrected bug: <tt>Profile.standardized_version</tt> now takes into account the auxiliary parameters like\n<tt>ratio_sincere</tt>, <tt>well_informed_voters</tt>, etc.</li>\n</ul>\n</div>\n<div id=\"profilediscrete\">\n<h3>0.7.0 (2020-01-30): ProfileDiscrete</h3>\n<ul>\n<li>Add <tt>ProfileDiscrete</tt>: a profile with a discrete distribution of voters.</li>\n<li>Subclasses of <tt>Profile</tt>: better handling of the additional parameters like <tt>well_informed_voters</tt> or\n<tt>ratio_sincere</tt>. In the conversions to string (<tt>str</tt> or <tt>repr</tt>), they are now mentioned. They are also used in\nthe equality tests between two profiles.</li>\n</ul>\n</div>\n<div id=\"fictitious-play\">\n<h3>0.6.0 (2020-01-29): Fictitious Play</h3>\n<ul>\n<li>Implement <tt>ProfileCardinal.fictitious_play</tt>, where the update ratios of the perceived tau-vector and the actual\ntau-vector can be functions of the time. It is also faster that <tt>ProfileCardinal.iterated_voting</tt>, but can\nnot detect cycles (only convergence).</li>\n<li><tt>ProfileCardinal.iterated_voting_taus</tt> is renamed to <tt>ProfileCardinal.iterated_voting</tt>. It has been generalized\nby implementing a notion of perceived tau-vector, like for <tt>ProfileCardinal.fictitious_play</tt>. The syntax has been\nmodified in consequence.</li>\n<li><tt>ProfileCardinal.iterated_voting_strategies</tt> is deprecated and suppressed.</li>\n<li>Iterated voting and fictitious play do not need a <tt>StrategyThreshold</tt> as initial strategy, but any strategy that is\nconsistent with the profile subclass. For example, with <tt>ProfileTwelve</tt>, you can use a <tt>StrategyTwelve</tt>.</li>\n<li><tt>Strategy.profile</tt> is now a property that can be reassigned after the creation of the object.</li>\n<li>Add <tt>Strategy.deepcopy_with_attached_profile</tt>: make a deep copy and attach a given profile.</li>\n<li>Add the utility <tt>to_callable</tt>: convert an object to a callable (making it a constant function if it is not\ncallable already).</li>\n</ul>\n</div>\n<div id=\"configure-codecov-and-improve-coverage\">\n<h3>0.5.1 (2020-01-18): Configure Codecov and Improve Coverage</h3>\n<ul>\n<li>Configure Codecov.</li>\n<li>Reach 100% coverage for this version.</li>\n</ul>\n</div>\n<div id=\"sincere-voting-and-progressive-update-in-iterated-voting\">\n<h3>0.5.0 (2020-01-11): Sincere Voting and Progressive Update in Iterated Voting</h3>\n<ul>\n<li>In iterated voting, implement the possibility to move only <em>progressively</em> towards the best response:<ul>\n<li>Add <tt>ProfileCardinal.iterated_voting_taus</tt>: at each iteration, a given ratio of voters update their ballot.</li>\n<li>Replace the former method <tt>ProfileCardinal.iterated_voting</tt> by <tt>ProfileCardinal.iterated_voting_strategies</tt>:\nas in former versions, at each iteration, the threshold utility of each ranking\u2019s strategy is moved in the\ndirection of the best response\u2019s threshold utility. The method now returns a cycle of tau-vectors and the\ncorresponding cycle of best response strategies, in order to be consistent with\n<tt>ProfileCardinal.iterated_voting_taus</tt>.</li>\n<li>Add the utility <tt>barycenter</tt>: compute a barycenter while respecting the type of one input if the other input has\nweight 0.</li>\n<li>Accelerate the algorithm used in iterated voting.</li>\n</ul>\n</li>\n<li>In <tt>ProfileCardinal</tt>, add the possibility of partial sincere voting:<ul>\n<li>Add parameter <tt>ratio_sincere</tt>: ratio of sincere voters.</li>\n<li>Add property <tt>tau_sincere</tt>: the tau-vector if all voters vote sincerely.</li>\n<li>The former method <tt>tau</tt> is renamed <tt>tau_strategic</tt>: the tau_vector if all voters vote strategically.</li>\n<li>The new method <tt>tau</tt> takes both sincere and strategic voting into account.</li>\n<li>The method <tt>is_equilibrium</tt> has a new implementation to take this feature into account.</li>\n</ul>\n</li>\n<li>Add <tt>TauVector.isclose</tt>: whether the tau-vector is close to another tau-vector (in the sense of\n<tt>math.isclose</tt>). This method is used by the new version of <tt>ProfileCardinal.is_equilibrium</tt>.</li>\n<li>Add <tt>Profile.best_responses_to_strategy</tt>: convert a dictionary of best responses to a <tt>StrategyThreshold</tt> that\nmentions only the rankings that are present in the profile.</li>\n<li>In random generators of profiles (<tt>GeneratorProfileOrdinalUniform</tt>, <tt>GeneratorProfileOrdinalGridUniform</tt>,\n<tt>GeneratorProfileOrdinalVariations</tt>, <tt>GeneratorProfileHistogramUniform</tt>): instead of having explicit arguments\nlike <tt>well_informed_voters</tt> or <tt>ratio_sincere</tt>, there are <tt>**kwargs</tt> that are directly passed to the\n<tt>__init__</tt> of the relevant Profile subclass.</li>\n<li>Update the tutorials with these new features.</li>\n</ul>\n</div>\n<div id=\"add-image-distribution\">\n<h3>0.4.0 (2020-01-08): Add <tt>image_distribution</tt></h3>\n<ul>\n<li>Add <tt>image_distribution</tt>: estimate the distribution of <tt>f(something)</tt> for a random <tt>something</tt>.</li>\n<li>Update the tutorial on mass simulations with this new feature.</li>\n</ul>\n</div>\n<div id=\"new-random-generators\">\n<h3>0.3.0 (2020-01-08): New Random Generators</h3>\n<ul>\n<li>Add new random generators:<ul>\n<li><tt>GeneratorExamples</tt>: run another generator until the generated object meets a given test.</li>\n<li><tt>GeneratorStrategyOrdinalUniform</tt>: draw a StrategyOrdinal uniformly.</li>\n<li><tt>GeneratorProfileOrdinalGridUniform</tt>: draw a ProfileOrdinal uniformly on a grid of rational numbers.</li>\n<li><tt>GeneratorTauVectorGridUniform</tt>: draw a TauVector uniformly on a grid of rational numbers.</li>\n</ul>\n</li>\n<li>Utilities:<ul>\n<li>Add <tt>rand_integers_fixed_sum</tt>: draw an array of integers with a given sum.</li>\n<li>Add <tt>rand_simplex_grid</tt>: draw a random point in the simplex, with rational coordinates of a given denominator.</li>\n<li>Update <tt>probability</tt>: allow for a tuple of generators.</li>\n</ul>\n</li>\n<li>Tutorials:<ul>\n<li>Add a tutorial on asymptotic developments.</li>\n<li>Update the tutorial on mass simulations with the new features.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"fix-deployment-on-pypi\">\n<h3>0.2.1 (2020-01-05): Fix Deployment on PyPI</h3>\n<ul>\n<li>Relaunch deployment.</li>\n</ul>\n</div>\n<div id=\"add-tutorials-various-minor-improvements\">\n<h3>0.2.0 (2020-01-05): Add Tutorials + Various Minor Improvements</h3>\n<ul>\n<li>Add <tt>GeneratorProfileStrategyThreshold</tt>.</li>\n<li>Add <tt>ProfileHistogram.plot_cdf</tt>.</li>\n<li>Modify <tt>masks_distribution</tt>: remove the trailing zeros. This has the same impact on\n<tt>ProfileOrdinal.distribution_equilibria</tt>.</li>\n<li>Modify <tt>NiceStatsProfileOrdinal.plot_cutoff</tt>: center the textual indications.</li>\n<li>Replace all notations <tt>r</tt> with <tt>profile</tt> and <tt>sigma</tt> with <tt>strategy</tt>.</li>\n<li>Add tutorials.</li>\n</ul>\n</div>\n<div id=\"convert-all-the-documentation-to-numpy-format\">\n<h3>0.1.1 (2019-12-24): Convert all the Documentation to NumPy Format</h3>\n<ul>\n<li>Convert all the documentation to NumPy format, making it more readable in plain text.</li>\n</ul>\n</div>\n<div id=\"first-release-on-pypi\">\n<h3>0.1.0 (2019-12-20): First release on PyPI</h3>\n<ul>\n<li>First release on PyPI.</li>\n<li>Implement only the case of 3 candidates.</li>\n<li>Deal with ordinal or cardinal profiles.</li>\n<li>Compute the asymptotic developments of the probability of pivot events when the number of players tends to infinity.</li>\n<li>Compute the best response to a given tau-vector.</li>\n<li>Explore automatically a grid of ordinal profiles or a grid of tau-vectors.</li>\n<li>Perform Monte-Carlo experiments on profiles or tau-vectors.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6906948, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "01398341133bfc20b851c5471d52db76", "sha256": "dc7ab4c481d3605e6824d9ef8be00fef8812e6f9f651c8c3ffeb92960d3b618d"}, "downloads": -1, "filename": "poisson_approval-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "01398341133bfc20b851c5471d52db76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 66519, "upload_time": "2019-12-20T11:06:19", "upload_time_iso_8601": "2019-12-20T11:06:19.285004Z", "url": "https://files.pythonhosted.org/packages/63/34/edb6a53b84cdb0c813b075bf58e6a17b8bd470e02ba3744468ba1085881a/poisson_approval-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5b033c6055567138fb632623985ca55", "sha256": "9a7654a9c8aed88a76fde0bd7ffe39a79ea31f2ea61a432fdb0de8f928e0e1f8"}, "downloads": -1, "filename": "poisson_approval-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c5b033c6055567138fb632623985ca55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 48142, "upload_time": "2019-12-20T11:06:21", "upload_time_iso_8601": "2019-12-20T11:06:21.528511Z", "url": "https://files.pythonhosted.org/packages/5d/dc/c7f7bb3f47f409aaedf1a65ea92da35f7205b6d3467e02e51434b9b3039d/poisson_approval-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7de142052261b6f74f88e2c2604127a4", "sha256": "667232c7588b393f06b96fb5f2c4cbe940a54d746754f77dd6e3ab6ed32b56d5"}, "downloads": -1, "filename": "poisson_approval-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7de142052261b6f74f88e2c2604127a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 69489, "upload_time": "2019-12-24T08:04:46", "upload_time_iso_8601": "2019-12-24T08:04:46.403294Z", "url": "https://files.pythonhosted.org/packages/a2/0d/1e16a9e14192f685a92872f25f4873634708fc359abb8be087c8ab2e8dfa/poisson_approval-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "331ea6fbc551e0ad31514942a012c6ca", "sha256": "78d0e68023c2ddee0081196463170fc5263467546b6058eb6e35db930951b806"}, "downloads": -1, "filename": "poisson_approval-0.1.1.tar.gz", "has_sig": false, "md5_digest": "331ea6fbc551e0ad31514942a012c6ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 49566, "upload_time": "2019-12-24T08:04:48", "upload_time_iso_8601": "2019-12-24T08:04:48.089428Z", "url": "https://files.pythonhosted.org/packages/16/69/99f4bf315763b7cde740082bad1ff5226fcbb8397b7c6b5dc8f81765fe51/poisson_approval-0.1.1.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "39e00a059a335beca8f38f7d3119f67d", "sha256": "a03f69ede3820d2711449065cdfc47c1254f0fd1a1a60fb8dc4567e05b361835"}, "downloads": -1, "filename": "poisson_approval-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "39e00a059a335beca8f38f7d3119f67d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 112433, "upload_time": "2020-02-09T07:28:59", "upload_time_iso_8601": "2020-02-09T07:28:59.940053Z", "url": "https://files.pythonhosted.org/packages/c7/d4/32a40c16ce85ae8da008c952c3da4f6e512c0a16b8b3adfc59c573e0e746/poisson_approval-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2274b97560112560a762eac3ffed737", "sha256": "d04a4c521def6aca20d268868635c3ac63a7f5ca7a3079b6bde1f6e646f28988"}, "downloads": -1, "filename": "poisson_approval-0.10.0.tar.gz", "has_sig": false, "md5_digest": "c2274b97560112560a762eac3ffed737", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 85781, "upload_time": "2020-02-09T07:29:01", "upload_time_iso_8601": "2020-02-09T07:29:01.708398Z", "url": "https://files.pythonhosted.org/packages/4b/a3/5a4b4e18e69761c40a31dced2507e38d23a501505a42c402b67bc03a3aae/poisson_approval-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "62ab0d6219159573ee76ae5eb1a466a3", "sha256": "de48485eebc9a2ac808923c0a6f6da8d92dc616cb16f1ecf011b36451783201c"}, "downloads": -1, "filename": "poisson_approval-0.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "62ab0d6219159573ee76ae5eb1a466a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 113773, "upload_time": "2020-02-09T12:59:09", "upload_time_iso_8601": "2020-02-09T12:59:09.569552Z", "url": "https://files.pythonhosted.org/packages/9e/70/b9d5548e200c9157ff249965f5d27d40e0a139624f182fe996bc9e7a9944/poisson_approval-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b45800ea0b2295b5696927bea2638db", "sha256": "8bcc2857a69ac24571e3981c4718ba15352b468e810bb1efecd45fb96e1a8644"}, "downloads": -1, "filename": "poisson_approval-0.11.0.tar.gz", "has_sig": false, "md5_digest": "8b45800ea0b2295b5696927bea2638db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 87280, "upload_time": "2020-02-09T12:59:11", "upload_time_iso_8601": "2020-02-09T12:59:11.146415Z", "url": "https://files.pythonhosted.org/packages/69/a8/b2e2339961bbc7498608fe407ed2794cb52f656645d38a8ef22a3222fe05/poisson_approval-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "480a0aee200fc077b190dc7017b20c4d", "sha256": "770ff553851c4de476fb778df3dd8d38559cddee3c682148ceab50c4ab030da9"}, "downloads": -1, "filename": "poisson_approval-0.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "480a0aee200fc077b190dc7017b20c4d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 115449, "upload_time": "2020-02-09T17:06:06", "upload_time_iso_8601": "2020-02-09T17:06:06.361594Z", "url": "https://files.pythonhosted.org/packages/44/0e/1378e21756cbd42df185376a00e155a0829d9f46ca9bf0d317c165d3a940/poisson_approval-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abe34e4bb77c8a8f0ef6acea6c237ce5", "sha256": "722c3ea6c5ceffb965b433ca1abcf97d4cd1f2f3fe38a7ea8e15fe2e608368c7"}, "downloads": -1, "filename": "poisson_approval-0.12.0.tar.gz", "has_sig": false, "md5_digest": "abe34e4bb77c8a8f0ef6acea6c237ce5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 88227, "upload_time": "2020-02-09T17:06:08", "upload_time_iso_8601": "2020-02-09T17:06:08.279205Z", "url": "https://files.pythonhosted.org/packages/28/d6/755c330e88bfc2623f6dc18e7944c6e372e437b2a15a680e63ce227354cd/poisson_approval-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "35a5f1715bd77aabac5d88990b643d28", "sha256": "c851039825f87dc6d3b07287050f9b9ae80a1fe1350d8f264727db56efcdb9a5"}, "downloads": -1, "filename": "poisson_approval-0.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35a5f1715bd77aabac5d88990b643d28", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 119578, "upload_time": "2020-02-16T15:26:53", "upload_time_iso_8601": "2020-02-16T15:26:53.869747Z", "url": "https://files.pythonhosted.org/packages/08/07/834d800fe105d1aaa69c1aa283abf40d3f718b2dba12121f72a67d4353aa/poisson_approval-0.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd89c04c84f27b0f92e811b047c25989", "sha256": "f023bf0f4b96c07e92c6292573d2408a3307ddbb5eeaab2773a9b8b3e70426d3"}, "downloads": -1, "filename": "poisson_approval-0.13.0.tar.gz", "has_sig": false, "md5_digest": "fd89c04c84f27b0f92e811b047c25989", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 92043, "upload_time": "2020-02-16T15:26:55", "upload_time_iso_8601": "2020-02-16T15:26:55.493362Z", "url": "https://files.pythonhosted.org/packages/91/e3/3a63d3ae5673a05169a85dda7cb89e5a0f1d07f0da2490d5d9a23a54ce87/poisson_approval-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "a0a6f13cca3fdadccf84eff8d0282a19", "sha256": "04f1205a868a2bf130ba5ffb45d5223d74c020e3ffbb0cf67a3da4bfebbc2007"}, "downloads": -1, "filename": "poisson_approval-0.14.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0a6f13cca3fdadccf84eff8d0282a19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 119939, "upload_time": "2020-02-16T15:56:20", "upload_time_iso_8601": "2020-02-16T15:56:20.280392Z", "url": "https://files.pythonhosted.org/packages/ba/c3/31cef8521224c0eb867314f9ad140a34556a573b24efa8018244efb4887b/poisson_approval-0.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a987d5b3b4fdc397b3dc1471d19b3c8", "sha256": "be2f6d306690a8fcb89c94afd93c6a8d8b56110413e818df9096dbe58769d513"}, "downloads": -1, "filename": "poisson_approval-0.14.0.tar.gz", "has_sig": false, "md5_digest": "7a987d5b3b4fdc397b3dc1471d19b3c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 92569, "upload_time": "2020-02-16T15:56:22", "upload_time_iso_8601": "2020-02-16T15:56:22.124983Z", "url": "https://files.pythonhosted.org/packages/1b/b1/519973d06c73c7270065d4d20e405e41f631caead084bf6d66111d678341/poisson_approval-0.14.0.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "6b6eed0c772101c82a96316e559b7a1c", "sha256": "f6da8dc8ed0e11cf2e34654c3bbc75aa30fe80d1de8cb73a717070a5ccc11e80"}, "downloads": -1, "filename": "poisson_approval-0.15.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b6eed0c772101c82a96316e559b7a1c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 128143, "upload_time": "2020-02-20T07:50:50", "upload_time_iso_8601": "2020-02-20T07:50:50.153790Z", "url": "https://files.pythonhosted.org/packages/58/17/a2b8f39c1b2735498e3bb3497075d26848d5632fce40469189f6ac3ba178/poisson_approval-0.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5647b089b23a3d355a6c9ee439e6139", "sha256": "5aa5332eb7091d1c3292b7f5e6f5ba79b413eb87531089d15cb8513901e3c6b7"}, "downloads": -1, "filename": "poisson_approval-0.15.0.tar.gz", "has_sig": false, "md5_digest": "a5647b089b23a3d355a6c9ee439e6139", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 99622, "upload_time": "2020-02-20T07:50:52", "upload_time_iso_8601": "2020-02-20T07:50:52.219686Z", "url": "https://files.pythonhosted.org/packages/aa/3a/db038680167e4f421e4d446d7170f5a3004c1703e4921105776a3f6efe8e/poisson_approval-0.15.0.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "5005a415031374903c3739d04a6a4d3e", "sha256": "ea0f8c4c2336b0037e790b52c335e1942694de10621dd40352018ef9bb0e4f3b"}, "downloads": -1, "filename": "poisson_approval-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5005a415031374903c3739d04a6a4d3e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 132952, "upload_time": "2020-02-22T06:45:34", "upload_time_iso_8601": "2020-02-22T06:45:34.507639Z", "url": "https://files.pythonhosted.org/packages/48/90/a4ecdedd54d3b11b5a725f1bfd034a79b2d4727eefdc77402c9f48eb142a/poisson_approval-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a8476e30f532b6e53e7e62df91fa39c", "sha256": "cc04c403d591856369eb27d208720b1de0f42571eb5f76dd3666b644271d22b6"}, "downloads": -1, "filename": "poisson_approval-0.16.0.tar.gz", "has_sig": false, "md5_digest": "6a8476e30f532b6e53e7e62df91fa39c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 102141, "upload_time": "2020-02-22T06:45:36", "upload_time_iso_8601": "2020-02-22T06:45:36.554257Z", "url": "https://files.pythonhosted.org/packages/b9/4e/165fad79b4f20554e8d299f3bad470208d39e2e75e631caf864eeaf8507e/poisson_approval-0.16.0.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "9ee8635997854efb5e5acac4b0de11df", "sha256": "59e565dab3237e53abbfa578c67d26f64e8ba2bc2c531597383cc48a5459ed19"}, "downloads": -1, "filename": "poisson_approval-0.16.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ee8635997854efb5e5acac4b0de11df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 133394, "upload_time": "2020-02-24T09:41:40", "upload_time_iso_8601": "2020-02-24T09:41:40.259138Z", "url": "https://files.pythonhosted.org/packages/ef/0a/e71e5ae47c4420bcaa5fbf740884f1b5d74754061bbbd8f4dd3938700005/poisson_approval-0.16.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b26ee62e2bdff422f662378b81159012", "sha256": "6d51aaa3b78f40d975d6de128014893a5b74090920fa57941c9352acb0ef621a"}, "downloads": -1, "filename": "poisson_approval-0.16.1.tar.gz", "has_sig": false, "md5_digest": "b26ee62e2bdff422f662378b81159012", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 102722, "upload_time": "2020-02-24T09:41:42", "upload_time_iso_8601": "2020-02-24T09:41:42.786999Z", "url": "https://files.pythonhosted.org/packages/05/9e/dc3910c4ddca88220d36d05e08476a2e19a6b0568b71f58f51645e33baf2/poisson_approval-0.16.1.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "35c75c5b45fe3687354df3ecf474227e", "sha256": "d1f5ece6e6ff25646a5a47820cb06cfa1f2735a931a465668e9561d26d0acb4a"}, "downloads": -1, "filename": "poisson_approval-0.17.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35c75c5b45fe3687354df3ecf474227e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 134905, "upload_time": "2020-02-24T13:22:12", "upload_time_iso_8601": "2020-02-24T13:22:12.172836Z", "url": "https://files.pythonhosted.org/packages/24/31/43e026218b38c2e18d4a8a1c6b8b1c34edb04e3eaf6c7fdaf473f58c0087/poisson_approval-0.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7ac8554efc3ccdd439ca5630c3e4fad", "sha256": "c7815775d24ed684ae133e956148edebb7350374bdd68ad2c5af0d2601eaa28e"}, "downloads": -1, "filename": "poisson_approval-0.17.0.tar.gz", "has_sig": false, "md5_digest": "e7ac8554efc3ccdd439ca5630c3e4fad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 104653, "upload_time": "2020-02-24T13:22:13", "upload_time_iso_8601": "2020-02-24T13:22:13.683449Z", "url": "https://files.pythonhosted.org/packages/c9/bb/933e2f4cc5b39667879446f21466e49cea6c8e1e04edbca67808dae37470/poisson_approval-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "85d086d22a089b57f2dd87496e3c55ee", "sha256": "c388b42c3ab8ea5be44ab88c7a0d7d17fb00bb48b5dec7ac2c862e2af41c85df"}, "downloads": -1, "filename": "poisson_approval-0.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "85d086d22a089b57f2dd87496e3c55ee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 142111, "upload_time": "2020-02-26T22:23:25", "upload_time_iso_8601": "2020-02-26T22:23:25.568412Z", "url": "https://files.pythonhosted.org/packages/dc/aa/7c9f9c5c2affe66d6b1e52a2e86f6f9c88f630e41554e6ff2fcbcf402fbc/poisson_approval-0.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4f21c5e25a35212fb8df74368260c92", "sha256": "2bf479d5a7ddb1ebec36ff8c69856234910ff1574cabf30af299b33c8e86bf06"}, "downloads": -1, "filename": "poisson_approval-0.18.0.tar.gz", "has_sig": false, "md5_digest": "c4f21c5e25a35212fb8df74368260c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 112113, "upload_time": "2020-02-26T22:23:27", "upload_time_iso_8601": "2020-02-26T22:23:27.395174Z", "url": "https://files.pythonhosted.org/packages/bb/e0/a097fd947f861bce9b6cb9935cb62d47b011b5036d8df98f2c1c7299fdd4/poisson_approval-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "a9b3ce837a9a79caecf94b2075549601", "sha256": "f263ea710fcbab4d5bb1b912a6794f93d4e4b644f3c7f4ef5d346f5e0b71bea4"}, "downloads": -1, "filename": "poisson_approval-0.19.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9b3ce837a9a79caecf94b2075549601", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 145249, "upload_time": "2020-02-27T20:57:09", "upload_time_iso_8601": "2020-02-27T20:57:09.810528Z", "url": "https://files.pythonhosted.org/packages/44/47/c9fe829a698231dcbe2e256a4127db2cf3e674ba956f274abf880dd5c778/poisson_approval-0.19.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dcbeaa6f7d04c7661901fdcfe2dd798", "sha256": "e232f07c20a96c34f8358d090e237499472c7c2bf28ec7bb22f28d25ef8d2823"}, "downloads": -1, "filename": "poisson_approval-0.19.0.tar.gz", "has_sig": false, "md5_digest": "6dcbeaa6f7d04c7661901fdcfe2dd798", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 117783, "upload_time": "2020-02-27T20:57:11", "upload_time_iso_8601": "2020-02-27T20:57:11.972989Z", "url": "https://files.pythonhosted.org/packages/7a/55/a11a5585e160331196586991b0e9bccfa1ec949ed5a0dbbb612ea71fe822/poisson_approval-0.19.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8a9bf187f51371825a7e09ea257d5fab", "sha256": "248771ebb4a2fc9a8858898b2711884374053349aad3ac9aed3bdf24009590d8"}, "downloads": -1, "filename": "poisson_approval-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a9bf187f51371825a7e09ea257d5fab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 71150, "upload_time": "2020-01-05T10:28:00", "upload_time_iso_8601": "2020-01-05T10:28:00.441101Z", "url": "https://files.pythonhosted.org/packages/c6/ff/43f7bb5171d1b6ed43f9c1f6ebdb483bf4981ce6af8ce392d521d049e252/poisson_approval-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5d497f6c62fc81e3843e3c6b85a366a", "sha256": "9c84717a9f2879d9d05d484a8647c0c9482ec4c27f6091eedba0a8adb3c01f4f"}, "downloads": -1, "filename": "poisson_approval-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a5d497f6c62fc81e3843e3c6b85a366a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 51723, "upload_time": "2020-01-05T10:28:02", "upload_time_iso_8601": "2020-01-05T10:28:02.192446Z", "url": "https://files.pythonhosted.org/packages/c6/47/85ca38e129d306c91e76514b1f877d53ca82823b681ba3b077a5d3de1439/poisson_approval-0.2.1.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "6405009330e37471f19ed6f58b3d1a9e", "sha256": "0f895c2ae4cd6916216235c9a9f3c887b4fdc2971fa51ff653d07f83cf3aad49"}, "downloads": -1, "filename": "poisson_approval-0.20.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6405009330e37471f19ed6f58b3d1a9e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 150806, "upload_time": "2020-03-03T16:39:14", "upload_time_iso_8601": "2020-03-03T16:39:14.238504Z", "url": "https://files.pythonhosted.org/packages/07/1b/a9a9c21311ec78a578f346729a62d04075475804c9005b57cb3de7b52884/poisson_approval-0.20.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d6579df7882c7550135b07f869e6092", "sha256": "347eb4873fa28c772cde92b27c2cd3ae8bdb1b7a16c42123f6bad18e17c4a0a8"}, "downloads": -1, "filename": "poisson_approval-0.20.0.tar.gz", "has_sig": false, "md5_digest": "1d6579df7882c7550135b07f869e6092", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 123547, "upload_time": "2020-03-03T16:39:16", "upload_time_iso_8601": "2020-03-03T16:39:16.046786Z", "url": "https://files.pythonhosted.org/packages/78/b5/1c0e1501909569fa8b8c33684be742f048d26bcf59dc075339121e7f3756/poisson_approval-0.20.0.tar.gz", "yanked": false}], "0.21.0": [{"comment_text": "", "digests": {"md5": "c562aa8ce9617a83074c9113de4e8854", "sha256": "cec384b196ef7e399362b34b998d5759f0fcf57213ae8ba2b9d00381ca95238d"}, "downloads": -1, "filename": "poisson_approval-0.21.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c562aa8ce9617a83074c9113de4e8854", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 176046, "upload_time": "2020-03-12T19:53:33", "upload_time_iso_8601": "2020-03-12T19:53:33.394806Z", "url": "https://files.pythonhosted.org/packages/7c/58/83a0b1f7cddd398f2d54e9fdb7a10aa75ff73fee97772e3beaf6f84727a4/poisson_approval-0.21.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37c23bdbabae5a6488c8e5fe5b587983", "sha256": "07e6c7d3bbbdad524588dddcff2c02eb3014671505463023ccf7c16f6b405e95"}, "downloads": -1, "filename": "poisson_approval-0.21.0.tar.gz", "has_sig": false, "md5_digest": "37c23bdbabae5a6488c8e5fe5b587983", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 135232, "upload_time": "2020-03-12T19:53:35", "upload_time_iso_8601": "2020-03-12T19:53:35.334871Z", "url": "https://files.pythonhosted.org/packages/f3/f9/38b1cc101d45d19f84ddbeac3eb861b7c669141f649ec372797a86035f27/poisson_approval-0.21.0.tar.gz", "yanked": false}], "0.22.0": [{"comment_text": "", "digests": {"md5": "ff926def4a21c4ba9e0bbd8fa8a139e0", "sha256": "a538fedbde694fe54797f02134af6336fc60bc48b542cd795d96d2a6f7faf6f2"}, "downloads": -1, "filename": "poisson_approval-0.22.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ff926def4a21c4ba9e0bbd8fa8a139e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 185586, "upload_time": "2020-03-21T23:34:42", "upload_time_iso_8601": "2020-03-21T23:34:42.641740Z", "url": "https://files.pythonhosted.org/packages/ff/cf/07cb79c635784fa518b6e2a536b65d994fcfa3653d2fd54de5fed70841b8/poisson_approval-0.22.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6391c4679cd6152854ab243244cd8179", "sha256": "2a6b8a1bce0d625c5bb2df9c474140e080b162133cbe11b7b5599d361037522f"}, "downloads": -1, "filename": "poisson_approval-0.22.0.tar.gz", "has_sig": false, "md5_digest": "6391c4679cd6152854ab243244cd8179", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 142978, "upload_time": "2020-03-21T23:34:44", "upload_time_iso_8601": "2020-03-21T23:34:44.229262Z", "url": "https://files.pythonhosted.org/packages/a7/70/2a3e92822debc5be1c3cfff955c26f8db0f3d86dbda4b7bb188381b3da66/poisson_approval-0.22.0.tar.gz", "yanked": false}], "0.23.0": [{"comment_text": "", "digests": {"md5": "b5cfda11f978f93b32b4cd2a4c915ceb", "sha256": "d794a3ae630483d93641010dded161253454a20195ed1351a50be3b8a4b09155"}, "downloads": -1, "filename": "poisson_approval-0.23.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5cfda11f978f93b32b4cd2a4c915ceb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 187236, "upload_time": "2020-03-29T14:42:30", "upload_time_iso_8601": "2020-03-29T14:42:30.307781Z", "url": "https://files.pythonhosted.org/packages/b5/34/a62633bcd4afea1978ee78bf8920d1255912dd6449f7cdd8221fc7ffa75c/poisson_approval-0.23.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf1402e73b62e3e2a5e77d5e54b0dd41", "sha256": "75276e3176e610e3c48ec9429e45d1e0fda004d7a5166096e84c250632c58bd0"}, "downloads": -1, "filename": "poisson_approval-0.23.0.tar.gz", "has_sig": false, "md5_digest": "bf1402e73b62e3e2a5e77d5e54b0dd41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 145610, "upload_time": "2020-03-29T14:42:32", "upload_time_iso_8601": "2020-03-29T14:42:32.416040Z", "url": "https://files.pythonhosted.org/packages/04/36/d7ddfbca5f39fe580fece1112f07ede5e5446d11985c86d98b313a0acf7b/poisson_approval-0.23.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b26541ed0e978008ca5aeaf09f72ae08", "sha256": "1beb1d8bef89003ee99c209029b81325bc655669e677fdf088bb61b9424cb3d9"}, "downloads": -1, "filename": "poisson_approval-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b26541ed0e978008ca5aeaf09f72ae08", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 75864, "upload_time": "2020-01-08T08:53:31", "upload_time_iso_8601": "2020-01-08T08:53:31.333882Z", "url": "https://files.pythonhosted.org/packages/68/d2/f4e408ecb27612a132adf82a9ec85712e436009e03ebff71214871d2c8d7/poisson_approval-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "539f07883e180183841015e9b5d77f65", "sha256": "34a7bab69e83fa53d71167cb886414f329f6d897719d15a536dc321b25df4969"}, "downloads": -1, "filename": "poisson_approval-0.3.0.tar.gz", "has_sig": false, "md5_digest": "539f07883e180183841015e9b5d77f65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 54760, "upload_time": "2020-01-08T08:53:32", "upload_time_iso_8601": "2020-01-08T08:53:32.502942Z", "url": "https://files.pythonhosted.org/packages/db/a1/8a63b811e1ab43860860e34bdcb2e785042ac4e1af299e635349af11186a/poisson_approval-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5a383c1695fc9f6c055aa35626e54360", "sha256": "b2f4d4151f82d35d585ec33965b108f17507c28c129c128a52a2c6f4296afd32"}, "downloads": -1, "filename": "poisson_approval-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a383c1695fc9f6c055aa35626e54360", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 76426, "upload_time": "2020-01-08T15:48:00", "upload_time_iso_8601": "2020-01-08T15:48:00.278780Z", "url": "https://files.pythonhosted.org/packages/79/f0/7a10ef90a489d62e428aa063e5d7494f1d8a4585f90290bb155ef8eb1f8e/poisson_approval-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3fefff4b573201f1c854fe56e8c0e9d", "sha256": "9d8315a8a521f00fab97eb0281f96c3406dc3460552672d25476f4e69d527f04"}, "downloads": -1, "filename": "poisson_approval-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c3fefff4b573201f1c854fe56e8c0e9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 55345, "upload_time": "2020-01-08T15:48:02", "upload_time_iso_8601": "2020-01-08T15:48:02.016484Z", "url": "https://files.pythonhosted.org/packages/8e/cb/38bb645e2c0aadf6ad417a1daf84bc6d6788d4a8aea96f3c74286e5f52a8/poisson_approval-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "7e0b748ec5f5a58749b26860a0dd7a59", "sha256": "1fedb2d1a45207dd30b505aadb1dc2960f85a1111494006b355e023a9897336b"}, "downloads": -1, "filename": "poisson_approval-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e0b748ec5f5a58749b26860a0dd7a59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 80017, "upload_time": "2020-01-11T10:14:48", "upload_time_iso_8601": "2020-01-11T10:14:48.440423Z", "url": "https://files.pythonhosted.org/packages/59/8f/ce20fe1704b62c90123ae75e57719b43ddeb6e4ba07000c3a7bb99868cca/poisson_approval-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "655254734686cc792617664fcdfd7ee7", "sha256": "f5299b587db67809f1a421f78233972537acddc4dcdcf41e7d3cc6733d858b13"}, "downloads": -1, "filename": "poisson_approval-0.5.0.tar.gz", "has_sig": false, "md5_digest": "655254734686cc792617664fcdfd7ee7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 59688, "upload_time": "2020-01-11T10:14:50", "upload_time_iso_8601": "2020-01-11T10:14:50.197533Z", "url": "https://files.pythonhosted.org/packages/21/ef/7430f932a121e7b63a17b163527dbed19247aea6b2d25c3e6194b6d55726/poisson_approval-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "306e86335aa2f51579b39584e0cd4896", "sha256": "659b811a4f37d7eeea0e0d562edd39b8150b649cf80cdf38d3b1ffbcc01bbc30"}, "downloads": -1, "filename": "poisson_approval-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "306e86335aa2f51579b39584e0cd4896", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 86116, "upload_time": "2020-01-18T05:43:52", "upload_time_iso_8601": "2020-01-18T05:43:52.241375Z", "url": "https://files.pythonhosted.org/packages/92/7f/997660ef9b769bfd42dc9844d66e43e43453bcb26673d8f74b388320eb9f/poisson_approval-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63580ab52353613a5bff46924b5aadb1", "sha256": "47f50c8000ee6e9ba5e868292253a2387048204975b2a20d4d2c87b1a871657e"}, "downloads": -1, "filename": "poisson_approval-0.5.1.tar.gz", "has_sig": false, "md5_digest": "63580ab52353613a5bff46924b5aadb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 63072, "upload_time": "2020-01-18T05:43:53", "upload_time_iso_8601": "2020-01-18T05:43:53.947963Z", "url": "https://files.pythonhosted.org/packages/e2/ca/2dc75223d338215b9f4e541c534feeb6d8d6e021e62b49341ff09e393f57/poisson_approval-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "78bf96399fc39f83e0604e28998950df", "sha256": "a68d09fd2d0962c8af20f64855cae91c85a68ae871dedfd548e37ec19be96b71"}, "downloads": -1, "filename": "poisson_approval-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "78bf96399fc39f83e0604e28998950df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 88024, "upload_time": "2020-01-29T17:54:35", "upload_time_iso_8601": "2020-01-29T17:54:35.513828Z", "url": "https://files.pythonhosted.org/packages/72/ba/b849e280391406c652f82104b3283154a1cc2b6b8ba436e44de0d3c9614b/poisson_approval-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f48ca262ccee7da7ca6b2ff7ea257d2f", "sha256": "64b3d31d424fb8b67f096cacf38a81618f8a3eae40b8c537ce589cd6be1a8f72"}, "downloads": -1, "filename": "poisson_approval-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f48ca262ccee7da7ca6b2ff7ea257d2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 65236, "upload_time": "2020-01-29T17:54:36", "upload_time_iso_8601": "2020-01-29T17:54:36.837724Z", "url": "https://files.pythonhosted.org/packages/23/26/a49ee7333e2b64f6d306e0fff080dcb544701c1a098261ca93ae9e38c7ab/poisson_approval-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "2f20571a08688a632067bde7a150f01b", "sha256": "933b00c73e822ba770a956b63e3a2add36ea6c1e79bacbca2bdd2f3664bea6b3"}, "downloads": -1, "filename": "poisson_approval-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f20571a08688a632067bde7a150f01b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 90832, "upload_time": "2020-01-30T22:42:56", "upload_time_iso_8601": "2020-01-30T22:42:56.494900Z", "url": "https://files.pythonhosted.org/packages/01/89/2c5f0c392b21740d1fd6265c8e6da93880bda000d16697e87a0fe0fb49e9/poisson_approval-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc1aaa17c898194a1054fa105cf4ab74", "sha256": "5564b28a792a3b1e639b27c79800118f928c680f30f603f66e93cea52dda59c9"}, "downloads": -1, "filename": "poisson_approval-0.7.0.tar.gz", "has_sig": false, "md5_digest": "fc1aaa17c898194a1054fa105cf4ab74", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 69540, "upload_time": "2020-01-30T22:42:58", "upload_time_iso_8601": "2020-01-30T22:42:58.398778Z", "url": "https://files.pythonhosted.org/packages/92/fc/ced37329e4bf66053f69e17d5349b9dacfd263e392423821a8264e8a0482/poisson_approval-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "824c0b749b259ae1e4e6ba3a8c75a54e", "sha256": "694ffbe524e46460898ab947bd1acfca4c8dab2572515c9637337ac0f4980ff0"}, "downloads": -1, "filename": "poisson_approval-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "824c0b749b259ae1e4e6ba3a8c75a54e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 92193, "upload_time": "2020-02-01T08:09:24", "upload_time_iso_8601": "2020-02-01T08:09:24.994648Z", "url": "https://files.pythonhosted.org/packages/77/22/d279fea6931b17736a97225a6123f6754b01a6e0467e7a2cd86d754b6e27/poisson_approval-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "003e8d7d2b5d0559f41ff9c81391d35c", "sha256": "68b73255f3812380584f1d910bf02cfcc68b279c3170c1d0f2a2412f6e4dcdc3"}, "downloads": -1, "filename": "poisson_approval-0.8.0.tar.gz", "has_sig": false, "md5_digest": "003e8d7d2b5d0559f41ff9c81391d35c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 70699, "upload_time": "2020-02-01T08:09:26", "upload_time_iso_8601": "2020-02-01T08:09:26.850714Z", "url": "https://files.pythonhosted.org/packages/62/61/d9ea69fbd29966253243d0950064549903b0571f3ad5723ebc73867e74dd/poisson_approval-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "e2ed11d9d2ad835824896768afc75307", "sha256": "80c59785c546f70b4a44b395af9b4c8ff774d329d6b16d857a9a121b11f787a3"}, "downloads": -1, "filename": "poisson_approval-0.8.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e2ed11d9d2ad835824896768afc75307", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 96990, "upload_time": "2020-02-04T22:26:14", "upload_time_iso_8601": "2020-02-04T22:26:14.892811Z", "url": "https://files.pythonhosted.org/packages/10/5a/e79ff7fc9c3a6e5ffe831a232484e34a6ed651e5e9f95c6c07ec09e154b4/poisson_approval-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ecf420815e3d4bac7e074cb53218244", "sha256": "62ccd3dd7cf2e42568615d33a86fa300e2868a5b370ab1d0efe6791b8a74985b"}, "downloads": -1, "filename": "poisson_approval-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3ecf420815e3d4bac7e074cb53218244", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 75900, "upload_time": "2020-02-04T22:26:16", "upload_time_iso_8601": "2020-02-04T22:26:16.904983Z", "url": "https://files.pythonhosted.org/packages/f2/9f/c94b9374072477df09859f645f637d9f96815a45b4802fbfe6a0b5f46ec6/poisson_approval-0.8.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e0c71ae0292a11dcaaaad592e3971002", "sha256": "8faafb60f5adb1bb18cb1c7661471cdaa6f89db7fea2dd61deaa4f2bd9836264"}, "downloads": -1, "filename": "poisson_approval-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0c71ae0292a11dcaaaad592e3971002", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 111849, "upload_time": "2020-02-09T06:49:24", "upload_time_iso_8601": "2020-02-09T06:49:24.262703Z", "url": "https://files.pythonhosted.org/packages/b2/af/b2f96b3f7d97aa65c32408e93e857bb67cde04a83beacc8bb22f7583e508/poisson_approval-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "887a9794f2826e9edd1f6224b9e41a3c", "sha256": "e97bd1eaa902417d0ddabf87619f738e4d319d6ac97792a0357afc4b53e0e792"}, "downloads": -1, "filename": "poisson_approval-0.9.0.tar.gz", "has_sig": false, "md5_digest": "887a9794f2826e9edd1f6224b9e41a3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 85217, "upload_time": "2020-02-09T06:49:26", "upload_time_iso_8601": "2020-02-09T06:49:26.346093Z", "url": "https://files.pythonhosted.org/packages/1e/ce/746addddb5a96acaa94b3af7a2783968047f3ea87df2ff050b5a6755df90/poisson_approval-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5cfda11f978f93b32b4cd2a4c915ceb", "sha256": "d794a3ae630483d93641010dded161253454a20195ed1351a50be3b8a4b09155"}, "downloads": -1, "filename": "poisson_approval-0.23.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5cfda11f978f93b32b4cd2a4c915ceb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 187236, "upload_time": "2020-03-29T14:42:30", "upload_time_iso_8601": "2020-03-29T14:42:30.307781Z", "url": "https://files.pythonhosted.org/packages/b5/34/a62633bcd4afea1978ee78bf8920d1255912dd6449f7cdd8221fc7ffa75c/poisson_approval-0.23.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf1402e73b62e3e2a5e77d5e54b0dd41", "sha256": "75276e3176e610e3c48ec9429e45d1e0fda004d7a5166096e84c250632c58bd0"}, "downloads": -1, "filename": "poisson_approval-0.23.0.tar.gz", "has_sig": false, "md5_digest": "bf1402e73b62e3e2a5e77d5e54b0dd41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 145610, "upload_time": "2020-03-29T14:42:32", "upload_time_iso_8601": "2020-03-29T14:42:32.416040Z", "url": "https://files.pythonhosted.org/packages/04/36/d7ddfbca5f39fe580fece1112f07ede5e5446d11985c86d98b313a0acf7b/poisson_approval-0.23.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:00 2020"}