{"info": {"author": "Thomas Touhey", "author_email": "thomas@touhey.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Natural Language :: French", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "SGDFi\u202f: interact with SGDF's (Scouts et Guides de France) intranet\n==================================================================\n\n`Scouts et Guides de France <SGDF_>`_ is a Scouting and Guiding organization\nbased in France, member of the `Scoutisme Fran\u00e7ais`_. For managing its\nassets and operations, and providing tools to its members, it provides a\ndigital environment which only provides a human access, so no easy machine\naccess.\n\nSGDFi is a Python 3.x which aims at bringing a machine access to this digital\nenvironment, allowing read and write access to what is managed by it,\nmostly through a given adherent's account by imitating a web browser\n(web scraping, form completing, ajax simulating, and so on).\n\nFor more information about how this works and how to make it work,\nconsult the documentation. (link pending)\n\nExamples\n--------\n\nThese examples **CAN'T** be used yet, as they're just projections of what\nI would like as an interface.\n\n.. code-block:: python\n\n\tfrom datetime import datetime\n\tfrom sgdfi import Manager, ALL\n\n\tstart = datetime(2018, 10, 1)\n\tend = datetime(2018, 10, 20)\n\n\tmgr = sgdfi.Manager()\n\tmgr.login(\"<code>\", \"<password>\")\n\tmgr.login(\"<code2>\", \"<password>\")\n\n\tprint(\"== Place\")\n\tprint(mgr.places[\"<place iid>\"])\n\tprint()\n\n\tprint(\"== Events in a structure:\")\n\tfor event in mgr.events[\"<structure iid>\"][start:end]:\n\t\tprint(event)\n\t\tprint()\n\n\tprint(\"== All accessible events:\")\n\tfor event in mgr.events[ALL][start:end]:\n\t\tprint(event)\n\t\tprint()\n\n\tprint(\"== Operations on adherent:\")\n\tfor op in mgr.adherents[\"<adherent iid>\"].operations:\n\t\tprint(op)\n\t\tprint()\n\nWhat is left to do\n------------------\n\nThere are plenty of things to do:\n\n- use MIME types instead of random types for ``Manager.feed()``, and check\n  what we can send to ``Manager.feed()`` instead of text to also manage\n  binary file formats such as XLS.\n- attendance register\n- accidents\n- maybe delegate?\n- translate everything from the SDY project.\n- isolate the database?\n- manage tips on adherents through operations, e.g. only some purple shirts\n  can edit an adherent, or only the treasurer can declare that the adherent\n  has payed their contribution.\n- make manager and session independant so that managers can manage more than\n  one session at a time?\n- make manager public? database? representations?\n- document the interface when stable?\n\n.. _SGDF: https://www.sgdf.fr/\n.. _Scoutisme Fran\u00e7ais: https://www.scoutisme-francais.fr/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://forge.touhey.fr/sgdf/sgdfi.git", "keywords": "sgdf,intranet.sgdf.fr", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sgdfi", "package_url": "https://pypi.org/project/sgdfi/", "platform": "", "project_url": "https://pypi.org/project/sgdfi/", "project_urls": {"Homepage": "https://forge.touhey.fr/sgdf/sgdfi.git"}, "release_url": "https://pypi.org/project/sgdfi/20190326/", "requires_dist": null, "requires_python": "", "summary": "interactions with SGDF's intranet", "version": "20190326", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.sgdf.fr/\" rel=\"nofollow\">Scouts et Guides de France</a> is a Scouting and Guiding organization\nbased in France, member of the <a href=\"https://www.scoutisme-francais.fr/\" rel=\"nofollow\">Scoutisme Fran\u00e7ais</a>. For managing its\nassets and operations, and providing tools to its members, it provides a\ndigital environment which only provides a human access, so no easy machine\naccess.</p>\n<p>SGDFi is a Python 3.x which aims at bringing a machine access to this digital\nenvironment, allowing read and write access to what is managed by it,\nmostly through a given adherent\u2019s account by imitating a web browser\n(web scraping, form completing, ajax simulating, and so on).</p>\n<p>For more information about how this works and how to make it work,\nconsult the documentation. (link pending)</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>These examples <strong>CAN\u2019T</strong> be used yet, as they\u2019re just projections of what\nI would like as an interface.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sgdfi</span> <span class=\"kn\">import</span> <span class=\"n\">Manager</span><span class=\"p\">,</span> <span class=\"n\">ALL</span>\n\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">mgr</span> <span class=\"o\">=</span> <span class=\"n\">sgdfi</span><span class=\"o\">.</span><span class=\"n\">Manager</span><span class=\"p\">()</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;code&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;code2&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"== Place\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">places</span><span class=\"p\">[</span><span class=\"s2\">\"&lt;place iid&gt;\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"== Events in a structure:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"s2\">\"&lt;structure iid&gt;\"</span><span class=\"p\">][</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"== All accessible events:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"n\">ALL</span><span class=\"p\">][</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"== Operations on adherent:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">op</span> <span class=\"ow\">in</span> <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">adherents</span><span class=\"p\">[</span><span class=\"s2\">\"&lt;adherent iid&gt;\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">operations</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"what-is-left-to-do\">\n<h2>What is left to do</h2>\n<p>There are plenty of things to do:</p>\n<ul>\n<li>use MIME types instead of random types for <tt>Manager.feed()</tt>, and check\nwhat we can send to <tt>Manager.feed()</tt> instead of text to also manage\nbinary file formats such as XLS.</li>\n<li>attendance register</li>\n<li>accidents</li>\n<li>maybe delegate?</li>\n<li>translate everything from the SDY project.</li>\n<li>isolate the database?</li>\n<li>manage tips on adherents through operations, e.g. only some purple shirts\ncan edit an adherent, or only the treasurer can declare that the adherent\nhas payed their contribution.</li>\n<li>make manager and session independant so that managers can manage more than\none session at a time?</li>\n<li>make manager public? database? representations?</li>\n<li>document the interface when stable?</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4986700, "releases": {"20190326": [{"comment_text": "", "digests": {"md5": "817441cc29d304248fc1805818b95291", "sha256": "83089041ac2fea1a7d09b45a026de09cf863500eeba28950fcedfe57e7781c4f"}, "downloads": -1, "filename": "sgdfi-20190326.tar.gz", "has_sig": false, "md5_digest": "817441cc29d304248fc1805818b95291", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 594509, "upload_time": "2019-03-26T09:07:47", "upload_time_iso_8601": "2019-03-26T09:07:47.346351Z", "url": "https://files.pythonhosted.org/packages/05/ed/40b51708582cad20bc9baeeef544d980da2e705efa4ba822a8afad00edfa/sgdfi-20190326.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "817441cc29d304248fc1805818b95291", "sha256": "83089041ac2fea1a7d09b45a026de09cf863500eeba28950fcedfe57e7781c4f"}, "downloads": -1, "filename": "sgdfi-20190326.tar.gz", "has_sig": false, "md5_digest": "817441cc29d304248fc1805818b95291", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 594509, "upload_time": "2019-03-26T09:07:47", "upload_time_iso_8601": "2019-03-26T09:07:47.346351Z", "url": "https://files.pythonhosted.org/packages/05/ed/40b51708582cad20bc9baeeef544d980da2e705efa4ba822a8afad00edfa/sgdfi-20190326.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:09 2020"}