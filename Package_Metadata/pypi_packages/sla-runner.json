{"info": {"author": "Jaime Wissner", "author_email": "jwissner@billtrust.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# SLA Monitor Worker\n\nThis is the test runner portion of the SLA monitor/reporter. It performs tests (or any command you want) repeatedly, and publishes success/failure to an SNS topic for external processing (for example, using lambda to write to a custom cloudwatch metric), as well as optionally uploading logs to an S3 bucket.\n\nTODO: Unit tests not working\n\n## Installing\n\nTo install simply install via pip\n\n```bash\npip install --user sla-runner\n```\n\nHighly recommended is iam-docker run:\n\n```bash\npip install --user iam-docker-run\n```\n\nThis project assumes you are using role based authentication, as would be used in a production environment in AWS. This mimics that environment by running with an actual role.\n\n## Terraform\n\nExcute the following in the root folder to run terraform. Obviously, have Terraform installed. Set the bucket and table variables to existing backend resources for remote state.\n\n```shell\n# pip install iam-starter\ncd terraform\nexport AWS_ENV=\"dev\"\nexport TF_DATA_DIR=\"./.$AWS_ENV-terraform/\"\nexport AWS_DEFAULT_REGION=\"us-east-1\"\nexport TF_STATE_REGION=\"us-east-1\"\nexport TF_STATE_BUCKET=\"mycompany-tfstate-$AWS_ENV\"\nexport TF_STATE_TABLE=\"tfstate_$AWS_ENV\"\n\niam-starter \\\n    --profile $AWS_ENV \\\n    --command \\\n        \"terraform init \\\n        -backend-config=\\\"region=$TF_STATE_REGION\\\" \\\n        -backend-config=\\\"bucket=$TF_STATE_BUCKET\\\" \\\n        -backend-config=\\\"dynamodb_table=$TF_STATE_TABLE\\\" && \\\n        terraform apply \\\n        -var \\\"aws_env=$AWS_ENV\\\" \\\n        -var \\\"aws_region=$AWS_DEFAULT_REGION\\\"\"\n```\n\n## Using\n\nUse iam-docker-run outside of AWS to run tests. In real life scenarios on ECS, instead install sla-runner via pypi in your service container, and set `--image` to the image of the service container which contains your test.\n\n```bash\ndocker build -t sla-monitor/sla-runner:latest .\n\nexport AWS_ENV=\"dev\"\niam-docker-run \\\n    -e SLARUNNER_COMMAND=\"/bin/bash /src/test-scripts/run-tests.sh\" \\\n    -e SLARUNNER_SERVICE=example-service \\\n    -e SLARUNNER_GROUPS=\"dev-team,critical\" \\\n    -e SLARUNNER_DELAY=30 \\\n    -e SLARUNNER_SNSTOPICNAME=\"sla-monitor-result-published-$AWS_ENV\" \\\n    -e SLARUNNER_S3BUCKETNAME=\"sla-monitoring-logs-$AWS_ENV\" \\\n    --full-entrypoint \"sla-runner\" \\\n    --region us-east-1 \\\n    --profile $AWS_ENV \\\n    --role sla-monitor-runner-role-$AWS_ENV \\\n    --image sla-monitor/sla-runner:latest\n```\n\nIn ECS, add these as environment variables in the task definition or load from ssm via ssm-starter:\n\n```\n--full-entrypoint \"ssm-starter --ssm-name slarunner --command 'sla-runner'\"\n```\n\n## Variables\n\nThe runner takes the following values which are provided by environment variable. \n\n### Global variables\n\nWhen loading variables via SSM and ssm-starter, you can define default variables by adding a globals path before the service path.\n\nFor example, in your task definition in terraform:\n\n```json\n    \"entryPoint\": [\"ssm-starter\"],\n    \"command\": [\n        \"--ssm-name\", \"sla-monitor-globals\",\n        \"--ssm-name\", \"${var.application}\",\n        \"--command\", \"sla-runner\" // or script that runs sla-runner\n    ]\n```\n\n#### command\n\n$SLARUNNER_COMMAND\n\nCommand to be run repeatedly. Pretty straightforward. If there is an interrupt, the runner will attempt to finish the command gracefully before exit.\n\n#### service\n\n$SLARUNNER_SERVICE\n\nName of the component service you're testing. This will be used as the prefix for s3 uploads, and will be passed in the JSON event as \"service\" to SNS.\n\n#### groups\n\n$SLARUNNER_GROUPS\n\nName of the grouping of components you're testing, in csv format. This will be passed in the JSON event as \"groups\" to SNS as a list, and is meant to provide secondary statistics if multiple services are part of the same component.\n\n#### delay\n\n$SLARUNNER_DELAY\n\nHow long to wait between commands being run in seconds.\n\n#### disabled\n\n$SLARUNNER_DISABLED\n\nTo disable sla-runner at startup.\n\n#### sns-topic-arn\n\n$SLARUNNER_SNSTOPICARN\n\nSNS topic arn to publish results to. It will be published as a JSON object. For example, the command above would produce the following:\n\n```json\n{\n    \"service\": \"example-service\",\n    \"group\": [\"dev-team\", \"critical\"],\n    \"succeeded\": true,\n    \"timestamp\": \"1574515200\",\n    \"testExecutionSecs\": \"914\"\n}\n```\n\n#### s3-bucket-name\n\n$SLARUNNER_S3BUCKETNAME\n\nBucket to write logs to. This is an optional parameter. The object will be named as the timestamp followed by the result for easily searching by result, and will be prefixed by the service name. For example \"example-service/1574514000_SUCCESS\"\n\n#### dry-run\n\n$SLARUNNER_DRYRUN\n\nIf there is any value at all in this variable, the test will run once, output the sns topic it would publish to, the result message, the log output of the command, and the name of the object that would be written to the bucket. It will NOT publish to sns or write the object to s3. Only for testing purposes.\n\n## Development and Testing\n\n```bash\ndocker build -t sla-runner:latest .\n```\n\n```bash\niam-docker-run \\\n    --image sla-runner:latest \\\n    --role sla-monitor-runner-role \\\n    --profile dev \\\n    --region us-east-1 \\\n    --host-source-path . \\\n    --container-source-path /src \\\n    --shell\n```\n\n## Publishing Updates to PyPi\n\nFor the maintainer - to publish an updated version of ssm-search, increment the version number in version.py and run the following:\n\ndocker build -t sla-runner . && \\\ndocker run --rm -it --entrypoint make sla-runner publish\n\nAt the prompts, enter the username and password to the pypi.org repo.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/billtrust/sla-monitor-runner", "keywords": "sla-testing,aws-sla-reporting,sla-monitor,sla,continuous runner", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sla-runner", "package_url": "https://pypi.org/project/sla-runner/", "platform": "", "project_url": "https://pypi.org/project/sla-runner/", "project_urls": {"Homepage": "https://github.com/billtrust/sla-monitor-runner"}, "release_url": "https://pypi.org/project/sla-runner/0.0.18/", "requires_dist": ["boto3 (<2.0,>=1.7.20)", "botocore (<2.0,>=1.10.20)"], "requires_python": "", "summary": "A continuous test runner for gathering SLA data", "version": "0.0.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SLA Monitor Worker</h1>\n<p>This is the test runner portion of the SLA monitor/reporter. It performs tests (or any command you want) repeatedly, and publishes success/failure to an SNS topic for external processing (for example, using lambda to write to a custom cloudwatch metric), as well as optionally uploading logs to an S3 bucket.</p>\n<p>TODO: Unit tests not working</p>\n<h2>Installing</h2>\n<p>To install simply install via pip</p>\n<pre>pip install --user sla-runner\n</pre>\n<p>Highly recommended is iam-docker run:</p>\n<pre>pip install --user iam-docker-run\n</pre>\n<p>This project assumes you are using role based authentication, as would be used in a production environment in AWS. This mimics that environment by running with an actual role.</p>\n<h2>Terraform</h2>\n<p>Excute the following in the root folder to run terraform. Obviously, have Terraform installed. Set the bucket and table variables to existing backend resources for remote state.</p>\n<pre><span class=\"c1\"># pip install iam-starter</span>\n<span class=\"nb\">cd</span> terraform\n<span class=\"nb\">export</span> <span class=\"nv\">AWS_ENV</span><span class=\"o\">=</span><span class=\"s2\">\"dev\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">TF_DATA_DIR</span><span class=\"o\">=</span><span class=\"s2\">\"./.</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">-terraform/\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">AWS_DEFAULT_REGION</span><span class=\"o\">=</span><span class=\"s2\">\"us-east-1\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">TF_STATE_REGION</span><span class=\"o\">=</span><span class=\"s2\">\"us-east-1\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">TF_STATE_BUCKET</span><span class=\"o\">=</span><span class=\"s2\">\"mycompany-tfstate-</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">TF_STATE_TABLE</span><span class=\"o\">=</span><span class=\"s2\">\"tfstate_</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">\"</span>\n\niam-starter <span class=\"se\">\\</span>\n    --profile <span class=\"nv\">$AWS_ENV</span> <span class=\"se\">\\</span>\n    --command <span class=\"se\">\\</span>\n        <span class=\"s2\">\"terraform init \\</span>\n<span class=\"s2\">        -backend-config=\\\"region=</span><span class=\"nv\">$TF_STATE_REGION</span><span class=\"s2\">\\\" \\</span>\n<span class=\"s2\">        -backend-config=\\\"bucket=</span><span class=\"nv\">$TF_STATE_BUCKET</span><span class=\"s2\">\\\" \\</span>\n<span class=\"s2\">        -backend-config=\\\"dynamodb_table=</span><span class=\"nv\">$TF_STATE_TABLE</span><span class=\"s2\">\\\" &amp;&amp; \\</span>\n<span class=\"s2\">        terraform apply \\</span>\n<span class=\"s2\">        -var \\\"aws_env=</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">\\\" \\</span>\n<span class=\"s2\">        -var \\\"aws_region=</span><span class=\"nv\">$AWS_DEFAULT_REGION</span><span class=\"s2\">\\\"\"</span>\n</pre>\n<h2>Using</h2>\n<p>Use iam-docker-run outside of AWS to run tests. In real life scenarios on ECS, instead install sla-runner via pypi in your service container, and set <code>--image</code> to the image of the service container which contains your test.</p>\n<pre>docker build -t sla-monitor/sla-runner:latest .\n\n<span class=\"nb\">export</span> <span class=\"nv\">AWS_ENV</span><span class=\"o\">=</span><span class=\"s2\">\"dev\"</span>\niam-docker-run <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_COMMAND</span><span class=\"o\">=</span><span class=\"s2\">\"/bin/bash /src/test-scripts/run-tests.sh\"</span> <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_SERVICE</span><span class=\"o\">=</span>example-service <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_GROUPS</span><span class=\"o\">=</span><span class=\"s2\">\"dev-team,critical\"</span> <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_DELAY</span><span class=\"o\">=</span><span class=\"m\">30</span> <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_SNSTOPICNAME</span><span class=\"o\">=</span><span class=\"s2\">\"sla-monitor-result-published-</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">\"</span> <span class=\"se\">\\</span>\n    -e <span class=\"nv\">SLARUNNER_S3BUCKETNAME</span><span class=\"o\">=</span><span class=\"s2\">\"sla-monitoring-logs-</span><span class=\"nv\">$AWS_ENV</span><span class=\"s2\">\"</span> <span class=\"se\">\\</span>\n    --full-entrypoint <span class=\"s2\">\"sla-runner\"</span> <span class=\"se\">\\</span>\n    --region us-east-1 <span class=\"se\">\\</span>\n    --profile <span class=\"nv\">$AWS_ENV</span> <span class=\"se\">\\</span>\n    --role sla-monitor-runner-role-<span class=\"nv\">$AWS_ENV</span> <span class=\"se\">\\</span>\n    --image sla-monitor/sla-runner:latest\n</pre>\n<p>In ECS, add these as environment variables in the task definition or load from ssm via ssm-starter:</p>\n<pre><code>--full-entrypoint \"ssm-starter --ssm-name slarunner --command 'sla-runner'\"\n</code></pre>\n<h2>Variables</h2>\n<p>The runner takes the following values which are provided by environment variable.</p>\n<h3>Global variables</h3>\n<p>When loading variables via SSM and ssm-starter, you can define default variables by adding a globals path before the service path.</p>\n<p>For example, in your task definition in terraform:</p>\n<pre>    <span class=\"s2\">\"entryPoint\"</span><span class=\"err\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"ssm-starter\"</span><span class=\"p\">]</span><span class=\"err\">,</span>\n    <span class=\"s2\">\"command\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"--ssm-name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sla-monitor-globals\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"--ssm-name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"${var.application}\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"--command\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sla-runner\"</span> <span class=\"err\">//</span> <span class=\"err\">or</span> <span class=\"err\">script</span> <span class=\"err\">that</span> <span class=\"err\">runs</span> <span class=\"err\">sla-runner</span>\n    <span class=\"p\">]</span>\n</pre>\n<h4>command</h4>\n<p>$SLARUNNER_COMMAND</p>\n<p>Command to be run repeatedly. Pretty straightforward. If there is an interrupt, the runner will attempt to finish the command gracefully before exit.</p>\n<h4>service</h4>\n<p>$SLARUNNER_SERVICE</p>\n<p>Name of the component service you're testing. This will be used as the prefix for s3 uploads, and will be passed in the JSON event as \"service\" to SNS.</p>\n<h4>groups</h4>\n<p>$SLARUNNER_GROUPS</p>\n<p>Name of the grouping of components you're testing, in csv format. This will be passed in the JSON event as \"groups\" to SNS as a list, and is meant to provide secondary statistics if multiple services are part of the same component.</p>\n<h4>delay</h4>\n<p>$SLARUNNER_DELAY</p>\n<p>How long to wait between commands being run in seconds.</p>\n<h4>disabled</h4>\n<p>$SLARUNNER_DISABLED</p>\n<p>To disable sla-runner at startup.</p>\n<h4>sns-topic-arn</h4>\n<p>$SLARUNNER_SNSTOPICARN</p>\n<p>SNS topic arn to publish results to. It will be published as a JSON object. For example, the command above would produce the following:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"service\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example-service\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"group\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"dev-team\"</span><span class=\"p\">,</span> <span class=\"s2\">\"critical\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"succeeded\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1574515200\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"testExecutionSecs\"</span><span class=\"p\">:</span> <span class=\"s2\">\"914\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>s3-bucket-name</h4>\n<p>$SLARUNNER_S3BUCKETNAME</p>\n<p>Bucket to write logs to. This is an optional parameter. The object will be named as the timestamp followed by the result for easily searching by result, and will be prefixed by the service name. For example \"example-service/1574514000_SUCCESS\"</p>\n<h4>dry-run</h4>\n<p>$SLARUNNER_DRYRUN</p>\n<p>If there is any value at all in this variable, the test will run once, output the sns topic it would publish to, the result message, the log output of the command, and the name of the object that would be written to the bucket. It will NOT publish to sns or write the object to s3. Only for testing purposes.</p>\n<h2>Development and Testing</h2>\n<pre>docker build -t sla-runner:latest .\n</pre>\n<pre>iam-docker-run <span class=\"se\">\\</span>\n    --image sla-runner:latest <span class=\"se\">\\</span>\n    --role sla-monitor-runner-role <span class=\"se\">\\</span>\n    --profile dev <span class=\"se\">\\</span>\n    --region us-east-1 <span class=\"se\">\\</span>\n    --host-source-path . <span class=\"se\">\\</span>\n    --container-source-path /src <span class=\"se\">\\</span>\n    --shell\n</pre>\n<h2>Publishing Updates to PyPi</h2>\n<p>For the maintainer - to publish an updated version of ssm-search, increment the version number in version.py and run the following:</p>\n<p>docker build -t sla-runner . &amp;&amp; <br>\ndocker run --rm -it --entrypoint make sla-runner publish</p>\n<p>At the prompts, enter the username and password to the pypi.org repo.</p>\n\n          </div>"}, "last_serial": 7175289, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3a30efea2d8d72eb32943d62402eb080", "sha256": "cc9fa5dbee3ccd4ec66eaaa7e8caf88d350c9089a88e0905e19adfb4f370bd78"}, "downloads": -1, "filename": "sla-runner-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a30efea2d8d72eb32943d62402eb080", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5451, "upload_time": "2019-03-01T16:38:55", "upload_time_iso_8601": "2019-03-01T16:38:55.021761Z", "url": "https://files.pythonhosted.org/packages/af/64/3389f7d6135e06d63e6718a0bd5bfa3c36e05fe3b3c7bc07a69e737ab455/sla-runner-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "7a1c4cd7d8dc9ff6c2f6d2d2b7df4e27", "sha256": "9d66664903336cc07982bcd73ceb518953edf9d166f7151e1da173472d4f2940"}, "downloads": -1, "filename": "sla_runner-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7a1c4cd7d8dc9ff6c2f6d2d2b7df4e27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7494, "upload_time": "2020-04-11T22:45:18", "upload_time_iso_8601": "2020-04-11T22:45:18.399596Z", "url": "https://files.pythonhosted.org/packages/92/7b/48759e2ba8ee8655ad2c82fa001f28b19ef1616d0ee17aca825037589245/sla_runner-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc693d627c263727cfaa0c775065ccca", "sha256": "75cbb648025d7db3eee2fc018e7bcb231fdef03f6396cc74bf8d8523f6ca95cf"}, "downloads": -1, "filename": "sla-runner-0.0.10.tar.gz", "has_sig": false, "md5_digest": "dc693d627c263727cfaa0c775065ccca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6371, "upload_time": "2020-04-11T22:45:19", "upload_time_iso_8601": "2020-04-11T22:45:19.415679Z", "url": "https://files.pythonhosted.org/packages/3b/10/ab75e6d70a09e5382b310591bf766e49278276b8a04777191bf30e17918f/sla-runner-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "bacfc19c2c963624a6ea8cf07f5324f0", "sha256": "02bdc381115d315102bf1bb20fc28325143e9150852f7bce1e852594ef43c742"}, "downloads": -1, "filename": "sla_runner-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "bacfc19c2c963624a6ea8cf07f5324f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7395, "upload_time": "2020-04-12T12:21:08", "upload_time_iso_8601": "2020-04-12T12:21:08.104526Z", "url": "https://files.pythonhosted.org/packages/10/78/ffa5e38b375a94ad157a455a70b54b42d41159585e1ed10133e72e76804c/sla_runner-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d86116be046978ccba3b75b245188e3f", "sha256": "eb54cbdfd64ec3fdbe1c4bece1c7d53ddf789f48a412bf0bd8f31ff9be4413e9"}, "downloads": -1, "filename": "sla-runner-0.0.11.tar.gz", "has_sig": false, "md5_digest": "d86116be046978ccba3b75b245188e3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6306, "upload_time": "2020-04-12T12:21:09", "upload_time_iso_8601": "2020-04-12T12:21:09.019802Z", "url": "https://files.pythonhosted.org/packages/29/1b/40a3baa4dbbad1b31e4a7b72c49d265bf98235930141229c8008aa8c8d1c/sla-runner-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "4b4b07a4457048cfb3f1aba0f35495e9", "sha256": "7f4bc9a8a4b62d2d95e7334d36998760bfffd6b00cd1489a9b1f6016ebb9b1b0"}, "downloads": -1, "filename": "sla_runner-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "4b4b07a4457048cfb3f1aba0f35495e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7390, "upload_time": "2020-04-13T19:52:36", "upload_time_iso_8601": "2020-04-13T19:52:36.424839Z", "url": "https://files.pythonhosted.org/packages/f6/ef/313a09e1814a28f4da83ea678500a1fad14be6f39985989f2b4f5ee8cd80/sla_runner-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52738a8fde849fab02b250e1cce8ec11", "sha256": "c930acad80efbed6ef541b140690b32d8f9278959c373116936d1e77bd1dbb0f"}, "downloads": -1, "filename": "sla-runner-0.0.12.tar.gz", "has_sig": false, "md5_digest": "52738a8fde849fab02b250e1cce8ec11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6299, "upload_time": "2020-04-13T19:52:37", "upload_time_iso_8601": "2020-04-13T19:52:37.633452Z", "url": "https://files.pythonhosted.org/packages/29/98/81a3b1a548b60334b59a0f08fa296596f5821216a04dae8bb2e85c4f3e85/sla-runner-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "dc6c0889d9ae2a17f45c140801ff16fb", "sha256": "4af8c6de8f991574469c6b558f73304dccd53252aad3d5a56dc909cfcca0cbf1"}, "downloads": -1, "filename": "sla_runner-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "dc6c0889d9ae2a17f45c140801ff16fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7366, "upload_time": "2020-04-20T19:12:47", "upload_time_iso_8601": "2020-04-20T19:12:47.237300Z", "url": "https://files.pythonhosted.org/packages/f4/00/2c25b355a50d28ef59eacdcf953198ed7df6f9bd53a6a1ad24c6406cb4bd/sla_runner-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d85910c37f4195473e98b3aca9d61ce7", "sha256": "88823bc6af69252afcb85a0393df21d8215c5323753315dc2e2e1efabc920d63"}, "downloads": -1, "filename": "sla-runner-0.0.13.tar.gz", "has_sig": false, "md5_digest": "d85910c37f4195473e98b3aca9d61ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6272, "upload_time": "2020-04-20T19:12:48", "upload_time_iso_8601": "2020-04-20T19:12:48.359974Z", "url": "https://files.pythonhosted.org/packages/8e/f6/458739b8e1876140c4facfb3bed7b3b94eaf35be1a933ce392b584a1e2c2/sla-runner-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "219fb835ce4988e95a53362a8fdc5c7a", "sha256": "2694a64b1fa3c760777f62f6e4cca5faabd014fc22f466ef76a90b7d047df626"}, "downloads": -1, "filename": "sla_runner-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "219fb835ce4988e95a53362a8fdc5c7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7374, "upload_time": "2020-04-21T01:12:38", "upload_time_iso_8601": "2020-04-21T01:12:38.656374Z", "url": "https://files.pythonhosted.org/packages/75/0c/0e8f812a9d3b30b6124324e116389ab21dc598a4bd2c2d02b4c2c1747af0/sla_runner-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37555f3aeb6aece61afa786d728e624b", "sha256": "4b8cfbdfdbe55228088c802c7720b472578431a0641512260529bbfd25c7bd1e"}, "downloads": -1, "filename": "sla-runner-0.0.14.tar.gz", "has_sig": false, "md5_digest": "37555f3aeb6aece61afa786d728e624b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6279, "upload_time": "2020-04-21T01:12:39", "upload_time_iso_8601": "2020-04-21T01:12:39.885041Z", "url": "https://files.pythonhosted.org/packages/47/f4/6281b890e4e8dd54f31f8155b544bbdccaf31faf8553eb6bc5c068592926/sla-runner-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "240d4dcfac577298939fcd58a39bfbbb", "sha256": "e59f16eabff55c644b51a6bf943f711d8698c865ecce5490986b7ae70de9dfa2"}, "downloads": -1, "filename": "sla_runner-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "240d4dcfac577298939fcd58a39bfbbb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7371, "upload_time": "2020-04-21T01:20:00", "upload_time_iso_8601": "2020-04-21T01:20:00.127445Z", "url": "https://files.pythonhosted.org/packages/28/e8/eb504e5802d64a6759e83fb1ec8a00724add71b722281f079858151043b7/sla_runner-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b43e44ceb16ca17aadb5248095abc8", "sha256": "dfe6022a3ac6dea277a85a75a4f3d1d2317ae19bab77746ab3f4de21c0b564d9"}, "downloads": -1, "filename": "sla-runner-0.0.15.tar.gz", "has_sig": false, "md5_digest": "f5b43e44ceb16ca17aadb5248095abc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6276, "upload_time": "2020-04-21T01:20:01", "upload_time_iso_8601": "2020-04-21T01:20:01.628476Z", "url": "https://files.pythonhosted.org/packages/5e/2c/a4948b1aaaa83bc084073a1d1f3228014ce61a67cc5f8f8c777d9b1b7014/sla-runner-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "e98fc84b45681db403edd620df9e7de2", "sha256": "f641ba4edcae097ca60f30d35f4b5bc300375e372fb24bc56907656cade7d38c"}, "downloads": -1, "filename": "sla_runner-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "e98fc84b45681db403edd620df9e7de2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7376, "upload_time": "2020-04-23T20:56:56", "upload_time_iso_8601": "2020-04-23T20:56:56.461790Z", "url": "https://files.pythonhosted.org/packages/5f/3c/bb50c8a2d9d6ef59ae5aa60b5ff6fe5dbd2ea0d4bfaab67a498520ac4f64/sla_runner-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78182107369e41b91c0436c2f182b66b", "sha256": "502dfa1c05fbcdcca747ce9279e3bb45f58056b072e42a9d246a74d671866579"}, "downloads": -1, "filename": "sla-runner-0.0.16.tar.gz", "has_sig": false, "md5_digest": "78182107369e41b91c0436c2f182b66b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6279, "upload_time": "2020-04-23T20:56:57", "upload_time_iso_8601": "2020-04-23T20:56:57.691505Z", "url": "https://files.pythonhosted.org/packages/29/ef/c8aec36aaa81d55550cc23c5a7e082ff85075be870c156ffe5502976a637/sla-runner-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "f3623205c1106508be8015950202c367", "sha256": "e8566753f7d5fb02ae954d4e2b7088aa5b2ba806cfe451e79ad9cf1d1f5312bc"}, "downloads": -1, "filename": "sla_runner-0.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "f3623205c1106508be8015950202c367", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7370, "upload_time": "2020-04-28T17:52:10", "upload_time_iso_8601": "2020-04-28T17:52:10.497569Z", "url": "https://files.pythonhosted.org/packages/c3/51/7f4d953919d3fa6b00382aef0419f063d00fbd8bf46ebc2d0734efc02ebb/sla_runner-0.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1fa15a7c59123c259d3f91526278aea", "sha256": "a3fb69ddaa5b59e8108df4e3ef1f7afe2e371182b220084550249ee43c4ef7a9"}, "downloads": -1, "filename": "sla-runner-0.0.17.tar.gz", "has_sig": false, "md5_digest": "a1fa15a7c59123c259d3f91526278aea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6279, "upload_time": "2020-04-28T17:52:11", "upload_time_iso_8601": "2020-04-28T17:52:11.955555Z", "url": "https://files.pythonhosted.org/packages/eb/34/ea94a07ac188c0ff283e7564b117d4d7aba2f830757708d09b4f9a649775/sla-runner-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "5cbccf33c00983997786fbfc44525719", "sha256": "7e641df2e95662c38f2e6969b9f8ed1f173bb709bd7ade28cd6c2a622a5a75bb"}, "downloads": -1, "filename": "sla_runner-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "5cbccf33c00983997786fbfc44525719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7382, "upload_time": "2020-05-05T20:09:05", "upload_time_iso_8601": "2020-05-05T20:09:05.018718Z", "url": "https://files.pythonhosted.org/packages/4e/b7/0198d7568dbc55fc23c418be19302c517c650dbf4202c51c5ec7a0a15911/sla_runner-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "664d10895762ae85e5a84024fd9f223d", "sha256": "fbf201e43e39d866f8a5b40c2e0539a3cfa3157349bbf873a07b201b35d83ea1"}, "downloads": -1, "filename": "sla-runner-0.0.18.tar.gz", "has_sig": false, "md5_digest": "664d10895762ae85e5a84024fd9f223d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6288, "upload_time": "2020-05-05T20:09:06", "upload_time_iso_8601": "2020-05-05T20:09:06.463371Z", "url": "https://files.pythonhosted.org/packages/ac/a5/5026003baca8b18068ba910b4fdd372d67a74171f8fa83540db55b87bfb4/sla-runner-0.0.18.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bc89ede59a94a94bf1c439ce5c29db55", "sha256": "f50b485ab7c8c22e5103f5fb03ea06af9948e7a6ce8125ae60ec727b954baaea"}, "downloads": -1, "filename": "sla-runner-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bc89ede59a94a94bf1c439ce5c29db55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5844, "upload_time": "2019-03-06T18:33:21", "upload_time_iso_8601": "2019-03-06T18:33:21.003479Z", "url": "https://files.pythonhosted.org/packages/7b/ec/0d599c33a1faf3bf22ab310183bcd971722056a18bed7e94691e24bf96b8/sla-runner-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6a7a695ff9d8e399ad324d4c11cf3ba1", "sha256": "b9000195ab2d03221cc8f8c0f8efee901fcacfc0920427db5b2bb8cce33456bb"}, "downloads": -1, "filename": "sla-runner-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6a7a695ff9d8e399ad324d4c11cf3ba1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5850, "upload_time": "2019-03-28T19:36:16", "upload_time_iso_8601": "2019-03-28T19:36:16.017163Z", "url": "https://files.pythonhosted.org/packages/17/0b/87cd8b1273a121eb21e0df2f6788e01634ebed8308a5bd8bfca711f91ff8/sla-runner-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6b5c08c5a79b763767cdf38f20c7ec3f", "sha256": "fd8f024ea2f708631c4a8ab8125ef0c9bc4f7c8a04db12ef7844e8632318b4d5"}, "downloads": -1, "filename": "sla-runner-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6b5c08c5a79b763767cdf38f20c7ec3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5529, "upload_time": "2019-04-12T14:13:53", "upload_time_iso_8601": "2019-04-12T14:13:53.488306Z", "url": "https://files.pythonhosted.org/packages/db/61/313dda552ee70694961188a6b595d516798d9a862fc41aacb0e8ac051efa/sla-runner-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "28efb22c1b70ce88b99da228b1ed265b", "sha256": "4bda5892f64811ffcf56725c38ff674ef4a2cf45d7e78d5d7dc1e784dbe50bcd"}, "downloads": -1, "filename": "sla-runner-0.0.5.tar.gz", "has_sig": false, "md5_digest": "28efb22c1b70ce88b99da228b1ed265b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5856, "upload_time": "2019-04-15T15:43:54", "upload_time_iso_8601": "2019-04-15T15:43:54.203738Z", "url": "https://files.pythonhosted.org/packages/d5/93/64292a32cfe84f3d26c88a4abf3fc02a01441c723e65169759dac6bafdec/sla-runner-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "3e68c076db376c9d9627805e6ec13f53", "sha256": "4ef76c3e58ef6ca1a227190a23803d1c163a8ee86a3f4623df0fbfa0aa0d31b3"}, "downloads": -1, "filename": "sla-runner-0.0.6.tar.gz", "has_sig": false, "md5_digest": "3e68c076db376c9d9627805e6ec13f53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5858, "upload_time": "2019-04-15T23:59:20", "upload_time_iso_8601": "2019-04-15T23:59:20.558577Z", "url": "https://files.pythonhosted.org/packages/8b/77/a749cf2bf33ca7b841554750b266da25324bb9b65953d44bffcd94380dde/sla-runner-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7090cbcda3003df0530999ecc03bda3a", "sha256": "5639303df68e273c8a6d12127bdc9592e21990fb76e3d9420551a7ac0b613544"}, "downloads": -1, "filename": "sla-runner-0.0.7.tar.gz", "has_sig": false, "md5_digest": "7090cbcda3003df0530999ecc03bda3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2019-04-30T16:40:49", "upload_time_iso_8601": "2019-04-30T16:40:49.766785Z", "url": "https://files.pythonhosted.org/packages/88/8b/e949f0be25cf5ce8fda416144084dfb4effb1286748f21a1b00528c052f6/sla-runner-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "74071076a7d4215566417231cb62627c", "sha256": "18013df1c83fb397ec39ea343cc59ebb624e5e3fef5a1c85485d824afd2bc17d"}, "downloads": -1, "filename": "sla-runner-0.0.8.tar.gz", "has_sig": false, "md5_digest": "74071076a7d4215566417231cb62627c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6069, "upload_time": "2019-04-30T18:53:45", "upload_time_iso_8601": "2019-04-30T18:53:45.647003Z", "url": "https://files.pythonhosted.org/packages/ae/19/8441f66e3e0f3382068f580cadd7e934a59e33e534a47af7b2b696ffba38/sla-runner-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "bb066abffea8be7206608b20cf2e114c", "sha256": "67cf90f5c92ed2c7030d517ba13b8eb26c904e04cb418b0bbd3d2a802981996d"}, "downloads": -1, "filename": "sla_runner-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "bb066abffea8be7206608b20cf2e114c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7322, "upload_time": "2019-11-05T11:50:03", "upload_time_iso_8601": "2019-11-05T11:50:03.748638Z", "url": "https://files.pythonhosted.org/packages/1c/c7/a04d7d133ebd726e6d7fe70f0b4a62d13b807821d7d1c7609ba4438dc12e/sla_runner-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79be95e6d1cbf84d1d757b447f9adba5", "sha256": "cce05c7187acd29818159d80820986e7bc7182b909d4e15ccb4205a4048e6917"}, "downloads": -1, "filename": "sla-runner-0.0.9.tar.gz", "has_sig": false, "md5_digest": "79be95e6d1cbf84d1d757b447f9adba5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6240, "upload_time": "2019-11-05T11:50:05", "upload_time_iso_8601": "2019-11-05T11:50:05.466867Z", "url": "https://files.pythonhosted.org/packages/26/37/669906743fdb41d9085e3a0e49d3eb26a036c8a4d93619c43646d4557b2c/sla-runner-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cbccf33c00983997786fbfc44525719", "sha256": "7e641df2e95662c38f2e6969b9f8ed1f173bb709bd7ade28cd6c2a622a5a75bb"}, "downloads": -1, "filename": "sla_runner-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "5cbccf33c00983997786fbfc44525719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7382, "upload_time": "2020-05-05T20:09:05", "upload_time_iso_8601": "2020-05-05T20:09:05.018718Z", "url": "https://files.pythonhosted.org/packages/4e/b7/0198d7568dbc55fc23c418be19302c517c650dbf4202c51c5ec7a0a15911/sla_runner-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "664d10895762ae85e5a84024fd9f223d", "sha256": "fbf201e43e39d866f8a5b40c2e0539a3cfa3157349bbf873a07b201b35d83ea1"}, "downloads": -1, "filename": "sla-runner-0.0.18.tar.gz", "has_sig": false, "md5_digest": "664d10895762ae85e5a84024fd9f223d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6288, "upload_time": "2020-05-05T20:09:06", "upload_time_iso_8601": "2020-05-05T20:09:06.463371Z", "url": "https://files.pythonhosted.org/packages/ac/a5/5026003baca8b18068ba910b4fdd372d67a74171f8fa83540db55b87bfb4/sla-runner-0.0.18.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:31 2020"}