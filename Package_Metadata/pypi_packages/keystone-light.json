{"info": {"author": "Walter Doekes, OSSO B.V.", "author_email": "wjdoekes+keystone-light@osso.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "keystone-light :: A limited Identity API v3 python client\n=========================================================\n\nkeystone-light implements a Python interface to a very limited subset of\nthe `OpenStack Identity API v3`_.\n\nInitial goal: *access to OpenStack Swift, using the Identity API v3, but\nwith a lot fewer dependencies.*\n\nAs of this writing, the ``python-keystoneclient`` requires\n``keystoneauth1`` and ``oslo.*``, which in turn require some more. We\nonly require the *ubiquitous* ``requests`` (and ``PyYAML``), which you\ngenerally already have installed anyway.\n\n\nExample usage\n-------------\n\n.. code-block:: python\n\n    #!/usr/bin/env python3\n    from urllib.parse import urljoin\n\n    import requests\n    from keystone_light import Cloud, CloudConfig, PermissionDenied\n\n\n    def get_projects(cloud):\n        \"Yields projects, sorted by domain and project name\"\n        domains = cloud.get_domains()\n        for domain in sorted(domains, key=(lambda x: x.name)):\n            if domain.name == 'Default':\n                # print('WARN: skipping domain Default (fixme?)')\n                continue\n\n            projects = domain.get_projects()\n            for project in sorted(projects, key=(lambda x: x.name)):\n                project.domain = domain\n                yield project\n\n\n    def get_swift_stat_ensuring_permissions(project):\n        \"Get Swift v1 stat on a project (previously: tenant)\"\n        try:\n            stat = project.get_swift().get_stat()\n        except PermissionDenied:\n            # We don't have permission to access the project? Upgrade the\n            # permissions and try again.\n            cloud = project.cloud\n            admin_role = cloud.get_role(name='admin')  # or 'reader'\n            dom_admin_group = project.domain.get_admin_group()\n\n            url = urljoin(\n                cloud.base_url,\n                ('/v3/projects/{project_id}/groups/{group_id}/'\n                 'roles/{role_id}').format(\n                    project_id=project.id, group_id=dom_admin_group.id,\n                    role_id=admin_role.id))\n            out = requests.put(\n                url, headers={'X-Auth-Token': str(cloud.get_system_token())})\n            assert out.status_code in (201, 204), (out.status_code, out.text)\n\n            # Try again. Should succeed if the cloud admin user is in the\n            # dom_admin_group.\n            stat = project.get_swift().get_stat()\n\n        return stat\n\n\n    # Take config from ~/.config/openstack/clouds.yaml and select\n    # 'my-cloud-admin', like the openstack(1) --os-cloud option.\n    config = CloudConfig('my-cloud-admin')\n    cloud = Cloud(config)\n    for project in get_projects(cloud):\n        swift_stat = get_swift_stat_ensuring_permissions(project)\n        print('{:15s} {:23s} {:21d} B ({} objects, {} containers)'.format(\n            project.domain.name[0:15], project.name,\n            int(swift_stat['X-Account-Bytes-Used']),\n            swift_stat['X-Account-Object-Count'],\n            swift_stat['X-Account-Container-Count']))\n\n\nExample output\n--------------\n\n.. code-block:: console\n\n    $ python3 example.py\n    domainx         project                  3489 B (2 objects, 1 containers)\n    domainx         otherproject       1455042022 B (267 objects, 1 containers)\n    ...\n\n\n.. _`OpenStack Identity API v3`: https://docs.openstack.org/api-ref/identity/v3/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ossobv/keystone-light", "keywords": "", "license": "LGPLv3+", "maintainer": "", "maintainer_email": "", "name": "keystone-light", "package_url": "https://pypi.org/project/keystone-light/", "platform": "linux", "project_url": "https://pypi.org/project/keystone-light/", "project_urls": {"Homepage": "https://github.com/ossobv/keystone-light"}, "release_url": "https://pypi.org/project/keystone-light/0.2/", "requires_dist": null, "requires_python": "", "summary": "A limited OpenStack Identity API v3 client in Python (with fewer dependencies)", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>keystone-light implements a Python interface to a very limited subset of\nthe <a href=\"https://docs.openstack.org/api-ref/identity/v3/\" rel=\"nofollow\">OpenStack Identity API v3</a>.</p>\n<p>Initial goal: <em>access to OpenStack Swift, using the Identity API v3, but\nwith a lot fewer dependencies.</em></p>\n<p>As of this writing, the <tt><span class=\"pre\">python-keystoneclient</span></tt> requires\n<tt>keystoneauth1</tt> and <tt>oslo.*</tt>, which in turn require some more. We\nonly require the <em>ubiquitous</em> <tt>requests</tt> (and <tt>PyYAML</tt>), which you\ngenerally already have installed anyway.</p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">urljoin</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keystone_light</span> <span class=\"kn\">import</span> <span class=\"n\">Cloud</span><span class=\"p\">,</span> <span class=\"n\">CloudConfig</span><span class=\"p\">,</span> <span class=\"n\">PermissionDenied</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_projects</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"p\">):</span>\n    <span class=\"s2\">\"Yields projects, sorted by domain and project name\"</span>\n    <span class=\"n\">domains</span> <span class=\"o\">=</span> <span class=\"n\">cloud</span><span class=\"o\">.</span><span class=\"n\">get_domains</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">domain</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">domains</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'Default'</span><span class=\"p\">:</span>\n            <span class=\"c1\"># print('WARN: skipping domain Default (fixme?)')</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"n\">projects</span> <span class=\"o\">=</span> <span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">get_projects</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">project</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">projects</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n            <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"n\">domain</span>\n            <span class=\"k\">yield</span> <span class=\"n\">project</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_swift_stat_ensuring_permissions</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">):</span>\n    <span class=\"s2\">\"Get Swift v1 stat on a project (previously: tenant)\"</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">stat</span> <span class=\"o\">=</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">get_swift</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_stat</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">PermissionDenied</span><span class=\"p\">:</span>\n        <span class=\"c1\"># We don't have permission to access the project? Upgrade the</span>\n        <span class=\"c1\"># permissions and try again.</span>\n        <span class=\"n\">cloud</span> <span class=\"o\">=</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">cloud</span>\n        <span class=\"n\">admin_role</span> <span class=\"o\">=</span> <span class=\"n\">cloud</span><span class=\"o\">.</span><span class=\"n\">get_role</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>  <span class=\"c1\"># or 'reader'</span>\n        <span class=\"n\">dom_admin_group</span> <span class=\"o\">=</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">get_admin_group</span><span class=\"p\">()</span>\n\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">urljoin</span><span class=\"p\">(</span>\n            <span class=\"n\">cloud</span><span class=\"o\">.</span><span class=\"n\">base_url</span><span class=\"p\">,</span>\n            <span class=\"p\">(</span><span class=\"s1\">'/v3/projects/</span><span class=\"si\">{project_id}</span><span class=\"s1\">/groups/</span><span class=\"si\">{group_id}</span><span class=\"s1\">/'</span>\n             <span class=\"s1\">'roles/</span><span class=\"si\">{role_id}</span><span class=\"s1\">'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">group_id</span><span class=\"o\">=</span><span class=\"n\">dom_admin_group</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"n\">role_id</span><span class=\"o\">=</span><span class=\"n\">admin_role</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">))</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span>\n            <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'X-Auth-Token'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"o\">.</span><span class=\"n\">get_system_token</span><span class=\"p\">())})</span>\n        <span class=\"k\">assert</span> <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">201</span><span class=\"p\">,</span> <span class=\"mi\">204</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Try again. Should succeed if the cloud admin user is in the</span>\n        <span class=\"c1\"># dom_admin_group.</span>\n        <span class=\"n\">stat</span> <span class=\"o\">=</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">get_swift</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_stat</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">stat</span>\n\n\n<span class=\"c1\"># Take config from ~/.config/openstack/clouds.yaml and select</span>\n<span class=\"c1\"># 'my-cloud-admin', like the openstack(1) --os-cloud option.</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">CloudConfig</span><span class=\"p\">(</span><span class=\"s1\">'my-cloud-admin'</span><span class=\"p\">)</span>\n<span class=\"n\">cloud</span> <span class=\"o\">=</span> <span class=\"n\">Cloud</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">project</span> <span class=\"ow\">in</span> <span class=\"n\">get_projects</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"p\">):</span>\n    <span class=\"n\">swift_stat</span> <span class=\"o\">=</span> <span class=\"n\">get_swift_stat_ensuring_permissions</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{:15s}</span><span class=\"s1\"> </span><span class=\"si\">{:23s}</span><span class=\"s1\"> </span><span class=\"si\">{:21d}</span><span class=\"s1\"> B (</span><span class=\"si\">{}</span><span class=\"s1\"> objects, </span><span class=\"si\">{}</span><span class=\"s1\"> containers)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">swift_stat</span><span class=\"p\">[</span><span class=\"s1\">'X-Account-Bytes-Used'</span><span class=\"p\">]),</span>\n        <span class=\"n\">swift_stat</span><span class=\"p\">[</span><span class=\"s1\">'X-Account-Object-Count'</span><span class=\"p\">],</span>\n        <span class=\"n\">swift_stat</span><span class=\"p\">[</span><span class=\"s1\">'X-Account-Container-Count'</span><span class=\"p\">]))</span>\n</pre>\n</div>\n<div id=\"example-output\">\n<h2>Example output</h2>\n<pre><span class=\"gp\">$</span> python3 example.py\n<span class=\"go\">domainx         project                  3489 B (2 objects, 1 containers)\ndomainx         otherproject       1455042022 B (267 objects, 1 containers)\n...</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6486716, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "64a01e65c03d8deec6c22826f9d80b6b", "sha256": "2d9cc5845e391063e7f7d2b89c6f95167dacf1a1772bcec023ca845caaf71ca9"}, "downloads": -1, "filename": "keystone-light-0.1.tar.gz", "has_sig": false, "md5_digest": "64a01e65c03d8deec6c22826f9d80b6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8209, "upload_time": "2019-12-16T11:09:05", "upload_time_iso_8601": "2019-12-16T11:09:05.386802Z", "url": "https://files.pythonhosted.org/packages/d6/8f/d317670699bbdf598459f193c498cc966a955fc1d819182966d333417dac/keystone-light-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "882a16b335d92ed34fcea58a770bc572", "sha256": "39d1dfabbc3e1da9baa5bfb458571cba5bd200ce4c229df82ce30abcbd8b4c99"}, "downloads": -1, "filename": "keystone-light-0.2.tar.gz", "has_sig": false, "md5_digest": "882a16b335d92ed34fcea58a770bc572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8319, "upload_time": "2020-01-20T12:37:46", "upload_time_iso_8601": "2020-01-20T12:37:46.651857Z", "url": "https://files.pythonhosted.org/packages/de/2c/eacf8341fde766f3a9fc5819ec7d3466802275c0a23030d55f26e2f051c3/keystone-light-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "882a16b335d92ed34fcea58a770bc572", "sha256": "39d1dfabbc3e1da9baa5bfb458571cba5bd200ce4c229df82ce30abcbd8b4c99"}, "downloads": -1, "filename": "keystone-light-0.2.tar.gz", "has_sig": false, "md5_digest": "882a16b335d92ed34fcea58a770bc572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8319, "upload_time": "2020-01-20T12:37:46", "upload_time_iso_8601": "2020-01-20T12:37:46.651857Z", "url": "https://files.pythonhosted.org/packages/de/2c/eacf8341fde766f3a9fc5819ec7d3466802275c0a23030d55f26e2f051c3/keystone-light-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:56 2020"}