{"info": {"author": "Hyeonki Hong", "author_email": "hhk7734@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: System :: Hardware"], "description": "![license](https://img.shields.io/github/license/hhk7734/python3-gpiodcxx)\n![pypi](https://img.shields.io/pypi/v/gpiodcxx)\n![language](https://img.shields.io/github/languages/top/hhk7734/python3-gpiodcxx)\n\n# python3-gpiodcxx\n\nRef: <a href=\"https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git\" target=_blank>https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git</a>\n\n## Installation\n\n```shell\nsudo apt update \\\n&& sudo apt install -y python3 python3-dev python3-pip \\\n    gpiod libgpiod-dev pkg-config\n```\n\n```shell\npython3 -m pip install -U --user pip gpiodcxx\n```\n\nIf you see **\"OSError: pkg-config: Failed to find libgpiodcxx.\"**, you need to install libgpiodcxx manually.\n\n```shell\nsudo apt purge -y gpiod libgpiod-dev\n```\n\n```shell\nsudo apt install -y git autoconf-archive\n```\n\n```shell\ngit clone git://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git \\\n&& cd libgpiod\n```\n\nIf the kernel version is 5.4 or lower, use `git checkout v1.4.2` to change the version.(Change it to less than v1.5)\n\n```shell\n./autogen.sh --enable-tools=yes --prefix=/usr --enable-bindings-cxx \\\n&& make \\\n&& sudo make install\n```\n\n```shell\npython3 -m pip install -U --user gpiodcxx\n```\n\n## help command\n\n```python\n>>> import gpiodcxx\n>>> help(gpiodcxx)\n>>> help(gpiodcxx.chip)\n>>> help(gpiodcxx.chip.get_line)\n\nHelp on instancemethod in module gpiodcxx._gpiod:\n\nget_line(...)\n    get_line(self: gpiodcxx._gpiod.chip, offset: int) -> gpiod::line\n\n    /**\n     * @brief Get the line exposed by this chip at given offset.\n     * @param offset Offset of the line.\n     * @return Line object.\n     */\n```\n\n## Test\n\n```shell\npython3 -m gpiodcxx.test.blink <chip> <line offset>\npython3 -m gpiodcxx.test.blinks <chip> <line offset1> [<line offset2> ...]\npython3 -m gpiodcxx.test.button <chip> <line offset> [rising|falling|both]\n```\n\n## Blink example\n\n### Python3\n\n```python\nimport gpiodcxx\nimport sys\nimport time\n\nif len(sys.argv) > 2:\n    LED_CHIP = sys.argv[1]\n    LED_LINE_OFFSET = int(sys.argv[2])\nelse:\n    print('''Usage:\n    python3 blink.py <chip> <line offset>''')\n    sys.exit()\n\nchip = gpiodcxx.chip(LED_CHIP)\nled = chip.get_line(LED_LINE_OFFSET)\n\nconfig = gpiodcxx.line_request()\nconfig.consumer = \"Blink\"\nconfig.request_type = gpiodcxx.line_request.DIRECTION_OUTPUT\n\nled.request(config)\n\nwhile True:\n    led.set_value(0)\n    time.sleep(0.1)\n    led.set_value(1)\n    time.sleep(0.1)\n```\n\n### C++\n\n```c++\n#include <chrono>\n#include <cstdlib>\n#include <gpiod.hpp>\n#include <iostream>\n#include <string>\n#include <thread>\n\nint main(int argc, char **argv) {\n    std::string LED_CHIP;\n    int         LED_LINE_OFFSET;\n\n    if(argc > 2) {\n        LED_CHIP        = argv[1];\n        LED_LINE_OFFSET = std::stoi(argv[2]);\n    } else {\n        std::cout << \"Usage:\" << std::endl\n                  << \"    ./blink <chip> <line offset>\" << std::endl;\n        std::exit(0);\n    }\n\n    gpiod::chip chip(LED_CHIP);\n    gpiod::line led = chip.get_line(LED_LINE_OFFSET);\n\n    gpiod::line_request config;\n    config.consumer     = \"Blink\";\n    config.request_type = gpiod::line_request::DIRECTION_OUTPUT;\n\n    led.request(config);\n\n    while(1) {\n        led.set_value(0);\n        std::this_thread::sleep_for(std::chrono::milliseconds(100));\n        led.set_value(1);\n        std::this_thread::sleep_for(std::chrono::milliseconds(100));\n    }\n}\n```\n\n```shell\ng++ -o blink test.cpp -lgpiodcxx\n```\n\n## Changelog\n\nRef: CHANGELOG\n\npython3-gpiodcxx (0.6.0) unstable; urgency=medium\n\n  * Change package name from gpiod to gpiodcxx\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 26 Mar 2020 14:08:29 +0900\n\npython3-gpiod (0.5.3) unstable; urgency=medium\n\n  * Add std::bitset<32> type caster\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 26 Mar 2020 11:39:33 +0900\n\npython3-gpiod (0.5.2) unstable; urgency=medium\n\n  * Add documentation for tested methods\n  * Add test code\n  * Update README.md\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Fri, 20 Mar 2020 13:17:41 +0900\n\npython3-gpiod (0.5.1) unstable; urgency=medium\n\n  * Move xxx class into xxx_wrapper.h\n  * Add blink test module\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Fri, 20 Mar 2020 00:58:05 +0900\n\npython3-gpiod (0.5.0) unstable; urgency=medium\n\n  * Add pybind11/chrono.h for std::chrono\n  * Prevent installation if libgpiodcxx v1.0 or lower\n  * Add xxx_lines into chip class\n  * Add operators\n  * Add MAX_LINES attribute\n  * Fix issue where 'setup.py sdist' is not executed\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Sat, 14 Mar 2020 02:37:13 +0900\n\npython3-gpiod (0.4.1) unstable; urgency=medium\n\n  * Fix issue where pip does not install dependencies\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 12 Mar 2020 19:11:24 +0900\n\npython3-gpiod (0.4.0) unstable; urgency=medium\n\n  * Add libgpiodcxx version check\n  * Remove -std=c++11 option\n  * Add line_bulk, chip_iter, line_iter classes\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 12 Mar 2020 14:18:16 +0900\n\npython3-gpiod (0.3.0) unstable; urgency=medium\n\n  * Add open, reset function\n  * Add LICENSE\n  * Create README.md\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 11 Mar 2020 18:58:14 +0900\n\npython3-gpiod (0.2.0) unstable; urgency=medium\n\n  * Add chip, line_request, line, line_event class\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 11 Mar 2020 13:28:45 +0900\n\npython3-gpiod (0.1.0) unstable; urgency=medium\n\n  * Add initial setup files\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Tue, 10 Mar 2020 15:40:13 +0900", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hhk7734/python3-gpiodcxx", "keywords": "GPIO,gpiod,c++", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gpiodcxx", "package_url": "https://pypi.org/project/gpiodcxx/", "platform": "", "project_url": "https://pypi.org/project/gpiodcxx/", "project_urls": {"Homepage": "https://github.com/hhk7734/python3-gpiodcxx", "Source": "https://github.com/hhk7734/python3-gpiodcxx.git"}, "release_url": "https://pypi.org/project/gpiodcxx/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3078c78256dafa79692590329c6637736bc76d0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68686b373733342f707974686f6e332d6770696f64637878\">\n<img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcee19b1d7ce0dfb62ee1d93c42183a7d3bfa773/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6770696f64637878\">\n<img alt=\"language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db1b2ef39c15114b8295ca91bc0b302e03327d14/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f68686b373733342f707974686f6e332d6770696f64637878\"></p>\n<h1>python3-gpiodcxx</h1>\n<p>Ref: <a href=\"https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git\" rel=\"nofollow\"></a><a href=\"https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git\" rel=\"nofollow\">https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git</a></p>\n<h2>Installation</h2>\n<pre>sudo apt update <span class=\"se\">\\</span>\n<span class=\"o\">&amp;&amp;</span> sudo apt install -y python3 python3-dev python3-pip <span class=\"se\">\\</span>\n    gpiod libgpiod-dev pkg-config\n</pre>\n<pre>python3 -m pip install -U --user pip gpiodcxx\n</pre>\n<p>If you see <strong>\"OSError: pkg-config: Failed to find libgpiodcxx.\"</strong>, you need to install libgpiodcxx manually.</p>\n<pre>sudo apt purge -y gpiod libgpiod-dev\n</pre>\n<pre>sudo apt install -y git autoconf-archive\n</pre>\n<pre>git clone git://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git <span class=\"se\">\\</span>\n<span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> libgpiod\n</pre>\n<p>If the kernel version is 5.4 or lower, use <code>git checkout v1.4.2</code> to change the version.(Change it to less than v1.5)</p>\n<pre>./autogen.sh --enable-tools<span class=\"o\">=</span>yes --prefix<span class=\"o\">=</span>/usr --enable-bindings-cxx <span class=\"se\">\\</span>\n<span class=\"o\">&amp;&amp;</span> make <span class=\"se\">\\</span>\n<span class=\"o\">&amp;&amp;</span> sudo make install\n</pre>\n<pre>python3 -m pip install -U --user gpiodcxx\n</pre>\n<h2>help command</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">gpiodcxx</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiodcxx</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">get_line</span><span class=\"p\">)</span>\n\n<span class=\"n\">Help</span> <span class=\"n\">on</span> <span class=\"n\">instancemethod</span> <span class=\"ow\">in</span> <span class=\"n\">module</span> <span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">_gpiod</span><span class=\"p\">:</span>\n\n<span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">_gpiod</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">gpiod</span><span class=\"p\">::</span><span class=\"n\">line</span>\n\n    <span class=\"o\">/**</span>\n     <span class=\"o\">*</span> <span class=\"nd\">@brief</span> <span class=\"n\">Get</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">exposed</span> <span class=\"n\">by</span> <span class=\"n\">this</span> <span class=\"n\">chip</span> <span class=\"n\">at</span> <span class=\"n\">given</span> <span class=\"n\">offset</span><span class=\"o\">.</span>\n     <span class=\"o\">*</span> <span class=\"nd\">@param</span> <span class=\"n\">offset</span> <span class=\"n\">Offset</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">line</span><span class=\"o\">.</span>\n     <span class=\"o\">*</span> <span class=\"nd\">@return</span> <span class=\"n\">Line</span> <span class=\"nb\">object</span><span class=\"o\">.</span>\n     <span class=\"o\">*/</span>\n</pre>\n<h2>Test</h2>\n<pre>python3 -m gpiodcxx.test.blink &lt;chip&gt; &lt;line offset&gt;\npython3 -m gpiodcxx.test.blinks &lt;chip&gt; &lt;line offset1&gt; <span class=\"o\">[</span>&lt;line offset2&gt; ...<span class=\"o\">]</span>\npython3 -m gpiodcxx.test.button &lt;chip&gt; &lt;line offset&gt; <span class=\"o\">[</span>rising<span class=\"p\">|</span>falling<span class=\"p\">|</span>both<span class=\"o\">]</span>\n</pre>\n<h2>Blink example</h2>\n<h3>Python3</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gpiodcxx</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n    <span class=\"n\">LED_CHIP</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">LED_LINE_OFFSET</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'''Usage:</span>\n<span class=\"s1\">    python3 blink.py &lt;chip&gt; &lt;line offset&gt;'''</span><span class=\"p\">)</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">()</span>\n\n<span class=\"n\">chip</span> <span class=\"o\">=</span> <span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"p\">(</span><span class=\"n\">LED_CHIP</span><span class=\"p\">)</span>\n<span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">)</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">line_request</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">consumer</span> <span class=\"o\">=</span> <span class=\"s2\">\"Blink\"</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">request_type</span> <span class=\"o\">=</span> <span class=\"n\">gpiodcxx</span><span class=\"o\">.</span><span class=\"n\">line_request</span><span class=\"o\">.</span><span class=\"n\">DIRECTION_OUTPUT</span>\n\n<span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<h3>C++</h3>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;chrono&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cstdlib&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gpiod.hpp&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;string&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;thread&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">LED_CHIP</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span>         <span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">LED_CHIP</span>        <span class=\"o\">=</span> <span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n        <span class=\"n\">LED_LINE_OFFSET</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">stoi</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"Usage:\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span>\n                  <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"    ./blink &lt;chip&gt; &lt;line offset&gt;\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">chip</span> <span class=\"n\">chip</span><span class=\"p\">(</span><span class=\"n\">LED_CHIP</span><span class=\"p\">);</span>\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line</span> <span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">chip</span><span class=\"p\">.</span><span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">);</span>\n\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line_request</span> <span class=\"n\">config</span><span class=\"p\">;</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">consumer</span>     <span class=\"o\">=</span> <span class=\"s\">\"Blink\"</span><span class=\"p\">;</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">request_type</span> <span class=\"o\">=</span> <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line_request</span><span class=\"o\">::</span><span class=\"n\">DIRECTION_OUTPUT</span><span class=\"p\">;</span>\n\n    <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">);</span>\n\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">milliseconds</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">));</span>\n        <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">milliseconds</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre>g++ -o blink test.cpp -lgpiodcxx\n</pre>\n<h2>Changelog</h2>\n<p>Ref: CHANGELOG</p>\n<p>python3-gpiodcxx (0.6.0) unstable; urgency=medium</p>\n<ul>\n<li>Change package name from gpiod to gpiodcxx</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 26 Mar 2020 14:08:29 +0900</p>\n<p>python3-gpiod (0.5.3) unstable; urgency=medium</p>\n<ul>\n<li>Add std::bitset&lt;32&gt; type caster</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 26 Mar 2020 11:39:33 +0900</p>\n<p>python3-gpiod (0.5.2) unstable; urgency=medium</p>\n<ul>\n<li>Add documentation for tested methods</li>\n<li>Add test code</li>\n<li>Update README.md</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Fri, 20 Mar 2020 13:17:41 +0900</p>\n<p>python3-gpiod (0.5.1) unstable; urgency=medium</p>\n<ul>\n<li>Move xxx class into xxx_wrapper.h</li>\n<li>Add blink test module</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Fri, 20 Mar 2020 00:58:05 +0900</p>\n<p>python3-gpiod (0.5.0) unstable; urgency=medium</p>\n<ul>\n<li>Add pybind11/chrono.h for std::chrono</li>\n<li>Prevent installation if libgpiodcxx v1.0 or lower</li>\n<li>Add xxx_lines into chip class</li>\n<li>Add operators</li>\n<li>Add MAX_LINES attribute</li>\n<li>Fix issue where 'setup.py sdist' is not executed</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Sat, 14 Mar 2020 02:37:13 +0900</p>\n<p>python3-gpiod (0.4.1) unstable; urgency=medium</p>\n<ul>\n<li>Fix issue where pip does not install dependencies</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 12 Mar 2020 19:11:24 +0900</p>\n<p>python3-gpiod (0.4.0) unstable; urgency=medium</p>\n<ul>\n<li>Add libgpiodcxx version check</li>\n<li>Remove -std=c++11 option</li>\n<li>Add line_bulk, chip_iter, line_iter classes</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 12 Mar 2020 14:18:16 +0900</p>\n<p>python3-gpiod (0.3.0) unstable; urgency=medium</p>\n<ul>\n<li>Add open, reset function</li>\n<li>Add LICENSE</li>\n<li>Create README.md</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 11 Mar 2020 18:58:14 +0900</p>\n<p>python3-gpiod (0.2.0) unstable; urgency=medium</p>\n<ul>\n<li>Add chip, line_request, line, line_event class</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 11 Mar 2020 13:28:45 +0900</p>\n<p>python3-gpiod (0.1.0) unstable; urgency=medium</p>\n<ul>\n<li>Add initial setup files</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Tue, 10 Mar 2020 15:40:13 +0900</p>\n\n          </div>"}, "last_serial": 6886763, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "feb76fa65fbd537f493370572dd632cf", "sha256": "442b6f928add04f9c22c85529f9d114087b779dff58be798f9333722f0e714fe"}, "downloads": -1, "filename": "gpiodcxx-0.5.1.tar.gz", "has_sig": false, "md5_digest": "feb76fa65fbd537f493370572dd632cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9580, "upload_time": "2020-03-19T16:44:52", "upload_time_iso_8601": "2020-03-19T16:44:52.671212Z", "url": "https://files.pythonhosted.org/packages/4a/92/584b6e2c1a01d905891d38900393762f9db58b1d04f283fa4f400b14ecaf/gpiodcxx-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "563fcdae62ccf20b9a635855ecce013c", "sha256": "7f44552a0ca95170db35ac381776d90e303be493512616bb6105eeb84b4c3a7e"}, "downloads": -1, "filename": "gpiodcxx-0.6.0.tar.gz", "has_sig": false, "md5_digest": "563fcdae62ccf20b9a635855ecce013c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10779, "upload_time": "2020-03-26T05:10:26", "upload_time_iso_8601": "2020-03-26T05:10:26.530780Z", "url": "https://files.pythonhosted.org/packages/c2/d0/448a008e132c0d1d0a655992704d63791c32b9bb15fa1eaa4f65fb342c21/gpiodcxx-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "563fcdae62ccf20b9a635855ecce013c", "sha256": "7f44552a0ca95170db35ac381776d90e303be493512616bb6105eeb84b4c3a7e"}, "downloads": -1, "filename": "gpiodcxx-0.6.0.tar.gz", "has_sig": false, "md5_digest": "563fcdae62ccf20b9a635855ecce013c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10779, "upload_time": "2020-03-26T05:10:26", "upload_time_iso_8601": "2020-03-26T05:10:26.530780Z", "url": "https://files.pythonhosted.org/packages/c2/d0/448a008e132c0d1d0a655992704d63791c32b9bb15fa1eaa4f65fb342c21/gpiodcxx-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:17 2020"}