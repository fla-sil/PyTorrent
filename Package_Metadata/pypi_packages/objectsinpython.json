{"info": {"author": "John Reese", "author_email": "john@noswap.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "Objects In Python\n=================\n\nInterface to [Objects In Space][ois] for [CircuitPython][] embedded hardware.\n\n[![build status](https://travis-ci.org/jreese/objectsinpython.svg?branch=master)](https://travis-ci.org/jreese/objectsinpython)\n[![version](https://img.shields.io/pypi/v/objectsinpython.svg)](https://pypi.org/project/objectsinpython)\n[![license](https://img.shields.io/pypi/l/objectsinpython.svg)](https://github.com/jreese/objectsinpython/blob/master/LICENSE)\n[![code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n\nInstall\n-------\n\nDownload the [compiled module][builds] and copy them to your board. Note there are two\nversions: \"full\" or regular for boards with more memory (eg, M4/samd51) and \"tiny\" for\nboards with less memory (eg, M0/samd21). When using the tiny build, be sure to rename\nthe module to `oip.mpy`.\n\n```bash\n$ cp -X oip.mpy /Volumes/CIRCUITPY/oip.mpy\n```\n\nOR\n\n```bash\n$ cp -X oip-tiny.mpy /Volumes/CIRCUITPY/oip.mpy\n```\n\n\nOverview\n--------\n\nObjects In Python uses a simple, event-based API to execute your functions when buttons\nare pressed or game values update. Getting started is as easy as importing the module,\ncreating the interface, and starting the connection:\n\n```python\nfrom oip import OIP\n\noip = OIP()\n...\noip.start()\n```\n\nTurn lights on or off when game state changes: \n\n```python\n@oip.on(\"IFF_ACTIVE\")\ndef iff_active(now, value):\n    pixels[0] = BLUE if value else RED\n```\n\nConnect buttons to game commands:\n\n```python\n@oip.press(board.BUTTON_A)\ndef thrust_while_holding(now, value):\n    oip.execute(\"BURN_MAIN_ENGINE\" if value else \"STOP_MAIN_ENGINE\")\n```\n\nWith the full build, use helper classes to mitigate typoes:\n\n```python\n@oip.on(Boolean.IFF_ACTIVE)\ndef iff_active(now, value):\n    ...\n\n@oip.press(board.BUTTON_A)\ndef thrust_while_holding(now, value):\n    oip.execute(Command.BURN_MAIN_ENGINE if value else Command.STOP_MAIN_ENGINE)\n```\n\nCheck out the [example projects][examples] for more ideas.\n\n\nLicense\n-------\n\nObjects In Python is copyright [John Reese](https://jreese.sh), and licensed under the\nMIT license.  I am providing code in this repository to you under an open source\nlicense.  This is my personal repository; the license you receive to my code\nis from me and not from my employer. See the `LICENSE` file for details.\n\n[ois]: http://objectsgame.com/\n[CircuitPython]: https://circuitpython.org\n[builds]: https://github.com/jreese/objectsinpython/releases/latest\n[examples]: https://github.com/jreese/objectsinpython/tree/master/examples", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jreese/cpgame", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "objectsinpython", "package_url": "https://pypi.org/project/objectsinpython/", "platform": "", "project_url": "https://pypi.org/project/objectsinpython/", "project_urls": {"Homepage": "https://github.com/jreese/cpgame"}, "release_url": "https://pypi.org/project/objectsinpython/0.9/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Interface to Objects In Space from CircuitPython embedded hardware", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Objects In Python</h1>\n<p>Interface to <a href=\"http://objectsgame.com/\" rel=\"nofollow\">Objects In Space</a> for <a href=\"https://circuitpython.org\" rel=\"nofollow\">CircuitPython</a> embedded hardware.</p>\n<p><a href=\"https://travis-ci.org/jreese/objectsinpython\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/619a8e2874ed8a3246ce35f7fe694ef30f72e1f2/68747470733a2f2f7472617669732d63692e6f72672f6a72656573652f6f626a65637473696e707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/objectsinpython\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95a6ae8ae0c38425fd783da3a66b19aa7820077b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f626a65637473696e707974686f6e2e737667\"></a>\n<a href=\"https://github.com/jreese/objectsinpython/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b21a623b4cd5c1e5043b719378ca811dcf50922a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6f626a65637473696e707974686f6e2e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h2>Install</h2>\n<p>Download the <a href=\"https://github.com/jreese/objectsinpython/releases/latest\" rel=\"nofollow\">compiled module</a> and copy them to your board. Note there are two\nversions: \"full\" or regular for boards with more memory (eg, M4/samd51) and \"tiny\" for\nboards with less memory (eg, M0/samd21). When using the tiny build, be sure to rename\nthe module to <code>oip.mpy</code>.</p>\n<pre>$ cp -X oip.mpy /Volumes/CIRCUITPY/oip.mpy\n</pre>\n<p>OR</p>\n<pre>$ cp -X oip-tiny.mpy /Volumes/CIRCUITPY/oip.mpy\n</pre>\n<h2>Overview</h2>\n<p>Objects In Python uses a simple, event-based API to execute your functions when buttons\nare pressed or game values update. Getting started is as easy as importing the module,\ncreating the interface, and starting the connection:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">oip</span> <span class=\"kn\">import</span> <span class=\"n\">OIP</span>\n\n<span class=\"n\">oip</span> <span class=\"o\">=</span> <span class=\"n\">OIP</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"n\">oip</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<p>Turn lights on or off when game state changes:</p>\n<pre><span class=\"nd\">@oip</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"IFF_ACTIVE\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">iff_active</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">pixels</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">BLUE</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"k\">else</span> <span class=\"n\">RED</span>\n</pre>\n<p>Connect buttons to game commands:</p>\n<pre><span class=\"nd\">@oip</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">BUTTON_A</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">thrust_while_holding</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">oip</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"BURN_MAIN_ENGINE\"</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"k\">else</span> <span class=\"s2\">\"STOP_MAIN_ENGINE\"</span><span class=\"p\">)</span>\n</pre>\n<p>With the full build, use helper classes to mitigate typoes:</p>\n<pre><span class=\"nd\">@oip</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"n\">Boolean</span><span class=\"o\">.</span><span class=\"n\">IFF_ACTIVE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">iff_active</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@oip</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">BUTTON_A</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">thrust_while_holding</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">oip</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">Command</span><span class=\"o\">.</span><span class=\"n\">BURN_MAIN_ENGINE</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"k\">else</span> <span class=\"n\">Command</span><span class=\"o\">.</span><span class=\"n\">STOP_MAIN_ENGINE</span><span class=\"p\">)</span>\n</pre>\n<p>Check out the <a href=\"https://github.com/jreese/objectsinpython/tree/master/examples\" rel=\"nofollow\">example projects</a> for more ideas.</p>\n<h2>License</h2>\n<p>Objects In Python is copyright <a href=\"https://jreese.sh\" rel=\"nofollow\">John Reese</a>, and licensed under the\nMIT license.  I am providing code in this repository to you under an open source\nlicense.  This is my personal repository; the license you receive to my code\nis from me and not from my employer. See the <code>LICENSE</code> file for details.</p>\n\n          </div>"}, "last_serial": 4937487, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fba6ae559ac8d7dce76eee2e9126678e", "sha256": "2ab2d1de60808e2a28e0e4f1f87712c18c149b2ba59c74afcb64bdc1e14ff68e"}, "downloads": -1, "filename": "objectsinpython-0.1.tar.gz", "has_sig": false, "md5_digest": "fba6ae559ac8d7dce76eee2e9126678e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12276, "upload_time": "2019-03-14T02:59:32", "upload_time_iso_8601": "2019-03-14T02:59:32.358224Z", "url": "https://files.pythonhosted.org/packages/47/36/2150170910e9bc2c799864e043209adab0145eb323c74ffe9eed5241844c/objectsinpython-0.1.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "51a8497201399ef38e95f8771996a271", "sha256": "13e8c332309d83db9982cdcb64ee8294425a5457c61e0e95d962614bb183d769"}, "downloads": -1, "filename": "objectsinpython-0.9.tar.gz", "has_sig": false, "md5_digest": "51a8497201399ef38e95f8771996a271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12273, "upload_time": "2019-03-14T03:05:05", "upload_time_iso_8601": "2019-03-14T03:05:05.933282Z", "url": "https://files.pythonhosted.org/packages/17/2d/93c2d7050554e1b2345e721dde36f4a07d18005cff826f4a1b268ccc7c0e/objectsinpython-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51a8497201399ef38e95f8771996a271", "sha256": "13e8c332309d83db9982cdcb64ee8294425a5457c61e0e95d962614bb183d769"}, "downloads": -1, "filename": "objectsinpython-0.9.tar.gz", "has_sig": false, "md5_digest": "51a8497201399ef38e95f8771996a271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12273, "upload_time": "2019-03-14T03:05:05", "upload_time_iso_8601": "2019-03-14T03:05:05.933282Z", "url": "https://files.pythonhosted.org/packages/17/2d/93c2d7050554e1b2345e721dde36f4a07d18005cff826f4a1b268ccc7c0e/objectsinpython-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:48 2020"}