{"info": {"author": "yulansp", "author_email": "1301481108@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "aiomyorm is a simple and easy-to-use ORM framework, which has a similar interface to Django and fully supports asyncio.\n\n## Features\n\n\n* Perfect support for asyncio and uvloop.\n* Simple and easy to use API, similar to Django.\n* Support mysql and SQLite.\n\n## Installation\n```shell script\npip install aiomyorm\n```\n\n\n## Getting Started\n\n\n```python\n   from aiomyorm import Model, IntField, StringField, SmallIntField, auto_increment\n   from aiomyorm import set_config, close_db_connection\n   import asyncio\n\n   set_config(engine='sqlite',\n              db='test.db')\n\n\n   class Test(Model):\n       __table__ = 'test'\n       pk = IntField(primary_key=True, default=auto_increment())\n       id = StringField(50)\n       age = IntField(comment='the age of student.')\n       birth_place = StringField(50, default='china')\n       grade = SmallIntField()\n\n\n   async def go():\n       insert_rows = await Test.insert(Test(pk=5000, age=18, birth_place='place1'),\n                              Test(pk=5001, age=21, birth_place='place2'),\n                              Test(pk=5002, age=19, birth_place='place3'))\n       all = await Test.find()\n       print('insert rows: ', insert_rows)\n           for r in all:\n               print(r)\n\n   if __name__ == '__main__':\n       loop = asyncio.get_event_loop()\n       loop.run_until_complete(Test.create_table())\n       loop.run_until_complete(go())\n       loop.run_until_complete(close_db_connection())\n```\nthe results\n```text\n   to create table test.\n   insert rows:  3\n   pk:5000, id:, age:18, birth_place:place1, grade:0\n   pk:5001, id:, age:21, birth_place:place2, grade:0\n   pk:5002, id:, age:19, birth_place:place3, grade:0\n```\n\nmore use see the document: [aiomyorm](https://aiomyorm.readthedocs.io)\n\n## Dependencies\n\n* Python >= 3.5.3\n* [aiomysql](https://github.com/aio-libs/aiomysql) (for MySQL)\n* [aiosqlite](https://github.com/jreese/aiosqlite) (for sqlite)\n\n## Tests\n\nI have a simple test for you.\n\nIt's better for you to test in a ``venv``.\n\nfirst\n```shell script\ngit clone git@github.com:yulansp/aiomyorm.git\n```\nthen\n``` shell script\npip install -r requirements.txt\n```\n\nRecipe you must install MySQL and configure the user name and password\nin the ``tests/test_mysql/config.py`` file.\n\nthen\n```shell script\nmake test\n```\n\n## License\n\nMIT\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yulansp/aiomyorm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aiomyorm", "package_url": "https://pypi.org/project/aiomyorm/", "platform": "", "project_url": "https://pypi.org/project/aiomyorm/", "project_urls": {"Documentation": "https://aiomyorm.readthedocs.io", "Homepage": "https://github.com/yulansp/aiomyorm", "Source Code": "https://github.com/yulansp/aiomyorm"}, "release_url": "https://pypi.org/project/aiomyorm/0.1.2/", "requires_dist": ["aiomysql (>=0.0.20)", "aiosqlite (>=0.12.0)"], "requires_python": ">=3.6", "summary": "A easy-to-use asynchronous ORM framework", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>aiomyorm is a simple and easy-to-use ORM framework, which has a similar interface to Django and fully supports asyncio.</p>\n<h2>Features</h2>\n<ul>\n<li>Perfect support for asyncio and uvloop.</li>\n<li>Simple and easy to use API, similar to Django.</li>\n<li>Support mysql and SQLite.</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install aiomyorm\n</pre>\n<h2>Getting Started</h2>\n<pre>   <span class=\"kn\">from</span> <span class=\"nn\">aiomyorm</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">IntField</span><span class=\"p\">,</span> <span class=\"n\">StringField</span><span class=\"p\">,</span> <span class=\"n\">SmallIntField</span><span class=\"p\">,</span> <span class=\"n\">auto_increment</span>\n   <span class=\"kn\">from</span> <span class=\"nn\">aiomyorm</span> <span class=\"kn\">import</span> <span class=\"n\">set_config</span><span class=\"p\">,</span> <span class=\"n\">close_db_connection</span>\n   <span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n   <span class=\"n\">set_config</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"s1\">'sqlite'</span><span class=\"p\">,</span>\n              <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">'test.db'</span><span class=\"p\">)</span>\n\n\n   <span class=\"k\">class</span> <span class=\"nc\">Test</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n       <span class=\"n\">__table__</span> <span class=\"o\">=</span> <span class=\"s1\">'test'</span>\n       <span class=\"n\">pk</span> <span class=\"o\">=</span> <span class=\"n\">IntField</span><span class=\"p\">(</span><span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">auto_increment</span><span class=\"p\">())</span>\n       <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n       <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">IntField</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s1\">'the age of student.'</span><span class=\"p\">)</span>\n       <span class=\"n\">birth_place</span> <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'china'</span><span class=\"p\">)</span>\n       <span class=\"n\">grade</span> <span class=\"o\">=</span> <span class=\"n\">SmallIntField</span><span class=\"p\">()</span>\n\n\n   <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">go</span><span class=\"p\">():</span>\n       <span class=\"n\">insert_rows</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">Test</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">Test</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">birth_place</span><span class=\"o\">=</span><span class=\"s1\">'place1'</span><span class=\"p\">),</span>\n                              <span class=\"n\">Test</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"mi\">5001</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"n\">birth_place</span><span class=\"o\">=</span><span class=\"s1\">'place2'</span><span class=\"p\">),</span>\n                              <span class=\"n\">Test</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"mi\">5002</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"n\">birth_place</span><span class=\"o\">=</span><span class=\"s1\">'place3'</span><span class=\"p\">))</span>\n       <span class=\"nb\">all</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">Test</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">()</span>\n       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'insert rows: '</span><span class=\"p\">,</span> <span class=\"n\">insert_rows</span><span class=\"p\">)</span>\n           <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"nb\">all</span><span class=\"p\">:</span>\n               <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n   <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n       <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n       <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">Test</span><span class=\"o\">.</span><span class=\"n\">create_table</span><span class=\"p\">())</span>\n       <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">go</span><span class=\"p\">())</span>\n       <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">close_db_connection</span><span class=\"p\">())</span>\n</pre>\n<p>the results</p>\n<pre>   to create table test.\n   insert rows:  3\n   pk:5000, id:, age:18, birth_place:place1, grade:0\n   pk:5001, id:, age:21, birth_place:place2, grade:0\n   pk:5002, id:, age:19, birth_place:place3, grade:0\n</pre>\n<p>more use see the document: <a href=\"https://aiomyorm.readthedocs.io\" rel=\"nofollow\">aiomyorm</a></p>\n<h2>Dependencies</h2>\n<ul>\n<li>Python &gt;= 3.5.3</li>\n<li><a href=\"https://github.com/aio-libs/aiomysql\" rel=\"nofollow\">aiomysql</a> (for MySQL)</li>\n<li><a href=\"https://github.com/jreese/aiosqlite\" rel=\"nofollow\">aiosqlite</a> (for sqlite)</li>\n</ul>\n<h2>Tests</h2>\n<p>I have a simple test for you.</p>\n<p>It's better for you to test in a <code>venv</code>.</p>\n<p>first</p>\n<pre>git clone git@github.com:yulansp/aiomyorm.git\n</pre>\n<p>then</p>\n<pre>pip install -r requirements.txt\n</pre>\n<p>Recipe you must install MySQL and configure the user name and password\nin the <code>tests/test_mysql/config.py</code> file.</p>\n<p>then</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 7128469, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "9178e3a86f71a109a42496a262652baa", "sha256": "92f5485e67d3db144a3402aea047d2bac111dc2b1b93855c1e8a6ab2fb9b786f"}, "downloads": -1, "filename": "aiomyorm-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9178e3a86f71a109a42496a262652baa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32428, "upload_time": "2020-04-27T08:44:47", "upload_time_iso_8601": "2020-04-27T08:44:47.442686Z", "url": "https://files.pythonhosted.org/packages/07/ae/1e70424abda1a0c80450cf9d743560ff09b79e0eada8c3391d4fb56442ae/aiomyorm-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "796c81d9afd813c75c6ef158f6af5cac", "sha256": "a55be07e7d31cf6ebe8fa1ee9b72c61c77b4d40c527e6445d1792c3eb9fe99db"}, "downloads": -1, "filename": "aiomyorm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "796c81d9afd813c75c6ef158f6af5cac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25415, "upload_time": "2020-04-27T08:44:50", "upload_time_iso_8601": "2020-04-27T08:44:50.018586Z", "url": "https://files.pythonhosted.org/packages/c4/75/e2cf34264434dd40003b4e1acbf248a9c2be578c7a103f25f6965e0d5d7f/aiomyorm-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cf67a6cc7d8075170de6dec1cca362fe", "sha256": "ee6b9c6e65c1f48364df34a28a45b516cde3f908985f50398a7620083e3a8f03"}, "downloads": -1, "filename": "aiomyorm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cf67a6cc7d8075170de6dec1cca362fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32526, "upload_time": "2020-04-29T12:40:03", "upload_time_iso_8601": "2020-04-29T12:40:03.756939Z", "url": "https://files.pythonhosted.org/packages/dc/72/f0261dc0f3ca29b28a02776f2d4a4d63f3a5342830f5a9c303607659fffd/aiomyorm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bcfc87675df5530ef977b732c1eed53", "sha256": "dc1a2ea332450972d967e1c3742c780da0c105dfa0fa9016074a5a58485bcd3e"}, "downloads": -1, "filename": "aiomyorm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1bcfc87675df5530ef977b732c1eed53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25547, "upload_time": "2020-04-29T12:40:06", "upload_time_iso_8601": "2020-04-29T12:40:06.623616Z", "url": "https://files.pythonhosted.org/packages/cc/03/8dd2ea96391b54145505477d96edac8ee142466800c08f7156b576c93ae1/aiomyorm-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf67a6cc7d8075170de6dec1cca362fe", "sha256": "ee6b9c6e65c1f48364df34a28a45b516cde3f908985f50398a7620083e3a8f03"}, "downloads": -1, "filename": "aiomyorm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cf67a6cc7d8075170de6dec1cca362fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32526, "upload_time": "2020-04-29T12:40:03", "upload_time_iso_8601": "2020-04-29T12:40:03.756939Z", "url": "https://files.pythonhosted.org/packages/dc/72/f0261dc0f3ca29b28a02776f2d4a4d63f3a5342830f5a9c303607659fffd/aiomyorm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bcfc87675df5530ef977b732c1eed53", "sha256": "dc1a2ea332450972d967e1c3742c780da0c105dfa0fa9016074a5a58485bcd3e"}, "downloads": -1, "filename": "aiomyorm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1bcfc87675df5530ef977b732c1eed53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25547, "upload_time": "2020-04-29T12:40:06", "upload_time_iso_8601": "2020-04-29T12:40:06.623616Z", "url": "https://files.pythonhosted.org/packages/cc/03/8dd2ea96391b54145505477d96edac8ee142466800c08f7156b576c93ae1/aiomyorm-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:02 2020"}