{"info": {"author": "Johannes Raggam", "author_email": "thetetet@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "collective.collectionfilter\n===========================\n\nFaceted navigation filter for collection results.\n\nThis Plone 5 addon allows you to filter collections results for additional catalog metadata.\nFor example, you can add a subject filter, but also a filter for authors or portal types.\nThis can also be used to build tag clouds.\n\nThe filter types can be extended (see: ``collective.collectionfilter.vocabularies``).\n\nThere are three portlets/tiles available for filtering:\n\n``Collection Filter``\n    a list with values (select, radio, checkbox, link) you can filter on\n``Collection Search``\n    a SearchableText input field to do a fulltextsearch on the collection results\n``Collection Maps``\n    a LeafletJS map which shows and filters ``IGeolocatable`` items on it\n    (this feature is available if ``collective.geolocationbehavior`` is installed and the behavior\n    is activated on a contenttype. See installation notes below)\n\n\nFilter Results with portlets\n----------------------------\n\nAdd as many of the filter portlets above to any context you want (most likely the source collection)\nand assign a collection with results to it.\n\nWhen you select values from the filter the results are loaded asynchronously inside the container\nwith the selector defined in the field ``Content Selector``. Make sure the selector exists on the\nsource collection template and on the target page which shows the filtered results.\n\n\nMosaic Integration\n------------------\n\nThe three tiles can be added within the Mosaic editor multiple times. Just select them in the ``Insert`` menu\nand assign a collection to it. To show the results of the collection simply add a\n``Existing Content`` tile which links to the same collection your filter tiles are assigned with.\n\nTODO: right now the collection needs a default_view template, which wraps the result list with a unique selector\ninside the ``#content-core`` container. so the collectionfilter can load the filtered result correctly from\nthe collection into the container inside the existing content tile.\n\n\nGeolocation filter support\n--------------------------\n\nIf ``collective.geolocationbehavior`` is installed, this package provides a LeafletJS Maps tile/portlet\nwhich shows each item of a collection result if the ``IGeolocatable`` information is available.\nIn addition you can activate the ``Narrow down results`` checkbox to narrow down the collection result and\nother available filter tiles/portlets if the user moves or zooms the map.\n\nWe provide a package extra to install all required dependencies with their according versions.\nSimply do this somewhere in your buildout::\n\n    [buildout]\n    ...\n    eggs +=\n        collective.collectionfilter[geolocation]\n    ...\n\n\nOverloading GroupByCriteria\n---------------------------\n\n``collective.collectionfilter.vocabularies.GroupByCriteria`` is a singleton, registered as global utility and used to provide a list of possible indices, which grouped values will provide your filter criteria.\n\nIt uses a data structure like this::\n\n    self._groupby = {\n        it: {                   # Index name\n            'index': it,             # Name of the index to use\n            'metadata': it,          # Name of the metadata column to use\n            'display_modifier': _ ,  # Function to prepare the metadata column value for displaying\n            'index_modifier': None,  # Function to transform the index search value.\n            'value_blacklist': [],   # Blacklist of index values, which should not included in the filter selection. Can be a callable.\n            'sort_key_function': lambda it: it['title'].lower(),  # sort key function. defaults to a lower-cased title\n        }\n        for it in metadata\n    }\n\nAs you can see, the standard GroupByCriteriaVocabulary implementation implies, that the index name is the same as the metadata column name.\nAlso, we use the ``collective.collectionfilter`` message catalog as standard display_modifier (you can register translations under the ``collective.collectionfilter`` domain to translate index values).\n\nIf you need a special ``display_modifier``, or index or metadata columns do not have the same identifier, you can modify this data structure.\nFor that, register an adapter for ``IGroupByModifier``, which adapts to the GroupByCriteria utility.\nWithin this adapter, you can modify the already populated ``_groupby`` attribute (do not use the ``groupby``, which is a property method and at this point hasn't finished).\n\nThis is how.\n\nWrite an adapter::\n\n    # -*- coding: utf-8 -*-\n    from collective.collectionfilter.interfaces import IGroupByCriteria\n    from collective.collectionfilter.interfaces import IGroupByModifier\n    from zope.component import adapter\n    from zope.interface import implementer\n\n\n    sort_map = {\n        'VALUE1': 3,\n        'VALUE2': 1,\n        'VALUE3': 2,\n    }\n\n\n    def subjectsort(it):\n        # Sorts the value after a fixed sort map\n        val = it['title']\n        return sort_map.get(val, 0)\n\n\n    @implementer(IGroupByModifier)\n    @adapter(IGroupByCriteria)\n    def groupby_modifier(groupby):\n        groupby._groupby['Subject']['display_modifier'] = lambda x: x.upper()\n        groupby._groupby['Subject']['sort_key_function'] = subjectsort\n        groupby._groupby['my_new_index'] = {\n            'index': 'my_new_index',\n            'metadata': 'my_new_index_metadata_colum',\n            'display_modifier': lambda it: u'this is awesome: {0}'.format(it)\n        }\n\nRegister the adapter::\n\n    <configure xmlns=\"http://namespaces.zope.org/zope\">\n      <adapter factory=\".collectionfilter.groupby_modifier\" name=\"modifier_1\" />\n    </configure>\n\nDone.\n\nYour adapter is called by ``collective.collectionfilter.vocabularies.GroupByCriteria.groupby``.\n\nCompatibility\n-------------\n\nThis package is compatible with Plone 5 and above. Note that in 5.0 some functionality is reduced such as AJAX loading of search results.\nIf your theme doesn't work well with AJAX loading this can be overridden in the registery or via diazo.\n\nAuthor\n------\n\n- Johannes Raggam\n- Peter Holzer\n\nThis package is based on ``collective.portlet.collectionfilter`` and ``collective.portlet.collectionbysubject``.\n\n\nChangelog\n=========\n\n3.3 (2020-01-22)\n----------------\n\n- Fix is_available property\n  [agitator]\n- Added css_modifier to extend css class of a filter item\n  [agitator]\n- Fix check for boolean values.\n  [tmassman]\n- fix translation of ``filter_value``\n  [petschki]\n\n\n3.2.1 (2019-08-07)\n------------------\n\nBug fixes:\n\n- fix bug introduced with pattern option ``ajaxLoad``\n  [petschki]\n\n\n3.2 (2019-07-23)\n----------------\n\nFeatures:\n\n- Restore 5.0.x compatibility\n  [djay, quang]\n- Make ajax loading of results and portlets a pattern option is themers can override it\n  [quang]\n- change collection picker to show parent by default so you don't have to click backwards\n  [djay]\n\nBug fixes:\n\n- Fix double display of portlets profile\n  [agitator]\n- Fix bug where filter urls was getting utf encoded then made into unicode again\n  [djay]\n- Fix 5.2 where operators should not be used on all index types\n  [djay]\n- Fix unfiltered results appearing in next page of batch\n  [djay]\n- Fix bug where portlets didn't work without GeoLocation dependencies\n  [djay]\n\n\n3.1 (2019-06-06)\n----------------\n\nNew features:\n\n- Geolocation filter.\n  [petschki, thet]\n\n\nBug fixes:\n\n- Remove dependency on plone.app.upgrade\n  [agitator]\n\n- Constrain ``target collection`` to a configurable registry value.\n  The default is ``['Collection', ]``.\n  [petschki]\n\n- Fix non-interable catalog metadata values for Python 3.\n  [petschki]\n\n- Use Map Layer translations from plone.formwidget.geolocation\n  [petschki]\n\n- Fix ``None`` value in ``safe_interable``\n  [petschki]\n\n- Fix for empty SearchableText field (see #56)\n  [petschki]\n\n\n3.0 (2019-03-25)\n----------------\n\nBreaking changes:\n\n- Remove support for Plone < 5.1.\n  [petschki]\n\nNew features:\n\n- Python 3 compatibility.\n  [petschki]\n\n- Test setup\n  [petschki]\n\nBug fixes:\n\n- fix bug in @@render-portlet for Python 3.\n  NOTE on Python 3: this required plone.app.portlets >= 4.4.2\n  [petschki]\n\n\n2.1 (2019-03-22)\n----------------\n\nNew features:\n\n- Python 3 compatibility.\n  [agitator]\n\nBug fixes:\n\n- Do not render an empty ``filterClassName``.\n  [thet]\n\n- patCollectionFilter is not in settings, it\u2019s in view.\n  [agitator]\n\n- Fix styles for long/multiline filter terms\n  [agitator]\n\n\n2.0.1 (2018-12-13)\n------------------\n\n- Fix upgrade steps and reapply profile to fix bundle registration\n  Remove conditional reinitialization - caused problems with other patterns\n  [agitator]\n\n\n2.0 (2018-12-08)\n----------------\n\nBreaking changes:\n\n- Remove the ``cache_time`` setting and replace it with ``cache_enabled``.\n\n- collectionsearch.pt: changed view attribute ``header_title`` to ``title``.\n\n- Depend on plone.app.contenttypes.\n  All target collections must provide ``plone.app.contenttypes.behaviors.collection.ICollection`` interface.\n  The ``result`` method will be callend on this behavior adapter.\n\n- There is a implicit dependency to Font Awesome for the filter tile edit links.\n  That has to be revisited to make it work out of the box.\n\n- Modernized markup for easier styling\n\nNew:\n\n- Optimize the cache key by including the current language, user roles instead of id and the database counter.\n\n- Remove the view_name part when populating the browser history with filter changes.\n  The view_name part is for loading specific AJAX tiles, but should probably not be displayed.\n\n- Add filter and search tiles.\n\n- Add a ``sort_key_function`` key to the IQueryModifier dict to allow for a different sort key function when sorting the values.\n\n- Add a ``index_modifier`` key to the IQueryModifier indexes dict to allow transforming of index search values.\n  For ``KeywordIndex`` indices the index_modifier is automatically set to encode the value to utf-8.\n\n- Add a ``value_blacklist`` key to the IQueryModifier indexes dict to allow blacklisting of individual index values.\n\n- Add ``view_name`` configuration parameter to call a special result listing view.\n  This can be used to call a tile instead to call the whole context view.\n\n- Add ``content_selector`` configuration parameter to choose a DOM node from the source to inject into the target.\n\n- Ensure early exit on the content filter traverse handler if it is not needed to run.\n\n- Make backwards compatible with Plone 5.0\n  [nngu6036, instification]\n\nBug fixes:\n\n- When reloading the collection in JavaScript, use the content selector's parent as base to trigger events on.\n  The content selector itself is replaced and events cannot be catched.\n\n- Register the bundle compile files as ``collectionfilter-bundle-compiled.js`` and ``collectionfilter-bundle-compiled.css``, so that using ``plone-compile-resources`` results in the same files.\n  See: https://github.com/plone/Products.CMFPlone/issues/2437\n\n- Sort the filter value list for filter title instead filter value.\n\n- fix collectionsearch portlet\n  [petschki]\n\n- when providing a custom `IGroupByCriteria` adapter, fallback to title sorted values if no sort_key_function is given.\n  [petschki]\n\n\n1.0.1 (2018-02-09)\n------------------\n\n- Fix target collection selection via catalog vocabular and RelatedItemsFieldWidget.\n  [agitator]\n\n\n1.0 (2018-01-27)\n----------------\n\n- Implement AJAX search for the collection search portlet.\n  [thet]\n\n- Update the history / location bar URL with the current filter URL.\n  [thet]\n\n- Fix error where ``closest`` DOM method isn't supported on IE.\n  Fixes #6.\n  [agitator]\n\n- Register bundle to depend on ``*`` to avoid weird Select2 initialization error.\n  [thet]\n\n- Add ``input_type`` option to be able to better select the type of input.\n  Add ``input_type`` support for dropdowns.\n  Remove ``as_input`` attribute and provide upgrade step for it.\n  [thet]\n\n- Initial release from collective.portlet.collectionfilter.\n  [thet]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/collective/collective.collectionfilter", "keywords": "plone collection filter faceted tagcloud tags", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.collectionfilter", "package_url": "https://pypi.org/project/collective.collectionfilter/", "platform": "", "project_url": "https://pypi.org/project/collective.collectionfilter/", "project_urls": {"Homepage": "http://github.com/collective/collective.collectionfilter"}, "release_url": "https://pypi.org/project/collective.collectionfilter/3.3/", "requires_dist": null, "requires_python": "", "summary": "Plone addon for filtering collection results.", "version": "3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"collective-collectionfilter\">\n<h2>collective.collectionfilter</h2>\n<p>Faceted navigation filter for collection results.</p>\n<p>This Plone 5 addon allows you to filter collections results for additional catalog metadata.\nFor example, you can add a subject filter, but also a filter for authors or portal types.\nThis can also be used to build tag clouds.</p>\n<p>The filter types can be extended (see: <tt>collective.collectionfilter.vocabularies</tt>).</p>\n<p>There are three portlets/tiles available for filtering:</p>\n<dl>\n<dt><tt>Collection Filter</tt></dt>\n<dd>a list with values (select, radio, checkbox, link) you can filter on</dd>\n<dt><tt>Collection Search</tt></dt>\n<dd>a SearchableText input field to do a fulltextsearch on the collection results</dd>\n<dt><tt>Collection Maps</tt></dt>\n<dd>a LeafletJS map which shows and filters <tt>IGeolocatable</tt> items on it\n(this feature is available if <tt>collective.geolocationbehavior</tt> is installed and the behavior\nis activated on a contenttype. See installation notes below)</dd>\n</dl>\n<div id=\"filter-results-with-portlets\">\n<h3>Filter Results with portlets</h3>\n<p>Add as many of the filter portlets above to any context you want (most likely the source collection)\nand assign a collection with results to it.</p>\n<p>When you select values from the filter the results are loaded asynchronously inside the container\nwith the selector defined in the field <tt>Content Selector</tt>. Make sure the selector exists on the\nsource collection template and on the target page which shows the filtered results.</p>\n</div>\n<div id=\"mosaic-integration\">\n<h3>Mosaic Integration</h3>\n<p>The three tiles can be added within the Mosaic editor multiple times. Just select them in the <tt>Insert</tt> menu\nand assign a collection to it. To show the results of the collection simply add a\n<tt>Existing Content</tt> tile which links to the same collection your filter tiles are assigned with.</p>\n<p>TODO: right now the collection needs a default_view template, which wraps the result list with a unique selector\ninside the <tt><span class=\"pre\">#content-core</span></tt> container. so the collectionfilter can load the filtered result correctly from\nthe collection into the container inside the existing content tile.</p>\n</div>\n<div id=\"geolocation-filter-support\">\n<h3>Geolocation filter support</h3>\n<p>If <tt>collective.geolocationbehavior</tt> is installed, this package provides a LeafletJS Maps tile/portlet\nwhich shows each item of a collection result if the <tt>IGeolocatable</tt> information is available.\nIn addition you can activate the <tt>Narrow down results</tt> checkbox to narrow down the collection result and\nother available filter tiles/portlets if the user moves or zooms the map.</p>\n<p>We provide a package extra to install all required dependencies with their according versions.\nSimply do this somewhere in your buildout:</p>\n<pre>[buildout]\n...\neggs +=\n    collective.collectionfilter[geolocation]\n...\n</pre>\n</div>\n<div id=\"overloading-groupbycriteria\">\n<h3>Overloading GroupByCriteria</h3>\n<p><tt>collective.collectionfilter.vocabularies.GroupByCriteria</tt> is a singleton, registered as global utility and used to provide a list of possible indices, which grouped values will provide your filter criteria.</p>\n<p>It uses a data structure like this:</p>\n<pre>self._groupby = {\n    it: {                   # Index name\n        'index': it,             # Name of the index to use\n        'metadata': it,          # Name of the metadata column to use\n        'display_modifier': _ ,  # Function to prepare the metadata column value for displaying\n        'index_modifier': None,  # Function to transform the index search value.\n        'value_blacklist': [],   # Blacklist of index values, which should not included in the filter selection. Can be a callable.\n        'sort_key_function': lambda it: it['title'].lower(),  # sort key function. defaults to a lower-cased title\n    }\n    for it in metadata\n}\n</pre>\n<p>As you can see, the standard GroupByCriteriaVocabulary implementation implies, that the index name is the same as the metadata column name.\nAlso, we use the <tt>collective.collectionfilter</tt> message catalog as standard display_modifier (you can register translations under the <tt>collective.collectionfilter</tt> domain to translate index values).</p>\n<p>If you need a special <tt>display_modifier</tt>, or index or metadata columns do not have the same identifier, you can modify this data structure.\nFor that, register an adapter for <tt>IGroupByModifier</tt>, which adapts to the GroupByCriteria utility.\nWithin this adapter, you can modify the already populated <tt>_groupby</tt> attribute (do not use the <tt>groupby</tt>, which is a property method and at this point hasn\u2019t finished).</p>\n<p>This is how.</p>\n<p>Write an adapter:</p>\n<pre># -*- coding: utf-8 -*-\nfrom collective.collectionfilter.interfaces import IGroupByCriteria\nfrom collective.collectionfilter.interfaces import IGroupByModifier\nfrom zope.component import adapter\nfrom zope.interface import implementer\n\n\nsort_map = {\n    'VALUE1': 3,\n    'VALUE2': 1,\n    'VALUE3': 2,\n}\n\n\ndef subjectsort(it):\n    # Sorts the value after a fixed sort map\n    val = it['title']\n    return sort_map.get(val, 0)\n\n\n@implementer(IGroupByModifier)\n@adapter(IGroupByCriteria)\ndef groupby_modifier(groupby):\n    groupby._groupby['Subject']['display_modifier'] = lambda x: x.upper()\n    groupby._groupby['Subject']['sort_key_function'] = subjectsort\n    groupby._groupby['my_new_index'] = {\n        'index': 'my_new_index',\n        'metadata': 'my_new_index_metadata_colum',\n        'display_modifier': lambda it: u'this is awesome: {0}'.format(it)\n    }\n</pre>\n<p>Register the adapter:</p>\n<pre>&lt;configure xmlns=\"http://namespaces.zope.org/zope\"&gt;\n  &lt;adapter factory=\".collectionfilter.groupby_modifier\" name=\"modifier_1\" /&gt;\n&lt;/configure&gt;\n</pre>\n<p>Done.</p>\n<p>Your adapter is called by <tt>collective.collectionfilter.vocabularies.GroupByCriteria.groupby</tt>.</p>\n</div>\n<div id=\"compatibility\">\n<h3>Compatibility</h3>\n<p>This package is compatible with Plone 5 and above. Note that in 5.0 some functionality is reduced such as AJAX loading of search results.\nIf your theme doesn\u2019t work well with AJAX loading this can be overridden in the registery or via diazo.</p>\n</div>\n<div id=\"author\">\n<h3>Author</h3>\n<ul>\n<li>Johannes Raggam</li>\n<li>Peter Holzer</li>\n</ul>\n<p>This package is based on <tt>collective.portlet.collectionfilter</tt> and <tt>collective.portlet.collectionbysubject</tt>.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>3.3 (2020-01-22)</h3>\n<ul>\n<li>Fix is_available property\n[agitator]</li>\n<li>Added css_modifier to extend css class of a filter item\n[agitator]</li>\n<li>Fix check for boolean values.\n[tmassman]</li>\n<li>fix translation of <tt>filter_value</tt>\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.2.1 (2019-08-07)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>fix bug introduced with pattern option <tt>ajaxLoad</tt>\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.2 (2019-07-23)</h3>\n<p>Features:</p>\n<ul>\n<li>Restore 5.0.x compatibility\n[djay, quang]</li>\n<li>Make ajax loading of results and portlets a pattern option is themers can override it\n[quang]</li>\n<li>change collection picker to show parent by default so you don\u2019t have to click backwards\n[djay]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix double display of portlets profile\n[agitator]</li>\n<li>Fix bug where filter urls was getting utf encoded then made into unicode again\n[djay]</li>\n<li>Fix 5.2 where operators should not be used on all index types\n[djay]</li>\n<li>Fix unfiltered results appearing in next page of batch\n[djay]</li>\n<li>Fix bug where portlets didn\u2019t work without GeoLocation dependencies\n[djay]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>3.1 (2019-06-06)</h3>\n<p>New features:</p>\n<ul>\n<li>Geolocation filter.\n[petschki, thet]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Remove dependency on plone.app.upgrade\n[agitator]</li>\n<li>Constrain <tt>target collection</tt> to a configurable registry value.\nThe default is <tt>['Collection', ]</tt>.\n[petschki]</li>\n<li>Fix non-interable catalog metadata values for Python 3.\n[petschki]</li>\n<li>Use Map Layer translations from plone.formwidget.geolocation\n[petschki]</li>\n<li>Fix <tt>None</tt> value in <tt>safe_interable</tt>\n[petschki]</li>\n<li>Fix for empty SearchableText field (see #56)\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>3.0 (2019-03-25)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Remove support for Plone &lt; 5.1.\n[petschki]</li>\n</ul>\n<p>New features:</p>\n<ul>\n<li>Python 3 compatibility.\n[petschki]</li>\n<li>Test setup\n[petschki]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>fix bug in @@render-portlet for Python 3.\nNOTE on Python 3: this required plone.app.portlets &gt;= 4.4.2\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.1 (2019-03-22)</h3>\n<p>New features:</p>\n<ul>\n<li>Python 3 compatibility.\n[agitator]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Do not render an empty <tt>filterClassName</tt>.\n[thet]</li>\n<li>patCollectionFilter is not in settings, it\u2019s in view.\n[agitator]</li>\n<li>Fix styles for long/multiline filter terms\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>2.0.1 (2018-12-13)</h3>\n<ul>\n<li>Fix upgrade steps and reapply profile to fix bundle registration\nRemove conditional reinitialization - caused problems with other patterns\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>2.0 (2018-12-08)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Remove the <tt>cache_time</tt> setting and replace it with <tt>cache_enabled</tt>.</li>\n<li>collectionsearch.pt: changed view attribute <tt>header_title</tt> to <tt>title</tt>.</li>\n<li>Depend on plone.app.contenttypes.\nAll target collections must provide <tt>plone.app.contenttypes.behaviors.collection.ICollection</tt> interface.\nThe <tt>result</tt> method will be callend on this behavior adapter.</li>\n<li>There is a implicit dependency to Font Awesome for the filter tile edit links.\nThat has to be revisited to make it work out of the box.</li>\n<li>Modernized markup for easier styling</li>\n</ul>\n<p>New:</p>\n<ul>\n<li>Optimize the cache key by including the current language, user roles instead of id and the database counter.</li>\n<li>Remove the view_name part when populating the browser history with filter changes.\nThe view_name part is for loading specific AJAX tiles, but should probably not be displayed.</li>\n<li>Add filter and search tiles.</li>\n<li>Add a <tt>sort_key_function</tt> key to the IQueryModifier dict to allow for a different sort key function when sorting the values.</li>\n<li>Add a <tt>index_modifier</tt> key to the IQueryModifier indexes dict to allow transforming of index search values.\nFor <tt>KeywordIndex</tt> indices the index_modifier is automatically set to encode the value to utf-8.</li>\n<li>Add a <tt>value_blacklist</tt> key to the IQueryModifier indexes dict to allow blacklisting of individual index values.</li>\n<li>Add <tt>view_name</tt> configuration parameter to call a special result listing view.\nThis can be used to call a tile instead to call the whole context view.</li>\n<li>Add <tt>content_selector</tt> configuration parameter to choose a DOM node from the source to inject into the target.</li>\n<li>Ensure early exit on the content filter traverse handler if it is not needed to run.</li>\n<li>Make backwards compatible with Plone 5.0\n[nngu6036, instification]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>When reloading the collection in JavaScript, use the content selector\u2019s parent as base to trigger events on.\nThe content selector itself is replaced and events cannot be catched.</li>\n<li>Register the bundle compile files as <tt><span class=\"pre\">collectionfilter-bundle-compiled.js</span></tt> and <tt><span class=\"pre\">collectionfilter-bundle-compiled.css</span></tt>, so that using <tt><span class=\"pre\">plone-compile-resources</span></tt> results in the same files.\nSee: <a href=\"https://github.com/plone/Products.CMFPlone/issues/2437\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/2437</a></li>\n<li>Sort the filter value list for filter title instead filter value.</li>\n<li>fix collectionsearch portlet\n[petschki]</li>\n<li>when providing a custom <cite>IGroupByCriteria</cite> adapter, fallback to title sorted values if no sort_key_function is given.\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.0.1 (2018-02-09)</h3>\n<ul>\n<li>Fix target collection selection via catalog vocabular and RelatedItemsFieldWidget.\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0 (2018-01-27)</h3>\n<ul>\n<li>Implement AJAX search for the collection search portlet.\n[thet]</li>\n<li>Update the history / location bar URL with the current filter URL.\n[thet]</li>\n<li>Fix error where <tt>closest</tt> DOM method isn\u2019t supported on IE.\nFixes #6.\n[agitator]</li>\n<li>Register bundle to depend on <tt>*</tt> to avoid weird Select2 initialization error.\n[thet]</li>\n<li>Add <tt>input_type</tt> option to be able to better select the type of input.\nAdd <tt>input_type</tt> support for dropdowns.\nRemove <tt>as_input</tt> attribute and provide upgrade step for it.\n[thet]</li>\n<li>Initial release from collective.portlet.collectionfilter.\n[thet]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6499341, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "7bdb9a7f77b958bab52cc587db0b2d89", "sha256": "17220da66915279c3bda54f6f5493ad3ec0214f3882ba7aaef04186a08b10413"}, "downloads": -1, "filename": "collective.collectionfilter-1.0.tar.gz", "has_sig": false, "md5_digest": "7bdb9a7f77b958bab52cc587db0b2d89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34150, "upload_time": "2018-01-27T17:04:09", "upload_time_iso_8601": "2018-01-27T17:04:09.223615Z", "url": "https://files.pythonhosted.org/packages/93/b4/e9a133bb156e0091ea881b42ac83db4607004596ba0d9f6e435d21162005/collective.collectionfilter-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6411b057b4b226e458a02383deac95f7", "sha256": "5841dd4ccb1b13c9c53ea11cda9c766973acc4dd1114c20930bad8015f526f46"}, "downloads": -1, "filename": "collective.collectionfilter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6411b057b4b226e458a02383deac95f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34455, "upload_time": "2018-02-09T14:09:20", "upload_time_iso_8601": "2018-02-09T14:09:20.693584Z", "url": "https://files.pythonhosted.org/packages/b3/e5/6ee080d324f587560ca527f1311017c11c93dd100a484ec30bea10cd2c53/collective.collectionfilter-1.0.1.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "9a6b45062eca03b4b3c0feb5b89770d1", "sha256": "5f8bb7d0c5757bc7c1577a00f7d2a9cc43c2abcea8b11dde6d6590195258da29"}, "downloads": -1, "filename": "collective.collectionfilter-2.0.tar.gz", "has_sig": false, "md5_digest": "9a6b45062eca03b4b3c0feb5b89770d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40566, "upload_time": "2018-12-08T13:35:19", "upload_time_iso_8601": "2018-12-08T13:35:19.451151Z", "url": "https://files.pythonhosted.org/packages/ab/47/e9f1fcb35d1b78ad7e061c54300dd09c7e684fc0b28606855ae9fe60aafb/collective.collectionfilter-2.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "6e664c40b38bc9a5f4365592d59bd0b6", "sha256": "706d0a2337c3407dd6bc69eaaeb87d3c9075764eeb7633286cb875837a6a6486"}, "downloads": -1, "filename": "collective.collectionfilter-2.0.1.tar.gz", "has_sig": false, "md5_digest": "6e664c40b38bc9a5f4365592d59bd0b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41267, "upload_time": "2018-12-13T16:36:22", "upload_time_iso_8601": "2018-12-13T16:36:22.381672Z", "url": "https://files.pythonhosted.org/packages/90/f1/876acb2ea62536dede680d2988c9d55bfba39bae419df97a91313f820736/collective.collectionfilter-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "fb65a82e491f02b7904f0b3693d8b2dc", "sha256": "101fd633456bf03038d88da5b33514c8b23fca7e0a5be2a5657c2d9a62c6e239"}, "downloads": -1, "filename": "collective.collectionfilter-2.0.2.tar.gz", "has_sig": false, "md5_digest": "fb65a82e491f02b7904f0b3693d8b2dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41364, "upload_time": "2019-01-08T08:24:28", "upload_time_iso_8601": "2019-01-08T08:24:28.447649Z", "url": "https://files.pythonhosted.org/packages/56/e2/2178e41ca29af4f6148e1377bc583169243872a54261621db4b27b638a60/collective.collectionfilter-2.0.2.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "fb4f66a130bc8d65bded002cd27f46b9", "sha256": "dc5700c63135a735e4ce6a5769acf8e8525180c2ca2627aabf8662a281968e95"}, "downloads": -1, "filename": "collective.collectionfilter-2.1.tar.gz", "has_sig": false, "md5_digest": "fb4f66a130bc8d65bded002cd27f46b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38881, "upload_time": "2019-03-22T07:24:37", "upload_time_iso_8601": "2019-03-22T07:24:37.359966Z", "url": "https://files.pythonhosted.org/packages/8c/ab/ef366170b27bd6cbd825641e0f139595bc3909fef385ee9922772c028fd0/collective.collectionfilter-2.1.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "bb7ac8adf00a0fd8c9f0bd180b96272b", "sha256": "125ef02153f2d2de595fec6afcebe5fa215486b32cf1bbcbe08d565c40cadebf"}, "downloads": -1, "filename": "collective.collectionfilter-3.0.tar.gz", "has_sig": false, "md5_digest": "bb7ac8adf00a0fd8c9f0bd180b96272b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42161, "upload_time": "2019-03-25T19:28:08", "upload_time_iso_8601": "2019-03-25T19:28:08.864944Z", "url": "https://files.pythonhosted.org/packages/3f/c2/2a57904fe2667ddcd585dd3b4241967407c60bb118790e8a9463c6232c45/collective.collectionfilter-3.0.tar.gz", "yanked": false}], "3.1": [{"comment_text": "", "digests": {"md5": "e3ee5b7c0fbcd8a9bf62b73a8cf288aa", "sha256": "461628c70dc9a0c7fe318636c2a1ae3e46032753619f7db8fd60b7d74c6c5bee"}, "downloads": -1, "filename": "collective.collectionfilter-3.1.tar.gz", "has_sig": false, "md5_digest": "e3ee5b7c0fbcd8a9bf62b73a8cf288aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53196, "upload_time": "2019-06-06T21:40:25", "upload_time_iso_8601": "2019-06-06T21:40:25.897654Z", "url": "https://files.pythonhosted.org/packages/2b/cd/0af1ebe30c252d1ac45dccbda5e0cb42459c94ce44b18fe08207624318c7/collective.collectionfilter-3.1.tar.gz", "yanked": false}], "3.2": [{"comment_text": "", "digests": {"md5": "8d4be00f38d6d0c75d5db406c755d937", "sha256": "af64ffca4bbf3e3f40e6f0e73965ce20f2b7ce5b4d1a5581c52d8bc0993913ab"}, "downloads": -1, "filename": "collective.collectionfilter-3.2.tar.gz", "has_sig": false, "md5_digest": "8d4be00f38d6d0c75d5db406c755d937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55727, "upload_time": "2019-07-23T08:05:40", "upload_time_iso_8601": "2019-07-23T08:05:40.866121Z", "url": "https://files.pythonhosted.org/packages/40/fe/36e918daf7cb2582cfba97d72687f7073cbaf3de60c5e77350d2588735cf/collective.collectionfilter-3.2.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "11f3aa8b8690a93b8fe03067eebb819b", "sha256": "851521a76ea99bf2d5b062a9254cda5e6bad878ae1e463a2564b5ea3c25c8370"}, "downloads": -1, "filename": "collective.collectionfilter-3.2.1.tar.gz", "has_sig": false, "md5_digest": "11f3aa8b8690a93b8fe03067eebb819b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56180, "upload_time": "2019-08-07T10:52:16", "upload_time_iso_8601": "2019-08-07T10:52:16.531162Z", "url": "https://files.pythonhosted.org/packages/64/2f/b3396727210945fdcb3b35af18a155ae515fa14f203eb8935d424403916e/collective.collectionfilter-3.2.1.tar.gz", "yanked": false}], "3.3": [{"comment_text": "", "digests": {"md5": "66f284fd5ce83be2550a6048a39f3645", "sha256": "e48791315663c1c3f64e6aaafc2522b7f9fe562ff1a1845378480db60a880a81"}, "downloads": -1, "filename": "collective.collectionfilter-3.3.tar.gz", "has_sig": false, "md5_digest": "66f284fd5ce83be2550a6048a39f3645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59755, "upload_time": "2020-01-22T09:36:02", "upload_time_iso_8601": "2020-01-22T09:36:02.225625Z", "url": "https://files.pythonhosted.org/packages/63/8b/61e131d44318b7b7200c5657b773b39e29aa2d9aa771c51cf34c18a4e6f5/collective.collectionfilter-3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66f284fd5ce83be2550a6048a39f3645", "sha256": "e48791315663c1c3f64e6aaafc2522b7f9fe562ff1a1845378480db60a880a81"}, "downloads": -1, "filename": "collective.collectionfilter-3.3.tar.gz", "has_sig": false, "md5_digest": "66f284fd5ce83be2550a6048a39f3645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59755, "upload_time": "2020-01-22T09:36:02", "upload_time_iso_8601": "2020-01-22T09:36:02.225625Z", "url": "https://files.pythonhosted.org/packages/63/8b/61e131d44318b7b7200c5657b773b39e29aa2d9aa771c51cf34c18a4e6f5/collective.collectionfilter-3.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:59 2020"}