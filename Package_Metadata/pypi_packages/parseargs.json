{"info": {"author": "Andrew Nolte", "author_email": "anolte512@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ParseArgs\n\n##### A simple, intuitive way to parse command line arguments. Simply make a function, and call parseargs on it.\n* parses data types through annoations (annotations not required for string arguments)\n* parses optional keyword arguments by adding them as optional cli arguments\n* parses positional arguments in a variable called arglist (so don't use that as a keyword!)\n* adds a description of the command by using the signature of the method.\n\n## Example\n\n\nin fun.py:\n```python\nfrom parseargs import parseargs\n\n\n\ndef fun(firstname, lastname:str, number:int = 5):\n\tprint(f\"Hello {firstname} {lastname}\")\n\tprint(f\"Your number is {number}\")\n\tnumber *= 2\n\tprint(f\"Twice your number is {number}\")\n\n\nparseargs(fun)\n```\n\nNow on the command line, you can do:\n\n```shell\n$ python fun.py ricky bobby --number 5\n```\n\nNotice how it will print out 10. If you remove the annotation declaring the number an int, it will instead print out 55, because it will interpret it as a string.\n\n\nWe can get the method signature with:\n```\n$ python fun.py -h\nusage: test2.py [-h] [--number NUMBER] arglist arglist\n\nsignature = (firstname, lastname: str, number: int = 5)\n\npositional arguments:\n  arglist\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --number NUMBER\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AndrewNolte/ParseArgs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "parseargs", "package_url": "https://pypi.org/project/parseargs/", "platform": "", "project_url": "https://pypi.org/project/parseargs/", "project_urls": {"Homepage": "https://github.com/AndrewNolte/ParseArgs"}, "release_url": "https://pypi.org/project/parseargs/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A simple package for parsing function arguments from the command line", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ParseArgs</h1>\n<h5>A simple, intuitive way to parse command line arguments. Simply make a function, and call parseargs on it.</h5>\n<ul>\n<li>parses data types through annoations (annotations not required for string arguments)</li>\n<li>parses optional keyword arguments by adding them as optional cli arguments</li>\n<li>parses positional arguments in a variable called arglist (so don't use that as a keyword!)</li>\n<li>adds a description of the command by using the signature of the method.</li>\n</ul>\n<h2>Example</h2>\n<p>in fun.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parseargs</span> <span class=\"kn\">import</span> <span class=\"n\">parseargs</span>\n\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">firstname</span><span class=\"p\">,</span> <span class=\"n\">lastname</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Hello </span><span class=\"si\">{</span><span class=\"n\">firstname</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">lastname</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Your number is </span><span class=\"si\">{</span><span class=\"n\">number</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\t<span class=\"n\">number</span> <span class=\"o\">*=</span> <span class=\"mi\">2</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Twice your number is </span><span class=\"si\">{</span><span class=\"n\">number</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">parseargs</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">)</span>\n</pre>\n<p>Now on the command line, you can do:</p>\n<pre>$ python fun.py ricky bobby --number <span class=\"m\">5</span>\n</pre>\n<p>Notice how it will print out 10. If you remove the annotation declaring the number an int, it will instead print out 55, because it will interpret it as a string.</p>\n<p>We can get the method signature with:</p>\n<pre><code>$ python fun.py -h\nusage: test2.py [-h] [--number NUMBER] arglist arglist\n\nsignature = (firstname, lastname: str, number: int = 5)\n\npositional arguments:\n  arglist\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --number NUMBER\n</code></pre>\n\n          </div>"}, "last_serial": 6453460, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "df314246ecaa877f724b7731980220ee", "sha256": "8db7d978ef8f2470ce1d9cda71d2b9b81c6d4bec0005860496a29e377f3da067"}, "downloads": -1, "filename": "parseargs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "df314246ecaa877f724b7731980220ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2522, "upload_time": "2020-01-14T17:36:25", "upload_time_iso_8601": "2020-01-14T17:36:25.245601Z", "url": "https://files.pythonhosted.org/packages/b8/c3/11a6ce67a853da4508b7d44025a23a943da64a6aab31ac083787803a64d9/parseargs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86378923c7cf2314ae5395cf3254d0fc", "sha256": "4290368c223a1c62b160eb1875ea88725a4167a71143d63537c99d8f709e40ef"}, "downloads": -1, "filename": "parseargs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "86378923c7cf2314ae5395cf3254d0fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1862, "upload_time": "2020-01-14T17:36:27", "upload_time_iso_8601": "2020-01-14T17:36:27.856615Z", "url": "https://files.pythonhosted.org/packages/c5/4b/ed207a0dfe3397fbcbf49425cce7a8b334dbb3ea29330b3d065536d13d74/parseargs-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6c075fa4e5c523478b95a0bfc4d5621a", "sha256": "0ea2fd8328440816117b92bc2fa15a94444ff6e18d072292faf179dadd49b6de"}, "downloads": -1, "filename": "parseargs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6c075fa4e5c523478b95a0bfc4d5621a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2522, "upload_time": "2020-01-14T17:49:14", "upload_time_iso_8601": "2020-01-14T17:49:14.997108Z", "url": "https://files.pythonhosted.org/packages/8b/a7/8fa16d015b6bfda2aacffe39b42652afd294572776b63badf95890ef1223/parseargs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d8106e38ef87ab6e5f4e5976b6c7a1f", "sha256": "c5bded2ed64ab4ccc24cc1f14c0d3ccc176063d9e02f63fe3f124c916e47c0c9"}, "downloads": -1, "filename": "parseargs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5d8106e38ef87ab6e5f4e5976b6c7a1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1874, "upload_time": "2020-01-14T17:49:16", "upload_time_iso_8601": "2020-01-14T17:49:16.935812Z", "url": "https://files.pythonhosted.org/packages/80/d5/0cfc39a7411797141286a9fbde6f0927054eb2064bb6ca7094f24be962a9/parseargs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b05bfd59f66b611e34b099199bcacd1c", "sha256": "a3a0c4b62445ead14c4bdffe3711e819d696a78c8c21367b6852aabdc54a2d70"}, "downloads": -1, "filename": "parseargs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b05bfd59f66b611e34b099199bcacd1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2381, "upload_time": "2020-01-14T18:14:20", "upload_time_iso_8601": "2020-01-14T18:14:20.627250Z", "url": "https://files.pythonhosted.org/packages/80/5e/1be11f9dd781e4add94612b66b5f9a67d570d80aa8080e8f087b84f5598a/parseargs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a3f4658c25b25f447130051a62efc53", "sha256": "8a6d68733ac45a9efb89fa8011740139a841e31cd4bbbc7c0181ee961406dc40"}, "downloads": -1, "filename": "parseargs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8a3f4658c25b25f447130051a62efc53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1834, "upload_time": "2020-01-14T18:14:22", "upload_time_iso_8601": "2020-01-14T18:14:22.340756Z", "url": "https://files.pythonhosted.org/packages/55/df/1f22db3e47e61460e8a5e402adaa88ff608bedc0ff5ff22283368d2a7ff7/parseargs-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "852439eb49f865e34827f23972ecaf67", "sha256": "ba7720ce826b027248699b4e28f639067c9cf706d0a593cc456355f45d50704b"}, "downloads": -1, "filename": "parseargs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "852439eb49f865e34827f23972ecaf67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2709, "upload_time": "2020-01-14T18:41:06", "upload_time_iso_8601": "2020-01-14T18:41:06.117486Z", "url": "https://files.pythonhosted.org/packages/4f/26/718baea6efd81e8bb0a17277e9854ebcfb5341b25359076b8acc48c4cf98/parseargs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c1a130c158392bed7899baa2cc40bc", "sha256": "803248ff15752912fb6541e61953f93cf98e5b8b41ad35e27210ac3f155126f3"}, "downloads": -1, "filename": "parseargs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b1c1a130c158392bed7899baa2cc40bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2220, "upload_time": "2020-01-14T18:41:07", "upload_time_iso_8601": "2020-01-14T18:41:07.891579Z", "url": "https://files.pythonhosted.org/packages/b4/8b/9f02812fa2d905d56da1ca35ec67013b529af696e76a3c89241de0656639/parseargs-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "852439eb49f865e34827f23972ecaf67", "sha256": "ba7720ce826b027248699b4e28f639067c9cf706d0a593cc456355f45d50704b"}, "downloads": -1, "filename": "parseargs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "852439eb49f865e34827f23972ecaf67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2709, "upload_time": "2020-01-14T18:41:06", "upload_time_iso_8601": "2020-01-14T18:41:06.117486Z", "url": "https://files.pythonhosted.org/packages/4f/26/718baea6efd81e8bb0a17277e9854ebcfb5341b25359076b8acc48c4cf98/parseargs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c1a130c158392bed7899baa2cc40bc", "sha256": "803248ff15752912fb6541e61953f93cf98e5b8b41ad35e27210ac3f155126f3"}, "downloads": -1, "filename": "parseargs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b1c1a130c158392bed7899baa2cc40bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2220, "upload_time": "2020-01-14T18:41:07", "upload_time_iso_8601": "2020-01-14T18:41:07.891579Z", "url": "https://files.pythonhosted.org/packages/b4/8b/9f02812fa2d905d56da1ca35ec67013b529af696e76a3c89241de0656639/parseargs-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:22 2020"}