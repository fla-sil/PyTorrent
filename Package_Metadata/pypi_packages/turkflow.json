{"info": {"author": "Fil Krynicki", "author_email": "filipkrynicki@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "turkflow\n========\n\nLibrary for quickly creating Mechanical Turk workflows. In some ways, turkflow ended up being an accidental re-implementation of [TurKit](http://dl.acm.org/citation.cfm?id=1866029.1866040&coll=DL&dl=GUIDE&CFID=308021477&CFTOKEN=94691217).\n\n``turkflow`` allows you to specify arbitrary HTML HITs in [jinja2](http://jinja.pocoo.org/docs/) template files and python objects. It also provides functionality for waiting on the results of those HITs, checking HITs previously created by ``turkflow`` for completion, and parsing the results into a python structure.\n\n## Installation\nThe recommended way to install ``turkflow`` is with ``pip``:\n\n    pip install turkflow\n\nYou also need to create a [boto configuration file](https://code.google.com/p/boto/wiki/BotoConfig) with your Amazon AWS information.\n\n## Usage\n\nHere is a minimal example of a ``turkflow`` program:\n\n```python\nfrom turkflow.turkflow import *\nfrom jinja2 import *\n\n# create jinja2 environment using \"templates\" subdirectory\nenv = Environment(loader=PackageLoader('turkflow', 'templates'))\n\nclass TestHIT(TurkHITType):\n    def __init__(self):\n        TurkHITType.__init__(self,\n            \"This is a test HIT\",\n            string.split('keywords'),\n            description = 'test description',\n            duration = 600, # seconds\n            max_assignments = 50,\n            annotation = 'test', # by default, this will make turkflow look for a \"test.html\" jinja2 template\n            reward = 0.05,\n            env = env)\n\ntc = TurkConnection(\"turkflow_test_id\", \"~/scratch\")\nhit_key = tc.createHIT(TestHIT())\nresults, completion_times = tc.waitForHIT(hit_key, timeout=30) # stop polling after 30 seconds\n```\n\nIn a 'templates' subdirectory, we include ``base.html`` included in the turkflow repository and our own html file, ``test.html``:\n\n```html\n{% extends \"base.html\" %}\n\n{% block question_content %}\n    <p id=\"name_q\">What is your name?</p>\n    <!-- turk questions are identified by \"name\" so that you can gather multiple responses to the same question -->\n    <input type=\"text\" name=\"name_q\" placeholder=\"Clara\">\n{% endblock %}\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "turkflow", "package_url": "https://pypi.org/project/turkflow/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/turkflow/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/turkflow/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Library for creating Mechanical Turk workflows in python scripts.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            turkflow<br>========<br><br>Library for quickly creating Mechanical Turk workflows. In some ways, turkflow ended up being an accidental re-implementation of [TurKit](http://dl.acm.org/citation.cfm?id=1866029.1866040&amp;coll=DL&amp;dl=GUIDE&amp;CFID=308021477&amp;CFTOKEN=94691217).<br><br>``turkflow`` allows you to specify arbitrary HTML HITs in [jinja2](http://jinja.pocoo.org/docs/) template files and python objects. It also provides functionality for waiting on the results of those HITs, checking HITs previously created by ``turkflow`` for completion, and parsing the results into a python structure.<br><br>## Installation<br>The recommended way to install ``turkflow`` is with ``pip``:<br><br>    pip install turkflow<br><br>You also need to create a [boto configuration file](https://code.google.com/p/boto/wiki/BotoConfig) with your Amazon AWS information.<br><br>## Usage<br><br>Here is a minimal example of a ``turkflow`` program:<br><br>```python<br>from turkflow.turkflow import *<br>from jinja2 import *<br><br># create jinja2 environment using \"templates\" subdirectory<br>env = Environment(loader=PackageLoader('turkflow', 'templates'))<br><br>class TestHIT(TurkHITType):<br>    def __init__(self):<br>        TurkHITType.__init__(self,<br>            \"This is a test HIT\",<br>            string.split('keywords'),<br>            description = 'test description',<br>            duration = 600, # seconds<br>            max_assignments = 50,<br>            annotation = 'test', # by default, this will make turkflow look for a \"test.html\" jinja2 template<br>            reward = 0.05,<br>            env = env)<br><br>tc = TurkConnection(\"turkflow_test_id\", \"~/scratch\")<br>hit_key = tc.createHIT(TestHIT())<br>results, completion_times = tc.waitForHIT(hit_key, timeout=30) # stop polling after 30 seconds<br>```<br><br>In a 'templates' subdirectory, we include ``base.html`` included in the turkflow repository and our own html file, ``test.html``:<br><br>```html<br>{% extends \"base.html\" %}<br><br>{% block question_content %}<br>    &lt;p id=\"name_q\"&gt;What is your name?&lt;/p&gt;<br>    &lt;!-- turk questions are identified by \"name\" so that you can gather multiple responses to the same question --&gt;<br>    &lt;input type=\"text\" name=\"name_q\" placeholder=\"Clara\"&gt;<br>{% endblock %}<br>```\n          </div>"}, "last_serial": 801006, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bf30b8500b844f57fb6eb12dc760e0f5", "sha256": "dcafa3bcb3a69ab80c74e84dc650c395f62ea35f66b1555c78cf51a37e0b543b"}, "downloads": -1, "filename": "turkflow-0.1.tar.gz", "has_sig": false, "md5_digest": "bf30b8500b844f57fb6eb12dc760e0f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38305, "upload_time": "2013-05-14T19:30:45", "upload_time_iso_8601": "2013-05-14T19:30:45.273225Z", "url": "https://files.pythonhosted.org/packages/92/53/7ee2498607e76d83e80c4ad1962fb346ca86de50d2ac20e5a59adfc53b45/turkflow-0.1.tar.gz", "yanked": false}], "0.1.01": [{"comment_text": "", "digests": {"md5": "00129597b18502af76e5d24387d8aacc", "sha256": "26db9d6991f56ce6dad6bbb440d9336feacb5a64a97500fab0beee36f334f1b5"}, "downloads": -1, "filename": "turkflow-0.1.01.tar.gz", "has_sig": false, "md5_digest": "00129597b18502af76e5d24387d8aacc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38327, "upload_time": "2013-05-14T19:53:22", "upload_time_iso_8601": "2013-05-14T19:53:22.857607Z", "url": "https://files.pythonhosted.org/packages/9c/8d/dc1abf294be55a50dabb367843e7fcb1635df1d1f1734460f2ea1c3f6ace/turkflow-0.1.01.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4b32a8308f74d77d2e42b6914dc370ab", "sha256": "1542e4326c01782f63ce7c48336c204f123d9b9c480ce881da066c6bc3653eae"}, "downloads": -1, "filename": "turkflow-0.2.tar.gz", "has_sig": false, "md5_digest": "4b32a8308f74d77d2e42b6914dc370ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19425, "upload_time": "2013-05-20T18:06:13", "upload_time_iso_8601": "2013-05-20T18:06:13.029666Z", "url": "https://files.pythonhosted.org/packages/83/3e/bbb94d3c90b2d59a85bfd0987356137e196e9c3ec62691bdddb7ecde62d5/turkflow-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "11435fb6fede0c8edbfef4df52f1b3f0", "sha256": "ea92d1b381dbcac8771568531a47e1a16cf8b52b8fc6eed0d63c4b285f1f3db4"}, "downloads": -1, "filename": "turkflow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "11435fb6fede0c8edbfef4df52f1b3f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20336, "upload_time": "2013-06-06T18:07:58", "upload_time_iso_8601": "2013-06-06T18:07:58.289520Z", "url": "https://files.pythonhosted.org/packages/66/dd/52ee11ee69bbc2c254ac48abba2c8ef216ced60d90ad0675fca2b35c63ed/turkflow-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "6ff725895fa74a3100782c957cde28fe", "sha256": "2b98bf3e72f821b6aca840ab23895327a2007637b83cc4c36c1712c7d564fbf4"}, "downloads": -1, "filename": "turkflow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6ff725895fa74a3100782c957cde28fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20352, "upload_time": "2013-06-06T18:50:37", "upload_time_iso_8601": "2013-06-06T18:50:37.192796Z", "url": "https://files.pythonhosted.org/packages/e8/c2/b7adc2729880c24f13ccd0026bd52da4ed53d8ffacdc47dc56815cd9d653/turkflow-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ff725895fa74a3100782c957cde28fe", "sha256": "2b98bf3e72f821b6aca840ab23895327a2007637b83cc4c36c1712c7d564fbf4"}, "downloads": -1, "filename": "turkflow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6ff725895fa74a3100782c957cde28fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20352, "upload_time": "2013-06-06T18:50:37", "upload_time_iso_8601": "2013-06-06T18:50:37.192796Z", "url": "https://files.pythonhosted.org/packages/e8/c2/b7adc2729880c24f13ccd0026bd52da4ed53d8ffacdc47dc56815cd9d653/turkflow-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:35 2020"}