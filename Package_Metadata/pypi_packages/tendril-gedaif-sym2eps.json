{"info": {"author": "Chintalagiri Shashank", "author_email": "shashank@chintal.in", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: C", "Programming Language :: Python", "Topic :: Software Development"], "description": "gEDA sym2eps Python Wrapper\n---------------------------\n\n.. image:: https://badge.fury.io/py/tendril-gedaif-sym2eps.png\n    :target: http://badge.fury.io/py/tendril-gedaif-sym2eps\n\n.. image:: https://travis-ci.org/chintal/tendril-gedaif-sym2eps.svg\n    :target: https://travis-ci.org/chintal/tendril-gedaif-sym2eps\n\nProvides a _very_ simple wrapper around DJ Delorie's ``sym2eps``.\n\nThis package (and the wrapper) are mostly for fun and for having a simple\nreference implementation for a Cython wrapper package handy. There isn't\nmuch inherent utility to it. Normally, you would just use DJ Delorie's C file\n`sym2eps.cc <http://www.gedasymbols.org/user/dj_delorie/tools/sym2eps.cc>`_\ndirectly. Or better yet, the ``gaf`` binary from ``geda 1.9.2``, and get much\nmore than you would from here. This wrapper, for instance, doesn't support\nreading from and writing to stdin/stdout, which the C file does.\n\nThe excuse for writing this wrapper was to be able to remove the C code and\nthe consequent requirement of figuring out a safe build process for it from\nwithin the ``tendril`` core module. This way, we just list this package\nas a dependency and let setuptools / distutils take care of it.\n\nCython tutorial (for future reference): http://docs.cython.org/src/tutorial/\n\nInstallation\n------------\n::\n\n    pip install tendril-gedaif-sym2eps\n\nUsage Example\n-------------\n\n    >>> import sym2eps\n    >>> sym2eps.convert('test/symbol.sym', 'test/output.eps')\n\n.. hint:: The paths specified here should either be absolute or relative\n          to the CWD.\n\n.. warning:: This module is currently broken. It will segfault if you try\n             to convert multiple files. If you think you can fix it, see\n             the ``convert()`` function of ``src/_sym2eps.cc``.\n\nLicense\n-------\nDistributed under the terms of the GPLv2 License.\n\nCopyright 2015 Chintalagiri Shashank  (Cython Wrapper)\nCopyright 2006 DJ Delorie             (Original C code)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chintal/tendril-gedaif-sym2eps", "keywords": "utilities", "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "tendril-gedaif-sym2eps", "package_url": "https://pypi.org/project/tendril-gedaif-sym2eps/", "platform": "any", "project_url": "https://pypi.org/project/tendril-gedaif-sym2eps/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/chintal/tendril-gedaif-sym2eps"}, "release_url": "https://pypi.org/project/tendril-gedaif-sym2eps/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "gEDA sym2eps Python Wrapper", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"geda-sym2eps-python-wrapper\">\n<h2>gEDA sym2eps Python Wrapper</h2>\n<a href=\"http://badge.fury.io/py/tendril-gedaif-sym2eps\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/tendril-gedaif-sym2eps.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5df7b668db03f5fdcc23d00939c57d0c9c1ae254/68747470733a2f2f62616467652e667572792e696f2f70792f74656e6472696c2d6765646169662d73796d326570732e706e67\"></a>\n<a href=\"https://travis-ci.org/chintal/tendril-gedaif-sym2eps\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/chintal/tendril-gedaif-sym2eps.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e791ed4c73e15394b96ce45975e861aff657298/68747470733a2f2f7472617669732d63692e6f72672f6368696e74616c2f74656e6472696c2d6765646169662d73796d326570732e737667\"></a>\n<p>Provides a _very_ simple wrapper around DJ Delorie\u2019s <tt>sym2eps</tt>.</p>\n<p>This package (and the wrapper) are mostly for fun and for having a simple\nreference implementation for a Cython wrapper package handy. There isn\u2019t\nmuch inherent utility to it. Normally, you would just use DJ Delorie\u2019s C file\n<a href=\"http://www.gedasymbols.org/user/dj_delorie/tools/sym2eps.cc\" rel=\"nofollow\">sym2eps.cc</a>\ndirectly. Or better yet, the <tt>gaf</tt> binary from <tt>geda 1.9.2</tt>, and get much\nmore than you would from here. This wrapper, for instance, doesn\u2019t support\nreading from and writing to stdin/stdout, which the C file does.</p>\n<p>The excuse for writing this wrapper was to be able to remove the C code and\nthe consequent requirement of figuring out a safe build process for it from\nwithin the <tt>tendril</tt> core module. This way, we just list this package\nas a dependency and let setuptools / distutils take care of it.</p>\n<p>Cython tutorial (for future reference): <a href=\"http://docs.cython.org/src/tutorial/\" rel=\"nofollow\">http://docs.cython.org/src/tutorial/</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install tendril-gedaif-sym2eps\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; import sym2eps\n&gt;&gt;&gt; sym2eps.convert('test/symbol.sym', 'test/output.eps')\n</pre>\n</blockquote>\n<div>\n<p>Hint</p>\n<p>The paths specified here should either be absolute or relative\nto the CWD.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>This module is currently broken. It will segfault if you try\nto convert multiple files. If you think you can fix it, see\nthe <tt>convert()</tt> function of <tt>src/_sym2eps.cc</tt>.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the terms of the GPLv2 License.</p>\n<p>Copyright 2015 Chintalagiri Shashank  (Cython Wrapper)\nCopyright 2006 DJ Delorie             (Original C code)</p>\n</div>\n\n          </div>"}, "last_serial": 1755178, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "d53a1e611d5bb4bbd41d532258da5708", "sha256": "edf68498d993d9a7d0fbb828c137f7322d160457831dd6b890d7ceb253d979d5"}, "downloads": -1, "filename": "tendril-gedaif-sym2eps-0.2.tar.gz", "has_sig": true, "md5_digest": "d53a1e611d5bb4bbd41d532258da5708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33385, "upload_time": "2015-09-28T09:39:43", "upload_time_iso_8601": "2015-09-28T09:39:43.957430Z", "url": "https://files.pythonhosted.org/packages/39/95/9d01d704057c76560f8159a9fece6a2ea6b85301219941f2dc6e9aebfc18/tendril-gedaif-sym2eps-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f9d8fc079c975f5c3dc882586461aae6", "sha256": "38645985be7bc690f6931dd909e6e2c5dacf516e51d5ca2f8928e04bfac5625a"}, "downloads": -1, "filename": "tendril-gedaif-sym2eps-0.2.1.tar.gz", "has_sig": true, "md5_digest": "f9d8fc079c975f5c3dc882586461aae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33638, "upload_time": "2015-10-06T18:43:37", "upload_time_iso_8601": "2015-10-06T18:43:37.893898Z", "url": "https://files.pythonhosted.org/packages/e2/9f/f0b4ec90db279c9a123497dbe520b292a948871909a25cc8fd92798dcded/tendril-gedaif-sym2eps-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9d8fc079c975f5c3dc882586461aae6", "sha256": "38645985be7bc690f6931dd909e6e2c5dacf516e51d5ca2f8928e04bfac5625a"}, "downloads": -1, "filename": "tendril-gedaif-sym2eps-0.2.1.tar.gz", "has_sig": true, "md5_digest": "f9d8fc079c975f5c3dc882586461aae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33638, "upload_time": "2015-10-06T18:43:37", "upload_time_iso_8601": "2015-10-06T18:43:37.893898Z", "url": "https://files.pythonhosted.org/packages/e2/9f/f0b4ec90db279c9a123497dbe520b292a948871909a25cc8fd92798dcded/tendril-gedaif-sym2eps-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:32 2020"}