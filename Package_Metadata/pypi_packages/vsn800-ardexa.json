{"info": {"author": "Ardexa Pty Limited", "author_email": "support@ardexa.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Purpose\nABB, amongst other things, supply weather stations for Solar plants. The purpose of this project is to collect data from ABB VSN800 Weather stations and send the data to your cloud using Ardexa. Data from ABB weather stations is read using an Ethernet connection using Modbus RTU (over Ethernet) and a Linux device such as a Raspberry Pi, or an X86 intel powered computer. \n\n## How does it work\nThis application is written in Python. This application will query 1 or more connected stations at regular intervals. Data will be written to log files on disk in a directory specified by the user. Usage and command line parameters are shown below. This application currently reads from the ABB VSN800-12 Weather Stations. See https://library.e.abb.com/public/62ef065e9c9b450c8ab1a2a109216b0c/VSN800%20WEATHER%20STATION_BCD.00392_EN_RevG.pdf. According to this documnent, the \"... VSN800-12 includes a basic sensor set: ambient temperature, solar irradiance, and back of module temperature ...\"\n\n## Install\nOn a raspberry Pi, or other Linux machines (arm, intel, mips or whetever), make sure Python is installed (which it should be). Then install the package as follows:\n```\nsudo pip install vsn800_ardexa\n```\n\nYou also need to install the `modpoll` tool\n```\ncd\nmkdir modpoll\ncd modpoll\nwget http://www.modbusdriver.com/downloads/modpoll.3.4.zip\nunzip modpoll.3.4.zip \ncd linux/\nchmod 755 modpoll \nsudo cp modpoll /usr/local/bin\nmodpoll -h\n```\n\n## Usage\n- This script can query many ethernet connected VSN800 weather stations.\n- To discover RS485 address range and print out the station metadata\n```\nUsage: vsn800_ardexa discover ip_address port rs485_addresses\nEg; vsn800_ardexa discover 192.168.1.2 502 10-20\n```\n\nSend production data to a file on disk \n```\nUsage: vsn800_ardexa get ip_address port rs485_addresses log_directory\nEg; vsn800_ardexa get 192.168.1.2 502 14-21 /opt/ardexa\n```\n{IP Address} = IP address of the weather stations combiner, eg; 192.168.1.2\n{Port} = Modbus port, eg; 502\n{RS485 Address(es)} = RS485 address or range of addresses, eg; 1-5 or 1,2,3 or 4 (for example)\n{log directory} = logging directory, eg; /opt/ardexa/\n\nTo view debug output, increase the verbosity using the `-v` flag.\n- standard (no messages, except errors), `-v` (discovery messages) or `-vv` (all messages)\n\n\n## Collecting to the Ardexa cloud\nCollecting to the Ardexa cloud is free for up to 3 x Raspberry Pis (or equivalent). Ardexa provides free agents for ARM, Intel x86 and MIPS based processors. To collect the data to the Ardexa cloud do the following:\n- Create a `RUN` scenario to schedule the Ardexa ABB VSN800 script to run at regular intervals (say every 300 seconds/5 minutes).\n- Then use a `CAPTURE` scenario to collect the csv (comma separated) data from the filename (say) `/opt/ardexa/logs/`. This file contains a header entry (as the first line) that describes the CSV elements of the file.\n\n## Help\nContact Ardexa at support@ardexa.com, and we'll do our best efforts to help.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ardexa/vsn800-weather", "keywords": "ABB VSN800 weather station solar ardexa", "license": "", "maintainer": "", "maintainer_email": "", "name": "vsn800-ardexa", "package_url": "https://pypi.org/project/vsn800-ardexa/", "platform": "", "project_url": "https://pypi.org/project/vsn800-ardexa/", "project_urls": {"Bug Reports": "https://github.com/ardexa/vsn800-weather/issues", "Homepage": "https://github.com/ardexa/vsn800-weather", "Source": "https://github.com/ardexa/vsn800-weather/"}, "release_url": "https://pypi.org/project/vsn800-ardexa/1.3.1/", "requires_dist": ["future", "ardexaplugin", "Click"], "requires_python": ">=2.7", "summary": "Collect from Phoenix Contact SOLARCHECK String Monitor and send the data to your cloud using Ardexa", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Purpose\nABB, amongst other things, supply weather stations for Solar plants. The purpose of this project is to collect data from ABB VSN800 Weather stations and send the data to your cloud using Ardexa. Data from ABB weather stations is read using an Ethernet connection using Modbus RTU (over Ethernet) and a Linux device such as a Raspberry Pi, or an X86 intel powered computer.</p>\n<p>## How does it work\nThis application is written in Python. This application will query 1 or more connected stations at regular intervals. Data will be written to log files on disk in a directory specified by the user. Usage and command line parameters are shown below. This application currently reads from the ABB VSN800-12 Weather Stations. See <a href=\"https://library.e.abb.com/public/62ef065e9c9b450c8ab1a2a109216b0c/VSN800%20WEATHER%20STATION_BCD.00392_EN_RevG.pdf\" rel=\"nofollow\">https://library.e.abb.com/public/62ef065e9c9b450c8ab1a2a109216b0c/VSN800%20WEATHER%20STATION_BCD.00392_EN_RevG.pdf</a>. According to this documnent, the \u201c\u2026 VSN800-12 includes a basic sensor set: ambient temperature, solar irradiance, and back of module temperature \u2026\u201d</p>\n<p>## Install\nOn a raspberry Pi, or other Linux machines (arm, intel, mips or whetever), make sure Python is installed (which it should be). Then install the package as follows:\n<tt>`\nsudo pip install vsn800_ardexa\n`</tt></p>\n<p>You also need to install the <cite>modpoll</cite> tool\n<tt>`\ncd\nmkdir modpoll\ncd modpoll\nwget <span class=\"pre\">http://www.modbusdriver.com/downloads/modpoll.3.4.zip</span>\nunzip modpoll.3.4.zip\ncd linux/\nchmod 755 modpoll\nsudo cp modpoll /usr/local/bin\nmodpoll <span class=\"pre\">-h</span>\n`</tt></p>\n<p>## Usage\n- This script can query many ethernet connected VSN800 weather stations.\n- To discover RS485 address range and print out the station metadata\n<tt>`\nUsage: vsn800_ardexa discover ip_address port rs485_addresses\nEg; vsn800_ardexa discover 192.168.1.2 502 <span class=\"pre\">10-20</span>\n`</tt></p>\n<p>Send production data to a file on disk\n<tt>`\nUsage: vsn800_ardexa get ip_address port rs485_addresses log_directory\nEg; vsn800_ardexa get 192.168.1.2 502 <span class=\"pre\">14-21</span> /opt/ardexa\n`</tt>\n{IP Address} = IP address of the weather stations combiner, eg; 192.168.1.2\n{Port} = Modbus port, eg; 502\n{RS485 Address(es)} = RS485 address or range of addresses, eg; 1-5 or 1,2,3 or 4 (for example)\n{log directory} = logging directory, eg; /opt/ardexa/</p>\n<p>To view debug output, increase the verbosity using the <cite>-v</cite> flag.\n- standard (no messages, except errors), <cite>-v</cite> (discovery messages) or <cite>-vv</cite> (all messages)</p>\n<p>## Collecting to the Ardexa cloud\nCollecting to the Ardexa cloud is free for up to 3 x Raspberry Pis (or equivalent). Ardexa provides free agents for ARM, Intel x86 and MIPS based processors. To collect the data to the Ardexa cloud do the following:\n- Create a <cite>RUN</cite> scenario to schedule the Ardexa ABB VSN800 script to run at regular intervals (say every 300 seconds/5 minutes).\n- Then use a <cite>CAPTURE</cite> scenario to collect the csv (comma separated) data from the filename (say) <cite>/opt/ardexa/logs/</cite>. This file contains a header entry (as the first line) that describes the CSV elements of the file.</p>\n<p>## Help\nContact Ardexa at <a href=\"mailto:support%40ardexa.com\">support<span>@</span>ardexa<span>.</span>com</a>, and we\u2019ll do our best efforts to help.</p>\n\n          </div>"}, "last_serial": 4561058, "releases": {"1.3.1": [{"comment_text": "", "digests": {"md5": "51f7be33a8514ec8a097e0fa356094ba", "sha256": "4331cc68ac3b57d19b4b81ab166cfd8c056ff0469946328d5b396135e7122a9e"}, "downloads": -1, "filename": "vsn800_ardexa-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51f7be33a8514ec8a097e0fa356094ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 8463, "upload_time": "2018-05-02T05:01:29", "upload_time_iso_8601": "2018-05-02T05:01:29.070980Z", "url": "https://files.pythonhosted.org/packages/aa/b2/67228deeec199e650d6314e720c10f31d95048dc3fa109700443698d19a9/vsn800_ardexa-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b36e71bd402c38bf35c93c5a09833d46", "sha256": "1ee60d7d3a2fffa20f0a9c9081a55f0a2984fee299c7c04c0692ffdc199170af"}, "downloads": -1, "filename": "vsn800_ardexa-1.3.1.tar.gz", "has_sig": false, "md5_digest": "b36e71bd402c38bf35c93c5a09833d46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5847, "upload_time": "2018-05-02T05:01:30", "upload_time_iso_8601": "2018-05-02T05:01:30.350695Z", "url": "https://files.pythonhosted.org/packages/82/c4/927879f40f941ed935a469def10ac47fcfb56a583edf7f537049d5880c8f/vsn800_ardexa-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51f7be33a8514ec8a097e0fa356094ba", "sha256": "4331cc68ac3b57d19b4b81ab166cfd8c056ff0469946328d5b396135e7122a9e"}, "downloads": -1, "filename": "vsn800_ardexa-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51f7be33a8514ec8a097e0fa356094ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 8463, "upload_time": "2018-05-02T05:01:29", "upload_time_iso_8601": "2018-05-02T05:01:29.070980Z", "url": "https://files.pythonhosted.org/packages/aa/b2/67228deeec199e650d6314e720c10f31d95048dc3fa109700443698d19a9/vsn800_ardexa-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b36e71bd402c38bf35c93c5a09833d46", "sha256": "1ee60d7d3a2fffa20f0a9c9081a55f0a2984fee299c7c04c0692ffdc199170af"}, "downloads": -1, "filename": "vsn800_ardexa-1.3.1.tar.gz", "has_sig": false, "md5_digest": "b36e71bd402c38bf35c93c5a09833d46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5847, "upload_time": "2018-05-02T05:01:30", "upload_time_iso_8601": "2018-05-02T05:01:30.350695Z", "url": "https://files.pythonhosted.org/packages/82/c4/927879f40f941ed935a469def10ac47fcfb56a583edf7f537049d5880c8f/vsn800_ardexa-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:54 2020"}