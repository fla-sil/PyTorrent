{"info": {"author": "Jonas Melian", "author_email": "jonas@mailup.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Topic :: System :: Logging"], "description": "Yamlog uses a rotating file that rollovers at 128 KB, it writes messages in YAML\nformat since it's more easy to parse --using the international format for date\nand time--, and it also logs the higher-level messages to the standard error\ninto single lines.\n\nTo setup the logging::\n\n  import yamlog\n  yamlog.setup(filename)\n\nwhere `filename` is the file where is going to be logged; */tmp/python.log* by\ndefault.\n\nAnd to tear down it::\n\n  yamlog.teardown()\n\nThen, in each module where is going to be used, there is to add::\n\n  import yamlog\n  _log = yamlog.logger(__name__)\n\nso it passes the module name where it's being run. Now, can be used the logging\nmethods --*debug()*, *info()*, *warning()*, *error()*, *critical()*-- to\nindicate the importance of a logged message.\n\nChange history\n==============\n\nv0.9, 2010-02-12\n----------------\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kless/Yamlog", "keywords": "log logging", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Yamlog-0.9", "package_url": "https://pypi.org/project/Yamlog-0.9/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Yamlog-0.9/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/kless/Yamlog"}, "release_url": "https://pypi.org/project/Yamlog-0.9/0.9/", "requires_dist": null, "requires_python": null, "summary": "Logging in YAML format", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Yamlog uses a rotating file that rollovers at 128 KB, it writes messages in YAML\nformat since it\u2019s more easy to parse \u2013using the international format for date\nand time\u2013, and it also logs the higher-level messages to the standard error\ninto single lines.</p>\n<p>To setup the logging:</p>\n<pre>import yamlog\nyamlog.setup(filename)\n</pre>\n<p>where <cite>filename</cite> is the file where is going to be logged; <em>/tmp/python.log</em> by\ndefault.</p>\n<p>And to tear down it:</p>\n<pre>yamlog.teardown()\n</pre>\n<p>Then, in each module where is going to be used, there is to add:</p>\n<pre>import yamlog\n_log = yamlog.logger(__name__)\n</pre>\n<p>so it passes the module name where it\u2019s being run. Now, can be used the logging\nmethods \u2013<em>debug()</em>, <em>info()</em>, <em>warning()</em>, <em>error()</em>, <em>critical()</em>\u2013 to\nindicate the importance of a logged message.</p>\n<div id=\"change-history\">\n<h2>Change history</h2>\n<h2 id=\"v0-9-2010-02-12\"><span class=\"section-subtitle\">v0.9, 2010-02-12</span></h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 537085, "releases": {"0.9": []}, "urls": [], "timestamp": "Fri May  8 03:23:17 2020"}