{"info": {"author": "Nam Giang", "author_email": "kyng@ece.ubc.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "=============\nckanext-datastore_ts\n=============\n\nTimeseries data is streams of data that is indexed by timestamp, such as sensing data. Current default CKAN Datastore plugin only index data based on an auto-incremental integer with no support for timeseries data. Perceived that timeseries data is an important capability when working with sensor network, a new plugin that supports operations based on timestamp natively would be necessary. Thus, the purpose of this repository.\n\n------------\nChanges\n------------\n* If you are upgrading from version < 0.1.0, the schema has changed. A command has been created to upgrade the schema. Please run the following command:\n```\npaster --plugin=ckan datastore_ts -c <path to ini configuration file> upgrade-schema autogen_timestamp _autogen_timestamp\n```\n\n------------\nRequirements\n------------\n\nBeing developed under CKAN 2.5.2\n\nRequires iso8601:\n\n``` pip install iso8601 ```\n\n------------\nInstallation\n------------\n\n.. Add any additional install steps to the list below.\n   For example installing any non-Python dependencies or adding any required\n   config settings.\n\nTo install ckanext-datastore_ts:\n\n1. Activate your CKAN virtual environment, for example::\n\n     . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-datastore_ts Python package into your virtual environment::\n\n     pip install ckanext-datastore_ts\n\n3. Add ``datastore_ts`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n     sudo service apache2 reload\n\n\n---------------\nConfig Settings\n---------------\nDatastore_ts uses configurations from Datastore plugin so make sure those are set. In brief:\n\nsqlalchemy.url = postgresql://ckan_default:pass@localhost/ckan_default\n\nckan.datastore.write_url = postgresql://ckan_default:password@localhost/datastore_default\n\nckan.datastore.read_url = postgresql://datastore_default:password@localhost/datastore_default\n\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-datastore_ts for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/namgk/ckanext-datastore_ts.git\n    cd ckanext-datastore_ts\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --ckan --with-pylons=test-core.ini ckanext/datastore_ts/tests/test.. .py\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.datastore_ts --cover-inclusive --cover-erase --cover-tests\n\n\n---------------------------------\nRegistering ckanext-datastore_ts on PyPI\n---------------------------------\n\nckanext-datastore_ts should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-datastore_ts. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n\n----------------------------------------\nReleasing a New Version of ckanext-datastore_ts\n----------------------------------------\n\nckanext-datastore_ts is availabe on PyPI as https://pypi.python.org/pypi/ckanext-datastore_ts.\nTo publish a new version to PyPI follow these steps:\n\n1. Update the version number in the ``setup.py`` file.\n   See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_\n   for how to choose version numbers.\n\n2. Create a source distribution of the new version::\n\n     python setup.py sdist\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the new release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.2 then do::\n\n       git tag 0.0.2\n       git push --tags", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/namgk/ckanext-datastore_ts", "keywords": "CKAN", "license": "AGPL", "maintainer": null, "maintainer_email": null, "name": "ckanext-datastore_ts", "package_url": "https://pypi.org/project/ckanext-datastore_ts/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ckanext-datastore_ts/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/namgk/ckanext-datastore_ts"}, "release_url": "https://pypi.org/project/ckanext-datastore_ts/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Timeseries-based datastore extension", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============<br>ckanext-datastore_ts<br>=============<br><br>Timeseries data is streams of data that is indexed by timestamp, such as sensing data. Current default CKAN Datastore plugin only index data based on an auto-incremental integer with no support for timeseries data. Perceived that timeseries data is an important capability when working with sensor network, a new plugin that supports operations based on timestamp natively would be necessary. Thus, the purpose of this repository.<br><br>------------<br>Changes<br>------------<br>* If you are upgrading from version &lt; 0.1.0, the schema has changed. A command has been created to upgrade the schema. Please run the following command:<br>```<br>paster --plugin=ckan datastore_ts -c &lt;path to ini configuration file&gt; upgrade-schema autogen_timestamp _autogen_timestamp<br>```<br><br>------------<br>Requirements<br>------------<br><br>Being developed under CKAN 2.5.2<br><br>Requires iso8601:<br><br>``` pip install iso8601 ```<br><br>------------<br>Installation<br>------------<br><br>.. Add any additional install steps to the list below.<br>   For example installing any non-Python dependencies or adding any required<br>   config settings.<br><br>To install ckanext-datastore_ts:<br><br>1. Activate your CKAN virtual environment, for example::<br><br>     . /usr/lib/ckan/default/bin/activate<br><br>2. Install the ckanext-datastore_ts Python package into your virtual environment::<br><br>     pip install ckanext-datastore_ts<br><br>3. Add ``datastore_ts`` to the ``ckan.plugins`` setting in your CKAN<br>   config file (by default the config file is located at<br>   ``/etc/ckan/default/production.ini``).<br><br>4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::<br><br>     sudo service apache2 reload<br><br><br>---------------<br>Config Settings<br>---------------<br>Datastore_ts uses configurations from Datastore plugin so make sure those are set. In brief:<br><br>sqlalchemy.url = postgresql://ckan_default:pass@localhost/ckan_default<br><br>ckan.datastore.write_url = postgresql://ckan_default:password@localhost/datastore_default<br><br>ckan.datastore.read_url = postgresql://datastore_default:password@localhost/datastore_default<br><br><br>------------------------<br>Development Installation<br>------------------------<br><br>To install ckanext-datastore_ts for development, activate your CKAN virtualenv and<br>do::<br><br>    git clone https://github.com/namgk/ckanext-datastore_ts.git<br>    cd ckanext-datastore_ts<br>    python setup.py develop<br>    pip install -r dev-requirements.txt<br><br><br>-----------------<br>Running the Tests<br>-----------------<br><br>To run the tests, do::<br><br>    nosetests --nologcapture --ckan --with-pylons=test-core.ini ckanext/datastore_ts/tests/test.. .py<br><br>To run the tests and produce a coverage report, first make sure you have<br>coverage installed in your virtualenv (``pip install coverage``) then run::<br><br>    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.datastore_ts --cover-inclusive --cover-erase --cover-tests<br><br><br>---------------------------------<br>Registering ckanext-datastore_ts on PyPI<br>---------------------------------<br><br>ckanext-datastore_ts should be availabe on PyPI as<br>https://pypi.python.org/pypi/ckanext-datastore_ts. If that link doesn't work, then<br>you can register the project on PyPI for the first time by following these<br>steps:<br><br>1. Create a source distribution of the project::<br><br>     python setup.py sdist<br><br>2. Register the project::<br><br>     python setup.py register<br><br>3. Upload the source distribution to PyPI::<br><br>     python setup.py sdist upload<br><br>4. Tag the first release of the project on GitHub with the version number from<br>   the ``setup.py`` file. For example if the version number in ``setup.py`` is<br>   0.0.1 then do::<br><br>       git tag 0.0.1<br>       git push --tags<br><br><br>----------------------------------------<br>Releasing a New Version of ckanext-datastore_ts<br>----------------------------------------<br><br>ckanext-datastore_ts is availabe on PyPI as https://pypi.python.org/pypi/ckanext-datastore_ts.<br>To publish a new version to PyPI follow these steps:<br><br>1. Update the version number in the ``setup.py`` file.<br>   See `PEP 440 &lt;http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers&gt;`_<br>   for how to choose version numbers.<br><br>2. Create a source distribution of the new version::<br><br>     python setup.py sdist<br><br>3. Upload the source distribution to PyPI::<br><br>     python setup.py sdist upload<br><br>4. Tag the new release of the project on GitHub with the version number from<br>   the ``setup.py`` file. For example if the version number in ``setup.py`` is<br>   0.0.2 then do::<br><br>       git tag 0.0.2<br>       git push --tags\n          </div>"}, "last_serial": 2477624, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "508ecb8037b7212d751e616c2c76a4bb", "sha256": "818f289911705c6d85007a711d8b5a7827f9310f0200860861c8fda57e359dc0"}, "downloads": -1, "filename": "ckanext-datastore_ts-0.0.1.tar.gz", "has_sig": false, "md5_digest": "508ecb8037b7212d751e616c2c76a4bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50276, "upload_time": "2016-09-11T22:42:28", "upload_time_iso_8601": "2016-09-11T22:42:28.969577Z", "url": "https://files.pythonhosted.org/packages/ad/d8/1e43c2886dce4cd19b25ae29c2a8ef35740885b7009adf977e974522175f/ckanext-datastore_ts-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2e15c6ab56b68a967528d320e158070c", "sha256": "595325363059faf6efc8df86686fce80b1bca171e42f1a100de13e3ee5908434"}, "downloads": -1, "filename": "ckanext-datastore_ts-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2e15c6ab56b68a967528d320e158070c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54124, "upload_time": "2016-10-13T03:56:08", "upload_time_iso_8601": "2016-10-13T03:56:08.261530Z", "url": "https://files.pythonhosted.org/packages/8b/a7/78efae3ddd5a3c636879c1a0a6c35567602cea2d208f4b2afd67085b0470/ckanext-datastore_ts-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a92411a0e8b20a21f8e404a167d05644", "sha256": "88a3db24b3239d55b81f95b940b7142a7437b978c716dd610ffab2713a13cb82"}, "downloads": -1, "filename": "ckanext-datastore_ts-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a92411a0e8b20a21f8e404a167d05644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54225, "upload_time": "2016-10-14T19:55:01", "upload_time_iso_8601": "2016-10-14T19:55:01.092355Z", "url": "https://files.pythonhosted.org/packages/ea/ff/6d0aa5f780b7ce312cc864429c4ca6f4463f1bef95ebf39bc4a388a7b8e6/ckanext-datastore_ts-0.0.3.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6bd5e062393893298009846f0d60e134", "sha256": "c4580287d32e8126fa5719e2541292220b1dd0cc680e48152eebc619daaedf08"}, "downloads": -1, "filename": "ckanext-datastore_ts-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6bd5e062393893298009846f0d60e134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57403, "upload_time": "2016-11-22T23:38:15", "upload_time_iso_8601": "2016-11-22T23:38:15.038699Z", "url": "https://files.pythonhosted.org/packages/de/01/af3cfe361ba2a65027417a75ac87c129f8e2c4afa5e5475221d21888b85a/ckanext-datastore_ts-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6bd5e062393893298009846f0d60e134", "sha256": "c4580287d32e8126fa5719e2541292220b1dd0cc680e48152eebc619daaedf08"}, "downloads": -1, "filename": "ckanext-datastore_ts-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6bd5e062393893298009846f0d60e134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57403, "upload_time": "2016-11-22T23:38:15", "upload_time_iso_8601": "2016-11-22T23:38:15.038699Z", "url": "https://files.pythonhosted.org/packages/de/01/af3cfe361ba2a65027417a75ac87c129f8e2c4afa5e5475221d21888b85a/ckanext-datastore_ts-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:14 2020"}