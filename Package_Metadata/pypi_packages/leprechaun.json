{"info": {"author": "Zach Dziura", "author_email": "zcdziura@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Security", "Topic :: Security :: Cryptography"], "description": "#############\nLeprechaun.py\n#############\nA simple rainbow table generator written in **Python 3**.\n\n********\nSynopsis\n********\nLeprechaun.py is a simple Python program used for generating cryptographic\nrainbow tables. This script can compute hashes using the MD5, SHA1, SHA256 and\nSHA512 algorithms. Leprechaun can hash any arbitrary number of plaintext files,\nas long as they're within the same directory. Or, if you're a normal person\nwithout a huge directory filled with wordlists, you can hash one single file.\nThe choice is yours! \n\n************\nInstallation\n************\nLeprechaun is available for download from PyPI using ``pip``, just like\neverything else! ::\n\n    $ mkdir DIRECTORY\n    $ cd DIRECTORY\n    $ virtualenv -p python3 .\n    $ pip install leprechaun\n\n*****\nUsage\n*****\n``leprechaun [-h] [-g] [-l LENGTH] [-d] [-o OUTPUT] [-m] [-s] [-s2] [-s5] WORDLIST``\n\n**arguments:** ::\n\n    (Positional Arguments)\n    WORDLIST                          The file name of the wordlist to hash,\n                                      without the file extension\n\n    (Optional Arguments)\n    -h, --help                        Show this help message and exit\n\n    (Wordlist Arguments)\n    -f, --wordlist-folder             Hash all of the plaintext files in a\n                                      folder, rather than a single file. The\n                                      name of the folder will be set by the\n                                      WORDLIST argument\n    -g, --generate-wordlist           Generate a wordlist dynamically instead\n                                      of using a pre-built one; the name of the\n                                      dynamically generated wordlist will be set\n                                      by the WORDLIST argument\n    -l LENGTH, --word-length LENGTH   The maximum length of the words to be\n                                      generated (default=8)\n\n    (Output Arguments)\n    -o OUTPUT, --output OUTPUT        Name of the rainbow table file, without\n                                      the file extension (default=rainbow)\n    -d, --use-database                Save the output to an SQLite DB instead\n                                      of a plaintext file\n\n    (Hashing Arguments)\n    -m, --md5                         Generate MD5 hashes of given passwords (default)\n    -s, --sha1                        Generate SHA1 hashes of given passwords    \n    -s2, --sha256                     Generate SHA256 hashes of given passwords    \n    -s5, --sha512                     Generate SHA512 hashes of given passwords\n\n********\nExamples\n********\nBelow are a few simple examples on using Leprechaun.py. While not an exaustive\ncompilation of use cases, the program itself is quite simple to figure out on\none's own. ::\n\n  # Create a rainbow table using the MD5 hashing algorithm.\n  leprechaun /path/to/your/wordlist.txt\n\n  # Create a rainbow table using the SHA-1 hashing algorithm.\n  leprechaun -s /path/to/your/wordlist.txt\n\n  # Create a rainbow table using the SHA-1 hashing algorithm, saving the\n  # output in an SQLite database.\n  leprechaun -s -d /path/to/your/wordlist.txt\n\n  # Create a rainbow table using the SHA-256 hashing algorithm, hashing all of\n  # the plaintext files in a given directory, saving the output in an SQLite\n  # database.\n  leprechaun -s2 -d -f /path/to/your/wordlists\n\n  # Create a rainbow table using the SHA-256 hashing algorithm, hashing all of\n  # the plaintext files in a given directory, saving the output in an SQLite\n  # database named \"patty\"\n  leprechaun -s2 -d -o patty -f /path/to/your/wordlists\n\n*********\nWordlists\n*********\nBecause any good wordlist contains several million lines of words, and several\nmillion lines of anything takes up a heck of a lot of space, the previously\ndistributed wordlist is no longer being distributed. But don't fret! I've\nuploaded that same wordlist onto the Internet for everyone to enjoy. You may\nfind it here_.\n\n.. _here: https://dl.dropboxusercontent.com/u/4412788/wordlist.tar.gz\n\n*******\nLicense\n*******\n\n    The MIT License (MIT)\n\n    Copyright (c) 2013 Zach Dziura\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zcdziura/leprechaun", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "leprechaun", "package_url": "https://pypi.org/project/leprechaun/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/leprechaun/", "project_urls": {"Homepage": "https://github.com/zcdziura/leprechaun"}, "release_url": "https://pypi.org/project/leprechaun/2.0.4/", "requires_dist": null, "requires_python": null, "summary": "A simple rainbow table generator", "version": "2.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple rainbow table generator written in <strong>Python 3</strong>.</p>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>Leprechaun.py is a simple Python program used for generating cryptographic\nrainbow tables. This script can compute hashes using the MD5, SHA1, SHA256 and\nSHA512 algorithms. Leprechaun can hash any arbitrary number of plaintext files,\nas long as they\u2019re within the same directory. Or, if you\u2019re a normal person\nwithout a huge directory filled with wordlists, you can hash one single file.\nThe choice is yours!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Leprechaun is available for download from PyPI using <tt>pip</tt>, just like\neverything else!</p>\n<pre>$ mkdir DIRECTORY\n$ cd DIRECTORY\n$ virtualenv -p python3 .\n$ pip install leprechaun\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>leprechaun <span class=\"pre\">[-h]</span> <span class=\"pre\">[-g]</span> <span class=\"pre\">[-l</span> LENGTH] <span class=\"pre\">[-d]</span> <span class=\"pre\">[-o</span> OUTPUT] <span class=\"pre\">[-m]</span> <span class=\"pre\">[-s]</span> <span class=\"pre\">[-s2]</span> <span class=\"pre\">[-s5]</span> WORDLIST</tt></p>\n<p><strong>arguments:</strong></p>\n<pre>(Positional Arguments)\nWORDLIST                          The file name of the wordlist to hash,\n                                  without the file extension\n\n(Optional Arguments)\n-h, --help                        Show this help message and exit\n\n(Wordlist Arguments)\n-f, --wordlist-folder             Hash all of the plaintext files in a\n                                  folder, rather than a single file. The\n                                  name of the folder will be set by the\n                                  WORDLIST argument\n-g, --generate-wordlist           Generate a wordlist dynamically instead\n                                  of using a pre-built one; the name of the\n                                  dynamically generated wordlist will be set\n                                  by the WORDLIST argument\n-l LENGTH, --word-length LENGTH   The maximum length of the words to be\n                                  generated (default=8)\n\n(Output Arguments)\n-o OUTPUT, --output OUTPUT        Name of the rainbow table file, without\n                                  the file extension (default=rainbow)\n-d, --use-database                Save the output to an SQLite DB instead\n                                  of a plaintext file\n\n(Hashing Arguments)\n-m, --md5                         Generate MD5 hashes of given passwords (default)\n-s, --sha1                        Generate SHA1 hashes of given passwords\n-s2, --sha256                     Generate SHA256 hashes of given passwords\n-s5, --sha512                     Generate SHA512 hashes of given passwords\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Below are a few simple examples on using Leprechaun.py. While not an exaustive\ncompilation of use cases, the program itself is quite simple to figure out on\none\u2019s own.</p>\n<pre># Create a rainbow table using the MD5 hashing algorithm.\nleprechaun /path/to/your/wordlist.txt\n\n# Create a rainbow table using the SHA-1 hashing algorithm.\nleprechaun -s /path/to/your/wordlist.txt\n\n# Create a rainbow table using the SHA-1 hashing algorithm, saving the\n# output in an SQLite database.\nleprechaun -s -d /path/to/your/wordlist.txt\n\n# Create a rainbow table using the SHA-256 hashing algorithm, hashing all of\n# the plaintext files in a given directory, saving the output in an SQLite\n# database.\nleprechaun -s2 -d -f /path/to/your/wordlists\n\n# Create a rainbow table using the SHA-256 hashing algorithm, hashing all of\n# the plaintext files in a given directory, saving the output in an SQLite\n# database named \"patty\"\nleprechaun -s2 -d -o patty -f /path/to/your/wordlists\n</pre>\n</div>\n<div id=\"wordlists\">\n<h2>Wordlists</h2>\n<p>Because any good wordlist contains several million lines of words, and several\nmillion lines of anything takes up a heck of a lot of space, the previously\ndistributed wordlist is no longer being distributed. But don\u2019t fret! I\u2019ve\nuploaded that same wordlist onto the Internet for everyone to enjoy. You may\nfind it <a href=\"https://dl.dropboxusercontent.com/u/4412788/wordlist.tar.gz\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2013 Zach Dziura</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</p>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1064086, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "e2c0356b039ec363e9175c02ed24e6e6", "sha256": "3dd18fddcaaabbaf8f1a43c00a674dc7db3b49319eef30268ab062a0dfba0084"}, "downloads": -1, "filename": "leprechaun-2.0.1-py34-none-any.whl", "has_sig": false, "md5_digest": "e2c0356b039ec363e9175c02ed24e6e6", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 10057, "upload_time": "2014-04-16T22:12:02", "upload_time_iso_8601": "2014-04-16T22:12:02.140248Z", "url": "https://files.pythonhosted.org/packages/d5/67/7d9ceaf01a5084aac8b56e0350270d0bf01bb21afbd4f15bfcb74e64ef4b/leprechaun-2.0.1-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6cde8e6033f67bfadead7441602a40b", "sha256": "6c289f99d5f1154d2c4f6733fbe112f438bf8e49af1d02422adaf47cfb0a0a89"}, "downloads": -1, "filename": "leprechaun-2.0.1.tar.gz", "has_sig": false, "md5_digest": "e6cde8e6033f67bfadead7441602a40b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5979, "upload_time": "2014-04-16T22:12:05", "upload_time_iso_8601": "2014-04-16T22:12:05.078669Z", "url": "https://files.pythonhosted.org/packages/1b/fa/e2543eb3c1a10aab0abf7dba29c23bff6564e78ef9836c262b8fcddb4663/leprechaun-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "fa36b3872cf288f3ba118004d9273247", "sha256": "cc90d1f3c0ecc2f9349fcced20a7050bf67ad8149d0e5339aa66091553bf7f81"}, "downloads": -1, "filename": "leprechaun-2.0.2-py34-none-any.whl", "has_sig": false, "md5_digest": "fa36b3872cf288f3ba118004d9273247", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 18215, "upload_time": "2014-04-16T22:12:50", "upload_time_iso_8601": "2014-04-16T22:12:50.398936Z", "url": "https://files.pythonhosted.org/packages/c4/d4/2cce98611fa965ae9f352f766f79bb590c72febc3dfd9569656c2bdd3242/leprechaun-2.0.2-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c526f6d4c9aee44b7efbc9a6007ffa36", "sha256": "a0a8875005f1626ca90cdcc5b4576ba256e3707052a4b2f7dd86cff49b72794c"}, "downloads": -1, "filename": "leprechaun-2.0.2.tar.gz", "has_sig": false, "md5_digest": "c526f6d4c9aee44b7efbc9a6007ffa36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5978, "upload_time": "2014-04-16T22:12:52", "upload_time_iso_8601": "2014-04-16T22:12:52.214341Z", "url": "https://files.pythonhosted.org/packages/4c/5c/f315c897ea42bb7bdc52e36815b7a4f723c4c67148a17118523018a40c59/leprechaun-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "c033988bec7d96d1ad69896554031378", "sha256": "8680b297757e322f89af812e7624236db4757fc21c76862578d2f2269a383a19"}, "downloads": -1, "filename": "leprechaun-2.0.3-py34-none-any.whl", "has_sig": false, "md5_digest": "c033988bec7d96d1ad69896554031378", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 10797, "upload_time": "2014-04-17T15:40:10", "upload_time_iso_8601": "2014-04-17T15:40:10.257329Z", "url": "https://files.pythonhosted.org/packages/d0/0b/56785dbd8173e4731b896f4ed9a0df1a2aa3167aefa692cb1604c283b883/leprechaun-2.0.3-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "187423d59914f0b8840aeda1c32ecd63", "sha256": "1db53f38340e83b3e17d91784daa208fe956afeec1daa8b70ef308fe4531c019"}, "downloads": -1, "filename": "leprechaun-2.0.3.tar.gz", "has_sig": false, "md5_digest": "187423d59914f0b8840aeda1c32ecd63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6401, "upload_time": "2014-04-17T15:42:41", "upload_time_iso_8601": "2014-04-17T15:42:41.090210Z", "url": "https://files.pythonhosted.org/packages/ae/0f/3019afca5dbc022129eb0d069c10729df555ae456e1f591393ec2cc76f6d/leprechaun-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "2c121b0c97cba0bf68cc568382f763ba", "sha256": "9bb5a8e733271a22e49d8fb656958602d42a39694e40b0810645c19a3afe78f3"}, "downloads": -1, "filename": "leprechaun-2.0.4-py34-none-any.whl", "has_sig": false, "md5_digest": "2c121b0c97cba0bf68cc568382f763ba", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 10928, "upload_time": "2014-04-18T04:02:13", "upload_time_iso_8601": "2014-04-18T04:02:13.672146Z", "url": "https://files.pythonhosted.org/packages/9e/05/906775cf4f4ffc0f36cbd5cfb72db61370d28818b3ffef7d8ca7f9f049fe/leprechaun-2.0.4-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12847931293df294b69561a187399cdb", "sha256": "85ac5f7c016c64e896f3efffef237f2ae30a182cd8f91de44c6fdfd2b50422cb"}, "downloads": -1, "filename": "leprechaun-2.0.4.tar.gz", "has_sig": false, "md5_digest": "12847931293df294b69561a187399cdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6468, "upload_time": "2014-04-18T04:02:16", "upload_time_iso_8601": "2014-04-18T04:02:16.559577Z", "url": "https://files.pythonhosted.org/packages/80/15/ef3257e3ea55efd508eb31b4690b2d736c07ab27247084d508d3df41a9d9/leprechaun-2.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c121b0c97cba0bf68cc568382f763ba", "sha256": "9bb5a8e733271a22e49d8fb656958602d42a39694e40b0810645c19a3afe78f3"}, "downloads": -1, "filename": "leprechaun-2.0.4-py34-none-any.whl", "has_sig": false, "md5_digest": "2c121b0c97cba0bf68cc568382f763ba", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 10928, "upload_time": "2014-04-18T04:02:13", "upload_time_iso_8601": "2014-04-18T04:02:13.672146Z", "url": "https://files.pythonhosted.org/packages/9e/05/906775cf4f4ffc0f36cbd5cfb72db61370d28818b3ffef7d8ca7f9f049fe/leprechaun-2.0.4-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12847931293df294b69561a187399cdb", "sha256": "85ac5f7c016c64e896f3efffef237f2ae30a182cd8f91de44c6fdfd2b50422cb"}, "downloads": -1, "filename": "leprechaun-2.0.4.tar.gz", "has_sig": false, "md5_digest": "12847931293df294b69561a187399cdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6468, "upload_time": "2014-04-18T04:02:16", "upload_time_iso_8601": "2014-04-18T04:02:16.559577Z", "url": "https://files.pythonhosted.org/packages/80/15/ef3257e3ea55efd508eb31b4690b2d736c07ab27247084d508d3df41a9d9/leprechaun-2.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:57 2020"}