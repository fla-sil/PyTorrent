{"info": {"author": "Tam\u00e1s Nepusz", "author_email": "ntamas@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# aio-usb-hotplug\n\n`aio-usb-hotplug` is a Python library that provides asynchronous generators\nyielding detected hotplug events on the USB buses.\n\nRequires Python >= 3.5.\n\nWorks with [`asyncio`](https://docs.python.org/3/library/asyncio.html),\n[`curio`](https://curio.readthedocs.io/en/latest/) and\n[`trio`](https://trio.readthedocs.io/en/stable/).\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install\n`aio-usb-hotplug`.\n\n```bash\npip install aio-usb-hotplug\n```\n\n## Usage\n\n### Dump all hotplug events related to a specific USB device\n\n```python\nfrom aio_usb_hotplug import HotplugDetector\nfrom trio import run  # ...or asyncio, or curio\n\nasync def dump_events():\n    detector = HotplugDetector.for_device(vid=\"1050\", pid=\"0407\")\n    async for event in detector.events():\n        print(repr(event))\n\ntrio.run(dump_events)\n```\n\n### Run an async task for each USB device matching a VID/PID pair\n\n```python\nfrom aio_usb_hotplug import HotplugDetector\nfrom trio import sleep_forever\n\n\nasync def handle_device(device):\n    print(\"Handling device:\", repr(device))\n    try:\n        # Do something meaningful with the device. The task gets cancelled\n        # when the device is unplugged.\n        await sleep_forever()\n    finally:\n        # Device unplugged or an exception happened\n        print(\"Stopped handling device:\", repr(device))\n\n\nasync def handle_detected_devices():\n    detector = HotplugDetector.for_device(vid=\"1050\", pid=\"0407\")\n    await detector.run_for_each_device(handle_device)\n\n\ntrio.run(handle_detected_devices)\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to\ndiscuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ntamas/aio-usb-hotplug", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio-usb-hotplug", "package_url": "https://pypi.org/project/aio-usb-hotplug/", "platform": "", "project_url": "https://pypi.org/project/aio-usb-hotplug/", "project_urls": {"Homepage": "https://github.com/ntamas/aio-usb-hotplug"}, "release_url": "https://pypi.org/project/aio-usb-hotplug/1.0.0/", "requires_dist": ["anyio (>=1.2.0)", "async-generator (>=1.10)", "pyusb (>=1.0.2)", "pyudev (>=0.21.0) ; platform_system == \"Linux\"", "curio (>=0.9) ; extra == 'dev'", "pytest (>=5.2.4) ; extra == 'dev'", "pytest-cov (>=2.0.1) ; extra == 'dev'", "trio (>=0.13.0) ; extra == 'dev'", "twine (>=3.0.0) ; extra == 'dev'"], "requires_python": ">=3.5", "summary": "", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aio-usb-hotplug</h1>\n<p><code>aio-usb-hotplug</code> is a Python library that provides asynchronous generators\nyielding detected hotplug events on the USB buses.</p>\n<p>Requires Python &gt;= 3.5.</p>\n<p>Works with <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\"><code>asyncio</code></a>,\n<a href=\"https://curio.readthedocs.io/en/latest/\" rel=\"nofollow\"><code>curio</code></a> and\n<a href=\"https://trio.readthedocs.io/en/stable/\" rel=\"nofollow\"><code>trio</code></a>.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install\n<code>aio-usb-hotplug</code>.</p>\n<pre>pip install aio-usb-hotplug\n</pre>\n<h2>Usage</h2>\n<h3>Dump all hotplug events related to a specific USB device</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aio_usb_hotplug</span> <span class=\"kn\">import</span> <span class=\"n\">HotplugDetector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trio</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>  <span class=\"c1\"># ...or asyncio, or curio</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">dump_events</span><span class=\"p\">():</span>\n    <span class=\"n\">detector</span> <span class=\"o\">=</span> <span class=\"n\">HotplugDetector</span><span class=\"o\">.</span><span class=\"n\">for_device</span><span class=\"p\">(</span><span class=\"n\">vid</span><span class=\"o\">=</span><span class=\"s2\">\"1050\"</span><span class=\"p\">,</span> <span class=\"n\">pid</span><span class=\"o\">=</span><span class=\"s2\">\"0407\"</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">detector</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">))</span>\n\n<span class=\"n\">trio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">dump_events</span><span class=\"p\">)</span>\n</pre>\n<h3>Run an async task for each USB device matching a VID/PID pair</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aio_usb_hotplug</span> <span class=\"kn\">import</span> <span class=\"n\">HotplugDetector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trio</span> <span class=\"kn\">import</span> <span class=\"n\">sleep_forever</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_device</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Handling device:\"</span><span class=\"p\">,</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Do something meaningful with the device. The task gets cancelled</span>\n        <span class=\"c1\"># when the device is unplugged.</span>\n        <span class=\"k\">await</span> <span class=\"n\">sleep_forever</span><span class=\"p\">()</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Device unplugged or an exception happened</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Stopped handling device:\"</span><span class=\"p\">,</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_detected_devices</span><span class=\"p\">():</span>\n    <span class=\"n\">detector</span> <span class=\"o\">=</span> <span class=\"n\">HotplugDetector</span><span class=\"o\">.</span><span class=\"n\">for_device</span><span class=\"p\">(</span><span class=\"n\">vid</span><span class=\"o\">=</span><span class=\"s2\">\"1050\"</span><span class=\"p\">,</span> <span class=\"n\">pid</span><span class=\"o\">=</span><span class=\"s2\">\"0407\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">detector</span><span class=\"o\">.</span><span class=\"n\">run_for_each_device</span><span class=\"p\">(</span><span class=\"n\">handle_device</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">trio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">handle_detected_devices</span><span class=\"p\">)</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to\ndiscuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6164297, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3ff4cb73dce1ad44b3f5ad55eac33145", "sha256": "bdffdb4780a88eb20116e155af3e73f921cbc499a24ada350976a55d4155e065"}, "downloads": -1, "filename": "aio_usb_hotplug-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3ff4cb73dce1ad44b3f5ad55eac33145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9786, "upload_time": "2019-11-19T20:19:28", "upload_time_iso_8601": "2019-11-19T20:19:28.528131Z", "url": "https://files.pythonhosted.org/packages/c9/a4/13ffdaa6d60da5b72c616bfba4dbbb00b1b26be999f3e9997965af56ec52/aio_usb_hotplug-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb9c31425ef85637f86c5a51d7a9774b", "sha256": "d1fe374bcf330559fdecbbc857f7fc609a6d8133c2343391962436138d6fa6ef"}, "downloads": -1, "filename": "aio_usb_hotplug-1.0.0.tar.gz", "has_sig": false, "md5_digest": "eb9c31425ef85637f86c5a51d7a9774b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9257, "upload_time": "2019-11-19T20:19:30", "upload_time_iso_8601": "2019-11-19T20:19:30.878706Z", "url": "https://files.pythonhosted.org/packages/fc/fd/e4a1a75c0d14b68fafe4600fed939a5e918688dde1d0836d06a2aaca2c9b/aio_usb_hotplug-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ff4cb73dce1ad44b3f5ad55eac33145", "sha256": "bdffdb4780a88eb20116e155af3e73f921cbc499a24ada350976a55d4155e065"}, "downloads": -1, "filename": "aio_usb_hotplug-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3ff4cb73dce1ad44b3f5ad55eac33145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9786, "upload_time": "2019-11-19T20:19:28", "upload_time_iso_8601": "2019-11-19T20:19:28.528131Z", "url": "https://files.pythonhosted.org/packages/c9/a4/13ffdaa6d60da5b72c616bfba4dbbb00b1b26be999f3e9997965af56ec52/aio_usb_hotplug-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb9c31425ef85637f86c5a51d7a9774b", "sha256": "d1fe374bcf330559fdecbbc857f7fc609a6d8133c2343391962436138d6fa6ef"}, "downloads": -1, "filename": "aio_usb_hotplug-1.0.0.tar.gz", "has_sig": false, "md5_digest": "eb9c31425ef85637f86c5a51d7a9774b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9257, "upload_time": "2019-11-19T20:19:30", "upload_time_iso_8601": "2019-11-19T20:19:30.878706Z", "url": "https://files.pythonhosted.org/packages/fc/fd/e4a1a75c0d14b68fafe4600fed939a5e918688dde1d0836d06a2aaca2c9b/aio_usb_hotplug-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:38 2020"}