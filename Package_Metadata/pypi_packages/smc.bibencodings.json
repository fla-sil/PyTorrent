{"info": {"author": "Christian Heimes", "author_email": "c.heimes@semantics.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Communications", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: General"], "description": "================\r\nsmc.bibencodings\r\n================\r\n\r\nISO-5426 (MAB2) and MARC (USMARC, ANSEL) encodings for Python. The encodings\r\nare used in bibliographic information systems and Z.3950 interfaces of OPACs.\r\n\r\n\r\nBackground\r\n==========\r\n\r\nISO-5426 and USMARC encodings are historic encodings that are still in use by\r\nbibliographic information systems. They are extensions to Latin codec family\r\nand implement a variable length encoding someward similar to UTF-8 and\r\ndecomposed unicode (NFD) forms.\r\n\r\nNon-ASCII chars are expressed as combining chars. For example umlaut a (LATIN\r\nSMALL LETTER U WITH DIAERESIS) is written in MAB2 encoding as '\\xc8u', where\r\n'\\xc8' is the sign for combining diaeresis. Contrary to unicode the combining\r\nchars are writte as prefix while unicode has combinig suffixes.\r\n\r\nBoth MAB2 and MARC encoding support up to two combining chars in front of a\r\nletter, for example '\\xc5\\xc8u' for LATIN SMALL LETTER U WITH DIAERESIS\r\nAND MACRON.\r\n\r\nsmc.bibencodings implements small deviations from the standards as it supports\r\nall chars from 0x00 to 0x7e as well as more combining chars. The code has been\r\ntested against several German and Swiss OPACs.\r\n\r\n\r\nUsage\r\n=====\r\n\r\nYou just have to import \"smc.bibencodings\" somehwere in your code to enable\r\nthe codecs\r\n\r\niso-5426, iso5426, mab2::\r\n  standard ISO-5426 encoding\r\n\r\niso-5426-xe0, iso5426-xe0, mab2-xe0::\r\n  special ISO-5426 encoding with special identity mapping for 0xa4, 0xe0-0xff\r\n\r\nmarc, usmarc, ansel::\r\n  MARC encoding\r\n\r\n>>> import smc.bibencodings\r\n>>> b\"Abr\\xc2eg\\xc2e Historique De L'Origine\".decode(\"mab2\")\r\n\"Abr\u00e9g\u00e9 Historique De L'Origine\"\r\n\r\n\r\nData source\r\n===========\r\n\r\nThe encoding tables are extracted from Thomas Berger's excellent page\r\nhttp://www.gymel.com/charsets/chartab.html and linked pages. Thank you\r\nvery much!\r\n\r\n\r\nAuthors\r\n=======\r\n\r\nChristian Heimes\r\n\r\n\r\nCopyright\r\n=========\r\n \r\nCopyright (C) 2008-2012 semantics GmbH. All Rights Reserved.::\r\n\r\n  semantics\r\n  Kommunikationsmanagement GmbH\r\n  Viktoriaallee 45\r\n  D-52066 Aachen\r\n  Germany\r\n\r\n  Tel.: +49 241 89 49 89 29\r\n  eMail: info(at)semantics.de\r\n  http://www.semantics.de/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/tiran/smc.bibencodings", "keywords": "encoding codec bibliographic opac mab2 iso-5426 marc ansel", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "smc.bibencodings", "package_url": "https://pypi.org/project/smc.bibencodings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/smc.bibencodings/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/tiran/smc.bibencodings"}, "release_url": "https://pypi.org/project/smc.bibencodings/0.1/", "requires_dist": null, "requires_python": null, "summary": "ISO-5426 (MAB2) and MARC (USMARC, ANSEL) encodings for Python.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ISO-5426 (MAB2) and MARC (USMARC, ANSEL) encodings for Python. The encodings\nare used in bibliographic information systems and Z.3950 interfaces of OPACs.</p>\n<div id=\"background\">\n<h2>Background</h2>\n<p>ISO-5426 and USMARC encodings are historic encodings that are still in use by\nbibliographic information systems. They are extensions to Latin codec family\nand implement a variable length encoding someward similar to UTF-8 and\ndecomposed unicode (NFD) forms.</p>\n<p>Non-ASCII chars are expressed as combining chars. For example umlaut a (LATIN\nSMALL LETTER U WITH DIAERESIS) is written in MAB2 encoding as \u2018xc8u\u2019, where\n\u2018xc8\u2019 is the sign for combining diaeresis. Contrary to unicode the combining\nchars are writte as prefix while unicode has combinig suffixes.</p>\n<p>Both MAB2 and MARC encoding support up to two combining chars in front of a\nletter, for example \u2018xc5xc8u\u2019 for LATIN SMALL LETTER U WITH DIAERESIS\nAND MACRON.</p>\n<p>smc.bibencodings implements small deviations from the standards as it supports\nall chars from 0x00 to 0x7e as well as more combining chars. The code has been\ntested against several German and Swiss OPACs.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You just have to import \u201csmc.bibencodings\u201d somehwere in your code to enable\nthe codecs</p>\n<dl>\n<dt>iso-5426, iso5426, mab2::</dt>\n<dd>standard ISO-5426 encoding</dd>\n<dt>iso-5426-xe0, iso5426-xe0, mab2-xe0::</dt>\n<dd>special ISO-5426 encoding with special identity mapping for 0xa4, 0xe0-0xff</dd>\n<dt>marc, usmarc, ansel::</dt>\n<dd>MARC encoding</dd>\n</dl>\n<pre>&gt;&gt;&gt; import smc.bibencodings\n&gt;&gt;&gt; b\"Abr\\xc2eg\\xc2e Historique De L'Origine\".decode(\"mab2\")\n\"Abr\u00e9g\u00e9 Historique De L'Origine\"\n</pre>\n</div>\n<div id=\"data-source\">\n<h2>Data source</h2>\n<p>The encoding tables are extracted from Thomas Berger\u2019s excellent page\n<a href=\"http://www.gymel.com/charsets/chartab.html\" rel=\"nofollow\">http://www.gymel.com/charsets/chartab.html</a> and linked pages. Thank you\nvery much!</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Christian Heimes</p>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (C) 2008-2012 semantics GmbH. All Rights Reserved.:</p>\n<pre>semantics\nKommunikationsmanagement GmbH\nViktoriaallee 45\nD-52066 Aachen\nGermany\n\nTel.: +49 241 89 49 89 29\neMail: info(at)semantics.de\nhttp://www.semantics.de/\n</pre>\n</div>\n\n          </div>"}, "last_serial": 799734, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6691cac912381a5409e89dda78aaab71", "sha256": "6a0a4d6cc688cbe9d1f2ac1163ffa7d2c1d74b97827f39ab3b60b8c0ddd13225"}, "downloads": -1, "filename": "smc.bibencodings-0.1.zip", "has_sig": true, "md5_digest": "6691cac912381a5409e89dda78aaab71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63268, "upload_time": "2012-07-15T18:53:00", "upload_time_iso_8601": "2012-07-15T18:53:00.957529Z", "url": "https://files.pythonhosted.org/packages/4a/7d/bce1cc39b308a0e48ceb9e13a572f193f6bc496979deb92ed5ce517e802c/smc.bibencodings-0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6691cac912381a5409e89dda78aaab71", "sha256": "6a0a4d6cc688cbe9d1f2ac1163ffa7d2c1d74b97827f39ab3b60b8c0ddd13225"}, "downloads": -1, "filename": "smc.bibencodings-0.1.zip", "has_sig": true, "md5_digest": "6691cac912381a5409e89dda78aaab71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63268, "upload_time": "2012-07-15T18:53:00", "upload_time_iso_8601": "2012-07-15T18:53:00.957529Z", "url": "https://files.pythonhosted.org/packages/4a/7d/bce1cc39b308a0e48ceb9e13a572f193f6bc496979deb92ed5ce517e802c/smc.bibencodings-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:07:57 2020"}