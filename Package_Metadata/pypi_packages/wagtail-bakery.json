{"info": {"author": "Rob Moorman and Wagtail Core Team", "author_email": "hello@wagtail.io", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Wagtail", "Framework :: Wagtail :: 2", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Wagtail-bakery\n\nA set of helpers for baking your Django Wagtail site out as flat files.\n\n[![Build Status](https://travis-ci.org/wagtail/wagtail-bakery.svg?branch=master)](https://travis-ci.org/wagtail/wagtail-bakery)\n[![Coverage Status](https://coveralls.io/repos/github/moorinteractive/wagtail-bakery/badge.svg?branch=master)](https://coveralls.io/github/moorinteractive/wagtail-bakery?branch=master)\n\n* Issues: [https://github.com/wagtail/wagtail-bakery/issues](https://github.com/wagtail/wagtail-bakery/issues)\n* Testing: [https://travis-ci.org/wagtail/wagtail-bakery](https://travis-ci.org/wagtail/wagtail-bakery)\n* Coverage: [https://coveralls.io/github/moorinteractive/wagtail-bakery](https://coveralls.io/github/moorinteractive/wagtail-bakery)\n\nWagtail-bakery is built on top of [Django bakery](https://github.com/datadesk/django-bakery). Please read their [documentation](https://django-bakery.readthedocs.io/en/latest/) for detailed configuration and how to build default Django flat files. Yes. Wagtail-bakery is not limited to build Wagtail pages specifically, mixed content is possible!\n\n## Features\n\n* Single management command that will build your Wagtail site out as flat files\n* Support for multisite, [theming](https://github.com/moorinteractive/wagtail-themes) and [multilingual](http://docs.wagtail.io/en/latest/advanced_topics/i18n/index.html) setup\n* Support for `i18n_patterns`\n* Support for generating a static API\n* Ready to use Wagtail Buildable views to build all your (un)published pages at once (no extra code required!)\n\n## Installation\n\n```\npip install wagtail-bakery\n```\n\nAdd `bakery` and `wagtailbakery` to your `INSTALLED_APPS` setting.\n\n```python\nINSTALLED_APPS = (\n    # ...\n    'bakery',\n    'wagtailbakery',\n)\n```\n\n## Configuration\n\nDefine whether you want to build multiple sites or the default site (see examples for impact on directory output), by default this settings is `False`.\n\n```python\nBAKERY_MULTISITE = True\n```\n\nAdd the build directory where you want to be the site be built as flat files.\n\n```python\nBUILD_DIR = '/tmp/build/'\n```\n\nAs you may know with Django bakery, the trickiest part is to make your current models/pages buildable with [Buildable views](https://django-bakery.readthedocs.io/en/latest/buildableviews.html). As Django Wagtail uses only the `Page` model at their lowest level, you can use at least one of the already present Buildable views provided by Wagtail bakery.\n\nBuild all published public pages (use for production).\n\n```python\nBAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPublishedPagesView',\n)\n```\n\nBuild all published and unpublished public pages (use for staging/acceptance).\n\n```python\nBAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPagesView',\n)\n```\n\nTo build static JSON files representing your site's API, use the following views:\n\n```python\nBAKERY_VIEWS = (\n\t'wagtailbakery.api_views.PagesAPIDetailView',\n\t'wagtailbakery.api_views.PagesAPIListingView',\n\t'wagtailbakery.api_views.TypedPagesAPIListingView',\n)\n```\n\nThe API views use Wagtail's V2 API module. To configure the data that is rendered by these views, please refer to Wagtail's [V2 API configuration guide](http://docs.wagtail.io/en/stable/advanced_topics/api/v2/configuration.html).\n\n## Usage\n\nBuild the site out as flat files by running the `build` management command.\n\n```\nmanage.py build\n```\n\nIf you want to check how your static website will look, use the `buildserver` command after you have build your static files once.\n\n```\nmanage.py buildserver\n```\n\n## Examples\n\nIn the [examples](https://github.com/wagtail/wagtail-bakery/tree/master/examples) directory you can find a Wagtail setup with fixtures for a single site as well as a multisite setup.\n\nCreate a virtualenv and go to one of the examples, you can use the `Make` command to install all requirements, load fixtures and run the server.\n\nAs described in the usage section, use `manage.py build` to build out the example as static files.\n\n**Build output with `BAKERY_MULTISITE=True`**:\n\n```\nbuild/example.com/index.html\nbuild/example.com/about/index.html\nbuild/example.com/blog/index.html\nbuild/example.com/blog/example/index.html\nbuild/static/\n```\n\n**Build output with `BAKERY_MULTISITE=False` (default)**:\n\n```\nbuild/index.html\nbuild/about/index.html\nbuild/blog/index.html\nbuild/blog/example/index.html\nbuild/static/\n```\n\n## Supported Versions\n\n### Browser support\n\nWe align our browser support targets with that of Wagtail. Have a look at the [official documentation](http://docs.wagtail.io/en/latest/contributing/developing.html).\n\n### Python/Django/Wagtail support\n\nPython versions as defined in `setup.py` classifiers.\n\nWagtail versions as [supported](http://docs.wagtail.io/en/latest/releases/upgrading.html) by Wagtail (LTS, current and current-1).\n\nDjango/Wagtail combinations as [supported](http://docs.wagtail.io/en/latest/releases/upgrading.html#compatible-django-python-versions) by Wagtail (for the Wagtail versions as defined above).\n\n#### Which version combinations to include in Travis test matrix?\n\nIn order to keep for CI build time from growing out of control, not all Python/Django/Wagtail combinations will be tested.\n\nTest as follow:\n- All supported Django/Wagtail combinations with the latest supported Python version.\n- The latest supported Django/Wagtail combination for the remaining Python versions.\n\n## Troubleshooting\n\nFor issues [please submit an issue](https://github.com/wagtail/wagtail-bakery/issues/new) on GitHub.\n\n## Development\n\n### Releases\n\n1. Ensure you have the latest versions of `pip`, `setuptools` and `twine` installed in your virtual environment.\n1. Create a new branch (e.g. `release/1.1.3`) for the release of the new version.\n1. Update the version number in `setup.py` following [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n1. Update `CHANGELOG.md`.\n1. On GitHub, create a pull request and squash merge it.\n1. Checkout and pull the `master` branch locally.\n1. (Optional) If you need to verify anything, use `make publish-test` to upload to https://test.pypi.org and enter your PyPi *test* credentials as needed.\n1. Use `make publish` and enter your PyPi credentials as needed.\n1. On GitHub, create a release and a tag for the new version.\n\n## Credits\n\nThanks to [@mhnbcu](https://github.com/mhnbcu/wagtailbakery) for bringing this\nidea up initially, and [Django Bakery](https://github.com/datadesk/django-bakery)\nfor providing the initial bakery package.\n\nThanks to all the [contributors](https://github.com/wagtail/wagtail-bakery/graphs/contributors) for their help.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wagtail-bakery", "package_url": "https://pypi.org/project/wagtail-bakery/", "platform": "", "project_url": "https://pypi.org/project/wagtail-bakery/", "project_urls": null, "release_url": "https://pypi.org/project/wagtail-bakery/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "A set of helpers for baking your Django Wagtail site out as flat files.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wagtail-bakery</h1>\n<p>A set of helpers for baking your Django Wagtail site out as flat files.</p>\n<p><a href=\"https://travis-ci.org/wagtail/wagtail-bakery\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3101fa4ec45121ae03bc8d7ace86f118db4eab80/68747470733a2f2f7472617669732d63692e6f72672f7761677461696c2f7761677461696c2d62616b6572792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/moorinteractive/wagtail-bakery?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b349991999d7d76f221222d8d35645913e080898/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6f6f72696e7465726163746976652f7761677461696c2d62616b6572792f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<ul>\n<li>Issues: <a href=\"https://github.com/wagtail/wagtail-bakery/issues\" rel=\"nofollow\">https://github.com/wagtail/wagtail-bakery/issues</a></li>\n<li>Testing: <a href=\"https://travis-ci.org/wagtail/wagtail-bakery\" rel=\"nofollow\">https://travis-ci.org/wagtail/wagtail-bakery</a></li>\n<li>Coverage: <a href=\"https://coveralls.io/github/moorinteractive/wagtail-bakery\" rel=\"nofollow\">https://coveralls.io/github/moorinteractive/wagtail-bakery</a></li>\n</ul>\n<p>Wagtail-bakery is built on top of <a href=\"https://github.com/datadesk/django-bakery\" rel=\"nofollow\">Django bakery</a>. Please read their <a href=\"https://django-bakery.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a> for detailed configuration and how to build default Django flat files. Yes. Wagtail-bakery is not limited to build Wagtail pages specifically, mixed content is possible!</p>\n<h2>Features</h2>\n<ul>\n<li>Single management command that will build your Wagtail site out as flat files</li>\n<li>Support for multisite, <a href=\"https://github.com/moorinteractive/wagtail-themes\" rel=\"nofollow\">theming</a> and <a href=\"http://docs.wagtail.io/en/latest/advanced_topics/i18n/index.html\" rel=\"nofollow\">multilingual</a> setup</li>\n<li>Support for <code>i18n_patterns</code></li>\n<li>Support for generating a static API</li>\n<li>Ready to use Wagtail Buildable views to build all your (un)published pages at once (no extra code required!)</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install wagtail-bakery\n</code></pre>\n<p>Add <code>bakery</code> and <code>wagtailbakery</code> to your <code>INSTALLED_APPS</code> setting.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'bakery'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'wagtailbakery'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Configuration</h2>\n<p>Define whether you want to build multiple sites or the default site (see examples for impact on directory output), by default this settings is <code>False</code>.</p>\n<pre><span class=\"n\">BAKERY_MULTISITE</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p>Add the build directory where you want to be the site be built as flat files.</p>\n<pre><span class=\"n\">BUILD_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'/tmp/build/'</span>\n</pre>\n<p>As you may know with Django bakery, the trickiest part is to make your current models/pages buildable with <a href=\"https://django-bakery.readthedocs.io/en/latest/buildableviews.html\" rel=\"nofollow\">Buildable views</a>. As Django Wagtail uses only the <code>Page</code> model at their lowest level, you can use at least one of the already present Buildable views provided by Wagtail bakery.</p>\n<p>Build all published public pages (use for production).</p>\n<pre><span class=\"n\">BAKERY_VIEWS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n\t<span class=\"s1\">'wagtailbakery.views.AllPublishedPagesView'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Build all published and unpublished public pages (use for staging/acceptance).</p>\n<pre><span class=\"n\">BAKERY_VIEWS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n\t<span class=\"s1\">'wagtailbakery.views.AllPagesView'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To build static JSON files representing your site's API, use the following views:</p>\n<pre><span class=\"n\">BAKERY_VIEWS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n\t<span class=\"s1\">'wagtailbakery.api_views.PagesAPIDetailView'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'wagtailbakery.api_views.PagesAPIListingView'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'wagtailbakery.api_views.TypedPagesAPIListingView'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The API views use Wagtail's V2 API module. To configure the data that is rendered by these views, please refer to Wagtail's <a href=\"http://docs.wagtail.io/en/stable/advanced_topics/api/v2/configuration.html\" rel=\"nofollow\">V2 API configuration guide</a>.</p>\n<h2>Usage</h2>\n<p>Build the site out as flat files by running the <code>build</code> management command.</p>\n<pre><code>manage.py build\n</code></pre>\n<p>If you want to check how your static website will look, use the <code>buildserver</code> command after you have build your static files once.</p>\n<pre><code>manage.py buildserver\n</code></pre>\n<h2>Examples</h2>\n<p>In the <a href=\"https://github.com/wagtail/wagtail-bakery/tree/master/examples\" rel=\"nofollow\">examples</a> directory you can find a Wagtail setup with fixtures for a single site as well as a multisite setup.</p>\n<p>Create a virtualenv and go to one of the examples, you can use the <code>Make</code> command to install all requirements, load fixtures and run the server.</p>\n<p>As described in the usage section, use <code>manage.py build</code> to build out the example as static files.</p>\n<p><strong>Build output with <code>BAKERY_MULTISITE=True</code></strong>:</p>\n<pre><code>build/example.com/index.html\nbuild/example.com/about/index.html\nbuild/example.com/blog/index.html\nbuild/example.com/blog/example/index.html\nbuild/static/\n</code></pre>\n<p><strong>Build output with <code>BAKERY_MULTISITE=False</code> (default)</strong>:</p>\n<pre><code>build/index.html\nbuild/about/index.html\nbuild/blog/index.html\nbuild/blog/example/index.html\nbuild/static/\n</code></pre>\n<h2>Supported Versions</h2>\n<h3>Browser support</h3>\n<p>We align our browser support targets with that of Wagtail. Have a look at the <a href=\"http://docs.wagtail.io/en/latest/contributing/developing.html\" rel=\"nofollow\">official documentation</a>.</p>\n<h3>Python/Django/Wagtail support</h3>\n<p>Python versions as defined in <code>setup.py</code> classifiers.</p>\n<p>Wagtail versions as <a href=\"http://docs.wagtail.io/en/latest/releases/upgrading.html\" rel=\"nofollow\">supported</a> by Wagtail (LTS, current and current-1).</p>\n<p>Django/Wagtail combinations as <a href=\"http://docs.wagtail.io/en/latest/releases/upgrading.html#compatible-django-python-versions\" rel=\"nofollow\">supported</a> by Wagtail (for the Wagtail versions as defined above).</p>\n<h4>Which version combinations to include in Travis test matrix?</h4>\n<p>In order to keep for CI build time from growing out of control, not all Python/Django/Wagtail combinations will be tested.</p>\n<p>Test as follow:</p>\n<ul>\n<li>All supported Django/Wagtail combinations with the latest supported Python version.</li>\n<li>The latest supported Django/Wagtail combination for the remaining Python versions.</li>\n</ul>\n<h2>Troubleshooting</h2>\n<p>For issues <a href=\"https://github.com/wagtail/wagtail-bakery/issues/new\" rel=\"nofollow\">please submit an issue</a> on GitHub.</p>\n<h2>Development</h2>\n<h3>Releases</h3>\n<ol>\n<li>Ensure you have the latest versions of <code>pip</code>, <code>setuptools</code> and <code>twine</code> installed in your virtual environment.</li>\n<li>Create a new branch (e.g. <code>release/1.1.3</code>) for the release of the new version.</li>\n<li>Update the version number in <code>setup.py</code> following <a href=\"http://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>.</li>\n<li>Update <code>CHANGELOG.md</code>.</li>\n<li>On GitHub, create a pull request and squash merge it.</li>\n<li>Checkout and pull the <code>master</code> branch locally.</li>\n<li>(Optional) If you need to verify anything, use <code>make publish-test</code> to upload to <a href=\"https://test.pypi.org\" rel=\"nofollow\">https://test.pypi.org</a> and enter your PyPi <em>test</em> credentials as needed.</li>\n<li>Use <code>make publish</code> and enter your PyPi credentials as needed.</li>\n<li>On GitHub, create a release and a tag for the new version.</li>\n</ol>\n<h2>Credits</h2>\n<p>Thanks to <a href=\"https://github.com/mhnbcu/wagtailbakery\" rel=\"nofollow\">@mhnbcu</a> for bringing this\nidea up initially, and <a href=\"https://github.com/datadesk/django-bakery\" rel=\"nofollow\">Django Bakery</a>\nfor providing the initial bakery package.</p>\n<p>Thanks to all the <a href=\"https://github.com/wagtail/wagtail-bakery/graphs/contributors\" rel=\"nofollow\">contributors</a> for their help.</p>\n\n          </div>"}, "last_serial": 6173289, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6a527c062fef034b2203c1dabce48e10", "sha256": "b143407d074c9463d5de6774c53ade6cf1944de244b8bc8e273e30f33632b53d"}, "downloads": -1, "filename": "wagtail_bakery-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6a527c062fef034b2203c1dabce48e10", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5828, "upload_time": "2017-04-11T18:20:35", "upload_time_iso_8601": "2017-04-11T18:20:35.389152Z", "url": "https://files.pythonhosted.org/packages/f7/7a/f0a9f79d32101ca941db7c2614669473839cdf34605c6c51645465b8545b/wagtail_bakery-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "796eac6a148fefebe6a6a64cf29a8a98", "sha256": "6dcbf0689e4d933b733dd1baf53813e46d81761690c1c3818a17578266e2ee14"}, "downloads": -1, "filename": "wagtail-bakery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "796eac6a148fefebe6a6a64cf29a8a98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4918, "upload_time": "2017-04-11T18:20:37", "upload_time_iso_8601": "2017-04-11T18:20:37.368839Z", "url": "https://files.pythonhosted.org/packages/1a/80/f656941b3886e1d5d575c3209d5fe7785984da1cb11ed08291572bb1cf84/wagtail-bakery-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d640413140d607f38746f6589b2a82e3", "sha256": "c83111d92e90efa8631bcb21c60ca5509220e545ddf12d163ef229f6fedb95ad"}, "downloads": -1, "filename": "wagtail_bakery-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d640413140d607f38746f6589b2a82e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7782, "upload_time": "2018-01-19T08:53:00", "upload_time_iso_8601": "2018-01-19T08:53:00.536454Z", "url": "https://files.pythonhosted.org/packages/e3/e9/9759188728356409c4babf7a85b785802bdb167aa6d4951143fff717afff/wagtail_bakery-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ef1a17a6af98148429a1d45e7a2c224", "sha256": "3fc91e65ff639607c276491bc9dc205f474ab24cba7afaad26ee4295a4bcb773"}, "downloads": -1, "filename": "wagtail-bakery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5ef1a17a6af98148429a1d45e7a2c224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6407, "upload_time": "2018-01-19T08:53:01", "upload_time_iso_8601": "2018-01-19T08:53:01.702662Z", "url": "https://files.pythonhosted.org/packages/6c/3d/e7c0b40283bf7641ea097a8a1c867e9fe8fa7d7611fcde045a1c90b70ae0/wagtail-bakery-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b2b2a05d992c7424934d9cd450aba73b", "sha256": "46dd6d31f2305094945eb3a9ee7fc8dbeca778fe13cd96b2f245a22467412390"}, "downloads": -1, "filename": "wagtail-bakery-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b2b2a05d992c7424934d9cd450aba73b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8235, "upload_time": "2018-09-16T15:23:54", "upload_time_iso_8601": "2018-09-16T15:23:54.464845Z", "url": "https://files.pythonhosted.org/packages/11/e3/f4b09541a3ea2528bd2ed8abe737dc7f8b9541cdbc2e33dea19c1dac798c/wagtail-bakery-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "06ee923639abae083a6e25b6cde16b11", "sha256": "e7e2b11b903d1d3afec1f8b7af6a59ebf135f11efb9a4d433987574dd2d52409"}, "downloads": -1, "filename": "wagtail-bakery-0.4.0.tar.gz", "has_sig": false, "md5_digest": "06ee923639abae083a6e25b6cde16b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8670, "upload_time": "2019-11-21T06:21:02", "upload_time_iso_8601": "2019-11-21T06:21:02.026439Z", "url": "https://files.pythonhosted.org/packages/0f/22/4a5ca4fa92e32ffccc0adcb51c90b3ad9f76fd31ac3c7edf758f1088af9f/wagtail-bakery-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06ee923639abae083a6e25b6cde16b11", "sha256": "e7e2b11b903d1d3afec1f8b7af6a59ebf135f11efb9a4d433987574dd2d52409"}, "downloads": -1, "filename": "wagtail-bakery-0.4.0.tar.gz", "has_sig": false, "md5_digest": "06ee923639abae083a6e25b6cde16b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8670, "upload_time": "2019-11-21T06:21:02", "upload_time_iso_8601": "2019-11-21T06:21:02.026439Z", "url": "https://files.pythonhosted.org/packages/0f/22/4a5ca4fa92e32ffccc0adcb51c90b3ad9f76fd31ac3c7edf758f1088af9f/wagtail-bakery-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:11 2020"}