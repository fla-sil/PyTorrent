{"info": {"author": "S\u00f6ren Kirchner", "author_email": "sk@tologo.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Graphics Conversion", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# PyImgBatch\n\nPyImgBatch is a batch image processor for python including a command line interface.\n\n## Installation\nFor installation open a terminal and type the following line into the command line.\n\n```\npip install pyimgbatch\n```\n\n## Documentation\n\nFor further information please read the documentation: \n\n[https://soeren-kirchner.github.io/pyimgbatch/quickstart.html](https://soeren-kirchner.github.io/pyimgbatch/quickstart.html)\n\n## Usage on command line\n\nThe simplest usage is to change to the folder containing the images with\n\n```\ncd /folder/with/images\n```\nand type \n\n```\npyimgbatch --width 300\n```\nThis will resize all supported image files in the current folder to a width of 300 pixels respecting the aspect ratio of the source file. The results will be written to a \"dest\" subfolder.\n\nAlternatively, you can set a source folder with the images to be converted and/or a destination folder for the results as follow.\n\n```\npyimgbatch --source source_folder --dest destination_folder --height 400\n```\nor shorter\n```\npyimgbatch -s source_folder -d destination_folder --height 400\n```\nThis will convert the images from the *source_folder* to a height of 400px and stores the results in the destination folder.  \n*Note: For every source image a subfolder will be created inside the destination_folder. To avoid this behavior use the --nosubfolder argument.*\n\n## Project Files\nOne of PyImgBatch features is to create multiple different versions from given image files. \n\nFor this, you can use project files. Project files are JSON files containing the specifications for the image processing. \n\n### The very short one\n\nHere an example of a very short one.\n\n```json\n[\n    { \"width\": 1000, \"suffix\": \".w1000\" },\n    { \"height\": 1200, \"suffix\": \".h1200\" }\n]\n```\nFor example (may the project named \"myprj.json\"):\n```\npyimgbatch -c myprj.json\n```\nproduces the following output:\n```\nprocessing: french-bulldog-4530685.jpg\ncreating: french-bulldog-4530685.w1000.jpg\ncreating: french-bulldog-4530685.h1200.jpg\nprocessing: coast-4478424.jpg\ncreating: coast-4478424.w1000.jpg\ncreating: coast-4478424.h1200.jpg\n...\nprocessing: beaded-2137080_1920-cmyk-iso-eci.tif\ncreating: beaded-2137080_1920-cmyk-iso-eci.w1000.jpg\ncreating: beaded-2137080_1920-cmyk-iso-eci.h1200.jpg\n...\n```\nand creates two images per source images, resized to the specified width or height with suffix added to the original name. \n\n### The short one\n\nImagine, you need to create different sizes for all your images for your web project. For instance, you need the images in widths 180px, 300px, 400px and one in a height of 800 and each 2x and 3x the size for higher pixel density display like in smartphones.\nAn example could look as follow.\n\n```JSON\n{\n    \"name\": \"web set\",\n    \"comment\": \"some sample pictures\",\n    \"source\": \"webset/source\",\n    \"dest\": \"webset/dest\",\n    \"prefix\": \"web.\",\n    \"configs\": [\n        { \"width\": 180, \"suffix\": \".w180\", \"webset\": \"@3x\" },\n        { \"width\": 300, \"suffix\": \".w300\", \"webset\": \"@3x\" },\n        { \"width\": 400, \"suffix\": \".w400\", \"webset\": \"@3x\" },\n        { \"height\": 800, \"prefix\": \"preview.\", \"webset\": \"@3x\" }\n    ]\n}\n```\nThis will create 12 destination images for each imput image. For a image \"lama-4540160.jpg\" you get:\n\n```\n...\ncreating: lama-4540160/web.lama-4540160.w180@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w180@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w180@3x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@3x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@3x.jpg\ncreating: lama-4540160/preview.lama-4540160@1x.jpg\ncreating: lama-4540160/preview.lama-4540160@2x.jpg\ncreating: lama-4540160/preview.lama-4540160@3x.jpg\n...\n```\n\nAs you see you can specify defaults, so you don't need to repeat yourself.\nThe more specific option is used instead of the more general one. So in this example, all images get the prefix \"web.\" except the last, because the more specific prefix is here given as \"preview.\"\n\n*Hint: The file names are a little strange because I've downloaded the images from the free image stock [pixabay](https://pixabay.com) and I haven't changed the Name so you can search for the pics or the photographer if you want.*\n\n### Full image project file\n\nlooks as follow.\n\n```JSON\n{\n    \"comment\": \"pyImgBatch demo project\",\n    \"debug\": true,\n    \"no-progess\": false,\n    \"projects\": [\n        {\n            \"name\": \"web set\",\n            \"comment\": \"some sample pictures\",\n            \"source\": \"webset/source\",\n            \"dest\": \"webset/dest\",\n            \"prefix\": \"web.\",\n            \"configs\": [\n                { \"width\": 180, \"suffix\": \".w180\", \"webset\": \"@3x\" },\n                { \"width\": 300, \"suffix\": \".w300\", \"webset\": \"@3x\" },\n                { \"width\": 400, \"suffix\": \".w400\", \"webset\": \"@3x\" },\n                { \"height\": 800, \"prefix\": \"preview.\", \"webset\": \"@3x\" }\n            ]\n        },\n        {\n            \"name\": \"images to thumbnails\",\n            \"source\": \"to-thumbnails/originals\",\n            \"dest\": \"to-thumbnails/thumbnails\",\n            \"subfolder\": false,\n            \"prefix\": \"thumb.\",\n            \"configs\": [\n                {\"height\": 300}, \n                {\"prefix\": \"smallthumb.\", \"height\": 200}\n            ]\n        }\n    ]\n}\n```\n\nThis project contains two projects.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/soeren-kirchner/pyimgbatch", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyimgbatch", "package_url": "https://pypi.org/project/pyimgbatch/", "platform": "", "project_url": "https://pypi.org/project/pyimgbatch/", "project_urls": {"Homepage": "https://github.com/soeren-kirchner/pyimgbatch"}, "release_url": "https://pypi.org/project/pyimgbatch/0.2.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "PyImgBatch is a batch image processor for python including a command line interface.", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyImgBatch</h1>\n<p>PyImgBatch is a batch image processor for python including a command line interface.</p>\n<h2>Installation</h2>\n<p>For installation open a terminal and type the following line into the command line.</p>\n<pre><code>pip install pyimgbatch\n</code></pre>\n<h2>Documentation</h2>\n<p>For further information please read the documentation:</p>\n<p><a href=\"https://soeren-kirchner.github.io/pyimgbatch/quickstart.html\" rel=\"nofollow\">https://soeren-kirchner.github.io/pyimgbatch/quickstart.html</a></p>\n<h2>Usage on command line</h2>\n<p>The simplest usage is to change to the folder containing the images with</p>\n<pre><code>cd /folder/with/images\n</code></pre>\n<p>and type</p>\n<pre><code>pyimgbatch --width 300\n</code></pre>\n<p>This will resize all supported image files in the current folder to a width of 300 pixels respecting the aspect ratio of the source file. The results will be written to a \"dest\" subfolder.</p>\n<p>Alternatively, you can set a source folder with the images to be converted and/or a destination folder for the results as follow.</p>\n<pre><code>pyimgbatch --source source_folder --dest destination_folder --height 400\n</code></pre>\n<p>or shorter</p>\n<pre><code>pyimgbatch -s source_folder -d destination_folder --height 400\n</code></pre>\n<p>This will convert the images from the <em>source_folder</em> to a height of 400px and stores the results in the destination folder.<br>\n<em>Note: For every source image a subfolder will be created inside the destination_folder. To avoid this behavior use the --nosubfolder argument.</em></p>\n<h2>Project Files</h2>\n<p>One of PyImgBatch features is to create multiple different versions from given image files.</p>\n<p>For this, you can use project files. Project files are JSON files containing the specifications for the image processing.</p>\n<h3>The very short one</h3>\n<p>Here an example of a very short one.</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w1000\"</span> <span class=\"p\">},</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".h1200\"</span> <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>For example (may the project named \"myprj.json\"):</p>\n<pre><code>pyimgbatch -c myprj.json\n</code></pre>\n<p>produces the following output:</p>\n<pre><code>processing: french-bulldog-4530685.jpg\ncreating: french-bulldog-4530685.w1000.jpg\ncreating: french-bulldog-4530685.h1200.jpg\nprocessing: coast-4478424.jpg\ncreating: coast-4478424.w1000.jpg\ncreating: coast-4478424.h1200.jpg\n...\nprocessing: beaded-2137080_1920-cmyk-iso-eci.tif\ncreating: beaded-2137080_1920-cmyk-iso-eci.w1000.jpg\ncreating: beaded-2137080_1920-cmyk-iso-eci.h1200.jpg\n...\n</code></pre>\n<p>and creates two images per source images, resized to the specified width or height with suffix added to the original name.</p>\n<h3>The short one</h3>\n<p>Imagine, you need to create different sizes for all your images for your web project. For instance, you need the images in widths 180px, 300px, 400px and one in a height of 800 and each 2x and 3x the size for higher pixel density display like in smartphones.\nAn example could look as follow.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"web set\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"comment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"some sample pictures\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"s2\">\"webset/source\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"dest\"</span><span class=\"p\">:</span> <span class=\"s2\">\"webset/dest\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"web.\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"configs\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w180\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w300\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w400\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"preview.\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This will create 12 destination images for each imput image. For a image \"lama-4540160.jpg\" you get:</p>\n<pre><code>...\ncreating: lama-4540160/web.lama-4540160.w180@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w180@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w180@3x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w300@3x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@1x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@2x.jpg\ncreating: lama-4540160/web.lama-4540160.w400@3x.jpg\ncreating: lama-4540160/preview.lama-4540160@1x.jpg\ncreating: lama-4540160/preview.lama-4540160@2x.jpg\ncreating: lama-4540160/preview.lama-4540160@3x.jpg\n...\n</code></pre>\n<p>As you see you can specify defaults, so you don't need to repeat yourself.\nThe more specific option is used instead of the more general one. So in this example, all images get the prefix \"web.\" except the last, because the more specific prefix is here given as \"preview.\"</p>\n<p><em>Hint: The file names are a little strange because I've downloaded the images from the free image stock <a href=\"https://pixabay.com\" rel=\"nofollow\">pixabay</a> and I haven't changed the Name so you can search for the pics or the photographer if you want.</em></p>\n<h3>Full image project file</h3>\n<p>looks as follow.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"comment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pyImgBatch demo project\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"debug\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"no-progess\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"projects\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"web set\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"comment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"some sample pictures\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"s2\">\"webset/source\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"dest\"</span><span class=\"p\">:</span> <span class=\"s2\">\"webset/dest\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"web.\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"configs\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w180\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n                <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w300\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n                <span class=\"p\">{</span> <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"nt\">\"suffix\"</span><span class=\"p\">:</span> <span class=\"s2\">\".w400\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">},</span>\n                <span class=\"p\">{</span> <span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"preview.\"</span><span class=\"p\">,</span> <span class=\"nt\">\"webset\"</span><span class=\"p\">:</span> <span class=\"s2\">\"@3x\"</span> <span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"images to thumbnails\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"s2\">\"to-thumbnails/originals\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"dest\"</span><span class=\"p\">:</span> <span class=\"s2\">\"to-thumbnails/thumbnails\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"subfolder\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"thumb.\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"configs\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span><span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">},</span> \n                <span class=\"p\">{</span><span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smallthumb.\"</span><span class=\"p\">,</span> <span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This project contains two projects.</p>\n\n          </div>"}, "last_serial": 6112512, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "c3816f2f707176d097820d4b7503746a", "sha256": "841f4a5b2dc9baf2b6b19b20b68710dbf6684c907cc80701ab88cbc3f7c237b6"}, "downloads": -1, "filename": "pyimgbatch-0.2.5.tar.gz", "has_sig": false, "md5_digest": "c3816f2f707176d097820d4b7503746a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9217, "upload_time": "2019-11-09T21:48:51", "upload_time_iso_8601": "2019-11-09T21:48:51.936414Z", "url": "https://files.pythonhosted.org/packages/02/5c/61f313da958fddf261b7a92fbedcc74e7eacf839038790e3049538497d51/pyimgbatch-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "421211ce95cccf66acf0a49f89466bd6", "sha256": "0290c9a28c86fe5ee5e0534e53b9ebbbb8da40945a6ff986509218cdc531fc19"}, "downloads": -1, "filename": "pyimgbatch-0.2.6.tar.gz", "has_sig": false, "md5_digest": "421211ce95cccf66acf0a49f89466bd6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9278, "upload_time": "2019-11-10T14:29:34", "upload_time_iso_8601": "2019-11-10T14:29:34.428608Z", "url": "https://files.pythonhosted.org/packages/e1/14/2282c6ae0e12d625b7c0da27aea12f811af0c88e03b8099b80c09aa0e4b6/pyimgbatch-0.2.6.tar.gz", "yanked": false}], "0.2.6.post1": [{"comment_text": "", "digests": {"md5": "179858933d2a288eec3e1f210254b243", "sha256": "ad8814d602220479f9f339a28103098d8309c62ef3cafe70fd45face4b133625"}, "downloads": -1, "filename": "pyimgbatch-0.2.6.post1.tar.gz", "has_sig": false, "md5_digest": "179858933d2a288eec3e1f210254b243", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9978, "upload_time": "2019-11-10T14:42:49", "upload_time_iso_8601": "2019-11-10T14:42:49.345722Z", "url": "https://files.pythonhosted.org/packages/dd/23/e08a856a181ad9b2f832e4b3ee26ebf17dfc2179dfa351305c10d6308bf4/pyimgbatch-0.2.6.post1.tar.gz", "yanked": false}], "0.2.6.post2": [{"comment_text": "", "digests": {"md5": "de3fd6131935ee34100497133cc6ab17", "sha256": "28eb309bfd6fb3da2edea3a9c60791d75c758471a3a91dd5ae26a2f65c557a9e"}, "downloads": -1, "filename": "pyimgbatch-0.2.6.post2.tar.gz", "has_sig": false, "md5_digest": "de3fd6131935ee34100497133cc6ab17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9261, "upload_time": "2019-11-10T14:49:09", "upload_time_iso_8601": "2019-11-10T14:49:09.183749Z", "url": "https://files.pythonhosted.org/packages/3c/f4/85c98e9b22f7821ba9f3d080cbb6d14f64550baa7d2262961bb7888f667f/pyimgbatch-0.2.6.post2.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "6d33164cfeaef5693e3e8b93e90fc427", "sha256": "5b773c79dc17b06f85bb43440b4626cb1385a0be666d3fca2fbf9fc32313f395"}, "downloads": -1, "filename": "pyimgbatch-0.2.7.tar.gz", "has_sig": false, "md5_digest": "6d33164cfeaef5693e3e8b93e90fc427", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8717, "upload_time": "2019-11-10T18:21:42", "upload_time_iso_8601": "2019-11-10T18:21:42.443136Z", "url": "https://files.pythonhosted.org/packages/5f/90/9d9b4924702de96dd41ae312ca544a9cec5d2266fa344862cdd199380d80/pyimgbatch-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d33164cfeaef5693e3e8b93e90fc427", "sha256": "5b773c79dc17b06f85bb43440b4626cb1385a0be666d3fca2fbf9fc32313f395"}, "downloads": -1, "filename": "pyimgbatch-0.2.7.tar.gz", "has_sig": false, "md5_digest": "6d33164cfeaef5693e3e8b93e90fc427", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8717, "upload_time": "2019-11-10T18:21:42", "upload_time_iso_8601": "2019-11-10T18:21:42.443136Z", "url": "https://files.pythonhosted.org/packages/5f/90/9d9b4924702de96dd41ae312ca544a9cec5d2266fa344862cdd199380d80/pyimgbatch-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:05 2020"}