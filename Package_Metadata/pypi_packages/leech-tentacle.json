{"info": {"author": "algernon_solutions/jcubeta", "author_email": "jcubeta@algernon.solutions", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# The Tentacle\n**mound-like tentacles groping from underground nuclei of polypous perversion...**\n## overview\nThe Leech Platform works by sending out tentacles to extract (leech) data from a single identified source. \nThese tentacles perform the extracting and processing to produce JSON objects representing the data, which \nthey broadcast back to the Nucleus.\n## extraction flow\n1. Retrieve configuration regarding the IdSource and the DataSource from the tentacle's storage level\n2. Build the ExtractionConfiguration and the SourceConfiguration, which jointly contain the details of how to extract \nand process a specific type of extraction.\n3. Perform the extraction, the details of which are specific to each individual tentacle.\n4. Process the extracted data, transforming it to a list of standardized JSON objects.\n5. Broadcast the JSON objects to the Nucleus.\n## leeching data\nTo understand why the tentacle operates as it does, one must first understand how the Leech conceptualizes data. \nAll data belongs to someone or something. In addition, all data must be stored somehow. In order for the leech to \nextract data, it must first have these two parameters defined. We refer to them as an IdSource and a DataSource.\n### IdSource\nAn IdSource is the who of the data. Who owns the data, and therefore dictates what goes into it? They are the source \nof the individually identifiable data assets, which will ultimately carry the identifier as id_source. An id_source \ncould be a business, a health care organization, or a user on a mobile app.\n### DataSource\nA DataSource is the how of the data. How is the data stored, and how will the tentacle extract it? A DataSource could \nbe an API, a website that we scrape, a brand of IOT device, or a platform such as Google G Suite.\n### DataAsset\nA DataAsset is a single identifiable entry from a DataSource, represented as a JSON object. It has a globally unique \nidentifier, the asset_id, as well as a capture_timestamp, an asset_type, an id_value, id_source, and source_name (DataSource). \nIn addition, it has asset_data, which contains all the extracted data for the asset.\n### Extraction\nA single extraction may retrieve one DataAsset or it may retrieve thousands. Multiple extractions can capture the \nsame asset_type. An Extraction is executed according to an ExtractionConfig and a SourceConfig.\n### ExtractionConfig\nThe blueprint for how to execute a single type of extraction against a single DataSource. It includes all the \nparameters needed to run the extraction and process the resulting data.\n### SourceConfig\nContains parameters for a given DataSource which are specific to an IdSource. For example, if multiple businesses all \nuse one commercial database, the SourceConfig might contain a username and password for a single business.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AlgernonSolutions/leech_tentacle", "keywords": "", "license": "GNU Affero General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "leech-tentacle", "package_url": "https://pypi.org/project/leech-tentacle/", "platform": "", "project_url": "https://pypi.org/project/leech-tentacle/", "project_urls": {"Homepage": "https://github.com/AlgernonSolutions/leech_tentacle"}, "release_url": "https://pypi.org/project/leech-tentacle/0.0.1/", "requires_dist": null, "requires_python": ">=3.8.0", "summary": "the basic modules used to design a new tentacle for the Algernon Leech platform", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>The Tentacle</h1>\n<p><strong>mound-like tentacles groping from underground nuclei of polypous perversion...</strong></p>\n<h2>overview</h2>\n<p>The Leech Platform works by sending out tentacles to extract (leech) data from a single identified source.\nThese tentacles perform the extracting and processing to produce JSON objects representing the data, which\nthey broadcast back to the Nucleus.</p>\n<h2>extraction flow</h2>\n<ol>\n<li>Retrieve configuration regarding the IdSource and the DataSource from the tentacle's storage level</li>\n<li>Build the ExtractionConfiguration and the SourceConfiguration, which jointly contain the details of how to extract\nand process a specific type of extraction.</li>\n<li>Perform the extraction, the details of which are specific to each individual tentacle.</li>\n<li>Process the extracted data, transforming it to a list of standardized JSON objects.</li>\n<li>Broadcast the JSON objects to the Nucleus.</li>\n</ol>\n<h2>leeching data</h2>\n<p>To understand why the tentacle operates as it does, one must first understand how the Leech conceptualizes data.\nAll data belongs to someone or something. In addition, all data must be stored somehow. In order for the leech to\nextract data, it must first have these two parameters defined. We refer to them as an IdSource and a DataSource.</p>\n<h3>IdSource</h3>\n<p>An IdSource is the who of the data. Who owns the data, and therefore dictates what goes into it? They are the source\nof the individually identifiable data assets, which will ultimately carry the identifier as id_source. An id_source\ncould be a business, a health care organization, or a user on a mobile app.</p>\n<h3>DataSource</h3>\n<p>A DataSource is the how of the data. How is the data stored, and how will the tentacle extract it? A DataSource could\nbe an API, a website that we scrape, a brand of IOT device, or a platform such as Google G Suite.</p>\n<h3>DataAsset</h3>\n<p>A DataAsset is a single identifiable entry from a DataSource, represented as a JSON object. It has a globally unique\nidentifier, the asset_id, as well as a capture_timestamp, an asset_type, an id_value, id_source, and source_name (DataSource).\nIn addition, it has asset_data, which contains all the extracted data for the asset.</p>\n<h3>Extraction</h3>\n<p>A single extraction may retrieve one DataAsset or it may retrieve thousands. Multiple extractions can capture the\nsame asset_type. An Extraction is executed according to an ExtractionConfig and a SourceConfig.</p>\n<h3>ExtractionConfig</h3>\n<p>The blueprint for how to execute a single type of extraction against a single DataSource. It includes all the\nparameters needed to run the extraction and process the resulting data.</p>\n<h3>SourceConfig</h3>\n<p>Contains parameters for a given DataSource which are specific to an IdSource. For example, if multiple businesses all\nuse one commercial database, the SourceConfig might contain a username and password for a single business.</p>\n\n          </div>"}, "last_serial": 6633026, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f1232a9d3e8fd07ada8996d45af194dd", "sha256": "251acf52484b5b2235ba48ff70eb660e45c73626c1404b7ae7c63a0b26489e20"}, "downloads": -1, "filename": "leech_tentacle-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1232a9d3e8fd07ada8996d45af194dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8.0", "size": 18018, "upload_time": "2020-02-14T18:50:24", "upload_time_iso_8601": "2020-02-14T18:50:24.465994Z", "url": "https://files.pythonhosted.org/packages/66/93/a78bba3541a2b0a94de3a6a1a826d004d01e183bbbc789da542670118d46/leech_tentacle-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1232a9d3e8fd07ada8996d45af194dd", "sha256": "251acf52484b5b2235ba48ff70eb660e45c73626c1404b7ae7c63a0b26489e20"}, "downloads": -1, "filename": "leech_tentacle-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1232a9d3e8fd07ada8996d45af194dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8.0", "size": 18018, "upload_time": "2020-02-14T18:50:24", "upload_time_iso_8601": "2020-02-14T18:50:24.465994Z", "url": "https://files.pythonhosted.org/packages/66/93/a78bba3541a2b0a94de3a6a1a826d004d01e183bbbc789da542670118d46/leech_tentacle-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:14 2020"}