{"info": {"author": "Ilya Lebedev", "author_email": "melevir@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# mr. Proper\n\n[![Build Status](https://travis-ci.org/best-doctor/mr_proper.svg?branch=master)](https://travis-ci.org/best-doctor/mr_proper)\n[![PyPI version](https://badge.fury.io/py/mr-proper.svg)](https://badge.fury.io/py/mr-proper)\n[![Maintainability](https://api.codeclimate.com/v1/badges/4b2234d95d5c4944e2e6/maintainability)](https://codeclimate.com/github/best-doctor/mr_proper/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/4b2234d95d5c4944e2e6/test_coverage)](https://codeclimate.com/github/best-doctor/mr_proper/test_coverage)\n\nStatic Python code analyzer, that tries to check if functions in code are\n[pure](https://en.wikipedia.org/wiki/Pure_function) or not and why.\n\n![Have fun with mr Clean](https://raw.githubusercontent.com/best-doctor/mr_proper/master/docs_img/mr_clean_sponge.jpg)\n\n*DISCLAIMER*: this library is very experimental and has a lot of edge cases.\nFunctions that mr. Proper marks as pure can be not pure, but they are\nusually cleaner than other functions.\n\n## Installation\n\n```bash\npip install mr_proper\n```\n\n## What mr. Proper check\n\n1. that function has no blacklisted calls (like `print`)\n   and blacklisted attributes access (like `smth.count`);\n1. that function not uses global objects (only local vars and function arguments);\n1. that function has al least one return;\n1. that function not mutates it's arguments;\n1. that function has no local imports;\n1. that function has no arguments of forbidden types (like ORM objects);\n1. that function not uses `self`, `class` or `super`;\n1. that function has calls of only pure functions.\n\nThis list is not enought to say that function is pure and some points\nare quite controversial, but it's a nice start.\n\n## Example\n\nConsole usage:\n\n```python\n    # test.py\n    def add_one(n: int) -> int:\n        return n + 1\n\n    def print_amount_of_users(users_qs: QuerySet) -> None:\n        print(f'Current amount of users is {users_qs.count()}')\n```\n\n```bash\n$ mr_propper test.py\nadd_one is pure!\nprint_amount_of_users is not pure because of:\n    it uses forbidden argument types (QuerySet)\n    it calls not pure functions (print)\n    it has no return\n```\n\nUsage inside Python code sample:\n\n```jupyterpython\n>>> import ast\n>>> from mr_propper import is_function_pure\n>>> funcdef = ast.parse('''\n    def add_one(n: int) -> int:\n        return n + 1\n''').body[0]\n>>> is_function_pure(funcdef)\nTrue\n>>> is_function_pure(funcdef, with_errors=True)\n(True, [])\n```\n\n## Parameters\n\nCLI interface:\n\n- `filepath`: path to .py file to check (directories are not supported for now);\n- `--recursive`: require inner calls to be pure for function pureness.\n\n## Code prerequisites\n\n1. Python 3.7+;\n1. Functions are fully type-annotated;\n1. No dynamic calls (like `getattr(sender, 'send_' + message_type)(message)`).\n\n## Contributing\n\nWe would love you to contribute to our project. It's simple:\n\n1. Create an issue with bug you found or proposal you have.\n   Wait for approve from maintainer.\n1. Create a pull request. Make sure all checks are green.\n1. Fix review comments if any.\n1. Be awesome.\n\nHere are useful tips:\n\n- You can run all checks and tests with `make check`.\n  Please do it before TravisCI does.\n- We use [BestDoctor python styleguide](https://github.com/best-doctor/guides/blob/master/guides/python_styleguide.md).\n  Sorry, styleguide is available only in Russian for now.\n- We respect [Django CoC](https://www.djangoproject.com/conduct/).\n  Make soft, not bullshit.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/best-doctor/mr_proper", "keywords": "typos", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mr-proper", "package_url": "https://pypi.org/project/mr-proper/", "platform": "", "project_url": "https://pypi.org/project/mr-proper/", "project_urls": {"Homepage": "https://github.com/best-doctor/mr_proper"}, "release_url": "https://pypi.org/project/mr-proper/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "Package to find typos in russian text.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mr. Proper</h1>\n<p><a href=\"https://travis-ci.org/best-doctor/mr_proper\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f331e2a33932a9a73744c45032851e0590b9e69/68747470733a2f2f7472617669732d63692e6f72672f626573742d646f63746f722f6d725f70726f7065722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/mr-proper\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e6e02bd45dd490955f967bb3ceae889fde6c52b/68747470733a2f2f62616467652e667572792e696f2f70792f6d722d70726f7065722e737667\"></a>\n<a href=\"https://codeclimate.com/github/best-doctor/mr_proper/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b347bb3a928c7e7ed77903f37859282882e43c7e/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34623232333464393564356334393434653265362f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://codeclimate.com/github/best-doctor/mr_proper/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e579f2e46d200a2604231968c87f584d9432938/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34623232333464393564356334393434653265362f746573745f636f766572616765\"></a></p>\n<p>Static Python code analyzer, that tries to check if functions in code are\n<a href=\"https://en.wikipedia.org/wiki/Pure_function\" rel=\"nofollow\">pure</a> or not and why.</p>\n<p><img alt=\"Have fun with mr Clean\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13cc22fba2a2c49e67bdb885685bb03bc1df298f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626573742d646f63746f722f6d725f70726f7065722f6d61737465722f646f63735f696d672f6d725f636c65616e5f73706f6e67652e6a7067\"></p>\n<p><em>DISCLAIMER</em>: this library is very experimental and has a lot of edge cases.\nFunctions that mr. Proper marks as pure can be not pure, but they are\nusually cleaner than other functions.</p>\n<h2>Installation</h2>\n<pre>pip install mr_proper\n</pre>\n<h2>What mr. Proper check</h2>\n<ol>\n<li>that function has no blacklisted calls (like <code>print</code>)\nand blacklisted attributes access (like <code>smth.count</code>);</li>\n<li>that function not uses global objects (only local vars and function arguments);</li>\n<li>that function has al least one return;</li>\n<li>that function not mutates it's arguments;</li>\n<li>that function has no local imports;</li>\n<li>that function has no arguments of forbidden types (like ORM objects);</li>\n<li>that function not uses <code>self</code>, <code>class</code> or <code>super</code>;</li>\n<li>that function has calls of only pure functions.</li>\n</ol>\n<p>This list is not enought to say that function is pure and some points\nare quite controversial, but it's a nice start.</p>\n<h2>Example</h2>\n<p>Console usage:</p>\n<pre>    <span class=\"c1\"># test.py</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">print_amount_of_users</span><span class=\"p\">(</span><span class=\"n\">users_qs</span><span class=\"p\">:</span> <span class=\"n\">QuerySet</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Current amount of users is </span><span class=\"si\">{</span><span class=\"n\">users_qs</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<pre>$ mr_propper test.py\nadd_one is pure!\nprint_amount_of_users is not pure because of:\n    it uses forbidden argument types <span class=\"o\">(</span>QuerySet<span class=\"o\">)</span>\n    it calls not pure functions <span class=\"o\">(</span>print<span class=\"o\">)</span>\n    it has no <span class=\"k\">return</span>\n</pre>\n<p>Usage inside Python code sample:</p>\n<pre>&gt;&gt;&gt; import ast\n&gt;&gt;&gt; from mr_propper import is_function_pure\n&gt;&gt;&gt; funcdef = ast.parse('''\n    def add_one(n: int) -&gt; int:\n        return n + 1\n''').body[0]\n&gt;&gt;&gt; is_function_pure(funcdef)\nTrue\n&gt;&gt;&gt; is_function_pure(funcdef, with_errors=True)\n(True, [])\n</pre>\n<h2>Parameters</h2>\n<p>CLI interface:</p>\n<ul>\n<li><code>filepath</code>: path to .py file to check (directories are not supported for now);</li>\n<li><code>--recursive</code>: require inner calls to be pure for function pureness.</li>\n</ul>\n<h2>Code prerequisites</h2>\n<ol>\n<li>Python 3.7+;</li>\n<li>Functions are fully type-annotated;</li>\n<li>No dynamic calls (like <code>getattr(sender, 'send_' + message_type)(message)</code>).</li>\n</ol>\n<h2>Contributing</h2>\n<p>We would love you to contribute to our project. It's simple:</p>\n<ol>\n<li>Create an issue with bug you found or proposal you have.\nWait for approve from maintainer.</li>\n<li>Create a pull request. Make sure all checks are green.</li>\n<li>Fix review comments if any.</li>\n<li>Be awesome.</li>\n</ol>\n<p>Here are useful tips:</p>\n<ul>\n<li>You can run all checks and tests with <code>make check</code>.\nPlease do it before TravisCI does.</li>\n<li>We use <a href=\"https://github.com/best-doctor/guides/blob/master/guides/python_styleguide.md\" rel=\"nofollow\">BestDoctor python styleguide</a>.\nSorry, styleguide is available only in Russian for now.</li>\n<li>We respect <a href=\"https://www.djangoproject.com/conduct/\" rel=\"nofollow\">Django CoC</a>.\nMake soft, not bullshit.</li>\n</ul>\n\n          </div>"}, "last_serial": 7177811, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b4e6a918871418e6b5e368f33b3dbd87", "sha256": "337caadb26ef9d159fe319cdef987b75eda826b013f4911b92bb37b4248028bb"}, "downloads": -1, "filename": "mr_proper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b4e6a918871418e6b5e368f33b3dbd87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7929, "upload_time": "2019-10-27T19:13:38", "upload_time_iso_8601": "2019-10-27T19:13:38.937443Z", "url": "https://files.pythonhosted.org/packages/4e/49/80ebc65e1c92fdaf575b54b25996b251d7f200cbbf57dd4a74cdf254243f/mr_proper-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "61a6c69caae7a22649cedfbd02fc1ee6", "sha256": "c334c52735ae2cd07aad2af9a17df66a2d36f41a629bcdcb1dbdcd3f5609f6a5"}, "downloads": -1, "filename": "mr_proper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "61a6c69caae7a22649cedfbd02fc1ee6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8581, "upload_time": "2019-11-15T10:44:28", "upload_time_iso_8601": "2019-11-15T10:44:28.847322Z", "url": "https://files.pythonhosted.org/packages/90/6a/3d4691af116e0d60b59e2eb221f6de30b51b55b7fe66804e6bea04ab6245/mr_proper-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "fe8b8355daa32f6fd0657164131d70e8", "sha256": "275cdcba4b3b99de8f583b010189e45ccaa7cce168481d0a3e442864b2a5e770"}, "downloads": -1, "filename": "mr_proper-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fe8b8355daa32f6fd0657164131d70e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8582, "upload_time": "2019-11-15T10:47:18", "upload_time_iso_8601": "2019-11-15T10:47:18.922195Z", "url": "https://files.pythonhosted.org/packages/9d/eb/2dd98819d9344b9c316826b6fa9c5ed3c7887fdda8df43c8fd2388ba30d9/mr_proper-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "92b4e0d6c033a2b7689e3063cb39d707", "sha256": "866df6f5cfdf55c643cf75a0c9c2eb05e26d9e717160cca24e89bbce28bd6701"}, "downloads": -1, "filename": "mr_proper-0.0.4.tar.gz", "has_sig": false, "md5_digest": "92b4e0d6c033a2b7689e3063cb39d707", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8595, "upload_time": "2019-12-16T12:01:21", "upload_time_iso_8601": "2019-12-16T12:01:21.728433Z", "url": "https://files.pythonhosted.org/packages/ef/b3/b211ade4edd86a16067899a3487bf92cc0ae00f98a92549e7dad29973dc9/mr_proper-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "dd9408ae4bbe5e35dc88fc734d2925cf", "sha256": "35a4bb4bbb8d706fbac75a29488c26dcfca4757e05c9ba6004d76c40e5c69815"}, "downloads": -1, "filename": "mr_proper-0.0.5.tar.gz", "has_sig": false, "md5_digest": "dd9408ae4bbe5e35dc88fc734d2925cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9321, "upload_time": "2020-05-06T06:06:02", "upload_time_iso_8601": "2020-05-06T06:06:02.929329Z", "url": "https://files.pythonhosted.org/packages/4c/51/724885f72873fcf2abdec2a6b73b2b428ebd488b29162ac473b235cfa89e/mr_proper-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dd9408ae4bbe5e35dc88fc734d2925cf", "sha256": "35a4bb4bbb8d706fbac75a29488c26dcfca4757e05c9ba6004d76c40e5c69815"}, "downloads": -1, "filename": "mr_proper-0.0.5.tar.gz", "has_sig": false, "md5_digest": "dd9408ae4bbe5e35dc88fc734d2925cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9321, "upload_time": "2020-05-06T06:06:02", "upload_time_iso_8601": "2020-05-06T06:06:02.929329Z", "url": "https://files.pythonhosted.org/packages/4c/51/724885f72873fcf2abdec2a6b73b2b428ebd488b29162ac473b235cfa89e/mr_proper-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:58 2020"}