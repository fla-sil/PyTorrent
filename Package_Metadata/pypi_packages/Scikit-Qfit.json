{"info": {"author": "Geish Miladinovic", "author_email": "npdata@bigpond.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics"], "description": "===========\nScikit-Qfit\n===========\n\n\nScikit-Qfit is a package that supports fitting gradient orthogonal Q-polynomials to 2D data.\n\n\nDescription\n===========\n\nThis package implements the algorithm described in:\n\n* G W Fobes, `Fitting freeform shapes with orthogonal bases <https://www.osapublishing.org/oe/abstract.cfm?uri=oe-21-16-19061>`_, Opt. Express 21, 19061-19081 (2013)\n\nAdditional project documentation and references for Q- freeform polynomials can be found at:\n`<http://scikit-qfit.readthedocs.org/>`_.\n\nInstallation\n============\n\nThe package can be installed through pip:\n\n  > pip install scikit-qfit\n\nUsage\n=====\n\nTo generate a Q-freeform spectrum from a data map, pass the coordinate arrays x and y and 2-D array of\ndata with shape (x.size,y.size) as arguments to the method qspec(). The azimuthal and radial spectrum\nlimits are set by m_max and n_max respectively.\n\n  >>> import skqfit.qspectre as qf\n  >>> ...\n  >>> qspec = qf.qspec(x, y, zmap, m_max=500, n_max=500)\n\nTo observe the contribution of spectrum components it is necessary to use the sine and cosine elements in the forward processing step.\nAfter modifying the spectrum, an inverse process creates a data map along with the x and y derivatives.\n\n  >>> qs = qf.QSpectrum()\n  >>> qs.data_map(x, y, zmap)\n  >>> a_nm, b_nm = qs.q_fit(mmax, nmax)\n  >>> ... # modify spectrum\n  >>> nmap, dfdx, dfdy = qs.build_map(x, y, a_nm, b_nm, inc_deriv=True)\n\nA 1D trace across the fitted data can also be generated by passing a set of xv, yv arrays that represent the\n(x, y) coordinates.\n\n  >>> zv, dfdx, dfdy = qs.build_profile(xv, yv, a_nm, b_nm, inc_deriv=True)\n\n\nLimitations\n===========\n\nThe Jacobian polynomial calculation required by the algorithm can generate very large numbers which limits spectral resolution\nto a maximum of 1500 for the radial and azimuthal terms (n, m). Using values greater than this can lead to an overflow.\nIf the nominal spectral resolution for a datamap is greater than this limit the data should be filtered prior to processing\nto avoid aliasing.\n\n\nNote that the process is an N^2 algorithm, so doubling the number of radial and azimuthal terms takes four times as long.\n\n\nDependencies\n============\n\nThe package requires numpy and scipy and was tested on Linux with:\n\n * Python 2.7.6\n * numpy 1.14.5\n * scipy 1.0.0\n\nThese python, numpy and scipy versions were available on the Ubuntu 18.04 Linux release at the time of testing.\nThe package has been informally tested with python 3.6 successfully and I am not aware of reason it should not work with\nlater releases of these packages.\n\nAcknowledge\n===========\n\n* Greg Forbes for support with the implementation and validation of the algorithm.\n* Andreas Beutler, `Mahr GmbH <http://www.mahr.com/>`_, for choosing to make this work available as open source.\n\nNote\n====\n\n\nThis project has been set up using PyScaffold 3.2.1. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/npdata/Scikit-qfit", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "Scikit-Qfit", "package_url": "https://pypi.org/project/Scikit-Qfit/", "platform": "any", "project_url": "https://pypi.org/project/Scikit-Qfit/", "project_urls": {"Documentation": "https://pyscaffold.org/", "Homepage": "http://github.com/npdata/Scikit-qfit"}, "release_url": "https://pypi.org/project/Scikit-Qfit/0.1.5/", "requires_dist": ["pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "Fit gradient orthogonal Q-polynomials to 2D data", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Scikit-Qfit is a package that supports fitting gradient orthogonal Q-polynomials to 2D data.</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This package implements the algorithm described in:</p>\n<ul>\n<li>G W Fobes, <a href=\"https://www.osapublishing.org/oe/abstract.cfm?uri=oe-21-16-19061\" rel=\"nofollow\">Fitting freeform shapes with orthogonal bases</a>, Opt. Express 21, 19061-19081 (2013)</li>\n</ul>\n<p>Additional project documentation and references for Q- freeform polynomials can be found at:\n<a href=\"http://scikit-qfit.readthedocs.org/\" rel=\"nofollow\">http://scikit-qfit.readthedocs.org/</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The package can be installed through pip:</p>\n<blockquote>\n&gt; pip install scikit-qfit</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To generate a Q-freeform spectrum from a data map, pass the coordinate arrays x and y and 2-D array of\ndata with shape (x.size,y.size) as arguments to the method qspec(). The azimuthal and radial spectrum\nlimits are set by m_max and n_max respectively.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import skqfit.qspectre as qf\n&gt;&gt;&gt; ...\n&gt;&gt;&gt; qspec = qf.qspec(x, y, zmap, m_max=500, n_max=500)\n</pre>\n</blockquote>\n<p>To observe the contribution of spectrum components it is necessary to use the sine and cosine elements in the forward processing step.\nAfter modifying the spectrum, an inverse process creates a data map along with the x and y derivatives.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; qs = qf.QSpectrum()\n&gt;&gt;&gt; qs.data_map(x, y, zmap)\n&gt;&gt;&gt; a_nm, b_nm = qs.q_fit(mmax, nmax)\n&gt;&gt;&gt; ... # modify spectrum\n&gt;&gt;&gt; nmap, dfdx, dfdy = qs.build_map(x, y, a_nm, b_nm, inc_deriv=True)\n</pre>\n</blockquote>\n<p>A 1D trace across the fitted data can also be generated by passing a set of xv, yv arrays that represent the\n(x, y) coordinates.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; zv, dfdx, dfdy = qs.build_profile(xv, yv, a_nm, b_nm, inc_deriv=True)\n</pre>\n</blockquote>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>The Jacobian polynomial calculation required by the algorithm can generate very large numbers which limits spectral resolution\nto a maximum of 1500 for the radial and azimuthal terms (n, m). Using values greater than this can lead to an overflow.\nIf the nominal spectral resolution for a datamap is greater than this limit the data should be filtered prior to processing\nto avoid aliasing.</p>\n<p>Note that the process is an N^2 algorithm, so doubling the number of radial and azimuthal terms takes four times as long.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>The package requires numpy and scipy and was tested on Linux with:</p>\n<blockquote>\n<ul>\n<li>Python 2.7.6</li>\n<li>numpy 1.14.5</li>\n<li>scipy 1.0.0</li>\n</ul>\n</blockquote>\n<p>These python, numpy and scipy versions were available on the Ubuntu 18.04 Linux release at the time of testing.\nThe package has been informally tested with python 3.6 successfully and I am not aware of reason it should not work with\nlater releases of these packages.</p>\n</div>\n<div id=\"acknowledge\">\n<h2>Acknowledge</h2>\n<ul>\n<li>Greg Forbes for support with the implementation and validation of the algorithm.</li>\n<li>Andreas Beutler, <a href=\"http://www.mahr.com/\" rel=\"nofollow\">Mahr GmbH</a>, for choosing to make this work available as open source.</li>\n</ul>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<p>This project has been set up using PyScaffold 3.2.1. For details and usage\ninformation on PyScaffold see <a href=\"https://pyscaffold.org/\" rel=\"nofollow\">https://pyscaffold.org/</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 5725997, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "92d24947c8e8f5b72e2860e41e39cb77", "sha256": "03fe8be6649a5829ae0e7a163864294640addf39e8d43b309b1d7eb86331115d"}, "downloads": -1, "filename": "Scikit_Qfit-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92d24947c8e8f5b72e2860e41e39cb77", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12958, "upload_time": "2015-11-30T02:14:30", "upload_time_iso_8601": "2015-11-30T02:14:30.242067Z", "url": "https://files.pythonhosted.org/packages/84/85/2de897aec95dbfa4ff0639d7abe2f3529c8cee67c7fd28344733e9631fde/Scikit_Qfit-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0527080ffc1b3f324565984cc5e2244", "sha256": "5bcf075430e81035dc7ed1132f260ff0310e85ebbf77e7ad1b8f225a18a7fe37"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.tar.gz", "has_sig": false, "md5_digest": "e0527080ffc1b3f324565984cc5e2244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33966, "upload_time": "2015-11-30T02:14:52", "upload_time_iso_8601": "2015-11-30T02:14:52.878518Z", "url": "https://files.pythonhosted.org/packages/f5/dc/5b1803f6d2e99379c735cb0c24dc84134dd3f52c1cb12adbbe978a54cf3c/Scikit-Qfit-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f17ce5db7dcfe526cf90932bc95601a4", "sha256": "861b22ff23923a520ac2619b0206d466d978adfd455f31c6079bcf03b915745b"}, "downloads": -1, "filename": "Scikit_Qfit-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f17ce5db7dcfe526cf90932bc95601a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13360, "upload_time": "2015-12-03T09:43:33", "upload_time_iso_8601": "2015-12-03T09:43:33.134904Z", "url": "https://files.pythonhosted.org/packages/92/c9/52d3118fcef296338ca83c0452f34b1a9005327f3d5eb7a06b6cd490bf9d/Scikit_Qfit-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd3b1f8769c397e48c3be1e65ce14e7b", "sha256": "f3a7f724242fa3114e1bb2587f201ab782ff472984b4c1aa69ca487f81826739"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dd3b1f8769c397e48c3be1e65ce14e7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1004010, "upload_time": "2015-12-03T09:43:45", "upload_time_iso_8601": "2015-12-03T09:43:45.396042Z", "url": "https://files.pythonhosted.org/packages/dd/45/a69633d863d9e676bc29e7490a03e5d209476bd2b6ba23144e46ebe57495/Scikit-Qfit-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cf5effbb25510a8679a6ef0af6f0f09f", "sha256": "c9e859fee988d725acacea49fc2066d3a9f6969c1839c8a5f3540b3fcd12e0cb"}, "downloads": -1, "filename": "Scikit_Qfit-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf5effbb25510a8679a6ef0af6f0f09f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13555, "upload_time": "2015-12-04T09:32:05", "upload_time_iso_8601": "2015-12-04T09:32:05.652742Z", "url": "https://files.pythonhosted.org/packages/32/f4/f3f1b37c190b6e4ca7f37f6fcf3eee7a21d36ce7701fa7b5ddaa1a2319e3/Scikit_Qfit-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59f30bbaaf91b27cdfcf4c1c44aa6309", "sha256": "dae2f3cf0668eccbf3dfc26275044d8f79918674049f1766a0fb00379c6e0cfc"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.3.tar.gz", "has_sig": false, "md5_digest": "59f30bbaaf91b27cdfcf4c1c44aa6309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1004388, "upload_time": "2015-12-04T09:32:18", "upload_time_iso_8601": "2015-12-04T09:32:18.584062Z", "url": "https://files.pythonhosted.org/packages/f3/67/5cdbf12307e9b862faada1192f3ae19f49f2970cc94d37c58c7f073c143d/Scikit-Qfit-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1c1d4d866ca9df35f85eaaecf5ee0006", "sha256": "c55acc18f0f36c8cb36523155e4621f0d3d20290030c7f7f273cfc8ceb8a3b3a"}, "downloads": -1, "filename": "Scikit_Qfit-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c1d4d866ca9df35f85eaaecf5ee0006", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19138, "upload_time": "2016-08-26T05:46:18", "upload_time_iso_8601": "2016-08-26T05:46:18.880569Z", "url": "https://files.pythonhosted.org/packages/03/79/940a9c570c20b71a3751f6d022259f1183a7637335d2350bf3f9203e38e1/Scikit_Qfit-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52e3975af4b27fe99d4ff97b1b3a2917", "sha256": "b139bd85ee01588a714b40fb4239a5e2be891aa6f4a6bbd986f46e468b7db4f2"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.4.tar.gz", "has_sig": false, "md5_digest": "52e3975af4b27fe99d4ff97b1b3a2917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2434434, "upload_time": "2016-08-26T05:46:38", "upload_time_iso_8601": "2016-08-26T05:46:38.902996Z", "url": "https://files.pythonhosted.org/packages/28/02/b0f1674e962f2a4267f3025a8cc69512ceec563188be23eab4c42c50b895/Scikit-Qfit-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "82ff7dec17339870c25a32f87dbe9b65", "sha256": "895f2b7b6bd482b78ec41fe6818884a7194a229d3ff183ed4a4ffd97be0e804f"}, "downloads": -1, "filename": "Scikit_Qfit-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82ff7dec17339870c25a32f87dbe9b65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18219, "upload_time": "2019-08-25T04:40:55", "upload_time_iso_8601": "2019-08-25T04:40:55.224366Z", "url": "https://files.pythonhosted.org/packages/fb/4b/5298a71005854b7b5c2802c3cb10e690ecbf6fbc94b6f296d9fc84f4ffb1/Scikit_Qfit-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37f1532a84641e48422e37159742fbf1", "sha256": "17f719f8482ef336c7cd4e492b8ee61f8972b3c58be9c106db8595485dc6236e"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.5.tar.gz", "has_sig": false, "md5_digest": "37f1532a84641e48422e37159742fbf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2435691, "upload_time": "2019-08-25T04:41:07", "upload_time_iso_8601": "2019-08-25T04:41:07.328399Z", "url": "https://files.pythonhosted.org/packages/d2/d5/e45979c6c8e07b313273c198800848036b6b98fee1252cf78bca7765e531/Scikit-Qfit-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82ff7dec17339870c25a32f87dbe9b65", "sha256": "895f2b7b6bd482b78ec41fe6818884a7194a229d3ff183ed4a4ffd97be0e804f"}, "downloads": -1, "filename": "Scikit_Qfit-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82ff7dec17339870c25a32f87dbe9b65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18219, "upload_time": "2019-08-25T04:40:55", "upload_time_iso_8601": "2019-08-25T04:40:55.224366Z", "url": "https://files.pythonhosted.org/packages/fb/4b/5298a71005854b7b5c2802c3cb10e690ecbf6fbc94b6f296d9fc84f4ffb1/Scikit_Qfit-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37f1532a84641e48422e37159742fbf1", "sha256": "17f719f8482ef336c7cd4e492b8ee61f8972b3c58be9c106db8595485dc6236e"}, "downloads": -1, "filename": "Scikit-Qfit-0.1.5.tar.gz", "has_sig": false, "md5_digest": "37f1532a84641e48422e37159742fbf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2435691, "upload_time": "2019-08-25T04:41:07", "upload_time_iso_8601": "2019-08-25T04:41:07.328399Z", "url": "https://files.pythonhosted.org/packages/d2/d5/e45979c6c8e07b313273c198800848036b6b98fee1252cf78bca7765e531/Scikit-Qfit-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:27 2020"}