{"info": {"author": "Ruslan Korniichuk", "author_email": "ruslan.korniichuk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: Public Domain", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Scientific/Engineering", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": ".. contents:: Table of contents\n   :depth: 2\n\nInstallation\n============\nInstall the rk from PyPI\n------------------------\n::\n\n    $ sudo pip install rk\n\nInstall the rk from GitHub\n--------------------------\n::\n\n    $ sudo pip install git+git://github.com/korniichuk/rk#egg=rk\n\nUpgrade the rk from PyPI\n------------------------\n::\n\n    $ sudo pip install -U rk\n\nor::\n\n    $ sudo pip install --upgrade rk\n\n.. important:: The rk set to dafault the `kernels dict`_ ``kernels.json``. Save the current `kernels dict`_ to home dir before upgrade, and replace default `kernels dict`_ file after.\n\nUninstall the rk\n----------------\n::\n\n    $ sudo pip uninstall rk\n\nDevelopment installation\n========================\n::\n\n    $ git clone git://github.com/korniichuk/rk.git\n    $ cd rk\n    $ sudo pip install .\n\nQuickstart\n==========\n\n.. image:: ./img/quickstart_0001_728px.png\n  :alt: quickstart [youtube video]\n  :target: https://youtu.be/joEIPZJUB94\n\n**First**, make sure that you can login to a remote machine without entering password. The most basic form of the command is::\n\n    $ ssh REMOTE_HOST\n\nIf your username is different on a remote machine, you can specify it by using this syntax::\n\n    $ ssh REMOTE_USERNAME@REMOTE_HOST\n\nExample::\n\n    $ ssh albert@192.168.0.1\n\n.. note:: You can `setup SSH for auto login without a password`_ like this: ``$ rk ssh``.\n\n**Second**, install a template of a remote jupyter kernel to `kernels location`_::\n\n    $ rk install-template\n\n**Third**, change the ``kernel.json`` file::\n\n   $ sudo gedit /usr/local/share/jupyter/kernels/template/kernel.json\n\nThe ``kernel.json`` file looks like this::\n\n    {\n     \"argv\": [\n      \"rkscript\",\n      \"python\",\n      \"{connection_file}\",\n      \"remote_username@remote_host\"\n     ],\n     \"display_name\": \"Template\",\n     \"language\": \"python\"\n    }\n\nFor a python2 remote jupyter kernel just change ``remote_username@remote_host``. For example from ``remote_username@remote_host`` to ``albert@192.168.0.1``.\n\n**Fourth**, launch jupyter notebook and check your new remote juputer kernel::\n\n    $ jupyter notebook\n\nor::\n\n    $ ipython notebook\n\nChoose: ``Files -> New -> Template``.\n\nUser guide\n==========\nHelp\n----\nThe standard output for \u2013help::\n\n    $ rk -h\n\nor::\n\n    $ rk --help\n\nFor information on using subcommand \"SUBCOMMAND\", do::\n\n    $ rk SUBCOMMAND -h\n\nor::\n\n    $ rk SUBCOMMAND --help\n\nExample::\n\n    $ rk install -h\n\nVersion\n-------\nThe standard output for \u2013version::\n\n    $ rk -v\n\nor::\n\n    $ rk --version\n\nKernels dict\n------------\n\n.. image:: ./img/user_guide-_kernels_dict_0001_728px.png\n  :alt: user guide: kernels dict [youtube video]\n  :target: https://youtu.be/czh3K4xjVD4\n\nOpen ``kernels.json`` file::\n\n    $ sudo gedit /usr/local/lib/python2.7/dist-packages/rk/config/kernels.json\n\nThe ``kernels.json`` file looks like this::\n\n    {\n     \"template\": {\n      \"display_name\": \"Template\",\n      \"interpreter\": \"python\",\n      \"language\": \"python\",\n      \"remote_host\": \"remote_username@remote_host\"\n     }\n    }\n\nWhere:\n\n* ``template`` -- the name of a remote jupyter kernel,\n\n  * ``display_name`` -- a kernel\u2019s name as it should be displayed in the UI. Unlike the kernel name used in the API, this can contain arbitrary unicode characters [1]_,\n  * ``interpreter`` -- an entry point or an absolute path to language interpreter on a remote machine,\n  * ``language`` -- a name of the language of a kernel. When loading notebooks, if no matching kernelspec key (may differ across machines) is found, a kernel with a matching language will be used. This allows a notebook written on any python or julia kernel to be properly associated with the user's python or julia kernel, even if they aren\u2019t listed under the same name as the author\u2019s [1]_,\n  * ``remote_host`` -- just a remote host or, if your username is different on a remote machine, use this syntax: remote username AT remote host. \n\n.. note:: For checking absolute path to language interpreter on a remote machine use a `which <http://unixhelp.ed.ac.uk/CGI/man-cgi?which>`_ Unix command. For example, for the python3 language on a remote machine: ``$ which python3``.\n\nChange ``kernels.json`` file and add info about your remote jupyter kernels, for example like this::\n\n    {\n     \"albert2\": {\n      \"display_name\": \"Albert Python 2\",\n      \"interpreter\": \"python2\",\n      \"language\": \"python\",\n      \"remote_host\": \"albert@192.168.0.1\"\n     },\n     \"albert3\": {\n      \"display_name\": \"Albert Python 3\",\n      \"interpreter\": \"python3\",\n      \"language\": \"python\",\n      \"remote_host\": \"albert@192.168.0.1\"\n     }\n    }\n\nWhere:\n\n* ``albert2``, ``albert3`` -- the names of a remote jupyter kernels,\n\n  * ``Albert Python 2``, ``Albert Python 3`` -- the display names for the UI,\n  * ``python2``, ``python3`` -- entry points on a remote machine,\n  * ``python`` -- the name of the language of a remote jupyter kernel,\n  * ``albert`` -- the remote username on a remote machine, not similar with a username on a local machine,\n  * ``192.168.0.1`` -- the remote host.\n\nKernels location\n----------------\nJupyter support the system and the user `kernels locations <http://ipython.org/ipython-doc/dev/development/kernels.html#kernel-specs>`_:\n\n+----------+--------------------------------------------------------------------+\n|          |kernels location                                                    |\n+==========+====================================================================+\n|**system**|``/usr/local/share/jupyter/kernels``; ``/usr/share/jupyter/kernels``|\n+----------+--------------------------------------------------------------------+\n|**user**  |``~/.ipython/kernels``                                              |\n+----------+--------------------------------------------------------------------+\n\nThe default kernels location in the rk: ``/usr/local/share/jupyter/kernels``.\n\nChange the default kernels location::\n\n    $ sudo gedit /usr/local/lib/python2.7/dist-packages/rk/config/rk.ini\n\n.. important:: The user kernels location takes priority over the system kernels locations.\n\nShow list of remote jupyter kernels from kernels dict\n-----------------------------------------------------\n::\n\n    $ rk list\n\nInstall a remote jupyter kernel/kernels from kernels dict to kernels location\n-----------------------------------------------------------------------------\n::\n\n    $ rk install KERNEL_NAME [KERNEL_NAME ...]\n\nWhere:\n\n* ``KERNEL_NAME`` -- a name of a remote jupyter kernel in the `kernels dict`_ ``kernels.json``.\n\nExample::\n\n    $ rk install albert2\n    $ rk install albert2 albert3\n\nInstall a template of a remote jupyter kernel to kernels location\n-----------------------------------------------------------------\n::\n\n    $ rk install-template\n\n.. important:: After this subcommand open the  ``kernel.json`` file and change values of dict: ``$ sudo gedit /usr/local/share/jupyter/kernels/template/kernel.json``.\n\nInstall all remote jupyter kernels from kernels dict to kernels location\n------------------------------------------------------------------------\n::\n\n    $ rk install-all\n\nUninstall a remote jupyter kernel/kernels from kernels location\n---------------------------------------------------------------\n::\n\n    $ rk uninstall KERNEL_NAME [KERNEL_NAME ...]\n\nWhere:\n\n* KERNEL_NAME -- a name of installed remote jupyter kernel.\n\nExample::\n\n    $ rk uninstall albert2\n    $ rk uninstall albert2 albert3\n\nUninstall a template of a remote jupyter kernel from kernels location\n---------------------------------------------------------------------\n::\n\n    $ rk uninstall-template\n\nUninstall all jupyter kernels from kernels location\n---------------------------------------------------\n::\n\n    $ rk uninstall-all\n\nSetup SSH for auto login without a password\n-------------------------------------------\n::\n\n    $ rk ssh\n\nIf you are familiar with `ssh-keygen <http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&sektion=1>`_, `ssh-copy-id <http://linux.die.net/man/1/ssh-copy-id>`_ and `ssh-add <http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&sektion=1>`_, this code also setup SSH for auto login without a password [2]_::\n\n    $ ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa\n    $ ssh-copy-id REMOTE_HOST\n    $ eval \"$(ssh-agent -s)\"\n    $ ssh-add ~/.ssh/id_rsa\n\n.. note:: If your username is different on a remote machine, you can specify it by using this syntax: ``$ ssh-copy-id REMOTE_USERNAME@REMOTE_HOST``.\n\nLog files\n---------\nThe default log files location in the rk: ``/tmp/rk/log``. The name of rk log file, for working remote jupyter kernel, look like this: ``bree@192.168.0.1_1879-03-14_11.30.00.txt``. And the log file looks like this::\n\n    date: 1879-03-14 Friday\n    time: 11:30:00\n\n    usernames: bree<->albert\n    remote host: 192.168.0.1\n\n    stdin ports: 37654<->58933\n    hb ports: 53538<->59782\n    iopub ports: 45330<->51989\n    shell ports: 36523<->36107\n    control ports: 50090<->53633\n\n    pids: 16965<->20944\n\n.. note:: Change the default log files location: ``$ sudo gedit /usr/local/lib/python2.7/dist-packages/rk/config/rk.ini``.\n\nThe paramiko log file is available in a local connection file directory. The name of paramiko log file, for working remote jupyter kernel, look like this: ``paramiko-843664c7-798d-4a9e-979c-22d0dc4a6bd5.txt``.\n\nHistory\n=======\nLegend\n------\n\n* **added**\n* corrected\n* *removed*\n\nrk 0.3\n------\n\n* bug in the rk and in the rkscript: an initial component of ``~`` or ``~user`` is not replaced in a paths.\n* bug in the rk: a superuser (root) privileges required for the user kernels location ``~/.ipython/kernels``.\n* **setup SSH for auto login without a password with a \"ssh\" subcommand.**\n* error in the rkscript: list index out of range.\n* **info about working remote jupyter kernel in rk log file.**\n* **paramiko log file in a local connection file dir.**\n* error in the rkscript: no handlers could be found for logger \"paramiko.transport\".\n* local port forwarding in the rkscript via paramiko, not via pexpect.\n\nrk 0.2\n------\n\n* **uninstall all jupyter kernels from kernels location with a \"uninstall-all\" subcommand.**\n* **uninstall a remote jupyter kernel/kernels from kernels location with a \"uninstall\" subcommand.**\n* **install a remote jupyter kernel/kernels from kernels dict to kernels location with a \"install\" subcommand.**\n* **install all remote jupyter kernels from kernels dict to kernels location with a \"install-all\" subcommand.**\n* **show list of remote jupyter kernels from kernels dict with a \"list\" subcommand.**\n\n.. rubric:: Footnotes\n\n.. [1] http://ipython.org/ipython-doc/dev/development/kernels.html#kernel-specs\n.. [2] https://help.github.com/articles/generating-ssh-keys/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/korniichuk/rk/archive/0.3.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/korniichuk/rk", "keywords": "ipython,jupyter,remote kernel,rk,python2", "license": "Public Domain", "maintainer": null, "maintainer_email": null, "name": "rk", "package_url": "https://pypi.org/project/rk/", "platform": "Linux", "project_url": "https://pypi.org/project/rk/", "project_urls": {"Download": "https://github.com/korniichuk/rk/archive/0.3.zip", "Homepage": "https://github.com/korniichuk/rk"}, "release_url": "https://pypi.org/project/rk/0.3b1/", "requires_dist": null, "requires_python": null, "summary": "The remote jupyter kernel/kernels administration utility", "version": "0.3b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id6\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#install-the-rk-from-pypi\" id=\"id7\" rel=\"nofollow\">Install the rk from PyPI</a></li>\n<li><a href=\"#install-the-rk-from-github\" id=\"id8\" rel=\"nofollow\">Install the rk from GitHub</a></li>\n<li><a href=\"#upgrade-the-rk-from-pypi\" id=\"id9\" rel=\"nofollow\">Upgrade the rk from PyPI</a></li>\n<li><a href=\"#uninstall-the-rk\" id=\"id10\" rel=\"nofollow\">Uninstall the rk</a></li>\n</ul>\n</li>\n<li><a href=\"#development-installation\" id=\"id11\" rel=\"nofollow\">Development installation</a></li>\n<li><a href=\"#quickstart\" id=\"id12\" rel=\"nofollow\">Quickstart</a></li>\n<li><a href=\"#user-guide\" id=\"id13\" rel=\"nofollow\">User guide</a><ul>\n<li><a href=\"#help\" id=\"id14\" rel=\"nofollow\">Help</a></li>\n<li><a href=\"#version\" id=\"id15\" rel=\"nofollow\">Version</a></li>\n<li><a href=\"#kernels-dict\" id=\"id16\" rel=\"nofollow\">Kernels dict</a></li>\n<li><a href=\"#kernels-location\" id=\"id17\" rel=\"nofollow\">Kernels location</a></li>\n<li><a href=\"#show-list-of-remote-jupyter-kernels-from-kernels-dict\" id=\"id18\" rel=\"nofollow\">Show list of remote jupyter kernels from kernels dict</a></li>\n<li><a href=\"#install-a-remote-jupyter-kernel-kernels-from-kernels-dict-to-kernels-location\" id=\"id19\" rel=\"nofollow\">Install a remote jupyter kernel/kernels from kernels dict to kernels location</a></li>\n<li><a href=\"#install-a-template-of-a-remote-jupyter-kernel-to-kernels-location\" id=\"id20\" rel=\"nofollow\">Install a template of a remote jupyter kernel to kernels location</a></li>\n<li><a href=\"#install-all-remote-jupyter-kernels-from-kernels-dict-to-kernels-location\" id=\"id21\" rel=\"nofollow\">Install all remote jupyter kernels from kernels dict to kernels location</a></li>\n<li><a href=\"#uninstall-a-remote-jupyter-kernel-kernels-from-kernels-location\" id=\"id22\" rel=\"nofollow\">Uninstall a remote jupyter kernel/kernels from kernels location</a></li>\n<li><a href=\"#uninstall-a-template-of-a-remote-jupyter-kernel-from-kernels-location\" id=\"id23\" rel=\"nofollow\">Uninstall a template of a remote jupyter kernel from kernels location</a></li>\n<li><a href=\"#uninstall-all-jupyter-kernels-from-kernels-location\" id=\"id24\" rel=\"nofollow\">Uninstall all jupyter kernels from kernels location</a></li>\n<li><a href=\"#setup-ssh-for-auto-login-without-a-password\" id=\"id25\" rel=\"nofollow\">Setup SSH for auto login without a password</a></li>\n<li><a href=\"#log-files\" id=\"id26\" rel=\"nofollow\">Log files</a></li>\n</ul>\n</li>\n<li><a href=\"#history\" id=\"id27\" rel=\"nofollow\">History</a><ul>\n<li><a href=\"#legend\" id=\"id28\" rel=\"nofollow\">Legend</a></li>\n<li><a href=\"#rk-0-3\" id=\"id29\" rel=\"nofollow\">rk 0.3</a></li>\n<li><a href=\"#rk-0-2\" id=\"id30\" rel=\"nofollow\">rk 0.2</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"install-the-rk-from-pypi\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Install the rk from PyPI</a></h3>\n<pre>$ sudo pip install rk\n</pre>\n</div>\n<div id=\"install-the-rk-from-github\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Install the rk from GitHub</a></h3>\n<pre>$ sudo pip install git+git://github.com/korniichuk/rk#egg=rk\n</pre>\n</div>\n<div id=\"upgrade-the-rk-from-pypi\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Upgrade the rk from PyPI</a></h3>\n<pre>$ sudo pip install -U rk\n</pre>\n<p>or:</p>\n<pre>$ sudo pip install --upgrade rk\n</pre>\n<div>\n<p>Important</p>\n<p>The rk set to dafault the <a href=\"#kernels-dict\" rel=\"nofollow\">kernels dict</a> <tt>kernels.json</tt>. Save the current <a href=\"#kernels-dict\" rel=\"nofollow\">kernels dict</a> to home dir before upgrade, and replace default <a href=\"#kernels-dict\" rel=\"nofollow\">kernels dict</a> file after.</p>\n</div>\n</div>\n<div id=\"uninstall-the-rk\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Uninstall the rk</a></h3>\n<pre>$ sudo pip uninstall rk\n</pre>\n</div>\n</div>\n<div id=\"development-installation\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Development installation</a></h2>\n<pre>$ git clone git://github.com/korniichuk/rk.git\n$ cd rk\n$ sudo pip install .\n</pre>\n</div>\n<div id=\"quickstart\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Quickstart</a></h2>\n<a href=\"https://youtu.be/joEIPZJUB94\" rel=\"nofollow\"><img alt=\"quickstart [youtube video]\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0af9c3fea91c9e6e6a7149810d4ef9fe45de5d84/2e2f696d672f717569636b73746172745f303030315f37323870782e706e67\"></a>\n<p><strong>First</strong>, make sure that you can login to a remote machine without entering password. The most basic form of the command is:</p>\n<pre>$ ssh REMOTE_HOST\n</pre>\n<p>If your username is different on a remote machine, you can specify it by using this syntax:</p>\n<pre>$ ssh REMOTE_USERNAME@REMOTE_HOST\n</pre>\n<p>Example:</p>\n<pre>$ ssh albert@192.168.0.1\n</pre>\n<div>\n<p>Note</p>\n<p>You can <a href=\"#setup-ssh-for-auto-login-without-a-password\" rel=\"nofollow\">setup SSH for auto login without a password</a> like this: <tt>$ rk ssh</tt>.</p>\n</div>\n<p><strong>Second</strong>, install a template of a remote jupyter kernel to <a href=\"#kernels-location\" rel=\"nofollow\">kernels location</a>:</p>\n<pre>$ rk install-template\n</pre>\n<p><strong>Third</strong>, change the <tt>kernel.json</tt> file:</p>\n<pre>$ sudo gedit /usr/local/share/jupyter/kernels/template/kernel.json\n</pre>\n<p>The <tt>kernel.json</tt> file looks like this:</p>\n<pre>{\n \"argv\": [\n  \"rkscript\",\n  \"python\",\n  \"{connection_file}\",\n  \"remote_username@remote_host\"\n ],\n \"display_name\": \"Template\",\n \"language\": \"python\"\n}\n</pre>\n<p>For a python2 remote jupyter kernel just change <tt>remote_username@remote_host</tt>. For example from <tt>remote_username@remote_host</tt> to <tt>albert@192.168.0.1</tt>.</p>\n<p><strong>Fourth</strong>, launch jupyter notebook and check your new remote juputer kernel:</p>\n<pre>$ jupyter notebook\n</pre>\n<p>or:</p>\n<pre>$ ipython notebook\n</pre>\n<p>Choose: <tt>Files <span class=\"pre\">-&gt;</span> New <span class=\"pre\">-&gt;</span> Template</tt>.</p>\n</div>\n<div id=\"user-guide\">\n<h2><a href=\"#id13\" rel=\"nofollow\">User guide</a></h2>\n<div id=\"help\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Help</a></h3>\n<p>The standard output for \u2013help:</p>\n<pre>$ rk -h\n</pre>\n<p>or:</p>\n<pre>$ rk --help\n</pre>\n<p>For information on using subcommand \u201cSUBCOMMAND\u201d, do:</p>\n<pre>$ rk SUBCOMMAND -h\n</pre>\n<p>or:</p>\n<pre>$ rk SUBCOMMAND --help\n</pre>\n<p>Example:</p>\n<pre>$ rk install -h\n</pre>\n</div>\n<div id=\"version\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Version</a></h3>\n<p>The standard output for \u2013version:</p>\n<pre>$ rk -v\n</pre>\n<p>or:</p>\n<pre>$ rk --version\n</pre>\n</div>\n<div id=\"kernels-dict\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Kernels dict</a></h3>\n<a href=\"https://youtu.be/czh3K4xjVD4\" rel=\"nofollow\"><img alt=\"user guide: kernels dict [youtube video]\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50e38712eacd480d9aa8c579879da73491644db9/2e2f696d672f757365725f67756964652d5f6b65726e656c735f646963745f303030315f37323870782e706e67\"></a>\n<p>Open <tt>kernels.json</tt> file:</p>\n<pre>$ sudo gedit /usr/local/lib/python2.7/dist-packages/rk/config/kernels.json\n</pre>\n<p>The <tt>kernels.json</tt> file looks like this:</p>\n<pre>{\n \"template\": {\n  \"display_name\": \"Template\",\n  \"interpreter\": \"python\",\n  \"language\": \"python\",\n  \"remote_host\": \"remote_username@remote_host\"\n }\n}\n</pre>\n<p>Where:</p>\n<ul>\n<li><tt>template</tt> \u2013 the name of a remote jupyter kernel,<ul>\n<li><tt>display_name</tt> \u2013 a kernel\u2019s name as it should be displayed in the UI. Unlike the kernel name used in the API, this can contain arbitrary unicode characters <a href=\"#id4\" id=\"id1\" rel=\"nofollow\">[1]</a>,</li>\n<li><tt>interpreter</tt> \u2013 an entry point or an absolute path to language interpreter on a remote machine,</li>\n<li><tt>language</tt> \u2013 a name of the language of a kernel. When loading notebooks, if no matching kernelspec key (may differ across machines) is found, a kernel with a matching language will be used. This allows a notebook written on any python or julia kernel to be properly associated with the user\u2019s python or julia kernel, even if they aren\u2019t listed under the same name as the author\u2019s <a href=\"#id4\" id=\"id2\" rel=\"nofollow\">[1]</a>,</li>\n<li><tt>remote_host</tt> \u2013 just a remote host or, if your username is different on a remote machine, use this syntax: remote username AT remote host.</li>\n</ul>\n</li>\n</ul>\n<div>\n<p>Note</p>\n<p>For checking absolute path to language interpreter on a remote machine use a <a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?which\" rel=\"nofollow\">which</a> Unix command. For example, for the python3 language on a remote machine: <tt>$ which python3</tt>.</p>\n</div>\n<p>Change <tt>kernels.json</tt> file and add info about your remote jupyter kernels, for example like this:</p>\n<pre>{\n \"albert2\": {\n  \"display_name\": \"Albert Python 2\",\n  \"interpreter\": \"python2\",\n  \"language\": \"python\",\n  \"remote_host\": \"albert@192.168.0.1\"\n },\n \"albert3\": {\n  \"display_name\": \"Albert Python 3\",\n  \"interpreter\": \"python3\",\n  \"language\": \"python\",\n  \"remote_host\": \"albert@192.168.0.1\"\n }\n}\n</pre>\n<p>Where:</p>\n<ul>\n<li><tt>albert2</tt>, <tt>albert3</tt> \u2013 the names of a remote jupyter kernels,<ul>\n<li><tt>Albert Python 2</tt>, <tt>Albert Python 3</tt> \u2013 the display names for the UI,</li>\n<li><tt>python2</tt>, <tt>python3</tt> \u2013 entry points on a remote machine,</li>\n<li><tt>python</tt> \u2013 the name of the language of a remote jupyter kernel,</li>\n<li><tt>albert</tt> \u2013 the remote username on a remote machine, not similar with a username on a local machine,</li>\n<li><tt>192.168.0.1</tt> \u2013 the remote host.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"kernels-location\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Kernels location</a></h3>\n<p>Jupyter support the system and the user <a href=\"http://ipython.org/ipython-doc/dev/development/kernels.html#kernel-specs\" rel=\"nofollow\">kernels locations</a>:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>kernels location</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><strong>system</strong></td>\n<td><tt>/usr/local/share/jupyter/kernels</tt>; <tt>/usr/share/jupyter/kernels</tt></td>\n</tr>\n<tr><td><strong>user</strong></td>\n<td><tt><span class=\"pre\">~/.ipython/kernels</span></tt></td>\n</tr>\n</tbody>\n</table>\n<p>The default kernels location in the rk: <tt>/usr/local/share/jupyter/kernels</tt>.</p>\n<p>Change the default kernels location:</p>\n<pre>$ sudo gedit /usr/local/lib/python2.7/dist-packages/rk/config/rk.ini\n</pre>\n<div>\n<p>Important</p>\n<p>The user kernels location takes priority over the system kernels locations.</p>\n</div>\n</div>\n<div id=\"show-list-of-remote-jupyter-kernels-from-kernels-dict\">\n<h3><a href=\"#id18\" rel=\"nofollow\">Show list of remote jupyter kernels from kernels dict</a></h3>\n<pre>$ rk list\n</pre>\n</div>\n<div id=\"install-a-remote-jupyter-kernel-kernels-from-kernels-dict-to-kernels-location\">\n<h3><a href=\"#id19\" rel=\"nofollow\">Install a remote jupyter kernel/kernels from kernels dict to kernels location</a></h3>\n<pre>$ rk install KERNEL_NAME [KERNEL_NAME ...]\n</pre>\n<p>Where:</p>\n<ul>\n<li><tt>KERNEL_NAME</tt> \u2013 a name of a remote jupyter kernel in the <a href=\"#kernels-dict\" rel=\"nofollow\">kernels dict</a> <tt>kernels.json</tt>.</li>\n</ul>\n<p>Example:</p>\n<pre>$ rk install albert2\n$ rk install albert2 albert3\n</pre>\n</div>\n<div id=\"install-a-template-of-a-remote-jupyter-kernel-to-kernels-location\">\n<h3><a href=\"#id20\" rel=\"nofollow\">Install a template of a remote jupyter kernel to kernels location</a></h3>\n<pre>$ rk install-template\n</pre>\n<div>\n<p>Important</p>\n<p>After this subcommand open the  <tt>kernel.json</tt> file and change values of dict: <tt>$ sudo gedit /usr/local/share/jupyter/kernels/template/kernel.json</tt>.</p>\n</div>\n</div>\n<div id=\"install-all-remote-jupyter-kernels-from-kernels-dict-to-kernels-location\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Install all remote jupyter kernels from kernels dict to kernels location</a></h3>\n<pre>$ rk install-all\n</pre>\n</div>\n<div id=\"uninstall-a-remote-jupyter-kernel-kernels-from-kernels-location\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Uninstall a remote jupyter kernel/kernels from kernels location</a></h3>\n<pre>$ rk uninstall KERNEL_NAME [KERNEL_NAME ...]\n</pre>\n<p>Where:</p>\n<ul>\n<li>KERNEL_NAME \u2013 a name of installed remote jupyter kernel.</li>\n</ul>\n<p>Example:</p>\n<pre>$ rk uninstall albert2\n$ rk uninstall albert2 albert3\n</pre>\n</div>\n<div id=\"uninstall-a-template-of-a-remote-jupyter-kernel-from-kernels-location\">\n<h3><a href=\"#id23\" rel=\"nofollow\">Uninstall a template of a remote jupyter kernel from kernels location</a></h3>\n<pre>$ rk uninstall-template\n</pre>\n</div>\n<div id=\"uninstall-all-jupyter-kernels-from-kernels-location\">\n<h3><a href=\"#id24\" rel=\"nofollow\">Uninstall all jupyter kernels from kernels location</a></h3>\n<pre>$ rk uninstall-all\n</pre>\n</div>\n<div id=\"setup-ssh-for-auto-login-without-a-password\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Setup SSH for auto login without a password</a></h3>\n<pre>$ rk ssh\n</pre>\n<p>If you are familiar with <a href=\"http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1\" rel=\"nofollow\">ssh-keygen</a>, <a href=\"http://linux.die.net/man/1/ssh-copy-id\" rel=\"nofollow\">ssh-copy-id</a> and <a href=\"http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1\" rel=\"nofollow\">ssh-add</a>, this code also setup SSH for auto login without a password <a href=\"#id5\" id=\"id3\" rel=\"nofollow\">[2]</a>:</p>\n<pre>$ ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa\n$ ssh-copy-id REMOTE_HOST\n$ eval \"$(ssh-agent -s)\"\n$ ssh-add ~/.ssh/id_rsa\n</pre>\n<div>\n<p>Note</p>\n<p>If your username is different on a remote machine, you can specify it by using this syntax: <tt>$ <span class=\"pre\">ssh-copy-id</span> REMOTE_USERNAME@REMOTE_HOST</tt>.</p>\n</div>\n</div>\n<div id=\"log-files\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Log files</a></h3>\n<p>The default log files location in the rk: <tt>/tmp/rk/log</tt>. The name of rk log file, for working remote jupyter kernel, look like this: <tt><span class=\"pre\">bree@192.168.0.1_1879-03-14_11.30.00.txt</span></tt>. And the log file looks like this:</p>\n<pre>date: 1879-03-14 Friday\ntime: 11:30:00\n\nusernames: bree&lt;-&gt;albert\nremote host: 192.168.0.1\n\nstdin ports: 37654&lt;-&gt;58933\nhb ports: 53538&lt;-&gt;59782\niopub ports: 45330&lt;-&gt;51989\nshell ports: 36523&lt;-&gt;36107\ncontrol ports: 50090&lt;-&gt;53633\n\npids: 16965&lt;-&gt;20944\n</pre>\n<div>\n<p>Note</p>\n<p>Change the default log files location: <tt>$ sudo gedit <span class=\"pre\">/usr/local/lib/python2.7/dist-packages/rk/config/rk.ini</span></tt>.</p>\n</div>\n<p>The paramiko log file is available in a local connection file directory. The name of paramiko log file, for working remote jupyter kernel, look like this: <tt><span class=\"pre\">paramiko-843664c7-798d-4a9e-979c-22d0dc4a6bd5.txt</span></tt>.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2><a href=\"#id27\" rel=\"nofollow\">History</a></h2>\n<div id=\"legend\">\n<h3><a href=\"#id28\" rel=\"nofollow\">Legend</a></h3>\n<ul>\n<li><strong>added</strong></li>\n<li>corrected</li>\n<li><em>removed</em></li>\n</ul>\n</div>\n<div id=\"rk-0-3\">\n<h3><a href=\"#id29\" rel=\"nofollow\">rk 0.3</a></h3>\n<ul>\n<li>bug in the rk and in the rkscript: an initial component of <tt>~</tt> or <tt>~user</tt> is not replaced in a paths.</li>\n<li>bug in the rk: a superuser (root) privileges required for the user kernels location <tt><span class=\"pre\">~/.ipython/kernels</span></tt>.</li>\n<li><strong>setup SSH for auto login without a password with a \u201cssh\u201d subcommand.</strong></li>\n<li>error in the rkscript: list index out of range.</li>\n<li><strong>info about working remote jupyter kernel in rk log file.</strong></li>\n<li><strong>paramiko log file in a local connection file dir.</strong></li>\n<li>error in the rkscript: no handlers could be found for logger \u201cparamiko.transport\u201d.</li>\n<li>local port forwarding in the rkscript via paramiko, not via pexpect.</li>\n</ul>\n</div>\n<div id=\"rk-0-2\">\n<h3><a href=\"#id30\" rel=\"nofollow\">rk 0.2</a></h3>\n<ul>\n<li><strong>uninstall all jupyter kernels from kernels location with a \u201cuninstall-all\u201d subcommand.</strong></li>\n<li><strong>uninstall a remote jupyter kernel/kernels from kernels location with a \u201cuninstall\u201d subcommand.</strong></li>\n<li><strong>install a remote jupyter kernel/kernels from kernels dict to kernels location with a \u201cinstall\u201d subcommand.</strong></li>\n<li><strong>install all remote jupyter kernels from kernels dict to kernels location with a \u201cinstall-all\u201d subcommand.</strong></li>\n<li><strong>show list of remote jupyter kernels from kernels dict with a \u201clist\u201d subcommand.</strong></li>\n</ul>\n<p>Footnotes</p>\n<table id=\"id4\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id2\" rel=\"nofollow\">2</a>)</em> <a href=\"http://ipython.org/ipython-doc/dev/development/kernels.html#kernel-specs\" rel=\"nofollow\">http://ipython.org/ipython-doc/dev/development/kernels.html#kernel-specs</a></td></tr>\n</tbody>\n</table>\n<table id=\"id5\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[2]</a></td><td><a href=\"https://help.github.com/articles/generating-ssh-keys/\" rel=\"nofollow\">https://help.github.com/articles/generating-ssh-keys/</a></td></tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1783490, "releases": {"0.2a1": [{"comment_text": "", "digests": {"md5": "4989a08293f19452535a53ec9bf9949e", "sha256": "de1be49137be433719eedeb5577efb192d176dd2551fe4a22b0b0bad5061954b"}, "downloads": -1, "filename": "rk-0.2a1.tar.gz", "has_sig": false, "md5_digest": "4989a08293f19452535a53ec9bf9949e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15278, "upload_time": "2015-05-20T11:52:58", "upload_time_iso_8601": "2015-05-20T11:52:58.397763Z", "url": "https://files.pythonhosted.org/packages/7e/2c/5bfbb6451c183bb61b474c1cda6cda2b8578878e784df5d846702fd24f0b/rk-0.2a1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "169a058800bd1464e303d3a4a7c23671", "sha256": "564a2064ce5a8e9e4c1116629a20f9315288ddba3c5bf5ac877f77d9609baa89"}, "downloads": -1, "filename": "rk-0.2a1.zip", "has_sig": false, "md5_digest": "169a058800bd1464e303d3a4a7c23671", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19414, "upload_time": "2015-05-20T11:52:54", "upload_time_iso_8601": "2015-05-20T11:52:54.923147Z", "url": "https://files.pythonhosted.org/packages/a6/dd/386c8de93f20c4ac7be078bf9abb18de04f4a25e661329f05035f71887e0/rk-0.2a1.zip", "yanked": false}], "0.3b1": [{"comment_text": "", "digests": {"md5": "89ef7c11cdbb55fd68584d2ce568890d", "sha256": "76c36a5bef05279fd74ba4263f072cd6094e98a649922064f5bf91d1f3f8706e"}, "downloads": -1, "filename": "rk-0.3b1.tar.gz", "has_sig": false, "md5_digest": "89ef7c11cdbb55fd68584d2ce568890d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141891, "upload_time": "2015-10-23T21:19:16", "upload_time_iso_8601": "2015-10-23T21:19:16.746918Z", "url": "https://files.pythonhosted.org/packages/17/e0/8defbb4c4ce0ad73c0860137739c42b6c542f6dfb7e87fd9924521d786f5/rk-0.3b1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "499fc567fab671767f0950a3ad477bf0", "sha256": "81e79edf16a82408f64604dd30903d48edef1f458df5ba5e2b97f3158cc8cc8f"}, "downloads": -1, "filename": "rk-0.3b1.zip", "has_sig": false, "md5_digest": "499fc567fab671767f0950a3ad477bf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144522, "upload_time": "2015-10-23T21:19:11", "upload_time_iso_8601": "2015-10-23T21:19:11.524102Z", "url": "https://files.pythonhosted.org/packages/5c/30/f5d0a51e59e7186f52a80b48e956dd305c9caeabb41e8c4ad469d4adbaba/rk-0.3b1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89ef7c11cdbb55fd68584d2ce568890d", "sha256": "76c36a5bef05279fd74ba4263f072cd6094e98a649922064f5bf91d1f3f8706e"}, "downloads": -1, "filename": "rk-0.3b1.tar.gz", "has_sig": false, "md5_digest": "89ef7c11cdbb55fd68584d2ce568890d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141891, "upload_time": "2015-10-23T21:19:16", "upload_time_iso_8601": "2015-10-23T21:19:16.746918Z", "url": "https://files.pythonhosted.org/packages/17/e0/8defbb4c4ce0ad73c0860137739c42b6c542f6dfb7e87fd9924521d786f5/rk-0.3b1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "499fc567fab671767f0950a3ad477bf0", "sha256": "81e79edf16a82408f64604dd30903d48edef1f458df5ba5e2b97f3158cc8cc8f"}, "downloads": -1, "filename": "rk-0.3b1.zip", "has_sig": false, "md5_digest": "499fc567fab671767f0950a3ad477bf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144522, "upload_time": "2015-10-23T21:19:11", "upload_time_iso_8601": "2015-10-23T21:19:11.524102Z", "url": "https://files.pythonhosted.org/packages/5c/30/f5d0a51e59e7186f52a80b48e956dd305c9caeabb41e8c4ad469d4adbaba/rk-0.3b1.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:21 2020"}