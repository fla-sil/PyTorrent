{"info": {"author": "Luke Lovett", "author_email": "mongodb-user@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======\nPyMODM\n======\n\n\n.. image:: https://readthedocs.org/projects/pymodm/badge/?version=stable\n   :alt: Documentation\n   :target: http://pymodm.readthedocs.io/en/stable/?badge=stable\n\n.. image:: https://travis-ci.org/mongodb/pymodm.svg?branch=master\n   :alt: View build status\n   :target: https://travis-ci.org/mongodb/pymodm\n\n.. image:: https://badges.gitter.im/mongodb/pymodm.svg\n   :alt: Join the chat at https://gitter.im/mongodb/pymodm\n   :target: https://gitter.im/mongodb/pymodm?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nA generic ODM around PyMongo_, the MongoDB Python driver. PyMODM works on Python\n2.7 as well as Python 3.3 and up. To learn more, you can browse the `official\ndocumentation`_ or take a look at some `examples`_.\n\n.. _PyMongo: https://pypi.python.org/pypi/pymongo\n.. _official documentation: http://pymodm.readthedocs.io/en/stable\n.. _examples: https://github.com/mongodb/pymodm/tree/master/example\n\nWhy PyMODM?\n===========\n\nPyMODM is a \"core\" ODM, meaning that it provides simple, extensible\nfunctionality that can be leveraged by other libraries to target platforms like\nDjango. At the same time, PyMODM is powerful enough to be used for developing\napplications on its own. Because MongoDB engineers are involved in developing\nand maintaining the project, PyMODM will also be quick to adopt new MongoDB\nfeatures.\n\nSupport / Feedback\n==================\n\nFor issues with, questions about, or feedback for PyMODM, please look into\nour `support channels <http://www.mongodb.org/about/support>`_. Please do not\nemail any of the PyMODM developers directly with issues or questions -\nyou're more likely to get an answer on the `MongoDB Community Forums <https://developer.mongodb.com/community/forums/tags/c/drivers-odms-connectors/7/pymodm-odm>`_.\n\nBugs / Feature Requests\n=======================\n\nThink you\u2019ve found a bug? Want to see a new feature in PyMODM? Please open\na case in our issue management tool, JIRA:\n\n- `Create an account and login <https://jira.mongodb.org>`_.\n- Navigate to `the PYMODM project <https://jira.mongodb.org/browse/PYMODM>`_.\n- Click **Create Issue** - Please provide as much information as possible about the issue type and how to reproduce it.\n\nBug reports in JIRA for all driver projects (e.g. PYMODM, PYTHON, JAVA) and the\nCore Server (i.e. SERVER) project are **public**.\n\nHow To Ask For Help\n-------------------\n\nPlease include all of the following information when opening an issue:\n\n- Detailed steps to reproduce the problem, including full traceback, if possible.\n- The exact python version used, with patch level::\n\n  $ python -c \"import sys; print(sys.version)\"\n\n- The exact version of PyMODM used, with patch level::\n\n  $ python -c \"import pymodm; print(pymodm.version)\"\n\n- The PyMongo version used, with patch level::\n\n  $ python -c \"import pymongo; print(pymongo.version)\"\n\n- The operating system and version (e.g. Windows 7, OSX 10.8, ...)\n- Web framework or asynchronous network library used, if any, with version (e.g.\n  Django 1.7, mod_wsgi 4.3.0, gevent 1.0.1, Tornado 4.0.2, ...)\n\nSecurity Vulnerabilities\n------------------------\n\nIf you\u2019ve identified a security vulnerability in a driver or any other\nMongoDB project, please report it according to the `instructions here\n<http://docs.mongodb.org/manual/tutorial/create-a-vulnerability-report>`_.\n\nExample\n=======\n\nHere's a basic example of how to define some models and connect them to MongoDB:\n\n.. code-block:: python\n\n  from pymongo import TEXT\n  from pymongo.operations import IndexModel\n  from pymodm import connect, fields, MongoModel, EmbeddedMongoModel\n\n\n  # Connect to MongoDB first. PyMODM supports all URI options supported by\n  # PyMongo. Make sure also to specify a database in the connection string:\n  connect('mongodb://localhost:27017/myApp')\n\n\n  # Now let's define some Models.\n  class User(MongoModel):\n      # Use 'email' as the '_id' field in MongoDB.\n      email = fields.EmailField(primary_key=True)\n      fname = fields.CharField()\n      lname = fields.CharField()\n\n\n  class BlogPost(MongoModel):\n      # This field references the User model above.\n      # It's stored as a bson.objectid.ObjectId in MongoDB.\n      author = fields.ReferenceField(User)\n      title = fields.CharField(max_length=100)\n      content = fields.CharField()\n      tags = fields.ListField(fields.CharField(max_length=20))\n      # These Comment objects will be stored inside each Post document in the\n      # database.\n      comments = fields.EmbeddedDocumentListField('Comment')\n\n      class Meta:\n          # Text index on content can be used for text search.\n          indexes = [IndexModel([('content', TEXT)])]\n\n  # This is an \"embedded\" model and will be stored as a sub-document.\n  class Comment(EmbeddedMongoModel):\n      author = fields.ReferenceField(User)\n      body = fields.CharField()\n      vote_score = fields.IntegerField(min_value=0)\n\n\n  # Start the blog.\n  # We need to save these objects before referencing them later.\n  han_solo = User('mongoblogger@reallycoolmongostuff.com', 'Han', 'Solo').save()\n  chewbacca = User(\n      'someoneelse@reallycoolmongostuff.com', 'Chewbacca', 'Thomas').save()\n\n\n  post = BlogPost(\n      # Since this is a ReferenceField, we had to save han_solo first.\n      author=han_solo,\n      title=\"Five Crazy Health Foods Jabba Eats.\",\n      content=\"...\",\n      tags=['alien health', 'slideshow', 'jabba', 'huts'],\n      comments=[\n          Comment(author=chewbacca, body='Rrrrrrrrrrrrrrrr!', vote_score=42)\n      ]\n  ).save()\n\n\n  # Find objects using familiar MongoDB-style syntax.\n  slideshows = BlogPost.objects.raw({'tags': 'slideshow'})\n\n  # Only retrieve the 'title' field.\n  slideshow_titles = slideshows.only('title')\n\n  # u'Five Crazy Health Foods Jabba Eats.'\n  print(slideshow_titles.first().title)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "pymodm", "package_url": "https://pypi.org/project/pymodm/", "platform": "any", "project_url": "https://pypi.org/project/pymodm/", "project_urls": null, "release_url": "https://pypi.org/project/pymodm/0.4.3/", "requires_dist": ["pymongo (<4.0,>=3.4)", "ipaddress", "Pillow ; extra == 'images'"], "requires_python": "", "summary": "PyMODM is a generic ODM on top of PyMongo.", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://pymodm.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6217d078e1b04ee83973e2a49d266a1cbd9b6ff/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796d6f646d2f62616467652f3f76657273696f6e3d737461626c65\"></a>\n<a href=\"https://travis-ci.org/mongodb/pymodm\" rel=\"nofollow\"><img alt=\"View build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b70db8d6185bf5a2675deff2ca2910cf424bf3a0/68747470733a2f2f7472617669732d63692e6f72672f6d6f6e676f64622f70796d6f646d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://gitter.im/mongodb/pymodm?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/mongodb/pymodm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81c2280610a427db06d8a9f855560c5263cea8c1/68747470733a2f2f6261646765732e6769747465722e696d2f6d6f6e676f64622f70796d6f646d2e737667\"></a>\n<p>A generic ODM around <a href=\"https://pypi.python.org/pypi/pymongo\" rel=\"nofollow\">PyMongo</a>, the MongoDB Python driver. PyMODM works on Python\n2.7 as well as Python 3.3 and up. To learn more, you can browse the <a href=\"http://pymodm.readthedocs.io/en/stable\" rel=\"nofollow\">official\ndocumentation</a> or take a look at some <a href=\"https://github.com/mongodb/pymodm/tree/master/example\" rel=\"nofollow\">examples</a>.</p>\n<div id=\"why-pymodm\">\n<h2>Why PyMODM?</h2>\n<p>PyMODM is a \u201ccore\u201d ODM, meaning that it provides simple, extensible\nfunctionality that can be leveraged by other libraries to target platforms like\nDjango. At the same time, PyMODM is powerful enough to be used for developing\napplications on its own. Because MongoDB engineers are involved in developing\nand maintaining the project, PyMODM will also be quick to adopt new MongoDB\nfeatures.</p>\n</div>\n<div id=\"support-feedback\">\n<h2>Support / Feedback</h2>\n<p>For issues with, questions about, or feedback for PyMODM, please look into\nour <a href=\"http://www.mongodb.org/about/support\" rel=\"nofollow\">support channels</a>. Please do not\nemail any of the PyMODM developers directly with issues or questions -\nyou\u2019re more likely to get an answer on the <a href=\"https://developer.mongodb.com/community/forums/tags/c/drivers-odms-connectors/7/pymodm-odm\" rel=\"nofollow\">MongoDB Community Forums</a>.</p>\n</div>\n<div id=\"bugs-feature-requests\">\n<h2>Bugs / Feature Requests</h2>\n<p>Think you\u2019ve found a bug? Want to see a new feature in PyMODM? Please open\na case in our issue management tool, JIRA:</p>\n<ul>\n<li><a href=\"https://jira.mongodb.org\" rel=\"nofollow\">Create an account and login</a>.</li>\n<li>Navigate to <a href=\"https://jira.mongodb.org/browse/PYMODM\" rel=\"nofollow\">the PYMODM project</a>.</li>\n<li>Click <strong>Create Issue</strong> - Please provide as much information as possible about the issue type and how to reproduce it.</li>\n</ul>\n<p>Bug reports in JIRA for all driver projects (e.g. PYMODM, PYTHON, JAVA) and the\nCore Server (i.e. SERVER) project are <strong>public</strong>.</p>\n<div id=\"how-to-ask-for-help\">\n<h3>How To Ask For Help</h3>\n<p>Please include all of the following information when opening an issue:</p>\n<ul>\n<li><p>Detailed steps to reproduce the problem, including full traceback, if possible.</p>\n</li>\n<li><p>The exact python version used, with patch level:</p>\n<pre>$ python -c \"import sys; print(sys.version)\"\n</pre>\n</li>\n<li><p>The exact version of PyMODM used, with patch level:</p>\n<pre>$ python -c \"import pymodm; print(pymodm.version)\"\n</pre>\n</li>\n<li><p>The PyMongo version used, with patch level:</p>\n<pre>$ python -c \"import pymongo; print(pymongo.version)\"\n</pre>\n</li>\n<li><p>The operating system and version (e.g. Windows 7, OSX 10.8, \u2026)</p>\n</li>\n<li><p>Web framework or asynchronous network library used, if any, with version (e.g.\nDjango 1.7, mod_wsgi 4.3.0, gevent 1.0.1, Tornado 4.0.2, \u2026)</p>\n</li>\n</ul>\n</div>\n<div id=\"security-vulnerabilities\">\n<h3>Security Vulnerabilities</h3>\n<p>If you\u2019ve identified a security vulnerability in a driver or any other\nMongoDB project, please report it according to the <a href=\"http://docs.mongodb.org/manual/tutorial/create-a-vulnerability-report\" rel=\"nofollow\">instructions here</a>.</p>\n</div>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Here\u2019s a basic example of how to define some models and connect them to MongoDB:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymongo</span> <span class=\"kn\">import</span> <span class=\"n\">TEXT</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymongo.operations</span> <span class=\"kn\">import</span> <span class=\"n\">IndexModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymodm</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">MongoModel</span><span class=\"p\">,</span> <span class=\"n\">EmbeddedMongoModel</span>\n\n\n<span class=\"c1\"># Connect to MongoDB first. PyMODM supports all URI options supported by</span>\n<span class=\"c1\"># PyMongo. Make sure also to specify a database in the connection string:</span>\n<span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'mongodb://localhost:27017/myApp'</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Now let's define some Models.</span>\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">MongoModel</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Use 'email' as the '_id' field in MongoDB.</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">(</span><span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n    <span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BlogPost</span><span class=\"p\">(</span><span class=\"n\">MongoModel</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This field references the User model above.</span>\n    <span class=\"c1\"># It's stored as a bson.objectid.ObjectId in MongoDB.</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ReferenceField</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n    <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ListField</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">))</span>\n    <span class=\"c1\"># These Comment objects will be stored inside each Post document in the</span>\n    <span class=\"c1\"># database.</span>\n    <span class=\"n\">comments</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">EmbeddedDocumentListField</span><span class=\"p\">(</span><span class=\"s1\">'Comment'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Text index on content can be used for text search.</span>\n        <span class=\"n\">indexes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">IndexModel</span><span class=\"p\">([(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span> <span class=\"n\">TEXT</span><span class=\"p\">)])]</span>\n\n<span class=\"c1\"># This is an \"embedded\" model and will be stored as a sub-document.</span>\n<span class=\"k\">class</span> <span class=\"nc\">Comment</span><span class=\"p\">(</span><span class=\"n\">EmbeddedMongoModel</span><span class=\"p\">):</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ReferenceField</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n    <span class=\"n\">vote_score</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Start the blog.</span>\n<span class=\"c1\"># We need to save these objects before referencing them later.</span>\n<span class=\"n\">han_solo</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'mongoblogger@reallycoolmongostuff.com'</span><span class=\"p\">,</span> <span class=\"s1\">'Han'</span><span class=\"p\">,</span> <span class=\"s1\">'Solo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"n\">chewbacca</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span>\n    <span class=\"s1\">'someoneelse@reallycoolmongostuff.com'</span><span class=\"p\">,</span> <span class=\"s1\">'Chewbacca'</span><span class=\"p\">,</span> <span class=\"s1\">'Thomas'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"n\">BlogPost</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Since this is a ReferenceField, we had to save han_solo first.</span>\n    <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"n\">han_solo</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Five Crazy Health Foods Jabba Eats.\"</span><span class=\"p\">,</span>\n    <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n    <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'alien health'</span><span class=\"p\">,</span> <span class=\"s1\">'slideshow'</span><span class=\"p\">,</span> <span class=\"s1\">'jabba'</span><span class=\"p\">,</span> <span class=\"s1\">'huts'</span><span class=\"p\">],</span>\n    <span class=\"n\">comments</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Comment</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">=</span><span class=\"n\">chewbacca</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'Rrrrrrrrrrrrrrrr!'</span><span class=\"p\">,</span> <span class=\"n\">vote_score</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Find objects using familiar MongoDB-style syntax.</span>\n<span class=\"n\">slideshows</span> <span class=\"o\">=</span> <span class=\"n\">BlogPost</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">raw</span><span class=\"p\">({</span><span class=\"s1\">'tags'</span><span class=\"p\">:</span> <span class=\"s1\">'slideshow'</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Only retrieve the 'title' field.</span>\n<span class=\"n\">slideshow_titles</span> <span class=\"o\">=</span> <span class=\"n\">slideshows</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">(</span><span class=\"s1\">'title'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># u'Five Crazy Health Foods Jabba Eats.'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slideshow_titles</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7139616, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "40c4137a47a56668cb469a2d1eda2742", "sha256": "ef5394f5f0a014f810c1d20c0917b0d366138118152de5dc80166cc546704ab8"}, "downloads": -1, "filename": "pymodm-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "40c4137a47a56668cb469a2d1eda2742", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 47119, "upload_time": "2016-08-15T18:51:24", "upload_time_iso_8601": "2016-08-15T18:51:24.897684Z", "url": "https://files.pythonhosted.org/packages/25/ec/826556475816b0a7099a1752ec24967f09f0b15aa327b736d1c0f6fc07c5/pymodm-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de94ec8d62cc82d0a85e1487cb495901", "sha256": "87afeb4518bb73451d60cf9be8c6f5dc3c7aaa83cfa047f4f26b84231223a649"}, "downloads": -1, "filename": "pymodm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "de94ec8d62cc82d0a85e1487cb495901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45257, "upload_time": "2016-08-15T18:51:22", "upload_time_iso_8601": "2016-08-15T18:51:22.051024Z", "url": "https://files.pythonhosted.org/packages/23/4f/ca766bd36ee8e33743141f5d02a3774de6bd0839a0955dcc82e891cb889c/pymodm-0.1.0.tar.gz", "yanked": false}], "0.1.0.dev0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "f58cb5431fd441e7dff5349a68ee9da3", "sha256": "7d3453ab25b66debcdc17e8c016f0f66c40d3360dbdd87ef40ea8dcb89a332fe"}, "downloads": -1, "filename": "pymodm-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f58cb5431fd441e7dff5349a68ee9da3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 47891, "upload_time": "2016-11-01T17:10:48", "upload_time_iso_8601": "2016-11-01T17:10:48.365786Z", "url": "https://files.pythonhosted.org/packages/11/5d/b945cda534dc7a4712c83b6e2ba328619f002546981a5d932ff593c522a0/pymodm-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80936657f4c2a9020e6fa819a82f6f39", "sha256": "32e3d4d83d762b1e9152f74118c608b069db9058fcc38d8d2cfed21a8fd91de0"}, "downloads": -1, "filename": "pymodm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "80936657f4c2a9020e6fa819a82f6f39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46210, "upload_time": "2016-11-01T17:10:45", "upload_time_iso_8601": "2016-11-01T17:10:45.423166Z", "url": "https://files.pythonhosted.org/packages/3f/8e/2beece115ab7f38eb387d9c86a3c751619c560642173a3e0fd06ef8c5123/pymodm-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ba9a539537d688a5e65b92e79c762962", "sha256": "fff506d5d1fe062bd1011697fa9627031eb7dc046ff1bf6d210860650f293a60"}, "downloads": -1, "filename": "pymodm-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ba9a539537d688a5e65b92e79c762962", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 48805, "upload_time": "2016-12-05T22:02:16", "upload_time_iso_8601": "2016-12-05T22:02:16.351029Z", "url": "https://files.pythonhosted.org/packages/ed/6d/612219f6c8a63a8816537c1b45ddca01ebfe027b31ffa24c57db4e2098ce/pymodm-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f4b97de67308eb68db7da7d1adde71", "sha256": "236a819ebfc5029e0e149c8bcf8f03f59385db27dcd25209fe99dd9ff8122c64"}, "downloads": -1, "filename": "pymodm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "07f4b97de67308eb68db7da7d1adde71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47891, "upload_time": "2016-12-05T22:02:13", "upload_time_iso_8601": "2016-12-05T22:02:13.876782Z", "url": "https://files.pythonhosted.org/packages/07/ba/4e5eef2e507eb7584edf131a9cf53d2a3a6b1c298537a763f082cff58906/pymodm-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "1bc590a5e3de8417d9b5384149136ccb", "sha256": "e1413fefe4aefea59563016cc691555b952582ba293088f96bbb4ba52279e761"}, "downloads": -1, "filename": "pymodm-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "1bc590a5e3de8417d9b5384149136ccb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 50532, "upload_time": "2017-03-10T23:55:29", "upload_time_iso_8601": "2017-03-10T23:55:29.340479Z", "url": "https://files.pythonhosted.org/packages/17/b8/550b881305a5a191d50b4cf46e8070e0d0a882cd0d60372186303c1af82b/pymodm-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d276503608d9da548bc6d697b0d46815", "sha256": "7a3ce44f13c6bb6357e02dcec034773a4a330f6e76ef925d801e5d1a4f2c1bc2"}, "downloads": -1, "filename": "pymodm-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d276503608d9da548bc6d697b0d46815", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51532, "upload_time": "2017-03-10T23:56:09", "upload_time_iso_8601": "2017-03-10T23:56:09.126216Z", "url": "https://files.pythonhosted.org/packages/55/e0/29d7100f3ed050608f6a90fbeea0fdd74afb62b28bfed7d12ae40a3a0e0e/pymodm-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "c6fbfc351b4c43ab756ab22c0ec626f4", "sha256": "906223905aa6df2fd35b5f72b0b3dac85ba7f83884beeee73f7e411ca53388ee"}, "downloads": -1, "filename": "pymodm-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "c6fbfc351b4c43ab756ab22c0ec626f4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 47905, "upload_time": "2018-08-07T23:29:00", "upload_time_iso_8601": "2018-08-07T23:29:00.270284Z", "url": "https://files.pythonhosted.org/packages/f6/69/265112fb097d14accacb773212758a3ee211b6cc4da0c1ff5df6bdf39189/pymodm-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8233411f11cfe1cfc73517474f520127", "sha256": "28998a32dd5c3099b9c45f88b7cb2af449bd66bf1d38a9777c452023984309f6"}, "downloads": -1, "filename": "pymodm-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8233411f11cfe1cfc73517474f520127", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47899, "upload_time": "2018-08-07T23:29:01", "upload_time_iso_8601": "2018-08-07T23:29:01.954516Z", "url": "https://files.pythonhosted.org/packages/0b/6b/bc9f7e09434971af48d99f2fffb697ca046057ab107a26524ec019e3f8cb/pymodm-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "316bcc3e0295891f49d72414435b7353", "sha256": "eeb2e4c586d98dda8d199abe27b11791a5f7d5b52d43f041919e71cb61282f9d"}, "downloads": -1, "filename": "pymodm-0.4.1.tar.gz", "has_sig": false, "md5_digest": "316bcc3e0295891f49d72414435b7353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54570, "upload_time": "2018-08-07T23:29:03", "upload_time_iso_8601": "2018-08-07T23:29:03.597967Z", "url": "https://files.pythonhosted.org/packages/ad/f0/1fd034526193389f9e9905de08b3eef32dcea42b99230fcfb25968f09979/pymodm-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "f48d962869e381bb9423ea14fba14916", "sha256": "0a83ebf43c480231198d1ae5ece3f8c773544026b257e231b6892b1c5d4ffe79"}, "downloads": -1, "filename": "pymodm-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "f48d962869e381bb9423ea14fba14916", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 48166, "upload_time": "2019-11-11T23:19:02", "upload_time_iso_8601": "2019-11-11T23:19:02.022610Z", "url": "https://files.pythonhosted.org/packages/aa/f3/91a41439263c55c421d95ee5c3d0846d1779070959b67c69c3f9f01234af/pymodm-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99593ff820a95cc81c17f6d827afb067", "sha256": "bad93799bde373b866e9c36a4087fd1a13a9f63418100d7a4ce4f3266d8ca06a"}, "downloads": -1, "filename": "pymodm-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "99593ff820a95cc81c17f6d827afb067", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48153, "upload_time": "2019-11-11T23:19:04", "upload_time_iso_8601": "2019-11-11T23:19:04.073387Z", "url": "https://files.pythonhosted.org/packages/9b/0e/4997020e6958b8fd61b22f26f93ad5ef237ac9fd785ca2a3badd0d7dd633/pymodm-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39d6f5b53097d6880c47f8f303997066", "sha256": "dce5404128150df5a6598a916bbbeb021e36624d16e2624f34e6e94dffac4501"}, "downloads": -1, "filename": "pymodm-0.4.2.tar.gz", "has_sig": false, "md5_digest": "39d6f5b53097d6880c47f8f303997066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55237, "upload_time": "2019-11-11T23:19:06", "upload_time_iso_8601": "2019-11-11T23:19:06.070780Z", "url": "https://files.pythonhosted.org/packages/0e/ac/780dc738971216d7d1a19d8c263efde66b0e1e8398687f7773dbe4abf723/pymodm-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "cdf1a4f6214865f8aaf6012eb0b4d50f", "sha256": "98e790bb457a7faf4e0aca71ff8a13d584eb6d9075db98202c8f1ce334675e55"}, "downloads": -1, "filename": "pymodm-0.4.3-py2-none-any.whl", "has_sig": false, "md5_digest": "cdf1a4f6214865f8aaf6012eb0b4d50f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 48219, "upload_time": "2020-04-30T18:52:35", "upload_time_iso_8601": "2020-04-30T18:52:35.390286Z", "url": "https://files.pythonhosted.org/packages/30/d2/26765629b9d984fc10a0f5abf2b3551c847c691d4f57b375205c06996dc4/pymodm-0.4.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afe2f4ed48a451b66a259dd5959dcc18", "sha256": "697b23d93695fdbaccc995912aecb203d1f1d8f8bff7ad90a9180f6a2986d084"}, "downloads": -1, "filename": "pymodm-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "afe2f4ed48a451b66a259dd5959dcc18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48212, "upload_time": "2020-04-30T18:52:36", "upload_time_iso_8601": "2020-04-30T18:52:36.784996Z", "url": "https://files.pythonhosted.org/packages/15/50/d250e457eeb4bd49a9a0d26bbb5918a15689dac3b5b0d594beec11e30090/pymodm-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30cd1871de72e00fade686cb1dcf880", "sha256": "b9fc352dabca1c10bc9342167ab322ce2898b68a79c42e19f0baa7d5b7578ea1"}, "downloads": -1, "filename": "pymodm-0.4.3.tar.gz", "has_sig": false, "md5_digest": "e30cd1871de72e00fade686cb1dcf880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55402, "upload_time": "2020-04-30T18:52:38", "upload_time_iso_8601": "2020-04-30T18:52:38.133593Z", "url": "https://files.pythonhosted.org/packages/d0/68/d2001233b684b8d32e988188c85def43a2ef6a4b1e8b074942c0c0120aff/pymodm-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cdf1a4f6214865f8aaf6012eb0b4d50f", "sha256": "98e790bb457a7faf4e0aca71ff8a13d584eb6d9075db98202c8f1ce334675e55"}, "downloads": -1, "filename": "pymodm-0.4.3-py2-none-any.whl", "has_sig": false, "md5_digest": "cdf1a4f6214865f8aaf6012eb0b4d50f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 48219, "upload_time": "2020-04-30T18:52:35", "upload_time_iso_8601": "2020-04-30T18:52:35.390286Z", "url": "https://files.pythonhosted.org/packages/30/d2/26765629b9d984fc10a0f5abf2b3551c847c691d4f57b375205c06996dc4/pymodm-0.4.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afe2f4ed48a451b66a259dd5959dcc18", "sha256": "697b23d93695fdbaccc995912aecb203d1f1d8f8bff7ad90a9180f6a2986d084"}, "downloads": -1, "filename": "pymodm-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "afe2f4ed48a451b66a259dd5959dcc18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48212, "upload_time": "2020-04-30T18:52:36", "upload_time_iso_8601": "2020-04-30T18:52:36.784996Z", "url": "https://files.pythonhosted.org/packages/15/50/d250e457eeb4bd49a9a0d26bbb5918a15689dac3b5b0d594beec11e30090/pymodm-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30cd1871de72e00fade686cb1dcf880", "sha256": "b9fc352dabca1c10bc9342167ab322ce2898b68a79c42e19f0baa7d5b7578ea1"}, "downloads": -1, "filename": "pymodm-0.4.3.tar.gz", "has_sig": false, "md5_digest": "e30cd1871de72e00fade686cb1dcf880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55402, "upload_time": "2020-04-30T18:52:38", "upload_time_iso_8601": "2020-04-30T18:52:38.133593Z", "url": "https://files.pythonhosted.org/packages/d0/68/d2001233b684b8d32e988188c85def43a2ef6a4b1e8b074942c0c0120aff/pymodm-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:56 2020"}