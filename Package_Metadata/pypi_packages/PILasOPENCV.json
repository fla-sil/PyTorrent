{"info": {"author": "Andreas Bunkahle", "author_email": "abunkahle@t-online.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# PILasOPENCV\nWrapper for Image functions which are used and called in the manner of the famous PIL or pillow module but work internally only with OpenCV and numpy. Since there is no truetype font support for Python in OpenCV (it exists for the OpenCV C libraries) this module might be useful since it supports all kind of truetype fonts to be integrated in images. It depends on the library freetype-py for this. See below for more details on this. You can also load and save gif images into the numpy format thanks to the gif2numpy and numpy2gif modules. OpenCV does not support the gif format.\n\nThis library can be used to migrate old PIL projects to OPENCV or if for some reason PIL or pillow cannot be used on your machine or your platform.\n\nYou install this module with\n\n    pip install PILasOPENCV\n    \nor you download the module and install it with:\n\n    python setup.py install\n    \nand then you change the import command at the beginning of your project files from\n\n    from PIL import Image\n    \nor \n\n    import PIL.Image as Image\n    \nto\n\n    import PILasOPENCV as Image\n    \nInternally no PIL or Pillow library is used anymore but the opencv and numpy module for doing all the graphical work.\n\nSample script:\n\n    from __future__ import print_function\n\t\n    import PILasOPENCV as Image\n\t\n    # was: from PIL import Image\n\n    im = Image.new(\"RGB\", (512, 512), \"red\")\n\t\n    im.show()\n\n    testfile = \"lena.jpg\"\n\t\n    im = Image.open(testfile)\n\t\n    print (type(im))\n\t\n    # JPEG (512, 512) RGB\n\t\n    im.save(\"lena.bmp\")\n\t\n    im.show()\n\t\n    small = im.copy()\n\t\n    thsize = (128, 128)\n\t\n    small.thumbnail(thsize)\n\t\n    small.show()\n\t\n    box = (100, 100, 400, 400)\n\t\n    region = im.crop(box)\n\t\n    print(\"region\",region.format, region.size, region.mode)\n\t\n    # region = region.transpose(Image.ROTATE_180)\n\t\n    region = region.transpose(Image.ROTATE_180)\n\t\n    region.show()\n\t\n    im.paste(region, box)\n\t\n    im.show()\n     \n# Export and import CV2/Numpy images\nYou can export and import cv2/numpy images from and to an Image instance with the commands getim() and setim():\n    \n    from __future__ import print_function\n\t\n    import PILasOPENCV as Image\n\t\n    import cv2\n\t\n    im = Image.open(\"lena.jpg\")\n\t\n    numpy_image = im.getim()\n\t\n    print(type(numpy_image), numpy_image.shape)\n\t\n    cv2.imshow(\"numpy_image\", numpy_image)\n\t\n    cv2.waitKey(0)\n\t\n    # import numpy image\n\t\n    new_im = Image.new(\"RGB\", (512, 512), \"black\")\n\t\n    new_im.setim(numpy_image)\n\t\n    new_im.show()\n    \n# Usage of truetype fonts in PILasOPENCV\nPILasOPENCV supports the use of truetype fonts with Python. The python module freetype-py needs to be installed for this. To import and use truetype fonts you can do the following:\n\n\tfrom __future__ import print_function\n\t\n\timport PILasOPENCV as Image\n\t\n\timport PILasOPENCV as ImageDraw\n\t\n\timport PILasOPENCV as ImageFont\n\t\n\timport cv2\n\t\n\t# was: from PIL import Image, ImageDraw, ImageFont\n\n\tfont = ImageFont.truetype(\"arial.ttf\", 18)\n\t\n\tprint(font)\n\t\n\tim = Image.open(\"lena.jpg\")\n\t\n\tdraw = ImageDraw.Draw(im)\n\t\n\ttext = \"Lena's image\"\n\t\n\tdraw.text((249,455), text, font=font, fill=(0, 0, 0))\n\t\n\tprint(ImageFont.getsize(text, font))\n\t\n\tmask = ImageFont.getmask(text, font)\n\t\n\t# in PIL this code is written differently:\n\t\n\t# print(font.getsize(text))\n\t\n\t# mask = font.getmask(text)\n\t\n\tprint(type(mask))\n\t\n\tcv2.imshow(\"mask\", mask)\n\t\n\tim.show()\n    \n# Attention:\nThis is a quite stable development version. Still use with care. Testing has been done to it and tests can be found in the tests directory.\n\n# TO DO:\nThe most used classes and methods like ImageMode, ImageColor, ImageChops are implemented but have not been fully tested. Image, ImageFont, ImageDraw, ImageGrab and ImageFilter have been tested with several testcases.\nSome functions/methods of these classes are missing and are not implemented though. \nIf you want to import them, import them with:\n\n    import PILasOPENCV as ImageMode\n\t\n    import PILasOPENCV as ImageColor\n\t\n    import PILasOPENCV as ImageDraw\n\t\n    import PILasOPENCV as ImageFilter\n\t\n    import PILasOPENCV as ImageChops\n\t\n    import PILasOPENCV as ImageFont\n\t\n    import PILasOPENCV as ImageGrab\n    \nThe PIL classes ImageEnhance, ImageFile, ImageFileIO, ImageMath, ImageOps, ImagePath, ImageQt, ImageSequence, ImageStat, ImageTk, ImageWin, ImageGL have not been implemented.\n    \nIf you want to use the methods getsize and getmask from ImageFont you have to use them differently:\n\n\tfrom __future__ import print_function\n\t\n\timport PILasOPENCV as Image\n\t\n\timport PILasOPENCV as ImageDraw\n\t\n\timport PILasOPENCV as ImageFont\n\t\n\timport cv2\n\t\n\t# from PIL import Image, ImageDraw, ImageFont\n    \n\tfont = ImageFont.truetype(\"ARIAL.ttf\".lower(), 18)\n\t\n\tim = Image.open(\"lena.jpg\")\n\t\n\tdraw = ImageDraw.Draw(im)\n\t\n\ttext = \"Lena's image\"\n\t\n\tdraw.text((249,455), text, font=font, fill=(0, 0, 0))\n\t\n\t# in PIL:\n\t\n\t# print(font.getsize(text))\n\t\n\t# mask = font.getmask(text)\n\t\n\tprint(ImageFont.getsize(text, font))\n\t\n\tmask = ImageFont.getmask(text, font)\n\t\n\tprint(type(mask))\n\t\n\tcv2.imshow(\"mask\", mask)\n\t\n\tim.show()\n\nIf you want to fork this project, feel free to do so. Give me a message in case you are forking and improving the code.\nabunkahle@t-online.de\n\n# Dependencies:\nYou need to have numpy, opencv, freetype, mss, gif2numpy and numpy2gif installed to run the module completely.\nInstall it with \n\n     pip install numpy opencv-python freetype-py mss gif2numpy numpy2gif\n\n# Version history:\n\n2.7: Bugfix when drawing text and lines or other draw objects the lines were not drawn, fixed\n\n2.6: Bugfix for method show: Old windows were not deleted so it came to display errors, fixed\n\n2.5: Bugfixes for coordinates which were given as float instead of integers when drawing polygons, texts, lines, points, rectangles; bugfix for composite when alphamask and images had not the same amount of channels; bugfix in floodfill when value was given as single integer\n\n2.4: Caught several exceptions in case dependencies modules are not installed you can still work with the basic functions, ImageDraw method bitmap implemented, ImageChops method screen implemented, saves now single or multiple frames in gif files \n\n2.3: Updated the module for gif2numpy Version 1.2\n\n2.2: Bugfix for Python3 on file objects, multiple frames from gifs can be loaded now and can be retrieved with seek(frame)\n\n2.1: though OpenCV does not support gif images, PILasOPENCV now can load gif images by courtesy of the library gif2numpy\n\n2.0: disabled ImageGrab.grabclipboard() in case it throws exceptions which happens e.g. on Ubuntu/Linux\n\n1.9: disabled ImageGrab.grabclipboard() which throw exceptions on some platforms\n\n1.8: ImageGrab.grab() and ImageGrab.grabclipboard() implemented with dependency on mss\n\n1.7: fixed fromarray\n\n1.6: fixed frombytes, getdata, putdata and caught exception in case freetype-py is not installed or dll is missing \n\n# Licence\nMIT", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bunkahle/PILasOPENCV", "keywords": "PIL OPENCV wrapper", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PILasOPENCV", "package_url": "https://pypi.org/project/PILasOPENCV/", "platform": "any", "project_url": "https://pypi.org/project/PILasOPENCV/", "project_urls": {"Homepage": "https://github.com/bunkahle/PILasOPENCV"}, "release_url": "https://pypi.org/project/PILasOPENCV/2.7/", "requires_dist": null, "requires_python": "", "summary": "Wrapper for Image functions which are used and called in the manner of the famous PIL/Pillow module but work internally with OpenCV.", "version": "2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># PILasOPENCV\nWrapper for Image functions which are used and called in the manner of the famous PIL or pillow module but work internally only with OpenCV and numpy. Since there is no truetype font support for Python in OpenCV (it exists for the OpenCV C libraries) this module might be useful since it supports all kind of truetype fonts to be integrated in images. It depends on the library freetype-py for this. See below for more details on this. You can also load and save gif images into the numpy format thanks to the gif2numpy and numpy2gif modules. OpenCV does not support the gif format.</p>\n<p>This library can be used to migrate old PIL projects to OPENCV or if for some reason PIL or pillow cannot be used on your machine or your platform.</p>\n<p>You install this module with</p>\n<blockquote>\npip install PILasOPENCV</blockquote>\n<p>or you download the module and install it with:</p>\n<blockquote>\npython setup.py install</blockquote>\n<p>and then you change the import command at the beginning of your project files from</p>\n<blockquote>\nfrom PIL import Image</blockquote>\n<p>or</p>\n<blockquote>\nimport PIL.Image as Image</blockquote>\n<p>to</p>\n<blockquote>\nimport PILasOPENCV as Image</blockquote>\n<p>Internally no PIL or Pillow library is used anymore but the opencv and numpy module for doing all the graphical work.</p>\n<p>Sample script:</p>\n<blockquote>\n<p>from __future__ import print_function</p>\n<p>import PILasOPENCV as Image</p>\n<p># was: from PIL import Image</p>\n<p>im = Image.new(\u201cRGB\u201d, (512, 512), \u201cred\u201d)</p>\n<p>im.show()</p>\n<p>testfile = \u201clena.jpg\u201d</p>\n<p>im = Image.open(testfile)</p>\n<p>print (type(im))</p>\n<p># JPEG (512, 512) RGB</p>\n<p>im.save(\u201clena.bmp\u201d)</p>\n<p>im.show()</p>\n<p>small = im.copy()</p>\n<p>thsize = (128, 128)</p>\n<p>small.thumbnail(thsize)</p>\n<p>small.show()</p>\n<p>box = (100, 100, 400, 400)</p>\n<p>region = im.crop(box)</p>\n<p>print(\u201cregion\u201d,region.format, region.size, region.mode)</p>\n<p># region = region.transpose(Image.ROTATE_180)</p>\n<p>region = region.transpose(Image.ROTATE_180)</p>\n<p>region.show()</p>\n<p>im.paste(region, box)</p>\n<p>im.show()</p>\n</blockquote>\n<p># Export and import CV2/Numpy images\nYou can export and import cv2/numpy images from and to an Image instance with the commands getim() and setim():</p>\n<blockquote>\n<p>from __future__ import print_function</p>\n<p>import PILasOPENCV as Image</p>\n<p>import cv2</p>\n<p>im = Image.open(\u201clena.jpg\u201d)</p>\n<p>numpy_image = im.getim()</p>\n<p>print(type(numpy_image), numpy_image.shape)</p>\n<p>cv2.imshow(\u201cnumpy_image\u201d, numpy_image)</p>\n<p>cv2.waitKey(0)</p>\n<p># import numpy image</p>\n<p>new_im = Image.new(\u201cRGB\u201d, (512, 512), \u201cblack\u201d)</p>\n<p>new_im.setim(numpy_image)</p>\n<p>new_im.show()</p>\n</blockquote>\n<p># Usage of truetype fonts in PILasOPENCV\nPILasOPENCV supports the use of truetype fonts with Python. The python module freetype-py needs to be installed for this. To import and use truetype fonts you can do the following:</p>\n<blockquote>\n<p>from __future__ import print_function</p>\n<p>import PILasOPENCV as Image</p>\n<p>import PILasOPENCV as ImageDraw</p>\n<p>import PILasOPENCV as ImageFont</p>\n<p>import cv2</p>\n<p># was: from PIL import Image, ImageDraw, ImageFont</p>\n<p>font = ImageFont.truetype(\u201carial.ttf\u201d, 18)</p>\n<p>print(font)</p>\n<p>im = Image.open(\u201clena.jpg\u201d)</p>\n<p>draw = ImageDraw.Draw(im)</p>\n<p>text = \u201cLena\u2019s image\u201d</p>\n<p>draw.text((249,455), text, font=font, fill=(0, 0, 0))</p>\n<p>print(ImageFont.getsize(text, font))</p>\n<p>mask = ImageFont.getmask(text, font)</p>\n<p># in PIL this code is written differently:</p>\n<p># print(font.getsize(text))</p>\n<p># mask = font.getmask(text)</p>\n<p>print(type(mask))</p>\n<p>cv2.imshow(\u201cmask\u201d, mask)</p>\n<p>im.show()</p>\n</blockquote>\n<p># Attention:\nThis is a quite stable development version. Still use with care. Testing has been done to it and tests can be found in the tests directory.</p>\n<p># TO DO:\nThe most used classes and methods like ImageMode, ImageColor, ImageChops are implemented but have not been fully tested. Image, ImageFont, ImageDraw, ImageGrab and ImageFilter have been tested with several testcases.\nSome functions/methods of these classes are missing and are not implemented though.\nIf you want to import them, import them with:</p>\n<blockquote>\n<p>import PILasOPENCV as ImageMode</p>\n<p>import PILasOPENCV as ImageColor</p>\n<p>import PILasOPENCV as ImageDraw</p>\n<p>import PILasOPENCV as ImageFilter</p>\n<p>import PILasOPENCV as ImageChops</p>\n<p>import PILasOPENCV as ImageFont</p>\n<p>import PILasOPENCV as ImageGrab</p>\n</blockquote>\n<p>The PIL classes ImageEnhance, ImageFile, ImageFileIO, ImageMath, ImageOps, ImagePath, ImageQt, ImageSequence, ImageStat, ImageTk, ImageWin, ImageGL have not been implemented.</p>\n<p>If you want to use the methods getsize and getmask from ImageFont you have to use them differently:</p>\n<blockquote>\n<p>from __future__ import print_function</p>\n<p>import PILasOPENCV as Image</p>\n<p>import PILasOPENCV as ImageDraw</p>\n<p>import PILasOPENCV as ImageFont</p>\n<p>import cv2</p>\n<p># from PIL import Image, ImageDraw, ImageFont</p>\n<p>font = ImageFont.truetype(\u201cARIAL.ttf\u201d.lower(), 18)</p>\n<p>im = Image.open(\u201clena.jpg\u201d)</p>\n<p>draw = ImageDraw.Draw(im)</p>\n<p>text = \u201cLena\u2019s image\u201d</p>\n<p>draw.text((249,455), text, font=font, fill=(0, 0, 0))</p>\n<p># in PIL:</p>\n<p># print(font.getsize(text))</p>\n<p># mask = font.getmask(text)</p>\n<p>print(ImageFont.getsize(text, font))</p>\n<p>mask = ImageFont.getmask(text, font)</p>\n<p>print(type(mask))</p>\n<p>cv2.imshow(\u201cmask\u201d, mask)</p>\n<p>im.show()</p>\n</blockquote>\n<p>If you want to fork this project, feel free to do so. Give me a message in case you are forking and improving the code.\n<a href=\"mailto:abunkahle%40t-online.de\">abunkahle<span>@</span>t-online<span>.</span>de</a></p>\n<p># Dependencies:\nYou need to have numpy, opencv, freetype, mss, gif2numpy and numpy2gif installed to run the module completely.\nInstall it with</p>\n<blockquote>\npip install numpy opencv-python freetype-py mss gif2numpy numpy2gif</blockquote>\n<p># Version history:</p>\n<p>2.7: Bugfix when drawing text and lines or other draw objects the lines were not drawn, fixed</p>\n<p>2.6: Bugfix for method show: Old windows were not deleted so it came to display errors, fixed</p>\n<p>2.5: Bugfixes for coordinates which were given as float instead of integers when drawing polygons, texts, lines, points, rectangles; bugfix for composite when alphamask and images had not the same amount of channels; bugfix in floodfill when value was given as single integer</p>\n<p>2.4: Caught several exceptions in case dependencies modules are not installed you can still work with the basic functions, ImageDraw method bitmap implemented, ImageChops method screen implemented, saves now single or multiple frames in gif files</p>\n<p>2.3: Updated the module for gif2numpy Version 1.2</p>\n<p>2.2: Bugfix for Python3 on file objects, multiple frames from gifs can be loaded now and can be retrieved with seek(frame)</p>\n<p>2.1: though OpenCV does not support gif images, PILasOPENCV now can load gif images by courtesy of the library gif2numpy</p>\n<p>2.0: disabled ImageGrab.grabclipboard() in case it throws exceptions which happens e.g. on Ubuntu/Linux</p>\n<p>1.9: disabled ImageGrab.grabclipboard() which throw exceptions on some platforms</p>\n<p>1.8: ImageGrab.grab() and ImageGrab.grabclipboard() implemented with dependency on mss</p>\n<p>1.7: fixed fromarray</p>\n<p>1.6: fixed frombytes, getdata, putdata and caught exception in case freetype-py is not installed or dll is missing</p>\n<p># Licence\nMIT</p>\n\n          </div>"}, "last_serial": 5516396, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2686c472e21811c2a0584d0e3bd0b56e", "sha256": "e738ac64adcb808dddccbdb50b8cca2a0fed582db5c5c45f12344384f449e176"}, "downloads": -1, "filename": "PILasOPENCV-1.0.zip", "has_sig": false, "md5_digest": "2686c472e21811c2a0584d0e3bd0b56e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28289, "upload_time": "2019-03-24T13:19:00", "upload_time_iso_8601": "2019-03-24T13:19:00.781570Z", "url": "https://files.pythonhosted.org/packages/9f/08/591815a449367c14d232ed809af8307f15e1fedbbe4d4155b15530ec2373/PILasOPENCV-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "d38ebddc34746d2c70d0ac161f77f313", "sha256": "13cc815577846558b16a42642a37e941247155076dd5933e15071ab76a532884"}, "downloads": -1, "filename": "PILasOPENCV-1.1.zip", "has_sig": false, "md5_digest": "d38ebddc34746d2c70d0ac161f77f313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31073, "upload_time": "2019-03-28T10:27:17", "upload_time_iso_8601": "2019-03-28T10:27:17.046650Z", "url": "https://files.pythonhosted.org/packages/8c/7e/177293e28f115c13f2dbb94e5a16499482a1446e4dd30fc42dfef58ab052/PILasOPENCV-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "80a54441baba9f754304d2cc4181b060", "sha256": "975d075db57eb5cac92e905212d8d11fa58f5609bd952427eb5069e5860a5224"}, "downloads": -1, "filename": "PILasOPENCV-1.2.zip", "has_sig": false, "md5_digest": "80a54441baba9f754304d2cc4181b060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31587, "upload_time": "2019-04-02T09:35:19", "upload_time_iso_8601": "2019-04-02T09:35:19.196511Z", "url": "https://files.pythonhosted.org/packages/fd/d0/b535004937e1be24bd75b870d71de467bf6cb459c09b3e2d36dcefcb301c/PILasOPENCV-1.2.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "fc022e13876a0e0490177854e5d9cb48", "sha256": "3d54f9c4c930f7b3173af717fa0efed99ff123f489373d24fca9aeaaa02f3ac0"}, "downloads": -1, "filename": "PILasOPENCV-1.5.zip", "has_sig": false, "md5_digest": "fc022e13876a0e0490177854e5d9cb48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31614, "upload_time": "2019-04-07T11:31:25", "upload_time_iso_8601": "2019-04-07T11:31:25.668426Z", "url": "https://files.pythonhosted.org/packages/19/d9/093b3ebb613946197b18d7b95e1bc98c17da255e09b316586e00a74cee8f/PILasOPENCV-1.5.zip", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "3753408114b480bdbed4acf2b92f3813", "sha256": "246a674158f7ef486d6105d95ce7edae86ddc6b2053bf6341c877458ebc98283"}, "downloads": -1, "filename": "PILasOPENCV-1.6.zip", "has_sig": false, "md5_digest": "3753408114b480bdbed4acf2b92f3813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31781, "upload_time": "2019-04-09T23:49:30", "upload_time_iso_8601": "2019-04-09T23:49:30.241083Z", "url": "https://files.pythonhosted.org/packages/5f/ef/c1128b7462da66b8c72a17d8b0f2dea1b6c4645299d8d7edab987046a690/PILasOPENCV-1.6.zip", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "1c71b5ea5cf6b833f971e0e5a97b5ea7", "sha256": "69882d680fee2a35fcafdf88edfe593d383aa4a7f234d2b89696d8a66d026b25"}, "downloads": -1, "filename": "PILasOPENCV-1.7.zip", "has_sig": false, "md5_digest": "1c71b5ea5cf6b833f971e0e5a97b5ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31928, "upload_time": "2019-04-10T08:05:02", "upload_time_iso_8601": "2019-04-10T08:05:02.803824Z", "url": "https://files.pythonhosted.org/packages/12/43/3045a76928f880c17802adb4ce6cf698cf19f764d26d6385c88ad7bf0cb9/PILasOPENCV-1.7.zip", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "0ecc3f4a2d33954cea1724d6b7d02b1b", "sha256": "b1913c78ae0742cdc69f967f780ee09b52af0b173816afda1d39712bc7e06f7a"}, "downloads": -1, "filename": "PILasOPENCV-1.8.zip", "has_sig": false, "md5_digest": "0ecc3f4a2d33954cea1724d6b7d02b1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33600, "upload_time": "2019-04-11T02:26:42", "upload_time_iso_8601": "2019-04-11T02:26:42.262574Z", "url": "https://files.pythonhosted.org/packages/72/62/ee5f5206bf44198d2f617860b1bdf5a9dae6bf10d62b2ac38cfd79d70c05/PILasOPENCV-1.8.zip", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "a7d96eb61aa3594b803e8ab4684ef3c7", "sha256": "0a0f27552bb623efffce562161792ee4424300b71c01c8ea15ca74805f435fa0"}, "downloads": -1, "filename": "PILasOPENCV-2.0.zip", "has_sig": false, "md5_digest": "a7d96eb61aa3594b803e8ab4684ef3c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33941, "upload_time": "2019-04-14T02:20:03", "upload_time_iso_8601": "2019-04-14T02:20:03.152612Z", "url": "https://files.pythonhosted.org/packages/78/c2/8179511349ee74f119d04672e58ee2759557bd3b930d58b04f073de30dfa/PILasOPENCV-2.0.zip", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "d9450fb4cf3117dff6d265f19a096984", "sha256": "eb225ebefb6b37467bd4f5664b2b1a645c18acca075c3f46937016c45a331f32"}, "downloads": -1, "filename": "PILasOPENCV-2.1.zip", "has_sig": false, "md5_digest": "d9450fb4cf3117dff6d265f19a096984", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34625, "upload_time": "2019-04-15T05:32:07", "upload_time_iso_8601": "2019-04-15T05:32:07.381770Z", "url": "https://files.pythonhosted.org/packages/a1/13/d3bc878de62417e295fffb2610dc1eaf8bc58c1e659e6078de4bcf2dee96/PILasOPENCV-2.1.zip", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "40216b0c9d19ca454c2fe975fdd45b1d", "sha256": "266b0a8005a96fa603f642710780f1899aaaeea0ed9bb580ca056ffa1148ad50"}, "downloads": -1, "filename": "PILasOPENCV-2.2.zip", "has_sig": false, "md5_digest": "40216b0c9d19ca454c2fe975fdd45b1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35093, "upload_time": "2019-04-21T12:47:17", "upload_time_iso_8601": "2019-04-21T12:47:17.179734Z", "url": "https://files.pythonhosted.org/packages/ce/f2/dd5acf1a5561ccc615b7f47c3867112e6058baf62630f0c1c5872e3e5415/PILasOPENCV-2.2.zip", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "ad2113d09dd903654466eb1eefee7daa", "sha256": "d4e7ac68ae23312a5c0817151349893b59e072641d6f7c563ca00aeac351f207"}, "downloads": -1, "filename": "PILasOPENCV-2.3.zip", "has_sig": false, "md5_digest": "ad2113d09dd903654466eb1eefee7daa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34823, "upload_time": "2019-04-24T06:04:28", "upload_time_iso_8601": "2019-04-24T06:04:28.485208Z", "url": "https://files.pythonhosted.org/packages/a2/3e/9766ecc98f6180ff81033932f392fdc7fb3f1479c7e15654a696a3556835/PILasOPENCV-2.3.zip", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "7b5121e44ffb734d61d6a93a87e7f376", "sha256": "fb71c3b283f339bfcde16c73513ca7163554407d67c5a350844c162d5cf73e5b"}, "downloads": -1, "filename": "PILasOPENCV-2.4.zip", "has_sig": false, "md5_digest": "7b5121e44ffb734d61d6a93a87e7f376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35963, "upload_time": "2019-04-26T08:21:57", "upload_time_iso_8601": "2019-04-26T08:21:57.624930Z", "url": "https://files.pythonhosted.org/packages/ce/4d/47b475812ae3d6fb2aea38f54e234717574530c8c0494ae563a1b02c6ca1/PILasOPENCV-2.4.zip", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "b3c28309268eba2254e044cca93ffaae", "sha256": "699ac4a0bd79875f3b608f764edfded8a818952d87bf39c5501402e454c150c4"}, "downloads": -1, "filename": "PILasOPENCV-2.5.zip", "has_sig": false, "md5_digest": "b3c28309268eba2254e044cca93ffaae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36368, "upload_time": "2019-07-09T14:21:27", "upload_time_iso_8601": "2019-07-09T14:21:27.446035Z", "url": "https://files.pythonhosted.org/packages/29/c6/0005fe572b77d84100b5d18f89669f857626202811ad6087d7f25ecb70ea/PILasOPENCV-2.5.zip", "yanked": false}], "2.6": [{"comment_text": "", "digests": {"md5": "85a74e32756243fdb1c4eccf329568f5", "sha256": "a5a60ef0f166423555053d963b6e8d67f37c037e458105c6441a629d3905a240"}, "downloads": -1, "filename": "PILasOPENCV-2.6.zip", "has_sig": false, "md5_digest": "85a74e32756243fdb1c4eccf329568f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36790, "upload_time": "2019-07-11T07:07:12", "upload_time_iso_8601": "2019-07-11T07:07:12.638918Z", "url": "https://files.pythonhosted.org/packages/b3/75/e322977a4a5cf2d7beb0a55df129e7d3db6a5845f0316234ec2e3d1873f5/PILasOPENCV-2.6.zip", "yanked": false}], "2.7": [{"comment_text": "", "digests": {"md5": "4713053f09ac5aab435b52e4d9717057", "sha256": "4bb2701497117d54db836cf21bfcce76b9fc15806216ae3b0adc3e7e03ff2ce0"}, "downloads": -1, "filename": "PILasOPENCV-2.7.zip", "has_sig": false, "md5_digest": "4713053f09ac5aab435b52e4d9717057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36915, "upload_time": "2019-07-11T09:04:14", "upload_time_iso_8601": "2019-07-11T09:04:14.412277Z", "url": "https://files.pythonhosted.org/packages/11/2f/14ac5963e3f9b177a1a726230466b9149efcea37f00f51b745d4c192ee13/PILasOPENCV-2.7.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4713053f09ac5aab435b52e4d9717057", "sha256": "4bb2701497117d54db836cf21bfcce76b9fc15806216ae3b0adc3e7e03ff2ce0"}, "downloads": -1, "filename": "PILasOPENCV-2.7.zip", "has_sig": false, "md5_digest": "4713053f09ac5aab435b52e4d9717057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36915, "upload_time": "2019-07-11T09:04:14", "upload_time_iso_8601": "2019-07-11T09:04:14.412277Z", "url": "https://files.pythonhosted.org/packages/11/2f/14ac5963e3f9b177a1a726230466b9149efcea37f00f51b745d4c192ee13/PILasOPENCV-2.7.zip", "yanked": false}], "timestamp": "Fri May  8 02:54:44 2020"}