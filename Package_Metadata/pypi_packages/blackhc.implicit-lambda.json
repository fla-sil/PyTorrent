{"info": {"author": "Andreas @blackhc Kirsch", "author_email": "blackhc+implicit_lambda@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Implicit lambdas\n\n[![Build Status](https://www.travis-ci.com/BlackHC/implicit_lambda.svg?branch=master)](https://www.travis-ci.com/BlackHC/implicit_lambda) [![codecov](https://codecov.io/gh/BlackHC/implicit_lambda/branch/master/graph/badge.svg)](https://codecov.io/gh/BlackHC/implicit_lambda) [![PyPI](https://img.shields.io/badge/PyPI-blackhc.implicit_lambda-blue.svg)](https://pypi.python.org/pypi/blackhc.implicit_lambda/)\n\nThis package adds support for implicit lambdas, so you can write `map(_ + 5, a_list)` instead of `map(lambda x: x + 5, a_list)`.\n\nThe code uses Python 3.7 features for brevity. The package could easily be made to work with earlier version. Please submit an issue if there is need.\n\nImplicit lambdas are implemented using code generation. They are as fast as regular lambdas when running python with `-O` to enable optimizations.\n\n```\n--------------------------------------------- benchmark: 3 tests -----------------------------------\nName (time in ns)         Mean              StdDev              Median         OPS (Mops/s)\n----------------------------------------------------------------------------------------------------\ntest_normal_lambda    196.3468 (1.01)     140.7775 (2.32)     166.9600 (1.0)         5.0930 (0.99)\ntest_il_lambda        196.6705 (1.01)     113.9049 (1.88)     171.6000 (1.03)        5.0846 (0.99)\ntest_op_chain         195.0673 (1.0)       60.6268 (1.0)      176.2300 (1.06)        5.1264 (1.0)\n----------------------------------------------------------------------------------------------------\n```\n`il_lambda` uses implicit lambdas. `normal_lambda` uses a regular lambda. `op_chain` uses functools.partial and the operator module.\n\nWithout `-O`, lambdas with a more verbose `repr` are created:\n\n```python\nassert repr(_ + 5) == \"<LambdaDSL: lambda x: (x + 5) @ {}>\"\n```\n\nThis results in up to 20% slower execution for very simple expressions. (A new type is created on the fly to hold the expression and resolving a call using a custom `__call__` is sufficient to incur such a penalty.)\n\nFor more complex expressions, the overhead will become negligible.\n\nPython expressions are fully wrapped, including index operations `[]` (using `__getitem__`), member access (using `__getattribute__`) and any calls (`__calls`). This results in great flexibility.\n\nTo disambiguate between calls within the lambda and calling a lambda, implicit lambdas have to be explicitly converted into a callable/regular Python lambda.\n\n`to_lambda` turns an implicit lambda expression into a Python lambda.\n\n`auto_lambda` adds support for implicit lambdas to existing functions that take callables.\n\nWrapped versions of `builtin`, `functools` and `itertools` are provided out-of-the-box.\n\n## Installation\n\nTo install using pip, use:\n\n```\npip install blackhc.implicit_lambda\n```\n\nTo run the tests, use:\n\n```\npython setup.py test\n```\n\n## Example\n\nTo enable implicit lambdas, import placeholder symbols as needed and import wrapped builtin functions to use implicit lambdas interchangably with regular ones.\n\nUsually, `to_lambda` and other helper functions don't need to be called.\n\n```python\nfrom blackhc.implicit_lambda import _, x, y, to_lambda\nfrom blackhc.implicit_lambda.builtins import map\n```\n\nImplicit lambda provides wrappers around all common builtins.\n\n```python\n    a_list = list(range(10))\n\n    mapped_list = map(_ + 2, a_list)\n\n    assert list(mapped_list) == list(range(2, 12))\n```\n\nThere are also wrappers that turn builtins into lazy functions. A wrapped function provides a `._` version that can be used within an implicit lambda.\n\n```python\n    mapper = to_lambda(map._(x + 2, _))\n\n    mapped_list = mapper(a_list)\n\n    assert list(mapped_list) == list(range(2, 12))\n```\n\nImplicit lambdas supports nested expressions\n\n```python\n    mapped_list = map((_ << 3) * 3 - 23 * _ + 2, a_list)\n\n    assert list(mapped_list) == list(range(2, 12))\n```\n\nMore useful reprs are available in __debug__ mode (just don't use `-O` when running python):\n\n```python\n    another_lambda = to_lambda((_ << 3) * 3 - 23 * _ + 2)\n    assert repr(another_lambda) == \"<lambda x: ((((x << 3) * 3) - (23 * x)) + 2) @ {}>\"\n```\n\nor:\n\n```python\n    assert (repr((_ << 3) * 3 - 23 * _ + 2) ==\n            \"<LambdaDSL: lambda x: ((((x << 3) * 3) - (23 * x)) + 2) @ {}>)\"\n```\n\nImplicit lambdas support multiple arguments, too:\n\n```python\n    assert to_lambda(x * y)(5, 3) == 15\n```\n\n## Performance measurement\n\nRun\n\n```python\npython -O -m pytest -k test_performance --benchmark-warmup=on --benchmark-autosave --benchmark-disable-gc\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blackhc/implicit_lambda", "keywords": "tools lambda placeholder", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blackhc.implicit-lambda", "package_url": "https://pypi.org/project/blackhc.implicit-lambda/", "platform": "", "project_url": "https://pypi.org/project/blackhc.implicit-lambda/", "project_urls": {"Homepage": "https://github.com/blackhc/implicit_lambda"}, "release_url": "https://pypi.org/project/blackhc.implicit-lambda/0.4.0/", "requires_dist": ["check-manifest ; extra == 'dev'", "coverage ; extra == 'test'", "codecov ; extra == 'test'", "pytest ; extra == 'test'", "pytest-benchmark ; extra == 'test'", "pytest-cov ; extra == 'test'", "hypothesis ; extra == 'test'"], "requires_python": "", "summary": "Implicit lambdas with placeholder notation and code generation", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Implicit lambdas<br><br>[![Build Status](https://www.travis-ci.com/BlackHC/implicit_lambda.svg?branch=master)](https://www.travis-ci.com/BlackHC/implicit_lambda) [![codecov](https://codecov.io/gh/BlackHC/implicit_lambda/branch/master/graph/badge.svg)](https://codecov.io/gh/BlackHC/implicit_lambda) [![PyPI](https://img.shields.io/badge/PyPI-blackhc.implicit_lambda-blue.svg)](https://pypi.python.org/pypi/blackhc.implicit_lambda/)<br><br>This package adds support for implicit lambdas, so you can write `map(_ + 5, a_list)` instead of `map(lambda x: x + 5, a_list)`.<br><br>The code uses Python 3.7 features for brevity. The package could easily be made to work with earlier version. Please submit an issue if there is need.<br><br>Implicit lambdas are implemented using code generation. They are as fast as regular lambdas when running python with `-O` to enable optimizations.<br><br>```<br>--------------------------------------------- benchmark: 3 tests -----------------------------------<br>Name (time in ns)         Mean              StdDev              Median         OPS (Mops/s)<br>----------------------------------------------------------------------------------------------------<br>test_normal_lambda    196.3468 (1.01)     140.7775 (2.32)     166.9600 (1.0)         5.0930 (0.99)<br>test_il_lambda        196.6705 (1.01)     113.9049 (1.88)     171.6000 (1.03)        5.0846 (0.99)<br>test_op_chain         195.0673 (1.0)       60.6268 (1.0)      176.2300 (1.06)        5.1264 (1.0)<br>----------------------------------------------------------------------------------------------------<br>```<br>`il_lambda` uses implicit lambdas. `normal_lambda` uses a regular lambda. `op_chain` uses functools.partial and the operator module.<br><br>Without `-O`, lambdas with a more verbose `repr` are created:<br><br>```python<br>assert repr(_ + 5) == \"&lt;LambdaDSL: lambda x: (x + 5) @ {}&gt;\"<br>```<br><br>This results in up to 20% slower execution for very simple expressions. (A new type is created on the fly to hold the expression and resolving a call using a custom `__call__` is sufficient to incur such a penalty.)<br><br>For more complex expressions, the overhead will become negligible.<br><br>Python expressions are fully wrapped, including index operations `[]` (using `__getitem__`), member access (using `__getattribute__`) and any calls (`__calls`). This results in great flexibility.<br><br>To disambiguate between calls within the lambda and calling a lambda, implicit lambdas have to be explicitly converted into a callable/regular Python lambda.<br><br>`to_lambda` turns an implicit lambda expression into a Python lambda.<br><br>`auto_lambda` adds support for implicit lambdas to existing functions that take callables.<br><br>Wrapped versions of `builtin`, `functools` and `itertools` are provided out-of-the-box.<br><br>## Installation<br><br>To install using pip, use:<br><br>```<br>pip install blackhc.implicit_lambda<br>```<br><br>To run the tests, use:<br><br>```<br>python setup.py test<br>```<br><br>## Example<br><br>To enable implicit lambdas, import placeholder symbols as needed and import wrapped builtin functions to use implicit lambdas interchangably with regular ones.<br><br>Usually, `to_lambda` and other helper functions don't need to be called.<br><br>```python<br>from blackhc.implicit_lambda import _, x, y, to_lambda<br>from blackhc.implicit_lambda.builtins import map<br>```<br><br>Implicit lambda provides wrappers around all common builtins.<br><br>```python<br>    a_list = list(range(10))<br><br>    mapped_list = map(_ + 2, a_list)<br><br>    assert list(mapped_list) == list(range(2, 12))<br>```<br><br>There are also wrappers that turn builtins into lazy functions. A wrapped function provides a `._` version that can be used within an implicit lambda.<br><br>```python<br>    mapper = to_lambda(map._(x + 2, _))<br><br>    mapped_list = mapper(a_list)<br><br>    assert list(mapped_list) == list(range(2, 12))<br>```<br><br>Implicit lambdas supports nested expressions<br><br>```python<br>    mapped_list = map((_ &lt;&lt; 3) * 3 - 23 * _ + 2, a_list)<br><br>    assert list(mapped_list) == list(range(2, 12))<br>```<br><br>More useful reprs are available in __debug__ mode (just don't use `-O` when running python):<br><br>```python<br>    another_lambda = to_lambda((_ &lt;&lt; 3) * 3 - 23 * _ + 2)<br>    assert repr(another_lambda) == \"&lt;lambda x: ((((x &lt;&lt; 3) * 3) - (23 * x)) + 2) @ {}&gt;\"<br>```<br><br>or:<br><br>```python<br>    assert (repr((_ &lt;&lt; 3) * 3 - 23 * _ + 2) ==<br>            \"&lt;LambdaDSL: lambda x: ((((x &lt;&lt; 3) * 3) - (23 * x)) + 2) @ {}&gt;)\"<br>```<br><br>Implicit lambdas support multiple arguments, too:<br><br>```python<br>    assert to_lambda(x * y)(5, 3) == 15<br>```<br><br>## Performance measurement<br><br>Run<br><br>```python<br>python -O -m pytest -k test_performance --benchmark-warmup=on --benchmark-autosave --benchmark-disable-gc<br>```<br><br><br>\n          </div>"}, "last_serial": 4657415, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3407f11e9544703060a2c7c7e7f550ef", "sha256": "25cd6a67a21bd8eb760488032dd3f711161e6bfe0e8e918ecca7550fc140b085"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3407f11e9544703060a2c7c7e7f550ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16727, "upload_time": "2018-12-25T00:04:11", "upload_time_iso_8601": "2018-12-25T00:04:11.552952Z", "url": "https://files.pythonhosted.org/packages/4e/91/f1066e05d9ae2bb7fa5642a6e2bebc206be03a941310449b399ff3f7960e/blackhc.implicit_lambda-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9768692867141ca4a9833359d9e36990", "sha256": "619f279b0d8b4ea16ed8a547520d21a5e631711e85c42b7117440b36ac3b2877"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9768692867141ca4a9833359d9e36990", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16056, "upload_time": "2018-12-25T00:04:13", "upload_time_iso_8601": "2018-12-25T00:04:13.782359Z", "url": "https://files.pythonhosted.org/packages/b8/fe/7b5980c128a7b56b77d882ab77606d78712635fd6003b58abc613cb0b836/blackhc.implicit_lambda-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bcc59388d1e7cbc5b45bf0bb0c58dc76", "sha256": "a934f53a888bfe2c72864e2cccf56458b7e1a4bd3586d4a766020c2543d9fc47"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bcc59388d1e7cbc5b45bf0bb0c58dc76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17235, "upload_time": "2018-12-25T01:12:01", "upload_time_iso_8601": "2018-12-25T01:12:01.689205Z", "url": "https://files.pythonhosted.org/packages/b4/ec/ede1e093e33bf5b5ee4c63ffe33541f0aeeb431df3ad6a9f135f85d8dc68/blackhc.implicit_lambda-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e31d8f6e992e2d594d323cbc6656dd01", "sha256": "3da5733a40522712b406710b3f0b423dbf76cc9d762ca400a62a74cf2e9f80ef"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e31d8f6e992e2d594d323cbc6656dd01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16459, "upload_time": "2018-12-25T01:12:04", "upload_time_iso_8601": "2018-12-25T01:12:04.093219Z", "url": "https://files.pythonhosted.org/packages/c4/97/aaf18f4b08b8aa931d638b4848a97558f7135bfa0481c07f050a670b1a81/blackhc.implicit_lambda-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "db4a8203fe42beb472a101af2863c825", "sha256": "4896a87a946aafa1d690eb301ff238cd43efc4f9ee176f68ed24fc982ab38eb2"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "db4a8203fe42beb472a101af2863c825", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19979, "upload_time": "2018-12-25T20:40:14", "upload_time_iso_8601": "2018-12-25T20:40:14.139518Z", "url": "https://files.pythonhosted.org/packages/1a/c5/7d7a037e106147cf77d301591755b91b90479b0496eeea98020dde66e43e/blackhc.implicit_lambda-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c200fadb54861cb6997a02ce3aa8b89e", "sha256": "2953b1a0c241515e32ae609f3b6b3dcd4aa21a188dd62e963ae97f909fba38f7"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c200fadb54861cb6997a02ce3aa8b89e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18689, "upload_time": "2018-12-25T20:40:17", "upload_time_iso_8601": "2018-12-25T20:40:17.502264Z", "url": "https://files.pythonhosted.org/packages/fa/3e/9b1affaf5193fd4d3a085b3100cc8798e6a9588ca822f055563a8b0a1653/blackhc.implicit_lambda-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5104baf830ef7f649c03288c56e8228b", "sha256": "3eb9a78fd98c0526ace3e515eb10189f28f863033c247aeb712a62f9c77e6c6b"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5104baf830ef7f649c03288c56e8228b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20104, "upload_time": "2018-12-31T14:31:23", "upload_time_iso_8601": "2018-12-31T14:31:23.533332Z", "url": "https://files.pythonhosted.org/packages/f1/21/8adc40d86841ff43df9a3f8101939913ea32107d763b1ea221bd72585f10/blackhc.implicit_lambda-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fe44f754642c44551d4a01ce1a042b5", "sha256": "067ecdff5bc312aa75ad4ed19a595e659152d10cb40766f1a34b14add8443daf"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1fe44f754642c44551d4a01ce1a042b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18833, "upload_time": "2018-12-31T14:31:27", "upload_time_iso_8601": "2018-12-31T14:31:27.833009Z", "url": "https://files.pythonhosted.org/packages/37/e7/cc1c04be70f4fbd8c2d4cbc4a481ed3ae7729005b4edc189dc7e36bc672a/blackhc.implicit_lambda-0.2.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "43057c6bd140df2e78f16d35c3224652", "sha256": "b72217e512cbcf9e80caa321c5eddfe3c04342c19bab2f74a0f75331b9316462"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "43057c6bd140df2e78f16d35c3224652", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23550, "upload_time": "2019-01-03T19:21:39", "upload_time_iso_8601": "2019-01-03T19:21:39.411349Z", "url": "https://files.pythonhosted.org/packages/b4/de/508b673abf7d1898cf50ce685b83f82d6258b78219b4dc94cda0c358134e/blackhc.implicit_lambda-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8069c6b46286dc27e0d16acc3408d1", "sha256": "196a8f96fa8903d4b265a3838c8a922c0901930d0c83df6a89bd2af8a71df367"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fc8069c6b46286dc27e0d16acc3408d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20981, "upload_time": "2019-01-03T19:21:43", "upload_time_iso_8601": "2019-01-03T19:21:43.799035Z", "url": "https://files.pythonhosted.org/packages/af/f5/975490e7bd548b01653f2f8a462242cc14272853e6482372f3442df74cda/blackhc.implicit_lambda-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "43057c6bd140df2e78f16d35c3224652", "sha256": "b72217e512cbcf9e80caa321c5eddfe3c04342c19bab2f74a0f75331b9316462"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "43057c6bd140df2e78f16d35c3224652", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23550, "upload_time": "2019-01-03T19:21:39", "upload_time_iso_8601": "2019-01-03T19:21:39.411349Z", "url": "https://files.pythonhosted.org/packages/b4/de/508b673abf7d1898cf50ce685b83f82d6258b78219b4dc94cda0c358134e/blackhc.implicit_lambda-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8069c6b46286dc27e0d16acc3408d1", "sha256": "196a8f96fa8903d4b265a3838c8a922c0901930d0c83df6a89bd2af8a71df367"}, "downloads": -1, "filename": "blackhc.implicit_lambda-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fc8069c6b46286dc27e0d16acc3408d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20981, "upload_time": "2019-01-03T19:21:43", "upload_time_iso_8601": "2019-01-03T19:21:43.799035Z", "url": "https://files.pythonhosted.org/packages/af/f5/975490e7bd548b01653f2f8a462242cc14272853e6482372f3442df74cda/blackhc.implicit_lambda-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:10 2020"}