{"info": {"author": "Christopher Harrison", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX", "Programming Language :: Python :: 3.6"], "description": "quicktick\n=========\nOutput a cryptocurrency price ticker to stdout based on the\nconfiguration found, by default, in ``~/.quicktick``. Options can be\nprovided at the command line to override any part of the ticker\nconfiguration.\n\nInstallation\n------------\nquicktick requires Python 3.6, or newer, and can be installed using\n``pip``:\n\n::\n\n  pip install quicktick\n\nUsage\n-----\n::\n\n  quicktick [-h] [-V] [--config CONFIG] [--crypto CRYPTO] [--fiat FIAT] [--template TEMPLATE] [--source SOURCE]\n\n\nOptions are as follows:\n\n-h, --help           Show this help message and exit\n-V, --version        Show version and license information\n--config CONFIG      Use alternative configuration file\n--crypto CRYPTO      Symbol to use as the cryptocurrency\n--fiat FIAT          Symbol to use as the fiat currency\n--template TEMPLATE  Template name or raw Jinja2 template\n--source SOURCE      Source for the price data\n\nConfiguration\n-------------\nThe configuration is a YAML file, which will be created in your home\ndirectory on first run (if it doesn't already exist), which defines the\ndefault ticker, how to output price data and how data sources are\ndefined. Jinja2 templating is used to make this very adaptable to your\nneeds.\n\nThe default configuration only defines a data source for the\n`CoinMarketCap <https://coinmarketcap.com/>`_ API with support for:\n\n:Cryptocurrencies:\n  * Bitcoin\n  * Bitcoin Cash\n  * Ethereum\n  * Litecoin\n\n:Fiat currencies:\n  * US Dollars\n  * Euros\n  * Chinese Yuan\n  * British Pounds\n\n:Price data:\n  * Exchange rate\n  * Change in the last hour\n\nCoinMarketCap's API supports many more options and these can be added to\nyour configuration, as needed. Alternatively, other JSON-based HTTP APIs\ncan be defined as data sources.\n\nTicker\n~~~~~~\nThe default ticker is defined under the ``ticker`` section in the\nconfiguration. It takes four attributes:\n\n``source``\n  The data source to use, defined in the ``sources`` section.\n\n``crypto``\n  The cryptocurrency symbol to use, as defined by the ``source``.\n\n``fiat``\n  The fiat currency symbol to use, as defined by the ``source``.\n\n``template``\n  The template to use to render the ticker, defined in the ``templates``\n  section (n.b., this must be a predefined template; a raw Jinja2\n  template string can only be used at the command line).\n\nTemplates\n~~~~~~~~~\nThe ``templates`` section is used to define named Jinja2 templates. By\ndefault, there is ``simple`` and ``ansi`` (which is the same as\n``simple``, with ANSI escape sequences used for colour output). When the\ntemplates are rendered, they have access to three sets of data:\n\n``fiat``\n  The fiat currency symbol (see `Data Sources`_ for details).\n\n``crypto``\n  The cryptocurrency symbol (see `Data Sources`_ for details).\n\nPrice data\n  The price data variables returned by the data source (see `Data\n  Sources`_ for details).\n\nData Sources\n~~~~~~~~~~~~\nThe ``sources`` section is used to define named data sources; that is,\nJSON-based HTTP APIs. Each data source takes four attributes:\n\n``url``\n  The URL for the data source; again, a Jinja2 template that is supplied\n  with the ``fiat`` and ``crypto`` symbols.\n\n``data``\n  This subsection allows you to define the price data variables that are\n  available to the output template. These are again Jinja2 templates\n  that describe the mapping from the API's ``json`` response, along with\n  the ``crypto`` and ``fiat`` symbols.\n\n``cryptos`` and ``fiats``\n  These subsections allow you to define cryptocurrencies and fiat\n  currencies, respectively. Conventionally, you would use the symbol\n  name as the currency's identifier, which take a dictionary of named\n  parameters. These parameters are then available to the templates that\n  use the symbols.\n\nLicense\n-------\nCopyright (c) 2017 Christopher Harrison\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program. If not, see <https://www.gnu.org/licenses/>.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Xophmeister/quicktick", "keywords": "cryptocurrency ticker", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "quicktick", "package_url": "https://pypi.org/project/quicktick/", "platform": "", "project_url": "https://pypi.org/project/quicktick/", "project_urls": {"Homepage": "https://github.com/Xophmeister/quicktick"}, "release_url": "https://pypi.org/project/quicktick/0.2.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Simple cryptocurrency ticker", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Output a cryptocurrency price ticker to stdout based on the\nconfiguration found, by default, in <tt><span class=\"pre\">~/.quicktick</span></tt>. Options can be\nprovided at the command line to override any part of the ticker\nconfiguration.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>quicktick requires Python 3.6, or newer, and can be installed using\n<tt>pip</tt>:</p>\n<pre>pip install quicktick\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>quicktick [-h] [-V] [--config CONFIG] [--crypto CRYPTO] [--fiat FIAT] [--template TEMPLATE] [--source SOURCE]\n</pre>\n<p>Options are as follows:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>Show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-V</span>, <span class=\"option\">--version</span></kbd></td>\n<td>Show version and license information</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--config <var>CONFIG</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Use alternative configuration file</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--crypto <var>CRYPTO</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Symbol to use as the cryptocurrency</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--fiat <var>FIAT</var></span></kbd></td>\n<td>Symbol to use as the fiat currency</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--template <var>TEMPLATE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Template name or raw Jinja2 template</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--source <var>SOURCE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Source for the price data</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The configuration is a YAML file, which will be created in your home\ndirectory on first run (if it doesn\u2019t already exist), which defines the\ndefault ticker, how to output price data and how data sources are\ndefined. Jinja2 templating is used to make this very adaptable to your\nneeds.</p>\n<p>The default configuration only defines a data source for the\n<a href=\"https://coinmarketcap.com/\" rel=\"nofollow\">CoinMarketCap</a> API with support for:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Cryptocurrencies:</th></tr>\n<tr><td>\u00a0</td><td><ul>\n<li>Bitcoin</li>\n<li>Bitcoin Cash</li>\n<li>Ethereum</li>\n<li>Litecoin</li>\n</ul>\n</td>\n</tr>\n<tr><th>Fiat currencies:</th></tr>\n<tr><td>\u00a0</td><td><ul>\n<li>US Dollars</li>\n<li>Euros</li>\n<li>Chinese Yuan</li>\n<li>British Pounds</li>\n</ul>\n</td>\n</tr>\n<tr><th>Price data:</th><td><ul>\n<li>Exchange rate</li>\n<li>Change in the last hour</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>CoinMarketCap\u2019s API supports many more options and these can be added to\nyour configuration, as needed. Alternatively, other JSON-based HTTP APIs\ncan be defined as data sources.</p>\n<div id=\"ticker\">\n<h3>Ticker</h3>\n<p>The default ticker is defined under the <tt>ticker</tt> section in the\nconfiguration. It takes four attributes:</p>\n<dl>\n<dt><tt>source</tt></dt>\n<dd>The data source to use, defined in the <tt>sources</tt> section.</dd>\n<dt><tt>crypto</tt></dt>\n<dd>The cryptocurrency symbol to use, as defined by the <tt>source</tt>.</dd>\n<dt><tt>fiat</tt></dt>\n<dd>The fiat currency symbol to use, as defined by the <tt>source</tt>.</dd>\n<dt><tt>template</tt></dt>\n<dd>The template to use to render the ticker, defined in the <tt>templates</tt>\nsection (n.b., this must be a predefined template; a raw Jinja2\ntemplate string can only be used at the command line).</dd>\n</dl>\n</div>\n<div id=\"templates\">\n<h3>Templates</h3>\n<p>The <tt>templates</tt> section is used to define named Jinja2 templates. By\ndefault, there is <tt>simple</tt> and <tt>ansi</tt> (which is the same as\n<tt>simple</tt>, with ANSI escape sequences used for colour output). When the\ntemplates are rendered, they have access to three sets of data:</p>\n<dl>\n<dt><tt>fiat</tt></dt>\n<dd>The fiat currency symbol (see <a href=\"#data-sources\" rel=\"nofollow\">Data Sources</a> for details).</dd>\n<dt><tt>crypto</tt></dt>\n<dd>The cryptocurrency symbol (see <a href=\"#data-sources\" rel=\"nofollow\">Data Sources</a> for details).</dd>\n<dt>Price data</dt>\n<dd>The price data variables returned by the data source (see <a href=\"#data-sources\" rel=\"nofollow\">Data\nSources</a> for details).</dd>\n</dl>\n</div>\n<div id=\"data-sources\">\n<h3>Data Sources</h3>\n<p>The <tt>sources</tt> section is used to define named data sources; that is,\nJSON-based HTTP APIs. Each data source takes four attributes:</p>\n<dl>\n<dt><tt>url</tt></dt>\n<dd>The URL for the data source; again, a Jinja2 template that is supplied\nwith the <tt>fiat</tt> and <tt>crypto</tt> symbols.</dd>\n<dt><tt>data</tt></dt>\n<dd>This subsection allows you to define the price data variables that are\navailable to the output template. These are again Jinja2 templates\nthat describe the mapping from the API\u2019s <tt>json</tt> response, along with\nthe <tt>crypto</tt> and <tt>fiat</tt> symbols.</dd>\n<dt><tt>cryptos</tt> and <tt>fiats</tt></dt>\n<dd>These subsections allow you to define cryptocurrencies and fiat\ncurrencies, respectively. Conventionally, you would use the symbol\nname as the currency\u2019s identifier, which take a dictionary of named\nparameters. These parameters are then available to the templates that\nuse the symbols.</dd>\n</dl>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2017 Christopher Harrison</p>\n<p>This program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.</p>\n<p>This program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License for more details.</p>\n<p>You should have received a copy of the GNU General Public License along\nwith this program. If not, see &lt;<a href=\"https://www.gnu.org/licenses/\" rel=\"nofollow\">https://www.gnu.org/licenses/</a>&gt;.</p>\n</div>\n\n          </div>"}, "last_serial": 3360836, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "dfef0a34be90996bdbe1c4ffcbf50881", "sha256": "ea18f83aa11d4f68d5c8c1a8bc38f79d4c89c702f475f27165578aeefe4eaf9a"}, "downloads": -1, "filename": "quicktick-0.2.5.tar.gz", "has_sig": false, "md5_digest": "dfef0a34be90996bdbe1c4ffcbf50881", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18380, "upload_time": "2017-11-24T12:51:19", "upload_time_iso_8601": "2017-11-24T12:51:19.080510Z", "url": "https://files.pythonhosted.org/packages/cc/4d/ab7d6b080eb7bc3267df7b4ad93a40bee74b94e5da61559d6aa38afb660f/quicktick-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfef0a34be90996bdbe1c4ffcbf50881", "sha256": "ea18f83aa11d4f68d5c8c1a8bc38f79d4c89c702f475f27165578aeefe4eaf9a"}, "downloads": -1, "filename": "quicktick-0.2.5.tar.gz", "has_sig": false, "md5_digest": "dfef0a34be90996bdbe1c4ffcbf50881", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18380, "upload_time": "2017-11-24T12:51:19", "upload_time_iso_8601": "2017-11-24T12:51:19.080510Z", "url": "https://files.pythonhosted.org/packages/cc/4d/ab7d6b080eb7bc3267df7b4ad93a40bee74b94e5da61559d6aa38afb660f/quicktick-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:26 2020"}