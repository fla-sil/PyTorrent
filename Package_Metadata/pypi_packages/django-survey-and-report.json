{"info": {"author": "Pierre SASSOULAS", "author_email": "pierre.sassoulas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Natural Language :: Chinese (Traditional)", "Natural Language :: English", "Natural Language :: French", "Natural Language :: German", "Natural Language :: Japanese", "Natural Language :: Russian", "Natural Language :: Spanish", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Utilities"], "description": "# Django survey\n\nA django survey app, based on and compatible with \"django-survey\".\nYou will be able to migrate your data from an ancient version of\ndjango-survey, but it has been ported to python 3 and you can export results as\nCSV or PDF using your native language.\n\nIf you want the latest version still compatible with python 2.7 you need a\nversion < 1.3.0.\n\n[![Build Status](https://travis-ci.org/Pierre-Sassoulas/django-survey.svg?branch=master)](https://travis-ci.org/Pierre-Sassoulas/django-survey)\n[![Coverage Status](https://coveralls.io/repos/github/Pierre-Sassoulas/django-survey/badge.svg?branch=master)](https://coveralls.io/github/Pierre-Sassoulas/django-survey?branch=master)\n[![PyPI version](https://badge.fury.io/py/django-survey-and-report.svg)](https://badge.fury.io/py/django-survey-and-report)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\n## Table of contents\n\n* [Getting started](#getting-started)\n* [Making a survey](#making-a-survey)\n* [Generating a pdf report from the survey's result](#generating-a-pdf-report-from-the-surveys-result)\n  * [Basic example](#basic-example)\n  * [Sankey's diagram](#sankey-diagram)\n  * [Advanced example](#advanced-example)\n  * [Implementing a custom treatment](#implementing-a-custom-treatment)\n* [Contributing as a developper](#contributing-as-a-developper)\n  * [Development environment](#development-environment)\n  * [Committing code](#committing-code)\n    * [Launching tests](#launching-tests)\n    * [Adding test data](#adding-test-data)\n    * [Launching coverage](#launching-coverage)\n    * [Applying Lint](#applying-Lint)\n* [Translating the project](#translating-the-project)\n  * [Language available](#language-available)\n  * [As a developper](#as-a-developper)\n  * [As a translator](#as-a-translator)\n* [Credit](#credits)\n\n## Getting started\n\nAdd `django-survey-and-report` to your requirements and get it with pip.\n\n~~~~bash\necho 'django-survey-and-report' > requirements.txt\npip install -r requirements.txt\n~~~~\n\nAdd `bootstrapform` and `survey` in the `INSTALLED_APPS` in your settings :\n\n~~~~python\nINSTALLED_APPS = [\n\t# Your own installed apps here\n]\n\nfrom pathlib import Path\n\nCSV_DIRECTORY = Path(\"csv\") # Define the directory where csv are exported\nTEX_DIRECTORY = Path(\"tex\") #\u00a0Define the directory where tex files and pdf are exported\n\nINSTALLED_APPS += [\n\t'bootstrapform',\n\t'survey'\n]\n~~~~\n\nAdd an URL entry to your project\u2019s urls.py, for example:\n\n~~~python\nfrom django.conf import settings\nfrom django.conf.urls import include, url\n\nurlpatterns = [\n    # Your own url pattern here\n]\n\nif 'survey' in settings.INSTALLED_APPS:\n    urlpatterns += [\n        url(r'^survey/', include('survey.urls'))\n    ]\n~~~~\n\nNote: you can use whatever you wish as the URL prefix.\n\nYou can also change some options:\n\n~~~~python\n# Permit to open the csv in excel without problem with separator\n# Using this trick : https://superuser.com/a/686415/567417\nEXCEL_COMPATIBLE_CSV = True\n\n#\u00a0The separator for questions (Default to \",\")\nCHOICES_SEPARATOR = \"|\"\n\n#\u00a0What is shown in export when the user do not answer (Default to \"Left blank\")\nUSER_DID_NOT_ANSWER = \"NAA\"\n\n#\u00a0Path to the Tex configuration file (default to an internal file that should be sufficient)\nfrom pathlib import Path\nTEX_CONFIGURATION_FILE = Path(\"tex\", \"tex.conf\")\n\n#\u00a0Default color for exported pdf pie (default to \"red!50\")\nSURVEY_DEFAULT_PIE_COLOR = \"blue!50\"\n~~~~\n\nTo uninstall `django-survey-and-report`, simply comment out or remove the\n'survey' line in your `INSTALLED_APPS`.\n\nIf you want to use the pdf rendering you need to install `xelatex`. If you're\nusing the Sankey's diagram generation you will also have to install `python-tk`\n(for python 2.7) or `python3-tk` (for python 3.x).\n\n## Making a survey\n\nUsing the admin interface you can create surveys, add questions, give questions\ncategories, and mark them as required or not. You can define choices for answers\nusing comma separated words.\n\n![Creating of a question](doc/creating_questions.png \"Creating of a question\")\n\nThe front-end survey view then automatically populates based on the questions\nthat have been defined and published in the admin interface. We use bootstrap3\nto render them.\n\n![Answering a survey](doc/answering_questions.png \"Answering a survey\")\n\nSubmitted responses can be viewed via the admin backend, in an exported csv\nor in a pdf generated with latex.\n\n## Generating a pdf report from the survey's result\n\nThere is a default configuration for PDF generation, but you might want to change\n`TEX_CONFIGURATION_FILE` for better results (in particular for language other\nthan english).\n\nYou can manage the way the report is created in a yaml file, globally, survey\nby survey, or question by question. In order to render pdf you will need to\ninstall xelatex. You will also need python3-tk for sankey's diagram.\n\nThe results are generated for the server only when needed, but you can force\nit as a developper with:\n\n~~~~bash\npython manage.py exportresult -h\n~~~~\n\nFollowing is an example of a configuration file. you can generate one with:\n\n~~~~bash\npython manage.py generatetexconf -h\n~~~~\n\n### Basic example\n\n~~~~yaml\ngeneric:\n  document_option: 11pt\n'Test surv\u00eby':\n  document_class: report\n  questions:\n    'Lorem ipsum dolor sit am\u00ebt, <strong> consectetur </strong> adipiscing elit.':\n      chart:\n        type: polar\n        text: pin\n    'Dolor sit am\u00ebt, consectetur<strong>  adipiscing</strong>  elit.':\n      chart:\n        type: cloud\n        text: inside\n~~~~\n\nThe pdf is then generated using the very good pgf-pie library.\n\n![The generated pdf for the polar and pin options](doc/report.png \"The generated pdf for the polar and pin options\")\n\n![The generated pdf for the cloud and inside options](doc/report_2.png \"The generated pdf for the cloud and inside options\")\n\n### Sankey diagram\n\nIf you installed python3-tk, you can also show the relation between two\nquestions using a sankey diagram :\n\n~~~~yaml\n'Lorem ipsum dolor sit am\u00ebt, <strong> consectetur </strong> adipiscing elit.':\n  chart:\n    type: sankey\n    question: 'Dolor sit am\u00ebt, consectetur<strong>  adipiscing</strong>  elit.'\n~~~~\n\nYou get this as a result:\n\n![The generated pdf for the sankey example](doc/sankey.png \"The generated pdf for the sankey example\")\n\n### Advanced example\n\nYou can also limit the answers shown by cardinality, filter them, group them\ntogether and choose the color for each answer or group of answers.\n\nIf you use this configuration for the previous question:\n~~~~yaml\n'Test surv\u00eby':\n  'Dolor sit am\u00ebt, consectetur<strong>  adipiscing</strong>  elit.':\n    multiple_charts:\n      'Sub Sub Section with radius=3':\n        color:\n          Y\u00ebs: blue!50\n          No: red!50\n          Whatever: red!50!blue!50\n        radius: 3\n      'Sub Sub Section with text=pin':\n        group_together:\n          Nah:\n            - No\n            - Whatever\n          K.:\n            - Y\u00ebs\n        color:\n          Nah: blue!33!red!66\n          K.: blue!50\n        text: pin\n    chart:\n      radius: 1\n      type: cloud\n      text: inside\n~~~~\n\nYou get this as a result:\n\n![The generated pdf for the multiple charts example](doc/multicharts.png \"The generated pdf for the multiple charts example\")\n\n### Implementing a custom treatment\n\nIf you want to make your own treatment you can use your own class, for example.\n\nConfiguration:\n\n~~~~yaml\n'Test surv\u00eby':\n  questions:\n    'Ipsum dolor sit am\u00ebt, <strong> consectetur </strong>  adipiscing elit.':\n      chart:\n        type: survey.tests.exporter.tex.CustomQuestion2TexChild\n~~~~\n\nCode in `survey.tests.exporter.tex.CustomQuestion2TexChild`:\n\n~~~~python\nfrom survey.exporter.tex.question2tex_chart import Question2TexChart\n\n\nclass CustomQuestion2TexChild(Question2TexChart):\n\n    def get_results(self):\n        self.type = \"polar\"\n        return \"\"\"        2/There were no answer at all,\n        3/But we have a custom treatment to show some,\n        2/You can make minor changes too !\"\"\"\n~~~~\n\nResult:\n\n![The generated pdf for the custom example](doc/custom.png \"The generated pdf for the custom example\")\n\nFor a full example of a configuration file look at `example_conf.yaml` in doc,\nyou can also generate your configuration file with\n`python manage.py generatetexconf -h`, it will create the default skeleton\nfor every survey and question.\n\nTo guide you during the python development, you can read:\n\n* The default reporter for PieChart in `Question2TexChart` : https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_chart.py#L13\n* The Sankey reporter in `Question3TexSankey` : https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_sankey.py#L15\n* The Raw reporter in `Question2TexRax` : https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_raw.py.\n\nDo not hesitate to make a pull request with your new exporter if it can be of interest\nfor others I'll integrate it.\n\n## Contributing as a developper\n\n### Development environment\n\nThis is the typical command you should do to get started:\n\n~~~~bash\npython -m venv venv/ #\u00a0Create virtualenv\nsource venv/bin/activate #\u00a0Activate virtualenv\npip install -e \".[dev]\" #\u00a0Install dev requirements\npre-commit install #\u00a0Install pre-commit hook framework\npython manage.py migrate #\u00a0Create database\npython manage.py loaddata survey/tests/testdump.json #\u00a0Load test data\npython manage.py createsuperuser\npython manage.py runserver #\u00a0Launch server\n~~~~\n\nPlease note that `pre-commit` will permit to fix a lot of linting error\nautomatically and is not required but highly recommended.\n\n### Committing code\n\n#### Launching tests\n\n~~~~bash\npython manage.py test survey\n~~~~\n\n#### Adding test data\n\nIf you want to dump a test database after adding data to it, this is\nthe command to have a minimal diff :\n\n~~~~bash\npython manage.py dumpdata --format json -e contenttypes -e admin -e auth.Permission\n-e sessions.session -e sites.site --natural-foreign --indent 1\n-o survey/tests/testdump.json\n~~~~\n\n#### Launching coverage\n\n~~~~bash\ncoverage run --source=survey --omit=survey/migrations/* ./manage.py test\ncoverage html\nxdg-open htmlcov/index.html\n~~~~\n\n#### Applying Lint\n\nWe're using `pre-commit`, it should take care of linting during commit.\n\n## Translating the project\n\nDjango survey's is available in multiple language.\nYour contribution would be very appreciated if you\nknow a language that is not yet available.\n\n### Language available\n\nThe software is developed in english. Other available languages are :\n\n* [x] Chinese thanks to [\u6731\u8056\u9ece (Zhu Sheng Li)](https://github.com/digglife/) and [John Lyu](https://github.com/PaleNeutron)\n* [x] French thanks to [Pierre Sassoulas](https://github.com/Pierre-Sassoulas/)\n* [x] Japanese thanks to [Nobukuni Suzue](https://github.com/nsuzue/)\n* [x] Spanish thanks to [Javier Ord\u00f3\u00f1ez](https://github.com/ordonja/) and [Pierre Sassoulas](https://github.com/Pierre-Sassoulas/)\n* [x] Russian thanks to [Vlad M.](https://github.com/manchos/)\n* [x] German thanks to [Georg Elsas](https://github.com/gjelsas)\n\n### As a developper\n\nIf your language do not exists add it in the `LANGUAGE` variable in the\nsettings, like [here](https://github.com/Pierre-Sassoulas/django-survey/commit/ee3bdba26c303ad12fc4584938e724b39223faa9#diff-bdf3ecebd8379ca98cc89e545fc90899).\nDo not forget to credit yourself like in the header seen\n[here](https://github.com/Pierre-Sassoulas/django-zxcvbn-password-validator/commit/274d7c9b27268a0455f80ea518c452532b970ea4#diff-8015f170326f20998060314fda9b92b1)\n\nThen you can translate with :\n\n~~~~bash\npython manage.py makemessages\n# python manage.py createsuperuser ? (You need to login for rosetta)\npython manage.py runserver\n# Access http://localhost:8000/admin to login\n# Then go to http://localhost:8000/rosetta to translate\npython manage.py makemessages --no-obsolete --no-wrap\ngit add survey/locale/\n...\n~~~~\n\nIf your language is not yet available in rosetta,\n[this stack overflow question](https://stackoverflow.com/questions/12946830/)\nshould work even for language not handled by django.\n\n### As a translator\n\nIf you're not a developper, open an issue on github and ask for a .po\nfile in your language. I will generate it for you, so you can edit it with an\nonline editor. I will then create the .po and commit them, so you can edit them\nwith your github account or integrate it myself if you do not have one.\nYou will be credited\n[here](https://github.com/Pierre-Sassoulas/django-survey#language-available).\n\n## Credits\n\nBased on [jessykate's django-survey](https://github.com/jessykate/django-survey),\nand contribution by jibaku, joshualoving, and ijasperyang in forks of jessykate's project.\n\nWe use [anazalea's pySankey](https://github.com/anazalea/pySankey) for sankey's\ndiagram during reporting.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Pierre-Sassoulas/django-survey", "keywords": "", "license": "AGPL", "maintainer": "", "maintainer_email": "", "name": "django-survey-and-report", "package_url": "https://pypi.org/project/django-survey-and-report/", "platform": "", "project_url": "https://pypi.org/project/django-survey-and-report/", "project_urls": {"Homepage": "https://github.com/Pierre-Sassoulas/django-survey"}, "release_url": "https://pypi.org/project/django-survey-and-report/1.3.21/", "requires_dist": ["django-bootstrap-form (>=3.4)", "django-registration (>=3.0)", "django-tastypie (>=0.14.2)", "django (>=2.1.6)", "ordereddict (>=1.1)", "pySankeyBeta (~=1.2.2)", "pytz (>=2018.9)", "pyyaml (>=4.2b1)", "colorama ; extra == 'dev'", "coverage ; extra == 'dev'", "coveralls ; extra == 'dev'", "django-rosetta ; extra == 'dev'", "flake8 ; extra == 'dev'", "pre-commit ; extra == 'dev'", "pylint ; extra == 'dev'", "python-coveralls ; extra == 'dev'"], "requires_python": "", "summary": "A django survey app, based on and compatible with \"django-survey\". You will be able to migrate your data from an ancient version of django-survey, but it has been ported to python 3 and you can export results as CSV or PDF using your native language.", "version": "1.3.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django survey</h1>\n<p>A django survey app, based on and compatible with \"django-survey\".\nYou will be able to migrate your data from an ancient version of\ndjango-survey, but it has been ported to python 3 and you can export results as\nCSV or PDF using your native language.</p>\n<p>If you want the latest version still compatible with python 2.7 you need a\nversion &lt; 1.3.0.</p>\n<p><a href=\"https://travis-ci.org/Pierre-Sassoulas/django-survey\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf76d6556a552456b7dbcf2bf419a386fef51afe/68747470733a2f2f7472617669732d63692e6f72672f5069657272652d536173736f756c61732f646a616e676f2d7375727665792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Pierre-Sassoulas/django-survey?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63411bc30a03638cb70d98df7ee1d2839fbe9ba5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5069657272652d536173736f756c61732f646a616e676f2d7375727665792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/django-survey-and-report\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30b1c380215e5bb141fbb0d3451b3a3260f549aa/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d7375727665792d616e642d7265706f72742e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"http://makeapullrequest.com\" rel=\"nofollow\"><img alt=\"PRs Welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8897c5f5e8a5eacb8ddf983bb640b73cc10464c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting started</a></li>\n<li><a href=\"#making-a-survey\" rel=\"nofollow\">Making a survey</a></li>\n<li><a href=\"#generating-a-pdf-report-from-the-surveys-result\" rel=\"nofollow\">Generating a pdf report from the survey's result</a>\n<ul>\n<li><a href=\"#basic-example\" rel=\"nofollow\">Basic example</a></li>\n<li><a href=\"#sankey-diagram\" rel=\"nofollow\">Sankey's diagram</a></li>\n<li><a href=\"#advanced-example\" rel=\"nofollow\">Advanced example</a></li>\n<li><a href=\"#implementing-a-custom-treatment\" rel=\"nofollow\">Implementing a custom treatment</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing-as-a-developper\" rel=\"nofollow\">Contributing as a developper</a>\n<ul>\n<li><a href=\"#development-environment\" rel=\"nofollow\">Development environment</a></li>\n<li><a href=\"#committing-code\" rel=\"nofollow\">Committing code</a>\n<ul>\n<li><a href=\"#launching-tests\" rel=\"nofollow\">Launching tests</a></li>\n<li><a href=\"#adding-test-data\" rel=\"nofollow\">Adding test data</a></li>\n<li><a href=\"#launching-coverage\" rel=\"nofollow\">Launching coverage</a></li>\n<li><a href=\"#applying-Lint\" rel=\"nofollow\">Applying Lint</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#translating-the-project\" rel=\"nofollow\">Translating the project</a>\n<ul>\n<li><a href=\"#language-available\" rel=\"nofollow\">Language available</a></li>\n<li><a href=\"#as-a-developper\" rel=\"nofollow\">As a developper</a></li>\n<li><a href=\"#as-a-translator\" rel=\"nofollow\">As a translator</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" rel=\"nofollow\">Credit</a></li>\n</ul>\n<h2>Getting started</h2>\n<p>Add <code>django-survey-and-report</code> to your requirements and get it with pip.</p>\n<pre><span class=\"nb\">echo</span> <span class=\"s1\">'django-survey-and-report'</span> &gt; requirements.txt\npip install -r requirements.txt\n</pre>\n<p>Add <code>bootstrapform</code> and <code>survey</code> in the <code>INSTALLED_APPS</code> in your settings :</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n\t<span class=\"c1\"># Your own installed apps here</span>\n<span class=\"p\">]</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">CSV_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"csv\"</span><span class=\"p\">)</span> <span class=\"c1\"># Define the directory where csv are exported</span>\n<span class=\"n\">TEX_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"tex\"</span><span class=\"p\">)</span> <span class=\"c1\">#\u00a0Define the directory where tex files and pdf are exported</span>\n\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n\t<span class=\"s1\">'bootstrapform'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'survey'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add an URL entry to your project\u2019s urls.py, for example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"n\">url</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># Your own url pattern here</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">if</span> <span class=\"s1\">'survey'</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">INSTALLED_APPS</span><span class=\"p\">:</span>\n    <span class=\"n\">urlpatterns</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^survey/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'survey.urls'</span><span class=\"p\">))</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Note: you can use whatever you wish as the URL prefix.</p>\n<p>You can also change some options:</p>\n<pre><span class=\"c1\"># Permit to open the csv in excel without problem with separator</span>\n<span class=\"c1\"># Using this trick : https://superuser.com/a/686415/567417</span>\n<span class=\"n\">EXCEL_COMPATIBLE_CSV</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\">#\u00a0The separator for questions (Default to \",\")</span>\n<span class=\"n\">CHOICES_SEPARATOR</span> <span class=\"o\">=</span> <span class=\"s2\">\"|\"</span>\n\n<span class=\"c1\">#\u00a0What is shown in export when the user do not answer (Default to \"Left blank\")</span>\n<span class=\"n\">USER_DID_NOT_ANSWER</span> <span class=\"o\">=</span> <span class=\"s2\">\"NAA\"</span>\n\n<span class=\"c1\">#\u00a0Path to the Tex configuration file (default to an internal file that should be sufficient)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"n\">TEX_CONFIGURATION_FILE</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"tex\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tex.conf\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#\u00a0Default color for exported pdf pie (default to \"red!50\")</span>\n<span class=\"n\">SURVEY_DEFAULT_PIE_COLOR</span> <span class=\"o\">=</span> <span class=\"s2\">\"blue!50\"</span>\n</pre>\n<p>To uninstall <code>django-survey-and-report</code>, simply comment out or remove the\n'survey' line in your <code>INSTALLED_APPS</code>.</p>\n<p>If you want to use the pdf rendering you need to install <code>xelatex</code>. If you're\nusing the Sankey's diagram generation you will also have to install <code>python-tk</code>\n(for python 2.7) or <code>python3-tk</code> (for python 3.x).</p>\n<h2>Making a survey</h2>\n<p>Using the admin interface you can create surveys, add questions, give questions\ncategories, and mark them as required or not. You can define choices for answers\nusing comma separated words.</p>\n<p><img alt=\"Creating of a question\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b004a799db7340092ea29ae27a9aa456129f8d03/646f632f6372656174696e675f7175657374696f6e732e706e67\"></p>\n<p>The front-end survey view then automatically populates based on the questions\nthat have been defined and published in the admin interface. We use bootstrap3\nto render them.</p>\n<p><img alt=\"Answering a survey\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/670af17780552a4dea1a3fa1e737104da5d71954/646f632f616e73776572696e675f7175657374696f6e732e706e67\"></p>\n<p>Submitted responses can be viewed via the admin backend, in an exported csv\nor in a pdf generated with latex.</p>\n<h2>Generating a pdf report from the survey's result</h2>\n<p>There is a default configuration for PDF generation, but you might want to change\n<code>TEX_CONFIGURATION_FILE</code> for better results (in particular for language other\nthan english).</p>\n<p>You can manage the way the report is created in a yaml file, globally, survey\nby survey, or question by question. In order to render pdf you will need to\ninstall xelatex. You will also need python3-tk for sankey's diagram.</p>\n<p>The results are generated for the server only when needed, but you can force\nit as a developper with:</p>\n<pre>python manage.py exportresult -h\n</pre>\n<p>Following is an example of a configuration file. you can generate one with:</p>\n<pre>python manage.py generatetexconf -h\n</pre>\n<h3>Basic example</h3>\n<pre><span class=\"nt\">generic</span><span class=\"p\">:</span>\n  <span class=\"nt\">document_option</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">11pt</span>\n<span class=\"s\">'Test</span><span class=\"nv\"> </span><span class=\"s\">surv\u00eby'</span><span class=\"p p-Indicator\">:</span>\n  <span class=\"nt\">document_class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">report</span>\n  <span class=\"nt\">questions</span><span class=\"p\">:</span>\n    <span class=\"s\">'Lorem</span><span class=\"nv\"> </span><span class=\"s\">ipsum</span><span class=\"nv\"> </span><span class=\"s\">dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">&lt;strong&gt;</span><span class=\"nv\"> </span><span class=\"s\">consectetur</span><span class=\"nv\"> </span><span class=\"s\">&lt;/strong&gt;</span><span class=\"nv\"> </span><span class=\"s\">adipiscing</span><span class=\"nv\"> </span><span class=\"s\">elit.'</span><span class=\"p p-Indicator\">:</span>\n      <span class=\"nt\">chart</span><span class=\"p\">:</span>\n        <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">polar</span>\n        <span class=\"nt\">text</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pin</span>\n    <span class=\"s\">'Dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">consectetur&lt;strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">adipiscing&lt;/strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">elit.'</span><span class=\"p p-Indicator\">:</span>\n      <span class=\"nt\">chart</span><span class=\"p\">:</span>\n        <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">cloud</span>\n        <span class=\"nt\">text</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">inside</span>\n</pre>\n<p>The pdf is then generated using the very good pgf-pie library.</p>\n<p><img alt=\"The generated pdf for the polar and pin options\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b17e47a676462bd84096730980d5d46864faca78/646f632f7265706f72742e706e67\"></p>\n<p><img alt=\"The generated pdf for the cloud and inside options\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f30e3b70e89725b79742d145192c4b32cdc6670e/646f632f7265706f72745f322e706e67\"></p>\n<h3>Sankey diagram</h3>\n<p>If you installed python3-tk, you can also show the relation between two\nquestions using a sankey diagram :</p>\n<pre><span class=\"s\">'Lorem</span><span class=\"nv\"> </span><span class=\"s\">ipsum</span><span class=\"nv\"> </span><span class=\"s\">dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">&lt;strong&gt;</span><span class=\"nv\"> </span><span class=\"s\">consectetur</span><span class=\"nv\"> </span><span class=\"s\">&lt;/strong&gt;</span><span class=\"nv\"> </span><span class=\"s\">adipiscing</span><span class=\"nv\"> </span><span class=\"s\">elit.'</span><span class=\"p p-Indicator\">:</span>\n  <span class=\"nt\">chart</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sankey</span>\n    <span class=\"nt\">question</span><span class=\"p\">:</span> <span class=\"s\">'Dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">consectetur&lt;strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">adipiscing&lt;/strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">elit.'</span>\n</pre>\n<p>You get this as a result:</p>\n<p><img alt=\"The generated pdf for the sankey example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38ac738d55ebd8b6188954ef5f611bf3f0102dfb/646f632f73616e6b65792e706e67\"></p>\n<h3>Advanced example</h3>\n<p>You can also limit the answers shown by cardinality, filter them, group them\ntogether and choose the color for each answer or group of answers.</p>\n<p>If you use this configuration for the previous question:</p>\n<pre><span class=\"s\">'Test</span><span class=\"nv\"> </span><span class=\"s\">surv\u00eby'</span><span class=\"p p-Indicator\">:</span>\n  <span class=\"s\">'Dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">consectetur&lt;strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">adipiscing&lt;/strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">elit.'</span><span class=\"p p-Indicator\">:</span>\n    <span class=\"nt\">multiple_charts</span><span class=\"p\">:</span>\n      <span class=\"s\">'Sub</span><span class=\"nv\"> </span><span class=\"s\">Sub</span><span class=\"nv\"> </span><span class=\"s\">Section</span><span class=\"nv\"> </span><span class=\"s\">with</span><span class=\"nv\"> </span><span class=\"s\">radius=3'</span><span class=\"p p-Indicator\">:</span>\n        <span class=\"nt\">color</span><span class=\"p\">:</span>\n          <span class=\"nt\">Y\u00ebs</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">blue!50</span>\n          <span class=\"nt\">No</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">red!50</span>\n          <span class=\"nt\">Whatever</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">red!50!blue!50</span>\n        <span class=\"nt\">radius</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">3</span>\n      <span class=\"s\">'Sub</span><span class=\"nv\"> </span><span class=\"s\">Sub</span><span class=\"nv\"> </span><span class=\"s\">Section</span><span class=\"nv\"> </span><span class=\"s\">with</span><span class=\"nv\"> </span><span class=\"s\">text=pin'</span><span class=\"p p-Indicator\">:</span>\n        <span class=\"nt\">group_together</span><span class=\"p\">:</span>\n          <span class=\"nt\">Nah</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">No</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Whatever</span>\n          <span class=\"nt\">K.</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Y\u00ebs</span>\n        <span class=\"nt\">color</span><span class=\"p\">:</span>\n          <span class=\"nt\">Nah</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">blue!33!red!66</span>\n          <span class=\"nt\">K.</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">blue!50</span>\n        <span class=\"nt\">text</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pin</span>\n    <span class=\"nt\">chart</span><span class=\"p\">:</span>\n      <span class=\"nt\">radius</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n      <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">cloud</span>\n      <span class=\"nt\">text</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">inside</span>\n</pre>\n<p>You get this as a result:</p>\n<p><img alt=\"The generated pdf for the multiple charts example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca40c3bf6ea6af4c83dd14bee9a76cb5ee2da11a/646f632f6d756c74696368617274732e706e67\"></p>\n<h3>Implementing a custom treatment</h3>\n<p>If you want to make your own treatment you can use your own class, for example.</p>\n<p>Configuration:</p>\n<pre><span class=\"s\">'Test</span><span class=\"nv\"> </span><span class=\"s\">surv\u00eby'</span><span class=\"p p-Indicator\">:</span>\n  <span class=\"nt\">questions</span><span class=\"p\">:</span>\n    <span class=\"s\">'Ipsum</span><span class=\"nv\"> </span><span class=\"s\">dolor</span><span class=\"nv\"> </span><span class=\"s\">sit</span><span class=\"nv\"> </span><span class=\"s\">am\u00ebt,</span><span class=\"nv\"> </span><span class=\"s\">&lt;strong&gt;</span><span class=\"nv\"> </span><span class=\"s\">consectetur</span><span class=\"nv\"> </span><span class=\"s\">&lt;/strong&gt;</span><span class=\"nv\">  </span><span class=\"s\">adipiscing</span><span class=\"nv\"> </span><span class=\"s\">elit.'</span><span class=\"p p-Indicator\">:</span>\n      <span class=\"nt\">chart</span><span class=\"p\">:</span>\n        <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">survey.tests.exporter.tex.CustomQuestion2TexChild</span>\n</pre>\n<p>Code in <code>survey.tests.exporter.tex.CustomQuestion2TexChild</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">survey.exporter.tex.question2tex_chart</span> <span class=\"kn\">import</span> <span class=\"n\">Question2TexChart</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomQuestion2TexChild</span><span class=\"p\">(</span><span class=\"n\">Question2TexChart</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_results</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">\"polar\"</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"\"\"        2/There were no answer at all,</span>\n<span class=\"s2\">        3/But we have a custom treatment to show some,</span>\n<span class=\"s2\">        2/You can make minor changes too !\"\"\"</span>\n</pre>\n<p>Result:</p>\n<p><img alt=\"The generated pdf for the custom example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14e2ea806ea761240c2bd595e7e6fb34a11e2272/646f632f637573746f6d2e706e67\"></p>\n<p>For a full example of a configuration file look at <code>example_conf.yaml</code> in doc,\nyou can also generate your configuration file with\n<code>python manage.py generatetexconf -h</code>, it will create the default skeleton\nfor every survey and question.</p>\n<p>To guide you during the python development, you can read:</p>\n<ul>\n<li>The default reporter for PieChart in <code>Question2TexChart</code> : <a href=\"https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_chart.py#L13\" rel=\"nofollow\">https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_chart.py#L13</a></li>\n<li>The Sankey reporter in <code>Question3TexSankey</code> : <a href=\"https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_sankey.py#L15\" rel=\"nofollow\">https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_sankey.py#L15</a></li>\n<li>The Raw reporter in <code>Question2TexRax</code> : <a href=\"https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_raw.py\" rel=\"nofollow\">https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_raw.py</a>.</li>\n</ul>\n<p>Do not hesitate to make a pull request with your new exporter if it can be of interest\nfor others I'll integrate it.</p>\n<h2>Contributing as a developper</h2>\n<h3>Development environment</h3>\n<p>This is the typical command you should do to get started:</p>\n<pre>python -m venv venv/ <span class=\"c1\">#\u00a0Create virtualenv</span>\n<span class=\"nb\">source</span> venv/bin/activate <span class=\"c1\">#\u00a0Activate virtualenv</span>\npip install -e <span class=\"s2\">\".[dev]\"</span> <span class=\"c1\">#\u00a0Install dev requirements</span>\npre-commit install <span class=\"c1\">#\u00a0Install pre-commit hook framework</span>\npython manage.py migrate <span class=\"c1\">#\u00a0Create database</span>\npython manage.py loaddata survey/tests/testdump.json <span class=\"c1\">#\u00a0Load test data</span>\npython manage.py createsuperuser\npython manage.py runserver <span class=\"c1\">#\u00a0Launch server</span>\n</pre>\n<p>Please note that <code>pre-commit</code> will permit to fix a lot of linting error\nautomatically and is not required but highly recommended.</p>\n<h3>Committing code</h3>\n<h4>Launching tests</h4>\n<pre>python manage.py <span class=\"nb\">test</span> survey\n</pre>\n<h4>Adding test data</h4>\n<p>If you want to dump a test database after adding data to it, this is\nthe command to have a minimal diff :</p>\n<pre>python manage.py dumpdata --format json -e contenttypes -e admin -e auth.Permission\n-e sessions.session -e sites.site --natural-foreign --indent <span class=\"m\">1</span>\n-o survey/tests/testdump.json\n</pre>\n<h4>Launching coverage</h4>\n<pre>coverage run --source<span class=\"o\">=</span>survey --omit<span class=\"o\">=</span>survey/migrations/* ./manage.py <span class=\"nb\">test</span>\ncoverage html\nxdg-open htmlcov/index.html\n</pre>\n<h4>Applying Lint</h4>\n<p>We're using <code>pre-commit</code>, it should take care of linting during commit.</p>\n<h2>Translating the project</h2>\n<p>Django survey's is available in multiple language.\nYour contribution would be very appreciated if you\nknow a language that is not yet available.</p>\n<h3>Language available</h3>\n<p>The software is developed in english. Other available languages are :</p>\n<ul>\n<li>[x] Chinese thanks to <a href=\"https://github.com/digglife/\" rel=\"nofollow\">\u6731\u8056\u9ece (Zhu Sheng Li)</a> and <a href=\"https://github.com/PaleNeutron\" rel=\"nofollow\">John Lyu</a></li>\n<li>[x] French thanks to <a href=\"https://github.com/Pierre-Sassoulas/\" rel=\"nofollow\">Pierre Sassoulas</a></li>\n<li>[x] Japanese thanks to <a href=\"https://github.com/nsuzue/\" rel=\"nofollow\">Nobukuni Suzue</a></li>\n<li>[x] Spanish thanks to <a href=\"https://github.com/ordonja/\" rel=\"nofollow\">Javier Ord\u00f3\u00f1ez</a> and <a href=\"https://github.com/Pierre-Sassoulas/\" rel=\"nofollow\">Pierre Sassoulas</a></li>\n<li>[x] Russian thanks to <a href=\"https://github.com/manchos/\" rel=\"nofollow\">Vlad M.</a></li>\n<li>[x] German thanks to <a href=\"https://github.com/gjelsas\" rel=\"nofollow\">Georg Elsas</a></li>\n</ul>\n<h3>As a developper</h3>\n<p>If your language do not exists add it in the <code>LANGUAGE</code> variable in the\nsettings, like <a href=\"https://github.com/Pierre-Sassoulas/django-survey/commit/ee3bdba26c303ad12fc4584938e724b39223faa9#diff-bdf3ecebd8379ca98cc89e545fc90899\" rel=\"nofollow\">here</a>.\nDo not forget to credit yourself like in the header seen\n<a href=\"https://github.com/Pierre-Sassoulas/django-zxcvbn-password-validator/commit/274d7c9b27268a0455f80ea518c452532b970ea4#diff-8015f170326f20998060314fda9b92b1\" rel=\"nofollow\">here</a></p>\n<p>Then you can translate with :</p>\n<pre>python manage.py makemessages\n<span class=\"c1\"># python manage.py createsuperuser ? (You need to login for rosetta)</span>\npython manage.py runserver\n<span class=\"c1\"># Access http://localhost:8000/admin to login</span>\n<span class=\"c1\"># Then go to http://localhost:8000/rosetta to translate</span>\npython manage.py makemessages --no-obsolete --no-wrap\ngit add survey/locale/\n...\n</pre>\n<p>If your language is not yet available in rosetta,\n<a href=\"https://stackoverflow.com/questions/12946830/\" rel=\"nofollow\">this stack overflow question</a>\nshould work even for language not handled by django.</p>\n<h3>As a translator</h3>\n<p>If you're not a developper, open an issue on github and ask for a .po\nfile in your language. I will generate it for you, so you can edit it with an\nonline editor. I will then create the .po and commit them, so you can edit them\nwith your github account or integrate it myself if you do not have one.\nYou will be credited\n<a href=\"https://github.com/Pierre-Sassoulas/django-survey#language-available\" rel=\"nofollow\">here</a>.</p>\n<h2>Credits</h2>\n<p>Based on <a href=\"https://github.com/jessykate/django-survey\" rel=\"nofollow\">jessykate's django-survey</a>,\nand contribution by jibaku, joshualoving, and ijasperyang in forks of jessykate's project.</p>\n<p>We use <a href=\"https://github.com/anazalea/pySankey\" rel=\"nofollow\">anazalea's pySankey</a> for sankey's\ndiagram during reporting.</p>\n\n          </div>"}, "last_serial": 6757690, "releases": {"1.2.3": [{"comment_text": "", "digests": {"md5": "9ac6bd4a25a05ad80dbfb48e679823f1", "sha256": "96acbf10a95a01d9c17e89e319c6120718711a409b2fbe0ac4968e11fa8c2447"}, "downloads": -1, "filename": "django-survey-and-report-1.2.3.tar.gz", "has_sig": false, "md5_digest": "9ac6bd4a25a05ad80dbfb48e679823f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 292903, "upload_time": "2018-09-22T07:51:36", "upload_time_iso_8601": "2018-09-22T07:51:36.123960Z", "url": "https://files.pythonhosted.org/packages/3d/16/8878fb6b18bcd3a4dc4e8b167a89c82d4c216fc781071319bcef1dcc758f/django-survey-and-report-1.2.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "99bd7b004f75e6e096dfc7e45bc35340", "sha256": "a896d47e34f2656f2e456a969e0d57baca4f2edf76427f6fdb69cdbe072835a8"}, "downloads": -1, "filename": "django-survey-and-report-1.3.1.tar.gz", "has_sig": false, "md5_digest": "99bd7b004f75e6e096dfc7e45bc35340", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 293407, "upload_time": "2018-09-22T07:04:21", "upload_time_iso_8601": "2018-09-22T07:04:21.546356Z", "url": "https://files.pythonhosted.org/packages/b0/18/380c589bd85f056deb03a583fba9f7de3605b16ebcc524f46f066bc1345d/django-survey-and-report-1.3.1.tar.gz", "yanked": false}], "1.3.10": [{"comment_text": "", "digests": {"md5": "1ebdc7abf63cadc2e97238803dfe30af", "sha256": "3646632749827bfc8f728e0c41ae45cbb508db2c1bbce94a0a512602ea2e8d2a"}, "downloads": -1, "filename": "django-survey-and-report-1.3.10.tar.gz", "has_sig": false, "md5_digest": "1ebdc7abf63cadc2e97238803dfe30af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 304721, "upload_time": "2019-09-30T20:59:39", "upload_time_iso_8601": "2019-09-30T20:59:39.418341Z", "url": "https://files.pythonhosted.org/packages/4a/33/88b548b88c1c8b2d64d845c230a223cb6ea60ac263b1efbba0a4cd4eee2f/django-survey-and-report-1.3.10.tar.gz", "yanked": false}], "1.3.11": [{"comment_text": "", "digests": {"md5": "4a5a7116c3c7d13e42c7e60e1261ab31", "sha256": "62563a70a88c06b624d3bc33111e98474450a7f13160d9bbf04afec2074b0244"}, "downloads": -1, "filename": "django-survey-and-report-1.3.11.tar.gz", "has_sig": false, "md5_digest": "4a5a7116c3c7d13e42c7e60e1261ab31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305287, "upload_time": "2019-10-13T10:56:10", "upload_time_iso_8601": "2019-10-13T10:56:10.901808Z", "url": "https://files.pythonhosted.org/packages/8a/36/910924aeeb8a27aa0e7b46d7721c4c7bfe8aea18b4720890d22fe028744f/django-survey-and-report-1.3.11.tar.gz", "yanked": false}], "1.3.13": [{"comment_text": "", "digests": {"md5": "ebdefd5b7b8bb45c52e6209a5682bb77", "sha256": "6eb284eb28a34b7f42190117a6f834d1234b3b50e763d4aba572fa87222a5f29"}, "downloads": -1, "filename": "django-survey-and-report-1.3.13.tar.gz", "has_sig": false, "md5_digest": "ebdefd5b7b8bb45c52e6209a5682bb77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 326611, "upload_time": "2020-01-17T15:55:42", "upload_time_iso_8601": "2020-01-17T15:55:42.866326Z", "url": "https://files.pythonhosted.org/packages/a4/a7/efc7bf8413456486272413d8d4b6c54e872648df42bbf858620d193a8cbe/django-survey-and-report-1.3.13.tar.gz", "yanked": false}], "1.3.14": [{"comment_text": "", "digests": {"md5": "06bd4d5463775af9e8ed991135de6f80", "sha256": "b307805a1421232c9cf4911b13c6f471729f49187ba7e66e188f81b312001141"}, "downloads": -1, "filename": "django-survey-and-report-1.3.14.tar.gz", "has_sig": false, "md5_digest": "06bd4d5463775af9e8ed991135de6f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 334359, "upload_time": "2020-02-05T22:20:29", "upload_time_iso_8601": "2020-02-05T22:20:29.899273Z", "url": "https://files.pythonhosted.org/packages/55/9e/769696f36b71148478a6f48110da4169f3b22a46e16f2573b896e843279c/django-survey-and-report-1.3.14.tar.gz", "yanked": false}], "1.3.15": [{"comment_text": "", "digests": {"md5": "69bbab59a20c83563839101c8b5c834c", "sha256": "8fde49ad0cc66505ec10c2046166b850681658102acdb1815c7328cd801be413"}, "downloads": -1, "filename": "django_survey_and_report-1.3.15-py3-none-any.whl", "has_sig": false, "md5_digest": "69bbab59a20c83563839101c8b5c834c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 319891, "upload_time": "2020-02-09T20:20:00", "upload_time_iso_8601": "2020-02-09T20:20:00.227985Z", "url": "https://files.pythonhosted.org/packages/6b/a2/acc9bb76f879b4205052104818cdda8a819cb523583015d360474408ae85/django_survey_and_report-1.3.15-py3-none-any.whl", "yanked": false}], "1.3.16": [{"comment_text": "", "digests": {"md5": "f0936a1e98b76dde3b0d5a3e47b0f0c5", "sha256": "8a1d880efbd1ac1468a57b587db27191750b8bf091ca3d8429cb970744534624"}, "downloads": -1, "filename": "django_survey_and_report-1.3.16-py3-none-any.whl", "has_sig": false, "md5_digest": "f0936a1e98b76dde3b0d5a3e47b0f0c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 319923, "upload_time": "2020-02-09T22:04:27", "upload_time_iso_8601": "2020-02-09T22:04:27.905737Z", "url": "https://files.pythonhosted.org/packages/e2/ea/6ad29f41a1fd28bcd4a2b8a55cffd975d881a9a73e8e61abb7af07d23b93/django_survey_and_report-1.3.16-py3-none-any.whl", "yanked": false}], "1.3.17": [{"comment_text": "", "digests": {"md5": "e4b0ae54ad00688259d520075b1808d6", "sha256": "25054fa1960c86a6bb9d4c0ea61d221e0fa28cf639bfadf25e69c84f8a6fec0d"}, "downloads": -1, "filename": "django_survey_and_report-1.3.17-py3-none-any.whl", "has_sig": false, "md5_digest": "e4b0ae54ad00688259d520075b1808d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 432088, "upload_time": "2020-02-21T07:53:05", "upload_time_iso_8601": "2020-02-21T07:53:05.607829Z", "url": "https://files.pythonhosted.org/packages/15/c0/a915e7903b1439f43ef3d2bf8f18fae2f504c6deeaa5462d95df1f8a156f/django_survey_and_report-1.3.17-py3-none-any.whl", "yanked": false}], "1.3.18": [{"comment_text": "", "digests": {"md5": "a48d13c7a64ca74fe0c6377f79a71b44", "sha256": "f0531be22c2c52faafc6bd5991372b7e487d6d08189b78783232999bedf57e97"}, "downloads": -1, "filename": "django_survey_and_report-1.3.18-py3-none-any.whl", "has_sig": false, "md5_digest": "a48d13c7a64ca74fe0c6377f79a71b44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 433401, "upload_time": "2020-02-22T13:07:31", "upload_time_iso_8601": "2020-02-22T13:07:31.962515Z", "url": "https://files.pythonhosted.org/packages/a5/79/2b265814b9805e4341a694def2f2ca42cb60796e631c7d6cead2c755ca87/django_survey_and_report-1.3.18-py3-none-any.whl", "yanked": false}], "1.3.19": [{"comment_text": "", "digests": {"md5": "b15e8fa68f090f1681d35f3885997016", "sha256": "82c76fb7c878cd35e7e4421e0aa35be7d9595091eacd092879540dfbec9f7851"}, "downloads": -1, "filename": "django_survey_and_report-1.3.19-py3-none-any.whl", "has_sig": false, "md5_digest": "b15e8fa68f090f1681d35f3885997016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 433442, "upload_time": "2020-02-22T19:24:02", "upload_time_iso_8601": "2020-02-22T19:24:02.679813Z", "url": "https://files.pythonhosted.org/packages/ed/c5/d56e86d74c181c838a8ad0735b17fd5763f16b6b9d29b5c90edd77341597/django_survey_and_report-1.3.19-py3-none-any.whl", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "87420fedae853e039a50e40005ee2dfc", "sha256": "9b5a9d942d71966c20c996df06f93bce2a6ecd23e3259f510af5d4beb8d01ffc"}, "downloads": -1, "filename": "django-survey-and-report-1.3.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "87420fedae853e039a50e40005ee2dfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348281, "upload_time": "2018-12-13T21:11:17", "upload_time_iso_8601": "2018-12-13T21:11:17.807599Z", "url": "https://files.pythonhosted.org/packages/16/c4/a2c7c1082e32c78dfe763a98515ecea19293fa512fbb5d0fed1fe027bb57/django-survey-and-report-1.3.2.linux-x86_64.tar.gz", "yanked": false}], "1.3.20": [{"comment_text": "", "digests": {"md5": "490b6b31c4c43bc9ca166e5e9ba723e2", "sha256": "4c017526235a41a3d4cdb846fc9564a170d5d3ce6f64fe699e8ac5b84c30e088"}, "downloads": -1, "filename": "django_survey_and_report-1.3.20-py3-none-any.whl", "has_sig": false, "md5_digest": "490b6b31c4c43bc9ca166e5e9ba723e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 435982, "upload_time": "2020-02-23T16:22:10", "upload_time_iso_8601": "2020-02-23T16:22:10.893725Z", "url": "https://files.pythonhosted.org/packages/97/49/6fb5d80abbd278c12220fc3d6c4adcd1ec32c31e6eb0ac2fad0d217e6238/django_survey_and_report-1.3.20-py3-none-any.whl", "yanked": false}], "1.3.21": [{"comment_text": "", "digests": {"md5": "2702ec05aa9783a58372c5c4e5c0a911", "sha256": "489a342d5936502868e5dff13d5dd57408e78f46b54a6fd187e98905646398b0"}, "downloads": -1, "filename": "django_survey_and_report-1.3.21-py3-none-any.whl", "has_sig": false, "md5_digest": "2702ec05aa9783a58372c5c4e5c0a911", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 442930, "upload_time": "2020-03-05T21:23:14", "upload_time_iso_8601": "2020-03-05T21:23:14.127602Z", "url": "https://files.pythonhosted.org/packages/56/a3/668c11775f732c1211073121474dcc1a1a11ba662f25e306ef1dc9d850eb/django_survey_and_report-1.3.21-py3-none-any.whl", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "9b37220bc4233864b1bf1973e81a826b", "sha256": "612372f6050f88956b43b24b2ad50b0c961c20cb427cca60d800a2bc1dcf6839"}, "downloads": -1, "filename": "django-survey-and-report-1.3.3.tar.gz", "has_sig": false, "md5_digest": "9b37220bc4233864b1bf1973e81a826b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342292, "upload_time": "2019-01-09T20:42:57", "upload_time_iso_8601": "2019-01-09T20:42:57.528514Z", "url": "https://files.pythonhosted.org/packages/f3/64/a845e214573dcb9d9942a43fdc2d3188d5e8192a672496583707225cde20/django-survey-and-report-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "9ac59620ab286807033007ed4fe12b19", "sha256": "ae0dfd33383eb047ca66ad6a44e1dda359c7397dbc9b00194cd44c2f387307f0"}, "downloads": -1, "filename": "django-survey-and-report-1.3.4.tar.gz", "has_sig": false, "md5_digest": "9ac59620ab286807033007ed4fe12b19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342286, "upload_time": "2019-01-09T20:51:18", "upload_time_iso_8601": "2019-01-09T20:51:18.786543Z", "url": "https://files.pythonhosted.org/packages/b7/4f/27d120e37bf8487e2418584b315b99f97bfd3be92f091c3882841938d1e5/django-survey-and-report-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "94f5b173d88198e8ca57ede3ed81fabf", "sha256": "212513b6ee98f7fd2aadcfea32b1803d3dce1b637048d51d55397767cbcd8dc5"}, "downloads": -1, "filename": "django-survey-and-report-1.3.5.tar.gz", "has_sig": false, "md5_digest": "94f5b173d88198e8ca57ede3ed81fabf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 344200, "upload_time": "2019-02-27T21:49:42", "upload_time_iso_8601": "2019-02-27T21:49:42.932091Z", "url": "https://files.pythonhosted.org/packages/94/c6/5ae052f3033dd542105b1c5d8d4bfebf0b996d3b72df0bef31912b8588a6/django-survey-and-report-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "0c2e741799b341a8186c57a81bb8941b", "sha256": "d5754c4f1fa4793b920e220c2d4a5319d53140ffe8ae385278ea5c7345369fa3"}, "downloads": -1, "filename": "django-survey-and-report-1.3.6.tar.gz", "has_sig": false, "md5_digest": "0c2e741799b341a8186c57a81bb8941b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 304769, "upload_time": "2019-03-26T22:27:11", "upload_time_iso_8601": "2019-03-26T22:27:11.457108Z", "url": "https://files.pythonhosted.org/packages/1a/92/60787290b1fc6ca2c9e5994c09da9d505b3165597900394e19b4557c39f9/django-survey-and-report-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "27a62aaeb11a318a39d02e8ce009fb42", "sha256": "14de397912e5e0c4678be6cd828469184301c5e1a6affef3e5398dd9416a9ca7"}, "downloads": -1, "filename": "django-survey-and-report-1.3.7.tar.gz", "has_sig": false, "md5_digest": "27a62aaeb11a318a39d02e8ce009fb42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 303366, "upload_time": "2019-05-25T06:16:46", "upload_time_iso_8601": "2019-05-25T06:16:46.791739Z", "url": "https://files.pythonhosted.org/packages/7f/ee/f7f45865e34d939861737d08c9e97bbbecb96eb1d8e30cec621e9d90d483/django-survey-and-report-1.3.7.tar.gz", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "bdb809fa2b356bfa7602c644306e92fa", "sha256": "746ba9aca4ae411fb0824acee324560defdb9d37b56c3427b599ce7ec4e027df"}, "downloads": -1, "filename": "django-survey-and-report-1.3.8.tar.gz", "has_sig": false, "md5_digest": "bdb809fa2b356bfa7602c644306e92fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 303381, "upload_time": "2019-06-20T06:04:13", "upload_time_iso_8601": "2019-06-20T06:04:13.267125Z", "url": "https://files.pythonhosted.org/packages/31/21/c849cdc7c69cdb0e1b21f33b5af35081ae865358b422fbaff0b1d8d4b8b1/django-survey-and-report-1.3.8.tar.gz", "yanked": false}], "1.3.9": [{"comment_text": "", "digests": {"md5": "243d6beff7976f0bbe6719a5e83ed57e", "sha256": "f0b8296778c41e982ee11f0876911e26a3d68a4c37fef8d35f9df907a706e1a4"}, "downloads": -1, "filename": "django-survey-and-report-1.3.9.tar.gz", "has_sig": false, "md5_digest": "243d6beff7976f0bbe6719a5e83ed57e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 303517, "upload_time": "2019-09-21T09:06:32", "upload_time_iso_8601": "2019-09-21T09:06:32.809059Z", "url": "https://files.pythonhosted.org/packages/12/db/dd724d475f0c8335b2fbc2f9b757d08ebd7cbdabb4c22ba742a025e6bdef/django-survey-and-report-1.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2702ec05aa9783a58372c5c4e5c0a911", "sha256": "489a342d5936502868e5dff13d5dd57408e78f46b54a6fd187e98905646398b0"}, "downloads": -1, "filename": "django_survey_and_report-1.3.21-py3-none-any.whl", "has_sig": false, "md5_digest": "2702ec05aa9783a58372c5c4e5c0a911", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 442930, "upload_time": "2020-03-05T21:23:14", "upload_time_iso_8601": "2020-03-05T21:23:14.127602Z", "url": "https://files.pythonhosted.org/packages/56/a3/668c11775f732c1211073121474dcc1a1a11ba662f25e306ef1dc9d850eb/django_survey_and_report-1.3.21-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:52:47 2020"}