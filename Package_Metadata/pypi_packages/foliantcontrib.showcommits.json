{"info": {"author": "Artemy Lomov", "author_email": "artemy@lomov.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Utilities"], "description": "# ShowCommits Preprocessor\n\nShowCommits is a preprocessor that appends the history of Git commits corresponding to the current processed file to its content.\n\n## Installation\n\n```bash\n$ pip install foliantcontrib.showcommits\n```\n\n## Config\n\nTo enable the preprocessor, add `showcommits` to `preprocessors` section in the project config:\n\n```yaml\npreprocessors:\n    - showcommits\n```\n\nThe preprocessor has a number of options with the following default values:\n\n~~~yaml\npreprocessors:\n    - showcommits:\n        repo_path: !rel_path ./    # Path object that points to the current Foliant project\u2019s top-level (\u201croot\u201d) directory when the preprocessor initializes\n        try_default_path: true\n        remote_name: origin\n        self-hosted: gitlab\n        protocol: https\n        position: after_content\n        date_format: year_first\n        escape_html: true\n        template: |\n            ## File History\n\n            {{startcommits}}\n            Commit: [{{hash}}]({{url}}), author: [{{author}}]({{email}}), date: {{date}}\n\n            {{message}}\n\n            ```diff\n            {{diff}}\n            ```\n            {{endcommits}}\n        targets: []\n~~~\n\n`repo_path`\n:   Path to the locally cloned copy of the Git repository that the current Foliant project\u2019s files belong to.\n\n`try_default_path`\n:   Flag that tells the preprocessor to try to use the default `repo_path` if user-specified `repo_path` does not exist.\n\n`remote_name`\n:   Identifier of remote repository; in most cases you don\u2019t need to override the default value.\n\n`self-hosted`\n:   String that defines the rules of commit\u2019s web URL anchor generation when a self-hosted Git repositories management system with web interface is used. Supported values are: `github` for GitHub, `gitlab` for GitLab, and `bitbucket` for BitBucket. If the repo fetch URL hostname is `github.com`, `gitlab.com`, or `bitbucket.org`, the corresponding rules are applied automatically.\n\n`protocol`\n:   Web interface URL prefix of a repos management system. Supported values are `https` and `http`.\n\n`position`\n:   String that defines where the history of commits should be placed. Supported values are: `after_content` for concatenating the history with the currently processed Markdown file content, and `defined_by_tag` for replacing the tags `<<commits></commits>` with the history.\n\n`date_format`\n:   Output date format. If the default value `year_first` is used, the date \u201cDecember 11, 2019\u201d will be represented as `2019-12-11`. If the `day_first` value is used, this date will be represented as `11.12.2019`.\n\n`escape_html`\n:   Flag that tells the preprocessor to replace HTML control characters with corresponding HTML entities in commit messages and diffs: `&` with `&amp;`, `<` with `&lt;`, `>` with `&gt;`, `\"` with `&quot;`.\n\n`template`\n:   Template to render the history of commits. If the value is a string that contains one or more newlines (`\\n`) or double opening curly braces (`{{`), it is interpreted as a template itself. If the value is a string without newlines and any double opening curly braces, or a `Path` object, it is interpreted as a path to the file that contains a template. Template syntax is described below.\n\n`targets`\n:   Allowed targets for the preprocessor. If not specified (by default), the preprocessor applies to all targets.\n\n## Usage\n\nYou may override the default template to customize the commits history formatting and rendering. Feel free to use Markdown syntax, HTML, CSS, and JavaScript in your custom templates.\n\nIn templates, a number of placeholders is supported.\n\n`{{startcommits}}`\n:   Beginning of the list of commits that is rendered within a loop. Before this placeholder, you may use some common stuff like an introducing heading or a stylesheet.\n\n`{{endcommits}}`\n:   End of the list of commits. After this placeholder, you also may use some common stuff like a paragraph of text or a script.\n\nThe following placeholders affect only between the `{{startcommits}}` and `{{endcommits}}`.\n\n`{{hash}}`\n:   First 8 digits of the commit hash, e.g. `deadc0de`.\n\n`{{url}}`\n:   Web URL of commit with an anchor that points to the certain file, e.g. `https://github.com/foliant-docs/foliant/commit/67138f7c#diff-478b1f78b2146021bce46fbf833eb636`. If you don\u2019t use a repos management system with web interface, you don\u2019t need this placeholder.\n\n`{{author}}`\n:   Author name, e.g. `Artemy Lomov`.\n\n`{{email}}`\n:   Author email, e.g. `artemy@lomov.ru`.\n\n`{{date}}`\n:   Formatted date, e.g. `2019-12-11`.\n\n`{{message}}`\n:   Commit message, e.g. `Bump version to 1.0.1.`.\n\n`{{diff}}`\n:   Diff between the currently processed Markdown file at a certain commit and the same file at the previous state.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/foliant-docs/foliantcontrib.showcommits", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "foliantcontrib.showcommits", "package_url": "https://pypi.org/project/foliantcontrib.showcommits/", "platform": "any", "project_url": "https://pypi.org/project/foliantcontrib.showcommits/", "project_urls": {"Homepage": "https://github.com/foliant-docs/foliantcontrib.showcommits"}, "release_url": "https://pypi.org/project/foliantcontrib.showcommits/1.0.2/", "requires_dist": ["foliant (>=1.0.4)"], "requires_python": "", "summary": "ShowCommits preprocessor for Foliant.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ShowCommits Preprocessor</h1>\n<p>ShowCommits is a preprocessor that appends the history of Git commits corresponding to the current processed file to its content.</p>\n<h2>Installation</h2>\n<pre>$ pip install foliantcontrib.showcommits\n</pre>\n<h2>Config</h2>\n<p>To enable the preprocessor, add <code>showcommits</code> to <code>preprocessors</code> section in the project config:</p>\n<pre><span class=\"nt\">preprocessors</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">showcommits</span>\n</pre>\n<p>The preprocessor has a number of options with the following default values:</p>\n<pre><span class=\"nt\">preprocessors</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">showcommits</span><span class=\"p\">:</span>\n        <span class=\"nt\">repo_path</span><span class=\"p\">:</span> <span class=\"kt\">!rel_path</span> <span class=\"l l-Scalar l-Scalar-Plain\">./</span>    <span class=\"c1\"># Path object that points to the current Foliant project\u2019s top-level (\u201croot\u201d) directory when the preprocessor initializes</span>\n        <span class=\"nt\">try_default_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n        <span class=\"nt\">remote_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">origin</span>\n        <span class=\"nt\">self-hosted</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">gitlab</span>\n        <span class=\"nt\">protocol</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https</span>\n        <span class=\"nt\">position</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">after_content</span>\n        <span class=\"nt\">date_format</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">year_first</span>\n        <span class=\"nt\">escape_html</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n        <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n            <span class=\"no\">## File History</span>\n\n            <span class=\"no\">{{startcommits}}</span>\n            <span class=\"no\">Commit: [{{hash}}]({{url}}), author: [{{author}}]({{email}}), date: {{date}}</span>\n\n            <span class=\"no\">{{message}}</span>\n\n            <span class=\"no\">```diff</span>\n            <span class=\"no\">{{diff}}</span>\n            <span class=\"no\">```</span>\n            <span class=\"no\">{{endcommits}}</span>\n        <span class=\"nt\">targets</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[]</span>\n</pre>\n<p><code>repo_path</code>\n:   Path to the locally cloned copy of the Git repository that the current Foliant project\u2019s files belong to.</p>\n<p><code>try_default_path</code>\n:   Flag that tells the preprocessor to try to use the default <code>repo_path</code> if user-specified <code>repo_path</code> does not exist.</p>\n<p><code>remote_name</code>\n:   Identifier of remote repository; in most cases you don\u2019t need to override the default value.</p>\n<p><code>self-hosted</code>\n:   String that defines the rules of commit\u2019s web URL anchor generation when a self-hosted Git repositories management system with web interface is used. Supported values are: <code>github</code> for GitHub, <code>gitlab</code> for GitLab, and <code>bitbucket</code> for BitBucket. If the repo fetch URL hostname is <code>github.com</code>, <code>gitlab.com</code>, or <code>bitbucket.org</code>, the corresponding rules are applied automatically.</p>\n<p><code>protocol</code>\n:   Web interface URL prefix of a repos management system. Supported values are <code>https</code> and <code>http</code>.</p>\n<p><code>position</code>\n:   String that defines where the history of commits should be placed. Supported values are: <code>after_content</code> for concatenating the history with the currently processed Markdown file content, and <code>defined_by_tag</code> for replacing the tags <code>&lt;&lt;commits&gt;&lt;/commits&gt;</code> with the history.</p>\n<p><code>date_format</code>\n:   Output date format. If the default value <code>year_first</code> is used, the date \u201cDecember 11, 2019\u201d will be represented as <code>2019-12-11</code>. If the <code>day_first</code> value is used, this date will be represented as <code>11.12.2019</code>.</p>\n<p><code>escape_html</code>\n:   Flag that tells the preprocessor to replace HTML control characters with corresponding HTML entities in commit messages and diffs: <code>&amp;</code> with <code>&amp;amp;</code>, <code>&lt;</code> with <code>&amp;lt;</code>, <code>&gt;</code> with <code>&amp;gt;</code>, <code>\"</code> with <code>&amp;quot;</code>.</p>\n<p><code>template</code>\n:   Template to render the history of commits. If the value is a string that contains one or more newlines (<code>\\n</code>) or double opening curly braces (<code>{{</code>), it is interpreted as a template itself. If the value is a string without newlines and any double opening curly braces, or a <code>Path</code> object, it is interpreted as a path to the file that contains a template. Template syntax is described below.</p>\n<p><code>targets</code>\n:   Allowed targets for the preprocessor. If not specified (by default), the preprocessor applies to all targets.</p>\n<h2>Usage</h2>\n<p>You may override the default template to customize the commits history formatting and rendering. Feel free to use Markdown syntax, HTML, CSS, and JavaScript in your custom templates.</p>\n<p>In templates, a number of placeholders is supported.</p>\n<p><code>{{startcommits}}</code>\n:   Beginning of the list of commits that is rendered within a loop. Before this placeholder, you may use some common stuff like an introducing heading or a stylesheet.</p>\n<p><code>{{endcommits}}</code>\n:   End of the list of commits. After this placeholder, you also may use some common stuff like a paragraph of text or a script.</p>\n<p>The following placeholders affect only between the <code>{{startcommits}}</code> and <code>{{endcommits}}</code>.</p>\n<p><code>{{hash}}</code>\n:   First 8 digits of the commit hash, e.g. <code>deadc0de</code>.</p>\n<p><code>{{url}}</code>\n:   Web URL of commit with an anchor that points to the certain file, e.g. <code>https://github.com/foliant-docs/foliant/commit/67138f7c#diff-478b1f78b2146021bce46fbf833eb636</code>. If you don\u2019t use a repos management system with web interface, you don\u2019t need this placeholder.</p>\n<p><code>{{author}}</code>\n:   Author name, e.g. <code>Artemy Lomov</code>.</p>\n<p><code>{{email}}</code>\n:   Author email, e.g. <code>artemy@lomov.ru</code>.</p>\n<p><code>{{date}}</code>\n:   Formatted date, e.g. <code>2019-12-11</code>.</p>\n<p><code>{{message}}</code>\n:   Commit message, e.g. <code>Bump version to 1.0.1.</code>.</p>\n<p><code>{{diff}}</code>\n:   Diff between the currently processed Markdown file at a certain commit and the same file at the previous state.</p>\n\n          </div>"}, "last_serial": 6989211, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "add0f6de479615193830a597900165c6", "sha256": "3f3a1d67a6f3d29549b4cdf1cb19852b67b5e938580d52d7bb35a0c03a3a4b96"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "add0f6de479615193830a597900165c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7062, "upload_time": "2019-12-11T15:47:16", "upload_time_iso_8601": "2019-12-11T15:47:16.830856Z", "url": "https://files.pythonhosted.org/packages/47/48/6a41170cd8e1e75dc12ffa998e447c7801cd8c41cc84b1411eb8afdd6968/foliantcontrib.showcommits-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4270d66d83c8f6f4a8e9bc19f6272fe", "sha256": "df835d3ca6287ab70c0ef277e1ad5e35076edd4158f916350b9c021f32776e5c"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e4270d66d83c8f6f4a8e9bc19f6272fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5975, "upload_time": "2019-12-11T15:47:19", "upload_time_iso_8601": "2019-12-11T15:47:19.270593Z", "url": "https://files.pythonhosted.org/packages/82/68/ec5ea3271dd584484688721564081b1113e2c66eeaab90597650d5d2741c/foliantcontrib.showcommits-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "16f60f394611940dbc82b0225ec4fba4", "sha256": "b9c58db85e5c0b6f279b161e10ca173a27291fb6a515988d3b4f6cab8474cdfb"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "16f60f394611940dbc82b0225ec4fba4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7065, "upload_time": "2019-12-12T13:12:01", "upload_time_iso_8601": "2019-12-12T13:12:01.235146Z", "url": "https://files.pythonhosted.org/packages/56/5e/55e404a1b91515457f2e3861c4b6d1ed7dc8f76f3d9d521ca3a9b1cff463/foliantcontrib.showcommits-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82afdeba4f0fc59536ebc75212d968fb", "sha256": "835614247b8c320cdacb879a495de734b729f2842a67aa068fa423e47ef660fe"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.1.tar.gz", "has_sig": false, "md5_digest": "82afdeba4f0fc59536ebc75212d968fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5976, "upload_time": "2019-12-12T13:12:02", "upload_time_iso_8601": "2019-12-12T13:12:02.770879Z", "url": "https://files.pythonhosted.org/packages/e2/1e/79649426354f3f2f4d12c882073b5b8d206193f16cc8150d72d553038dc2/foliantcontrib.showcommits-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9cfb3f375e03720169ffdc2dd8dc34d5", "sha256": "0eceeb2571a27a8a25dd0ef994cd11aabeafc16f43e3420538226baaa3f05784"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9cfb3f375e03720169ffdc2dd8dc34d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7378, "upload_time": "2020-04-09T21:07:15", "upload_time_iso_8601": "2020-04-09T21:07:15.623732Z", "url": "https://files.pythonhosted.org/packages/65/ed/7f808f4fbbbc2f18347d3f6b1821abcb398944705c501d60935163f12627/foliantcontrib.showcommits-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef1d0cb16ab324d917d4ef89d129dc21", "sha256": "24420908e21b73838e978acbbe4c707f5b59fccca78f083c21c553b78dcc161b"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ef1d0cb16ab324d917d4ef89d129dc21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6327, "upload_time": "2020-04-09T21:07:17", "upload_time_iso_8601": "2020-04-09T21:07:17.180868Z", "url": "https://files.pythonhosted.org/packages/b8/08/87f7abf2e6ebec0e26c847eaa5d074047c0ab20bfd01a61cd638f5133135/foliantcontrib.showcommits-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9cfb3f375e03720169ffdc2dd8dc34d5", "sha256": "0eceeb2571a27a8a25dd0ef994cd11aabeafc16f43e3420538226baaa3f05784"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9cfb3f375e03720169ffdc2dd8dc34d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7378, "upload_time": "2020-04-09T21:07:15", "upload_time_iso_8601": "2020-04-09T21:07:15.623732Z", "url": "https://files.pythonhosted.org/packages/65/ed/7f808f4fbbbc2f18347d3f6b1821abcb398944705c501d60935163f12627/foliantcontrib.showcommits-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef1d0cb16ab324d917d4ef89d129dc21", "sha256": "24420908e21b73838e978acbbe4c707f5b59fccca78f083c21c553b78dcc161b"}, "downloads": -1, "filename": "foliantcontrib.showcommits-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ef1d0cb16ab324d917d4ef89d129dc21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6327, "upload_time": "2020-04-09T21:07:17", "upload_time_iso_8601": "2020-04-09T21:07:17.180868Z", "url": "https://files.pythonhosted.org/packages/b8/08/87f7abf2e6ebec0e26c847eaa5d074047c0ab20bfd01a61cd638f5133135/foliantcontrib.showcommits-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:07 2020"}