{"info": {"author": "Stian Soiland-Reyes", "author_email": "stain@apache.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Archiving", "Topic :: System :: Archiving :: Packaging"], "description": "arcp-py\n=======\n\nCreate/parse arcp_ (Archive and Package) URIs.\n\n.. image:: https://readthedocs.org/projects/arcp/badge/?version=latest\n  :target: https://arcp.readthedocs.io/en/latest/?badge=latest\n  :alt: Documentation Status\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1162749.svg\n  :target: https://doi.org/10.5281/zenodo.1162749\n.. image:: https://travis-ci.org/stain/arcp-py.svg?branch=master\n  :target: https://travis-ci.org/stain/arcp-py\n.. image:: https://img.shields.io/pypi/v/arcp.svg?maxAge=86400\n  :target: https://pypi.org/project/arcp/\n.. image:: https://coveralls.io/repos/github/stain/arcp-py/badge.svg?branch=master\n  :target: https://coveralls.io/github/stain/arcp-py?branch=master\n.. image:: https://codecov.io/gh/stain/arcp-py/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/stain/arcp-py\n\n\n\n\nIntroduction\n------------\n\n``arcp`` provides functions for creating arcp_ URIs, \nwhich can be used for identifying or parsing hypermedia \nfiles packaged in an archive or package, like a ZIP file.\n\narcp URIs can be used to consume or reference hypermedia resources \nbundled inside a file archive or an application package, as well as \nto resolve URIs for archive resources within a programmatic framework.\n\nThis URI scheme provides mechanisms to generate a unique base URI \nto represent the root of the archive, so that relative URI references \nin a bundled resource can be resolved within the archive without having to extract the archive content on the local file system.\n\nAn arcp URI can be used for purposes of isolation (e.g. when consuming \nmultiple archives), security constraints (avoiding \u201cclimb out\u201d from the\narchive), or for externally identiyfing sub-resources referenced by\nhypermedia formats.\n\nExamples:\n - ``arcp://uuid,32a423d6-52ab-47e3-a9cd-54f418a48571/doc.html``\n - ``arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/pics/``\n - ``arcp://ni,sha-256;F-34D4TUeOfG0selz7REKRDo4XePkewPeQYtjL3vQs0/``\n - ``arcp://name,gallery.example.org/``\n\nThe different forms of URI authority_ in arcp URIs can be used depending\non which uniqueness constraints to apply when addressing an archive.\nSee the arcp_ specification (*draft-soilandreyes-arcp*) for details.\n\nNote that this library only provides mechanisms to \n*generate* and *parse* arcp URIs, and do *not* integrate with any \nparticular archive or URL handling modules like \n``zipfile`` or ``urllib.request``.\n\n\nLicense\n-------\n\n\u00a9 2018-2020 Stian Soiland-Reyes <https://orcid.org/0000-0001-9842-9718>, The University of Manchester, UK\n\nLicensed under the \nApache License, version 2.0 <https://www.apache.org/licenses/LICENSE-2.0>, \nsee the file LICENSE.txt for details.\n\nContribute\n----------\n\nSource code: <https://github.com/stain/arcp-py>\n\nFeel free to raise a pull request at <https://github.com/stain/arcp-py/pulls>\nor an issue at <https://github.com/stain/arcp-py/issues>.\n\nSubmitted contributions are assumed to be covered by section 5 of the Apache License 2.0.\n\nInstalling\n----------\n\nYou will need Python 2.7, Python 3.4 or later (Recommended: 3.6).\n\nIf you have pip_, then the easiest is normally to install from <https://pypi.org/project/arcp/> using::\n\n    pip install arcp\n\nIf you want to install manually from this code base, then try::\n\n    python setup.py install\n\nUsage\n------\n\nFor full documentation, see <https://arcp.readthedocs.io/> or use ``help(arcp)``\n\nThis module provides functions for creating arcp_ URIs, \nwhich can be used for identifying or parsing hypermedia \nfiles packaged in an archive or package, like a ZIP file:: python\n\n    >>> from arcp import *\n\n    >>> arcp_random()\n    'arcp://uuid,dcd6b1e8-b3a2-43c9-930b-0119cf0dc538/'\n\n    >>> arcp_random(\"/foaf.ttl\", fragment=\"me\")\n    'arcp://uuid,dcd6b1e8-b3a2-43c9-930b-0119cf0dc538/foaf.ttl#me'\n\n    >>> arcp_hash(b\"Hello World!\", \"/folder/\")\n    'arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/'\n\n    >>> arcp_location(\"http://example.com/data.zip\", \"/file.txt\")\n    'arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt'\n\narcp URLs can be used with ``urllib.parse``, \nfor instance using ``urljoin`` to resolve relative references::\n\n    >>> css = arcp.arcp_name(\"app.example.com\", \"css/style.css\")\n    >>> urllib.parse.urljoin(css, \"../fonts/foo.woff\")\n    'arcp://name,app.example.com/fonts/foo.woff'\n\n\nIn addition this module provides functions that can be used\nto parse arcp URIs into its constituent fields:: python\n\n    >>> is_arcp_uri(\"arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt\")\n    True\n\n    >>> is_arcp_uri(\"http://example.com/t\")\n    False\n\n    >>> u = parse_arcp(\"arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt\")\n    ARCPSplitResult(scheme='arcp',prefix='uuid',name='b7749d0b-0e47-5fc4-999d-f154abe68065',\n      uuid='b7749d0b-0e47-5fc4-999d-f154abe68065',path='/file.txt',query='',fragment='')\n\n    >>> u.path\n    '/file.txt'\n    >>> u.prefix\n    'uuid'\n    >>> u.uuid\n    UUID('b7749d0b-0e47-5fc4-999d-f154abe68065')\n    >>> u.uuid.version\n    5\n\n    >>> parse_arcp(\"arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/\").hash\n    ('sha-256', '7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069')\n\nThe object returned from ``parse_arcp`` is similar to \n``ParseResult`` from ``urlparse``, but contains additional properties \n``prefix``, ``uuid``, ``ni``, ``hash`` and ``name``, \nsome of which will be ``None`` depending on the arcp prefix.\n\nThe function ``arcp.parse.urlparse`` can be imported as an alternative \nto ``urllib.parse.urlparse``. If the scheme is ``arcp`` then the extra \narcp fields like `prefix`, `uuid`, `hash` and `name` are available\nas from `parse_arcp`, otherwise the output is the same as from \nregular `urlparse`:: python\n\n    >>> from arcp.parse import urlparse\n    >>> urlparse(\"arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/soup;sads\")\n    ARCPParseResult(scheme='arcp',prefix='ni',\n       name='sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk',\n       ni='sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk',\n       hash=('sha-256', '7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069',\n       path='/folder/soup;sads',query='',fragment='')\n    >>> urlparse(\"http://example.com/help?q=a\")\n    ParseResult(scheme='http', netloc='example.com', path='/help', params='', \n      query='q=a', fragment='')\n\n\n\n.. _arcp: https://tools.ietf.org/html/draft-soilandreyes-arcp-03\n.. _pip: https://docs.python.org/3/installing/\n.. _authority: https://tools.ietf.org/id/draft-soilandreyes-arcp-03.html#rfc.section.4.1\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/stain/arcp-py/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://arcp.readthedocs.io/", "keywords": "arcp uri url iri archive package", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "arcp", "package_url": "https://pypi.org/project/arcp/", "platform": "", "project_url": "https://pypi.org/project/arcp/", "project_urls": {"Download": "https://github.com/stain/arcp-py/archive/0.1.0.tar.gz", "Homepage": "https://arcp.readthedocs.io/"}, "release_url": "https://pypi.org/project/arcp/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "arcp (Archive and Package) URI parser and generator", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Create/parse <a href=\"https://tools.ietf.org/html/draft-soilandreyes-arcp-03\" rel=\"nofollow\">arcp</a> (Archive and Package) URIs.</p>\n<a href=\"https://arcp.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02b09251c3c643c851884c5a027865453f598743/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f617263702f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.1162749\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/DOI/10.5281/zenodo.1162749.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81b7304e5876e396acd629ee2af4090ececd05da/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e313136323734392e737667\"></a>\n<a href=\"https://travis-ci.org/stain/arcp-py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/stain/arcp-py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c63fc16a0c592208e2ca194c79f58bbbe2fe3d7a/68747470733a2f2f7472617669732d63692e6f72672f737461696e2f617263702d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/arcp/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/arcp.svg?maxAge=86400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1453070204f3ac64fdef7dcc26f893bb6b14cffa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f617263702e7376673f6d61784167653d3836343030\"></a>\n<a href=\"https://coveralls.io/github/stain/arcp-py?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/stain/arcp-py/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eae0d52a3e92691ac5df93adc80cd728763f2c88/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737461696e2f617263702d70792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/stain/arcp-py\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/stain/arcp-py/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f36a661203a89b826fe7ad7b7e8883923de351a0/68747470733a2f2f636f6465636f762e696f2f67682f737461696e2f617263702d70792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>arcp</tt> provides functions for creating <a href=\"https://tools.ietf.org/html/draft-soilandreyes-arcp-03\" rel=\"nofollow\">arcp</a> URIs,\nwhich can be used for identifying or parsing hypermedia\nfiles packaged in an archive or package, like a ZIP file.</p>\n<p>arcp URIs can be used to consume or reference hypermedia resources\nbundled inside a file archive or an application package, as well as\nto resolve URIs for archive resources within a programmatic framework.</p>\n<p>This URI scheme provides mechanisms to generate a unique base URI\nto represent the root of the archive, so that relative URI references\nin a bundled resource can be resolved within the archive without having to extract the archive content on the local file system.</p>\n<p>An arcp URI can be used for purposes of isolation (e.g. when consuming\nmultiple archives), security constraints (avoiding \u201cclimb out\u201d from the\narchive), or for externally identiyfing sub-resources referenced by\nhypermedia formats.</p>\n<dl>\n<dt>Examples:</dt>\n<dd><ul>\n<li><tt><span class=\"pre\">arcp://uuid,32a423d6-52ab-47e3-a9cd-54f418a48571/doc.html</span></tt></li>\n<li><tt><span class=\"pre\">arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/pics/</span></tt></li>\n<li><tt><span class=\"pre\">arcp://ni,sha-256;F-34D4TUeOfG0selz7REKRDo4XePkewPeQYtjL3vQs0/</span></tt></li>\n<li><tt><span class=\"pre\">arcp://name,gallery.example.org/</span></tt></li>\n</ul>\n</dd>\n</dl>\n<p>The different forms of URI <a href=\"https://tools.ietf.org/id/draft-soilandreyes-arcp-03.html#rfc.section.4.1\" rel=\"nofollow\">authority</a> in arcp URIs can be used depending\non which uniqueness constraints to apply when addressing an archive.\nSee the <a href=\"https://tools.ietf.org/html/draft-soilandreyes-arcp-03\" rel=\"nofollow\">arcp</a> specification (<em>draft-soilandreyes-arcp</em>) for details.</p>\n<p>Note that this library only provides mechanisms to\n<em>generate</em> and <em>parse</em> arcp URIs, and do <em>not</em> integrate with any\nparticular archive or URL handling modules like\n<tt>zipfile</tt> or <tt>urllib.request</tt>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>\u00a9 2018-2020 Stian Soiland-Reyes &lt;<a href=\"https://orcid.org/0000-0001-9842-9718\" rel=\"nofollow\">https://orcid.org/0000-0001-9842-9718</a>&gt;, The University of Manchester, UK</p>\n<p>Licensed under the\nApache License, version 2.0 &lt;<a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">https://www.apache.org/licenses/LICENSE-2.0</a>&gt;,\nsee the file LICENSE.txt for details.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Source code: &lt;<a href=\"https://github.com/stain/arcp-py\" rel=\"nofollow\">https://github.com/stain/arcp-py</a>&gt;</p>\n<p>Feel free to raise a pull request at &lt;<a href=\"https://github.com/stain/arcp-py/pulls\" rel=\"nofollow\">https://github.com/stain/arcp-py/pulls</a>&gt;\nor an issue at &lt;<a href=\"https://github.com/stain/arcp-py/issues\" rel=\"nofollow\">https://github.com/stain/arcp-py/issues</a>&gt;.</p>\n<p>Submitted contributions are assumed to be covered by section 5 of the Apache License 2.0.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You will need Python 2.7, Python 3.4 or later (Recommended: 3.6).</p>\n<p>If you have <a href=\"https://docs.python.org/3/installing/\" rel=\"nofollow\">pip</a>, then the easiest is normally to install from &lt;<a href=\"https://pypi.org/project/arcp/\" rel=\"nofollow\">https://pypi.org/project/arcp/</a>&gt; using:</p>\n<pre>pip install arcp\n</pre>\n<p>If you want to install manually from this code base, then try:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For full documentation, see &lt;<a href=\"https://arcp.readthedocs.io/\" rel=\"nofollow\">https://arcp.readthedocs.io/</a>&gt; or use <tt>help(arcp)</tt></p>\n<p>This module provides functions for creating <a href=\"https://tools.ietf.org/html/draft-soilandreyes-arcp-03\" rel=\"nofollow\">arcp</a> URIs,\nwhich can be used for identifying or parsing hypermedia\nfiles packaged in an archive or package, like a ZIP file:: python</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from arcp import *\n</pre>\n<pre>&gt;&gt;&gt; arcp_random()\n'arcp://uuid,dcd6b1e8-b3a2-43c9-930b-0119cf0dc538/'\n</pre>\n<pre>&gt;&gt;&gt; arcp_random(\"/foaf.ttl\", fragment=\"me\")\n'arcp://uuid,dcd6b1e8-b3a2-43c9-930b-0119cf0dc538/foaf.ttl#me'\n</pre>\n<pre>&gt;&gt;&gt; arcp_hash(b\"Hello World!\", \"/folder/\")\n'arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/'\n</pre>\n<pre>&gt;&gt;&gt; arcp_location(\"http://example.com/data.zip\", \"/file.txt\")\n'arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt'\n</pre>\n</blockquote>\n<p>arcp URLs can be used with <tt>urllib.parse</tt>,\nfor instance using <tt>urljoin</tt> to resolve relative references:</p>\n<pre>&gt;&gt;&gt; css = arcp.arcp_name(\"app.example.com\", \"css/style.css\")\n&gt;&gt;&gt; urllib.parse.urljoin(css, \"../fonts/foo.woff\")\n'arcp://name,app.example.com/fonts/foo.woff'\n</pre>\n<p>In addition this module provides functions that can be used\nto parse arcp URIs into its constituent fields:: python</p>\n<blockquote>\n<pre>&gt;&gt;&gt; is_arcp_uri(\"arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt\")\nTrue\n</pre>\n<pre>&gt;&gt;&gt; is_arcp_uri(\"http://example.com/t\")\nFalse\n</pre>\n<pre>&gt;&gt;&gt; u = parse_arcp(\"arcp://uuid,b7749d0b-0e47-5fc4-999d-f154abe68065/file.txt\")\nARCPSplitResult(scheme='arcp',prefix='uuid',name='b7749d0b-0e47-5fc4-999d-f154abe68065',\n  uuid='b7749d0b-0e47-5fc4-999d-f154abe68065',path='/file.txt',query='',fragment='')\n</pre>\n<pre>&gt;&gt;&gt; u.path\n'/file.txt'\n&gt;&gt;&gt; u.prefix\n'uuid'\n&gt;&gt;&gt; u.uuid\nUUID('b7749d0b-0e47-5fc4-999d-f154abe68065')\n&gt;&gt;&gt; u.uuid.version\n5\n</pre>\n<pre>&gt;&gt;&gt; parse_arcp(\"arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/\").hash\n('sha-256', '7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069')\n</pre>\n</blockquote>\n<p>The object returned from <tt>parse_arcp</tt> is similar to\n<tt>ParseResult</tt> from <tt>urlparse</tt>, but contains additional properties\n<tt>prefix</tt>, <tt>uuid</tt>, <tt>ni</tt>, <tt>hash</tt> and <tt>name</tt>,\nsome of which will be <tt>None</tt> depending on the arcp prefix.</p>\n<p>The function <tt>arcp.parse.urlparse</tt> can be imported as an alternative\nto <tt>urllib.parse.urlparse</tt>. If the scheme is <tt>arcp</tt> then the extra\narcp fields like <cite>prefix</cite>, <cite>uuid</cite>, <cite>hash</cite> and <cite>name</cite> are available\nas from <cite>parse_arcp</cite>, otherwise the output is the same as from\nregular <cite>urlparse</cite>:: python</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from arcp.parse import urlparse\n&gt;&gt;&gt; urlparse(\"arcp://ni,sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk/folder/soup;sads\")\nARCPParseResult(scheme='arcp',prefix='ni',\n   name='sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk',\n   ni='sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk',\n   hash=('sha-256', '7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069',\n   path='/folder/soup;sads',query='',fragment='')\n&gt;&gt;&gt; urlparse(\"http://example.com/help?q=a\")\nParseResult(scheme='http', netloc='example.com', path='/help', params='',\n  query='q=a', fragment='')\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 6615826, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0fd6a7326ba2be2892775f6c2b23b1fe", "sha256": "d4cb05a16d1ac0a328f5d9c1abdc4771b2f4f1fbf31e0892a5f589eb1a9437b1"}, "downloads": -1, "filename": "arcp-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "0fd6a7326ba2be2892775f6c2b23b1fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14532, "upload_time": "2018-01-30T14:26:57", "upload_time_iso_8601": "2018-01-30T14:26:57.167318Z", "url": "https://files.pythonhosted.org/packages/c4/c7/da53c2025d616a19a93f39c3216ddb8cf9277d0c276e98dcf863889be577/arcp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1281691ec5607918aa7ec3ce6cef529", "sha256": "41a11f83e7dc1db91aeb6fc3b08cf3eb7f286937e484dc9aa46b35a776e395ed"}, "downloads": -1, "filename": "arcp-0.1.0.tar.gz", "has_sig": true, "md5_digest": "b1281691ec5607918aa7ec3ce6cef529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7561, "upload_time": "2018-01-30T14:26:58", "upload_time_iso_8601": "2018-01-30T14:26:58.685886Z", "url": "https://files.pythonhosted.org/packages/5e/d9/52c0992789f555137982a4d6d05c1b7483408400fdb595ad01679d2b3ea9/arcp-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3985d589c7893177512b8304ff2eff5e", "sha256": "232c5d88490408dc97b0f9f753c9444cff95e473acb539606d3af0ac9eb532dc"}, "downloads": -1, "filename": "arcp-0.2.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3985d589c7893177512b8304ff2eff5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15177, "upload_time": "2018-02-05T14:23:04", "upload_time_iso_8601": "2018-02-05T14:23:04.933773Z", "url": "https://files.pythonhosted.org/packages/bb/62/93e9d0947aba625bf42e82237f505aa10fcb4078d4ed51e7bf8a85d8978b/arcp-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d2f031d76a801ea40620401d1048825", "sha256": "ad9df671a6cacfb44e85cd2971eee87e663a5bbf84618b31476b9b452bb01a41"}, "downloads": -1, "filename": "arcp-0.2.0.tar.gz", "has_sig": true, "md5_digest": "2d2f031d76a801ea40620401d1048825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10011, "upload_time": "2018-02-05T14:23:06", "upload_time_iso_8601": "2018-02-05T14:23:06.758630Z", "url": "https://files.pythonhosted.org/packages/e3/7c/c55af9af92bf23617c32ad672d53291ed0822b100053996255d1f19e27f1/arcp-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8b084e20121d283fd09c3b7009803722", "sha256": "4e09b2d8a9fc3fda7ec112b553498ff032ea7de354e27dbeb1acc53667122444"}, "downloads": -1, "filename": "arcp-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b084e20121d283fd09c3b7009803722", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15838, "upload_time": "2020-02-12T12:05:05", "upload_time_iso_8601": "2020-02-12T12:05:05.769861Z", "url": "https://files.pythonhosted.org/packages/66/df/32574bc8f1d440d40f4aaf3b455316b2b1536c7243c985a90f8516cf3074/arcp-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c9aa17474e16d809188aeb245cf83c", "sha256": "5c17ac7972c9ef82979cc2caf2b3a87c1aefd3fefe9adb8a5dd728ada57715dd"}, "downloads": -1, "filename": "arcp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b1c9aa17474e16d809188aeb245cf83c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22063, "upload_time": "2020-02-12T12:05:07", "upload_time_iso_8601": "2020-02-12T12:05:07.422898Z", "url": "https://files.pythonhosted.org/packages/c6/4d/de103380fb1646b720a5318401cf2a49a1a88c082ef06fdd015d848f073b/arcp-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b084e20121d283fd09c3b7009803722", "sha256": "4e09b2d8a9fc3fda7ec112b553498ff032ea7de354e27dbeb1acc53667122444"}, "downloads": -1, "filename": "arcp-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b084e20121d283fd09c3b7009803722", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15838, "upload_time": "2020-02-12T12:05:05", "upload_time_iso_8601": "2020-02-12T12:05:05.769861Z", "url": "https://files.pythonhosted.org/packages/66/df/32574bc8f1d440d40f4aaf3b455316b2b1536c7243c985a90f8516cf3074/arcp-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c9aa17474e16d809188aeb245cf83c", "sha256": "5c17ac7972c9ef82979cc2caf2b3a87c1aefd3fefe9adb8a5dd728ada57715dd"}, "downloads": -1, "filename": "arcp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b1c9aa17474e16d809188aeb245cf83c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22063, "upload_time": "2020-02-12T12:05:07", "upload_time_iso_8601": "2020-02-12T12:05:07.422898Z", "url": "https://files.pythonhosted.org/packages/c6/4d/de103380fb1646b720a5318401cf2a49a1a88c082ef06fdd015d848f073b/arcp-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:22 2020"}