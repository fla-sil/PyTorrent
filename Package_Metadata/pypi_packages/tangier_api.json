{"info": {"author": "John-Paul Jorissen", "author_email": "jjorissen52@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Topic :: Office/Business"], "description": "    ::\n\n        88888888888    d8888888b    888 .d8888b. 888888888888888888888888b.                d88888888888b.8888888\n            888       d888888888b   888d88P  Y88b  888  888       888   Y88b              d88888888   Y88b 888\n            888      d88P88888888b  888888    888  888  888       888    888             d88P888888    888 888\n            888     d88P 888888Y88b 888888         888  8888888   888   d88P            d88P 888888   d88P 888\n            888    d88P  888888 Y88b888888  88888  888  888       8888888P\"            d88P  8888888888P\"  888\n            888   d88P   888888  Y88888888    888  888  888       888 T88b            d88P   888888        888\n            888  d8888888888888   Y8888Y88b  d88P  888  888       888  T88b          d8888888888888        888\n            888 d88P     888888    Y888 \"Y8888P8888888888888888888888   T88b88888888d88P     888888      8888888\n\n\nDescription\n=========================\nA simple Python package to facilitate interactions with Tangier's SOAP API.\n\nOverview\n=========================\nTangier API is a client library for using Python to interact with the Tangier\u2019s SOAP API.\n\nHere, we will only be discussing methods that allow the user to perform queries from the API.\nAll of the necessary methods to Create and Update via the API are also available in this library, but they will not be\ncovered here.\n\nYou can check the API documentation for more information on those methods.\n\n\nInstallation\n=============\nto install the latest version, you can just run\n\n.. code:: bash\n\n    pip install tangier-api\n\n\n\nSetup\n======\nYou will need to have an active API account for Tangier and a config file that looks like the below\n\n.. code:: text\n\n    [tangier]\n    username = api_user\n    password = api_password\n    schedule_endpoint = https://tangierweb.com/webservices/schedulerequest/schedulerequest.asmx?WSDL\n    provider_endpoint = https://tangierweb.com/webservices/ProviderMaintenance/ProviderMaintenance.asmx?WSDL\n    location_endpoint = https://tangierweb.com/webservices/LocationMaintenance/LocationMaintenance.asmx?WSDL\n    testing_site = TESTING-SITE-ID\n    testing_npi = 0000000000\n    log_dir =\n\nYou can store this file anywhere, but you need to make its location known to the interpreter that calls the API via the\nenvironment variable ``TANGIER_CONF_FILE``.\n\nUsage\n======\n\nLogging In\n-----------\n.. code:: python\n\n    import os\n    os.environ['TANGIER_CONF_FILE'] = 'C:/path/to/tangier_api.conf'\n\n    from tangier_api import ProviderConnection, LocationConnection, ScheduleConnection\n    pconn = ProviderConnection()\n    lconn = LocationConnection()\n    sconn = ScheduleConnection()\n\nThat's it. You have three authenticated clients, one for each of these services.\n\nRaw API Calls\n-------------\n\nEach of the above classes, ProviderConnection, LocationConnection, ScheduleConnection, im-\nplement a direct connection to Tangier\u2019s SOAP endpoints. That means you could just use raw\nXML if you really wanted to. For example:\n\n.. code:: python\n\n    from tangier_api import settings\n    import xmlmanip\n    lconn = LocationConnection()\n    xml = \"\"\"\n        <tangier version=\"1.0\" method=\"location.request\">\n            <admin_user>{username}</admin_user>\n            <admin_pwd>{password}</admin_pwd>\n            <locations>\n                <location action=\"info\">\n                    <site_id>{site_id}</site_id>\n                </location>\n            </locations>\n        </tangier>\n    \"\"\".format(\n        username=settings.TANGIER_USERNAME,\n        password=settings.TANGIER_PASSWORD,\n        site_id=\"YOUR-SITE-ID\"\n    )\n\n    response_xml = lconn.MaintainLocations(xml)\n    xmlmanip.print_xml(response_xml)\n\nThis should make it fairly simple for you to write your own custom API calls if necessary.\n\nGet Schedule\n-------------\n\n.. code:: python\n\n    sconn = ScheduleConnection()\n\n    # you can do this by emp_id or site_id\n    response_xml = sconn.get_schedule(\n        start_date='2018-01-01',\n        end_date='2018-01-14',\n        site_id='YOUR-SITE-ID'\n    )\n    # returns a list of xml strings, used in other methods\n    response_xml_list = sconn.get_schedules(\n        start_date='2018-01-01',\n        end_date='2018-01-14',\n        site_ids=['YOUR-SITE-ID']\n    )\n    # list of all of the shifts between the given dates for the given site ids\n    scheduled_shifts = sconn.get_schedule_values_list(\n        start_date='2018-01-01',\n        end_date='2018-01-14',\n        site_ids=['YOUR-SITE-ID', 'YOUR-SITE-ID-2']\n    )\n\nProvider Maintenance\n--------------------\n.. code:: python\n\n    pconn = ProviderConnection()\n    # returns xml corresponding to providers in Tangier with Primary Key in their Database of 1 and 2\n    response_xml = pconn.get_provider_info(\n        # do not include this variable if you want all_providers\n        provider_ids=[1,2],\n        # you should just use this all the time\n        use_primary_keys=True,\n        # bug, this field shouldn't be needed to prevent fetching of all but it is\n        all_providers=False,\n    )\n    # wrapper around get_provider_info that returns a list of dicts instead of raw xml\n    provider_list = pconn.provider_info_values_list(\n        # do not include this variable if you want all_providers\n        provider_ids=[1,2],\n        # you should just use this all the time\n        use_primary_keys=True,\n        # bug, this field shouldn't be needed to prevent fetching of all but it is\n        all_providers=False,\n    )\n\nLocation Maintenance\n---------------------\n.. code:: python\n\n    lconn = LocationConnection()\n    response_xml = lconn.get_locations_info(\n        # do not include variable if you want all sites\n        site_ids=['CRMC-APP']\n    )\n    # no arguments means all sites in a list\n    location_list = lconn.location_info_values_list()\n\nI am not going to demonstrate any of the below, but you can see them in the\n`API documentation <https://jjorissen52.github.io/tangier_api/py-modindex.html>`__  if necessary.\n\n.. code:: python\n\n    lconn.add_location\n    lconn.update_location\n    lconn.delete_location", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jjorissen52/tangier_api", "keywords": "Tangier Python WebServices SOAP API", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "tangier_api", "package_url": "https://pypi.org/project/tangier_api/", "platform": "", "project_url": "https://pypi.org/project/tangier_api/", "project_urls": {"Homepage": "https://github.com/jjorissen52/tangier_api"}, "release_url": "https://pypi.org/project/tangier_api/1.2.3.dev0/", "requires_dist": null, "requires_python": "", "summary": "A simple Python package to facilitate interactions with Tangier's API", "version": "1.2.3.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<pre>88888888888    d8888888b    888 .d8888b. 888888888888888888888888b.                d88888888888b.8888888\n    888       d888888888b   888d88P  Y88b  888  888       888   Y88b              d88888888   Y88b 888\n    888      d88P88888888b  888888    888  888  888       888    888             d88P888888    888 888\n    888     d88P 888888Y88b 888888         888  8888888   888   d88P            d88P 888888   d88P 888\n    888    d88P  888888 Y88b888888  88888  888  888       8888888P\"            d88P  8888888888P\"  888\n    888   d88P   888888  Y88888888    888  888  888       888 T88b            d88P   888888        888\n    888  d8888888888888   Y8888Y88b  d88P  888  888       888  T88b          d8888888888888        888\n    888 d88P     888888    Y888 \"Y8888P8888888888888888888888   T88b88888888d88P     888888      8888888\n</pre>\n</blockquote>\n<div id=\"description\">\n<h2>Description</h2>\n<p>A simple Python package to facilitate interactions with Tangier\u2019s SOAP API.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Tangier API is a client library for using Python to interact with the Tangier\u2019s SOAP API.</p>\n<p>Here, we will only be discussing methods that allow the user to perform queries from the API.\nAll of the necessary methods to Create and Update via the API are also available in this library, but they will not be\ncovered here.</p>\n<p>You can check the API documentation for more information on those methods.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>to install the latest version, you can just run</p>\n<pre>pip install tangier-api\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>You will need to have an active API account for Tangier and a config file that looks like the below</p>\n<pre>[tangier]\nusername = api_user\npassword = api_password\nschedule_endpoint = https://tangierweb.com/webservices/schedulerequest/schedulerequest.asmx?WSDL\nprovider_endpoint = https://tangierweb.com/webservices/ProviderMaintenance/ProviderMaintenance.asmx?WSDL\nlocation_endpoint = https://tangierweb.com/webservices/LocationMaintenance/LocationMaintenance.asmx?WSDL\ntesting_site = TESTING-SITE-ID\ntesting_npi = 0000000000\nlog_dir =\n</pre>\n<p>You can store this file anywhere, but you need to make its location known to the interpreter that calls the API via the\nenvironment variable <tt>TANGIER_CONF_FILE</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"logging-in\">\n<h3>Logging In</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'TANGIER_CONF_FILE'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'C:/path/to/tangier_api.conf'</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tangier_api</span> <span class=\"kn\">import</span> <span class=\"n\">ProviderConnection</span><span class=\"p\">,</span> <span class=\"n\">LocationConnection</span><span class=\"p\">,</span> <span class=\"n\">ScheduleConnection</span>\n<span class=\"n\">pconn</span> <span class=\"o\">=</span> <span class=\"n\">ProviderConnection</span><span class=\"p\">()</span>\n<span class=\"n\">lconn</span> <span class=\"o\">=</span> <span class=\"n\">LocationConnection</span><span class=\"p\">()</span>\n<span class=\"n\">sconn</span> <span class=\"o\">=</span> <span class=\"n\">ScheduleConnection</span><span class=\"p\">()</span>\n</pre>\n<p>That\u2019s it. You have three authenticated clients, one for each of these services.</p>\n</div>\n<div id=\"raw-api-calls\">\n<h3>Raw API Calls</h3>\n<p>Each of the above classes, ProviderConnection, LocationConnection, ScheduleConnection, im-\nplement a direct connection to Tangier\u2019s SOAP endpoints. That means you could just use raw\nXML if you really wanted to. For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tangier_api</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xmlmanip</span>\n<span class=\"n\">lconn</span> <span class=\"o\">=</span> <span class=\"n\">LocationConnection</span><span class=\"p\">()</span>\n<span class=\"n\">xml</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n    &lt;tangier version=\"1.0\" method=\"location.request\"&gt;\n        &lt;admin_user&gt;</span><span class=\"si\">{username}</span><span class=\"s2\">&lt;/admin_user&gt;\n        &lt;admin_pwd&gt;</span><span class=\"si\">{password}</span><span class=\"s2\">&lt;/admin_pwd&gt;\n        &lt;locations&gt;\n            &lt;location action=\"info\"&gt;\n                &lt;site_id&gt;</span><span class=\"si\">{site_id}</span><span class=\"s2\">&lt;/site_id&gt;\n            &lt;/location&gt;\n        &lt;/locations&gt;\n    &lt;/tangier&gt;\n\"\"\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">TANGIER_USERNAME</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">TANGIER_PASSWORD</span><span class=\"p\">,</span>\n    <span class=\"n\">site_id</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR-SITE-ID\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">response_xml</span> <span class=\"o\">=</span> <span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">MaintainLocations</span><span class=\"p\">(</span><span class=\"n\">xml</span><span class=\"p\">)</span>\n<span class=\"n\">xmlmanip</span><span class=\"o\">.</span><span class=\"n\">print_xml</span><span class=\"p\">(</span><span class=\"n\">response_xml</span><span class=\"p\">)</span>\n</pre>\n<p>This should make it fairly simple for you to write your own custom API calls if necessary.</p>\n</div>\n<div id=\"get-schedule\">\n<h3>Get Schedule</h3>\n<pre><span class=\"n\">sconn</span> <span class=\"o\">=</span> <span class=\"n\">ScheduleConnection</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># you can do this by emp_id or site_id</span>\n<span class=\"n\">response_xml</span> <span class=\"o\">=</span> <span class=\"n\">sconn</span><span class=\"o\">.</span><span class=\"n\">get_schedule</span><span class=\"p\">(</span>\n    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-01'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-14'</span><span class=\"p\">,</span>\n    <span class=\"n\">site_id</span><span class=\"o\">=</span><span class=\"s1\">'YOUR-SITE-ID'</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># returns a list of xml strings, used in other methods</span>\n<span class=\"n\">response_xml_list</span> <span class=\"o\">=</span> <span class=\"n\">sconn</span><span class=\"o\">.</span><span class=\"n\">get_schedules</span><span class=\"p\">(</span>\n    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-01'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-14'</span><span class=\"p\">,</span>\n    <span class=\"n\">site_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'YOUR-SITE-ID'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># list of all of the shifts between the given dates for the given site ids</span>\n<span class=\"n\">scheduled_shifts</span> <span class=\"o\">=</span> <span class=\"n\">sconn</span><span class=\"o\">.</span><span class=\"n\">get_schedule_values_list</span><span class=\"p\">(</span>\n    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-01'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-14'</span><span class=\"p\">,</span>\n    <span class=\"n\">site_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'YOUR-SITE-ID'</span><span class=\"p\">,</span> <span class=\"s1\">'YOUR-SITE-ID-2'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"provider-maintenance\">\n<h3>Provider Maintenance</h3>\n<pre><span class=\"n\">pconn</span> <span class=\"o\">=</span> <span class=\"n\">ProviderConnection</span><span class=\"p\">()</span>\n<span class=\"c1\"># returns xml corresponding to providers in Tangier with Primary Key in their Database of 1 and 2</span>\n<span class=\"n\">response_xml</span> <span class=\"o\">=</span> <span class=\"n\">pconn</span><span class=\"o\">.</span><span class=\"n\">get_provider_info</span><span class=\"p\">(</span>\n    <span class=\"c1\"># do not include this variable if you want all_providers</span>\n    <span class=\"n\">provider_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n    <span class=\"c1\"># you should just use this all the time</span>\n    <span class=\"n\">use_primary_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"c1\"># bug, this field shouldn't be needed to prevent fetching of all but it is</span>\n    <span class=\"n\">all_providers</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># wrapper around get_provider_info that returns a list of dicts instead of raw xml</span>\n<span class=\"n\">provider_list</span> <span class=\"o\">=</span> <span class=\"n\">pconn</span><span class=\"o\">.</span><span class=\"n\">provider_info_values_list</span><span class=\"p\">(</span>\n    <span class=\"c1\"># do not include this variable if you want all_providers</span>\n    <span class=\"n\">provider_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n    <span class=\"c1\"># you should just use this all the time</span>\n    <span class=\"n\">use_primary_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"c1\"># bug, this field shouldn't be needed to prevent fetching of all but it is</span>\n    <span class=\"n\">all_providers</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"location-maintenance\">\n<h3>Location Maintenance</h3>\n<pre><span class=\"n\">lconn</span> <span class=\"o\">=</span> <span class=\"n\">LocationConnection</span><span class=\"p\">()</span>\n<span class=\"n\">response_xml</span> <span class=\"o\">=</span> <span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">get_locations_info</span><span class=\"p\">(</span>\n    <span class=\"c1\"># do not include variable if you want all sites</span>\n    <span class=\"n\">site_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'CRMC-APP'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># no arguments means all sites in a list</span>\n<span class=\"n\">location_list</span> <span class=\"o\">=</span> <span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">location_info_values_list</span><span class=\"p\">()</span>\n</pre>\n<p>I am not going to demonstrate any of the below, but you can see them in the\n<a href=\"https://jjorissen52.github.io/tangier_api/py-modindex.html\" rel=\"nofollow\">API documentation</a>  if necessary.</p>\n<pre><span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">add_location</span>\n<span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">update_location</span>\n<span class=\"n\">lconn</span><span class=\"o\">.</span><span class=\"n\">delete_location</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4932324, "releases": {"1.0.0.dev0": [{"comment_text": "", "digests": {"md5": "93b8f0182c9447d9ce37ec26e4b38f5c", "sha256": "5996b904fb752e0a9768a453418d13ea281073cb7c5fbba3f5e1c3c9dadfcfcd"}, "downloads": -1, "filename": "tangier_api-1.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "93b8f0182c9447d9ce37ec26e4b38f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4171, "upload_time": "2017-10-04T16:57:39", "upload_time_iso_8601": "2017-10-04T16:57:39.680139Z", "url": "https://files.pythonhosted.org/packages/29/b6/551263e2e2d186ca4b6a907335a7d46c68af66ddd24d68f0864913c79054/tangier_api-1.0.0.dev0.tar.gz", "yanked": false}], "1.0.1.dev0": [{"comment_text": "", "digests": {"md5": "c186a0443dfc342ee8e8cdf76226d45d", "sha256": "21820654910aca1ea16a8bd577b6c2e818cf62597cdd9d103b30de2971b87f5f"}, "downloads": -1, "filename": "tangier_api-1.0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "c186a0443dfc342ee8e8cdf76226d45d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4265, "upload_time": "2017-10-04T21:35:18", "upload_time_iso_8601": "2017-10-04T21:35:18.217897Z", "url": "https://files.pythonhosted.org/packages/aa/d0/69c710eae9ac9b3f5a47aa8c6ad7c93cbf8cbb04312f4951fc2a7d36a867/tangier_api-1.0.1.dev0.tar.gz", "yanked": false}], "1.0.2.dev0": [{"comment_text": "", "digests": {"md5": "6052240d9ac8fe2ae46f5865887275ab", "sha256": "77bb26508c97292603e778b38daff34c23d215dd7bd1141caffd5d6709f6f352"}, "downloads": -1, "filename": "tangier_api-1.0.2.dev0.tar.gz", "has_sig": false, "md5_digest": "6052240d9ac8fe2ae46f5865887275ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4675, "upload_time": "2017-10-19T20:08:33", "upload_time_iso_8601": "2017-10-19T20:08:33.354341Z", "url": "https://files.pythonhosted.org/packages/f9/56/fdac8e717b1446cb8da16ae8382134c9be55ea71fc18903cb30ed777ec97/tangier_api-1.0.2.dev0.tar.gz", "yanked": false}], "1.0.3.dev0": [{"comment_text": "", "digests": {"md5": "c53e78b3eb410ea55e8b67820c66b48e", "sha256": "da7607b6b349c432aa1f43613c1835841244cc86ad4306ed313b9bdc60eb5284"}, "downloads": -1, "filename": "tangier_api-1.0.3.dev0.tar.gz", "has_sig": false, "md5_digest": "c53e78b3eb410ea55e8b67820c66b48e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7236, "upload_time": "2017-10-26T13:57:26", "upload_time_iso_8601": "2017-10-26T13:57:26.661564Z", "url": "https://files.pythonhosted.org/packages/7c/37/07b050747e94fa342d6e6ecceb7b39d5296596293b022db214e00235be2a/tangier_api-1.0.3.dev0.tar.gz", "yanked": false}], "1.0.4.dev0": [{"comment_text": "", "digests": {"md5": "25e928b67b2aaaae24f3270cc19e6349", "sha256": "10de56aa51d2338556a69168c95dc2d5cf9afe25e4c528bc8404055afc56cf8c"}, "downloads": -1, "filename": "tangier_api-1.0.4.dev0.tar.gz", "has_sig": false, "md5_digest": "25e928b67b2aaaae24f3270cc19e6349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9658, "upload_time": "2018-03-07T17:42:45", "upload_time_iso_8601": "2018-03-07T17:42:45.038321Z", "url": "https://files.pythonhosted.org/packages/f6/6c/2e1b149c73cd4949abbb45131057a326d03c0fe4a59065c6f0287531f118/tangier_api-1.0.4.dev0.tar.gz", "yanked": false}], "1.0.5.dev0": [{"comment_text": "", "digests": {"md5": "140b2f9cf85464917e1d27ee80d21001", "sha256": "4bdd1345036797c8ee8e597a40bac957c4803b27d1958aa4846f92c55c6ce14b"}, "downloads": -1, "filename": "tangier_api-1.0.5.dev0.tar.gz", "has_sig": false, "md5_digest": "140b2f9cf85464917e1d27ee80d21001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9444, "upload_time": "2018-05-04T17:50:01", "upload_time_iso_8601": "2018-05-04T17:50:01.831912Z", "url": "https://files.pythonhosted.org/packages/05/dd/09fefccbe4d015d9604f97e2faf45a35188911ca8ae0feb545d34a64e6cf/tangier_api-1.0.5.dev0.tar.gz", "yanked": false}], "1.0.6.dev0": [{"comment_text": "", "digests": {"md5": "506f0bf45ff97cb9701a8c0ef5b21bf7", "sha256": "8971bbfe367b751c73c7cde1ad29bcae3f3d548aaa263ff7f1a3bbe26d02d23d"}, "downloads": -1, "filename": "tangier_api-1.0.6.dev0.tar.gz", "has_sig": false, "md5_digest": "506f0bf45ff97cb9701a8c0ef5b21bf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9440, "upload_time": "2018-05-04T18:07:27", "upload_time_iso_8601": "2018-05-04T18:07:27.589393Z", "url": "https://files.pythonhosted.org/packages/a2/6a/4eeeb8a774e2e8eed3bffa4913e73825881d661f090431388968cb29cbe3/tangier_api-1.0.6.dev0.tar.gz", "yanked": false}], "1.0.7.dev0": [{"comment_text": "", "digests": {"md5": "74b00923ea1612b239308fc8693b8a47", "sha256": "120c78d44885c5252ae0ffca8b7a320c4cac06c47d77268823528caeda9102bf"}, "downloads": -1, "filename": "tangier_api-1.0.7.dev0.tar.gz", "has_sig": false, "md5_digest": "74b00923ea1612b239308fc8693b8a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9747, "upload_time": "2018-05-07T19:28:46", "upload_time_iso_8601": "2018-05-07T19:28:46.211470Z", "url": "https://files.pythonhosted.org/packages/32/8d/e825ca3cbb3e3b574a0849e0f96de60416621be75d2c8b097431189ab875/tangier_api-1.0.7.dev0.tar.gz", "yanked": false}], "1.1.0.dev0": [{"comment_text": "", "digests": {"md5": "6b0df29fb8568945cb35a03c6073ec8d", "sha256": "d189c908e908d9bcc8427db2702e2cdb8199b326aeab350da579fee0e1a405e3"}, "downloads": -1, "filename": "tangier_api-1.1.0.dev0.tar.gz", "has_sig": false, "md5_digest": "6b0df29fb8568945cb35a03c6073ec8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10667, "upload_time": "2018-06-06T19:46:41", "upload_time_iso_8601": "2018-06-06T19:46:41.951395Z", "url": "https://files.pythonhosted.org/packages/74/60/a59ee8c949bdbc5a2975e57620273f1f17cb022878411ad70c71313aeaac/tangier_api-1.1.0.dev0.tar.gz", "yanked": false}], "1.1.1.dev0": [{"comment_text": "", "digests": {"md5": "846a738ccb5dfd77423a53c296a5b346", "sha256": "5aba1bcbb114e84d0a98caf06ca17dfe52828ffe21acd15a51e6a4efeb60799b"}, "downloads": -1, "filename": "tangier_api-1.1.1.dev0.tar.gz", "has_sig": false, "md5_digest": "846a738ccb5dfd77423a53c296a5b346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10840, "upload_time": "2018-08-06T16:11:01", "upload_time_iso_8601": "2018-08-06T16:11:01.055296Z", "url": "https://files.pythonhosted.org/packages/d7/ca/29676c3005948128b5e4abd24f606c7101d66cfa21b244d19610a1f19ab3/tangier_api-1.1.1.dev0.tar.gz", "yanked": false}], "1.2.0.dev0": [{"comment_text": "", "digests": {"md5": "a95df7b558a6a0c1d43f26f346262ae8", "sha256": "7dbd5067e078cbd72755323860ca075b2d0474f8da9894832a5aab483d858402"}, "downloads": -1, "filename": "tangier_api-1.2.0.dev0.tar.gz", "has_sig": false, "md5_digest": "a95df7b558a6a0c1d43f26f346262ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11708, "upload_time": "2018-09-14T17:17:29", "upload_time_iso_8601": "2018-09-14T17:17:29.122805Z", "url": "https://files.pythonhosted.org/packages/21/e6/57be0de6704681a503c3256dd4c066b5e296b7075ba83cf4550456c76462/tangier_api-1.2.0.dev0.tar.gz", "yanked": false}], "1.2.1.dev0": [{"comment_text": "", "digests": {"md5": "6755867a1bb68ee59cf9aa29fff78f98", "sha256": "b5d3687daef5cfe5302f7be70aa10390115ccbf738b8f0a663bace32b7f9ce3b"}, "downloads": -1, "filename": "tangier_api-1.2.1.dev0.tar.gz", "has_sig": false, "md5_digest": "6755867a1bb68ee59cf9aa29fff78f98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11706, "upload_time": "2018-09-14T17:19:31", "upload_time_iso_8601": "2018-09-14T17:19:31.817719Z", "url": "https://files.pythonhosted.org/packages/b2/ca/b673365bff03e18b6e45d8257d7085ccdd8904e2567ce09e40b865b48b81/tangier_api-1.2.1.dev0.tar.gz", "yanked": false}], "1.2.2.dev0": [{"comment_text": "", "digests": {"md5": "6874c38c6637268df63f2260d4e0b431", "sha256": "efee3043762be3aa1278022859058b1b2bf096ffacfc8fa961f442f0238abda1"}, "downloads": -1, "filename": "tangier_api-1.2.2.dev0.tar.gz", "has_sig": false, "md5_digest": "6874c38c6637268df63f2260d4e0b431", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15223, "upload_time": "2019-01-18T22:21:37", "upload_time_iso_8601": "2019-01-18T22:21:37.242383Z", "url": "https://files.pythonhosted.org/packages/33/b3/06f2f649eb13cd7a9d15cae50444e8a18f81dd2559f8adfa074431d1041a/tangier_api-1.2.2.dev0.tar.gz", "yanked": false}], "1.2.3.dev0": [{"comment_text": "", "digests": {"md5": "eb06eebc87f4f88d411b0995813ac1d4", "sha256": "262ad46cbeaf37ba3c2c195b7696dbbd72b30f09220cb913c5e275947cd6f0cf"}, "downloads": -1, "filename": "tangier_api-1.2.3.dev0.tar.gz", "has_sig": false, "md5_digest": "eb06eebc87f4f88d411b0995813ac1d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16281, "upload_time": "2019-03-12T23:36:21", "upload_time_iso_8601": "2019-03-12T23:36:21.130441Z", "url": "https://files.pythonhosted.org/packages/1b/63/31e719fa559a0df1c88a4f142ae7d188d7982d1ee64a1594d295666b1332/tangier_api-1.2.3.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb06eebc87f4f88d411b0995813ac1d4", "sha256": "262ad46cbeaf37ba3c2c195b7696dbbd72b30f09220cb913c5e275947cd6f0cf"}, "downloads": -1, "filename": "tangier_api-1.2.3.dev0.tar.gz", "has_sig": false, "md5_digest": "eb06eebc87f4f88d411b0995813ac1d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16281, "upload_time": "2019-03-12T23:36:21", "upload_time_iso_8601": "2019-03-12T23:36:21.130441Z", "url": "https://files.pythonhosted.org/packages/1b/63/31e719fa559a0df1c88a4f142ae7d188d7982d1ee64a1594d295666b1332/tangier_api-1.2.3.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:12 2020"}