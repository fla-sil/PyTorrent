{"info": {"author": "Lilian Besson", "author_email": "naereen@crans.org", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: User Interfaces", "Topic :: Terminals", "Topic :: Utilities"], "description": "About\r\n=====\r\n\r\nProvide *efficient* and useful **functions** to use colors, in a *HTML-tag style*.\r\n\r\nAlmost all ANSI Colors are defined with this tags-like style.\r\n**This point is the main interest of this module,**\r\nbecause many others define functions to print with some colors.\r\n\r\nThe **reset** tag is a special one to reinitialize all previously changed parameters.\r\n\r\nColors\r\n======\r\n\r\nForegrounds\r\n-----------\r\n\r\nYou can choose one of the 8 basic ANSI colors: black, red, green, yellow, blue,\r\nmagenta, cyan, white.\r\nThe names beginning with a *lower-script* design **foreground** colors.\r\n\r\nFor example ::\r\n\r\n ANSIColors.printc('<reset>this is default. <red>this is red<yellow> and yellow in foreground now<reset>').\r\n\r\nBackgrounds\r\n-----------\r\n\r\nYou can choose one of the 8 basic ANSI colours: Black, Red, Green, Yellow, Blue,\r\nMagenta, Cyan, White.\r\nThe names beginning with a *upper-script* design **background** colors.\r\n\r\nFor example ::\r\n\r\n ANSIColors.printc('<Default>this is default. <Blue>this have a blue background<Black> and black in background now<reset>').\r\n\r\nOther tags\r\n----------\r\n\r\nThe following tags are also available :\r\n\r\n * ``italic``, ``Italic`` : to turn on and off the *italic* mode (not always supported),\r\n * ``b``, ``B`` : to turn on and off the *bold* mode (not always supported),\r\n * ``u``, ``U`` : to turn on and off the *underline* mode (not always supported),\r\n * ``neg``, ``Neg`` : to turn on and off the *reverse video* mode,\r\n * ``blink``, ``Blink`` : to turn on and off the *blink* mode (not always supported),\r\n * ``el`` : to erase the current line,\r\n * ``bell`` : to make the terminal's bell ring (not always supported).\r\n\r\nMacros\r\n------\r\n\r\nSome macros are also provided, like the tags ``<ERROR>``, ``<INFO>`` or ``<WARNING>``.\r\n\r\nAnd also ``<warning>`` and ``<question>``, which respectively gives a colored ``!`` and ``?``.\r\n\r\nWriting to a file\r\n-----------------\r\n\r\nThis is possible with the ``writec`` function. For example ::\r\n\r\n import sys\r\n ANSIColors.writec('<ERROR><u><red>The computer is going to explode!<reset>', fn=sys.stderr)\r\n # sys.stderr.flush()\r\n # this is useless : writec flush itself.\r\n\r\nAuto detection\r\n==============\r\n\r\nOf course, the colors are disabled if the output doesn't support them (e.g. a file or a piped command).\r\n\r\nIt works perfectly on GNU/Linux (tested on Ubuntu, Arch-Linux, Debian, Fedora and Angstrom) and Windows (with OR without Cygwin),\r\nand have *not* be tested on MAC OS X (but it should be alright).\r\n\r\nOther features\r\n===============\r\n\r\nOthers functions\r\n-----------------\r\n\r\nThis module provides also the ``xtitle`` function, to change the title of the terminal.\r\nIt tries to use the command *xtitle*, and if not available, tries to use one *ANSI Code* to change the title.\r\n\r\nThis module provides a ``notify`` function to display a system notification (using ``notify-send`` on Debian-like, not working on Windows).\r\n\r\nScript\r\n------\r\n\r\n``ANSIColors.py`` is also a script.\r\nYou can have his description (or use it) directly with ::\r\n\r\n python -m ANSIColors --help\r\n\r\nFor testing\r\n~~~~~~~~~~~\r\n\r\nIt can be used to run some tests (with the --test option).\r\n\r\nWith GNU/Bash\r\n~~~~~~~~~~~~~\r\n\r\nIt can be used to generate a GNU/Bash color profile\r\n(with the ``--generate --file color.sh`` options).\r\n\r\nThis ``sh`` file can be imported with ``$ . color.sh`` in any GNU/Bash scripts,\r\nor even in your ``~/.bashrc`` file.\r\n\r\nAn up-to-date version of this complete color profile can be found\r\n`on my webpage <http://perso.crans.org/besson/bin/.color.sh>`_.\r\n\r\nLicense\r\n=======\r\n\r\nThis module is licensed under the term of the **GNU Public License**, version 3 (*GPLv3*).\r\nSee the file *LICENSE* for more details.", "description_content_type": null, "docs_url": "https://pythonhosted.org/ANSIColors-balises/", "download_url": "https://bitbucket.org/lbesson/ansi-colors", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.bitbucket.org/lbesson/ansi-colors", "keywords": "ANSI,colors,ANSIColors,tag,console,coloring,text-mode", "license": "GPLv3", "maintainer": "Lilian Besson", "maintainer_email": "naereen@crans.org", "name": "ANSIColors-balises", "package_url": "https://pypi.org/project/ANSIColors-balises/", "platform": "Windows,Windows Cygwin,GNU/Linux", "project_url": "https://pypi.org/project/ANSIColors-balises/", "project_urls": {"Download": "https://bitbucket.org/lbesson/ansi-colors", "Homepage": "https://www.bitbucket.org/lbesson/ansi-colors"}, "release_url": "https://pypi.org/project/ANSIColors-balises/1.9.9.public/", "requires_dist": null, "requires_python": null, "summary": "ANSIColors brings a simple and powerful way to use colours in a terminal.", "version": "1.9.9.public", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Provide <em>efficient</em> and useful <strong>functions</strong> to use colors, in a <em>HTML-tag style</em>.</p>\n<p>Almost all ANSI Colors are defined with this tags-like style.\n<strong>This point is the main interest of this module,</strong>\nbecause many others define functions to print with some colors.</p>\n<p>The <strong>reset</strong> tag is a special one to reinitialize all previously changed parameters.</p>\n</div>\n<div id=\"colors\">\n<h2>Colors</h2>\n<div id=\"foregrounds\">\n<h3>Foregrounds</h3>\n<p>You can choose one of the 8 basic ANSI colors: black, red, green, yellow, blue,\nmagenta, cyan, white.\nThe names beginning with a <em>lower-script</em> design <strong>foreground</strong> colors.</p>\n<p>For example</p>\n<pre>ANSIColors.printc('&lt;reset&gt;this is default. &lt;red&gt;this is red&lt;yellow&gt; and yellow in foreground now&lt;reset&gt;').\n</pre>\n</div>\n<div id=\"backgrounds\">\n<h3>Backgrounds</h3>\n<p>You can choose one of the 8 basic ANSI colours: Black, Red, Green, Yellow, Blue,\nMagenta, Cyan, White.\nThe names beginning with a <em>upper-script</em> design <strong>background</strong> colors.</p>\n<p>For example</p>\n<pre>ANSIColors.printc('&lt;Default&gt;this is default. &lt;Blue&gt;this have a blue background&lt;Black&gt; and black in background now&lt;reset&gt;').\n</pre>\n</div>\n<div id=\"other-tags\">\n<h3>Other tags</h3>\n<p>The following tags are also available :</p>\n<blockquote>\n<ul>\n<li><tt>italic</tt>, <tt>Italic</tt> : to turn on and off the <em>italic</em> mode (not always supported),</li>\n<li><tt>b</tt>, <tt>B</tt> : to turn on and off the <em>bold</em> mode (not always supported),</li>\n<li><tt>u</tt>, <tt>U</tt> : to turn on and off the <em>underline</em> mode (not always supported),</li>\n<li><tt>neg</tt>, <tt>Neg</tt> : to turn on and off the <em>reverse video</em> mode,</li>\n<li><tt>blink</tt>, <tt>Blink</tt> : to turn on and off the <em>blink</em> mode (not always supported),</li>\n<li><tt>el</tt> : to erase the current line,</li>\n<li><tt>bell</tt> : to make the terminal\u2019s bell ring (not always supported).</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"macros\">\n<h3>Macros</h3>\n<p>Some macros are also provided, like the tags <tt>&lt;ERROR&gt;</tt>, <tt>&lt;INFO&gt;</tt> or <tt>&lt;WARNING&gt;</tt>.</p>\n<p>And also <tt>&lt;warning&gt;</tt> and <tt>&lt;question&gt;</tt>, which respectively gives a colored <tt>!</tt> and <tt>?</tt>.</p>\n</div>\n<div id=\"writing-to-a-file\">\n<h3>Writing to a file</h3>\n<p>This is possible with the <tt>writec</tt> function. For example</p>\n<pre>import sys\nANSIColors.writec('&lt;ERROR&gt;&lt;u&gt;&lt;red&gt;The computer is going to explode!&lt;reset&gt;', fn=sys.stderr)\n# sys.stderr.flush()\n# this is useless : writec flush itself.\n</pre>\n</div>\n</div>\n<div id=\"auto-detection\">\n<h2>Auto detection</h2>\n<p>Of course, the colors are disabled if the output doesn\u2019t support them (e.g. a file or a piped command).</p>\n<p>It works perfectly on GNU/Linux (tested on Ubuntu, Arch-Linux, Debian, Fedora and Angstrom) and Windows (with OR without Cygwin),\nand have <em>not</em> be tested on MAC OS X (but it should be alright).</p>\n</div>\n<div id=\"other-features\">\n<h2>Other features</h2>\n<div id=\"others-functions\">\n<h3>Others functions</h3>\n<p>This module provides also the <tt>xtitle</tt> function, to change the title of the terminal.\nIt tries to use the command <em>xtitle</em>, and if not available, tries to use one <em>ANSI Code</em> to change the title.</p>\n<p>This module provides a <tt>notify</tt> function to display a system notification (using <tt><span class=\"pre\">notify-send</span></tt> on Debian-like, not working on Windows).</p>\n</div>\n<div id=\"script\">\n<h3>Script</h3>\n<p><tt>ANSIColors.py</tt> is also a script.\nYou can have his description (or use it) directly with</p>\n<pre>python -m ANSIColors --help\n</pre>\n<div id=\"for-testing\">\n<h4>For testing</h4>\n<p>It can be used to run some tests (with the \u2013test option).</p>\n</div>\n<div id=\"with-gnu-bash\">\n<h4>With GNU/Bash</h4>\n<p>It can be used to generate a GNU/Bash color profile\n(with the <tt><span class=\"pre\">--generate</span> <span class=\"pre\">--file</span> color.sh</tt> options).</p>\n<p>This <tt>sh</tt> file can be imported with <tt>$ . color.sh</tt> in any GNU/Bash scripts,\nor even in your <tt><span class=\"pre\">~/.bashrc</span></tt> file.</p>\n<p>An up-to-date version of this complete color profile can be found\n<a href=\"http://perso.crans.org/besson/bin/.color.sh\" rel=\"nofollow\">on my webpage</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This module is licensed under the term of the <strong>GNU Public License</strong>, version 3 (<em>GPLv3</em>).\nSee the file <em>LICENSE</em> for more details.</p>\n</div>\n\n          </div>"}, "last_serial": 991145, "releases": {"1.9.9.public": [{"comment_text": "", "digests": {"md5": "12f61ce4f2f1632785de247a66e01d4b", "sha256": "df8b3449d7e1b71d9935b0e1d6e8cad25864c6c3abb8dad15648bacd0bf49a3f"}, "downloads": -1, "filename": "ANSIColors-balises-1.9.9.public.tar.gz", "has_sig": true, "md5_digest": "12f61ce4f2f1632785de247a66e01d4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14195, "upload_time": "2013-03-20T10:41:53", "upload_time_iso_8601": "2013-03-20T10:41:53.236650Z", "url": "https://files.pythonhosted.org/packages/d6/9e/f4a7cfb728d0648a3d8cb25a581bfbecfb372f0fff6cf31b16f4b21af693/ANSIColors-balises-1.9.9.public.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12f61ce4f2f1632785de247a66e01d4b", "sha256": "df8b3449d7e1b71d9935b0e1d6e8cad25864c6c3abb8dad15648bacd0bf49a3f"}, "downloads": -1, "filename": "ANSIColors-balises-1.9.9.public.tar.gz", "has_sig": true, "md5_digest": "12f61ce4f2f1632785de247a66e01d4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14195, "upload_time": "2013-03-20T10:41:53", "upload_time_iso_8601": "2013-03-20T10:41:53.236650Z", "url": "https://files.pythonhosted.org/packages/d6/9e/f4a7cfb728d0648a3d8cb25a581bfbecfb372f0fff6cf31b16f4b21af693/ANSIColors-balises-1.9.9.public.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:02 2020"}