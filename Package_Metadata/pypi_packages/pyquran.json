{"info": {"author": "Waleed A. Yousef and Taha M. Madbouly and Omar M. Ibrahime and Ali H. El-Kassas and Ali O. Hassan and Abdallah R. Albohy", "author_email": "tahamagdy@fci.helwan.edu.eg", "bugtrack_url": null, "classifiers": [], "description": "# PyQuran: The Python package for Quranic Analysis\n\n\nPyQuran is a package which provides tools for Quranic Analysis and Arabic texts.\n\n\nIt is still a small package which needs a lot of your effort. We believe that it\nis a seed of a fundamental general package for\ncomputations on Quran with Python, even at the most basic level which is simply\nretrieving Quran text.\n\n*Before Islam*, Arabic letters  were without  dots\u2014\n[*rasm*](https://en.wikipedia.org/wiki/Rasm), which resulted in ambiguty, two or three\nletters had the same rasm or form.\n\nMuslims have decided to remove this ambiguity by adding\ndots above or below each letter of the ones which share the same rasm. Now each letter has a unique form. By the way,\noriginally, Quran was written using letters without dots.\n\n\nTo enable researchers to use modern alphabet, old rasm or other, we introduce *alphabetical systems*,\nIt is a dynamic construction of letters\u2014 Alphabetical Systems.\n\n\n\n\n## Quran Corpus\nWe use [tanzil](http://tanzil.net/docs/download) Quran Corpus (*Uthmani Text*), it is in `UTF-8` encoding. You\ncan find all unique characters of Uthmanic Corpus\n[here](https://hci-lab.github.io/PyQuran-Private/Filtering-Special-Recitation-Symbols/#recitation-symbols).\n\nThere are *special recitation symbols* \u0645\u0635\u0637\u0644\u062d\u0627\u062a \u0627\u0644\u0636\u0628\u0637 in the *Uthmani Text*, they are a guide for the reciter\nto know the right positions to pause and the rules of tajweed.\nWe provide an interface to filter those symbols, *on the fly while fetching from the corpus*,\nwe **DO NOT** change the corpus, NEVER.\n\n[For the full details about filtering *special recitation symbols* \u0645\u0635\u0637\u0644\u062d\u0627\u062a\n\u0627\u0644\u0636\u0628\u0637.](https://hci-lab.github.io/PyQuran-Private/Filtering-Special-Recitation-Symbols/#recitation-symbols)\n\n\n\n\n\n## Current Features\n- [Quran Retrieving.](https://hci-lab.github.io/PyQuran-Private/quran_tools/)\n- Advanced Searching, by\n  [Text](https://hci-lab.github.io/PyQuran-Private/analysis_tools/#search_sequence)\nand [Diacritics](https://hci-lab.github.io/PyQuran-Private/analysis_tools/#search_string_with_tashkeel) Patterns.\n- [Buckwalter Transliteration](https://hci-lab.github.io/PyQuran-Private/arabic_tools/#buckwalter_transliteration), back and forth.\n- Multiple [Alphabetical Systems](https://hci-lab.github.io/PyQuran-Private/arabic_tools/#alphabetical-systems).\n- Words Frequency Table \u0627\u0644\u0645\u0639\u062c\u0645 \u0627\u0644\u062a\u0631\u062f\u062f\u0649 \u0644\u0644\u0623\u0644\u0641\u0627\u0638 .\n\n\n## PyQuran needs and Upcoming Features.\n- Words Frequency Table filtered according to words meaning.\n- Morphology analysis of words to their roots.\n- Arabic tools for representing Arabic text for AI algorithms and neural\n  networks, for more serious Arabic text processing and understanding. Those\n  tools should take meaning, diacritics, roots and other morphology aspects in\n  account.\n- Some PyQuran in-house tools and architecture enhancement will be on GitHub\n  Issues for you contributors to make PyQuran professional and easy to use.\n\n\n\n## Contributing\nTo contribute and maintain PyQuran, Please read  [CONTRIBUTING](https://hci-lab.github.io/PyQuran-Private/CONTRIBUTING) section.\n\n\n\n## Dependencies\n- [numpy](http://www.numpy.org/)\n- [pyarabic](https://github.com/linuxscout/pyarabic)\n\n\n## Install\n- From PyPI: `$ pip3 install pyquran`\n\n## Citing\n```\n@MISC {PyQuran2018,\nauthor = \"Waleed A. Yousef and\n          Taha M. Madbouly and\n          Omar M. Ibrahime and\n          Ali H. El-Kassas and\n          Ali O. Hassan and\n          Abdallah R. Albohy\",\ntitle = \"PyQuran: The Python package for Quranic Analysis\",\nhowpublished = \"https://hci-lab.github.io/PyQuran-Private\",\nyear = \"2018\"}\n```\n\n\n## Communication\n[Author Page](https://hci-lab.github.io/PyQuran-Private/authors)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hci-lab/PyQuran", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyquran", "package_url": "https://pypi.org/project/pyquran/", "platform": "", "project_url": "https://pypi.org/project/pyquran/", "project_urls": {"Homepage": "https://github.com/hci-lab/PyQuran"}, "release_url": "https://pypi.org/project/pyquran/1.0.1/", "requires_dist": ["numpy", "pyarabic"], "requires_python": "", "summary": "PyQuran: The Python package for Quranic Analysis", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyQuran: The Python package for Quranic Analysis</h1>\n<p>PyQuran is a package which provides tools for Quranic Analysis and Arabic texts.</p>\n<p>It is still a small package which needs a lot of your effort. We believe that it\nis a seed of a fundamental general package for\ncomputations on Quran with Python, even at the most basic level which is simply\nretrieving Quran text.</p>\n<p><em>Before Islam</em>, Arabic letters  were without  dots\u2014\n<a href=\"https://en.wikipedia.org/wiki/Rasm\" rel=\"nofollow\"><em>rasm</em></a>, which resulted in ambiguty, two or three\nletters had the same rasm or form.</p>\n<p>Muslims have decided to remove this ambiguity by adding\ndots above or below each letter of the ones which share the same rasm. Now each letter has a unique form. By the way,\noriginally, Quran was written using letters without dots.</p>\n<p>To enable researchers to use modern alphabet, old rasm or other, we introduce <em>alphabetical systems</em>,\nIt is a dynamic construction of letters\u2014 Alphabetical Systems.</p>\n<h2>Quran Corpus</h2>\n<p>We use <a href=\"http://tanzil.net/docs/download\" rel=\"nofollow\">tanzil</a> Quran Corpus (<em>Uthmani Text</em>), it is in <code>UTF-8</code> encoding. You\ncan find all unique characters of Uthmanic Corpus\n<a href=\"https://hci-lab.github.io/PyQuran-Private/Filtering-Special-Recitation-Symbols/#recitation-symbols\" rel=\"nofollow\">here</a>.</p>\n<p>There are <em>special recitation symbols</em> \u0645\u0635\u0637\u0644\u062d\u0627\u062a \u0627\u0644\u0636\u0628\u0637 in the <em>Uthmani Text</em>, they are a guide for the reciter\nto know the right positions to pause and the rules of tajweed.\nWe provide an interface to filter those symbols, <em>on the fly while fetching from the corpus</em>,\nwe <strong>DO NOT</strong> change the corpus, NEVER.</p>\n<p><a href=\"https://hci-lab.github.io/PyQuran-Private/Filtering-Special-Recitation-Symbols/#recitation-symbols\" rel=\"nofollow\">For the full details about filtering <em>special recitation symbols</em> \u0645\u0635\u0637\u0644\u062d\u0627\u062a\n\u0627\u0644\u0636\u0628\u0637.</a></p>\n<h2>Current Features</h2>\n<ul>\n<li><a href=\"https://hci-lab.github.io/PyQuran-Private/quran_tools/\" rel=\"nofollow\">Quran Retrieving.</a></li>\n<li>Advanced Searching, by\n<a href=\"https://hci-lab.github.io/PyQuran-Private/analysis_tools/#search_sequence\" rel=\"nofollow\">Text</a>\nand <a href=\"https://hci-lab.github.io/PyQuran-Private/analysis_tools/#search_string_with_tashkeel\" rel=\"nofollow\">Diacritics</a> Patterns.</li>\n<li><a href=\"https://hci-lab.github.io/PyQuran-Private/arabic_tools/#buckwalter_transliteration\" rel=\"nofollow\">Buckwalter Transliteration</a>, back and forth.</li>\n<li>Multiple <a href=\"https://hci-lab.github.io/PyQuran-Private/arabic_tools/#alphabetical-systems\" rel=\"nofollow\">Alphabetical Systems</a>.</li>\n<li>Words Frequency Table \u0627\u0644\u0645\u0639\u062c\u0645 \u0627\u0644\u062a\u0631\u062f\u062f\u0649 \u0644\u0644\u0623\u0644\u0641\u0627\u0638 .</li>\n</ul>\n<h2>PyQuran needs and Upcoming Features.</h2>\n<ul>\n<li>Words Frequency Table filtered according to words meaning.</li>\n<li>Morphology analysis of words to their roots.</li>\n<li>Arabic tools for representing Arabic text for AI algorithms and neural\nnetworks, for more serious Arabic text processing and understanding. Those\ntools should take meaning, diacritics, roots and other morphology aspects in\naccount.</li>\n<li>Some PyQuran in-house tools and architecture enhancement will be on GitHub\nIssues for you contributors to make PyQuran professional and easy to use.</li>\n</ul>\n<h2>Contributing</h2>\n<p>To contribute and maintain PyQuran, Please read  <a href=\"https://hci-lab.github.io/PyQuran-Private/CONTRIBUTING\" rel=\"nofollow\">CONTRIBUTING</a> section.</p>\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">numpy</a></li>\n<li><a href=\"https://github.com/linuxscout/pyarabic\" rel=\"nofollow\">pyarabic</a></li>\n</ul>\n<h2>Install</h2>\n<ul>\n<li>From PyPI: <code>$ pip3 install pyquran</code></li>\n</ul>\n<h2>Citing</h2>\n<pre><code>@MISC {PyQuran2018,\nauthor = \"Waleed A. Yousef and\n          Taha M. Madbouly and\n          Omar M. Ibrahime and\n          Ali H. El-Kassas and\n          Ali O. Hassan and\n          Abdallah R. Albohy\",\ntitle = \"PyQuran: The Python package for Quranic Analysis\",\nhowpublished = \"https://hci-lab.github.io/PyQuran-Private\",\nyear = \"2018\"}\n</code></pre>\n<h2>Communication</h2>\n<p><a href=\"https://hci-lab.github.io/PyQuran-Private/authors\" rel=\"nofollow\">Author Page</a></p>\n\n          </div>"}, "last_serial": 4065058, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ee252fc5568b4a9cdbea5322b43e5914", "sha256": "4e7c61f05b1a71c67e122e61355ee638fcf67a0d22a3ddc75ad9346f120e0dfe"}, "downloads": -1, "filename": "pyquran-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ee252fc5568b4a9cdbea5322b43e5914", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 334838, "upload_time": "2018-07-13T13:45:18", "upload_time_iso_8601": "2018-07-13T13:45:18.170078Z", "url": "https://files.pythonhosted.org/packages/b3/05/e1603b84596c0c3817ad612cbaf786fa79d8329d3c04702981d8e7ea83cb/pyquran-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81dcbc4746f381b92f0227b257955c9b", "sha256": "4f32d3edf27f7d92fc2bfbacd7cf5f6c14b53d00511280baf02bf69473fde7fe"}, "downloads": -1, "filename": "pyquran-1.0.0.tar.gz", "has_sig": false, "md5_digest": "81dcbc4746f381b92f0227b257955c9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 318184, "upload_time": "2018-07-13T13:45:26", "upload_time_iso_8601": "2018-07-13T13:45:26.676236Z", "url": "https://files.pythonhosted.org/packages/9c/23/c6820d607a9d308dd65d42057f59a752a2a034076cb9aa96f6235f326fdb/pyquran-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cf2a5920a41a8ad9ad1d4ad54e6642d0", "sha256": "f9495c14363e2df324f1f02d3219728301ce04c278ea736f2978e9a816d580b0"}, "downloads": -1, "filename": "pyquran-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cf2a5920a41a8ad9ad1d4ad54e6642d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 334828, "upload_time": "2018-07-16T09:25:02", "upload_time_iso_8601": "2018-07-16T09:25:02.431709Z", "url": "https://files.pythonhosted.org/packages/9a/23/34faed5c82596673ba72bbc17619cc23b6a5e10f5c85b5b89b37114862d9/pyquran-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "971cf3bbdc875a1a3010619e6b86f0ea", "sha256": "9273c21e77a76a64391c6ece39adf5c980330b6b34c6b09d59565820e1576714"}, "downloads": -1, "filename": "pyquran-1.0.1.tar.gz", "has_sig": false, "md5_digest": "971cf3bbdc875a1a3010619e6b86f0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 318195, "upload_time": "2018-07-16T09:25:10", "upload_time_iso_8601": "2018-07-16T09:25:10.728340Z", "url": "https://files.pythonhosted.org/packages/7f/6b/d565dda9bd4cc8fbe20c1c17c0496e6343912255d78470d3421903f1b686/pyquran-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf2a5920a41a8ad9ad1d4ad54e6642d0", "sha256": "f9495c14363e2df324f1f02d3219728301ce04c278ea736f2978e9a816d580b0"}, "downloads": -1, "filename": "pyquran-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cf2a5920a41a8ad9ad1d4ad54e6642d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 334828, "upload_time": "2018-07-16T09:25:02", "upload_time_iso_8601": "2018-07-16T09:25:02.431709Z", "url": "https://files.pythonhosted.org/packages/9a/23/34faed5c82596673ba72bbc17619cc23b6a5e10f5c85b5b89b37114862d9/pyquran-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "971cf3bbdc875a1a3010619e6b86f0ea", "sha256": "9273c21e77a76a64391c6ece39adf5c980330b6b34c6b09d59565820e1576714"}, "downloads": -1, "filename": "pyquran-1.0.1.tar.gz", "has_sig": false, "md5_digest": "971cf3bbdc875a1a3010619e6b86f0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 318195, "upload_time": "2018-07-16T09:25:10", "upload_time_iso_8601": "2018-07-16T09:25:10.728340Z", "url": "https://files.pythonhosted.org/packages/7f/6b/d565dda9bd4cc8fbe20c1c17c0496e6343912255d78470d3421903f1b686/pyquran-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:37 2020"}