{"info": {"author": "zwzw911", "author_email": "zwzw911110@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 3"], "description": "#get_free_proxy\nget_free_proxy is a tool to get free proxy from website\n### install\n`pip install get-free-proxy`\n### usage\nget_free_proxy depends on [gen_browser_header](https://github.com/zwzw911/gen-browser-header).   \n\ncreate gen_browser_header setting  \n\n`import gen_browser_header.setting.Setting as gbh_setting`   \n`import gen_browser_header.self.SelfEnum as gbh_self_enum`     \n`cur_gbh_setting = gbh_setting.GbhSetting()`    \n`cur_gbh_setting.proxy_ip = ['10.11.12.13:8080']`    \n`cur_gbh_setting.browser_type = {gbh_self_enum.BrowserType.All}`        \n`cur_gbh_setting.firefox_ver = {'min': 74, 'max': 75}`    \n`cur_gbh_setting.chrome_type = {gbh_self_enum.ChromeType.Stable}`    \n`cur_gbh_setting.chrome_max_release_year = 1`    \n`cur_gbh_setting.os_type = {gbh_self_enum.OsType.Win64}`\n\ncreate get_free_proxy setting    \n\n`import get_free_proxy.self.SelfEnum as gfp_self_enum`    \n`import get_free_proxy.setting.Setting as gfp_setting`    \n`cur_gfp_setting = gfp_setting.GfpSetting()`    \n`cur_gfp_setting.proxy_type = {gfp_self_enum.ProxyType.HIGH_ANON}`    \n`cur_gfp_setting.protocol = {gfp_self_enum.ProtocolType.HTTP,\n                            gfp_self_enum.ProtocolType.HTTPS}`    \n`cur_gfp_setting.country = {gfp_self_enum.Country.All}`    \n`cur_gfp_setting.storage_type = {gfp_self_enum.StorageType.All}`    \n`cur_gfp_setting.mysql = {\n     'host': '127.0.0.1',\n     'port': 3306,\n     'user': 'root',\n     'pwd': '1234',\n     'db_name': 'db_proxy',\n     'tbl_name': 'tbl_proxy',\n     'charset': 'utf8mb4'}`    \n`cur_gfp_setting.redis = {\n    'host': '127.0.0.1',\n    'port': 6379,\n    'db': 0,  # 0~15\n    'pwd': None\n}`    \n`cur_gfp_setting.result_file_path = os.path.join(tempfile.gettempdir(), 'result.json')`    \n`cur_gfp_setting.valid_time_in_db = 86400`    \n`cur_gfp_setting.site_max_page_no = 2`    \n`cur_gfp_setting.site = {gfp_self_enum.SupportedWeb.Xici}`    \n\nstart to get free proxy    \n\n`mainOp = MainOp(cur_gfp_setting, cur_gbh_setting) `       \n \u9996\u5148\u6e05\u7a7a\u6570\u636e\u5e93(\u53cd\u6b63\u90fd\u8981\u5168\u90e8\u91cd\u65b0\u8bfb\u53d6\u7f51\u9875) \n`mainOp.del_proxy()`   \n\u68c0\u6d4burl\u662f\u5426\u9700\u8981\u4f7f\u7528\u4ee3\u7406    \n`mainOp.check_if_site_need_proxy()`    \n\u4ece\u53ef\u4ee5\u76f4\u8fde\u7684\u7f51\u7ad9\u83b7\u5f97\u4ee3\u7406    \n`tmp_proxies = mainOp.get_proxy_without_proxy()`    \n\u9a8c\u8bc1\u4ee3\u7406\u662f\u5426\u53ef\u7528    \n`first_validate_proxies = mainOp.async_validate_proxies(tmp_proxies, 'https://www.baidu.com')`    \n\u6709\u53ef\u7528\u7684\u4ee3\u7406\uff0c\u5219\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7406\uff0c\u6765\u8fde\u63a5\u9700\u8981\u4ee3\u7406\u8fde\u63a5\u7684\u4ee3\u7406\u5b8c\u6574\uff1b\u5426\u5219\uff0c\u4f7f\u7528\u56fa\u5b9a\u7684cur_gbh_setting.proxy_ip    \n`if len(first_validate_proxies) > 0:`    \n`    tmp_proxies = mainOp.get_proxy_with_proxy(proxies=first_validate_proxies)`    \n`else:`    \n`    tmp_proxies = mainOp.get_proxy_with_proxy(proxies=None)`    \n\u83b7\u5f97\u7ed3\u679c\uff0c\u518d\u6b21\u8fdb\u884c\u9a8c\u8bc1\uff0c\u662f\u5426\u53ef\u4ee5\u4f7f\u7528   \n`second_validate_proxies = mainOp.async_validate_proxies(tmp_proxies, 'https://www.baidu.com')    `    \n\u5408\u5e76\u6240\u6709\u53ef\u7528\u7684\u4ee3\u7406    \n`all_validate_proxies = first_validate_proxies+second_validate_proxies`    \n`print('\u6700\u7ec8\u6709\u6548\u4ee3\u7406%s' % all_validate_proxies)`    \n\u4fdd\u5b58\u4ee3\u7406    \n`mainOp.save_proxy(proxies=all_validate_proxies)`\n\n\n\n### gfp_setting  \n1. **proxy_type**    \ntype: ***set, element is enum=>gfp_self_enum.ProxyType***    \ndefault: ***{gfp_self_enum.ProxyType.HIGH_ANON}***   \ndescription:  proxy has 3 type: transparent/anonymous/high_anonymous, TRANS/ANON/HIGH_ANON. There is an addition one All, \nif set, will be replace by  TRANS+ANON+HIGH_ANON   \n2. **protocol**    \ntype: ***set, element is enum=>gfp_self_enum.ProtocolType***\ndefault: {gfp_self_enum.ProtocolType.HTTP, gfp_self_enum.ProtocolType.HTTPS}    \ndescription:  proxy protocol has 4 type: HTTP, HTTPS, SOCK4, SOCK5. There is an addition one All, is set, will be replace by\nHTTP+HTTPS+SOCK4+SOCK5.    \n3. **country**    \ntype: ***set, element is enum=>gfp_self_enum.Country***    \ndefault: {gfp_self_enum.Country.China}    \ndescription: some web provide proxy form all countries, the parameter will filter the country. There is an addition one \nAll, is set, will ignore country.    \n4. **storage_type**\ntype: ***set, element is enum=>gfp_self_enum.StorageType***    \ndefault: {gfp_self_enum.StorageType.All}    \ndescription: current support 3 storage type: Mysql/Redis/File. There is an addition one All, is set, will be replace by\nMysql+Redis+File    \n5. **mysql**   \ntype: ***dict***    \ndefault:   \n{  \n'host': '127.0.0.1',  \n     'port': 3306,  \n     'user': 'root',  \n     'pwd': '1234',  \n     'db_name': 'db_proxy',  \n     'tbl_name': 'tbl_proxy',  \n     'charset': 'utf8mb4'     \n     }    \ndescription: if **storage_type** include Mysql, set this parameter to connect mysql.    \n5. **redis**   \ntype: ***dict***\ndefault:    \n{    \n    'host': '127.0.0.1',    \n    'port': 6379,    \n    'db': 0,  # 0~15    \n    'pwd': None    \n}     \ndescription: if **storage_type** include Redis, set this parameter to connect redis.\n6. **result_file_path**    \ntype: ***string***    \ndefault: ***os.path.join(tempfile.gettempdir(), 'result.json')***     \ndescription: if **storage_type** include File, all get proxy will be save into the file defined by **result_file_path**    \n7. **valid_time_in_db**    \ntype: ***int***  \ndefault: ***86400***   \nunit: ***second***    \ndescription: since all got proxy are free, not sure when these proxy will expire. So set this parameter, it a proxy expire this duration, will not delete/not_choose    \n8. **site_max_page_no**    \ntype: ***int***    \ndefault: ***2***   \ndescription: min:2, max:9. The web site which provide free proxy, the content are pagationed. This parameter determine how many page \nwill be handled to extract proxy.    \n9. **site**    \ntype: ***set, enum=>gfp_self_enum.SupportedWeb***   \ndefault: ***{gfp_self_enum.SupportedWeb.Xici}***      \ndescription: this parameter determine which site will be used to extract proxy. currently only support 4 site:\nhttps://www.xicidaili.com, https://www.kuaidaili.com/free, https://hidemy.name/en/proxy-list/#list, https://proxy-list.org/english.\nand if All is set, will be replace by above 4 site.   \n\n\n### change history\n0.1.0  use requests-html replace requests    \n0.1.1  match gen_browser 0.1.3: when gen_header, add host base on parameter url\n0.1.2  add support for zh-cn in setup.py by add encoding=\"utf-8\"    \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zwzw911/get-free-proxy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "get-free-proxy", "package_url": "https://pypi.org/project/get-free-proxy/", "platform": "", "project_url": "https://pypi.org/project/get-free-proxy/", "project_urls": {"Homepage": "https://github.com/zwzw911/get-free-proxy"}, "release_url": "https://pypi.org/project/get-free-proxy/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package to get free proxy", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>#get_free_proxy\nget_free_proxy is a tool to get free proxy from website</p>\n<h3>install</h3>\n<p><code>pip install get-free-proxy</code></p>\n<h3>usage</h3>\n<p>get_free_proxy depends on <a href=\"https://github.com/zwzw911/gen-browser-header\" rel=\"nofollow\">gen_browser_header</a>.</p>\n<p>create gen_browser_header setting</p>\n<p><code>import gen_browser_header.setting.Setting as gbh_setting</code><br>\n<code>import gen_browser_header.self.SelfEnum as gbh_self_enum</code><br>\n<code>cur_gbh_setting = gbh_setting.GbhSetting()</code><br>\n<code>cur_gbh_setting.proxy_ip = ['10.11.12.13:8080']</code><br>\n<code>cur_gbh_setting.browser_type = {gbh_self_enum.BrowserType.All}</code><br>\n<code>cur_gbh_setting.firefox_ver = {'min': 74, 'max': 75}</code><br>\n<code>cur_gbh_setting.chrome_type = {gbh_self_enum.ChromeType.Stable}</code><br>\n<code>cur_gbh_setting.chrome_max_release_year = 1</code><br>\n<code>cur_gbh_setting.os_type = {gbh_self_enum.OsType.Win64}</code></p>\n<p>create get_free_proxy setting</p>\n<p><code>import get_free_proxy.self.SelfEnum as gfp_self_enum</code><br>\n<code>import get_free_proxy.setting.Setting as gfp_setting</code><br>\n<code>cur_gfp_setting = gfp_setting.GfpSetting()</code><br>\n<code>cur_gfp_setting.proxy_type = {gfp_self_enum.ProxyType.HIGH_ANON}</code><br>\n<code>cur_gfp_setting.protocol = {gfp_self_enum.ProtocolType.HTTP, gfp_self_enum.ProtocolType.HTTPS}</code><br>\n<code>cur_gfp_setting.country = {gfp_self_enum.Country.All}</code><br>\n<code>cur_gfp_setting.storage_type = {gfp_self_enum.StorageType.All}</code><br>\n<code>cur_gfp_setting.mysql = { 'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'pwd': '1234', 'db_name': 'db_proxy', 'tbl_name': 'tbl_proxy', 'charset': 'utf8mb4'}</code><br>\n<code>cur_gfp_setting.redis = { 'host': '127.0.0.1', 'port': 6379, 'db': 0, # 0~15 'pwd': None }</code><br>\n<code>cur_gfp_setting.result_file_path = os.path.join(tempfile.gettempdir(), 'result.json')</code><br>\n<code>cur_gfp_setting.valid_time_in_db = 86400</code><br>\n<code>cur_gfp_setting.site_max_page_no = 2</code><br>\n<code>cur_gfp_setting.site = {gfp_self_enum.SupportedWeb.Xici}</code></p>\n<p>start to get free proxy</p>\n<p><code>mainOp = MainOp(cur_gfp_setting, cur_gbh_setting)</code><br>\n\u9996\u5148\u6e05\u7a7a\u6570\u636e\u5e93(\u53cd\u6b63\u90fd\u8981\u5168\u90e8\u91cd\u65b0\u8bfb\u53d6\u7f51\u9875)\n<code>mainOp.del_proxy()</code><br>\n\u68c0\u6d4burl\u662f\u5426\u9700\u8981\u4f7f\u7528\u4ee3\u7406<br>\n<code>mainOp.check_if_site_need_proxy()</code><br>\n\u4ece\u53ef\u4ee5\u76f4\u8fde\u7684\u7f51\u7ad9\u83b7\u5f97\u4ee3\u7406<br>\n<code>tmp_proxies = mainOp.get_proxy_without_proxy()</code><br>\n\u9a8c\u8bc1\u4ee3\u7406\u662f\u5426\u53ef\u7528<br>\n<code>first_validate_proxies = mainOp.async_validate_proxies(tmp_proxies, 'https://www.baidu.com')</code><br>\n\u6709\u53ef\u7528\u7684\u4ee3\u7406\uff0c\u5219\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7406\uff0c\u6765\u8fde\u63a5\u9700\u8981\u4ee3\u7406\u8fde\u63a5\u7684\u4ee3\u7406\u5b8c\u6574\uff1b\u5426\u5219\uff0c\u4f7f\u7528\u56fa\u5b9a\u7684cur_gbh_setting.proxy_ip<br>\n<code>if len(first_validate_proxies) &gt; 0:</code><br>\n<code>tmp_proxies = mainOp.get_proxy_with_proxy(proxies=first_validate_proxies)</code><br>\n<code>else:</code><br>\n<code>tmp_proxies = mainOp.get_proxy_with_proxy(proxies=None)</code><br>\n\u83b7\u5f97\u7ed3\u679c\uff0c\u518d\u6b21\u8fdb\u884c\u9a8c\u8bc1\uff0c\u662f\u5426\u53ef\u4ee5\u4f7f\u7528<br>\n<code>second_validate_proxies = mainOp.async_validate_proxies(tmp_proxies, 'https://www.baidu.com')</code><br>\n\u5408\u5e76\u6240\u6709\u53ef\u7528\u7684\u4ee3\u7406<br>\n<code>all_validate_proxies = first_validate_proxies+second_validate_proxies</code><br>\n<code>print('\u6700\u7ec8\u6709\u6548\u4ee3\u7406%s' % all_validate_proxies)</code><br>\n\u4fdd\u5b58\u4ee3\u7406<br>\n<code>mainOp.save_proxy(proxies=all_validate_proxies)</code></p>\n<h3>gfp_setting</h3>\n<ol>\n<li><strong>proxy_type</strong><br>\ntype: <em><strong>set, element is enum=&gt;gfp_self_enum.ProxyType</strong></em><br>\ndefault: <em><strong>{gfp_self_enum.ProxyType.HIGH_ANON}</strong></em><br>\ndescription:  proxy has 3 type: transparent/anonymous/high_anonymous, TRANS/ANON/HIGH_ANON. There is an addition one All,\nif set, will be replace by  TRANS+ANON+HIGH_ANON</li>\n<li><strong>protocol</strong><br>\ntype: <em><strong>set, element is enum=&gt;gfp_self_enum.ProtocolType</strong></em>\ndefault: {gfp_self_enum.ProtocolType.HTTP, gfp_self_enum.ProtocolType.HTTPS}<br>\ndescription:  proxy protocol has 4 type: HTTP, HTTPS, SOCK4, SOCK5. There is an addition one All, is set, will be replace by\nHTTP+HTTPS+SOCK4+SOCK5.</li>\n<li><strong>country</strong><br>\ntype: <em><strong>set, element is enum=&gt;gfp_self_enum.Country</strong></em><br>\ndefault: {gfp_self_enum.Country.China}<br>\ndescription: some web provide proxy form all countries, the parameter will filter the country. There is an addition one\nAll, is set, will ignore country.</li>\n<li><strong>storage_type</strong>\ntype: <em><strong>set, element is enum=&gt;gfp_self_enum.StorageType</strong></em><br>\ndefault: {gfp_self_enum.StorageType.All}<br>\ndescription: current support 3 storage type: Mysql/Redis/File. There is an addition one All, is set, will be replace by\nMysql+Redis+File</li>\n<li><strong>mysql</strong><br>\ntype: <em><strong>dict</strong></em><br>\ndefault:<br>\n{<br>\n'host': '127.0.0.1',<br>\n'port': 3306,<br>\n'user': 'root',<br>\n'pwd': '1234',<br>\n'db_name': 'db_proxy',<br>\n'tbl_name': 'tbl_proxy',<br>\n'charset': 'utf8mb4'<br>\n}<br>\ndescription: if <strong>storage_type</strong> include Mysql, set this parameter to connect mysql.</li>\n<li><strong>redis</strong><br>\ntype: <em><strong>dict</strong></em>\ndefault:<br>\n{<br>\n'host': '127.0.0.1',<br>\n'port': 6379,<br>\n'db': 0,  # 0~15<br>\n'pwd': None<br>\n}<br>\ndescription: if <strong>storage_type</strong> include Redis, set this parameter to connect redis.</li>\n<li><strong>result_file_path</strong><br>\ntype: <em><strong>string</strong></em><br>\ndefault: <em><strong>os.path.join(tempfile.gettempdir(), 'result.json')</strong></em><br>\ndescription: if <strong>storage_type</strong> include File, all get proxy will be save into the file defined by <strong>result_file_path</strong></li>\n<li><strong>valid_time_in_db</strong><br>\ntype: <em><strong>int</strong></em><br>\ndefault: <em><strong>86400</strong></em><br>\nunit: <em><strong>second</strong></em><br>\ndescription: since all got proxy are free, not sure when these proxy will expire. So set this parameter, it a proxy expire this duration, will not delete/not_choose</li>\n<li><strong>site_max_page_no</strong><br>\ntype: <em><strong>int</strong></em><br>\ndefault: <em><strong>2</strong></em><br>\ndescription: min:2, max:9. The web site which provide free proxy, the content are pagationed. This parameter determine how many page\nwill be handled to extract proxy.</li>\n<li><strong>site</strong><br>\ntype: <em><strong>set, enum=&gt;gfp_self_enum.SupportedWeb</strong></em><br>\ndefault: <em><strong>{gfp_self_enum.SupportedWeb.Xici}</strong></em><br>\ndescription: this parameter determine which site will be used to extract proxy. currently only support 4 site:\n<a href=\"https://www.xicidaili.com\" rel=\"nofollow\">https://www.xicidaili.com</a>, <a href=\"https://www.kuaidaili.com/free\" rel=\"nofollow\">https://www.kuaidaili.com/free</a>, <a href=\"https://hidemy.name/en/proxy-list/#list\" rel=\"nofollow\">https://hidemy.name/en/proxy-list/#list</a>, <a href=\"https://proxy-list.org/english\" rel=\"nofollow\">https://proxy-list.org/english</a>.\nand if All is set, will be replace by above 4 site.</li>\n</ol>\n<h3>change history</h3>\n<p>0.1.0  use requests-html replace requests<br>\n0.1.1  match gen_browser 0.1.3: when gen_header, add host base on parameter url\n0.1.2  add support for zh-cn in setup.py by add encoding=\"utf-8\"</p>\n\n          </div>"}, "last_serial": 7118389, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dbda20a484dbf9cd16335fa59f8f347f", "sha256": "5b1369cfc4b89808a5ea0ca974fa5761b1dcd3b488a6d906efa53a4aa8cc9b20"}, "downloads": -1, "filename": "get_free_proxy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dbda20a484dbf9cd16335fa59f8f347f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27892, "upload_time": "2020-04-24T08:07:01", "upload_time_iso_8601": "2020-04-24T08:07:01.984560Z", "url": "https://files.pythonhosted.org/packages/1d/4f/21b68e686521b849a4246235baf73f32c9990ae8e6a293547ae34f7d789d/get_free_proxy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59d485ba1c711d6b84952d2d595bf05f", "sha256": "655021f8a8f4a15eb4dfef928afadbaa127ecdd9141caf33231d209f9f9ec3e8"}, "downloads": -1, "filename": "get_free_proxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "59d485ba1c711d6b84952d2d595bf05f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23227, "upload_time": "2020-04-24T08:07:04", "upload_time_iso_8601": "2020-04-24T08:07:04.425441Z", "url": "https://files.pythonhosted.org/packages/f5/5b/e597bf7f842adb326cf2d88af5e6316f7fdd2411ff4e843d37ea5b8d4f08/get_free_proxy-0.0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "30addd2bfb391a6977b6b9d7544c0630", "sha256": "c7dbb15d73d6099322affc16b4ff3ba2ad063d81f1ad4a3ad8bd5ca05abbf899"}, "downloads": -1, "filename": "get_free_proxy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "30addd2bfb391a6977b6b9d7544c0630", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30043, "upload_time": "2020-04-28T08:51:33", "upload_time_iso_8601": "2020-04-28T08:51:33.955425Z", "url": "https://files.pythonhosted.org/packages/d2/92/8dcf96744db30217b1f3fdc8b17dafd24026aa952fd7ce119e11eb6cee52/get_free_proxy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa477d60ab6418ff62e2621924662666", "sha256": "7746898b2ed3ab5480e1d6abc9d63f1d0f634d25fcd327d9df7c91c816975498"}, "downloads": -1, "filename": "get_free_proxy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fa477d60ab6418ff62e2621924662666", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25512, "upload_time": "2020-04-28T08:51:35", "upload_time_iso_8601": "2020-04-28T08:51:35.692538Z", "url": "https://files.pythonhosted.org/packages/3c/34/ba6a83a7d8c6fd23440f645f22a0de87abd9e5ff3f0a0d69e0a84f4f9c32/get_free_proxy-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30addd2bfb391a6977b6b9d7544c0630", "sha256": "c7dbb15d73d6099322affc16b4ff3ba2ad063d81f1ad4a3ad8bd5ca05abbf899"}, "downloads": -1, "filename": "get_free_proxy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "30addd2bfb391a6977b6b9d7544c0630", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30043, "upload_time": "2020-04-28T08:51:33", "upload_time_iso_8601": "2020-04-28T08:51:33.955425Z", "url": "https://files.pythonhosted.org/packages/d2/92/8dcf96744db30217b1f3fdc8b17dafd24026aa952fd7ce119e11eb6cee52/get_free_proxy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa477d60ab6418ff62e2621924662666", "sha256": "7746898b2ed3ab5480e1d6abc9d63f1d0f634d25fcd327d9df7c91c816975498"}, "downloads": -1, "filename": "get_free_proxy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fa477d60ab6418ff62e2621924662666", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25512, "upload_time": "2020-04-28T08:51:35", "upload_time_iso_8601": "2020-04-28T08:51:35.692538Z", "url": "https://files.pythonhosted.org/packages/3c/34/ba6a83a7d8c6fd23440f645f22a0de87abd9e5ff3f0a0d69e0a84f4f9c32/get_free_proxy-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:48 2020"}