{"info": {"author": "Agus Makmun (Summon Agus)", "author_email": "summon.agus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-image-optimizer |pypi version|\n---------------------------------------\n\n.. |pypi version|\n   image:: https://img.shields.io/pypi/v/django-image-optimizer.svg\n   :target: https://pypi.python.org/pypi/django-image-optimizer\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n   :target: https://raw.githubusercontent.com/agusmakmun/django-image-optimizer/master/LICENSE\n\n.. image:: https://img.shields.io/pypi/pyversions/django-image-optimizer.svg\n   :target: https://pypi.python.org/pypi/django-image-optimizer\n\n.. image:: https://img.shields.io/badge/Django-1.8%20%3E=%203.0-green.svg\n  :target: https://www.djangoproject.com\n\n\nDjango Image Optimizer is a simple Django library that allows optimization\nof images by using `TinyPNG <https://tinypng.com/>`_ or `Pillow <pillow.readthedocs.io/>`_.\n\n\nInstallation\n------------------------------\n\nDjango Image Optimizer is available directly from `PyPI <https://pypi.python.org/pypi/django-image-optimizer>`_:\n\n1. Installing the package.\n\n::\n\n    $ pip install django-image-optimizer\n\n\n2. Don't forget to add ``'image_optimizer'`` to your ``'INSTALLED_APPS'``.\n\n::\n\n    # settings.py\n    INSTALLED_APPS = [\n        ....\n        'image_optimizer',\n    ]\n\n\n3. You have the option to use either TinyPNG or Pillow for optimizing images.\n   Inform ``optimized_image`` which one you want to use by setting the following\n\n::\n\n    # To use Pillow\n    OPTIMIZED_IMAGE_METHOD = 'pillow'\n    # To use TinyPNG\n    OPTIMIZED_IMAGE_METHOD = 'tinypng'\n\nAny other string that is set for this setting will mean that optimization does\nnot occur. If you are unsure of whether you would like to use TinyPNG or Pillow,\nfeel free to consult the documentation of each.\n\nIf you choose to use TinyPNG, you will need to get an API key from\nTinyPNG. Visit https://tinypng.com/developers for more details on getting an\nAPI key. Once you have done so, add the following setting to your settings\nfile. Note: it is a good idea to keep this secret\n\n::\n\n    TINYPNG_KEY = 'your-key'\n\n\n4. You may use the ``OptimizedImageField`` by importing it\n\n::\n\n    from django.db import models\n\n    from image_optimizer.fields import OptimizedImageField\n\n\n    class MyModel(models.Model):\n        ...\n        image = OptimizedImageField()\n\n\n    class MyModel2(models.Model):\n        \"\"\"\n        If you using OPTIMIZED_IMAGE_METHOD = 'pillow'\n        You can use this optional arguments.\n\n        This model represents a MyModel2 with a few\n        fields including a `image` field which is an OptimizedImageField\n        instance with `optimized_image_output_size` and\n        `optimized_image_resize_method` arguments set.\n\n        This means that image would be a resized\n        version of the source image, meant to keep a given screen resolution,\n        in this case (400, 300) pixels.\n        \"\"\"\n        image = OptimizedImageField(\n            upload_to='uploads/collaborators/%Y/%m/%d',\n            optimized_image_output_size=(400, 300),\n            optimized_image_resize_method='cover'  # 'thumbnail', 'cover' or None\n        )\n\n\nand saving images into it, the same way you would to a Django ``ImageField``.\nThe optimized image will be saved into the ``url`` field in place of the\nunoptimized image.\n\n\n5. Or you can directly use the ``image_optimizer`` function from utils.\n\n::\n\n    from image_optimizer.utils import image_optimizer\n\n\n    def post_image(request):\n        image_data = request.FILES.get('image')\n        image_data = image_optimizer(image_data=image_data,\n                                     output_size=(400, 300),\n                                     resize_method='cover')\n        ....\n\n\n**P.S:**\n\n Note about TinyPNG API keys: If you obtain the free TinyPNG API token, you are limited to 500\n image optimizations per month, so this function may fail if you have a\n lot of images. You may either obtain a paid API key, or wait until next month.\n\nThis project forked from: https://github.com/dchukhin/django_optimized_image", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/agusmakmun/django-image-optimizer/tarball/v1.0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agusmakmun/django-image-optimizer", "keywords": "image optimizer,django image optimizer,image optimizer", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-image-optimizer", "package_url": "https://pypi.org/project/django-image-optimizer/", "platform": "", "project_url": "https://pypi.org/project/django-image-optimizer/", "project_urls": {"Download": "https://github.com/agusmakmun/django-image-optimizer/tarball/v1.0.1", "Homepage": "https://github.com/agusmakmun/django-image-optimizer"}, "release_url": "https://pypi.org/project/django-image-optimizer/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Django Image Optimizer (Compressor)", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-image-optimizer-pypi-version\">\n<h2>django-image-optimizer <a href=\"https://pypi.python.org/pypi/django-image-optimizer\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/934f02ce6380f7a37525741b987b00fd06389fd7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d696d6167652d6f7074696d697a65722e737667\"></a></h2>\n<a href=\"https://raw.githubusercontent.com/agusmakmun/django-image-optimizer/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-image-optimizer\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/django-image-optimizer.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99c26fe8e7dfe0bfea47ea6a9463da9a1240a65f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d696d6167652d6f7074696d697a65722e737667\"></a>\n<a href=\"https://www.djangoproject.com\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Django-1.8%20%3E=%203.0-green.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1f133eeb98fb491d3f7e12716ac22764aacafd5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446a616e676f2d312e382532302533453d253230332e302d677265656e2e737667\"></a>\n<p>Django Image Optimizer is a simple Django library that allows optimization\nof images by using <a href=\"https://tinypng.com/\" rel=\"nofollow\">TinyPNG</a> or <a href=\"pillow.readthedocs.io/\" rel=\"nofollow\">Pillow</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Django Image Optimizer is available directly from <a href=\"https://pypi.python.org/pypi/django-image-optimizer\" rel=\"nofollow\">PyPI</a>:</p>\n<ol>\n<li>Installing the package.</li>\n</ol>\n<pre>$ pip install django-image-optimizer\n</pre>\n<ol>\n<li>Don\u2019t forget to add <tt>'image_optimizer'</tt> to your <tt>'INSTALLED_APPS'</tt>.</li>\n</ol>\n<pre># settings.py\nINSTALLED_APPS = [\n    ....\n    'image_optimizer',\n]\n</pre>\n<ol>\n<li>You have the option to use either TinyPNG or Pillow for optimizing images.\nInform <tt>optimized_image</tt> which one you want to use by setting the following</li>\n</ol>\n<pre># To use Pillow\nOPTIMIZED_IMAGE_METHOD = 'pillow'\n# To use TinyPNG\nOPTIMIZED_IMAGE_METHOD = 'tinypng'\n</pre>\n<p>Any other string that is set for this setting will mean that optimization does\nnot occur. If you are unsure of whether you would like to use TinyPNG or Pillow,\nfeel free to consult the documentation of each.</p>\n<p>If you choose to use TinyPNG, you will need to get an API key from\nTinyPNG. Visit <a href=\"https://tinypng.com/developers\" rel=\"nofollow\">https://tinypng.com/developers</a> for more details on getting an\nAPI key. Once you have done so, add the following setting to your settings\nfile. Note: it is a good idea to keep this secret</p>\n<pre>TINYPNG_KEY = 'your-key'\n</pre>\n<ol>\n<li>You may use the <tt>OptimizedImageField</tt> by importing it</li>\n</ol>\n<pre>from django.db import models\n\nfrom image_optimizer.fields import OptimizedImageField\n\n\nclass MyModel(models.Model):\n    ...\n    image = OptimizedImageField()\n\n\nclass MyModel2(models.Model):\n    \"\"\"\n    If you using OPTIMIZED_IMAGE_METHOD = 'pillow'\n    You can use this optional arguments.\n\n    This model represents a MyModel2 with a few\n    fields including a `image` field which is an OptimizedImageField\n    instance with `optimized_image_output_size` and\n    `optimized_image_resize_method` arguments set.\n\n    This means that image would be a resized\n    version of the source image, meant to keep a given screen resolution,\n    in this case (400, 300) pixels.\n    \"\"\"\n    image = OptimizedImageField(\n        upload_to='uploads/collaborators/%Y/%m/%d',\n        optimized_image_output_size=(400, 300),\n        optimized_image_resize_method='cover'  # 'thumbnail', 'cover' or None\n    )\n</pre>\n<p>and saving images into it, the same way you would to a Django <tt>ImageField</tt>.\nThe optimized image will be saved into the <tt>url</tt> field in place of the\nunoptimized image.</p>\n<ol>\n<li>Or you can directly use the <tt>image_optimizer</tt> function from utils.</li>\n</ol>\n<pre>from image_optimizer.utils import image_optimizer\n\n\ndef post_image(request):\n    image_data = request.FILES.get('image')\n    image_data = image_optimizer(image_data=image_data,\n                                 output_size=(400, 300),\n                                 resize_method='cover')\n    ....\n</pre>\n<p><strong>P.S:</strong></p>\n<blockquote>\nNote about TinyPNG API keys: If you obtain the free TinyPNG API token, you are limited to 500\nimage optimizations per month, so this function may fail if you have a\nlot of images. You may either obtain a paid API key, or wait until next month.</blockquote>\n<p>This project forked from: <a href=\"https://github.com/dchukhin/django_optimized_image\" rel=\"nofollow\">https://github.com/dchukhin/django_optimized_image</a></p>\n</div>\n\n          </div>"}, "last_serial": 6846754, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3ffebc42760385cf1737febb57c020b4", "sha256": "3dba06be47f975768352d5b83ac8b86cf40dae25decc6572c7859824a9595fc0"}, "downloads": -1, "filename": "django-image-optimizer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3ffebc42760385cf1737febb57c020b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4355, "upload_time": "2018-07-26T15:40:49", "upload_time_iso_8601": "2018-07-26T15:40:49.246614Z", "url": "https://files.pythonhosted.org/packages/c9/bd/b223ef33771ec06202b9881b118e66f0fc986c03ad1f2cd06b1387665730/django-image-optimizer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "20bc438d4526b0e1fb3ded6bcd107cf2", "sha256": "8b35508bac7194e17d146237282551c0da3df5cf34edfbdd2f63c404cdf299a8"}, "downloads": -1, "filename": "django-image-optimizer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "20bc438d4526b0e1fb3ded6bcd107cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5827, "upload_time": "2020-03-19T23:43:52", "upload_time_iso_8601": "2020-03-19T23:43:52.786957Z", "url": "https://files.pythonhosted.org/packages/a9/c6/6bd1e120fede8221eb6e3f2a5b3a8a5a199de7881be2a16cda00d6dda3a5/django-image-optimizer-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20bc438d4526b0e1fb3ded6bcd107cf2", "sha256": "8b35508bac7194e17d146237282551c0da3df5cf34edfbdd2f63c404cdf299a8"}, "downloads": -1, "filename": "django-image-optimizer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "20bc438d4526b0e1fb3ded6bcd107cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5827, "upload_time": "2020-03-19T23:43:52", "upload_time_iso_8601": "2020-03-19T23:43:52.786957Z", "url": "https://files.pythonhosted.org/packages/a9/c6/6bd1e120fede8221eb6e3f2a5b3a8a5a199de7881be2a16cda00d6dda3a5/django-image-optimizer-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:38 2020"}