{"info": {"author": "Mateusz Bysiek", "author_email": "mateusz.bysiek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": ".. role:: bash(code)\n    :language: bash\n\n.. role:: json(code)\n    :language: json\n\n\n==========\nmaildaemon\n==========\n\nMulti-server mail filtering daemon supporting IMAP, POP and SMTP.\n\n.. image:: https://img.shields.io/pypi/v/maildaemon.svg\n    :target: https://pypi.python.org/pypi/maildaemon\n    :alt: package version from PyPI\n\n.. image:: https://travis-ci.com/mbdevpl/maildaemon.svg?branch=master\n    :target: https://travis-ci.com/mbdevpl/maildaemon\n    :alt: build status from Travis CI\n\n.. image:: https://api.codacy.com/project/badge/Grade/b35bf4a73a724854b0ba1cef4385c6f7\n    :target: https://www.codacy.com/app/mbdevpl/maildaemon\n    :alt: grade from Codacy\n\n.. image:: https://codecov.io/gh/mbdevpl/maildaemon/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/mbdevpl/maildaemon\n    :alt: test coverage from Codecov\n\n.. image:: https://img.shields.io/github/license/mbdevpl/maildaemon.svg\n    :target: https://github.com/mbdevpl/maildaemon/blob/master/NOTICE\n    :alt: license\n\nThe goal of this library is to enable unified filtering for various e-mail servers,\nas well as inter-account filtering. Additional aim of this project is to enable filtering e-mails\nin a centralized way as opposed to some filters being applied by the server,\nand another filters by the client.\n\nEventually, maildaemon should make provider-dependent and client-dependent mail filtering settings obsolete.\nIt is currently in development and doesn't achieve its goals yet.\n\nUsage examples are shown in `examples.ipynb <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples.ipynb>`_\n\n.. contents::\n    :backlinks: none\n\n\nInstallation\n============\n\nFor simplest installation use :bash:`pip`:\n\n.. code:: bash\n\n    pip3 install maildaemon\n\n\nPython 3.6 or later is required, and required dependencies defined in `requirements.txt <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/requirements.txt>`_\nwill be automatically installed too.\n\nMaildaemon works based on a JSON configuration file. If it doesn't exist,\ndefault one will be generated. An example is provided in `test/maildaemon_test_config.json <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/test/maildaemon_test_config.json>`_.\n\n\nSupported protocols\n===================\n\nCurrently, the package has a very limited support for:\n\n*   IMAP4rev1 -- via Python built-in `imaplib <https://docs.python.org/3/library/imaplib.html>`_ module.\n\n    You can see how the module works in `examples/imap_examples.ipynb <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/imap_examples.ipynb>`_.\n\n*   SMTP -- via Python built-in `smtplib <https://docs.python.org/3/library/smtplib.html>`_ module.\n\n    You can see how the module works in `examples/smtp_examples.ipynb <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/smtp_examples.ipynb>`_.\n\n*   POP3 -- via Python built-in `poplib <https://docs.python.org/3/library/poplib.html>`_ module.\n\n    You can see how the module works in `examples/pop_examples.ipynb <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/pop_examples.ipynb>`_.\n\n\nSupported authentication\n========================\n\n*   usual\n*   oauth\n\n\nConfiguration\n=============\n\nThe configuration file has two sections:\n\n.. code:: json\n\n    {\n      \"connections\": { },\n      \"filters\": { }\n    }\n\nA complete example is provided in `test/maildaemon_test_config.json <https://github.com/mbdevpl/maildaemon/blob/v0.1.1/test/maildaemon_test_config.json>`_.\n\n\nConnections\n-----------\n\nThe \"connections\" section is a dictionary where keys are human-readable connection names,\nand values are dictionaries that describe connection parameters.\n\nConnection parameters are:\n\n*   protocol -- IMAP, POP or SMTP\n*   domain -- a string of characters\n*   ssl -- a boolean flag\n*   port -- a number\n*   login -- a string of characters\n*   password -- a string of characters\n\n.. code:: json\n\n    {\n      \"test-imap-ssl\": {\n        \"protocol\": \"IMAP\",\n        \"domain\": \"127.0.0.1\",\n        \"ssl\": true,\n        \"port\": 993,\n        \"login\": \"testuser\",\n        \"password\": \"applesauce\"\n      },\n      \"test-pop-ssl\": {\n        \"protocol\": \"POP\",\n        \"domain\": \"127.0.0.1\",\n        \"ssl\": true,\n        \"port\": 995,\n        \"login\": \"testuser\",\n        \"password\": \"applesauce\"\n      }\n    }\n\n\nFilters\n-------\n\nThe \"filters\" section is a dictionary as well, where keys are human-readable filter names,\nand values are dictionaries that describe filter parameters.\n\nFilter parameters are:\n\n*   connections -- a list of human-readable connection names defined in the \"connections\" section\n*   condition -- a Python expression, described in detail below\n*   actions -- a list (sequence) of commands to perform, described in detail below\n\n\n.. code:: json\n\n    {\n      \"facebook-notification\": {\n        \"connections\": [\n          \"test-imap\"\n        ],\n        \"condition\": \"from_address.endswith('@facebookmail.com') and from_address.startswith('notification')\",\n        \"actions\": [\n          \"mark:read\"\n        ]\n      }\n    }\n\n\nFilter condition\n~~~~~~~~~~~~~~~~\n\nDetails to be decided.\n\n\nFilter actions\n~~~~~~~~~~~~~~\n\n*   move -- Move the message to a specific folder on a specific account.\n\n    \"move:Gmail/INBOX/my mailing list\" will move the message to a folder \"/INBOX/my mailing list\"\n    in account named \"Gmail\".\n\n    \"move:/Archive/2018\" will move the message to the \"/Archive/2018\" folder within the same account.\n\n*   mark -- Used to mark messages as read, unread etc.\n\n    \"mark:read\" will mark message as read.\n\n    \"mark:unread\" will mark message as unread.\n\n    \"mark:important\" will mark a message as important. Effect may vary between clients.\n    In Gmail web mail client this is visible as star, in Mac mail client as a red flag,\n    in Evolution as \"Important message\".\n\n*   More actions to be implemented.\n\n\nTesting locally\n===============\n\nStart Greenmail server in docker:\n\n.. code:: bash\n\n    docker run -d --name greenmail -p 3143:3143 -p 3993:3993 -p 3110:3110 -p 3995:3995 -p 3025:3025 -p 3465:3465 -e GREENMAIL_OPTS='-Dgreenmail.setup.test.all -Dgreenmail.hostname=0.0.0.0 -Dgreenmail.auth.disabled -Dgreenmail.verbose -Dgreenmail.users=login:password@domain.com' -t greenmail/standalone:latest\n\nMake sure that services are running:\n\n.. code:: bash\n\n    .build/check_ports.sh\n\nRun tests:\n\n.. code:: bash\n\n    TEST_COMM=1 python3 -m coverage run --branch --source . -m unittest -v test.test_smtp_connection\n    TEST_COMM=1 python3 -m coverage run --branch --source . -m unittest -v\n\nStop the Greenmail server:\n\n.. code:: bash\n\n    docker container kill greenmail\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mbdevpl/maildaemon", "keywords": "e-mail,filter,daemon,imap,pop,smtp", "license": "Apache License 2.0", "maintainer": "Mateusz Bysiek", "maintainer_email": "mateusz.bysiek@gmail.com", "name": "maildaemon", "package_url": "https://pypi.org/project/maildaemon/", "platform": "", "project_url": "https://pypi.org/project/maildaemon/", "project_urls": {"Homepage": "https://github.com/mbdevpl/maildaemon"}, "release_url": "https://pypi.org/project/maildaemon/0.1.1/", "requires_dist": ["colorama", "colorlog", "daemon", "encrypted-config", "oauthlib[rsa]", "ordered-set", "python-dateutil", "requests-oauthlib", "timing (~=0.4)", "version-query (==1.*,>=1.0.5)"], "requires_python": ">=3.6", "summary": "multi-server mail filtering daemon supporting IMAP, POP and SMTP", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Multi-server mail filtering daemon supporting IMAP, POP and SMTP.</p>\n<a href=\"https://pypi.python.org/pypi/maildaemon\" rel=\"nofollow\"><img alt=\"package version from PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8309a1e70ae1869371be12b7a8c94ae0689202e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d61696c6461656d6f6e2e737667\"></a>\n<a href=\"https://travis-ci.com/mbdevpl/maildaemon\" rel=\"nofollow\"><img alt=\"build status from Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd5753ce0632e56e4aa25f0c25631df00ba0dd1e/68747470733a2f2f7472617669732d63692e636f6d2f6d62646576706c2f6d61696c6461656d6f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/app/mbdevpl/maildaemon\" rel=\"nofollow\"><img alt=\"grade from Codacy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/002a4d92026daaa68103bb5a1322bea5e04263fe/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6233356266346137336137323438353462306261316365663433383563366637\"></a>\n<a href=\"https://codecov.io/gh/mbdevpl/maildaemon\" rel=\"nofollow\"><img alt=\"test coverage from Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bed50cfe56dd95afac19c6d7fffe194e95760a3/68747470733a2f2f636f6465636f762e696f2f67682f6d62646576706c2f6d61696c6461656d6f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/mbdevpl/maildaemon/blob/master/NOTICE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3036295e3bb26b8ea2848282497699e2170ac832/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d62646576706c2f6d61696c6461656d6f6e2e737667\"></a>\n<p>The goal of this library is to enable unified filtering for various e-mail servers,\nas well as inter-account filtering. Additional aim of this project is to enable filtering e-mails\nin a centralized way as opposed to some filters being applied by the server,\nand another filters by the client.</p>\n<p>Eventually, maildaemon should make provider-dependent and client-dependent mail filtering settings obsolete.\nIt is currently in development and doesn\u2019t achieve its goals yet.</p>\n<p>Usage examples are shown in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples.ipynb\" rel=\"nofollow\">examples.ipynb</a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#supported-protocols\" id=\"id3\" rel=\"nofollow\">Supported protocols</a></li>\n<li><a href=\"#supported-authentication\" id=\"id4\" rel=\"nofollow\">Supported authentication</a></li>\n<li><a href=\"#configuration\" id=\"id5\" rel=\"nofollow\">Configuration</a><ul>\n<li><a href=\"#connections\" id=\"id6\" rel=\"nofollow\">Connections</a></li>\n<li><a href=\"#filters\" id=\"id7\" rel=\"nofollow\">Filters</a><ul>\n<li><a href=\"#filter-condition\" id=\"id8\" rel=\"nofollow\">Filter condition</a></li>\n<li><a href=\"#filter-actions\" id=\"id9\" rel=\"nofollow\">Filter actions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#testing-locally\" id=\"id10\" rel=\"nofollow\">Testing locally</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For simplest installation use <code class=\"bash\">pip</code>:</p>\n<pre>pip3 install maildaemon\n</pre>\n<p>Python 3.6 or later is required, and required dependencies defined in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/requirements.txt\" rel=\"nofollow\">requirements.txt</a>\nwill be automatically installed too.</p>\n<p>Maildaemon works based on a JSON configuration file. If it doesn\u2019t exist,\ndefault one will be generated. An example is provided in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/test/maildaemon_test_config.json\" rel=\"nofollow\">test/maildaemon_test_config.json</a>.</p>\n</div>\n<div id=\"supported-protocols\">\n<h2>Supported protocols</h2>\n<p>Currently, the package has a very limited support for:</p>\n<ul>\n<li><p>IMAP4rev1 \u2013 via Python built-in <a href=\"https://docs.python.org/3/library/imaplib.html\" rel=\"nofollow\">imaplib</a> module.</p>\n<p>You can see how the module works in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/imap_examples.ipynb\" rel=\"nofollow\">examples/imap_examples.ipynb</a>.</p>\n</li>\n<li><p>SMTP \u2013 via Python built-in <a href=\"https://docs.python.org/3/library/smtplib.html\" rel=\"nofollow\">smtplib</a> module.</p>\n<p>You can see how the module works in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/smtp_examples.ipynb\" rel=\"nofollow\">examples/smtp_examples.ipynb</a>.</p>\n</li>\n<li><p>POP3 \u2013 via Python built-in <a href=\"https://docs.python.org/3/library/poplib.html\" rel=\"nofollow\">poplib</a> module.</p>\n<p>You can see how the module works in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/examples/pop_examples.ipynb\" rel=\"nofollow\">examples/pop_examples.ipynb</a>.</p>\n</li>\n</ul>\n</div>\n<div id=\"supported-authentication\">\n<h2>Supported authentication</h2>\n<ul>\n<li>usual</li>\n<li>oauth</li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The configuration file has two sections:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"connections\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"p\">},</span>\n  <span class=\"nt\">\"filters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>A complete example is provided in <a href=\"https://github.com/mbdevpl/maildaemon/blob/v0.1.1/test/maildaemon_test_config.json\" rel=\"nofollow\">test/maildaemon_test_config.json</a>.</p>\n<div id=\"connections\">\n<h3>Connections</h3>\n<p>The \u201cconnections\u201d section is a dictionary where keys are human-readable connection names,\nand values are dictionaries that describe connection parameters.</p>\n<p>Connection parameters are:</p>\n<ul>\n<li>protocol \u2013 IMAP, POP or SMTP</li>\n<li>domain \u2013 a string of characters</li>\n<li>ssl \u2013 a boolean flag</li>\n<li>port \u2013 a number</li>\n<li>login \u2013 a string of characters</li>\n<li>password \u2013 a string of characters</li>\n</ul>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"test-imap-ssl\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"protocol\"</span><span class=\"p\">:</span> <span class=\"s2\">\"IMAP\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"domain\"</span><span class=\"p\">:</span> <span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"port\"</span><span class=\"p\">:</span> <span class=\"mi\">993</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"login\"</span><span class=\"p\">:</span> <span class=\"s2\">\"testuser\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"applesauce\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"test-pop-ssl\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"protocol\"</span><span class=\"p\">:</span> <span class=\"s2\">\"POP\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"domain\"</span><span class=\"p\">:</span> <span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"port\"</span><span class=\"p\">:</span> <span class=\"mi\">995</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"login\"</span><span class=\"p\">:</span> <span class=\"s2\">\"testuser\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"applesauce\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"filters\">\n<h3>Filters</h3>\n<p>The \u201cfilters\u201d section is a dictionary as well, where keys are human-readable filter names,\nand values are dictionaries that describe filter parameters.</p>\n<p>Filter parameters are:</p>\n<ul>\n<li>connections \u2013 a list of human-readable connection names defined in the \u201cconnections\u201d section</li>\n<li>condition \u2013 a Python expression, described in detail below</li>\n<li>actions \u2013 a list (sequence) of commands to perform, described in detail below</li>\n</ul>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"facebook-notification\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"connections\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"test-imap\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"condition\"</span><span class=\"p\">:</span> <span class=\"s2\">\"from_address.endswith('@facebookmail.com') and from_address.startswith('notification')\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"actions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"mark:read\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<div id=\"filter-condition\">\n<h4>Filter condition</h4>\n<p>Details to be decided.</p>\n</div>\n<div id=\"filter-actions\">\n<h4>Filter actions</h4>\n<ul>\n<li><p>move \u2013 Move the message to a specific folder on a specific account.</p>\n<p>\u201cmove:Gmail/INBOX/my mailing list\u201d will move the message to a folder \u201c/INBOX/my mailing list\u201d\nin account named \u201cGmail\u201d.</p>\n<p>\u201cmove:/Archive/2018\u201d will move the message to the \u201c/Archive/2018\u201d folder within the same account.</p>\n</li>\n<li><p>mark \u2013 Used to mark messages as read, unread etc.</p>\n<p>\u201cmark:read\u201d will mark message as read.</p>\n<p>\u201cmark:unread\u201d will mark message as unread.</p>\n<p>\u201cmark:important\u201d will mark a message as important. Effect may vary between clients.\nIn Gmail web mail client this is visible as star, in Mac mail client as a red flag,\nin Evolution as \u201cImportant message\u201d.</p>\n</li>\n<li><p>More actions to be implemented.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"testing-locally\">\n<h2>Testing locally</h2>\n<p>Start Greenmail server in docker:</p>\n<pre>docker run -d --name greenmail -p <span class=\"m\">3143</span>:3143 -p <span class=\"m\">3993</span>:3993 -p <span class=\"m\">3110</span>:3110 -p <span class=\"m\">3995</span>:3995 -p <span class=\"m\">3025</span>:3025 -p <span class=\"m\">3465</span>:3465 -e <span class=\"nv\">GREENMAIL_OPTS</span><span class=\"o\">=</span><span class=\"s1\">'-Dgreenmail.setup.test.all -Dgreenmail.hostname=0.0.0.0 -Dgreenmail.auth.disabled -Dgreenmail.verbose -Dgreenmail.users=login:password@domain.com'</span> -t greenmail/standalone:latest\n</pre>\n<p>Make sure that services are running:</p>\n<pre>.build/check_ports.sh\n</pre>\n<p>Run tests:</p>\n<pre><span class=\"nv\">TEST_COMM</span><span class=\"o\">=</span><span class=\"m\">1</span> python3 -m coverage run --branch --source . -m unittest -v test.test_smtp_connection\n<span class=\"nv\">TEST_COMM</span><span class=\"o\">=</span><span class=\"m\">1</span> python3 -m coverage run --branch --source . -m unittest -v\n</pre>\n<p>Stop the Greenmail server:</p>\n<pre>docker container <span class=\"nb\">kill</span> greenmail\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6533624, "releases": {"0.1.0.dev0": [], "0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "2582b7e3e84f6727d0fb0b2d1ab32011", "sha256": "944e8a35be9ff2c318b3360b6890cb78815659de53c37faa2212b5ef06453523"}, "downloads": -1, "filename": "maildaemon-0.1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "2582b7e3e84f6727d0fb0b2d1ab32011", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24131, "upload_time": "2017-09-26T02:52:54", "upload_time_iso_8601": "2017-09-26T02:52:54.791484Z", "url": "https://files.pythonhosted.org/packages/2a/3d/d0c99ae2d90fb79ed6d3bff592dcb7aec4466ae2a49fab3f095bc08a9411/maildaemon-0.1.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98acfb4e5748f16987f6b6afe60a783b", "sha256": "e1265529faaa9754dee84fcfb8a061e1f84dd3fa6493ca57896730ca079ffa13"}, "downloads": -1, "filename": "maildaemon-0.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "98acfb4e5748f16987f6b6afe60a783b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 27001, "upload_time": "2017-09-26T02:52:56", "upload_time_iso_8601": "2017-09-26T02:52:56.734322Z", "url": "https://files.pythonhosted.org/packages/c1/1e/9880dbb36d4fc5f27b9a843e089e27c768febf88d2966928d52e7bf1487a/maildaemon-0.1.0.dev1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e1af561a3f63fb49167577c65af9c930", "sha256": "bbcf4cb01bb326badf9451ac049cd9e80cba1c488befe82b44ba80d2f702b185"}, "downloads": -1, "filename": "maildaemon-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e1af561a3f63fb49167577c65af9c930", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34919, "upload_time": "2020-01-28T17:32:09", "upload_time_iso_8601": "2020-01-28T17:32:09.558540Z", "url": "https://files.pythonhosted.org/packages/f2/7d/2f62bf7f58170cb020fd9c3833f59e821d1965ddf00c2536b7a1eb5f7ea8/maildaemon-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4129e89b4497ef159c23e4dc2024b55", "sha256": "fcfc6612fd818d19819d7ecc06e6ad716c0fb68530dca041ff8870b8f05f7397"}, "downloads": -1, "filename": "maildaemon-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f4129e89b4497ef159c23e4dc2024b55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40463, "upload_time": "2020-01-28T17:32:11", "upload_time_iso_8601": "2020-01-28T17:32:11.766012Z", "url": "https://files.pythonhosted.org/packages/67/78/922490f597d3af1319e8cdb50b0ef023993c1450817910d3f94a974b22a6/maildaemon-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1af561a3f63fb49167577c65af9c930", "sha256": "bbcf4cb01bb326badf9451ac049cd9e80cba1c488befe82b44ba80d2f702b185"}, "downloads": -1, "filename": "maildaemon-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e1af561a3f63fb49167577c65af9c930", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34919, "upload_time": "2020-01-28T17:32:09", "upload_time_iso_8601": "2020-01-28T17:32:09.558540Z", "url": "https://files.pythonhosted.org/packages/f2/7d/2f62bf7f58170cb020fd9c3833f59e821d1965ddf00c2536b7a1eb5f7ea8/maildaemon-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4129e89b4497ef159c23e4dc2024b55", "sha256": "fcfc6612fd818d19819d7ecc06e6ad716c0fb68530dca041ff8870b8f05f7397"}, "downloads": -1, "filename": "maildaemon-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f4129e89b4497ef159c23e4dc2024b55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40463, "upload_time": "2020-01-28T17:32:11", "upload_time_iso_8601": "2020-01-28T17:32:11.766012Z", "url": "https://files.pythonhosted.org/packages/67/78/922490f597d3af1319e8cdb50b0ef023993c1450817910d3f94a974b22a6/maildaemon-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:57 2020"}