{"info": {"author": "dcronkite", "author_email": "dcronkite+pypi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Text Processing :: Linguistic"], "description": "[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]\n[![LinkedIn][linkedin-shield]][linkedin-url]\n\n\n\n<!-- PROJECT LOGO -->\n<br />\n<div>\n  <p>\n    <a href=\"https://github.com/kpwhri/runrex\">\n      <img src=\"images/logo.png\" alt=\"Logo\">\n    </a>\n  </p>\n\n  <h3 align=\"center\">Runrex</h3>\n\n  <p>\n    Library to aid in organizing, running, and debugging regular expressions against large bodies of text.\n  </p>\n</div>\n\n\n<!-- TABLE OF CONTENTS -->\n## Table of Contents\n\n* [About the Project](#about-the-project)\n* [Getting Started](#getting-started)\n  * [Prerequisites](#prerequisites)\n  * [Installation](#installation)\n* [Usage](#usage)\n* [Roadmap](#roadmap)\n* [Contributing](#contributing)\n* [License](#license)\n* [Contact](#contact)\n* [Acknowledgements](#acknowledgements)\n\n\n\n## About the Project \nThe goal of this library is to simplify the deployment of regular expression on large bodies of text, in a variety of input formats.\n\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nTo get a local copy up and running follow these simple steps.\n\n### Prerequisites\n\n* Python 3.8+\n* runrex package: https://github.com/kpwhri/runrex\n\n### Installation\n \n1. Clone the repo\n    ```sh\n    git clone https://github.com/kpwhri/runrex.git\n    ```\n2. Install requirements (`requirements-dev` is for test packages)\n    ```sh\n    pip install -r requirements.txt -r requirements-dev.txt\n    ```\n3. If you wish to read text from SAS or SQL, you will need to install additional requirements. These additional requirements files may be of use:\n    - ODBC-connection: `requirements-db.txt`\n    - Postgres: `requirements-psql.txt`\n    - SAS: `requirements-sas.txt`\n4. Run tests.\n    ```sh\n    set/export PYTHONPATH=src\n    pytest tests\n    ```\n\n## Usage\n\n### Example Implementations\n* [Anaphylaxis](https://github.com/kpwhri/anaphylaxis-runrex)\n* [PCOS](https://github.com/kpwhri/pcos-runrex)\n\n### Build Customized Algorithm\n\n* Create 4 files:\n    * `patterns.py`: defines regular expressions of interest\n        * See `examples/example_patterns.py` for some examples\n    * `test_patterns.py`: tests for those regular expressions\n        * Why? Make sure the patterns do what you think they do\n    * `algorithm.py`: defines algorithm (how to use regular expressions); returns a Result\n        * See `examples/example_algorithm.py` for guidance\n    * `config.(py|json|yaml)`: various configurations defined in `schema.py`\n        * See example in `examples/example_config.py` for basic config  \n\n## Input Data\n\nAccepts a variety of input formats, but will need to at least specify a `document_id` and `document_text`. The names are configurable.\n\n### Sentence Splitting\n\nBy default, the input document text is expected to have each sentence on a separate line. If a sentence splitting scheme is desired, it will need to be supplied to the application. \n\n### Schema/Examples\nFor more details, see the [example config](https://github.com/kpwhri/runrex/blob/master/examples/example_config.py) \nor consult the [schema](https://github.com/kpwhri/runrex/blob/master/src/runrex/schema.py)\n\n## Output Format\n\n* Recommended output format is `jsonl`\n    - The data can be extracted using python:\n```python\nimport json\nwith open('output.jsonl') as fh:\n    for line in fh:\n         data = json.loads(line)  # data is dict\n```\n\n* Output variables are configurable and can include:\n    - **id**: unique id for line\n    - **name**: document name\n    - **algorithm**: name of algorithm with finding\n    - **value**\n    - **category**: name of category (usually the pattern; multiple categories contribute to an algorithm)\n    - **date**\n    - **extras**\n    - **matches**: pattern matches\n    - **text**: captured text\n    - **start**: start index/offset of match\n    - **end**: end index/offset of match\n\n* Scripts to accomplish useful tasks with the output are included in the `scripts` directory.\n\n## Versions\n\nUses [SEMVER](https://semver.org/).\n\nSee https://github.com/kpwhri/runrex/releases.\n\n<!-- ROADMAP -->\n## Roadmap\n\nSee the [open issues](https://github.com/kpwhri/runrex/issues) for a list of proposed features (and known issues).\n\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nAny contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. \n\nSee `LICENSE` or https://kpwhri.mit-license.org for more information.\n\n\n\n<!-- CONTACT -->\n## Contact\n\nPlease use the [issue tracker](https://github.com/kpwhri/runrex/issues). \n\n\n<!-- ACKNOWLEDGEMENTS -->\n## Acknowledgements\n\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/kpwhri/runrex.svg?style=flat-square\n[contributors-url]: https://github.com/kpwhri/runrex/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/kpwhri/runrex.svg?style=flat-square\n[forks-url]: https://github.com/kpwhri/runrex/network/members\n[stars-shield]: https://img.shields.io/github/stars/kpwhri/runrex.svg?style=flat-square\n[stars-url]: https://github.com/kpwhri/runrex/stargazers\n[issues-shield]: https://img.shields.io/github/issues/kpwhri/runrex.svg?style=flat-square\n[issues-url]: https://github.com/kpwhri/runrex/issues\n[license-shield]: https://img.shields.io/github/license/kpwhri/runrex.svg?style=flat-square\n[license-url]: https://kpwhri.mit-license.org/\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=flat-square&logo=linkedin&colorB=555\n[linkedin-url]: https://www.linkedin.com/company/kaiser-permanente-washington\n<!-- [product-screenshot]: images/screenshot.png -->\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dcronkite/runrex", "keywords": "nlp information extraction", "license": "", "maintainer": "", "maintainer_email": "", "name": "runrex", "package_url": "https://pypi.org/project/runrex/", "platform": "", "project_url": "https://pypi.org/project/runrex/", "project_urls": {"Homepage": "https://github.com/dcronkite/runrex"}, "release_url": "https://pypi.org/project/runrex/0.1.2/", "requires_dist": ["jsonschema", "sqlalchemy", "pyodbc ; extra == \"db\"", "pytest ; extra == \"dev\"", "psycopg2 ; extra == \"psql\"", "sas7bdat ; extra == \"sas\""], "requires_python": ">=3.8", "summary": "Library to aid in organizing, running, and debugging regular expressions against large bodies of text.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/kpwhri/runrex/graphs/contributors\" rel=\"nofollow\"><img alt=\"Contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8bb815135c2677adf67dabe5a64ddccb6a7d5cd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6b70776872692f72756e7265782e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/kpwhri/runrex/network/members\" rel=\"nofollow\"><img alt=\"Forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a74c3fdc425c663b26cc1ebbe956cca653499ea6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6b70776872692f72756e7265782e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/kpwhri/runrex/stargazers\" rel=\"nofollow\"><img alt=\"Stargazers\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4912395d26265c3582244b313042ed135d57130/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6b70776872692f72756e7265782e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/kpwhri/runrex/issues\" rel=\"nofollow\"><img alt=\"Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ef83a2126de2bc1c754a303a84eecc09f6e4558/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6b70776872692f72756e7265782e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://kpwhri.mit-license.org/\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e3f7f94f7e4852e2dfd1b713aa7577d5952e2fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b70776872692f72756e7265782e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://www.linkedin.com/company/kaiser-permanente-washington\" rel=\"nofollow\"><img alt=\"LinkedIn\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdd3cdd597beb1dcfc098fc6fe5a21236d0f8d4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666c61742d737175617265266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535\"></a></p>\n\n<br>\n<div>\n  <p>\n    <a href=\"https://github.com/kpwhri/runrex\" rel=\"nofollow\">\n      <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08396b80bc7d8ede344e3dc16fcd5891658fa9b3/696d616765732f6c6f676f2e706e67\">\n    </a>\n  </p>\n  <h3>Runrex</h3>\n  <p>\n    Library to aid in organizing, running, and debugging regular expressions against large bodies of text.\n  </p>\n</div>\n\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#about-the-project\" rel=\"nofollow\">About the Project</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a>\n<ul>\n<li><a href=\"#prerequisites\" rel=\"nofollow\">Prerequisites</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#roadmap\" rel=\"nofollow\">Roadmap</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#contact\" rel=\"nofollow\">Contact</a></li>\n<li><a href=\"#acknowledgements\" rel=\"nofollow\">Acknowledgements</a></li>\n</ul>\n<h2>About the Project</h2>\n<p>The goal of this library is to simplify the deployment of regular expression on large bodies of text, in a variety of input formats.</p>\n\n<h2>Getting Started</h2>\n<p>To get a local copy up and running follow these simple steps.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li>Python 3.8+</li>\n<li>runrex package: <a href=\"https://github.com/kpwhri/runrex\" rel=\"nofollow\">https://github.com/kpwhri/runrex</a></li>\n</ul>\n<h3>Installation</h3>\n<ol>\n<li>Clone the repo\n<pre>git clone https://github.com/kpwhri/runrex.git\n</pre>\n</li>\n<li>Install requirements (<code>requirements-dev</code> is for test packages)\n<pre>pip install -r requirements.txt -r requirements-dev.txt\n</pre>\n</li>\n<li>If you wish to read text from SAS or SQL, you will need to install additional requirements. These additional requirements files may be of use:\n<ul>\n<li>ODBC-connection: <code>requirements-db.txt</code></li>\n<li>Postgres: <code>requirements-psql.txt</code></li>\n<li>SAS: <code>requirements-sas.txt</code></li>\n</ul>\n</li>\n<li>Run tests.\n<pre>set/export <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span>src\npytest tests\n</pre>\n</li>\n</ol>\n<h2>Usage</h2>\n<h3>Example Implementations</h3>\n<ul>\n<li><a href=\"https://github.com/kpwhri/anaphylaxis-runrex\" rel=\"nofollow\">Anaphylaxis</a></li>\n<li><a href=\"https://github.com/kpwhri/pcos-runrex\" rel=\"nofollow\">PCOS</a></li>\n</ul>\n<h3>Build Customized Algorithm</h3>\n<ul>\n<li>Create 4 files:\n<ul>\n<li><code>patterns.py</code>: defines regular expressions of interest\n<ul>\n<li>See <code>examples/example_patterns.py</code> for some examples</li>\n</ul>\n</li>\n<li><code>test_patterns.py</code>: tests for those regular expressions\n<ul>\n<li>Why? Make sure the patterns do what you think they do</li>\n</ul>\n</li>\n<li><code>algorithm.py</code>: defines algorithm (how to use regular expressions); returns a Result\n<ul>\n<li>See <code>examples/example_algorithm.py</code> for guidance</li>\n</ul>\n</li>\n<li><code>config.(py|json|yaml)</code>: various configurations defined in <code>schema.py</code>\n<ul>\n<li>See example in <code>examples/example_config.py</code> for basic config</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Input Data</h2>\n<p>Accepts a variety of input formats, but will need to at least specify a <code>document_id</code> and <code>document_text</code>. The names are configurable.</p>\n<h3>Sentence Splitting</h3>\n<p>By default, the input document text is expected to have each sentence on a separate line. If a sentence splitting scheme is desired, it will need to be supplied to the application.</p>\n<h3>Schema/Examples</h3>\n<p>For more details, see the <a href=\"https://github.com/kpwhri/runrex/blob/master/examples/example_config.py\" rel=\"nofollow\">example config</a>\nor consult the <a href=\"https://github.com/kpwhri/runrex/blob/master/src/runrex/schema.py\" rel=\"nofollow\">schema</a></p>\n<h2>Output Format</h2>\n<ul>\n<li>Recommended output format is <code>jsonl</code>\n<ul>\n<li>The data can be extracted using python:</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'output.jsonl'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n         <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>  <span class=\"c1\"># data is dict</span>\n</pre>\n<ul>\n<li>\n<p>Output variables are configurable and can include:</p>\n<ul>\n<li><strong>id</strong>: unique id for line</li>\n<li><strong>name</strong>: document name</li>\n<li><strong>algorithm</strong>: name of algorithm with finding</li>\n<li><strong>value</strong></li>\n<li><strong>category</strong>: name of category (usually the pattern; multiple categories contribute to an algorithm)</li>\n<li><strong>date</strong></li>\n<li><strong>extras</strong></li>\n<li><strong>matches</strong>: pattern matches</li>\n<li><strong>text</strong>: captured text</li>\n<li><strong>start</strong>: start index/offset of match</li>\n<li><strong>end</strong>: end index/offset of match</li>\n</ul>\n</li>\n<li>\n<p>Scripts to accomplish useful tasks with the output are included in the <code>scripts</code> directory.</p>\n</li>\n</ul>\n<h2>Versions</h2>\n<p>Uses <a href=\"https://semver.org/\" rel=\"nofollow\">SEMVER</a>.</p>\n<p>See <a href=\"https://github.com/kpwhri/runrex/releases\" rel=\"nofollow\">https://github.com/kpwhri/runrex/releases</a>.</p>\n\n<h2>Roadmap</h2>\n<p>See the <a href=\"https://github.com/kpwhri/runrex/issues\" rel=\"nofollow\">open issues</a> for a list of proposed features (and known issues).</p>\n\n<h2>Contributing</h2>\n<p>Any contributions you make are <strong>greatly appreciated</strong>.</p>\n<ol>\n<li>Fork the Project</li>\n<li>Create your Feature Branch (<code>git checkout -b feature/AmazingFeature</code>)</li>\n<li>Commit your Changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>\n<li>Push to the Branch (<code>git push origin feature/AmazingFeature</code>)</li>\n<li>Open a Pull Request</li>\n</ol>\n\n<h2>License</h2>\n<p>Distributed under the MIT License.</p>\n<p>See <code>LICENSE</code> or <a href=\"https://kpwhri.mit-license.org\" rel=\"nofollow\">https://kpwhri.mit-license.org</a> for more information.</p>\n\n<h2>Contact</h2>\n<p>Please use the <a href=\"https://github.com/kpwhri/runrex/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n\n<h2>Acknowledgements</h2>\n\n\n\n\n          </div>"}, "last_serial": 7108836, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "991ee31bda66e1d055f05a6f201d8495", "sha256": "2f470d0b69c46bc7dda8c1160c2183aa389a724422a1270fac3a548126735a80"}, "downloads": -1, "filename": "runrex-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "991ee31bda66e1d055f05a6f201d8495", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 23802, "upload_time": "2020-04-27T05:40:40", "upload_time_iso_8601": "2020-04-27T05:40:40.361282Z", "url": "https://files.pythonhosted.org/packages/ef/f0/89788249bb4d08d4e4eba5f82ae23af07179d779f87e034338018286de25/runrex-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be6efcb996d6084829789bce7195e8be", "sha256": "bea1a4d95260a505682e2dafc37a8c4bf99cfd2cfb2376af3cc481c98cf4b7ea"}, "downloads": -1, "filename": "runrex-0.1.1.tar.gz", "has_sig": false, "md5_digest": "be6efcb996d6084829789bce7195e8be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 40656, "upload_time": "2020-04-27T05:40:42", "upload_time_iso_8601": "2020-04-27T05:40:42.770907Z", "url": "https://files.pythonhosted.org/packages/bb/97/2b018216063afe1e9863bf590895aa2139ad6c19ec0cc178279663165137/runrex-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "330752bbb92bac7c4d8fdf9782268284", "sha256": "c4283407827cf915a539885c0424ceecf77d24dbd2f2787f8c79d9805d003060"}, "downloads": -1, "filename": "runrex-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "330752bbb92bac7c4d8fdf9782268284", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 23618, "upload_time": "2020-04-27T05:58:25", "upload_time_iso_8601": "2020-04-27T05:58:25.623379Z", "url": "https://files.pythonhosted.org/packages/a3/6f/57e90951ea3c55b09c8857e1689bba85eb47332a3670bb3c6f034cd2e975/runrex-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bfa6ed9e7e4a85e9d3b1d3b119fa7d5", "sha256": "63d37664ae8dfc175fed4bbccbe53edbc1728b1f3ec71284107679fabb9d60fa"}, "downloads": -1, "filename": "runrex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7bfa6ed9e7e4a85e9d3b1d3b119fa7d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 40205, "upload_time": "2020-04-27T05:58:26", "upload_time_iso_8601": "2020-04-27T05:58:26.756788Z", "url": "https://files.pythonhosted.org/packages/06/8a/a2c52ae3cd9f383e14b3333ec749ecb36c947367ff731b690270ceb946f0/runrex-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "330752bbb92bac7c4d8fdf9782268284", "sha256": "c4283407827cf915a539885c0424ceecf77d24dbd2f2787f8c79d9805d003060"}, "downloads": -1, "filename": "runrex-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "330752bbb92bac7c4d8fdf9782268284", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 23618, "upload_time": "2020-04-27T05:58:25", "upload_time_iso_8601": "2020-04-27T05:58:25.623379Z", "url": "https://files.pythonhosted.org/packages/a3/6f/57e90951ea3c55b09c8857e1689bba85eb47332a3670bb3c6f034cd2e975/runrex-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bfa6ed9e7e4a85e9d3b1d3b119fa7d5", "sha256": "63d37664ae8dfc175fed4bbccbe53edbc1728b1f3ec71284107679fabb9d60fa"}, "downloads": -1, "filename": "runrex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7bfa6ed9e7e4a85e9d3b1d3b119fa7d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 40205, "upload_time": "2020-04-27T05:58:26", "upload_time_iso_8601": "2020-04-27T05:58:26.756788Z", "url": "https://files.pythonhosted.org/packages/06/8a/a2c52ae3cd9f383e14b3333ec749ecb36c947367ff731b690270ceb946f0/runrex-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:57 2020"}