{"info": {"author": "Evyatar Meged", "author_email": "evyatarmeged@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "#  Raccoon\n![Racoon](https://image.ibb.co/dkAq4J/raccoon.png)\n\n#### Offensive Security Tool for Reconnaissance and Information Gathering\n![Build Status](https://travis-ci.org/evyatarmeged/Raccoon.svg?branch=master)\n![license](https://img.shields.io/github/license/mashape/apistatus.svg)\n![os](https://img.shields.io/badge/OS-Linux,%20macOS-yellow.svg)\n![pythonver](https://img.shields.io/badge/python-3.5%2B-blue.svg)\n![raccoonver](https://img.shields.io/badge/version-0.8.5-lightgrey.svg)\n\n##### Features\n- [x] DNS details\n- [x] DNS visual mapping using DNS dumpster\n- [x] WHOIS information\n- [x] TLS Data - supported ciphers, TLS versions,\ncertificate details and SANs\n- [x] Port Scan\n- [x] Services and scripts scan\n- [x] URL fuzzing and dir/file detection\n- [x] Subdomain enumeration - uses Google dorking, DNS dumpster queries,\n SAN discovery and bruteforce\n- [x] Web application data retrieval:<br>\n  - CMS detection\n  - Web server info and X-Powered-By\n  - robots.txt and sitemap extraction\n  - Cookie inspection\n  - Extracts all fuzzable URLs\n  - Discovers HTML forms\n  - Retrieves all Email addresses\n  - Scans target for vulnerable S3 buckets and enumerates them\n  for sensitive files\n- [x] Detects known WAFs\n- [x] Supports anonymous routing through Tor/Proxies\n- [x] Uses asyncio for improved performance\n- [x] Saves output to files - separates targets by folders\nand modules by files\n\n\n##### Roadmap and TODOs\n- [ ] Add more WAFs, better detection\n- [ ] OWASP vulnerabilities scan (RFI, RCE, XSS, SQLi etc.)\n- [ ] Support multiple hosts (read from file)\n- [ ] Rate limit evasion\n- [ ] IP ranges support\n- [ ] CIDR notation support\n- [ ] More output formats (JSON at the very least)\n\n\n### About\nRaccoon is a tool made for reconnaissance and information gathering with an emphasis on simplicity.<br> It will do everything from\nfetching DNS records, retrieving WHOIS information, obtaining TLS data, detecting WAF presence and up to threaded dir busting and\nsubdomain enumeration. Every scan outputs to a corresponding file.<br>\n\nAs most of Raccoon's scans are independent and do not rely on each other's results,\nit utilizes Python's asyncio to run most scans asynchronously.<br>\n\nRaccoon supports Tor/proxy for anonymous routing. It uses default wordlists (for URL fuzzing and subdomain discovery)\nfrom the amazing [SecLists](https://github.com/danielmiessler/SecLists) repository but different lists can be passed as arguments.<br>\n\nFor more options - see \"Usage\".\n\n### Installation\nFor the latest stable version:<br>\n```\npip install raccoon-scanner\n# To run:\nraccoon [OPTIONS]\n```\nPlease note Raccoon requires Python3.5+ so may need to use `pip3 install raccoon-scanner`.<br>\nYou can also clone the GitHub repository for the latest features and changes:<br>\n```\ngit clone https://github.com/evyatarmeged/Raccoon.git\ncd Raccoon\npython setup.py install # Subsequent changes to the source code will not be reflected in calls to raccoon when this is used\n# Or\npython setup.py develop # Changes to code will be reflected in calls to raccoon. This can be undone by using python setup.py develop --uninstall\n# Finally\nraccoon [OPTIONS] [TARGET]\n```\nFor docker installation:<br>\n```\n# Build the docker image\ndocker build -t evyatarmeged/raccoon .\n# Run a scan, As this a non-root container we need to save the output under the user's home which is /home/raccoon\ndocker run --name raccoon evyatarmeged/raccoon:latest  example.com -o /home/raccoon\n```\n\n##### Prerequisites\nRaccoon uses [Nmap](https://github.com/nmap/nmap) to scan ports as well as utilizes some other Nmap scripts\nand features. It is mandatory that you have it installed before running Raccoon.<br>\n[OpenSSL](https://github.com/openssl/openssl) is also used for TLS/SSL scans and should be installed as well.\n\n### Usage\n```\n\nUsage: raccoon [OPTIONS] TARGET\n\nOptions:\n  --version                      Show the version and exit.\n  -d, --dns-records TEXT         Comma separated DNS records to query.\n                                 Defaults to: A,MX,NS,CNAME,SOA,TXT\n  --tor-routing                  Route HTTP traffic through Tor (uses port\n                                 9050). Slows total runtime significantly\n  --proxy-list TEXT              Path to proxy list file that would be used\n                                 for routing HTTP traffic. A proxy from the\n                                 list will be chosen at random for each\n                                 request. Slows total runtime\n  -c, --cookies TEXT             Comma separated cookies to add to the\n                                 requests. Should be in the form of key:value\n                                 Example: PHPSESSID:12345,isMobile:false\n  --proxy TEXT                   Proxy address to route HTTP traffic through.\n                                 Slows total runtime\n  -w, --wordlist TEXT            Path to wordlist that would be used for URL\n                                 fuzzing\n  -T, --threads INTEGER          Number of threads to use for URL\n                                 Fuzzing/Subdomain enumeration. Default: 25\n  --ignored-response-codes TEXT  Comma separated list of HTTP status code to\n                                 ignore for fuzzing. Defaults to:\n                                 302,400,401,402,403,404,503,504\n  --subdomain-list TEXT          Path to subdomain list file that would be\n                                 used for enumeration\n  -sc, --scripts                 Run Nmap scan with -sC flag\n  -sv, --services                Run Nmap scan with -sV flag\n  -f, --full-scan                Run Nmap scan with both -sV and -sC\n  -p, --port TEXT                Use this port range for Nmap scan instead of\n                                 the default\n  --vulners-nmap-scan            Perform an NmapVulners scan. Runs instead of\n                                 the regular Nmap scan and is longer.\n  --vulners-path TEXT            Path to the custom nmap_vulners.nse script.If\n                                 not used, Raccoon uses the built-in script it\n                                 ships with.\n  -fr, --follow-redirects        Follow redirects when fuzzing. Default: False\n                                 (will not follow redirects)\n  --tls-port INTEGER             Use this port for TLS queries. Default: 443\n  --skip-health-check            Do not test for target host availability\n  --no-url-fuzzing               Do not fuzz URLs\n  --no-sub-enum                  Do not bruteforce subdomains\n  --skip-nmap-scan               Do not perform an Nmap scan\n  -q, --quiet                    Do not output to stdout\n  -o, --outdir TEXT              Directory destination for scan output\n  --help                         Show this message and exit.\n```\n\n### Screenshots\n![poc2](https://image.ibb.co/iyLreJ/aaaaaaaaaaaaa.png)<br>\n\n**Web application data including vulnerable S3 bucket:**<br>\n![somepoc](https://image.ibb.co/m6b3Jz/s3.png)\n\n**[HTB](https://www.hackthebox.eu/) challenge example scan:**<br>\n![poc](https://image.ibb.co/bGKTRy/bbbbbbb.png)<br>\n\n**Nmap vulners scan results:**<br>\n![vulnerspoc](https://image.ibb.co/iaOMyU/nmap_vulners_poc.png)<br>\n\n**Results folder tree after a scan:**<br>\n![poc3](https://image.ibb.co/iyaCJd/poc3.png)\n\n### Contributing\nAny and all contributions, issues, features and tips are welcome.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evyatarmeged/Raccoon", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "raccoon-scanner", "package_url": "https://pypi.org/project/raccoon-scanner/", "platform": "", "project_url": "https://pypi.org/project/raccoon-scanner/", "project_urls": {"Homepage": "https://github.com/evyatarmeged/Raccoon"}, "release_url": "https://pypi.org/project/raccoon-scanner/0.8.5/", "requires_dist": ["beautifulsoup4", "requests", "dnspython", "lxml", "click", "fake-useragent", "requests[socks]", "xmltodict"], "requires_python": "", "summary": "Offensive Security Tool for Reconnaissance and Information Gathering", "version": "0.8.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Raccoon</h1>\n<p><img alt=\"Racoon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a96584caf223988af120dc407fcb35c17fba94a2/68747470733a2f2f696d6167652e6962622e636f2f646b4171344a2f726163636f6f6e2e706e67\"></p>\n<h4>Offensive Security Tool for Reconnaissance and Information Gathering</h4>\n<p><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf391616f0ac662fb9f5daf019c8edac87a15af4/68747470733a2f2f7472617669732d63692e6f72672f657679617461726d656765642f526163636f6f6e2e7376673f6272616e63683d6d6173746572\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\">\n<img alt=\"os\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8b63fb2c69fc8d60fd71c602b37a85d83f666a7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f532d4c696e75782c2532306d61634f532d79656c6c6f772e737667\">\n<img alt=\"pythonver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\">\n<img alt=\"raccoonver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f0c3d5e192569a80039ea9ccb93d3d76f6d353e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e382e352d6c69676874677265792e737667\"></p>\n<h5>Features</h5>\n<ul>\n<li>[x] DNS details</li>\n<li>[x] DNS visual mapping using DNS dumpster</li>\n<li>[x] WHOIS information</li>\n<li>[x] TLS Data - supported ciphers, TLS versions,\ncertificate details and SANs</li>\n<li>[x] Port Scan</li>\n<li>[x] Services and scripts scan</li>\n<li>[x] URL fuzzing and dir/file detection</li>\n<li>[x] Subdomain enumeration - uses Google dorking, DNS dumpster queries,\nSAN discovery and bruteforce</li>\n<li>[x] Web application data retrieval:<br>\n<ul>\n<li>CMS detection</li>\n<li>Web server info and X-Powered-By</li>\n<li>robots.txt and sitemap extraction</li>\n<li>Cookie inspection</li>\n<li>Extracts all fuzzable URLs</li>\n<li>Discovers HTML forms</li>\n<li>Retrieves all Email addresses</li>\n<li>Scans target for vulnerable S3 buckets and enumerates them\nfor sensitive files</li>\n</ul>\n</li>\n<li>[x] Detects known WAFs</li>\n<li>[x] Supports anonymous routing through Tor/Proxies</li>\n<li>[x] Uses asyncio for improved performance</li>\n<li>[x] Saves output to files - separates targets by folders\nand modules by files</li>\n</ul>\n<h5>Roadmap and TODOs</h5>\n<ul>\n<li>[ ] Add more WAFs, better detection</li>\n<li>[ ] OWASP vulnerabilities scan (RFI, RCE, XSS, SQLi etc.)</li>\n<li>[ ] Support multiple hosts (read from file)</li>\n<li>[ ] Rate limit evasion</li>\n<li>[ ] IP ranges support</li>\n<li>[ ] CIDR notation support</li>\n<li>[ ] More output formats (JSON at the very least)</li>\n</ul>\n<h3>About</h3>\n<p>Raccoon is a tool made for reconnaissance and information gathering with an emphasis on simplicity.<br> It will do everything from\nfetching DNS records, retrieving WHOIS information, obtaining TLS data, detecting WAF presence and up to threaded dir busting and\nsubdomain enumeration. Every scan outputs to a corresponding file.<br></p>\n<p>As most of Raccoon's scans are independent and do not rely on each other's results,\nit utilizes Python's asyncio to run most scans asynchronously.<br></p>\n<p>Raccoon supports Tor/proxy for anonymous routing. It uses default wordlists (for URL fuzzing and subdomain discovery)\nfrom the amazing <a href=\"https://github.com/danielmiessler/SecLists\" rel=\"nofollow\">SecLists</a> repository but different lists can be passed as arguments.<br></p>\n<p>For more options - see \"Usage\".</p>\n<h3>Installation</h3>\n<p>For the latest stable version:<br></p>\n<pre><code>pip install raccoon-scanner\n# To run:\nraccoon [OPTIONS]\n</code></pre>\n<p>Please note Raccoon requires Python3.5+ so may need to use <code>pip3 install raccoon-scanner</code>.<br>\nYou can also clone the GitHub repository for the latest features and changes:<br></p>\n<pre><code>git clone https://github.com/evyatarmeged/Raccoon.git\ncd Raccoon\npython setup.py install # Subsequent changes to the source code will not be reflected in calls to raccoon when this is used\n# Or\npython setup.py develop # Changes to code will be reflected in calls to raccoon. This can be undone by using python setup.py develop --uninstall\n# Finally\nraccoon [OPTIONS] [TARGET]\n</code></pre>\n<p>For docker installation:<br></p>\n<pre><code># Build the docker image\ndocker build -t evyatarmeged/raccoon .\n# Run a scan, As this a non-root container we need to save the output under the user's home which is /home/raccoon\ndocker run --name raccoon evyatarmeged/raccoon:latest  example.com -o /home/raccoon\n</code></pre>\n<h5>Prerequisites</h5>\n<p>Raccoon uses <a href=\"https://github.com/nmap/nmap\" rel=\"nofollow\">Nmap</a> to scan ports as well as utilizes some other Nmap scripts\nand features. It is mandatory that you have it installed before running Raccoon.<br>\n<a href=\"https://github.com/openssl/openssl\" rel=\"nofollow\">OpenSSL</a> is also used for TLS/SSL scans and should be installed as well.</p>\n<h3>Usage</h3>\n<pre><code>\nUsage: raccoon [OPTIONS] TARGET\n\nOptions:\n  --version                      Show the version and exit.\n  -d, --dns-records TEXT         Comma separated DNS records to query.\n                                 Defaults to: A,MX,NS,CNAME,SOA,TXT\n  --tor-routing                  Route HTTP traffic through Tor (uses port\n                                 9050). Slows total runtime significantly\n  --proxy-list TEXT              Path to proxy list file that would be used\n                                 for routing HTTP traffic. A proxy from the\n                                 list will be chosen at random for each\n                                 request. Slows total runtime\n  -c, --cookies TEXT             Comma separated cookies to add to the\n                                 requests. Should be in the form of key:value\n                                 Example: PHPSESSID:12345,isMobile:false\n  --proxy TEXT                   Proxy address to route HTTP traffic through.\n                                 Slows total runtime\n  -w, --wordlist TEXT            Path to wordlist that would be used for URL\n                                 fuzzing\n  -T, --threads INTEGER          Number of threads to use for URL\n                                 Fuzzing/Subdomain enumeration. Default: 25\n  --ignored-response-codes TEXT  Comma separated list of HTTP status code to\n                                 ignore for fuzzing. Defaults to:\n                                 302,400,401,402,403,404,503,504\n  --subdomain-list TEXT          Path to subdomain list file that would be\n                                 used for enumeration\n  -sc, --scripts                 Run Nmap scan with -sC flag\n  -sv, --services                Run Nmap scan with -sV flag\n  -f, --full-scan                Run Nmap scan with both -sV and -sC\n  -p, --port TEXT                Use this port range for Nmap scan instead of\n                                 the default\n  --vulners-nmap-scan            Perform an NmapVulners scan. Runs instead of\n                                 the regular Nmap scan and is longer.\n  --vulners-path TEXT            Path to the custom nmap_vulners.nse script.If\n                                 not used, Raccoon uses the built-in script it\n                                 ships with.\n  -fr, --follow-redirects        Follow redirects when fuzzing. Default: False\n                                 (will not follow redirects)\n  --tls-port INTEGER             Use this port for TLS queries. Default: 443\n  --skip-health-check            Do not test for target host availability\n  --no-url-fuzzing               Do not fuzz URLs\n  --no-sub-enum                  Do not bruteforce subdomains\n  --skip-nmap-scan               Do not perform an Nmap scan\n  -q, --quiet                    Do not output to stdout\n  -o, --outdir TEXT              Directory destination for scan output\n  --help                         Show this message and exit.\n</code></pre>\n<h3>Screenshots</h3>\n<p><img alt=\"poc2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b905c0e46ec8705b9b62ca8b01daa2d2752450b/68747470733a2f2f696d6167652e6962622e636f2f69794c72654a2f616161616161616161616161612e706e67\"><br></p>\n<p><strong>Web application data including vulnerable S3 bucket:</strong><br>\n<img alt=\"somepoc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f15e08d6a06018219e0bf5d36b1cc04e093ad33e/68747470733a2f2f696d6167652e6962622e636f2f6d3662334a7a2f73332e706e67\"></p>\n<p><strong><a href=\"https://www.hackthebox.eu/\" rel=\"nofollow\">HTB</a> challenge example scan:</strong><br>\n<img alt=\"poc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c39b3d264f6433aa99331557933c24079fcd83e/68747470733a2f2f696d6167652e6962622e636f2f62474b5452792f626262626262622e706e67\"><br></p>\n<p><strong>Nmap vulners scan results:</strong><br>\n<img alt=\"vulnerspoc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ae64c2fc9fcdadcfe71b1791a2f8743a98caffc/68747470733a2f2f696d6167652e6962622e636f2f69614f4d79552f6e6d61705f76756c6e6572735f706f632e706e67\"><br></p>\n<p><strong>Results folder tree after a scan:</strong><br>\n<img alt=\"poc3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e03a90b74e30bbeb6ce60dd5fcb63a91998bee75/68747470733a2f2f696d6167652e6962622e636f2f697961434a642f706f63332e706e67\"></p>\n<h3>Contributing</h3>\n<p>Any and all contributions, issues, features and tips are welcome.</p>\n\n          </div>"}, "last_serial": 4338000, "releases": {"0.0.8": [{"comment_text": "", "digests": {"md5": "6eec2c2a51f43b27f0de52481c3b87ec", "sha256": "cf864b57b329da8fb5bc11db2af7a5a7a90d8d522c7811095c9e5cbee55c3e67"}, "downloads": -1, "filename": "raccoon_scanner-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "6eec2c2a51f43b27f0de52481c3b87ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 78225, "upload_time": "2018-08-04T16:04:57", "upload_time_iso_8601": "2018-08-04T16:04:57.053153Z", "url": "https://files.pythonhosted.org/packages/ae/5c/b9e1664233deeb6915a954039b45b6ef694bee9dff0e3e7f00b7788e2a46/raccoon_scanner-0.0.8-py3-none-any.whl", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "33fba6acbc1eddd91d695a897dd7b481", "sha256": "ee0c3db875ae638297d34a593fb1367dc6a61596e5b1d956e2904e23249cef21"}, "downloads": -1, "filename": "raccoon_scanner-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33fba6acbc1eddd91d695a897dd7b481", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 79001, "upload_time": "2018-08-16T15:42:45", "upload_time_iso_8601": "2018-08-16T15:42:45.327171Z", "url": "https://files.pythonhosted.org/packages/16/d4/1b5870bc2ebae4a944bd0e2bfc2558b303da123624bb0995a40a065478d0/raccoon_scanner-0.8.1-py3-none-any.whl", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "f3aae8263156c2b06d035cc340d53ff9", "sha256": "c778354b0220ae4b56343fd5b1a7b8585b481d8964d32a60044628b194b7233d"}, "downloads": -1, "filename": "raccoon_scanner-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f3aae8263156c2b06d035cc340d53ff9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 79706, "upload_time": "2018-08-26T16:08:30", "upload_time_iso_8601": "2018-08-26T16:08:30.946316Z", "url": "https://files.pythonhosted.org/packages/83/87/8289484215b344adf4441b211a2d5d1d83f843ad1fbef2ef6ce24d7d1477/raccoon_scanner-0.8.2-py3-none-any.whl", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "d29764c02c9f09fdf0b883e262af5b42", "sha256": "c338fa8badeecf9b36bc23396d7976001d375e295ea7b822606673b0fe3e5227"}, "downloads": -1, "filename": "raccoon_scanner-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d29764c02c9f09fdf0b883e262af5b42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 79748, "upload_time": "2018-09-08T19:18:55", "upload_time_iso_8601": "2018-09-08T19:18:55.565623Z", "url": "https://files.pythonhosted.org/packages/ef/00/40b68da853bc44d5e1828d53c2ca0045143704d505c71ac8a23bf642ea61/raccoon_scanner-0.8.3-py3-none-any.whl", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "86f54e009ea91473cf701302ebf11515", "sha256": "73d49c4782a908f7eb2a1edf54f0fdc5786530d9743cb2edb374552677ce11ba"}, "downloads": -1, "filename": "raccoon_scanner-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "86f54e009ea91473cf701302ebf11515", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 79864, "upload_time": "2018-09-24T16:19:52", "upload_time_iso_8601": "2018-09-24T16:19:52.962817Z", "url": "https://files.pythonhosted.org/packages/d3/4d/d27cba261833dc4586e168448887b5d032324c7a12b638c25aaba0d96798/raccoon_scanner-0.8.4-py3-none-any.whl", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "a75ebea7b74a68d7ddd2b005f0a91413", "sha256": "854892c42fb2e61b33a8700cee8297204f7f935761e3d72c424d425223be462f"}, "downloads": -1, "filename": "raccoon_scanner-0.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a75ebea7b74a68d7ddd2b005f0a91413", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80080, "upload_time": "2018-10-03T20:31:05", "upload_time_iso_8601": "2018-10-03T20:31:05.051526Z", "url": "https://files.pythonhosted.org/packages/57/26/40f38ff035ed5eacb77371edcec87b1d3c4ab048debb6e6a477deb9f9429/raccoon_scanner-0.8.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a75ebea7b74a68d7ddd2b005f0a91413", "sha256": "854892c42fb2e61b33a8700cee8297204f7f935761e3d72c424d425223be462f"}, "downloads": -1, "filename": "raccoon_scanner-0.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a75ebea7b74a68d7ddd2b005f0a91413", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80080, "upload_time": "2018-10-03T20:31:05", "upload_time_iso_8601": "2018-10-03T20:31:05.051526Z", "url": "https://files.pythonhosted.org/packages/57/26/40f38ff035ed5eacb77371edcec87b1d3c4ab048debb6e6a477deb9f9429/raccoon_scanner-0.8.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:08:06 2020"}