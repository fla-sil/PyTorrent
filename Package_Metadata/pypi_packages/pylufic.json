{"info": {"author": "setop", "author_email": "setop@zoocoop.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n# What\n\n**pylufic** is a command line tool which allow to interact with [Let's Upload File (Lufi)](https://demo.lufi.io/about) instances, that is to download and upload client-side encrypted files.\n\n# Why\n\nLufi is a web-application allowing client-side encrypted file transfers between users. Hence you don't have to trust the service provider to protect your data.\n\nHowever Lufi works in a web browser, like Firefox or Chormium. When you don't want to run a full-featured graphical web browser on your machine to use it, you need a command line.\n\n**pylufic** is a python implementation of a Lufi CLI, useful for those who already have Python in their environments.\n\n# How\n\n**pylufic** use the same software libraries as the Javascript version - websocket client and Standford Javascript Cryptography Library (SJCL) - but in their python implementations.\n\n# Use\n\n## Install\n\nBe sure to have Python 3.6+ installed.\n\nGit clone this repo (or download as zip) :\n\n```\ngit clone https://framagit.org/setop/pylufic.git && cd pylufic\n```\n\nOptionally, create python virtual environment :\n\n```\npython3 -m venv .venv && . .venv/bin/activate\n```\n\nPip install requirements (use sudo if not in a venv) :\n\n```\npip install -r requirements.txt\n```\n\nIf you want to test libraries, run :\n\n```\n./sjcl-test.py && ./ws-test.py\n```\n\n## Run\n\npylufic uses [baker](https://bitbucket.org/mchaput/baker) library which provide inline help \n\n### Help\n\n```\n./pylufic.py\n```\n\n### Upload\n\n```\n./pylufic.py file service_url\n```\n\nYou may use \"https://framadrop.org/\" (consider donation).\n\n### download\n\n```\n./pylufic.py url\n```\n\nBe aware a file is opened in the current directory in append mode with the name provided in the metadata of the transfer.\n\n### delete\n\nTo delete a file use link provided by upload function.\n\nAn example using curl :\n\n```\ncurl -s -S 'https://framadrop.org/d/<shortid>/<token>' | html2text\n```\n\n# Limitation\n\n**pylufic** handles only one file at a time ; no multi-files upload or download. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://framagit.org/setop/pylufic", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylufic", "package_url": "https://pypi.org/project/pylufic/", "platform": "", "project_url": "https://pypi.org/project/pylufic/", "project_urls": {"Homepage": "https://framagit.org/setop/pylufic"}, "release_url": "https://pypi.org/project/pylufic/1.0.0rc1/", "requires_dist": ["websocket-client", "sjcl", "baker"], "requires_python": "", "summary": "CLI client for lufi service", "version": "1.0.0rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>What</h1>\n<p><strong>pylufic</strong> is a command line tool which allow to interact with <a href=\"https://demo.lufi.io/about\" rel=\"nofollow\">Let's Upload File (Lufi)</a> instances, that is to download and upload client-side encrypted files.</p>\n<h1>Why</h1>\n<p>Lufi is a web-application allowing client-side encrypted file transfers between users. Hence you don't have to trust the service provider to protect your data.</p>\n<p>However Lufi works in a web browser, like Firefox or Chormium. When you don't want to run a full-featured graphical web browser on your machine to use it, you need a command line.</p>\n<p><strong>pylufic</strong> is a python implementation of a Lufi CLI, useful for those who already have Python in their environments.</p>\n<h1>How</h1>\n<p><strong>pylufic</strong> use the same software libraries as the Javascript version - websocket client and Standford Javascript Cryptography Library (SJCL) - but in their python implementations.</p>\n<h1>Use</h1>\n<h2>Install</h2>\n<p>Be sure to have Python 3.6+ installed.</p>\n<p>Git clone this repo (or download as zip) :</p>\n<pre><code>git clone https://framagit.org/setop/pylufic.git &amp;&amp; cd pylufic\n</code></pre>\n<p>Optionally, create python virtual environment :</p>\n<pre><code>python3 -m venv .venv &amp;&amp; . .venv/bin/activate\n</code></pre>\n<p>Pip install requirements (use sudo if not in a venv) :</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<p>If you want to test libraries, run :</p>\n<pre><code>./sjcl-test.py &amp;&amp; ./ws-test.py\n</code></pre>\n<h2>Run</h2>\n<p>pylufic uses <a href=\"https://bitbucket.org/mchaput/baker\" rel=\"nofollow\">baker</a> library which provide inline help</p>\n<h3>Help</h3>\n<pre><code>./pylufic.py\n</code></pre>\n<h3>Upload</h3>\n<pre><code>./pylufic.py file service_url\n</code></pre>\n<p>You may use \"<a href=\"https://framadrop.org/\" rel=\"nofollow\">https://framadrop.org/</a>\" (consider donation).</p>\n<h3>download</h3>\n<pre><code>./pylufic.py url\n</code></pre>\n<p>Be aware a file is opened in the current directory in append mode with the name provided in the metadata of the transfer.</p>\n<h3>delete</h3>\n<p>To delete a file use link provided by upload function.</p>\n<p>An example using curl :</p>\n<pre><code>curl -s -S 'https://framadrop.org/d/&lt;shortid&gt;/&lt;token&gt;' | html2text\n</code></pre>\n<h1>Limitation</h1>\n<p><strong>pylufic</strong> handles only one file at a time ; no multi-files upload or download.</p>\n\n          </div>"}, "last_serial": 5210011, "releases": {"1.0.0rc1": [{"comment_text": "", "digests": {"md5": "95daafe9824d3f32b53625248d8a4ecf", "sha256": "c9fde0e159d4034fb4053247a6a43d1e56abca4f7b660c053261a773c26f8929"}, "downloads": -1, "filename": "pylufic-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "95daafe9824d3f32b53625248d8a4ecf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4733, "upload_time": "2019-04-30T20:57:12", "upload_time_iso_8601": "2019-04-30T20:57:12.662738Z", "url": "https://files.pythonhosted.org/packages/18/4a/6b02ad46811268a73579fae1d8f4d894811b6faa68606d0b15a71f76e953/pylufic-1.0.0rc1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95daafe9824d3f32b53625248d8a4ecf", "sha256": "c9fde0e159d4034fb4053247a6a43d1e56abca4f7b660c053261a773c26f8929"}, "downloads": -1, "filename": "pylufic-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "95daafe9824d3f32b53625248d8a4ecf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4733, "upload_time": "2019-04-30T20:57:12", "upload_time_iso_8601": "2019-04-30T20:57:12.662738Z", "url": "https://files.pythonhosted.org/packages/18/4a/6b02ad46811268a73579fae1d8f4d894811b6faa68606d0b15a71f76e953/pylufic-1.0.0rc1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:41 2020"}