{"info": {"author": "Uptick", "author_email": "dev@uptickhq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "# django-model-import\n\n[![PyPI version](https://badge.fury.io/py/django-model-import.svg)](https://badge.fury.io/py/django-model-import)\n[![Build Status](https://travis-ci.org/uptick/django-model-import.svg?branch=master)](https://travis-ci.org/uptick/django-model-import)\n\nDjango Model Import is a light weight CSV importer built for speed.\n\nIt uses a standard Django `ModelForm` to parse each row, giving you a familiar API to work with\nfor data validation and model instantiation. In most cases, if you already have a `ModelForm`\nfor the `ContentType` you are importing you do not need to create an import specific form.\n\nTo present feedback to the end-user running the import you can easily generate a preview\nof the imported data by toggling the `commit` parameter.\n\nIt also provides some import optimized fields for ForeignKey's, allowing preloading all\npossible values, or caching each lookup as it occurs, or looking up a model where multiple\nfields are needed to uniquely identify a resource.\n\n\n## Installation\n\nStandard pip install:\n\n```bash\npip install django-model-import\n```\n\n\n## Quickstart\n\n```python\nimport djangomodelimport\n\nclass BookImporter(djangomodelimport.ImporterModelForm):\n    name = forms.CharField()\n    author = CachedChoiceField(queryset=Author.objects.all(), to_field='name')\n\n    class Meta:\n        model = Book\n        fields = (\n            'name',\n            'author',\n        )\n\nwith default_storage.open('books.csv', 'rb') as fh:\n    data = fh.read().decode(\"utf-8\")\n\n# Use tablib\nparser = djangomodelimport.TablibCSVImportParser(BookImporter)\nheaders, rows = parser.parse(data)\n\n# Process\nimporter = djangomodelimport.ModelImporter(BookImporter)\npreview = importer.process(headers, rows, commit=False)\nerrors = preview.get_errors()\n\nif errors:\n    print(errors)\n\nimportresult = importer.process(headers, rows, commit=True)\nfor result in importresult.get_results():\n    print(result.instance)\n```\n\n\n## Composite key lookups\n\nOften a relationship cannot be referenced via a single unique string. For this we can use\na `CachedChoiceField` with a `CompositeLookupWidget`. The widget looks for the values\nunder the `type` and `variant` columns in the source CSV, and does a unique lookup\nwith the field names specified in `to_field`, e.g. `queryset.get(type__name=type, name=variant)`.\n\nThe results of each `get` are cached internally for the remainder of the import minimising\nany database access.\n\n```python\nclass AssetImporter(ImporterModelForm):\n    site = djangomodelimport.CachedChoiceField(queryset=Site.objects.active(), to_field='ref')\n    type = djangomodelimport.CachedChoiceField(queryset=AssetType.objects.filter(is_active=True), to_field='name')\n    type_variant = djangomodelimport.CachedChoiceField(\n        queryset=InspectionItemTypeVariant.objects.filter(is_active=True),\n        required=False,\n        widget=djangomodelimport.CompositeLookupWidget(source=('type', 'variant')),\n        to_field=('type__name', 'name'),\n    )\n    contractor = djangomodelimport.CachedChoiceField(queryset=Contractor.objects.active(), to_field='name')\n```\n\n\n## Flat related fields\n\nOften you'll have a OneToOneField or just a ForeignKey to another model, but you want to be able to\ncreate/update that other model via this one. You can flatten all of the related model's fields onto\nthis importer using `FlatRelatedField`.\n\n```python\nclass ClientImporter(ImporterModelForm):\n    primary_contact = FlatRelatedField(\n        queryset=ContactDetails.objects.all(),\n        fields={\n            'contact_name': {'to_field': 'name', 'required': True},\n            'email': {'to_field': 'email'},\n            'email_cc': {'to_field': 'email_cc'},\n            'mobile': {'to_field': 'mobile'},\n            'phone_bh': {'to_field': 'phone_bh'},\n            'phone_ah': {'to_field': 'phone_ah'},\n            'fax': {'to_field': 'fax'},\n        },\n    )\n\n    class Meta:\n        model = Client\n        fields = (\n            'name',\n            'ref',\n            'is_active',\n            'account',\n\n            'primary_contact',\n        )\n```\n\n## Tests\nRun tests with `python example/manage.py test testapp`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uptick/django-model-import", "keywords": "csv,import", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-model-import", "package_url": "https://pypi.org/project/django-model-import/", "platform": "", "project_url": "https://pypi.org/project/django-model-import/", "project_urls": {"Homepage": "https://github.com/uptick/django-model-import"}, "release_url": "https://pypi.org/project/django-model-import/0.4.1/", "requires_dist": ["python-dateutil (>=2.6.0)", "tablib (>=0.11.5)", "django"], "requires_python": "", "summary": "Fast CSV imports using django model forms.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-model-import</h1>\n<p><a href=\"https://badge.fury.io/py/django-model-import\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7783c0949c436dcbe6a4c959df61283539efb9d6/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6d6f64656c2d696d706f72742e737667\"></a>\n<a href=\"https://travis-ci.org/uptick/django-model-import\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b86622d07b9735546a29ea8f5fd1757fbba4d452/68747470733a2f2f7472617669732d63692e6f72672f75707469636b2f646a616e676f2d6d6f64656c2d696d706f72742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Django Model Import is a light weight CSV importer built for speed.</p>\n<p>It uses a standard Django <code>ModelForm</code> to parse each row, giving you a familiar API to work with\nfor data validation and model instantiation. In most cases, if you already have a <code>ModelForm</code>\nfor the <code>ContentType</code> you are importing you do not need to create an import specific form.</p>\n<p>To present feedback to the end-user running the import you can easily generate a preview\nof the imported data by toggling the <code>commit</code> parameter.</p>\n<p>It also provides some import optimized fields for ForeignKey's, allowing preloading all\npossible values, or caching each lookup as it occurs, or looking up a model where multiple\nfields are needed to uniquely identify a resource.</p>\n<h2>Installation</h2>\n<p>Standard pip install:</p>\n<pre>pip install django-model-import\n</pre>\n<h2>Quickstart</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">djangomodelimport</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BookImporter</span><span class=\"p\">(</span><span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">ImporterModelForm</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">CachedChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(),</span> <span class=\"n\">to_field</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'author'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">default_storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'books.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use tablib</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">TablibCSVImportParser</span><span class=\"p\">(</span><span class=\"n\">BookImporter</span><span class=\"p\">)</span>\n<span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Process</span>\n<span class=\"n\">importer</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">ModelImporter</span><span class=\"p\">(</span><span class=\"n\">BookImporter</span><span class=\"p\">)</span>\n<span class=\"n\">preview</span> <span class=\"o\">=</span> <span class=\"n\">importer</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">commit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">preview</span><span class=\"o\">.</span><span class=\"n\">get_errors</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">errors</span><span class=\"p\">)</span>\n\n<span class=\"n\">importresult</span> <span class=\"o\">=</span> <span class=\"n\">importer</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">commit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">importresult</span><span class=\"o\">.</span><span class=\"n\">get_results</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n</pre>\n<h2>Composite key lookups</h2>\n<p>Often a relationship cannot be referenced via a single unique string. For this we can use\na <code>CachedChoiceField</code> with a <code>CompositeLookupWidget</code>. The widget looks for the values\nunder the <code>type</code> and <code>variant</code> columns in the source CSV, and does a unique lookup\nwith the field names specified in <code>to_field</code>, e.g. <code>queryset.get(type__name=type, name=variant)</code>.</p>\n<p>The results of each <code>get</code> are cached internally for the remainder of the import minimising\nany database access.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AssetImporter</span><span class=\"p\">(</span><span class=\"n\">ImporterModelForm</span><span class=\"p\">):</span>\n    <span class=\"n\">site</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">CachedChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Site</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">(),</span> <span class=\"n\">to_field</span><span class=\"o\">=</span><span class=\"s1\">'ref'</span><span class=\"p\">)</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">CachedChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">AssetType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">is_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"n\">to_field</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n    <span class=\"n\">type_variant</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">CachedChoiceField</span><span class=\"p\">(</span>\n        <span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">InspectionItemTypeVariant</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">is_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">CompositeLookupWidget</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'type'</span><span class=\"p\">,</span> <span class=\"s1\">'variant'</span><span class=\"p\">)),</span>\n        <span class=\"n\">to_field</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'type__name'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">contractor</span> <span class=\"o\">=</span> <span class=\"n\">djangomodelimport</span><span class=\"o\">.</span><span class=\"n\">CachedChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Contractor</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">(),</span> <span class=\"n\">to_field</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n</pre>\n<h2>Flat related fields</h2>\n<p>Often you'll have a OneToOneField or just a ForeignKey to another model, but you want to be able to\ncreate/update that other model via this one. You can flatten all of the related model's fields onto\nthis importer using <code>FlatRelatedField</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ClientImporter</span><span class=\"p\">(</span><span class=\"n\">ImporterModelForm</span><span class=\"p\">):</span>\n    <span class=\"n\">primary_contact</span> <span class=\"o\">=</span> <span class=\"n\">FlatRelatedField</span><span class=\"p\">(</span>\n        <span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">ContactDetails</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(),</span>\n        <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'contact_name'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'required'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},</span>\n            <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'email'</span><span class=\"p\">},</span>\n            <span class=\"s1\">'email_cc'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'email_cc'</span><span class=\"p\">},</span>\n            <span class=\"s1\">'mobile'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'mobile'</span><span class=\"p\">},</span>\n            <span class=\"s1\">'phone_bh'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'phone_bh'</span><span class=\"p\">},</span>\n            <span class=\"s1\">'phone_ah'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'phone_ah'</span><span class=\"p\">},</span>\n            <span class=\"s1\">'fax'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to_field'</span><span class=\"p\">:</span> <span class=\"s1\">'fax'</span><span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Client</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'ref'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'is_active'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'account'</span><span class=\"p\">,</span>\n\n            <span class=\"s1\">'primary_contact'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<h2>Tests</h2>\n<p>Run tests with <code>python example/manage.py test testapp</code></p>\n\n          </div>"}, "last_serial": 6045039, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "eaa9289c33ed8f1ec2bde5d6589cdb20", "sha256": "fff389f6ad6a80f83e57c1fe30ccb8e3011aa3a534660a74968f325160871b54"}, "downloads": -1, "filename": "django-model-import-0.1.1.tar.gz", "has_sig": false, "md5_digest": "eaa9289c33ed8f1ec2bde5d6589cdb20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9844, "upload_time": "2017-09-18T03:02:08", "upload_time_iso_8601": "2017-09-18T03:02:08.480034Z", "url": "https://files.pythonhosted.org/packages/2d/90/47cdd331e21b4fe6db44d2bfc2c9890f0af10e32f4483d365e5b3af1fc32/django-model-import-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a12bb708e674a46d0752611ed0b3f0a7", "sha256": "6eea8a272316158b61209a4f9b90a2a4830fe32903246e2157a2b1033d6e1df8"}, "downloads": -1, "filename": "django-model-import-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a12bb708e674a46d0752611ed0b3f0a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9194, "upload_time": "2017-11-27T04:41:18", "upload_time_iso_8601": "2017-11-27T04:41:18.893223Z", "url": "https://files.pythonhosted.org/packages/b5/04/0baf5d85db0e38cfef8f840058970d933e5f170151fe92674e7e5c7ae1d8/django-model-import-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fc6166d7ecdae30a1f47968f9cda7b8d", "sha256": "45d3e7417e1858a0dba83f8a17d784e94e28f4330bdd202a466e624e036a5982"}, "downloads": -1, "filename": "django-model-import-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fc6166d7ecdae30a1f47968f9cda7b8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9200, "upload_time": "2017-12-17T23:14:49", "upload_time_iso_8601": "2017-12-17T23:14:49.294051Z", "url": "https://files.pythonhosted.org/packages/bc/b0/50b3bb167c8c0205112318e3c058981cf4249369ce6d52d821042210b153/django-model-import-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6b2a685730bfc0050e4c6fa1ea6bbf5a", "sha256": "14aa56b60d757b2fbe6022a4501ca017f5da1b28e8745eaffe529a24fb55c91c"}, "downloads": -1, "filename": "django-model-import-0.2.tar.gz", "has_sig": false, "md5_digest": "6b2a685730bfc0050e4c6fa1ea6bbf5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10580, "upload_time": "2018-02-12T02:45:51", "upload_time_iso_8601": "2018-02-12T02:45:51.141720Z", "url": "https://files.pythonhosted.org/packages/4b/b1/8fd566c0c5e180642803d8ea24442afcca02f1e3d03111f0d25a62ba5f53/django-model-import-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "899aaa004f6a37c36b353c3aa16735cd", "sha256": "a1428801c236b5f83052ed1bf8c2e4f31fea4d9ac1b040b27b222025609223c1"}, "downloads": -1, "filename": "django-model-import-0.2.1.tar.gz", "has_sig": false, "md5_digest": "899aaa004f6a37c36b353c3aa16735cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10639, "upload_time": "2018-02-15T05:47:52", "upload_time_iso_8601": "2018-02-15T05:47:52.394897Z", "url": "https://files.pythonhosted.org/packages/ff/22/2fe599436b630ecadf1cb40c2a1d4199c9a86e8b66d61d67db6fa967e057/django-model-import-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4375062b1d2846f67990464989a37fa9", "sha256": "89e563eab7e0ab70df81afd70caa935b1c04f07a594acaae158f3ff7d863c962"}, "downloads": -1, "filename": "django-model-import-0.3.tar.gz", "has_sig": false, "md5_digest": "4375062b1d2846f67990464989a37fa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12143, "upload_time": "2018-02-23T05:11:15", "upload_time_iso_8601": "2018-02-23T05:11:15.837294Z", "url": "https://files.pythonhosted.org/packages/f2/9d/9812c076a432c715ae93b3be0ff7ae5bf1e966d105614724facee556515f/django-model-import-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e93accc1ff886ff1a7327e067bd8c3f3", "sha256": "8db1b2045238e32cfad39d11800f71d3db27c8ac0e8d5110d2215c7b4b8a11f5"}, "downloads": -1, "filename": "django-model-import-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e93accc1ff886ff1a7327e067bd8c3f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12315, "upload_time": "2018-02-28T01:52:48", "upload_time_iso_8601": "2018-02-28T01:52:48.743240Z", "url": "https://files.pythonhosted.org/packages/49/fc/0aae2eb3414e34f3a376157fcdef9f821580bcefc0be5cf84619bc6b5915/django-model-import-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "744ceb95eae84e1dae28d326a82a8e0b", "sha256": "7cf9ec8e72580fa403ec949f72103b95fb28efb5c60235cc1a12051a16466155"}, "downloads": -1, "filename": "django-model-import-0.3.2.tar.gz", "has_sig": false, "md5_digest": "744ceb95eae84e1dae28d326a82a8e0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12316, "upload_time": "2018-03-01T01:58:56", "upload_time_iso_8601": "2018-03-01T01:58:56.109033Z", "url": "https://files.pythonhosted.org/packages/ee/3d/d8cf96b588d7eb5f1062001d0368e178cb7941da8a918bbca81d2bca4895/django-model-import-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b7133a0ecaf5c7d8f17b06a06a9eec60", "sha256": "5fe8ad2f0e07266c37dabed9e01d274c29e57320ae049ed92c78e63aaca4c1a9"}, "downloads": -1, "filename": "django_model_import-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b7133a0ecaf5c7d8f17b06a06a9eec60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13005, "upload_time": "2019-10-23T11:30:06", "upload_time_iso_8601": "2019-10-23T11:30:06.192243Z", "url": "https://files.pythonhosted.org/packages/47/ae/a1e1f8023884c82aca9f0e069ee3cef3b2505dbb926041f3acd90b891c0d/django_model_import-0.4-py3-none-any.whl", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7920b96ffc2fb5b3890b111278868436", "sha256": "afbdf4667bf1189b12573ac6302162f1cebac68bd3d050cc8fdcc02c01be00b9"}, "downloads": -1, "filename": "django_model_import-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7920b96ffc2fb5b3890b111278868436", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13052, "upload_time": "2019-10-29T03:59:33", "upload_time_iso_8601": "2019-10-29T03:59:33.987093Z", "url": "https://files.pythonhosted.org/packages/32/2a/a771b5b285d15c17c72b280c5f23943483b72c4a8f146fa6804b255965e4/django_model_import-0.4.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7920b96ffc2fb5b3890b111278868436", "sha256": "afbdf4667bf1189b12573ac6302162f1cebac68bd3d050cc8fdcc02c01be00b9"}, "downloads": -1, "filename": "django_model_import-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7920b96ffc2fb5b3890b111278868436", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13052, "upload_time": "2019-10-29T03:59:33", "upload_time_iso_8601": "2019-10-29T03:59:33.987093Z", "url": "https://files.pythonhosted.org/packages/32/2a/a771b5b285d15c17c72b280c5f23943483b72c4a8f146fa6804b255965e4/django_model_import-0.4.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:35:01 2020"}