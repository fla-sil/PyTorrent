{"info": {"author": "Nautatava Navlakha", "author_email": "nnautatva@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "[![PyPI release](https://badge.fury.io/py/iitb-oauth.svg)](https://badge.fury.io/py/iitb-oauth)\n![Travis-ci](https://api.travis-ci.org/nautatva/iitb_oauth.svg)\n[![Python versions](https://img.shields.io/pypi/pyversions/iitb-oauth.svg)](https://pypi.org/project/iitb-oauth/)\n[![License](https://img.shields.io/pypi/l/iitb-oauth.svg)](https://pypi.org/project/iitb-oauth/)\n\n\n# Django Oauth2 Client to authenticate using IIT Bombay gymkhana SSO\nA small package for LDAP authentication using IIT Bombay gymkhana SSO.\n\n\n## Motivation\nSSO can be a tricky thing to setup and bugs can be time consuming to debug. With people moving away from PHP to Django and node, this module can be used to quickly define custom callbacks that map the user details obtained from IIT Bombay gymkhana SSO to your Django user model. You get a quick and easy way to programatically create users once they are authenticated.\n\n\n## Setting up in your app\nFor using this Django app, the following steps must be done:\n\n```python\nINSTALLED_APPS = [\n   # ...\n    'iitb_oauth'\n   # ...\n]\n```\n\n```python\nAUTHENTICATION_BACKENDS = [\n# ...\n'iitb_oauth.backend.OauthBackend'\n# ...\n]\n```\n\nStep 2:  Add the oauth urls to the root website:\n```python\nurlpatterns = [\n    # ...\n    url(r'', include('iitb_oauth.urls')),\n    # ...\n]\n```\n\n\nStep 3: Add the LOGIN_URL and corresponding OAUTH config settings for your application. \nAlso add the `FALLBACK_URL` as a fallback in case OAuth authentication fails. Example:\n\n```python\nAUTH_PROFILE_MODULE = \"\"  # In case User has a user profile, specify the class here\nLOGIN_URL = \"/login/\"\nFALLBACK_URL = \"/\" # In case user is not logged in or doesn't have enough permissions to view the content\n\n\nCLIENT_ID = 'my-id'\nCLIENT_SECRET = '<secret>'\n\nSCOPE = 'ldap'  # ldap is necessary for login, pass only necessary scopes. seperate with spaces\n# Eg: SCOPE = 'profile ldap program'\n\nFIELDS = 'username' # username is mandatory field. seperate with commas\n# Eg: FIELDS = 'username,first_name,last_name,email,roll_number'\n\nREDIRECT_URI = '<app_redirect_url>' # should end with /oauth/complete (the view is provided by this app)\n\nLOGIN_COMPLETE_REDIRECT = '/some/url/in/your/app'\nLOGOUT_REDIRECT = '/' # redirect to this URL after logout.\nMAPPINGS = {\n    # fields in User model: \"LDAP attributes\"\n    # email mapped with username@iitb.ac.in if email is not in scope.\n    \"first_name\": \"first_name\",\n    \"last_name\": \"last_name\"\n}  # In case a custom User model is defined, map fields in User model: \"LDAP attributes\"\nPROFILE_MAPPING = {\n    # Maps fields in user profile with response recieved from sso server.\n    # AUTH_PROFILE_MODULE needs to be specified for this to work.\n    \"roll_number\" : \"roll_number\"\n}\n```\n\n\n## Usage\nOnce you try to access some endpoint that has the `@login_required` decorator on top of it, you'll be redirected to the login URI that you defined. The user is authenticated using IITB gymkhana SSO and any other backends you provided. Upon successful authentication the url specified in `LOGIN_COMPLETE_REDIRECT` are called and the callbacks are used to shape your user into the form that you've provided. If authentication fails due to any reason or if the user does not have permission, he will be redirected to the URI specified in `FALLBACK_URL`.\n\n\n## License\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "iitb-oauth", "package_url": "https://pypi.org/project/iitb-oauth/", "platform": "", "project_url": "https://pypi.org/project/iitb-oauth/", "project_urls": {"Source code": "https://github.com/nautatva/iitb_oauth/", "Travis CI": "https://travis-ci.org/github/nautatva/iitb_oauth/"}, "release_url": "https://pypi.org/project/iitb-oauth/1.2/", "requires_dist": ["Django", "requests"], "requires_python": ">1.1.1", "summary": "Django app for LDAP authentication using IIT Bombay gymkhana SSO.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/iitb-oauth\" rel=\"nofollow\"><img alt=\"PyPI release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7de3eb789f051b8e2427c2cafa50cd9cc40edaa6/68747470733a2f2f62616467652e667572792e696f2f70792f696974622d6f617574682e737667\"></a>\n<img alt=\"Travis-ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5457a2a2b057df4f24cc6068a0136728edb35bd8/68747470733a2f2f6170692e7472617669732d63692e6f72672f6e617574617476612f696974625f6f617574682e737667\">\n<a href=\"https://pypi.org/project/iitb-oauth/\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5028d2b930cb3063aa8af0150da7e4c7dd088e9e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696974622d6f617574682e737667\"></a>\n<a href=\"https://pypi.org/project/iitb-oauth/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a71c689b9ef54923c57099a8d60c10ceca173e7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f696974622d6f617574682e737667\"></a></p>\n<h1>Django Oauth2 Client to authenticate using IIT Bombay gymkhana SSO</h1>\n<p>A small package for LDAP authentication using IIT Bombay gymkhana SSO.</p>\n<h2>Motivation</h2>\n<p>SSO can be a tricky thing to setup and bugs can be time consuming to debug. With people moving away from PHP to Django and node, this module can be used to quickly define custom callbacks that map the user details obtained from IIT Bombay gymkhana SSO to your Django user model. You get a quick and easy way to programatically create users once they are authenticated.</p>\n<h2>Setting up in your app</h2>\n<p>For using this Django app, the following steps must be done:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'iitb_oauth'</span>\n   <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<pre><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"c1\"># ...</span>\n<span class=\"s1\">'iitb_oauth.backend.OauthBackend'</span>\n<span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Step 2:  Add the oauth urls to the root website:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'iitb_oauth.urls'</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Step 3: Add the LOGIN_URL and corresponding OAUTH config settings for your application.\nAlso add the <code>FALLBACK_URL</code> as a fallback in case OAuth authentication fails. Example:</p>\n<pre><span class=\"n\">AUTH_PROFILE_MODULE</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>  <span class=\"c1\"># In case User has a user profile, specify the class here</span>\n<span class=\"n\">LOGIN_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"/login/\"</span>\n<span class=\"n\">FALLBACK_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"/\"</span> <span class=\"c1\"># In case user is not logged in or doesn't have enough permissions to view the content</span>\n\n\n<span class=\"n\">CLIENT_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'my-id'</span>\n<span class=\"n\">CLIENT_SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;secret&gt;'</span>\n\n<span class=\"n\">SCOPE</span> <span class=\"o\">=</span> <span class=\"s1\">'ldap'</span>  <span class=\"c1\"># ldap is necessary for login, pass only necessary scopes. seperate with spaces</span>\n<span class=\"c1\"># Eg: SCOPE = 'profile ldap program'</span>\n\n<span class=\"n\">FIELDS</span> <span class=\"o\">=</span> <span class=\"s1\">'username'</span> <span class=\"c1\"># username is mandatory field. seperate with commas</span>\n<span class=\"c1\"># Eg: FIELDS = 'username,first_name,last_name,email,roll_number'</span>\n\n<span class=\"n\">REDIRECT_URI</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;app_redirect_url&gt;'</span> <span class=\"c1\"># should end with /oauth/complete (the view is provided by this app)</span>\n\n<span class=\"n\">LOGIN_COMPLETE_REDIRECT</span> <span class=\"o\">=</span> <span class=\"s1\">'/some/url/in/your/app'</span>\n<span class=\"n\">LOGOUT_REDIRECT</span> <span class=\"o\">=</span> <span class=\"s1\">'/'</span> <span class=\"c1\"># redirect to this URL after logout.</span>\n<span class=\"n\">MAPPINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># fields in User model: \"LDAP attributes\"</span>\n    <span class=\"c1\"># email mapped with username@iitb.ac.in if email is not in scope.</span>\n    <span class=\"s2\">\"first_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"first_name\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"last_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"last_name\"</span>\n<span class=\"p\">}</span>  <span class=\"c1\"># In case a custom User model is defined, map fields in User model: \"LDAP attributes\"</span>\n<span class=\"n\">PROFILE_MAPPING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># Maps fields in user profile with response recieved from sso server.</span>\n    <span class=\"c1\"># AUTH_PROFILE_MODULE needs to be specified for this to work.</span>\n    <span class=\"s2\">\"roll_number\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"roll_number\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Usage</h2>\n<p>Once you try to access some endpoint that has the <code>@login_required</code> decorator on top of it, you'll be redirected to the login URI that you defined. The user is authenticated using IITB gymkhana SSO and any other backends you provided. Upon successful authentication the url specified in <code>LOGIN_COMPLETE_REDIRECT</code> are called and the callbacks are used to shape your user into the form that you've provided. If authentication fails due to any reason or if the user does not have permission, he will be redirected to the URI specified in <code>FALLBACK_URL</code>.</p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6963683, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "98bb5512525927bb17c6d7c70d156709", "sha256": "f6bb9b033118758d913fa2205dc4dd2b5ef29fd29f9ecc6754063d075c3cc043"}, "downloads": -1, "filename": "iitb_oauth-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "98bb5512525927bb17c6d7c70d156709", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">1.1.1", "size": 6978, "upload_time": "2020-04-01T12:58:21", "upload_time_iso_8601": "2020-04-01T12:58:21.559350Z", "url": "https://files.pythonhosted.org/packages/37/f6/92138927295a8726ba39532406e1e6c49932bd7e545c086c475dc37caa36/iitb_oauth-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3009d01f0cf7588dbdcef3ed336abfb9", "sha256": "dc25aca13024d34736506473776b20019d783d7dc8827d0d1a6f18a219f0f1bc"}, "downloads": -1, "filename": "iitb_oauth-1.0.tar.gz", "has_sig": false, "md5_digest": "3009d01f0cf7588dbdcef3ed336abfb9", "packagetype": "sdist", "python_version": "source", "requires_python": ">1.1.1", "size": 5775, "upload_time": "2020-04-01T12:58:23", "upload_time_iso_8601": "2020-04-01T12:58:23.777119Z", "url": "https://files.pythonhosted.org/packages/2a/4f/aa12df91d554cb6a6dd5747b35fb5daa39df4ec278216f2b710edb055d5c/iitb_oauth-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "22b2540816cea4ce1e30a82ad680a478", "sha256": "080780247196359f350f5dd830126c2ab6a4c268b657f842e04a65d5ab1368ae"}, "downloads": -1, "filename": "iitb_oauth-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22b2540816cea4ce1e30a82ad680a478", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">1.1.1", "size": 7081, "upload_time": "2020-04-06T16:45:28", "upload_time_iso_8601": "2020-04-06T16:45:28.867148Z", "url": "https://files.pythonhosted.org/packages/08/d9/d7d84911c838f1eb7e22d6b06be285934d26067f648485cc51f7a5bfb599/iitb_oauth-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "456516fc16c2f276cde0df62f14599d1", "sha256": "650fd81a68c7c3f6b1d5e7d162094af8203b6baaedbfab7f3eeedd5c4b7a218d"}, "downloads": -1, "filename": "iitb_oauth-1.1.tar.gz", "has_sig": false, "md5_digest": "456516fc16c2f276cde0df62f14599d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">1.1.1", "size": 6027, "upload_time": "2020-04-06T16:45:29", "upload_time_iso_8601": "2020-04-06T16:45:29.811000Z", "url": "https://files.pythonhosted.org/packages/ca/f2/74d873a499693b9f58161a467f2f33531ad25a853153cd3c3560de68d606/iitb_oauth-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "713da2649f22d24825006640157e23b0", "sha256": "92c2dc593c16379b8da96c0c6eb6ec1f9f3c7a7d290fe88815e7173756ee6a1f"}, "downloads": -1, "filename": "iitb_oauth-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "713da2649f22d24825006640157e23b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">1.1.1", "size": 7342, "upload_time": "2020-04-06T18:46:34", "upload_time_iso_8601": "2020-04-06T18:46:34.754097Z", "url": "https://files.pythonhosted.org/packages/c4/3d/6c69b8fbdefbfa236dc23d7fa94d30a67b54e9c58ca9dec0b0dd2a60fbb0/iitb_oauth-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "332d7f44e78748bd42cf8c20af5a420c", "sha256": "600602eaa38fa274e1bc7307423c8e9517f73fbbf421551e91a19d52c3c99ca1"}, "downloads": -1, "filename": "iitb_oauth-1.2.tar.gz", "has_sig": false, "md5_digest": "332d7f44e78748bd42cf8c20af5a420c", "packagetype": "sdist", "python_version": "source", "requires_python": ">1.1.1", "size": 6315, "upload_time": "2020-04-06T18:46:36", "upload_time_iso_8601": "2020-04-06T18:46:36.000948Z", "url": "https://files.pythonhosted.org/packages/ae/95/22bc6b75c68544a034ba2d736d1a4801cd847dfd53074f861655bc175c67/iitb_oauth-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "713da2649f22d24825006640157e23b0", "sha256": "92c2dc593c16379b8da96c0c6eb6ec1f9f3c7a7d290fe88815e7173756ee6a1f"}, "downloads": -1, "filename": "iitb_oauth-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "713da2649f22d24825006640157e23b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">1.1.1", "size": 7342, "upload_time": "2020-04-06T18:46:34", "upload_time_iso_8601": "2020-04-06T18:46:34.754097Z", "url": "https://files.pythonhosted.org/packages/c4/3d/6c69b8fbdefbfa236dc23d7fa94d30a67b54e9c58ca9dec0b0dd2a60fbb0/iitb_oauth-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "332d7f44e78748bd42cf8c20af5a420c", "sha256": "600602eaa38fa274e1bc7307423c8e9517f73fbbf421551e91a19d52c3c99ca1"}, "downloads": -1, "filename": "iitb_oauth-1.2.tar.gz", "has_sig": false, "md5_digest": "332d7f44e78748bd42cf8c20af5a420c", "packagetype": "sdist", "python_version": "source", "requires_python": ">1.1.1", "size": 6315, "upload_time": "2020-04-06T18:46:36", "upload_time_iso_8601": "2020-04-06T18:46:36.000948Z", "url": "https://files.pythonhosted.org/packages/ae/95/22bc6b75c68544a034ba2d736d1a4801cd847dfd53074f861655bc175c67/iitb_oauth-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:02 2020"}