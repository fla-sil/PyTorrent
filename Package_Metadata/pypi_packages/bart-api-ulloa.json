{"info": {"author": "Luis Ulloa", "author_email": "ulloa@stanford.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# BART API Wrapper for Python 3+ (w/ JSON)\nBart API Documentation: https://api.bart.gov/docs/overview/index.aspx\n\nEvery amenity from the Bay Area Rapid Transit (BART) API is implemented in some way.\nThe methods sections below shows the available methods. \n\nEach API method will return relevant data, usually with new line characters so that when\nthe string is printed, well-formed information is printed. The second branch of this\nproject, BartApiForPrintingInfo, will always print the data. \n\nOne exception: the help class methods, which both return data and print it to screen.\n\nUse the help class methods to see what the syntax is for invoking a bart command.\n\nFor example, the general help function:\n\nInput\n\n    bart = Bart()   # note that key defaults to BART API's universal key\n    bart.help()\n\nOutput\n\n    Commands: help, routes, routeinfo \n    route_help(), routes(), route_info()\n\n    Commands: bsa, count, elev, help \n    bsa(), train_count(), elev(), elev_help()\n\n    Commands: etd, help \n    etd(), etd_help()\n\n    Commands: help, stns, stninfo \n    stn_help(), stninfo(), stnaccess(), stns()\n\n    Commands: arrive, depart, fare, help, holiday, routesched, scheds, special, stnsched \n    arrive(), depart(), fare(), sched_help(), holiday(), routesched(), scheds(), special(), stnsched()\n\n\nAlso, there is thorough documentation. The following...\n\n       help(classname.methodname)\n       help(classname)\n\n...will give you all of the necessary details about a method or class.\n\n\n## Methods\n    ----- Bart API -----\n    bart = Bart(key)  # key is optional, defaults to universal BART API key\n\n\n    Advisories\n    -----------\n    bsa(orig)\n    train_count()\n    elev()\n    elev_help()\n\n\n    Real-Time Estimates\n    -------------------\n    etd(orig, plat, direction)\n    etd_help()\n\n\n    Route Information\n    -----------------\n    routeinfo(route_num, sched_num, date)\n    routes(sched_num, date)\n    route_help()\n\n\n    Schedule Information\n    --------------------\n    arrive(orig, dest time, b, a)\n    depart(orig, dest, time, b, a)\n    fare(orig, dest, date, sched)\n    holiday()\n    routesched(route, date, time, sched)\n    scheds()\n    special()\n    stnsched(orig, date)\n    sched_help()\n\n\n    Station Information\n    -------------------\n    stn_help()\n    stninfo(orig)\n    stnaccess(orig)\n    stns()\n\n\n    Version Information\n    -------------------\n    version()\n\n## Installing\nThere's a package on PyPI.\n\n    pip3 install bart-api-ulloa\n\nJust make sure you have python3 and the requests library (don't even need an API key, \nsince BART has a universal key and it's built into this wrapper).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ulloaluis/bart-api-wrapper-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bart-api-ulloa", "package_url": "https://pypi.org/project/bart-api-ulloa/", "platform": "", "project_url": "https://pypi.org/project/bart-api-ulloa/", "project_urls": {"Homepage": "https://github.com/ulloaluis/bart-api-wrapper-python"}, "release_url": "https://pypi.org/project/bart-api-ulloa/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "bart api wrapper in python, now returns data instead of just printing", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BART API Wrapper for Python 3+ (w/ JSON)</h1>\n<p>Bart API Documentation: <a href=\"https://api.bart.gov/docs/overview/index.aspx\" rel=\"nofollow\">https://api.bart.gov/docs/overview/index.aspx</a></p>\n<p>Every amenity from the Bay Area Rapid Transit (BART) API is implemented in some way.\nThe methods sections below shows the available methods.</p>\n<p>Each API method will return relevant data, usually with new line characters so that when\nthe string is printed, well-formed information is printed. The second branch of this\nproject, BartApiForPrintingInfo, will always print the data.</p>\n<p>One exception: the help class methods, which both return data and print it to screen.</p>\n<p>Use the help class methods to see what the syntax is for invoking a bart command.</p>\n<p>For example, the general help function:</p>\n<p>Input</p>\n<pre><code>bart = Bart()   # note that key defaults to BART API's universal key\nbart.help()\n</code></pre>\n<p>Output</p>\n<pre><code>Commands: help, routes, routeinfo \nroute_help(), routes(), route_info()\n\nCommands: bsa, count, elev, help \nbsa(), train_count(), elev(), elev_help()\n\nCommands: etd, help \netd(), etd_help()\n\nCommands: help, stns, stninfo \nstn_help(), stninfo(), stnaccess(), stns()\n\nCommands: arrive, depart, fare, help, holiday, routesched, scheds, special, stnsched \narrive(), depart(), fare(), sched_help(), holiday(), routesched(), scheds(), special(), stnsched()\n</code></pre>\n<p>Also, there is thorough documentation. The following...</p>\n<pre><code>   help(classname.methodname)\n   help(classname)\n</code></pre>\n<p>...will give you all of the necessary details about a method or class.</p>\n<h2>Methods</h2>\n<pre><code>----- Bart API -----\nbart = Bart(key)  # key is optional, defaults to universal BART API key\n\n\nAdvisories\n-----------\nbsa(orig)\ntrain_count()\nelev()\nelev_help()\n\n\nReal-Time Estimates\n-------------------\netd(orig, plat, direction)\netd_help()\n\n\nRoute Information\n-----------------\nrouteinfo(route_num, sched_num, date)\nroutes(sched_num, date)\nroute_help()\n\n\nSchedule Information\n--------------------\narrive(orig, dest time, b, a)\ndepart(orig, dest, time, b, a)\nfare(orig, dest, date, sched)\nholiday()\nroutesched(route, date, time, sched)\nscheds()\nspecial()\nstnsched(orig, date)\nsched_help()\n\n\nStation Information\n-------------------\nstn_help()\nstninfo(orig)\nstnaccess(orig)\nstns()\n\n\nVersion Information\n-------------------\nversion()\n</code></pre>\n<h2>Installing</h2>\n<p>There's a package on PyPI.</p>\n<pre><code>pip3 install bart-api-ulloa\n</code></pre>\n<p>Just make sure you have python3 and the requests library (don't even need an API key,\nsince BART has a universal key and it's built into this wrapper).</p>\n\n          </div>"}, "last_serial": 4142757, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5e8c037015ce54fc364d40e16607364a", "sha256": "8e6cf71440ddc9d936dc9b429712055e2e7451e15001ebc67beaf60e7208f9d7"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5e8c037015ce54fc364d40e16607364a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7527, "upload_time": "2018-08-05T01:57:58", "upload_time_iso_8601": "2018-08-05T01:57:58.935312Z", "url": "https://files.pythonhosted.org/packages/8c/ca/0338838eccaefd29fe842fada3d482072b6b348e4bd7c7f4816766e4b580/bart_api_ulloa-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ddca31de11bbfd6333e0945c188b670", "sha256": "e439b2fbf022723c34aa28e2d3d82da27f7b775219573445d3f749d88168c1a0"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4ddca31de11bbfd6333e0945c188b670", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6932, "upload_time": "2018-08-05T01:58:00", "upload_time_iso_8601": "2018-08-05T01:58:00.671343Z", "url": "https://files.pythonhosted.org/packages/e4/ef/12266307bc7c0d1bfbe851f4135328cfcaa3d129a5522711a790d59e7062/bart_api_ulloa-0.0.1.tar.gz", "yanked": false}], "0.0.1.post1": [{"comment_text": "", "digests": {"md5": "b5316b52bc9bd836cc815d374d1b3369", "sha256": "5c007f461f2f3d8afab0a463205a5c5d866ffde19e7a5802cd5db3b6244fe60b"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "b5316b52bc9bd836cc815d374d1b3369", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7321, "upload_time": "2018-08-05T04:38:36", "upload_time_iso_8601": "2018-08-05T04:38:36.824406Z", "url": "https://files.pythonhosted.org/packages/1c/13/d485068ad2aa421bcdb1b984bfc56c73f0a78a2ac15c28a918b54caf8bd7/bart_api_ulloa-0.0.1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80fe8cffd86b743c60a2fafce698a528", "sha256": "8a2a48f47e627c882bf5531e4c0141d60d68150142e01b0216bc0578832fe6ce"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.1.post1.tar.gz", "has_sig": false, "md5_digest": "80fe8cffd86b743c60a2fafce698a528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6669, "upload_time": "2018-08-05T04:38:38", "upload_time_iso_8601": "2018-08-05T04:38:38.050079Z", "url": "https://files.pythonhosted.org/packages/58/77/68c2f605e8d8a5462183acfee7e04f658256319ec9837fc0cd07fbb9306f/bart_api_ulloa-0.0.1.post1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0f54d28697c284834b757c9ac4fe14e5", "sha256": "a50055941c3b6135d383963f9423eb205ffd72f5c5e5a6811a1513e7f8d84069"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f54d28697c284834b757c9ac4fe14e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7407, "upload_time": "2018-08-07T04:34:45", "upload_time_iso_8601": "2018-08-07T04:34:45.922227Z", "url": "https://files.pythonhosted.org/packages/0b/ad/0b002a57a8544f612fabb33b38c4b692e8c2157f58c23b7e62f6ad2218ef/bart_api_ulloa-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "018f4ae2bf836e749e4b8c31c04c6ad7", "sha256": "369aaa05157d55ee9663dbd1d9c971bca6e960fa9dfa1d5e14e731870e669008"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.2.tar.gz", "has_sig": false, "md5_digest": "018f4ae2bf836e749e4b8c31c04c6ad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6857, "upload_time": "2018-08-07T04:34:49", "upload_time_iso_8601": "2018-08-07T04:34:49.177418Z", "url": "https://files.pythonhosted.org/packages/35/43/e62db710b4118b99f32de35979904281996c283033b6f38670897e63fce2/bart_api_ulloa-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f54d28697c284834b757c9ac4fe14e5", "sha256": "a50055941c3b6135d383963f9423eb205ffd72f5c5e5a6811a1513e7f8d84069"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f54d28697c284834b757c9ac4fe14e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7407, "upload_time": "2018-08-07T04:34:45", "upload_time_iso_8601": "2018-08-07T04:34:45.922227Z", "url": "https://files.pythonhosted.org/packages/0b/ad/0b002a57a8544f612fabb33b38c4b692e8c2157f58c23b7e62f6ad2218ef/bart_api_ulloa-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "018f4ae2bf836e749e4b8c31c04c6ad7", "sha256": "369aaa05157d55ee9663dbd1d9c971bca6e960fa9dfa1d5e14e731870e669008"}, "downloads": -1, "filename": "bart_api_ulloa-0.0.2.tar.gz", "has_sig": false, "md5_digest": "018f4ae2bf836e749e4b8c31c04c6ad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6857, "upload_time": "2018-08-07T04:34:49", "upload_time_iso_8601": "2018-08-07T04:34:49.177418Z", "url": "https://files.pythonhosted.org/packages/35/43/e62db710b4118b99f32de35979904281996c283033b6f38670897e63fce2/bart_api_ulloa-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:51 2020"}