{"info": {"author": "Joshua Tauberer", "author_email": "jt@occams.info", "bugtrack_url": null, "classifiers": [], "description": "xml_diff\n========\n\nCompares the text inside two XML documents and marks up the differences with ``<del>`` and ``<ins>`` tags.\n\nThis is the result of about 7 years of trying to get this right and coded simply. I've used code like this in one form or another to compare bill text on GovTrack.us <https://www.govtrack.us>.\n\nThe comparison is completely blind to the structure of the two XML documents. It does a word-by-word comparison on the text content only, and then it goes back into the original documents and wraps changed text in new ``<del>`` and ``<ins>`` wrapper elements.\n\nThe documents are then concatenated to form a new document and the new document is printed on standard output. Or use this as a library and call ``compare`` yourself with two ``lxml.etree.Element`` nodes (the roots of your documents).\n\nThe script is written in Python 3.\n\nExample\n-------\n\nComparing these two documents::\n\n\t<html>\n\t\tHere is <b>some bold</b> text.\n\t</html>\n\nand::\n\n\t<html>\n\t\tHere is <i>some italic</i> content that shows how <tt>xml_diff</tt> works.\n\t</html>\t\n\nYields::\n\n\t<documents>\n\t\t<html>\n\t\t\tHere is <b>some <del>bold</del></b><del> text</del>.\n\t\t</html>\n\t\t<html>\n\t\t\tHere is <i>some <ins>italic</ins></i><ins> content that shows how </ins><tt><ins>xml_diff</ins></tt><ins> works</ins>.\n\t\t</html>\n\t</documents>\n\nOn Ubuntu, get dependencies with::\n\n\tapt-get install python3-lxml libxml2-dev libxslt1-dev\n\nFor really fast comparisons, get Google's Diff Match Patch library <https://code.google.com/p/google-diff-match-patch/>, as re-written and sped-up by @leutloff <https://github.com/leutloff/diff-match-patch-cpp-stl> and then turned into a Python extension module by me <https://github.com/JoshData/diff_match_patch-python>::\n\n\tpip3 install diff_match_patch_python\n\nOr if you can't install that for any reason, use the pure-Python library::\n\n\tpip3 install diff-match-patch\n\nThis is also at <https://code.google.com/p/google-diff-match-patch/source/browse/trunk/python3/diff_match_patch.py>. xml_diff will use whichever is installed.\n\nFinally, install this module::\n\n\tpip3 install xml_diff\n\nThen call the module from the command line::\n\n\tpython3 -m xml_diff  --tags del,ins doc1.xml doc2.xml > changes.xml\n\nOr use the module from Python::\n\n\timport lxml.etree\n\tfrom xml_diff import compare\n\n\tdom1 = lxml.etree.parse(\"doc1.xml\").getroot()\n\tdom2 = lxml.etree.parse(\"doc2.xml\").getroot()\n\tcomparison = compare(dom1, dom2)\n\nThe two DOMs are modified in-place.\n\nOptional Arguments\n------------------\n\nThe ``compare`` function takes other optional keyword arguments:\n\n``merge`` is a boolean (default false) that indicates whether the comparison function should perform a merge. If true, ``dom1`` will contain not just ``<del>`` nodes but also ``<ins>`` nodes and, similarly, ``dom2`` will contain not just ``<ins>`` nodes but also ``<del>`` nodes. Although the two DOMs will now contain the same semantic information about changes, and the same text content, each preserves their original structure --- since the comparison is only over text and not structure. The new ``ins``/``del`` nodes contain content from the other document (including whole subtrees), and so there's no guarantee that the final documents will conform to any particular structural schema after this operation.\n\n``word_separator_regex`` (default ``r\"\\s+|[^\\s\\w]\"``) is a regular expression for how to separate words. The default splits on one or more spaces in a row and single instances of non-word characters.\n\n``differ`` is a function that takes two arguments ``(text1, text2)`` and returns an iterator over difference operations given as tuples of the form ``(operation, text_length)``, where ``operation`` is one of ``\"=\"`` (no change in text), ``\"+\"`` (text inserted into ``text2``), or ``\"-\"`` (text deleted from ``text1``). (See xml_diff/__init__.py's ``default_differ`` function for how the default differ works.)\n\n``tags`` is a two-tuple of tag names to use for deleted and inserted content. The default is ``('del', 'ins')``.\n\n``make_tag_func`` is a function that takes one argument, which is either ``\"ins\"`` or ``\"del\"``, and returns a new ``lxml.etree.Element`` to be inserted into the DOM to wrap changed content. If given, the ``tags`` argument is ignored.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joshdata/xml_diff", "keywords": "compare diff XML", "license": "CC0 (copyright waived)", "maintainer": null, "maintainer_email": null, "name": "xml_diff", "package_url": "https://pypi.org/project/xml_diff/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xml_diff/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/joshdata/xml_diff"}, "release_url": "https://pypi.org/project/xml_diff/0.7.0/", "requires_dist": null, "requires_python": null, "summary": "Compares two XML documents by diffing their text, ignoring structure, and wraps changed text in <del>/<ins> tags.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Compares the text inside two XML documents and marks up the differences with <tt>&lt;del&gt;</tt> and <tt>&lt;ins&gt;</tt> tags.</p>\n<p>This is the result of about 7 years of trying to get this right and coded simply. I\u2019ve used code like this in one form or another to compare bill text on GovTrack.us &lt;<a href=\"https://www.govtrack.us\" rel=\"nofollow\">https://www.govtrack.us</a>&gt;.</p>\n<p>The comparison is completely blind to the structure of the two XML documents. It does a word-by-word comparison on the text content only, and then it goes back into the original documents and wraps changed text in new <tt>&lt;del&gt;</tt> and <tt>&lt;ins&gt;</tt> wrapper elements.</p>\n<p>The documents are then concatenated to form a new document and the new document is printed on standard output. Or use this as a library and call <tt>compare</tt> yourself with two <tt>lxml.etree.Element</tt> nodes (the roots of your documents).</p>\n<p>The script is written in Python 3.</p>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Comparing these two documents:</p>\n<pre>&lt;html&gt;\n        Here is &lt;b&gt;some bold&lt;/b&gt; text.\n&lt;/html&gt;\n</pre>\n<p>and:</p>\n<pre>&lt;html&gt;\n        Here is &lt;i&gt;some italic&lt;/i&gt; content that shows how &lt;tt&gt;xml_diff&lt;/tt&gt; works.\n&lt;/html&gt;\n</pre>\n<p>Yields:</p>\n<pre>&lt;documents&gt;\n        &lt;html&gt;\n                Here is &lt;b&gt;some &lt;del&gt;bold&lt;/del&gt;&lt;/b&gt;&lt;del&gt; text&lt;/del&gt;.\n        &lt;/html&gt;\n        &lt;html&gt;\n                Here is &lt;i&gt;some &lt;ins&gt;italic&lt;/ins&gt;&lt;/i&gt;&lt;ins&gt; content that shows how &lt;/ins&gt;&lt;tt&gt;&lt;ins&gt;xml_diff&lt;/ins&gt;&lt;/tt&gt;&lt;ins&gt; works&lt;/ins&gt;.\n        &lt;/html&gt;\n&lt;/documents&gt;\n</pre>\n<p>On Ubuntu, get dependencies with:</p>\n<pre>apt-get install python3-lxml libxml2-dev libxslt1-dev\n</pre>\n<p>For really fast comparisons, get Google\u2019s Diff Match Patch library &lt;<a href=\"https://code.google.com/p/google-diff-match-patch/\" rel=\"nofollow\">https://code.google.com/p/google-diff-match-patch/</a>&gt;, as re-written and sped-up by @leutloff &lt;<a href=\"https://github.com/leutloff/diff-match-patch-cpp-stl\" rel=\"nofollow\">https://github.com/leutloff/diff-match-patch-cpp-stl</a>&gt; and then turned into a Python extension module by me &lt;<a href=\"https://github.com/JoshData/diff_match_patch-python\" rel=\"nofollow\">https://github.com/JoshData/diff_match_patch-python</a>&gt;:</p>\n<pre>pip3 install diff_match_patch_python\n</pre>\n<p>Or if you can\u2019t install that for any reason, use the pure-Python library:</p>\n<pre>pip3 install diff-match-patch\n</pre>\n<p>This is also at &lt;<a href=\"https://code.google.com/p/google-diff-match-patch/source/browse/trunk/python3/diff_match_patch.py\" rel=\"nofollow\">https://code.google.com/p/google-diff-match-patch/source/browse/trunk/python3/diff_match_patch.py</a>&gt;. xml_diff will use whichever is installed.</p>\n<p>Finally, install this module:</p>\n<pre>pip3 install xml_diff\n</pre>\n<p>Then call the module from the command line:</p>\n<pre>python3 -m xml_diff  --tags del,ins doc1.xml doc2.xml &gt; changes.xml\n</pre>\n<p>Or use the module from Python:</p>\n<pre>import lxml.etree\nfrom xml_diff import compare\n\ndom1 = lxml.etree.parse(\"doc1.xml\").getroot()\ndom2 = lxml.etree.parse(\"doc2.xml\").getroot()\ncomparison = compare(dom1, dom2)\n</pre>\n<p>The two DOMs are modified in-place.</p>\n</div>\n<div id=\"optional-arguments\">\n<h2>Optional Arguments</h2>\n<p>The <tt>compare</tt> function takes other optional keyword arguments:</p>\n<p><tt>merge</tt> is a boolean (default false) that indicates whether the comparison function should perform a merge. If true, <tt>dom1</tt> will contain not just <tt>&lt;del&gt;</tt> nodes but also <tt>&lt;ins&gt;</tt> nodes and, similarly, <tt>dom2</tt> will contain not just <tt>&lt;ins&gt;</tt> nodes but also <tt>&lt;del&gt;</tt> nodes. Although the two DOMs will now contain the same semantic information about changes, and the same text content, each preserves their original structure \u2014 since the comparison is only over text and not structure. The new <tt>ins</tt>/<tt>del</tt> nodes contain content from the other document (including whole subtrees), and so there\u2019s no guarantee that the final documents will conform to any particular structural schema after this operation.</p>\n<p><tt>word_separator_regex</tt> (default <tt><span class=\"pre\">r\"\\s+|[^\\s\\w]\"</span></tt>) is a regular expression for how to separate words. The default splits on one or more spaces in a row and single instances of non-word characters.</p>\n<p><tt>differ</tt> is a function that takes two arguments <tt>(text1, text2)</tt> and returns an iterator over difference operations given as tuples of the form <tt>(operation, text_length)</tt>, where <tt>operation</tt> is one of <tt>\"=\"</tt> (no change in text), <tt>\"+\"</tt> (text inserted into <tt>text2</tt>), or <tt><span class=\"pre\">\"-\"</span></tt> (text deleted from <tt>text1</tt>). (See xml_diff/__init__.py\u2019s <tt>default_differ</tt> function for how the default differ works.)</p>\n<p><tt>tags</tt> is a two-tuple of tag names to use for deleted and inserted content. The default is <tt>('del', 'ins')</tt>.</p>\n<p><tt>make_tag_func</tt> is a function that takes one argument, which is either <tt>\"ins\"</tt> or <tt>\"del\"</tt>, and returns a new <tt>lxml.etree.Element</tt> to be inserted into the DOM to wrap changed content. If given, the <tt>tags</tt> argument is ignored.</p>\n</div>\n\n          </div>"}, "last_serial": 2051751, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "02f2032b4e982f9c83e0e8ebdb301bc8", "sha256": "a24908770b168591de49a1d9293490749653ba1fd2dfc543a5a1462585957174"}, "downloads": -1, "filename": "xml_diff-0.5.0.tar.gz", "has_sig": false, "md5_digest": "02f2032b4e982f9c83e0e8ebdb301bc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8492, "upload_time": "2014-06-26T12:22:59", "upload_time_iso_8601": "2014-06-26T12:22:59.180502Z", "url": "https://files.pythonhosted.org/packages/6b/2a/b2e9c90bf0796b5353ef6131b74a22217d2dc62c43f8cc4d2a12e571c1c1/xml_diff-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "c6074daadf8075c2e07960a07eafe1a0", "sha256": "77ec0433425998b47dc021a1f8f577fbc44170691534d3cb7e3747196ef191c3"}, "downloads": -1, "filename": "xml_diff-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c6074daadf8075c2e07960a07eafe1a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11026, "upload_time": "2014-08-13T21:04:57", "upload_time_iso_8601": "2014-08-13T21:04:57.583815Z", "url": "https://files.pythonhosted.org/packages/b4/8f/2fabe092a447c1530bab0749a3cf49697d3a012cd87a46dd016437dabcdf/xml_diff-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "248cc2b59b3c8636cfbd4bbadd0b2657", "sha256": "5555f796c9afe60d479a1d84c90a32a264cd6a5355eab4269b1e5b57b18b34a5"}, "downloads": -1, "filename": "xml_diff-0.7.0.tar.gz", "has_sig": false, "md5_digest": "248cc2b59b3c8636cfbd4bbadd0b2657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13651, "upload_time": "2016-04-07T16:25:57", "upload_time_iso_8601": "2016-04-07T16:25:57.732492Z", "url": "https://files.pythonhosted.org/packages/15/6a/0d6f5a41dcdd342d66a1007a33781f796c0ed512252c602949b71a7ba62b/xml_diff-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "248cc2b59b3c8636cfbd4bbadd0b2657", "sha256": "5555f796c9afe60d479a1d84c90a32a264cd6a5355eab4269b1e5b57b18b34a5"}, "downloads": -1, "filename": "xml_diff-0.7.0.tar.gz", "has_sig": false, "md5_digest": "248cc2b59b3c8636cfbd4bbadd0b2657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13651, "upload_time": "2016-04-07T16:25:57", "upload_time_iso_8601": "2016-04-07T16:25:57.732492Z", "url": "https://files.pythonhosted.org/packages/15/6a/0d6f5a41dcdd342d66a1007a33781f796c0ed512252c602949b71a7ba62b/xml_diff-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:02 2020"}