{"info": {"author": "Birdhouse", "author_email": "wps-dev at dkrz.de", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "******************************\nbirdhousebuilder.recipe.celery\n******************************\n\n.. image:: https://travis-ci.org/bird-house/birdhousebuilder.recipe.celery.svg?branch=master\n   :target: https://travis-ci.org/bird-house/birdhousebuilder.recipe.celery\n   :alt: Travis Build\n\nIntroduction\n************\n\n``birdhousebuilder.recipe.celery`` is a `Buildout`_ recipe to install and configure `Celery`_ Distributed Task Queue with `Anaconda`_.\nThis recipe is used by the `Birdhouse`_ project. \n\nThe recipe is based on `collective.recipe.celery <https://pypi.python.org/pypi/collective.recipe.celery>`_.\n\n\n.. _`Buildout`: http://buildout.org/\n.. _`Anaconda`: http://www.continuum.io/\n.. _`Birdhouse`: http://bird-house.github.io/\n.. _`Celery`: http://www.celeryproject.org/\n.. _`Supervisor`: http://supervisord.org/\n\nUsage\n*****\n\nThe recipe requires that Anaconda is already installed. You can use the buildout option ``anaconda-home`` to set the prefix for the anaconda installation. Otherwise the environment variable ``CONDA_PREFIX`` (variable is set when activating a conda environment) is used as conda prefix. \n\nThe recipe will install the ``celery`` package from a conda channel in a conda enviroment defined by ``CONDA_PREFIX``. It deploys a `Supervisor`_ configuration for Celery in ``{{prefix}}/etc/supervisor/conf.d/celery.conf``. Supervisor can be started with ``{{prefix}}/etc/init.d/supervisord start``.\n\nThe recipe depends on ``birdhousebuilder.recipe.conda`` and ``birdhousebuilder.recipe.supervisor``.\n\nSupported options\n=================\n\n**anaconda-home**\n   Buildout option pointing to the root folder of the Anaconda installation. Default: ``$HOME/anaconda``.\n\nBuildout options for ``celery``:\n\n**app**\n   The application instance to use for the celery worker.\n\n**eggs**\n    A list of additional eggs you want to make available to Celery. Use this to\n    add additional dependencies and the module(s) containing your task definitions.\n\n**use-celeryconfig**\n   Generate and use the ``celeryconfig.py``. Set to ``false`` if Celery is configured e.a. by `pyramid_celery <https://github.com/sontek/pyramid_celery>`_. Default: ``true``.\n\nCelery configuration options\n----------------------------\n\nThe following configuration options are supported. See `Celery documentation <http://docs.celeryproject.org/en/latest/configuration.html>`_ for more details.\n\n**broker-url**\n    The url of the broker. Default: ``redis://localhost:6379/0``\n\n**celery-result-backend**\n    The url of the backend used to store task results. Default: ``redis://localhost:6379/0``\n\n**celery-imports**\n    List of modules to import when celery starts.\n\n**celeryd-concurrency**\n    The number of concurrent worker processes/threads/green threads executing tasks. Defaults to the number of available CPUs.\n\n**loglevel**\n    Logging level, choose between DEBUG, INFO, WARNING, ERROR, CRITICAL, or FATAL. Default: WARNING\n\n\nExample usage\n=============\n\nThe following example ``buildout.cfg`` installs Celery with Anaconda and default options:\n\n.. code-block:: ini \n\n  [buildout]\n  parts = celery\n\n  anaconda-home = /home/myself/anaconda\n\n  [celery]\n  recipe = birdhousebuilder.recipe.celery\n  app = mystuff_app\n  eggs = mysuff\n\nThe next example shows a configuration with ``pyramid_celery`` and enabled Flower monitoring:\n\n.. code-block:: ini \n\n  [buildout]\n  parts = celery\n\n  anaconda-home = /home/myself/anaconda\n\n  [celery]\n  recipe = birdhousebuilder.recipe.celery\n  app = pyramid_celery.celery_app --ini default.ini\n  eggs = mysuff\n  use-celeryconfig = false\n\n\nAuthors\n*******\n\nCarsten Ehbrecht ehbrecht at dkrz.de\n\nChanges\n*******\n\n0.2.0 (2016-07-04)\n==================\n\n* using bool_option from zc.buildout.\n* using zc.recipe.deployment.\n* removed flower.\n\n0.1.3 (2016-06-13)\n==================\n\n* added update-conda option.\n* use flower, redis and pymongo only if necessary.\n\n0.1.2 (2016-06-03)\n==================\n\n* added CELERY_MONGODB_BACKEND_SETTINGS config option\n\n0.1.1 (2015-12-10)\n==================\n\n* Renamed celeryconfig.py template.\n\n0.1.0 (2015-12-10)\n==================\n\n* Initial Release.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bird-house/birdhousebuilder.recipe.celery", "keywords": "buildout recipe birdhouse conda celery", "license": "Apache License 2", "maintainer": "", "maintainer_email": "", "name": "birdhousebuilder.recipe.celery", "package_url": "https://pypi.org/project/birdhousebuilder.recipe.celery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/birdhousebuilder.recipe.celery/", "project_urls": {"Homepage": "https://github.com/bird-house/birdhousebuilder.recipe.celery"}, "release_url": "https://pypi.org/project/birdhousebuilder.recipe.celery/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "A Buildout recipe to install and configure Celery for Birdhouse.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/bird-house/birdhousebuilder.recipe.celery\" rel=\"nofollow\"><img alt=\"Travis Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1b5d26e34fdee7e74a12e0faf6fd171c030bbd6/68747470733a2f2f7472617669732d63692e6f72672f626972642d686f7573652f62697264686f7573656275696c6465722e7265636970652e63656c6572792e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>birdhousebuilder.recipe.celery</tt> is a <a href=\"http://buildout.org/\" rel=\"nofollow\">Buildout</a> recipe to install and configure <a href=\"http://www.celeryproject.org/\" rel=\"nofollow\">Celery</a> Distributed Task Queue with <a href=\"http://www.continuum.io/\" rel=\"nofollow\">Anaconda</a>.\nThis recipe is used by the <a href=\"http://bird-house.github.io/\" rel=\"nofollow\">Birdhouse</a> project.</p>\n<p>The recipe is based on <a href=\"https://pypi.python.org/pypi/collective.recipe.celery\" rel=\"nofollow\">collective.recipe.celery</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The recipe requires that Anaconda is already installed. You can use the buildout option <tt><span class=\"pre\">anaconda-home</span></tt> to set the prefix for the anaconda installation. Otherwise the environment variable <tt>CONDA_PREFIX</tt> (variable is set when activating a conda environment) is used as conda prefix.</p>\n<p>The recipe will install the <tt>celery</tt> package from a conda channel in a conda enviroment defined by <tt>CONDA_PREFIX</tt>. It deploys a <a href=\"http://supervisord.org/\" rel=\"nofollow\">Supervisor</a> configuration for Celery in <tt><span class=\"pre\">{{prefix}}/etc/supervisor/conf.d/celery.conf</span></tt>. Supervisor can be started with <tt><span class=\"pre\">{{prefix}}/etc/init.d/supervisord</span> start</tt>.</p>\n<p>The recipe depends on <tt>birdhousebuilder.recipe.conda</tt> and <tt>birdhousebuilder.recipe.supervisor</tt>.</p>\n<div id=\"supported-options\">\n<h3>Supported options</h3>\n<dl>\n<dt><strong>anaconda-home</strong></dt>\n<dd>Buildout option pointing to the root folder of the Anaconda installation. Default: <tt>$HOME/anaconda</tt>.</dd>\n</dl>\n<p>Buildout options for <tt>celery</tt>:</p>\n<dl>\n<dt><strong>app</strong></dt>\n<dd>The application instance to use for the celery worker.</dd>\n<dt><strong>eggs</strong></dt>\n<dd>A list of additional eggs you want to make available to Celery. Use this to\nadd additional dependencies and the module(s) containing your task definitions.</dd>\n<dt><strong>use-celeryconfig</strong></dt>\n<dd>Generate and use the <tt>celeryconfig.py</tt>. Set to <tt>false</tt> if Celery is configured e.a. by <a href=\"https://github.com/sontek/pyramid_celery\" rel=\"nofollow\">pyramid_celery</a>. Default: <tt>true</tt>.</dd>\n</dl>\n<div id=\"celery-configuration-options\">\n<h4>Celery configuration options</h4>\n<p>The following configuration options are supported. See <a href=\"http://docs.celeryproject.org/en/latest/configuration.html\" rel=\"nofollow\">Celery documentation</a> for more details.</p>\n<dl>\n<dt><strong>broker-url</strong></dt>\n<dd>The url of the broker. Default: <tt><span class=\"pre\">redis://localhost:6379/0</span></tt></dd>\n<dt><strong>celery-result-backend</strong></dt>\n<dd>The url of the backend used to store task results. Default: <tt><span class=\"pre\">redis://localhost:6379/0</span></tt></dd>\n<dt><strong>celery-imports</strong></dt>\n<dd>List of modules to import when celery starts.</dd>\n<dt><strong>celeryd-concurrency</strong></dt>\n<dd>The number of concurrent worker processes/threads/green threads executing tasks. Defaults to the number of available CPUs.</dd>\n<dt><strong>loglevel</strong></dt>\n<dd>Logging level, choose between DEBUG, INFO, WARNING, ERROR, CRITICAL, or FATAL. Default: WARNING</dd>\n</dl>\n</div>\n</div>\n<div id=\"example-usage\">\n<h3>Example usage</h3>\n<p>The following example <tt>buildout.cfg</tt> installs Celery with Anaconda and default options:</p>\n<pre><span class=\"k\">[buildout]</span>\n<span class=\"na\">parts</span> <span class=\"o\">=</span> <span class=\"s\">celery</span>\n\n<span class=\"na\">anaconda-home</span> <span class=\"o\">=</span> <span class=\"s\">/home/myself/anaconda</span>\n\n<span class=\"k\">[celery]</span>\n<span class=\"na\">recipe</span> <span class=\"o\">=</span> <span class=\"s\">birdhousebuilder.recipe.celery</span>\n<span class=\"na\">app</span> <span class=\"o\">=</span> <span class=\"s\">mystuff_app</span>\n<span class=\"na\">eggs</span> <span class=\"o\">=</span> <span class=\"s\">mysuff</span>\n</pre>\n<p>The next example shows a configuration with <tt>pyramid_celery</tt> and enabled Flower monitoring:</p>\n<pre><span class=\"k\">[buildout]</span>\n<span class=\"na\">parts</span> <span class=\"o\">=</span> <span class=\"s\">celery</span>\n\n<span class=\"na\">anaconda-home</span> <span class=\"o\">=</span> <span class=\"s\">/home/myself/anaconda</span>\n\n<span class=\"k\">[celery]</span>\n<span class=\"na\">recipe</span> <span class=\"o\">=</span> <span class=\"s\">birdhousebuilder.recipe.celery</span>\n<span class=\"na\">app</span> <span class=\"o\">=</span> <span class=\"s\">pyramid_celery.celery_app --ini default.ini</span>\n<span class=\"na\">eggs</span> <span class=\"o\">=</span> <span class=\"s\">mysuff</span>\n<span class=\"na\">use-celeryconfig</span> <span class=\"o\">=</span> <span class=\"s\">false</span>\n</pre>\n</div>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Carsten Ehbrecht ehbrecht at dkrz.de</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>0.2.0 (2016-07-04)</h3>\n<ul>\n<li>using bool_option from zc.buildout.</li>\n<li>using zc.recipe.deployment.</li>\n<li>removed flower.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.3 (2016-06-13)</h3>\n<ul>\n<li>added update-conda option.</li>\n<li>use flower, redis and pymongo only if necessary.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.2 (2016-06-03)</h3>\n<ul>\n<li>added CELERY_MONGODB_BACKEND_SETTINGS config option</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.1 (2015-12-10)</h3>\n<ul>\n<li>Renamed celeryconfig.py template.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2015-12-10)</h3>\n<ul>\n<li>Initial Release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2201634, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "04c42136e0893199d671c210ac9ae140", "sha256": "35067d2c64ee666a4cd1df3fcd8d0d02e194258ebe8c4d75978ffaba35ac6cc3"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "04c42136e0893199d671c210ac9ae140", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11249, "upload_time": "2015-12-10T14:20:05", "upload_time_iso_8601": "2015-12-10T14:20:05.756771Z", "url": "https://files.pythonhosted.org/packages/3e/df/bdc0f8018b59b49c6adfa2869cdfb04dfc0699e1409c9ad206984251d541/birdhousebuilder.recipe.celery-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90c957996141c5d968cc275f8a7ae756", "sha256": "6d0b1a08fb9f3f12fcc76f360f0a830f80ab93b8b6d909da9d8edd2cc807a37b"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "90c957996141c5d968cc275f8a7ae756", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7222, "upload_time": "2015-12-10T14:20:19", "upload_time_iso_8601": "2015-12-10T14:20:19.212924Z", "url": "https://files.pythonhosted.org/packages/46/f9/58122222db4b5dff88d3f147359565517501df3bc0751e19272196d53893/birdhousebuilder.recipe.celery-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d114cf03783a3a80a861bd4639256628", "sha256": "b15c7ae3e22f25ac7902c32a7f2e371aabbf98a808dd1c03ec10a96fbdfccd87"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d114cf03783a3a80a861bd4639256628", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11817, "upload_time": "2015-12-10T14:31:11", "upload_time_iso_8601": "2015-12-10T14:31:11.908461Z", "url": "https://files.pythonhosted.org/packages/36/80/641499ee5c9cef56ec9cc1724827d3fb10581d32d27b4f873c05c38b5525/birdhousebuilder.recipe.celery-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "098bb1d7254f4b94043caba8d0e4d35b", "sha256": "6b389e7226940a4b1de798544e01f33275bac8137519e5439cdc8af8dc50a7f3"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.1.tar.gz", "has_sig": false, "md5_digest": "098bb1d7254f4b94043caba8d0e4d35b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7008, "upload_time": "2015-12-10T14:31:22", "upload_time_iso_8601": "2015-12-10T14:31:22.099480Z", "url": "https://files.pythonhosted.org/packages/9d/b2/83caac83e61198365fe0c62ed19b04e313c9761e8c88e5633ce6c8294a22/birdhousebuilder.recipe.celery-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b49b23c92ac1e0153eaca4dbbcf49839", "sha256": "0ad00dfaed05d282ec993370e3b501aed15f6edd9c484517d9e77253e538d058"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b49b23c92ac1e0153eaca4dbbcf49839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7069, "upload_time": "2016-06-03T16:21:36", "upload_time_iso_8601": "2016-06-03T16:21:36.292449Z", "url": "https://files.pythonhosted.org/packages/0f/cb/c7f9233a081a7c91d88b953308e9ea1138fe14eef6cec4b144d56787ac00/birdhousebuilder.recipe.celery-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "03e8c79b2d9351b660a006314db098be", "sha256": "6742410a5c2daa1a38b9f3d26129c398b8a394f3ae179b37cae0de9538526d8e"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.1.3.tar.gz", "has_sig": false, "md5_digest": "03e8c79b2d9351b660a006314db098be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7211, "upload_time": "2016-06-13T15:10:39", "upload_time_iso_8601": "2016-06-13T15:10:39.351016Z", "url": "https://files.pythonhosted.org/packages/3f/44/74df2dfd593bfb69d40f8a1e7aedb45db6ca792b53ff0858a6a54f43e58b/birdhousebuilder.recipe.celery-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "44f47505a3cd5d10ce9a1b4431931fb4", "sha256": "017508727e953787a2aaf97c9040ed5eb5d05527082a749920d6402bd8db1bed"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "44f47505a3cd5d10ce9a1b4431931fb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7119, "upload_time": "2016-07-04T12:15:12", "upload_time_iso_8601": "2016-07-04T12:15:12.397009Z", "url": "https://files.pythonhosted.org/packages/01/2d/b26cb6f50243c44464ffd8e59139091c579007b7cb83ddff3979ec946f95/birdhousebuilder.recipe.celery-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44f47505a3cd5d10ce9a1b4431931fb4", "sha256": "017508727e953787a2aaf97c9040ed5eb5d05527082a749920d6402bd8db1bed"}, "downloads": -1, "filename": "birdhousebuilder.recipe.celery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "44f47505a3cd5d10ce9a1b4431931fb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7119, "upload_time": "2016-07-04T12:15:12", "upload_time_iso_8601": "2016-07-04T12:15:12.397009Z", "url": "https://files.pythonhosted.org/packages/01/2d/b26cb6f50243c44464ffd8e59139091c579007b7cb83ddff3979ec946f95/birdhousebuilder.recipe.celery-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:22 2020"}