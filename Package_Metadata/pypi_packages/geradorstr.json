{"info": {"author": "Alex Aleluia", "author_email": "alexaleluiaforgit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: Portuguese (Brazilian)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "String inteligente: feito para gerar uma sequ\u00eancia de linhas com partes fixas\ne outras din\u00e2micas.\nEx: insert sql.\n\nEntre \"\" ser\u00e3o sempre fixos.\nOs par\u00e2metros din\u00e2micos v\u00e3o aparecer na ordem que foram criados.\nSa\u00edda no stdout.\n\ngeradorstr \"INSERT INTO PRODUTO VALUES (\" parametros ... N\nex: geradorstr \"INSERT INTO PRODUTO VALUES (NULL, \" INT \",\" PRODUTO \", \" PALAVRA \");\" 8\n\nN: quantidade de linhas que ser\u00e3o geradas (OBRIGATORIO)\ncaso n\u00e3o for especificado o in\u00edcio e fim ser\u00e3o sequenciais\n\n== param\u00eatros ==\n\n-v --verson (vers\u00e3o do geradorstr)\n-h --help (ajuda)\n\nINT                    # sequencial, comeca de um\nINT{inicio:fim}        # randomico entre inicio e fim\n\nFLOAT                  # sequencial, comeca de um\nFLOAT{inicio:fim}      # randomico entre inicio e fim\n\nNOME                   # nome de pessoa aleatorio\n\nPRODUTO                # nome de produto aleatorio\n\nPALAVRA                # palavra aleatoria\nPALAVRA{n}             # n palavras aletorias sepadas por espaco\n\n== exemplos ==\n$ geradorstr \"tenho \" INT \" \" PALAVRA ' que valem ' INT{5:10} 5\n$ geradorstr \"INSER INT PRODUTOS VALUES (NULL, \" PRODUTO \", \" PALAVRA{2} \", \" FLOAT{100:200} \" )\" 3\n$ geradorstr altura ' + ' INT 10\n\nComo instalar:\n\n$ pip install geradorstr", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexaleluia12/geradorstr", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "geradorstr", "package_url": "https://pypi.org/project/geradorstr/", "platform": "", "project_url": "https://pypi.org/project/geradorstr/", "project_urls": {"Homepage": "https://github.com/alexaleluia12/geradorstr"}, "release_url": "https://pypi.org/project/geradorstr/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Generate smarts string", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>String inteligente: feito para gerar uma sequ\u00eancia de linhas com partes fixas\ne outras din\u00e2micas.\nEx: insert sql.</p>\n<p>Entre \u201c\u201d ser\u00e3o sempre fixos.\nOs par\u00e2metros din\u00e2micos v\u00e3o aparecer na ordem que foram criados.\nSa\u00edda no stdout.</p>\n<p>geradorstr \u201cINSERT INTO PRODUTO VALUES (\u201d parametros \u2026 N\nex: geradorstr \u201cINSERT INTO PRODUTO VALUES (NULL, \u201d INT \u201c,\u201d PRODUTO \u201c, \u201d PALAVRA \u201c);\u201d 8</p>\n<p>N: quantidade de linhas que ser\u00e3o geradas (OBRIGATORIO)\ncaso n\u00e3o for especificado o in\u00edcio e fim ser\u00e3o sequenciais</p>\n<p>== param\u00eatros ==</p>\n<p>-v \u2013verson (vers\u00e3o do geradorstr)\n-h \u2013help (ajuda)</p>\n<p>INT                    # sequencial, comeca de um\nINT{inicio:fim}        # randomico entre inicio e fim</p>\n<p>FLOAT                  # sequencial, comeca de um\nFLOAT{inicio:fim}      # randomico entre inicio e fim</p>\n<p>NOME                   # nome de pessoa aleatorio</p>\n<p>PRODUTO                # nome de produto aleatorio</p>\n<p>PALAVRA                # palavra aleatoria\nPALAVRA{n}             # n palavras aletorias sepadas por espaco</p>\n<p>== exemplos ==\n$ geradorstr \u201ctenho \u201d INT \u201d \u201d PALAVRA \u2018 que valem \u2018 INT{5:10} 5\n$ geradorstr \u201cINSER INT PRODUTOS VALUES (NULL, \u201d PRODUTO \u201c, \u201d PALAVRA{2} \u201c, \u201d FLOAT{100:200} \u201d )\u201d 3\n$ geradorstr altura \u2018 + \u2018 INT 10</p>\n<p>Como instalar:</p>\n<p>$ pip install geradorstr</p>\n\n          </div>"}, "last_serial": 2873861, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b3ef46c0d6b1c6440ea58e42be3cbf63", "sha256": "6fc15f269a06583e6506cce3d20cce54c8f21803ee8180bd0d0dfc4e616259f1"}, "downloads": -1, "filename": "geradorstr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b3ef46c0d6b1c6440ea58e42be3cbf63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5859, "upload_time": "2017-05-14T19:16:56", "upload_time_iso_8601": "2017-05-14T19:16:56.760425Z", "url": "https://files.pythonhosted.org/packages/4a/3d/8a9ff7d3ff00a7b91ef7f0889c3014e5227e00942da9767a837b80e7d23b/geradorstr-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3ef46c0d6b1c6440ea58e42be3cbf63", "sha256": "6fc15f269a06583e6506cce3d20cce54c8f21803ee8180bd0d0dfc4e616259f1"}, "downloads": -1, "filename": "geradorstr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b3ef46c0d6b1c6440ea58e42be3cbf63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5859, "upload_time": "2017-05-14T19:16:56", "upload_time_iso_8601": "2017-05-14T19:16:56.760425Z", "url": "https://files.pythonhosted.org/packages/4a/3d/8a9ff7d3ff00a7b91ef7f0889c3014e5227e00942da9767a837b80e7d23b/geradorstr-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:53 2020"}