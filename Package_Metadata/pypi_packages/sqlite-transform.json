{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# sqlite-transform\n\n[![PyPI](https://img.shields.io/pypi/v/sqlite-transform.svg)](https://pypi.org/project/sqlite-transform/)\n[![CircleCI](https://circleci.com/gh/simonw/sqlite-transform.svg?style=svg)](https://circleci.com/gh/simonw/sqlite-transform)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/dogsheep/sqlite-transform/blob/master/LICENSE)\n\nTool for running transformations on columns in a SQLite database.\n\n## How to install\n\n    $ pip install sqlite-transform\n\n## parsedate and parsedatetime\n\nThese subcommands will run all values in the specified column through `dateutils.parser.parse()` and replace them with the result, formatted as an ISO timestamp or ISO date.\n\nFor example, if a row in the database has an `opened` column which contains `10/10/2019 08:10:00 PM`, running the following command:\n\n    $ sqlite-transform parsedatetime my.db mytable opened\n\nWill result in that value being replaced by `2019-10-10T20:10:00`.\n\nUsing the `parsedate` subcommand here would result in `2019-10-10` instead.\n\n## lambda for executing your own code\n\nThe `lambda` subcommand lets you specify Python code which will be executed against the column.\n\nHere's how to convert a column to uppercase:\n\n    $ sqlite-transform lambda my.db mytable mycolumn --code='str(value).upper()'\n\nThe code you provide will be compiled into a function that takes `value` as a single argument. You can break your function body into multiple lines, provided the last line is a `return` statement:\n\n    $ sqlite-transform lambda my.db mytable mycolumn --code='value = str(value)\n    return value.upper()'\n\nYou can also specify Python modules that should be imported and made available to your code using one or more `--import` options:\n\n    $ sqlite-transform lambda my.db mytable mycolumn \\\n        --code='\"\\n\".join(textwrap.wrap(value, 10))' \\\n        --import=textwrap\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/sqlite-transform", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "sqlite-transform", "package_url": "https://pypi.org/project/sqlite-transform/", "platform": "", "project_url": "https://pypi.org/project/sqlite-transform/", "project_urls": {"Homepage": "https://github.com/simonw/sqlite-transform"}, "release_url": "https://pypi.org/project/sqlite-transform/0.3/", "requires_dist": ["dateutils", "tqdm", "click", "pytest ; extra == 'test'", "sqlite-utils ; extra == 'test'"], "requires_python": "", "summary": "Tool for running transformations on columns in a SQLite database.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sqlite-transform</h1>\n<p><a href=\"https://pypi.org/project/sqlite-transform/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7edb513272398d4ce07173e37ee1678ef891be4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73716c6974652d7472616e73666f726d2e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/sqlite-transform\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce1bf1ed9dc1373b2c491b38fbc981d8135e2fc9/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f73716c6974652d7472616e73666f726d2e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/dogsheep/sqlite-transform/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Tool for running transformations on columns in a SQLite database.</p>\n<h2>How to install</h2>\n<pre><code>$ pip install sqlite-transform\n</code></pre>\n<h2>parsedate and parsedatetime</h2>\n<p>These subcommands will run all values in the specified column through <code>dateutils.parser.parse()</code> and replace them with the result, formatted as an ISO timestamp or ISO date.</p>\n<p>For example, if a row in the database has an <code>opened</code> column which contains <code>10/10/2019 08:10:00 PM</code>, running the following command:</p>\n<pre><code>$ sqlite-transform parsedatetime my.db mytable opened\n</code></pre>\n<p>Will result in that value being replaced by <code>2019-10-10T20:10:00</code>.</p>\n<p>Using the <code>parsedate</code> subcommand here would result in <code>2019-10-10</code> instead.</p>\n<h2>lambda for executing your own code</h2>\n<p>The <code>lambda</code> subcommand lets you specify Python code which will be executed against the column.</p>\n<p>Here's how to convert a column to uppercase:</p>\n<pre><code>$ sqlite-transform lambda my.db mytable mycolumn --code='str(value).upper()'\n</code></pre>\n<p>The code you provide will be compiled into a function that takes <code>value</code> as a single argument. You can break your function body into multiple lines, provided the last line is a <code>return</code> statement:</p>\n<pre><code>$ sqlite-transform lambda my.db mytable mycolumn --code='value = str(value)\nreturn value.upper()'\n</code></pre>\n<p>You can also specify Python modules that should be imported and made available to your code using one or more <code>--import</code> options:</p>\n<pre><code>$ sqlite-transform lambda my.db mytable mycolumn \\\n    --code='\"\\n\".join(textwrap.wrap(value, 10))' \\\n    --import=textwrap\n</code></pre>\n\n          </div>"}, "last_serial": 6073094, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "984a2f648b210fde7ac1918cc4f8fd7e", "sha256": "dedfe423368eb2b5b8cb03c6c3a240d054b5d808602deb74747ad31b50ba937b"}, "downloads": -1, "filename": "sqlite_transform-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "984a2f648b210fde7ac1918cc4f8fd7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6954, "upload_time": "2019-11-04T01:09:14", "upload_time_iso_8601": "2019-11-04T01:09:14.801024Z", "url": "https://files.pythonhosted.org/packages/0d/f3/a1d3efbdef0178fb370a6ff5d5251f690ca7e95a34840d1fd315797ec1ac/sqlite_transform-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "25e85660bbac54f8a767105095932346", "sha256": "0a87c91639a51ecc4baae4ed94c0075063b1dffec9b694011da6d4bb7dc09f5c"}, "downloads": -1, "filename": "sqlite_transform-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "25e85660bbac54f8a767105095932346", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7675, "upload_time": "2019-11-04T02:22:09", "upload_time_iso_8601": "2019-11-04T02:22:09.327327Z", "url": "https://files.pythonhosted.org/packages/a6/2e/586adb881a208db21e386e7f51c07c4129d4f29a8b26089a44b906466733/sqlite_transform-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e90b19688735903f36ee345082265171", "sha256": "27061e65d9b9092a28f447d3a05ba8b29991c64835bc5a59964d351a465afc73"}, "downloads": -1, "filename": "sqlite_transform-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e90b19688735903f36ee345082265171", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7753, "upload_time": "2019-11-04T04:38:36", "upload_time_iso_8601": "2019-11-04T04:38:36.995699Z", "url": "https://files.pythonhosted.org/packages/27/0f/983d68bef5e5aa1dd35d5a32e9f139c1f207df0add39f0038cd7132b2326/sqlite_transform-0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e90b19688735903f36ee345082265171", "sha256": "27061e65d9b9092a28f447d3a05ba8b29991c64835bc5a59964d351a465afc73"}, "downloads": -1, "filename": "sqlite_transform-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e90b19688735903f36ee345082265171", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7753, "upload_time": "2019-11-04T04:38:36", "upload_time_iso_8601": "2019-11-04T04:38:36.995699Z", "url": "https://files.pythonhosted.org/packages/27/0f/983d68bef5e5aa1dd35d5a32e9f139c1f207df0add39f0038cd7132b2326/sqlite_transform-0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:40 2020"}