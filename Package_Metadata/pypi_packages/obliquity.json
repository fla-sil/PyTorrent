{"info": {"author": "Timothy D. Morton", "author_email": "tim.morton@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Astronomy"], "description": "=========\nobliquity\n=========\n\nInfer the stellar obliquity distribution of transiting planet systems, following `Morton & Winn (2014) <http://arxiv.org/abs/1408.6606>`_. \n\nMakes use of the `simpledist <https://github.com/timothydmorton/simpledist>`_ package, which will be installed \nas a dependency with installation of this package.\n\nThere are two main tasks this package does:\n\n1. Calculate posteriors of cos(I) given measurements of Rstar, Prot, Vsin(I).\n\n2. Infer the Fisher distribution parameter $\\kappa$ given a sample of cos(I) posteriors.\n\nSee below for a quick intro, and the `notebook demo <http://nbviewer.ipython.org/github/timothydmorton/obliquity/blob/master/notebooks/demo.ipynb>`_ for more.\n\nInstallation\n------------\n\n::\n\n   $ pip install [--user] obliquity\n   \nOr clone the repository and install:\n\n::\n\n    $ git clone https://github.com/timothydmorton/obliquity.git\n    $ cd obliquity\n    $ python setup.py install [--user]\n\nBasic usage\n-----------\n\n.. code-block:: python\n\n    from obliquity.distributions import Cosi_Distribution\n    cosi_dist = Cosi_Distribution((1.3,0.1),(15,0.3),(3.5,0.5)) #Radius, Prot, VsinI\n    cosi_dist.summary_plot()\n\nCommand-line scripts\n--------------------\n\nIn addition to the ``obliquity`` module, this package also installs a few command-line scripts.  \n\n``write_cosi_dist``: This calculates a ``Cosi_Distribution`` given input parameters, and writes the distribution to \nfile (`.h5` format that can be easily re-loaded back). e.g.,\n\n::\n\n    $ write_cosi_dist test.h5 -R 1.3 0.1 -P 14 0.3 -V 4 0.5\n\nAfter having done this, you could launch up python and read in the distribution as follows:\n\n.. code-block:: python\n\n    from obliquity import Cosi_Distribution_FromH5\n    cosi_dist = Cosi_Distribution_FromH5('test.h5')\n    cosi_dist.summary_plot()\n\nThis is particularly useful for running batch jobs and doing more analysis later.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timothydmorton/obliquity", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "obliquity", "package_url": "https://pypi.org/project/obliquity/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/obliquity/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/timothydmorton/obliquity"}, "release_url": "https://pypi.org/project/obliquity/0.2/", "requires_dist": null, "requires_python": null, "summary": "Infer the stellar obliquity distribution of transiting planet systems.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Infer the stellar obliquity distribution of transiting planet systems, following <a href=\"http://arxiv.org/abs/1408.6606\" rel=\"nofollow\">Morton &amp; Winn (2014)</a>.</p>\n<p>Makes use of the <a href=\"https://github.com/timothydmorton/simpledist\" rel=\"nofollow\">simpledist</a> package, which will be installed\nas a dependency with installation of this package.</p>\n<p>There are two main tasks this package does:</p>\n<ol>\n<li>Calculate posteriors of cos(I) given measurements of Rstar, Prot, Vsin(I).</li>\n<li>Infer the Fisher distribution parameter $kappa$ given a sample of cos(I) posteriors.</li>\n</ol>\n<p>See below for a quick intro, and the <a href=\"http://nbviewer.ipython.org/github/timothydmorton/obliquity/blob/master/notebooks/demo.ipynb\" rel=\"nofollow\">notebook demo</a> for more.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install [--user] obliquity\n</pre>\n<p>Or clone the repository and install:</p>\n<pre>$ git clone https://github.com/timothydmorton/obliquity.git\n$ cd obliquity\n$ python setup.py install [--user]\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">obliquity.distributions</span> <span class=\"kn\">import</span> <span class=\"n\">Cosi_Distribution</span>\n<span class=\"n\">cosi_dist</span> <span class=\"o\">=</span> <span class=\"n\">Cosi_Distribution</span><span class=\"p\">((</span><span class=\"mf\">1.3</span><span class=\"p\">,</span><span class=\"mf\">0.1</span><span class=\"p\">),(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mf\">0.3</span><span class=\"p\">),(</span><span class=\"mf\">3.5</span><span class=\"p\">,</span><span class=\"mf\">0.5</span><span class=\"p\">))</span> <span class=\"c1\">#Radius, Prot, VsinI</span>\n<span class=\"n\">cosi_dist</span><span class=\"o\">.</span><span class=\"n\">summary_plot</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"command-line-scripts\">\n<h2>Command-line scripts</h2>\n<p>In addition to the <tt>obliquity</tt> module, this package also installs a few command-line scripts.</p>\n<p><tt>write_cosi_dist</tt>: This calculates a <tt>Cosi_Distribution</tt> given input parameters, and writes the distribution to\nfile (<cite>.h5</cite> format that can be easily re-loaded back). e.g.,</p>\n<pre>$ write_cosi_dist test.h5 -R 1.3 0.1 -P 14 0.3 -V 4 0.5\n</pre>\n<p>After having done this, you could launch up python and read in the distribution as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">obliquity</span> <span class=\"kn\">import</span> <span class=\"n\">Cosi_Distribution_FromH5</span>\n<span class=\"n\">cosi_dist</span> <span class=\"o\">=</span> <span class=\"n\">Cosi_Distribution_FromH5</span><span class=\"p\">(</span><span class=\"s1\">'test.h5'</span><span class=\"p\">)</span>\n<span class=\"n\">cosi_dist</span><span class=\"o\">.</span><span class=\"n\">summary_plot</span><span class=\"p\">()</span>\n</pre>\n<p>This is particularly useful for running batch jobs and doing more analysis later.</p>\n</div>\n\n          </div>"}, "last_serial": 1281765, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "33ac244f5f197b0c7faf236a0ff73e55", "sha256": "8a9cb755bf109d9510da756f05982984487da857a32a7fe99d74b1807c793e25"}, "downloads": -1, "filename": "obliquity-0.1.tar.gz", "has_sig": false, "md5_digest": "33ac244f5f197b0c7faf236a0ff73e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 505297, "upload_time": "2014-10-24T16:56:42", "upload_time_iso_8601": "2014-10-24T16:56:42.537298Z", "url": "https://files.pythonhosted.org/packages/f0/c3/e2fc244c985e020c496a93d23b6d7e1bad87daf54dbe351c0ec2dbdc86ea/obliquity-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c7e7aba8ce450cd02d802d244d2503e4", "sha256": "4ef062f74cae90d08ce670a4ebb265ac91d2a22d343da3890ade3fa2747d927d"}, "downloads": -1, "filename": "obliquity-0.2.tar.gz", "has_sig": false, "md5_digest": "c7e7aba8ce450cd02d802d244d2503e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 506820, "upload_time": "2014-10-24T18:40:17", "upload_time_iso_8601": "2014-10-24T18:40:17.000175Z", "url": "https://files.pythonhosted.org/packages/8e/32/997a706c93f3be76694aa5073e1084873155f696512fd8c901c7fe299f49/obliquity-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7e7aba8ce450cd02d802d244d2503e4", "sha256": "4ef062f74cae90d08ce670a4ebb265ac91d2a22d343da3890ade3fa2747d927d"}, "downloads": -1, "filename": "obliquity-0.2.tar.gz", "has_sig": false, "md5_digest": "c7e7aba8ce450cd02d802d244d2503e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 506820, "upload_time": "2014-10-24T18:40:17", "upload_time_iso_8601": "2014-10-24T18:40:17.000175Z", "url": "https://files.pythonhosted.org/packages/8e/32/997a706c93f3be76694aa5073e1084873155f696512fd8c901c7fe299f49/obliquity-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:47 2020"}