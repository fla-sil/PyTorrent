{"info": {"author": "Patrick Hastings", "author_email": "phastings@openmobo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Public Server Automator\n## V1.0.1\n\n[PublicServerAutomator Github](https://github.com/gnubyte/publicServerAutomator)\n\n## Purpose\n\nThis is a package intended to offer a much simpler, no hickups, no learning curve package + software alternative to Ansible/chef/puppet\n\n## Installation\n\nInstall via pip\n```\npip install publicServerAutomator\n```\n\n\n##  Usage\n\n\n\n### When using a private key\n\n```\nfrom publicServerAutomator import Server\n\ndockerInstructions = [\n    \"apt-get update -y\",\n    \"apt-get install apt-transport-https -y\",\n    \"apt-get install software-properties-common -y\",\n    \"apt-get install curl -y\",\n    \"apt-get install gnupg2 -y\",\n    \"apt-get install git -y\",\n    \"apt-get install acl -y\",\n    \"apt-get install fail2ban -y\"\n    '''add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"''',\n    \"apt-get update -y\",\n    \"apt-get install docker-ce -y\",\n    \"docker run hello-world\"\n]\n\nnewDocker = Server(inputKeyPath=\"publickey.pem\", inputKeyPassword='PASS', inputServerIP=\"0.0.0.0\" )\nnewDocker.set_commands(commandList=dockerInstructions)\nnewDocker.connect()\nnewDocker.run_commands()\n```\n\n### Without using a private key\n\n\n```\nfrom publicServerAutomator import Server\n\ndockerInstructions = [\n    \"apt-get update -y\",\n    \"apt-get install apt-transport-https -y\",\n    \"apt-get install software-properties-common -y\",\n    \"apt-get install curl -y\",\n    \"apt-get install gnupg2 -y\",\n    \"apt-get install git -y\",\n    \"apt-get install acl -y\",\n    \"apt-get install fail2ban -y\"\n    '''add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"''',\n    \"apt-get update -y\",\n    \"apt-get install docker-ce -y\",\n    \"docker run hello-world\"\n]\n\nnewDocker = Server(inputServerIP='8.8.8.8',inputUserName='root', inputPassword='123lookatme', inputKeyPath='')\nnewDocker.set_commands(commandList=dockerInstructions)\nnewDocker.connect()\nnewDocker.run_commands()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gnubyte/publicServerAutomator", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "publicServerAutomator", "package_url": "https://pypi.org/project/publicServerAutomator/", "platform": "", "project_url": "https://pypi.org/project/publicServerAutomator/", "project_urls": {"Homepage": "https://github.com/gnubyte/publicServerAutomator"}, "release_url": "https://pypi.org/project/publicServerAutomator/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "An SSH Python automation tool for quickly getting things done", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Public Server Automator</h1>\n<h2>V1.0.1</h2>\n<p><a href=\"https://github.com/gnubyte/publicServerAutomator\" rel=\"nofollow\">PublicServerAutomator Github</a></p>\n<h2>Purpose</h2>\n<p>This is a package intended to offer a much simpler, no hickups, no learning curve package + software alternative to Ansible/chef/puppet</p>\n<h2>Installation</h2>\n<p>Install via pip</p>\n<pre><code>pip install publicServerAutomator\n</code></pre>\n<h2>Usage</h2>\n<h3>When using a private key</h3>\n<pre><code>from publicServerAutomator import Server\n\ndockerInstructions = [\n    \"apt-get update -y\",\n    \"apt-get install apt-transport-https -y\",\n    \"apt-get install software-properties-common -y\",\n    \"apt-get install curl -y\",\n    \"apt-get install gnupg2 -y\",\n    \"apt-get install git -y\",\n    \"apt-get install acl -y\",\n    \"apt-get install fail2ban -y\"\n    '''add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"''',\n    \"apt-get update -y\",\n    \"apt-get install docker-ce -y\",\n    \"docker run hello-world\"\n]\n\nnewDocker = Server(inputKeyPath=\"publickey.pem\", inputKeyPassword='PASS', inputServerIP=\"0.0.0.0\" )\nnewDocker.set_commands(commandList=dockerInstructions)\nnewDocker.connect()\nnewDocker.run_commands()\n</code></pre>\n<h3>Without using a private key</h3>\n<pre><code>from publicServerAutomator import Server\n\ndockerInstructions = [\n    \"apt-get update -y\",\n    \"apt-get install apt-transport-https -y\",\n    \"apt-get install software-properties-common -y\",\n    \"apt-get install curl -y\",\n    \"apt-get install gnupg2 -y\",\n    \"apt-get install git -y\",\n    \"apt-get install acl -y\",\n    \"apt-get install fail2ban -y\"\n    '''add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"''',\n    \"apt-get update -y\",\n    \"apt-get install docker-ce -y\",\n    \"docker run hello-world\"\n]\n\nnewDocker = Server(inputServerIP='8.8.8.8',inputUserName='root', inputPassword='123lookatme', inputKeyPath='')\nnewDocker.set_commands(commandList=dockerInstructions)\nnewDocker.connect()\nnewDocker.run_commands()\n</code></pre>\n\n          </div>"}, "last_serial": 5862604, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "679fce3545404152a042110e32a47cd4", "sha256": "2c2048f696d0cebb7bc697665be449f069f7f68e5adcd2da44e6ca34092fa8bb"}, "downloads": -1, "filename": "publicServerAutomator-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "679fce3545404152a042110e32a47cd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4563, "upload_time": "2019-07-25T19:09:31", "upload_time_iso_8601": "2019-07-25T19:09:31.492616Z", "url": "https://files.pythonhosted.org/packages/3c/8e/5fcaa6c0aa90dc79d3d3863aaabe23cd090e048340595f14168c333a2e73/publicServerAutomator-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cd03d4af7541efebb1f4237601f5e86", "sha256": "2fa39410beedc921936225689e0514fc13ce9c1155541229c5fe23d1721c1219"}, "downloads": -1, "filename": "publicServerAutomator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5cd03d4af7541efebb1f4237601f5e86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3369, "upload_time": "2019-07-25T19:09:33", "upload_time_iso_8601": "2019-07-25T19:09:33.747703Z", "url": "https://files.pythonhosted.org/packages/1c/fb/13ca463d45be8f6b780fd83d539b3cbfe30c33295f50716e863e131e9659/publicServerAutomator-0.0.1.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "dad30075167c4ce630ad59951481735c", "sha256": "cb99c9d1967090eb479fa2ac4408086ef5e9e31c45fdfd0e39f2d5352e846a32"}, "downloads": -1, "filename": "publicServerAutomator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dad30075167c4ce630ad59951481735c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3436, "upload_time": "2019-09-20T14:25:55", "upload_time_iso_8601": "2019-09-20T14:25:55.042721Z", "url": "https://files.pythonhosted.org/packages/ce/bd/8d7252d52fe7ce21ea5336c5eb4992e1beb72a74e41db0d860d70847a1ec/publicServerAutomator-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dad30075167c4ce630ad59951481735c", "sha256": "cb99c9d1967090eb479fa2ac4408086ef5e9e31c45fdfd0e39f2d5352e846a32"}, "downloads": -1, "filename": "publicServerAutomator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dad30075167c4ce630ad59951481735c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3436, "upload_time": "2019-09-20T14:25:55", "upload_time_iso_8601": "2019-09-20T14:25:55.042721Z", "url": "https://files.pythonhosted.org/packages/ce/bd/8d7252d52fe7ce21ea5336c5eb4992e1beb72a74e41db0d860d70847a1ec/publicServerAutomator-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:51 2020"}