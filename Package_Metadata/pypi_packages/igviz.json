{"info": {"author": "Ashton Sidhu", "author_email": "ashton.sidhu1994@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Interactive Graph Visualization\n![Tests](https://github.com/Ashton-Sidhu/plotly-graph/workflows/Tests/badge.svg) ![](https://img.shields.io/pypi/pyversions/igviz) ![](https://img.shields.io/pypi/v/igviz?color=green) [![Documentation Status](https://readthedocs.org/projects/igviz/badge/?version=latest)](https://igviz.readthedocs.io/en/latest/?badge=latest)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Introduction](#introduction)\n- [Usage](#usage)\n- [Installation](#installation)\n- [Customizable Parameters](#customizable-parameters)\n- [Feedback](#feedback)\n- [Contributors](#contributors)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Introduction\n\nInteractive Graph Visualization (igviz) is a library to help visualize graphs interactively using Plotly. This library provides a customizable api for visualizing graphs in a neat, visually appealing plot. It keeps larger graphs much more clean by displaying minimal text information and highlights node properties and relationships using colour and size while providing the same text information when needed.\n\n![Default Visualization](docs/images/default.png)\n\n## Usage\n\nExample notebooks can be found [here](https://github.com/Ashton-Sidhu/plotly-graph/tree/master/examples).\n\n### Basic\n\n```python\nimport networkx as nx\nimport igviz as ig\n\nG = nx.random_geometric_graph(200, 0.125)\nnx.set_node_attributes(G, 3, \"prop\")\nnx.set_edge_attributes(G, 5, \"edge_prop\")\n\nig.plot(G)\n```\n\nThe default plot colors and sizes the nodes by the Degree but it is configurable.\n\n![Default Visualization](docs/images/default.png)\n\n### Configurations\n\n```python\nig.plot(\n    G, # Your graph\n    title=\"My Graph\",\n    size_method=\"static\", # Makes node sizes the same\n    color_method=\"##ffcccb\", # Makes all the node colours black,\n    node_text=[\"prop\"], # Adds the 'prop' property to the hover text of the node\n    annotation_text=\"Visualization made by <a href='https://github.com/Ashton-Sidhu/plotly-graph'>igviz</a> & plotly.\", # Adds a text annotation to the graph\n)\n```\n![](docs/images/config1.png)\n\n```python\nig.plot(\n    G,\n    title=\"My Graph\",\n    size_method=\"prop\", # Makes node sizes the size of the \"prop\" property\n    color_method=\"prop\", # Colors the nodes based off the \"prop\" property and a color scale,\n    node_text=[\"prop\"], # Adds the 'prop' property to the hover text of the node\n)\n```\n\n![](docs/images/config2.png)\n\n```python\nig.plot(\n    G,\n    node_label=\"prop\", # Display the \"prop\" attribute as a label on the node\n    node_label_position=\"top center\", # Display the node label directly above the node\n    edge_text=[\"edge_prop\"], # Display the \"edge_prop\" attribute on hover over the edge\n    edge_label=\"edge_prop\", # Display the \"edge_prop\" attribute on the edge\n    edge_label_position=\"bottom center\", # Display the edge label below the edge\n)\n```\n\n![](docs/images/labels.png)\n\n#### How to add your own custom sizing method and colour method\n\nTo add your own custom sizing and color method, just pass a list to the `size_method` and `color_method`.\n\n```python\ncolor_list = []\nsizing_list = []\n\nfor node in G.nodes():\n    size_and_color = G.degree(node) * 3\n\n    color_list.append(size_and_color)\n    sizing_list.append(size_and_color)\n\nig.plot(\n    G,\n    title=\"My Graph\",\n    size_method=sizing_list, # Makes node sizes the size of the \"prop\" property\n    color_method=color_list, # Colors the nodes based off the \"prop\" property and a color scale,\n    node_text=[\"prop\"], # Adds the 'prop' property to the hover text of the node\n)\n```\n\n![](docs/images/config3.png)\n\n#### Applying layouts\n\nAll layouts are calculated through the `pos` property on each node. Networkx has built in layouts you can use and can invoke through igviz.\n\n```python\nig.plot(\n    G,\n    title=\"My Graph\",\n    layout=\"kamada\",\n)\n```\n\n![](docs/images/config4.png)\n\nTo add your own `pos` property you can set it via the `nx.set_node_attributes` function.\n\n```python\npos_dict = {\n    0: [1, 2], # X, Y coordinates for Node 0\n    1: [1.5, 3], # X, Y coordinates for Node 1\n    ...\n}\n\nnx.set_node_attributes(G, pos_dict, \"pos\")\n\nig.plot(\n    G\n)\n```\n\n#### Directed & Multi Graphs\n\nIgviz also plots Directed and Multigraphs with no configuration chages. For Directed Graphs the arrows are shown from node to node. For Multi Graphs only one edge is shown and it is recommended to display edge properties via `edge_label` or `edge_text` to display the weights of all edges between 2 Multi Graph nodes.\n\n##### Directed Graph\n\n```python\ndef createDiGraph():\n    # Create a directed graph (digraph) object; i.e., a graph in which the edges\n    # have a direction associated with them.\n    G = nx.DiGraph()\n\n    # Add nodes:\n    nodes = ['A', 'B', 'C', 'D', 'E']\n    G.add_nodes_from(nodes)\n\n    # Add edges or links between the nodes:\n    edges = [('A','B'), ('B','C'), ('B', 'D'), ('D', 'E')]\n    G.add_edges_from(edges)\n    return G\n\nDG = createDiGraph()\n\nig.plot(DG, size_method=\"static\")\n```\n![](docs/images/dg.png)\n\n##### Multi Graph\n\n```python\nMG = nx.MultiGraph()\nMG.add_weighted_edges_from([(1, 2, 0.5), (1, 2, 0.75), (2, 3, 0.5)])\n\nig.plot(\n    MG,\n    layout=\"spring\",\n    size_method=\"static\",\n    edge_text=[\"weight\"],\n    colorscale=\"Rainbow\"\n)\n```\n\n![](docs/images/mg.png)\n\n## Installation\n\n`pip install igviz`\n\n## Customizable Parameters\n\n- title : Title of the graph, by default \"Graph\"\n\n- layout : Layout of the nodes on the plot (\"random\", \"circular\", \"kamada\", \"planar\", \"spring\", \"spectral\", \"spiral\"}, optional).\n\n- size_method : How to size the nodes., by default \"degree\"\n\n- color_method : How to color the node., by default \"degree\"\n\n- node_label : Node property to be shown on the node.\n\n- node_label_position: Position of the node label.\n\n- node_text : A list of node properties to display when hovering over the node.\n\n- edge_label : Edge property to be shown on the edge.\n\n- edge_label_position: Position of the edge label.\n\n- edge_text : A list of edge properties to display when hovering over the edge.\n\n- titlefont_size : Font size of the title, by default 16\n\n- annotation_text : Graph annotation text\n\n- colorscale : Scale of the color bar ('Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu', 'Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet', 'Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis')\n\n- colorbar_title : Color bar axis title.\n\n- node_opacity : Opacity of the nodes (1 - filled in, 0 completely transparent), by default 1\n\n- arrow_size : Size of the arrow for Directed Graphs and MultiGraphs, by default 2.\n\n## Feedback\n\nI appreciate any feedback so if you have any feature requests or issues make an issue with the appropriate tag or futhermore, send me an email at ashton.sidhu1994@gmail.com\n\n## Contributors\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification and is brought to you by these [awesome contributors](./CONTRIBUTORS.md).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ashton-Sidhu/plotly-graph", "keywords": "datascience,machinelearning,visualization,graph", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "igviz", "package_url": "https://pypi.org/project/igviz/", "platform": "", "project_url": "https://pypi.org/project/igviz/", "project_urls": {"Homepage": "https://github.com/Ashton-Sidhu/plotly-graph"}, "release_url": "https://pypi.org/project/igviz/0.4.0/", "requires_dist": ["networkx (==2.4)", "plotly (==4.5.2)"], "requires_python": ">= 3.6", "summary": "A library to plot Graphs with Plotly.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Interactive Graph Visualization</h1>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9a42a94b84c2612b3503e3665b295e0ef48c01b/68747470733a2f2f6769746875622e636f6d2f417368746f6e2d53696468752f706c6f746c792d67726170682f776f726b666c6f77732f54657374732f62616467652e737667\"> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/108f830e4a644962fb3010732876f11143652528/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696776697a\"> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2c544e0ef7d1d8cfd6dccb595557d860ddb2a5f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696776697a3f636f6c6f723d677265656e\"> <a href=\"https://igviz.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b5fd67c04238da5fc7b6029f1c8d8043a1e9718/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696776697a2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n\n\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#customizable-parameters\" rel=\"nofollow\">Customizable Parameters</a></li>\n<li><a href=\"#feedback\" rel=\"nofollow\">Feedback</a></li>\n<li><a href=\"#contributors\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n\n<h2>Introduction</h2>\n<p>Interactive Graph Visualization (igviz) is a library to help visualize graphs interactively using Plotly. This library provides a customizable api for visualizing graphs in a neat, visually appealing plot. It keeps larger graphs much more clean by displaying minimal text information and highlights node properties and relationships using colour and size while providing the same text information when needed.</p>\n<p><img alt=\"Default Visualization\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0764770eb3a8718b2d8833af3905d677e56e19d/646f63732f696d616765732f64656661756c742e706e67\"></p>\n<h2>Usage</h2>\n<p>Example notebooks can be found <a href=\"https://github.com/Ashton-Sidhu/plotly-graph/tree/master/examples\" rel=\"nofollow\">here</a>.</p>\n<h3>Basic</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">networkx</span> <span class=\"k\">as</span> <span class=\"nn\">nx</span>\n<span class=\"kn\">import</span> <span class=\"nn\">igviz</span> <span class=\"k\">as</span> <span class=\"nn\">ig</span>\n\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">random_geometric_graph</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mf\">0.125</span><span class=\"p\">)</span>\n<span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">set_node_attributes</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"prop\"</span><span class=\"p\">)</span>\n<span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">set_edge_attributes</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s2\">\"edge_prop\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n</pre>\n<p>The default plot colors and sizes the nodes by the Degree but it is configurable.</p>\n<p><img alt=\"Default Visualization\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0764770eb3a8718b2d8833af3905d677e56e19d/646f63732f696d616765732f64656661756c742e706e67\"></p>\n<h3>Configurations</h3>\n<pre><span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"c1\"># Your graph</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"My Graph\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size_method</span><span class=\"o\">=</span><span class=\"s2\">\"static\"</span><span class=\"p\">,</span> <span class=\"c1\"># Makes node sizes the same</span>\n    <span class=\"n\">color_method</span><span class=\"o\">=</span><span class=\"s2\">\"##ffcccb\"</span><span class=\"p\">,</span> <span class=\"c1\"># Makes all the node colours black,</span>\n    <span class=\"n\">node_text</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"prop\"</span><span class=\"p\">],</span> <span class=\"c1\"># Adds the 'prop' property to the hover text of the node</span>\n    <span class=\"n\">annotation_text</span><span class=\"o\">=</span><span class=\"s2\">\"Visualization made by &lt;a href='https://github.com/Ashton-Sidhu/plotly-graph'&gt;igviz&lt;/a&gt; &amp; plotly.\"</span><span class=\"p\">,</span> <span class=\"c1\"># Adds a text annotation to the graph</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bb94ae6a35a8eec8486b4d7122da92c48e70922/646f63732f696d616765732f636f6e666967312e706e67\"></p>\n<pre><span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"My Graph\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size_method</span><span class=\"o\">=</span><span class=\"s2\">\"prop\"</span><span class=\"p\">,</span> <span class=\"c1\"># Makes node sizes the size of the \"prop\" property</span>\n    <span class=\"n\">color_method</span><span class=\"o\">=</span><span class=\"s2\">\"prop\"</span><span class=\"p\">,</span> <span class=\"c1\"># Colors the nodes based off the \"prop\" property and a color scale,</span>\n    <span class=\"n\">node_text</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"prop\"</span><span class=\"p\">],</span> <span class=\"c1\"># Adds the 'prop' property to the hover text of the node</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27357613acd24b1f5c7522fe14779ccd3605306e/646f63732f696d616765732f636f6e666967322e706e67\"></p>\n<pre><span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span><span class=\"p\">,</span>\n    <span class=\"n\">node_label</span><span class=\"o\">=</span><span class=\"s2\">\"prop\"</span><span class=\"p\">,</span> <span class=\"c1\"># Display the \"prop\" attribute as a label on the node</span>\n    <span class=\"n\">node_label_position</span><span class=\"o\">=</span><span class=\"s2\">\"top center\"</span><span class=\"p\">,</span> <span class=\"c1\"># Display the node label directly above the node</span>\n    <span class=\"n\">edge_text</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"edge_prop\"</span><span class=\"p\">],</span> <span class=\"c1\"># Display the \"edge_prop\" attribute on hover over the edge</span>\n    <span class=\"n\">edge_label</span><span class=\"o\">=</span><span class=\"s2\">\"edge_prop\"</span><span class=\"p\">,</span> <span class=\"c1\"># Display the \"edge_prop\" attribute on the edge</span>\n    <span class=\"n\">edge_label_position</span><span class=\"o\">=</span><span class=\"s2\">\"bottom center\"</span><span class=\"p\">,</span> <span class=\"c1\"># Display the edge label below the edge</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b221080679bec975204afbf6e9952f05b0247ed6/646f63732f696d616765732f6c6162656c732e706e67\"></p>\n<h4>How to add your own custom sizing method and colour method</h4>\n<p>To add your own custom sizing and color method, just pass a list to the <code>size_method</code> and <code>color_method</code>.</p>\n<pre><span class=\"n\">color_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">sizing_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">():</span>\n    <span class=\"n\">size_and_color</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">3</span>\n\n    <span class=\"n\">color_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">size_and_color</span><span class=\"p\">)</span>\n    <span class=\"n\">sizing_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">size_and_color</span><span class=\"p\">)</span>\n\n<span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"My Graph\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size_method</span><span class=\"o\">=</span><span class=\"n\">sizing_list</span><span class=\"p\">,</span> <span class=\"c1\"># Makes node sizes the size of the \"prop\" property</span>\n    <span class=\"n\">color_method</span><span class=\"o\">=</span><span class=\"n\">color_list</span><span class=\"p\">,</span> <span class=\"c1\"># Colors the nodes based off the \"prop\" property and a color scale,</span>\n    <span class=\"n\">node_text</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"prop\"</span><span class=\"p\">],</span> <span class=\"c1\"># Adds the 'prop' property to the hover text of the node</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/803fc8c89332cca19e3c68071bc323fc97994c93/646f63732f696d616765732f636f6e666967332e706e67\"></p>\n<h4>Applying layouts</h4>\n<p>All layouts are calculated through the <code>pos</code> property on each node. Networkx has built in layouts you can use and can invoke through igviz.</p>\n<pre><span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"My Graph\"</span><span class=\"p\">,</span>\n    <span class=\"n\">layout</span><span class=\"o\">=</span><span class=\"s2\">\"kamada\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9eda5158df0a4a60953db0085afc3fabe891d496/646f63732f696d616765732f636f6e666967342e706e67\"></p>\n<p>To add your own <code>pos</code> property you can set it via the <code>nx.set_node_attributes</code> function.</p>\n<pre><span class=\"n\">pos_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"c1\"># X, Y coordinates for Node 0</span>\n    <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"c1\"># X, Y coordinates for Node 1</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">set_node_attributes</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"n\">pos_dict</span><span class=\"p\">,</span> <span class=\"s2\">\"pos\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">G</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>Directed &amp; Multi Graphs</h4>\n<p>Igviz also plots Directed and Multigraphs with no configuration chages. For Directed Graphs the arrows are shown from node to node. For Multi Graphs only one edge is shown and it is recommended to display edge properties via <code>edge_label</code> or <code>edge_text</code> to display the weights of all edges between 2 Multi Graph nodes.</p>\n<h5>Directed Graph</h5>\n<pre><span class=\"k\">def</span> <span class=\"nf\">createDiGraph</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create a directed graph (digraph) object; i.e., a graph in which the edges</span>\n    <span class=\"c1\"># have a direction associated with them.</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">DiGraph</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Add nodes:</span>\n    <span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'B'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'D'</span><span class=\"p\">,</span> <span class=\"s1\">'E'</span><span class=\"p\">]</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_nodes_from</span><span class=\"p\">(</span><span class=\"n\">nodes</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Add edges or links between the nodes:</span>\n    <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'A'</span><span class=\"p\">,</span><span class=\"s1\">'B'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'B'</span><span class=\"p\">,</span><span class=\"s1\">'C'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'B'</span><span class=\"p\">,</span> <span class=\"s1\">'D'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'D'</span><span class=\"p\">,</span> <span class=\"s1\">'E'</span><span class=\"p\">)]</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edges_from</span><span class=\"p\">(</span><span class=\"n\">edges</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">G</span>\n\n<span class=\"n\">DG</span> <span class=\"o\">=</span> <span class=\"n\">createDiGraph</span><span class=\"p\">()</span>\n\n<span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">DG</span><span class=\"p\">,</span> <span class=\"n\">size_method</span><span class=\"o\">=</span><span class=\"s2\">\"static\"</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a556780bbb962e431e908a1acdab161721cb6e00/646f63732f696d616765732f64672e706e67\"></p>\n<h5>Multi Graph</h5>\n<pre><span class=\"n\">MG</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">MultiGraph</span><span class=\"p\">()</span>\n<span class=\"n\">MG</span><span class=\"o\">.</span><span class=\"n\">add_weighted_edges_from</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)])</span>\n\n<span class=\"n\">ig</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">MG</span><span class=\"p\">,</span>\n    <span class=\"n\">layout</span><span class=\"o\">=</span><span class=\"s2\">\"spring\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size_method</span><span class=\"o\">=</span><span class=\"s2\">\"static\"</span><span class=\"p\">,</span>\n    <span class=\"n\">edge_text</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"weight\"</span><span class=\"p\">],</span>\n    <span class=\"n\">colorscale</span><span class=\"o\">=</span><span class=\"s2\">\"Rainbow\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a381edab9b9bb35d9be3b2e300732f2880f5e8e/646f63732f696d616765732f6d672e706e67\"></p>\n<h2>Installation</h2>\n<p><code>pip install igviz</code></p>\n<h2>Customizable Parameters</h2>\n<ul>\n<li>\n<p>title : Title of the graph, by default \"Graph\"</p>\n</li>\n<li>\n<p>layout : Layout of the nodes on the plot (\"random\", \"circular\", \"kamada\", \"planar\", \"spring\", \"spectral\", \"spiral\"}, optional).</p>\n</li>\n<li>\n<p>size_method : How to size the nodes., by default \"degree\"</p>\n</li>\n<li>\n<p>color_method : How to color the node., by default \"degree\"</p>\n</li>\n<li>\n<p>node_label : Node property to be shown on the node.</p>\n</li>\n<li>\n<p>node_label_position: Position of the node label.</p>\n</li>\n<li>\n<p>node_text : A list of node properties to display when hovering over the node.</p>\n</li>\n<li>\n<p>edge_label : Edge property to be shown on the edge.</p>\n</li>\n<li>\n<p>edge_label_position: Position of the edge label.</p>\n</li>\n<li>\n<p>edge_text : A list of edge properties to display when hovering over the edge.</p>\n</li>\n<li>\n<p>titlefont_size : Font size of the title, by default 16</p>\n</li>\n<li>\n<p>annotation_text : Graph annotation text</p>\n</li>\n<li>\n<p>colorscale : Scale of the color bar ('Greys', 'YlGnBu', 'Greens', 'YlOrRd', 'Bluered', 'RdBu', 'Reds', 'Blues', 'Picnic', 'Rainbow', 'Portland', 'Jet', 'Hot', 'Blackbody', 'Earth', 'Electric', 'Viridis')</p>\n</li>\n<li>\n<p>colorbar_title : Color bar axis title.</p>\n</li>\n<li>\n<p>node_opacity : Opacity of the nodes (1 - filled in, 0 completely transparent), by default 1</p>\n</li>\n<li>\n<p>arrow_size : Size of the arrow for Directed Graphs and MultiGraphs, by default 2.</p>\n</li>\n</ul>\n<h2>Feedback</h2>\n<p>I appreciate any feedback so if you have any feature requests or issues make an issue with the appropriate tag or futhermore, send me an email at <a href=\"mailto:ashton.sidhu1994@gmail.com\">ashton.sidhu1994@gmail.com</a></p>\n<h2>Contributors</h2>\n<p>This project follows the <a href=\"https://github.com/kentcdodds/all-contributors\" rel=\"nofollow\">all-contributors</a> specification and is brought to you by these <a href=\"./CONTRIBUTORS.md\" rel=\"nofollow\">awesome contributors</a>.</p>\n\n          </div>"}, "last_serial": 7064339, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "413108401ca8125bbcb2896ffc2f4b91", "sha256": "0ec7e9bbdfc54b633fb991fc60d70a6ff2ca52db2fe99486aa37ecc49c8caf77"}, "downloads": -1, "filename": "igviz-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "413108401ca8125bbcb2896ffc2f4b91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 5792, "upload_time": "2020-03-26T19:53:01", "upload_time_iso_8601": "2020-03-26T19:53:01.699441Z", "url": "https://files.pythonhosted.org/packages/fc/35/242a092bedcd9ff816fbd2aef9321220ed233c52bca737ff5034d2c9afb5/igviz-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5508d7cbf3a59276a2bfde2045847c50", "sha256": "4c609efc30c1c0c83dc84c42f6640a14ec5869aced421d4a45c18b46fd55b423"}, "downloads": -1, "filename": "igviz-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5508d7cbf3a59276a2bfde2045847c50", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 4716, "upload_time": "2020-03-26T19:53:03", "upload_time_iso_8601": "2020-03-26T19:53:03.758885Z", "url": "https://files.pythonhosted.org/packages/41/be/1581eb49cdbf3347a0476ba935ea1c28b61139d15ac6e1139cb015efd6b7/igviz-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e6dd4a5a171ca7d588c21b6a10ab7e0b", "sha256": "fbec02c3a51ecbfc7049194b4e4b0e4d473352ac8a2eef59f94a11b9b549a21e"}, "downloads": -1, "filename": "igviz-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6dd4a5a171ca7d588c21b6a10ab7e0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 6617, "upload_time": "2020-03-26T22:05:35", "upload_time_iso_8601": "2020-03-26T22:05:35.571994Z", "url": "https://files.pythonhosted.org/packages/30/dc/df27236334f3f0e35cb4be817108151386485b159e595e1554d661a99a5a/igviz-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13d5e18992ea134d8e49c00c59591c82", "sha256": "8bc2b06ccd7aff91a5146e3e3763509f3663fafe0a74c5ba89a0b9aa849bd98f"}, "downloads": -1, "filename": "igviz-0.2.0.tar.gz", "has_sig": false, "md5_digest": "13d5e18992ea134d8e49c00c59591c82", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 6130, "upload_time": "2020-03-26T22:05:36", "upload_time_iso_8601": "2020-03-26T22:05:36.839760Z", "url": "https://files.pythonhosted.org/packages/48/f4/65e11ff20f973e7bfe5b9fecb74fcce4882f9111a50726a32fb2ef435f8b/igviz-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "34d97686360fc0dd1b569c5c19b5eb1d", "sha256": "b403989a04bb1cab112b834a858e428fc6034684ffc3ef609fb8758ed9bf5eec"}, "downloads": -1, "filename": "igviz-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "34d97686360fc0dd1b569c5c19b5eb1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 8112, "upload_time": "2020-03-28T02:03:53", "upload_time_iso_8601": "2020-03-28T02:03:53.857816Z", "url": "https://files.pythonhosted.org/packages/a9/32/378bff32397227d340144ed0a89a32ccd3def6d7e37c0113c3ae5d89dc27/igviz-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95296bbc84de9a5d8334f7bed6227183", "sha256": "2909bd6fa54a32bfcb38149d92419c4faa52ed4dc78677279e5ee5c29dd65b75"}, "downloads": -1, "filename": "igviz-0.3.0.tar.gz", "has_sig": false, "md5_digest": "95296bbc84de9a5d8334f7bed6227183", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 7788, "upload_time": "2020-03-28T02:03:55", "upload_time_iso_8601": "2020-03-28T02:03:55.320543Z", "url": "https://files.pythonhosted.org/packages/a7/8c/5209b629829216827a08268741cfb28de1072b432a0a9f63466041fc492e/igviz-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2bf0f77e6367bf5e620a18de6f5f5564", "sha256": "d829a2c23c11799f525bf121ce91b10b724eddc3c9623279029b513e247f7f75"}, "downloads": -1, "filename": "igviz-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2bf0f77e6367bf5e620a18de6f5f5564", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 8110, "upload_time": "2020-04-06T05:38:36", "upload_time_iso_8601": "2020-04-06T05:38:36.413062Z", "url": "https://files.pythonhosted.org/packages/fa/a0/069d43f4c28b2eaf49a4f757af0145687c17b0446143a9953cd2f3f6d4cb/igviz-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cc44be427f0a32555560795705fe7e6", "sha256": "0fb6aea1935d8f1cbda7ea9a39d0c3f8680bdd466169412511c4dc2f9fc21f4b"}, "downloads": -1, "filename": "igviz-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1cc44be427f0a32555560795705fe7e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 7799, "upload_time": "2020-04-06T05:38:38", "upload_time_iso_8601": "2020-04-06T05:38:38.013582Z", "url": "https://files.pythonhosted.org/packages/ca/ce/22d4828d38c8fce9d998e8cde83c861f7e8130f2606090b15831dd513a30/igviz-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "990d9375c323e14290d3aed46a428f37", "sha256": "ef9d9527f620d1b3a55704b15aa7f21e9214fc986ce3e6c27611b5481d52ae65"}, "downloads": -1, "filename": "igviz-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "990d9375c323e14290d3aed46a428f37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 9161, "upload_time": "2020-04-21T00:18:09", "upload_time_iso_8601": "2020-04-21T00:18:09.634860Z", "url": "https://files.pythonhosted.org/packages/24/9f/736ef5d98067fd083b6270cf79ea73a2a892bb7752fcd1f25b653b7cb945/igviz-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfcd1c9ec0ab3e9f41212ed9fdc540fa", "sha256": "9d3dbf3e2a49f244491926ab079fc0f20799747403c6cb098070b6429f15a496"}, "downloads": -1, "filename": "igviz-0.4.0.tar.gz", "has_sig": false, "md5_digest": "bfcd1c9ec0ab3e9f41212ed9fdc540fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10104, "upload_time": "2020-04-21T00:18:11", "upload_time_iso_8601": "2020-04-21T00:18:11.131346Z", "url": "https://files.pythonhosted.org/packages/91/4e/4533106c55a77e2fc0240329054de2f65f2a16e3a408fca718bac68b265c/igviz-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "990d9375c323e14290d3aed46a428f37", "sha256": "ef9d9527f620d1b3a55704b15aa7f21e9214fc986ce3e6c27611b5481d52ae65"}, "downloads": -1, "filename": "igviz-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "990d9375c323e14290d3aed46a428f37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 9161, "upload_time": "2020-04-21T00:18:09", "upload_time_iso_8601": "2020-04-21T00:18:09.634860Z", "url": "https://files.pythonhosted.org/packages/24/9f/736ef5d98067fd083b6270cf79ea73a2a892bb7752fcd1f25b653b7cb945/igviz-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfcd1c9ec0ab3e9f41212ed9fdc540fa", "sha256": "9d3dbf3e2a49f244491926ab079fc0f20799747403c6cb098070b6429f15a496"}, "downloads": -1, "filename": "igviz-0.4.0.tar.gz", "has_sig": false, "md5_digest": "bfcd1c9ec0ab3e9f41212ed9fdc540fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10104, "upload_time": "2020-04-21T00:18:11", "upload_time_iso_8601": "2020-04-21T00:18:11.131346Z", "url": "https://files.pythonhosted.org/packages/91/4e/4533106c55a77e2fc0240329054de2f65f2a16e3a408fca718bac68b265c/igviz-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:04 2020"}