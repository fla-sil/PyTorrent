{"info": {"author": "drakejin", "author_email": "dydwls121200@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Text Processing :: Linguistic"], "description": "pi-email-transmission[PET]\n==========================\n\n-  This program needs to set up two serivce. Email service and\n   Transmission's Web Controller\n-  It will be make cool if you download any files on Raspberry-pi\n   through transmission\n-  This program's all about feature depend on Email service and\n   Transmission.\n-  Simply say about this. It just connect Email service and transmission\n   web controller\n\nMotivate\n========\n\n-  I don't wanna waste resources on my laptop and Smartphone. cause'\n   it's totally be hot when running torrent.\n\nRecommand\n=========\n\n1. Basically, This program is designed for reducing laptop resources.\n   Therefore, I recommand to run this program on *raspberry-pi*.\n2. Use this program with *Dropbox* or *GoogleDrive* to access your\n   downloaded media files.\n3. If you can use E-Mail notification service on your smartphone, It's\n   good interaction.\n\nInstall\n=======\n\n.. code:: python\n\n    $ git clone https://github.com/drake-jin/pi-email-transmission\n    $ cd pi-email-transmission\n    $ pip install -e .\n\nConfiguration\n=============\n\n1. Set up transmission web controller setting\n\n   -  If you use Dropbox or GoogleDrive. redirect directory to there.\n   -  Must check you have account information and host, port\n\n2. Check your e-mail account available IMAP and SMTP Protocol\n\n   -  This application need to transport through IMAP, SMTP Protocol.\n   -  Therefore, you must set up IMAP and SMTP protocol available on you\n      email account.\n\n3. Set up *pi-email-transmission*'s config.json file\n\n.. code:: python\n\n      # config.json\n      {\n          \"check_interval\":10,\n          \"log_level\":\"DEBUG\",\n          \"email\":{\n              \"imap\" : \"imap.gmail.com:993\",\n              \"smtp\" : \"smpt.gmail.com:465\"\n              \"folder\" : \"pi-imap-transmission\",\n              \"user\" : \"{email_id}@gmail.com\",\n              \"password\" : \"{email_password}\"\n          },\n          \"transmission\":{\n              \"user\":\"{trnsmsn_id}\",\n              \"password\":\"{trnsmsn_passwd}\",\n              \"host\":\"http://localhost:9091\"\n          }\n      }\n\n4. Set up Envrironment variables\n\n.. code:: python\n\n      $ export PET_HOME=/home/likemilk/workspace/pi-email-transmission\n\n5. Finally, You can check correct setting about this program when you\n   execute this command\n\n.. code:: python\n\n     $ python setup.py test\n     # Have to finish setting Configurations!\n\nConfiguration Images\n====================\n\nEmail-Naver\n~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/drake-jin/pi-email-transmission/master/docs/email_naver.png\n   :alt: Email-Naver Configuration\n\n   Email-Naver Configuration\n\nEmail-Google\n~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/drake-jin/pi-email-transmission/master/docs/email_google.png\n   :alt: Email-Google Configuration\n\n   Email-Google Configuration\n\nTransmission-gtk\n~~~~~~~~~~~~~~~~\n\n.. figure:: https://raw.githubusercontent.com/drake-jin/pi-email-transmission/master/docs/transmission.png\n   :alt: Transmission Configuration\n\n   Transmission Configuration\n\nHow is it work going?\n=====================\n\n.. code:: python\n\n    # *It's just psuedo code. not a real code*\n    class Service(Thread):\n\n        while(True):\n            time.sleep(config['interval_check'])\n            # 1. read all of e-mails and check UNSEEN email\n            # 2. get torrent file and add it on tranmission through pay load\n            # 3. send email about complete or failed\n            # 4. send seen flag\n            torrentList = email.get_torrent('(UNSEEN)')\n            for torrent in torrentList:\n                if(transmission.add_torrent(torrent)):\n                    email.send('add_complete', torrent)\n                else:\n                    email.send('add_fail', torrent)\n\n                email.flag('(SEEN)',torrent.email_id)\n\n            # 1. read all of Trnasmission download Queue.\n            # 2. get Completed entry and delete the entry.\n            # 3. send email about complete.       \n            torrentList = transmission.get_completed('Completed')\n            for torrent in torrentList:\n                if(transmission.delete_torrent(torrent)):\n                    email.send('download_complete')\n                else:\n                    email.send('delete_error')\n\nContact Me\n==========\n\n-  `dydwls121200@gmail.com <dydwls121200@gmail.com>`__ is my mail\n-  Welcome PR or be Contributor. I want to play coding with you.\n-  Really Welcome Feedback and Any Issues.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/drake-jin/pi-email-transmission/archive/0.3.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/drake-jin/pi-email-transmission", "keywords": "torrent transmission rpc email download bittorrent utorrent", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pet", "package_url": "https://pypi.org/project/pet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pet/", "project_urls": {"Download": "https://github.com/drake-jin/pi-email-transmission/archive/0.3.4.tar.gz", "Homepage": "http://github.com/drake-jin/pi-email-transmission"}, "release_url": "https://pypi.org/project/pet/0.3.4/", "requires_dist": null, "requires_python": null, "summary": "This program or lib can download torrent file throughemail account and send the torrent file to transmission web controller", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pi-email-transmission-pet\">\n<h2>pi-email-transmission[PET]</h2>\n<ul>\n<li>This program needs to set up two serivce. Email service and\nTransmission\u2019s Web Controller</li>\n<li>It will be make cool if you download any files on Raspberry-pi\nthrough transmission</li>\n<li>This program\u2019s all about feature depend on Email service and\nTransmission.</li>\n<li>Simply say about this. It just connect Email service and transmission\nweb controller</li>\n</ul>\n</div>\n<div id=\"motivate\">\n<h2>Motivate</h2>\n<ul>\n<li>I don\u2019t wanna waste resources on my laptop and Smartphone. cause\u2019\nit\u2019s totally be hot when running torrent.</li>\n</ul>\n</div>\n<div id=\"recommand\">\n<h2>Recommand</h2>\n<ol>\n<li>Basically, This program is designed for reducing laptop resources.\nTherefore, I recommand to run this program on <em>raspberry-pi</em>.</li>\n<li>Use this program with <em>Dropbox</em> or <em>GoogleDrive</em> to access your\ndownloaded media files.</li>\n<li>If you can use E-Mail notification service on your smartphone, It\u2019s\ngood interaction.</li>\n</ol>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre><span class=\"err\">$</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">drake</span><span class=\"o\">-</span><span class=\"n\">jin</span><span class=\"o\">/</span><span class=\"n\">pi</span><span class=\"o\">-</span><span class=\"n\">email</span><span class=\"o\">-</span><span class=\"n\">transmission</span>\n<span class=\"err\">$</span> <span class=\"n\">cd</span> <span class=\"n\">pi</span><span class=\"o\">-</span><span class=\"n\">email</span><span class=\"o\">-</span><span class=\"n\">transmission</span>\n<span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"o\">.</span>\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<ol>\n<li>Set up transmission web controller setting<ul>\n<li>If you use Dropbox or GoogleDrive. redirect directory to there.</li>\n<li>Must check you have account information and host, port</li>\n</ul>\n</li>\n<li>Check your e-mail account available IMAP and SMTP Protocol<ul>\n<li>This application need to transport through IMAP, SMTP Protocol.</li>\n<li>Therefore, you must set up IMAP and SMTP protocol available on you\nemail account.</li>\n</ul>\n</li>\n<li>Set up <em>pi-email-transmission</em>\u2019s config.json file</li>\n</ol>\n<pre><span class=\"c1\"># config.json</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"check_interval\"</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"log_level\"</span><span class=\"p\">:</span><span class=\"s2\">\"DEBUG\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"email\"</span><span class=\"p\">:{</span>\n        <span class=\"s2\">\"imap\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"imap.gmail.com:993\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"smtp\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"smpt.gmail.com:465\"</span>\n        <span class=\"s2\">\"folder\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pi-imap-transmission\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"user\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"si\">{email_id}</span><span class=\"s2\">@gmail.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"password\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"si\">{email_password}</span><span class=\"s2\">\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"transmission\"</span><span class=\"p\">:{</span>\n        <span class=\"s2\">\"user\"</span><span class=\"p\">:</span><span class=\"s2\">\"</span><span class=\"si\">{trnsmsn_id}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"password\"</span><span class=\"p\">:</span><span class=\"s2\">\"</span><span class=\"si\">{trnsmsn_passwd}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"host\"</span><span class=\"p\">:</span><span class=\"s2\">\"http://localhost:9091\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<ol>\n<li>Set up Envrironment variables</li>\n</ol>\n<pre><span class=\"err\">$</span> <span class=\"n\">export</span> <span class=\"n\">PET_HOME</span><span class=\"o\">=/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">likemilk</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">pi</span><span class=\"o\">-</span><span class=\"n\">email</span><span class=\"o\">-</span><span class=\"n\">transmission</span>\n</pre>\n<ol>\n<li>Finally, You can check correct setting about this program when you\nexecute this command</li>\n</ol>\n<pre><span class=\"err\">$</span> <span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">test</span>\n<span class=\"c1\"># Have to finish setting Configurations!</span>\n</pre>\n</div>\n<div id=\"configuration-images\">\n<h2>Configuration Images</h2>\n<div id=\"email-naver\">\n<h3>Email-Naver</h3>\n<div>\n<img alt=\"Email-Naver Configuration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38c78415e3a3fbc13eec9e87c7304baf73e88290/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6472616b652d6a696e2f70692d656d61696c2d7472616e736d697373696f6e2f6d61737465722f646f63732f656d61696c5f6e617665722e706e67\">\n<p>Email-Naver Configuration</p>\n</div>\n</div>\n<div id=\"email-google\">\n<h3>Email-Google</h3>\n<div>\n<img alt=\"Email-Google Configuration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bab6d017d1aed20005f43468684d9249e8274918/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6472616b652d6a696e2f70692d656d61696c2d7472616e736d697373696f6e2f6d61737465722f646f63732f656d61696c5f676f6f676c652e706e67\">\n<p>Email-Google Configuration</p>\n</div>\n</div>\n<div id=\"transmission-gtk\">\n<h3>Transmission-gtk</h3>\n<div>\n<img alt=\"Transmission Configuration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0e9f24b91d67eb2b3c97e5e87dd2a4ec31802ef/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6472616b652d6a696e2f70692d656d61696c2d7472616e736d697373696f6e2f6d61737465722f646f63732f7472616e736d697373696f6e2e706e67\">\n<p>Transmission Configuration</p>\n</div>\n</div>\n</div>\n<div id=\"how-is-it-work-going\">\n<h2>How is it work going?</h2>\n<pre><span class=\"c1\"># *It's just psuedo code. not a real code*</span>\n<span class=\"k\">class</span> <span class=\"nc\">Service</span><span class=\"p\">(</span><span class=\"n\">Thread</span><span class=\"p\">):</span>\n\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'interval_check'</span><span class=\"p\">])</span>\n        <span class=\"c1\"># 1. read all of e-mails and check UNSEEN email</span>\n        <span class=\"c1\"># 2. get torrent file and add it on tranmission through pay load</span>\n        <span class=\"c1\"># 3. send email about complete or failed</span>\n        <span class=\"c1\"># 4. send seen flag</span>\n        <span class=\"n\">torrentList</span> <span class=\"o\">=</span> <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">get_torrent</span><span class=\"p\">(</span><span class=\"s1\">'(UNSEEN)'</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">torrent</span> <span class=\"ow\">in</span> <span class=\"n\">torrentList</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">transmission</span><span class=\"o\">.</span><span class=\"n\">add_torrent</span><span class=\"p\">(</span><span class=\"n\">torrent</span><span class=\"p\">)):</span>\n                <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'add_complete'</span><span class=\"p\">,</span> <span class=\"n\">torrent</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'add_fail'</span><span class=\"p\">,</span> <span class=\"n\">torrent</span><span class=\"p\">)</span>\n\n            <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">flag</span><span class=\"p\">(</span><span class=\"s1\">'(SEEN)'</span><span class=\"p\">,</span><span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">email_id</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 1. read all of Trnasmission download Queue.</span>\n        <span class=\"c1\"># 2. get Completed entry and delete the entry.</span>\n        <span class=\"c1\"># 3. send email about complete.</span>\n        <span class=\"n\">torrentList</span> <span class=\"o\">=</span> <span class=\"n\">transmission</span><span class=\"o\">.</span><span class=\"n\">get_completed</span><span class=\"p\">(</span><span class=\"s1\">'Completed'</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">torrent</span> <span class=\"ow\">in</span> <span class=\"n\">torrentList</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">transmission</span><span class=\"o\">.</span><span class=\"n\">delete_torrent</span><span class=\"p\">(</span><span class=\"n\">torrent</span><span class=\"p\">)):</span>\n                <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'download_complete'</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'delete_error'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contact-me\">\n<h2>Contact Me</h2>\n<ul>\n<li><a href=\"mailto:dydwls121200%40gmail.com\">dydwls121200<span>@</span>gmail<span>.</span>com</a> is my mail</li>\n<li>Welcome PR or be Contributor. I want to play coding with you.</li>\n<li>Really Welcome Feedback and Any Issues.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2731619, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "5d6c653337010da086ac69a705ce7a2d", "sha256": "de52c29cab266393076785573a9b1fb7e90080e2b9f3bae0c4bd2623488e0ccc"}, "downloads": -1, "filename": "pet-0.3.1.tar.gz", "has_sig": false, "md5_digest": "5d6c653337010da086ac69a705ce7a2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 414954, "upload_time": "2017-03-26T11:09:50", "upload_time_iso_8601": "2017-03-26T11:09:50.190481Z", "url": "https://files.pythonhosted.org/packages/06/81/0114f6d4f5322a5f3305d0f7f35b08dd5e51b9c016bbc103d3b764616ce5/pet-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "f95dca6203f1298325bf58c3f40b9e8f", "sha256": "295d742eb1893564b6566bf829fcb080aa444e04695980b3565dbfdef4752002"}, "downloads": -1, "filename": "pet-0.3.2.tar.gz", "has_sig": false, "md5_digest": "f95dca6203f1298325bf58c3f40b9e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 414073, "upload_time": "2017-03-26T11:15:12", "upload_time_iso_8601": "2017-03-26T11:15:12.126553Z", "url": "https://files.pythonhosted.org/packages/82/71/7ae1e7f064b083dcae75ef7355f3ed5934b5da8621e033ccb24c4ecc04b6/pet-0.3.2.tar.gz", "yanked": false}], "0.3.4": []}, "urls": [], "timestamp": "Fri May  8 02:56:05 2020"}