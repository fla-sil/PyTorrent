{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# Python Tesla Powerwall API\n\nPython Tesla Powerwall API for consuming a local endpoint.\n\n> Note: This is not an official API and as such might be incomplete and fail at any time\n\nSupported Powerwall Software versions:\n* 1.45.X\n* 1.46.0\n\n> For more information about versioning see [API versiooning](#api-versioning).\n\n## Installation\n\n```bash\n$ pip install tesla_powerwall\n```\n\n## Usage\n\n### Setup connection\n\n```python\nfrom tesla_powerwall import Powerwall\n\npower_wall = Powerwall(\"<ip of your Powerwall>\")\n#=> <Powerwall ...>\n```\n\n> Note: By default the API client does not verify the SSL Certificate of the Powerwall. If you want to verify the SSL Certificate you can set `verify_ssl` to `True`.\n> Also the API client suppresses warnings about an inseucre request (because we aren't verifing the certificate). If you want to enable those warnings you can set `disable_insecure_warning` to `False`\n\nIt can also happen that the API is sending different responses than what was expected. Those responses would normally produce an `APIChangedError` indicating what exactly changed. If this happens please open an Issue to report this error. If you need to cotinue to use the API you can disable the response validation:\n\n```python\npower_wall = Powerwall(\"<ip of your Powerwall>\", dont_validate_response=True)\n# If you need to change the original setting\npower_wall.set_dont_validate_response(False)\n\n# Using a context manager if you only need to change it for some methods\nwith power_wall.no_verify():\n    power_wall.get_status()\n```\n\n### Authentication\n\nTo login you can either use `login` or `login_as`. `login` logs you in as `User.CUSTOMER` whereas with `login_as` you can choose a different user:\n\n```python\nfrom tesla_powerwall import User\n\n# Login as customer\npower_wall.login(\"<email>\", \"<password>\")\n#=> <LoginResponse ...>\n\n# Login with different user\npower_wall.login_as(User.INSTALLER, \"<email>\", \"<password>\")\n#=> <LoginResponse ...>\n\n# Check if we are logged in \npower_wall.is_authenticated()\n#=> True\n\n# Logout\npower_wall.logout()\n```\n\n### API versioning\n\nThe powerwall API is inconsitent across different versions. This is way some versions may return different responses. If no version is specified the **newest known** version is assumed.\n\nIf you are sure which version your powerwall has you can pin the Powerwall object to a version:\n\n```python\nfrom tesla_powerwall import Version\n# Pin powerwall object\npower_wall = Powerwall(\"<powerwall-ip>\", pin_version=\"1.46.0\")\n\n# You can also pin a version after the powerwall object was created\npower_wall.pin_version(Version.v1_46_0)\n```\n\nOtherwise you can let the API try to detect the version and pin it. This method should be prefered over the manual detection and pinning of the version:\n```python\npower_wall.detect_and_pin_version()\n```\n\n### Current battery level\n\nGet charge in percent:\n\n```python\npower_wall.get_charge()\n#=> 98\n```\n\nThe API also returns the exact percentage. You can get the exact percentage by passing `False` to `rounded`:\n\n```python\npower_wall.get_charge(rounded=False)\n#=> 97.59281925744594\n```\n\n### Powerwall Status\n\n```python\nstatus = power_wall.get_status()\n#=> <PowerwallStatusResponse ...>\nstatus.version\n#=> '1.45.2'\n```\n\n### Sitemaster\n\n```python\nsm = power_wall.sitemaster \n#=> <SiteMasterResponse ...>\nsm.status \n#=> StatusUp\nsm.running\n#=> true\nsm.connected_to_tesla\n#=> true\n```\n\n### Siteinfo\n\n```python\ninfo = power_wall.get_site_info()\n#=> <SiteInfoResponse ...>\ninfo.site_name\n#=> Tesla Home\ninfo.country\n#=> Germany\n```\n\n### Meters\n\n#### Aggregates\n\n```python\nmeters = power_wall.get_meters()\n#=> <MetersAggregateResponse ...>\nmeters.solar\n#=> <MetersResponse ...>\n```\n\n#### Details about meter\n\nReturns details about the meter. When no details are available `None` is returned.\n\n```python\npower_wall.meter_detailed(MeterType.SOLAR)\n#=> [<MeterDetailsResponse ...>]\npower_wall.meter_detailed(MeterType.LOAD)\n#=> None\n```\n\n#### Current power supply/draw\n\nGet current power supply/draw for home, solar, battery and grid. \n\n```python\npower_wall.is_drawing_from(MeterType.SOLAR)\n#=> True\npower_wall.is_sending_to(MeterType.LOAD)\n#=> True\npower_wall.is_active(MeterType.BATTERY)\n#=> False\npower_wall.get_power(MeterType.SOLAR)\n#=> 2.8 (in kWh)\n```\n\n> Note: For MeterType.LOAD is_drawing_from **always** returns `False` because it cannot be drawn from `load`.\n\nEach of those methods are wrappers for their respective methods on `MetersResponse`. When you call those wrapper methods `get_meters()` is always called. So if you need to query multiple meters you should first retrive all meters and execute the respective methods on the response:\n\n```python\nmeters = power_wall.get_meters()\nmeters.solar.is_drawing_from()\n#=> True\nmeters.load.is_sending_to()\n#=> True\nmeters.battery.is_active()\n#=> False\nmeters.solar.get_power()\n#=> 2.8 (in kWh)\n```\n\n`get_power` is just a convenience method which is equivalent to:\n\n```python\nfrom tesla_powerwall.helpers import convert_to_kw\n\nconvert_to_kw(meters.solar.instant_power, precision=1)\n```\n\n### Device Type\n\n```python\npower_wall.device_type\n#=> <DeviceType.GW1: 'hec'>\n```\n\n### Grid Status\n\nGet current grid status. \n\n```python\npower_wall.get_grid_status()\n#=> <GridStatus.Connected: 'SystemGridConnected'>\npower_wall.get_grid_services_active()\n#=> False\n```\n\n### Operation mode\n\n```python\npower_wall.get_operation_mode()\n#=> <OperationMode.SELF_CONSUMPTION: ...>\n```\n\n### Powerwall status\n\n```python\nstatus = power_wall.get_status()\n#=> <PowerwallStatusResponse ...>\nstatus.version\n#=> '1.45.2'\n\n# If you just need the version you can also use `get_version`\npower_wall.get_version()\n#=> '1.45.2'\n```\n\n### Powerwalls\n\nGet all powerwalls\n\n```python\npowerwalls_resp = power_wall.get_powerwalls()\n#=> <ListPowerwallsResponse ...>\npowerwalls_resp.powerwalls\n#=> [{\"Package...}]\n```\n\nGet powerwalls status when authenticated:\n\n```python\npowerwalls_status = power_wall.get_poweralls_status()\n#=> <PowerwalllsStatusResponse ...>\n```\nFor some unkown reason the response to `get_powerwalls` also includes the powerwalls status, so if you are not authenticated you can just retrive the status from the `ListPowerwallsResponse`\n\n```python\npowerwalls_resp = power_wall.get_powerwalls()\npowerwalls_resp.status\n#=> <PowerwallsStatusResponse ...>\npower_wall.get_serial_numbers()\n#=> [\"...\", \"...\", ...]\n```\n\n### More\n\nMost methods return a `Response` object except for those that only return a single value like `get_charge` and those that have to complex output like `get_networks`. \n\nMost times those `Response`s reflect the json response but for most nested data objects this is not the case. You can access the original response using `<Response>.json_response`.\n\nSome other methods include:\n\n* `get_vin`\n* `get_solars`\n* `get_meters_info`\n* `get_installer_info`\n* `get_meter_readings`\n* `get_meters_info`\n* `get_phase_usage`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jrester/tesla_powerwall", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tesla-powerwall", "package_url": "https://pypi.org/project/tesla-powerwall/", "platform": "", "project_url": "https://pypi.org/project/tesla-powerwall/", "project_urls": {"Homepage": "https://github.com/jrester/tesla_powerwall"}, "release_url": "https://pypi.org/project/tesla-powerwall/0.2.9/", "requires_dist": null, "requires_python": "", "summary": "API for Tesla Powerwall", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Tesla Powerwall API</h1>\n<p>Python Tesla Powerwall API for consuming a local endpoint.</p>\n<blockquote>\n<p>Note: This is not an official API and as such might be incomplete and fail at any time</p>\n</blockquote>\n<p>Supported Powerwall Software versions:</p>\n<ul>\n<li>1.45.X</li>\n<li>1.46.0</li>\n</ul>\n<blockquote>\n<p>For more information about versioning see <a href=\"#api-versioning\" rel=\"nofollow\">API versiooning</a>.</p>\n</blockquote>\n<h2>Installation</h2>\n<pre>$ pip install tesla_powerwall\n</pre>\n<h2>Usage</h2>\n<h3>Setup connection</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tesla_powerwall</span> <span class=\"kn\">import</span> <span class=\"n\">Powerwall</span>\n\n<span class=\"n\">power_wall</span> <span class=\"o\">=</span> <span class=\"n\">Powerwall</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ip of your Powerwall&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; &lt;Powerwall ...&gt;</span>\n</pre>\n<blockquote>\n<p>Note: By default the API client does not verify the SSL Certificate of the Powerwall. If you want to verify the SSL Certificate you can set <code>verify_ssl</code> to <code>True</code>.\nAlso the API client suppresses warnings about an inseucre request (because we aren't verifing the certificate). If you want to enable those warnings you can set <code>disable_insecure_warning</code> to <code>False</code></p>\n</blockquote>\n<p>It can also happen that the API is sending different responses than what was expected. Those responses would normally produce an <code>APIChangedError</code> indicating what exactly changed. If this happens please open an Issue to report this error. If you need to cotinue to use the API you can disable the response validation:</p>\n<pre><span class=\"n\">power_wall</span> <span class=\"o\">=</span> <span class=\"n\">Powerwall</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ip of your Powerwall&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">dont_validate_response</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># If you need to change the original setting</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">set_dont_validate_response</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using a context manager if you only need to change it for some methods</span>\n<span class=\"k\">with</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">no_verify</span><span class=\"p\">():</span>\n    <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span>\n</pre>\n<h3>Authentication</h3>\n<p>To login you can either use <code>login</code> or <code>login_as</code>. <code>login</code> logs you in as <code>User.CUSTOMER</code> whereas with <code>login_as</code> you can choose a different user:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tesla_powerwall</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"c1\"># Login as customer</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;email&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; &lt;LoginResponse ...&gt;</span>\n\n<span class=\"c1\"># Login with different user</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">login_as</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">INSTALLER</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;email&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; &lt;LoginResponse ...&gt;</span>\n\n<span class=\"c1\"># Check if we are logged in </span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; True</span>\n\n<span class=\"c1\"># Logout</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n</pre>\n<h3>API versioning</h3>\n<p>The powerwall API is inconsitent across different versions. This is way some versions may return different responses. If no version is specified the <strong>newest known</strong> version is assumed.</p>\n<p>If you are sure which version your powerwall has you can pin the Powerwall object to a version:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tesla_powerwall</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n<span class=\"c1\"># Pin powerwall object</span>\n<span class=\"n\">power_wall</span> <span class=\"o\">=</span> <span class=\"n\">Powerwall</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;powerwall-ip&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">pin_version</span><span class=\"o\">=</span><span class=\"s2\">\"1.46.0\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also pin a version after the powerwall object was created</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">pin_version</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"o\">.</span><span class=\"n\">v1_46_0</span><span class=\"p\">)</span>\n</pre>\n<p>Otherwise you can let the API try to detect the version and pin it. This method should be prefered over the manual detection and pinning of the version:</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">detect_and_pin_version</span><span class=\"p\">()</span>\n</pre>\n<h3>Current battery level</h3>\n<p>Get charge in percent:</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_charge</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; 98</span>\n</pre>\n<p>The API also returns the exact percentage. You can get the exact percentage by passing <code>False</code> to <code>rounded</code>:</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_charge</span><span class=\"p\">(</span><span class=\"n\">rounded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; 97.59281925744594</span>\n</pre>\n<h3>Powerwall Status</h3>\n<pre><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;PowerwallStatusResponse ...&gt;</span>\n<span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">version</span>\n<span class=\"c1\">#=&gt; '1.45.2'</span>\n</pre>\n<h3>Sitemaster</h3>\n<pre><span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">sitemaster</span> \n<span class=\"c1\">#=&gt; &lt;SiteMasterResponse ...&gt;</span>\n<span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">status</span> \n<span class=\"c1\">#=&gt; StatusUp</span>\n<span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">running</span>\n<span class=\"c1\">#=&gt; true</span>\n<span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">connected_to_tesla</span>\n<span class=\"c1\">#=&gt; true</span>\n</pre>\n<h3>Siteinfo</h3>\n<pre><span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_site_info</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;SiteInfoResponse ...&gt;</span>\n<span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">site_name</span>\n<span class=\"c1\">#=&gt; Tesla Home</span>\n<span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">country</span>\n<span class=\"c1\">#=&gt; Germany</span>\n</pre>\n<h3>Meters</h3>\n<h4>Aggregates</h4>\n<pre><span class=\"n\">meters</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_meters</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;MetersAggregateResponse ...&gt;</span>\n<span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">solar</span>\n<span class=\"c1\">#=&gt; &lt;MetersResponse ...&gt;</span>\n</pre>\n<h4>Details about meter</h4>\n<p>Returns details about the meter. When no details are available <code>None</code> is returned.</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">meter_detailed</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">SOLAR</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; [&lt;MeterDetailsResponse ...&gt;]</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">meter_detailed</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">LOAD</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; None</span>\n</pre>\n<h4>Current power supply/draw</h4>\n<p>Get current power supply/draw for home, solar, battery and grid.</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">is_drawing_from</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">SOLAR</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; True</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">is_sending_to</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">LOAD</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; True</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">BATTERY</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; False</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_power</span><span class=\"p\">(</span><span class=\"n\">MeterType</span><span class=\"o\">.</span><span class=\"n\">SOLAR</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; 2.8 (in kWh)</span>\n</pre>\n<blockquote>\n<p>Note: For MeterType.LOAD is_drawing_from <strong>always</strong> returns <code>False</code> because it cannot be drawn from <code>load</code>.</p>\n</blockquote>\n<p>Each of those methods are wrappers for their respective methods on <code>MetersResponse</code>. When you call those wrapper methods <code>get_meters()</code> is always called. So if you need to query multiple meters you should first retrive all meters and execute the respective methods on the response:</p>\n<pre><span class=\"n\">meters</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_meters</span><span class=\"p\">()</span>\n<span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">solar</span><span class=\"o\">.</span><span class=\"n\">is_drawing_from</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; True</span>\n<span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"o\">.</span><span class=\"n\">is_sending_to</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; True</span>\n<span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">battery</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; False</span>\n<span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">solar</span><span class=\"o\">.</span><span class=\"n\">get_power</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; 2.8 (in kWh)</span>\n</pre>\n<p><code>get_power</code> is just a convenience method which is equivalent to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tesla_powerwall.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">convert_to_kw</span>\n\n<span class=\"n\">convert_to_kw</span><span class=\"p\">(</span><span class=\"n\">meters</span><span class=\"o\">.</span><span class=\"n\">solar</span><span class=\"o\">.</span><span class=\"n\">instant_power</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h3>Device Type</h3>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">device_type</span>\n<span class=\"c1\">#=&gt; &lt;DeviceType.GW1: 'hec'&gt;</span>\n</pre>\n<h3>Grid Status</h3>\n<p>Get current grid status.</p>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_grid_status</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;GridStatus.Connected: 'SystemGridConnected'&gt;</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_grid_services_active</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; False</span>\n</pre>\n<h3>Operation mode</h3>\n<pre><span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_operation_mode</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;OperationMode.SELF_CONSUMPTION: ...&gt;</span>\n</pre>\n<h3>Powerwall status</h3>\n<pre><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;PowerwallStatusResponse ...&gt;</span>\n<span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">version</span>\n<span class=\"c1\">#=&gt; '1.45.2'</span>\n\n<span class=\"c1\"># If you just need the version you can also use `get_version`</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_version</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; '1.45.2'</span>\n</pre>\n<h3>Powerwalls</h3>\n<p>Get all powerwalls</p>\n<pre><span class=\"n\">powerwalls_resp</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_powerwalls</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;ListPowerwallsResponse ...&gt;</span>\n<span class=\"n\">powerwalls_resp</span><span class=\"o\">.</span><span class=\"n\">powerwalls</span>\n<span class=\"c1\">#=&gt; [{\"Package...}]</span>\n</pre>\n<p>Get powerwalls status when authenticated:</p>\n<pre><span class=\"n\">powerwalls_status</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_poweralls_status</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; &lt;PowerwalllsStatusResponse ...&gt;</span>\n</pre>\n<p>For some unkown reason the response to <code>get_powerwalls</code> also includes the powerwalls status, so if you are not authenticated you can just retrive the status from the <code>ListPowerwallsResponse</code></p>\n<pre><span class=\"n\">powerwalls_resp</span> <span class=\"o\">=</span> <span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_powerwalls</span><span class=\"p\">()</span>\n<span class=\"n\">powerwalls_resp</span><span class=\"o\">.</span><span class=\"n\">status</span>\n<span class=\"c1\">#=&gt; &lt;PowerwallsStatusResponse ...&gt;</span>\n<span class=\"n\">power_wall</span><span class=\"o\">.</span><span class=\"n\">get_serial_numbers</span><span class=\"p\">()</span>\n<span class=\"c1\">#=&gt; [\"...\", \"...\", ...]</span>\n</pre>\n<h3>More</h3>\n<p>Most methods return a <code>Response</code> object except for those that only return a single value like <code>get_charge</code> and those that have to complex output like <code>get_networks</code>.</p>\n<p>Most times those <code>Response</code>s reflect the json response but for most nested data objects this is not the case. You can access the original response using <code>&lt;Response&gt;.json_response</code>.</p>\n<p>Some other methods include:</p>\n<ul>\n<li><code>get_vin</code></li>\n<li><code>get_solars</code></li>\n<li><code>get_meters_info</code></li>\n<li><code>get_installer_info</code></li>\n<li><code>get_meter_readings</code></li>\n<li><code>get_meters_info</code></li>\n<li><code>get_phase_usage</code></li>\n</ul>\n\n          </div>"}, "last_serial": 7104882, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f02a2d0c2a142b946d183c2fa5e31b65", "sha256": "dd94ea621319899b1efcf96701bc3bfe01a2b17c7016e5d3b745ec2e8d806dba"}, "downloads": -1, "filename": "tesla_powerwall-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f02a2d0c2a142b946d183c2fa5e31b65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2569, "upload_time": "2019-08-01T16:32:57", "upload_time_iso_8601": "2019-08-01T16:32:57.813330Z", "url": "https://files.pythonhosted.org/packages/ee/22/4dea6dcb58dcf04bd035a9c80831f9f333d2d88e2c28096c6e90988c9b82/tesla_powerwall-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3abb8c0297c7310bd5458f4266927a5", "sha256": "b631cc89460874602c12a280bab54c7fc6efb4d5a2e42b724e89573c3eb59df6"}, "downloads": -1, "filename": "tesla_powerwall-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c3abb8c0297c7310bd5458f4266927a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2164, "upload_time": "2019-08-01T16:33:00", "upload_time_iso_8601": "2019-08-01T16:33:00.050544Z", "url": "https://files.pythonhosted.org/packages/2a/68/b3fe6b636ecdf20aa2df88e2ec45b83d832fe11d6ab8110080144f6bbb94/tesla_powerwall-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1a5bf87c150d56cc242c3aba9f679994", "sha256": "d6fb30298112453760cb3ee4ebae5abfe57770f3d5d6f48edc5512d5b47ad5ed"}, "downloads": -1, "filename": "tesla_powerwall-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a5bf87c150d56cc242c3aba9f679994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7584, "upload_time": "2019-08-02T12:17:07", "upload_time_iso_8601": "2019-08-02T12:17:07.847754Z", "url": "https://files.pythonhosted.org/packages/dc/57/4996ff699bd951384dc4583e7d02a53d650673f8838117c78edfc075e85d/tesla_powerwall-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "600f78f5fdaaccc3310d16af19487e5f", "sha256": "ee7daf957391da5ba3b392788da3e26cedfeb1cfb57889529d06365269c31cd2"}, "downloads": -1, "filename": "tesla_powerwall-0.1.1.tar.gz", "has_sig": false, "md5_digest": "600f78f5fdaaccc3310d16af19487e5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3428, "upload_time": "2019-08-02T12:17:10", "upload_time_iso_8601": "2019-08-02T12:17:10.078052Z", "url": "https://files.pythonhosted.org/packages/4f/1d/d10a936c1cc9ee0952b548997f8963213bcf5a97710f0694f0390beb246e/tesla_powerwall-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "27891163af5e0837ccb8d30495e2050a", "sha256": "c8f8e5594b4fd68180aad8d5e8b9037c82dcbc3cb647652de6352d9e2618a919"}, "downloads": -1, "filename": "tesla_powerwall-0.1.3.tar.gz", "has_sig": false, "md5_digest": "27891163af5e0837ccb8d30495e2050a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3757, "upload_time": "2020-03-30T20:15:16", "upload_time_iso_8601": "2020-03-30T20:15:16.990917Z", "url": "https://files.pythonhosted.org/packages/ec/43/44c432bf5a7dc6b99f56727edb9db7a014cd4f15bbb5ac3d17b1ae9f7a0d/tesla_powerwall-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f072b4026637b61c4f082b15f3ca926d", "sha256": "8f2ff7647af2be514e9d875c7df49e634adf7138f6bae56137735b7d14a729a7"}, "downloads": -1, "filename": "tesla_powerwall-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f072b4026637b61c4f082b15f3ca926d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4844, "upload_time": "2020-03-31T12:43:37", "upload_time_iso_8601": "2020-03-31T12:43:37.029180Z", "url": "https://files.pythonhosted.org/packages/0d/36/fd4384637288075bea9d7290eb289b379bcf329761f8a3ec30d2c6ded649/tesla_powerwall-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a8cc4cbc34fb58ef9d42e387f43e706d", "sha256": "62b51e7001bfe5f1706ffa30f835ab3cc414833c7e25666c0a9604e48f6222a7"}, "downloads": -1, "filename": "tesla_powerwall-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a8cc4cbc34fb58ef9d42e387f43e706d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11965, "upload_time": "2020-04-12T11:46:21", "upload_time_iso_8601": "2020-04-12T11:46:21.926305Z", "url": "https://files.pythonhosted.org/packages/47/7e/9277a658e979986fc94079f673b37bfe447ec4164f00c6c0df8372034e04/tesla_powerwall-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7e0795235c056af1bbc53ea77f9c0526", "sha256": "63ddf0924495b305e1597f240873e40762500b16f967e76ea611475d3c775c2d"}, "downloads": -1, "filename": "tesla_powerwall-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7e0795235c056af1bbc53ea77f9c0526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11966, "upload_time": "2020-04-12T18:27:18", "upload_time_iso_8601": "2020-04-12T18:27:18.593095Z", "url": "https://files.pythonhosted.org/packages/e9/eb/1d1adb1aeb733c5fef9b64dda162d198d6abc6159ec85ba076fded5d2ade/tesla_powerwall-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "3678245cae66838544174a387fa78f79", "sha256": "341a0eded04be5c37048bed8d307bb883e582ba23157233e235cd46328f1f54a"}, "downloads": -1, "filename": "tesla_powerwall-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3678245cae66838544174a387fa78f79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11950, "upload_time": "2020-04-12T18:58:25", "upload_time_iso_8601": "2020-04-12T18:58:25.901994Z", "url": "https://files.pythonhosted.org/packages/d0/f1/af29a9b712a1012fbd64de0db0cdbee1a69083b05017a514feb57e915d46/tesla_powerwall-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "4fd1473cf1530ecbdc90548ca6a2ea0e", "sha256": "ce957a3398d58706ac630cd3f6966343b11b83573a40c0dbf3f96db776e42121"}, "downloads": -1, "filename": "tesla_powerwall-0.2.3.tar.gz", "has_sig": false, "md5_digest": "4fd1473cf1530ecbdc90548ca6a2ea0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12012, "upload_time": "2020-04-13T15:30:54", "upload_time_iso_8601": "2020-04-13T15:30:54.888247Z", "url": "https://files.pythonhosted.org/packages/4f/7d/47afa8d54ee2fa90818e62f94a37103c0e6fa0b7f13850cd2e2553163896/tesla_powerwall-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "1425289aaf1436b5e55d2c04c1886812", "sha256": "995966e4e62eab320efe974d80884bafc94d5631e5443ef09589b4edfad0f4d4"}, "downloads": -1, "filename": "tesla_powerwall-0.2.4.tar.gz", "has_sig": false, "md5_digest": "1425289aaf1436b5e55d2c04c1886812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13022, "upload_time": "2020-04-15T12:28:42", "upload_time_iso_8601": "2020-04-15T12:28:42.330397Z", "url": "https://files.pythonhosted.org/packages/00/00/314d8e754b1ea62740eeb4a438cf2975eb5e593336676f6ca4b58bc0b5b7/tesla_powerwall-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "999b2b944285f9d016beee3b1a57afd3", "sha256": "90c7dabb30fc013605cb1185bffe0cd9cb0c48602e4e6015329467839316a8a4"}, "downloads": -1, "filename": "tesla_powerwall-0.2.5.tar.gz", "has_sig": false, "md5_digest": "999b2b944285f9d016beee3b1a57afd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13806, "upload_time": "2020-04-15T16:35:43", "upload_time_iso_8601": "2020-04-15T16:35:43.787839Z", "url": "https://files.pythonhosted.org/packages/bf/0e/d2083bf251eb20b51c8387a36a53b78a3827dfeab69dc02cc7c18bdfff3a/tesla_powerwall-0.2.5.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "d61e96c96abedcd05a04b1323daa5222", "sha256": "b3c9833d084e622d8921990efd87a12c837d997182b701e793225423143fcb71"}, "downloads": -1, "filename": "tesla_powerwall-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d61e96c96abedcd05a04b1323daa5222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15411, "upload_time": "2020-04-22T15:32:56", "upload_time_iso_8601": "2020-04-22T15:32:56.884996Z", "url": "https://files.pythonhosted.org/packages/9b/83/1d010bab6437d4bb6722ebbc27d022152fbda3463e8233afae0fccc49320/tesla_powerwall-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "1cf8134807cbf9a352d25bd8ae9f9629", "sha256": "ae3449f760f2bd617797815b85a6c91ccc4d3a61441e0cee4d59fd979641dc0e"}, "downloads": -1, "filename": "tesla_powerwall-0.2.8.tar.gz", "has_sig": false, "md5_digest": "1cf8134807cbf9a352d25bd8ae9f9629", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15407, "upload_time": "2020-04-22T18:55:06", "upload_time_iso_8601": "2020-04-22T18:55:06.775907Z", "url": "https://files.pythonhosted.org/packages/c3/9c/d6f33183f7be92b72c5bf48da80b221b7ea2d13b7102dc04f080da1c5287/tesla_powerwall-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "ccf9ddc6be906f7cc1028fde9a90d809", "sha256": "12b204c0911ed75b408aa02b9b2b38f58e44999794035179d4fcf434cf0092e0"}, "downloads": -1, "filename": "tesla_powerwall-0.2.9.tar.gz", "has_sig": false, "md5_digest": "ccf9ddc6be906f7cc1028fde9a90d809", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15483, "upload_time": "2020-04-26T12:56:25", "upload_time_iso_8601": "2020-04-26T12:56:25.186315Z", "url": "https://files.pythonhosted.org/packages/e0/47/f8a942fe4e419b51787c75ad5924bccc99dac0bd15d93730e1514643aa42/tesla_powerwall-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccf9ddc6be906f7cc1028fde9a90d809", "sha256": "12b204c0911ed75b408aa02b9b2b38f58e44999794035179d4fcf434cf0092e0"}, "downloads": -1, "filename": "tesla_powerwall-0.2.9.tar.gz", "has_sig": false, "md5_digest": "ccf9ddc6be906f7cc1028fde9a90d809", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15483, "upload_time": "2020-04-26T12:56:25", "upload_time_iso_8601": "2020-04-26T12:56:25.186315Z", "url": "https://files.pythonhosted.org/packages/e0/47/f8a942fe4e419b51787c75ad5924bccc99dac0bd15d93730e1514643aa42/tesla_powerwall-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:44 2020"}