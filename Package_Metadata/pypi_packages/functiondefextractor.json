{"info": {"author": "Brijesh", "author_email": "brijesh.krishnank@philips.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.com/bkk003/FunctionDefExtractor.svg?branch=master)](https://travis-ci.com/bkk003/FunctionDefExtractor)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![codecov](https://codecov.io/gh/bkk003/FunctionDefExtractor/branch/master/graph/badge.svg)](https://codecov.io/gh/bkk003/FunctionDefExtractor)\n\n\nFunction Definition Extractor\n=============================\n\nWhat is the project intended to solve?\n-------------------------------------\nProject will help to extract the function definitions from source or test code and report the extracted output\n in a data frame which can be further used for Similarity processing, Review, etc...\n\nDependencies\n------------\n`Python 3.7.3 `\n\n[packages]\n**************\n```\npip\n\nmutmut\n\npytest\n\npandas\n\ncodecov\n\npytest-cov\n\npylint\n```\n[Third party tools]\n******************\n```\nCtags\n\ngrep\n```\nInstallation\n-----------\n# INSTALL\n\nRequirements are added in requirement.txt file\n\npython & packages\n----------------\n\n`Python 3.7.3 - 64 bit`\n\npython:\ninstall python for the respective OS at `https://www.python.org/downloads/` Make sure to update the path variable to point to the python installation folder.\n\npip:\nget `get-pip.py` from below link to your folder `https://bootstrap.pypa.io/get-pip.py` Open a command prompt and navigate to the folder containing `get-pip.py`. Run the following command:\n\npandas:\n`python -m pip install pandas`\n\npylint:\n`python -m pip install -U pylint`\n\nmutmut:\n`python -m pip install mutmut`\n\npytest:\n`python -m pip install pytest`\n\nunittest:\n`python -m pip install unittest`\n\ncodecov:\n`python -m pip install codecov`\n\npytest-cov:\n`python -m pip install pytest-cov`\n\nOther tools\n-----------\nCtags: `https://en.wikipedia.org/wiki/Ctags`\n***********************\n\nWindows:\n1. Download Ctags from `https://sourceforge.net/projects/ctags/files/ctags/5.8/ctags58.zip/download?use_mirror\n=excellmedia` \n\n   or \n\n     `http://ctags.sourceforge.net/`\n2. select the right package(based on the Operating system and architecture) and extract the zip file to a folder\n3. Update the system 'path' environment variable with the path to ctags executable\n\nLinux: \n\n`apt-get install ctags`\n\nOS X: \n\n`brew install ctags`\ngrep\n***********************\n1. Download grep `\"binaries and Dependencies\"` from `http://gnuwin32.sourceforge.net/packages/grep.htm` \n2. extract the content to a folder\n3. Copy and paste contents from `\\bin` folder of Dependencies to `\\bin` folder of Binaries\n4. Update the system `'path'` environment variable with the path to \"grep\" executable\n\n\n\n\nUsage & Configuration\n--------------------\n1. Install the tool using `pip install functiondefextractor`\n2. To call from script\n```\nfrom functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\")\nprint(out_put)\n```\n\n```\nfrom functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\")\n# Default value of arguments are parse_code=\"True\", parse_test=\"True\", annot=None, delta=None\nprint(out_put)\n```\n3. To call from commandline\n```\npython -m functiondefextractor.extractor_cmd -h \n```\nNote: \n\n1.To use annotation based search feature, input annot and delta parameters (For example annot = \"@Test\", delta = \"5\") \n  which returns a data frame containing + and - delta number of lines from the given annotation\n\n2.While using this feature parse_code, parse_test conditions are set to default(True).\n\n3.An xlsx file is also generated as output in the same input location. \n```\nfrom functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\", parse_code=\"True\", parse_test=\"True\n\", annot=\"@Test\", delta=\"5\")\nprint(out_put)\n```\n\nHow to test the software\n-----------------------\n1. To test the tool use : navigate to `functiondefextractor` which is the root directory\n2. Issue `pytest -v` to run all the tests\nTo report the pytest in html: issue command `pytest --html=report.html`\n\nTo run test for coverage: `pytest --cov-report html --cov=\"src\"`\n\npydoc creation `python -m pydoc -w module_name`\n\nmutation testing using mutmut `mutmut run`\n\npylint execution on code `pylint src test >\"path_to_save_file\\pylint.txt\"`\n\njscpd execution on root folder `jscpd --min-tokens 20 --reporters \"html\" --mode \"strict\" --format \"python\" --output . .`\n\nContact / Getting help\n----------------------\n```\nBrijesh Krishnan <brijesh.krishnank@philips.com>\n\nSannihith Reddy <sannihith.reddyp@philips.com>\n\n```\n\nLicense\n--------\n```\nThe MIT License (MIT) Copyright \u00a9 [2019] Koninklijke Philips N.V, https://www.philips.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bkk003/FunctionDefExtractor", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "functiondefextractor", "package_url": "https://pypi.org/project/functiondefextractor/", "platform": "", "project_url": "https://pypi.org/project/functiondefextractor/", "project_urls": {"Homepage": "https://github.com/bkk003/FunctionDefExtractor"}, "release_url": "https://pypi.org/project/functiondefextractor/0.0.2/", "requires_dist": ["mutmut (==1.5.1)", "pytest (==5.0.0)", "xlrd (==1.2.0)", "xlsxwriter (==1.2.1)", "pandas (==0.24.2)", "codecov (==2.0.15)", "pytest-cov (==2.7.1)", "pylint (==2.3.1)"], "requires_python": ">=3.6", "summary": "Function Definition Extractor", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/bkk003/FunctionDefExtractor\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0de6c9d4e55e709f40df0248d44e38abc848955/68747470733a2f2f7472617669732d63692e636f6d2f626b6b3030332f46756e6374696f6e446566457874726163746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://codecov.io/gh/bkk003/FunctionDefExtractor\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/417789b2a478627880143be7f01f506b7e823536/68747470733a2f2f636f6465636f762e696f2f67682f626b6b3030332f46756e6374696f6e446566457874726163746f722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>Function Definition Extractor</h1>\n<h2>What is the project intended to solve?</h2>\n<p>Project will help to extract the function definitions from source or test code and report the extracted output\nin a data frame which can be further used for Similarity processing, Review, etc...</p>\n<h2>Dependencies</h2>\n<p><code>Python 3.7.3</code></p>\n<p>[packages]</p>\n<hr>\n<pre><code>pip\n\nmutmut\n\npytest\n\npandas\n\ncodecov\n\npytest-cov\n\npylint\n</code></pre>\n<p>[Third party tools]</p>\n<hr>\n<pre><code>Ctags\n\ngrep\n</code></pre>\n<h2>Installation</h2>\n<h1>INSTALL</h1>\n<p>Requirements are added in requirement.txt file</p>\n<h2>python &amp; packages</h2>\n<p><code>Python 3.7.3 - 64 bit</code></p>\n<p>python:\ninstall python for the respective OS at <code>https://www.python.org/downloads/</code> Make sure to update the path variable to point to the python installation folder.</p>\n<p>pip:\nget <code>get-pip.py</code> from below link to your folder <code>https://bootstrap.pypa.io/get-pip.py</code> Open a command prompt and navigate to the folder containing <code>get-pip.py</code>. Run the following command:</p>\n<p>pandas:\n<code>python -m pip install pandas</code></p>\n<p>pylint:\n<code>python -m pip install -U pylint</code></p>\n<p>mutmut:\n<code>python -m pip install mutmut</code></p>\n<p>pytest:\n<code>python -m pip install pytest</code></p>\n<p>unittest:\n<code>python -m pip install unittest</code></p>\n<p>codecov:\n<code>python -m pip install codecov</code></p>\n<p>pytest-cov:\n<code>python -m pip install pytest-cov</code></p>\n<h2>Other tools</h2>\n<p>Ctags: <code>https://en.wikipedia.org/wiki/Ctags</code></p>\n<hr>\n<p>Windows:</p>\n<ol>\n<li>\n<p>Download Ctags from <code>https://sourceforge.net/projects/ctags/files/ctags/5.8/ctags58.zip/download?use_mirror =excellmedia</code></p>\n<p>or</p>\n<p><code>http://ctags.sourceforge.net/</code></p>\n</li>\n<li>\n<p>select the right package(based on the Operating system and architecture) and extract the zip file to a folder</p>\n</li>\n<li>\n<p>Update the system 'path' environment variable with the path to ctags executable</p>\n</li>\n</ol>\n<p>Linux:</p>\n<p><code>apt-get install ctags</code></p>\n<p>OS X:</p>\n<p><code>brew install ctags</code>\ngrep</p>\n<hr>\n<ol>\n<li>Download grep <code>\"binaries and Dependencies\"</code> from <code>http://gnuwin32.sourceforge.net/packages/grep.htm</code></li>\n<li>extract the content to a folder</li>\n<li>Copy and paste contents from <code>\\bin</code> folder of Dependencies to <code>\\bin</code> folder of Binaries</li>\n<li>Update the system <code>'path'</code> environment variable with the path to \"grep\" executable</li>\n</ol>\n<h2>Usage &amp; Configuration</h2>\n<ol>\n<li>Install the tool using <code>pip install functiondefextractor</code></li>\n<li>To call from script</li>\n</ol>\n<pre><code>from functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\")\nprint(out_put)\n</code></pre>\n<pre><code>from functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\")\n# Default value of arguments are parse_code=\"True\", parse_test=\"True\", annot=None, delta=None\nprint(out_put)\n</code></pre>\n<ol>\n<li>To call from commandline</li>\n</ol>\n<pre><code>python -m functiondefextractor.extractor_cmd -h \n</code></pre>\n<p>Note:</p>\n<p>1.To use annotation based search feature, input annot and delta parameters (For example annot = \"@Test\", delta = \"5\")\nwhich returns a data frame containing + and - delta number of lines from the given annotation</p>\n<p>2.While using this feature parse_code, parse_test conditions are set to default(True).</p>\n<p>3.An xlsx file is also generated as output in the same input location.</p>\n<pre><code>from functiondefextractor import core_extractor\nout_put = core_extractor.extractor (r\"path_to_repo/code\", parse_code=\"True\", parse_test=\"True\n\", annot=\"@Test\", delta=\"5\")\nprint(out_put)\n</code></pre>\n<h2>How to test the software</h2>\n<ol>\n<li>To test the tool use : navigate to <code>functiondefextractor</code> which is the root directory</li>\n<li>Issue <code>pytest -v</code> to run all the tests\nTo report the pytest in html: issue command <code>pytest --html=report.html</code></li>\n</ol>\n<p>To run test for coverage: <code>pytest --cov-report html --cov=\"src\"</code></p>\n<p>pydoc creation <code>python -m pydoc -w module_name</code></p>\n<p>mutation testing using mutmut <code>mutmut run</code></p>\n<p>pylint execution on code <code>pylint src test &gt;\"path_to_save_file\\pylint.txt\"</code></p>\n<p>jscpd execution on root folder <code>jscpd --min-tokens 20 --reporters \"html\" --mode \"strict\" --format \"python\" --output . .</code></p>\n<h2>Contact / Getting help</h2>\n<pre><code>Brijesh Krishnan &lt;brijesh.krishnank@philips.com&gt;\n\nSannihith Reddy &lt;sannihith.reddyp@philips.com&gt;\n\n</code></pre>\n<h2>License</h2>\n<pre><code>The MIT License (MIT) Copyright \u00a9 [2019] Koninklijke Philips N.V, https://www.philips.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>\n\n          </div>"}, "last_serial": 7075929, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2a363fa328f38f903ffd7e864e715e99", "sha256": "31946a0f1f5232fa86f620738d1032422a40c5a9e50f3121f4fe7398996bb171"}, "downloads": -1, "filename": "functiondefextractor-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2a363fa328f38f903ffd7e864e715e99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8708, "upload_time": "2020-03-24T05:40:23", "upload_time_iso_8601": "2020-03-24T05:40:23.159813Z", "url": "https://files.pythonhosted.org/packages/30/d9/0328bb13da49a7c7d8ef13cecaea86186c525c69fab34fb0de0466795814/functiondefextractor-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d579b773e3009a234e5c63190fb635e", "sha256": "feee9b1c63243ea4dac982a25cb468a0f15bb23546110c68fe4691e40f443998"}, "downloads": -1, "filename": "functiondefextractor-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4d579b773e3009a234e5c63190fb635e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7426, "upload_time": "2020-03-24T05:40:25", "upload_time_iso_8601": "2020-03-24T05:40:25.409156Z", "url": "https://files.pythonhosted.org/packages/37/44/3f862df41e0495986efc737d705110c0923e03dfd02dbed6d69500992f02/functiondefextractor-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a363fa328f38f903ffd7e864e715e99", "sha256": "31946a0f1f5232fa86f620738d1032422a40c5a9e50f3121f4fe7398996bb171"}, "downloads": -1, "filename": "functiondefextractor-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2a363fa328f38f903ffd7e864e715e99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8708, "upload_time": "2020-03-24T05:40:23", "upload_time_iso_8601": "2020-03-24T05:40:23.159813Z", "url": "https://files.pythonhosted.org/packages/30/d9/0328bb13da49a7c7d8ef13cecaea86186c525c69fab34fb0de0466795814/functiondefextractor-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d579b773e3009a234e5c63190fb635e", "sha256": "feee9b1c63243ea4dac982a25cb468a0f15bb23546110c68fe4691e40f443998"}, "downloads": -1, "filename": "functiondefextractor-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4d579b773e3009a234e5c63190fb635e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7426, "upload_time": "2020-03-24T05:40:25", "upload_time_iso_8601": "2020-03-24T05:40:25.409156Z", "url": "https://files.pythonhosted.org/packages/37/44/3f862df41e0495986efc737d705110c0923e03dfd02dbed6d69500992f02/functiondefextractor-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:41 2020"}