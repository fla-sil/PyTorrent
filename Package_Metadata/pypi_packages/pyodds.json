{"info": {"author": "Data Analytics at Texas A&M (DATA) Lab, Yuening Li", "author_email": "yuehningli@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PyODDS\n[![Build Status](https://travis-ci.com/datamllab/PyODDS.svg?branch=master)](https://travis-ci.com/datamllab/PyODDS)\n[![Documentation Status](https://readthedocs.org/projects/pyodds-handbook/badge/?version=latest)](https://pyodds.github.io/)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/3456033f37744ae2a5a69da448ee430d)](https://www.codacy.com/manual/pyodds/PyODDS?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pyodds/PyODDS&amp;utm_campaign=Badge_Grade)\n[![Known Vulnerabilities](https://snyk.io//test/github/pyodds/PyODDS/badge.svg?targetFile=requirements.txt)](https://snyk.io//test/github/pyodds/PyODDS?targetFile=requirements.txt)\n[![PyPI version](https://badge.fury.io/py/pyodds.svg)](https://badge.fury.io/py/pyodds)\n\nOfficial Website: [`pyodds.github.io`](https://pyodds.github.io/)\n\n##\n\n**PyODDS** is an end-to end **Python** system for **outlier** **detection** with **database** **support**. PyODDS provides outlier detection algorithms which meet the demands for users in different fields, w/wo data science or machine learning background. PyODDS gives the ability to execute machine learning algorithms in-database without moving data out of the database server or over the network. It also provides access to a wide range of outlier detection algorithms, including statistical analysis and more recent deep learning based approaches.\n\nPyODDS is featured for:\n\n  - **Full Stack Service** which supports operations and maintenances from light-weight SQL based database to back-end machine learning algorithms and makes the throughput speed faster;\n\n  - **State-of-the-art Anomaly Detection Approaches** including **Statistical/Machine Learning/Deep Learning** models with unified APIs and detailed documentation;\n\n  - **Powerful Data Analysis Mechanism** which supports both **static and time-series data** analysis with flexible time-slice(sliding-window) segmentation.  \n\nThe Full API Reference can be found in [`handbook`](https://pyodds.github.io/).\n\n## API Demo:\n\n\n```sh\nfrom utils.import_algorithm import algorithm_selection\nfrom utils.utilities import output_performance,connect_server,query_data\n\n# connect to the database\nconn,cursor=connect_server(host, user, password)\n\n# query data from specific time range\ndata = query_data(database_name,table_name,start_time,end_time)\n\n# train the anomaly detection algorithm\nclf = algorithm_selection(algorithm_name)\nclf.fit(X_train)\n\n# get outlier result and scores\nprediction_result = clf.predict(X_test)\noutlierness_score = clf.decision_function(test)\n\n#visualize the prediction_result\nvisualize_distribution(X_test,prediction_result,outlierness_score)\n\n```\n\n## Cite this work\n\n\nYuening Li, Daochen Zha, Na Zou, Xia Hu. \"PyODDS: An End-to-End Outlier Detection System\"  ([Download](https://arxiv.org/pdf/1910.02575.pdf))\n\nBiblatex entry:\n\n    @article{li2019pyodds,\n      author = {Li, Yuening and Zha, Daochen and Zou, Na and Hu, Xia},\n      title = {PyODDS: An End-to-End Outlier Detection System},\n      year = {2019},\n      eprint = {arXiv:1910.02575},\n    }\n\n\n\n## Quick Start\n```sh\npython demo.py --ground_truth --visualize_distribution\n```\n\n### Results are shown as\n```sh\nconnect to TDengine success\nLoad dataset and table\nLoading cost: 0.151061 seconds\nLoad data successful\nStart processing:\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:00<00:00, 14.02it/s]\n==============================\nResults in Algorithm dagmm are:\naccuracy_score: 0.98\nprecision_score: 0.99\nrecall_score: 0.99\nf1_score: 0.99\nroc_auc_score: 0.99\nprocessing time: 15.330137 seconds\n==============================\nconnection is closed\n\n```\n<img src=\"https://github.com/datamllab/PyODDS/blob/master/output/img/Result.png\" width=\"50%\" height=\"45%\">\n\n## Installation\n\nTo install the package, please use the [`pip`](https://pip.pypa.io/en/stable/installing/) installation as follows:\n\n```sh\npip install pyodds\npip install git+git@github.com:datamllab/PyODDS.git\n```\n**Note:** PyODDS is only compatible with **Python 3.6** and above.\n\n### Required Dependencies\n\n```sh\n- pandas>=0.25.0\n- taos==1.4.15\n- tensorflow==2.0.0b1\n- numpy>=1.16.4\n- seaborn>=0.9.0\n- torch>=1.1.0\n- luminol==0.4\n- tqdm>=4.35.0\n- matplotlib>=3.1.1\n- scikit_learn>=0.21.3\n```\nTo compile and package the JDBC driver source code, you should have a Java jdk-8 or higher and Apache Maven 2.7 or higher installed. To install openjdk-8 on Ubuntu:\n\n```sh\nsudo apt-get install openjdk-8-jdk\n```\n\nTo install Apache Maven on Ubuntu:\n\n```sh\nsudo apt-get install maven\n```\nTo install the TDengine as the back-end database service, please refer to [this instruction](https://www.taosdata.com/en/getting-started/#Install-from-Package).\n\nTo enable the Python client APIs for TDengine, please follow [this handbook](https://www.taosdata.com/en/documentation/connector/#Python-Connector). \n\nTo insure the locale in config file is valid:\n\n```sh\nsudo locale-gen \"en_US.UTF-8\"\nexport LC_ALL=\"en_US.UTF-8\"\nlocale\n\n```\nTo start the service after installation, in a terminal, use:\n```sh\ntaosd\n```\n\n## Implemented Algorithms\n### Statistical Based Methods\nMethods | Algorithm | Class API\n------------ | -------------|-------------\nCBLOF | Clustering-Based Local Outlier Factor | :class:`algo.cblof.CBLOF`\nHBOS | Histogram-based Outlier Score | :class:`algo.hbos.HBOS`\nIFOREST | Isolation Forest | :class:`algo.iforest.IFOREST`\nKNN | k-Nearest Neighbors  | :class:`algo.knn.KNN`\nLOF | Local Outlier Factor | :class:`algo.cblof.CBLOF`\nOCSVM | One-Class Support Vector Machines | :class:`algo.ocsvm.OCSVM`\nPCA | Principal Component Analysis | :class:`algo.pca.PCA`\nRobustCovariance | Robust Covariance| :class:`algo.robustcovariance.RCOV`\nSOD | Subspace Outlier Detection| :class:`algo.sod.SOD`\n\n### Deep Learning Based Methods\nMethods | Algorithm | Class API\n------------ | -------------|-------------\nautoencoder | Outlier detection using replicator neural networks | :class:`algo.autoencoder.AUTOENCODER`\ndagmm | Deep autoencoding gaussian mixture model for unsupervised anomaly detection | :class:`algo.dagmm.DAGMM`\n\n### Time Serie Methods\nMethods | Algorithm | Class API\n------------ | -------------|-------------\nlstmad | Long short term memory networks for anomaly detection in time series | :class:`algo.lstm_ad.LSTMAD`\nlstmencdec | LSTM-based encoder-decoder for multi-sensor anomaly detection | :class:`algo.lstm_enc_dec_axl.LSTMED`\nluminol | Linkedin's luminol\t | :class:`algo.luminol.LUMINOL`\n\n## APIs Cheatsheet\n\nThe Full API Reference can be found in [`handbook`](https://pyodds.github.io/).\n\n  - **connect_server(hostname,username,password)**: Connect to Apache backend TDengine Service.\n\n  - **query_data(connection,cursor,database_name,table_name,start_time,end_time)**: Query data from table *table_name* in database *database_name* within a given time range.\n\n  - **algorithm_selection(algorithm_name,contamination)**: Select an algorithm as detector.\n\n  - **fit(X)**: Fit *X* to detector.\n\n  - **predict(X)**: Predict if instance in *X* is outlier or not.\n\n  - **decision_function(X)**: Output the anomaly score of instances in *X*.\n\n  - **output_performance(algorithm_name,ground_truth,prediction_result,outlierness_score)**: Output the prediction result as evaluation matrix in *Accuracy*, *Precision*, *Recall*, *F1 Score*, *ROC-AUC Score*, *Cost time*.\n\n  - **visualize_distribution(X,prediction_result,outlierness_score)**: Visualize the detection result with the the data distribution.\n\n  - **visualize_outlierscore(outlierness_score,prediction_result,contamination)** Visualize the detection result with the outlier score.\n\n\n## License\n<!-- Biblatex entry: -->\n\nYou may use this software under the MIT License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datamllab/PyODDS", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyodds", "package_url": "https://pypi.org/project/pyodds/", "platform": "", "project_url": "https://pypi.org/project/pyodds/", "project_urls": {"Homepage": "https://github.com/datamllab/PyODDS"}, "release_url": "https://pypi.org/project/pyodds/1.0.0rc1/", "requires_dist": ["pandas (>=0.24.0)", "tensorflow (==2.0.0b1)", "numpy (>=1.16.4)", "seaborn (>=0.9.0)", "torch (>=1.1.0)", "luminol (==0.4)", "tqdm (>=4.35.0)", "matplotlib (>=3.0.0)", "scikit-learn (>=0.21.3)"], "requires_python": ">=3.5", "summary": "An end-to-end anomaly detection system", "version": "1.0.0rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyODDS</h1>\n<p><a href=\"https://travis-ci.com/datamllab/PyODDS\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dff4cca5d383dd146e3f83d19d78d5760b4d38db/68747470733a2f2f7472617669732d63692e636f6d2f646174616d6c6c61622f50794f4444532e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pyodds.github.io/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5412186febe1b090a16b0c6e433765fd254a3009/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796f6464732d68616e64626f6f6b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://www.codacy.com/manual/pyodds/PyODDS?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pyodds/PyODDS&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fea561f67c222b6c96c078c30ca3beb9db1f877e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3334353630333366333737343461653261356136396461343438656534333064\"></a>\n<a href=\"https://snyk.io//test/github/pyodds/PyODDS?targetFile=requirements.txt\" rel=\"nofollow\"><img alt=\"Known Vulnerabilities\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d9bab6e11f6baf75e4185ec727e9b638bb68a74/68747470733a2f2f736e796b2e696f2f2f746573742f6769746875622f70796f6464732f50794f4444532f62616467652e7376673f74617267657446696c653d726571756972656d656e74732e747874\"></a>\n<a href=\"https://badge.fury.io/py/pyodds\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92a91c3c6720996fe12146c4e6cb2b8f58b9ff8c/68747470733a2f2f62616467652e667572792e696f2f70792f70796f6464732e737667\"></a></p>\n<p>Official Website: <a href=\"https://pyodds.github.io/\" rel=\"nofollow\"><code>pyodds.github.io</code></a></p>\n<h2></h2>\n<p><strong>PyODDS</strong> is an end-to end <strong>Python</strong> system for <strong>outlier</strong> <strong>detection</strong> with <strong>database</strong> <strong>support</strong>. PyODDS provides outlier detection algorithms which meet the demands for users in different fields, w/wo data science or machine learning background. PyODDS gives the ability to execute machine learning algorithms in-database without moving data out of the database server or over the network. It also provides access to a wide range of outlier detection algorithms, including statistical analysis and more recent deep learning based approaches.</p>\n<p>PyODDS is featured for:</p>\n<ul>\n<li>\n<p><strong>Full Stack Service</strong> which supports operations and maintenances from light-weight SQL based database to back-end machine learning algorithms and makes the throughput speed faster;</p>\n</li>\n<li>\n<p><strong>State-of-the-art Anomaly Detection Approaches</strong> including <strong>Statistical/Machine Learning/Deep Learning</strong> models with unified APIs and detailed documentation;</p>\n</li>\n<li>\n<p><strong>Powerful Data Analysis Mechanism</strong> which supports both <strong>static and time-series data</strong> analysis with flexible time-slice(sliding-window) segmentation.</p>\n</li>\n</ul>\n<p>The Full API Reference can be found in <a href=\"https://pyodds.github.io/\" rel=\"nofollow\"><code>handbook</code></a>.</p>\n<h2>API Demo:</h2>\n<pre>from utils.import_algorithm import algorithm_selection\nfrom utils.utilities import output_performance,connect_server,query_data\n\n<span class=\"c1\"># connect to the database</span>\nconn,cursor<span class=\"o\">=</span>connect_server<span class=\"o\">(</span>host, user, password<span class=\"o\">)</span>\n\n<span class=\"c1\"># query data from specific time range</span>\n<span class=\"nv\">data</span> <span class=\"o\">=</span> query_data<span class=\"o\">(</span>database_name,table_name,start_time,end_time<span class=\"o\">)</span>\n\n<span class=\"c1\"># train the anomaly detection algorithm</span>\n<span class=\"nv\">clf</span> <span class=\"o\">=</span> algorithm_selection<span class=\"o\">(</span>algorithm_name<span class=\"o\">)</span>\nclf.fit<span class=\"o\">(</span>X_train<span class=\"o\">)</span>\n\n<span class=\"c1\"># get outlier result and scores</span>\n<span class=\"nv\">prediction_result</span> <span class=\"o\">=</span> clf.predict<span class=\"o\">(</span>X_test<span class=\"o\">)</span>\n<span class=\"nv\">outlierness_score</span> <span class=\"o\">=</span> clf.decision_function<span class=\"o\">(</span><span class=\"nb\">test</span><span class=\"o\">)</span>\n\n<span class=\"c1\">#visualize the prediction_result</span>\nvisualize_distribution<span class=\"o\">(</span>X_test,prediction_result,outlierness_score<span class=\"o\">)</span>\n</pre>\n<h2>Cite this work</h2>\n<p>Yuening Li, Daochen Zha, Na Zou, Xia Hu. \"PyODDS: An End-to-End Outlier Detection System\"  (<a href=\"https://arxiv.org/pdf/1910.02575.pdf\" rel=\"nofollow\">Download</a>)</p>\n<p>Biblatex entry:</p>\n<pre><code>@article{li2019pyodds,\n  author = {Li, Yuening and Zha, Daochen and Zou, Na and Hu, Xia},\n  title = {PyODDS: An End-to-End Outlier Detection System},\n  year = {2019},\n  eprint = {arXiv:1910.02575},\n}\n</code></pre>\n<h2>Quick Start</h2>\n<pre>python demo.py --ground_truth --visualize_distribution\n</pre>\n<h3>Results are shown as</h3>\n<pre>connect to TDengine success\nLoad dataset and table\nLoading cost: <span class=\"m\">0</span>.151061 seconds\nLoad data successful\nStart processing:\n<span class=\"m\">100</span>%<span class=\"p\">|</span>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588<span class=\"p\">|</span> <span class=\"m\">10</span>/10 <span class=\"o\">[</span><span class=\"m\">00</span>:00&lt;<span class=\"m\">00</span>:00, <span class=\"m\">14</span>.02it/s<span class=\"o\">]</span>\n<span class=\"o\">==============================</span>\nResults in Algorithm dagmm are:\naccuracy_score: <span class=\"m\">0</span>.98\nprecision_score: <span class=\"m\">0</span>.99\nrecall_score: <span class=\"m\">0</span>.99\nf1_score: <span class=\"m\">0</span>.99\nroc_auc_score: <span class=\"m\">0</span>.99\nprocessing time: <span class=\"m\">15</span>.330137 <span class=\"nv\">seconds</span>\n<span class=\"o\">==============================</span>\nconnection is closed\n</pre>\n<img height=\"45%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5507cf58bee50da0cc8e08e1b61513298d32b81/68747470733a2f2f6769746875622e636f6d2f646174616d6c6c61622f50794f4444532f626c6f622f6d61737465722f6f75747075742f696d672f526573756c742e706e67\" width=\"50%\">\n<h2>Installation</h2>\n<p>To install the package, please use the <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\"><code>pip</code></a> installation as follows:</p>\n<pre>pip install pyodds\npip install git+git@github.com:datamllab/PyODDS.git\n</pre>\n<p><strong>Note:</strong> PyODDS is only compatible with <strong>Python 3.6</strong> and above.</p>\n<h3>Required Dependencies</h3>\n<pre>- pandas&gt;<span class=\"o\">=</span><span class=\"m\">0</span>.25.0\n- <span class=\"nv\">taos</span><span class=\"o\">==</span><span class=\"m\">1</span>.4.15\n- <span class=\"nv\">tensorflow</span><span class=\"o\">==</span><span class=\"m\">2</span>.0.0b1\n- numpy&gt;<span class=\"o\">=</span><span class=\"m\">1</span>.16.4\n- seaborn&gt;<span class=\"o\">=</span><span class=\"m\">0</span>.9.0\n- torch&gt;<span class=\"o\">=</span><span class=\"m\">1</span>.1.0\n- <span class=\"nv\">luminol</span><span class=\"o\">==</span><span class=\"m\">0</span>.4\n- tqdm&gt;<span class=\"o\">=</span><span class=\"m\">4</span>.35.0\n- matplotlib&gt;<span class=\"o\">=</span><span class=\"m\">3</span>.1.1\n- scikit_learn&gt;<span class=\"o\">=</span><span class=\"m\">0</span>.21.3\n</pre>\n<p>To compile and package the JDBC driver source code, you should have a Java jdk-8 or higher and Apache Maven 2.7 or higher installed. To install openjdk-8 on Ubuntu:</p>\n<pre>sudo apt-get install openjdk-8-jdk\n</pre>\n<p>To install Apache Maven on Ubuntu:</p>\n<pre>sudo apt-get install maven\n</pre>\n<p>To install the TDengine as the back-end database service, please refer to <a href=\"https://www.taosdata.com/en/getting-started/#Install-from-Package\" rel=\"nofollow\">this instruction</a>.</p>\n<p>To enable the Python client APIs for TDengine, please follow <a href=\"https://www.taosdata.com/en/documentation/connector/#Python-Connector\" rel=\"nofollow\">this handbook</a>.</p>\n<p>To insure the locale in config file is valid:</p>\n<pre>sudo locale-gen <span class=\"s2\">\"en_US.UTF-8\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">LC_ALL</span><span class=\"o\">=</span><span class=\"s2\">\"en_US.UTF-8\"</span>\nlocale\n</pre>\n<p>To start the service after installation, in a terminal, use:</p>\n<pre>taosd\n</pre>\n<h2>Implemented Algorithms</h2>\n<h3>Statistical Based Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Methods</th>\n<th>Algorithm</th>\n<th>Class API</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CBLOF</td>\n<td>Clustering-Based Local Outlier Factor</td>\n<td>:class:<code>algo.cblof.CBLOF</code></td>\n</tr>\n<tr>\n<td>HBOS</td>\n<td>Histogram-based Outlier Score</td>\n<td>:class:<code>algo.hbos.HBOS</code></td>\n</tr>\n<tr>\n<td>IFOREST</td>\n<td>Isolation Forest</td>\n<td>:class:<code>algo.iforest.IFOREST</code></td>\n</tr>\n<tr>\n<td>KNN</td>\n<td>k-Nearest Neighbors</td>\n<td>:class:<code>algo.knn.KNN</code></td>\n</tr>\n<tr>\n<td>LOF</td>\n<td>Local Outlier Factor</td>\n<td>:class:<code>algo.cblof.CBLOF</code></td>\n</tr>\n<tr>\n<td>OCSVM</td>\n<td>One-Class Support Vector Machines</td>\n<td>:class:<code>algo.ocsvm.OCSVM</code></td>\n</tr>\n<tr>\n<td>PCA</td>\n<td>Principal Component Analysis</td>\n<td>:class:<code>algo.pca.PCA</code></td>\n</tr>\n<tr>\n<td>RobustCovariance</td>\n<td>Robust Covariance</td>\n<td>:class:<code>algo.robustcovariance.RCOV</code></td>\n</tr>\n<tr>\n<td>SOD</td>\n<td>Subspace Outlier Detection</td>\n<td>:class:<code>algo.sod.SOD</code></td>\n</tr></tbody></table>\n<h3>Deep Learning Based Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Methods</th>\n<th>Algorithm</th>\n<th>Class API</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>autoencoder</td>\n<td>Outlier detection using replicator neural networks</td>\n<td>:class:<code>algo.autoencoder.AUTOENCODER</code></td>\n</tr>\n<tr>\n<td>dagmm</td>\n<td>Deep autoencoding gaussian mixture model for unsupervised anomaly detection</td>\n<td>:class:<code>algo.dagmm.DAGMM</code></td>\n</tr></tbody></table>\n<h3>Time Serie Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Methods</th>\n<th>Algorithm</th>\n<th>Class API</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lstmad</td>\n<td>Long short term memory networks for anomaly detection in time series</td>\n<td>:class:<code>algo.lstm_ad.LSTMAD</code></td>\n</tr>\n<tr>\n<td>lstmencdec</td>\n<td>LSTM-based encoder-decoder for multi-sensor anomaly detection</td>\n<td>:class:<code>algo.lstm_enc_dec_axl.LSTMED</code></td>\n</tr>\n<tr>\n<td>luminol</td>\n<td>Linkedin's luminol</td>\n<td>:class:<code>algo.luminol.LUMINOL</code></td>\n</tr></tbody></table>\n<h2>APIs Cheatsheet</h2>\n<p>The Full API Reference can be found in <a href=\"https://pyodds.github.io/\" rel=\"nofollow\"><code>handbook</code></a>.</p>\n<ul>\n<li>\n<p><strong>connect_server(hostname,username,password)</strong>: Connect to Apache backend TDengine Service.</p>\n</li>\n<li>\n<p><strong>query_data(connection,cursor,database_name,table_name,start_time,end_time)</strong>: Query data from table <em>table_name</em> in database <em>database_name</em> within a given time range.</p>\n</li>\n<li>\n<p><strong>algorithm_selection(algorithm_name,contamination)</strong>: Select an algorithm as detector.</p>\n</li>\n<li>\n<p><strong>fit(X)</strong>: Fit <em>X</em> to detector.</p>\n</li>\n<li>\n<p><strong>predict(X)</strong>: Predict if instance in <em>X</em> is outlier or not.</p>\n</li>\n<li>\n<p><strong>decision_function(X)</strong>: Output the anomaly score of instances in <em>X</em>.</p>\n</li>\n<li>\n<p><strong>output_performance(algorithm_name,ground_truth,prediction_result,outlierness_score)</strong>: Output the prediction result as evaluation matrix in <em>Accuracy</em>, <em>Precision</em>, <em>Recall</em>, <em>F1 Score</em>, <em>ROC-AUC Score</em>, <em>Cost time</em>.</p>\n</li>\n<li>\n<p><strong>visualize_distribution(X,prediction_result,outlierness_score)</strong>: Visualize the detection result with the the data distribution.</p>\n</li>\n<li>\n<p><strong>visualize_outlierscore(outlierness_score,prediction_result,contamination)</strong> Visualize the detection result with the outlier score.</p>\n</li>\n</ul>\n<h2>License</h2>\n\n<p>You may use this software under the MIT License.</p>\n\n          </div>"}, "last_serial": 5950226, "releases": {"1.0.0b1": [{"comment_text": "", "digests": {"md5": "8b891700120891b2d07463169136f277", "sha256": "c700b4cf157b6bee50c42f106a77a8b548f3f1a02462e69775f6489ced0fef21"}, "downloads": -1, "filename": "pyodds-1.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "8b891700120891b2d07463169136f277", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5150, "upload_time": "2019-10-09T01:44:20", "upload_time_iso_8601": "2019-10-09T01:44:20.310793Z", "url": "https://files.pythonhosted.org/packages/ca/b5/d13ec046e0b7c92e94bf3bf7484f054d2b3579c9f5509cf214666aedd4bf/pyodds-1.0.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1e7d7e3fa095aa7974fc01652207907", "sha256": "8c6f9b84da4bd3ce48e2b474cc91589bd69fbb0dbdcac8a3b1f9c61f7312abeb"}, "downloads": -1, "filename": "pyodds-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "a1e7d7e3fa095aa7974fc01652207907", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4808, "upload_time": "2019-10-09T01:44:22", "upload_time_iso_8601": "2019-10-09T01:44:22.435739Z", "url": "https://files.pythonhosted.org/packages/b0/3d/7a68a186ec9bf618fbe0ba65f258f248c48ba6639e51537e4c95ee526b44/pyodds-1.0.0b1.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "7f78a644aab8a5573898683f9cce028a", "sha256": "bdde470c935c3a13e69e5e83a8ed5dfd0e87c1a744cd08fcd19987be38c930f1"}, "downloads": -1, "filename": "pyodds-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f78a644aab8a5573898683f9cce028a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 55954, "upload_time": "2019-10-09T14:34:46", "upload_time_iso_8601": "2019-10-09T14:34:46.700616Z", "url": "https://files.pythonhosted.org/packages/e3/ff/1eb1f7f05a10223b57d9a8b3ecd3af0a3a126c40c544a621bc2a0a0111d6/pyodds-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6ddf5d98c42381df1175355a8e60bbd", "sha256": "9878cf3b9087dafd742190471ce703ebb369d9ad7d1005ee7e574dd3a3305f9b"}, "downloads": -1, "filename": "pyodds-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "a6ddf5d98c42381df1175355a8e60bbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 37581, "upload_time": "2019-10-09T14:34:51", "upload_time_iso_8601": "2019-10-09T14:34:51.949929Z", "url": "https://files.pythonhosted.org/packages/01/76/43743b4c3c5ed60392e9478d73f556d95fe69559cfefc887fa376875356b/pyodds-1.0.0rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f78a644aab8a5573898683f9cce028a", "sha256": "bdde470c935c3a13e69e5e83a8ed5dfd0e87c1a744cd08fcd19987be38c930f1"}, "downloads": -1, "filename": "pyodds-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f78a644aab8a5573898683f9cce028a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 55954, "upload_time": "2019-10-09T14:34:46", "upload_time_iso_8601": "2019-10-09T14:34:46.700616Z", "url": "https://files.pythonhosted.org/packages/e3/ff/1eb1f7f05a10223b57d9a8b3ecd3af0a3a126c40c544a621bc2a0a0111d6/pyodds-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6ddf5d98c42381df1175355a8e60bbd", "sha256": "9878cf3b9087dafd742190471ce703ebb369d9ad7d1005ee7e574dd3a3305f9b"}, "downloads": -1, "filename": "pyodds-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "a6ddf5d98c42381df1175355a8e60bbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 37581, "upload_time": "2019-10-09T14:34:51", "upload_time_iso_8601": "2019-10-09T14:34:51.949929Z", "url": "https://files.pythonhosted.org/packages/01/76/43743b4c3c5ed60392e9478d73f556d95fe69559cfefc887fa376875356b/pyodds-1.0.0rc1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:23 2020"}