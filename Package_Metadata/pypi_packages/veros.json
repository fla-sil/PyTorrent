{"info": {"author": "Dion H\u00e4fner (NBI Copenhagen)", "author_email": "dion.haefner@nbi.ku.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering"], "description": "<p align=\"center\">\n<img src=\"doc/_images/veros-logo-400px.png?raw=true\">\n</p>\n\n<p align=\"center\">\n  <a href=\"http://veros.readthedocs.io/?badge=latest\">\n    <img src=\"https://readthedocs.org/projects/veros/badge/?version=latest\" alt=\"Documentation status\">\n  </a>\n  <a href=\"https://travis-ci.org/team-ocean/veros\">\n    <img src=\"https://travis-ci.org/team-ocean/veros.svg?branch=master\" alt=\"Build status\">\n  </a>\n  <a href=\"https://codecov.io/gh/team-ocean/veros\">\n    <img src=\"https://codecov.io/gh/team-ocean/veros/branch/master/graph/badge.svg\" alt=\"Code Coverage\">\n  </a>\n  <a href=\"https://zenodo.org/badge/latestdoi/87419383\">\n    <img src=\"https://zenodo.org/badge/87419383.svg\" alt=\"DOI\">\n  </a>\n</p>\n\nVeros, the *versatile ocean simulator*, is just that: A powerful tool\nthat makes high-performance ocean modeling approachable and fun. Since\nit is a pure Python module, the days of struggling with complicated\nmodel setup workflows, ancient programming environments, and obscure\nlegacy code are finally over.\n\nVeros supports both a NumPy backend for small-scale problems and a fully\nparallelized high-performance backend [powered by\nBohrium](https://github.com/bh107/bohrium) using either OpenMP (CPU) or\nOpenCL (GPU), and runs on distributed architectures via MPI.\n\nA good starting point to gain an overview of Veros\\' design,\nperformance, and capabilities are [these slides of a talk on\nVeros](http://slides.com/dionhaefner/veros-ams) held during the 98th\nAnnual Meeting of the American Meteorological Society.\n\nThe underlying numerics are based on\n[pyOM2](https://wiki.cen.uni-hamburg.de/ifm/TO/pyOM2), an ocean model\ndeveloped by Carsten Eden (Institut f\u00fcr Meereskunde, Hamburg\nUniversity). Veros is currently being developed at Niels Bohr Institute,\nCopenhagen University.\n\n#### How about a demonstration?\n\n<p align=\"center\">\n  <a href=\"https://media.giphy.com/media/dwS6EeA4OTfsZZHVE9/giphy.mp4\">\n      <img src=\"https://media.giphy.com/media/dwS6EeA4OTfsZZHVE9/giphy-downsized-large.gif\" alt=\"0.25\u00d70.25\u00b0 high-resolution model spin-up\">\n  </a>\n</p>\n\n<p align=\"center\">\n(0.25\u00d70.25\u00b0 high-resolution model spin-up, click for better\nquality)\n</p>\n\n## Features\n\nVeros provides\n\n-   a fully staggered **3-D grid geometry** (*C-grid*)\n-   support for both **idealized and realistic configurations** in\n    Cartesian or pseudo-spherical coordinates\n-   several **friction and advection schemes** to choose from\n-   isoneutral mixing, eddy-kinetic energy, turbulent kinetic energy,\n    and internal wave energy **parameterizations**\n-   several **pre-implemented diagnostics** such as energy fluxes,\n    variable time averages, and a vertical overturning stream function\n    (written to netCDF output)\n-   **pre-configured idealized and realistic set-ups** that are ready to\n    run and easy to adapt\n-   **accessibility, readability, and extensibility** - thanks to the\n    power of Python!\n\n## Veros for the impatient\n\nA minimal example to install and run Veros:\n\n```bash\n$ pip install veros[all]\n$ veros copy-setup acc --to /tmp\n$ cd /tmp/acc\n$ python acc.py\n```\n\n## Installation\n\n### Dependencies\n\nVeros only has one external library dependency, `HDF5`. The installation\nprocedure of this library varies between platforms. The easiest way to\ninstall Veros and its dependencies (including Bohrium) is [Anaconda\nPython](https://www.continuum.io/downloads) that ships with a package\nmanager (`conda`).\n\nIf you do not want to use Anaconda, the most convenient way is to use\nyour operating system\\'s package manager. On Debian / Ubuntu, you can\ne.g. use\n\n```bash\n$ sudo apt-get install libhdf5-dev\n```\n\nSimilar package managers on OSX are [Homebrew](https://brew.sh/) or\n[MacPorts](https://www.macports.org/), which both provide the required\ndependencies as pre-compiled binaries.\n\n### Installing Veros\n\nAs soon as you have a working environment, installing Veros is simple:\n\n1.  Clone the repository to your hard-drive:\n\n    ```bash\n    $ git clone https://github.com/team-ocean/veros.git\n    ```\n\n2.  Install it, preferably with\n\n    ```bash\n    $ pip install -e veros\n    ```\n\n    If you use the `-e` flag, any changes you make to the model code are\n    immediately reflected without having to re-install.\n\nIn case you want to use the Bohrium backend, you will have to install\n[Bohrium](https://github.com/bh107/bohrium), e.g. through `conda` or\n`apt-get`, or by building it from source.\n\n## Basic usage\n\nTo run Veros, you need to set up a model - i.e., specify which settings\nand model domain you want to use. This is done by subclassing the\n`Veros` base class in a *setup script* that is written in Python. You\nshould have a look at the pre-implemented model setups in the\nrepository\\'s `setup` folder, or use the `veros copy-setup` command to\ncopy one into your current folder. A good place to start is the [ACC\nmodel](https://github.com/team-ocean/veros/blob/master/setup/acc/acc.py):\n\n```bash\n$ veros copy-setup acc\n```\n\nAfter setting up your model, all you need to do is call the `setup` and\n`run` methods on your setup class. The pre-implemented setups can all be\nexecuted as scripts, e.g. through\n\n```bash\n$ python acc.py\n```\n\nFor more information on using Veros, have a look at [our\ndocumentation](http://veros.readthedocs.io).\n\n## Contributing\n\nContributions to Veros are always welcome, no matter if you spotted an\ninaccuracy in [the documentation](http://veros.readthedocs.io), wrote a\nnice setup, fixed a bug, or even extended Veros\\' core mechanics. There\nare two ways to contribute:\n\n-   If you want to report a bug or request a missing feature, please\n    [open an issue](https://github.com/team-ocean/veros/issues). If you\n    are reporting a bug, make sure to include all relevant information\n    for reproducing it (ideally through a *minimal* code sample).\n-   If you want to fix the issue yourself, or wrote an extension for\n    Veros - great! You are welcome to submit your code for review by\n    committing it to a repository and opening a [pull\n    request](https://github.com/team-ocean/veros/pulls). However,\n    before you do so, please check [the contribution\n    guide](http://veros.readthedocs.io/quickstart/get-started.html#enhancing-veros)\n    for some tips on testing and benchmarking, and to make sure that\n    your modifications adhere with our style policies. Most importantly,\n    please ensure that you follow the [PEP8\n    guidelines](https://www.python.org/dev/peps/pep-0008/), use\n    *meaningful* variable names, and document your code using\n    [Google-style\n    docstrings](http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://veros.readthedocs.io", "keywords": "oceanography python parallel numpy multi-core geophysics ocean-model bohrium mpi4py", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "veros", "package_url": "https://pypi.org/project/veros/", "platform": "", "project_url": "https://pypi.org/project/veros/", "project_urls": {"Homepage": "https://veros.readthedocs.io"}, "release_url": "https://pypi.org/project/veros/0.2.1/", "requires_dist": null, "requires_python": ">3.5.2", "summary": "The versatile ocean simulator, in pure Python, powered by Bohrium.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/629b987ea7408b71f506e66fd1e39a4e023e1e09/646f632f5f696d616765732f7665726f732d6c6f676f2d34303070782e706e673f7261773d74727565\">\n</p>\n<p align=\"center\">\n  <a href=\"http://veros.readthedocs.io/?badge=latest\" rel=\"nofollow\">\n    <img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f25179fc453919e6a06456dab884631e3d70f75/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7665726f732f62616467652f3f76657273696f6e3d6c6174657374\">\n  </a>\n  <a href=\"https://travis-ci.org/team-ocean/veros\" rel=\"nofollow\">\n    <img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fdba6061bc803625333cfbc91bbf3f10119e237/68747470733a2f2f7472617669732d63692e6f72672f7465616d2d6f6365616e2f7665726f732e7376673f6272616e63683d6d6173746572\">\n  </a>\n  <a href=\"https://codecov.io/gh/team-ocean/veros\" rel=\"nofollow\">\n    <img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3df852447800db75ba06682da9f292828462489a/68747470733a2f2f636f6465636f762e696f2f67682f7465616d2d6f6365616e2f7665726f732f6272616e63682f6d61737465722f67726170682f62616467652e737667\">\n  </a>\n  <a href=\"https://zenodo.org/badge/latestdoi/87419383\" rel=\"nofollow\">\n    <img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/200decc4933de1031650caa63f39d47be6e6e84f/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f38373431393338332e737667\">\n  </a>\n</p>\n<p>Veros, the <em>versatile ocean simulator</em>, is just that: A powerful tool\nthat makes high-performance ocean modeling approachable and fun. Since\nit is a pure Python module, the days of struggling with complicated\nmodel setup workflows, ancient programming environments, and obscure\nlegacy code are finally over.</p>\n<p>Veros supports both a NumPy backend for small-scale problems and a fully\nparallelized high-performance backend <a href=\"https://github.com/bh107/bohrium\" rel=\"nofollow\">powered by\nBohrium</a> using either OpenMP (CPU) or\nOpenCL (GPU), and runs on distributed architectures via MPI.</p>\n<p>A good starting point to gain an overview of Veros' design,\nperformance, and capabilities are <a href=\"http://slides.com/dionhaefner/veros-ams\" rel=\"nofollow\">these slides of a talk on\nVeros</a> held during the 98th\nAnnual Meeting of the American Meteorological Society.</p>\n<p>The underlying numerics are based on\n<a href=\"https://wiki.cen.uni-hamburg.de/ifm/TO/pyOM2\" rel=\"nofollow\">pyOM2</a>, an ocean model\ndeveloped by Carsten Eden (Institut f\u00fcr Meereskunde, Hamburg\nUniversity). Veros is currently being developed at Niels Bohr Institute,\nCopenhagen University.</p>\n<h4>How about a demonstration?</h4>\n<p align=\"center\">\n  <a href=\"https://media.giphy.com/media/dwS6EeA4OTfsZZHVE9/giphy.mp4\" rel=\"nofollow\">\n      <img alt=\"0.25\u00d70.25\u00b0 high-resolution model spin-up\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6596c1aa7946ab2f1417e2adc0b0fe4d192c2951/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f64775336456541344f5466735a5a485645392f67697068792d646f776e73697a65642d6c617267652e676966\">\n  </a>\n</p>\n<p align=\"center\">\n(0.25\u00d70.25\u00b0 high-resolution model spin-up, click for better\nquality)\n</p>\n<h2>Features</h2>\n<p>Veros provides</p>\n<ul>\n<li>a fully staggered <strong>3-D grid geometry</strong> (<em>C-grid</em>)</li>\n<li>support for both <strong>idealized and realistic configurations</strong> in\nCartesian or pseudo-spherical coordinates</li>\n<li>several <strong>friction and advection schemes</strong> to choose from</li>\n<li>isoneutral mixing, eddy-kinetic energy, turbulent kinetic energy,\nand internal wave energy <strong>parameterizations</strong></li>\n<li>several <strong>pre-implemented diagnostics</strong> such as energy fluxes,\nvariable time averages, and a vertical overturning stream function\n(written to netCDF output)</li>\n<li><strong>pre-configured idealized and realistic set-ups</strong> that are ready to\nrun and easy to adapt</li>\n<li><strong>accessibility, readability, and extensibility</strong> - thanks to the\npower of Python!</li>\n</ul>\n<h2>Veros for the impatient</h2>\n<p>A minimal example to install and run Veros:</p>\n<pre>$ pip install veros<span class=\"o\">[</span>all<span class=\"o\">]</span>\n$ veros copy-setup acc --to /tmp\n$ <span class=\"nb\">cd</span> /tmp/acc\n$ python acc.py\n</pre>\n<h2>Installation</h2>\n<h3>Dependencies</h3>\n<p>Veros only has one external library dependency, <code>HDF5</code>. The installation\nprocedure of this library varies between platforms. The easiest way to\ninstall Veros and its dependencies (including Bohrium) is <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda\nPython</a> that ships with a package\nmanager (<code>conda</code>).</p>\n<p>If you do not want to use Anaconda, the most convenient way is to use\nyour operating system's package manager. On Debian / Ubuntu, you can\ne.g. use</p>\n<pre>$ sudo apt-get install libhdf5-dev\n</pre>\n<p>Similar package managers on OSX are <a href=\"https://brew.sh/\" rel=\"nofollow\">Homebrew</a> or\n<a href=\"https://www.macports.org/\" rel=\"nofollow\">MacPorts</a>, which both provide the required\ndependencies as pre-compiled binaries.</p>\n<h3>Installing Veros</h3>\n<p>As soon as you have a working environment, installing Veros is simple:</p>\n<ol>\n<li>\n<p>Clone the repository to your hard-drive:</p>\n<pre>$ git clone https://github.com/team-ocean/veros.git\n</pre>\n</li>\n<li>\n<p>Install it, preferably with</p>\n<pre>$ pip install -e veros\n</pre>\n<p>If you use the <code>-e</code> flag, any changes you make to the model code are\nimmediately reflected without having to re-install.</p>\n</li>\n</ol>\n<p>In case you want to use the Bohrium backend, you will have to install\n<a href=\"https://github.com/bh107/bohrium\" rel=\"nofollow\">Bohrium</a>, e.g. through <code>conda</code> or\n<code>apt-get</code>, or by building it from source.</p>\n<h2>Basic usage</h2>\n<p>To run Veros, you need to set up a model - i.e., specify which settings\nand model domain you want to use. This is done by subclassing the\n<code>Veros</code> base class in a <em>setup script</em> that is written in Python. You\nshould have a look at the pre-implemented model setups in the\nrepository's <code>setup</code> folder, or use the <code>veros copy-setup</code> command to\ncopy one into your current folder. A good place to start is the <a href=\"https://github.com/team-ocean/veros/blob/master/setup/acc/acc.py\" rel=\"nofollow\">ACC\nmodel</a>:</p>\n<pre>$ veros copy-setup acc\n</pre>\n<p>After setting up your model, all you need to do is call the <code>setup</code> and\n<code>run</code> methods on your setup class. The pre-implemented setups can all be\nexecuted as scripts, e.g. through</p>\n<pre>$ python acc.py\n</pre>\n<p>For more information on using Veros, have a look at <a href=\"http://veros.readthedocs.io\" rel=\"nofollow\">our\ndocumentation</a>.</p>\n<h2>Contributing</h2>\n<p>Contributions to Veros are always welcome, no matter if you spotted an\ninaccuracy in <a href=\"http://veros.readthedocs.io\" rel=\"nofollow\">the documentation</a>, wrote a\nnice setup, fixed a bug, or even extended Veros' core mechanics. There\nare two ways to contribute:</p>\n<ul>\n<li>If you want to report a bug or request a missing feature, please\n<a href=\"https://github.com/team-ocean/veros/issues\" rel=\"nofollow\">open an issue</a>. If you\nare reporting a bug, make sure to include all relevant information\nfor reproducing it (ideally through a <em>minimal</em> code sample).</li>\n<li>If you want to fix the issue yourself, or wrote an extension for\nVeros - great! You are welcome to submit your code for review by\ncommitting it to a repository and opening a <a href=\"https://github.com/team-ocean/veros/pulls\" rel=\"nofollow\">pull\nrequest</a>. However,\nbefore you do so, please check <a href=\"http://veros.readthedocs.io/quickstart/get-started.html#enhancing-veros\" rel=\"nofollow\">the contribution\nguide</a>\nfor some tips on testing and benchmarking, and to make sure that\nyour modifications adhere with our style policies. Most importantly,\nplease ensure that you follow the <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8\nguidelines</a>, use\n<em>meaningful</em> variable names, and document your code using\n<a href=\"http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" rel=\"nofollow\">Google-style\ndocstrings</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6193570, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "3c5cd6df17b4eed4cbcc680defac77b2", "sha256": "0be5659cdc27c8274e51ce18f18e5dcf524e8da6e29bdd25e53b8ea2c849a871"}, "downloads": -1, "filename": "veros-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3c5cd6df17b4eed4cbcc680defac77b2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 299971, "upload_time": "2018-01-25T07:32:59", "upload_time_iso_8601": "2018-01-25T07:32:59.349567Z", "url": "https://files.pythonhosted.org/packages/c5/aa/d04dae4de3eadf758fe69c0757ed05217a3607d873ca02805f5520249032/veros-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16e8c62cba3db322ec45d897e09a9ba7", "sha256": "9470fc2da6abcf817e41b041d05d0278bbeb82066a6ce19164c9faf1bfcd1591"}, "downloads": -1, "filename": "veros-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "16e8c62cba3db322ec45d897e09a9ba7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 299971, "upload_time": "2018-01-25T07:33:03", "upload_time_iso_8601": "2018-01-25T07:33:03.615514Z", "url": "https://files.pythonhosted.org/packages/04/49/d9c5a3d5c9acd388f252eff7c3d94067c4c77ceeaf70d29e740693448edf/veros-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b85a62fd6e61d32f67ae349751140bc1", "sha256": "b9ca807932403b138f5e5c8cd8c26267afb7eb04179de190d1cc63c03d19c077"}, "downloads": -1, "filename": "veros-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b85a62fd6e61d32f67ae349751140bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 288960, "upload_time": "2018-01-25T07:33:07", "upload_time_iso_8601": "2018-01-25T07:33:07.336007Z", "url": "https://files.pythonhosted.org/packages/30/85/e45cf4c8710ea38b964102487c9dbbecd10a1f251d177d55c8a84bb2f6d7/veros-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "538d56ab6a1a919ffa063cbdf32e220e", "sha256": "52f183b80896ba8a03c6d4d3e033a96ea27b7b6d21c9682991785b6876bd6cf8"}, "downloads": -1, "filename": "veros-0.2.0.tar.gz", "has_sig": false, "md5_digest": "538d56ab6a1a919ffa063cbdf32e220e", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.2", "size": 304327, "upload_time": "2019-05-22T19:22:04", "upload_time_iso_8601": "2019-05-22T19:22:04.696886Z", "url": "https://files.pythonhosted.org/packages/57/a5/e31208ce0fa6c5d2b22fafd292cc32315c78d597cd50cde0eeab48dd50e5/veros-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7d611bae2b72fdab1c4ac98f4879fc71", "sha256": "ac6330a8b99327814954b1709621c33281c17e0f03bfbb8ccb5d5e51faea39c8"}, "downloads": -1, "filename": "veros-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7d611bae2b72fdab1c4ac98f4879fc71", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.2", "size": 303136, "upload_time": "2019-11-25T12:03:24", "upload_time_iso_8601": "2019-11-25T12:03:24.903916Z", "url": "https://files.pythonhosted.org/packages/9f/b0/64bad121b52c150286c84c4823f25608d5ed49c478ec8bdfba8afa6f59b8/veros-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d611bae2b72fdab1c4ac98f4879fc71", "sha256": "ac6330a8b99327814954b1709621c33281c17e0f03bfbb8ccb5d5e51faea39c8"}, "downloads": -1, "filename": "veros-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7d611bae2b72fdab1c4ac98f4879fc71", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.2", "size": 303136, "upload_time": "2019-11-25T12:03:24", "upload_time_iso_8601": "2019-11-25T12:03:24.903916Z", "url": "https://files.pythonhosted.org/packages/9f/b0/64bad121b52c150286c84c4823f25608d5ed49c478ec8bdfba8afa6f59b8/veros-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:44 2020"}