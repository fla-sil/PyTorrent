{"info": {"author": "HelgeCPH", "author_email": "rhp@cphbusiness.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3"], "description": "# Cypher Kernel\n\nThis is a small Jupyter kernel wrapping the Cypher language and Neo4j [https://neo4j.com/developer/cypher/](https://neo4j.com/developer/cypher/).\n\n![](docs/what_is_this.gif)\n\n\n## Why? Do I need a Cypher language kernel?\n\nI started working on this kernel as I am teaching on Cypher and Neo4j as part of a database course on Copenhagen Business Academy.\n\nUsually, my lecture notes are in Jupyter notebooks and I use the Jupter extension [RISE](https://github.com/damianavila/RISE) to make slideshows with executable code.\n\nIn the classes on graph databases, I want to focus on the query language Cypher. That is, I do not want to have Cypher embedded in Python such as with [icypher](https://github.com/lebedov/icypher) -a `%cypher` magic sending queries with the help of `py2neo`- or in [plain Python notebooks](https://nicolewhite.github.io/neo4j-jupyter/hello-world.html)\n\n\n## How does it look like?\n\nIn case you do not have a Python environment with Jupyter installed on your system, you can see in the following how the rendered notebooks -not the presentations- could look like, see:\n\n  * https://nbviewer.jupyter.org/github/HelgeCPH/cypher_kernel/blob/master/example/paradise_papers.ipynb\n  * https://nbviewer.jupyter.org/github/HelgeCPH/cypher_kernel/blob/master/example/movie_graph.ipynb or\n  * http://htmlpreview.github.io/?https://github.com/HelgeCPH/cypher_kernel/blob/master/example/movie_graph.html \n\n\n\n## Installation\n\nTo install the `cypher_kernel` from PyPi:\n\n```bash\npip install cypher_kernel\npython -m cypher_kernel.install\n```\n\nTo work on this code directly, you may want to:\n\n```bash\ngit clone git@github.com:HelgeCPH/cypher_kernel.git\ncd cypher_kernel\npip install .\npython -m cypher_kernel.install\n```\n\n## Configuration\n\nTo configure a Neo4j user, password, and the address of the Neo4j REST API, you can specify the values in the configuration file `cypher_config.yml`. Normally, this file is located under `~/.jupyter/`. In case the file is not existent the following default configuration is used:\n\n```yaml\nuser: 'neo4j'\npwd: 'neo4j'\nhost: 'localhost:7474'\nconnect_result_nodes: False\ncmd_timeout: null\n```\n\n\n## Using the Cypher Kernel\n\n**Notebook**: The *New* menu in the notebook should show an option for an `Cypher` notebook.\n\n**Console frontends**: To use it with the console frontends, add `--kernel cypher` to their command line arguments.\n\n\n\n## Neo4j for Presentations\n\n\nTo get quickly started -under the assumption you have Docker installed- start up a Neo4j DBMS instance with: \n\n```bash\ndocker run --rm --publish=7474:7474 --publish=7687:7687 neo4j\ndocker run --rm --publish=7474:7474 --publish=7687:7687 --env=NEO4J_dbms_memory_pagecache_size=4G neo4j\n```\n\n  * Navigate with your browser to http://localhost:7474\n  * Login with `neo4j` as username and password respectively\n  * Change the password to a new one. **OBS** Do not forget to add this password to the `cypher_config.yml`, see above.\n  * Now, create a new Cypher notebook.\n\nSee more on configuring the Neo4j container https://neo4j.com/docs/operations-manual/current/installation/docker/\n\n\n### What? I have Docker but no `pip` and other Python stuff?!\n\nLikely the easiest way to get started, have:\n\n  * A Linux/OS X (Windows should work but I cannot test it at the moment...)\n  * An installation of Anaconda (with Python 3.6), see https://www.anaconda.com/download/. Download and install it according to their documentation, see https://docs.anaconda.com/anaconda/install/\n  * A Docker installation, see https://www.docker.com/community-edition#/download. Alternatively, a native installation of Neo4j, see https://neo4j.com/download/\n  * The `cypher_kernel`:\n  ```bash\n  pip install cypher_kernel\n  python -m cypher_kernel.install\n  ```\n  * The Jupyter Notebook server up and running:\n  ```bash\n  jupyter notebook\n  ```\n\nThat should be it...\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HelgeCPH/cypher_kernel", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cypher_kernel", "package_url": "https://pypi.org/project/cypher_kernel/", "platform": "", "project_url": "https://pypi.org/project/cypher_kernel/", "project_urls": {"Homepage": "https://github.com/HelgeCPH/cypher_kernel"}, "release_url": "https://pypi.org/project/cypher_kernel/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "A Cypher kernel for Jupyter", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Cypher Kernel<br><br>This is a small Jupyter kernel wrapping the Cypher language and Neo4j [https://neo4j.com/developer/cypher/](https://neo4j.com/developer/cypher/).<br><br>![](docs/what_is_this.gif)<br><br><br>## Why? Do I need a Cypher language kernel?<br><br>I started working on this kernel as I am teaching on Cypher and Neo4j as part of a database course on Copenhagen Business Academy.<br><br>Usually, my lecture notes are in Jupyter notebooks and I use the Jupter extension [RISE](https://github.com/damianavila/RISE) to make slideshows with executable code.<br><br>In the classes on graph databases, I want to focus on the query language Cypher. That is, I do not want to have Cypher embedded in Python such as with [icypher](https://github.com/lebedov/icypher) -a `%cypher` magic sending queries with the help of `py2neo`- or in [plain Python notebooks](https://nicolewhite.github.io/neo4j-jupyter/hello-world.html)<br><br><br>## How does it look like?<br><br>In case you do not have a Python environment with Jupyter installed on your system, you can see in the following how the rendered notebooks -not the presentations- could look like, see:<br><br>  * https://nbviewer.jupyter.org/github/HelgeCPH/cypher_kernel/blob/master/example/paradise_papers.ipynb<br>  * https://nbviewer.jupyter.org/github/HelgeCPH/cypher_kernel/blob/master/example/movie_graph.ipynb or<br>  * http://htmlpreview.github.io/?https://github.com/HelgeCPH/cypher_kernel/blob/master/example/movie_graph.html <br><br><br><br>## Installation<br><br>To install the `cypher_kernel` from PyPi:<br><br>```bash<br>pip install cypher_kernel<br>python -m cypher_kernel.install<br>```<br><br>To work on this code directly, you may want to:<br><br>```bash<br>git clone git@github.com:HelgeCPH/cypher_kernel.git<br>cd cypher_kernel<br>pip install .<br>python -m cypher_kernel.install<br>```<br><br>## Configuration<br><br>To configure a Neo4j user, password, and the address of the Neo4j REST API, you can specify the values in the configuration file `cypher_config.yml`. Normally, this file is located under `~/.jupyter/`. In case the file is not existent the following default configuration is used:<br><br>```yaml<br>user: 'neo4j'<br>pwd: 'neo4j'<br>host: 'localhost:7474'<br>connect_result_nodes: False<br>cmd_timeout: null<br>```<br><br><br>## Using the Cypher Kernel<br><br>**Notebook**: The *New* menu in the notebook should show an option for an `Cypher` notebook.<br><br>**Console frontends**: To use it with the console frontends, add `--kernel cypher` to their command line arguments.<br><br><br><br>## Neo4j for Presentations<br><br><br>To get quickly started -under the assumption you have Docker installed- start up a Neo4j DBMS instance with: <br><br>```bash<br>docker run --rm --publish=7474:7474 --publish=7687:7687 neo4j<br>docker run --rm --publish=7474:7474 --publish=7687:7687 --env=NEO4J_dbms_memory_pagecache_size=4G neo4j<br>```<br><br>  * Navigate with your browser to http://localhost:7474<br>  * Login with `neo4j` as username and password respectively<br>  * Change the password to a new one. **OBS** Do not forget to add this password to the `cypher_config.yml`, see above.<br>  * Now, create a new Cypher notebook.<br><br>See more on configuring the Neo4j container https://neo4j.com/docs/operations-manual/current/installation/docker/<br><br><br>### What? I have Docker but no `pip` and other Python stuff?!<br><br>Likely the easiest way to get started, have:<br><br>  * A Linux/OS X (Windows should work but I cannot test it at the moment...)<br>  * An installation of Anaconda (with Python 3.6), see https://www.anaconda.com/download/. Download and install it according to their documentation, see https://docs.anaconda.com/anaconda/install/<br>  * A Docker installation, see https://www.docker.com/community-edition#/download. Alternatively, a native installation of Neo4j, see https://neo4j.com/download/<br>  * The `cypher_kernel`:<br>  ```bash<br>  pip install cypher_kernel<br>  python -m cypher_kernel.install<br>  ```<br>  * The Jupyter Notebook server up and running:<br>  ```bash<br>  jupyter notebook<br>  ```<br><br>That should be it...<br><br><br>\n          </div>"}, "last_serial": 3669475, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9394681a8de5f45a25c7030b560508de", "sha256": "ae8bc6e2b155a3735fed142e9b26412e19484fd0402a0fca7c8d8f639341be71"}, "downloads": -1, "filename": "cypher_kernel-0.1.tar.gz", "has_sig": false, "md5_digest": "9394681a8de5f45a25c7030b560508de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2774975, "upload_time": "2018-02-19T22:13:38", "upload_time_iso_8601": "2018-02-19T22:13:38.767538Z", "url": "https://files.pythonhosted.org/packages/ba/ec/81cb0013902e7b56bd023a7d1ed713b9bbf264df7ba49975739e912a3e66/cypher_kernel-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6540dd15b8a159d28d271f5296aa0bfa", "sha256": "7698f99d435911b1ae1f8b3e4e5bb7f275d64f62baec3faa2eb33976cadea740"}, "downloads": -1, "filename": "cypher_kernel-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6540dd15b8a159d28d271f5296aa0bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2774952, "upload_time": "2018-02-19T22:43:54", "upload_time_iso_8601": "2018-02-19T22:43:54.144783Z", "url": "https://files.pythonhosted.org/packages/ee/db/bb6aa353b2ed36a6905bf1a0fcff424c5dcc9647fe2adddb8eb71b2836f9/cypher_kernel-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "030f40042e9c45640cee52313bb8120d", "sha256": "6eec76dbf6683a33c67388bd632a3e25ae524abdaf18aa2ab6c8b210bed624d5"}, "downloads": -1, "filename": "cypher_kernel-0.2.0.tar.gz", "has_sig": false, "md5_digest": "030f40042e9c45640cee52313bb8120d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2776053, "upload_time": "2018-02-26T23:05:28", "upload_time_iso_8601": "2018-02-26T23:05:28.187195Z", "url": "https://files.pythonhosted.org/packages/bd/65/d21fc049e27a70e09007e79e1b5e1deeacd81b324d3df56910847f918571/cypher_kernel-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cc1b22eb17c7c568132276805a64bbb1", "sha256": "603eb46cc22b44599eed2cf641d15e26d93b53c1d852b237290ad15dbcbe47f7"}, "downloads": -1, "filename": "cypher_kernel-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cc1b22eb17c7c568132276805a64bbb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2776512, "upload_time": "2018-03-13T21:23:06", "upload_time_iso_8601": "2018-03-13T21:23:06.433118Z", "url": "https://files.pythonhosted.org/packages/82/19/ea7b8a768b2606a88681d6577117eaad9526a8bd765f6d9ab0efdb1680fd/cypher_kernel-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b7b8673f45820e4a7055a3aa90c63f43", "sha256": "f6e9b6cf145fc5ca6daf0b688c4450101ba38abfdd358e1c9df4769a6de35a7d"}, "downloads": -1, "filename": "cypher_kernel-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b7b8673f45820e4a7055a3aa90c63f43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2776775, "upload_time": "2018-03-13T23:03:59", "upload_time_iso_8601": "2018-03-13T23:03:59.707689Z", "url": "https://files.pythonhosted.org/packages/07/eb/6c241aba63496b97eece540c3ff6e56822fd5fb7571d6914bfe8a1562e2e/cypher_kernel-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1110540f2c9d502898e7d49092183862", "sha256": "f3dfc1e80276069acc726748f4ede51bae135a87fd03dac86a16840dbf4c29f1"}, "downloads": -1, "filename": "cypher_kernel-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1110540f2c9d502898e7d49092183862", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2776799, "upload_time": "2018-03-14T16:28:36", "upload_time_iso_8601": "2018-03-14T16:28:36.902658Z", "url": "https://files.pythonhosted.org/packages/2a/50/72336ddb1e762fc73d35b99c3ef6fa0573d21ef9721d0212bd7dc578cfdd/cypher_kernel-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1110540f2c9d502898e7d49092183862", "sha256": "f3dfc1e80276069acc726748f4ede51bae135a87fd03dac86a16840dbf4c29f1"}, "downloads": -1, "filename": "cypher_kernel-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1110540f2c9d502898e7d49092183862", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2776799, "upload_time": "2018-03-14T16:28:36", "upload_time_iso_8601": "2018-03-14T16:28:36.902658Z", "url": "https://files.pythonhosted.org/packages/2a/50/72336ddb1e762fc73d35b99c3ef6fa0573d21ef9721d0212bd7dc578cfdd/cypher_kernel-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:04 2020"}