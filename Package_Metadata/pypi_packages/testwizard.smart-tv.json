{"info": {"author": "Eurofins Digital Testing - Belgium", "author_email": "support-be@eurofins.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python :: 3.3"], "description": "# Testwizard - Smart-Tv\n\n> Python language support for testing Smart-Tv devices using testwizard\n\n## Usage\n\n* import the [testwizard.core](https://pypi.org/project/testwizard.core/) and the testwizard.smart_tv packages\n* get a sesion and use it to create a Smart TV testobject.\n* Use this object to execute commands\n* You can use the session to add results that will be reported to the robot when the script finishes or set results that will be posted immediately.\n\n## Sample script\n\n### Python (smart-tv.py)\n\n```python\nfrom sys import path\npath.append(\"../packages/core\")\npath.append(\"../packages/testobjects/core\")\npath.append(\"../packages/testobjects/smartTv\")\npath.append(\"../packages/commands/core\")\npath.append(\"../packages/commands/audio\")\npath.append(\"../packages/commands/powerswitch\")\npath.append(\"../packages/commands/remotecontrol\")\npath.append(\"../packages/commands/video\")\npath.append(\"../packages/commands/camera\")\n\nfrom testwizard.core import TestWizard\nfrom testwizard.core import ResultCodes\nfrom testwizard.smart_tv import SmartTv\n\nwith TestWizard() as TW:\n    session = TW.session\n\n    print(\"-- Parameter usage ---\")\n    print(\"  Param1 = \" + session.parameters[\"param1\"])\n    print(\"  Param2 = \" + session.parameters[\"param2\"])\n\n    print(\"-- Session info ---\")\n    print(\"  scriptFilePath = \" + session.info[\"scriptFilePath\"])\n    print(\"  scriptFileName = \" + session.info[\"scriptFileName\"])\n    print(\"  storagePath = \" + session.info[\"storagePath\"])\n    print(\"  tester = \" + session.info[\"tester\"])\n    print(\"  environment.scriptsBasePath = \" + session.info[\"environment\"][\"scriptsBasePath\"])\n    print(\"  environment.storageBasePath = \" + session.info[\"environment\"][\"storageBasePath\"])\n    print(\"  environment.ocrEngine = \" + session.info[\"environment\"][\"ocrEngine\"])\n    print(\"  environment.testWizardVersion = \" + session.info[\"environment\"][\"testWizardVersion\"])\n\n    if session.info[\"session\"] is not None:\n        print(\"Script was started by the Manager:\")\n        print(\"  session.id = \" + session.info[\"session\"][\"id\"])\n        print(\"  session.name = \" + session.info[\"session\"][\"name\"])\n        print(\"  session.scriptIndex = \" + session.info[\"session\"][\"scriptIndex\"])\n    else:\n        print(\"Script was started from the IDE\")\n\n    print(\"-- Create Smart TV test object ---\")\n    smartTv = SmartTv(session, \"SmartTv\")\n\n    print(\"-- Smart TV test object info ---\")\n    print(\"  id = \" + smartTv.info.id)\n    print(\"  name = \" + smartTv.info.name)\n    print(\"  category = \" + smartTv.info.category)\n    print(\"  device.serialNo = \" + smartTv.info.device.serialNo)\n    print(\"  device.hardwareVersion = \" + smartTv.info.device.hardwareVersion)\n    print(\"  device.softwareVersion = \" + smartTv.info.device.softwareVersion)\n    print(\"  device.description = \" + smartTv.info.device.description)\n    print(\"  device.vendor.name = \" + smartTv.info.device.vendor.name)\n    print(\"  device.vendor.modelName = \" + smartTv.info.device.vendor.modelName)\n    print(\"  device.vendor.serialNo = \" + smartTv.info.device.vendor.serialNo)\n\n    print(\"-- Commands ---\")\n\n    basePath = session.info[\"environment\"][\"scriptsBasePath\"]\n\n    print(\"smartTV: cameraInitializeNetwork\")\n    result = smartTv.cameraInitializeNetwork()\n    print(result.message)\n    if result.success is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    snapShotFilePath = basePath + \"smart-tv-py-test.jpg\"\n\n    print(\"smartTV: cameraSnapShot\")\n    result = smartTv.cameraSnapShot(snapShotFilePath)\n    print(result.message)\n    if result.success is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    motionX = 347\n    motionY = 2\n    motionWidth = 64\n    motionHeight = 30\n    motionDuration = 5\n    motionDistanceThreshold = 10\n\n    print(\"smartTV: cameraDetectMotion with motion - custom distanceThreshold\")\n    result = smartTv.cameraDetectMotion(motionX, motionY, motionWidth, motionHeight, motionDuration, motionDistanceThreshold)\n    print(result.message)\n    if result.success is False or not result.hasMotion:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    print(\"smartTV: cameraDetectMotion with motion - default distanceThreshold\")\n    result = smartTv.cameraDetectMotion(motionX, motionY, motionWidth, motionHeight, motionDuration)\n    print(result.message)\n    if result.success is False or result.hasMotion:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    print(\"smartTV: cameraDetectMotion with no motion - custom distanceThreshold\")\n    result = smartTv.cameraDetectMotion(motionX + 64, motionY, motionWidth, motionHeight, motionDuration, motionDistanceThreshold)\n    print(result.message)\n    if result.success is False or result.hasMotion:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    matchingReference = basePath + \"Mibox_Home.bmp\"\n    nonMatchingReference = basePath + \"Mibox_NotHome.bmp\"\n    roiX = 146\n    roiY = 257\n    roiWidth = 150\n    roiHeight = 145\n    sampleMatchDuration = 5\n    sampleMatchDistanceThreshold = 21\n\n    print(\"smartTV: cameraWaitForSampleNoMatch with no match - custom distanceThreshold\")\n    result = smartTv.loadReferenceBitmap(nonMatchingReference)\n    print(result.message)\n    if result.success is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n    result = smartTv.cameraWaitForSampleNoMatch(roiX, roiY, roiWidth, roiHeight, sampleMatchDuration, sampleMatchDistanceThreshold)\n    print(result.message)\n    if result.success is False or result.hasMatch is True:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    print(\"smartTV: cameraWaitForSample with match - default distanceThreshold\")\n    result = smartTv.loadReferenceBitmap(matchingReference)\n    print(result.message)\n    if result.success is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n    result = smartTv.cameraWaitForSample(roiX, roiY, roiWidth, roiHeight, sampleMatchDuration)\n    print(result.message)\n    if result.success is False or result.hasMatch is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    matchingPattern = basePath + \"Mibox_Home_Pattern.bmp\"\n    patternX = 180\n    patternY = 96\n    patternWidth = 81\n    patternHeight = 81\n    patternMatchDuration = 5\n    patternMatchDistanceThreshold = 21\n\n    print(\"smartTV: cameraWaitForPattern with match - custom distanceThreshold\")\n    result = smartTv.cameraWaitForPattern(matchingPattern, patternX, patternY, patternWidth, patternHeight, patternMatchDuration, patternMatchDistanceThreshold)\n    print(result.message)\n    if result.success is False or result.hasMatch is False:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    nonMatchingPattern = basePath + \"Mibox_NotHome_Pattern.bmp\"\n\n    print(\"smartTV: cameraWaitForPatternNoMatch with no match - default distanceThreshold\")\n    result = smartTv.cameraWaitForPatternNoMatch(nonMatchingPattern, patternX, patternY, patternWidth, patternHeight, patternMatchDuration)\n    print(result.message)\n    if result.success is False or result.hasMatch is True:\n        print(\"Fail\")\n        session.addFail(result.message)\n\n    if not (session.hasFails or session.hasErrors):\n        session.setResult(ResultCodes.PASS, \"Test was successful\")\n```\n\n### sidecar file (smart-tv.json)\n\n```json\n{\n    \"tester\": \"John Smith\",\n    \"parameters\": [\n        { \"name\": \"param1\", \"value\": \"value1\"},\n        { \"name\": \"param2\", \"value\": \"value2\"}\n    ],\n    \"resources\": [\n        { \"category\": \"SMART_TV\", \"name\": \"SmartTv\", \"id\": \"TV Model 1\"}\n    ],\n    \"outputFolder\": \"c:\\\\temp\"\n}\n```\n\n## License\n\n[Testwizard licensing](https://www.eurofins-digitaltesting.com/testwizard/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "testwizard.smart-tv", "package_url": "https://pypi.org/project/testwizard.smart-tv/", "platform": "", "project_url": "https://pypi.org/project/testwizard.smart-tv/", "project_urls": null, "release_url": "https://pypi.org/project/testwizard.smart-tv/3.1.19/", "requires_dist": ["testwizard.core (==3.1.19)", "testwizard.testobjects-core (==3.1.19)", "testwizard.commands-audio (==3.1.19)", "testwizard.commands-mobile (==3.1.19)", "testwizard.commands-powerswitch (==3.1.19)", "testwizard.commands-remotecontrol (==3.1.19)", "testwizard.commands-video (==3.1.19)", "testwizard.commands-camera (==3.1.19)"], "requires_python": "", "summary": "Testwizard for Smart TV testobjects", "version": "3.1.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Testwizard - Smart-Tv</h1>\n<blockquote>\n<p>Python language support for testing Smart-Tv devices using testwizard</p>\n</blockquote>\n<h2>Usage</h2>\n<ul>\n<li>import the <a href=\"https://pypi.org/project/testwizard.core/\" rel=\"nofollow\">testwizard.core</a> and the testwizard.smart_tv packages</li>\n<li>get a sesion and use it to create a Smart TV testobject.</li>\n<li>Use this object to execute commands</li>\n<li>You can use the session to add results that will be reported to the robot when the script finishes or set results that will be posted immediately.</li>\n</ul>\n<h2>Sample script</h2>\n<h3>Python (smart-tv.py)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sys</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/core\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/testobjects/core\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/testobjects/smartTv\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/core\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/audio\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/powerswitch\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/remotecontrol\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/video\"</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"../packages/commands/camera\"</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">testwizard.core</span> <span class=\"kn\">import</span> <span class=\"n\">TestWizard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">testwizard.core</span> <span class=\"kn\">import</span> <span class=\"n\">ResultCodes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">testwizard.smart_tv</span> <span class=\"kn\">import</span> <span class=\"n\">SmartTv</span>\n\n<span class=\"k\">with</span> <span class=\"n\">TestWizard</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">TW</span><span class=\"p\">:</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">TW</span><span class=\"o\">.</span><span class=\"n\">session</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Parameter usage ---\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  Param1 = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"s2\">\"param1\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  Param2 = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"s2\">\"param2\"</span><span class=\"p\">])</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Session info ---\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  scriptFilePath = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"scriptFilePath\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  scriptFileName = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"scriptFileName\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  storagePath = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"storagePath\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  tester = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"tester\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  environment.scriptsBasePath = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"environment\"</span><span class=\"p\">][</span><span class=\"s2\">\"scriptsBasePath\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  environment.storageBasePath = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"environment\"</span><span class=\"p\">][</span><span class=\"s2\">\"storageBasePath\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  environment.ocrEngine = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"environment\"</span><span class=\"p\">][</span><span class=\"s2\">\"ocrEngine\"</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  environment.testWizardVersion = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"environment\"</span><span class=\"p\">][</span><span class=\"s2\">\"testWizardVersion\"</span><span class=\"p\">])</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"session\"</span><span class=\"p\">]</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Script was started by the Manager:\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  session.id = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"session\"</span><span class=\"p\">][</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  session.name = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"session\"</span><span class=\"p\">][</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  session.scriptIndex = \"</span> <span class=\"o\">+</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"session\"</span><span class=\"p\">][</span><span class=\"s2\">\"scriptIndex\"</span><span class=\"p\">])</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Script was started from the IDE\"</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Create Smart TV test object ---\"</span><span class=\"p\">)</span>\n    <span class=\"n\">smartTv</span> <span class=\"o\">=</span> <span class=\"n\">SmartTv</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"s2\">\"SmartTv\"</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Smart TV test object info ---\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  id = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  name = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  category = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.serialNo = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">serialNo</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.hardwareVersion = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">hardwareVersion</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.softwareVersion = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">softwareVersion</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.description = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.vendor.name = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">vendor</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.vendor.modelName = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">vendor</span><span class=\"o\">.</span><span class=\"n\">modelName</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  device.vendor.serialNo = \"</span> <span class=\"o\">+</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">vendor</span><span class=\"o\">.</span><span class=\"n\">serialNo</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Commands ---\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">basePath</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">\"environment\"</span><span class=\"p\">][</span><span class=\"s2\">\"scriptsBasePath\"</span><span class=\"p\">]</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraInitializeNetwork\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraInitializeNetwork</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">snapShotFilePath</span> <span class=\"o\">=</span> <span class=\"n\">basePath</span> <span class=\"o\">+</span> <span class=\"s2\">\"smart-tv-py-test.jpg\"</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraSnapShot\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraSnapShot</span><span class=\"p\">(</span><span class=\"n\">snapShotFilePath</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">motionX</span> <span class=\"o\">=</span> <span class=\"mi\">347</span>\n    <span class=\"n\">motionY</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">motionWidth</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n    <span class=\"n\">motionHeight</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n    <span class=\"n\">motionDuration</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"n\">motionDistanceThreshold</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraDetectMotion with motion - custom distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraDetectMotion</span><span class=\"p\">(</span><span class=\"n\">motionX</span><span class=\"p\">,</span> <span class=\"n\">motionY</span><span class=\"p\">,</span> <span class=\"n\">motionWidth</span><span class=\"p\">,</span> <span class=\"n\">motionHeight</span><span class=\"p\">,</span> <span class=\"n\">motionDuration</span><span class=\"p\">,</span> <span class=\"n\">motionDistanceThreshold</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMotion</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraDetectMotion with motion - default distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraDetectMotion</span><span class=\"p\">(</span><span class=\"n\">motionX</span><span class=\"p\">,</span> <span class=\"n\">motionY</span><span class=\"p\">,</span> <span class=\"n\">motionWidth</span><span class=\"p\">,</span> <span class=\"n\">motionHeight</span><span class=\"p\">,</span> <span class=\"n\">motionDuration</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMotion</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraDetectMotion with no motion - custom distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraDetectMotion</span><span class=\"p\">(</span><span class=\"n\">motionX</span> <span class=\"o\">+</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">motionY</span><span class=\"p\">,</span> <span class=\"n\">motionWidth</span><span class=\"p\">,</span> <span class=\"n\">motionHeight</span><span class=\"p\">,</span> <span class=\"n\">motionDuration</span><span class=\"p\">,</span> <span class=\"n\">motionDistanceThreshold</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMotion</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">matchingReference</span> <span class=\"o\">=</span> <span class=\"n\">basePath</span> <span class=\"o\">+</span> <span class=\"s2\">\"Mibox_Home.bmp\"</span>\n    <span class=\"n\">nonMatchingReference</span> <span class=\"o\">=</span> <span class=\"n\">basePath</span> <span class=\"o\">+</span> <span class=\"s2\">\"Mibox_NotHome.bmp\"</span>\n    <span class=\"n\">roiX</span> <span class=\"o\">=</span> <span class=\"mi\">146</span>\n    <span class=\"n\">roiY</span> <span class=\"o\">=</span> <span class=\"mi\">257</span>\n    <span class=\"n\">roiWidth</span> <span class=\"o\">=</span> <span class=\"mi\">150</span>\n    <span class=\"n\">roiHeight</span> <span class=\"o\">=</span> <span class=\"mi\">145</span>\n    <span class=\"n\">sampleMatchDuration</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"n\">sampleMatchDistanceThreshold</span> <span class=\"o\">=</span> <span class=\"mi\">21</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraWaitForSampleNoMatch with no match - custom distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">loadReferenceBitmap</span><span class=\"p\">(</span><span class=\"n\">nonMatchingReference</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraWaitForSampleNoMatch</span><span class=\"p\">(</span><span class=\"n\">roiX</span><span class=\"p\">,</span> <span class=\"n\">roiY</span><span class=\"p\">,</span> <span class=\"n\">roiWidth</span><span class=\"p\">,</span> <span class=\"n\">roiHeight</span><span class=\"p\">,</span> <span class=\"n\">sampleMatchDuration</span><span class=\"p\">,</span> <span class=\"n\">sampleMatchDistanceThreshold</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMatch</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraWaitForSample with match - default distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">loadReferenceBitmap</span><span class=\"p\">(</span><span class=\"n\">matchingReference</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraWaitForSample</span><span class=\"p\">(</span><span class=\"n\">roiX</span><span class=\"p\">,</span> <span class=\"n\">roiY</span><span class=\"p\">,</span> <span class=\"n\">roiWidth</span><span class=\"p\">,</span> <span class=\"n\">roiHeight</span><span class=\"p\">,</span> <span class=\"n\">sampleMatchDuration</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMatch</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">matchingPattern</span> <span class=\"o\">=</span> <span class=\"n\">basePath</span> <span class=\"o\">+</span> <span class=\"s2\">\"Mibox_Home_Pattern.bmp\"</span>\n    <span class=\"n\">patternX</span> <span class=\"o\">=</span> <span class=\"mi\">180</span>\n    <span class=\"n\">patternY</span> <span class=\"o\">=</span> <span class=\"mi\">96</span>\n    <span class=\"n\">patternWidth</span> <span class=\"o\">=</span> <span class=\"mi\">81</span>\n    <span class=\"n\">patternHeight</span> <span class=\"o\">=</span> <span class=\"mi\">81</span>\n    <span class=\"n\">patternMatchDuration</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"n\">patternMatchDistanceThreshold</span> <span class=\"o\">=</span> <span class=\"mi\">21</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraWaitForPattern with match - custom distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraWaitForPattern</span><span class=\"p\">(</span><span class=\"n\">matchingPattern</span><span class=\"p\">,</span> <span class=\"n\">patternX</span><span class=\"p\">,</span> <span class=\"n\">patternY</span><span class=\"p\">,</span> <span class=\"n\">patternWidth</span><span class=\"p\">,</span> <span class=\"n\">patternHeight</span><span class=\"p\">,</span> <span class=\"n\">patternMatchDuration</span><span class=\"p\">,</span> <span class=\"n\">patternMatchDistanceThreshold</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMatch</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"n\">nonMatchingPattern</span> <span class=\"o\">=</span> <span class=\"n\">basePath</span> <span class=\"o\">+</span> <span class=\"s2\">\"Mibox_NotHome_Pattern.bmp\"</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"smartTV: cameraWaitForPatternNoMatch with no match - default distanceThreshold\"</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">smartTv</span><span class=\"o\">.</span><span class=\"n\">cameraWaitForPatternNoMatch</span><span class=\"p\">(</span><span class=\"n\">nonMatchingPattern</span><span class=\"p\">,</span> <span class=\"n\">patternX</span><span class=\"p\">,</span> <span class=\"n\">patternY</span><span class=\"p\">,</span> <span class=\"n\">patternWidth</span><span class=\"p\">,</span> <span class=\"n\">patternHeight</span><span class=\"p\">,</span> <span class=\"n\">patternMatchDuration</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">success</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span> <span class=\"ow\">or</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">hasMatch</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fail\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">addFail</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">hasFails</span> <span class=\"ow\">or</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">hasErrors</span><span class=\"p\">):</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">setResult</span><span class=\"p\">(</span><span class=\"n\">ResultCodes</span><span class=\"o\">.</span><span class=\"n\">PASS</span><span class=\"p\">,</span> <span class=\"s2\">\"Test was successful\"</span><span class=\"p\">)</span>\n</pre>\n<h3>sidecar file (smart-tv.json)</h3>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"tester\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John Smith\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"parameters\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"param1\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value1\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"param2\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value2\"</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"resources\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span> <span class=\"nt\">\"category\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SMART_TV\"</span><span class=\"p\">,</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SmartTv\"</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TV Model 1\"</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"outputFolder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"c:\\\\temp\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>License</h2>\n<p><a href=\"https://www.eurofins-digitaltesting.com/testwizard/\" rel=\"nofollow\">Testwizard licensing</a></p>\n\n          </div>"}, "last_serial": 6835937, "releases": {"3.1.17": [{"comment_text": "", "digests": {"md5": "39bdf101e5012ae984c27f6d5e7aaf59", "sha256": "421b744fbe646ef724ffdd1a982cc27a7b147f60b03948666ba3264dc63635cd"}, "downloads": -1, "filename": "testwizard.smart_tv-3.1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "39bdf101e5012ae984c27f6d5e7aaf59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5260, "upload_time": "2020-03-03T06:47:20", "upload_time_iso_8601": "2020-03-03T06:47:20.414880Z", "url": "https://files.pythonhosted.org/packages/05/0e/b09bf88ea68970dd5f1619a615519795898912d0e06da41c66db9e101cd5/testwizard.smart_tv-3.1.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a33adf4fb807d03e86cefbe15a310a83", "sha256": "c020cb49a940baf033bafb4b00f227cc9a76586cf1bb29fd599ca76528bb32e7"}, "downloads": -1, "filename": "testwizard.smart-tv-3.1.17.tar.gz", "has_sig": false, "md5_digest": "a33adf4fb807d03e86cefbe15a310a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5872, "upload_time": "2020-03-03T06:47:22", "upload_time_iso_8601": "2020-03-03T06:47:22.276046Z", "url": "https://files.pythonhosted.org/packages/da/26/ac09efe8e979865b2c501933e45ac23681966575566f18e96e9f0f8da4d8/testwizard.smart-tv-3.1.17.tar.gz", "yanked": false}], "3.1.18": [{"comment_text": "", "digests": {"md5": "ae41df05a059185d33ce2bf1fd17421e", "sha256": "9d65e96273532354de3fafd8ae5978380206c8d298ff1fbd80dc7a3598dbdcb5"}, "downloads": -1, "filename": "testwizard.smart_tv-3.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "ae41df05a059185d33ce2bf1fd17421e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6177, "upload_time": "2020-03-04T06:21:03", "upload_time_iso_8601": "2020-03-04T06:21:03.292986Z", "url": "https://files.pythonhosted.org/packages/86/0c/47aaced019ed93d30a2d9ac3d91a5b0c9485c1cb2d5e68efcaa55c18aa5c/testwizard.smart_tv-3.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "696bd7a0967d66b8577ca5e14b9b0fc0", "sha256": "d7f02a928a0bdc027ed790721115bb97045dfc8dda6f804b1c357e68b5fc86a2"}, "downloads": -1, "filename": "testwizard.smart-tv-3.1.18.tar.gz", "has_sig": false, "md5_digest": "696bd7a0967d66b8577ca5e14b9b0fc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7941, "upload_time": "2020-03-04T06:21:04", "upload_time_iso_8601": "2020-03-04T06:21:04.474667Z", "url": "https://files.pythonhosted.org/packages/42/15/1d1d6d782162e9c39b51645263bec7dadd3d9e15c15abc513ff859b75a5b/testwizard.smart-tv-3.1.18.tar.gz", "yanked": false}], "3.1.19": [{"comment_text": "", "digests": {"md5": "95b07e25e2f764826a0099344faa063e", "sha256": "a1a6d24702603661a0e7d81a1b51cc35b0efba5e292e6ebfc1181333a2441cea"}, "downloads": -1, "filename": "testwizard.smart_tv-3.1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "95b07e25e2f764826a0099344faa063e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6189, "upload_time": "2020-03-18T12:26:30", "upload_time_iso_8601": "2020-03-18T12:26:30.193198Z", "url": "https://files.pythonhosted.org/packages/15/9e/c45c01d9929c11bfb4b0193225b1d7ae485a6fcee9cbfdfe85a69811671c/testwizard.smart_tv-3.1.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9244305b2068a19779dc71fa4f746ed7", "sha256": "c0845ef6d20bbb37a359b05fa26414319513da871780edb1b80f1f6874654e86"}, "downloads": -1, "filename": "testwizard.smart-tv-3.1.19.tar.gz", "has_sig": false, "md5_digest": "9244305b2068a19779dc71fa4f746ed7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7963, "upload_time": "2020-03-18T12:26:31", "upload_time_iso_8601": "2020-03-18T12:26:31.753758Z", "url": "https://files.pythonhosted.org/packages/97/92/229911c9059f3dc25651e655acaf4f63882122778a71d3fa84decc9fb10c/testwizard.smart-tv-3.1.19.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95b07e25e2f764826a0099344faa063e", "sha256": "a1a6d24702603661a0e7d81a1b51cc35b0efba5e292e6ebfc1181333a2441cea"}, "downloads": -1, "filename": "testwizard.smart_tv-3.1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "95b07e25e2f764826a0099344faa063e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6189, "upload_time": "2020-03-18T12:26:30", "upload_time_iso_8601": "2020-03-18T12:26:30.193198Z", "url": "https://files.pythonhosted.org/packages/15/9e/c45c01d9929c11bfb4b0193225b1d7ae485a6fcee9cbfdfe85a69811671c/testwizard.smart_tv-3.1.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9244305b2068a19779dc71fa4f746ed7", "sha256": "c0845ef6d20bbb37a359b05fa26414319513da871780edb1b80f1f6874654e86"}, "downloads": -1, "filename": "testwizard.smart-tv-3.1.19.tar.gz", "has_sig": false, "md5_digest": "9244305b2068a19779dc71fa4f746ed7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7963, "upload_time": "2020-03-18T12:26:31", "upload_time_iso_8601": "2020-03-18T12:26:31.753758Z", "url": "https://files.pythonhosted.org/packages/97/92/229911c9059f3dc25651e655acaf4f63882122778a71d3fa84decc9fb10c/testwizard.smart-tv-3.1.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:13 2020"}