{"info": {"author": "Ilshad Habibullin", "author_email": "astoon.net at gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "============================\r\nPersistent Cheetah templates\r\n============================\r\n\r\nFeatures:\r\n\r\n- Cheetah template engine,\r\n- sources in filesystem,\r\n- stored in ZODB,\r\n- editable TTW, simple \"$var\" Cheetah syntax for non-technical user,\r\n- able to testing in management web-form,\r\n- able to reset from source.\r\n\r\nUse cases:\r\n\r\n- mail templates,\r\n- editable HTML snippets and pages,\r\n- other.\r\n\r\n\r\n* Needed imports for these tests *\r\n\r\n  >>> import os, tempfile\r\n  >>> temp_dir = tempfile.mkdtemp()\r\n\r\n  >>> import zope.component\r\n  >>> import ice.template\r\n\r\n  >>> from zope.configuration import xmlconfig\r\n  >>> context = xmlconfig.file('meta.zcml', ice.template)\r\n\r\n\r\nCreate templates\r\n----------------\r\n\r\n1) Create source file using Cheetah syntax \"$\" for the variables::\r\n\r\n  >>> file = os.path.join(temp_dir, 'welcome.tmpl')\r\n\r\n  >>> open(file, 'w').write('''\r\n  ...     Dear $user_name!\r\n  ...\t  Welcome to $site_name!\r\n  ... ''')\r\n\r\n2) Register template::\r\n\r\n  >>> context = xmlconfig.string('''\r\n  ...     &lt;configure\r\n  ...\t      xmlns=\"http://namespaces.zope.org/zope\"\r\n  ...\t      xmlns:ice=\"http://namespaces.zope.org/ice\"\r\n  ...\t      i18n_domain=\"test\"&gt;\r\n  ...\r\n  ...\t      &lt;ice:template\r\n  ...\t          name=\"welcome\"\r\n  ...\t\t  title=\"Welcome\"\r\n  ...\t\t  storage=\"my-templates\"\r\n  ...\t\t  source=\"%s\"\r\n  ...\t\t  variables=\"user_name\r\n  ...\t\t             site_name\"\r\n  ...\t\t  /&gt;\r\n  ...\r\n  ...\t  &lt;/configure&gt;\r\n  ...     ''' % file, context=context)\r\n\r\n\r\nCreate storage\r\n--------------\r\n\r\nNeed create (one or more) local utility to store templates.\r\nNote, the utility name used for lookup the storage::\r\n\r\n  >>> templates = ice.template.Templates()\r\n\r\n  >>> zope.component.provideUtility(\r\n  ...     templates, ice.template.ITemplates, 'my-templates')\r\n\r\n\r\nUsage\r\n-----\r\n\r\nUse template::\r\n\r\n  >>> data = {'user_name':u'Bob', 'site_name':'www.gnu.org'}\r\n\r\n  >>> templates.compileTemplate('welcome', data)\r\n  '\\n    Dear Bob!\\n    Welcome to www.gnu.org!\\n'\r\n\r\n\r\nManage templates\r\n----------------\r\n\r\nLooking all templates, registered for this storage::\r\n\r\n  >>> list(templates.getAllTemplates())\r\n  [(u'welcome', <ice.template.zcml.Template object at ...>)]\r\n\r\nGet variables names::\r\n\r\n  >>> templates.getVariables('welcome')\r\n  [u'user_name', u'site_name']\r\n\r\nGet template::\r\n\r\n  >>> templates.getTemplate('welcome')\r\n  '\\n    Dear $user_name!\\n    Welcome to $site_name!\\n'\r\n\r\nEdit template::\r\n\r\n  >>> templates.setTemplate('welcome', \"$site_name for you, $user_name\")\r\n\r\n  >>> templates.compileTemplate('welcome', data)\r\n  'www.gnu.org for you, Bob'\r\n\r\nReset from source::\r\n\r\n  >>> templates.resetTemplate('welcome')\r\n  '\\n    Dear $user_name!\\n    Welcome to $site_name!\\n'\r\n\r\n  >>> templates.compileTemplate('welcome', data)\r\n  '\\n    Dear Bob!\\n    Welcome to www.gnu.org!\\n'\r\n\r\n\r\nUsing property\r\n--------------\r\n\r\nAnother way to use special property::\r\n\r\n  >>> class Pagelet(object):\r\n  ...\r\n  ...     template = ice.template.PersistentTemplate('my-templates', 'welcome')\r\n  ...\r\n  ...     def update(self):\r\n  ...         self.data = {'user_name':'Man', 'site_name':'www.python.com.ua'}\r\n  ...\r\n  ...     def render(self):\r\n  ...         return self.template(self.data)\r\n\r\n  >>> view = Pagelet()\r\n  >>> view.update()\r\n  >>> view.render()\r\n  '\\n    Dear Man!\\n    Welcome to www.python.com.ua!\\n'\r\n\r\n\r\nManagement UI\r\n-------------\r\n\r\nManagement persistent Cheetah templates UI based on z3c.pagelet layers.\r\n\r\nThere are 3 views for management templates:\r\n\r\n  1) Listing of all storages.\r\n  2) Listing of all templates in a storage.\r\n  3) Edit form for given template, reload, testing, preview.\r\n\r\nActually, you need to do only one: register listing of all storages\r\npagelet using class ice.template.browser.storages.Pagelet (see example\r\nin configure.zcml in ice.template.browser module), because (2) and (3)\r\nare already registered. For examples, take a look configure.zcml\r\nin ice.template.tests module.\r\n\r\n=======\r\nCHANGES\r\n=======\r\n\r\n\r\nVersion 0.1.0 (2009-05-04)\r\n--------------------------\r\n\r\n- Initial release, this code is moved from common ice.app library.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://launchpad.net/ice.template", "keywords": "", "license": "GPL v.3", "maintainer": "", "maintainer_email": "", "name": "ice.template", "package_url": "https://pypi.org/project/ice.template/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ice.template/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://launchpad.net/ice.template"}, "release_url": "https://pypi.org/project/ice.template/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Persistent Cheetah templates", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ============================\n<br>Persistent Cheetah templates\n<br>============================\n<br>\n<br>Features:\n<br>\n<br>- Cheetah template engine,\n<br>- sources in filesystem,\n<br>- stored in ZODB,\n<br>- editable TTW, simple \"$var\" Cheetah syntax for non-technical user,\n<br>- able to testing in management web-form,\n<br>- able to reset from source.\n<br>\n<br>Use cases:\n<br>\n<br>- mail templates,\n<br>- editable HTML snippets and pages,\n<br>- other.\n<br>\n<br>\n<br>* Needed imports for these tests *\n<br>\n<br>  &gt;&gt;&gt; import os, tempfile\n<br>  &gt;&gt;&gt; temp_dir = tempfile.mkdtemp()\n<br>\n<br>  &gt;&gt;&gt; import zope.component\n<br>  &gt;&gt;&gt; import ice.template\n<br>\n<br>  &gt;&gt;&gt; from zope.configuration import xmlconfig\n<br>  &gt;&gt;&gt; context = xmlconfig.file('meta.zcml', ice.template)\n<br>\n<br>\n<br>Create templates\n<br>----------------\n<br>\n<br>1) Create source file using Cheetah syntax \"$\" for the variables::\n<br>\n<br>  &gt;&gt;&gt; file = os.path.join(temp_dir, 'welcome.tmpl')\n<br>\n<br>  &gt;&gt;&gt; open(file, 'w').write('''\n<br>  ...     Dear $user_name!\n<br>  ...\t  Welcome to $site_name!\n<br>  ... ''')\n<br>\n<br>2) Register template::\n<br>\n<br>  &gt;&gt;&gt; context = xmlconfig.string('''\n<br>  ...     &amp;lt;configure\n<br>  ...\t      xmlns=\"http://namespaces.zope.org/zope\"\n<br>  ...\t      xmlns:ice=\"http://namespaces.zope.org/ice\"\n<br>  ...\t      i18n_domain=\"test\"&amp;gt;\n<br>  ...\n<br>  ...\t      &amp;lt;ice:template\n<br>  ...\t          name=\"welcome\"\n<br>  ...\t\t  title=\"Welcome\"\n<br>  ...\t\t  storage=\"my-templates\"\n<br>  ...\t\t  source=\"%s\"\n<br>  ...\t\t  variables=\"user_name\n<br>  ...\t\t             site_name\"\n<br>  ...\t\t  /&amp;gt;\n<br>  ...\n<br>  ...\t  &amp;lt;/configure&amp;gt;\n<br>  ...     ''' % file, context=context)\n<br>\n<br>\n<br>Create storage\n<br>--------------\n<br>\n<br>Need create (one or more) local utility to store templates.\n<br>Note, the utility name used for lookup the storage::\n<br>\n<br>  &gt;&gt;&gt; templates = ice.template.Templates()\n<br>\n<br>  &gt;&gt;&gt; zope.component.provideUtility(\n<br>  ...     templates, ice.template.ITemplates, 'my-templates')\n<br>\n<br>\n<br>Usage\n<br>-----\n<br>\n<br>Use template::\n<br>\n<br>  &gt;&gt;&gt; data = {'user_name':u'Bob', 'site_name':'www.gnu.org'}\n<br>\n<br>  &gt;&gt;&gt; templates.compileTemplate('welcome', data)\n<br>  '\\n    Dear Bob!\\n    Welcome to www.gnu.org!\\n'\n<br>\n<br>\n<br>Manage templates\n<br>----------------\n<br>\n<br>Looking all templates, registered for this storage::\n<br>\n<br>  &gt;&gt;&gt; list(templates.getAllTemplates())\n<br>  [(u'welcome', &lt;ice.template.zcml.Template object at ...&gt;)]\n<br>\n<br>Get variables names::\n<br>\n<br>  &gt;&gt;&gt; templates.getVariables('welcome')\n<br>  [u'user_name', u'site_name']\n<br>\n<br>Get template::\n<br>\n<br>  &gt;&gt;&gt; templates.getTemplate('welcome')\n<br>  '\\n    Dear $user_name!\\n    Welcome to $site_name!\\n'\n<br>\n<br>Edit template::\n<br>\n<br>  &gt;&gt;&gt; templates.setTemplate('welcome', \"$site_name for you, $user_name\")\n<br>\n<br>  &gt;&gt;&gt; templates.compileTemplate('welcome', data)\n<br>  'www.gnu.org for you, Bob'\n<br>\n<br>Reset from source::\n<br>\n<br>  &gt;&gt;&gt; templates.resetTemplate('welcome')\n<br>  '\\n    Dear $user_name!\\n    Welcome to $site_name!\\n'\n<br>\n<br>  &gt;&gt;&gt; templates.compileTemplate('welcome', data)\n<br>  '\\n    Dear Bob!\\n    Welcome to www.gnu.org!\\n'\n<br>\n<br>\n<br>Using property\n<br>--------------\n<br>\n<br>Another way to use special property::\n<br>\n<br>  &gt;&gt;&gt; class Pagelet(object):\n<br>  ...\n<br>  ...     template = ice.template.PersistentTemplate('my-templates', 'welcome')\n<br>  ...\n<br>  ...     def update(self):\n<br>  ...         self.data = {'user_name':'Man', 'site_name':'www.python.com.ua'}\n<br>  ...\n<br>  ...     def render(self):\n<br>  ...         return self.template(self.data)\n<br>\n<br>  &gt;&gt;&gt; view = Pagelet()\n<br>  &gt;&gt;&gt; view.update()\n<br>  &gt;&gt;&gt; view.render()\n<br>  '\\n    Dear Man!\\n    Welcome to www.python.com.ua!\\n'\n<br>\n<br>\n<br>Management UI\n<br>-------------\n<br>\n<br>Management persistent Cheetah templates UI based on z3c.pagelet layers.\n<br>\n<br>There are 3 views for management templates:\n<br>\n<br>  1) Listing of all storages.\n<br>  2) Listing of all templates in a storage.\n<br>  3) Edit form for given template, reload, testing, preview.\n<br>\n<br>Actually, you need to do only one: register listing of all storages\n<br>pagelet using class ice.template.browser.storages.Pagelet (see example\n<br>in configure.zcml in ice.template.browser module), because (2) and (3)\n<br>are already registered. For examples, take a look configure.zcml\n<br>in ice.template.tests module.\n<br>\n<br>=======\n<br>CHANGES\n<br>=======\n<br>\n<br>\n<br>Version 0.1.0 (2009-05-04)\n<br>--------------------------\n<br>\n<br>- Initial release, this code is moved from common ice.app library.\n          </div>"}, "last_serial": 102491, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da79d711036ae4a3779bdea46bd59229", "sha256": "0b9d5453df5ce88c36036874ecf6ec651756d24b988c9aa45c88d08770d90fe4"}, "downloads": -1, "filename": "ice.template-0.1.0-py2.4.egg", "has_sig": false, "md5_digest": "da79d711036ae4a3779bdea46bd59229", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 33309, "upload_time": "2009-05-04T20:45:12", "upload_time_iso_8601": "2009-05-04T20:45:12.808529Z", "url": "https://files.pythonhosted.org/packages/bc/0c/50fea78c6df20e21401dadbe3285f610bc201fab37fefd3de7531ad92c32/ice.template-0.1.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "317542ddfd85d8dbea0455e978015a3c", "sha256": "97870b3d4047cfe1e8247b10a4b131712dfc63c410f4771d631bf0554be412d7"}, "downloads": -1, "filename": "ice.template-0.1.0.tar.gz", "has_sig": false, "md5_digest": "317542ddfd85d8dbea0455e978015a3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12841, "upload_time": "2009-05-04T20:45:09", "upload_time_iso_8601": "2009-05-04T20:45:09.417251Z", "url": "https://files.pythonhosted.org/packages/5d/b5/d0f933ceed5f814411dd33e749c31e4834c1d4dddcece5cf43765a396522/ice.template-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da79d711036ae4a3779bdea46bd59229", "sha256": "0b9d5453df5ce88c36036874ecf6ec651756d24b988c9aa45c88d08770d90fe4"}, "downloads": -1, "filename": "ice.template-0.1.0-py2.4.egg", "has_sig": false, "md5_digest": "da79d711036ae4a3779bdea46bd59229", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 33309, "upload_time": "2009-05-04T20:45:12", "upload_time_iso_8601": "2009-05-04T20:45:12.808529Z", "url": "https://files.pythonhosted.org/packages/bc/0c/50fea78c6df20e21401dadbe3285f610bc201fab37fefd3de7531ad92c32/ice.template-0.1.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "317542ddfd85d8dbea0455e978015a3c", "sha256": "97870b3d4047cfe1e8247b10a4b131712dfc63c410f4771d631bf0554be412d7"}, "downloads": -1, "filename": "ice.template-0.1.0.tar.gz", "has_sig": false, "md5_digest": "317542ddfd85d8dbea0455e978015a3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12841, "upload_time": "2009-05-04T20:45:09", "upload_time_iso_8601": "2009-05-04T20:45:09.417251Z", "url": "https://files.pythonhosted.org/packages/5d/b5/d0f933ceed5f814411dd33e749c31e4834c1d4dddcece5cf43765a396522/ice.template-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:04 2020"}