{"info": {"author": "Shkarupa Alex", "author_email": "shkarupa.alex@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# tfembedhub\n\nConvert embeddings vectors (.txt format) into TensorFlowHub embedding lookup module.\n\n## How to\n\n1. Save lookup keys and embeddings values in text file.\n\nKeys should be in first column. Other columns treated as embedding values. Any space-like characters allowed as columns separator.\n\nNon-existing keys will refer to \"<UNQ>\" key embeddings. You may provide embedding values for that, otherwise it will be initialized with zeros.\n\n```\nkey1 1. 2. 3.\nkey2 4. 5. 6.\n<UNQ> 0. -1. 0.\n```\n\n2. Sonvert saved embeddings into TF Hub Module with \"tfembedhub-convert\" command.\n```bash\ntfembedhub-convert vectors.txt vectors-hub/\n```\n\n3. Use embedding hub via columns in your estimator.\n```python\nfrom tfembedhub text_embedding_column, sequence_text_embedding_column\n\nmy_words_embedding = sequence_text_embedding_column(\n    key='sparse_key_from_features',\n    module_spec='path/to/my/hub'\n)\n\n# Then pass my_words_embedding to estimator \"columns\" list.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shkarupa-alex/tfembedhub", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tfembedhub", "package_url": "https://pypi.org/project/tfembedhub/", "platform": "", "project_url": "https://pypi.org/project/tfembedhub/", "project_urls": {"Homepage": "https://github.com/shkarupa-alex/tfembedhub"}, "release_url": "https://pypi.org/project/tfembedhub/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "TensorFlow Hub module producer for text embedding lookup", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tfembedhub</h1>\n<p>Convert embeddings vectors (.txt format) into TensorFlowHub embedding lookup module.</p>\n<h2>How to</h2>\n<ol>\n<li>Save lookup keys and embeddings values in text file.</li>\n</ol>\n<p>Keys should be in first column. Other columns treated as embedding values. Any space-like characters allowed as columns separator.</p>\n<p>Non-existing keys will refer to \"&lt;UNQ&gt;\" key embeddings. You may provide embedding values for that, otherwise it will be initialized with zeros.</p>\n<pre><code>key1 1. 2. 3.\nkey2 4. 5. 6.\n&lt;UNQ&gt; 0. -1. 0.\n</code></pre>\n<ol>\n<li>Sonvert saved embeddings into TF Hub Module with \"tfembedhub-convert\" command.</li>\n</ol>\n<pre>tfembedhub-convert vectors.txt vectors-hub/\n</pre>\n<ol>\n<li>Use embedding hub via columns in your estimator.</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tfembedhub</span> <span class=\"n\">text_embedding_column</span><span class=\"p\">,</span> <span class=\"n\">sequence_text_embedding_column</span>\n\n<span class=\"n\">my_words_embedding</span> <span class=\"o\">=</span> <span class=\"n\">sequence_text_embedding_column</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'sparse_key_from_features'</span><span class=\"p\">,</span>\n    <span class=\"n\">module_spec</span><span class=\"o\">=</span><span class=\"s1\">'path/to/my/hub'</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Then pass my_words_embedding to estimator \"columns\" list.</span>\n</pre>\n\n          </div>"}, "last_serial": 4753749, "releases": {"1.1.4": [{"comment_text": "", "digests": {"md5": "57a42fd51c66fa31145ec15b1141c6f0", "sha256": "37b7c77fa38e99757667389f6ab64464621dd0b3b31adfca9f698102d3d29686"}, "downloads": -1, "filename": "tfembedhub-1.1.4.tar.gz", "has_sig": false, "md5_digest": "57a42fd51c66fa31145ec15b1141c6f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7018, "upload_time": "2018-11-20T07:07:53", "upload_time_iso_8601": "2018-11-20T07:07:53.264591Z", "url": "https://files.pythonhosted.org/packages/e5/3d/297798d7a576c3c79315c6d5b7f3a1f6cd09955895addb433bff30ef35d4/tfembedhub-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "e895137fa2f2c2b89c538547912ecf5d", "sha256": "3b9a15707a657c6065c277ddffc0148f29e7ba2ae8a682df0cbcbbfd9a4daf18"}, "downloads": -1, "filename": "tfembedhub-1.2.0.tar.gz", "has_sig": false, "md5_digest": "e895137fa2f2c2b89c538547912ecf5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8280, "upload_time": "2018-11-21T16:29:29", "upload_time_iso_8601": "2018-11-21T16:29:29.066733Z", "url": "https://files.pythonhosted.org/packages/2c/7f/ba576c22ed8b21fda301f98212c6a8588847f47a3d38be502b2b805fce01/tfembedhub-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "4fd6fdd651f4bad043f93f55af52519d", "sha256": "6717904c82730904b85d240dc30bcca3c1ed33df8d72a386841610b1d9bdfa4e"}, "downloads": -1, "filename": "tfembedhub-1.2.1.tar.gz", "has_sig": false, "md5_digest": "4fd6fdd651f4bad043f93f55af52519d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8388, "upload_time": "2019-01-29T08:26:48", "upload_time_iso_8601": "2019-01-29T08:26:48.788502Z", "url": "https://files.pythonhosted.org/packages/0d/a8/ba4a08665950ef81a9ba71ce5e9548edcd37d66276bac2b144406167e959/tfembedhub-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4fd6fdd651f4bad043f93f55af52519d", "sha256": "6717904c82730904b85d240dc30bcca3c1ed33df8d72a386841610b1d9bdfa4e"}, "downloads": -1, "filename": "tfembedhub-1.2.1.tar.gz", "has_sig": false, "md5_digest": "4fd6fdd651f4bad043f93f55af52519d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8388, "upload_time": "2019-01-29T08:26:48", "upload_time_iso_8601": "2019-01-29T08:26:48.788502Z", "url": "https://files.pythonhosted.org/packages/0d/a8/ba4a08665950ef81a9ba71ce5e9548edcd37d66276bac2b144406167e959/tfembedhub-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:36 2020"}