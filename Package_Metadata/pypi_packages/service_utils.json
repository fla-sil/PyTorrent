{"info": {"author": "Ivan Deylid", "author_email": "ivanov.dale@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Operating System :: POSIX", "Programming Language :: Python"], "description": "# service_utils\nA simple python package for quick and easy microservices logging and configuration.\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/819d6be760c04433a00dace98c674058)](https://app.codacy.com/app/Sid1057/service_utils?utm_source=github.com&utm_medium=referral&utm_content=Sid1057/service_utils&utm_campaign=Badge_Grade_Dashboard)\n[![Build Status](https://travis-ci.com/Sid1057/service_utils.svg?branch=master)](https://travis-ci.com/Sid1057/service_utils)\n[![Version](https://img.shields.io/pypi/v/service_utils.svg)](https://pypi.org/project/service_utils/)\n[![LICENSE](https://img.shields.io/github/license/sid1057/service_utils.svg)](https://github.com/Sid1057/service_utils/blob/master/LICENSE)\n\n## Overview\nThis package was created for fast and easy import in your application functional which important as part of any service but not so fun for developing each time.\nThe most important thing for working with this library is a configuration file. I especially use .ini format because it is human-readable, simple to parse in python and disallow using large multi-level configuration.\n\n## How to use it\n\n### How to use it in your repository\n\n    1. Simple and good: `pip3 install service_utils`\n    2. Simple and not so good: just copy service_utils.py in your repository\n    3. Not so simple, but it allows you to have the last stable version of the library (if you really need): use .gitmodules file in your repository like this:\n\n.gitmodules:\n\n```bash\n    [submodule \"service_utils\"]\n        path = modules/service_utils\n        url = https://github.com/Sid1057/service_utils.git\n        branch = release\n```\n\n### How to use it in your code\n\n#### Short answer\n```python\n    from service_utils import Service_utils\n\n    service_utils = Service_utils(\n        '--config-key',\n        configuration_required=True)\n\n    # done\n```\n\n#### Real answer\nUsing your program as service mean that you will run it in some operation system with some (maybe empty) arguments like:\n```bash\n    python3 my_app.py -config config.ini --use-something --print-anything\n```\nUsing this package mean that you agree with my thinks about configuration in applications and about part of a code which do this stuff:\n1. Configuration should be simple as possible.\n2. Configuration should be single in service.\n3. Configuration package should do maximum routine of posiible, but no more.\n4. Configuration package should have some default sections in the configuration file.\n5. Configuration package should allow a user (programmer) to do anything with configuration.\n6. Your application should have only one logger\n\nUse \n```python\n    service_utils = Service_utils(\n        '--config-key',  # this keyword would be expected when you run your application\n        configuration_required=True,  # if True - you have to run your application only with config-key\n        configuration_default_path='path_to_default_config.ini',  # if configuration is not required but default configuration exist - this path configuration to configuration file will be used\n        description='This is description of application. It would be show in `python3 app.py --help`')\n```\n\n### Also\nREADME is a little bit crap, but I work on it.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/sid1057/service_utils/", "keywords": "configuration", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "service_utils", "package_url": "https://pypi.org/project/service_utils/", "platform": "linux", "project_url": "https://pypi.org/project/service_utils/", "project_urls": {"Homepage": "https://www.github.com/sid1057/service_utils/"}, "release_url": "https://pypi.org/project/service_utils/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python Service Utilities", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # service_utils<br>A simple python package for quick and easy microservices logging and configuration.<br><br>[![Codacy Badge](https://api.codacy.com/project/badge/Grade/819d6be760c04433a00dace98c674058)](https://app.codacy.com/app/Sid1057/service_utils?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Sid1057/service_utils&amp;utm_campaign=Badge_Grade_Dashboard)<br>[![Build Status](https://travis-ci.com/Sid1057/service_utils.svg?branch=master)](https://travis-ci.com/Sid1057/service_utils)<br>[![Version](https://img.shields.io/pypi/v/service_utils.svg)](https://pypi.org/project/service_utils/)<br>[![LICENSE](https://img.shields.io/github/license/sid1057/service_utils.svg)](https://github.com/Sid1057/service_utils/blob/master/LICENSE)<br><br>## Overview<br>This package was created for fast and easy import in your application functional which important as part of any service but not so fun for developing each time.<br>The most important thing for working with this library is a configuration file. I especially use .ini format because it is human-readable, simple to parse in python and disallow using large multi-level configuration.<br><br>## How to use it<br><br>### How to use it in your repository<br><br>    1. Simple and good: `pip3 install service_utils`<br>    2. Simple and not so good: just copy service_utils.py in your repository<br>    3. Not so simple, but it allows you to have the last stable version of the library (if you really need): use .gitmodules file in your repository like this:<br><br>.gitmodules:<br><br>```bash<br>    [submodule \"service_utils\"]<br>        path = modules/service_utils<br>        url = https://github.com/Sid1057/service_utils.git<br>        branch = release<br>```<br><br>### How to use it in your code<br><br>#### Short answer<br>```python<br>    from service_utils import Service_utils<br><br>    service_utils = Service_utils(<br>        '--config-key',<br>        configuration_required=True)<br><br>    # done<br>```<br><br>#### Real answer<br>Using your program as service mean that you will run it in some operation system with some (maybe empty) arguments like:<br>```bash<br>    python3 my_app.py -config config.ini --use-something --print-anything<br>```<br>Using this package mean that you agree with my thinks about configuration in applications and about part of a code which do this stuff:<br>1. Configuration should be simple as possible.<br>2. Configuration should be single in service.<br>3. Configuration package should do maximum routine of posiible, but no more.<br>4. Configuration package should have some default sections in the configuration file.<br>5. Configuration package should allow a user (programmer) to do anything with configuration.<br>6. Your application should have only one logger<br><br>Use <br>```python<br>    service_utils = Service_utils(<br>        '--config-key',  # this keyword would be expected when you run your application<br>        configuration_required=True,  # if True - you have to run your application only with config-key<br>        configuration_default_path='path_to_default_config.ini',  # if configuration is not required but default configuration exist - this path configuration to configuration file will be used<br>        description='This is description of application. It would be show in `python3 app.py --help`')<br>```<br><br>### Also<br>README is a little bit crap, but I work on it.<br>\n          </div>"}, "last_serial": 4746388, "releases": {"0.1.1b0": [{"comment_text": "", "digests": {"md5": "0ebda5e98be6e667d06a87bdf98c6f33", "sha256": "f7198aa93db7501dc3e38566b59f988d2248dc36516cc70afdd4d42743558ee7"}, "downloads": -1, "filename": "service_utils-0.1.1b0.tar.gz", "has_sig": false, "md5_digest": "0ebda5e98be6e667d06a87bdf98c6f33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3325, "upload_time": "2019-01-22T18:58:24", "upload_time_iso_8601": "2019-01-22T18:58:24.293557Z", "url": "https://files.pythonhosted.org/packages/79/41/d818f8562fc9604d0080d425ade615ad15082a6694977c1e8e43376a33d7/service_utils-0.1.1b0.tar.gz", "yanked": false}], "0.1.2b": [{"comment_text": "", "digests": {"md5": "668d6b99d423ab22ba72c9dcee443466", "sha256": "2ce1db75bb1b6f5b73337a0ad595888d043f792a8b3fcfb0a8d83b3897e3ef08"}, "downloads": -1, "filename": "service_utils-0.1.2b.tar.gz", "has_sig": false, "md5_digest": "668d6b99d423ab22ba72c9dcee443466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3046, "upload_time": "2019-01-22T19:27:32", "upload_time_iso_8601": "2019-01-22T19:27:32.761458Z", "url": "https://files.pythonhosted.org/packages/53/9f/24207147b83bcdf9f9ef43b0bbd5e57c42ed413fdc8e3e9e8a2ec3d0e06a/service_utils-0.1.2b.tar.gz", "yanked": false}], "0.1.3b": [{"comment_text": "", "digests": {"md5": "cb22d27426675771137b78db97947c72", "sha256": "6beb4feb012d7f67b374d5d893592c0c8936e11a4d326a96c78bb4caecf4a7ee"}, "downloads": -1, "filename": "service_utils-0.1.3b.tar.gz", "has_sig": false, "md5_digest": "cb22d27426675771137b78db97947c72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3260, "upload_time": "2019-01-22T22:55:07", "upload_time_iso_8601": "2019-01-22T22:55:07.267010Z", "url": "https://files.pythonhosted.org/packages/d1/e5/15ceccb038e9c0361ad0fe9c2e5bcdd5b9fa991202162bb47b4c5378cd60/service_utils-0.1.3b.tar.gz", "yanked": false}], "0.1.4b": [{"comment_text": "", "digests": {"md5": "ef8aec1fa1f08f2bee0011e3eee46971", "sha256": "25de4b67e355b68bcf39b9967c1c10b412819658228513bf271032456694b112"}, "downloads": -1, "filename": "service_utils-0.1.4b.tar.gz", "has_sig": false, "md5_digest": "ef8aec1fa1f08f2bee0011e3eee46971", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3390, "upload_time": "2019-01-22T23:08:46", "upload_time_iso_8601": "2019-01-22T23:08:46.674502Z", "url": "https://files.pythonhosted.org/packages/63/01/d2487c7ac51aec72f12ff09e14fcf4fdcb67d9869fb1688a6b8eeb64f235/service_utils-0.1.4b.tar.gz", "yanked": false}], "0.1.5b": [{"comment_text": "", "digests": {"md5": "364f1fc13f23361b5f8ab902c33cae24", "sha256": "ef7c2191a26c80c91d3835feab0be323958973c7e057c5cb04f63fb7d3a54abb"}, "downloads": -1, "filename": "service_utils-0.1.5b.tar.gz", "has_sig": false, "md5_digest": "364f1fc13f23361b5f8ab902c33cae24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3542, "upload_time": "2019-01-22T23:29:11", "upload_time_iso_8601": "2019-01-22T23:29:11.026784Z", "url": "https://files.pythonhosted.org/packages/5e/e2/b51bcd1b93d27235fbc7799e493011a2c21926529b68030e61de4406fe88/service_utils-0.1.5b.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "8e8ccb6498db04bb37aaea09b2c62cee", "sha256": "e2fbb83b4c1faa1ab505c70e0feaf030941138a205653da32a62b4417b14843d"}, "downloads": -1, "filename": "service_utils-0.1.6.tar.gz", "has_sig": false, "md5_digest": "8e8ccb6498db04bb37aaea09b2c62cee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3957, "upload_time": "2019-01-27T13:26:12", "upload_time_iso_8601": "2019-01-27T13:26:12.941000Z", "url": "https://files.pythonhosted.org/packages/9a/6c/6b83576fa7011118cfd256a3dcd3757e7bf0e4fc12c2014d20e8fb1c28cf/service_utils-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "702ab4dd2067100a2265b7868eae29f6", "sha256": "e994fb6b58a57af77f9e796fd6242dbf1d8dd60744c3b476091d3945dfd8e857"}, "downloads": -1, "filename": "service_utils-0.1.7.tar.gz", "has_sig": false, "md5_digest": "702ab4dd2067100a2265b7868eae29f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3961, "upload_time": "2019-01-27T14:30:54", "upload_time_iso_8601": "2019-01-27T14:30:54.409835Z", "url": "https://files.pythonhosted.org/packages/75/5c/8e44e79dbe926646dc2b2121afc3cfb2e4146b667af7f8708584e35a8792/service_utils-0.1.7.tar.gz", "yanked": false}], "0.1b": [{"comment_text": "", "digests": {"md5": "3bb9399e597b36db93b013ad7fa75ee6", "sha256": "d658ff2ae2417a5951516bca12fcf9234ed707153e05c58198e22fa1aff9b223"}, "downloads": -1, "filename": "service_utils-0.1b.tar.gz", "has_sig": false, "md5_digest": "3bb9399e597b36db93b013ad7fa75ee6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2999, "upload_time": "2019-01-21T22:54:14", "upload_time_iso_8601": "2019-01-21T22:54:14.190582Z", "url": "https://files.pythonhosted.org/packages/4f/3f/b756672147984db6262c8ad5c03f03455e7f28fd1d68cef93cd09d61b4d2/service_utils-0.1b.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "812b800bb4bb7c6d502915713397ffa9", "sha256": "e32ad49ac9b33c9217e1b5349c8c55293c147335f5d9a815b7ca569a4d360883"}, "downloads": -1, "filename": "service_utils-0.2.0.tar.gz", "has_sig": false, "md5_digest": "812b800bb4bb7c6d502915713397ffa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4214, "upload_time": "2019-01-27T15:45:29", "upload_time_iso_8601": "2019-01-27T15:45:29.255084Z", "url": "https://files.pythonhosted.org/packages/53/5e/d035e3a146f59505048ac34968db6f610319b045fa76efebc268b7915cb0/service_utils-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "812b800bb4bb7c6d502915713397ffa9", "sha256": "e32ad49ac9b33c9217e1b5349c8c55293c147335f5d9a815b7ca569a4d360883"}, "downloads": -1, "filename": "service_utils-0.2.0.tar.gz", "has_sig": false, "md5_digest": "812b800bb4bb7c6d502915713397ffa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4214, "upload_time": "2019-01-27T15:45:29", "upload_time_iso_8601": "2019-01-27T15:45:29.255084Z", "url": "https://files.pythonhosted.org/packages/53/5e/d035e3a146f59505048ac34968db6f610319b045fa76efebc268b7915cb0/service_utils-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:54 2020"}