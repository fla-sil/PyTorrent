{"info": {"author": "Jaap Roes (Leukeleu)", "author_email": "jroes@leukeleu.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "# Django HTTP/2 Server Push redirects\n\nA Django middleware that adds a HTTP/2 Server Push header to plain\nDjango redirect responses.\n\nThis approach requires Django to be proxied by a server with\nHTTP/2 Server Push support. E.g. `nginx>=1.13.9`, `apache2>=2.4.26` with \n`mod_http2` enabled or a CDN services like Cloudflare.\n\n## Installation\n\nThis package is available on PyPI and can be installed with `pip`:\n\n```shell\npip install django-push-redirect\n```\n\n## Configuration\n\nFirst configure your webserver to enable HTTP/2 and enable server push.\n\nThis looks something like this for nginx: \n\n```nginx\nserver {\n  listen 443 ssl http2;\n  listen [::]:443 ssl http2;\n  ...\n\n  location @python {\n    proxy_set_header X-Forwarded-Proto $scheme;\n    http2_push_preload on;\n    ...\n  }\n}\n```\n\nThe configuration for Apache and other servers/services is left as an\nexercise for the reader (in other words, I don't know, please \ncontribute if you do!).\n\nNow make sure Django is able to detect if a request is secure \nby configuring the `SECURE_PROXY_SSL_HEADER` setting, e.g.:\n\n```python\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n``` \n\nThen add `'push_redirect.middleware.Http2ServerPushRedirectMiddleware'`\nto your project's `MIDDLEWARE`, make sure it's **before** Django's\n`CommonMiddleware`:\n\n```python\nMIDDLEWARE = [\n    ...\n    'push_redirect.middleware.Http2ServerPushRedirectMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    ...\n]\n```\n\nThis middleware adds the `Link rel=preload` header on redirect\nresponses that should be preloaded.\n\nIf everything is configured correctly you should see that redirects\nno longer require an extra request the the webserver.\n\n## Response opt-out\n\nIt is possible for a response to explicitly opt-out from the having\na `preload` header added. This is done by setting `allow_push_redirect`\nto `False` on the `response` object, e.g.:\n\n```python\ndef opt_out(request):\n    response = HttpResponseRedirect(\"/\")\n    response.allow_push_redirect = False\n    return response\n```\n\n\n## Inspiration / References\n\n* <https://twitter.com/simonw/status/1047865898717966337>\n* <https://www.ctrl.blog/entry/http2-push-redirects>\n* <https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/>\n* <https://httpd.apache.org/docs/2.4/howto/http2.html#push>\n* <https://www.cloudflare.com/website-optimization/http2/serverpush/>\n* <https://code.djangoproject.com/ticket/29925>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leukeleu/django-push-redirect", "keywords": "django http2 server push redirect preload", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "django-push-redirect", "package_url": "https://pypi.org/project/django-push-redirect/", "platform": "", "project_url": "https://pypi.org/project/django-push-redirect/", "project_urls": {"Documentation": "https://github.com/leukeleu/django-push-redirect", "Homepage": "https://github.com/leukeleu/django-push-redirect", "Source": "https://github.com/leukeleu/django-push-redirect", "Tracker": "https://github.com/leukeleu/django-push-redirect/issues"}, "release_url": "https://pypi.org/project/django-push-redirect/1.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A Django middleware that adds a HTTP/2 Server Push header to plain Django redirect responses", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django HTTP/2 Server Push redirects</h1>\n<p>A Django middleware that adds a HTTP/2 Server Push header to plain\nDjango redirect responses.</p>\n<p>This approach requires Django to be proxied by a server with\nHTTP/2 Server Push support. E.g. <code>nginx&gt;=1.13.9</code>, <code>apache2&gt;=2.4.26</code> with\n<code>mod_http2</code> enabled or a CDN services like Cloudflare.</p>\n<h2>Installation</h2>\n<p>This package is available on PyPI and can be installed with <code>pip</code>:</p>\n<pre>pip install django-push-redirect\n</pre>\n<h2>Configuration</h2>\n<p>First configure your webserver to enable HTTP/2 and enable server push.</p>\n<p>This looks something like this for nginx:</p>\n<pre><span class=\"k\">server</span> <span class=\"p\">{</span>\n  <span class=\"kn\">listen</span> <span class=\"mi\">443</span> <span class=\"s\">ssl</span> <span class=\"s\">http2</span><span class=\"p\">;</span>\n  <span class=\"kn\">listen</span> <span class=\"s\">[::]:443</span> <span class=\"s\">ssl</span> <span class=\"s\">http2</span><span class=\"p\">;</span>\n  <span class=\"kn\">...</span>\n\n  <span class=\"s\">location</span> <span class=\"s\">@python</span> <span class=\"p\">{</span>\n    <span class=\"kn\">proxy_set_header</span> <span class=\"s\">X-Forwarded-Proto</span> <span class=\"nv\">$scheme</span><span class=\"p\">;</span>\n    <span class=\"kn\">http2_push_preload</span> <span class=\"no\">on</span><span class=\"p\">;</span>\n    <span class=\"kn\">...</span>\n  <span class=\"err\">}</span>\n<span class=\"err\">}</span>\n</pre>\n<p>The configuration for Apache and other servers/services is left as an\nexercise for the reader (in other words, I don't know, please\ncontribute if you do!).</p>\n<p>Now make sure Django is able to detect if a request is secure\nby configuring the <code>SECURE_PROXY_SSL_HEADER</code> setting, e.g.:</p>\n<pre><span class=\"n\">SECURE_PROXY_SSL_HEADER</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'HTTP_X_FORWARDED_PROTO'</span><span class=\"p\">,</span> <span class=\"s1\">'https'</span><span class=\"p\">)</span>\n</pre>\n<p>Then add <code>'push_redirect.middleware.Http2ServerPushRedirectMiddleware'</code>\nto your project's <code>MIDDLEWARE</code>, make sure it's <strong>before</strong> Django's\n<code>CommonMiddleware</code>:</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'push_redirect.middleware.Http2ServerPushRedirectMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.common.CommonMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>This middleware adds the <code>Link rel=preload</code> header on redirect\nresponses that should be preloaded.</p>\n<p>If everything is configured correctly you should see that redirects\nno longer require an extra request the the webserver.</p>\n<h2>Response opt-out</h2>\n<p>It is possible for a response to explicitly opt-out from the having\na <code>preload</code> header added. This is done by setting <code>allow_push_redirect</code>\nto <code>False</code> on the <code>response</code> object, e.g.:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">opt_out</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">allow_push_redirect</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<h2>Inspiration / References</h2>\n<ul>\n<li><a href=\"https://twitter.com/simonw/status/1047865898717966337\" rel=\"nofollow\">https://twitter.com/simonw/status/1047865898717966337</a></li>\n<li><a href=\"https://www.ctrl.blog/entry/http2-push-redirects\" rel=\"nofollow\">https://www.ctrl.blog/entry/http2-push-redirects</a></li>\n<li><a href=\"https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/\" rel=\"nofollow\">https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/</a></li>\n<li><a href=\"https://httpd.apache.org/docs/2.4/howto/http2.html#push\" rel=\"nofollow\">https://httpd.apache.org/docs/2.4/howto/http2.html#push</a></li>\n<li><a href=\"https://www.cloudflare.com/website-optimization/http2/serverpush/\" rel=\"nofollow\">https://www.cloudflare.com/website-optimization/http2/serverpush/</a></li>\n<li><a href=\"https://code.djangoproject.com/ticket/29925\" rel=\"nofollow\">https://code.djangoproject.com/ticket/29925</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6661421, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "110491a29a26617e36a0bf1732b6beec", "sha256": "8afd0bdefe6ab079ae9b65c20219033285d803770b83fffccab6bc4742451833"}, "downloads": -1, "filename": "django-push-redirect-1.0.0.tar.gz", "has_sig": false, "md5_digest": "110491a29a26617e36a0bf1732b6beec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8281, "upload_time": "2019-12-03T15:05:54", "upload_time_iso_8601": "2019-12-03T15:05:54.375830Z", "url": "https://files.pythonhosted.org/packages/17/cc/30607d6c1d0806c79c24762b1dcc7fb38747b78a8442572568b84073542d/django-push-redirect-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "3ad37c757de60524dcc858aae5f10c42", "sha256": "3c6f2402a5b9a7b4950b96677529a31a805268f3a67810a8b64cd767a5a89979"}, "downloads": -1, "filename": "django-push-redirect-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3ad37c757de60524dcc858aae5f10c42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8738, "upload_time": "2020-02-19T14:55:12", "upload_time_iso_8601": "2020-02-19T14:55:12.364656Z", "url": "https://files.pythonhosted.org/packages/5a/b7/11fae3dd81b2f5ee69022ac140765d524a56d5e0fa36fecbf127753877ab/django-push-redirect-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ad37c757de60524dcc858aae5f10c42", "sha256": "3c6f2402a5b9a7b4950b96677529a31a805268f3a67810a8b64cd767a5a89979"}, "downloads": -1, "filename": "django-push-redirect-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3ad37c757de60524dcc858aae5f10c42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8738, "upload_time": "2020-02-19T14:55:12", "upload_time_iso_8601": "2020-02-19T14:55:12.364656Z", "url": "https://files.pythonhosted.org/packages/5a/b7/11fae3dd81b2f5ee69022ac140765d524a56d5e0fa36fecbf127753877ab/django-push-redirect-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}