{"info": {"author": "Dr. Thomas Tensi", "author_email": "t.tensi@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Multimedia :: Video :: Conversion"], "description": "# LilypondToBandVideoConverter\n\n## Introduction\n\nThe LilypondToBandVideoConverter is a python script that orchestrates\nexisting command line tools to convert a music piece written in the\nlilypond notation to\n\n- a *PDF score* of the whole piece,\n\n- several *PDF voice extracts*,\n\n- a *MIDI file with all voices* (with some preprocessing\n  applied for humanization),\n\n- *audio mix files* with several subsets of voices (specified\n  by configuration), and\n\n- *video files* for several output devices visualizing the\n  score notation pages and having the mixes as mutually\n  selectable audio tracks as backing tracks.\n\nFor processing a piece one must have\n\n- a *lilypond fragment file* with the score information\n  containing specific lilypond identifiers, and\n\n- a *configuration file* giving details like the voices\n  occuring in the piece, their associated midi instrument,\n  target audio volume, list of mutable voices for the audio\n  tracks etc.\n\nBased on those files the python script -- together with some\nopen-source command-line software like ffmpeg or fluidsynth --\nproduces all the target files either incrementally or altogether.\n\n## Installation and Requirements\n\nThe script and its components are written in python and can be\ninstalled as a single python package.  The package requires either\nPython&nbsp;2.7 or Python&nbsp;3.3 or later.\n\nAdditionally the following software has to be available:\n\n- *[lilypond][]*: for generating the score pdf, voice\n   extract pdfs, the raw midi file and the score images used\n   in the video files,\n\n- *[ffmpeg][]*: for video generation and video\n   postprocessing,\n\n- *[fluidsynth][]*: for generation of voice audio files from\n   a midi file plus some soundfont (e.g. [FluidR3_GM.sf3][]),\n\n- *[sox][]*: for instrument-specific postprocessing of audio\n   files for the target mix files as well as the mixdown,\n   and\n\nOptionally the following software is also used:\n\n- *[qaac][]*: the AAC-encoder for the final audio mix file\n   compression.\n\n- *[mp4box][]*: the MP4 container packaging software\n\nThe location of all those commands as well as a few other\nsettings has to be defined in a global configuration file\nfor the LilypondToBandVideoConverter.\n\nInstallation is done from the PyPi repository via\n\n    pip install lilypondToBandVideoConverter\n\nMake sure that the scripts directory of python is in the path for\nexecutables on your platform.\n\n## Further Information\n\nA longer description is available [here][notation-video] and the\ndetailed manual is available [here].\n\n[ffmpeg]: http://ffmpeg.org/\n[FluidR3_GM.sf3]: https://github.com/musescore/MuseScore/raw/2.1/share/sound/FluidR3Mono_GM.sf3\n[fluidsynth]: http://www.fluidsynth.org/\n[here]: http://www.tensi.eu/thomas/iPod/lilypondToBandVideoConverter.pdf\n[lilypond]: http://lilypond.org/\n[lilypondFileSyntax]: http://tensi.eu/thomas\n[mp4box]: https://gpac.wp.imt.fr/mp4box/mp4box-documentation/\n[notation-video]: http://www.tensi.eu/thomas/iPod/notation-video.html\n[qaac]: https://sites.google.com/site/qaacpage/\n[sox]: http://sox.sourceforge.net/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/prof-spock/LilypondToBandVideoConverter", "keywords": "video audio generation midi lilypond", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "LilypondToBandVideoConverter", "package_url": "https://pypi.org/project/LilypondToBandVideoConverter/", "platform": "", "project_url": "https://pypi.org/project/LilypondToBandVideoConverter/", "project_urls": {"Homepage": "https://github.com/prof-spock/LilypondToBandVideoConverter"}, "release_url": "https://pypi.org/project/LilypondToBandVideoConverter/0.4/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "summary": "Generator for Notation Videos from Lilypond Text", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LilypondToBandVideoConverter</h1>\n<h2>Introduction</h2>\n<p>The LilypondToBandVideoConverter is a python script that orchestrates\nexisting command line tools to convert a music piece written in the\nlilypond notation to</p>\n<ul>\n<li>\n<p>a <em>PDF score</em> of the whole piece,</p>\n</li>\n<li>\n<p>several <em>PDF voice extracts</em>,</p>\n</li>\n<li>\n<p>a <em>MIDI file with all voices</em> (with some preprocessing\napplied for humanization),</p>\n</li>\n<li>\n<p><em>audio mix files</em> with several subsets of voices (specified\nby configuration), and</p>\n</li>\n<li>\n<p><em>video files</em> for several output devices visualizing the\nscore notation pages and having the mixes as mutually\nselectable audio tracks as backing tracks.</p>\n</li>\n</ul>\n<p>For processing a piece one must have</p>\n<ul>\n<li>\n<p>a <em>lilypond fragment file</em> with the score information\ncontaining specific lilypond identifiers, and</p>\n</li>\n<li>\n<p>a <em>configuration file</em> giving details like the voices\noccuring in the piece, their associated midi instrument,\ntarget audio volume, list of mutable voices for the audio\ntracks etc.</p>\n</li>\n</ul>\n<p>Based on those files the python script -- together with some\nopen-source command-line software like ffmpeg or fluidsynth --\nproduces all the target files either incrementally or altogether.</p>\n<h2>Installation and Requirements</h2>\n<p>The script and its components are written in python and can be\ninstalled as a single python package.  The package requires either\nPython\u00a02.7 or Python\u00a03.3 or later.</p>\n<p>Additionally the following software has to be available:</p>\n<ul>\n<li>\n<p><em><a href=\"http://lilypond.org/\" rel=\"nofollow\">lilypond</a></em>: for generating the score pdf, voice\nextract pdfs, the raw midi file and the score images used\nin the video files,</p>\n</li>\n<li>\n<p><em><a href=\"http://ffmpeg.org/\" rel=\"nofollow\">ffmpeg</a></em>: for video generation and video\npostprocessing,</p>\n</li>\n<li>\n<p><em><a href=\"http://www.fluidsynth.org/\" rel=\"nofollow\">fluidsynth</a></em>: for generation of voice audio files from\na midi file plus some soundfont (e.g. <a href=\"https://github.com/musescore/MuseScore/raw/2.1/share/sound/FluidR3Mono_GM.sf3\" rel=\"nofollow\">FluidR3_GM.sf3</a>),</p>\n</li>\n<li>\n<p><em><a href=\"http://sox.sourceforge.net/\" rel=\"nofollow\">sox</a></em>: for instrument-specific postprocessing of audio\nfiles for the target mix files as well as the mixdown,\nand</p>\n</li>\n</ul>\n<p>Optionally the following software is also used:</p>\n<ul>\n<li>\n<p><em><a href=\"https://sites.google.com/site/qaacpage/\" rel=\"nofollow\">qaac</a></em>: the AAC-encoder for the final audio mix file\ncompression.</p>\n</li>\n<li>\n<p><em><a href=\"https://gpac.wp.imt.fr/mp4box/mp4box-documentation/\" rel=\"nofollow\">mp4box</a></em>: the MP4 container packaging software</p>\n</li>\n</ul>\n<p>The location of all those commands as well as a few other\nsettings has to be defined in a global configuration file\nfor the LilypondToBandVideoConverter.</p>\n<p>Installation is done from the PyPi repository via</p>\n<pre><code>pip install lilypondToBandVideoConverter\n</code></pre>\n<p>Make sure that the scripts directory of python is in the path for\nexecutables on your platform.</p>\n<h2>Further Information</h2>\n<p>A longer description is available <a href=\"http://www.tensi.eu/thomas/iPod/notation-video.html\" rel=\"nofollow\">here</a> and the\ndetailed manual is available <a href=\"http://www.tensi.eu/thomas/iPod/lilypondToBandVideoConverter.pdf\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 5108265, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "3b436ff4cd34be3ed527c0d6afb81c11", "sha256": "8b6a57c427fea699808155af9312221c12d8862f0777d5faca5b041185542beb"}, "downloads": -1, "filename": "LilypondToBandVideoConverter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3b436ff4cd34be3ed527c0d6afb81c11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 741320, "upload_time": "2018-08-27T20:58:33", "upload_time_iso_8601": "2018-08-27T20:58:33.131121Z", "url": "https://files.pythonhosted.org/packages/f3/ff/34c4106027f63ad975ab1747d283e26eb5469210fc3ce42e42fdedcec8aa/LilypondToBandVideoConverter-0.1.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "def3f372a00b05d68037e5f3f8994f3d", "sha256": "f3eab4423123d87d9a99d954ffd83b6914a1466fab4ddd20bfad88df1e333f67"}, "downloads": -1, "filename": "LilypondToBandVideoConverter-0.4.tar.gz", "has_sig": false, "md5_digest": "def3f372a00b05d68037e5f3f8994f3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 793063, "upload_time": "2019-04-06T20:48:39", "upload_time_iso_8601": "2019-04-06T20:48:39.804757Z", "url": "https://files.pythonhosted.org/packages/5d/56/6fa42ed7bf1bf14a94429de480753e69e0d34d798d8861b78faab1d965fe/LilypondToBandVideoConverter-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "def3f372a00b05d68037e5f3f8994f3d", "sha256": "f3eab4423123d87d9a99d954ffd83b6914a1466fab4ddd20bfad88df1e333f67"}, "downloads": -1, "filename": "LilypondToBandVideoConverter-0.4.tar.gz", "has_sig": false, "md5_digest": "def3f372a00b05d68037e5f3f8994f3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 793063, "upload_time": "2019-04-06T20:48:39", "upload_time_iso_8601": "2019-04-06T20:48:39.804757Z", "url": "https://files.pythonhosted.org/packages/5d/56/6fa42ed7bf1bf14a94429de480753e69e0d34d798d8861b78faab1d965fe/LilypondToBandVideoConverter-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:54 2020"}