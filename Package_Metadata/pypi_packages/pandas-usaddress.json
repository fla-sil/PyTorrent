{"info": {"author": "Keith Lyons", "author_email": "lyonk71@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pandas-usaddress\nThe usaddress library made easy with Pandas.\n\nAlso supports standardizing addresses to meet USPS standards.\n\n# Installation\n\npip install pandas-usaddress\n\n# Usage\n\n### Basic Parsing\n\n    import pandas as pd\n    import pandas_usaddress\n\n    #load dataframe\n    df = pd.read_csv('test_file.csv')\n\n    #initiate usaddress\n    df = pandas_usaddress.tag(df, ['address_field'])\n\n    #send output to csv\n    df.to_csv('parsed_output.csv')\n\n\n    #------------------------------additional details------------------------------\n\n    #Output and fields will be identical to usaddress\n\n### Parsing with Address Standardization\n\n    import pandas as pd\n    import pandas_usaddress\n\n    #load dataframe\n    df = pd.read_csv('test_file.csv')\n\n    #initiate usaddress\n    df = pandas_usaddress.tag(df, ['address_field'], granularity='medium', standardize=True)\n\n    #send output to csv\n    df.to_csv('parsed_output.csv')\n\n\n    #------------------------------additional details------------------------------\n\n    #The standard output for usaddress has a lot of fields. The granularity parameter\n    #allows you to condense the results you get back for different types of analysis.\n    #see parameter documentation below for all granularity options.\n\n    #Addresses are often unstandardized. The same address can come as 123 1st ST, or\n    #123 First Street, etc. This can cause issues with analysis such as aggregation,\n    #or record matching. The standardize parameter attempts to standardize the address\n    #to US Postal Service (USPS) standards.\n\n### Parsing with Address Standardization\n\n    import pandas as pd\n    import pandas_usaddress\n\n    #load dataframe\n    df = pd.read_csv('test_file.csv')\n\n    #initiate usaddress\n    df = pandas_usaddress.tag(df, ['street1', 'street2', 'city', 'state'], granularity='single', standardize=True)\n\n    #send output to csv\n    df.to_csv('parsed_output.csv')\n\n\n    #------------------------------additional details------------------------------\n\n    #You can also use pandas-usaddress to concatenate and parse multiple address lines. \n    #This can be helpful when you are working with two datasets that have different \n    #field names and you want the field names to be standardized using a specific level of\n    #granularity. It's pretty common for instance that in one dataset will concatenate \n    #address line 1 and 2, and another will not.\n\n    #You will help the parser do it's job if you try to concatenate fields in approximately\n    #same order that you would write them on an envelope.\n\n    #In this instance, we are taking multiple address fields and converting them into a\n    #single address line. That's fine to do!\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Lyonk71/pandas-usaddress", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pandas-usaddress", "package_url": "https://pypi.org/project/pandas-usaddress/", "platform": "", "project_url": "https://pypi.org/project/pandas-usaddress/", "project_urls": {"Homepage": "https://github.com/Lyonk71/pandas-usaddress"}, "release_url": "https://pypi.org/project/pandas-usaddress/0.21/", "requires_dist": ["pandas", "usaddress"], "requires_python": "", "summary": "The usaddress library made easy with Pandas.", "version": "0.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pandas-usaddress</h1>\n<p>The usaddress library made easy with Pandas.</p>\n<p>Also supports standardizing addresses to meet USPS standards.</p>\n<h1>Installation</h1>\n<p>pip install pandas-usaddress</p>\n<h1>Usage</h1>\n<h3>Basic Parsing</h3>\n<pre><code>import pandas as pd\nimport pandas_usaddress\n\n#load dataframe\ndf = pd.read_csv('test_file.csv')\n\n#initiate usaddress\ndf = pandas_usaddress.tag(df, ['address_field'])\n\n#send output to csv\ndf.to_csv('parsed_output.csv')\n\n\n#------------------------------additional details------------------------------\n\n#Output and fields will be identical to usaddress\n</code></pre>\n<h3>Parsing with Address Standardization</h3>\n<pre><code>import pandas as pd\nimport pandas_usaddress\n\n#load dataframe\ndf = pd.read_csv('test_file.csv')\n\n#initiate usaddress\ndf = pandas_usaddress.tag(df, ['address_field'], granularity='medium', standardize=True)\n\n#send output to csv\ndf.to_csv('parsed_output.csv')\n\n\n#------------------------------additional details------------------------------\n\n#The standard output for usaddress has a lot of fields. The granularity parameter\n#allows you to condense the results you get back for different types of analysis.\n#see parameter documentation below for all granularity options.\n\n#Addresses are often unstandardized. The same address can come as 123 1st ST, or\n#123 First Street, etc. This can cause issues with analysis such as aggregation,\n#or record matching. The standardize parameter attempts to standardize the address\n#to US Postal Service (USPS) standards.\n</code></pre>\n<h3>Parsing with Address Standardization</h3>\n<pre><code>import pandas as pd\nimport pandas_usaddress\n\n#load dataframe\ndf = pd.read_csv('test_file.csv')\n\n#initiate usaddress\ndf = pandas_usaddress.tag(df, ['street1', 'street2', 'city', 'state'], granularity='single', standardize=True)\n\n#send output to csv\ndf.to_csv('parsed_output.csv')\n\n\n#------------------------------additional details------------------------------\n\n#You can also use pandas-usaddress to concatenate and parse multiple address lines. \n#This can be helpful when you are working with two datasets that have different \n#field names and you want the field names to be standardized using a specific level of\n#granularity. It's pretty common for instance that in one dataset will concatenate \n#address line 1 and 2, and another will not.\n\n#You will help the parser do it's job if you try to concatenate fields in approximately\n#same order that you would write them on an envelope.\n\n#In this instance, we are taking multiple address fields and converting them into a\n#single address line. That's fine to do!\n</code></pre>\n\n          </div>"}, "last_serial": 4843418, "releases": {"0.11": [{"comment_text": "", "digests": {"md5": "3ef09acd9cd0d31d9ffc684a8158f946", "sha256": "67551237788061e51ab7c2484095eda2f996e30dbf3a72fb78bf9aab589f9002"}, "downloads": -1, "filename": "pandas_usaddress-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "3ef09acd9cd0d31d9ffc684a8158f946", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 320527, "upload_time": "2019-01-30T15:21:34", "upload_time_iso_8601": "2019-01-30T15:21:34.832435Z", "url": "https://files.pythonhosted.org/packages/3a/1d/7f7ff0dbe571828cf6cf8a5158f0310a22df1a9a8f6e3884598b1d8e41f3/pandas_usaddress-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5f7cfc3e6671d608381c15277e92764", "sha256": "fc254acbef85a1b4638c6f7ee29213e654c996e341ee99e03516af776f08c9f4"}, "downloads": -1, "filename": "pandas_usaddress-0.11.tar.gz", "has_sig": false, "md5_digest": "a5f7cfc3e6671d608381c15277e92764", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 298682, "upload_time": "2019-01-30T15:21:37", "upload_time_iso_8601": "2019-01-30T15:21:37.150399Z", "url": "https://files.pythonhosted.org/packages/57/24/4bc5df586da390946d4fca9c9492ee7a95d553a69f9e948c62657a1298f7/pandas_usaddress-0.11.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "410a93cc631211aff3b845284a306ed8", "sha256": "b6ca5d94f7b76754ecaa64357d5d30e569a4a6ea08a8638c7a3ddab73ce1390c"}, "downloads": -1, "filename": "pandas_usaddress-0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "410a93cc631211aff3b845284a306ed8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 320556, "upload_time": "2019-02-20T03:00:26", "upload_time_iso_8601": "2019-02-20T03:00:26.878906Z", "url": "https://files.pythonhosted.org/packages/fe/b7/7734c959d133d63179903d9b06d8fd11aefba1298e511deb0c601cbb93bc/pandas_usaddress-0.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f586f768a9ca259d950d752e7525f875", "sha256": "0dbf89d99231becfbf72a88b5fea6defcd45410b643e9f7e7ee7db569fb93f28"}, "downloads": -1, "filename": "pandas_usaddress-0.21.tar.gz", "has_sig": false, "md5_digest": "f586f768a9ca259d950d752e7525f875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 299329, "upload_time": "2019-02-20T03:00:28", "upload_time_iso_8601": "2019-02-20T03:00:28.835524Z", "url": "https://files.pythonhosted.org/packages/63/16/63e09bc175aee1a03dc6ba455e1f21902b3854d199b530a4cac8cf1ea9f4/pandas_usaddress-0.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "410a93cc631211aff3b845284a306ed8", "sha256": "b6ca5d94f7b76754ecaa64357d5d30e569a4a6ea08a8638c7a3ddab73ce1390c"}, "downloads": -1, "filename": "pandas_usaddress-0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "410a93cc631211aff3b845284a306ed8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 320556, "upload_time": "2019-02-20T03:00:26", "upload_time_iso_8601": "2019-02-20T03:00:26.878906Z", "url": "https://files.pythonhosted.org/packages/fe/b7/7734c959d133d63179903d9b06d8fd11aefba1298e511deb0c601cbb93bc/pandas_usaddress-0.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f586f768a9ca259d950d752e7525f875", "sha256": "0dbf89d99231becfbf72a88b5fea6defcd45410b643e9f7e7ee7db569fb93f28"}, "downloads": -1, "filename": "pandas_usaddress-0.21.tar.gz", "has_sig": false, "md5_digest": "f586f768a9ca259d950d752e7525f875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 299329, "upload_time": "2019-02-20T03:00:28", "upload_time_iso_8601": "2019-02-20T03:00:28.835524Z", "url": "https://files.pythonhosted.org/packages/63/16/63e09bc175aee1a03dc6ba455e1f21902b3854d199b530a4cac8cf1ea9f4/pandas_usaddress-0.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:26 2020"}