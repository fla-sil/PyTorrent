{"info": {"author": "Alex Hayes", "author_email": "alex@alution.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: System :: Installation/Setup"], "description": "# Supervisor Confator\n\nSupervisor Confator (Config Creator) is a Python interface to generate supervisor configuration files.\n\nUsing Python dicts as input it creates a configuration file suitable for supervisor (and probably other applications also...).\n\n## Why\n\nAt http://roi.com.au we have a lot of supervisor program sections and I was sick and tired of managing without variables for things like directories, executables (ie.. python, celery etc..).\n\n## Limitations\n\nCurrently Supervisor Confator only supports program and group sections.\n\n## Example\n\n```#!python\nsc = SupervisorConfator(program_options=dict(user='myuser'),\n                        command_formats=dict(bin='/usr/bin/',\n                                             log_dir='/var/log/'))\n\nsc.program('eggs', '{bin}eggs')\n\nwith sc.options(autorestart=False):\n    sc.program('sausage', '{bin}sausage --log-dir={log_dir}sausage.log')\n\nwith sc.group('mygroup', priority=999):\n    with sc.options(priority=998):\n        sc.program('silly', '{bin}silly')\n        sc.program('walks', '{bin}walks', \n                   user='myotheruser', \n                   process_name='%(program_name)s',\n                   numprocs=1,\n                   numprocs_start=0,\n                   startsecs=1,\n                   startretries=3,\n                   exitcodes=[0,2],\n                   stopsignal='TERM',\n                   stopwaitsecs=10,\n                   redirect_stderr=False,\n                   stdout_logfile='AUTO',\n                   stdout_logfile_maxbytes='50MB',\n                   stdout_logfile_backups=10,\n                   stdout_capture_maxbytes=0,\n                   stdout_events_enabled=False,\n                   stderr_logfile='AUTO',\n                   stderr_logfile_maxbytes='50MB',\n                   stderr_logfile_backups=10,\n                   stderr_capture_maxbytes=0,\n                   stderr_events_enabled=False,\n                   directory='/path/to/myapp.com',\n                   serverurl='AUTO',\n                   autostart=False,\n                   autorestart=False)\n    \nprint sc.write()\n```\n\nOutputs the following;\n\n```#!ini\n[program:eggs]\ncommand=/usr/bin/eggs\nuser=myuser\n\n[program:sausage]\ncommand=/usr/bin/sausage --log-dir=/var/log/sausage.log\nuser=myuser\nautorestart=false\n\n[program:silly]\ncommand=/usr/bin/silly\nuser=myuser\npriority=998\n\n[program:walks]\ncommand=/usr/bin/walks\nuser=myotheruser\nprocess_name=%(program_name)s\nautorestart=false\nautostart=false\ndirectory=/path/to/myapp.com\nexitcodes=0,2\nnumprocs=1\nnumprocs_start=0\npriority=998\nredirect_stderr=false\nserverurl=AUTO\nstartretries=3\nstartsecs=1\nstderr_capture_maxbytes=0\nstderr_events_enabled=false\nstderr_logfile=AUTO\nstderr_logfile_backups=10\nstderr_logfile_maxbytes=50MB\nstdout_capture_maxbytes=0\nstdout_events_enabled=false\nstdout_logfile=AUTO\nstdout_logfile_backups=10\nstdout_logfile_maxbytes=50MB\nstopsignal=TERM\nstopwaitsecs=10\n\n[group:mygroup]\nprograms=silly,walks\npriority=999\n```\n\n## Contributing\n\nContributions welcome - note that I plan to significantly change the API, see branch feature/context-api\n\n### Setup\n\n```#!bash\ngit clone https://github.com/alexhayes/supervisor-confator.git\ncd supervisor-confator\ngit submodule init\ngit submodule update\nmkvirtualenv supervisor-confator\npip install -r requirements\n```\n\n### Running Tests\n\n```#!python\nnosetests\n```\n\n## Thanks\n\nSpecial thanks to http://roi.com.au for supporting this project.\n\n## Author\n\nAlex Hayes <alex@alution.com>\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/alexhayes/supervisor-confator/tarball/0.3.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexhayes/supervisor-confator", "keywords": "supervisor,config,generator,server management", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "supervisor-confator", "package_url": "https://pypi.org/project/supervisor-confator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/supervisor-confator/", "project_urls": {"Download": "https://github.com/alexhayes/supervisor-confator/tarball/0.3.0", "Homepage": "https://github.com/alexhayes/supervisor-confator"}, "release_url": "https://pypi.org/project/supervisor-confator/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Python interface to generate supervisor configuration files.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Supervisor Confator<br><br>Supervisor Confator (Config Creator) is a Python interface to generate supervisor configuration files.<br><br>Using Python dicts as input it creates a configuration file suitable for supervisor (and probably other applications also...).<br><br>## Why<br><br>At http://roi.com.au we have a lot of supervisor program sections and I was sick and tired of managing without variables for things like directories, executables (ie.. python, celery etc..).<br><br>## Limitations<br><br>Currently Supervisor Confator only supports program and group sections.<br><br>## Example<br><br>```#!python<br>sc = SupervisorConfator(program_options=dict(user='myuser'),<br>                        command_formats=dict(bin='/usr/bin/',<br>                                             log_dir='/var/log/'))<br><br>sc.program('eggs', '{bin}eggs')<br><br>with sc.options(autorestart=False):<br>    sc.program('sausage', '{bin}sausage --log-dir={log_dir}sausage.log')<br><br>with sc.group('mygroup', priority=999):<br>    with sc.options(priority=998):<br>        sc.program('silly', '{bin}silly')<br>        sc.program('walks', '{bin}walks', <br>                   user='myotheruser', <br>                   process_name='%(program_name)s',<br>                   numprocs=1,<br>                   numprocs_start=0,<br>                   startsecs=1,<br>                   startretries=3,<br>                   exitcodes=[0,2],<br>                   stopsignal='TERM',<br>                   stopwaitsecs=10,<br>                   redirect_stderr=False,<br>                   stdout_logfile='AUTO',<br>                   stdout_logfile_maxbytes='50MB',<br>                   stdout_logfile_backups=10,<br>                   stdout_capture_maxbytes=0,<br>                   stdout_events_enabled=False,<br>                   stderr_logfile='AUTO',<br>                   stderr_logfile_maxbytes='50MB',<br>                   stderr_logfile_backups=10,<br>                   stderr_capture_maxbytes=0,<br>                   stderr_events_enabled=False,<br>                   directory='/path/to/myapp.com',<br>                   serverurl='AUTO',<br>                   autostart=False,<br>                   autorestart=False)<br>    <br>print sc.write()<br>```<br><br>Outputs the following;<br><br>```#!ini<br>[program:eggs]<br>command=/usr/bin/eggs<br>user=myuser<br><br>[program:sausage]<br>command=/usr/bin/sausage --log-dir=/var/log/sausage.log<br>user=myuser<br>autorestart=false<br><br>[program:silly]<br>command=/usr/bin/silly<br>user=myuser<br>priority=998<br><br>[program:walks]<br>command=/usr/bin/walks<br>user=myotheruser<br>process_name=%(program_name)s<br>autorestart=false<br>autostart=false<br>directory=/path/to/myapp.com<br>exitcodes=0,2<br>numprocs=1<br>numprocs_start=0<br>priority=998<br>redirect_stderr=false<br>serverurl=AUTO<br>startretries=3<br>startsecs=1<br>stderr_capture_maxbytes=0<br>stderr_events_enabled=false<br>stderr_logfile=AUTO<br>stderr_logfile_backups=10<br>stderr_logfile_maxbytes=50MB<br>stdout_capture_maxbytes=0<br>stdout_events_enabled=false<br>stdout_logfile=AUTO<br>stdout_logfile_backups=10<br>stdout_logfile_maxbytes=50MB<br>stopsignal=TERM<br>stopwaitsecs=10<br><br>[group:mygroup]<br>programs=silly,walks<br>priority=999<br>```<br><br>## Contributing<br><br>Contributions welcome - note that I plan to significantly change the API, see branch feature/context-api<br><br>### Setup<br><br>```#!bash<br>git clone https://github.com/alexhayes/supervisor-confator.git<br>cd supervisor-confator<br>git submodule init<br>git submodule update<br>mkvirtualenv supervisor-confator<br>pip install -r requirements<br>```<br><br>### Running Tests<br><br>```#!python<br>nosetests<br>```<br><br>## Thanks<br><br>Special thanks to http://roi.com.au for supporting this project.<br><br>## Author<br><br>Alex Hayes &lt;alex@alution.com&gt;<br>\n          </div>"}, "last_serial": 1283602, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "922b97f9dada76b69b558cb1152885cc", "sha256": "d7210b64d0e2974f16977ee2f6023cbbfd7c2ccfd45dcdfd9cf25bc093b5735e"}, "downloads": -1, "filename": "supervisor-confator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "922b97f9dada76b69b558cb1152885cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2940, "upload_time": "2014-10-24T03:40:26", "upload_time_iso_8601": "2014-10-24T03:40:26.855067Z", "url": "https://files.pythonhosted.org/packages/33/7c/a9f21933b2b3fe1468d20cc840806ba08f2811ac04d64bfff09765c7fc18/supervisor-confator-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1e3767ebe1d1eeeda74390b956c2ffb6", "sha256": "a0dd51c400257af3cd5a7b86216018dac8a8df2cae40d42c85919a095c5ffb0a"}, "downloads": -1, "filename": "supervisor-confator-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1e3767ebe1d1eeeda74390b956c2ffb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4407, "upload_time": "2014-10-24T05:01:19", "upload_time_iso_8601": "2014-10-24T05:01:19.531199Z", "url": "https://files.pythonhosted.org/packages/c2/e6/6bdcf1b8f931f304a462b30458cb97135365146f9785d72efa49b59c7d98/supervisor-confator-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2eb3f7cab7580f98ab38b202c79fb765", "sha256": "3662f60b9e19b4468e77538deeace0767182f51e53b00074cadcf89fecfa0fa9"}, "downloads": -1, "filename": "supervisor-confator-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2eb3f7cab7580f98ab38b202c79fb765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4590, "upload_time": "2014-10-26T21:49:01", "upload_time_iso_8601": "2014-10-26T21:49:01.064207Z", "url": "https://files.pythonhosted.org/packages/db/fb/7f7ba09dd7e6457a1d8dc7954b9c4019968ab78fcfab8904f74b99e6402b/supervisor-confator-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2eb3f7cab7580f98ab38b202c79fb765", "sha256": "3662f60b9e19b4468e77538deeace0767182f51e53b00074cadcf89fecfa0fa9"}, "downloads": -1, "filename": "supervisor-confator-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2eb3f7cab7580f98ab38b202c79fb765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4590, "upload_time": "2014-10-26T21:49:01", "upload_time_iso_8601": "2014-10-26T21:49:01.064207Z", "url": "https://files.pythonhosted.org/packages/db/fb/7f7ba09dd7e6457a1d8dc7954b9c4019968ab78fcfab8904f74b99e6402b/supervisor-confator-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:08 2020"}