{"info": {"author": "Greg Brown", "author_email": "greg@gregbrown.co.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-eventtools is a lightweight library designed to handle repeating\nand one-off event occurrences for display on a website.\n\n`Circle\nCI <https://circleci.com/gh/gregplaysguitar/django-eventtools>`__\n`codecov <https://codecov.io/gh/gregplaysguitar/django-eventtools>`__\n`Latest Version <https://pypi.python.org/pypi/django-eventtools/>`__\n\nInstallation\n------------\n\nDownload the source from https://pypi.python.org/pypi/django-eventtools/\nand run ``python setup.py install``, or:\n\n::\n\n   > pip install django-eventtools\n\nDjango 1.8 or higher is required.\n\nSetup\n-----\n\nGiven the following models:\n\n.. code:: python\n\n   from django.db import models\n\n   from eventtools.models import BaseEvent, BaseOccurrence\n\n\n   class MyEvent(BaseEvent):\n       title = models.CharField(max_length=100)\n\n\n   class MyOccurrence(BaseOccurrence):\n       event = models.ForeignKey(MyEvent)\n\nUsage\n-----\n\nCreate a sample event & occurrences\n\n::\n\n   >>> from datetime import datetime\n   >>> from myapp.models import MyEvent\n   >>> event = MyEvent.objects.create(title='Test event')\n   >>> once_off = MyOccurrence.objects.create(\n           event=event,\n           start=datetime(2016, 1, 1, 12, 0),\n           end=datetime(2016, 1, 1, 2, 0))\n   >>> christmas = MyOccurrence.objects.create(\n           event=event,\n           start=datetime(2015, 12, 25, 7, 0),\n           end=datetime(2015, 12, 25, 22, 0),\n           repeat='RRULE:FREQ=YEARLY')\n   >>> daily = MyOccurrence.objects.create(\n           event=event,\n           start=datetime(2016, 1, 1, 7, 0),\n           end=datetime(2016, 1, 1, 8, 0),\n           repeat='RRULE:FREQ=DAILY')\n\nEvent and Occurrence instances, and their associated querysets, all\nsupport the ``all_occurrences`` method, which takes two optional\narguments - ``from_date`` and ``to_date``, which may be dates or\ndatetimes. ``from_date`` and ``to_date`` default to ``None``. The method\nreturns a python generator yielding tuples in the format\n``(start, end, instance)`` - for example:\n\n::\n\n   >>> MyEvent.objects.all().all_occurrences()\n   >>> event.all_occurrences(from_date=datetime(2015, 1, 1, 10, 0))\n   >>> event.occurrence_set.all().all_occurrences(to_date=date(2016, 1, 1))\n   >>> occurrence.all_occurrences(from_date=date(2016, 1, 1),\n                                  to_date=date(2016, 12, 31))\n\n``instance`` is an instance of the corresponding BaseOccurrence\nsubclass.\n\nA ``next_occurrence`` method is also provided, taking the same\narguments, but returning a single occurrence tuple.\n\n::\n\n   >>> event.next_occurrence()\n   >>> event.next_occurrence(from_date=date(2016, 1, 1))\n\nThe method ``first_occurrence`` also returns a single occurrence tuple,\nbut takes no arguments.\n\nQueryset filtering\n~~~~~~~~~~~~~~~~~~\n\nEvent and Occurrence querysets can be filtered, but due to uncertainty\nwith repetitions, ``from_date`` filtering is only an approximation\n(whereas ``to_date`` filtering is accurate). If you need a queryset\nfiltered exactly, pass ``exact=True`` - this will filter using generated\noccurrences but still return a queryset - but be careful with this as it\nmay be very slow and/or CPU-hungry. For example\n\n::\n\n   >>> MyEvent.objects.for_period(from_date=date(2015, 1, 1),\n                                to_date=date(2015, 12, 31))\n   >>> event.occurrence_set.for_period(from_date=date(2015, 1, 1), exact=True)\n\nSorting querysets\n~~~~~~~~~~~~~~~~~\n\nEvent and Occurrence querysets can also be sorted by their next\noccurrence using the ``sort_by_next`` method. By default this sorts\ninstances by their first occurrence; the optional ``from_date`` argument\nwill sort by the next occurrence after ``from_date``. For example\n\n::\n\n   >>> MyEvent.objects.all().sort_by_next()\n   >>> event.occurrence_set.for_period(from_date=date(2015, 1, 1)) \\\n   >>>      .sort_by_next(date(2015, 1, 1))\n\nNote that this method returns a sorted list, not a queryset.\n\nCustom repeat intervals\n-----------------------\n\nOccurrences can repeat using any interval that can be expressed as an\n`rrulestr <https://labix.org/python-dateutil#head-e987b581aebacf25c7276d3e9214385a12a091f2>`__.\nTo customise the available options, set ``EVENTTOOLS_REPEAT_CHOICES`` in\nyour django settings. The default value is\n\n.. code:: python\n\n   EVENTTOOLS_REPEAT_CHOICES = (\n       (\"RRULE:FREQ=DAILY\", 'Daily'),\n       (\"RRULE:FREQ=WEEKLY\", 'Weekly'),\n       (\"RRULE:FREQ=MONTHLY\", 'Monthly'),\n       (\"RRULE:FREQ=YEARLY\", 'Yearly'),\n   )\n\nSet ``EVENTTOOLS_REPEAT_CHOICES = None`` to make repeat a plain-text\nfield.\n\nOccurrence cancellations or modifications\n-----------------------------------------\n\nCancelling or modifying a single occurrence repetition is not currently\nsupported, but can be implemented by overriding a couple of methods. For\nexample, the following allows cancellations or one-off modifications to\nthe start time of a repetition:\n\n.. code:: python\n\n   from eventtools.models import (BaseEvent, BaseOccurrence, default_naive)\n   from django.db import models\n\n\n   class MyEvent(BaseEvent):\n       pass\n\n\n   class MyEventOccurrence(BaseOccurrence):\n       event = models.ForeignKey(MyEvent)\n       overrides = models.ManyToManyField('MyEventOccurrenceOverride', blank=True)\n\n       def get_repeater(self):\n           rule = super().get_repeater()  # gets rruleset from parent method\n           ruleset.rrule(rule)\n           for override in self.overrides.all():\n               ruleset.exdate(default_naive(override.start))  # remove occurrence\n               if override.modified_start:  # reschedule occurrence if defined\n                   ruleset.rdate(default_naive(override.modified_start))\n           return ruleset\n\n\n   class MyEventOccurrenceOverride(models.Model):\n       start = models.DateTimeField()  # must match targeted repetition exactly\n       # new start, leave blank to cancel\n       modified_start = models.DateTimeField(blank=True, null=True)  \n\nNote that start times must match exactly, so if the MyEventOccurrence\nstart is changed, any previously-matching overrides will no longer be\napplied.\n\nRunning tests\n-------------\n\nUse tox (https://pypi.python.org/pypi/tox):\n\n::\n\n   > pip install tox\n   > cd path-to/django-eventtools\n   > tox", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gregplaysguitar/django-eventtools", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-eventtools", "package_url": "https://pypi.org/project/django-eventtools/", "platform": "any", "project_url": "https://pypi.org/project/django-eventtools/", "project_urls": {"Homepage": "https://github.com/gregplaysguitar/django-eventtools"}, "release_url": "https://pypi.org/project/django-eventtools/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Recurring event tools for django", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-eventtools is a lightweight library designed to handle repeating\nand one-off event occurrences for display on a website.</p>\n<p><a href=\"https://circleci.com/gh/gregplaysguitar/django-eventtools\" rel=\"nofollow\">Circle\nCI</a>\n<a href=\"https://codecov.io/gh/gregplaysguitar/django-eventtools\" rel=\"nofollow\">codecov</a>\n<a href=\"https://pypi.python.org/pypi/django-eventtools/\" rel=\"nofollow\">Latest Version</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Download the source from <a href=\"https://pypi.python.org/pypi/django-eventtools/\" rel=\"nofollow\">https://pypi.python.org/pypi/django-eventtools/</a>\nand run <tt>python setup.py install</tt>, or:</p>\n<pre>&gt; pip install django-eventtools\n</pre>\n<p>Django 1.8 or higher is required.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Given the following models:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">eventtools.models</span> <span class=\"kn\">import</span> <span class=\"n\">BaseEvent</span><span class=\"p\">,</span> <span class=\"n\">BaseOccurrence</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEvent</span><span class=\"p\">(</span><span class=\"n\">BaseEvent</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyOccurrence</span><span class=\"p\">(</span><span class=\"n\">BaseOccurrence</span><span class=\"p\">):</span>\n    <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">MyEvent</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a sample event &amp; occurrences</p>\n<pre>&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; from myapp.models import MyEvent\n&gt;&gt;&gt; event = MyEvent.objects.create(title='Test event')\n&gt;&gt;&gt; once_off = MyOccurrence.objects.create(\n        event=event,\n        start=datetime(2016, 1, 1, 12, 0),\n        end=datetime(2016, 1, 1, 2, 0))\n&gt;&gt;&gt; christmas = MyOccurrence.objects.create(\n        event=event,\n        start=datetime(2015, 12, 25, 7, 0),\n        end=datetime(2015, 12, 25, 22, 0),\n        repeat='RRULE:FREQ=YEARLY')\n&gt;&gt;&gt; daily = MyOccurrence.objects.create(\n        event=event,\n        start=datetime(2016, 1, 1, 7, 0),\n        end=datetime(2016, 1, 1, 8, 0),\n        repeat='RRULE:FREQ=DAILY')\n</pre>\n<p>Event and Occurrence instances, and their associated querysets, all\nsupport the <tt>all_occurrences</tt> method, which takes two optional\narguments - <tt>from_date</tt> and <tt>to_date</tt>, which may be dates or\ndatetimes. <tt>from_date</tt> and <tt>to_date</tt> default to <tt>None</tt>. The method\nreturns a python generator yielding tuples in the format\n<tt>(start, end, instance)</tt> - for example:</p>\n<pre>&gt;&gt;&gt; MyEvent.objects.all().all_occurrences()\n&gt;&gt;&gt; event.all_occurrences(from_date=datetime(2015, 1, 1, 10, 0))\n&gt;&gt;&gt; event.occurrence_set.all().all_occurrences(to_date=date(2016, 1, 1))\n&gt;&gt;&gt; occurrence.all_occurrences(from_date=date(2016, 1, 1),\n                               to_date=date(2016, 12, 31))\n</pre>\n<p><tt>instance</tt> is an instance of the corresponding BaseOccurrence\nsubclass.</p>\n<p>A <tt>next_occurrence</tt> method is also provided, taking the same\narguments, but returning a single occurrence tuple.</p>\n<pre>&gt;&gt;&gt; event.next_occurrence()\n&gt;&gt;&gt; event.next_occurrence(from_date=date(2016, 1, 1))\n</pre>\n<p>The method <tt>first_occurrence</tt> also returns a single occurrence tuple,\nbut takes no arguments.</p>\n<div id=\"queryset-filtering\">\n<h3>Queryset filtering</h3>\n<p>Event and Occurrence querysets can be filtered, but due to uncertainty\nwith repetitions, <tt>from_date</tt> filtering is only an approximation\n(whereas <tt>to_date</tt> filtering is accurate). If you need a queryset\nfiltered exactly, pass <tt>exact=True</tt> - this will filter using generated\noccurrences but still return a queryset - but be careful with this as it\nmay be very slow and/or CPU-hungry. For example</p>\n<pre>&gt;&gt;&gt; MyEvent.objects.for_period(from_date=date(2015, 1, 1),\n                             to_date=date(2015, 12, 31))\n&gt;&gt;&gt; event.occurrence_set.for_period(from_date=date(2015, 1, 1), exact=True)\n</pre>\n</div>\n<div id=\"sorting-querysets\">\n<h3>Sorting querysets</h3>\n<p>Event and Occurrence querysets can also be sorted by their next\noccurrence using the <tt>sort_by_next</tt> method. By default this sorts\ninstances by their first occurrence; the optional <tt>from_date</tt> argument\nwill sort by the next occurrence after <tt>from_date</tt>. For example</p>\n<pre>&gt;&gt;&gt; MyEvent.objects.all().sort_by_next()\n&gt;&gt;&gt; event.occurrence_set.for_period(from_date=date(2015, 1, 1)) \\\n&gt;&gt;&gt;      .sort_by_next(date(2015, 1, 1))\n</pre>\n<p>Note that this method returns a sorted list, not a queryset.</p>\n</div>\n</div>\n<div id=\"custom-repeat-intervals\">\n<h2>Custom repeat intervals</h2>\n<p>Occurrences can repeat using any interval that can be expressed as an\n<a href=\"https://labix.org/python-dateutil#head-e987b581aebacf25c7276d3e9214385a12a091f2\" rel=\"nofollow\">rrulestr</a>.\nTo customise the available options, set <tt>EVENTTOOLS_REPEAT_CHOICES</tt> in\nyour django settings. The default value is</p>\n<pre><span class=\"n\">EVENTTOOLS_REPEAT_CHOICES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"RRULE:FREQ=DAILY\"</span><span class=\"p\">,</span> <span class=\"s1\">'Daily'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"RRULE:FREQ=WEEKLY\"</span><span class=\"p\">,</span> <span class=\"s1\">'Weekly'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"RRULE:FREQ=MONTHLY\"</span><span class=\"p\">,</span> <span class=\"s1\">'Monthly'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"RRULE:FREQ=YEARLY\"</span><span class=\"p\">,</span> <span class=\"s1\">'Yearly'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Set <tt>EVENTTOOLS_REPEAT_CHOICES = None</tt> to make repeat a plain-text\nfield.</p>\n</div>\n<div id=\"occurrence-cancellations-or-modifications\">\n<h2>Occurrence cancellations or modifications</h2>\n<p>Cancelling or modifying a single occurrence repetition is not currently\nsupported, but can be implemented by overriding a couple of methods. For\nexample, the following allows cancellations or one-off modifications to\nthe start time of a repetition:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">eventtools.models</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">BaseEvent</span><span class=\"p\">,</span> <span class=\"n\">BaseOccurrence</span><span class=\"p\">,</span> <span class=\"n\">default_naive</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEvent</span><span class=\"p\">(</span><span class=\"n\">BaseEvent</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEventOccurrence</span><span class=\"p\">(</span><span class=\"n\">BaseOccurrence</span><span class=\"p\">):</span>\n    <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">MyEvent</span><span class=\"p\">)</span>\n    <span class=\"n\">overrides</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"s1\">'MyEventOccurrenceOverride'</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_repeater</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">rule</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_repeater</span><span class=\"p\">()</span>  <span class=\"c1\"># gets rruleset from parent method</span>\n        <span class=\"n\">ruleset</span><span class=\"o\">.</span><span class=\"n\">rrule</span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">override</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">overrides</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">():</span>\n            <span class=\"n\">ruleset</span><span class=\"o\">.</span><span class=\"n\">exdate</span><span class=\"p\">(</span><span class=\"n\">default_naive</span><span class=\"p\">(</span><span class=\"n\">override</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">))</span>  <span class=\"c1\"># remove occurrence</span>\n            <span class=\"k\">if</span> <span class=\"n\">override</span><span class=\"o\">.</span><span class=\"n\">modified_start</span><span class=\"p\">:</span>  <span class=\"c1\"># reschedule occurrence if defined</span>\n                <span class=\"n\">ruleset</span><span class=\"o\">.</span><span class=\"n\">rdate</span><span class=\"p\">(</span><span class=\"n\">default_naive</span><span class=\"p\">(</span><span class=\"n\">override</span><span class=\"o\">.</span><span class=\"n\">modified_start</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">ruleset</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEventOccurrenceOverride</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">()</span>  <span class=\"c1\"># must match targeted repetition exactly</span>\n    <span class=\"c1\"># new start, leave blank to cancel</span>\n    <span class=\"n\">modified_start</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Note that start times must match exactly, so if the MyEventOccurrence\nstart is changed, any previously-matching overrides will no longer be\napplied.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<p>Use tox (<a href=\"https://pypi.python.org/pypi/tox\" rel=\"nofollow\">https://pypi.python.org/pypi/tox</a>):</p>\n<pre>&gt; pip install tox\n&gt; cd path-to/django-eventtools\n&gt; tox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6523160, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "fced4ff4a9927c6e9cc4a521afde43bd", "sha256": "7aefec41f7b70efbb33929842ed0843c2fddea4fcc5d64212670fef1989f7433"}, "downloads": -1, "filename": "django-eventtools-0.9.1.tar.gz", "has_sig": false, "md5_digest": "fced4ff4a9927c6e9cc4a521afde43bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7682, "upload_time": "2015-08-20T03:51:29", "upload_time_iso_8601": "2015-08-20T03:51:29.383193Z", "url": "https://files.pythonhosted.org/packages/91/68/88d5d8e1d806218a4b6640f543183ff8082f5d57ea45ce1b198be4c8ad66/django-eventtools-0.9.1.tar.gz", "yanked": false}], "0.9.10": [{"comment_text": "", "digests": {"md5": "b2e62df6c023d624cf17b85429f231be", "sha256": "55f7aca58886765e9c6fae1c7cce9f32db4cb25b5a01333c200e8bc9feb85eed"}, "downloads": -1, "filename": "django-eventtools-0.9.10.tar.gz", "has_sig": false, "md5_digest": "b2e62df6c023d624cf17b85429f231be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10935, "upload_time": "2016-10-17T03:18:34", "upload_time_iso_8601": "2016-10-17T03:18:34.263014Z", "url": "https://files.pythonhosted.org/packages/b5/e8/770228327bd166cfb7001a431704cae5016337cb709b60d5337361509ae6/django-eventtools-0.9.10.tar.gz", "yanked": false}], "0.9.11": [{"comment_text": "", "digests": {"md5": "71b2a048dd8ae9fda4bd1be5e74fbac5", "sha256": "655997ef9c5f569ee83ba568247c9ad61d433bb37a344caaa1c307acae203281"}, "downloads": -1, "filename": "django-eventtools-0.9.11.tar.gz", "has_sig": false, "md5_digest": "71b2a048dd8ae9fda4bd1be5e74fbac5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12090, "upload_time": "2017-02-27T21:42:15", "upload_time_iso_8601": "2017-02-27T21:42:15.769520Z", "url": "https://files.pythonhosted.org/packages/8f/9e/612a150b89bf2eaee8b9b7098b7a01bc36b8ee4919e3c4e623d10f207530/django-eventtools-0.9.11.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "7b04bed69440140d6c7bae9c53fe1def", "sha256": "d73e6eaf5934d0bda223bb31d06c21ac560bcd67d96197956e882f87489cc4d7"}, "downloads": -1, "filename": "django-eventtools-0.9.2.tar.gz", "has_sig": false, "md5_digest": "7b04bed69440140d6c7bae9c53fe1def", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8387, "upload_time": "2015-11-18T22:34:10", "upload_time_iso_8601": "2015-11-18T22:34:10.894567Z", "url": "https://files.pythonhosted.org/packages/b2/3f/d826b7fe8ac3ce9d7b27b0037b6398c4110011ca727c697be47aab96a4e2/django-eventtools-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "012febb90386332ae66ab163bc2de7c0", "sha256": "11692451d64299a9d46a581731e87787db04ba478ce704bada81b046457fe4d5"}, "downloads": -1, "filename": "django-eventtools-0.9.3.tar.gz", "has_sig": false, "md5_digest": "012febb90386332ae66ab163bc2de7c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9351, "upload_time": "2016-01-26T08:41:37", "upload_time_iso_8601": "2016-01-26T08:41:37.713900Z", "url": "https://files.pythonhosted.org/packages/ca/be/d09a8ca3c98eb88282631140c600f145710470ee47cd49cf81883bff5c4b/django-eventtools-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "8dd134e6aeb8cf474e944a831167bdf2", "sha256": "a8439f2c5de45d790ebcbca074506632b14bf70496df38911c8d8871b850104d"}, "downloads": -1, "filename": "django-eventtools-0.9.4.tar.gz", "has_sig": false, "md5_digest": "8dd134e6aeb8cf474e944a831167bdf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9463, "upload_time": "2016-02-03T23:08:47", "upload_time_iso_8601": "2016-02-03T23:08:47.607564Z", "url": "https://files.pythonhosted.org/packages/7d/73/9325bdcc803c513b65aaabcfe042ae9054bcdf8152afa5574a070208a278/django-eventtools-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "580cd3c81a1b1214533ce10241db722d", "sha256": "e5d149f04894e09c277c741e3c4d331948e28fd9152626ef7a7da74b6bfa80c9"}, "downloads": -1, "filename": "django-eventtools-0.9.5.tar.gz", "has_sig": false, "md5_digest": "580cd3c81a1b1214533ce10241db722d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10021, "upload_time": "2016-03-21T23:02:34", "upload_time_iso_8601": "2016-03-21T23:02:34.319077Z", "url": "https://files.pythonhosted.org/packages/05/17/294ad70351c25eea14c9a4ef2d1bb741a4bf94bd3180911a41b08da10e90/django-eventtools-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "32ccac2d03b6e3bba11d8244b37de139", "sha256": "142bb37e1850c7646ca9a10134ffd9922efb217d1371bc2617c234df56514aac"}, "downloads": -1, "filename": "django-eventtools-0.9.6.tar.gz", "has_sig": false, "md5_digest": "32ccac2d03b6e3bba11d8244b37de139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8447, "upload_time": "2016-03-30T01:30:31", "upload_time_iso_8601": "2016-03-30T01:30:31.111031Z", "url": "https://files.pythonhosted.org/packages/72/87/2ee02001092a7ffd0662350ab046abefce68928be7f5169983a3836e5d4e/django-eventtools-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "43e7b7a86c7d265987322862457f59c4", "sha256": "1a12da795ada2dcdde77bfde0ad3ceeb4ad01b0246621e8cd88f5f5e2cad10ac"}, "downloads": -1, "filename": "django-eventtools-0.9.7.tar.gz", "has_sig": false, "md5_digest": "43e7b7a86c7d265987322862457f59c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10096, "upload_time": "2016-04-01T01:04:30", "upload_time_iso_8601": "2016-04-01T01:04:30.502066Z", "url": "https://files.pythonhosted.org/packages/50/78/f3c464d468120914bf083900b46cc53a7478dbba2274f3fca047d83749d3/django-eventtools-0.9.7.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "9543ea59ffc3181d79a0c5fada5db470", "sha256": "01c22e975b2bef2bfc6e6e688ae7bbc04c9ea146128fcc34e2dce85749a519d2"}, "downloads": -1, "filename": "django-eventtools-0.9.8.tar.gz", "has_sig": false, "md5_digest": "9543ea59ffc3181d79a0c5fada5db470", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10396, "upload_time": "2016-07-29T03:24:26", "upload_time_iso_8601": "2016-07-29T03:24:26.787561Z", "url": "https://files.pythonhosted.org/packages/c7/9d/f3040957c71135bf5ea29bf626f69621643d107866fa601601b9f9126ad6/django-eventtools-0.9.8.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "7538b05048c2c896d0d412fbc0e0695b", "sha256": "56ba0b2e84cd52418c93f18283d1111c309a6d4f6870ec5fa02ae6fb3bdcc092"}, "downloads": -1, "filename": "django-eventtools-0.9.9.tar.gz", "has_sig": false, "md5_digest": "7538b05048c2c896d0d412fbc0e0695b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10744, "upload_time": "2016-09-20T21:40:48", "upload_time_iso_8601": "2016-09-20T21:40:48.716782Z", "url": "https://files.pythonhosted.org/packages/64/9b/3a669d9697da3d9fbc25be4a949f3b895445aaf8edda24f7e9e044f621dc/django-eventtools-0.9.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b905c0892956cafcef4ba99296aae449", "sha256": "22ca1c9a2ef2502c99dcd703287f0aab02c0557a595e9d5d3fed45ef3cacf190"}, "downloads": -1, "filename": "django-eventtools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b905c0892956cafcef4ba99296aae449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13943, "upload_time": "2020-01-26T20:03:31", "upload_time_iso_8601": "2020-01-26T20:03:31.279948Z", "url": "https://files.pythonhosted.org/packages/71/b6/a8dcb28ca2135e3da846745523fcc3665e270c03020dc3edf3c9ef5f6a12/django-eventtools-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b905c0892956cafcef4ba99296aae449", "sha256": "22ca1c9a2ef2502c99dcd703287f0aab02c0557a595e9d5d3fed45ef3cacf190"}, "downloads": -1, "filename": "django-eventtools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b905c0892956cafcef4ba99296aae449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13943, "upload_time": "2020-01-26T20:03:31", "upload_time_iso_8601": "2020-01-26T20:03:31.279948Z", "url": "https://files.pythonhosted.org/packages/71/b6/a8dcb28ca2135e3da846745523fcc3665e270c03020dc3edf3c9ef5f6a12/django-eventtools-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:18 2020"}