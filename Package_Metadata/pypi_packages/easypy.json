{"info": {"author": "ludbek", "author_email": "sth.srn@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "**DEPRECATED**\n    Checkout https://github.com/ludbek/bro instead. It is a subset of 'easypy'.\n    It supports project management and task execution. Rest of the features can\n    be implemented as custom tasks.\n\nWARNING\n    this package is a protoype. it is created for sole purpose of exploring the\n    possibilities of combining 'virtualenv', 'virtualenvwrapper', 'pip',\n    'invoke'and 'twine'. once it gets enough feedbacks at its\n    'project home'[1], work for stable version will begin. so use it and please\n    report bugs and provide feedbacks.\n\n    the document at pypi ignores white space, so it is suggested to visit the\n    github 'repo'[1] instead.\n\nHOW IT WORKS\n    it uses 'invoke', the pythonic task executor at its core. it sits on top of\n    'invoke', 'pip', 'virtualenv', 'virtualenvwrapper' and 'twine'. it provides\n    tasks for creating and managing virtualenv, installing, removing, updating\n    and automatically recording the package requirements at 'meta.json' file and\n    finally registering and deploying python packages at 'pypi'. it can be used\n    for creating generic python projects as well as a python package.\n\nINSTALLATION\n    1. $ pip install easypy\n\nAVAILABLE TASK\n    GLOBAL\n        start\n            starts a new project. creates project directory at specified path,\n            creates virtualenv for development. after the environment has been\n            created one can work on it by issuing 'workon <project_name>' at the\n            terminal. if 'workon' command is not available, source it by\n            issueing following command:\n                'source ~/.bashrc'\n\n            syntax:\n                $ py start <project_name> -d <path/to/project/home/> [-p -f]\n                options\n                    -d = directory\n                    -p = if it is python package\n                    -f = overwrite existing directory at project home\n        end\n            it removes virtual environments associated with a project. if --all\n            option is specified it removes the  project directory as well.\n\n            syntax\n                $ py end <project_name> -a\n                options\n                    -a = if all, removes project directory as well\n        setup\n            set ups virtual environments for already existing project. the\n            project must be created with easypy.\n\n            syntax\n                $ py setup [--test --dev --prod]\n                options\n                    --dev = for development environment\n                    --test = for test environment\n                    --prod = for production environment\n        register\n            it registers a python package at pypi. it uses\n            'python setup register' behind the scene.\n\n            syntax\n                $ py register\n\n        deploy\n            it bundles and uploads the python package to pypi.\n            it uses 'python setup sdist' and 'twine upload dist/<package_dist_name>'\n\n            syntax\n                $ py deploy\n    LISTING AVAILABLE TASKS\n        1. easypy tasks\n            $ py\n        2. local tasks\n            $ py .\n        3. a package tasks\n            $ py <package_name>\n        4. list all the tasks at once (TODO)\n            $ py -a\n\n\n    INSIDE VIRTUALENV\n        add\n            installs a python package and registers it as a requirements to the\n            project. if an environment is not specified, it installs the package\n            as common requirements for all the environments.\n\n            syntax\n                $ py add <package_name> [--dev --test --prod]\n                options\n                    --dev = installs in development environment\n                    --test = installs in test environment\n                    --prod = installs in production environment\n        remove\n            uninstalls a python package and removes it as a requirements to the\n            project. for now an environment has to be specified.\n\n            syntax\n                $ py remove <package_name> [--dev --test --prod]\n                options\n                    --dev = installs in development environment\n                    --test = installs in test environment\n                    --prod = installs in production environment\n        update\n            updates a package. an environment has to be specified if the package\n            is not a common requirement.\n\n            syntax\n                $ py update <package_name> [--dev --test --prod]\n        meta\n            displays and sets the meta information for a project.\n\n            syntax\n                $ py meta <property_name>[=property_value]\n\n                available properties\n                    - name\n                    - version\n                    - description\n\n\n[1] https://github.com/ludbek/easypy", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ludbek/easypy", "keywords": "package manager,task executor,package creator", "license": "a license", "maintainer": "", "maintainer_email": "", "name": "easypy", "package_url": "https://pypi.org/project/easypy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/easypy/", "project_urls": {"Homepage": "https://github.com/ludbek/easypy"}, "release_url": "https://pypi.org/project/easypy/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A package manager, package creator and task executor for python.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            **DEPRECATED**<br>    Checkout https://github.com/ludbek/bro instead. It is a subset of 'easypy'.<br>    It supports project management and task execution. Rest of the features can<br>    be implemented as custom tasks.<br><br>WARNING<br>    this package is a protoype. it is created for sole purpose of exploring the<br>    possibilities of combining 'virtualenv', 'virtualenvwrapper', 'pip',<br>    'invoke'and 'twine'. once it gets enough feedbacks at its<br>    'project home'[1], work for stable version will begin. so use it and please<br>    report bugs and provide feedbacks.<br><br>    the document at pypi ignores white space, so it is suggested to visit the<br>    github 'repo'[1] instead.<br><br>HOW IT WORKS<br>    it uses 'invoke', the pythonic task executor at its core. it sits on top of<br>    'invoke', 'pip', 'virtualenv', 'virtualenvwrapper' and 'twine'. it provides<br>    tasks for creating and managing virtualenv, installing, removing, updating<br>    and automatically recording the package requirements at 'meta.json' file and<br>    finally registering and deploying python packages at 'pypi'. it can be used<br>    for creating generic python projects as well as a python package.<br><br>INSTALLATION<br>    1. $ pip install easypy<br><br>AVAILABLE TASK<br>    GLOBAL<br>        start<br>            starts a new project. creates project directory at specified path,<br>            creates virtualenv for development. after the environment has been<br>            created one can work on it by issuing 'workon &lt;project_name&gt;' at the<br>            terminal. if 'workon' command is not available, source it by<br>            issueing following command:<br>                'source ~/.bashrc'<br><br>            syntax:<br>                $ py start &lt;project_name&gt; -d &lt;path/to/project/home/&gt; [-p -f]<br>                options<br>                    -d = directory<br>                    -p = if it is python package<br>                    -f = overwrite existing directory at project home<br>        end<br>            it removes virtual environments associated with a project. if --all<br>            option is specified it removes the  project directory as well.<br><br>            syntax<br>                $ py end &lt;project_name&gt; -a<br>                options<br>                    -a = if all, removes project directory as well<br>        setup<br>            set ups virtual environments for already existing project. the<br>            project must be created with easypy.<br><br>            syntax<br>                $ py setup [--test --dev --prod]<br>                options<br>                    --dev = for development environment<br>                    --test = for test environment<br>                    --prod = for production environment<br>        register<br>            it registers a python package at pypi. it uses<br>            'python setup register' behind the scene.<br><br>            syntax<br>                $ py register<br><br>        deploy<br>            it bundles and uploads the python package to pypi.<br>            it uses 'python setup sdist' and 'twine upload dist/&lt;package_dist_name&gt;'<br><br>            syntax<br>                $ py deploy<br>    LISTING AVAILABLE TASKS<br>        1. easypy tasks<br>            $ py<br>        2. local tasks<br>            $ py .<br>        3. a package tasks<br>            $ py &lt;package_name&gt;<br>        4. list all the tasks at once (TODO)<br>            $ py -a<br><br><br>    INSIDE VIRTUALENV<br>        add<br>            installs a python package and registers it as a requirements to the<br>            project. if an environment is not specified, it installs the package<br>            as common requirements for all the environments.<br><br>            syntax<br>                $ py add &lt;package_name&gt; [--dev --test --prod]<br>                options<br>                    --dev = installs in development environment<br>                    --test = installs in test environment<br>                    --prod = installs in production environment<br>        remove<br>            uninstalls a python package and removes it as a requirements to the<br>            project. for now an environment has to be specified.<br><br>            syntax<br>                $ py remove &lt;package_name&gt; [--dev --test --prod]<br>                options<br>                    --dev = installs in development environment<br>                    --test = installs in test environment<br>                    --prod = installs in production environment<br>        update<br>            updates a package. an environment has to be specified if the package<br>            is not a common requirement.<br><br>            syntax<br>                $ py update &lt;package_name&gt; [--dev --test --prod]<br>        meta<br>            displays and sets the meta information for a project.<br><br>            syntax<br>                $ py meta &lt;property_name&gt;[=property_value]<br><br>                available properties<br>                    - name<br>                    - version<br>                    - description<br><br><br>[1] https://github.com/ludbek/easypy\n          </div>"}, "last_serial": 2150614, "releases": {"0.0.0": [], "0.0.1": [{"comment_text": "", "digests": {"md5": "e45d73a655c349669ba93d632491d1d6", "sha256": "c10b4f9f08adb99501d2a793a75520734ad26bc52387e1a88eaa5a9ae682bed8"}, "downloads": -1, "filename": "easypy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e45d73a655c349669ba93d632491d1d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7924, "upload_time": "2015-04-05T02:28:19", "upload_time_iso_8601": "2015-04-05T02:28:19.087153Z", "url": "https://files.pythonhosted.org/packages/9a/0a/6d4d8708803b0fe79b35f13086f65bff3e18fb5ee9ff1075edf98268c480/easypy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2ebd4923f4a82b5ac8b8294396022a2f", "sha256": "33aa6178b03cbef92769b138355852fb5534e40c15d19627c6584358a0f5ffe1"}, "downloads": -1, "filename": "easypy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2ebd4923f4a82b5ac8b8294396022a2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7972, "upload_time": "2015-04-05T03:15:51", "upload_time_iso_8601": "2015-04-05T03:15:51.994431Z", "url": "https://files.pythonhosted.org/packages/7f/ae/10b342f022e74ddfedf30958e1d88adaf5b67d513fdddfa0d12af480b17c/easypy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9cdc18b8af2e44ffc6fd000b6402d352", "sha256": "8dee901af98681078d0f5dd3c7696901e3fb496584a848d02e2fbb1487110863"}, "downloads": -1, "filename": "easypy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9cdc18b8af2e44ffc6fd000b6402d352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8313, "upload_time": "2015-04-05T03:25:35", "upload_time_iso_8601": "2015-04-05T03:25:35.710262Z", "url": "https://files.pythonhosted.org/packages/fe/bd/01e7d89b9afae83203c47b66d3a02ce8226b6d748bab880b82ab02227c87/easypy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6923daa5c9eb5dc07784658f83aa6c5d", "sha256": "0806138eeb62316bbebb7d92012b1e5a80118fa540e5492eb5e00ace71ca8159"}, "downloads": -1, "filename": "easypy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6923daa5c9eb5dc07784658f83aa6c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8469, "upload_time": "2016-06-04T12:51:14", "upload_time_iso_8601": "2016-06-04T12:51:14.852113Z", "url": "https://files.pythonhosted.org/packages/6e/04/89959e69c22f8c3ac47cfc6107ae2629ea432ebc022dc6abbfc371c29496/easypy-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6923daa5c9eb5dc07784658f83aa6c5d", "sha256": "0806138eeb62316bbebb7d92012b1e5a80118fa540e5492eb5e00ace71ca8159"}, "downloads": -1, "filename": "easypy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6923daa5c9eb5dc07784658f83aa6c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8469, "upload_time": "2016-06-04T12:51:14", "upload_time_iso_8601": "2016-06-04T12:51:14.852113Z", "url": "https://files.pythonhosted.org/packages/6e/04/89959e69c22f8c3ac47cfc6107ae2629ea432ebc022dc6abbfc371c29496/easypy-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:17 2020"}