{"info": {"author": "Lau Siaw Young", "author_email": "sy@siawyoung.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Iromeku\n\n[![Build Status](https://travis-ci.com/carousell/DataAccessLayer.svg?token=EF9qHkSmyt2BrPXZdP6q&branch=master)](https://travis-ci.com/carousell/DataAccessLayer)\n\n> \u8272\u3081\u304f (hiragana \u3044\u308d\u3081\u304f, r\u014dmaji iromeku) 1. to become lively 2. to become roused 3. to look arousing\n\nIromeku is a library to extract a colour palette from a given image.\n\nThe implementation is heavily inspired by the Stack Overflow answer here: ![How does\nthe algorithm to color the song list in iTunes 11\nwork?](https://stackoverflow.com/questions/13637892/how-does-the-algorithm-to-color-the-song-list-in-itunes-11-work#answer-13675803)\n\nThe way it works is by clustering similar colours together, based on the\nEuclidean distances of the pixel's value in the YUV colour space, which more\nclosely approximates colour perception.\n\n## Getting Started\n\n``` shell\n$ pip install iromeku\n```\n\n``` python\nfrom iromeku import load_image, generate_clusters, get_dominant_colour\n\nrgb_values = load_image(\"test.jpg\")\nclusters = generate_clusters(rgb_values, 0.1)\ncolour = get_dominant_colour(clusters)\nprint(colour.r, colour.g, colour.b)\n```\n\n`0.1` in the second argument of `generate_clusters` refers to the threshold under which we consider two colours to be similar. Try adjusting the threshold for different results.\n\n## Contributing\n\nThe library is type hinted using the comment-based syntax for backward compatibility with Python 2. Tests are run using tox.\n\n## TODO\n\n- [ ] Add example images\n- [ ] Add support for generating complimentary colours\n- [ ] Add support for selective sampling (e.g borders + center)\n- [ ] Improve clustering algorithm\n\n## License\n\nMIT License\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/siawyoung/iromeku", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "iromeku", "package_url": "https://pypi.org/project/iromeku/", "platform": "", "project_url": "https://pypi.org/project/iromeku/", "project_urls": {"Homepage": "https://github.com/siawyoung/iromeku"}, "release_url": "https://pypi.org/project/iromeku/0.0.1/", "requires_dist": ["pillow"], "requires_python": "", "summary": "A package for extracting colours from images.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Iromeku</h1>\n<p><a href=\"https://travis-ci.com/carousell/DataAccessLayer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43ef06e6b4eabf4e533eade3a195d3e85df34d4c/68747470733a2f2f7472617669732d63692e636f6d2f6361726f7573656c6c2f446174614163636573734c617965722e7376673f746f6b656e3d45463971486b536d797432427250585a64503671266272616e63683d6d6173746572\"></a></p>\n<blockquote>\n<p>\u8272\u3081\u304f (hiragana \u3044\u308d\u3081\u304f, r\u014dmaji iromeku) 1. to become lively 2. to become roused 3. to look arousing</p>\n</blockquote>\n<p>Iromeku is a library to extract a colour palette from a given image.</p>\n<p>The implementation is heavily inspired by the Stack Overflow answer here: <img alt=\"How does the algorithm to color the song list in iTunes 11 work?\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41cf7139a3e923ed8b1615c2ce7e6eab06e244d0/68747470733a2f2f737461636b6f766572666c6f772e636f6d2f7175657374696f6e732f31333633373839322f686f772d646f65732d7468652d616c676f726974686d2d746f2d636f6c6f722d7468652d736f6e672d6c6973742d696e2d6974756e65732d31312d776f726b23616e737765722d3133363735383033\"></p>\n<p>The way it works is by clustering similar colours together, based on the\nEuclidean distances of the pixel's value in the YUV colour space, which more\nclosely approximates colour perception.</p>\n<h2>Getting Started</h2>\n<pre>$ pip install iromeku\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">iromeku</span> <span class=\"kn\">import</span> <span class=\"n\">load_image</span><span class=\"p\">,</span> <span class=\"n\">generate_clusters</span><span class=\"p\">,</span> <span class=\"n\">get_dominant_colour</span>\n\n<span class=\"n\">rgb_values</span> <span class=\"o\">=</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"s2\">\"test.jpg\"</span><span class=\"p\">)</span>\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">generate_clusters</span><span class=\"p\">(</span><span class=\"n\">rgb_values</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">colour</span> <span class=\"o\">=</span> <span class=\"n\">get_dominant_colour</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">colour</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"o\">.</span><span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n<p><code>0.1</code> in the second argument of <code>generate_clusters</code> refers to the threshold under which we consider two colours to be similar. Try adjusting the threshold for different results.</p>\n<h2>Contributing</h2>\n<p>The library is type hinted using the comment-based syntax for backward compatibility with Python 2. Tests are run using tox.</p>\n<h2>TODO</h2>\n<ul>\n<li>[ ] Add example images</li>\n<li>[ ] Add support for generating complimentary colours</li>\n<li>[ ] Add support for selective sampling (e.g borders + center)</li>\n<li>[ ] Improve clustering algorithm</li>\n</ul>\n<h2>License</h2>\n<p>MIT License</p>\n\n          </div>"}, "last_serial": 6067552, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6a5f5ac07ea875fdc001d3b55641de2c", "sha256": "62edc812b8ab489137943d0d535d360dc5bc9a0853b321feca52f148b4447d53"}, "downloads": -1, "filename": "iromeku-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a5f5ac07ea875fdc001d3b55641de2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7754, "upload_time": "2019-11-02T08:36:06", "upload_time_iso_8601": "2019-11-02T08:36:06.111661Z", "url": "https://files.pythonhosted.org/packages/cf/a5/6e0ea92ada9c12f9792ec0290ce39cc5bf0086d0ca539ec78e3adcb78487/iromeku-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "089b8e2352ccd27c7dee38854def8e32", "sha256": "bab91c29805ef7ca5937b5f4f5a609f3b208391ca6197da2f365d6c3988a4b43"}, "downloads": -1, "filename": "iromeku-0.0.1.tar.gz", "has_sig": false, "md5_digest": "089b8e2352ccd27c7dee38854def8e32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3941, "upload_time": "2019-11-02T08:36:08", "upload_time_iso_8601": "2019-11-02T08:36:08.590582Z", "url": "https://files.pythonhosted.org/packages/ed/8f/a9b2596690068c6c9b263c7fab97afdaecaf07bb92c31286341390f8961d/iromeku-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a5f5ac07ea875fdc001d3b55641de2c", "sha256": "62edc812b8ab489137943d0d535d360dc5bc9a0853b321feca52f148b4447d53"}, "downloads": -1, "filename": "iromeku-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a5f5ac07ea875fdc001d3b55641de2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7754, "upload_time": "2019-11-02T08:36:06", "upload_time_iso_8601": "2019-11-02T08:36:06.111661Z", "url": "https://files.pythonhosted.org/packages/cf/a5/6e0ea92ada9c12f9792ec0290ce39cc5bf0086d0ca539ec78e3adcb78487/iromeku-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "089b8e2352ccd27c7dee38854def8e32", "sha256": "bab91c29805ef7ca5937b5f4f5a609f3b208391ca6197da2f365d6c3988a4b43"}, "downloads": -1, "filename": "iromeku-0.0.1.tar.gz", "has_sig": false, "md5_digest": "089b8e2352ccd27c7dee38854def8e32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3941, "upload_time": "2019-11-02T08:36:08", "upload_time_iso_8601": "2019-11-02T08:36:08.590582Z", "url": "https://files.pythonhosted.org/packages/ed/8f/a9b2596690068c6c9b263c7fab97afdaecaf07bb92c31286341390f8961d/iromeku-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:14 2020"}