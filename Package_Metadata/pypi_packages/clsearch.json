{"info": {"author": "sunfinite", "author_email": "sunfinite@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "CLSearch\n========\n\nDescription\n------------\nclsearch indexes files of the specified types(and the default types: mp3,aac,ogg,avi,mkv,mp4) and makes it easy to search for these files by name or metadata(currently id3 and xmp).\n\nThe results are ranked using TF-IDF scores with results split into filetype results(ex. search \".mp3\"), \ndirect results(query terms in name of the file) and tag results(query terms in any of the metadata tags)\n\nTested with python 2.6.5 and python 2.7.5 on linux.\n\nInstallation\n-------------\n::\n       \n    From source:\n\n    Package is located in dist/clsearch*.tar.gz on github\n    (NOTE: Hit view raw and download)\n\n    #python setup.py install\n    \n    or\n    \n    From PyPI:\n\n    #pip install clsearch\n\n    \nXMP metadata:\n----------------\n::\n\n    #pip install python-xmp-toolkit \n\n    This in turn needs exempi. On Ubuntu:\n\n    #apt-get install libexempi3\n    \nUsage:\n------ \n::\n\n    $clsearch -i|--index [-d|--dir <directory>] [-t|--types <types>] [-q|--quiet] \n    $clsearch -s|--search <query>\n    $clsearch -h|--help\n\n    Examples:\n        $clsearch -i\n        $clsearch -i -d /home/example/Music/Awesome/\n        $clsearch -i -t flv,txt\n        $clsearch -i -t \"flv txt jpg\"\n        \n        $clsearch -s lazarus\n        $clsearch -s \"rock and roll\"\n\n    Note:\n        1. For xmp tags to be indexed, python-xmp-toolkit and it's dependency Exempy 2.1.1 have to be installed.\n        2. The indexing operation can be performed any number of times. Only new files are indexed each time.\n\n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      -i, --index           Index filename and id3 and xmp tags if present.\n                            Searches for new files and indexes them.\n      -d DIRECTORY, --dir=DIRECTORY\n                            The directory to be searched for files. Defaults to\n                            '~' if not specified.\n      -t TYPES, --types=TYPES\n                            Additional file types to index. By default\n                            mp3,aac,ogg,avi,mkv,mp4 files are indexed.\n      -s QUERY, --search=QUERY\n                            Search and return file paths ranked by TF-IDF.\n      -q, --quiet           Don't print indexed files to stdout.  \n\n\n\nTests\n-----\nUnit tests are located in src/clsearch/test.\n\nThough each test can be run separately, running \n``$python test_search.py``\nwill run all tests because it inherits from IndexTest\nwhich in turn inherits from BaseTest.\n\nTODO\n----\n1. Better exception handling\n2. Multiprocessing\n3. Fuzzy search...search for \"DSC\" gives results for \"DSC_001.jpg\" but not \"DSC001.jpg\"\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sunfinite/clsearch", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "clsearch", "package_url": "https://pypi.org/project/clsearch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clsearch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/sunfinite/clsearch"}, "release_url": "https://pypi.org/project/clsearch/0.1a1/", "requires_dist": null, "requires_python": null, "summary": "Index and search files from command line, including id3 and xmp tags.", "version": "0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>clsearch indexes files of the specified types(and the default types: mp3,aac,ogg,avi,mkv,mp4) and makes it easy to search for these files by name or metadata(currently id3 and xmp).</p>\n<p>The results are ranked using TF-IDF scores with results split into filetype results(ex. search \u201c.mp3\u201d),\ndirect results(query terms in name of the file) and tag results(query terms in any of the metadata tags)</p>\n<p>Tested with python 2.6.5 and python 2.7.5 on linux.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>From source:\n\nPackage is located in dist/clsearch*.tar.gz on github\n(NOTE: Hit view raw and download)\n\n#python setup.py install\n\nor\n\nFrom PyPI:\n\n#pip install clsearch\n</pre>\n</div>\n<div id=\"xmp-metadata\">\n<h2>XMP metadata:</h2>\n<pre>#pip install python-xmp-toolkit\n\nThis in turn needs exempi. On Ubuntu:\n\n#apt-get install libexempi3\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<pre>$clsearch -i|--index [-d|--dir &lt;directory&gt;] [-t|--types &lt;types&gt;] [-q|--quiet]\n$clsearch -s|--search &lt;query&gt;\n$clsearch -h|--help\n\nExamples:\n    $clsearch -i\n    $clsearch -i -d /home/example/Music/Awesome/\n    $clsearch -i -t flv,txt\n    $clsearch -i -t \"flv txt jpg\"\n\n    $clsearch -s lazarus\n    $clsearch -s \"rock and roll\"\n\nNote:\n    1. For xmp tags to be indexed, python-xmp-toolkit and it's dependency Exempy 2.1.1 have to be installed.\n    2. The indexing operation can be performed any number of times. Only new files are indexed each time.\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -i, --index           Index filename and id3 and xmp tags if present.\n                        Searches for new files and indexes them.\n  -d DIRECTORY, --dir=DIRECTORY\n                        The directory to be searched for files. Defaults to\n                        '~' if not specified.\n  -t TYPES, --types=TYPES\n                        Additional file types to index. By default\n                        mp3,aac,ogg,avi,mkv,mp4 files are indexed.\n  -s QUERY, --search=QUERY\n                        Search and return file paths ranked by TF-IDF.\n  -q, --quiet           Don't print indexed files to stdout.\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Unit tests are located in src/clsearch/test.</p>\n<p>Though each test can be run separately, running\n<tt>$python test_search.py</tt>\nwill run all tests because it inherits from IndexTest\nwhich in turn inherits from BaseTest.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ol>\n<li>Better exception handling</li>\n<li>Multiprocessing</li>\n<li>Fuzzy search\u2026search for \u201cDSC\u201d gives results for \u201cDSC_001.jpg\u201d but not \u201cDSC001.jpg\u201d</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 858108, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "7c7065cec1672246c5f4bbe5b4d1f454", "sha256": "54fea301998c45c752986ff2f8c8a718907cfc4178dc1d45bcb6f51f70b1c578"}, "downloads": -1, "filename": "clsearch-0.1a1.tar.gz", "has_sig": false, "md5_digest": "7c7065cec1672246c5f4bbe5b4d1f454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100271, "upload_time": "2013-09-05T19:00:39", "upload_time_iso_8601": "2013-09-05T19:00:39.924586Z", "url": "https://files.pythonhosted.org/packages/bb/b3/a21691ccea7ee4dd694cee399ea06a6cdca2d07f672a635f2bf6a5685834/clsearch-0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c7065cec1672246c5f4bbe5b4d1f454", "sha256": "54fea301998c45c752986ff2f8c8a718907cfc4178dc1d45bcb6f51f70b1c578"}, "downloads": -1, "filename": "clsearch-0.1a1.tar.gz", "has_sig": false, "md5_digest": "7c7065cec1672246c5f4bbe5b4d1f454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100271, "upload_time": "2013-09-05T19:00:39", "upload_time_iso_8601": "2013-09-05T19:00:39.924586Z", "url": "https://files.pythonhosted.org/packages/bb/b3/a21691ccea7ee4dd694cee399ea06a6cdca2d07f672a635f2bf6a5685834/clsearch-0.1a1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:41 2020"}