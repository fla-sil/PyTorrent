{"info": {"author": "HuiiBuh", "author_email": "nhaderer1@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development"], "description": "# AsyncSpotify\n\n![Unit Tests](https://github.com/HuiiBuh/AsyncSpotify/workflows/Unit%20Tests/badge.svg)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/65dd7dbb2b4b4efcb3fc365f2d3f1684)](https://app.codacy.com/manual/nhaderer1/AsyncSpotify?utm_source=github.com&utm_medium=referral&utm_content=HuiiBuh/AsyncSpotify&utm_campaign=Badge_Grade_Dashboard)\n[![codecov](https://codecov.io/gh/HuiiBuh/AsyncSpotify/branch/master/graph/badge.svg?token=0oC3x1chKb)](https://codecov.io/gh/HuiiBuh/AsyncSpotify)\n\n## Documentation\n\nThe full documentation can be viewed [here](https://huiibuh.github.io/AsyncSpotify/).\n\n## Why should you use this library\n\n+ 100% Code coverage\n+ Completely type annotated\n+ Completely async\n+ Scales up to (theoretically) unlimited requests per second (tested with 1000 simultaneous requests which lead to a 429)\n+ Customize the timeout, maximal simultaneous request\n+ Throws custom errors so you can catch a Token expiration, a rate limit violation easily or an invalid album id easily\n+ Gets rid of the client credential workflow if you provide spotify cookies\n  + Good for automated testing\n\n## Installation\n\nYou need at least python3.6 to install the package\n\n```bash\npip install async-spotify\n```\n\n## Example\n\nFor more in depth examples take a look [here](EXAMPLES.md) or visit the documentation.\n\n```python\nfrom async_spotify import Preferences, SpotifyApiClient, SpotifyAuthorisationToken\n\n# Create a preferences object and load the preferences from env variables\npreferences = Preferences()\npreferences.load_from_env()\n\n# Create a new Api client and pass the preferences\napi = SpotifyApiClient(preferences, hold_authentication=True)\n\n# Get the auth token with your code\ncode: str = \"Your Spotify Code\"\nauth_token: SpotifyAuthorisationToken = await api.get_auth_token_with_code(code)\n\n# Create a new client\nawait api.create_new_client(request_limit=1500)\n\n# Start making queries with the internally saved token\nalbum_tracks: dict = await api.albums.get_tracks('03dlqdFWY9gwJxGl3AREVy')\n\n# If you pass a valid auth_token this auth_token will be used for making the requests\nalbum_tracks: dict = await api.albums.get_tracks('03dlqdFWY9gwJxGl3AREVy', auth_token)\n```\n\n## Tests\n\nSee [here](STUFF.md).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HuiiBuh/AsyncSpotify", "keywords": "Spotify,Async,API,Wrapper,AioHttp", "license": "", "maintainer": "", "maintainer_email": "", "name": "async-spotify", "package_url": "https://pypi.org/project/async-spotify/", "platform": "", "project_url": "https://pypi.org/project/async-spotify/", "project_urls": {"Homepage": "https://github.com/HuiiBuh/AsyncSpotify"}, "release_url": "https://pypi.org/project/async-spotify/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An async spotify api client", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AsyncSpotify</h1>\n<p><img alt=\"Unit Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eecfca5ea9e3b3d2c73ad038f37ce082581d3f0d/68747470733a2f2f6769746875622e636f6d2f487569694275682f4173796e6353706f746966792f776f726b666c6f77732f556e697425323054657374732f62616467652e737667\">\n<a href=\"https://app.codacy.com/manual/nhaderer1/AsyncSpotify?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=HuiiBuh/AsyncSpotify&amp;utm_campaign=Badge_Grade_Dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b65bcf57fae6880f8a194e5a076fc0af798bfc4c/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3635646437646262326234623465666362336663333635663264336631363834\"></a>\n<a href=\"https://codecov.io/gh/HuiiBuh/AsyncSpotify\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea08db111fc67315cd874c97d1596dd3cba38d51/68747470733a2f2f636f6465636f762e696f2f67682f487569694275682f4173796e6353706f746966792f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d306f4333783163684b62\"></a></p>\n<h2>Documentation</h2>\n<p>The full documentation can be viewed <a href=\"https://huiibuh.github.io/AsyncSpotify/\" rel=\"nofollow\">here</a>.</p>\n<h2>Why should you use this library</h2>\n<ul>\n<li>100% Code coverage</li>\n<li>Completely type annotated</li>\n<li>Completely async</li>\n<li>Scales up to (theoretically) unlimited requests per second (tested with 1000 simultaneous requests which lead to a 429)</li>\n<li>Customize the timeout, maximal simultaneous request</li>\n<li>Throws custom errors so you can catch a Token expiration, a rate limit violation easily or an invalid album id easily</li>\n<li>Gets rid of the client credential workflow if you provide spotify cookies\n<ul>\n<li>Good for automated testing</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>You need at least python3.6 to install the package</p>\n<pre>pip install async-spotify\n</pre>\n<h2>Example</h2>\n<p>For more in depth examples take a look <a href=\"EXAMPLES.md\" rel=\"nofollow\">here</a> or visit the documentation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">async_spotify</span> <span class=\"kn\">import</span> <span class=\"n\">Preferences</span><span class=\"p\">,</span> <span class=\"n\">SpotifyApiClient</span><span class=\"p\">,</span> <span class=\"n\">SpotifyAuthorisationToken</span>\n\n<span class=\"c1\"># Create a preferences object and load the preferences from env variables</span>\n<span class=\"n\">preferences</span> <span class=\"o\">=</span> <span class=\"n\">Preferences</span><span class=\"p\">()</span>\n<span class=\"n\">preferences</span><span class=\"o\">.</span><span class=\"n\">load_from_env</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a new Api client and pass the preferences</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyApiClient</span><span class=\"p\">(</span><span class=\"n\">preferences</span><span class=\"p\">,</span> <span class=\"n\">hold_authentication</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the auth token with your code</span>\n<span class=\"n\">code</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\"Your Spotify Code\"</span>\n<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"n\">SpotifyAuthorisationToken</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_auth_token_with_code</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new client</span>\n<span class=\"k\">await</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">create_new_client</span><span class=\"p\">(</span><span class=\"n\">request_limit</span><span class=\"o\">=</span><span class=\"mi\">1500</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start making queries with the internally saved token</span>\n<span class=\"n\">album_tracks</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">get_tracks</span><span class=\"p\">(</span><span class=\"s1\">'03dlqdFWY9gwJxGl3AREVy'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you pass a valid auth_token this auth_token will be used for making the requests</span>\n<span class=\"n\">album_tracks</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">albums</span><span class=\"o\">.</span><span class=\"n\">get_tracks</span><span class=\"p\">(</span><span class=\"s1\">'03dlqdFWY9gwJxGl3AREVy'</span><span class=\"p\">,</span> <span class=\"n\">auth_token</span><span class=\"p\">)</span>\n</pre>\n<h2>Tests</h2>\n<p>See <a href=\"STUFF.md\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 7112296, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4296e634d5e3833bbae7a06e3b98be2b", "sha256": "bc0fab6fea3c82c7d2aebfb1a5550b4fc6095e3242fd962791a2ca65fb401c88"}, "downloads": -1, "filename": "async-spotify-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4296e634d5e3833bbae7a06e3b98be2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24682, "upload_time": "2020-04-20T14:56:02", "upload_time_iso_8601": "2020-04-20T14:56:02.488757Z", "url": "https://files.pythonhosted.org/packages/76/3a/bbaf4c4fe67f7d5ab075dd8d0e89da306da1cfce8da0d86496de85716831/async-spotify-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "052f79eeac1ebebc2ad53282ca5371fb", "sha256": "5abb1969dcfdb7bda638ffac4fc611e719f3992d891db28ddd5fe0266d3428bc"}, "downloads": -1, "filename": "async-spotify-0.1.1.tar.gz", "has_sig": false, "md5_digest": "052f79eeac1ebebc2ad53282ca5371fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24723, "upload_time": "2020-04-20T15:25:35", "upload_time_iso_8601": "2020-04-20T15:25:35.259044Z", "url": "https://files.pythonhosted.org/packages/cc/4b/166a34f65421372be985e0f0b3892d68b2595e7bd306e36a605efb4b0bb1/async-spotify-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9046398dcb79deb6127ee50c7492faae", "sha256": "93092f43099bcd35941229febc83d46b8bb7c6884aa73288970a89f2f938a65e"}, "downloads": -1, "filename": "async-spotify-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9046398dcb79deb6127ee50c7492faae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25094, "upload_time": "2020-04-27T14:49:09", "upload_time_iso_8601": "2020-04-27T14:49:09.079124Z", "url": "https://files.pythonhosted.org/packages/cd/83/0753f4fa850a5e492e7c4b748484a5d4259166dc03623bb07d45fc5cf83a/async-spotify-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9046398dcb79deb6127ee50c7492faae", "sha256": "93092f43099bcd35941229febc83d46b8bb7c6884aa73288970a89f2f938a65e"}, "downloads": -1, "filename": "async-spotify-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9046398dcb79deb6127ee50c7492faae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25094, "upload_time": "2020-04-27T14:49:09", "upload_time_iso_8601": "2020-04-27T14:49:09.079124Z", "url": "https://files.pythonhosted.org/packages/cd/83/0753f4fa850a5e492e7c4b748484a5d4259166dc03623bb07d45fc5cf83a/async-spotify-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:40 2020"}