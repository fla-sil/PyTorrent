{"info": {"author": "Sebastian Estenssoro", "author_email": "seb.estenssoro@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "sebflow\n=======\n\n``Airflow`` is awesome\n\nBut it's confusing.\n\n- So many logs\n- How do I run anything?\n- Did I just run something?\n- I think I just ran something...\n- Really, too many logs\n\nAnd bulky.\n\n- You have to launch a webserver and a scheduler to run a dag.\n\nAnd it doesn't work on Windows...\n\n``Sebflow`` is a stripped-down Airflow implementation that runs locally on both Windows and Linux, only uses PythonOperators, and allows you to use your computer's scheduling programs to run a dag.\n\nSebFlow is ripped almost entirely from the Incubator-Airflow project: a team of incredible programmers. I have learned so much from their code.\n\n.. code-block:: pycon\n\n import time\n\n from sebflow.models import DAG\n from sebflow.operators.python_operator import PythonOperator\n from sebflow.exceptions import SebOnPurposeError\n\n\n  def sleep1():\n      time.sleep(1)\n\n\n def sleep5(*args, **kwargs):\n     time.sleep(5)\n\n\n def fail_on_purpose(arg1, arg2):\n     raise SebOnPurposeError()\n\n\n dag = DAG(\n     'test',\n     schedule_interval='@daily',\n\n )\n\n t1 = PythonOperator(\n     task_id='task1',\n     dag=dag,\n     python_callable=sleep1)\n\n t2 = PythonOperator(\n     task_id='task12',\n     dag=dag,\n     python_callable=fail_on_purpose,\n     op_args=['asdf', 'asdfasdf']\n )\n\n t3 = PythonOperator(\n     task_id='task13',\n     dag=dag,\n     python_callable=sleep5,\n     op_args=['asdf', 'asdfsdf'],\n     op_kwargs={'kwarg1': 'asdfasdf', 'kwarg2': 'asdfasdf'}\n )\n\n\n t2.set_upstream(t1)\n t3.set_upstream(t1)\n\n if __name__ == '__main__':\n     dag.run()\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/estenssoros/sebflow", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sebflow", "package_url": "https://pypi.org/project/sebflow/", "platform": "", "project_url": "https://pypi.org/project/sebflow/", "project_urls": {"Homepage": "https://github.com/estenssoros/sebflow"}, "release_url": "https://pypi.org/project/sebflow/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "programatically author and monitor data pipelines", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>Airflow</tt> is awesome</p>\n<p>But it\u2019s confusing.</p>\n<ul>\n<li>So many logs</li>\n<li>How do I run anything?</li>\n<li>Did I just run something?</li>\n<li>I think I just ran something\u2026</li>\n<li>Really, too many logs</li>\n</ul>\n<p>And bulky.</p>\n<ul>\n<li>You have to launch a webserver and a scheduler to run a dag.</li>\n</ul>\n<p>And it doesn\u2019t work on Windows\u2026</p>\n<p><tt>Sebflow</tt> is a stripped-down Airflow implementation that runs locally on both Windows and Linux, only uses PythonOperators, and allows you to use your computer\u2019s scheduling programs to run a dag.</p>\n<p>SebFlow is ripped almost entirely from the Incubator-Airflow project: a team of incredible programmers. I have learned so much from their code.</p>\n<pre><span class=\"go\">import time\n\nfrom sebflow.models import DAG\nfrom sebflow.operators.python_operator import PythonOperator\nfrom sebflow.exceptions import SebOnPurposeError\n\n\n def sleep1():\n     time.sleep(1)\n\n\ndef sleep5(*args, **kwargs):\n    time.sleep(5)\n\n\ndef fail_on_purpose(arg1, arg2):\n    raise SebOnPurposeError()\n\n\ndag = DAG(\n    'test',\n    schedule_interval='@daily',\n\n)\n\nt1 = PythonOperator(\n    task_id='task1',\n    dag=dag,\n    python_callable=sleep1)\n\nt2 = PythonOperator(\n    task_id='task12',\n    dag=dag,\n    python_callable=fail_on_purpose,\n    op_args=['asdf', 'asdfasdf']\n)\n\nt3 = PythonOperator(\n    task_id='task13',\n    dag=dag,\n    python_callable=sleep5,\n    op_args=['asdf', 'asdfsdf'],\n    op_kwargs={'kwarg1': 'asdfasdf', 'kwarg2': 'asdfasdf'}\n)\n\n\nt2.set_upstream(t1)\nt3.set_upstream(t1)\n\nif __name__ == '__main__':\n    dag.run()</span>\n</pre>\n\n          </div>"}, "last_serial": 3480538, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "0271d99581eba81830c99ca1e9eb78c2", "sha256": "dbd665e7a48541e8d5d15ee02c8fc28805a4b3e3f0904c406e194f37b129378f"}, "downloads": -1, "filename": "sebflow-0.0.0.macosx-10.6-intel.tar.gz", "has_sig": false, "md5_digest": "0271d99581eba81830c99ca1e9eb78c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41302, "upload_time": "2018-01-11T11:38:14", "upload_time_iso_8601": "2018-01-11T11:38:14.948301Z", "url": "https://files.pythonhosted.org/packages/6a/ce/11acc81ffe778d5b25d27e95ffb1ef641bd1566bcd4cc30593244ea5128e/sebflow-0.0.0.macosx-10.6-intel.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "29f2afe5677a8d501a3f70e82e71115f", "sha256": "d20a9c439f652bd726647f8140be45cc1415ffdfcc9e790a80534e22fa10a9bf"}, "downloads": -1, "filename": "sebflow-0.0.1.tar.gz", "has_sig": false, "md5_digest": "29f2afe5677a8d501a3f70e82e71115f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19208, "upload_time": "2018-01-11T11:51:34", "upload_time_iso_8601": "2018-01-11T11:51:34.629080Z", "url": "https://files.pythonhosted.org/packages/35/db/46eb7f369665d6e93380b290b53bdde809e656cb43749e264cd8479be063/sebflow-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f87ee5f63b7eefa03d449d450310a2c1", "sha256": "f13b4fd76f92fd7d66a4c8a1e3a93131d5c3eb58a46ce5bf78398671e149d139"}, "downloads": -1, "filename": "sebflow-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f87ee5f63b7eefa03d449d450310a2c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19003, "upload_time": "2018-01-11T12:02:13", "upload_time_iso_8601": "2018-01-11T12:02:13.688092Z", "url": "https://files.pythonhosted.org/packages/93/49/730bbb104a2b133290f654b3d29aa1a5a1ed83c69d106ebc42c7725f6baa/sebflow-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f87ee5f63b7eefa03d449d450310a2c1", "sha256": "f13b4fd76f92fd7d66a4c8a1e3a93131d5c3eb58a46ce5bf78398671e149d139"}, "downloads": -1, "filename": "sebflow-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f87ee5f63b7eefa03d449d450310a2c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19003, "upload_time": "2018-01-11T12:02:13", "upload_time_iso_8601": "2018-01-11T12:02:13.688092Z", "url": "https://files.pythonhosted.org/packages/93/49/730bbb104a2b133290f654b3d29aa1a5a1ed83c69d106ebc42c7725f6baa/sebflow-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:01 2020"}