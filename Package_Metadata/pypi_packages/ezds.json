{"info": {"author": "Tal Peretz", "author_email": "talperetz24@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3"], "description": "![](resources/markovx_banner.png)\n\n### Intro ###\n[Markov Chains](https://en.wikipedia.org/wiki/Markov_chain) implementation <br>\n\n### Installation ###\nin your terminal:\n\n    > pip install markovx\n    \n### Examples ###\n\nAdding Chains\n```python\nfrom markovx.models import MarkovModel\n    \nmx = MarkovModel()\nmx.add_one('123456')\nmx.add_one('qwerty')\nmx.add_many(['admin', 'root', 'user'])\n```\n\nGenerating Chains\n```python\nmx.generate(6) # len of tokens in chain\n```\n```python\nmx.generate(6, random_init=True)\n# when True first token in chain would be assigned randomly\n# when False first token would be assigned based on observed firs tokens\n# default to False\n```\n```python\nmx.generate(6, smart_ending=True)\n# when False chain wouldn't be terminated before len(chain) == n even if model got to an end token\n# when True if model got to an end token while len(chain) < n chain would terminate\n# default to False\n```\nOrdinal Markov Chains (position dependent chains)\n```python\nfrom markovx.models import OrdinalMarkovModel\n    \nmx = OrdinalMarkovModel()\nmx.add_one('123456')\nmx.add_one('123qwe')\nmx.add_many(['qwerty', 'qwe123', 'qwe123456'])\nmx.generate(6)\n```\n\n### Contact ###\n[Tal Peretz](https://www.linkedin.com/in/tal-per/)\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/talperetz/pyds/tarball/1.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/talperetz/pyds", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "ezds", "package_url": "https://pypi.org/project/ezds/", "platform": "", "project_url": "https://pypi.org/project/ezds/", "project_urls": {"Download": "https://github.com/talperetz/pyds/tarball/1.0.0", "Homepage": "https://github.com/talperetz/pyds"}, "release_url": "https://pypi.org/project/ezds/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "data science made easy", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ![](resources/markovx_banner.png)<br><br>### Intro ###<br>[Markov Chains](https://en.wikipedia.org/wiki/Markov_chain) implementation &lt;br&gt;<br><br>### Installation ###<br>in your terminal:<br><br>    &gt; pip install markovx<br>    <br>### Examples ###<br><br>Adding Chains<br>```python<br>from markovx.models import MarkovModel<br>    <br>mx = MarkovModel()<br>mx.add_one('123456')<br>mx.add_one('qwerty')<br>mx.add_many(['admin', 'root', 'user'])<br>```<br><br>Generating Chains<br>```python<br>mx.generate(6) # len of tokens in chain<br>```<br>```python<br>mx.generate(6, random_init=True)<br># when True first token in chain would be assigned randomly<br># when False first token would be assigned based on observed firs tokens<br># default to False<br>```<br>```python<br>mx.generate(6, smart_ending=True)<br># when False chain wouldn't be terminated before len(chain) == n even if model got to an end token<br># when True if model got to an end token while len(chain) &lt; n chain would terminate<br># default to False<br>```<br>Ordinal Markov Chains (position dependent chains)<br>```python<br>from markovx.models import OrdinalMarkovModel<br>    <br>mx = OrdinalMarkovModel()<br>mx.add_one('123456')<br>mx.add_one('123qwe')<br>mx.add_many(['qwerty', 'qwe123', 'qwe123456'])<br>mx.generate(6)<br>```<br><br>### Contact ###<br>[Tal Peretz](https://www.linkedin.com/in/tal-per/)<br><br><br><br><br><br>\n          </div>"}, "last_serial": 3459578, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b2e469f48c01811847a95574cf8ecc67", "sha256": "1475d05c46802acde6c8453fcee34fb7707575c9ea1495f46b2c0867f051adbd"}, "downloads": -1, "filename": "ezds-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2e469f48c01811847a95574cf8ecc67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21146, "upload_time": "2018-01-03T17:56:31", "upload_time_iso_8601": "2018-01-03T17:56:31.945767Z", "url": "https://files.pythonhosted.org/packages/8b/22/78f66da2001e3a21adaf3a0ae54a5e07bd73a376956375d4b82a5a80577c/ezds-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2e469f48c01811847a95574cf8ecc67", "sha256": "1475d05c46802acde6c8453fcee34fb7707575c9ea1495f46b2c0867f051adbd"}, "downloads": -1, "filename": "ezds-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2e469f48c01811847a95574cf8ecc67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21146, "upload_time": "2018-01-03T17:56:31", "upload_time_iso_8601": "2018-01-03T17:56:31.945767Z", "url": "https://files.pythonhosted.org/packages/8b/22/78f66da2001e3a21adaf3a0ae54a5e07bd73a376956375d4b82a5a80577c/ezds-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:24 2020"}