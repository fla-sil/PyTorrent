{"info": {"author": "Matt Wismer", "author_email": "mattwis86@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Pyspotify Utils\n\nThis repository attempts to make it as simple as possible to integrate pyspotify.\n\nIt's currently as simple as\n# pip install pyspotify_helper\n# python\n>>> from pyspotify_helper import Spotify\n>>> spotify_pro_credentials = { \"spotify_name\": \"\", \"spotify_password\": \"\" }\n>>> Spotify(spotify_pro_credentials).play(\"Stadium Arcadium\", \"albums\")\n\n\nInitialization:\n\nSadly, that simplicity comes after some initialization.\n\nYou need a spotify_appkey.key in your project root directory. You can get this following the tutorial at http://pyspotify.mopidy.com/en/latest/quickstart/#application-keys.\n\n\nDependencies:\n\nlibspotify\npyspotify\n\nInformation on installing dependencies at http://pyspotify.mopidy.com/en/latest/installation/.\n\n\nUsage:\n\nThe most important method is play(name, category, shuffle=False). Name is a free-form string that will be searched on Spotify (more info at http://news.spotify.com/us/2008/01/22/searching-spotify/). Category is one of \"tracks\", \"artists\", or \"albums\". Shuffle decides whether or not the music gets shuffled when played.\n\nIf no results are found, there will be an error. (IndexError: list index out of range)\n\nThe play() method does not block. They return immediately, while a different thread is started to play the music.\n\nThere are four methods to control playback: next_track, pause, resume, and pause_toggle.\n\nThese methods will cancel the currently playing song when called.\n\nSpotify() returns a singleton. The credentials only need to be passed in the first time you call the function. See the \"if __name__ == '__main__':\" section.\n\n\nTODO (As in, questions for you and my future self):\n\nHow does searching work with playlists? More specifically, can I easily distinguish between owned playlists and other playlists? What about playlists with the same name?\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MattWis/pyspotify_helper.git", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pyspotify_helper", "package_url": "https://pypi.org/project/pyspotify_helper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyspotify_helper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MattWis/pyspotify_helper.git"}, "release_url": "https://pypi.org/project/pyspotify_helper/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Simplest integration of Spotify into Python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pyspotify Utils</p>\n<p>This repository attempts to make it as simple as possible to integrate pyspotify.</p>\n<p>It\u2019s currently as simple as\n# pip install pyspotify_helper\n# python\n&gt;&gt;&gt; from pyspotify_helper import Spotify\n&gt;&gt;&gt; spotify_pro_credentials = { \u201cspotify_name\u201d: \u201c\u201d, \u201cspotify_password\u201d: \u201c\u201d }\n&gt;&gt;&gt; Spotify(spotify_pro_credentials).play(\u201cStadium Arcadium\u201d, \u201calbums\u201d)</p>\n<p>Initialization:</p>\n<p>Sadly, that simplicity comes after some initialization.</p>\n<p>You need a spotify_appkey.key in your project root directory. You can get this following the tutorial at <a href=\"http://pyspotify.mopidy.com/en/latest/quickstart/#application-keys\" rel=\"nofollow\">http://pyspotify.mopidy.com/en/latest/quickstart/#application-keys</a>.</p>\n<p>Dependencies:</p>\n<p>libspotify\npyspotify</p>\n<p>Information on installing dependencies at <a href=\"http://pyspotify.mopidy.com/en/latest/installation/\" rel=\"nofollow\">http://pyspotify.mopidy.com/en/latest/installation/</a>.</p>\n<p>Usage:</p>\n<p>The most important method is play(name, category, shuffle=False). Name is a free-form string that will be searched on Spotify (more info at <a href=\"http://news.spotify.com/us/2008/01/22/searching-spotify/\" rel=\"nofollow\">http://news.spotify.com/us/2008/01/22/searching-spotify/</a>). Category is one of \u201ctracks\u201d, \u201cartists\u201d, or \u201calbums\u201d. Shuffle decides whether or not the music gets shuffled when played.</p>\n<p>If no results are found, there will be an error. (IndexError: list index out of range)</p>\n<p>The play() method does not block. They return immediately, while a different thread is started to play the music.</p>\n<p>There are four methods to control playback: next_track, pause, resume, and pause_toggle.</p>\n<p>These methods will cancel the currently playing song when called.</p>\n<p>Spotify() returns a singleton. The credentials only need to be passed in the first time you call the function. See the \u201cif __name__ == \u2018__main__\u2019:\u201d section.</p>\n<p>TODO (As in, questions for you and my future self):</p>\n<p>How does searching work with playlists? More specifically, can I easily distinguish between owned playlists and other playlists? What about playlists with the same name?</p>\n\n          </div>"}, "last_serial": 1227445, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7009ae287e74dd35cffad66110b798cb", "sha256": "cb244ed21973c966fbe3e9a0400271ce20445890b798f8acdb5915f1298a531e"}, "downloads": -1, "filename": "pyspotify_helper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7009ae287e74dd35cffad66110b798cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3243, "upload_time": "2014-09-16T23:17:06", "upload_time_iso_8601": "2014-09-16T23:17:06.951575Z", "url": "https://files.pythonhosted.org/packages/00/40/aa19aa935c9f65ca02610d7cfad6961e13fb04ed5857f6394f4c0d2742fd/pyspotify_helper-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7009ae287e74dd35cffad66110b798cb", "sha256": "cb244ed21973c966fbe3e9a0400271ce20445890b798f8acdb5915f1298a531e"}, "downloads": -1, "filename": "pyspotify_helper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7009ae287e74dd35cffad66110b798cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3243, "upload_time": "2014-09-16T23:17:06", "upload_time_iso_8601": "2014-09-16T23:17:06.951575Z", "url": "https://files.pythonhosted.org/packages/00/40/aa19aa935c9f65ca02610d7cfad6961e13fb04ed5857f6394f4c0d2742fd/pyspotify_helper-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:11 2020"}