{"info": {"author": "The yt project", "author_email": "yt-dev@python.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "====\nunyt\n====\n\n\n.. image:: https://img.shields.io/pypi/v/unyt.svg\n        :target: https://pypi.python.org/pypi/unyt\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/unyt.svg\n        :target: https://anaconda.org/conda-forge/unyt\n        :alt: conda-forge\n\n.. image:: https://img.shields.io/travis/yt-project/unyt.svg\n        :target: https://travis-ci.org/yt-project/unyt\n\n.. image:: https://ci.appveyor.com/api/projects/status/4j1nxunkj759pgo0?svg=true\n        :target: https://ci.appveyor.com/project/ngoldbaum/unyt\n\n.. image:: https://readthedocs.org/projects/unyt/badge/?version=latest\n        :target: https://unyt.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/yt-project/unyt/branch/master/graph/badge.svg\n        :target: https://codecov.io/gh/yt-project/unyt\n        :alt: Test Coverage\n\n.. image:: http://joss.theoj.org/papers/dbc27acb614dd33eb02b029ef20e7fe7/status.svg\n        :target: http://joss.theoj.org/papers/dbc27acb614dd33eb02b029ef20e7fe7\n        :alt: Code Paper\n\n|\n\n .. image:: docs/_static/yt_logo_small.png\n         :target: https://yt-project.org\n         :alt: The yt Project\n\nA package for handling numpy arrays with units.\n\nOften writing code that deals with data that has units can be confusing. A\nfunction might return an array but at least with plain NumPy arrays, there is no\nway to easily tell what the units of the data are without somehow knowing *a\npriori*.\n\nThe ``unyt`` package (pronounced like \"unit\") provides a subclass of NumPy's\n``ndarray`` class that knows about units. For example, one could do:\n\n    >>> import unyt as u\n    >>> distance_traveled = [3.4, 5.8, 7.2] * u.mile\n    >>> print(distance_traveled.to('km'))\n    [ 5.4717696  9.3341952 11.5872768] km\n\nAnd a whole lot more! See `the documentation <http://unyt.readthedocs.io>`_ for\ninstallation instructions, more examples, and full API reference.\n\nThis package only depends on ``numpy`` and ``sympy``.  Notably, it does *not*\ndepend on ``yt`` and it is written in pure Python.\n\nCode of Conduct\n---------------\n\nThe ``unyt`` package is part of `The yt Project\n<https://yt-project.org>`_. Participating in ``unyt`` development therefore\nhappens under the auspices of the `yt community code of conduct\n<http://yt-project.org/doc/developing/developing.html#yt-community-code-of-conduct>`_. If\nfor any reason you feel that the code of conduct has been violated, please send\nan e-mail to confidential@yt-project.org with details describing the\nincident. All emails sent to this address will be treated with the strictest\nconfidence by an individual who does not normally participate in yt development.\n\nLicense\n-------\n\nThe unyt package is licensed under the BSD 3-clause license.\n\nCitation\n--------\n\nIf you make use of unyt in work that leads to a publication we would appreciate\na mention in the text of the paper or in the acknowledgements along with a\ncitation to our `paper\n<https://joss.theoj.org/papers/dbc27acb614dd33eb02b029ef20e7fe7>`_ in the\nJournal of Open Source Software. You can use the following BibTeX::\n\n @article{Goldbaum2018,\n   doi = {10.21105/joss.00809},\n   url = {https://doi.org/10.21105/joss.00809},\n   year  = {2018},\n   month = {aug},\n   publisher = {The Open Journal},\n   volume = {3},\n   number = {28},\n   pages = {809},\n   author = {Nathan J. Goldbaum and John A. ZuHone and Matthew J. Turk and Kacper Kowalik and Anna L. Rosen},\n   title = {unyt: Handle,  manipulate,  and convert data with units in Python},\n   journal = {Journal of Open Source Software}\n }\n\nOr the following citation format:\n\n  Goldbaum et al., (2018). unyt: Handle, manipulate, and convert data with units in Python . Journal of Open Source Software, 3(28), 809, https://doi.org/10.21105/joss.00809\n\n\n=======\nHistory\n=======\n\n2.7.1 (2020-02-17)\n------------------\n\n* Fix compatibility with `unyt_array` subclasses that do not have the new\n  ``name`` argument in their initializer. See `PR #140\n  <https://github.com/yt-project/unyt/pull/140>`_.\n* Fix an issue where custom units added to a unit registry were not restored\n  correctly when reloading a unit registry from a JSON or pickle\n  representation. See `PR #140 <https://github.com/yt-project/unyt/pull/140>`_.\n\n2.7.0 (2020-02-06)\n------------------\n\n* The ``unyt_array`` and ``unyt_quantity`` classes now have a new, optional\n  ``name`` attribute. The primary purpose of this attribute is to enable\n  automatic generation of matplotlib plot labels. The ``name`` attribute is\n  propagated through unit conversions and copies but is not propagated through\n  mathematical operations. See `PR #129\n  <https://github.com/yt-project/unyt/pull/129>`_ and the documentation for\n  details.\n* Add support for the ``Neper`` and ``Bel`` units with logarithmic\n  dimensions. This includes support for the ``decibel`` unit. Note that\n  logarithmic units can only be used with other logarithmic units and must be\n  applied and stripped manually. See `PR #133\n  <https://github.com/yt-project/unyt/pull/133>`_ and `PR #134\n  <https://github.com/yt-project/unyt/pull/134>`_.\n* Add support for the SI unit of inductance, ``H``. See `PR #135\n  <https://github.com/yt-project/unyt/pull/135>`_.\n* Fix formatting of error message produced when raising a quantity to a power\n  with units. See `PR #131\n  <https://github.com/yt-project/unyt/pull/131>`_. Thank you to Lee Johnston\n  (@l-johnston on GitHub) for all of the above contributions.\n* Fix incorrect unit metadata when loading a pickled array saved by\n  ``yt.units``. See `PR #137 <https://github.com/yt-project/unyt/pull/137>`_.\n\n\n2.6.0 (2020-01-22)\n------------------\n\n* Matplotlib support is no longer enabled by importing ``unyt``. Instead, it is\n  now necessary to use the ``unyt.matplotlib_support`` context manager in code\n  where you want unyt to automatically generate plot labels. Enabling Matplotlib\n  support by default in the previous release caused crashes in previously\n  working code for some users so we have decided to make the plotting support\n  optional. See the documentation for more details. We are sorry for introducing\n  a new feature that broke some user's code. See `PR #126\n  <https://github.com/yt-project/unyt/pull/126>`_. Thank you to Lee Johnston\n  (@l-johnston on GitHub) for the contribution.\n* Updated the contribution guide to include more details about setting up\n  multiple Python versions for the ``tox`` tests.\n\n2.5.0 (2020-01-20)\n------------------\n\n* Importing unyt now registers unyt with Matplotlib's interface for handling\n  units. See the `Matplotlib\n  <https://matplotlib.org/gallery/units/units_scatter.html>`_ and `unyt\n  <https://unyt.readthedocs.io/en/latest/usage.html#plotting-with-matplotlib>`_\n  documentation for more details. See `PR #122\n  <https://github.com/yt-project/unyt/pull/122>`_ and `PR #124\n  <https://github.com/yt-project/unyt/pull/124>`_. Thank you to Lee Johnston\n  (@l-johnston on GitHub) for the contribution.\n* Updated the LaTeX formatting of solar units so they do not get rendered\n  italicized. See `PR #120\n  <https://github.com/yt-project/unyt/pull/120>`_. Thank you to Josh Borrow\n  (@JBorrow on GitHub) for the contribution.\n* Reduce floating point round-off error when data are converted from integer to\n  float dtypes. See `PR #119 <https://github.com/yt-project/unyt/pull/119>`_.\n\n2.4.1 (2020-01-10)\n------------------\n\n* Add support for the latest releases of h5py, sympy, NumPy, and PyTest. See `PR\n  #115 <https://github.com/yt-project/unyt/pull/115>`_.\n* Fix the hash implementation so that identical units cannot have distinct\n  hashes. See `PR #114 <https://github.com/yt-project/unyt/pull/114>`_ and `PR\n  #117 <https://github.com/yt-project/unyt/pull/114>`_. Thank you to Ben Kimock\n  (@saethlin on GitHub) for the contribution.\n\n2.4.0 (2019-10-25)\n------------------\n\n* Improve performance for creating quantities or small arrays via multiplication\n  with a unit object. Creating an array or quantity from data that does not have\n  a numeric dtype will now raise ``UnitOperationError`` instead of\n  ``UnitDtypeError``, which has been removed. See `PR #111\n  <https://github.com/yt-project/unyt/pull/111>`_.\n* Comparing data with units that have different dimensions using the ``==`` and\n  ``!=`` operators will no longer raise an error. Other comparison operators\n  will continue to raise errors. See `PR #109\n  <https://github.com/yt-project/unyt/pull/109>`_.\n* Fixed a corner case in the implementation of ``clip``. See `PR #108\n  <https://github.com/yt-project/unyt/pull/108>`_. Thank you to Matthew Turk\n  (@matthewturk on GitHub) for the contribution.\n* Added ``%`` as a valid dimensionless unit with a value of `0.01`, also\n  available under the name ``percent``. See `PR #106\n  <https://github.com/yt-project/unyt/pull/106>`_. Thank you to Thomas Hisch for\n  the contribution.\n* Added ``bar`` to the default unit lookup table. See `PR #103\n  <https://github.com/yt-project/unyt/pull/103>`_. Thank you to Thomas Hisch\n  (@thisch on GitHub) for the contribution.\n\n2.3.1 (2019-08-21)\n------------------\n\n* Added support for the ``clip`` ufunc added in NumPy 1.17. See `PR #102\n  <https://github.com/yt-project/unyt/pull/102>`_.\n\n2.3.0 (2019-08-14)\n------------------\n\n* Added ``unyt.dimensions.accepts`` and ``unyt.dimensions.returns``, decorators\n  that can be used to ensure that data passed into a decorated function has\n  units that are dimensionally consistent with the function's expected\n  inputs. See `PR #98 <https://github.com/yt-project/unyt/pull/94>`_. Thank you\n  to Andrei Berceanu (@berceanu on GitHub) for the contribution.\n* Added ``unyt.allclose_units`` and improved documentation for writing tests for\n  code that uses ``unyt``. This is a wrapper for ``numpy.allclose`` that also\n  checks the units of the input arrays. See `PR #94\n  <https://github.com/yt-project/unyt/pull/94>`_. Thank you to Andrei Berceanu\n  (@berceanu on GitHub) for the contribution.\n\n2.2.2 (2019-07-03)\n------------------\n\n* Fix erroneous conversions of E&M units to their \"native\" unit system,\n  for example, converting Gauss to CGS units would return Tesla and converting\n  Tesla to MKS units would return Gauss. See `PR #96\n  <https://github.com/yt-project/unyt/pull/96>`_.\n\n2.2.1 (2019-07-02)\n------------------\n\n* Add support for loading JSON unit registries saved by ``yt.units``.\n  See `PR #93 <https://github.com/yt-project/unyt/pull/93>`_.\n* Correct the value of the ``light_year`` unit.\n  See `PR #93 <https://github.com/yt-project/unyt/pull/93>`_.\n* It is now possible to define a ``UnitSystem`` object with a quantity.\n  See `PR #86 <https://github.com/yt-project/unyt/pull/86>`_.\n* Incorrect units for Planck units have been fixed.\n  See `PR #85 <https://github.com/yt-project/unyt/pull/85>`_. Thank you to\n  Nathan Musoke (@musoke on GitHub) for the contribution.\n* Updated value of Newton's constant to latest CODATA value.\n  See `PR #84 <https://github.com/yt-project/unyt/pull/84>`_.\n\n2.2.0 (2019-04-03)\n------------------\n\n* Several performance optimizations. This includes a slight change to the behavior\n  of MKS/CGS E&M unit conversions that makes the conversion rules slightly more relaxed.\n  See `PR #82 <https://github.com/yt-project/unyt/pull/82>`_.\n\n2.1.1 (2019-03-27)\n------------------\n\n* Fixed an issue with restoring unit registries from JSON output. See `PR #81\n  <https://github.com/yt-project/unyt/pull/81>`_.\n\n2.1.0 (2019-03-26)\n------------------\n\nThis release includes a few minor new features and bugfixes for the 2.0.0 release.\n\n* Added support for the matmul ``@`` operator. See `PR #80\n  <https://github.com/yt-project/unyt/pull/80>`_.\n* Allow defining unit systems using ``Unit`` instances instead of string unit\n  names. See `PR #71 <https://github.com/yt-project/unyt/pull/71>`_. Thank you\n  to Josh Borrow (@JBorrow on GitHub) for the contribution.\n* Fix incorrect behavior when ``uhstack`` is called with the ``axis``\n  argument. See `PR #73 <https://github.com/yt-project/unyt/pull/73>`_.\n* Add ``\"rsun\"``, ``\"lsun\"``, and ``\"au\"`` as alternate spellings for the\n  ``\"Rsun\"``, ``\"Lsun\"``, and ``\"AU\"`` units. See `PR #77\n  <https://github.com/yt-project/unyt/pull/77>`_.\n* Improvements for working with code unit systems. See `PR #78\n  <https://github.com/yt-project/unyt/pull/78>`_.\n* Reduce impact of floating point round-off noise on unit comparisons. See `PR\n  #79 <https://github.com/yt-project/unyt/pull/79>`_.\n\n2.0.0 (2019-03-08)\n------------------\n\n``unyt`` 2.0.0 includes a number of exciting new features as well as some\nbugfixes. There are some small backwards incompatible changes in this release\nrelated to automatic unit simplification and handling of dtypes. Please see the\nrelease notes below for more details. If you are upgrading from ``unyt 1.x`` we\nsuggest testing to make sure these changes do not siginificantly impact you. If\nyou run into issues please let us know by `opening an issue on GitHub\n<https://github.com/yt-project/unyt/issues/new>`_.\n\n* Dropped support for Python 2.7 and Python 3.4. Added support for Python 3.7.\n* Added ``Unit.simplify()``, which cancels pairs of terms in a unit expression\n  that have inverse dimensions and made it so the results of ``unyt_array``\n  multiplication and division will automatically simplify units. This means\n  operations that combine distinct dimensionally equivalent units will cancel in\n  many situations. For example\n\n  .. code-block:: python\n\n     >>> from unyt import kg, g\n     >>> print((12*kg)/(4*g))\n     3000.0 dimensionless\n\n  older versions of ``unyt`` would have returned ``4.0 kg/g``. See `PR #58\n  <https://github.com/yt-project/unyt/pull/58>`_ for more details. This change\n  may cause the units of operations to have different, equivalent simplified\n  units than they did with older versions of ``unyt``.\n* Added the ability to resolve non-canonical unit names to the equivalent\n  canonical unit names. This means it is now possible to refer to a unit name\n  using an alternative non-canonical unit name when importing the unit from the\n  ``unyt`` namespace as well as when a unit name is passed as a string to\n  ``unyt``. For example:\n\n  .. code-block:: python\n\n     >>> from unyt import meter, second\n     >>> data = 1000.*meter/second\n     >>> data.to('kilometer/second')\n     unyt_quantity(1., 'km/s')\n     >>> data.to('metre/s')\n     unyt_quantity(1000., 'm/s')\n\n  The documentation now has a table of units recognized by ``unyt`` along with\n  known alternative spellings for each unit.\n* Added support for unicode unit names, including ``\u03bcm`` for micrometer and ``\u03a9``\n  for ohm. See `PR #59 <https://github.com/yt-project/unyt/pull/59>`_.\n* Substantially improved support for data that does not have a ``float64``\n  dtype. Rather than coercing all data to ``float64`` ``unyt`` will now preserve\n  the dtype of data. Data that is not already a numpy array will be coerced to a\n  dtype by calling ``np.array`` internally. Converting integer data to a new\n  unit will convert the data to floats, if this causes a loss of precision then\n  a warning message will be printed. See `PR #55\n  <https://github.com/yt-project/unyt/pull/55>`_ for details. This change may\n  cause data to be loaded into ``unyt`` with a different dtype. On Windows the\n  default integer dtype is ``int32``, so data may begin to be recognized as\n  ``int32`` or converted to ``float32`` where before it was interpreted as\n  ``float64`` by default.\n* Unit registries are now associated with a unit system. This means that it's\n  possible to create a unit registry that is associated with a non-MKS unit\n  system so that conversions to \"base\" units will end up in that non-MKS\n  system. For example:\n\n  .. code-block:: python\n\n     >>> from unyt import UnitRegistry, unyt_quantity\n     >>> ureg = UnitRegistry(unit_system='cgs')\n     >>> data = unyt_quantity(12, 'N', registry=ureg)\n     >>> data.in_base()\n     unyt_quantity(1200000., 'dyn')\n\n  See `PR #62 <https://github.com/yt-project/unyt/pull/62>`_ for details.\n* Added two new utility functions, ``unyt.unit_systems.add_constants`` and\n  ``unyt.unit_systems.add_symbols`` that can populate a namespace with a set of\n  unit symbols in the same way that the top-level ``unyt`` namespace is\n  populated. For example, the author of a library making use of ``unyt`` could\n  create an object that users can use to access unit data like this:\n\n  .. code-block:: python\n\n      >>> from unyt.unit_systems import add_symbols\n      >>> from unyt.unit_registry import UnitRegistry\n      >>> class UnitContainer(object):\n      ...    def __init__(self):\n      ...        add_symbols(vars(self), registry=UnitRegistry())\n      >>> units = UnitContainer()\n      >>> units.kilometer\n      km\n      >>> units.microsecond\n      \u00b5s\n\n  See `PR #68 <https://github.com/yt-project/unyt/pull/68>`_.\n* The ``unyt`` codebase is now automatically formatted by `black\n  <https://github.com/ambv/black>`_. See `PR #57\n  <https://github.com/yt-project/unyt/pull/57>`_.\n* Add missing \"microsecond\" name from top-level ``unyt`` namespace. See `PR\n  #48 <https://github.com/yt-project/unyt/pull/48>`_.\n* Add support for ``numpy.argsort`` by defining ``unyt_array.argsort``. See `PR\n  #52 <https://github.com/yt-project/unyt/pull/52>`_.\n* Add Farad unit and fix issues with conversions between MKS and CGS\n  electromagnetic units. See `PR #54\n  <https://github.com/yt-project/unyt/pull/54>`_.\n* Fixed incorrect conversions between inverse velocities and ``statohm``. See\n  `PR #61 <https://github.com/yt-project/unyt/pull/61>`_.\n* Fixed issues with installing ``unyt`` from source with newer versions of\n  ``pip``. See `PR #63 <https://github.com/yt-project/unyt/pull/62>`_.\n* Fixed bug when using `define_unit` that caused crashes when using a custom\n  unit registry. Thank you to Bili Dong (@qobilidob on GitHub) for the pull\n  request. See `PR #64 <https://github.com/yt-project/unyt/pull/64>`_.\n\nWe would also like to thank Daniel Gomez (@dangom), Britton Smith\n(@brittonsmith), Lee Johnston (@l-johnston), Meagan Lang (@langmm), Eric Chen\n(@ericchen), Justin Gilmer (@justinGilmer), and Andy Perez (@sharkweek) for\nreporting issues.\n\n1.0.7 (2018-08-13)\n------------------\n\nTrigger zenodo archiving.\n\n1.0.6 (2018-08-13)\n------------------\n\nMinor paper updates to finalize JOSS submission.\n\n1.0.5 (2018-08-03)\n------------------\n\n``unyt`` 1.0.5 includes changes that reflect the peew review process for the\nJOSS method paper. The peer reviewers were Stuart Mumfork (`@cadair\n<https://github.com/cadair>`_), Trevor Bekolay (`@tbekolay\n<https://github.com/tbekolay>`_), and Yan Grange (`@ygrange\n<https://github.com/ygrange>`_). The editor was Kyle Niemeyer (`@kyleniemeyer\n<https://github.com/kyleniemeyer>`_). The` `unyt`` development team thank our\nreviewers and editor for their help getting the ``unyt`` paper out the door as\nwell as for the numerous comments and suggestions that improved the paper and\npackage as a whole.\n\nIn addition we'd like to thank Mike Zingale, Meagan Lang, Maksin Ratkin,\nDougAJ4, Ma Jianjun, Paul Ivanov, and Stephan Hoyer for reporting issues.\n\n* Added docstrings for the custom exception classes defined by ``unyt``. See `PR\n  #44 <https://github.com/yt-project/unyt/pull/44>`_.\n* Added improved documentation to the contributor guide on how to run the tests\n  and what the PR review guidelines are. See `PR #43\n  <https://github.com/yt-project/unyt/pull/43>`_.\n* Updates to the text of the method paper in response to reviewer\n  suggestions. See `PR #42 <https://github.com/yt-project/unyt/pull/42>`_.\n* It is now possible to run the tests on an installed copy of ``unyt`` by\n  executing ``unyt.test()``. See `PR #41\n  <https://github.com/yt-project/unyt/pull/41>`_.\n* Minor edit to LICENSE file so GitHub recognizes it. See `PR #40\n  <https://github.com/yt-project/unyt/pull/35>`_. Thank you to Kyle Sunden\n  (`@ksunden <https://github.com/ksunden>`_) for the contribution.\n* Add spatial frequency as a dimension and added support in the ``spectral``\n  equivalence for the spatial frequency dimension. See `PR #38\n  <https://github.com/yt-project/unyt/pull/38>`_ Thank you to Kyle Sunden\n  (`@ksunden <https://github.com/ksunden>`_) for the contribution.\n* Add support for Python 3.7. See `PR #37\n  <https://github.com/yt-project/unyt/pull/35>`_.\n* Importing ``unyt`` will now fail if ``numpy`` and ``sympy`` are not\n  installed. See `PR #35 <https://github.com/yt-project/unyt/pull/35>`_\n* Testing whether a unit name is contained in a unit registry using the Python\n  ``in`` keyword will now work correctly for all unit names. See `PR #31\n  <https://github.com/yt-project/unyt/pull/31>`_.\n* The aliases for megagram in the top-level unyt namespace were incorrectly set\n  to reference kilogram and now have the correct value. See `PR #29\n  <https://github.com/yt-project/unyt/pull/29>`_.\n* Make it possible to take scalars to dimensionless array powers with a properly\n  broadcasted result without raising an error about units. See `PR #23\n  <https://github.com/yt-project/unyt/pull/23>`_.\n* Whether or not a unit is allowed to be SI-prefixable (for example, meter is\n  SI-prefixable to form centimeter, kilometer, and many other units) is now\n  stored as metadata in the unit registry rather than as global state inside\n  ``unyt``. See `PR #21 <https://github.com/yt-project/unyt/pull/21>`_.\n* Made adjustments to the rules for converting between CGS and MKS E&M units so\n  that errors are only raised when going between unit systems and not merely\n  when doing a complicated unit conversion invoving E&M units. See `PR #20\n  <https://github.com/yt-project/unyt/pull/20>`_.\n* ``round(q)`` where ``q`` is a ``unyt_quantity`` instance will no\n  longer raise an error and will now return the nearest rounded float.\n  See `PR #19 <https://github.com/yt-project/unyt/pull/19>`_.\n* Fixed a typo in the readme. Thank you to Paul Ivanov (`@ivanov\n  <https://github.com/ivanov>`_) for `the fix\n  <https://github.com/yt-project/unyt/pull/16>`_.\n* Added smoot as a unit. See `PR #14\n  <https://github.com/yt-project/unyt/pull/14>`_.\n\n1.0.4 (2018-06-08)\n------------------\n\n* Expand installation instructions\n* Mention paper and arxiv submission in the readme.\n\n1.0.3 (2018-06-06)\n------------------\n\n* Fix readme rendering on pypi\n\n1.0.2 (2018-06-06)\n------------------\n\n* Added a paper to be submitted to the Journal of Open Source Software.\n* Tweaks for the readme\n\n1.0.1 (2018-05-24)\n------------------\n\n* Don't use setup_requires in setup.py\n\n1.0.0 (2018-05-24)\n------------------\n\n* First release on PyPI.\n* unyt began life as a submodule of yt named yt.units.\n* It was separated from yt.units as its own package in 2018.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yt-project/unyt", "keywords": "unyt", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "unyt", "package_url": "https://pypi.org/project/unyt/", "platform": "", "project_url": "https://pypi.org/project/unyt/", "project_urls": {"Homepage": "https://github.com/yt-project/unyt"}, "release_url": "https://pypi.org/project/unyt/2.7.1/", "requires_dist": ["numpy (>=\"1.13.0\")", "sympy (>=1.2)"], "requires_python": ">=3.5", "summary": "A package for handling numpy arrays with units", "version": "2.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"unyt\">\n<h2>unyt</h2>\n<a href=\"https://pypi.python.org/pypi/unyt\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/unyt.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b344ed2500f4d09b26aea8a72d9da2cf096380d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f756e79742e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/unyt\" rel=\"nofollow\"><img alt=\"conda-forge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b9f61399e90a4db6f34d3641c16fce65c546874/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f756e79742e737667\"></a>\n<a href=\"https://travis-ci.org/yt-project/unyt\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/yt-project/unyt.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d110f68804459f01fb524a3b2d5d21de44ee9a87/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f79742d70726f6a6563742f756e79742e737667\"></a>\n<a href=\"https://ci.appveyor.com/project/ngoldbaum/unyt\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/4j1nxunkj759pgo0?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdb99f10bec93843fbd48068219d0ba86dd962f3/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346a316e78756e6b6a37353970676f303f7376673d74727565\"></a>\n<a href=\"https://unyt.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58be5c333efc11f275886cc50e38ffbd625eb50e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f756e79742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/yt-project/unyt\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfce1883fdb8d1ffdb796e5884b33d844a4341fe/68747470733a2f2f636f6465636f762e696f2f67682f79742d70726f6a6563742f756e79742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"http://joss.theoj.org/papers/dbc27acb614dd33eb02b029ef20e7fe7\" rel=\"nofollow\"><img alt=\"Code Paper\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3493a35779b45d2786c4a58e8cad60743a3b56d0/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f64626332376163623631346464333365623032623032396566323065376665372f7374617475732e737667\"></a>\n<div>\n<div><br></div>\n</div>\n<blockquote>\n<a href=\"https://yt-project.org\" rel=\"nofollow\"><img alt=\"The yt Project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fe9b3aaae8914776c2e9cd6628fe8893df6e0f2/646f63732f5f7374617469632f79745f6c6f676f5f736d616c6c2e706e67\"></a>\n</blockquote>\n<p>A package for handling numpy arrays with units.</p>\n<p>Often writing code that deals with data that has units can be confusing. A\nfunction might return an array but at least with plain NumPy arrays, there is no\nway to easily tell what the units of the data are without somehow knowing <em>a\npriori</em>.</p>\n<p>The <tt>unyt</tt> package (pronounced like \u201cunit\u201d) provides a subclass of NumPy\u2019s\n<tt>ndarray</tt> class that knows about units. For example, one could do:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import unyt as u\n&gt;&gt;&gt; distance_traveled = [3.4, 5.8, 7.2] * u.mile\n&gt;&gt;&gt; print(distance_traveled.to('km'))\n[ 5.4717696  9.3341952 11.5872768] km\n</pre>\n</blockquote>\n<p>And a whole lot more! See <a href=\"http://unyt.readthedocs.io\" rel=\"nofollow\">the documentation</a> for\ninstallation instructions, more examples, and full API reference.</p>\n<p>This package only depends on <tt>numpy</tt> and <tt>sympy</tt>.  Notably, it does <em>not</em>\ndepend on <tt>yt</tt> and it is written in pure Python.</p>\n<div id=\"code-of-conduct\">\n<h3>Code of Conduct</h3>\n<p>The <tt>unyt</tt> package is part of <a href=\"https://yt-project.org\" rel=\"nofollow\">The yt Project</a>. Participating in <tt>unyt</tt> development therefore\nhappens under the auspices of the <a href=\"http://yt-project.org/doc/developing/developing.html#yt-community-code-of-conduct\" rel=\"nofollow\">yt community code of conduct</a>. If\nfor any reason you feel that the code of conduct has been violated, please send\nan e-mail to <a href=\"mailto:confidential%40yt-project.org\">confidential<span>@</span>yt-project<span>.</span>org</a> with details describing the\nincident. All emails sent to this address will be treated with the strictest\nconfidence by an individual who does not normally participate in yt development.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The unyt package is licensed under the BSD 3-clause license.</p>\n</div>\n<div id=\"citation\">\n<h3>Citation</h3>\n<p>If you make use of unyt in work that leads to a publication we would appreciate\na mention in the text of the paper or in the acknowledgements along with a\ncitation to our <a href=\"https://joss.theoj.org/papers/dbc27acb614dd33eb02b029ef20e7fe7\" rel=\"nofollow\">paper</a> in the\nJournal of Open Source Software. You can use the following BibTeX:</p>\n<pre>@article{Goldbaum2018,\n  doi = {10.21105/joss.00809},\n  url = {https://doi.org/10.21105/joss.00809},\n  year  = {2018},\n  month = {aug},\n  publisher = {The Open Journal},\n  volume = {3},\n  number = {28},\n  pages = {809},\n  author = {Nathan J. Goldbaum and John A. ZuHone and Matthew J. Turk and Kacper Kowalik and Anna L. Rosen},\n  title = {unyt: Handle,  manipulate,  and convert data with units in Python},\n  journal = {Journal of Open Source Software}\n}\n</pre>\n<p>Or the following citation format:</p>\n<blockquote>\nGoldbaum et al., (2018). unyt: Handle, manipulate, and convert data with units in Python . Journal of Open Source Software, 3(28), 809, <a href=\"https://doi.org/10.21105/joss.00809\" rel=\"nofollow\">https://doi.org/10.21105/joss.00809</a></blockquote>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>2.7.1 (2020-02-17)</h3>\n<ul>\n<li>Fix compatibility with <cite>unyt_array</cite> subclasses that do not have the new\n<tt>name</tt> argument in their initializer. See <a href=\"https://github.com/yt-project/unyt/pull/140\" rel=\"nofollow\">PR #140</a>.</li>\n<li>Fix an issue where custom units added to a unit registry were not restored\ncorrectly when reloading a unit registry from a JSON or pickle\nrepresentation. See <a href=\"https://github.com/yt-project/unyt/pull/140\" rel=\"nofollow\">PR #140</a>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.7.0 (2020-02-06)</h3>\n<ul>\n<li>The <tt>unyt_array</tt> and <tt>unyt_quantity</tt> classes now have a new, optional\n<tt>name</tt> attribute. The primary purpose of this attribute is to enable\nautomatic generation of matplotlib plot labels. The <tt>name</tt> attribute is\npropagated through unit conversions and copies but is not propagated through\nmathematical operations. See <a href=\"https://github.com/yt-project/unyt/pull/129\" rel=\"nofollow\">PR #129</a> and the documentation for\ndetails.</li>\n<li>Add support for the <tt>Neper</tt> and <tt>Bel</tt> units with logarithmic\ndimensions. This includes support for the <tt>decibel</tt> unit. Note that\nlogarithmic units can only be used with other logarithmic units and must be\napplied and stripped manually. See <a href=\"https://github.com/yt-project/unyt/pull/133\" rel=\"nofollow\">PR #133</a> and <a href=\"https://github.com/yt-project/unyt/pull/134\" rel=\"nofollow\">PR #134</a>.</li>\n<li>Add support for the SI unit of inductance, <tt>H</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/135\" rel=\"nofollow\">PR #135</a>.</li>\n<li>Fix formatting of error message produced when raising a quantity to a power\nwith units. See <a href=\"https://github.com/yt-project/unyt/pull/131\" rel=\"nofollow\">PR #131</a>. Thank you to Lee Johnston\n(@l-johnston on GitHub) for all of the above contributions.</li>\n<li>Fix incorrect unit metadata when loading a pickled array saved by\n<tt>yt.units</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/137\" rel=\"nofollow\">PR #137</a>.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.6.0 (2020-01-22)</h3>\n<ul>\n<li>Matplotlib support is no longer enabled by importing <tt>unyt</tt>. Instead, it is\nnow necessary to use the <tt>unyt.matplotlib_support</tt> context manager in code\nwhere you want unyt to automatically generate plot labels. Enabling Matplotlib\nsupport by default in the previous release caused crashes in previously\nworking code for some users so we have decided to make the plotting support\noptional. See the documentation for more details. We are sorry for introducing\na new feature that broke some user\u2019s code. See <a href=\"https://github.com/yt-project/unyt/pull/126\" rel=\"nofollow\">PR #126</a>. Thank you to Lee Johnston\n(@l-johnston on GitHub) for the contribution.</li>\n<li>Updated the contribution guide to include more details about setting up\nmultiple Python versions for the <tt>tox</tt> tests.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.5.0 (2020-01-20)</h3>\n<ul>\n<li>Importing unyt now registers unyt with Matplotlib\u2019s interface for handling\nunits. See the <a href=\"https://matplotlib.org/gallery/units/units_scatter.html\" rel=\"nofollow\">Matplotlib</a> and <a href=\"https://unyt.readthedocs.io/en/latest/usage.html#plotting-with-matplotlib\" rel=\"nofollow\">unyt</a>\ndocumentation for more details. See <a href=\"https://github.com/yt-project/unyt/pull/122\" rel=\"nofollow\">PR #122</a> and <a href=\"https://github.com/yt-project/unyt/pull/124\" rel=\"nofollow\">PR #124</a>. Thank you to Lee Johnston\n(@l-johnston on GitHub) for the contribution.</li>\n<li>Updated the LaTeX formatting of solar units so they do not get rendered\nitalicized. See <a href=\"https://github.com/yt-project/unyt/pull/120\" rel=\"nofollow\">PR #120</a>. Thank you to Josh Borrow\n(@JBorrow on GitHub) for the contribution.</li>\n<li>Reduce floating point round-off error when data are converted from integer to\nfloat dtypes. See <a href=\"https://github.com/yt-project/unyt/pull/119\" rel=\"nofollow\">PR #119</a>.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>2.4.1 (2020-01-10)</h3>\n<ul>\n<li>Add support for the latest releases of h5py, sympy, NumPy, and PyTest. See <a href=\"https://github.com/yt-project/unyt/pull/115\" rel=\"nofollow\">PR\n#115</a>.</li>\n<li>Fix the hash implementation so that identical units cannot have distinct\nhashes. See <a href=\"https://github.com/yt-project/unyt/pull/114\" rel=\"nofollow\">PR #114</a> and <a href=\"https://github.com/yt-project/unyt/pull/114\" rel=\"nofollow\">PR\n#117</a>. Thank you to Ben Kimock\n(@saethlin on GitHub) for the contribution.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>2.4.0 (2019-10-25)</h3>\n<ul>\n<li>Improve performance for creating quantities or small arrays via multiplication\nwith a unit object. Creating an array or quantity from data that does not have\na numeric dtype will now raise <tt>UnitOperationError</tt> instead of\n<tt>UnitDtypeError</tt>, which has been removed. See <a href=\"https://github.com/yt-project/unyt/pull/111\" rel=\"nofollow\">PR #111</a>.</li>\n<li>Comparing data with units that have different dimensions using the <tt>==</tt> and\n<tt>!=</tt> operators will no longer raise an error. Other comparison operators\nwill continue to raise errors. See <a href=\"https://github.com/yt-project/unyt/pull/109\" rel=\"nofollow\">PR #109</a>.</li>\n<li>Fixed a corner case in the implementation of <tt>clip</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/108\" rel=\"nofollow\">PR #108</a>. Thank you to Matthew Turk\n(@matthewturk on GitHub) for the contribution.</li>\n<li>Added <tt>%</tt> as a valid dimensionless unit with a value of <cite>0.01</cite>, also\navailable under the name <tt>percent</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/106\" rel=\"nofollow\">PR #106</a>. Thank you to Thomas Hisch for\nthe contribution.</li>\n<li>Added <tt>bar</tt> to the default unit lookup table. See <a href=\"https://github.com/yt-project/unyt/pull/103\" rel=\"nofollow\">PR #103</a>. Thank you to Thomas Hisch\n(@thisch on GitHub) for the contribution.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>2.3.1 (2019-08-21)</h3>\n<ul>\n<li>Added support for the <tt>clip</tt> ufunc added in NumPy 1.17. See <a href=\"https://github.com/yt-project/unyt/pull/102\" rel=\"nofollow\">PR #102</a>.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>2.3.0 (2019-08-14)</h3>\n<ul>\n<li>Added <tt>unyt.dimensions.accepts</tt> and <tt>unyt.dimensions.returns</tt>, decorators\nthat can be used to ensure that data passed into a decorated function has\nunits that are dimensionally consistent with the function\u2019s expected\ninputs. See <a href=\"https://github.com/yt-project/unyt/pull/94\" rel=\"nofollow\">PR #98</a>. Thank you\nto Andrei Berceanu (@berceanu on GitHub) for the contribution.</li>\n<li>Added <tt>unyt.allclose_units</tt> and improved documentation for writing tests for\ncode that uses <tt>unyt</tt>. This is a wrapper for <tt>numpy.allclose</tt> that also\nchecks the units of the input arrays. See <a href=\"https://github.com/yt-project/unyt/pull/94\" rel=\"nofollow\">PR #94</a>. Thank you to Andrei Berceanu\n(@berceanu on GitHub) for the contribution.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>2.2.2 (2019-07-03)</h3>\n<ul>\n<li>Fix erroneous conversions of E&amp;M units to their \u201cnative\u201d unit system,\nfor example, converting Gauss to CGS units would return Tesla and converting\nTesla to MKS units would return Gauss. See <a href=\"https://github.com/yt-project/unyt/pull/96\" rel=\"nofollow\">PR #96</a>.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>2.2.1 (2019-07-02)</h3>\n<ul>\n<li>Add support for loading JSON unit registries saved by <tt>yt.units</tt>.\nSee <a href=\"https://github.com/yt-project/unyt/pull/93\" rel=\"nofollow\">PR #93</a>.</li>\n<li>Correct the value of the <tt>light_year</tt> unit.\nSee <a href=\"https://github.com/yt-project/unyt/pull/93\" rel=\"nofollow\">PR #93</a>.</li>\n<li>It is now possible to define a <tt>UnitSystem</tt> object with a quantity.\nSee <a href=\"https://github.com/yt-project/unyt/pull/86\" rel=\"nofollow\">PR #86</a>.</li>\n<li>Incorrect units for Planck units have been fixed.\nSee <a href=\"https://github.com/yt-project/unyt/pull/85\" rel=\"nofollow\">PR #85</a>. Thank you to\nNathan Musoke (@musoke on GitHub) for the contribution.</li>\n<li>Updated value of Newton\u2019s constant to latest CODATA value.\nSee <a href=\"https://github.com/yt-project/unyt/pull/84\" rel=\"nofollow\">PR #84</a>.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>2.2.0 (2019-04-03)</h3>\n<ul>\n<li>Several performance optimizations. This includes a slight change to the behavior\nof MKS/CGS E&amp;M unit conversions that makes the conversion rules slightly more relaxed.\nSee <a href=\"https://github.com/yt-project/unyt/pull/82\" rel=\"nofollow\">PR #82</a>.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>2.1.1 (2019-03-27)</h3>\n<ul>\n<li>Fixed an issue with restoring unit registries from JSON output. See <a href=\"https://github.com/yt-project/unyt/pull/81\" rel=\"nofollow\">PR #81</a>.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>2.1.0 (2019-03-26)</h3>\n<p>This release includes a few minor new features and bugfixes for the 2.0.0 release.</p>\n<ul>\n<li>Added support for the matmul <tt>@</tt> operator. See <a href=\"https://github.com/yt-project/unyt/pull/80\" rel=\"nofollow\">PR #80</a>.</li>\n<li>Allow defining unit systems using <tt>Unit</tt> instances instead of string unit\nnames. See <a href=\"https://github.com/yt-project/unyt/pull/71\" rel=\"nofollow\">PR #71</a>. Thank you\nto Josh Borrow (@JBorrow on GitHub) for the contribution.</li>\n<li>Fix incorrect behavior when <tt>uhstack</tt> is called with the <tt>axis</tt>\nargument. See <a href=\"https://github.com/yt-project/unyt/pull/73\" rel=\"nofollow\">PR #73</a>.</li>\n<li>Add <tt>\"rsun\"</tt>, <tt>\"lsun\"</tt>, and <tt>\"au\"</tt> as alternate spellings for the\n<tt>\"Rsun\"</tt>, <tt>\"Lsun\"</tt>, and <tt>\"AU\"</tt> units. See <a href=\"https://github.com/yt-project/unyt/pull/77\" rel=\"nofollow\">PR #77</a>.</li>\n<li>Improvements for working with code unit systems. See <a href=\"https://github.com/yt-project/unyt/pull/78\" rel=\"nofollow\">PR #78</a>.</li>\n<li>Reduce impact of floating point round-off noise on unit comparisons. See <a href=\"https://github.com/yt-project/unyt/pull/79\" rel=\"nofollow\">PR\n#79</a>.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>2.0.0 (2019-03-08)</h3>\n<p><tt>unyt</tt> 2.0.0 includes a number of exciting new features as well as some\nbugfixes. There are some small backwards incompatible changes in this release\nrelated to automatic unit simplification and handling of dtypes. Please see the\nrelease notes below for more details. If you are upgrading from <tt>unyt 1.x</tt> we\nsuggest testing to make sure these changes do not siginificantly impact you. If\nyou run into issues please let us know by <a href=\"https://github.com/yt-project/unyt/issues/new\" rel=\"nofollow\">opening an issue on GitHub</a>.</p>\n<ul>\n<li><p>Dropped support for Python 2.7 and Python 3.4. Added support for Python 3.7.</p>\n</li>\n<li><p>Added <tt>Unit.simplify()</tt>, which cancels pairs of terms in a unit expression\nthat have inverse dimensions and made it so the results of <tt>unyt_array</tt>\nmultiplication and division will automatically simplify units. This means\noperations that combine distinct dimensionally equivalent units will cancel in\nmany situations. For example</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unyt</span> <span class=\"kn\">import</span> <span class=\"n\">kg</span><span class=\"p\">,</span> <span class=\"n\">g</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">((</span><span class=\"mi\">12</span><span class=\"o\">*</span><span class=\"n\">kg</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">g</span><span class=\"p\">))</span>\n<span class=\"mf\">3000.0</span> <span class=\"n\">dimensionless</span>\n</pre>\n<p>older versions of <tt>unyt</tt> would have returned <tt>4.0 kg/g</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/58\" rel=\"nofollow\">PR #58</a> for more details. This change\nmay cause the units of operations to have different, equivalent simplified\nunits than they did with older versions of <tt>unyt</tt>.</p>\n</li>\n<li><p>Added the ability to resolve non-canonical unit names to the equivalent\ncanonical unit names. This means it is now possible to refer to a unit name\nusing an alternative non-canonical unit name when importing the unit from the\n<tt>unyt</tt> namespace as well as when a unit name is passed as a string to\n<tt>unyt</tt>. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unyt</span> <span class=\"kn\">import</span> <span class=\"n\">meter</span><span class=\"p\">,</span> <span class=\"n\">second</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"mf\">1000.</span><span class=\"o\">*</span><span class=\"n\">meter</span><span class=\"o\">/</span><span class=\"n\">second</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s1\">'kilometer/second'</span><span class=\"p\">)</span>\n<span class=\"n\">unyt_quantity</span><span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"s1\">'km/s'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s1\">'metre/s'</span><span class=\"p\">)</span>\n<span class=\"n\">unyt_quantity</span><span class=\"p\">(</span><span class=\"mf\">1000.</span><span class=\"p\">,</span> <span class=\"s1\">'m/s'</span><span class=\"p\">)</span>\n</pre>\n<p>The documentation now has a table of units recognized by <tt>unyt</tt> along with\nknown alternative spellings for each unit.</p>\n</li>\n<li><p>Added support for unicode unit names, including <tt>\u03bcm</tt> for micrometer and <tt>\u03a9</tt>\nfor ohm. See <a href=\"https://github.com/yt-project/unyt/pull/59\" rel=\"nofollow\">PR #59</a>.</p>\n</li>\n<li><p>Substantially improved support for data that does not have a <tt>float64</tt>\ndtype. Rather than coercing all data to <tt>float64</tt> <tt>unyt</tt> will now preserve\nthe dtype of data. Data that is not already a numpy array will be coerced to a\ndtype by calling <tt>np.array</tt> internally. Converting integer data to a new\nunit will convert the data to floats, if this causes a loss of precision then\na warning message will be printed. See <a href=\"https://github.com/yt-project/unyt/pull/55\" rel=\"nofollow\">PR #55</a> for details. This change may\ncause data to be loaded into <tt>unyt</tt> with a different dtype. On Windows the\ndefault integer dtype is <tt>int32</tt>, so data may begin to be recognized as\n<tt>int32</tt> or converted to <tt>float32</tt> where before it was interpreted as\n<tt>float64</tt> by default.</p>\n</li>\n<li><p>Unit registries are now associated with a unit system. This means that it\u2019s\npossible to create a unit registry that is associated with a non-MKS unit\nsystem so that conversions to \u201cbase\u201d units will end up in that non-MKS\nsystem. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unyt</span> <span class=\"kn\">import</span> <span class=\"n\">UnitRegistry</span><span class=\"p\">,</span> <span class=\"n\">unyt_quantity</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ureg</span> <span class=\"o\">=</span> <span class=\"n\">UnitRegistry</span><span class=\"p\">(</span><span class=\"n\">unit_system</span><span class=\"o\">=</span><span class=\"s1\">'cgs'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">unyt_quantity</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s1\">'N'</span><span class=\"p\">,</span> <span class=\"n\">registry</span><span class=\"o\">=</span><span class=\"n\">ureg</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">in_base</span><span class=\"p\">()</span>\n<span class=\"n\">unyt_quantity</span><span class=\"p\">(</span><span class=\"mf\">1200000.</span><span class=\"p\">,</span> <span class=\"s1\">'dyn'</span><span class=\"p\">)</span>\n</pre>\n<p>See <a href=\"https://github.com/yt-project/unyt/pull/62\" rel=\"nofollow\">PR #62</a> for details.</p>\n</li>\n<li><p>Added two new utility functions, <tt>unyt.unit_systems.add_constants</tt> and\n<tt>unyt.unit_systems.add_symbols</tt> that can populate a namespace with a set of\nunit symbols in the same way that the top-level <tt>unyt</tt> namespace is\npopulated. For example, the author of a library making use of <tt>unyt</tt> could\ncreate an object that users can use to access unit data like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unyt.unit_systems</span> <span class=\"kn\">import</span> <span class=\"n\">add_symbols</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unyt.unit_registry</span> <span class=\"kn\">import</span> <span class=\"n\">UnitRegistry</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">UnitContainer</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>        <span class=\"n\">add_symbols</span><span class=\"p\">(</span><span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">),</span> <span class=\"n\">registry</span><span class=\"o\">=</span><span class=\"n\">UnitRegistry</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">UnitContainer</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">units</span><span class=\"o\">.</span><span class=\"n\">kilometer</span>\n<span class=\"n\">km</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">units</span><span class=\"o\">.</span><span class=\"n\">microsecond</span>\n<span class=\"n\">\u00b5s</span>\n</pre>\n<p>See <a href=\"https://github.com/yt-project/unyt/pull/68\" rel=\"nofollow\">PR #68</a>.</p>\n</li>\n<li><p>The <tt>unyt</tt> codebase is now automatically formatted by <a href=\"https://github.com/ambv/black\" rel=\"nofollow\">black</a>. See <a href=\"https://github.com/yt-project/unyt/pull/57\" rel=\"nofollow\">PR #57</a>.</p>\n</li>\n<li><p>Add missing \u201cmicrosecond\u201d name from top-level <tt>unyt</tt> namespace. See <a href=\"https://github.com/yt-project/unyt/pull/48\" rel=\"nofollow\">PR\n#48</a>.</p>\n</li>\n<li><p>Add support for <tt>numpy.argsort</tt> by defining <tt>unyt_array.argsort</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/52\" rel=\"nofollow\">PR\n#52</a>.</p>\n</li>\n<li><p>Add Farad unit and fix issues with conversions between MKS and CGS\nelectromagnetic units. See <a href=\"https://github.com/yt-project/unyt/pull/54\" rel=\"nofollow\">PR #54</a>.</p>\n</li>\n<li><p>Fixed incorrect conversions between inverse velocities and <tt>statohm</tt>. See\n<a href=\"https://github.com/yt-project/unyt/pull/61\" rel=\"nofollow\">PR #61</a>.</p>\n</li>\n<li><p>Fixed issues with installing <tt>unyt</tt> from source with newer versions of\n<tt>pip</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/62\" rel=\"nofollow\">PR #63</a>.</p>\n</li>\n<li><p>Fixed bug when using <cite>define_unit</cite> that caused crashes when using a custom\nunit registry. Thank you to Bili Dong (@qobilidob on GitHub) for the pull\nrequest. See <a href=\"https://github.com/yt-project/unyt/pull/64\" rel=\"nofollow\">PR #64</a>.</p>\n</li>\n</ul>\n<p>We would also like to thank Daniel Gomez (@dangom), Britton Smith\n(@brittonsmith), Lee Johnston (@l-johnston), Meagan Lang (@langmm), Eric Chen\n(@ericchen), Justin Gilmer (@justinGilmer), and Andy Perez (@sharkweek) for\nreporting issues.</p>\n</div>\n<div id=\"id18\">\n<h3>1.0.7 (2018-08-13)</h3>\n<p>Trigger zenodo archiving.</p>\n</div>\n<div id=\"id19\">\n<h3>1.0.6 (2018-08-13)</h3>\n<p>Minor paper updates to finalize JOSS submission.</p>\n</div>\n<div id=\"id20\">\n<h3>1.0.5 (2018-08-03)</h3>\n<p><tt>unyt</tt> 1.0.5 includes changes that reflect the peew review process for the\nJOSS method paper. The peer reviewers were Stuart Mumfork (<a href=\"https://github.com/cadair\" rel=\"nofollow\">@cadair</a>), Trevor Bekolay (<a href=\"https://github.com/tbekolay\" rel=\"nofollow\">@tbekolay</a>), and Yan Grange (<a href=\"https://github.com/ygrange\" rel=\"nofollow\">@ygrange</a>). The editor was Kyle Niemeyer (<a href=\"https://github.com/kyleniemeyer\" rel=\"nofollow\">@kyleniemeyer</a>). The` <cite>unyt`</cite> development team thank our\nreviewers and editor for their help getting the <tt>unyt</tt> paper out the door as\nwell as for the numerous comments and suggestions that improved the paper and\npackage as a whole.</p>\n<p>In addition we\u2019d like to thank Mike Zingale, Meagan Lang, Maksin Ratkin,\nDougAJ4, Ma Jianjun, Paul Ivanov, and Stephan Hoyer for reporting issues.</p>\n<ul>\n<li>Added docstrings for the custom exception classes defined by <tt>unyt</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/44\" rel=\"nofollow\">PR\n#44</a>.</li>\n<li>Added improved documentation to the contributor guide on how to run the tests\nand what the PR review guidelines are. See <a href=\"https://github.com/yt-project/unyt/pull/43\" rel=\"nofollow\">PR #43</a>.</li>\n<li>Updates to the text of the method paper in response to reviewer\nsuggestions. See <a href=\"https://github.com/yt-project/unyt/pull/42\" rel=\"nofollow\">PR #42</a>.</li>\n<li>It is now possible to run the tests on an installed copy of <tt>unyt</tt> by\nexecuting <tt>unyt.test()</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/41\" rel=\"nofollow\">PR #41</a>.</li>\n<li>Minor edit to LICENSE file so GitHub recognizes it. See <a href=\"https://github.com/yt-project/unyt/pull/35\" rel=\"nofollow\">PR #40</a>. Thank you to Kyle Sunden\n(<a href=\"https://github.com/ksunden\" rel=\"nofollow\">@ksunden</a>) for the contribution.</li>\n<li>Add spatial frequency as a dimension and added support in the <tt>spectral</tt>\nequivalence for the spatial frequency dimension. See <a href=\"https://github.com/yt-project/unyt/pull/38\" rel=\"nofollow\">PR #38</a> Thank you to Kyle Sunden\n(<a href=\"https://github.com/ksunden\" rel=\"nofollow\">@ksunden</a>) for the contribution.</li>\n<li>Add support for Python 3.7. See <a href=\"https://github.com/yt-project/unyt/pull/35\" rel=\"nofollow\">PR #37</a>.</li>\n<li>Importing <tt>unyt</tt> will now fail if <tt>numpy</tt> and <tt>sympy</tt> are not\ninstalled. See <a href=\"https://github.com/yt-project/unyt/pull/35\" rel=\"nofollow\">PR #35</a></li>\n<li>Testing whether a unit name is contained in a unit registry using the Python\n<tt>in</tt> keyword will now work correctly for all unit names. See <a href=\"https://github.com/yt-project/unyt/pull/31\" rel=\"nofollow\">PR #31</a>.</li>\n<li>The aliases for megagram in the top-level unyt namespace were incorrectly set\nto reference kilogram and now have the correct value. See <a href=\"https://github.com/yt-project/unyt/pull/29\" rel=\"nofollow\">PR #29</a>.</li>\n<li>Make it possible to take scalars to dimensionless array powers with a properly\nbroadcasted result without raising an error about units. See <a href=\"https://github.com/yt-project/unyt/pull/23\" rel=\"nofollow\">PR #23</a>.</li>\n<li>Whether or not a unit is allowed to be SI-prefixable (for example, meter is\nSI-prefixable to form centimeter, kilometer, and many other units) is now\nstored as metadata in the unit registry rather than as global state inside\n<tt>unyt</tt>. See <a href=\"https://github.com/yt-project/unyt/pull/21\" rel=\"nofollow\">PR #21</a>.</li>\n<li>Made adjustments to the rules for converting between CGS and MKS E&amp;M units so\nthat errors are only raised when going between unit systems and not merely\nwhen doing a complicated unit conversion invoving E&amp;M units. See <a href=\"https://github.com/yt-project/unyt/pull/20\" rel=\"nofollow\">PR #20</a>.</li>\n<li><tt>round(q)</tt> where <tt>q</tt> is a <tt>unyt_quantity</tt> instance will no\nlonger raise an error and will now return the nearest rounded float.\nSee <a href=\"https://github.com/yt-project/unyt/pull/19\" rel=\"nofollow\">PR #19</a>.</li>\n<li>Fixed a typo in the readme. Thank you to Paul Ivanov (<a href=\"https://github.com/ivanov\" rel=\"nofollow\">@ivanov</a>) for <a href=\"https://github.com/yt-project/unyt/pull/16\" rel=\"nofollow\">the fix</a>.</li>\n<li>Added smoot as a unit. See <a href=\"https://github.com/yt-project/unyt/pull/14\" rel=\"nofollow\">PR #14</a>.</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>1.0.4 (2018-06-08)</h3>\n<ul>\n<li>Expand installation instructions</li>\n<li>Mention paper and arxiv submission in the readme.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>1.0.3 (2018-06-06)</h3>\n<ul>\n<li>Fix readme rendering on pypi</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>1.0.2 (2018-06-06)</h3>\n<ul>\n<li>Added a paper to be submitted to the Journal of Open Source Software.</li>\n<li>Tweaks for the readme</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>1.0.1 (2018-05-24)</h3>\n<ul>\n<li>Don\u2019t use setup_requires in setup.py</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>1.0.0 (2018-05-24)</h3>\n<ul>\n<li>First release on PyPI.</li>\n<li>unyt began life as a submodule of yt named yt.units.</li>\n<li>It was separated from yt.units as its own package in 2018.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6648449, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "58b848684055b372ded9cacc0e902bcc", "sha256": "6dbe6ae1b15f234ea177b1a179ee98edbf7f6f26d5d4caac2e16df8ec6e75629"}, "downloads": -1, "filename": "unyt-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58b848684055b372ded9cacc0e902bcc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50153, "upload_time": "2018-05-24T19:55:58", "upload_time_iso_8601": "2018-05-24T19:55:58.084407Z", "url": "https://files.pythonhosted.org/packages/06/44/95689519356b161a811a62dea04d3199fe3bf798226967ee14b7f0125fc2/unyt-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "837764f04abacffca3673b22c0a5dbe1", "sha256": "fa21ce116c5c49da9aa55b1c383f24ae6ce8d805ec31a104358e6ad3c1ec8b07"}, "downloads": -1, "filename": "unyt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "837764f04abacffca3673b22c0a5dbe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144956, "upload_time": "2018-05-24T19:55:59", "upload_time_iso_8601": "2018-05-24T19:55:59.441380Z", "url": "https://files.pythonhosted.org/packages/d1/87/18d5d85c2f6dc59dc669af21659837dbd8c8cc943752928d87a1dba67ccf/unyt-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f6915d387fb575a3db8b9b89f51b1609", "sha256": "f65cba38847ec9f917d1746c3cc0a59ccba1341f911acbe5f0a290439bbf60b1"}, "downloads": -1, "filename": "unyt-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6915d387fb575a3db8b9b89f51b1609", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50148, "upload_time": "2018-05-25T00:38:57", "upload_time_iso_8601": "2018-05-25T00:38:57.005019Z", "url": "https://files.pythonhosted.org/packages/59/d1/e66c7a69cb8556e294776ecbdc008f69c1ba3a3a3e96a58f69a7512941cb/unyt-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0d820200dac7c53ac068bb5cc9aa4cb", "sha256": "4a135bdcd79fcb4130f16ca8665ffc3407e2af6f83f2e7debcc2a7459c4e0f01"}, "downloads": -1, "filename": "unyt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e0d820200dac7c53ac068bb5cc9aa4cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144917, "upload_time": "2018-05-25T00:38:58", "upload_time_iso_8601": "2018-05-25T00:38:58.478946Z", "url": "https://files.pythonhosted.org/packages/e7/ec/471d5bdbbcad2f8af70cd1a7004d180c8071c547aedefc9b36b8ad3f5ed5/unyt-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3704afa19eefaa58493936a884116f2a", "sha256": "a0c2088137b3151c87c693c291ddebc568a65f60952a408b9001c94d0c6bd8ec"}, "downloads": -1, "filename": "unyt-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3704afa19eefaa58493936a884116f2a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50350, "upload_time": "2018-06-06T19:45:03", "upload_time_iso_8601": "2018-06-06T19:45:03.351827Z", "url": "https://files.pythonhosted.org/packages/74/43/3d68088de474826a8b1063eed19f870d68dda68084bc7792faeb152c4210/unyt-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0acfb876173974e575743db8535c989", "sha256": "c55722e31eb1f7c2823859741c7eae7985df6134dab771e862ca9daf1070b3e3"}, "downloads": -1, "filename": "unyt-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d0acfb876173974e575743db8535c989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 145503, "upload_time": "2018-06-06T19:45:04", "upload_time_iso_8601": "2018-06-06T19:45:04.244230Z", "url": "https://files.pythonhosted.org/packages/41/35/e6bec5fa2d8853a357430ce424c0befd99f3f9a49812de63bb8369d719d5/unyt-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ee6432bb55e62a437e9e69d05bb9beeb", "sha256": "b22d37fba51fba796c9268d79f9a923c9fb054f6d7fb488469c5688a7c0a2937"}, "downloads": -1, "filename": "unyt-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ee6432bb55e62a437e9e69d05bb9beeb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50351, "upload_time": "2018-06-06T20:07:52", "upload_time_iso_8601": "2018-06-06T20:07:52.470657Z", "url": "https://files.pythonhosted.org/packages/2e/22/ae9f1efcae621ad1fb7fe230409fef4581abda09fe951cf9cc63bb32265f/unyt-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b028870852fc350c3cd28e6e151e825e", "sha256": "f412af58e8cdac7230c712b52eecf6d3e6356d6046b3b20b3cd0b1cff6f8824d"}, "downloads": -1, "filename": "unyt-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b028870852fc350c3cd28e6e151e825e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188504, "upload_time": "2018-06-06T20:07:53", "upload_time_iso_8601": "2018-06-06T20:07:53.789218Z", "url": "https://files.pythonhosted.org/packages/62/91/17313d12dd895a9b0c7853ade4df3037446d8a14f90411545e4e26a357ae/unyt-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "4139441cefa3df3aa6bbe05899f986e7", "sha256": "88584a90a4c60feaf116c7b31cb15ff609452d1caee94617fcf249fa924db5cb"}, "downloads": -1, "filename": "unyt-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4139441cefa3df3aa6bbe05899f986e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50605, "upload_time": "2018-06-09T03:44:19", "upload_time_iso_8601": "2018-06-09T03:44:19.869485Z", "url": "https://files.pythonhosted.org/packages/ef/8c/c429d05e4b4c080c5285e4dfc128dfecb7836f4abf13e3cbc0afb4d892b4/unyt-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ba29de6ae6eab4c95ab0f8d7cbdbfba", "sha256": "15c81723bde0dc22c9f79ea629b57885772cd167570a6e8365edd2b999623055"}, "downloads": -1, "filename": "unyt-1.0.4.tar.gz", "has_sig": false, "md5_digest": "7ba29de6ae6eab4c95ab0f8d7cbdbfba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189215, "upload_time": "2018-06-09T03:44:21", "upload_time_iso_8601": "2018-06-09T03:44:21.367216Z", "url": "https://files.pythonhosted.org/packages/f9/56/b69421d6215a884e3effb6eeb3c2e3d3b87647c0b5b2624c36e7e1b0f01c/unyt-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "1f032ba9e7642f1880789b57aa26b89b", "sha256": "e6e698ca3ce44d6f054e40a7af81198af7a04e7d26f72788f0eafddae1a075bf"}, "downloads": -1, "filename": "unyt-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1f032ba9e7642f1880789b57aa26b89b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 72840, "upload_time": "2018-08-03T18:48:23", "upload_time_iso_8601": "2018-08-03T18:48:23.652211Z", "url": "https://files.pythonhosted.org/packages/7f/9c/1cc546e2c46db42e97ce004cd09ad0af9cbab277fc976c44f1ffbd053d96/unyt-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62df6b019e4f485fd2341dd4135e40f5", "sha256": "6e275d63ba9039a5b06c53a37061dcde0c12627300bb83e302246970fa22cc78"}, "downloads": -1, "filename": "unyt-1.0.5.tar.gz", "has_sig": false, "md5_digest": "62df6b019e4f485fd2341dd4135e40f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 323247, "upload_time": "2018-08-03T18:48:24", "upload_time_iso_8601": "2018-08-03T18:48:24.910119Z", "url": "https://files.pythonhosted.org/packages/4e/41/59829e6a46acde06bb1e0696cbda2d068d22d93552c9562a82c3107a8b9e/unyt-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "44a13d5e1bf309aa3b9909a753fab749", "sha256": "ccc88ce6cd0cc86666de62f48f6fc1c2f9da41e8724160f559b5b266bf695838"}, "downloads": -1, "filename": "unyt-1.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44a13d5e1bf309aa3b9909a753fab749", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 72865, "upload_time": "2018-08-13T16:18:26", "upload_time_iso_8601": "2018-08-13T16:18:26.646111Z", "url": "https://files.pythonhosted.org/packages/90/17/dec7602e10ff3912f8cd13fd85caa47db955301e506cd94a51beb335d67a/unyt-1.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cffa7c9ce039abece3a92105d858aeb5", "sha256": "b613a759972b51f1c28f71f8ab6cb0886498534f2270bbdc7eb8c47597a3f415"}, "downloads": -1, "filename": "unyt-1.0.6.tar.gz", "has_sig": false, "md5_digest": "cffa7c9ce039abece3a92105d858aeb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 323327, "upload_time": "2018-08-13T16:18:28", "upload_time_iso_8601": "2018-08-13T16:18:28.361846Z", "url": "https://files.pythonhosted.org/packages/5d/c8/931181cf950a10aa1f79d138f828947d98795b5dab80ffaaa5403441db12/unyt-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "c33f86060a9df0ce787e7f7d663a7772", "sha256": "ed63dafab49b57fa64cab3e97092c8f0d68233cc7726b25910b53aceb17f48b1"}, "downloads": -1, "filename": "unyt-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c33f86060a9df0ce787e7f7d663a7772", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 72892, "upload_time": "2018-08-15T17:21:41", "upload_time_iso_8601": "2018-08-15T17:21:41.062613Z", "url": "https://files.pythonhosted.org/packages/4b/9e/ea77ac8c003a1345efcb877190003a374cf544fae58f1a503522e41a1a91/unyt-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83e18babb11fc602e37de9f655ebeae8", "sha256": "d616e9db66f21520cbf6a2a44c9994ea781b5c0774e463f71c41a6660fe15cfd"}, "downloads": -1, "filename": "unyt-1.0.7.tar.gz", "has_sig": false, "md5_digest": "83e18babb11fc602e37de9f655ebeae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 323386, "upload_time": "2018-08-15T17:21:43", "upload_time_iso_8601": "2018-08-15T17:21:43.681570Z", "url": "https://files.pythonhosted.org/packages/ad/72/efa48eb9625c9706dabaad6cf6a26a975e128bcbba424389c7184faa6886/unyt-1.0.7.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "d8ecfddb90aa89babfcde0b65cd7aa78", "sha256": "5e4d5ce0f42207927e94cc8e1ab016bada590dcd06a431510740de8b5f20d799"}, "downloads": -1, "filename": "unyt-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d8ecfddb90aa89babfcde0b65cd7aa78", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 80620, "upload_time": "2019-03-08T20:33:37", "upload_time_iso_8601": "2019-03-08T20:33:37.933580Z", "url": "https://files.pythonhosted.org/packages/84/d5/60ada7b152815efa33abb831d9439161babcf774fbf645f85b5dd1ba8aa3/unyt-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aabba5d40a7bb82e7867faa2405450aa", "sha256": "635d52685fe5f2327d5a232ed38811157b3a1dd686f5dc472c2c4ae6ff9d3aff"}, "downloads": -1, "filename": "unyt-2.0.0.tar.gz", "has_sig": false, "md5_digest": "aabba5d40a7bb82e7867faa2405450aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 334264, "upload_time": "2019-03-08T20:33:39", "upload_time_iso_8601": "2019-03-08T20:33:39.433726Z", "url": "https://files.pythonhosted.org/packages/1e/b9/ecd6037d7621c8865dc6275a59102c1d4855d6733fa7b6e7194c38f95f01/unyt-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "921a0a89829b17b405434593c921c677", "sha256": "f2a9663a54b723214f791c70f4270b85c37b6dc462d3ce3a3d8b7f7465696d66"}, "downloads": -1, "filename": "unyt-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "921a0a89829b17b405434593c921c677", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 81849, "upload_time": "2019-03-26T19:51:36", "upload_time_iso_8601": "2019-03-26T19:51:36.128552Z", "url": "https://files.pythonhosted.org/packages/3e/aa/bb6f61c31fe6a9128536c21964e15e8516d62e9dd2f26e65d4dde920a228/unyt-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6b5e9c21eec19136a4c8cb9a7cf20fa", "sha256": "2edec3b4e2f4a066d52eac91236f7739152c352ef7ec3c5cfca12efe4f360529"}, "downloads": -1, "filename": "unyt-2.1.0.tar.gz", "has_sig": false, "md5_digest": "c6b5e9c21eec19136a4c8cb9a7cf20fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 336037, "upload_time": "2019-03-26T19:51:38", "upload_time_iso_8601": "2019-03-26T19:51:38.399555Z", "url": "https://files.pythonhosted.org/packages/c1/5a/7675d839859972e9e914dae17fb5f00d079f0bddf789e7e5ccbc399461e2/unyt-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "7f1140f41673cd5099c01f3d6e303130", "sha256": "ea748031418d9ffcb3b88fde85c187c23c4a412044e1e4d46bdfa80f0dab10da"}, "downloads": -1, "filename": "unyt-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f1140f41673cd5099c01f3d6e303130", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 81946, "upload_time": "2019-03-27T21:06:54", "upload_time_iso_8601": "2019-03-27T21:06:54.742935Z", "url": "https://files.pythonhosted.org/packages/47/81/719451afa47e3a60ab22bc833fa5de95c31093fdf61a529bc6e07b1f6fc5/unyt-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b69f22f9b5c1677886e9878c90dd5df", "sha256": "ba859a233e30f48a8efb7472de75d93a2f7d783f0b7c9d7e329fd017e232716a"}, "downloads": -1, "filename": "unyt-2.1.1.tar.gz", "has_sig": false, "md5_digest": "6b69f22f9b5c1677886e9878c90dd5df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 336214, "upload_time": "2019-03-27T21:06:56", "upload_time_iso_8601": "2019-03-27T21:06:56.262870Z", "url": "https://files.pythonhosted.org/packages/23/07/fa2f879877b25aabbbaf3239c405c91886405b4bd165932751c20b3ff4f4/unyt-2.1.1.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "ed2b778145d622526d2cc2ae979b0f30", "sha256": "ed8d8e8df7188298394352561b5e617fab6a6af465c37808c9c64af7f5dc4cfa"}, "downloads": -1, "filename": "unyt-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ed2b778145d622526d2cc2ae979b0f30", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 82357, "upload_time": "2019-04-03T16:52:48", "upload_time_iso_8601": "2019-04-03T16:52:48.755236Z", "url": "https://files.pythonhosted.org/packages/53/8b/b16d7d69f516f14dfa091a8ce998934be4ef94b2a78ff3fd9247ce67da51/unyt-2.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44ccc4ea28885a0ab9c060ab997882c4", "sha256": "f3258b4e979cb404d949dd4c4cfabcbca7bc0fa31f56069fd5b5c2184c1ec425"}, "downloads": -1, "filename": "unyt-2.2.0.tar.gz", "has_sig": false, "md5_digest": "44ccc4ea28885a0ab9c060ab997882c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 332249, "upload_time": "2019-04-03T16:52:50", "upload_time_iso_8601": "2019-04-03T16:52:50.458874Z", "url": "https://files.pythonhosted.org/packages/03/0f/405af295a0c410ea87b03b45e2908f9ce25836001018fb6288944376cc64/unyt-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "8a59fc71c405b049586b3d0206083b58", "sha256": "cc25a663091c58354d3032fe8f57a5b3c1406b7a8033e0cc3b07676adfde84d9"}, "downloads": -1, "filename": "unyt-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a59fc71c405b049586b3d0206083b58", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 83018, "upload_time": "2019-07-02T17:13:09", "upload_time_iso_8601": "2019-07-02T17:13:09.836966Z", "url": "https://files.pythonhosted.org/packages/94/46/55a434429103f0b43374f5e834ef8d3b6330c053793489410adfd89eec47/unyt-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76f24f93b87b8f8336d97cda4c32fb10", "sha256": "5437b07e90e4df673ef8191346a320dc9f2f19cb1c59de2b4ceb9399985e624a"}, "downloads": -1, "filename": "unyt-2.2.1.tar.gz", "has_sig": false, "md5_digest": "76f24f93b87b8f8336d97cda4c32fb10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 337000, "upload_time": "2019-07-02T17:13:12", "upload_time_iso_8601": "2019-07-02T17:13:12.058009Z", "url": "https://files.pythonhosted.org/packages/21/bd/1578aca83ccce8dce750b0fa1617820c9b760b1a6b87b4639c98f413a2de/unyt-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "a2ab582b3cdc9d7317ba4a9d2064b9c2", "sha256": "a9a3233e55a63480ed76ff85c5d653d49b78945f51559a87766c73f43fe36bcc"}, "downloads": -1, "filename": "unyt-2.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a2ab582b3cdc9d7317ba4a9d2064b9c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 83218, "upload_time": "2019-07-03T14:11:16", "upload_time_iso_8601": "2019-07-03T14:11:16.177705Z", "url": "https://files.pythonhosted.org/packages/74/34/121470791723f14a6d0aa6844550294fd8f52def05fc5cde4ddfed382491/unyt-2.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a999bf88d7cba9f03d3df18c5a8e5b34", "sha256": "a8d6dd68f248b3a8f3c359512f7d84a569da66d2a27588dfe552908171dfcfd0"}, "downloads": -1, "filename": "unyt-2.2.2.tar.gz", "has_sig": false, "md5_digest": "a999bf88d7cba9f03d3df18c5a8e5b34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 333327, "upload_time": "2019-07-03T14:11:18", "upload_time_iso_8601": "2019-07-03T14:11:18.326801Z", "url": "https://files.pythonhosted.org/packages/45/84/117fa22ecfe41ab9a1eb18c7f3b8393f172dfce18936eace94bbcbde7666/unyt-2.2.2.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "fed873b69efecae6e9cc5d492303e0fd", "sha256": "9529a20c9302fe64d8c71fd2b46b73dc0bddf9cec40b1f1352ca849e800202e1"}, "downloads": -1, "filename": "unyt-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fed873b69efecae6e9cc5d492303e0fd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 86964, "upload_time": "2019-08-14T20:07:17", "upload_time_iso_8601": "2019-08-14T20:07:17.914489Z", "url": "https://files.pythonhosted.org/packages/a8/e7/282c451a6b44a190f1b68075c2ebeee1b3a2d1519951b224808b7d7fb3dd/unyt-2.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aa31c90deb552040f8f3a25808b03b0", "sha256": "b68f6300da0809d60f04a2acb3d5f9d9e5a248a5c4378612cdd080015f80ac17"}, "downloads": -1, "filename": "unyt-2.3.0.tar.gz", "has_sig": false, "md5_digest": "9aa31c90deb552040f8f3a25808b03b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 335983, "upload_time": "2019-08-14T20:07:20", "upload_time_iso_8601": "2019-08-14T20:07:20.059763Z", "url": "https://files.pythonhosted.org/packages/26/e3/31e282c2524ca0d1f96832756e725c4e35b8c822fd54b630dd5ed8dae83a/unyt-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "7d43a9b3b9e4f14c56567681ea108595", "sha256": "81dca890bed715ef38c636f82ca730089b5d7564b673825feaddbaf091874361"}, "downloads": -1, "filename": "unyt-2.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d43a9b3b9e4f14c56567681ea108595", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 85870, "upload_time": "2019-08-21T19:03:04", "upload_time_iso_8601": "2019-08-21T19:03:04.974022Z", "url": "https://files.pythonhosted.org/packages/3b/2a/df0113aa87c34ee5e607cc1203c0097ec822be6399f3cde2d468652df7f3/unyt-2.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f48b4c94cd1752d5023b7b0705e99c86", "sha256": "12add2b0300226aac22f45a473d04f8d3443fef4d0e57dd8bb788d07585288bd"}, "downloads": -1, "filename": "unyt-2.3.1.tar.gz", "has_sig": false, "md5_digest": "f48b4c94cd1752d5023b7b0705e99c86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 336348, "upload_time": "2019-08-21T19:03:07", "upload_time_iso_8601": "2019-08-21T19:03:07.288524Z", "url": "https://files.pythonhosted.org/packages/ee/19/6f38b9eb167bd94eac1c140fb2b3d2f8a8e897adbb497cd7e2974fcd2ef0/unyt-2.3.1.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "35ea82d87cd0832029ebb0df91232f28", "sha256": "24486711fa53de5b87cad8bd5caa0581fb5f4bab8dee550ae6b3f5841cc96683"}, "downloads": -1, "filename": "unyt-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35ea82d87cd0832029ebb0df91232f28", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 86895, "upload_time": "2019-10-25T15:50:30", "upload_time_iso_8601": "2019-10-25T15:50:30.126519Z", "url": "https://files.pythonhosted.org/packages/ae/29/c470906f06c70b740299a41a10e72e6b09bcb6b242654eb8d278f13cc4cb/unyt-2.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff8b343674982ac13593c976901cddac", "sha256": "d23bb829d8a15780036f0d9ecc96f68ae8e91ae60b35ee2a1c5b6b38ac96963e"}, "downloads": -1, "filename": "unyt-2.4.0.tar.gz", "has_sig": false, "md5_digest": "ff8b343674982ac13593c976901cddac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 340169, "upload_time": "2019-10-25T15:50:32", "upload_time_iso_8601": "2019-10-25T15:50:32.244878Z", "url": "https://files.pythonhosted.org/packages/86/cf/a7f25fba509b8f4d7434bc206b7d602c8db0e8f64ff11ff7198b6450866b/unyt-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "c243e1dc756852a9c4f108039d359354", "sha256": "ce423bda5b8843b3f06f0f55bc35c6621921a912b71e4580246156a143f83884"}, "downloads": -1, "filename": "unyt-2.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c243e1dc756852a9c4f108039d359354", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 87463, "upload_time": "2020-01-10T22:16:35", "upload_time_iso_8601": "2020-01-10T22:16:35.880307Z", "url": "https://files.pythonhosted.org/packages/b2/a5/7ad8261f675674c596f87a29a59df6396ec4c69e2cd292abe6a473c1ea5c/unyt-2.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be3efadc187c538a07945996944b4a82", "sha256": "9a6c3c111d3917ae7aaf934842f65756d0d767a24620c04ea44cfb830a48d38e"}, "downloads": -1, "filename": "unyt-2.4.1.tar.gz", "has_sig": false, "md5_digest": "be3efadc187c538a07945996944b4a82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 340855, "upload_time": "2020-01-10T22:16:38", "upload_time_iso_8601": "2020-01-10T22:16:38.643736Z", "url": "https://files.pythonhosted.org/packages/97/4b/22e7755f6a3e87b1114af60d2258f1d7532ba7bf33dc3f2b085e44c4b7a8/unyt-2.4.1.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "8aed9e8295d0a1e47a58ad207fcc3d33", "sha256": "497ccefb45753c512018f315e30bedeb035fd704899593ccc06cba4b5fe4a912"}, "downloads": -1, "filename": "unyt-2.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8aed9e8295d0a1e47a58ad207fcc3d33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 90136, "upload_time": "2020-01-20T22:38:04", "upload_time_iso_8601": "2020-01-20T22:38:04.423488Z", "url": "https://files.pythonhosted.org/packages/ea/84/2d94c15e51c7f3d78b12f24619d58f51641bddc0e5a2af5d717ffd10c3b0/unyt-2.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5776ef1cb4b29f74b6bb8a444621c8e9", "sha256": "4666ca017d99dec18a836fea0d332973e4169f4f67866f71a82331925d8994c1"}, "downloads": -1, "filename": "unyt-2.5.0.tar.gz", "has_sig": false, "md5_digest": "5776ef1cb4b29f74b6bb8a444621c8e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 458198, "upload_time": "2020-01-20T22:38:07", "upload_time_iso_8601": "2020-01-20T22:38:07.142181Z", "url": "https://files.pythonhosted.org/packages/5f/98/9d03de7909c92afd3c09041cc16736b706bd11c21415c62215cbe6a9e193/unyt-2.5.0.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "e1e98ce8c37d82b67eb2e2fb4c694ad0", "sha256": "7abbff8b1a634930ac442867fbc650140362dfbab74736fa6cdd4ed42d567a46"}, "downloads": -1, "filename": "unyt-2.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1e98ce8c37d82b67eb2e2fb4c694ad0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 91589, "upload_time": "2020-01-22T18:50:09", "upload_time_iso_8601": "2020-01-22T18:50:09.901221Z", "url": "https://files.pythonhosted.org/packages/4c/70/fa22ddc612605ceb529907c6d108b9c3547f4a8652ff12a1b5cdaf94d77b/unyt-2.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31e02b562093e1428992fb6cd052df59", "sha256": "4b03a63ec6b82a9b22a78be4b3f3413ae66b7b3cc57839bf8a169d6713e9b9a5"}, "downloads": -1, "filename": "unyt-2.6.0.tar.gz", "has_sig": false, "md5_digest": "31e02b562093e1428992fb6cd052df59", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 524991, "upload_time": "2020-01-22T18:50:12", "upload_time_iso_8601": "2020-01-22T18:50:12.277934Z", "url": "https://files.pythonhosted.org/packages/d2/56/690748c5c21cc6d445b4428e26ee5ce56e9f4f794113fc3a18f52edcea79/unyt-2.6.0.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "3c670bf85e5f8f62db23c52d8b06777c", "sha256": "e6ca7701ba5622ad9e1dd343385667eb8ca0131aaeb5283f0ff317d1e62bb494"}, "downloads": -1, "filename": "unyt-2.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c670bf85e5f8f62db23c52d8b06777c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 93956, "upload_time": "2020-02-06T23:08:47", "upload_time_iso_8601": "2020-02-06T23:08:47.273278Z", "url": "https://files.pythonhosted.org/packages/c0/6e/28f91c36edd96789357f04e230a08b3fcd463419face82a6c258cd23c8fe/unyt-2.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bb1badd3f1c7c4098813ea6e0a2bb1d", "sha256": "8561d5ff2c84c570c6b68d275f44a806944f3190a1d997e6caaaf23c3ff31e0f"}, "downloads": -1, "filename": "unyt-2.7.0.tar.gz", "has_sig": false, "md5_digest": "7bb1badd3f1c7c4098813ea6e0a2bb1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 546138, "upload_time": "2020-02-06T23:08:50", "upload_time_iso_8601": "2020-02-06T23:08:50.852196Z", "url": "https://files.pythonhosted.org/packages/71/1b/e67b59cd6056a6724b332e9f8c707711355e6ef4d943a68c74a5c10b8c7e/unyt-2.7.0.tar.gz", "yanked": false}], "2.7.1": [{"comment_text": "", "digests": {"md5": "5bf267e490820535dc490fabb5cdb230", "sha256": "f5d6d8417a71d8e36d634fe4ba0d1ef370421beff3e5fc6447d730d20dcb9c45"}, "downloads": -1, "filename": "unyt-2.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5bf267e490820535dc490fabb5cdb230", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 94263, "upload_time": "2020-02-17T19:18:49", "upload_time_iso_8601": "2020-02-17T19:18:49.307048Z", "url": "https://files.pythonhosted.org/packages/bf/32/7a3565926edbcb8951a6dcdf83bca4bb6be7d9c6374a7b27876f3ddb6bd2/unyt-2.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eead25c89ea128f22a9107b0c17d6ff", "sha256": "ae45280849875638038bbe4bcf5b2c0f5d0621a3458f098ebbc575ed46b27f71"}, "downloads": -1, "filename": "unyt-2.7.1.tar.gz", "has_sig": false, "md5_digest": "1eead25c89ea128f22a9107b0c17d6ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 589075, "upload_time": "2020-02-17T19:18:51", "upload_time_iso_8601": "2020-02-17T19:18:51.536008Z", "url": "https://files.pythonhosted.org/packages/9a/08/9267e2f22cad22b8bf4aa29fdc5cb6dae2456ed314bd3ed0282b1a695c77/unyt-2.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5bf267e490820535dc490fabb5cdb230", "sha256": "f5d6d8417a71d8e36d634fe4ba0d1ef370421beff3e5fc6447d730d20dcb9c45"}, "downloads": -1, "filename": "unyt-2.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5bf267e490820535dc490fabb5cdb230", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 94263, "upload_time": "2020-02-17T19:18:49", "upload_time_iso_8601": "2020-02-17T19:18:49.307048Z", "url": "https://files.pythonhosted.org/packages/bf/32/7a3565926edbcb8951a6dcdf83bca4bb6be7d9c6374a7b27876f3ddb6bd2/unyt-2.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eead25c89ea128f22a9107b0c17d6ff", "sha256": "ae45280849875638038bbe4bcf5b2c0f5d0621a3458f098ebbc575ed46b27f71"}, "downloads": -1, "filename": "unyt-2.7.1.tar.gz", "has_sig": false, "md5_digest": "1eead25c89ea128f22a9107b0c17d6ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 589075, "upload_time": "2020-02-17T19:18:51", "upload_time_iso_8601": "2020-02-17T19:18:51.536008Z", "url": "https://files.pythonhosted.org/packages/9a/08/9267e2f22cad22b8bf4aa29fdc5cb6dae2456ed314bd3ed0282b1a695c77/unyt-2.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:59 2020"}