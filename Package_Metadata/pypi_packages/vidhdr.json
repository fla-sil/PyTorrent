{"info": {"author": "Zack Dibe", "author_email": "contact@zackdibe.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Quality Assurance"], "description": "The vidhdr module determines the mime type of video contained in a file or byte stream.\n\nThe vidhdr module defines the following function:\n\nvidhdr.what(filepath[, buf])\n  Tests the image data contained in the file located by *filepath*, and returns a string describing the image type. If optional *buf* is provided, the *filepath* is ignored and *buf* is assumed to contain the byte stream to test.\n\nThe following image types are recognized, as listed below with the return value from what():\n\n=======================   ===================================================================\n     Value                       Image format\n=======================   ===================================================================\n'video/x-m4v'                      Apple TV (.M4V)\n'video/mp4'                      MPEG-4 (.MP4) Nero Mobile Profile\n'various'                      MP4 w/ MPEG-7 Metadata [per ISO 14496-12]\n'image/jpm'                      JPEG 2000 Compound Image (.JPM) [ISO 15444-6]\n'video/3gpp2'                      3GPP2 EZmovie for KDDI 3G cellphones\n'image/jpx'                      JPEG 2000 w/ extensions (.JPX) [ISO 15444-2]\n'video/mp4'                      MP4 Base Media v2 [ISO 14496-12:2005]\n'video/3gpp'                      3GPP Media (.3GP) Release 4\n'video/x-m4v'                      Apple iPhone (.M4V)\n'video/3gpp'                      3GPP Media (.3GP) Release 5\n'video/mp4'                      MPEG-4 (.MP4) Nero Standard Profile\n'video/mp4'                      MPEG-4 (.MP4) Nero Portable Profile\n'video/mp4'                      H.264/MPEG-4 AVC (.MP4) Nero Standard Profile\n'video/mp4'                      H.264/MPEG-4 AVC (.MP4) Nero Portable Profile\n'image/jp2'                      JPEG 2000 Image (.JP2) [ISO 15444-1 ?]\n'video/3gpp'                      3GPP Media (.3GP) Release 7 Streaming Servers\n'audio/mp4'                      Apple iTunes AAC-LC (.M4P) AES Protected Audio\n'video/mp4'                      MPEG-4 (.MP4) Nero HDTV Profile\n'video/x-m4v'                      Apple iTunes Video (.M4V) Video\n'various'                      MPEG-21 [ISO/IEC 21000-9]\n'video/mp4'                      H.264/MPEG-4 AVC (.MP4) Nero Cinema Profile\n'various'                      OMA DCF DRM Format 2.0 (OMA-TS-DRM-DCF-V2_0-20060303-A)\n'audio/mp4'                      Apple iTunes AAC-LC (.M4B) Audio Book\n'video/mp4'                      H.264/MPEG-4 AVC (.MP4) Nero HDTV Profile\n'audio/x-m4a'                      Apple iTunes AAC-LC (.M4A) Audio\n'video/mp4'                      H.264/MPEG-4 AVC (.MP4) Nero Mobile Profile\n'video/vnd.dvb.file'             DVB (.DVB) over RTP\n'various?'                      SD Memory Card Video\n'video/mp4'                      MP4 v2 [ISO 14496-14]\n'video/mp4'                      MP4 v1 [ISO 14496-1:ch13]\n'video/mp4'                      Protected Video for Adobe Flash Player 9+ (.F4P)\n'video/mp4'                      MPEG-4 (.MP4) Nero Cinema Profile\n'video/mp4'                      MP4  Base Media v1 [IS0 14496-12:2003]\n'various'                      Photo Player, MAF [ISO/IEC 23000-3]\n'audio/mp4'                      MPEG-4 (.MP4) for SonyPSP\n'video/mp4'                      MPEG-4/3GPP Mobile Profile (.MP4 / .3GP) (for NTT)\n'video/vnd.dvb.file'             DVB (.DVB) over MPEG-2 Transport Stream\n'video/quicktime'                Apple QuickTime (.MOV/QT)\n'video/mp4'                      MP4 Base w/ AVC ext [ISO 14496-12:2005]\n'video/mj2'                      Motion JPEG 2000 [ISO 15444-3] General Profile\n'video/quicktime'                Sony / Mobile QuickTime (.MQV)  US Patent 7,477,830 (SonyCorp)\n'video/3gpp'                      3GPP Release 6 General Profile\n'video/mp4'                      Video for Adobe Flash Player 9+ (.F4V)\n'video/3gpp'                      3GPP Media (.3GP) Release 2 (probably non-existent)\n'video/3gpp'                      3GPP Media (.3GP) Release 3 (probably non-existent)\n'video/3gpp'                      3GPP Media (.3GP) Release 1 (probably non-existent)\n'video/3gpp'                      3GPP Media (.3GP) Release 6 Streaming Servers\n'video/3gpp'                      3GPP (.3GP) Release 7 MBMS Extended Presentations\n'video/3gpp'                      3GPP (.3GP) Release 6 MBMS Extended Presentations\n'audio/mp4'                      Audio for Adobe Flash Player 9+ (.F4A)\n'video/mj2'                      Motion JPEG 2000 [ISO 15444-3] Simple Profile\n'audio/mp4'                      Audio Book for Adobe Flash Player 9+ (.F4B)\n'audio/mp4'                      MP4 v2 [ISO 14496-14] Nero Digital AAC Audio\n'video/3gpp2'                      3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-0 V1.0\n'video/3gpp2'                      3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-A V1.0.0\n'video/3gpp2'                      3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-B v1.0\n=======================   ===================================================================\n\n\nYou can extend the list of file types vidhdr can recognize by appending to this variable:\n\nvidhdr.tests\n  A list of functions performing the individual tests. Each function takes two arguments: the byte-stream and an open file-like object. When what() is called with a byte-stream, the file-like object will be `None`.\n\n  The test function should return a string describing the image type if the test succeeded, or `None` if it failed.\n\nExample:\n\n.. code-block:: python\n\n  >>> import vidhdr\n  >>> vidhdr.what('test.mp4')\n  'video/mp4'", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Zack--/vidhdr", "keywords": "video header type mimetype imghdr", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vidhdr", "package_url": "https://pypi.org/project/vidhdr/", "platform": "", "project_url": "https://pypi.org/project/vidhdr/", "project_urls": {"Homepage": "https://github.com/Zack--/vidhdr"}, "release_url": "https://pypi.org/project/vidhdr/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Determine the type of a video", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The vidhdr module determines the mime type of video contained in a file or byte stream.</p>\n<p>The vidhdr module defines the following function:</p>\n<dl>\n<dt>vidhdr.what(filepath[, buf])</dt>\n<dd>Tests the image data contained in the file located by <em>filepath</em>, and returns a string describing the image type. If optional <em>buf</em> is provided, the <em>filepath</em> is ignored and <em>buf</em> is assumed to contain the byte stream to test.</dd>\n</dl>\n<p>The following image types are recognized, as listed below with the return value from what():</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Value</th>\n<th>Image format</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>\u2018video/x-m4v\u2019</td>\n<td>Apple TV (.M4V)</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4 (.MP4) Nero Mobile Profile</td>\n</tr>\n<tr><td>\u2018various\u2019</td>\n<td>MP4 w/ MPEG-7 Metadata [per ISO 14496-12]</td>\n</tr>\n<tr><td>\u2018image/jpm\u2019</td>\n<td>JPEG 2000 Compound Image (.JPM) [ISO 15444-6]</td>\n</tr>\n<tr><td>\u2018video/3gpp2\u2019</td>\n<td>3GPP2 EZmovie for KDDI 3G cellphones</td>\n</tr>\n<tr><td>\u2018image/jpx\u2019</td>\n<td>JPEG 2000 w/ extensions (.JPX) [ISO 15444-2]</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MP4 Base Media v2 [ISO 14496-12:2005]</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 4</td>\n</tr>\n<tr><td>\u2018video/x-m4v\u2019</td>\n<td>Apple iPhone (.M4V)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 5</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4 (.MP4) Nero Standard Profile</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4 (.MP4) Nero Portable Profile</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>H.264/MPEG-4 AVC (.MP4) Nero Standard Profile</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>H.264/MPEG-4 AVC (.MP4) Nero Portable Profile</td>\n</tr>\n<tr><td>\u2018image/jp2\u2019</td>\n<td>JPEG 2000 Image (.JP2) [ISO 15444-1 ?]</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 7 Streaming Servers</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>Apple iTunes AAC-LC (.M4P) AES Protected Audio</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4 (.MP4) Nero HDTV Profile</td>\n</tr>\n<tr><td>\u2018video/x-m4v\u2019</td>\n<td>Apple iTunes Video (.M4V) Video</td>\n</tr>\n<tr><td>\u2018various\u2019</td>\n<td>MPEG-21 [ISO/IEC 21000-9]</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>H.264/MPEG-4 AVC (.MP4) Nero Cinema Profile</td>\n</tr>\n<tr><td>\u2018various\u2019</td>\n<td>OMA DCF DRM Format 2.0 (OMA-TS-DRM-DCF-V2_0-20060303-A)</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>Apple iTunes AAC-LC (.M4B) Audio Book</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>H.264/MPEG-4 AVC (.MP4) Nero HDTV Profile</td>\n</tr>\n<tr><td>\u2018audio/x-m4a\u2019</td>\n<td>Apple iTunes AAC-LC (.M4A) Audio</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>H.264/MPEG-4 AVC (.MP4) Nero Mobile Profile</td>\n</tr>\n<tr><td>\u2018video/vnd.dvb.file\u2019</td>\n<td>DVB (.DVB) over RTP</td>\n</tr>\n<tr><td>\u2018various?\u2019</td>\n<td>SD Memory Card Video</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MP4 v2 [ISO 14496-14]</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MP4 v1 [ISO 14496-1:ch13]</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>Protected Video for Adobe Flash Player 9+ (.F4P)</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4 (.MP4) Nero Cinema Profile</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MP4  Base Media v1 [IS0 14496-12:2003]</td>\n</tr>\n<tr><td>\u2018various\u2019</td>\n<td>Photo Player, MAF [ISO/IEC 23000-3]</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>MPEG-4 (.MP4) for SonyPSP</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MPEG-4/3GPP Mobile Profile (.MP4 / .3GP) (for NTT)</td>\n</tr>\n<tr><td>\u2018video/vnd.dvb.file\u2019</td>\n<td>DVB (.DVB) over MPEG-2 Transport Stream</td>\n</tr>\n<tr><td>\u2018video/quicktime\u2019</td>\n<td>Apple QuickTime (.MOV/QT)</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>MP4 Base w/ AVC ext [ISO 14496-12:2005]</td>\n</tr>\n<tr><td>\u2018video/mj2\u2019</td>\n<td>Motion JPEG 2000 [ISO 15444-3] General Profile</td>\n</tr>\n<tr><td>\u2018video/quicktime\u2019</td>\n<td>Sony / Mobile QuickTime (.MQV)  US Patent 7,477,830 (SonyCorp)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Release 6 General Profile</td>\n</tr>\n<tr><td>\u2018video/mp4\u2019</td>\n<td>Video for Adobe Flash Player 9+ (.F4V)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 2 (probably non-existent)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 3 (probably non-existent)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 1 (probably non-existent)</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP Media (.3GP) Release 6 Streaming Servers</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP (.3GP) Release 7 MBMS Extended Presentations</td>\n</tr>\n<tr><td>\u2018video/3gpp\u2019</td>\n<td>3GPP (.3GP) Release 6 MBMS Extended Presentations</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>Audio for Adobe Flash Player 9+ (.F4A)</td>\n</tr>\n<tr><td>\u2018video/mj2\u2019</td>\n<td>Motion JPEG 2000 [ISO 15444-3] Simple Profile</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>Audio Book for Adobe Flash Player 9+ (.F4B)</td>\n</tr>\n<tr><td>\u2018audio/mp4\u2019</td>\n<td>MP4 v2 [ISO 14496-14] Nero Digital AAC Audio</td>\n</tr>\n<tr><td>\u2018video/3gpp2\u2019</td>\n<td>3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-0 V1.0</td>\n</tr>\n<tr><td>\u2018video/3gpp2\u2019</td>\n<td>3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-A V1.0.0</td>\n</tr>\n<tr><td>\u2018video/3gpp2\u2019</td>\n<td>3GPP2 Media (.3G2) compliant with 3GPP2 C.S0050-B v1.0</td>\n</tr>\n</tbody>\n</table>\n<p>You can extend the list of file types vidhdr can recognize by appending to this variable:</p>\n<dl>\n<dt>vidhdr.tests</dt>\n<dd><p>A list of functions performing the individual tests. Each function takes two arguments: the byte-stream and an open file-like object. When what() is called with a byte-stream, the file-like object will be <cite>None</cite>.</p>\n<p>The test function should return a string describing the image type if the test succeeded, or <cite>None</cite> if it failed.</p>\n</dd>\n</dl>\n<p>Example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">vidhdr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vidhdr</span><span class=\"o\">.</span><span class=\"n\">what</span><span class=\"p\">(</span><span class=\"s1\">'test.mp4'</span><span class=\"p\">)</span>\n<span class=\"s1\">'video/mp4'</span>\n</pre>\n\n          </div>"}, "last_serial": 2407297, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b8e25a68c9a5e741fe5cb2e7054d620c", "sha256": "985ed27374584699682783a217df6b839233f8c4a2852db4a2442cf76277d8a7"}, "downloads": -1, "filename": "vidhdr-1.0-py2.7.egg", "has_sig": false, "md5_digest": "b8e25a68c9a5e741fe5cb2e7054d620c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6833, "upload_time": "2016-10-18T09:00:09", "upload_time_iso_8601": "2016-10-18T09:00:09.071972Z", "url": "https://files.pythonhosted.org/packages/1f/ea/1baff1a12b21f7fb5376a02ef0b12f476b90eb11a086e3d233610bd1bfcf/vidhdr-1.0-py2.7.egg", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c07ec10ac5e72149d3c806b577f07699", "sha256": "bd248d8bd900b406659fda87fce864750dc015b83914068cbc8418d64aeba6f9"}, "downloads": -1, "filename": "vidhdr-1.0.1-py2.7.egg", "has_sig": false, "md5_digest": "c07ec10ac5e72149d3c806b577f07699", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6821, "upload_time": "2016-10-18T09:52:14", "upload_time_iso_8601": "2016-10-18T09:52:14.501043Z", "url": "https://files.pythonhosted.org/packages/62/ff/a4bbe7bbb632afafa9e559c7507b5087e8e87be2509067712d6996614fbf/vidhdr-1.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b0d6d5da81c1dc9bb527367b1a5d05c", "sha256": "b223fe503f3b761b96eec76548299e236b499cb3f55c3e9e734f7b942a909e51"}, "downloads": -1, "filename": "vidhdr-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b0d6d5da81c1dc9bb527367b1a5d05c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6870, "upload_time": "2016-10-18T15:38:59", "upload_time_iso_8601": "2016-10-18T15:38:59.590221Z", "url": "https://files.pythonhosted.org/packages/4b/2a/5ebf8e62f2565fc69e8cc27fa31018ebdd1a4f779c2493fa0ff4c8a4e7ac/vidhdr-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b42439607eeeb73f479ca85c4176b600", "sha256": "0a07b8bf4e1ec7c9e64b9eb398edf268f456abd108dc6a3bf2a5a6e14fe182cd"}, "downloads": -1, "filename": "vidhdr-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b42439607eeeb73f479ca85c4176b600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4179, "upload_time": "2016-10-18T15:39:01", "upload_time_iso_8601": "2016-10-18T15:39:01.777399Z", "url": "https://files.pythonhosted.org/packages/22/63/7fb94a7878e30c09720a5f74d7c6a8023782aff1e469a6199ebd29e1a04e/vidhdr-1.0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "91bd6dbafdee816cfc2d45f89f06455c", "sha256": "cd4a2e6d0d5aa32e0a43526cc98e4fe6719b79ee7ed2d41866ebbdee8f523ba5"}, "downloads": -1, "filename": "vidhdr-1.0.1.zip", "has_sig": false, "md5_digest": "91bd6dbafdee816cfc2d45f89f06455c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8765, "upload_time": "2016-10-18T15:39:03", "upload_time_iso_8601": "2016-10-18T15:39:03.809421Z", "url": "https://files.pythonhosted.org/packages/ce/a6/c727ba1b3619ef13fc75c02e151251e40886b874e355100c64d9ff24b720/vidhdr-1.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c07ec10ac5e72149d3c806b577f07699", "sha256": "bd248d8bd900b406659fda87fce864750dc015b83914068cbc8418d64aeba6f9"}, "downloads": -1, "filename": "vidhdr-1.0.1-py2.7.egg", "has_sig": false, "md5_digest": "c07ec10ac5e72149d3c806b577f07699", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6821, "upload_time": "2016-10-18T09:52:14", "upload_time_iso_8601": "2016-10-18T09:52:14.501043Z", "url": "https://files.pythonhosted.org/packages/62/ff/a4bbe7bbb632afafa9e559c7507b5087e8e87be2509067712d6996614fbf/vidhdr-1.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b0d6d5da81c1dc9bb527367b1a5d05c", "sha256": "b223fe503f3b761b96eec76548299e236b499cb3f55c3e9e734f7b942a909e51"}, "downloads": -1, "filename": "vidhdr-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b0d6d5da81c1dc9bb527367b1a5d05c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6870, "upload_time": "2016-10-18T15:38:59", "upload_time_iso_8601": "2016-10-18T15:38:59.590221Z", "url": "https://files.pythonhosted.org/packages/4b/2a/5ebf8e62f2565fc69e8cc27fa31018ebdd1a4f779c2493fa0ff4c8a4e7ac/vidhdr-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b42439607eeeb73f479ca85c4176b600", "sha256": "0a07b8bf4e1ec7c9e64b9eb398edf268f456abd108dc6a3bf2a5a6e14fe182cd"}, "downloads": -1, "filename": "vidhdr-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b42439607eeeb73f479ca85c4176b600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4179, "upload_time": "2016-10-18T15:39:01", "upload_time_iso_8601": "2016-10-18T15:39:01.777399Z", "url": "https://files.pythonhosted.org/packages/22/63/7fb94a7878e30c09720a5f74d7c6a8023782aff1e469a6199ebd29e1a04e/vidhdr-1.0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "91bd6dbafdee816cfc2d45f89f06455c", "sha256": "cd4a2e6d0d5aa32e0a43526cc98e4fe6719b79ee7ed2d41866ebbdee8f523ba5"}, "downloads": -1, "filename": "vidhdr-1.0.1.zip", "has_sig": false, "md5_digest": "91bd6dbafdee816cfc2d45f89f06455c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8765, "upload_time": "2016-10-18T15:39:03", "upload_time_iso_8601": "2016-10-18T15:39:03.809421Z", "url": "https://files.pythonhosted.org/packages/ce/a6/c727ba1b3619ef13fc75c02e151251e40886b874e355100c64d9ff24b720/vidhdr-1.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:36:11 2020"}