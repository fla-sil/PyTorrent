{"info": {"author": "Daniel Kaufhold", "author_email": "daniel.kaufhold@bitmazk.com", "bugtrack_url": null, "classifiers": [], "description": "Django Unshorten\n================\n\nA Django application for un-shortening URLs that have been shortened by\nURL shorteners like bit.ly.\n\n\nInstallation\n------------\n\nYou need to install the following prerequisites in order to use this app::\n\n    pip install Django\n\nIf you want to install the latest stable release from PyPi::\n\n    $ pip install django-unshorten\n\nIf you feel adventurous and want to install the latest commit from GitHub::\n\n    $ pip install -e git://github.com/bitmazk/django-unshorten.git#egg=unshorten\n\nAdd ``unshorten`` to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...,\n        'unshorten',\n    )\n\nHook this app into your ``urls.py``::\n\n    urlpatterns = [\n        url(r'^unshorten/$', include('unshorten.urls')),\n    ]\n\nYou need to set the class that does the rate limiting.\nFor Default set this to: ::\n\n    UNSHORTEN_RATE_LIMIT_CLASS = 'unshorten.rate_limit.SimpleRateLimit'\n\nThis will simply limit the daily api calls to the following setting, you must\nalso provide::\n\n    UNSHORTEN_DAILY_LIMIT = 5000\n\n\nAlso you need to provide the setting for ``UNSHORTEN_API_AUTH_CLASS``.\nDefault is: ::\n\n    UNSHORTEN_API_AUTH_CLASS = 'unshorten.authentication.SimpleAuthentication'\n\nThis provides simple http authentification as well as login authentication.\n\nOn your server, if you are using ``mod_wsgi`` you need to add this to your\n``httpd.conf``: ::\n\n    WSGIPassAuthorization On\n\n\nUsage\n-----\n\nAfter installation a user should be able to call the api using basic http\nauthentication and a query. A requested URL could look like this: ::\n\n    https://example.com/unshorten/api/v1/unshorten/?url=http%3A%2F%2Fbitmazk.com\n\nAnd here's an example of a request with basic http authentication using curl:::\n\n    curl --user user@example.com:password123 \"https://example.com/unshorten/api/v1/unshorten/?url=bit.ly%2FUn9Gns\"\n\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps\n\n.. code-block:: bash\n\n    # Fork this repository\n    # Clone your fork\n    mkvirtualenv django-unshorten\n    make develop\n\n    git co -b feature_branch master\n    # Implement your feature and tests\n    git add . && git commit\n    git push -u origin feature_branch\n    # Send us a pull request for your feature branch\n\nIn order to run the tests, simply execute ``tox``. This will install two new\nenvironments (for Django 1.8 and Django 1.9) and run the tests against both\nenvironments.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitmazk/django-unshorten", "keywords": "django,url,unshorten,API", "license": "The MIT License", "maintainer": null, "maintainer_email": null, "name": "django-unshorten", "package_url": "https://pypi.org/project/django-unshorten/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-unshorten/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bitmazk/django-unshorten"}, "release_url": "https://pypi.org/project/django-unshorten/1.0/", "requires_dist": null, "requires_python": null, "summary": "A reusable Django app to un-shorten URLs.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Django application for un-shortening URLs that have been shortened by\nURL shorteners like bit.ly.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You need to install the following prerequisites in order to use this app:</p>\n<pre>pip install Django\n</pre>\n<p>If you want to install the latest stable release from PyPi:</p>\n<pre>$ pip install django-unshorten\n</pre>\n<p>If you feel adventurous and want to install the latest commit from GitHub:</p>\n<pre>$ pip install -e git://github.com/bitmazk/django-unshorten.git#egg=unshorten\n</pre>\n<p>Add <tt>unshorten</tt> to your <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...,\n    'unshorten',\n)\n</pre>\n<p>Hook this app into your <tt>urls.py</tt>:</p>\n<pre>urlpatterns = [\n    url(r'^unshorten/$', include('unshorten.urls')),\n]\n</pre>\n<p>You need to set the class that does the rate limiting.\nFor Default set this to:</p>\n<pre>UNSHORTEN_RATE_LIMIT_CLASS = 'unshorten.rate_limit.SimpleRateLimit'\n</pre>\n<p>This will simply limit the daily api calls to the following setting, you must\nalso provide:</p>\n<pre>UNSHORTEN_DAILY_LIMIT = 5000\n</pre>\n<p>Also you need to provide the setting for <tt>UNSHORTEN_API_AUTH_CLASS</tt>.\nDefault is:</p>\n<pre>UNSHORTEN_API_AUTH_CLASS = 'unshorten.authentication.SimpleAuthentication'\n</pre>\n<p>This provides simple http authentification as well as login authentication.</p>\n<p>On your server, if you are using <tt>mod_wsgi</tt> you need to add this to your\n<tt>httpd.conf</tt>:</p>\n<pre>WSGIPassAuthorization On\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After installation a user should be able to call the api using basic http\nauthentication and a query. A requested URL could look like this:</p>\n<pre>https://example.com/unshorten/api/v1/unshorten/?url=http%3A%2F%2Fbitmazk.com\n</pre>\n<p>And here\u2019s an example of a request with basic http authentication using curl::</p>\n<pre>curl --user user@example.com:password123 \"https://example.com/unshorten/api/v1/unshorten/?url=bit.ly%2FUn9Gns\"\n</pre>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you want to contribute to this project, please perform the following steps</p>\n<pre><span class=\"c1\"># Fork this repository\n# Clone your fork\n</span>mkvirtualenv django-unshorten\nmake develop\n\ngit co -b feature_branch master\n<span class=\"c1\"># Implement your feature and tests\n</span>git add . <span class=\"o\">&amp;&amp;</span> git commit\ngit push -u origin feature_branch\n<span class=\"c1\"># Send us a pull request for your feature branch</span>\n</pre>\n<p>In order to run the tests, simply execute <tt>tox</tt>. This will install two new\nenvironments (for Django 1.8 and Django 1.9) and run the tests against both\nenvironments.</p>\n</div>\n\n          </div>"}, "last_serial": 2098241, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a6274d8d0c21fed1ac9dc956d4975c68", "sha256": "b54d34d6e8c27ab7cc92052f95d1148e0169ca683e70d3ab5911ac75e52b64d0"}, "downloads": -1, "filename": "django-unshorten-1.0.tar.gz", "has_sig": false, "md5_digest": "a6274d8d0c21fed1ac9dc956d4975c68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10754, "upload_time": "2016-05-04T05:53:48", "upload_time_iso_8601": "2016-05-04T05:53:48.567943Z", "url": "https://files.pythonhosted.org/packages/92/2b/5b4cf9acbe72d7afa14615e805651b6a140a6648572fd6ca85202edf54ee/django-unshorten-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6274d8d0c21fed1ac9dc956d4975c68", "sha256": "b54d34d6e8c27ab7cc92052f95d1148e0169ca683e70d3ab5911ac75e52b64d0"}, "downloads": -1, "filename": "django-unshorten-1.0.tar.gz", "has_sig": false, "md5_digest": "a6274d8d0c21fed1ac9dc956d4975c68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10754, "upload_time": "2016-05-04T05:53:48", "upload_time_iso_8601": "2016-05-04T05:53:48.567943Z", "url": "https://files.pythonhosted.org/packages/92/2b/5b4cf9acbe72d7afa14615e805651b6a140a6648572fd6ca85202edf54ee/django-unshorten-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:13 2020"}