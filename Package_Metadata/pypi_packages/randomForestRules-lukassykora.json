{"info": {"author": "Lukas Sykora", "author_email": "lukassykora@seznam.cz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Random Forest Rules\n [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nGet the representation of all rules found by sklearn RandomForestClassifier. It works in following way:\n\n- On each feature, it applies one-hot encoding that makes each column binary.\n- Random Forest runs on the features and a target attribute.\n- All trees are extracted from the Random Forest Regressor.\n- Decision Trees are split to classification rules.\n\n\n## GIT repository\n\nhttps://github.com/lukassykora/randomForestRules\n\n## Example\n```python\nfrom randomForestRules import RandomForestRules\nimport pandas as pd\n\ndf = pd.read_csv(\"data/audiology.csv\")\ndf.columns = df.columns.str.replace(\"_\", \"-\") # underscore not allowed\ndf['target'] = df['binaryClass'].apply(lambda x: 1 if x == \"P\" else 0) # target musts be numerical\n# All feature columns\ncols=[]\nfor col in df.columns:\n    if col != 'binaryClass' and col != 'target':\n        cols.append(col)\n# Initialize\nrandomForest = RandomForestRules()\n# Load data\nrandomForest.load_pandas(df)\n# Fit\nrandomForest.fit(antecedents = cols, consequent = 'target', supp=0.005, conf=50)\n# Get result\nframe = randomForest.get_frame()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lukassykora/randomForestRules", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "randomForestRules-lukassykora", "package_url": "https://pypi.org/project/randomForestRules-lukassykora/", "platform": "", "project_url": "https://pypi.org/project/randomForestRules-lukassykora/", "project_urls": {"Homepage": "https://github.com/lukassykora/randomForestRules"}, "release_url": "https://pypi.org/project/randomForestRules-lukassykora/1.1.1/", "requires_dist": ["pandas", "numpy", "sklearn", "typing"], "requires_python": ">=3.6", "summary": "Random forest classification rules mining package", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Random Forest Rules</h1>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>Get the representation of all rules found by sklearn RandomForestClassifier. It works in following way:</p>\n<ul>\n<li>On each feature, it applies one-hot encoding that makes each column binary.</li>\n<li>Random Forest runs on the features and a target attribute.</li>\n<li>All trees are extracted from the Random Forest Regressor.</li>\n<li>Decision Trees are split to classification rules.</li>\n</ul>\n<h2>GIT repository</h2>\n<p><a href=\"https://github.com/lukassykora/randomForestRules\" rel=\"nofollow\">https://github.com/lukassykora/randomForestRules</a></p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomForestRules</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestRules</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"data/audiology.csv\"</span><span class=\"p\">)</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-\"</span><span class=\"p\">)</span> <span class=\"c1\"># underscore not allowed</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'target'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'binaryClass'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"s2\">\"P\"</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\"># target musts be numerical</span>\n<span class=\"c1\"># All feature columns</span>\n<span class=\"n\">cols</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">col</span> <span class=\"o\">!=</span> <span class=\"s1\">'binaryClass'</span> <span class=\"ow\">and</span> <span class=\"n\">col</span> <span class=\"o\">!=</span> <span class=\"s1\">'target'</span><span class=\"p\">:</span>\n        <span class=\"n\">cols</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"p\">)</span>\n<span class=\"c1\"># Initialize</span>\n<span class=\"n\">randomForest</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestRules</span><span class=\"p\">()</span>\n<span class=\"c1\"># Load data</span>\n<span class=\"n\">randomForest</span><span class=\"o\">.</span><span class=\"n\">load_pandas</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span>\n<span class=\"c1\"># Fit</span>\n<span class=\"n\">randomForest</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">antecedents</span> <span class=\"o\">=</span> <span class=\"n\">cols</span><span class=\"p\">,</span> <span class=\"n\">consequent</span> <span class=\"o\">=</span> <span class=\"s1\">'target'</span><span class=\"p\">,</span> <span class=\"n\">supp</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">,</span> <span class=\"n\">conf</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get result</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">randomForest</span><span class=\"o\">.</span><span class=\"n\">get_frame</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6817032, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "77fd6a1fa167c4d253b4e1e927953b82", "sha256": "269419f91146dc3ca46a656635d3f950d6e5857c274f8f5b471ff9363eaa7482"}, "downloads": -1, "filename": "randomForestRules_lukassykora-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "77fd6a1fa167c4d253b4e1e927953b82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4818, "upload_time": "2020-03-08T08:26:22", "upload_time_iso_8601": "2020-03-08T08:26:22.091039Z", "url": "https://files.pythonhosted.org/packages/eb/ae/1b815f06ed4fe9faad178296c57ce11de614d5198f5100a4691b283b84cb/randomForestRules_lukassykora-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c19a1d7b32403c33f5c9e248892b121c", "sha256": "2246b103edcd5634397e1600eda5c65e55daf56784aff54e2bc87cb6b826ff18"}, "downloads": -1, "filename": "randomForestRules-lukassykora-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c19a1d7b32403c33f5c9e248892b121c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3936, "upload_time": "2020-03-08T08:26:24", "upload_time_iso_8601": "2020-03-08T08:26:24.158676Z", "url": "https://files.pythonhosted.org/packages/06/8c/217664c8419122411e7d4b1f93c51a238f70aa5fc164271fcac927bc28cb/randomForestRules-lukassykora-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f711282cce5c2aa41c4e6fd8bc2db5da", "sha256": "8161b323f4541503d5bbb4916c6d69e11db747b5539b850decbfb45e779dce53"}, "downloads": -1, "filename": "randomForestRules_lukassykora-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f711282cce5c2aa41c4e6fd8bc2db5da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5559, "upload_time": "2020-03-15T20:36:45", "upload_time_iso_8601": "2020-03-15T20:36:45.144400Z", "url": "https://files.pythonhosted.org/packages/02/39/813325ec9c1f8586ec00e2389bdda2371ed5caaa8910f2204ec58ef09405/randomForestRules_lukassykora-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ad313559462dd630334db529ca1424a", "sha256": "af472defb8b278a13aa4fe98d54fe51662eb82c86edca6062e5b26250af744e0"}, "downloads": -1, "filename": "randomForestRules-lukassykora-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8ad313559462dd630334db529ca1424a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4805, "upload_time": "2020-03-15T20:36:46", "upload_time_iso_8601": "2020-03-15T20:36:46.649123Z", "url": "https://files.pythonhosted.org/packages/d2/ac/a264f69a07940d8db74df060ed32f65249f4bd6cd336324b9fbce53f038a/randomForestRules-lukassykora-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "72c181242fed5d41adcbce5cc2b4cabe", "sha256": "c68f94705361d07e2a02d445541a99e6f56b626b4b1138f341ead9a5fc0d820b"}, "downloads": -1, "filename": "randomForestRules_lukassykora-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "72c181242fed5d41adcbce5cc2b4cabe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5554, "upload_time": "2020-03-15T20:40:19", "upload_time_iso_8601": "2020-03-15T20:40:19.276052Z", "url": "https://files.pythonhosted.org/packages/96/1f/cfc55040441a8999c9a93e2ff9d344e3eda8d6d795e1ba3e4d911c7379bf/randomForestRules_lukassykora-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcd94a8277e58258355882002332ed99", "sha256": "0953e6d17143b48406060629d92f572793c859c3cd9a618a6c331b0d0f5b78c5"}, "downloads": -1, "filename": "randomForestRules-lukassykora-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dcd94a8277e58258355882002332ed99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4799, "upload_time": "2020-03-15T20:40:20", "upload_time_iso_8601": "2020-03-15T20:40:20.463038Z", "url": "https://files.pythonhosted.org/packages/f4/82/1e1509a9ffc090852e1c3ace9f53c4c9fea90f3fbe17baca4d4f53840308/randomForestRules-lukassykora-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72c181242fed5d41adcbce5cc2b4cabe", "sha256": "c68f94705361d07e2a02d445541a99e6f56b626b4b1138f341ead9a5fc0d820b"}, "downloads": -1, "filename": "randomForestRules_lukassykora-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "72c181242fed5d41adcbce5cc2b4cabe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5554, "upload_time": "2020-03-15T20:40:19", "upload_time_iso_8601": "2020-03-15T20:40:19.276052Z", "url": "https://files.pythonhosted.org/packages/96/1f/cfc55040441a8999c9a93e2ff9d344e3eda8d6d795e1ba3e4d911c7379bf/randomForestRules_lukassykora-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcd94a8277e58258355882002332ed99", "sha256": "0953e6d17143b48406060629d92f572793c859c3cd9a618a6c331b0d0f5b78c5"}, "downloads": -1, "filename": "randomForestRules-lukassykora-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dcd94a8277e58258355882002332ed99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4799, "upload_time": "2020-03-15T20:40:20", "upload_time_iso_8601": "2020-03-15T20:40:20.463038Z", "url": "https://files.pythonhosted.org/packages/f4/82/1e1509a9ffc090852e1c3ace9f53c4c9fea90f3fbe17baca4d4f53840308/randomForestRules-lukassykora-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:39 2020"}