{"info": {"author": "Federico Ceratto", "author_email": "federico.ceratto@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Environment :: X11 Applications :: GTK", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Security"], "description": "\n\n.. image:: https://pypip.in/download/dns-firewall/badge.svg\n    :target: https://pypi.python.org/pypi/dns-firewall/\n    :alt: Downloads\n\n.. image:: https://pypip.in/version/dns-firewall/badge.svg\n    :target: https://pypi.python.org/pypi/dns-firewall/\n    :alt: Latest Version\n\n.. image:: https://pypip.in/license/dns-firewall/badge.svg\n    :target: https://pypi.python.org/pypi/dns-firewall/\n    :alt: License\n\n.. image:: https://pypip.in/implementation/dns-firewall/badge.svg\n    :target: https://pypi.python.org/pypi/dns-firewall/\n    :alt: Supported Python implementations\n    \nDNS firewall\n============\n\nA proxy to inspect and mingle locally generated DNS queries.\nOptional tray icon an Gtk interface.\n\nRationale \n--------- \n \nInspecting and filtering DNS traffic generated by desktop applications can be tricky. \nTools like tcpdump have no way to tell which running process generated a DNS query. \nAlso, Netfilter cannot filter traffic by domain name and many domains resolve to IP addresses that change frequently. \n  \nA typical use case is to monitor browser, browsers plugins and extensions for suspicious home-calling or malicious/tracking javascript, or other application leaking data through DNS queries. \n \ndns-firewall acts as a forwarding DNS resolver. It listens locally on port 53 and forwards only the allowed queries to external resolvers. \n\nIt detects the name of the process trying to resolve a domain name and applies filtering rules based on that. \n\nFeatures\n--------\n\n* Block DNS queries by application and domain, or return configurable IP addresses\n* Tray icon with activity indicators\n* Log window to inspect recent activity\n* Optionally resolve names using the Tor network\n\nUsage\n-----\n\nCreate conf.yaml from conf.yaml.example\n\nBinding to UDP port 53 is required. You can run the process as root or install\nand configure authbind::\n\n   sudo apt-get install authbind\n   sudo touch /etc/authbind/byport/53\n   authbind --depth 2 ./dns_firewall/main.py conf.yaml\n\n   # or\n\n   sudo ./dns_firewall/main.py conf.yaml\n\nAdd --tray to enable the tray icon and Gtk interface. Left-click on the tray icon to display the log window.\n\nUpdate your /etc/resolv.conf with \"nameserver 127.0.0.1\"\n\nDevelopment status\n------------------\n\nIn development. Testing and contributions are welcome!\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FedericoCeratto/dns-firewall", "keywords": "desktop security", "license": "AGPLv3+", "maintainer": null, "maintainer_email": null, "name": "dns-firewall", "package_url": "https://pypi.org/project/dns-firewall/", "platform": "Linux", "project_url": "https://pypi.org/project/dns-firewall/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/FedericoCeratto/dns-firewall"}, "release_url": "https://pypi.org/project/dns-firewall/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "Local DNS Firewall", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/dns-firewall/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb2994b970b0effde2767bfa1050d548ccfbb19d/68747470733a2f2f70797069702e696e2f646f776e6c6f61642f646e732d6669726577616c6c2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dns-firewall/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6a32046db2f148de143a92b98ac4978a4d74fe0/68747470733a2f2f70797069702e696e2f76657273696f6e2f646e732d6669726577616c6c2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dns-firewall/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34db5720479389f6f6c80081caa743b74f8554fb/68747470733a2f2f70797069702e696e2f6c6963656e73652f646e732d6669726577616c6c2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dns-firewall/\" rel=\"nofollow\"><img alt=\"Supported Python implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31649b613db8e16b67b403040e520987f0662385/68747470733a2f2f70797069702e696e2f696d706c656d656e746174696f6e2f646e732d6669726577616c6c2f62616467652e737667\"></a>\n<div id=\"dns-firewall\">\n<h2>DNS firewall</h2>\n<p>A proxy to inspect and mingle locally generated DNS queries.\nOptional tray icon an Gtk interface.</p>\n<div id=\"rationale\">\n<h3>Rationale</h3>\n<p>Inspecting and filtering DNS traffic generated by desktop applications can be tricky.\nTools like tcpdump have no way to tell which running process generated a DNS query.\nAlso, Netfilter cannot filter traffic by domain name and many domains resolve to IP addresses that change frequently.</p>\n<p>A typical use case is to monitor browser, browsers plugins and extensions for suspicious home-calling or malicious/tracking javascript, or other application leaking data through DNS queries.</p>\n<p>dns-firewall acts as a forwarding DNS resolver. It listens locally on port 53 and forwards only the allowed queries to external resolvers.</p>\n<p>It detects the name of the process trying to resolve a domain name and applies filtering rules based on that.</p>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Block DNS queries by application and domain, or return configurable IP addresses</li>\n<li>Tray icon with activity indicators</li>\n<li>Log window to inspect recent activity</li>\n<li>Optionally resolve names using the Tor network</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Create conf.yaml from conf.yaml.example</p>\n<p>Binding to UDP port 53 is required. You can run the process as root or install\nand configure authbind:</p>\n<pre>sudo apt-get install authbind\nsudo touch /etc/authbind/byport/53\nauthbind --depth 2 ./dns_firewall/main.py conf.yaml\n\n# or\n\nsudo ./dns_firewall/main.py conf.yaml\n</pre>\n<p>Add \u2013tray to enable the tray icon and Gtk interface. Left-click on the tray icon to display the log window.</p>\n<p>Update your /etc/resolv.conf with \u201cnameserver 127.0.0.1\u201d</p>\n</div>\n<div id=\"development-status\">\n<h3>Development status</h3>\n<p>In development. Testing and contributions are welcome!</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1358710, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "eb001a61ae50a6b8bf34f90c4b2b0161", "sha256": "57de5a10d41b3ab4bda0ec1bc8e6d7da1c9572b188af9d174f79c4c10a582e6c"}, "downloads": -1, "filename": "dns-firewall-0.0.4.tar.gz", "has_sig": false, "md5_digest": "eb001a61ae50a6b8bf34f90c4b2b0161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13749, "upload_time": "2014-12-23T12:14:37", "upload_time_iso_8601": "2014-12-23T12:14:37.736288Z", "url": "https://files.pythonhosted.org/packages/c4/e1/ac503e193adce7a1a892d507c21eaa1e5f7cef903daae0b7ee4445e51825/dns-firewall-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb001a61ae50a6b8bf34f90c4b2b0161", "sha256": "57de5a10d41b3ab4bda0ec1bc8e6d7da1c9572b188af9d174f79c4c10a582e6c"}, "downloads": -1, "filename": "dns-firewall-0.0.4.tar.gz", "has_sig": false, "md5_digest": "eb001a61ae50a6b8bf34f90c4b2b0161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13749, "upload_time": "2014-12-23T12:14:37", "upload_time_iso_8601": "2014-12-23T12:14:37.736288Z", "url": "https://files.pythonhosted.org/packages/c4/e1/ac503e193adce7a1a892d507c21eaa1e5f7cef903daae0b7ee4445e51825/dns-firewall-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:06 2020"}