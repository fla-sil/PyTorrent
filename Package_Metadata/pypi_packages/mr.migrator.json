{"info": {"author": "Alex Clark", "author_email": "aclark@aclark.net", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Topic :: Software Development :: Build Tools"], "description": "Mr.Migrator: Drive-by transmogrification made easy!\n===================================================\n\nmr.migrator is a transmogrifier pipeline runner, either\nvia the commandline or as a Plone add-on.\n\n- Code repository: http://github.com/collective/mr.migrator\n- Questions and comments to http://github.com/collective/mr.migrator/issues\n- Report bugs at http://github.com/collective/mr.migrator/issues\n\n.. contents::\n\nIntroduction\n------------\n\nTransmogrifier is a powerful tool for creating transformation processes called \"pipelines\".\nTransmogrifier gives you the tools to create and share these pipelines but doesn't provide\nan easy way to run the pipeline. Mr.migrator aims to bridge that gap.\n\nMr.Migrator provides the following:\n\n- A buildout recipe with which you can override a given pipeline.\n- A commandline script (with help) which lets you run pipelines and see their progress. This\n  is useful when used in conjunction with `transmogrify.ploneremote`_ or other blueprints which\n  are not expected to be run inside the `Plone`_ process.\n- A Plone plugin that once installed lets you pick which pipeline you want to run,\n  provides a form to override the pipeline options and then provides progress on the running\n  pipeline. This is useful when you want to use `plone.app.transmogrifier`_ blueprints\n  that should be run inside the `Plone`_ process.\n\nGetting a pipeline\n------------------\n\nA pipeline is a concept from `collective.transmogrifier`_ where dictionary items pass through a series\nof steps, each adding, removing or uploading information to an external source. A pipeline\nis configured in configuration file using the INI style syntax. Mr.Migrator lets you run either\npipelines you built yourself, or\n\nBuild your own pipeline\n~~~~~~~~~~~~~~~~~~~~~~~\nsee collective.transmogrifer `pipelines`_ for more details.\n\nOnce you've created your pipeline .cfg you can use it on the commandline via ::\n\n migrate --pipeline=mypipeline.cfg\n\nor if installing via buildout ::\n\n  [migrate]\n  recipe = mr.migrator\n  pipeline = mypipeline.cfg\n\nIf you're using blueprints in your pipeline you will need to ensure that zcml configuration\nthat registers them is executed. If you are using buildout you can use the following ::\n\n  [buildout]\n  parts += mr.migrator\n\n  [migrator]\n  recipe = mr.migrator\n  pipeline = mypipeline.cfg\n  eggs = transmogrify.sqlalchemy\n  zcml = transmogrify.sqlalchemy\n\nThis will ensure that the package that contains the blueprints is downloaded and the zcml for it\nis run before the pipeline is run so that the blueprints are registered.\n\nIf you aren't using buildout you can will need to tell the runner which packages to load zcml in via ::\n\n migrate --zcml=transmogrify.sqlalchemy,transmogrify.other\n\nIf you the blueprint package includes the following entry_point you can skip the zcml settings above ::\n\n  entry-points = {\"z3c.autoinclude.plugin\":['target = transmogrify']}\n\n\nThere currently isn't a way to run a custom pipeline if using the Plone plugin. You will have\nto register it as below.\n\nUsing a Registered Pipeline\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf a pipeline has been registered inside another package via zcml such as ::\n\n    <configure\n        xmlns=\"http://namespaces.zope.org/zope\"\n        xmlns:transmogrifier=\"http://namespaces.plone.org/transmogrifier\"\n        i18n_domain=\"collective.transmogrifier\">\n\n    <transmogrifier:registerConfig\n        name=\"exampleconfig\"\n        title=\"Example pipeline configuration\"\n        description=\"This is an example pipeline configuration\"\n        configuration=\"example.cfg\"\n        />\n\n    </configure>\n\nand the package has an entry point that will enable the zcml to be loaded such as ::\n\n      entry_points = {\"z3c.autoinclude.plugin\":['target = transmogrify']}\n\nThen you can get mr.migrator to run that pipeline via ::\n\n  migrate --pipeline=exampleconfig\n\nor ::\n\n  [migrate]\n  recipe = mr.migrator\n  pipeline = exampleconfig\n\nAn example of a package which declares a pipeline designed to be overridden is `funnelweb`_.\n\n\nOverriding pipeline values\n--------------------------\n\nPipelines are organised as a series of steps through which crawled items pass before eventually being\nuploaded. Each step as one or more configuration options so you can customise import process\nfor your needs. Almost all imports will require some level of configurations.\n\nThe first part of each configuration key is the step e.g. `crawler`. The second part is the particular\nconfiguration option for that particular step. e.g. `url`. This is then followed by = and value or values.\n\nThe configuration options can either be given as part of the buildout part e.g. ::\n\n  [buildout]\n  parts += mr.migrator\n\n  [mr.migrator]\n  recipe = mr.migrator\n  crawler-url=http://www.whitehouse.gov\n\nor the same option can be overridden via the command line ::\n\n $> bin/migrate --crawler:url=http://www.whitehouse.gov\n\nsome options require multiple lines within a buildout part. These can be overridden\nvia the commandline by repeating the same argument e.g. ::\n\n  $> bin/migrate --crawler:ignore=\\.mp3 --crawler:ignore=\\.pdf\n\n\nYou use the commandline help to view the list of available options ::\n\n  $> bin/migrate --help\n\n\n\nControlling Logging\n~~~~~~~~~~~~~~~~~~~\n\nYou can show additional debug output on any particular set by setting a debug commandline switch.\nFor instance to see see additional details about template matching failures ::\n\n  $> bin/mr.migrator --template1:debug\n  \n  \n\nWorking directly with transmogrifier (advanced)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou might need to insert further transformation steps for your particular\nconversion usecase. To do this, you can extend a plugins underlying\ntransmogrifier pipeline. mr.migrator uses a transmogrifier pipeline to perform the needed transformations and all\ncommandline and recipe options refer to options in the pipeline.\n\n\nYou can view pipeline and all its options via the following command ::\n\n $> bin/mr.migrator --show-pipeline\n\nYou can also save this pipeline and customise it for your own needs ::\n\n $> bin/mr.migrator --show-pipeline > pipeline.cfg\n $> {edit} pipeline.cfg\n $> bin/mr.migrator --pipeline=pipeline.cfg\n\nCustomising the pipeline allows you add your own personal transformations which\nhaven't been pre-considered by the standard mr.migrator tool.\n\nSee transmogrifier documentation to see how to add your own blueprints or add blueprints that\nalready exist to your custom pipeline.\n\nUsing external blueprints\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you have decided you need to customise your pipeline and you want to install transformation\nsteps that use blueprints not already included in mr.migrator or transmogrifier, you can include\nthem using the ``eggs`` option in a mr.migrator buildout part ::\n\n  [mr.migrator]\n  recipe = mr.migrator\n  eggs = myblueprintpackage\n  pipeline = mypipeline.cfg\n\nHowever, this only works if your blueprint package includes the following setuptools entrypoint\nin its ``setup.py`` ::\n\n      entry_points=\"\"\"\n            [z3c.autoinclude.plugin]\n            target = transmogrify\n            \"\"\",\n            )\n\n.. NOTE:: Some transmogrifier blueprints assume they are running inside a Plone\n   process such as those in `plone.app.transmogrifier` (see http://pypi.python.org/pypi/plone.app.transmogrifier).  mr.migrator\n   doesn't run inside a Plone process so these blueprints won't work. If\n   you want upload content into Plone, you can instead use\n   transmogrify.ploneremote which provides alternative implementations\n   which will upload content remotely via XML-RPC.\n   ``transmogrify.ploneremote`` is already included in funnelweb as it is\n   what funnelweb's default pipeline uses.\n\nHelp syntax for pipeline configuration\n--------------------------------------\n\nTODO\n\nMr.Migrator in Plone\n--------------------\n\n***under development***\n\nMr.Migrator needs to be combined with a package providing a registered pipeline.\n\n1. Install mr.migrator into your buildout\n2. Install a package providing your pipeline such as funnelweb or collective.jsonmigrator\n3. Go to the place in your site where you want to import content and select Actions > Mr.Migrate here (alternatively, open the URL ``@@mr.migrator``)\n4. Pick the pipeline you want from the drop down list\n5. A form for filling in extra configuration for your pipeline will displayed\n   (either autogenerated from the .cfg or a form designed by the pipeline author)\n6. Click run\n7. Popup a progress feedback dialog with a log of activity\n\nTODO\n----\n\n- Finish autoform so works in all cases\n- combine argsparse and autoform code\n- do progress dialog\n- hook point for packages to register form along with pipeline\n- when no pipelines found: display help on where to find them and how to install them\n\n\nContributing\n------------\n\n- Code repository: http://github.com/collective/mr.migrator\n- Questions and comments to http://github.com/collective/mr.migrator/issues\n- Report bugs at http://github.com/collective/mr.migrator/issues\n\n\nThanks\n------\n\n- Alex Clark - for the name\n- Rok Garbas - the original code for the z3cform\n- Dylan Jay - the original code of the commandline runner\n\n\n.. _`pipelines`: http://pypi.python.org/pypi/collective.transmogrifier/#pipelines\n.. _`collective.transmogrifier`: http://pypi.python.org/pypi/collective.transmogrifier\n.. _`funnelweb`: http://pypi.python.org/pypi/funnelweb\n.. _`plone`: http://plone.org\n.. _`plone.app.transmogrifier`: http://pypi.python.org/pypi/plone.app.transmogrifier\n.. _`transmogrify.ploneremote`: http://pypi.python.org/pypi/transmogrify.ploneremote\n\n\n\nContributors\n============\n\n* \"Dylan Jay\", Author\n* \"Alex Clark\", Maintainer\n* \"Leonardo J. Caballero G.\", Tester, Spanish translator\n\nChangelog\n=========\n\n1.2 (2017-05-15)\n----------------\n\n- Add Spanish translation.\n  [macagua]\n\n- Added more improvements about i18n support.\n  [macagua]\n\n- Added Buildout configuration file for Plone 4.3.x version.\n  [macagua]\n\n- Fix IOError: [Errno 2] No such file or directory: mr/migrator/autoinclude.zcml missing file.\n  [macagua]\n\n- Updated Buildout configuration file for Plone 3.3.x version.\n  [macagua]\n\n- Fix form problem with security hotfix 20160830\n  [agitator]\n\n\n1.1 (2015-10-22)\n----------------\n\n- Remove browserlayer registration, so the ``mr.migrator`` doesn't have to be\n  installed to be used. Calling ``/@@mr.migrator`` is enough.\n\n- Add uninstallation profile.\n  [thet]\n\n- Allow any pipeline configuration to be imported through the web at the\n  ``@@mr.migrator`` view. Previously, only those pipelines were shown, which\n  had a ``plone.app.transmogrifier.atschemaupdater`` blueprint included. Now\n  any pipelines can be used, e.g. those which handle only Dexterity objects.\n  [thet]\n\n- Pep8.\n  [thet]\n\n\n1.0.1 (2012-09-18)\n------------------\n\n- put back in manual zcml loading [djay]\n\n1.0 (2012-04-28)\n----------------\n- fix setup.py issue breaking buildout [djay]\n- fixed NameError: global name 'cparser' is not defined, issue #6 [gborelli]\n- fix default profile [toutpt]\n- fix import error [toutpt]\n\n1.0b11 (2012-04-25)\n-------------------\n- support pipeline includes [djay]\n\n1.0b10 (2012-01-23)\n-------------------\n\n- Revert portion of ec799dcd3d, causing ConfigurationErrors\n  [aclark]\n\n1.0b9 (2012-01-23)\n------------------\n\n- Fix brown bag release (bad MANIFEST)\n  [aclark]\n\n1.0b8 (2012-01-23)\n------------------\n\n- Fix brown bag release (missing zcml)\n  [aclark]\n\n1.0b7 (2012-01-23)\n------------------\n\n- Look for pipeline.cfg in cwd\n  [aclark]\n\n1.0b6 (2012-01-23)\n------------------\n\n- Fix brown bag release\n  [aclark]\n\n1.0b5 (2012-01-22)\n------------------\n\n- Bug fix: support for --zcml arguments\n  [aclark]\n\n1.0b4 (2011-08-14)\n------------------\n\n- Bug fix: ZCML config\n  [aclark]\n\n1.0b3 (2011-08-14)\n------------------\n\n- Bug fix: ZCML config\n  [aclark]\n\n1.0b2 (2011-08-14)\n------------------\n\n- Bug fix: Python 2.4 compat\n  [aclark]\n\n1.0b1 (2011-06-29)\n------------------\n\n- allow way of running zcml for blueprint packages in commandline\n  [djay]\n\n- split out commandline runner from funnelweb\n  [djay]\n\n- add start of form for running transmogrifier inside plone\n  [djay]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/mr.migrator", "keywords": "buildout crawler spider plone transmogrifierless", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "mr.migrator", "package_url": "https://pypi.org/project/mr.migrator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mr.migrator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/mr.migrator"}, "release_url": "https://pypi.org/project/mr.migrator/1.2/", "requires_dist": null, "requires_python": null, "summary": "Drive-by transmogrifiction made easy!", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mr-migrator-drive-by-transmogrification-made-easy\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Mr.Migrator: Drive-by transmogrification made easy!</a></h2>\n<p>mr.migrator is a transmogrifier pipeline runner, either\nvia the commandline or as a Plone add-on.</p>\n<ul>\n<li>Code repository: <a href=\"http://github.com/collective/mr.migrator\" rel=\"nofollow\">http://github.com/collective/mr.migrator</a></li>\n<li>Questions and comments to <a href=\"http://github.com/collective/mr.migrator/issues\" rel=\"nofollow\">http://github.com/collective/mr.migrator/issues</a></li>\n<li>Report bugs at <a href=\"http://github.com/collective/mr.migrator/issues\" rel=\"nofollow\">http://github.com/collective/mr.migrator/issues</a></li>\n</ul>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#mr-migrator-drive-by-transmogrification-made-easy\" id=\"id5\" rel=\"nofollow\">Mr.Migrator: Drive-by transmogrification made easy!</a><ul>\n<li><a href=\"#introduction\" id=\"id6\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#getting-a-pipeline\" id=\"id7\" rel=\"nofollow\">Getting a pipeline</a><ul>\n<li><a href=\"#build-your-own-pipeline\" id=\"id8\" rel=\"nofollow\">Build your own pipeline</a></li>\n<li><a href=\"#using-a-registered-pipeline\" id=\"id9\" rel=\"nofollow\">Using a Registered Pipeline</a></li>\n</ul>\n</li>\n<li><a href=\"#overriding-pipeline-values\" id=\"id10\" rel=\"nofollow\">Overriding pipeline values</a><ul>\n<li><a href=\"#controlling-logging\" id=\"id11\" rel=\"nofollow\">Controlling Logging</a></li>\n<li><a href=\"#working-directly-with-transmogrifier-advanced\" id=\"id12\" rel=\"nofollow\">Working directly with transmogrifier (advanced)</a></li>\n<li><a href=\"#using-external-blueprints\" id=\"id13\" rel=\"nofollow\">Using external blueprints</a></li>\n</ul>\n</li>\n<li><a href=\"#help-syntax-for-pipeline-configuration\" id=\"id14\" rel=\"nofollow\">Help syntax for pipeline configuration</a></li>\n<li><a href=\"#mr-migrator-in-plone\" id=\"id15\" rel=\"nofollow\">Mr.Migrator in Plone</a></li>\n<li><a href=\"#todo\" id=\"id16\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#contributing\" id=\"id17\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#thanks\" id=\"id18\" rel=\"nofollow\">Thanks</a></li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id19\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#changelog\" id=\"id20\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id21\" rel=\"nofollow\">1.2 (2017-05-15)</a></li>\n<li><a href=\"#id2\" id=\"id22\" rel=\"nofollow\">1.1 (2015-10-22)</a></li>\n<li><a href=\"#id3\" id=\"id23\" rel=\"nofollow\">1.0.1 (2012-09-18)</a></li>\n<li><a href=\"#id4\" id=\"id24\" rel=\"nofollow\">1.0 (2012-04-28)</a></li>\n<li><a href=\"#b11-2012-04-25\" id=\"id25\" rel=\"nofollow\">1.0b11 (2012-04-25)</a></li>\n<li><a href=\"#b10-2012-01-23\" id=\"id26\" rel=\"nofollow\">1.0b10 (2012-01-23)</a></li>\n<li><a href=\"#b9-2012-01-23\" id=\"id27\" rel=\"nofollow\">1.0b9 (2012-01-23)</a></li>\n<li><a href=\"#b8-2012-01-23\" id=\"id28\" rel=\"nofollow\">1.0b8 (2012-01-23)</a></li>\n<li><a href=\"#b7-2012-01-23\" id=\"id29\" rel=\"nofollow\">1.0b7 (2012-01-23)</a></li>\n<li><a href=\"#b6-2012-01-23\" id=\"id30\" rel=\"nofollow\">1.0b6 (2012-01-23)</a></li>\n<li><a href=\"#b5-2012-01-22\" id=\"id31\" rel=\"nofollow\">1.0b5 (2012-01-22)</a></li>\n<li><a href=\"#b4-2011-08-14\" id=\"id32\" rel=\"nofollow\">1.0b4 (2011-08-14)</a></li>\n<li><a href=\"#b3-2011-08-14\" id=\"id33\" rel=\"nofollow\">1.0b3 (2011-08-14)</a></li>\n<li><a href=\"#b2-2011-08-14\" id=\"id34\" rel=\"nofollow\">1.0b2 (2011-08-14)</a></li>\n<li><a href=\"#b1-2011-06-29\" id=\"id35\" rel=\"nofollow\">1.0b1 (2011-06-29)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Introduction</a></h3>\n<p>Transmogrifier is a powerful tool for creating transformation processes called \u201cpipelines\u201d.\nTransmogrifier gives you the tools to create and share these pipelines but doesn\u2019t provide\nan easy way to run the pipeline. Mr.migrator aims to bridge that gap.</p>\n<p>Mr.Migrator provides the following:</p>\n<ul>\n<li>A buildout recipe with which you can override a given pipeline.</li>\n<li>A commandline script (with help) which lets you run pipelines and see their progress. This\nis useful when used in conjunction with <a href=\"http://pypi.python.org/pypi/transmogrify.ploneremote\" rel=\"nofollow\">transmogrify.ploneremote</a> or other blueprints which\nare not expected to be run inside the <a href=\"http://plone.org\" rel=\"nofollow\">Plone</a> process.</li>\n<li>A Plone plugin that once installed lets you pick which pipeline you want to run,\nprovides a form to override the pipeline options and then provides progress on the running\npipeline. This is useful when you want to use <a href=\"http://pypi.python.org/pypi/plone.app.transmogrifier\" rel=\"nofollow\">plone.app.transmogrifier</a> blueprints\nthat should be run inside the <a href=\"http://plone.org\" rel=\"nofollow\">Plone</a> process.</li>\n</ul>\n</div>\n<div id=\"getting-a-pipeline\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Getting a pipeline</a></h3>\n<p>A pipeline is a concept from <a href=\"http://pypi.python.org/pypi/collective.transmogrifier\" rel=\"nofollow\">collective.transmogrifier</a> where dictionary items pass through a series\nof steps, each adding, removing or uploading information to an external source. A pipeline\nis configured in configuration file using the INI style syntax. Mr.Migrator lets you run either\npipelines you built yourself, or</p>\n<div id=\"build-your-own-pipeline\">\n<h4><a href=\"#id8\" rel=\"nofollow\">Build your own pipeline</a></h4>\n<p>see collective.transmogrifer <a href=\"http://pypi.python.org/pypi/collective.transmogrifier/#pipelines\" rel=\"nofollow\">pipelines</a> for more details.</p>\n<p>Once you\u2019ve created your pipeline .cfg you can use it on the commandline via</p>\n<pre>migrate --pipeline=mypipeline.cfg\n</pre>\n<p>or if installing via buildout</p>\n<pre>[migrate]\nrecipe = mr.migrator\npipeline = mypipeline.cfg\n</pre>\n<p>If you\u2019re using blueprints in your pipeline you will need to ensure that zcml configuration\nthat registers them is executed. If you are using buildout you can use the following</p>\n<pre>[buildout]\nparts += mr.migrator\n\n[migrator]\nrecipe = mr.migrator\npipeline = mypipeline.cfg\neggs = transmogrify.sqlalchemy\nzcml = transmogrify.sqlalchemy\n</pre>\n<p>This will ensure that the package that contains the blueprints is downloaded and the zcml for it\nis run before the pipeline is run so that the blueprints are registered.</p>\n<p>If you aren\u2019t using buildout you can will need to tell the runner which packages to load zcml in via</p>\n<pre>migrate --zcml=transmogrify.sqlalchemy,transmogrify.other\n</pre>\n<p>If you the blueprint package includes the following entry_point you can skip the zcml settings above</p>\n<pre>entry-points = {\"z3c.autoinclude.plugin\":['target = transmogrify']}\n</pre>\n<p>There currently isn\u2019t a way to run a custom pipeline if using the Plone plugin. You will have\nto register it as below.</p>\n</div>\n<div id=\"using-a-registered-pipeline\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Using a Registered Pipeline</a></h4>\n<p>If a pipeline has been registered inside another package via zcml such as</p>\n<pre>&lt;configure\n    xmlns=\"http://namespaces.zope.org/zope\"\n    xmlns:transmogrifier=\"http://namespaces.plone.org/transmogrifier\"\n    i18n_domain=\"collective.transmogrifier\"&gt;\n\n&lt;transmogrifier:registerConfig\n    name=\"exampleconfig\"\n    title=\"Example pipeline configuration\"\n    description=\"This is an example pipeline configuration\"\n    configuration=\"example.cfg\"\n    /&gt;\n\n&lt;/configure&gt;\n</pre>\n<p>and the package has an entry point that will enable the zcml to be loaded such as</p>\n<pre>entry_points = {\"z3c.autoinclude.plugin\":['target = transmogrify']}\n</pre>\n<p>Then you can get mr.migrator to run that pipeline via</p>\n<pre>migrate --pipeline=exampleconfig\n</pre>\n<p>or</p>\n<pre>[migrate]\nrecipe = mr.migrator\npipeline = exampleconfig\n</pre>\n<p>An example of a package which declares a pipeline designed to be overridden is <a href=\"http://pypi.python.org/pypi/funnelweb\" rel=\"nofollow\">funnelweb</a>.</p>\n</div>\n</div>\n<div id=\"overriding-pipeline-values\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Overriding pipeline values</a></h3>\n<p>Pipelines are organised as a series of steps through which crawled items pass before eventually being\nuploaded. Each step as one or more configuration options so you can customise import process\nfor your needs. Almost all imports will require some level of configurations.</p>\n<p>The first part of each configuration key is the step e.g. <cite>crawler</cite>. The second part is the particular\nconfiguration option for that particular step. e.g. <cite>url</cite>. This is then followed by = and value or values.</p>\n<p>The configuration options can either be given as part of the buildout part e.g.</p>\n<pre>[buildout]\nparts += mr.migrator\n\n[mr.migrator]\nrecipe = mr.migrator\ncrawler-url=http://www.whitehouse.gov\n</pre>\n<p>or the same option can be overridden via the command line</p>\n<pre>$&gt; bin/migrate --crawler:url=http://www.whitehouse.gov\n</pre>\n<p>some options require multiple lines within a buildout part. These can be overridden\nvia the commandline by repeating the same argument e.g.</p>\n<pre>$&gt; bin/migrate --crawler:ignore=\\.mp3 --crawler:ignore=\\.pdf\n</pre>\n<p>You use the commandline help to view the list of available options</p>\n<pre>$&gt; bin/migrate --help\n</pre>\n<div id=\"controlling-logging\">\n<h4><a href=\"#id11\" rel=\"nofollow\">Controlling Logging</a></h4>\n<p>You can show additional debug output on any particular set by setting a debug commandline switch.\nFor instance to see see additional details about template matching failures</p>\n<pre>$&gt; bin/mr.migrator --template1:debug\n</pre>\n</div>\n<div id=\"working-directly-with-transmogrifier-advanced\">\n<h4><a href=\"#id12\" rel=\"nofollow\">Working directly with transmogrifier (advanced)</a></h4>\n<p>You might need to insert further transformation steps for your particular\nconversion usecase. To do this, you can extend a plugins underlying\ntransmogrifier pipeline. mr.migrator uses a transmogrifier pipeline to perform the needed transformations and all\ncommandline and recipe options refer to options in the pipeline.</p>\n<p>You can view pipeline and all its options via the following command</p>\n<pre>$&gt; bin/mr.migrator --show-pipeline\n</pre>\n<p>You can also save this pipeline and customise it for your own needs</p>\n<pre>$&gt; bin/mr.migrator --show-pipeline &gt; pipeline.cfg\n$&gt; {edit} pipeline.cfg\n$&gt; bin/mr.migrator --pipeline=pipeline.cfg\n</pre>\n<p>Customising the pipeline allows you add your own personal transformations which\nhaven\u2019t been pre-considered by the standard mr.migrator tool.</p>\n<p>See transmogrifier documentation to see how to add your own blueprints or add blueprints that\nalready exist to your custom pipeline.</p>\n</div>\n<div id=\"using-external-blueprints\">\n<h4><a href=\"#id13\" rel=\"nofollow\">Using external blueprints</a></h4>\n<p>If you have decided you need to customise your pipeline and you want to install transformation\nsteps that use blueprints not already included in mr.migrator or transmogrifier, you can include\nthem using the <tt>eggs</tt> option in a mr.migrator buildout part</p>\n<pre>[mr.migrator]\nrecipe = mr.migrator\neggs = myblueprintpackage\npipeline = mypipeline.cfg\n</pre>\n<p>However, this only works if your blueprint package includes the following setuptools entrypoint\nin its <tt>setup.py</tt></p>\n<pre>entry_points=\"\"\"\n      [z3c.autoinclude.plugin]\n      target = transmogrify\n      \"\"\",\n      )\n</pre>\n<div>\n<p>Note</p>\n<p>Some transmogrifier blueprints assume they are running inside a Plone\nprocess such as those in <cite>plone.app.transmogrifier</cite> (see <a href=\"http://pypi.python.org/pypi/plone.app.transmogrifier\" rel=\"nofollow\">http://pypi.python.org/pypi/plone.app.transmogrifier</a>).  mr.migrator\ndoesn\u2019t run inside a Plone process so these blueprints won\u2019t work. If\nyou want upload content into Plone, you can instead use\ntransmogrify.ploneremote which provides alternative implementations\nwhich will upload content remotely via XML-RPC.\n<tt>transmogrify.ploneremote</tt> is already included in funnelweb as it is\nwhat funnelweb\u2019s default pipeline uses.</p>\n</div>\n</div>\n</div>\n<div id=\"help-syntax-for-pipeline-configuration\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Help syntax for pipeline configuration</a></h3>\n<p>TODO</p>\n</div>\n<div id=\"mr-migrator-in-plone\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Mr.Migrator in Plone</a></h3>\n<p><strong>*under development*</strong></p>\n<p>Mr.Migrator needs to be combined with a package providing a registered pipeline.</p>\n<ol>\n<li>Install mr.migrator into your buildout</li>\n<li>Install a package providing your pipeline such as funnelweb or collective.jsonmigrator</li>\n<li>Go to the place in your site where you want to import content and select Actions &gt; Mr.Migrate here (alternatively, open the URL <tt>@@mr.migrator</tt>)</li>\n<li>Pick the pipeline you want from the drop down list</li>\n<li>A form for filling in extra configuration for your pipeline will displayed\n(either autogenerated from the .cfg or a form designed by the pipeline author)</li>\n<li>Click run</li>\n<li>Popup a progress feedback dialog with a log of activity</li>\n</ol>\n</div>\n<div id=\"todo\">\n<h3><a href=\"#id16\" rel=\"nofollow\">TODO</a></h3>\n<ul>\n<li>Finish autoform so works in all cases</li>\n<li>combine argsparse and autoform code</li>\n<li>do progress dialog</li>\n<li>hook point for packages to register form along with pipeline</li>\n<li>when no pipelines found: display help on where to find them and how to install them</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Contributing</a></h3>\n<ul>\n<li>Code repository: <a href=\"http://github.com/collective/mr.migrator\" rel=\"nofollow\">http://github.com/collective/mr.migrator</a></li>\n<li>Questions and comments to <a href=\"http://github.com/collective/mr.migrator/issues\" rel=\"nofollow\">http://github.com/collective/mr.migrator/issues</a></li>\n<li>Report bugs at <a href=\"http://github.com/collective/mr.migrator/issues\" rel=\"nofollow\">http://github.com/collective/mr.migrator/issues</a></li>\n</ul>\n</div>\n<div id=\"thanks\">\n<h3><a href=\"#id18\" rel=\"nofollow\">Thanks</a></h3>\n<ul>\n<li>Alex Clark - for the name</li>\n<li>Rok Garbas - the original code for the z3cform</li>\n<li>Dylan Jay - the original code of the commandline runner</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Contributors</a></h2>\n<ul>\n<li>\u201cDylan Jay\u201d, Author</li>\n<li>\u201cAlex Clark\u201d, Maintainer</li>\n<li>\u201cLeonardo J. Caballero G.\u201d, Tester, Spanish translator</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id21\" rel=\"nofollow\">1.2 (2017-05-15)</a></h3>\n<ul>\n<li>Add Spanish translation.\n[macagua]</li>\n<li>Added more improvements about i18n support.\n[macagua]</li>\n<li>Added Buildout configuration file for Plone 4.3.x version.\n[macagua]</li>\n<li>Fix IOError: [Errno 2] No such file or directory: mr/migrator/autoinclude.zcml missing file.\n[macagua]</li>\n<li>Updated Buildout configuration file for Plone 3.3.x version.\n[macagua]</li>\n<li>Fix form problem with security hotfix 20160830\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id22\" rel=\"nofollow\">1.1 (2015-10-22)</a></h3>\n<ul>\n<li>Remove browserlayer registration, so the <tt>mr.migrator</tt> doesn\u2019t have to be\ninstalled to be used. Calling <tt><span class=\"pre\">/@@mr.migrator</span></tt> is enough.</li>\n<li>Add uninstallation profile.\n[thet]</li>\n<li>Allow any pipeline configuration to be imported through the web at the\n<tt>@@mr.migrator</tt> view. Previously, only those pipelines were shown, which\nhad a <tt>plone.app.transmogrifier.atschemaupdater</tt> blueprint included. Now\nany pipelines can be used, e.g. those which handle only Dexterity objects.\n[thet]</li>\n<li>Pep8.\n[thet]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id23\" rel=\"nofollow\">1.0.1 (2012-09-18)</a></h3>\n<ul>\n<li>put back in manual zcml loading [djay]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id24\" rel=\"nofollow\">1.0 (2012-04-28)</a></h3>\n<ul>\n<li>fix setup.py issue breaking buildout [djay]</li>\n<li>fixed NameError: global name \u2018cparser\u2019 is not defined, issue #6 [gborelli]</li>\n<li>fix default profile [toutpt]</li>\n<li>fix import error [toutpt]</li>\n</ul>\n</div>\n<div id=\"b11-2012-04-25\">\n<h3><a href=\"#id25\" rel=\"nofollow\">1.0b11 (2012-04-25)</a></h3>\n<ul>\n<li>support pipeline includes [djay]</li>\n</ul>\n</div>\n<div id=\"b10-2012-01-23\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.0b10 (2012-01-23)</a></h3>\n<ul>\n<li>Revert portion of ec799dcd3d, causing ConfigurationErrors\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b9-2012-01-23\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.0b9 (2012-01-23)</a></h3>\n<ul>\n<li>Fix brown bag release (bad MANIFEST)\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b8-2012-01-23\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.0b8 (2012-01-23)</a></h3>\n<ul>\n<li>Fix brown bag release (missing zcml)\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b7-2012-01-23\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.0b7 (2012-01-23)</a></h3>\n<ul>\n<li>Look for pipeline.cfg in cwd\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b6-2012-01-23\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.0b6 (2012-01-23)</a></h3>\n<ul>\n<li>Fix brown bag release\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b5-2012-01-22\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.0b5 (2012-01-22)</a></h3>\n<ul>\n<li>Bug fix: support for \u2013zcml arguments\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b4-2011-08-14\">\n<h3><a href=\"#id32\" rel=\"nofollow\">1.0b4 (2011-08-14)</a></h3>\n<ul>\n<li>Bug fix: ZCML config\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b3-2011-08-14\">\n<h3><a href=\"#id33\" rel=\"nofollow\">1.0b3 (2011-08-14)</a></h3>\n<ul>\n<li>Bug fix: ZCML config\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b2-2011-08-14\">\n<h3><a href=\"#id34\" rel=\"nofollow\">1.0b2 (2011-08-14)</a></h3>\n<ul>\n<li>Bug fix: Python 2.4 compat\n[aclark]</li>\n</ul>\n</div>\n<div id=\"b1-2011-06-29\">\n<h3><a href=\"#id35\" rel=\"nofollow\">1.0b1 (2011-06-29)</a></h3>\n<ul>\n<li>allow way of running zcml for blueprint packages in commandline\n[djay]</li>\n<li>split out commandline runner from funnelweb\n[djay]</li>\n<li>add start of form for running transmogrifier inside plone\n[djay]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2874461, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8ae7032c0856796d675c819a133bce28", "sha256": "43ea597e76ebdf3b8e4fd7b1516f7805eacc0892a9d800f951147808a21eef55"}, "downloads": -1, "filename": "mr.migrator-1.0.tar.gz", "has_sig": false, "md5_digest": "8ae7032c0856796d675c819a133bce28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20098, "upload_time": "2012-06-28T15:31:25", "upload_time_iso_8601": "2012-06-28T15:31:25.365204Z", "url": "https://files.pythonhosted.org/packages/a7/90/b6f54454d74703e23c7b3f431c10bb247c5a4f0f522ef5316ff0bc50a72a/mr.migrator-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7de72933fccb2dacef21e000db4cc95", "sha256": "a42dd29061067840eecd8a3ccf7763056d8a707bdf2a5f24943f9eba518692e7"}, "downloads": -1, "filename": "mr.migrator-1.0.zip", "has_sig": false, "md5_digest": "f7de72933fccb2dacef21e000db4cc95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34494, "upload_time": "2012-06-28T14:37:38", "upload_time_iso_8601": "2012-06-28T14:37:38.019600Z", "url": "https://files.pythonhosted.org/packages/cf/2a/7e96e348790921debced70d2ae68bd2acca3b22b55d873496575b5def19c/mr.migrator-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "49eabaddf1fd24dae1a1fd0d10992965", "sha256": "71a8aee55c8edd2c215f0274dfeaf79afcb7985a0f0d1d30b736bc6ff0f3d51d"}, "downloads": -1, "filename": "mr.migrator-1.0.1.zip", "has_sig": false, "md5_digest": "49eabaddf1fd24dae1a1fd0d10992965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 653853, "upload_time": "2012-09-19T03:49:58", "upload_time_iso_8601": "2012-09-19T03:49:58.467411Z", "url": "https://files.pythonhosted.org/packages/a5/e2/e7e040eb7e50811967031f199586ceedd3d736282d9a0b95028d77fc6341/mr.migrator-1.0.1.zip", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "504c76be8a57d2dcfaefe4e1fb157036", "sha256": "fecf0b605d8cc7755e040cdeba6a93e78147f6ae133b1a281b659ff02d50e618"}, "downloads": -1, "filename": "mr.migrator-1.0b1.zip", "has_sig": false, "md5_digest": "504c76be8a57d2dcfaefe4e1fb157036", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26769, "upload_time": "2011-06-29T17:40:39", "upload_time_iso_8601": "2011-06-29T17:40:39.526443Z", "url": "https://files.pythonhosted.org/packages/8f/d8/5c20db0016289323a5562e521455543d431826e53b52c07dce2eea465d67/mr.migrator-1.0b1.zip", "yanked": false}], "1.0b10": [{"comment_text": "", "digests": {"md5": "8af435b986a97d6eec002c598b8918f0", "sha256": "9ff8ce3af4bec1cb9fd4790a09d25a7784766798e5aa01152874ffb9c5381418"}, "downloads": -1, "filename": "mr.migrator-1.0b10.tar.gz", "has_sig": false, "md5_digest": "8af435b986a97d6eec002c598b8918f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13521, "upload_time": "2012-01-23T17:32:45", "upload_time_iso_8601": "2012-01-23T17:32:45.432360Z", "url": "https://files.pythonhosted.org/packages/e7/e8/a97de95573aecc501a426722beec5cf5eaf681f3dd067b12d17c26519289/mr.migrator-1.0b10.tar.gz", "yanked": false}], "1.0b11": [{"comment_text": "", "digests": {"md5": "b83de64ea3e1ab5591afbe6b370bcae0", "sha256": "aab5095b38cf68d1c139ee5fbf8560ae70eac6a047c50fbd9ccee35259fe9ea9"}, "downloads": -1, "filename": "mr.migrator-1.0b11.zip", "has_sig": false, "md5_digest": "b83de64ea3e1ab5591afbe6b370bcae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34376, "upload_time": "2012-04-25T09:44:52", "upload_time_iso_8601": "2012-04-25T09:44:52.235801Z", "url": "https://files.pythonhosted.org/packages/be/3b/5cd6b49c480f7eb5c2100b53a09f2a9dcb3f5e0b4d1dd494c666ef6b5b52/mr.migrator-1.0b11.zip", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "a80a1d248b87d7afe5237c29bc6cf86a", "sha256": "a30f865ddd4861069e34fea9ee5c62641ea6c1b64d21a2dff4148256213ee16a"}, "downloads": -1, "filename": "mr.migrator-1.0b2.zip", "has_sig": false, "md5_digest": "a80a1d248b87d7afe5237c29bc6cf86a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31477, "upload_time": "2011-08-14T18:13:47", "upload_time_iso_8601": "2011-08-14T18:13:47.612464Z", "url": "https://files.pythonhosted.org/packages/d2/90/47adbd2767dbf56e9955818c5c0ef582edf78a9aca7f397663c5f16e7945/mr.migrator-1.0b2.zip", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "6fc21e1e8cfe58dd3c3fc4096489cc47", "sha256": "f135afd28dbc5dbb51af29867753a2499d00dd05b5018cef3c575a35c58590f3"}, "downloads": -1, "filename": "mr.migrator-1.0b3.zip", "has_sig": false, "md5_digest": "6fc21e1e8cfe58dd3c3fc4096489cc47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31537, "upload_time": "2011-08-15T02:01:42", "upload_time_iso_8601": "2011-08-15T02:01:42.220415Z", "url": "https://files.pythonhosted.org/packages/78/bf/5fce4fa9d15f40002879499129860ec6e83326ad2211d1e22b5778d5903e/mr.migrator-1.0b3.zip", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "ee2049d6c286a9397aa0d794184cdf29", "sha256": "f2d122969a4ce0690968a3cc18774f8af1a17bd6d04b8943b794bb141204726b"}, "downloads": -1, "filename": "mr.migrator-1.0b4.zip", "has_sig": false, "md5_digest": "ee2049d6c286a9397aa0d794184cdf29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31628, "upload_time": "2011-08-15T02:14:30", "upload_time_iso_8601": "2011-08-15T02:14:30.687699Z", "url": "https://files.pythonhosted.org/packages/a1/29/7e595e4e58588f74137abf30503edc29f9eef96ff9c31ea74a0f60059752/mr.migrator-1.0b4.zip", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "43eddf81f3057400d53bef0da840b43e", "sha256": "90112c69da038be5a00403eabb699963ae52c55accaa441b174cb0ea67721e58"}, "downloads": -1, "filename": "mr.migrator-1.0b5.tar.gz", "has_sig": false, "md5_digest": "43eddf81f3057400d53bef0da840b43e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10902, "upload_time": "2012-01-23T03:11:37", "upload_time_iso_8601": "2012-01-23T03:11:37.109630Z", "url": "https://files.pythonhosted.org/packages/ca/5c/eb140639bf33ca8fb6ed4efad5d1f78527d37d9004cde74883a79cbb0306/mr.migrator-1.0b5.tar.gz", "yanked": false}], "1.0b6": [{"comment_text": "", "digests": {"md5": "4f565cd829f36b74c4d587c0d89d5e4f", "sha256": "ec382cbe16b85ec13c9df09d502a3793c61aec9d16cb0933b11bf336d1500fe3"}, "downloads": -1, "filename": "mr.migrator-1.0b6.tar.gz", "has_sig": false, "md5_digest": "4f565cd829f36b74c4d587c0d89d5e4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19141, "upload_time": "2012-01-23T14:05:53", "upload_time_iso_8601": "2012-01-23T14:05:53.161710Z", "url": "https://files.pythonhosted.org/packages/24/b2/083515c87c73da589cf813f7fe7a8297d1ccd79e90977f16bd863579de77/mr.migrator-1.0b6.tar.gz", "yanked": false}], "1.0b7": [{"comment_text": "", "digests": {"md5": "308b6d386176507d254356b279705cd7", "sha256": "c3b7074220428089f800ca2168dfe3d4865d223171e26250dbe1e6e9bb7a1ab6"}, "downloads": -1, "filename": "mr.migrator-1.0b7.tar.gz", "has_sig": false, "md5_digest": "308b6d386176507d254356b279705cd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12085, "upload_time": "2012-01-23T15:18:13", "upload_time_iso_8601": "2012-01-23T15:18:13.915998Z", "url": "https://files.pythonhosted.org/packages/f1/93/b6fb813fab192ed1dbbffa78e4b68a21bc273561bf9f41fd02af17259484/mr.migrator-1.0b7.tar.gz", "yanked": false}], "1.0b8": [{"comment_text": "", "digests": {"md5": "f7cd3e69b26c228ca918a0fb2d81d552", "sha256": "06c4fdbcf403e87391ee89351c5006dad096f39ae118cdf6a80ce365661c23a4"}, "downloads": -1, "filename": "mr.migrator-1.0b8.tar.gz", "has_sig": false, "md5_digest": "f7cd3e69b26c228ca918a0fb2d81d552", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12102, "upload_time": "2012-01-23T15:46:57", "upload_time_iso_8601": "2012-01-23T15:46:57.478211Z", "url": "https://files.pythonhosted.org/packages/65/d9/0ed95521319fbf0d7385f757806f6efd83693c963dbf83baf1834b5fe4c1/mr.migrator-1.0b8.tar.gz", "yanked": false}], "1.0b9": [{"comment_text": "", "digests": {"md5": "a95dfa0e241f48f1db0f63f6d86330b5", "sha256": "5fde731635d0c178d509c3556f96cfdd124c6a8d6efea2d7887477f106b4c1b6"}, "downloads": -1, "filename": "mr.migrator-1.0b9.tar.gz", "has_sig": false, "md5_digest": "a95dfa0e241f48f1db0f63f6d86330b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13376, "upload_time": "2012-01-23T16:46:32", "upload_time_iso_8601": "2012-01-23T16:46:32.350924Z", "url": "https://files.pythonhosted.org/packages/44/b2/d9fe1e9238988a9951a44b403f06e5c4ca61fef4405524b10b35759b5079/mr.migrator-1.0b9.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a90b087081b1ae8b8f97f9a981fef5cc", "sha256": "0629a4d0304e3fcd2a35224706ef91b99bd6d6df2f0bb0000715e48d0b721580"}, "downloads": -1, "filename": "mr.migrator-1.1.tar.gz", "has_sig": false, "md5_digest": "a90b087081b1ae8b8f97f9a981fef5cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19336, "upload_time": "2015-10-22T21:26:39", "upload_time_iso_8601": "2015-10-22T21:26:39.610129Z", "url": "https://files.pythonhosted.org/packages/6b/80/f2c59b563e87d63aa463b5843eecc4a22703bf8f5ef37945d1b77c8d1966/mr.migrator-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "f597fcc10fc2f095d80b9b76d6c5f4bb", "sha256": "e619e8183715de902196abbfea3ffd6f6f012eb49f11867411fc4a2aaaac4760"}, "downloads": -1, "filename": "mr.migrator-1.2.tar.gz", "has_sig": false, "md5_digest": "f597fcc10fc2f095d80b9b76d6c5f4bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39974, "upload_time": "2017-05-15T03:53:33", "upload_time_iso_8601": "2017-05-15T03:53:33.096820Z", "url": "https://files.pythonhosted.org/packages/41/d6/1309751a99b7f43a8637b3b65f958cc26e18776f28344c9dd5417d283cae/mr.migrator-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f597fcc10fc2f095d80b9b76d6c5f4bb", "sha256": "e619e8183715de902196abbfea3ffd6f6f012eb49f11867411fc4a2aaaac4760"}, "downloads": -1, "filename": "mr.migrator-1.2.tar.gz", "has_sig": false, "md5_digest": "f597fcc10fc2f095d80b9b76d6c5f4bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39974, "upload_time": "2017-05-15T03:53:33", "upload_time_iso_8601": "2017-05-15T03:53:33.096820Z", "url": "https://files.pythonhosted.org/packages/41/d6/1309751a99b7f43a8637b3b65f958cc26e18776f28344c9dd5417d283cae/mr.migrator-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:00 2020"}