{"info": {"author": "EGA team", "author_email": "ega-helpdesk@ebi.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "EGA python client - pyEGA3\npyEGA3 uses the EGA REST API to download authorized datasets and files\n\nCurrently works only with Python3\n\nREQUIREMENTS:\nPython \"requests\" module\nhttp://docs.python-requests.org/en/master/\npip3 install requests\n\nFirewall Ports\nThis client makes https calls to the EGA AAI (https://ega.ebi.ac.uk:8443/) and to the EGA Data API (https://ega.ebi.ac.uk:8051). Both ports 8443 and 8051 must be reachable from the location where this client script is run. Otherwise you will experience timeouts.\n(e.g. https://ega.ebi.ac.uk:8443/ega-openid-connect-server/, https://ega.ebi.ac.uk:8051/elixir/central/stats/load should not time out).\n----------------------------------------------------------------------------------\nINSTALLATION via Pip:\nsudo pip3 install pyega3\n----------------------------------------------------------------------------------\nINSTALLATION via Conda(Bioconda channel):\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda install pyega3\n----------------------------------------------------------------------------------\nUSAGE:\npyega3 [-h] [-d] -cf CREDENTIALS_FILE [-c CONNECTIONS] {datasets,files,fetch} ...\n\nDownload from EMBL EBI's EGA (European Genome-phenome Archive)\n\npositional arguments:\n  {datasets,files,fetch}\n                        subcommands\n    datasets            List authorized datasets\n    files               List files in a specified dataset\n    fetch               Fetch a dataset or file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --debug           Extra debugging messages\n  -t, --test            Use the default test user credential to run the script\n  -cf CREDENTIALS_FILE, --credentials-file CREDENTIALS_FILE\n                        JSON file containing credentials\n                        e.g.{'username':'user1','password':'toor'}\n  -sf server_file, --server-file server_file\n                        JSON file containing server credentials\n                        e.g.{'url_auth':'aai url','url_api':'api url','url_api_ticket':'htsget url','client_secret':'secret'}\n  -c CONNECTIONS, --connections CONNECTIONS\n                        Download using specified number of connections                      \n                        \n----------------------------------------------------------------------------------\n\nHow to define your Credential file:\nYour username and password are provided to you by EGA.\n\nCreate a file called credential_file.json and place it in the directory from where the client will run.\nIdeally, this file has to be saved in .json format and should contain your registered EGA email address and EGA password.\nExample format https://github.com/EGA-archive/ega-download-client/blob/master/pyega3/config/default_credential_file.json\n\n----------------------------------------------------------------------------------\n\nIn order to test/check your usage of the API we have created a test user account which can be used using the following commands:\n1. pyega3 -t datasets\n2. pyega3 -t files EGAD00001003338\n3. pyega3 -t fetch EGAF00001775036\n\n----------------------------------------------------------------------------------\n\nParallelism ( download via multiple connections ) works on the file level, \nbut still usable while downloading whole dataset. \nIf -c command line switch is provided all big files (>100Mb) in the \ndataset will be downloaded using specified # of connections.\n\nThe number of connections breaks down individual file downloads into segments, \nwhich are then downloaded in parallel. So using a very high number actually \nintroduces overhead that slows down the download of the file.\nFiles are still downloaded in sequence \u2013 so multiple connections doesn't mean \ndownloading multiple files in parallel, if an entire dataset is being downloaded.\n\n----------------------------------------------------------------------------------\n\nGENOMIC RANGE REQUESTS ( via Htsget protocol ) :\n\nusage: pyega3 fetch [-h] [--reference-name REFERENCE_NAME]\n                    [--reference-md5 REFERENCE_MD5] [--start START]\n                    [--end END] [--format {BAM,CRAM}] [--saveto [SAVETO]]\n                    identifier\n\npositional arguments:\n  identifier            Id for dataset (e.g. EGAD00000000001) or file (e.g.\n                        EGAF12345678901)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --reference-name REFERENCE_NAME, -r REFERENCE_NAME\n                        The reference sequence name, for example 'chr1', '1',\n                        or 'chrX'. If unspecified, all data is returned.\n  --reference-md5 REFERENCE_MD5, -m REFERENCE_MD5\n                        The MD5 checksum uniquely representing the requested\n                        reference sequence as a lower-case hexadecimal string,\n                        calculated as the MD5 of the upper-case sequence\n                        excluding all whitespace characters.\n  --start START, -s START\n                        The start position of the range on the reference,\n                        0-based, inclusive. If specified, reference-name or\n                        reference-md5 must also be specified.\n  --end END, -e END     The end position of the range on the reference,\n                        0-based exclusive. If specified, reference-name or\n                        reference-md5 must also be specified.\n  --format {BAM,CRAM}, -f {BAM,CRAM}\n                        The format of data to request.\n  --max-retries MAX_RETRIES, -M MAX_RETRIES\n                        The maximum number of times to retry a failed\n                        transfer. Any negative number means infinite number of\n                        retries( default value = 5 ).\n  --retry-wait RETRY_WAIT, -W RETRY_WAIT\n                        The number of seconds to wait before retrying a failed\n                        transfer( default value = 5 ).\n  --saveto [SAVETO]     Output file(for files)/output dir(for datasets)\n  \n  \nHow to debug and provide the output to the EGA Helpdesk team?\n-------------------------------------------------------------\n\nWhen attempting your download always make sure that you are using the most up-to-date version of the Python Client, which can be always found on the current page.\n\nWe encourage our users facing download failures to contact us here on Helpdesk (ega-helpdesk@ebi.ac.uk). In order to expedite the trouble shooting process we would need the output from your debug attempts. Examples of which are detailed below -\n\nUsers facing access issues\n--------------------------\n\nnohup pyega3 -d -cf  /Path/To/CREDENTIAL_FILE datasets > /Path/To/Output.txt\n\nUsers facing issues listing the files in a dataset\n---------------------------------------------------\npyega3 -d -cf  /Path/To/CREDENTIAL_FILE files EGAD00001000740\n\nUsers facing download issues\n----------------------------\n1.Make sure you have access to the dataset/s you are trying to download using the following command\n\npyega3 -cf  /Path/To/CREDENTIAL_FILE datasets\n\n2.Try to list out the files in the dataset of interest using the following command.\n\npyega3 -d -cf  /Path/To/CREDENTIAL_FILE files EGAD00000000000\n\nThe output of which will also provide you with the file size. It is recommended that you select a file of small size for the next step\n\n3.Finally, please try and pull down this file using the debug mode. \n\npyega3 -d -cf  /Path/To/CREDENTIAL_FILE fetch EGAF00000000000\n\nThe debug flag (-d) will generate a log which can be forwarded to our Helpdesk members. The contents of the debug output will provide us with more clues to the state of your downloads and are needed to query the errors and return codes that your attempts will receive.", "description_content_type": "text/plain", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EGA-archive/ega-download-client", "keywords": "EGA,archive", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "pyega3", "package_url": "https://pypi.org/project/pyega3/", "platform": "", "project_url": "https://pypi.org/project/pyega3/", "project_urls": {"Homepage": "https://github.com/EGA-archive/ega-download-client"}, "release_url": "https://pypi.org/project/pyega3/3.0.44/", "requires_dist": null, "requires_python": "", "summary": "EGA python client", "version": "3.0.44", "yanked": false, "html_description": "<div class=\"project-description\">\n            EGA python client - pyEGA3<br>pyEGA3 uses the EGA REST API to download authorized datasets and files<br><br>Currently works only with Python3<br><br>REQUIREMENTS:<br>Python \"requests\" module<br>http://docs.python-requests.org/en/master/<br>pip3 install requests<br><br>Firewall Ports<br>This client makes https calls to the EGA AAI (https://ega.ebi.ac.uk:8443/) and to the EGA Data API (https://ega.ebi.ac.uk:8051). Both ports 8443 and 8051 must be reachable from the location where this client script is run. Otherwise you will experience timeouts.<br>(e.g. https://ega.ebi.ac.uk:8443/ega-openid-connect-server/, https://ega.ebi.ac.uk:8051/elixir/central/stats/load should not time out).<br>----------------------------------------------------------------------------------<br>INSTALLATION via Pip:<br>sudo pip3 install pyega3<br>----------------------------------------------------------------------------------<br>INSTALLATION via Conda(Bioconda channel):<br>conda config --add channels bioconda<br>conda config --add channels conda-forge<br>conda install pyega3<br>----------------------------------------------------------------------------------<br>USAGE:<br>pyega3 [-h] [-d] -cf CREDENTIALS_FILE [-c CONNECTIONS] {datasets,files,fetch} ...<br><br>Download from EMBL EBI's EGA (European Genome-phenome Archive)<br><br>positional arguments:<br>  {datasets,files,fetch}<br>                        subcommands<br>    datasets            List authorized datasets<br>    files               List files in a specified dataset<br>    fetch               Fetch a dataset or file<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -d, --debug           Extra debugging messages<br>  -t, --test            Use the default test user credential to run the script<br>  -cf CREDENTIALS_FILE, --credentials-file CREDENTIALS_FILE<br>                        JSON file containing credentials<br>                        e.g.{'username':'user1','password':'toor'}<br>  -sf server_file, --server-file server_file<br>                        JSON file containing server credentials<br>                        e.g.{'url_auth':'aai url','url_api':'api url','url_api_ticket':'htsget url','client_secret':'secret'}<br>  -c CONNECTIONS, --connections CONNECTIONS<br>                        Download using specified number of connections                      <br>                        <br>----------------------------------------------------------------------------------<br><br>How to define your Credential file:<br>Your username and password are provided to you by EGA.<br><br>Create a file called credential_file.json and place it in the directory from where the client will run.<br>Ideally, this file has to be saved in .json format and should contain your registered EGA email address and EGA password.<br>Example format https://github.com/EGA-archive/ega-download-client/blob/master/pyega3/config/default_credential_file.json<br><br>----------------------------------------------------------------------------------<br><br>In order to test/check your usage of the API we have created a test user account which can be used using the following commands:<br>1. pyega3 -t datasets<br>2. pyega3 -t files EGAD00001003338<br>3. pyega3 -t fetch EGAF00001775036<br><br>----------------------------------------------------------------------------------<br><br>Parallelism ( download via multiple connections ) works on the file level, <br>but still usable while downloading whole dataset. <br>If -c command line switch is provided all big files (&gt;100Mb) in the <br>dataset will be downloaded using specified # of connections.<br><br>The number of connections breaks down individual file downloads into segments, <br>which are then downloaded in parallel. So using a very high number actually <br>introduces overhead that slows down the download of the file.<br>Files are still downloaded in sequence \u2013 so multiple connections doesn't mean <br>downloading multiple files in parallel, if an entire dataset is being downloaded.<br><br>----------------------------------------------------------------------------------<br><br>GENOMIC RANGE REQUESTS ( via Htsget protocol ) :<br><br>usage: pyega3 fetch [-h] [--reference-name REFERENCE_NAME]<br>                    [--reference-md5 REFERENCE_MD5] [--start START]<br>                    [--end END] [--format {BAM,CRAM}] [--saveto [SAVETO]]<br>                    identifier<br><br>positional arguments:<br>  identifier            Id for dataset (e.g. EGAD00000000001) or file (e.g.<br>                        EGAF12345678901)<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --reference-name REFERENCE_NAME, -r REFERENCE_NAME<br>                        The reference sequence name, for example 'chr1', '1',<br>                        or 'chrX'. If unspecified, all data is returned.<br>  --reference-md5 REFERENCE_MD5, -m REFERENCE_MD5<br>                        The MD5 checksum uniquely representing the requested<br>                        reference sequence as a lower-case hexadecimal string,<br>                        calculated as the MD5 of the upper-case sequence<br>                        excluding all whitespace characters.<br>  --start START, -s START<br>                        The start position of the range on the reference,<br>                        0-based, inclusive. If specified, reference-name or<br>                        reference-md5 must also be specified.<br>  --end END, -e END     The end position of the range on the reference,<br>                        0-based exclusive. If specified, reference-name or<br>                        reference-md5 must also be specified.<br>  --format {BAM,CRAM}, -f {BAM,CRAM}<br>                        The format of data to request.<br>  --max-retries MAX_RETRIES, -M MAX_RETRIES<br>                        The maximum number of times to retry a failed<br>                        transfer. Any negative number means infinite number of<br>                        retries( default value = 5 ).<br>  --retry-wait RETRY_WAIT, -W RETRY_WAIT<br>                        The number of seconds to wait before retrying a failed<br>                        transfer( default value = 5 ).<br>  --saveto [SAVETO]     Output file(for files)/output dir(for datasets)<br>  <br>  <br>How to debug and provide the output to the EGA Helpdesk team?<br>-------------------------------------------------------------<br><br>When attempting your download always make sure that you are using the most up-to-date version of the Python Client, which can be always found on the current page.<br><br>We encourage our users facing download failures to contact us here on Helpdesk (ega-helpdesk@ebi.ac.uk). In order to expedite the trouble shooting process we would need the output from your debug attempts. Examples of which are detailed below -<br><br>Users facing access issues<br>--------------------------<br><br>nohup pyega3 -d -cf  /Path/To/CREDENTIAL_FILE datasets &gt; /Path/To/Output.txt<br><br>Users facing issues listing the files in a dataset<br>---------------------------------------------------<br>pyega3 -d -cf  /Path/To/CREDENTIAL_FILE files EGAD00001000740<br><br>Users facing download issues<br>----------------------------<br>1.Make sure you have access to the dataset/s you are trying to download using the following command<br><br>pyega3 -cf  /Path/To/CREDENTIAL_FILE datasets<br><br>2.Try to list out the files in the dataset of interest using the following command.<br><br>pyega3 -d -cf  /Path/To/CREDENTIAL_FILE files EGAD00000000000<br><br>The output of which will also provide you with the file size. It is recommended that you select a file of small size for the next step<br><br>3.Finally, please try and pull down this file using the debug mode. <br><br>pyega3 -d -cf  /Path/To/CREDENTIAL_FILE fetch EGAF00000000000<br><br>The debug flag (-d) will generate a log which can be forwarded to our Helpdesk members. The contents of the debug output will provide us with more clues to the state of your downloads and are needed to query the errors and return codes that your attempts will receive.\n          </div>"}, "last_serial": 6181358, "releases": {"3.0.18": [{"comment_text": "", "digests": {"md5": "8dd1c49cb639f6dcc1e2f603991476a1", "sha256": "90eca51e4a780920952a077646796b7d34c4b9be914ddfe2c32be2aa58bc9c9b"}, "downloads": -1, "filename": "pyega3-3.0.18.tar.gz", "has_sig": false, "md5_digest": "8dd1c49cb639f6dcc1e2f603991476a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10224, "upload_time": "2018-06-28T15:12:12", "upload_time_iso_8601": "2018-06-28T15:12:12.650293Z", "url": "https://files.pythonhosted.org/packages/eb/18/e28ba2b40ec9da8ce0649b31533e21157c79c74c4fa2889f1cc74b62dddd/pyega3-3.0.18.tar.gz", "yanked": false}], "3.0.19": [{"comment_text": "", "digests": {"md5": "8f5c268b8d97c2d091f00eba3368bb7d", "sha256": "3bfcf9d71201c82fefea52be3f937b62750a17f1611c54a748da0b8b7c057eee"}, "downloads": -1, "filename": "pyega3-3.0.19.tar.gz", "has_sig": false, "md5_digest": "8f5c268b8d97c2d091f00eba3368bb7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10232, "upload_time": "2018-06-28T16:12:14", "upload_time_iso_8601": "2018-06-28T16:12:14.590239Z", "url": "https://files.pythonhosted.org/packages/5f/2a/dfff2a41a9b9f16d65da7b27e6219acbf0a9f88a5ab1a0e504690d7d0c19/pyega3-3.0.19.tar.gz", "yanked": false}], "3.0.21": [{"comment_text": "", "digests": {"md5": "194ca8e8a6e9a6fcf5a131936f8e5b22", "sha256": "4ffb56a7a50a3f2b667277a46b6a453d1498da933d5f8b342f659e5720dca8ca"}, "downloads": -1, "filename": "pyega3-3.0.21.tar.gz", "has_sig": false, "md5_digest": "194ca8e8a6e9a6fcf5a131936f8e5b22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10329, "upload_time": "2018-08-29T10:26:28", "upload_time_iso_8601": "2018-08-29T10:26:28.324150Z", "url": "https://files.pythonhosted.org/packages/a5/3e/06a7a6331c40a48bd387b8a560e64abd1b3cb80e9b2c0af682eaa315cd89/pyega3-3.0.21.tar.gz", "yanked": false}], "3.0.22": [{"comment_text": "", "digests": {"md5": "2381b16ae89fe2e75888f63d949228cb", "sha256": "d1f96986e723013e2ea5f2aef9957c89726ce02546f6b00a4f220da7a9128fd4"}, "downloads": -1, "filename": "pyega3-3.0.22.tar.gz", "has_sig": false, "md5_digest": "2381b16ae89fe2e75888f63d949228cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10367, "upload_time": "2018-08-30T11:10:04", "upload_time_iso_8601": "2018-08-30T11:10:04.307276Z", "url": "https://files.pythonhosted.org/packages/ce/80/9b613032cecba26669b395ccb7792ae84fdfb70be5d50f235647897e3c17/pyega3-3.0.22.tar.gz", "yanked": false}], "3.0.23": [{"comment_text": "", "digests": {"md5": "c5de33c3567d31302be6545946885a36", "sha256": "870f6738479cf67d1ec567e02fc6d610d2532661c14221d738f96500bacfe892"}, "downloads": -1, "filename": "pyega3-3.0.23.tar.gz", "has_sig": false, "md5_digest": "c5de33c3567d31302be6545946885a36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10456, "upload_time": "2018-08-30T13:42:12", "upload_time_iso_8601": "2018-08-30T13:42:12.401663Z", "url": "https://files.pythonhosted.org/packages/e8/19/b25c2c5e74dbbd3009ff3a798057aa1ce7a8619fe9f671acab73d3b830ca/pyega3-3.0.23.tar.gz", "yanked": false}], "3.0.24": [{"comment_text": "", "digests": {"md5": "93b9577ab0b82aa1a25b90f53e34ad5f", "sha256": "a89d83208d746dd4a53e273d585ce4d0b4290314b06f1a16a6e4f88cd7259ffa"}, "downloads": -1, "filename": "pyega3-3.0.24.tar.gz", "has_sig": false, "md5_digest": "93b9577ab0b82aa1a25b90f53e34ad5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10657, "upload_time": "2018-08-31T12:47:48", "upload_time_iso_8601": "2018-08-31T12:47:48.941200Z", "url": "https://files.pythonhosted.org/packages/29/e3/be63789c2fb51cb36a81959a1a994f4d04971dc4829becd0efd722687c75/pyega3-3.0.24.tar.gz", "yanked": false}], "3.0.27": [{"comment_text": "", "digests": {"md5": "64f10f02fa672acae42721b1d5f310cb", "sha256": "983965ad8b7a699b86204afbbe4b14e9231cb57466858fa23a934451e3643028"}, "downloads": -1, "filename": "pyega3-3.0.27.tar.gz", "has_sig": false, "md5_digest": "64f10f02fa672acae42721b1d5f310cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14691, "upload_time": "2018-09-24T14:25:11", "upload_time_iso_8601": "2018-09-24T14:25:11.957219Z", "url": "https://files.pythonhosted.org/packages/6d/17/12ac364f056b40f5b0d6c48cac4f8ab142a85c413a3ea2befcb6b1c221fc/pyega3-3.0.27.tar.gz", "yanked": false}], "3.0.28": [{"comment_text": "", "digests": {"md5": "9257d767854ac1d2538f993336bf20c1", "sha256": "ebd90ff13e65f09604d375e1f6677d95f5ffd884a3105c83fde38e140a16baae"}, "downloads": -1, "filename": "pyega3-3.0.28.tar.gz", "has_sig": false, "md5_digest": "9257d767854ac1d2538f993336bf20c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14376, "upload_time": "2019-01-28T10:45:17", "upload_time_iso_8601": "2019-01-28T10:45:17.139838Z", "url": "https://files.pythonhosted.org/packages/4f/ae/463f85ca290c01a82362d77812eb89c2fe8337caa2860fc0d71a5bc8b4b9/pyega3-3.0.28.tar.gz", "yanked": false}], "3.0.29": [{"comment_text": "", "digests": {"md5": "e82a1ccf6ae4a5358b992408932197e1", "sha256": "ea23361b0b9bd758e486df8d59dbecd8fa8e12336cc6d3fd5b8d1e152cd87bb2"}, "downloads": -1, "filename": "pyega3-3.0.29.tar.gz", "has_sig": false, "md5_digest": "e82a1ccf6ae4a5358b992408932197e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14547, "upload_time": "2019-02-01T16:31:37", "upload_time_iso_8601": "2019-02-01T16:31:37.621176Z", "url": "https://files.pythonhosted.org/packages/06/b3/df0a4ce9880361f22975942d4143f6bf191c48ba14cca705689a377e3819/pyega3-3.0.29.tar.gz", "yanked": false}], "3.0.30": [{"comment_text": "", "digests": {"md5": "8662812eeb07a00d0a2c462adf20a3fc", "sha256": "10e0996fd5388667424ccdfd232c8de026e8a119aff276a542f3870fdc96b6d7"}, "downloads": -1, "filename": "pyega3-3.0.30.tar.gz", "has_sig": false, "md5_digest": "8662812eeb07a00d0a2c462adf20a3fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14557, "upload_time": "2019-02-01T16:31:33", "upload_time_iso_8601": "2019-02-01T16:31:33.770685Z", "url": "https://files.pythonhosted.org/packages/df/da/e71ef620b60263cd1cac9739121508cea49244399d54c143e6bd40dc5b4b/pyega3-3.0.30.tar.gz", "yanked": false}], "3.0.31": [{"comment_text": "", "digests": {"md5": "8c7d5957bfa217c40b02879082a2f2ef", "sha256": "4981b31a45507ecab09f7594e48e4d87fedefe998c78d288d2a95dcaa15bf6c4"}, "downloads": -1, "filename": "pyega3-3.0.31.tar.gz", "has_sig": false, "md5_digest": "8c7d5957bfa217c40b02879082a2f2ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14626, "upload_time": "2019-04-08T15:20:03", "upload_time_iso_8601": "2019-04-08T15:20:03.308659Z", "url": "https://files.pythonhosted.org/packages/d0/0e/dc0435e49326f01179e7fcc53a935953094be710cf7bc0afb9d2900f4fc3/pyega3-3.0.31.tar.gz", "yanked": false}], "3.0.32": [{"comment_text": "", "digests": {"md5": "9ed6f52f4aa39f3279304867d2c143ac", "sha256": "7f6d79e195b8ac70196f122a2aeca4412c6d80a2da1db4d538b7d9825aeeca56"}, "downloads": -1, "filename": "pyega3-3.0.32.tar.gz", "has_sig": false, "md5_digest": "9ed6f52f4aa39f3279304867d2c143ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14816, "upload_time": "2019-04-11T14:47:38", "upload_time_iso_8601": "2019-04-11T14:47:38.104591Z", "url": "https://files.pythonhosted.org/packages/9c/0c/6c752bcaaa0577e842f4758581caa978c97ac153ba9a3c1b837002353b92/pyega3-3.0.32.tar.gz", "yanked": false}], "3.0.33": [{"comment_text": "", "digests": {"md5": "73ea5fa36b2a8bc087d203f2f027a319", "sha256": "9e8ca2c5727f704d2d0302df5e2201c6756606831fe3098847769e4cabda8b2d"}, "downloads": -1, "filename": "pyega3-3.0.33.tar.gz", "has_sig": false, "md5_digest": "73ea5fa36b2a8bc087d203f2f027a319", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15221, "upload_time": "2019-04-15T14:47:51", "upload_time_iso_8601": "2019-04-15T14:47:51.669867Z", "url": "https://files.pythonhosted.org/packages/12/be/2144273ef0805f8546d7acbd63147f66b8ac5c1810e0b5549eb1ebcf542f/pyega3-3.0.33.tar.gz", "yanked": false}], "3.0.36": [{"comment_text": "", "digests": {"md5": "8cc02e8c0048dbf49dbafa82cb65aff8", "sha256": "6b227619747e3157b031d0b7e0d54489f40302d0ffb36a82832f0596460d4665"}, "downloads": -1, "filename": "pyega3-3.0.36.tar.gz", "has_sig": false, "md5_digest": "8cc02e8c0048dbf49dbafa82cb65aff8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15337, "upload_time": "2019-06-05T16:21:23", "upload_time_iso_8601": "2019-06-05T16:21:23.086688Z", "url": "https://files.pythonhosted.org/packages/7e/29/acc03d2cb33610c624cc7dcc454b71e1cc591ae480d1bbef34b09951e496/pyega3-3.0.36.tar.gz", "yanked": false}], "3.0.37": [{"comment_text": "", "digests": {"md5": "a93b6f3b611461012fb3523c22dbdb2e", "sha256": "ab08fab41760f183dfc00ef8b57064e073ae9ef7a678da9a6b03634dad8c3ebf"}, "downloads": -1, "filename": "pyega3-3.0.37.tar.gz", "has_sig": false, "md5_digest": "a93b6f3b611461012fb3523c22dbdb2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15593, "upload_time": "2019-06-17T08:56:28", "upload_time_iso_8601": "2019-06-17T08:56:28.515312Z", "url": "https://files.pythonhosted.org/packages/05/8c/2f8bbecc149df3d5de5dbe188ba55555c0300fa8143c318b48449e0c9f9e/pyega3-3.0.37.tar.gz", "yanked": false}], "3.0.38": [{"comment_text": "", "digests": {"md5": "6fb8c9794330225d1cf333980a6f4abe", "sha256": "07e6e37fd50f63478810d406ea2beb78cbbbd1be68b14bd8ee61669977438542"}, "downloads": -1, "filename": "pyega3-3.0.38.tar.gz", "has_sig": false, "md5_digest": "6fb8c9794330225d1cf333980a6f4abe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15606, "upload_time": "2019-06-17T09:09:08", "upload_time_iso_8601": "2019-06-17T09:09:08.742556Z", "url": "https://files.pythonhosted.org/packages/22/c2/6c4c7b7b982310d831436cda467bd33709a9af36ca6679ee3a56bc4db60a/pyega3-3.0.38.tar.gz", "yanked": false}], "3.0.39": [{"comment_text": "", "digests": {"md5": "c49ffdab9c709bed2af2f16d477f6337", "sha256": "6e3ffe038ce8efe0087f6e1bd92f12566b2a424366412670f3c5f01eb430694e"}, "downloads": -1, "filename": "pyega3-3.0.39.tar.gz", "has_sig": false, "md5_digest": "c49ffdab9c709bed2af2f16d477f6337", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15710, "upload_time": "2019-08-21T13:07:50", "upload_time_iso_8601": "2019-08-21T13:07:50.852149Z", "url": "https://files.pythonhosted.org/packages/f9/29/65c7e19b06b0aa8e3359558227f52703927afa531cfeffcdc27c13bac8c6/pyega3-3.0.39.tar.gz", "yanked": false}], "3.0.40": [{"comment_text": "", "digests": {"md5": "7a30c17aeeb08bc41c15b33e50beb6ad", "sha256": "f098cc60e2a066a16ab516749572a93b0f1f8d3a496db09b6420dfed321c524d"}, "downloads": -1, "filename": "pyega3-3.0.40.tar.gz", "has_sig": false, "md5_digest": "7a30c17aeeb08bc41c15b33e50beb6ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17082, "upload_time": "2019-11-01T10:58:56", "upload_time_iso_8601": "2019-11-01T10:58:56.429179Z", "url": "https://files.pythonhosted.org/packages/93/54/a3624aabb31fee9b09df10ed0745d4e2c4b6a744ca4103d14a6d21af481e/pyega3-3.0.40.tar.gz", "yanked": false}], "3.0.41": [{"comment_text": "", "digests": {"md5": "e2979c80368cb75efc550445b7b67da5", "sha256": "b0e16d631f26a0713205e33942d7213ee8afc0fc396f080fd755f055ae43a140"}, "downloads": -1, "filename": "pyega3-3.0.41.tar.gz", "has_sig": false, "md5_digest": "e2979c80368cb75efc550445b7b67da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18124, "upload_time": "2019-11-22T11:52:02", "upload_time_iso_8601": "2019-11-22T11:52:02.675555Z", "url": "https://files.pythonhosted.org/packages/c0/89/4cb62cdd53fa5c92cd800d5c254c2315d93b64b673c409b2821c6d2f0040/pyega3-3.0.41.tar.gz", "yanked": false}], "3.0.42": [{"comment_text": "", "digests": {"md5": "d86e100ec7ef23fab1b692ca40983b6c", "sha256": "616c5d6c594feab2bb1d395ea1db3764271274dc228bff5b357e4add0aa55e9f"}, "downloads": -1, "filename": "pyega3-3.0.42.tar.gz", "has_sig": false, "md5_digest": "d86e100ec7ef23fab1b692ca40983b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18125, "upload_time": "2019-11-22T12:05:47", "upload_time_iso_8601": "2019-11-22T12:05:47.926345Z", "url": "https://files.pythonhosted.org/packages/3b/e7/9ebad4bf958ff722a5ccc48e9a79694ea51523753449cdc8cc38008fddab/pyega3-3.0.42.tar.gz", "yanked": false}], "3.0.44": [{"comment_text": "", "digests": {"md5": "e266ffe62a7a2d1a81f55c0312182854", "sha256": "a2b684c9a0692526f0bd742a58a3579d1abdfe5dada6badae9b72a010cbcefde"}, "downloads": -1, "filename": "pyega3-3.0.44.tar.gz", "has_sig": false, "md5_digest": "e266ffe62a7a2d1a81f55c0312182854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18548, "upload_time": "2019-11-22T13:42:25", "upload_time_iso_8601": "2019-11-22T13:42:25.739826Z", "url": "https://files.pythonhosted.org/packages/48/ce/0ab9596a1a0ecc294e248b66eba85d913403f714ebd4aa6a1e17d2658262/pyega3-3.0.44.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e266ffe62a7a2d1a81f55c0312182854", "sha256": "a2b684c9a0692526f0bd742a58a3579d1abdfe5dada6badae9b72a010cbcefde"}, "downloads": -1, "filename": "pyega3-3.0.44.tar.gz", "has_sig": false, "md5_digest": "e266ffe62a7a2d1a81f55c0312182854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18548, "upload_time": "2019-11-22T13:42:25", "upload_time_iso_8601": "2019-11-22T13:42:25.739826Z", "url": "https://files.pythonhosted.org/packages/48/ce/0ab9596a1a0ecc294e248b66eba85d913403f714ebd4aa6a1e17d2658262/pyega3-3.0.44.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:29 2020"}