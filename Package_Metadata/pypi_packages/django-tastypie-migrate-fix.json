{"info": {"author": "Daniel Lindsley", "author_email": "daniel@toastdriven.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "===============\ndjango-tastypie\n===============\n\nCreating delicious APIs for Django apps since 2010.\n\nCurrently in beta (v0.9.14) but being used actively in production on several\nsites.\n\n\nRequirements\n============\n\nCore\n----\n\n* Python 2.6+ or Python 3.3+\n* Django 1.5+\n* dateutil (http://labix.org/python-dateutil) >= 2.1\n\nFormat Support\n--------------\n\n* XML: lxml 3 (http://lxml.de/) and defusedxml (https://pypi.python.org/pypi/defusedxml)\n* YAML: pyyaml (http://pyyaml.org/)\n* binary plist: biplist (http://explorapp.com/biplist/)\n\nOptional\n--------\n\n* HTTP Digest authentication: python3-digest (https://bitbucket.org/akoha/python-digest/)\n\n\nWhat's It Look Like?\n====================\n\nA basic example looks like::\n\n    # myapp/api.py\n    # ============\n    from tastypie.resources import ModelResource\n    from myapp.models import Entry\n\n\n    class EntryResource(ModelResource):\n        class Meta:\n            queryset = Entry.objects.all()\n\n\n    # urls.py\n    # =======\n    from django.conf.urls.defaults import *\n    from tastypie.api import Api\n    from myapp.api import EntryResource\n\n    v1_api = Api(api_name='v1')\n    v1_api.register(EntryResource())\n\n    urlpatterns = patterns('',\n        # The normal jazz here then...\n        (r'^api/', include(v1_api.urls)),\n    )\n\nThat gets you a fully working, read-write API for the ``Entry`` model that\nsupports all CRUD operations in a RESTful way. JSON/XML/YAML support is already\nthere, and it's easy to add related data/authentication/caching.\n\nYou can find more in the documentation at\nhttp://django-tastypie.readthedocs.org/.\n\n\nWhy Tastypie?\n=============\n\nThere are other, better known API frameworks out there for Django. You need to\nassess the options available and decide for yourself. That said, here are some\ncommon reasons for tastypie.\n\n* You need an API that is RESTful and uses HTTP well.\n* You want to support deep relations.\n* You DON'T want to have to write your own serializer to make the output right.\n* You want an API framework that has little magic, very flexible and maps well to\n  the problem domain.\n* You want/need XML serialization that is treated equally to JSON (and YAML is\n  there too).\n* You want to support my perceived NIH syndrome, which is less about NIH and more\n  about trying to help out friends/coworkers.\n\n\nReference Material\n==================\n\n* http://github.com/toastdriven/django-tastypie/tree/master/tests/basic shows\n  basic usage of tastypie\n* http://en.wikipedia.org/wiki/REST\n* http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n* http://www.ietf.org/rfc/rfc2616.txt\n* http://jacobian.org/writing/rest-worst-practices/\n\n\nSecurity\n========\n\nTastypie is committed to providing a flexible and secure API, and was designed\nwith many security features and options in mind. Due to the complex nature of\nAPIs and the constant discovery of new attack vectors and vulnerabilities,\nno software is immune to security holes. We rely on our community to report\nand help us investigate security issues.\n\nIf you come across a security hole **please do not open a Github issue**.\nInstead, **drop us an email** at ``tastypie-security@googlegroups.com``\n\nWe'll then work together to investigate and resolve the problem so we can\nannounce a solution along with the vulnerability.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/toastdriven/django-tastypie/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-tastypie-migrate-fix", "package_url": "https://pypi.org/project/django-tastypie-migrate-fix/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-tastypie-migrate-fix/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/toastdriven/django-tastypie/"}, "release_url": "https://pypi.org/project/django-tastypie-migrate-fix/0.10.0/", "requires_dist": null, "requires_python": null, "summary": "A flexible & capable API layer for Django.", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Creating delicious APIs for Django apps since 2010.</p>\n<p>Currently in beta (v0.9.14) but being used actively in production on several\nsites.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<div id=\"core\">\n<h3>Core</h3>\n<ul>\n<li>Python 2.6+ or Python 3.3+</li>\n<li>Django 1.5+</li>\n<li>dateutil (<a href=\"http://labix.org/python-dateutil\" rel=\"nofollow\">http://labix.org/python-dateutil</a>) &gt;= 2.1</li>\n</ul>\n</div>\n<div id=\"format-support\">\n<h3>Format Support</h3>\n<ul>\n<li>XML: lxml 3 (<a href=\"http://lxml.de/\" rel=\"nofollow\">http://lxml.de/</a>) and defusedxml (<a href=\"https://pypi.python.org/pypi/defusedxml\" rel=\"nofollow\">https://pypi.python.org/pypi/defusedxml</a>)</li>\n<li>YAML: pyyaml (<a href=\"http://pyyaml.org/\" rel=\"nofollow\">http://pyyaml.org/</a>)</li>\n<li>binary plist: biplist (<a href=\"http://explorapp.com/biplist/\" rel=\"nofollow\">http://explorapp.com/biplist/</a>)</li>\n</ul>\n</div>\n<div id=\"optional\">\n<h3>Optional</h3>\n<ul>\n<li>HTTP Digest authentication: python3-digest (<a href=\"https://bitbucket.org/akoha/python-digest/\" rel=\"nofollow\">https://bitbucket.org/akoha/python-digest/</a>)</li>\n</ul>\n</div>\n</div>\n<div id=\"what-s-it-look-like\">\n<h2>What\u2019s It Look Like?</h2>\n<p>A basic example looks like:</p>\n<pre># myapp/api.py\n# ============\nfrom tastypie.resources import ModelResource\nfrom myapp.models import Entry\n\n\nclass EntryResource(ModelResource):\n    class Meta:\n        queryset = Entry.objects.all()\n\n\n# urls.py\n# =======\nfrom django.conf.urls.defaults import *\nfrom tastypie.api import Api\nfrom myapp.api import EntryResource\n\nv1_api = Api(api_name='v1')\nv1_api.register(EntryResource())\n\nurlpatterns = patterns('',\n    # The normal jazz here then...\n    (r'^api/', include(v1_api.urls)),\n)\n</pre>\n<p>That gets you a fully working, read-write API for the <tt>Entry</tt> model that\nsupports all CRUD operations in a RESTful way. JSON/XML/YAML support is already\nthere, and it\u2019s easy to add related data/authentication/caching.</p>\n<p>You can find more in the documentation at\n<a href=\"http://django-tastypie.readthedocs.org/\" rel=\"nofollow\">http://django-tastypie.readthedocs.org/</a>.</p>\n</div>\n<div id=\"why-tastypie\">\n<h2>Why Tastypie?</h2>\n<p>There are other, better known API frameworks out there for Django. You need to\nassess the options available and decide for yourself. That said, here are some\ncommon reasons for tastypie.</p>\n<ul>\n<li>You need an API that is RESTful and uses HTTP well.</li>\n<li>You want to support deep relations.</li>\n<li>You DON\u2019T want to have to write your own serializer to make the output right.</li>\n<li>You want an API framework that has little magic, very flexible and maps well to\nthe problem domain.</li>\n<li>You want/need XML serialization that is treated equally to JSON (and YAML is\nthere too).</li>\n<li>You want to support my perceived NIH syndrome, which is less about NIH and more\nabout trying to help out friends/coworkers.</li>\n</ul>\n</div>\n<div id=\"reference-material\">\n<h2>Reference Material</h2>\n<ul>\n<li><a href=\"http://github.com/toastdriven/django-tastypie/tree/master/tests/basic\" rel=\"nofollow\">http://github.com/toastdriven/django-tastypie/tree/master/tests/basic</a> shows\nbasic usage of tastypie</li>\n<li><a href=\"http://en.wikipedia.org/wiki/REST\" rel=\"nofollow\">http://en.wikipedia.org/wiki/REST</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" rel=\"nofollow\">http://en.wikipedia.org/wiki/List_of_HTTP_status_codes</a></li>\n<li><a href=\"http://www.ietf.org/rfc/rfc2616.txt\" rel=\"nofollow\">http://www.ietf.org/rfc/rfc2616.txt</a></li>\n<li><a href=\"http://jacobian.org/writing/rest-worst-practices/\" rel=\"nofollow\">http://jacobian.org/writing/rest-worst-practices/</a></li>\n</ul>\n</div>\n<div id=\"security\">\n<h2>Security</h2>\n<p>Tastypie is committed to providing a flexible and secure API, and was designed\nwith many security features and options in mind. Due to the complex nature of\nAPIs and the constant discovery of new attack vectors and vulnerabilities,\nno software is immune to security holes. We rely on our community to report\nand help us investigate security issues.</p>\n<p>If you come across a security hole <strong>please do not open a Github issue</strong>.\nInstead, <strong>drop us an email</strong> at <tt><span class=\"pre\">tastypie-security@googlegroups.com</span></tt></p>\n<p>We\u2019ll then work together to investigate and resolve the problem so we can\nannounce a solution along with the vulnerability.</p>\n</div>\n\n          </div>"}, "last_serial": 1033400, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "13ffcbd302b50790d923f1bc0e13f089", "sha256": "e3554e430a68fc868f3cd55e363e032316a72d5035c75f4afde9c8d45831c2f5"}, "downloads": -1, "filename": "django-tastypie-migrate-fix-0.10.0.tar.gz", "has_sig": false, "md5_digest": "13ffcbd302b50790d923f1bc0e13f089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131171, "upload_time": "2014-03-18T10:15:11", "upload_time_iso_8601": "2014-03-18T10:15:11.536836Z", "url": "https://files.pythonhosted.org/packages/54/0f/e0f37f335e3bac7f2ee8dafb7f6035a0e8bf59d90b3763d2d4f904723ea9/django-tastypie-migrate-fix-0.10.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13ffcbd302b50790d923f1bc0e13f089", "sha256": "e3554e430a68fc868f3cd55e363e032316a72d5035c75f4afde9c8d45831c2f5"}, "downloads": -1, "filename": "django-tastypie-migrate-fix-0.10.0.tar.gz", "has_sig": false, "md5_digest": "13ffcbd302b50790d923f1bc0e13f089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131171, "upload_time": "2014-03-18T10:15:11", "upload_time_iso_8601": "2014-03-18T10:15:11.536836Z", "url": "https://files.pythonhosted.org/packages/54/0f/e0f37f335e3bac7f2ee8dafb7f6035a0e8bf59d90b3763d2d4f904723ea9/django-tastypie-migrate-fix-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:40 2020"}