{"info": {"author": "tryexceptpass", "author_email": "cmedina@tryexceptpass.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: AsyncIO", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Multimedia", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: User Interfaces"], "description": "[![Build Status](https://travis-ci.org/tryexceptpass/sofi.svg?branch=master)](https://travis-ci.org/tryexceptpass/sofi) [![Stories in Ready](https://badge.waffle.io/tryexceptpass/sofi.png?label=ready&title=Tasks%20Ready)](https://waffle.io/tryexceptpass/sofi) [![Join the chat at https://gitter.im/try-except-pass/sofi](https://badges.gitter.im/try-except-pass/sofi.svg)](https://gitter.im/try-except-pass/sofi?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Documentation Status](https://readthedocs.org/projects/sofi-gui-framework/badge/?version=latest)](http://sofi-gui-framework.readthedocs.io/en/latest/?badge=latest)\n[![Say Thanks!](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/tryexceptpass)\n\n## Overview\n`sofi` is an OS agnostic UI module for Python.\n\nThe main idea is to allow rapid, pythonic GUI development using standard web-based widgets from `Bootstrap` and\nother common HTML5 libraries and package them in such a way that all event processing is done within python using\n`websockets`.\n\nThis was developed as an exercise in poking at the underlying technologies and to see what comes out of merging them together. For a better overview of why it came to be, feel free to take a look at this post: [A Python Ate My GUI - Part 3: Implementation](http://tryexceptpass.org/article/a-python-ate-my-gui-3)\n\nWe're in a **beta** stage for now, feedback appreciated.\n\n## Usage\nThe `sofi.app.Sofi` object runs the main event thread with `.start()` and provides a number of functions to help manipulate the state of the user interface, which is actually a webpage opened in a browser. The `register` and `unregister` methods provide the mechanism for subscribing to events through callbacks, while the remaining functions (`append`, `replace`, `style`, etc.) wrap the commands intended to dynamically update the widgets (which are actual HTML elements).\n\nThe commands map directly to `D3` or `jQuery` methods present in the `sofi.js` library that's loaded during initialization and is responsible for performing the requested operations.\n\nFollowing basic practices from bootstrap, the widgets should be within a `Container`. The base page itself is represented with the `View` class, which wraps the necessary head, body and style tags that will contain the widgets.\n\nBelow is a quick idea of how to get things going, but check out `sample.py` for a more complicated hello world which instantiates a navbar item, adds a few links, creates some buttons, registers events and performs some timed updates.\n\n\n```python\nfrom sofi.app import Sofi\nfrom sofi.ui import Container, Paragraph, Heading, View\n\nimport json\nimport asyncio\n\n\nasync def onload(event):\n    # Every page is built on top of a View object, which contains the <head> and <body> tags that are filled in by the other objects\n    v = View()\n\n    # Make a bootstrap container in which to put all your widgets\n    c = Container()\n\n    # Add a heading and paragraph to the container\n    c.addelement(Heading(2, \"Dude!\"))\n    c.addelement(Paragraph(\"Where's My Car?\"))\n\n    # Add the container to the view\n    v.addelement(c)\n\n    # Tell the UI to load the HTML generated by the view\n    app.load(str(v))\n\n\n# Instantiate the application\napp = Sofi()\n\n# Register the event handler that runs when the UI is ready to receive commands\napp.register('init', onload)\n\n# Start the app (opens the default browser) and listen for events\napp.start()\n```\n\n## What do the widgets look like?\n\n![sample.py](https://cdn-images-1.medium.com/max/800/1*euug6f885sjtRPOMt_Vc6g.png)\n\n![timeline.py](https://cdn-images-1.medium.com/max/800/1*AmbFclbXWFdIRYbpa0cyBw.png)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tryexceptpass/sofi", "keywords": "websockets javascript bootstrap gui unity3d desktop html", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sofi", "package_url": "https://pypi.org/project/sofi/", "platform": "", "project_url": "https://pypi.org/project/sofi/", "project_urls": {"Documentation": "http://sofi-gui-framework.readthedocs.io/en/latest/", "Gitter Chat": "https://gitter.im/try-except-pass/sofi", "Homepage": "https://github.com/tryexceptpass/sofi", "Say Thanks!": "https://saythanks.io/to/tryexceptpass", "Source": "https://github.com/tryexceptpass/sofi"}, "release_url": "https://pypi.org/project/sofi/0.3.9/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Desktop and Web GUI framework based on WebSockets", "version": "0.3.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/tryexceptpass/sofi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1401fb30d45b7b154d6fcd2af8403e7f8c635ca/68747470733a2f2f7472617669732d63692e6f72672f747279657863657074706173732f736f66692e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://waffle.io/tryexceptpass/sofi\" rel=\"nofollow\"><img alt=\"Stories in Ready\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a201fe93c3919879f141b5ec6c2a03b561d59e4/68747470733a2f2f62616467652e776166666c652e696f2f747279657863657074706173732f736f66692e706e673f6c6162656c3d7265616479267469746c653d5461736b732532305265616479\"></a> <a href=\"https://gitter.im/try-except-pass/sofi?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/try-except-pass/sofi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c29199261a69478b0ec5aeaec769f0973a480e8/68747470733a2f2f6261646765732e6769747465722e696d2f7472792d6578636570742d706173732f736f66692e737667\"></a>\n<a href=\"http://sofi-gui-framework.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93180e678d676429466d6f800b98c381abcbe6c4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f736f66692d6775692d6672616d65776f726b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://saythanks.io/to/tryexceptpass\" rel=\"nofollow\"><img alt=\"Say Thanks!\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a></p>\n<h2>Overview</h2>\n<p><code>sofi</code> is an OS agnostic UI module for Python.</p>\n<p>The main idea is to allow rapid, pythonic GUI development using standard web-based widgets from <code>Bootstrap</code> and\nother common HTML5 libraries and package them in such a way that all event processing is done within python using\n<code>websockets</code>.</p>\n<p>This was developed as an exercise in poking at the underlying technologies and to see what comes out of merging them together. For a better overview of why it came to be, feel free to take a look at this post: <a href=\"http://tryexceptpass.org/article/a-python-ate-my-gui-3\" rel=\"nofollow\">A Python Ate My GUI - Part 3: Implementation</a></p>\n<p>We're in a <strong>beta</strong> stage for now, feedback appreciated.</p>\n<h2>Usage</h2>\n<p>The <code>sofi.app.Sofi</code> object runs the main event thread with <code>.start()</code> and provides a number of functions to help manipulate the state of the user interface, which is actually a webpage opened in a browser. The <code>register</code> and <code>unregister</code> methods provide the mechanism for subscribing to events through callbacks, while the remaining functions (<code>append</code>, <code>replace</code>, <code>style</code>, etc.) wrap the commands intended to dynamically update the widgets (which are actual HTML elements).</p>\n<p>The commands map directly to <code>D3</code> or <code>jQuery</code> methods present in the <code>sofi.js</code> library that's loaded during initialization and is responsible for performing the requested operations.</p>\n<p>Following basic practices from bootstrap, the widgets should be within a <code>Container</code>. The base page itself is represented with the <code>View</code> class, which wraps the necessary head, body and style tags that will contain the widgets.</p>\n<p>Below is a quick idea of how to get things going, but check out <code>sample.py</code> for a more complicated hello world which instantiates a navbar item, adds a few links, creates some buttons, registers events and performs some timed updates.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sofi.app</span> <span class=\"kn\">import</span> <span class=\"n\">Sofi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sofi.ui</span> <span class=\"kn\">import</span> <span class=\"n\">Container</span><span class=\"p\">,</span> <span class=\"n\">Paragraph</span><span class=\"p\">,</span> <span class=\"n\">Heading</span><span class=\"p\">,</span> <span class=\"n\">View</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">onload</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Every page is built on top of a View object, which contains the &lt;head&gt; and &lt;body&gt; tags that are filled in by the other objects</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">View</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Make a bootstrap container in which to put all your widgets</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Container</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Add a heading and paragraph to the container</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">addelement</span><span class=\"p\">(</span><span class=\"n\">Heading</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"Dude!\"</span><span class=\"p\">))</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">addelement</span><span class=\"p\">(</span><span class=\"n\">Paragraph</span><span class=\"p\">(</span><span class=\"s2\">\"Where's My Car?\"</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Add the container to the view</span>\n    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">addelement</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Tell the UI to load the HTML generated by the view</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># Instantiate the application</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Sofi</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Register the event handler that runs when the UI is ready to receive commands</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s1\">'init'</span><span class=\"p\">,</span> <span class=\"n\">onload</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start the app (opens the default browser) and listen for events</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h2>What do the widgets look like?</h2>\n<p><img alt=\"sample.py\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70cc0ae30cdb3372adb1cfeb76ca91306a6d6961/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f3830302f312a657575673666383835736a7452504f4d745f566336672e706e67\"></p>\n<p><img alt=\"timeline.py\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fa6586116ac216f5aa803cc46f74fcc966b913f/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f3830302f312a416d6246636c625857466449525962706130637942772e706e67\"></p>\n\n          </div>"}, "last_serial": 3873930, "releases": {"0.3.7": [{"comment_text": "", "digests": {"md5": "2936935f0612127f6854b038cbd1cf81", "sha256": "94b5e0f7afc6f58aa1cca9b4e0a9e6a923532519a6217894ae1a47a281be2276"}, "downloads": -1, "filename": "sofi-0.3.7.tar.gz", "has_sig": false, "md5_digest": "2936935f0612127f6854b038cbd1cf81", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22099, "upload_time": "2018-04-22T16:04:40", "upload_time_iso_8601": "2018-04-22T16:04:40.543317Z", "url": "https://files.pythonhosted.org/packages/10/14/95765d692e0f1f1e346d08103ff3d143b4a5160fbc9bb37bcef894ba2318/sofi-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "53f84b584a5d2d8eec32cd14d8bb720b", "sha256": "cccb9d30d949d0d8c2c94618f241a2e90e77c684737f22044cf3970786eb5928"}, "downloads": -1, "filename": "sofi-0.3.8.tar.gz", "has_sig": false, "md5_digest": "53f84b584a5d2d8eec32cd14d8bb720b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22107, "upload_time": "2018-04-30T22:11:16", "upload_time_iso_8601": "2018-04-30T22:11:16.611470Z", "url": "https://files.pythonhosted.org/packages/ca/fe/889f852d08d86267a2d9ba1d3f454cf0ec909a4a5bad07c519e5f53d610c/sofi-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "83dc4fc44c1e91ac0132d87ed829ffb2", "sha256": "60286bf0fdd9de2f390dcaaaaf495213c5ac671087d09e1f5740e2c4d37c7fa3"}, "downloads": -1, "filename": "sofi-0.3.9.tar.gz", "has_sig": false, "md5_digest": "83dc4fc44c1e91ac0132d87ed829ffb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22491, "upload_time": "2018-05-17T21:38:58", "upload_time_iso_8601": "2018-05-17T21:38:58.266150Z", "url": "https://files.pythonhosted.org/packages/bb/99/37684ad1731b12310b12785b61072d90723eeaa4d24628be178c5efba033/sofi-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83dc4fc44c1e91ac0132d87ed829ffb2", "sha256": "60286bf0fdd9de2f390dcaaaaf495213c5ac671087d09e1f5740e2c4d37c7fa3"}, "downloads": -1, "filename": "sofi-0.3.9.tar.gz", "has_sig": false, "md5_digest": "83dc4fc44c1e91ac0132d87ed829ffb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22491, "upload_time": "2018-05-17T21:38:58", "upload_time_iso_8601": "2018-05-17T21:38:58.266150Z", "url": "https://files.pythonhosted.org/packages/bb/99/37684ad1731b12310b12785b61072d90723eeaa4d24628be178c5efba033/sofi-0.3.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:56 2020"}