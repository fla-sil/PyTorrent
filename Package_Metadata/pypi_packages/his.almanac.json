{"info": {"author": "Jonathan Moss", "author_email": "xirisr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Topic :: Other/Nonlisted Topic"], "description": "Alamanac\n========\n\nA simple service registry for use within HIS, but useful elsewhere.\n\nServices registered must extend an abstract base class, which acts as a contract or interface.\n\n\nUsage\n-----\n\nServices should be defined as follows\n\n\n.. code-block:: python\n\n    import abc\n\n    class ExampleContract(metaclass=abc.ABCMeta):\n\n        @abc.abstractmethod\n        def method(self):\n            pass\n\n\n    class ExampleService(ExampleContract):\n\n        def method(self):\n            print(\"I'm an example\")\n\n\nThen register an instance of the service:\n\n\n.. code-block:: python\n\n    from almanac import services\n\n    s = ExampleService()\n    services.register(s)\n\n\nFinally, to retrieve a registered service you need to use the contract:\n\n.. code-block:: python\n\n    from almanac import services\n\n    s = services.get(ExampleContract)\n\n\nErrors and Exceptions\n---------------------\n\nIf you try to register an object as a service which does not have an abstract parent then it will raise an\n`InvalidServiceType` exception.\n\nAttempting to get a service which has not been registered will raise a `ServiceNotFoundError` exception.\n\nAttempting to get a service with anything other than an abstract base class (e.g. the contract) will result in the\nsystem raising an `InvalidContract` exception\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "registry", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "his.almanac", "package_url": "https://pypi.org/project/his.almanac/", "platform": "linux", "project_url": "https://pypi.org/project/his.almanac/", "project_urls": null, "release_url": "https://pypi.org/project/his.almanac/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A services registry", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple service registry for use within HIS, but useful elsewhere.</p>\n<p>Services registered must extend an abstract base class, which acts as a contract or interface.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Services should be defined as follows</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">abc</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleContract</span><span class=\"p\">(</span><span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">ABCMeta</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@abc</span><span class=\"o\">.</span><span class=\"n\">abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleService</span><span class=\"p\">(</span><span class=\"n\">ExampleContract</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"I'm an example\"</span><span class=\"p\">)</span>\n</pre>\n<p>Then register an instance of the service:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">almanac</span> <span class=\"kn\">import</span> <span class=\"n\">services</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">ExampleService</span><span class=\"p\">()</span>\n<span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, to retrieve a registered service you need to use the contract:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">almanac</span> <span class=\"kn\">import</span> <span class=\"n\">services</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">services</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">ExampleContract</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"errors-and-exceptions\">\n<h2>Errors and Exceptions</h2>\n<p>If you try to register an object as a service which does not have an abstract parent then it will raise an\n<cite>InvalidServiceType</cite> exception.</p>\n<p>Attempting to get a service which has not been registered will raise a <cite>ServiceNotFoundError</cite> exception.</p>\n<p>Attempting to get a service with anything other than an abstract base class (e.g. the contract) will result in the\nsystem raising an <cite>InvalidContract</cite> exception</p>\n</div>\n\n          </div>"}, "last_serial": 2687837, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6f11a0955963abd3b8d1376570761932", "sha256": "214f92f20d93628c4a3f3dcf5ecf5694524ad48462c6955b93a6b5401fda8f8e"}, "downloads": -1, "filename": "his.almanac-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f11a0955963abd3b8d1376570761932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2959, "upload_time": "2017-03-07T03:19:04", "upload_time_iso_8601": "2017-03-07T03:19:04.086350Z", "url": "https://files.pythonhosted.org/packages/bc/ae/1ceecb075c9dccbbde7a728adf0f8f78ec3194715b7c1c00a81d106f427c/his.almanac-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f11a0955963abd3b8d1376570761932", "sha256": "214f92f20d93628c4a3f3dcf5ecf5694524ad48462c6955b93a6b5401fda8f8e"}, "downloads": -1, "filename": "his.almanac-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f11a0955963abd3b8d1376570761932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2959, "upload_time": "2017-03-07T03:19:04", "upload_time_iso_8601": "2017-03-07T03:19:04.086350Z", "url": "https://files.pythonhosted.org/packages/bc/ae/1ceecb075c9dccbbde7a728adf0f8f78ec3194715b7c1c00a81d106f427c/his.almanac-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:07 2020"}