{"info": {"author": "Katy LaVallee", "author_email": "katy@firelightweb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Communications :: Email", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Quality Assurance"], "description": "django-hijackemail\n==================\n\nThis app fills a very specific use case: you want to test email delivery\nin a QA environment and your clients, as admins, want to receive real emails, \nbut you don't want the QA process to trigger emails to real end users. \n\nWith a couple settings, you can ensure only email to specified addresses\nwill go to the original recipients, and all others will go to a catch-all\naddress or domain.\n\n\nInstallation\n------------\n\n``pip install django-hijackemail``\n\nAdd ``hijackemail`` to your ``INSTALLED_APPS``. In your environment's\nsettings file, set your ``EMAIL_BACKEND`` to\n``hijackemail.backends.HijackEmailBackend``.\n\nThen configure the settings below as necessary.\n\n\nSettings\n--------\n\nHIJACK_EMAIL_BACKEND\n    A string represented the dotted path to the actual\n    email backend used to send messages.\n    Default is ``django.core.mail.backends.smtp.EmailBackend``.\n\nHIJACK_EMAIL_TRANSFORMATION\n    A function which takes an email address, and returns\n    a transformed version of it.\n\n    The default transformation converts john.doe@example.com to\n    john.doe-at-example.com@local.\n\nHIJACK_EMAIL_REPLACEMENT\n    Instead of transforming the original email, just send\n    all email to this address. Default is None.\n\nHIJACK_EMAIL_DOMAIN\n    Use the default transformation with this catchall\n    domain. Default is \"local\".\n\nHIJACK_EMAIL_EXCLUDE\n    A list of email addresses that should not be hijacked.\n    Default is empty list.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/katylava/django-hijackemail", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-hijackemail", "package_url": "https://pypi.org/project/django-hijackemail/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-hijackemail/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/katylava/django-hijackemail"}, "release_url": "https://pypi.org/project/django-hijackemail/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Reroute outgoing mail (for use in dev/testing/staging environments)", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This app fills a very specific use case: you want to test email delivery\nin a QA environment and your clients, as admins, want to receive real emails,\nbut you don\u2019t want the QA process to trigger emails to real end users.</p>\n<p>With a couple settings, you can ensure only email to specified addresses\nwill go to the original recipients, and all others will go to a catch-all\naddress or domain.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">django-hijackemail</span></tt></p>\n<p>Add <tt>hijackemail</tt> to your <tt>INSTALLED_APPS</tt>. In your environment\u2019s\nsettings file, set your <tt>EMAIL_BACKEND</tt> to\n<tt>hijackemail.backends.HijackEmailBackend</tt>.</p>\n<p>Then configure the settings below as necessary.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<dl>\n<dt>HIJACK_EMAIL_BACKEND</dt>\n<dd>A string represented the dotted path to the actual\nemail backend used to send messages.\nDefault is <tt>django.core.mail.backends.smtp.EmailBackend</tt>.</dd>\n<dt>HIJACK_EMAIL_TRANSFORMATION</dt>\n<dd><p>A function which takes an email address, and returns\na transformed version of it.</p>\n<p>The default transformation converts <a href=\"mailto:john.doe%40example.com\">john<span>.</span>doe<span>@</span>example<span>.</span>com</a> to\n<a href=\"mailto:john.doe-at-example.com%40local\">john<span>.</span>doe-at-example<span>.</span>com<span>@</span>local</a>.</p>\n</dd>\n<dt>HIJACK_EMAIL_REPLACEMENT</dt>\n<dd>Instead of transforming the original email, just send\nall email to this address. Default is None.</dd>\n<dt>HIJACK_EMAIL_DOMAIN</dt>\n<dd>Use the default transformation with this catchall\ndomain. Default is \u201clocal\u201d.</dd>\n<dt>HIJACK_EMAIL_EXCLUDE</dt>\n<dd>A list of email addresses that should not be hijacked.\nDefault is empty list.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 809433, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0cf62b91ee2547421e73f99d6345e7fc", "sha256": "af4ddd90539cc61a29e7dac1cc6aa44c7c56361c55f0501f6ebf102acb395c35"}, "downloads": -1, "filename": "django-hijackemail-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0cf62b91ee2547421e73f99d6345e7fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4891, "upload_time": "2013-07-06T05:51:37", "upload_time_iso_8601": "2013-07-06T05:51:37.458522Z", "url": "https://files.pythonhosted.org/packages/f0/50/8c4f135f5dd23009291ecab0aa6357d5a86360d2332a3fb3f349ac12f53e/django-hijackemail-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cf62b91ee2547421e73f99d6345e7fc", "sha256": "af4ddd90539cc61a29e7dac1cc6aa44c7c56361c55f0501f6ebf102acb395c35"}, "downloads": -1, "filename": "django-hijackemail-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0cf62b91ee2547421e73f99d6345e7fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4891, "upload_time": "2013-07-06T05:51:37", "upload_time_iso_8601": "2013-07-06T05:51:37.458522Z", "url": "https://files.pythonhosted.org/packages/f0/50/8c4f135f5dd23009291ecab0aa6357d5a86360d2332a3fb3f349ac12f53e/django-hijackemail-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:43 2020"}