{"info": {"author": "Matthias Buechi", "author_email": "buec@zhaw.ch", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Human Machine Interfaces"], "description": "\n# spoteno\n\n[![PyPI](https://img.shields.io/pypi/v/spoteno.svg)](https://pypi.python.org/pypi/spoteno)\n\nspoteno (Spoken-Text-Normalization) is a tool to cleanup text-transcripts for speech recognition systems.\nThese systems normally expect target transcripts to contain only characters from a restricted set.\n\n## Installation\n\nInstall the latest development version:\n\n```sh\npip install git+https://github.com/ynop/spoteno.git\n```\n\n## Examples\nThe default usecase would be to normalize a sentence.\nThis enforces the output string to contain only valid characters (as defined by the configuration).\n\n```python\nimport spoteno\n\nsentence = ('Am 11. Januar geht er um 5m nach links,'\n            'weshalb er $d schon \"ziemlich\" m\u00fcde ist.')\n\nnorm = spoteno.Normalizer.de()\noutsent = norm.normalize(sentence)\nprint(outsent)\n\n# >>> am elfte januar geht er um f\u00fcnf m nach links weshalb er d schon ziemlich m\u00fcde ist\n```\n\nWith ``force=False``, the final cleanup can be disabled.\nThis way invalid characters may occurr in the output,\nif the configuration hasn't handled them specifically.\n```python\noutsent = norm.normalize(sentence, force=False)\nprint(outsent)\n\n# >>> am elfte januar geht er um f\u00fcnf m nach links weshalb er $d schon ziemlich m\u00fcde ist\n```\n\nWith the debug method, one can retrieve a set of invalid characters in the final output.\nThis can be used to create or debug a configuration.\nAdditionaly the outputs of the different configuration steps can be printed.\n```python\noutsent, error = norm.debug(sentence)\nprint(error)\n\n# >>> START               Am 11. Januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.\n# >>> Strip               ['Am 11. Januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.']\n# >>> Lower               ['am 11. januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.']\n# >>> StripChar           ['am 11. januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist']\n# >>> ReplaceIfNotSurroundedByDigits['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']\n# >>> ReplaceIfNotPrecededByDigit['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']\n# >>> ReplaceRegex        ['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']\n# >>> ReplaceChar         ['am 11. januar geht er um 5m nach links weshalb er $d schon  ziemlich  m\u00fcde ist']\n# >>> ReplaceChar         ['am 11. januar geht er um 5m nach links weshalb er $d schon  ziemlich  m\u00fcde ist']\n# >>> WhitespaceTokenize  ['am', '11.', 'januar', 'geht', 'er', 'um', '5m', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> SplitNumberSuffix   ['am', '11.', 'januar', 'geht', 'er', 'um', '5', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> NumberToWords       ['am', '11.', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> OrdinalNumberToWords['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> ReplaceChar         ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> ReplaceFull         ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> RemoveDiacritics    ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> Strip               ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']\n# >>> END                 ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']k\n\n# >>> {'$'}\n```\n\n## Development\n\n### Prerequisites\n\n* [A supported version of Python 3](https://docs.python.org/devguide/index.html#status-of-python-branches)\n\nIt's recommended to use a virtual environment when developing spoteno.\nTo create one, execute the following command in the project's root directory:\n\n```\npython -m venv .\n```\n\nTo install spoteno and all it's dependencies, execute:\n\n```\npip install -e .\n```\n\n### Running the test suite\n\n```\npip install -e .[dev]\npython setup.py test\n```\n\nWith PyCharm you might have to change the default test runner. Otherwise, it might only suggest to use nose. To do so,\ngo to File > Settings > Tools > Python Integrated Tools (on the Mac it's PyCharm > Preferences > Settings > Tools >\nPython Integrated Tools) and change the test runner to py.test.\n\n\n### Versions\n\nVersions is handled using [bump2version](https://github.com/c4urself/bump2version). To bump the version:\n\n```\nbump2version [major,minor,patch,release,num]\n```\n\nIn order to directly go to a final relase version (skip .dev/.rc/...):\n\n```\nbump2version [major,minor,patch] --new-version x.x.x\n```\n\n### Release\n\nCommands to create a new release on pypi.\n\n```\nrm -rf build\nrm -rf dist\n\npython setup.py sdist\npython setup.py bdist_wheel\ntwine upload dist/*\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ynop/spoteno/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ynop/spoteno", "keywords": "ASR speech recognition spoken text normalization transcripts", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spoteno", "package_url": "https://pypi.org/project/spoteno/", "platform": "", "project_url": "https://pypi.org/project/spoteno/", "project_urls": {"Download": "https://github.com/ynop/spoteno/releases", "Homepage": "https://github.com/ynop/spoteno"}, "release_url": "https://pypi.org/project/spoteno/0.1.1/", "requires_dist": ["tqdm (==4.39.0)", "num2words (==0.5.10)", "flake8 (==3.7.9) ; extra == 'ci'", "flake8-quotes (==2.1.1) ; extra == 'ci'", "click (==7.0) ; extra == 'dev'", "pytest (==5.2.3) ; extra == 'dev'", "pytest-runner (==5.2) ; extra == 'dev'", "pytest-cov (==2.8.1) ; extra == 'dev'", "pytest-benchmark (==3.2.2) ; extra == 'dev'", "bump2version ; extra == 'dev'"], "requires_python": "", "summary": "spoteno is a library for spoken text normalization for ASR", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>spoteno</h1>\n<p><a href=\"https://pypi.python.org/pypi/spoteno\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47af9544f4eefa26cf26fa46ce851df5757dc805/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73706f74656e6f2e737667\"></a></p>\n<p>spoteno (Spoken-Text-Normalization) is a tool to cleanup text-transcripts for speech recognition systems.\nThese systems normally expect target transcripts to contain only characters from a restricted set.</p>\n<h2>Installation</h2>\n<p>Install the latest development version:</p>\n<pre>pip install git+https://github.com/ynop/spoteno.git\n</pre>\n<h2>Examples</h2>\n<p>The default usecase would be to normalize a sentence.\nThis enforces the output string to contain only valid characters (as defined by the configuration).</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spoteno</span>\n\n<span class=\"n\">sentence</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'Am 11. Januar geht er um 5m nach links,'</span>\n            <span class=\"s1\">'weshalb er $d schon \"ziemlich\" m\u00fcde ist.'</span><span class=\"p\">)</span>\n\n<span class=\"n\">norm</span> <span class=\"o\">=</span> <span class=\"n\">spoteno</span><span class=\"o\">.</span><span class=\"n\">Normalizer</span><span class=\"o\">.</span><span class=\"n\">de</span><span class=\"p\">()</span>\n<span class=\"n\">outsent</span> <span class=\"o\">=</span> <span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"n\">sentence</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">outsent</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># &gt;&gt;&gt; am elfte januar geht er um f\u00fcnf m nach links weshalb er d schon ziemlich m\u00fcde ist</span>\n</pre>\n<p>With <code>force=False</code>, the final cleanup can be disabled.\nThis way invalid characters may occurr in the output,\nif the configuration hasn't handled them specifically.</p>\n<pre><span class=\"n\">outsent</span> <span class=\"o\">=</span> <span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"n\">sentence</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">outsent</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># &gt;&gt;&gt; am elfte januar geht er um f\u00fcnf m nach links weshalb er $d schon ziemlich m\u00fcde ist</span>\n</pre>\n<p>With the debug method, one can retrieve a set of invalid characters in the final output.\nThis can be used to create or debug a configuration.\nAdditionaly the outputs of the different configuration steps can be printed.</p>\n<pre><span class=\"n\">outsent</span><span class=\"p\">,</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"n\">sentence</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># &gt;&gt;&gt; START               Am 11. Januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.</span>\n<span class=\"c1\"># &gt;&gt;&gt; Strip               ['Am 11. Januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.']</span>\n<span class=\"c1\"># &gt;&gt;&gt; Lower               ['am 11. januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist.']</span>\n<span class=\"c1\"># &gt;&gt;&gt; StripChar           ['am 11. januar geht er um 5m nach links,weshalb er $d schon \"ziemlich\" m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceIfNotSurroundedByDigits['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceIfNotPrecededByDigit['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceRegex        ['am 11. januar geht er um 5m nach links weshalb er $d schon \"ziemlich\" m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceChar         ['am 11. januar geht er um 5m nach links weshalb er $d schon  ziemlich  m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceChar         ['am 11. januar geht er um 5m nach links weshalb er $d schon  ziemlich  m\u00fcde ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; WhitespaceTokenize  ['am', '11.', 'januar', 'geht', 'er', 'um', '5m', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; SplitNumberSuffix   ['am', '11.', 'januar', 'geht', 'er', 'um', '5', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; NumberToWords       ['am', '11.', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; OrdinalNumberToWords['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceChar         ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; ReplaceFull         ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; RemoveDiacritics    ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; Strip               ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']</span>\n<span class=\"c1\"># &gt;&gt;&gt; END                 ['am', 'elfte', 'januar', 'geht', 'er', 'um', 'f\u00fcnf', 'm', 'nach', 'links', 'weshalb', 'er', '$d', 'schon', 'ziemlich', 'm\u00fcde', 'ist']k</span>\n\n<span class=\"c1\"># &gt;&gt;&gt; {'$'}</span>\n</pre>\n<h2>Development</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href=\"https://docs.python.org/devguide/index.html#status-of-python-branches\" rel=\"nofollow\">A supported version of Python 3</a></li>\n</ul>\n<p>It's recommended to use a virtual environment when developing spoteno.\nTo create one, execute the following command in the project's root directory:</p>\n<pre><code>python -m venv .\n</code></pre>\n<p>To install spoteno and all it's dependencies, execute:</p>\n<pre><code>pip install -e .\n</code></pre>\n<h3>Running the test suite</h3>\n<pre><code>pip install -e .[dev]\npython setup.py test\n</code></pre>\n<p>With PyCharm you might have to change the default test runner. Otherwise, it might only suggest to use nose. To do so,\ngo to File &gt; Settings &gt; Tools &gt; Python Integrated Tools (on the Mac it's PyCharm &gt; Preferences &gt; Settings &gt; Tools &gt;\nPython Integrated Tools) and change the test runner to py.test.</p>\n<h3>Versions</h3>\n<p>Versions is handled using <a href=\"https://github.com/c4urself/bump2version\" rel=\"nofollow\">bump2version</a>. To bump the version:</p>\n<pre><code>bump2version [major,minor,patch,release,num]\n</code></pre>\n<p>In order to directly go to a final relase version (skip .dev/.rc/...):</p>\n<pre><code>bump2version [major,minor,patch] --new-version x.x.x\n</code></pre>\n<h3>Release</h3>\n<p>Commands to create a new release on pypi.</p>\n<pre><code>rm -rf build\nrm -rf dist\n\npython setup.py sdist\npython setup.py bdist_wheel\ntwine upload dist/*\n</code></pre>\n\n          </div>"}, "last_serial": 6486868, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "edefe88062c167aa20be79ecd7b24e60", "sha256": "2b63f30450d7185ff185fe317a8b634991141eb87b674a59f09043370909dc5a"}, "downloads": -1, "filename": "spoteno-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "edefe88062c167aa20be79ecd7b24e60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11272, "upload_time": "2019-12-05T19:24:04", "upload_time_iso_8601": "2019-12-05T19:24:04.585998Z", "url": "https://files.pythonhosted.org/packages/67/0e/c9250913e7e24d74c47bf1eb058b9a80947f82320fcf19df6f84000e6b32/spoteno-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1134c82469f409e4eab8210ec6c8e269", "sha256": "71b3df820489d4432c34ef6a20983fdd7d7f27784d331e410e916933784a6251"}, "downloads": -1, "filename": "spoteno-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1134c82469f409e4eab8210ec6c8e269", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10656, "upload_time": "2019-12-05T19:24:07", "upload_time_iso_8601": "2019-12-05T19:24:07.101887Z", "url": "https://files.pythonhosted.org/packages/de/f1/d293680d6cf0fb35c4ac6020728481ba31fc36506f2332a91702cf1ec4f8/spoteno-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "219f28060ef9322aa71ad2dcbfb348c0", "sha256": "56d8eff2fb8bfb2f81adbb7bc85335577ec075f23d5c33f0f2ec503f146ffc1e"}, "downloads": -1, "filename": "spoteno-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "219f28060ef9322aa71ad2dcbfb348c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11309, "upload_time": "2020-01-20T13:01:36", "upload_time_iso_8601": "2020-01-20T13:01:36.843286Z", "url": "https://files.pythonhosted.org/packages/a8/6a/aad25f6b2c7cb43ae3868ae4f90c4b230edab0852585df47a6235df912b8/spoteno-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1b210f84e01333d05eca2ef39636d1e", "sha256": "e9e384d4a9a596d3386f2e9338075225a31d2c1306b24b99b58716757abd4523"}, "downloads": -1, "filename": "spoteno-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b1b210f84e01333d05eca2ef39636d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10760, "upload_time": "2020-01-20T13:01:38", "upload_time_iso_8601": "2020-01-20T13:01:38.425236Z", "url": "https://files.pythonhosted.org/packages/07/1c/d19634a37580636d1228ea4465e6950ff2a9d9900891f7fdcca70d2908b4/spoteno-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "219f28060ef9322aa71ad2dcbfb348c0", "sha256": "56d8eff2fb8bfb2f81adbb7bc85335577ec075f23d5c33f0f2ec503f146ffc1e"}, "downloads": -1, "filename": "spoteno-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "219f28060ef9322aa71ad2dcbfb348c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11309, "upload_time": "2020-01-20T13:01:36", "upload_time_iso_8601": "2020-01-20T13:01:36.843286Z", "url": "https://files.pythonhosted.org/packages/a8/6a/aad25f6b2c7cb43ae3868ae4f90c4b230edab0852585df47a6235df912b8/spoteno-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1b210f84e01333d05eca2ef39636d1e", "sha256": "e9e384d4a9a596d3386f2e9338075225a31d2c1306b24b99b58716757abd4523"}, "downloads": -1, "filename": "spoteno-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b1b210f84e01333d05eca2ef39636d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10760, "upload_time": "2020-01-20T13:01:38", "upload_time_iso_8601": "2020-01-20T13:01:38.425236Z", "url": "https://files.pythonhosted.org/packages/07/1c/d19634a37580636d1228ea4465e6950ff2a9d9900891f7fdcca70d2908b4/spoteno-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:33 2020"}