{"info": {"author": "Ingo Fruend", "author_email": "ingo.fruend@twentybn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Utilities"], "description": "# IONN io-operations for artificial neural networks\n\nIONN provides functionality to store, load and freeze neural networks and\nconvert networks between different neural network frameworks. The current version provides\n\n1. Storing, loading, freezing of tensorflow models in google protobuf files (submodule `tfpb`)\n2. Dumping keras models as google protobuf files and loading them into a pure tensorflow environment (submodule `k2tf`)\n\n\n## tfpb - freeze and store graphs\n\nTensorflow provides a graph freezing tool that works ok, but is hardly\ndocumented and not particularly modular. The `tfpb` module provides a\nsimplified interface to storing frozen graphs. There are two main entrypoints,\n`load_protobuf` and `save_protobuf`. Furthermore, you can directly call tfpb to\nfreeze stored graphs like this\n\n    tf-freeze <input_graph_file_name> <output_file_name> <checkpoint_file_name>\n\n\n## k2tf - From keras to tensorflow\n\nKeras is nice if we want to quickly draft out a neural network architecture.\nUnfortunately, it differs considerably in how it stores models and can\ntherefore not well co-exist with tensorflow infrastructure. k2tf supports\nstoring keras models in tensorflow protobuf files that can later be loaded\nwithout keras. There are currently two drawbacks though:\n\n1. Models have to be frozen, which isn't exactly desirable because most of\n   tensorflow's strength is in tweaking the models during the learning phase.\n2. Models have to be reloaded in a separate process to avoid confusion about\n   the tensorflow graph.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ionn", "package_url": "https://pypi.org/project/ionn/", "platform": "", "project_url": "https://pypi.org/project/ionn/", "project_urls": null, "release_url": "https://pypi.org/project/ionn/0.0.12/", "requires_dist": null, "requires_python": "", "summary": "io for neural networks", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># IONN io-operations for artificial neural networks</p>\n<p>IONN provides functionality to store, load and freeze neural networks and\nconvert networks between different neural network frameworks. The current version provides</p>\n<ol>\n<li>Storing, loading, freezing of tensorflow models in google protobuf files (submodule <cite>tfpb</cite>)</li>\n<li>Dumping keras models as google protobuf files and loading them into a pure tensorflow environment (submodule <cite>k2tf</cite>)</li>\n</ol>\n<p>## tfpb - freeze and store graphs</p>\n<p>Tensorflow provides a graph freezing tool that works ok, but is hardly\ndocumented and not particularly modular. The <cite>tfpb</cite> module provides a\nsimplified interface to storing frozen graphs. There are two main entrypoints,\n<cite>load_protobuf</cite> and <cite>save_protobuf</cite>. Furthermore, you can directly call tfpb to\nfreeze stored graphs like this</p>\n<blockquote>\ntf-freeze &lt;input_graph_file_name&gt; &lt;output_file_name&gt; &lt;checkpoint_file_name&gt;</blockquote>\n<p>## k2tf - From keras to tensorflow</p>\n<p>Keras is nice if we want to quickly draft out a neural network architecture.\nUnfortunately, it differs considerably in how it stores models and can\ntherefore not well co-exist with tensorflow infrastructure. k2tf supports\nstoring keras models in tensorflow protobuf files that can later be loaded\nwithout keras. There are currently two drawbacks though:</p>\n<ol>\n<li>Models have to be frozen, which isn\u2019t exactly desirable because most of\ntensorflow\u2019s strength is in tweaking the models during the learning phase.</li>\n<li>Models have to be reloaded in a separate process to avoid confusion about\nthe tensorflow graph.</li>\n</ol>\n\n          </div>"}, "last_serial": 3631639, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "dd08096abd66871821d332bdc8fbf670", "sha256": "8b1940a17b609c6ad83de0da6fbc78aca67bd12973a2ef348a3e70be9d7dba87"}, "downloads": -1, "filename": "ionn-0.0.0.tar.gz", "has_sig": false, "md5_digest": "dd08096abd66871821d332bdc8fbf670", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1008, "upload_time": "2016-12-07T10:27:48", "upload_time_iso_8601": "2016-12-07T10:27:48.001309Z", "url": "https://files.pythonhosted.org/packages/23/46/839b31d0fb4bb2c8cf5e62d56d3ff5a7cbf5292ca3c3857f6b52d4075a87/ionn-0.0.0.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "f110c2b7d5ea772af9a715882a3630a2", "sha256": "a70f647e04086d652db27663c658b268c5c2c5d8c577249e06fba24d5d6fd55f"}, "downloads": -1, "filename": "ionn-0.0.10.tar.gz", "has_sig": false, "md5_digest": "f110c2b7d5ea772af9a715882a3630a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4954, "upload_time": "2017-03-22T10:33:47", "upload_time_iso_8601": "2017-03-22T10:33:47.879074Z", "url": "https://files.pythonhosted.org/packages/cc/fa/c314c662708ec0e171f658e03e436e7102282404bd44171fe84ab0abc553/ionn-0.0.10.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "8c86c7f4d9187ef8ac2e42b0ae7e2964", "sha256": "a196ddacd5297f0829a745ddf133e840d106e40cd0a2c61d052dcc979b0e05bf"}, "downloads": -1, "filename": "ionn-0.0.12.tar.gz", "has_sig": false, "md5_digest": "8c86c7f4d9187ef8ac2e42b0ae7e2964", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4909, "upload_time": "2018-02-27T14:30:23", "upload_time_iso_8601": "2018-02-27T14:30:23.738952Z", "url": "https://files.pythonhosted.org/packages/7a/57/de05821c717bb0d697ffb44283eae36d7976c06949c0d8730cf0f57564c5/ionn-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f405f9ea0e762dd2427912b44c05cf8b", "sha256": "0c36ff7b7000f344e06d028fde60a9f08e6ed6aa7f88c3cb5c2c9c64499dc0f0"}, "downloads": -1, "filename": "ionn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f405f9ea0e762dd2427912b44c05cf8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4193, "upload_time": "2016-12-15T16:49:48", "upload_time_iso_8601": "2016-12-15T16:49:48.381156Z", "url": "https://files.pythonhosted.org/packages/01/68/761c4ec14e4f081429a605d23cd62d127bb54eee1ddece55e257cffc9bf0/ionn-0.0.2.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "68dd9b9e4cad4e9df8907bf07b95dc0c", "sha256": "798593b638b3b648066b57198d700de98e692c03e4bacec26dcc657e46b84493"}, "downloads": -1, "filename": "ionn-0.0.5.tar.gz", "has_sig": false, "md5_digest": "68dd9b9e4cad4e9df8907bf07b95dc0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4183, "upload_time": "2017-03-20T16:41:35", "upload_time_iso_8601": "2017-03-20T16:41:35.935345Z", "url": "https://files.pythonhosted.org/packages/28/27/6ce8bed0217dc590b066174801443a847eca62b7cc89699daf3594bf6a8d/ionn-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "0654d5ffeb47a566cd5c5d45e2d25048", "sha256": "8bf342a34abf1a2de7dc64fc7fe5661b18cbdab3e7b5d101f0900bfd1c4ecf9a"}, "downloads": -1, "filename": "ionn-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0654d5ffeb47a566cd5c5d45e2d25048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4140, "upload_time": "2017-03-20T16:53:07", "upload_time_iso_8601": "2017-03-20T16:53:07.792839Z", "url": "https://files.pythonhosted.org/packages/fd/8a/f7be4409fbd4ce8115170022c1c1123bde057e1174e6d3835224cd79faa6/ionn-0.0.6.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "0dd4d9a7a35933bb127eb40ca7b53356", "sha256": "1af145b81810b11b7870a12a135e7d89a98ba340b21252e64c56680bd88fa46e"}, "downloads": -1, "filename": "ionn-0.0.8.tar.gz", "has_sig": false, "md5_digest": "0dd4d9a7a35933bb127eb40ca7b53356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4783, "upload_time": "2017-03-21T15:49:44", "upload_time_iso_8601": "2017-03-21T15:49:44.899175Z", "url": "https://files.pythonhosted.org/packages/e4/0f/2f029391fbf895b11143421be1aed9a0939927d9ebe2b3b63c172c6fcae7/ionn-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "9a2182884263d78dc85339c7f80752b2", "sha256": "4bd0bf39a08b4dd7dbbd300b5a970138056b05f17b6e2f3a49f999dd3635bca8"}, "downloads": -1, "filename": "ionn-0.0.9.tar.gz", "has_sig": false, "md5_digest": "9a2182884263d78dc85339c7f80752b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4807, "upload_time": "2017-03-22T07:32:37", "upload_time_iso_8601": "2017-03-22T07:32:37.927490Z", "url": "https://files.pythonhosted.org/packages/f8/27/5453d4959c2040509cafe22e153b2ab40b042fe72017dd4e12975fff2288/ionn-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c86c7f4d9187ef8ac2e42b0ae7e2964", "sha256": "a196ddacd5297f0829a745ddf133e840d106e40cd0a2c61d052dcc979b0e05bf"}, "downloads": -1, "filename": "ionn-0.0.12.tar.gz", "has_sig": false, "md5_digest": "8c86c7f4d9187ef8ac2e42b0ae7e2964", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4909, "upload_time": "2018-02-27T14:30:23", "upload_time_iso_8601": "2018-02-27T14:30:23.738952Z", "url": "https://files.pythonhosted.org/packages/7a/57/de05821c717bb0d697ffb44283eae36d7976c06949c0d8730cf0f57564c5/ionn-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:59 2020"}