{"info": {"author": "Ethan Jucovy", "author_email": "ethan.jucovy@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django"], "description": "This package provides some extensions and overrides to django.contrib.auth and \ndjango-registration to streamline the experience for new users registering for\nyour site.\n\nIndependent components are provided for the following tweaks:\n\n 1. Let inactive users log in to your django site\n 2. Log in the new user automatically after initial site registration\n 3. Redirect inactive users to a page of your choice when they try to\n    access \"restricted\" content\n\nThey can be wired up semi-independently.\n\nYou must have 'django.contrib.auth' in your INSTALLED_APPS.\n\nYou must have 'registration' in your INSTALLED_APPS.\n\nTo install, add 'inactive_user_workflow' to your INSTALLED_APPS. No models are defined,\nso you don't need to re-run syncdb.\n\n========\nUsing it\n========\n\nThe simplest way to use it is to include a URLconf pattern like\n\n (r'^accounts/', include('inactive_user_workflow.urls'))\n\nin your root URLconf. This will register its own views and also the\nnon-overridden views from django-registration and django.contrib.auth\nbut will not register the inactive-user-catching middleware (see below).\nBut if you're using Django permission checks properly, the middleware\nwill be optional, because django.contrib.auth always returns False\nfor permission checks on inactive users.\n\nThe details\n===========\n\nTwo views are provided:\n\n inactive_user_workflow.views.registration.register\n\nThis overrides django-registration's registration_register view with\none behavioral change: it logs in the user automatically after initial\naccount creation.\n\n inactive_user_workflow.views.login.login\n\nThis overrides django.contrib.auth's auth_login view with one behavioral\nchange: it allows inactive users to log in to your site.\n\nOne middleware is provided:\n\n inactive_user_workflow.middleware.CatchInactiveUsersMiddleware\n\nIf activated, this middleware intercepts requests by logged-in inactive \nusers and redirects them to a view named 'inactive-user'.\n\nA simple direct-to-template 'inactive-user' view is also provided; it\nis published at the URL /accounts/inactive/ (assuming you mount the\npackage's URLs at /account/). (So I lied earlier; three views are provided.)\nYou will likely want to override the provided template registration/inactive_user.html,\nor even override the view with your own custom view.\n\nYou can define a list of URL paths that inactive users *should* be allowed\nto access without being kicked over to the 'inactive-user' view. To do this,\nadd a list of URL prefixes to your settings.py named ANONYMOUS_PATHS, like so:\n\nANONYMOUS_PATHS = ('/accounts/', '/site_media/', '/publicview/')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "django registration", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "django-inactive_user_workflow", "package_url": "https://pypi.org/project/django-inactive_user_workflow/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-inactive_user_workflow/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-inactive_user_workflow/0.1/", "requires_dist": null, "requires_python": null, "summary": "tools to let inactive users log in to your site with limited access after registration until they confirm their account", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides some extensions and overrides to django.contrib.auth and\ndjango-registration to streamline the experience for new users registering for\nyour site.</p>\n<p>Independent components are provided for the following tweaks:</p>\n<blockquote>\n<ol>\n<li>Let inactive users log in to your django site</li>\n<li>Log in the new user automatically after initial site registration</li>\n<li>Redirect inactive users to a page of your choice when they try to\naccess \u201crestricted\u201d content</li>\n</ol>\n</blockquote>\n<p>They can be wired up semi-independently.</p>\n<p>You must have \u2018django.contrib.auth\u2019 in your INSTALLED_APPS.</p>\n<p>You must have \u2018registration\u2019 in your INSTALLED_APPS.</p>\n<p>To install, add \u2018inactive_user_workflow\u2019 to your INSTALLED_APPS. No models are defined,\nso you don\u2019t need to re-run syncdb.</p>\n<div id=\"using-it\">\n<h2>Using it</h2>\n<p>The simplest way to use it is to include a URLconf pattern like</p>\n<blockquote>\n(r\u2019^accounts/\u2019, include(\u2018inactive_user_workflow.urls\u2019))</blockquote>\n<p>in your root URLconf. This will register its own views and also the\nnon-overridden views from django-registration and django.contrib.auth\nbut will not register the inactive-user-catching middleware (see below).\nBut if you\u2019re using Django permission checks properly, the middleware\nwill be optional, because django.contrib.auth always returns False\nfor permission checks on inactive users.</p>\n<div id=\"the-details\">\n<h3>The details</h3>\n<p>Two views are provided:</p>\n<blockquote>\ninactive_user_workflow.views.registration.register</blockquote>\n<p>This overrides django-registration\u2019s registration_register view with\none behavioral change: it logs in the user automatically after initial\naccount creation.</p>\n<blockquote>\ninactive_user_workflow.views.login.login</blockquote>\n<p>This overrides django.contrib.auth\u2019s auth_login view with one behavioral\nchange: it allows inactive users to log in to your site.</p>\n<p>One middleware is provided:</p>\n<blockquote>\ninactive_user_workflow.middleware.CatchInactiveUsersMiddleware</blockquote>\n<p>If activated, this middleware intercepts requests by logged-in inactive\nusers and redirects them to a view named \u2018inactive-user\u2019.</p>\n<p>A simple direct-to-template \u2018inactive-user\u2019 view is also provided; it\nis published at the URL /accounts/inactive/ (assuming you mount the\npackage\u2019s URLs at /account/). (So I lied earlier; three views are provided.)\nYou will likely want to override the provided template registration/inactive_user.html,\nor even override the view with your own custom view.</p>\n<p>You can define a list of URL paths that inactive users <em>should</em> be allowed\nto access without being kicked over to the \u2018inactive-user\u2019 view. To do this,\nadd a list of URL prefixes to your settings.py named ANONYMOUS_PATHS, like so:</p>\n<p>ANONYMOUS_PATHS = (\u2018/accounts/\u2019, \u2018/site_media/\u2019, \u2018/publicview/\u2019)</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 789861, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "65e1a460d6a69516a905ac6433025f00", "sha256": "ae519305472a68a427fa73460496b251a331cd04a75cf2ef4d369148b5865236"}, "downloads": -1, "filename": "django-inactive_user_workflow-0.1.tar.gz", "has_sig": false, "md5_digest": "65e1a460d6a69516a905ac6433025f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9104, "upload_time": "2011-06-09T16:52:02", "upload_time_iso_8601": "2011-06-09T16:52:02.716644Z", "url": "https://files.pythonhosted.org/packages/a5/a5/05b4841e02bf051f626aa3202076ea8e475c5502e37893299905226a685e/django-inactive_user_workflow-0.1.tar.gz", "yanked": false}], "0.1a": [{"comment_text": "", "digests": {"md5": "15335bef1a2e91f9ff30baa53572f7aa", "sha256": "7c9bef1659b9fca6950929bc23533658f8e59d100eb7eaa98b2344bace20a192"}, "downloads": -1, "filename": "django-inactive_user_workflow-0.1a.tar.gz", "has_sig": false, "md5_digest": "15335bef1a2e91f9ff30baa53572f7aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5811, "upload_time": "2009-10-30T17:15:56", "upload_time_iso_8601": "2009-10-30T17:15:56.325797Z", "url": "https://files.pythonhosted.org/packages/05/1e/6525d6eaf57b6f24fa8de672aa233cc4321ee42fab762171fac5535fd6f8/django-inactive_user_workflow-0.1a.tar.gz", "yanked": false}], "0.1b": [{"comment_text": "", "digests": {"md5": "c57d68168bd0a304d6f0e671a8a41187", "sha256": "adc44d61932a14e93ff8b5604ae841b2f6323786070b56aa5cd7df5113c40547"}, "downloads": -1, "filename": "django-inactive_user_workflow-0.1b.tar.gz", "has_sig": false, "md5_digest": "c57d68168bd0a304d6f0e671a8a41187", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7008, "upload_time": "2009-10-31T19:53:51", "upload_time_iso_8601": "2009-10-31T19:53:51.651452Z", "url": "https://files.pythonhosted.org/packages/a1/1f/e9ed02bbc84992e8106ae00c91cfa8416bee7f71a07457d91848639e2453/django-inactive_user_workflow-0.1b.tar.gz", "yanked": false}], "0.1c": [{"comment_text": "", "digests": {"md5": "73b09a5101f420406db0456de0d41e0c", "sha256": "2e99b3ffb5e4ecda9260ecff045c6ff755d95a3156e0737d1d062323978be557"}, "downloads": -1, "filename": "django-inactive_user_workflow-0.1c.tar.gz", "has_sig": false, "md5_digest": "73b09a5101f420406db0456de0d41e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7056, "upload_time": "2009-11-03T02:24:09", "upload_time_iso_8601": "2009-11-03T02:24:09.521974Z", "url": "https://files.pythonhosted.org/packages/c2/63/0dd34aaa20973f4a369e1d1dd7fc7eb99c055c20bbeafbb69a954bf6727d/django-inactive_user_workflow-0.1c.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65e1a460d6a69516a905ac6433025f00", "sha256": "ae519305472a68a427fa73460496b251a331cd04a75cf2ef4d369148b5865236"}, "downloads": -1, "filename": "django-inactive_user_workflow-0.1.tar.gz", "has_sig": false, "md5_digest": "65e1a460d6a69516a905ac6433025f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9104, "upload_time": "2011-06-09T16:52:02", "upload_time_iso_8601": "2011-06-09T16:52:02.716644Z", "url": "https://files.pythonhosted.org/packages/a5/a5/05b4841e02bf051f626aa3202076ea8e475c5502e37893299905226a685e/django-inactive_user_workflow-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:37 2020"}