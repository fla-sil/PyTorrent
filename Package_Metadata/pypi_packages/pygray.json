{"info": {"author": "Joao Marcus Christ", "author_email": "joaoma@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "PyGray\n===============================\n\n* Free software: Apache Software License 2.0\n\nPyGray is an open source command line interface for Graylog2.\n\nInstalation\n--------\nTry:\n\n\tpip3 install pygray\n\n\nor you can even install it from a GitHub clone:\n\n\tgit clone https://github.com/globocom/pygray\n\tcd pygray/\n\tpip3 install . -r requirements.txt\n\nUsage\n--------\nPyGray enables you to make searches using the official Graylog query language. To understand how to make queries \nplease see the `documentation <http://docs.graylog.org/en/2.1/pages/queries.html>`.\n\nOnce you've installed the tool now it's time to run some commands, the following:\n\n> pygray -h mygraylog.server.com -u john.doe -p password -@ \"10 minutes ago\" \"source:my-app-server\"\n\n-\n\n> pygray -h mygraylog.server.com -u john.doe -p password \"message:200\"\n\n-\n\n> pygray -h mygraylog.server.com -u john.doe -p password -f\n\n-\n\n> pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\"\n\n-\n\n> pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\" -f\n\n-\n\n> pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\" -d --fields timestamp,level,message -o dump.csv\n\n-\n\n> pygray -h mygraylog.server.com -u john-doe -p password -@ \"2016-11-21 00:00:00\" -# \"2016-11-21 01:00:00\" 'message:blabla'\n\n-\n\n> pygray -e dev -r short\n\n-\n\n> pygray -e dev -r short -st mystreamid\n\n-\n\n> pygray -e dev -r short -st '*'\n\n\n\nConfiguration\n--------\n\nPyGray can reuse some common configurations like address of your Graylog server and your credentials, it will look for a\n*~/.pygray.cfg* or a *pygray.cfg* (in your current directory). PyGray will use default environment and format \nwhenever an environment or format is omitted.\n\nHere is a example for your pygray.cfg file:\n\n    [environment:default]\n    host=mygraylogserver.com\n    port=443\n    username=john.doe\n\n    [environment:dev]\n    host=mygraylogserver.dev.com\n    port=443\n    proxy=mycompanyproxy.com\n    username=john.doe\n    default_stream=57e14cde6fb78216a60d35e8\n\n    [format:default]\n    format={host} {level} {facility} {timestamp} {message}\n    \n    [format:short]\n    format=[{timestamp}] {level} {message}\n    \n    [format:long]\n    format=time: [{timestamp}] level: {level} msg: {message} tags: {tags}\n    color=false\n\nPlease run the *help* command to more detailed information about all the client features.\n\t\n\tUsage: pygray [OPTIONS] [QUERY]\n\n\tOptions:\n\t  -v, --version                   Prints your pygray version\n\t  -h, --host TEXT                 Your graylog node's host\n\t  -e, --environment TEXT          Label of a preconfigured graylog node\n\t  -sq, --saved-query              List user saved queries for selection\n\t  --port TEXT                     Your graylog port\n\t  --no-tls                        Not use TLS to connect to Graylog server\n\t  -u, --username TEXT             Your graylog username\n\t  -p, --password TEXT             Your graylog password (default: prompt)\n\t  -k, --keyring / -nk, --no-keyring\n\t                                  Use keyring to store/retrieve password\n\t  -@, --search-from TEXT          Query range from\n\t  -#, --search-to TEXT            Query range to (default: now)\n\t  --tail                          Show the last n lines for the query\n\t                                  (default)\n\t  -d, --dump                      Print the query result as a csv\n\t  --fields TEXT                   Comma separated fields to be printed in the\n\t                                  csv.\n\t  -o, --output TEXT               Output logs to file (only tail/dump mode)\n\t  -f, --follow                    Poll the logging server for new logs\n\t                                  matching the query (sets search from to now,\n\t                                  limit to None)\n\t  -n, --limit INTEGER             Limit the number of results (default: 100)\n\t  -a, --latency INTEGER           Latency of polling queries (default: 2)\n\t  -st, --stream TEXT              Stream ID of the stream to query (default:\n\t                                  no stream filter)\n\t  -s, --sort TEXT                 Field used for sorting (default: timestamp)\n\t  --asc / --desc                  Sort ascending / descending\n\t  --proxy TEXT                    Proxy to use for the http/s request\n\t  -r, --format-template TEXT      Message format template for the log\n\t                                  (default: default format\n\t  --no-color                      Don't show colored logs\n\t  -c, --config TEXT               Custom config file path\n\t  --help                          Show this message and exit.\n\n\nContributing\n--------\n\nSee `contributing <https://github.com/pantuza/pygray/blob/master/CONTRIBUTING.rst>` document to learn how to contribute with us.\n\n\n=======\nHistory\n=======\n\n0.9.4 (2019-03-15)\n------------------\n\n* Session expiration was not handled properly when create-session was set and stored\n  session Id was expired. It should try to authenticate again. Fixed.\n\n0.9.4 (2019-03-15)\n------------------\n\n* Allow the session Id to be stored in the configuration file for subsequent pygray\n  calls\n* Fixed various calls to str's \"encode\", no longer necessary in Python3\n\n0.9.2 (2019-03-15)\n------------------\n\n* Messages were printed as Python3's \"bytestrings\", not regular strings. Fixed.\n\n0.9.1 (2019-03-15)\n------------------\n\n* Fixed crash when follow mode was activated\n\n0.9.0 (2019-03-15)\n------------------\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joaomarcusc/pygray", "keywords": "pygray", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "pygray", "package_url": "https://pypi.org/project/pygray/", "platform": "", "project_url": "https://pypi.org/project/pygray/", "project_urls": {"Homepage": "https://github.com/joaomarcusc/pygray"}, "release_url": "https://pypi.org/project/pygray/0.9.8/", "requires_dist": null, "requires_python": "", "summary": "Graylog command line interface (pygray fork).", "version": "0.9.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            PyGray<br>===============================<br><br>* Free software: Apache Software License 2.0<br><br>PyGray is an open source command line interface for Graylog2.<br><br>Instalation<br>--------<br>Try:<br><br>\tpip3 install pygray<br><br><br>or you can even install it from a GitHub clone:<br><br>\tgit clone https://github.com/globocom/pygray<br>\tcd pygray/<br>\tpip3 install . -r requirements.txt<br><br>Usage<br>--------<br>PyGray enables you to make searches using the official Graylog query language. To understand how to make queries <br>please see the `documentation &lt;http://docs.graylog.org/en/2.1/pages/queries.html&gt;`.<br><br>Once you've installed the tool now it's time to run some commands, the following:<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password -@ \"10 minutes ago\" \"source:my-app-server\"<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password \"message:200\"<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password -f<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\"<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\" -f<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john.doe -p password \"level:DEBUG\" -d --fields timestamp,level,message -o dump.csv<br><br>-<br><br>&gt; pygray -h mygraylog.server.com -u john-doe -p password -@ \"2016-11-21 00:00:00\" -# \"2016-11-21 01:00:00\" 'message:blabla'<br><br>-<br><br>&gt; pygray -e dev -r short<br><br>-<br><br>&gt; pygray -e dev -r short -st mystreamid<br><br>-<br><br>&gt; pygray -e dev -r short -st '*'<br><br><br><br>Configuration<br>--------<br><br>PyGray can reuse some common configurations like address of your Graylog server and your credentials, it will look for a<br>*~/.pygray.cfg* or a *pygray.cfg* (in your current directory). PyGray will use default environment and format <br>whenever an environment or format is omitted.<br><br>Here is a example for your pygray.cfg file:<br><br>    [environment:default]<br>    host=mygraylogserver.com<br>    port=443<br>    username=john.doe<br><br>    [environment:dev]<br>    host=mygraylogserver.dev.com<br>    port=443<br>    proxy=mycompanyproxy.com<br>    username=john.doe<br>    default_stream=57e14cde6fb78216a60d35e8<br><br>    [format:default]<br>    format={host} {level} {facility} {timestamp} {message}<br>    <br>    [format:short]<br>    format=[{timestamp}] {level} {message}<br>    <br>    [format:long]<br>    format=time: [{timestamp}] level: {level} msg: {message} tags: {tags}<br>    color=false<br><br>Please run the *help* command to more detailed information about all the client features.<br>\t<br>\tUsage: pygray [OPTIONS] [QUERY]<br><br>\tOptions:<br>\t  -v, --version                   Prints your pygray version<br>\t  -h, --host TEXT                 Your graylog node's host<br>\t  -e, --environment TEXT          Label of a preconfigured graylog node<br>\t  -sq, --saved-query              List user saved queries for selection<br>\t  --port TEXT                     Your graylog port<br>\t  --no-tls                        Not use TLS to connect to Graylog server<br>\t  -u, --username TEXT             Your graylog username<br>\t  -p, --password TEXT             Your graylog password (default: prompt)<br>\t  -k, --keyring / -nk, --no-keyring<br>\t                                  Use keyring to store/retrieve password<br>\t  -@, --search-from TEXT          Query range from<br>\t  -#, --search-to TEXT            Query range to (default: now)<br>\t  --tail                          Show the last n lines for the query<br>\t                                  (default)<br>\t  -d, --dump                      Print the query result as a csv<br>\t  --fields TEXT                   Comma separated fields to be printed in the<br>\t                                  csv.<br>\t  -o, --output TEXT               Output logs to file (only tail/dump mode)<br>\t  -f, --follow                    Poll the logging server for new logs<br>\t                                  matching the query (sets search from to now,<br>\t                                  limit to None)<br>\t  -n, --limit INTEGER             Limit the number of results (default: 100)<br>\t  -a, --latency INTEGER           Latency of polling queries (default: 2)<br>\t  -st, --stream TEXT              Stream ID of the stream to query (default:<br>\t                                  no stream filter)<br>\t  -s, --sort TEXT                 Field used for sorting (default: timestamp)<br>\t  --asc / --desc                  Sort ascending / descending<br>\t  --proxy TEXT                    Proxy to use for the http/s request<br>\t  -r, --format-template TEXT      Message format template for the log<br>\t                                  (default: default format<br>\t  --no-color                      Don't show colored logs<br>\t  -c, --config TEXT               Custom config file path<br>\t  --help                          Show this message and exit.<br><br><br>Contributing<br>--------<br><br>See `contributing &lt;https://github.com/pantuza/pygray/blob/master/CONTRIBUTING.rst&gt;` document to learn how to contribute with us.<br><br><br>=======<br>History<br>=======<br><br>0.9.4 (2019-03-15)<br>------------------<br><br>* Session expiration was not handled properly when create-session was set and stored<br>  session Id was expired. It should try to authenticate again. Fixed.<br><br>0.9.4 (2019-03-15)<br>------------------<br><br>* Allow the session Id to be stored in the configuration file for subsequent pygray<br>  calls<br>* Fixed various calls to str's \"encode\", no longer necessary in Python3<br><br>0.9.2 (2019-03-15)<br>------------------<br><br>* Messages were printed as Python3's \"bytestrings\", not regular strings. Fixed.<br><br>0.9.1 (2019-03-15)<br>------------------<br><br>* Fixed crash when follow mode was activated<br><br>0.9.0 (2019-03-15)<br>------------------<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 5124187, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "7e2671c0f4c358d160750de68be79c83", "sha256": "b8be8152c655b9909600695b6ddd1111e63ba7b4ade76c2acd8f33b7a9724224"}, "downloads": -1, "filename": "pygray-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e2671c0f4c358d160750de68be79c83", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19857, "upload_time": "2019-03-15T16:27:33", "upload_time_iso_8601": "2019-03-15T16:27:33.220097Z", "url": "https://files.pythonhosted.org/packages/75/35/85f95e5c21bb3542cc65cbf1014ffdb75bdbaf8441022fb495c6f5a69925/pygray-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6c640cb047b331aacee51f4dab35024", "sha256": "530d61b8361332364fe9fb486fb406439dc4d5c58f6ef5af4954b239a14b5f7b"}, "downloads": -1, "filename": "pygray-0.9.0.tar.gz", "has_sig": false, "md5_digest": "e6c640cb047b331aacee51f4dab35024", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31919, "upload_time": "2019-03-15T16:27:35", "upload_time_iso_8601": "2019-03-15T16:27:35.680080Z", "url": "https://files.pythonhosted.org/packages/92/20/b1a85cdd1256544302f2c7fd76f0d5a344bd950a023fbb82f54bf2d866ee/pygray-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "f48dc4c4be21a45be38c2593a1c70817", "sha256": "a83218e6de3e65be7efccbe7be0ec8e72a45df0b1e7792374143d32a30ab7c26"}, "downloads": -1, "filename": "pygray-0.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f48dc4c4be21a45be38c2593a1c70817", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 19871, "upload_time": "2019-03-15T17:33:46", "upload_time_iso_8601": "2019-03-15T17:33:46.183368Z", "url": "https://files.pythonhosted.org/packages/d5/3d/82335832353cc7fc1563af92d700ebf11ece2b3362f6e225e2bc589e7b9d/pygray-0.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f53bb79d46240507fafb250bdf16a5dc", "sha256": "2ddbc2909f1870864eb62792b759612ce671af86276a1933294dbf74a58bce3d"}, "downloads": -1, "filename": "pygray-0.9.1.tar.gz", "has_sig": false, "md5_digest": "f53bb79d46240507fafb250bdf16a5dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31934, "upload_time": "2019-03-15T17:33:43", "upload_time_iso_8601": "2019-03-15T17:33:43.805757Z", "url": "https://files.pythonhosted.org/packages/29/e2/6bd2ab9dd9feedc9aa32fc195a17edb2be66802cedf8979342562377b624/pygray-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "49588dd3f59c9e89bb1f2b34a92a3d82", "sha256": "94e149f05f8eda47d893c76aa3d5537b59dc075bc611cb6db32de6d8b13a8b62"}, "downloads": -1, "filename": "pygray-0.9.2.tar.gz", "has_sig": false, "md5_digest": "49588dd3f59c9e89bb1f2b34a92a3d82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32020, "upload_time": "2019-03-15T18:05:51", "upload_time_iso_8601": "2019-03-15T18:05:51.314778Z", "url": "https://files.pythonhosted.org/packages/3b/bd/12407ebce537230713141f90d5bc879dc0c120254e8ceac276aa2a6b15ed/pygray-0.9.2.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "b54e4fc7ba861f41f5c68130ed1407e7", "sha256": "f58719c49d6d0290a893f87ce116b63d88a3ef69de33154ca09b3e7a46d9e522"}, "downloads": -1, "filename": "pygray-0.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b54e4fc7ba861f41f5c68130ed1407e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20553, "upload_time": "2019-03-15T21:18:38", "upload_time_iso_8601": "2019-03-15T21:18:38.551563Z", "url": "https://files.pythonhosted.org/packages/2b/84/aea9b64e1f48e70aaf0ee70a8128ffcaaa8200a27c3fb8a5d05c2c8e7bb2/pygray-0.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c30f6cd10b5aec23c7f1eed48ce02d5c", "sha256": "855e0a877b85ce191aacc97fe061e4057bf708b39326476f97a4cc041bbfdfa7"}, "downloads": -1, "filename": "pygray-0.9.4.tar.gz", "has_sig": false, "md5_digest": "c30f6cd10b5aec23c7f1eed48ce02d5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32595, "upload_time": "2019-03-15T21:18:40", "upload_time_iso_8601": "2019-03-15T21:18:40.279928Z", "url": "https://files.pythonhosted.org/packages/ba/79/56d7bb73ce783c427f7d3c87d2be836b6b4611f4f0ae4648004db541a6b6/pygray-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "0c5eb469c7261d60fc2541b243fbbb8e", "sha256": "e80b2424ce5c38f6901a3dff4a7321df3fdc3614ca58bcfb5882074616e7c174"}, "downloads": -1, "filename": "pygray-0.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c5eb469c7261d60fc2541b243fbbb8e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20725, "upload_time": "2019-03-18T12:15:37", "upload_time_iso_8601": "2019-03-18T12:15:37.673971Z", "url": "https://files.pythonhosted.org/packages/f1/6c/7e157b1824e895786824a860491d03d8afc09a4b3ad66cb034d51fc6d661/pygray-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a86bdb4779e42ce08370eff2095c3ca2", "sha256": "5f23dfa7a807943a956914922e43f08e0f4d9644a4792eb6f3c4c4d0eb6af9ed"}, "downloads": -1, "filename": "pygray-0.9.5.tar.gz", "has_sig": false, "md5_digest": "a86bdb4779e42ce08370eff2095c3ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33322, "upload_time": "2019-03-18T12:15:39", "upload_time_iso_8601": "2019-03-18T12:15:39.519811Z", "url": "https://files.pythonhosted.org/packages/d4/ca/58eb23e3dc25a94d60a698066fd88e884eec12ae60210dda2ed5e0b78dfa/pygray-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "3d739cf116eefbe2ca6de4a25ed5d4ee", "sha256": "8a9686ea282587533c170459ae164f388f59b64787560e6089792a050e313422"}, "downloads": -1, "filename": "pygray-0.9.6.tar.gz", "has_sig": false, "md5_digest": "3d739cf116eefbe2ca6de4a25ed5d4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32830, "upload_time": "2019-03-19T13:55:43", "upload_time_iso_8601": "2019-03-19T13:55:43.201629Z", "url": "https://files.pythonhosted.org/packages/83/0d/8b915d1ea929e645a5c170a75a68e054743758689dcea9d1fb2d16091ab3/pygray-0.9.6.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "ed85c223c22144e5b78663a73a99ef6f", "sha256": "b5f2b421800f830414c0b75f22b5afeb7f0161f6c3015d1bd1e02e8b2f384f9f"}, "downloads": -1, "filename": "pygray-0.9.8.tar.gz", "has_sig": false, "md5_digest": "ed85c223c22144e5b78663a73a99ef6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32881, "upload_time": "2019-04-10T13:37:29", "upload_time_iso_8601": "2019-04-10T13:37:29.688008Z", "url": "https://files.pythonhosted.org/packages/52/bf/6ba54f2fb59ffc3113446117688459a434fdee096b9cd567077fefcb587a/pygray-0.9.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed85c223c22144e5b78663a73a99ef6f", "sha256": "b5f2b421800f830414c0b75f22b5afeb7f0161f6c3015d1bd1e02e8b2f384f9f"}, "downloads": -1, "filename": "pygray-0.9.8.tar.gz", "has_sig": false, "md5_digest": "ed85c223c22144e5b78663a73a99ef6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32881, "upload_time": "2019-04-10T13:37:29", "upload_time_iso_8601": "2019-04-10T13:37:29.688008Z", "url": "https://files.pythonhosted.org/packages/52/bf/6ba54f2fb59ffc3113446117688459a434fdee096b9cd567077fefcb587a/pygray-0.9.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:41 2020"}