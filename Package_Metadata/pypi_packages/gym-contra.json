{"info": {"author": "OuYanghaoyue", "author_email": "tony1480087241@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: Free For Educational Use", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Games/Entertainment :: Side-Scrolling/Arcade Games", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# Gym for Contra\n\n![image](https://haoyue.xyz/2019/07/24/5d380b686b1ca.png)\n\nAn [OpenAI](https://github.com/openai/gym) Gym environment for Contra.  on The Nintendo Entertainment System (NES) using the [nes-py emulator](https://github.com/Kautenja/nes-py).\n\n[Project address](https://github.com/OuYanghaoyue/gym_contra)\n\n# Installation\nThe preferred installation of Contra is from pip:\n```shell\npip install gym-contra\n```\n# Usage\n## Python\nYou must import ContraEnv before trying to make an environment. This is because gym environments are registered at runtime. By default, ContraEnv use the full NES action space of 256 discrete actions. To contstrain this,ContraEnv.actions provides three actions lists (RIGHT_ONLY, SIMPLE_MOVEMENT, and COMPLEX_MOVEMENT) for the nes_py.wrappers.JoypadSpace wrapper. See [Contra/actions.py](https://github.com/OuYanghaoyue/gym_contra/blob/master/Contra/actions.py) for a breakdown of the legal actions in each of these three lists.\n\n\n```Python\nfrom nes_py.wrappers import JoypadSpace\nimport gym\nfrom Contra.actions import SIMPLE_MOVEMENT, COMPLEX_MOVEMENT, RIGHT_ONLY\n\nenv = gym.make('Contra-v0')\nenv = JoypadSpace(env, RIGHT_ONLY)\n\nprint(\"actions\", env.action_space)\nprint(\"observation_space \", env.observation_space.shape[0])\n\ndone = False\nenv.reset()\nfor step in range(5000):\n    if done:\n        print(\"Over\")\n        break\n    state, reward, done, info = env.step(env.action_space.sample())\n    env.render()\n\nenv.close()\n```\n\n> NOTE: ContraEnv.make is just an alias to gym.make for convenience.\n> \n> NOTE: remove calls to render in training code for a nontrivial speedup.\n\n## Command Line\nPrepare to write please wait\n\n> NOTE: by default,-m is set to human.\n\n## Environments\nThese environments allow 3 attempts (lives) to play in the game. The environments only send reward-able game-play frames to agents; No cut-scenes, loading screens, etc. are sent from the NES emulator to an agent nor can an agent perform actions during these instances. If a cut-scene is not able to be skipped by hacking the NES's RAM, the environment will lock the Python process until the emulator is ready for the next action.\n\n## Step\n> Info about the rewards and info returned by the step method.\n\n### Reward Function\nThe reward function assumes the objective of the game is to move as far right as possible (increase the agent's x value), as fast as possible, without dying. To model this game, three separate variables compose the reward:\n\n1. v: the difference in agent x values between states\n- in this case this is instantaneous velocity for the given step\n- v = x1 - x0\n    - x0 is the x position before the step\n    - x1 is the x position after the step\n- moving right \u21d4 v > 0\n- moving left \u21d4 v < 0\n- not moving \u21d4 v = 0\n\n2. d: a death penalty that penalizes the agent for dying in a state\n    - this penalty encourages the agent to avoid death\n    - alive \u21d4 d = 0\n    - dead \u21d4 d = -15\n3. b : if the agent defeated the boss \n    - this reword will encourages the agent to defeat boss as possible\n    - no defeated \u21d4 0\n    - defeated \u21d4 30\n\nSo the reward function is:\n\nr = v + d + b\n\n\n> Note:The reward is clipped into the range (-15, 15).\n\n## info dictionary\nThe info dictionary returned by the step method contains the following keys:\n\n\n```Python\nlife=self._life,\ndead=self._is_dead,\ndone=self._get_done(),\nscore=self._score(),\nstatus=self._player_state,\nx_pos=self._x_position,\ny_pos=self._y_position,defeated=self._get_boss_defeated,\n\n```\n\nKey  | Type | Description |\n---|--- | ---\nlife | int | The number of lives left, i.e., {3, 2, 1}\ndead | Bool | Get The palyer is dead\ndone | Bool | Get the game is game over\nscore | int | Get the player's score\nstatus | Bool | Alive Status (00 - Dead, 01 - Alive, 02 - Dying)\nx_pos | int | Player's x position in the stage (from the left)\ny_pos |\tint\t| Player's y position in the stage (from the bottom)\ndefeated | Bool| self._get_boss_defeated", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OuYanghaoyue/gym_contra", "keywords": "OpenAI-Gym NES Contra Reinforcement-Learning-Environment", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "gym-contra", "package_url": "https://pypi.org/project/gym-contra/", "platform": "", "project_url": "https://pypi.org/project/gym-contra/", "project_urls": {"Homepage": "https://github.com/OuYanghaoyue/gym_contra"}, "release_url": "https://pypi.org/project/gym-contra/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Contra. for OpenAI Gym", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Gym for Contra</h1>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8250b1668088eb585e3f3c363bb774e02eb298c5/68747470733a2f2f68616f7975652e78797a2f323031392f30372f32342f356433383062363836623163612e706e67\"></p>\n<p>An <a href=\"https://github.com/openai/gym\" rel=\"nofollow\">OpenAI</a> Gym environment for Contra.  on The Nintendo Entertainment System (NES) using the <a href=\"https://github.com/Kautenja/nes-py\" rel=\"nofollow\">nes-py emulator</a>.</p>\n<p><a href=\"https://github.com/OuYanghaoyue/gym_contra\" rel=\"nofollow\">Project address</a></p>\n<h1>Installation</h1>\n<p>The preferred installation of Contra is from pip:</p>\n<pre>pip install gym-contra\n</pre>\n<h1>Usage</h1>\n<h2>Python</h2>\n<p>You must import ContraEnv before trying to make an environment. This is because gym environments are registered at runtime. By default, ContraEnv use the full NES action space of 256 discrete actions. To contstrain this,ContraEnv.actions provides three actions lists (RIGHT_ONLY, SIMPLE_MOVEMENT, and COMPLEX_MOVEMENT) for the nes_py.wrappers.JoypadSpace wrapper. See <a href=\"https://github.com/OuYanghaoyue/gym_contra/blob/master/Contra/actions.py\" rel=\"nofollow\">Contra/actions.py</a> for a breakdown of the legal actions in each of these three lists.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nes_py.wrappers</span> <span class=\"kn\">import</span> <span class=\"n\">JoypadSpace</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gym</span>\n<span class=\"kn\">from</span> <span class=\"nn\">Contra.actions</span> <span class=\"kn\">import</span> <span class=\"n\">SIMPLE_MOVEMENT</span><span class=\"p\">,</span> <span class=\"n\">COMPLEX_MOVEMENT</span><span class=\"p\">,</span> <span class=\"n\">RIGHT_ONLY</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s1\">'Contra-v0'</span><span class=\"p\">)</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">JoypadSpace</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">RIGHT_ONLY</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"actions\"</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">action_space</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"observation_space \"</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">observation_space</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5000</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">done</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Over\"</span><span class=\"p\">)</span>\n        <span class=\"k\">break</span>\n    <span class=\"n\">state</span><span class=\"p\">,</span> <span class=\"n\">reward</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">action_space</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">())</span>\n    <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<blockquote>\n<p>NOTE: ContraEnv.make is just an alias to gym.make for convenience.</p>\n<p>NOTE: remove calls to render in training code for a nontrivial speedup.</p>\n</blockquote>\n<h2>Command Line</h2>\n<p>Prepare to write please wait</p>\n<blockquote>\n<p>NOTE: by default,-m is set to human.</p>\n</blockquote>\n<h2>Environments</h2>\n<p>These environments allow 3 attempts (lives) to play in the game. The environments only send reward-able game-play frames to agents; No cut-scenes, loading screens, etc. are sent from the NES emulator to an agent nor can an agent perform actions during these instances. If a cut-scene is not able to be skipped by hacking the NES's RAM, the environment will lock the Python process until the emulator is ready for the next action.</p>\n<h2>Step</h2>\n<blockquote>\n<p>Info about the rewards and info returned by the step method.</p>\n</blockquote>\n<h3>Reward Function</h3>\n<p>The reward function assumes the objective of the game is to move as far right as possible (increase the agent's x value), as fast as possible, without dying. To model this game, three separate variables compose the reward:</p>\n<ol>\n<li>v: the difference in agent x values between states</li>\n</ol>\n<ul>\n<li>in this case this is instantaneous velocity for the given step</li>\n<li>v = x1 - x0\n<ul>\n<li>x0 is the x position before the step</li>\n<li>x1 is the x position after the step</li>\n</ul>\n</li>\n<li>moving right \u21d4 v &gt; 0</li>\n<li>moving left \u21d4 v &lt; 0</li>\n<li>not moving \u21d4 v = 0</li>\n</ul>\n<ol>\n<li>d: a death penalty that penalizes the agent for dying in a state\n<ul>\n<li>this penalty encourages the agent to avoid death</li>\n<li>alive \u21d4 d = 0</li>\n<li>dead \u21d4 d = -15</li>\n</ul>\n</li>\n<li>b : if the agent defeated the boss\n<ul>\n<li>this reword will encourages the agent to defeat boss as possible</li>\n<li>no defeated \u21d4 0</li>\n<li>defeated \u21d4 30</li>\n</ul>\n</li>\n</ol>\n<p>So the reward function is:</p>\n<p>r = v + d + b</p>\n<blockquote>\n<p>Note:The reward is clipped into the range (-15, 15).</p>\n</blockquote>\n<h2>info dictionary</h2>\n<p>The info dictionary returned by the step method contains the following keys:</p>\n<pre><span class=\"n\">life</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_life</span><span class=\"p\">,</span>\n<span class=\"n\">dead</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_dead</span><span class=\"p\">,</span>\n<span class=\"n\">done</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_done</span><span class=\"p\">(),</span>\n<span class=\"n\">score</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_score</span><span class=\"p\">(),</span>\n<span class=\"n\">status</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_player_state</span><span class=\"p\">,</span>\n<span class=\"n\">x_pos</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x_position</span><span class=\"p\">,</span>\n<span class=\"n\">y_pos</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y_position</span><span class=\"p\">,</span><span class=\"n\">defeated</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_boss_defeated</span><span class=\"p\">,</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>life</td>\n<td>int</td>\n<td>The number of lives left, i.e., {3, 2, 1}</td>\n</tr>\n<tr>\n<td>dead</td>\n<td>Bool</td>\n<td>Get The palyer is dead</td>\n</tr>\n<tr>\n<td>done</td>\n<td>Bool</td>\n<td>Get the game is game over</td>\n</tr>\n<tr>\n<td>score</td>\n<td>int</td>\n<td>Get the player's score</td>\n</tr>\n<tr>\n<td>status</td>\n<td>Bool</td>\n<td>Alive Status (00 - Dead, 01 - Alive, 02 - Dying)</td>\n</tr>\n<tr>\n<td>x_pos</td>\n<td>int</td>\n<td>Player's x position in the stage (from the left)</td>\n</tr>\n<tr>\n<td>y_pos</td>\n<td>int</td>\n<td>Player's y position in the stage (from the bottom)</td>\n</tr>\n<tr>\n<td>defeated</td>\n<td>Bool</td>\n<td>self._get_boss_defeated</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 5853684, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dd6b797476af9389d4790191a064dddc", "sha256": "15c81559ff328fe4965143e6244e7b4d0426fe3069e89db03856aed584e1944c"}, "downloads": -1, "filename": "gym-contra-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dd6b797476af9389d4790191a064dddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96634, "upload_time": "2019-08-15T03:23:43", "upload_time_iso_8601": "2019-08-15T03:23:43.486790Z", "url": "https://files.pythonhosted.org/packages/f7/fc/7a77b603b09eed5fc060357513f0dbb16e0c2c448fa2dd259d456dfbfd85/gym-contra-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "510c01ccfa53a8d2043867ca89a294bf", "sha256": "761b8f8421871cee8ef74cbff15709b51021c4d5b8db1ca4c9c2d7dd43d2d495"}, "downloads": -1, "filename": "gym-contra-0.0.2.tar.gz", "has_sig": false, "md5_digest": "510c01ccfa53a8d2043867ca89a294bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98331, "upload_time": "2019-08-15T03:29:00", "upload_time_iso_8601": "2019-08-15T03:29:00.617192Z", "url": "https://files.pythonhosted.org/packages/be/21/642870fc231cfb128c7811aaf170a24d48043ce3f26d0c7678d91244cb5a/gym-contra-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b599f017aa5e075b4b5c758d0551a2c7", "sha256": "304a388f2fb146bc5446b3925a77243303af08198140e5727df64954a2bdc253"}, "downloads": -1, "filename": "gym-contra-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b599f017aa5e075b4b5c758d0551a2c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100336, "upload_time": "2019-08-15T03:34:00", "upload_time_iso_8601": "2019-08-15T03:34:00.219288Z", "url": "https://files.pythonhosted.org/packages/e9/e3/9c970a472fb34aedc19f3001fe30a76624f2ba7419384a0001526a605e32/gym-contra-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "515c679d09002b57d9db32dcce35176b", "sha256": "5f03391cf5264260967e2594a402b20e8893f770331952de467acee1416899ae"}, "downloads": -1, "filename": "gym_contra-0.0.5.tar.gz", "has_sig": false, "md5_digest": "515c679d09002b57d9db32dcce35176b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100147, "upload_time": "2019-08-15T05:36:53", "upload_time_iso_8601": "2019-08-15T05:36:53.566045Z", "url": "https://files.pythonhosted.org/packages/fa/07/48ca3681de274395339a64312497de5e6e6761da31a8658d8fbbb1ce1b14/gym_contra-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "9ec2a50bb7221c040d3051933dfd7d26", "sha256": "18ed079938a8f7edbd9e4786da978bab1b9103168aac4e9349c2a39a3a3c25d6"}, "downloads": -1, "filename": "gym_contra-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9ec2a50bb7221c040d3051933dfd7d26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100179, "upload_time": "2019-08-15T07:44:56", "upload_time_iso_8601": "2019-08-15T07:44:56.412704Z", "url": "https://files.pythonhosted.org/packages/3b/c1/8e817eff4fe3a918116774a224a99c84446c2407e357c211ea2a68eed73d/gym_contra-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f1b7f34b295475080315af07526cd25f", "sha256": "872136e6cb5cf708022fb0dbd5fbfba79c1035dad8d99cee4d2ffca4c0bf788d"}, "downloads": -1, "filename": "gym_contra-0.0.7.tar.gz", "has_sig": false, "md5_digest": "f1b7f34b295475080315af07526cd25f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100290, "upload_time": "2019-08-17T10:07:52", "upload_time_iso_8601": "2019-08-17T10:07:52.772973Z", "url": "https://files.pythonhosted.org/packages/6c/f1/d60c3a7e1c0135f2221ea8b933efa838e282256bad39a431886fcaf50f0a/gym_contra-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "7480bf9cefc3cfbb9c896e4a5df96736", "sha256": "16161582a4c9cf4eb24a788cde6a18eee0835403759a65e9e0f257c4f96126a5"}, "downloads": -1, "filename": "gym_contra-0.0.8.tar.gz", "has_sig": false, "md5_digest": "7480bf9cefc3cfbb9c896e4a5df96736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100457, "upload_time": "2019-08-20T03:35:26", "upload_time_iso_8601": "2019-08-20T03:35:26.131343Z", "url": "https://files.pythonhosted.org/packages/0c/c1/5923db496ad9c24e389e323b5a7bef943217eebdbef1955acabb88ceab19/gym_contra-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "c1014c3bd903b4e872593ce1e7890420", "sha256": "8be89dd80c8cdc020cfbfe95e5f6b3ebe5c2e0cfead6d6fdbac4ec255b20ed12"}, "downloads": -1, "filename": "gym_contra-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c1014c3bd903b4e872593ce1e7890420", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100461, "upload_time": "2019-08-20T03:41:40", "upload_time_iso_8601": "2019-08-20T03:41:40.270978Z", "url": "https://files.pythonhosted.org/packages/12/ec/72fdd47e75f2ceeea65c3d5a143133d621b7d772d1f53e5c3c07378e1360/gym_contra-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "bb2588ae91c8340727d423052933c332", "sha256": "a6f71be60638e81f39dc1bf209d05990b8309849f5a429b4cc346113bec066aa"}, "downloads": -1, "filename": "gym_contra-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bb2588ae91c8340727d423052933c332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100534, "upload_time": "2019-09-18T12:54:17", "upload_time_iso_8601": "2019-09-18T12:54:17.947915Z", "url": "https://files.pythonhosted.org/packages/cb/23/128d33b05df4e8616f496556db197e9e70538271f7d60618fe487a3ab3fe/gym_contra-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b66395c244de9d0b8dc2d03ea5d03dc3", "sha256": "9d4ad95896650718b25382208e558fcc808195a9645815190d8bdf637ed0965f"}, "downloads": -1, "filename": "gym_contra-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b66395c244de9d0b8dc2d03ea5d03dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100555, "upload_time": "2019-09-19T02:56:37", "upload_time_iso_8601": "2019-09-19T02:56:37.816566Z", "url": "https://files.pythonhosted.org/packages/db/b7/a7e24afbb4537bb4220c61439a17a1907c503789d958c637a9657ebdfe6c/gym_contra-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b66395c244de9d0b8dc2d03ea5d03dc3", "sha256": "9d4ad95896650718b25382208e558fcc808195a9645815190d8bdf637ed0965f"}, "downloads": -1, "filename": "gym_contra-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b66395c244de9d0b8dc2d03ea5d03dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100555, "upload_time": "2019-09-19T02:56:37", "upload_time_iso_8601": "2019-09-19T02:56:37.816566Z", "url": "https://files.pythonhosted.org/packages/db/b7/a7e24afbb4537bb4220c61439a17a1907c503789d958c637a9657ebdfe6c/gym_contra-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:02 2020"}