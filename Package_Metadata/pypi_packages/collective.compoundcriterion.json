{"info": {"author": "IMIO", "author_email": "support@imio.be", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. image:: https://secure.travis-ci.org/collective/collective.compoundcriterion.png\n   :target: http://travis-ci.org/collective/collective.compoundcriterion\n\n.. image:: https://coveralls.io/repos/collective/collective.compoundcriterion/badge.svg?branch=master&service=github\n  :target: https://coveralls.io/github/collective/collective.compoundcriterion?branch=master\n\n============================\ncollective.compoundcriterion\n============================\n\nThis package add a new kind of criterion available for plone.app.collection.\n\nMotivation\n----------\n\nSometimes, some index are composed of different elements with a certain logic or you need to query particular elements of the site like groups of the current user or anything else.\nThis is not achievable using default indexes and Collection UI, you need to write python code.\n\nHow to use\n----------\n\nWhen adding/editing a Collection, a new criterion filed under the 'Other' category of available indexes called 'Filter' is available.\n\nWhen selecting a 'Filter', a selection box will show you named adapter that provide the collective.compoundcriterion.interfaces.ICoumpondCriterionFilter interface.\n\nYou will be able to select among available ones.  This can still be used together with other criteria.\n\nTo register this complex query builder named adapter, you will have to add this kind of code :\n\n.. code:: xml\n\n   <adapter for=\"*\"\n            factory=\"collective.compoundcriterion.tests.adapter.CompoundCrietrionFilterAdapter\"\n            provides=\"collective.compoundcriterion.interfaces.ICompoundCriterionFilter\"\n            name=\"testing-compound-adapter\" />\n\nHow to test\n-----------\n\nAdd the adapter registration zcml here above to a configure.zcml file (like the one in collective.compoundcriterion), it will make the 'testing-compound-adapter' available in the Collection 'Filter' index.\n\nThis testing adapter will query elements of the site having string 'special_text_to_find' in the title.  So create a document with such title and it should work.\n\nA second adapter can be used to test :\n\n.. code:: xml\n\n    <adapter for=\"*\"\n             factory=\"collective.compoundcriterion.tests.adapter.SampleCompoundCrietrionFilterAdapter\"\n             provides=\"collective.compoundcriterion.interfaces.ICompoundCriterionFilter\"\n             name=\"sample-compound-adapter\" />\n\nThis one will query elements having 'title_with_sample_text' in the title.\n\nContributors\n============\n\n- IMIO, support@imio.be\nChangelog\n=========\n\n\n0.4 (2018-08-31)\n----------------\n\n- When getting the adapter, if context is not the Collection, try to get real context\n  following various cases.  This is the case when using Collection\n  from plone.app.contenttypes.\n  [gbastien]\n- Do not use a SelectionWidget to render the querystring widget as it does not\n  exist anymore for plone.app.contenttypes Collection.\n  Use the MultipleSelectionWidget.  This way finally we may select several\n  filters to build the query.\n  [gbastien]\n- When using 'not' in queries for ZCatalog 3, 'query' level must be replaced by 'not' in query dictionary.\n  [sgeulette]\n\n0.3 (2016-12-08)\n----------------\n\n- Return clear message when a query format is not plone.app.querystring compliant.\n  [gbastien]\n\n\n0.2 (2015-09-04)\n----------------\n\n- Raise a KeyError if the format of the query returned by the named adapter\n  is not compliant with what is returned by\n  plone.app.querystring.queryparser.parseFormquery, this way it behaves\n  correctly with collective.eeafaceted.collectionwidget.\n  [gbastien]\n\n\n0.1 (2015-06-02)\n----------------\n\n- Initial release.\n  [IMIO]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.compoundcriterion", "keywords": "Plone collection criterion", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.compoundcriterion", "package_url": "https://pypi.org/project/collective.compoundcriterion/", "platform": "", "project_url": "https://pypi.org/project/collective.compoundcriterion/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/collective.compoundcriterion"}, "release_url": "https://pypi.org/project/collective.compoundcriterion/0.4/", "requires_dist": null, "requires_python": "", "summary": "Compound criterion for plone.app.collection managing complex query", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. image:: https://secure.travis-ci.org/collective/collective.compoundcriterion.png<br>   :target: http://travis-ci.org/collective/collective.compoundcriterion<br><br>.. image:: https://coveralls.io/repos/collective/collective.compoundcriterion/badge.svg?branch=master&amp;service=github<br>  :target: https://coveralls.io/github/collective/collective.compoundcriterion?branch=master<br><br>============================<br>collective.compoundcriterion<br>============================<br><br>This package add a new kind of criterion available for plone.app.collection.<br><br>Motivation<br>----------<br><br>Sometimes, some index are composed of different elements with a certain logic or you need to query particular elements of the site like groups of the current user or anything else.<br>This is not achievable using default indexes and Collection UI, you need to write python code.<br><br>How to use<br>----------<br><br>When adding/editing a Collection, a new criterion filed under the 'Other' category of available indexes called 'Filter' is available.<br><br>When selecting a 'Filter', a selection box will show you named adapter that provide the collective.compoundcriterion.interfaces.ICoumpondCriterionFilter interface.<br><br>You will be able to select among available ones.  This can still be used together with other criteria.<br><br>To register this complex query builder named adapter, you will have to add this kind of code :<br><br>.. code:: xml<br><br>   &lt;adapter for=\"*\"<br>            factory=\"collective.compoundcriterion.tests.adapter.CompoundCrietrionFilterAdapter\"<br>            provides=\"collective.compoundcriterion.interfaces.ICompoundCriterionFilter\"<br>            name=\"testing-compound-adapter\" /&gt;<br><br>How to test<br>-----------<br><br>Add the adapter registration zcml here above to a configure.zcml file (like the one in collective.compoundcriterion), it will make the 'testing-compound-adapter' available in the Collection 'Filter' index.<br><br>This testing adapter will query elements of the site having string 'special_text_to_find' in the title.  So create a document with such title and it should work.<br><br>A second adapter can be used to test :<br><br>.. code:: xml<br><br>    &lt;adapter for=\"*\"<br>             factory=\"collective.compoundcriterion.tests.adapter.SampleCompoundCrietrionFilterAdapter\"<br>             provides=\"collective.compoundcriterion.interfaces.ICompoundCriterionFilter\"<br>             name=\"sample-compound-adapter\" /&gt;<br><br>This one will query elements having 'title_with_sample_text' in the title.<br><br>Contributors<br>============<br><br>- IMIO, support@imio.be<br>Changelog<br>=========<br><br><br>0.4 (2018-08-31)<br>----------------<br><br>- When getting the adapter, if context is not the Collection, try to get real context<br>  following various cases.  This is the case when using Collection<br>  from plone.app.contenttypes.<br>  [gbastien]<br>- Do not use a SelectionWidget to render the querystring widget as it does not<br>  exist anymore for plone.app.contenttypes Collection.<br>  Use the MultipleSelectionWidget.  This way finally we may select several<br>  filters to build the query.<br>  [gbastien]<br>- When using 'not' in queries for ZCatalog 3, 'query' level must be replaced by 'not' in query dictionary.<br>  [sgeulette]<br><br>0.3 (2016-12-08)<br>----------------<br><br>- Return clear message when a query format is not plone.app.querystring compliant.<br>  [gbastien]<br><br><br>0.2 (2015-09-04)<br>----------------<br><br>- Raise a KeyError if the format of the query returned by the named adapter<br>  is not compliant with what is returned by<br>  plone.app.querystring.queryparser.parseFormquery, this way it behaves<br>  correctly with collective.eeafaceted.collectionwidget.<br>  [gbastien]<br><br><br>0.1 (2015-06-02)<br>----------------<br><br>- Initial release.<br>  [IMIO]\n          </div>"}, "last_serial": 4225941, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3144577e58c14974ea08d65f8643fc2c", "sha256": "b7e291c7e72dd66c7d6063bf3ff2646dd2ab6613e27a9cbfa79a99a62cda717c"}, "downloads": -1, "filename": "collective.compoundcriterion-0.1.zip", "has_sig": false, "md5_digest": "3144577e58c14974ea08d65f8643fc2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34661, "upload_time": "2015-06-02T08:51:52", "upload_time_iso_8601": "2015-06-02T08:51:52.975970Z", "url": "https://files.pythonhosted.org/packages/31/7d/b04ef5b682a975dc907c5b364f357fc8bf6d2e7b7323ce9f9100bd2fa1c1/collective.compoundcriterion-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "34c44fb84654e8679b24e938b583912f", "sha256": "5844e55b98f3173ffd6fa1be4ef05b67a3822ae04f1ed37a4032bdb26612bdce"}, "downloads": -1, "filename": "collective.compoundcriterion-0.2.zip", "has_sig": false, "md5_digest": "34c44fb84654e8679b24e938b583912f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35647, "upload_time": "2015-09-04T09:52:52", "upload_time_iso_8601": "2015-09-04T09:52:52.192632Z", "url": "https://files.pythonhosted.org/packages/41/0e/17e216801c5df5c7684ee0eed2c8a261e6eb4e3e4ae54a3c6da5c036de27/collective.compoundcriterion-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a4ce6d13be51f05f3039ec162f503a4a", "sha256": "d401f5180658304f6377df4c8bfc8423e7da0e2a397b98006d73a39727fb26dc"}, "downloads": -1, "filename": "collective.compoundcriterion-0.3.tar.gz", "has_sig": false, "md5_digest": "a4ce6d13be51f05f3039ec162f503a4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20029, "upload_time": "2016-12-08T08:29:04", "upload_time_iso_8601": "2016-12-08T08:29:04.391485Z", "url": "https://files.pythonhosted.org/packages/7e/d8/4cc146056c7decdb7949f06ccaa114dfe4837ef07871e4ebf48defc6111a/collective.compoundcriterion-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "3a18ca0c42baf6de4122ff3fb590d81f", "sha256": "fe5f121f4452bdc820526ed65dacceea1ca0f471bbaf89b71fa9f499250d4b8c"}, "downloads": -1, "filename": "collective.compoundcriterion-0.4.tar.gz", "has_sig": false, "md5_digest": "3a18ca0c42baf6de4122ff3fb590d81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21335, "upload_time": "2018-08-31T10:21:18", "upload_time_iso_8601": "2018-08-31T10:21:18.622219Z", "url": "https://files.pythonhosted.org/packages/ed/c7/d87c1fa3a2285172299ce0016446c5237f34eb4c793c21146e35157748fc/collective.compoundcriterion-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a18ca0c42baf6de4122ff3fb590d81f", "sha256": "fe5f121f4452bdc820526ed65dacceea1ca0f471bbaf89b71fa9f499250d4b8c"}, "downloads": -1, "filename": "collective.compoundcriterion-0.4.tar.gz", "has_sig": false, "md5_digest": "3a18ca0c42baf6de4122ff3fb590d81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21335, "upload_time": "2018-08-31T10:21:18", "upload_time_iso_8601": "2018-08-31T10:21:18.622219Z", "url": "https://files.pythonhosted.org/packages/ed/c7/d87c1fa3a2285172299ce0016446c5237f34eb4c793c21146e35157748fc/collective.compoundcriterion-0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:59 2020"}