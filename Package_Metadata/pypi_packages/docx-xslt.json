{"info": {"author": "Frank Bohnsack", "author_email": "frank.bohnsack@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Office/Business :: Office Suites", "Topic :: Software Development :: Libraries"], "description": "docx-xslt\n=========\n\ndocx-xslt is a Python library for adding XSL transformation for\nMicrosoft Word .docx files without XML or XSLT coding.\n\nThe module uses Word meta text which has been formated with a specific\ncharacter template called XSL, add XSL code and applies XSL\ntransformation with the XML context.\n\nThe meta text has the following syntax:\n\n     <meta text>        ::= <command list>\n     <command list>     ::= <command expr> | <command list>\n     <command expr>     ::= 'xsl' ':' <context expr> <xsl command expr> <xsl option expr>\n     <context expr>     ::= ':' <context type> | \n     <context type>     ::= 'body' | 'p0' | 'p' | 'r' | 't' | 'tbl' | 'tr' | 'tc'\n     <xsl command expr> ::= <meta command> | <xsl command>\n     <meta command>     ::= 'meta' <meta sub command>\n     <meta sub command> ::= 'up' | 'prev' | 'next' | 'cloneprev' | 'clonenext' | 'delete'\n     <xsl command>      ::= 'for-each' | 'choose' | 'when' | 'otherwise' | 'if' | 'sort' | 'value-of' | 'text'\n     <xsl option expr>  ::= <text> | <xsl option name> '=' <xsl option value>\n     <text>             ::= ...\n     <xsl option name>  ::= 'select' | 'test'\n     <xsl option value> ::=  xpath expr\n\nTo insert a list of a product names, just add\nxsl:for-each select=.//products/* xsl:t:value-of select=name and format\nthe text with the XSL template.\n\n~~~~ {.python}\nfrom lxml import etree\nfrom docxxslt import DocxXsltTemplate\n\ncontext = etree.parse(\"products.xml\")\ntemplate = DocxXsltTemplate(filename)\ntemplate.save(context=context)\n~~~~\n\nInstalling\n----------\n\n~~~~ {.bash}\npip install docx-xslt\n~~~~", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/backbohne/docx-xslt", "keywords": "docx xslt office word", "license": "The MIT License (MIT)\nCopyright (c) 2013 Steve Canny, https://github.com/scanny\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "docx-xslt", "package_url": "https://pypi.org/project/docx-xslt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/docx-xslt/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/backbohne/docx-xslt"}, "release_url": "https://pypi.org/project/docx-xslt/1.0.4/", "requires_dist": null, "requires_python": null, "summary": "XSL transformation for Microsoft Word .docx files", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>docx-xslt is a Python library for adding XSL transformation for\nMicrosoft Word .docx files without XML or XSLT coding.</p>\n<p>The module uses Word meta text which has been formated with a specific\ncharacter template called XSL, add XSL code and applies XSL\ntransformation with the XML context.</p>\n<p>The meta text has the following syntax:</p>\n<blockquote>\n&lt;meta text&gt;        ::= &lt;command list&gt;\n&lt;command list&gt;     ::= &lt;command expr&gt; | &lt;command list&gt;\n&lt;command expr&gt;     ::= \u2018xsl\u2019 \u2018:\u2019 &lt;context expr&gt; &lt;xsl command expr&gt; &lt;xsl option expr&gt;\n&lt;context expr&gt;     ::= \u2018:\u2019 &lt;context type&gt; |\n&lt;context type&gt;     ::= \u2018body\u2019 | \u2018p0\u2019 | \u2018p\u2019 | \u2018r\u2019 | \u2018t\u2019 | \u2018tbl\u2019 | \u2018tr\u2019 | \u2018tc\u2019\n&lt;xsl command expr&gt; ::= &lt;meta command&gt; | &lt;xsl command&gt;\n&lt;meta command&gt;     ::= \u2018meta\u2019 &lt;meta sub command&gt;\n&lt;meta sub command&gt; ::= \u2018up\u2019 | \u2018prev\u2019 | \u2018next\u2019 | \u2018cloneprev\u2019 | \u2018clonenext\u2019 | \u2018delete\u2019\n&lt;xsl command&gt;      ::= \u2018for-each\u2019 | \u2018choose\u2019 | \u2018when\u2019 | \u2018otherwise\u2019 | \u2018if\u2019 | \u2018sort\u2019 | \u2018value-of\u2019 | \u2018text\u2019\n&lt;xsl option expr&gt;  ::= &lt;text&gt; | &lt;xsl option name&gt; \u2018=\u2019 &lt;xsl option value&gt;\n&lt;text&gt;             ::= \u2026\n&lt;xsl option name&gt;  ::= \u2018select\u2019 | \u2018test\u2019\n&lt;xsl option value&gt; ::=  xpath expr</blockquote>\n<p>To insert a list of a product names, just add\nxsl:for-each select=.//products/* xsl:t:value-of select=name and format\nthe text with the XSL template.</p>\n<p>~~~~ {.python}\nfrom lxml import etree\nfrom docxxslt import DocxXsltTemplate</p>\n<p>context = etree.parse(\u201cproducts.xml\u201d)\ntemplate = DocxXsltTemplate(filename)\ntemplate.save(context=context)\n~~~~</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>~~~~ {.bash}\npip install docx-xslt\n~~~~</p>\n</div>\n\n          </div>"}, "last_serial": 1449280, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "e4434312c28c86063a8a82f94ab1a6f5", "sha256": "6fa446a204b096b762dbfc02c28ef243ead6b0808f71230805b2f2af5167036d"}, "downloads": -1, "filename": "docx-xslt-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e4434312c28c86063a8a82f94ab1a6f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10294, "upload_time": "2015-03-05T15:08:11", "upload_time_iso_8601": "2015-03-05T15:08:11.222885Z", "url": "https://files.pythonhosted.org/packages/ae/9d/9c613e02ed44c9858734a64e5aabde0b1906593ad6f2685ffd8386e85743/docx-xslt-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4434312c28c86063a8a82f94ab1a6f5", "sha256": "6fa446a204b096b762dbfc02c28ef243ead6b0808f71230805b2f2af5167036d"}, "downloads": -1, "filename": "docx-xslt-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e4434312c28c86063a8a82f94ab1a6f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10294, "upload_time": "2015-03-05T15:08:11", "upload_time_iso_8601": "2015-03-05T15:08:11.222885Z", "url": "https://files.pythonhosted.org/packages/ae/9d/9c613e02ed44c9858734a64e5aabde0b1906593ad6f2685ffd8386e85743/docx-xslt-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:37 2020"}