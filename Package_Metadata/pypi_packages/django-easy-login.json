{"info": {"author": "SoftServe inc.", "author_email": "", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=================\nDjango Easy Login\n=================\n\nDjango Easy Login is a Django app that allows end-users to login with already created users at the system without\nauthentication.\n\nQuick start\n-----------\n\n1. Add 'easy_login' to your INSTALLED_APPS settings:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n    ...\n    'easy_login',\n    ...\n    ]\n\n2. Now edit the example/urls.py module in your project:\n\n.. code-block:: python\n\n    urlpatterns = [\n    ...\n    url(r'^easy_login/', include('easy_login.urls', namespace='easy-login')),\n    ...\n    ]\n\n\n3. Set middleware class:\n\n.. code-block:: python\n\n    TEMPLATES = [\n        ...\n        'context_processors': [\n            'easy_login.context_processors.easy_login',\n        ...\n        ],\n    ]\n\n4. Define default url redirect:\n\n.. code-block:: python\n\n    EASY_URL_REDIRECT = 'test-app:index'\n\n5. In template define easy_login variable:\n\n.. code-block:: python\n\n    {{ easy_login }}\n\nCustomization\n-------------\n\nYou can change the view settings up to your wishes.\nFor customizing view settings please put this to the settings:\n\n.. code-block:: python\n\n    EASY_LOGIN_SETTINGS = {\n    'FILTER': {},           # --> dict;\n    'LIMIT': None,          # --> int;\n    'LABELS': [],           # --> list, lambda;\n    'LOGIN_BY': '',         # --> str;\n    'GET_BY': '',           # --> str;\n    'LOGIN_BUTTON': ''      # --> str;\n    }\n\nOptions:\n--------\n\n-   **FILTER** - possible type - **dict**; Using this option you can by the attributes filter objects which are\n    shown in the select bar. For example ``'FILTER': {'username': 'admin'}``. By default - *None*.\n-   **LIMIT** - possible type - **int**; Limit number of records in dropdown. You can put None if you don't want to\n    limit the number of users for select. By default - *10*.\n-   **LABELS** - possible type - **list**, **lambda**; You can change the label of users displayed in dropdown.\n    For example you can add roles, permissions and any other important information. Also, you can use\n    lambda expression here, for ex. ``'LABELS': lambda x: x.username + ' - ' + str(x.id)``.\n    By default - *__str__* method of your object.\n-   **LOGIN_BY** - possible type - **str**, values: **'select', 'id', 'both'**; You can enable login with select field,\n    ID input or both. By default - *'both'*.\n-   **GET_BY** - possible type - **str**; You can change attribute by which you will authorize. By default - *'id'*.\n-   **LOGIN_BUTTON** - possible type - **str**; You can change login button label. By default - *'Login'*.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SoftServeInc/django-easy-login", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-easy-login", "package_url": "https://pypi.org/project/django-easy-login/", "platform": "", "project_url": "https://pypi.org/project/django-easy-login/", "project_urls": {"Homepage": "https://github.com/SoftServeInc/django-easy-login"}, "release_url": "https://pypi.org/project/django-easy-login/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A simple Django app to switch between users without authentication.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django Easy Login is a Django app that allows end-users to login with already created users at the system without\nauthentication.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>Add \u2018easy_login\u2019 to your INSTALLED_APPS settings:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>\n<span class=\"s1\">'easy_login'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Now edit the example/urls.py module in your project:</li>\n</ol>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>\n<span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^easy_login/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'easy_login.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'easy-login'</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Set middleware class:</li>\n</ol>\n<pre><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'context_processors'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'easy_login.context_processors.easy_login'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Define default url redirect:</li>\n</ol>\n<pre><span class=\"n\">EASY_URL_REDIRECT</span> <span class=\"o\">=</span> <span class=\"s1\">'test-app:index'</span>\n</pre>\n<ol>\n<li>In template define easy_login variable:</li>\n</ol>\n<pre><span class=\"p\">{{</span> <span class=\"n\">easy_login</span> <span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>You can change the view settings up to your wishes.\nFor customizing view settings please put this to the settings:</p>\n<pre><span class=\"n\">EASY_LOGIN_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"s1\">'FILTER'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>           <span class=\"c1\"># --&gt; dict;</span>\n<span class=\"s1\">'LIMIT'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>          <span class=\"c1\"># --&gt; int;</span>\n<span class=\"s1\">'LABELS'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>           <span class=\"c1\"># --&gt; list, lambda;</span>\n<span class=\"s1\">'LOGIN_BY'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>         <span class=\"c1\"># --&gt; str;</span>\n<span class=\"s1\">'GET_BY'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>           <span class=\"c1\"># --&gt; str;</span>\n<span class=\"s1\">'LOGIN_BUTTON'</span><span class=\"p\">:</span> <span class=\"s1\">''</span>      <span class=\"c1\"># --&gt; str;</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"options\">\n<h2>Options:</h2>\n<ul>\n<li><strong>FILTER</strong> - possible type - <strong>dict</strong>; Using this option you can by the attributes filter objects which are\nshown in the select bar. For example <tt>'FILTER': {'username': 'admin'}</tt>. By default - <em>None</em>.</li>\n<li><strong>LIMIT</strong> - possible type - <strong>int</strong>; Limit number of records in dropdown. You can put None if you don\u2019t want to\nlimit the number of users for select. By default - <em>10</em>.</li>\n<li><strong>LABELS</strong> - possible type - <strong>list</strong>, <strong>lambda</strong>; You can change the label of users displayed in dropdown.\nFor example you can add roles, permissions and any other important information. Also, you can use\nlambda expression here, for ex. <tt>'LABELS': lambda x: x.username + ' - ' + str(x.id)</tt>.\nBy default - <em>__str__</em> method of your object.</li>\n<li><strong>LOGIN_BY</strong> - possible type - <strong>str</strong>, values: <strong>\u2018select\u2019, \u2018id\u2019, \u2018both\u2019</strong>; You can enable login with select field,\nID input or both. By default - <em>\u2018both\u2019</em>.</li>\n<li><strong>GET_BY</strong> - possible type - <strong>str</strong>; You can change attribute by which you will authorize. By default - <em>\u2018id\u2019</em>.</li>\n<li><strong>LOGIN_BUTTON</strong> - possible type - <strong>str</strong>; You can change login button label. By default - <em>\u2018Login\u2019</em>.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5808102, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "117de30a37efd8c4fac6d45607a6cf6d", "sha256": "bb806821b9b1121b5e2bec9566d018757b26563bf2ee435ae49464a3f185e403"}, "downloads": -1, "filename": "django-easy-login-0.1.1.tar.gz", "has_sig": false, "md5_digest": "117de30a37efd8c4fac6d45607a6cf6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12262, "upload_time": "2019-09-10T10:02:25", "upload_time_iso_8601": "2019-09-10T10:02:25.112642Z", "url": "https://files.pythonhosted.org/packages/b7/25/6b6cf22d9a5079a4a60a1da148a92b68cf9ef8d34152699b8289ee5a3e05/django-easy-login-0.1.1.tar.gz", "yanked": false}], "0.1.dev0": [{"comment_text": "", "digests": {"md5": "ea6b97311ccff529ed655aed288d0459", "sha256": "14d8f4b320b951e3fc591055ed75293c03e8ab490005b99fff00336e735be275"}, "downloads": -1, "filename": "django_easy_login-0.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "ea6b97311ccff529ed655aed288d0459", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6876, "upload_time": "2019-07-26T14:54:41", "upload_time_iso_8601": "2019-07-26T14:54:41.607287Z", "url": "https://files.pythonhosted.org/packages/15/ae/6e0af76bb27e9490abb898590c96ca5ab9cb31cb9a1c7cf963f1a69f618a/django_easy_login-0.1.dev0-py3-none-any.whl", "yanked": false}], "0.1.dev2": [{"comment_text": "", "digests": {"md5": "44947e26d242e769b2b2e6bbb710bc64", "sha256": "c2547868dc505ea58b658c939d6d7100e9c033fd5d42d969fa0b1b88b6a656ac"}, "downloads": -1, "filename": "django_easy_login-0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "44947e26d242e769b2b2e6bbb710bc64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8532, "upload_time": "2019-07-26T20:43:58", "upload_time_iso_8601": "2019-07-26T20:43:58.185535Z", "url": "https://files.pythonhosted.org/packages/6d/7b/7c1d94f9869896c6c1991d7ca6e334b9c657e1f3073ae17829b262d8ba60/django_easy_login-0.1.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f96a6a56ab6e21c566462e687fdc1dae", "sha256": "c0736e90b8b47cbf0fd65aab893421f3f93d0bf109a0311d73cba6c71dafe9c4"}, "downloads": -1, "filename": "django-easy-login-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "f96a6a56ab6e21c566462e687fdc1dae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5726, "upload_time": "2019-07-26T20:43:59", "upload_time_iso_8601": "2019-07-26T20:43:59.741305Z", "url": "https://files.pythonhosted.org/packages/4e/87/3404aa1f6667ca68a09d06789b015d172fcb2b37e5f0b1fbdc6aca9bad66/django-easy-login-0.1.dev2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "117de30a37efd8c4fac6d45607a6cf6d", "sha256": "bb806821b9b1121b5e2bec9566d018757b26563bf2ee435ae49464a3f185e403"}, "downloads": -1, "filename": "django-easy-login-0.1.1.tar.gz", "has_sig": false, "md5_digest": "117de30a37efd8c4fac6d45607a6cf6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12262, "upload_time": "2019-09-10T10:02:25", "upload_time_iso_8601": "2019-09-10T10:02:25.112642Z", "url": "https://files.pythonhosted.org/packages/b7/25/6b6cf22d9a5079a4a60a1da148a92b68cf9ef8d34152699b8289ee5a3e05/django-easy-login-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:27 2020"}