{"info": {"author": "Dmitry Savransky", "author_email": "ds264@cornell.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![Build Status](https://travis-ci.org/dsavransky/MeanStars.svg?branch=master)](https://travis-ci.org/dsavransky/MeanStars)\n[![Coverage Status](https://coveralls.io/repos/github/dsavransky/MeanStars/badge.svg?branch=master)](https://coveralls.io/github/dsavransky/MeanStars?branch=master)\n[![astropy](http://img.shields.io/badge/powered%20by-AstroPy-orange.svg?style=flat)](http://www.astropy.org/)\n[![PyPI version](https://badge.fury.io/py/MeanStars.svg)](https://badge.fury.io/py/MeanStars)\n[![Requirements Status](https://requires.io/github/dsavransky/MeanStars/requirements.svg?branch=master)](https://requires.io/github/dsavransky/MeanStars/requirements/?branch=master)\n\n# MeanStars\n\nThis code provides functionality for automating calculations based on Eric Mamajek's \"A Modern Mean Dwarf Stellar Color and Effective Temperature Sequence\" (http://www.pas.rochester.edu/~emamajek/EEM_dwarf_UBVIJHK_colors_Teff.txt).\n\nThe purpose of the code is to allow users to automatically interpolate the property columns of the table, and to calcualte colors based on any combination of the photometry columns.\n\n## Installation and Requirements\nMeanStars requires the following python modules:\n* numpy\n* scipy\n* astropy\n\nTo install, simply run:\n\n    pip install MeanStars\n    \nAlternatively, grab a copy of the repository and run:\n\n    python setup.py install\n    \n## Usage\nTo use MeanStars, you must first create a MeanStars object:\n\n```python\nfrom MeanStars import MeanStars\nms = MeanStars()\n```\nThis object contains a number of useful attributes, including:\n* `ms.data`: The full dataset in astropy table format\n* `ms.bands`: The names of all unique bands from the dataset (in a string array)\n* `ms.colors`: All of the original colors from the dataset (in an nx2 string array, where n is the length of `ms.bands` and the color is the first column minus the second).  The same information is also encoded in `ms.colorstr`, which is the original color name from the dataset\n* `ms.noncolors`: All data attributes not related to color (these include stellar masses, radii, etc.)\n* `ms.SpecTypes`: All of the major spectral types from the dataset (in a string array - nominally this will always be O,B,A,F,G,K,M,L,T,Y)\n* `ms.colorgraph`: A directed graph (encoded as a dictionary) mapping all relationships between bands established by the colors in the original dataset\n\n### Interpolating Colors\nMeanStars provides two methods for interpolating colors:  `TeffColor` and `SpTColor`, where the former interpolates by effective temperature, and the latter by spectral type.  In general, it is unlikely that you will want to query the data by any spectral type not explicilty listed, so the `SpTColor` most frequently acts as a simple lookup table of the data.  In each case, the methods are called by providing the two bands defining the color (called `start` and `end` in the code such that the color is `start` - `end`), and the temperature or spectral type.\n\nSo, to find the 'U-B' color of a 29000 K star, you would execute:\n\n```python\nms.TeffColor('U','B',29000)\n```\nThis particular instance corresponds to an exact entry in the data table, and the value returned should exactly match the entry.  A more interesting case is the 'U-H' color of a 6000 K star:\n```python\nms.TeffColor('U','H',6000)\n```\nHere, you are requesting a color not found in the table at a temperature not found in the table (but bracketed by other temperature values). You can query to find the specific sets of color combined to give this result by running:\n```python\nms.searchgraph('U','H')\n```\nwhich will return `['U', 'B', 'V', 'Ks', 'H']`, meaning that the 'U-B','B-V','V-Ks', and 'Ks-H' colors were added to get the result. \n\nInterpolating by spectral type works exactly the same way, excpet that the type is defined by two input variables representing the major and minor subtype.  So, to find the 'U-H' color of a G2V dwarf, you would execute:\n```python\nms.SpTColor('U','H','G',2)\n```\n\nEach time one of these routines is called on a new color (for a given object instance), the generated interpolant is saved in `ms.Teffinterps` and `ms.SpTinterps` (as appropriate to the method call).  This means that the interpolant is generated just once per object instance, speeding up subsequent computations. \n\n### Interpolating Other Properties\n\nJust as with colors, any other property in the original data set can be interpolated as a function of effective temperature or spectral type, via methods `TeffOther` and `SpTOther`, respectively. The methods use the same syntax as their color counterparts, save that the property is defined by a single string input.  \n\nSo, to find the mean solar mass of a 5500 K star, you would run:\n```python\nms.TeffOther('Msun',5500)\n```\nand to find the mean radius of a K9V star, you would run:\n```python\nms.SpTOther('R_Rsun','K',9)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dsavransky/MeanStars", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "MeanStars", "package_url": "https://pypi.org/project/MeanStars/", "platform": "", "project_url": "https://pypi.org/project/MeanStars/", "project_urls": {"Homepage": "https://github.com/dsavransky/MeanStars"}, "release_url": "https://pypi.org/project/MeanStars/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Automated property interpolation and color calculations for main sequence stars", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/dsavransky/MeanStars\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ab8697ee73988fea571e3c19056b53bdde3a6f1/68747470733a2f2f7472617669732d63692e6f72672f6473617672616e736b792f4d65616e53746172732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/dsavransky/MeanStars?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a50b0a9ed6dd1c2e39f61a456299a9deae00747a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6473617672616e736b792f4d65616e53746172732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://www.astropy.org/\" rel=\"nofollow\"><img alt=\"astropy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/193fcb7be12e2af08ca8b3d6a84ab5ea9ad746ab/687474703a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d417374726f50792d6f72616e67652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://badge.fury.io/py/MeanStars\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cec68248bfe1196e32ae008800cdb95a26fcc0a6/68747470733a2f2f62616467652e667572792e696f2f70792f4d65616e53746172732e737667\"></a>\n<a href=\"https://requires.io/github/dsavransky/MeanStars/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d6d4b5d42533d061ddd28f82f1518c4bdd876c6/68747470733a2f2f72657175697265732e696f2f6769746875622f6473617672616e736b792f4d65616e53746172732f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>MeanStars</h1>\n<p>This code provides functionality for automating calculations based on Eric Mamajek's \"A Modern Mean Dwarf Stellar Color and Effective Temperature Sequence\" (<a href=\"http://www.pas.rochester.edu/%7Eemamajek/EEM_dwarf_UBVIJHK_colors_Teff.txt\" rel=\"nofollow\">http://www.pas.rochester.edu/~emamajek/EEM_dwarf_UBVIJHK_colors_Teff.txt</a>).</p>\n<p>The purpose of the code is to allow users to automatically interpolate the property columns of the table, and to calcualte colors based on any combination of the photometry columns.</p>\n<h2>Installation and Requirements</h2>\n<p>MeanStars requires the following python modules:</p>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>astropy</li>\n</ul>\n<p>To install, simply run:</p>\n<pre><code>pip install MeanStars\n</code></pre>\n<p>Alternatively, grab a copy of the repository and run:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h2>Usage</h2>\n<p>To use MeanStars, you must first create a MeanStars object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MeanStars</span> <span class=\"kn\">import</span> <span class=\"n\">MeanStars</span>\n<span class=\"n\">ms</span> <span class=\"o\">=</span> <span class=\"n\">MeanStars</span><span class=\"p\">()</span>\n</pre>\n<p>This object contains a number of useful attributes, including:</p>\n<ul>\n<li><code>ms.data</code>: The full dataset in astropy table format</li>\n<li><code>ms.bands</code>: The names of all unique bands from the dataset (in a string array)</li>\n<li><code>ms.colors</code>: All of the original colors from the dataset (in an nx2 string array, where n is the length of <code>ms.bands</code> and the color is the first column minus the second).  The same information is also encoded in <code>ms.colorstr</code>, which is the original color name from the dataset</li>\n<li><code>ms.noncolors</code>: All data attributes not related to color (these include stellar masses, radii, etc.)</li>\n<li><code>ms.SpecTypes</code>: All of the major spectral types from the dataset (in a string array - nominally this will always be O,B,A,F,G,K,M,L,T,Y)</li>\n<li><code>ms.colorgraph</code>: A directed graph (encoded as a dictionary) mapping all relationships between bands established by the colors in the original dataset</li>\n</ul>\n<h3>Interpolating Colors</h3>\n<p>MeanStars provides two methods for interpolating colors:  <code>TeffColor</code> and <code>SpTColor</code>, where the former interpolates by effective temperature, and the latter by spectral type.  In general, it is unlikely that you will want to query the data by any spectral type not explicilty listed, so the <code>SpTColor</code> most frequently acts as a simple lookup table of the data.  In each case, the methods are called by providing the two bands defining the color (called <code>start</code> and <code>end</code> in the code such that the color is <code>start</code> - <code>end</code>), and the temperature or spectral type.</p>\n<p>So, to find the 'U-B' color of a 29000 K star, you would execute:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">TeffColor</span><span class=\"p\">(</span><span class=\"s1\">'U'</span><span class=\"p\">,</span><span class=\"s1\">'B'</span><span class=\"p\">,</span><span class=\"mi\">29000</span><span class=\"p\">)</span>\n</pre>\n<p>This particular instance corresponds to an exact entry in the data table, and the value returned should exactly match the entry.  A more interesting case is the 'U-H' color of a 6000 K star:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">TeffColor</span><span class=\"p\">(</span><span class=\"s1\">'U'</span><span class=\"p\">,</span><span class=\"s1\">'H'</span><span class=\"p\">,</span><span class=\"mi\">6000</span><span class=\"p\">)</span>\n</pre>\n<p>Here, you are requesting a color not found in the table at a temperature not found in the table (but bracketed by other temperature values). You can query to find the specific sets of color combined to give this result by running:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">searchgraph</span><span class=\"p\">(</span><span class=\"s1\">'U'</span><span class=\"p\">,</span><span class=\"s1\">'H'</span><span class=\"p\">)</span>\n</pre>\n<p>which will return <code>['U', 'B', 'V', 'Ks', 'H']</code>, meaning that the 'U-B','B-V','V-Ks', and 'Ks-H' colors were added to get the result.</p>\n<p>Interpolating by spectral type works exactly the same way, excpet that the type is defined by two input variables representing the major and minor subtype.  So, to find the 'U-H' color of a G2V dwarf, you would execute:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">SpTColor</span><span class=\"p\">(</span><span class=\"s1\">'U'</span><span class=\"p\">,</span><span class=\"s1\">'H'</span><span class=\"p\">,</span><span class=\"s1\">'G'</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<p>Each time one of these routines is called on a new color (for a given object instance), the generated interpolant is saved in <code>ms.Teffinterps</code> and <code>ms.SpTinterps</code> (as appropriate to the method call).  This means that the interpolant is generated just once per object instance, speeding up subsequent computations.</p>\n<h3>Interpolating Other Properties</h3>\n<p>Just as with colors, any other property in the original data set can be interpolated as a function of effective temperature or spectral type, via methods <code>TeffOther</code> and <code>SpTOther</code>, respectively. The methods use the same syntax as their color counterparts, save that the property is defined by a single string input.</p>\n<p>So, to find the mean solar mass of a 5500 K star, you would run:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">TeffOther</span><span class=\"p\">(</span><span class=\"s1\">'Msun'</span><span class=\"p\">,</span><span class=\"mi\">5500</span><span class=\"p\">)</span>\n</pre>\n<p>and to find the mean radius of a K9V star, you would run:</p>\n<pre><span class=\"n\">ms</span><span class=\"o\">.</span><span class=\"n\">SpTOther</span><span class=\"p\">(</span><span class=\"s1\">'R_Rsun'</span><span class=\"p\">,</span><span class=\"s1\">'K'</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6563438, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3bde22203307656ec0cbe84fa7a098d0", "sha256": "ddea71050c6db5dda0ea11881141dc4370022492b972780febe4619a0bcf8665"}, "downloads": -1, "filename": "MeanStars-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3bde22203307656ec0cbe84fa7a098d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13219, "upload_time": "2018-11-09T20:05:50", "upload_time_iso_8601": "2018-11-09T20:05:50.724420Z", "url": "https://files.pythonhosted.org/packages/f3/d6/be60d9899329c36e339c3bcdd061f1c3d7575462c38790f6aa91388b9a28/MeanStars-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0cce996da7206acddf1d25a495af3597", "sha256": "c0f2c194edab17fb7b713355cd2a31f1d3791e4b6e8851e5e97d091f7cc3cf76"}, "downloads": -1, "filename": "MeanStars-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0cce996da7206acddf1d25a495af3597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13275, "upload_time": "2018-11-11T14:29:06", "upload_time_iso_8601": "2018-11-11T14:29:06.532559Z", "url": "https://files.pythonhosted.org/packages/a8/05/5d667d354fa232baa856c44fe71e66598195bb54095d2f3afa7d7920cf08/MeanStars-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5c2f0cd29acec4901b4fd3124becb509", "sha256": "2fad342c844a2e56c28c111632b313a0e94423f3cbc85a001ba0d49ae9c0b726"}, "downloads": -1, "filename": "MeanStars-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5c2f0cd29acec4901b4fd3124becb509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14982, "upload_time": "2018-11-13T16:09:58", "upload_time_iso_8601": "2018-11-13T16:09:58.817615Z", "url": "https://files.pythonhosted.org/packages/65/7a/49b0720969c167d96e04a2476bd177c3b788779bd4c2850656183da70270/MeanStars-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4f55dd97bd88d6171dc9e6fea2f6cd71", "sha256": "96525c8d30aa725dee00874e9bd04f726fce518315261cbe6b237d309ca7ebb0"}, "downloads": -1, "filename": "MeanStars-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4f55dd97bd88d6171dc9e6fea2f6cd71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15003, "upload_time": "2018-11-14T19:40:52", "upload_time_iso_8601": "2018-11-14T19:40:52.677312Z", "url": "https://files.pythonhosted.org/packages/fb/94/aa32fa724b551b3e75194d7c15dc66e86a665cf403bdf3e7fe49b844e4cd/MeanStars-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "860b5e52b1b1687232de6521999eb2b2", "sha256": "b754f997d5e714774c63281bbbb9a5249936e44aa1ca5ea52a2e00e80a8d3178"}, "downloads": -1, "filename": "MeanStars-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "860b5e52b1b1687232de6521999eb2b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26489, "upload_time": "2019-06-24T00:44:01", "upload_time_iso_8601": "2019-06-24T00:44:01.047798Z", "url": "https://files.pythonhosted.org/packages/06/f4/29b4db9d5fb7ee690f642eacfa101c0fc2b450d4863221cd30989cb5cb1e/MeanStars-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a965112c8c7445b7dcb0ce14017ba42d", "sha256": "a75f899344e20bd56d1029b5eb078a77c541feacd90263ba26cbcd0a96578eac"}, "downloads": -1, "filename": "MeanStars-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a965112c8c7445b7dcb0ce14017ba42d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26017, "upload_time": "2019-06-24T00:25:35", "upload_time_iso_8601": "2019-06-24T00:25:35.218891Z", "url": "https://files.pythonhosted.org/packages/a9/2b/c53d692fdc0574fb8841c2ff85cc715ee6fe46b4af1c17aee15069f7d76a/MeanStars-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "df79ce5899dd0e75149cb88f9695ccea", "sha256": "477032ec67d473f1564134afb00ccaa365ad4c7744924963e30f197e79a5dcdc"}, "downloads": -1, "filename": "MeanStars-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "df79ce5899dd0e75149cb88f9695ccea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26487, "upload_time": "2019-06-24T00:45:43", "upload_time_iso_8601": "2019-06-24T00:45:43.286457Z", "url": "https://files.pythonhosted.org/packages/b5/8c/992b9f8124931b947c76d36ea2051d561ed9b09b7338323221d26cc08f41/MeanStars-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37cd1ffcbbc76e4629938a712e82645c", "sha256": "0260006457f426e0e02cff22dbf29941a2c95cc587722383b68520533a288e73"}, "downloads": -1, "filename": "MeanStars-1.2.1.tar.gz", "has_sig": false, "md5_digest": "37cd1ffcbbc76e4629938a712e82645c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26018, "upload_time": "2019-06-24T00:45:45", "upload_time_iso_8601": "2019-06-24T00:45:45.518785Z", "url": "https://files.pythonhosted.org/packages/a1/5b/64ff20bc0c66bd20dd49de5ff217fa37b03810ec143e431a667d1b884cb5/MeanStars-1.2.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "b224573fd06819ec5866d2b09361c8e2", "sha256": "9df5013b1d79fe47f3a39214c9efe00823e02fd97e458714b33c9a878b67670f"}, "downloads": -1, "filename": "MeanStars-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b224573fd06819ec5866d2b09361c8e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30936, "upload_time": "2020-02-03T15:54:11", "upload_time_iso_8601": "2020-02-03T15:54:11.341341Z", "url": "https://files.pythonhosted.org/packages/e6/84/924d78cbaa0aebfd728fe5a58b584ab5d8dd728d29b55c2091c56d228017/MeanStars-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b224573fd06819ec5866d2b09361c8e2", "sha256": "9df5013b1d79fe47f3a39214c9efe00823e02fd97e458714b33c9a878b67670f"}, "downloads": -1, "filename": "MeanStars-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b224573fd06819ec5866d2b09361c8e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30936, "upload_time": "2020-02-03T15:54:11", "upload_time_iso_8601": "2020-02-03T15:54:11.341341Z", "url": "https://files.pythonhosted.org/packages/e6/84/924d78cbaa0aebfd728fe5a58b584ab5d8dd728d29b55c2091c56d228017/MeanStars-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:42 2020"}