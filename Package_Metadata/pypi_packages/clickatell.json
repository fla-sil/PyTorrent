{"info": {"author": "Chris Brand", "author_email": "webmaster@cainsvault.com", "bugtrack_url": null, "classifiers": [], "description": "Clickatell Python Library\n================================\n\nMaster: [![Build Status](https://secure.travis-ci.org/arcturial/clickatell-python.png?branch=master)](http://travis-ci.org/arcturial/clickatell-python)\n\nThis library allows easy access to connecting the [Clickatell's](http://www.clickatell.com) different messenging API's.\n\nThe library supports both version **2** and **3** of Python.\n\n1. Installation\n------------------\n\nYou can install this library via PIP as part of you requirements file.\n\n```\npip install clickatell\n```\n\n[Clickatell Python PyPI](https://pypi.python.org/pypi?name=clickatell&version=0.0.1&:action=display)\n\n2. Usage\n------------------\n\nThe library currently supports the `Http` and `Rest` protocols.\n\n### HTTP API\n\n``` python\nfrom clickatell.http import Http\n\nclickatell = Http(username, password, apiID)\nresponse = clickatell.sendMessage(['1111111111'], \"My Message\")\n\nfor entry in response:\n    print(entry['id'])\n    # entry['id']\n    # entry['destination']\n    # entry['error']\n    # entry['errorCode']\n```\n\n### REST API\n\n``` python\nfrom clickatell.rest import Rest\n\nclickatell = Rest(token);\nresponse = clickatell.sendMessage(['1111111111'], \"My Message\")\n\nfor entry in response:\n    print(entry['id'])\n    # entry['id']\n    # entry['destination']\n    # entry['error']\n    # entry['errorCode']\n```\n\n### Sending to multiple numbers\n\nThe `sendMessage` call `to` parameter can take an array of numbers. If you specify only a single number like `clickatell.sendMessage(1111111111, \"Message\")` the library will automatically convert it to an array for your convenience.\n\n3. Supported API calls\n------------------\n\nThe available calls are defined in the `clickatell.Transport` interface.\n\n``` python\n\ndef sendMessage(self, to, message, extra={})\n\ndef getBalance(self)\n\ndef stopMessage(self, apiMsgId)\n\ndef queryMessage(self, apiMsgId)\n\ndef routeCoverage(self, msisdn)\n\ndef getMessageCharge(self, apiMsgId)\n\n```\n\n4. Dealing with extra parameters in sendMessage\n--------------------------------------\n\nFor usability purposes the `sendMessage` call focuses on the recipients and the content. In order to specify and of the additional parameters defined\nin the [Clickatell document](http://www.clickatell.com), you can use the `extra` parameter and pass them as a dictionary.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arcturial/clickatell-python", "keywords": "clickatell,sms", "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "clickatell", "package_url": "https://pypi.org/project/clickatell/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clickatell/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arcturial/clickatell-python"}, "release_url": "https://pypi.org/project/clickatell/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Library for interacting with the Clickatell SMS Gateway", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Clickatell Python Library<br>================================<br><br>Master: [![Build Status](https://secure.travis-ci.org/arcturial/clickatell-python.png?branch=master)](http://travis-ci.org/arcturial/clickatell-python)<br><br>This library allows easy access to connecting the [Clickatell's](http://www.clickatell.com) different messenging API's.<br><br>The library supports both version **2** and **3** of Python.<br><br>1. Installation<br>------------------<br><br>You can install this library via PIP as part of you requirements file.<br><br>```<br>pip install clickatell<br>```<br><br>[Clickatell Python PyPI](https://pypi.python.org/pypi?name=clickatell&amp;version=0.0.1&amp;:action=display)<br><br>2. Usage<br>------------------<br><br>The library currently supports the `Http` and `Rest` protocols.<br><br>### HTTP API<br><br>``` python<br>from clickatell.http import Http<br><br>clickatell = Http(username, password, apiID)<br>response = clickatell.sendMessage(['1111111111'], \"My Message\")<br><br>for entry in response:<br>    print(entry['id'])<br>    # entry['id']<br>    # entry['destination']<br>    # entry['error']<br>    # entry['errorCode']<br>```<br><br>### REST API<br><br>``` python<br>from clickatell.rest import Rest<br><br>clickatell = Rest(token);<br>response = clickatell.sendMessage(['1111111111'], \"My Message\")<br><br>for entry in response:<br>    print(entry['id'])<br>    # entry['id']<br>    # entry['destination']<br>    # entry['error']<br>    # entry['errorCode']<br>```<br><br>### Sending to multiple numbers<br><br>The `sendMessage` call `to` parameter can take an array of numbers. If you specify only a single number like `clickatell.sendMessage(1111111111, \"Message\")` the library will automatically convert it to an array for your convenience.<br><br>3. Supported API calls<br>------------------<br><br>The available calls are defined in the `clickatell.Transport` interface.<br><br>``` python<br><br>def sendMessage(self, to, message, extra={})<br><br>def getBalance(self)<br><br>def stopMessage(self, apiMsgId)<br><br>def queryMessage(self, apiMsgId)<br><br>def routeCoverage(self, msisdn)<br><br>def getMessageCharge(self, apiMsgId)<br><br>```<br><br>4. Dealing with extra parameters in sendMessage<br>--------------------------------------<br><br>For usability purposes the `sendMessage` call focuses on the recipients and the content. In order to specify and of the additional parameters defined<br>in the [Clickatell document](http://www.clickatell.com), you can use the `extra` parameter and pass them as a dictionary.\n          </div>"}, "last_serial": 1679584, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9f294d3ba13e224bb9e4e177a10dea20", "sha256": "13834cab8c9377af176d991d2826f8da053eccbee2540b0c8e2302c63513bcf8"}, "downloads": -1, "filename": "clickatell-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9f294d3ba13e224bb9e4e177a10dea20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6311, "upload_time": "2014-12-29T18:59:17", "upload_time_iso_8601": "2014-12-29T18:59:17.392642Z", "url": "https://files.pythonhosted.org/packages/66/8b/247574e1ba31198802f00f4c1c153acb824b6fb2540ed38bb4cb1cebe1bb/clickatell-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c37225ae5ded302a33d7cac6637f9f15", "sha256": "c0c21d9100f8e60a8988bf04e5899073878eb5bffa24421d369e26ba62faf1d5"}, "downloads": -1, "filename": "clickatell-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c37225ae5ded302a33d7cac6637f9f15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6600, "upload_time": "2015-05-25T18:34:27", "upload_time_iso_8601": "2015-05-25T18:34:27.694206Z", "url": "https://files.pythonhosted.org/packages/8a/4c/19c126ba5059e55115ef3d5a35080b55464bd691360e96b82cbfce130b18/clickatell-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "379362d8d794a635e8f06f44e06f1a83", "sha256": "4e264bc7883779da7932ab5b52dbd197bba1f01048b0919dfe10c23b11553768"}, "downloads": -1, "filename": "clickatell-0.1.0.tar.gz", "has_sig": false, "md5_digest": "379362d8d794a635e8f06f44e06f1a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6589, "upload_time": "2015-05-26T07:41:40", "upload_time_iso_8601": "2015-05-26T07:41:40.221383Z", "url": "https://files.pythonhosted.org/packages/10/ab/6bbdcd1f3a1027fe6f5f32b47ed837e428d46e65f9baf9237a03d6aa8809/clickatell-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "12a7d638c44b413c3526013d5f5fa752", "sha256": "285d3192e74bb55f7f244fbf2dc1be64aabad6d9afb5bb169b3dd611e7e46210"}, "downloads": -1, "filename": "clickatell-0.1.1.tar.gz", "has_sig": false, "md5_digest": "12a7d638c44b413c3526013d5f5fa752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6727, "upload_time": "2015-05-27T07:47:47", "upload_time_iso_8601": "2015-05-27T07:47:47.130606Z", "url": "https://files.pythonhosted.org/packages/c8/36/5ff552c9a3a2a80897adcaf9aafa0ff42260ae250d4df7d264bdbd5fc622/clickatell-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3d61bcacdfbc65d4f351ad306a980215", "sha256": "564841c749b88948a457d24f000a448f17eeca7b7b486f567dc20ed630bb2857"}, "downloads": -1, "filename": "clickatell-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3d61bcacdfbc65d4f351ad306a980215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6752, "upload_time": "2015-08-16T18:19:45", "upload_time_iso_8601": "2015-08-16T18:19:45.074650Z", "url": "https://files.pythonhosted.org/packages/d4/cd/4fca280b55eee03c630d25a878ca49ff3b1255d45810f3089951756d429f/clickatell-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d61bcacdfbc65d4f351ad306a980215", "sha256": "564841c749b88948a457d24f000a448f17eeca7b7b486f567dc20ed630bb2857"}, "downloads": -1, "filename": "clickatell-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3d61bcacdfbc65d4f351ad306a980215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6752, "upload_time": "2015-08-16T18:19:45", "upload_time_iso_8601": "2015-08-16T18:19:45.074650Z", "url": "https://files.pythonhosted.org/packages/d4/cd/4fca280b55eee03c630d25a878ca49ff3b1255d45810f3089951756d429f/clickatell-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:02 2020"}