{"info": {"author": "Charlie Taylor", "author_email": "cet@appliedpython.com", "bugtrack_url": null, "classifiers": [], "description": "\r\r.. image:: https://travis-ci.org/sonofeft/GenericF2PY.svg?branch=master\r\r        \r\r.. image:: https://img.shields.io/pypi/pyversions/GenericF2PY.svg\r\r\r\r.. image:: https://img.shields.io/pypi/l/GenericF2PY.svg\r\r\r\r\r\r**Genericf2Py Demostrates How To Handle Fortran Binaries In Python Modules.**\r\r\r\rSee the Code at: `<https://github.com/sonofeft/GenericF2PY>`_\r\r\r\rSee the Docs at: `<http://genericf2py.readthedocs.org/en/latest/>`_\r\r\r\rSee PyPI page at:`<https://pypi.python.org/pypi/genericf2py>`_\r\r\r\r\r\rOverview\r\r--------\r\r\r\rGenericF2PY focuses on the use of  `f2py <https://numpy.org/devdocs/f2py/python-usage.html>`_\r\rfor integrating FORTRAN modules into python `PyPI <https://pypi.org/>`_ projects.\r\r\r\r\r\rGenericF2PY has the following goals:\r\r\r\r- Support a variety of platforms Windows/Linux/MacOS/etc.\r\r- Support a variety of python distributions (2 & 3).\r\r- Support both 32 & 64 bit installations.\r\r\r\rBased on my experience developing GenericF2PY, I believe the best way to achieve the above goals is:\r\r\r\r* Distribute only **source code** (Python & FORTRAN).\r\r* Provide guidance for setting up `f2py <https://numpy.org/devdocs/f2py/python-usage.html>`_ on the user's platform.\r\r* Recommend users install with **\"pip install <packagename>\"**.\r\r* Provide guidance for correcting any error messages.\r\r\r\rBinary Distributions\r\r--------------------\r\r\r\rWhen binary distributions install properly, they are the most convenient approach for users... **HOWEVER**...\r\r\r\rWhen binary distributions fail, they can be confounding for many users and greatly impede\r\ror even preclude the use of your project for those users.\r\r\r\rThe sheer difficulty of maintaining binaries for all possible systems can become overwhelming.\r\r\r\rBinary distributions can fail for a variety of reasons:\r\r\r\r- Compiled against wrong version of `numpy <https://numpy.org/>`_\r\r- Missing or wrong version of system libraries\r\r- Environment variable problems (PATH, LIBRARY_PATH, CC, GCC, etc.)\r\r- Security Restrictions\r\r- Unknown Unknowns\r\r\r\r\r\rIt is for these reasons, that I recommend distributing **source code only**.\r\r\r\rI'm weighing the user's difficulty of installing `f2py <https://numpy.org/devdocs/f2py/python-usage.html>`_ \r\ragainst the user's difficulty of debugging your potentially failed binary distribution and deciding that \r\rinstalling `f2py <https://numpy.org/devdocs/f2py/python-usage.html>`_ is the smaller burden.\r\rAlso, the user can Google `f2py <https://numpy.org/devdocs/f2py/python-usage.html>`_ and find answers.\r\rYou will be the user's only source of information on your binaries for all possible systems.\r\r    \r\rIf you want to make binary distributions available, it might be best to either:\r\r\r\r- create binary wheels in a Github **pip-wheels** directory\r\r- provide an option to install from source code.\r\r\r\rUsers can be directed to that Github **pip-wheels** directory or given\r\rsource-install instructions as required.\r\r\r\r\r\r\r\r\r\nKeywords: genericf2py setuptools development\r\nPlatform: any\r\nClassifier: Development Status :: 4 - Beta\r\nClassifier: Operating System :: OS Independent\r\nClassifier: Intended Audience :: Developers\r\nClassifier: Intended Audience :: End Users/Desktop\r\nClassifier: Topic :: Software Development :: Build Tools\r\nClassifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\r\nClassifier: Programming Language :: Python :: 2\r\nClassifier: Programming Language :: Python :: 2.7\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.5\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: Programming Language :: Python :: 3.7\r\nDescription-Content-Type: text/x-rst\r\nProvides-Extra: dev\r\nProvides-Extra: test\r\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/sonofeft/GenericF2PY", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://genericf2py.readthedocs.org/en/latest/", "keywords": "", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "genericf2py", "package_url": "https://pypi.org/project/genericf2py/", "platform": "", "project_url": "https://pypi.org/project/genericf2py/", "project_urls": {"Download": "https://github.com/sonofeft/GenericF2PY", "Homepage": "http://genericf2py.readthedocs.org/en/latest/"}, "release_url": "https://pypi.org/project/genericf2py/0.1.17/", "requires_dist": null, "requires_python": "", "summary": "GenericF2PY demostrates how to handle FORTRAN binaries in python modules.", "version": "0.1.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://travis-ci.org/sonofeft/GenericF2PY.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39f2ab235009cd84e63cdcf76c3a5284a1395de9/68747470733a2f2f7472617669732d63692e6f72672f736f6e6f666566742f47656e65726963463250592e7376673f6272616e63683d6d6173746572\">\n<img alt=\"https://img.shields.io/pypi/pyversions/GenericF2PY.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed402f399c6ca681f1bff63a70a0b4468e6945a3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f47656e65726963463250592e737667\">\n<img alt=\"https://img.shields.io/pypi/l/GenericF2PY.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/513cc2866516471a1f05e4ff5cdf0eb3de0b4666/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f47656e65726963463250592e737667\">\n<p><strong>Genericf2Py Demostrates How To Handle Fortran Binaries In Python Modules.</strong></p>\n<p>See the Code at: <a href=\"https://github.com/sonofeft/GenericF2PY\" rel=\"nofollow\">https://github.com/sonofeft/GenericF2PY</a></p>\n<p>See the Docs at: <a href=\"http://genericf2py.readthedocs.org/en/latest/\" rel=\"nofollow\">http://genericf2py.readthedocs.org/en/latest/</a></p>\n<p>See PyPI page at:<a href=\"https://pypi.python.org/pypi/genericf2py\" rel=\"nofollow\">https://pypi.python.org/pypi/genericf2py</a></p>\n<p>Overview</p>\n<hr class=\"docutils\">\n<p>GenericF2PY focuses on the use of  <a href=\"https://numpy.org/devdocs/f2py/python-usage.html\" rel=\"nofollow\">f2py</a></p>\n<p>for integrating FORTRAN modules into python <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> projects.</p>\n<p>GenericF2PY has the following goals:</p>\n<ul>\n<li>Support a variety of platforms Windows/Linux/MacOS/etc.</li>\n<li>Support a variety of python distributions (2 &amp; 3).</li>\n<li>Support both 32 &amp; 64 bit installations.</li>\n</ul>\n<p>Based on my experience developing GenericF2PY, I believe the best way to achieve the above goals is:</p>\n<ul>\n<li>Distribute only <strong>source code</strong> (Python &amp; FORTRAN).</li>\n<li>Provide guidance for setting up <a href=\"https://numpy.org/devdocs/f2py/python-usage.html\" rel=\"nofollow\">f2py</a> on the user\u2019s platform.</li>\n<li>Recommend users install with <strong>\u201cpip install &lt;packagename&gt;\u201d</strong>.</li>\n<li>Provide guidance for correcting any error messages.</li>\n</ul>\n<p>Binary Distributions</p>\n<hr class=\"docutils\">\n<p>When binary distributions install properly, they are the most convenient approach for users\u2026 <strong>HOWEVER</strong>\u2026</p>\n<p>When binary distributions fail, they can be confounding for many users and greatly impede</p>\n<p>or even preclude the use of your project for those users.</p>\n<p>The sheer difficulty of maintaining binaries for all possible systems can become overwhelming.</p>\n<p>Binary distributions can fail for a variety of reasons:</p>\n<ul>\n<li>Compiled against wrong version of <a href=\"https://numpy.org/\" rel=\"nofollow\">numpy</a></li>\n<li>Missing or wrong version of system libraries</li>\n<li>Environment variable problems (PATH, LIBRARY_PATH, CC, GCC, etc.)</li>\n<li>Security Restrictions</li>\n<li>Unknown Unknowns</li>\n</ul>\n<p>It is for these reasons, that I recommend distributing <strong>source code only</strong>.</p>\n<p>I\u2019m weighing the user\u2019s difficulty of installing <a href=\"https://numpy.org/devdocs/f2py/python-usage.html\" rel=\"nofollow\">f2py</a></p>\n<p>against the user\u2019s difficulty of debugging your potentially failed binary distribution and deciding that</p>\n<p>installing <a href=\"https://numpy.org/devdocs/f2py/python-usage.html\" rel=\"nofollow\">f2py</a> is the smaller burden.</p>\n<p>Also, the user can Google <a href=\"https://numpy.org/devdocs/f2py/python-usage.html\" rel=\"nofollow\">f2py</a> and find answers.</p>\n<p>You will be the user\u2019s only source of information on your binaries for all possible systems.</p>\n<p>If you want to make binary distributions available, it might be best to either:</p>\n<ul>\n<li>create binary wheels in a Github <strong>pip-wheels</strong> directory</li>\n<li>provide an option to install from source code.</li>\n</ul>\n<p>Users can be directed to that Github <strong>pip-wheels</strong> directory or given</p>\n<p>source-install instructions as required.</p>\n<p>Keywords: genericf2py setuptools development\nPlatform: any\nClassifier: Development Status :: 4 - Beta\nClassifier: Operating System :: OS Independent\nClassifier: Intended Audience :: Developers\nClassifier: Intended Audience :: End Users/Desktop\nClassifier: Topic :: Software Development :: Build Tools\nClassifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\nClassifier: Programming Language :: Python :: 2\nClassifier: Programming Language :: Python :: 2.7\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nDescription-Content-Type: text/x-rst\nProvides-Extra: dev\nProvides-Extra: test</p>\n\n          </div>"}, "last_serial": 5596419, "releases": {"0.1.17": [{"comment_text": "", "digests": {"md5": "60696bd1e5510aa35648d45bd59fdcf7", "sha256": "8c3ad6ae0afb2dbdfd13e16154e719ae70653583faceab5be8f4960ceed39ede"}, "downloads": -1, "filename": "genericf2py-0.1.17.tar.gz", "has_sig": false, "md5_digest": "60696bd1e5510aa35648d45bd59fdcf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25172, "upload_time": "2019-07-28T09:24:04", "upload_time_iso_8601": "2019-07-28T09:24:04.719855Z", "url": "https://files.pythonhosted.org/packages/17/4e/caa6fb09554b6b94bb2d0a10d31195f9eb9748a0e7497fdd04a02dbff9ba/genericf2py-0.1.17.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60696bd1e5510aa35648d45bd59fdcf7", "sha256": "8c3ad6ae0afb2dbdfd13e16154e719ae70653583faceab5be8f4960ceed39ede"}, "downloads": -1, "filename": "genericf2py-0.1.17.tar.gz", "has_sig": false, "md5_digest": "60696bd1e5510aa35648d45bd59fdcf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25172, "upload_time": "2019-07-28T09:24:04", "upload_time_iso_8601": "2019-07-28T09:24:04.719855Z", "url": "https://files.pythonhosted.org/packages/17/4e/caa6fb09554b6b94bb2d0a10d31195f9eb9748a0e7497fdd04a02dbff9ba/genericf2py-0.1.17.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:24 2020"}