{"info": {"author": "Roald Simonsen", "author_email": "roald.frej@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# parapy\nAn automatic handling of parameter passing to python programs\n\n## Usage\nImport the script. Then in the top of your own document, define a list of tuples of all your parameters of the form ('name', 'prefix'/position, type), and then call the library using `params.params(Your_Parameters)`. This will return a dictionary of all the parameters of the form {'name' : value}.\n\nThe library supports prefixed parameters (i.e. whatever comes after '-i'), boolean parameters (i.e. if '-a' is passed) and positional parameters (i.e. the second parameter without a prefix).\n\nCurrently supported types are str, int, float and bool. Multi-word parameters _must_ be enclosed in quotes.\n\n## Example\n```\nimport params\n\nparameters = [('output', '-o', str),   # A string parameter with prefix '-o'\n              ('amount', '-n', int),   # An integer parameter with prefix '-n'\n              ('verbose', '-v', bool), # A boolean parameter with name '-v'\n              ('eggs', '-e', float),   # A float parameter with prefix '-e'\n              ('input', 0, str),       # A string parameter position 0\n              ('spam', 1, int),        # An integer parameter position 1\n              ('message', '-m', str)]  # A string parameter with prefix '-m'\n\n\np = (params.params(parameters))\n\nprint(p)\n```\nThen calling the program with the parameters as such: ` python program.py -v gov_secrets.db -o elvis.mp3 4 -n 10 -m \"Listen to this cool track!\"`, will result in the following output:\n```\n{'output': 'elvis.mp3',\n 'amount': 10,\n 'verbose': True,\n 'eggs': None,\n 'input': 'gov_secrets.db',\n 'spam': 4,\n 'message': 'Listen to this cool track!'}\n```\n\n## TODO\n- Add default values\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/archStant/parapy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "parapy", "package_url": "https://pypi.org/project/parapy/", "platform": "", "project_url": "https://pypi.org/project/parapy/", "project_urls": {"Homepage": "https://github.com/archStant/parapy"}, "release_url": "https://pypi.org/project/parapy/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "An automatic handling of parameter passing to python programs.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>parapy</h1>\n<p>An automatic handling of parameter passing to python programs</p>\n<h2>Usage</h2>\n<p>Import the script. Then in the top of your own document, define a list of tuples of all your parameters of the form ('name', 'prefix'/position, type), and then call the library using <code>params.params(Your_Parameters)</code>. This will return a dictionary of all the parameters of the form {'name' : value}.</p>\n<p>The library supports prefixed parameters (i.e. whatever comes after '-i'), boolean parameters (i.e. if '-a' is passed) and positional parameters (i.e. the second parameter without a prefix).</p>\n<p>Currently supported types are str, int, float and bool. Multi-word parameters <em>must</em> be enclosed in quotes.</p>\n<h2>Example</h2>\n<pre><code>import params\n\nparameters = [('output', '-o', str),   # A string parameter with prefix '-o'\n              ('amount', '-n', int),   # An integer parameter with prefix '-n'\n              ('verbose', '-v', bool), # A boolean parameter with name '-v'\n              ('eggs', '-e', float),   # A float parameter with prefix '-e'\n              ('input', 0, str),       # A string parameter position 0\n              ('spam', 1, int),        # An integer parameter position 1\n              ('message', '-m', str)]  # A string parameter with prefix '-m'\n\n\np = (params.params(parameters))\n\nprint(p)\n</code></pre>\n<p>Then calling the program with the parameters as such: <code>python program.py -v gov_secrets.db -o elvis.mp3 4 -n 10 -m \"Listen to this cool track!\"</code>, will result in the following output:</p>\n<pre><code>{'output': 'elvis.mp3',\n 'amount': 10,\n 'verbose': True,\n 'eggs': None,\n 'input': 'gov_secrets.db',\n 'spam': 4,\n 'message': 'Listen to this cool track!'}\n</code></pre>\n<h2>TODO</h2>\n<ul>\n<li>Add default values</li>\n</ul>\n\n          </div>"}, "last_serial": 4524375, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1853eee2f04c009e2bd31a55a3f66938", "sha256": "5de5542fc948053d28de5f25e860f7b0b3b5197734a0d895e2f38262c1a11b5c"}, "downloads": -1, "filename": "parapy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1853eee2f04c009e2bd31a55a3f66938", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14873, "upload_time": "2018-11-24T19:16:40", "upload_time_iso_8601": "2018-11-24T19:16:40.930981Z", "url": "https://files.pythonhosted.org/packages/ee/14/850e3e1de8106b8bb5fb2f52250eca899c447e411eef835bca7ed11281e1/parapy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f3f6cff9d4d62599329cc55c6f5a7f1", "sha256": "255d3a2ac0d4862907423100677273f7d33d92ea876dcc2559069ef5798e36f5"}, "downloads": -1, "filename": "parapy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7f3f6cff9d4d62599329cc55c6f5a7f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2364, "upload_time": "2018-11-24T19:16:44", "upload_time_iso_8601": "2018-11-24T19:16:44.627416Z", "url": "https://files.pythonhosted.org/packages/4a/7e/4ed94ffb4bf5c5935829ee1c39c88d64cd1249e80b59d26167e0be0ef1c3/parapy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c98eb5c238ef79f57a9fae591caf098b", "sha256": "81b43346f066d334d0ea64a23ba0080b1d5552bfd2ce2d4ffdea4855922fcd37"}, "downloads": -1, "filename": "parapy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c98eb5c238ef79f57a9fae591caf098b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14874, "upload_time": "2018-11-24T19:16:43", "upload_time_iso_8601": "2018-11-24T19:16:43.190788Z", "url": "https://files.pythonhosted.org/packages/52/90/b74f198f605db9c4e61172518b3eec98f7dfee56155974e4c4ad7c667731/parapy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "836d5a1ee469a6fcd78d78b9d7b5c5ed", "sha256": "77d6f73c6149a5d1332c8a047d65838fc5e0b84eb5ed9d0e8f2b95cbff083692"}, "downloads": -1, "filename": "parapy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "836d5a1ee469a6fcd78d78b9d7b5c5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2364, "upload_time": "2018-11-24T19:16:46", "upload_time_iso_8601": "2018-11-24T19:16:46.382395Z", "url": "https://files.pythonhosted.org/packages/8e/9a/2ac652053d0a87addf090b317a2c81d3b0f2f8a9feba1565625e231d931e/parapy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9f7e89154d1d5e0ae5d897e18c1e28c6", "sha256": "9b4a270276ffe6ebcbd8560692cadb1fec3ed9c6e9755a52d5f1aec553e9c3bf"}, "downloads": -1, "filename": "parapy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9f7e89154d1d5e0ae5d897e18c1e28c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14870, "upload_time": "2018-11-24T19:47:42", "upload_time_iso_8601": "2018-11-24T19:47:42.763817Z", "url": "https://files.pythonhosted.org/packages/fe/1c/c60df7660e1f253517d5936172b1c205e8c3ee44f692a609f20feaf35c20/parapy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1588d2ccc780c4faa027e5d5ae44ae5d", "sha256": "a339f2480806e883beefa789002d3e6a3007c9f2266e550c98e1054f2ea8170d"}, "downloads": -1, "filename": "parapy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1588d2ccc780c4faa027e5d5ae44ae5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2358, "upload_time": "2018-11-24T19:47:45", "upload_time_iso_8601": "2018-11-24T19:47:45.953992Z", "url": "https://files.pythonhosted.org/packages/9b/80/2410b219da9280bf3f37bcb1b6b76209745f24e2e44b021dcea32d37e30a/parapy-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9f7e89154d1d5e0ae5d897e18c1e28c6", "sha256": "9b4a270276ffe6ebcbd8560692cadb1fec3ed9c6e9755a52d5f1aec553e9c3bf"}, "downloads": -1, "filename": "parapy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9f7e89154d1d5e0ae5d897e18c1e28c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14870, "upload_time": "2018-11-24T19:47:42", "upload_time_iso_8601": "2018-11-24T19:47:42.763817Z", "url": "https://files.pythonhosted.org/packages/fe/1c/c60df7660e1f253517d5936172b1c205e8c3ee44f692a609f20feaf35c20/parapy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1588d2ccc780c4faa027e5d5ae44ae5d", "sha256": "a339f2480806e883beefa789002d3e6a3007c9f2266e550c98e1054f2ea8170d"}, "downloads": -1, "filename": "parapy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1588d2ccc780c4faa027e5d5ae44ae5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2358, "upload_time": "2018-11-24T19:47:45", "upload_time_iso_8601": "2018-11-24T19:47:45.953992Z", "url": "https://files.pythonhosted.org/packages/9b/80/2410b219da9280bf3f37bcb1b6b76209745f24e2e44b021dcea32d37e30a/parapy-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:30 2020"}