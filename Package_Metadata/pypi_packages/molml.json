{"info": {"author": "Chris Collins", "author_email": "chris@crcollins.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "MolML\n=====\n\n|Build Status| |Coverage Status| |Documentation Status| |PyPI version|\n|License|\n\nA library to interface molecules and machine learning. The goal of this\nlibrary is to be a simple way to convert molecules into a vector\nrepresentation for later use with libraries such as\n`scikit-learn <http://scikit-learn.org/>`__. This is done using a\nsimilar API scheme.\n\nAll of the coordinates are assumed to be in angstroms.\n\nFeatures\n========\n\n::\n\n    - Simple interface to many common molecular descriptors and their variants\n        - Molecule\n            - Coulomb Matrix\n            - Bag of Bonds\n            - Encoded Bonds\n            - Encoded Angles\n            - Connectivity\n            - Connectivity Tree\n            - Autocorrelation\n        - Atom\n            - Shell\n            - Local Encoded Bonds\n            - Local Encoded Angles\n            - Local Coulomb Matrix\n            - Behler-Parrinello\n        - Kernel\n            - Atom/Summation Kernel\n        - Fragment\n            - FragmentMap\n        - Crystal\n            - Generallized Crystal\n            - Ewald Sum Matrix\n            - Sine Matrix\n    - Parallel feature generation\n    - Ability to save/load fit models\n    - Multiple input formats supported (and ability to define your own)\n    - Supports both Python 2 and Python 3\n\nExample Usage\n=============\n\n.. code:: python\n\n        >>> from molml.features import CoulombMatrix\n        >>> feat = CoulombMatrix()\n        >>> H2 = (\n        ...         ['H', 'H'],\n        ...         [\n        ...             [0.0, 0.0, 0.0],\n        ...             [1.0, 0.0, 0.0],\n        ...         ]\n        ... )\n        >>> HCN = (\n        ...         ['H', 'C', 'N'],\n        ...         [\n        ...             [-1.0, 0.0, 0.0],\n        ...             [ 0.0, 0.0, 0.0],\n        ...             [ 1.0, 0.0, 0.0],\n        ...         ]\n        ... )\n        >>> feat.fit([H2, HCN])\n        CoulombMatrix(input_type='list', n_jobs=1, sort=False, eigen=False, drop_values=False, only_lower_triangle=False)\n        >>> feat.transform([H2])\n        array([[ 0.5,  1. ,  0. ,  1. ,  0.5,  0. ,  0. ,  0. ,  0. ]])\n        >>> feat.transform([H2, HCN])\n        array([[  0.5      ,   1.       ,   0.       ,   1.       ,   0.5      ,\n                0.       ,   0.       ,   0.       ,   0.       ],\n                [  0.5      ,   6.       ,   3.5      ,   6.       ,  36.8581052,\n                42.       ,   3.5      ,  42.       ,  53.3587074]])\n        >>>\n        >>> # Example loading from files directly\n        >>> feat2 = CoulombMatrix(input_type='filename')\n        CoulombMatrix(input_type='filename', n_jobs=1, sort=False, eigen=False, drop_values=False, only_lower_triangle=False)\n        >>> paths = ['data/qm7/qm-%04d.out' % i for i in xrange(2)]\n        >>> feat2.fit_transform(paths)\n        array([[ 36.8581052 ,   5.49459021,   5.49462885,   5.4945    ,\n                  5.49031286,   0.        ,   0.        ,   0.        ,\n                  5.49459021,   0.5       ,   0.56071947,   0.56071656,\n                  0.56064037,   0.        ,   0.        ,   0.        ,\n                  5.49462885,   0.56071947,   0.5       ,   0.56071752,\n                  0.56064089,   0.        ,   0.        ,   0.        ,\n                  5.4945    ,   0.56071656,   0.56071752,   0.5       ,\n                  0.56063783,   0.        ,   0.        ,   0.        ,\n                  5.49031286,   0.56064037,   0.56064089,   0.56063783,\n                  0.5       ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ,\n                  0.        ,   0.        ,   0.        ,   0.        ],\n               [ 36.8581052 ,  23.81043959,   5.48396427,   5.48394941,\n                  5.4837656 ,   2.78378686,   2.78375582,   2.78376439,\n                  23.8104396,  36.8581052 ,   2.78378953,   2.78375777,\n                  2.78375823,   5.4839846 ,   5.48393324,   5.48376877,\n                  5.48396427,   2.78378953,   0.5       ,   0.56363019,\n                  0.56362464,   0.40019757,   0.39971446,   0.3261774 ,\n                  5.48394941,   2.78375777,   0.56363019,   0.5       ,\n                  0.56362305,   0.39971429,   0.32617621,   0.40019524,\n                  5.4837656 ,   2.78375823,   0.56362464,   0.56362305,\n                  0.5       ,   0.32617702,   0.40019469,   0.3997145 ,\n                  2.78378686,   5.4839846 ,   0.40019757,   0.39971429,\n                  0.32617702,   0.5       ,   0.56362996,   0.56362587,\n                  2.78375582,   5.48393324,   0.39971446,   0.32617621,\n                  0.40019469,   0.56362996,   0.5       ,   0.56362278,\n                  2.78376439,   5.48376877,   0.3261774 ,   0.40019524,\n                  0.3997145 ,   0.56362587,   0.56362278,   0.5       ]])\n\nFor more examples, look in the\n`examples <https://github.com/crcollins/molml/tree/master/examples>`__.\nNote: To run some of the examples scikit-learn>=0.16.0 is required.\n\nFor the full documentation, refer to the\n`docs <http://molml.readthedocs.io>`__ or the docstrings in the code.\n\nDependencies\n============\n\nMolML works with both Python 2 and Python 3. It has been tested with the\nversions listed below, but newer versions should work.\n\n::\n\n    python>=2.7/3.5/3.6\n    numpy>=1.9.1\n    scipy>=0.15.1\n    pathos>=0.2.0\n    bidict>=0.17.5\n    future  # For python 2\n\nNOTE: Due to an issue with multiprocess (a pathos dependency), the\nminimum version of Python that will work is 2.7.4. For full details see\n`this link <https://github.com/uqfoundation/multiprocess/issues/11>`__.\nWithout this, the parallel computation of features will fail.\n\nInstall\n=======\n\nOnce ``numpy`` and ``scipy`` are installed, the package can be installed\nwith pip.\n\n::\n\n    $ pip install molml\n\nOr for the bleeding edge version, you can use\n\n::\n\n    $ pip install git+git://github.com/crcollins/molml\n\nDevelopment\n===========\n\nTo install a development version, just clone the git repo.\n\n::\n\n    $ git clone https://github.com/crcollins/molml\n    $ # cd to molml and setup some virtualenv\n    $ pip install -r requirements-dev.txt\n\n`Pull requests <https://github.com/crcollins/molml/pulls>`__ and `bug\nreports <https://github.com/crcollins/molml/issues>`__ are welcomed!\n\nTo build the documentation, you just need to install the documentation\ndependencies. These are already included in the dev install.\n\n::\n\n    $ cd docs/\n    $ pip install -r requirements-docs.txt\n    $ make html\n\nTesting\n=======\n\nTo run the tests, make sure that ``nose`` is installed and then run:\n\n::\n\n    $ nosetests\n\nTo include coverage information, make sure that ``coverage`` is\ninstalled and then run:\n\n::\n\n    $ nosetests --with-coverage --cover-package=molml --cover-erase\n\nCitation\n========\n\nCurrently, there is not a dedicated publication for MolML. Instead, feel\nfree to cite the work that spawned this library.\n\n::\n\n    @article{collins2018constant,\n        title={Constant size descriptors for accurate machine learning models of molecular properties},\n        author={Collins, Christopher R and Gordon, Geoffrey J and von Lilienfeld, O Anatole and Yaron, David J},\n        journal={The Journal of Chemical Physics},\n        volume={148},\n        number={24},\n        pages={241718},\n        year={2018},\n        publisher={AIP Publishing}\n    }\n\nIn addition, each feature extraction method has its own main reference\nlisted in the docstring. These can also be accessed as follows:\n\n.. code:: python\n\n        >>> from molml.features import CoulombMatrix\n        >>> print(CoulombMatrix().get_citation())\n        Rupp, M.; Tkatchenko, A.; Muller, K.-R.; von Lilienfeld, O. A. Fast and Accurate Modeling of Molecular Atomization Energies with Machine Learning. Phys. Rev. Lett. 2012, 108, 058301.\n        Hansen, K.; Montavon, G.; Biegler, F.; Fazli, S.; Rupp, M.; Scheffler, M.; von Lilienfeld, O. A.; Tkatchenko, A.; Muller, K.-R. Assessment and Validation of Machine Learning Methods for Predicting Molecular Atomization Energies. J. Chem. Theory Comput. 2013, 9, 3404-3419.\n\n.. |Build Status| image:: https://travis-ci.org/crcollins/molml.svg?branch=master\n   :target: https://travis-ci.org/crcollins/molml\n.. |Coverage Status| image:: https://coveralls.io/repos/github/crcollins/molml/badge.svg?branch=master\n   :target: https://coveralls.io/github/crcollins/molml?branch=master\n.. |Documentation Status| image:: https://readthedocs.org/projects/molml/badge/?version=latest\n   :target: http://molml.readthedocs.io/en/latest/?badge=latest\n.. |PyPI version| image:: https://img.shields.io/pypi/v/MolML.svg?style=flat\n   :target: http://pypi.python.org/pypi/MolML\n.. |License| image:: https://img.shields.io/pypi/l/MolML.svg?style=flat\n   :target: https://github.com/crcollins/molml/blob/master/LICENSE.txt\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crcollins/molml/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "molml", "package_url": "https://pypi.org/project/molml/", "platform": "", "project_url": "https://pypi.org/project/molml/", "project_urls": {"Homepage": "https://github.com/crcollins/molml/"}, "release_url": "https://pypi.org/project/molml/0.9.0/", "requires_dist": null, "requires_python": "", "summary": "An interface between molecules and machine learning", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"molml\">\n<h2>MolML</h2>\n<p><a href=\"https://travis-ci.org/crcollins/molml\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5e6fc93aeb08bea2f528b57a5984359b13d54d5/68747470733a2f2f7472617669732d63692e6f72672f6372636f6c6c696e732f6d6f6c6d6c2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/crcollins/molml?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/201f35b804c1b38caf995ad8672f1375e345bfb3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6372636f6c6c696e732f6d6f6c6d6c2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://molml.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d25f418479125553d4808da5e2f7e73d8573d6ba/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6f6c6d6c2f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"http://pypi.python.org/pypi/MolML\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7229fb23fdf60fc68da7fd0e34482d74ca517252/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f4d6f6c4d4c2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://github.com/crcollins/molml/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7eef6c2a341cc1ed51950272dc68d0e1260db252/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f4d6f6c4d4c2e7376673f7374796c653d666c6174\"></a></p>\n<p>A library to interface molecules and machine learning. The goal of this\nlibrary is to be a simple way to convert molecules into a vector\nrepresentation for later use with libraries such as\n<a href=\"http://scikit-learn.org/\" rel=\"nofollow\">scikit-learn</a>. This is done using a\nsimilar API scheme.</p>\n<p>All of the coordinates are assumed to be in angstroms.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<pre>- Simple interface to many common molecular descriptors and their variants\n    - Molecule\n        - Coulomb Matrix\n        - Bag of Bonds\n        - Encoded Bonds\n        - Encoded Angles\n        - Connectivity\n        - Connectivity Tree\n        - Autocorrelation\n    - Atom\n        - Shell\n        - Local Encoded Bonds\n        - Local Encoded Angles\n        - Local Coulomb Matrix\n        - Behler-Parrinello\n    - Kernel\n        - Atom/Summation Kernel\n    - Fragment\n        - FragmentMap\n    - Crystal\n        - Generallized Crystal\n        - Ewald Sum Matrix\n        - Sine Matrix\n- Parallel feature generation\n- Ability to save/load fit models\n- Multiple input formats supported (and ability to define your own)\n- Supports both Python 2 and Python 3\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">molml.features</span> <span class=\"kn\">import</span> <span class=\"n\">CoulombMatrix</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat</span> <span class=\"o\">=</span> <span class=\"n\">CoulombMatrix</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">H2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"p\">[</span><span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"s1\">'H'</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"p\">[</span>\n<span class=\"o\">...</span>             <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>             <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"p\">]</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">HCN</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"p\">[</span><span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'N'</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"p\">[</span>\n<span class=\"o\">...</span>             <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>             <span class=\"p\">[</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>             <span class=\"p\">[</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"p\">]</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">([</span><span class=\"n\">H2</span><span class=\"p\">,</span> <span class=\"n\">HCN</span><span class=\"p\">])</span>\n<span class=\"n\">CoulombMatrix</span><span class=\"p\">(</span><span class=\"n\">input_type</span><span class=\"o\">=</span><span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">eigen</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">drop_values</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">only_lower_triangle</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">([</span><span class=\"n\">H2</span><span class=\"p\">])</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span> <span class=\"p\">,</span>  <span class=\"mf\">0.</span> <span class=\"p\">,</span>  <span class=\"mf\">1.</span> <span class=\"p\">,</span>  <span class=\"mf\">0.5</span><span class=\"p\">,</span>  <span class=\"mf\">0.</span> <span class=\"p\">,</span>  <span class=\"mf\">0.</span> <span class=\"p\">,</span>  <span class=\"mf\">0.</span> <span class=\"p\">,</span>  <span class=\"mf\">0.</span> <span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">([</span><span class=\"n\">H2</span><span class=\"p\">,</span> <span class=\"n\">HCN</span><span class=\"p\">])</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span>  <span class=\"mf\">0.5</span>      <span class=\"p\">,</span>   <span class=\"mf\">1.</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.</span>       <span class=\"p\">,</span>   <span class=\"mf\">1.</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.5</span>      <span class=\"p\">,</span>\n        <span class=\"mf\">0.</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.</span>       <span class=\"p\">],</span>\n        <span class=\"p\">[</span>  <span class=\"mf\">0.5</span>      <span class=\"p\">,</span>   <span class=\"mf\">6.</span>       <span class=\"p\">,</span>   <span class=\"mf\">3.5</span>      <span class=\"p\">,</span>   <span class=\"mf\">6.</span>       <span class=\"p\">,</span>  <span class=\"mf\">36.8581052</span><span class=\"p\">,</span>\n        <span class=\"mf\">42.</span>       <span class=\"p\">,</span>   <span class=\"mf\">3.5</span>      <span class=\"p\">,</span>  <span class=\"mf\">42.</span>       <span class=\"p\">,</span>  <span class=\"mf\">53.3587074</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Example loading from files directly</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat2</span> <span class=\"o\">=</span> <span class=\"n\">CoulombMatrix</span><span class=\"p\">(</span><span class=\"n\">input_type</span><span class=\"o\">=</span><span class=\"s1\">'filename'</span><span class=\"p\">)</span>\n<span class=\"n\">CoulombMatrix</span><span class=\"p\">(</span><span class=\"n\">input_type</span><span class=\"o\">=</span><span class=\"s1\">'filename'</span><span class=\"p\">,</span> <span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">eigen</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">drop_values</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">only_lower_triangle</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'data/qm7/qm-</span><span class=\"si\">%04d</span><span class=\"s1\">.out'</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">xrange</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feat2</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">36.8581052</span> <span class=\"p\">,</span>   <span class=\"mf\">5.49459021</span><span class=\"p\">,</span>   <span class=\"mf\">5.49462885</span><span class=\"p\">,</span>   <span class=\"mf\">5.4945</span>    <span class=\"p\">,</span>\n          <span class=\"mf\">5.49031286</span><span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">5.49459021</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.56071947</span><span class=\"p\">,</span>   <span class=\"mf\">0.56071656</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.56064037</span><span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">5.49462885</span><span class=\"p\">,</span>   <span class=\"mf\">0.56071947</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.56071752</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.56064089</span><span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">5.4945</span>    <span class=\"p\">,</span>   <span class=\"mf\">0.56071656</span><span class=\"p\">,</span>   <span class=\"mf\">0.56071752</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>\n          <span class=\"mf\">0.56063783</span><span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">5.49031286</span><span class=\"p\">,</span>   <span class=\"mf\">0.56064037</span><span class=\"p\">,</span>   <span class=\"mf\">0.56064089</span><span class=\"p\">,</span>   <span class=\"mf\">0.56063783</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>\n          <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">,</span>   <span class=\"mf\">0.</span>        <span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">36.8581052</span> <span class=\"p\">,</span>  <span class=\"mf\">23.81043959</span><span class=\"p\">,</span>   <span class=\"mf\">5.48396427</span><span class=\"p\">,</span>   <span class=\"mf\">5.48394941</span><span class=\"p\">,</span>\n          <span class=\"mf\">5.4837656</span> <span class=\"p\">,</span>   <span class=\"mf\">2.78378686</span><span class=\"p\">,</span>   <span class=\"mf\">2.78375582</span><span class=\"p\">,</span>   <span class=\"mf\">2.78376439</span><span class=\"p\">,</span>\n          <span class=\"mf\">23.8104396</span><span class=\"p\">,</span>  <span class=\"mf\">36.8581052</span> <span class=\"p\">,</span>   <span class=\"mf\">2.78378953</span><span class=\"p\">,</span>   <span class=\"mf\">2.78375777</span><span class=\"p\">,</span>\n          <span class=\"mf\">2.78375823</span><span class=\"p\">,</span>   <span class=\"mf\">5.4839846</span> <span class=\"p\">,</span>   <span class=\"mf\">5.48393324</span><span class=\"p\">,</span>   <span class=\"mf\">5.48376877</span><span class=\"p\">,</span>\n          <span class=\"mf\">5.48396427</span><span class=\"p\">,</span>   <span class=\"mf\">2.78378953</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.56363019</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.56362464</span><span class=\"p\">,</span>   <span class=\"mf\">0.40019757</span><span class=\"p\">,</span>   <span class=\"mf\">0.39971446</span><span class=\"p\">,</span>   <span class=\"mf\">0.3261774</span> <span class=\"p\">,</span>\n          <span class=\"mf\">5.48394941</span><span class=\"p\">,</span>   <span class=\"mf\">2.78375777</span><span class=\"p\">,</span>   <span class=\"mf\">0.56363019</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>\n          <span class=\"mf\">0.56362305</span><span class=\"p\">,</span>   <span class=\"mf\">0.39971429</span><span class=\"p\">,</span>   <span class=\"mf\">0.32617621</span><span class=\"p\">,</span>   <span class=\"mf\">0.40019524</span><span class=\"p\">,</span>\n          <span class=\"mf\">5.4837656</span> <span class=\"p\">,</span>   <span class=\"mf\">2.78375823</span><span class=\"p\">,</span>   <span class=\"mf\">0.56362464</span><span class=\"p\">,</span>   <span class=\"mf\">0.56362305</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.32617702</span><span class=\"p\">,</span>   <span class=\"mf\">0.40019469</span><span class=\"p\">,</span>   <span class=\"mf\">0.3997145</span> <span class=\"p\">,</span>\n          <span class=\"mf\">2.78378686</span><span class=\"p\">,</span>   <span class=\"mf\">5.4839846</span> <span class=\"p\">,</span>   <span class=\"mf\">0.40019757</span><span class=\"p\">,</span>   <span class=\"mf\">0.39971429</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.32617702</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.56362996</span><span class=\"p\">,</span>   <span class=\"mf\">0.56362587</span><span class=\"p\">,</span>\n          <span class=\"mf\">2.78375582</span><span class=\"p\">,</span>   <span class=\"mf\">5.48393324</span><span class=\"p\">,</span>   <span class=\"mf\">0.39971446</span><span class=\"p\">,</span>   <span class=\"mf\">0.32617621</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.40019469</span><span class=\"p\">,</span>   <span class=\"mf\">0.56362996</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">,</span>   <span class=\"mf\">0.56362278</span><span class=\"p\">,</span>\n          <span class=\"mf\">2.78376439</span><span class=\"p\">,</span>   <span class=\"mf\">5.48376877</span><span class=\"p\">,</span>   <span class=\"mf\">0.3261774</span> <span class=\"p\">,</span>   <span class=\"mf\">0.40019524</span><span class=\"p\">,</span>\n          <span class=\"mf\">0.3997145</span> <span class=\"p\">,</span>   <span class=\"mf\">0.56362587</span><span class=\"p\">,</span>   <span class=\"mf\">0.56362278</span><span class=\"p\">,</span>   <span class=\"mf\">0.5</span>       <span class=\"p\">]])</span>\n</pre>\n<p>For more examples, look in the\n<a href=\"https://github.com/crcollins/molml/tree/master/examples\" rel=\"nofollow\">examples</a>.\nNote: To run some of the examples scikit-learn&gt;=0.16.0 is required.</p>\n<p>For the full documentation, refer to the\n<a href=\"http://molml.readthedocs.io\" rel=\"nofollow\">docs</a> or the docstrings in the code.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>MolML works with both Python 2 and Python 3. It has been tested with the\nversions listed below, but newer versions should work.</p>\n<pre>python&gt;=2.7/3.5/3.6\nnumpy&gt;=1.9.1\nscipy&gt;=0.15.1\npathos&gt;=0.2.0\nbidict&gt;=0.17.5\nfuture  # For python 2\n</pre>\n<p>NOTE: Due to an issue with multiprocess (a pathos dependency), the\nminimum version of Python that will work is 2.7.4. For full details see\n<a href=\"https://github.com/uqfoundation/multiprocess/issues/11\" rel=\"nofollow\">this link</a>.\nWithout this, the parallel computation of features will fail.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Once <tt>numpy</tt> and <tt>scipy</tt> are installed, the package can be installed\nwith pip.</p>\n<pre>$ pip install molml\n</pre>\n<p>Or for the bleeding edge version, you can use</p>\n<pre>$ pip install git+git://github.com/crcollins/molml\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To install a development version, just clone the git repo.</p>\n<pre>$ git clone https://github.com/crcollins/molml\n$ # cd to molml and setup some virtualenv\n$ pip install -r requirements-dev.txt\n</pre>\n<p><a href=\"https://github.com/crcollins/molml/pulls\" rel=\"nofollow\">Pull requests</a> and <a href=\"https://github.com/crcollins/molml/issues\" rel=\"nofollow\">bug\nreports</a> are welcomed!</p>\n<p>To build the documentation, you just need to install the documentation\ndependencies. These are already included in the dev install.</p>\n<pre>$ cd docs/\n$ pip install -r requirements-docs.txt\n$ make html\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests, make sure that <tt>nose</tt> is installed and then run:</p>\n<pre>$ nosetests\n</pre>\n<p>To include coverage information, make sure that <tt>coverage</tt> is\ninstalled and then run:</p>\n<pre>$ nosetests --with-coverage --cover-package=molml --cover-erase\n</pre>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>Currently, there is not a dedicated publication for MolML. Instead, feel\nfree to cite the work that spawned this library.</p>\n<pre>@article{collins2018constant,\n    title={Constant size descriptors for accurate machine learning models of molecular properties},\n    author={Collins, Christopher R and Gordon, Geoffrey J and von Lilienfeld, O Anatole and Yaron, David J},\n    journal={The Journal of Chemical Physics},\n    volume={148},\n    number={24},\n    pages={241718},\n    year={2018},\n    publisher={AIP Publishing}\n}\n</pre>\n<p>In addition, each feature extraction method has its own main reference\nlisted in the docstring. These can also be accessed as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">molml.features</span> <span class=\"kn\">import</span> <span class=\"n\">CoulombMatrix</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">CoulombMatrix</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_citation</span><span class=\"p\">())</span>\n<span class=\"n\">Rupp</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Tkatchenko</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Muller</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"o\">.-</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">von</span> <span class=\"n\">Lilienfeld</span><span class=\"p\">,</span> <span class=\"n\">O</span><span class=\"o\">.</span> <span class=\"n\">A</span><span class=\"o\">.</span> <span class=\"n\">Fast</span> <span class=\"ow\">and</span> <span class=\"n\">Accurate</span> <span class=\"n\">Modeling</span> <span class=\"n\">of</span> <span class=\"n\">Molecular</span> <span class=\"n\">Atomization</span> <span class=\"n\">Energies</span> <span class=\"k\">with</span> <span class=\"n\">Machine</span> <span class=\"n\">Learning</span><span class=\"o\">.</span> <span class=\"n\">Phys</span><span class=\"o\">.</span> <span class=\"n\">Rev</span><span class=\"o\">.</span> <span class=\"n\">Lett</span><span class=\"o\">.</span> <span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">108</span><span class=\"p\">,</span> <span class=\"mf\">058301.</span>\n<span class=\"n\">Hansen</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Montavon</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Biegler</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Fazli</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Rupp</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Scheffler</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">von</span> <span class=\"n\">Lilienfeld</span><span class=\"p\">,</span> <span class=\"n\">O</span><span class=\"o\">.</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Tkatchenko</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"p\">;</span> <span class=\"n\">Muller</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"o\">.-</span><span class=\"n\">R</span><span class=\"o\">.</span> <span class=\"n\">Assessment</span> <span class=\"ow\">and</span> <span class=\"n\">Validation</span> <span class=\"n\">of</span> <span class=\"n\">Machine</span> <span class=\"n\">Learning</span> <span class=\"n\">Methods</span> <span class=\"k\">for</span> <span class=\"n\">Predicting</span> <span class=\"n\">Molecular</span> <span class=\"n\">Atomization</span> <span class=\"n\">Energies</span><span class=\"o\">.</span> <span class=\"n\">J</span><span class=\"o\">.</span> <span class=\"n\">Chem</span><span class=\"o\">.</span> <span class=\"n\">Theory</span> <span class=\"n\">Comput</span><span class=\"o\">.</span> <span class=\"mi\">2013</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">3404</span><span class=\"o\">-</span><span class=\"mf\">3419.</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5317568, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "41cfe14834970557d2f21e503f7caf3b", "sha256": "a382e26c407c03fb44596342b785f97b39d3a33c9de3d719da1be0b9213277db"}, "downloads": -1, "filename": "molml-0.0.1.tar.gz", "has_sig": false, "md5_digest": "41cfe14834970557d2f21e503f7caf3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5155, "upload_time": "2016-08-02T00:09:12", "upload_time_iso_8601": "2016-08-02T00:09:12.892661Z", "url": "https://files.pythonhosted.org/packages/b7/13/7e3bc17e99ce77ea764b2bb453a1a26e2504be772917f456dd7f3c3e7721/molml-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c2d1ed1e217a83f74906cc0f5bd9b2ba", "sha256": "0208c2eb02b2f62182e39f644f13d151e6f274f9e0135aee9dde9b3af79062d0"}, "downloads": -1, "filename": "molml-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c2d1ed1e217a83f74906cc0f5bd9b2ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8630, "upload_time": "2016-08-12T21:44:46", "upload_time_iso_8601": "2016-08-12T21:44:46.093671Z", "url": "https://files.pythonhosted.org/packages/37/a5/12791e065aff5d9f9f16f190fafa5631d596a78e9996b19287ba8461847f/molml-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5d947bbfa04a1ff8bda8dd6cb60e06c0", "sha256": "354e18112dfd549759355299e5baa4e33eb78089169d6f95ea41b20995c29bc4"}, "downloads": -1, "filename": "molml-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5d947bbfa04a1ff8bda8dd6cb60e06c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12819, "upload_time": "2016-08-19T04:43:15", "upload_time_iso_8601": "2016-08-19T04:43:15.139498Z", "url": "https://files.pythonhosted.org/packages/bd/ae/06bc3f95c9004b62ae917a3f1bffd414d443e155c968cff7c3bf30519844/molml-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0f9e8063a2f0fa0c46d58fa2e1b3cb9e", "sha256": "af227218c7382c1cc0cc673cde15577b80f498cdf54a1cdc1c6c5060d6269e8a"}, "downloads": -1, "filename": "molml-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0f9e8063a2f0fa0c46d58fa2e1b3cb9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15267, "upload_time": "2016-08-26T19:13:59", "upload_time_iso_8601": "2016-08-26T19:13:59.287493Z", "url": "https://files.pythonhosted.org/packages/3d/00/3d6c758ee1f2b8bfb6ecb937be60475cf577113d05a13df4bebcabd7fbcd/molml-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "dc2a425027eefd2fee493b80c9cbdfb9", "sha256": "09a187280e1e32928ef489604d973c9d749edea7d37b22cf3f05cff27188be05"}, "downloads": -1, "filename": "molml-0.3.1.tar.gz", "has_sig": false, "md5_digest": "dc2a425027eefd2fee493b80c9cbdfb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20825, "upload_time": "2016-11-26T22:33:52", "upload_time_iso_8601": "2016-11-26T22:33:52.886000Z", "url": "https://files.pythonhosted.org/packages/69/ea/54cd87b0d8475746be886a5d81789e38158b412b235d92df684c3808e513/molml-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "40600d99108582cb86165cdb0c4d1735", "sha256": "3da8d458b89a09c7d99b18d79dc02558f4921969271cef8b5a9353a1791549c1"}, "downloads": -1, "filename": "molml-0.4.0.tar.gz", "has_sig": false, "md5_digest": "40600d99108582cb86165cdb0c4d1735", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24046, "upload_time": "2017-01-09T15:59:08", "upload_time_iso_8601": "2017-01-09T15:59:08.112761Z", "url": "https://files.pythonhosted.org/packages/1b/fd/4c0ad2b18b8a19487d9005c759c3566ce1d829c387a02291dad1c87f5cc5/molml-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "bdb86a76d6d4ad0121015d499ed146fc", "sha256": "c2c449db73d95f7cd587fe74a187a15b848f60945666957935c4ab3d4e512522"}, "downloads": -1, "filename": "molml-0.5.0.tar.gz", "has_sig": false, "md5_digest": "bdb86a76d6d4ad0121015d499ed146fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27316, "upload_time": "2017-01-28T23:05:14", "upload_time_iso_8601": "2017-01-28T23:05:14.028629Z", "url": "https://files.pythonhosted.org/packages/75/18/a1c59991ef19f480242bda35bd1db3ff538f908bc612625d79b1ed1567c9/molml-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "46ebb92c7ad36422f3bcd249e872ef12", "sha256": "590338c3b2d043205e56e08c8831c66b87e906ca78217f696826a935a2e19586"}, "downloads": -1, "filename": "molml-0.5.1.tar.gz", "has_sig": false, "md5_digest": "46ebb92c7ad36422f3bcd249e872ef12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27947, "upload_time": "2017-01-29T08:43:54", "upload_time_iso_8601": "2017-01-29T08:43:54.346332Z", "url": "https://files.pythonhosted.org/packages/96/10/f795e8b4b642e646b6560d5b9f9f34e659a5ed6a767d3b1fc5ea4f25bdfc/molml-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "d3636ee23eb42b2656e3f12ae5a48ce0", "sha256": "6a094aadb3126043bf6b028663f2cd80844cd136b31ceba1559e7935eea183e1"}, "downloads": -1, "filename": "molml-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d3636ee23eb42b2656e3f12ae5a48ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37568, "upload_time": "2017-05-08T19:37:59", "upload_time_iso_8601": "2017-05-08T19:37:59.542998Z", "url": "https://files.pythonhosted.org/packages/99/67/c47a0b662157ef7173bd7c199d97a1c937c68d1c41c01f382b132bd78198/molml-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "279ededeee73240ce9fea49e3ecd68dc", "sha256": "dcee571fc43d5274ea78371229f0eb80f243e79b2a69dc64687f0dc22b9871db"}, "downloads": -1, "filename": "molml-0.7.0.tar.gz", "has_sig": false, "md5_digest": "279ededeee73240ce9fea49e3ecd68dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41715, "upload_time": "2018-03-15T20:51:03", "upload_time_iso_8601": "2018-03-15T20:51:03.016538Z", "url": "https://files.pythonhosted.org/packages/52/00/1db381e6a49ade6dfec93e0acd1693646f190fcf7dadf1c0d43e46156187/molml-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "64843e1f0281bf882f2b086c2c8a42ce", "sha256": "943a80a0343bc606675e44445a7aad430794c230ae6a6aafa8361f0a04505ac7"}, "downloads": -1, "filename": "molml-0.8.0-py2-none-any.whl", "has_sig": false, "md5_digest": "64843e1f0281bf882f2b086c2c8a42ce", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 42644, "upload_time": "2018-12-05T01:56:18", "upload_time_iso_8601": "2018-12-05T01:56:18.925592Z", "url": "https://files.pythonhosted.org/packages/4d/59/219d62dc989ac382288e9ca6b04758382b5c7632dcdf485467de5c5208e0/molml-0.8.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c9df1893a75c96810faf25a7721fe1d", "sha256": "a109e95bb0da5b910f98992adea9510df2756a192f3cb30503bfd9cca2e97c78"}, "downloads": -1, "filename": "molml-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1c9df1893a75c96810faf25a7721fe1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45676, "upload_time": "2018-12-05T01:56:20", "upload_time_iso_8601": "2018-12-05T01:56:20.373585Z", "url": "https://files.pythonhosted.org/packages/a7/be/63bf44b692999f31bb9e425e3229d926dafc4c36dba7284766541d901a89/molml-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3699911a52b35a2f6e503f68bb6191c8", "sha256": "ba41ced8123f593e984fed88bab2e36c9123624f9a03c3b306228042249e3bbc"}, "downloads": -1, "filename": "molml-0.8.0.tar.gz", "has_sig": false, "md5_digest": "3699911a52b35a2f6e503f68bb6191c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44626, "upload_time": "2018-12-05T01:56:23", "upload_time_iso_8601": "2018-12-05T01:56:23.131685Z", "url": "https://files.pythonhosted.org/packages/46/12/511f45fe28b9a1d98e5ad04222792af9dc6e7b60ffa619bde67b7f7047ac/molml-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "363b64b539d6cff7c5dd7b1d39537f05", "sha256": "493b1a762fea3f3209ab78d1eb6ace39bb96c940b86d62c1b32e31c5a3862c0b"}, "downloads": -1, "filename": "molml-0.9.0.tar.gz", "has_sig": false, "md5_digest": "363b64b539d6cff7c5dd7b1d39537f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49315, "upload_time": "2019-05-25T23:54:58", "upload_time_iso_8601": "2019-05-25T23:54:58.450201Z", "url": "https://files.pythonhosted.org/packages/97/f8/8e2bee8e954aa93933b797ad2c36ab79668d111b3dc5dddda94a1eee28c5/molml-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "363b64b539d6cff7c5dd7b1d39537f05", "sha256": "493b1a762fea3f3209ab78d1eb6ace39bb96c940b86d62c1b32e31c5a3862c0b"}, "downloads": -1, "filename": "molml-0.9.0.tar.gz", "has_sig": false, "md5_digest": "363b64b539d6cff7c5dd7b1d39537f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49315, "upload_time": "2019-05-25T23:54:58", "upload_time_iso_8601": "2019-05-25T23:54:58.450201Z", "url": "https://files.pythonhosted.org/packages/97/f8/8e2bee8e954aa93933b797ad2c36ab79668d111b3dc5dddda94a1eee28c5/molml-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:34 2020"}