{"info": {"author": "Georgiy Kozlov", "author_email": "appendix.y.z@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# `xmu`\n\n# API Tutorial\n\nThe basic API is very simple. It consists of one function.\n\n```python\n>>> import xmu\n>>> xmu_string = \"\"\"\n... [   \n...     p[ This is a paragraph. ]\n...     p[ [Hello, ] $[name] [!] ]\n... ]\n... \"\"\"\n>>> html = xmu.parse(xmu_string, context={\"name\": \"John\"})\n>>> print(html)\n```\n```html\n<p> This is a paragraph. </p>\n<p>Hello, \nJohn\n!</p>\n```\n\n\n# Feature example\n\n#### Input\n```xmu\n[\n    header(1)[\n        Hello, world!\n    ]\n    style[\n        $text-color: red;\n        color: $text-color;\n        border-color: darken($text-color, 10%);\n    ][\n        table(3, 2)[\n            [ Lorem ] [ Ipsum ] [ Dolor ]\n            [ Sit   ] [ Amet  ] [:raw \\_/__^[.]w[.]^__\\_/ rrr:]\n        ]\n     ]\n]\n```\n\n#### Output\n```\n<h1> Hello, world! </h1>\n<style>#lwunnaxwqbgasdhs {\n    color: red;\n    border-color: #cc0000; }\n</style>\n<emu-styled id=lwunnaxwqbgasdhs>\n    <table>\n        <tr>\n            <td> Lorem </td>\n            <td> Ipsum </td>\n            <td> Dolor </td>\n        </tr>\n        <tr>\n            <td> Sit </td>\n            <td> Amet </td>\n            <td> \\_/__^[.]w[.]^__\\_/ </td>\n        </tr>\n    </table>\n</emu-styled>\n```\n\n# Language reference\n\n## Plain text or HTML\n\nYou can include arbitrary text inside `[` and `]`,\ngiven that it doesn't contain any `[`.\n\n```\n[ Hello ]\n```\n\n```\n[ <div id=\"hello\"></div> ]\n```\n\nHowever, you can't just include a tag inside plain text:\n```\n[ Wrong: ]\n[ hello, it[world]! ]\n```\n\nBut you can put a sequence of tags inside the brackets.\n\n```\n[ [hello,] it[world] [!] ]\n```\n\nIn general, you can put either plain text or a sequence\nof tags inside the brackets.\n\nYou can communicate structure by using brackets.\n\n## Arbitrary plain tags\n\nYou can create any tag you want using `!`:\n```\n[ !kbd[Ctrl + C] ]\n```\n```html\n<kbd>Ctrl + C</kbd>\n```\n\n## Predefined tags\n\nSome tags are defined as language builtins.\n\n```\n[\n    p [\n        This is a paragraph\n    ]\n]\n```\n\nCurrently supported tags: `p`, `pre`, `it`, `bf`, `^` (superscript), `_` (subscript)\n\n\nThe purpose of this group of language constructs is to allow rendering to different targets: LaTeX, an abstract syntax tree etc. in the future.\n\n## Raw text\n\n```\n[:raw\n    This text preserves original\n        Indentation\n            And can [use]\n                [square] ]]]brackets[\nrrr:]\n```\n\n**rawrrr**\n\n## Comments\n\n```\n[\n    comment[Comment]\n    todo[Comment]\n    bug[Comment]\n    doc[Comment]\n]\n```\n```html\n    <!--comment:Comment-->\n    <!--todo:Comment-->\n    <!--bug:Comment-->\n    <!--doc:Comment-->\n```\n\n## Links\n\n```\n[\n    a[https://my-site.com][My site!]\n]\n```\n\n## ID and class specifiers\n\n```\n    #myDiv [\n        hello\n    ]\n    .some of my classes [\n        world\n    ]\n```\n\n```html\n    <div id=\"myDiv\">hello</div>\n    <div class=\"some of my classes\">hello</div>\n```\n\n## Headers\n\n```\n[\n    header(1)[Lorem ipsum]\n    header(2)[Dolor sit amet]\n]\n```\n\n```html\n    <h1>Lorem ipsum</h1>\n    <h2>Dolor sit amet</h2>\n```\n\n## Python expressions\n\n```\n[\n    $[\"foo\" + \"!\"*3 + \"bar\"]\n    $[:raw\n        [1, 2, 3][1]\n    rrr:]\n]\n```\n\n```html\nfoo!!!bar\n2\n```\n\n## Parse the result of a python expression\n\n```\n[   \n    $xmu[:raw \"[ p[Paragraph] ]\" rrr:]\n]\n```\n\n```html\n<p>Paragraph</p>\n```\n\n```\n[   \n    $xmu[:raw \"[ $xmu['p[Paragraph]'] ]\" rrr:]\n]\n```\n\n```html\n<p>Paragraph</p>\n```\n\n## Tables\n\n```\n[\n    table(3, 2)[\n        [ Lorem ] [ Ipsum ] [ Dolor ]\n        [ Sit   ] [ Amet  ] [       ]\n    ]\n]\n```\n\n```html\n   <table>\n        <tr>\n            <td> Lorem </td>\n            <td> Ipsum </td>\n            <td> Dolor </td>\n        </tr>\n        <tr>\n            <td> Sit   </td>\n            <td> Amet  </td>\n            <td>       </td>\n        </tr>\n    </table>\n```\n\n## Constants\n\nTo see the list of all constants, take a look at\n`/xmu/extensions/text_formatting.py`\n\nA constant begins with a `?`.\n\n```\n[\n    [XMU] ?-- [an extensible markup language]\n]\n```\n\n```html\nXMU &emdash; an extensible markup language\n```\n\n## Styling\n\nAnonymous styles are now very powerful!\nXMU uses SCSS (a flavour of SASS) to compile\ninline styles.\n\n```\nstyle [:raw\n    color: red;\n    font-family: 'Comic Sans MS';\nrrr:][\n    header(1)[\n        Solving FizzBuzz by the means of a DSL\n    ]\n]\n```\n\nBasically, XMU creates a random ID and creates\na standalone style for it.\n\n```html\n<style>#aspefpsnfglktjgu {\n    color: red;\n    font-family: 'Comic Sans MS'; }\n</style>\n<emu-styled id=aspefpsnfglktjgu>\n    <h1>Solving FizzBuzz by the means of a DSL</h1>\n</emu-styled>\n```\n\nThe advantage of using SASS is that you can define a nested style:\n\n```\nstyle [:raw\n    color: red;\n    font-family: 'Comic Sans MS';\n    b {\n        color: blue;\n    }\nrrr:][\n    header(1)[\n        Solving FizzBuzz by the means of a DSL\n    ]\n    bf[ This text will be blue]\n]\n```\n\n```html\n<style>\n    #jghejijhvudjuhvg {\n        color: red;\n        font-family: 'Comic Sans MS'; }\n        #jghejijhvudjuhvg b {\n            color: blue;}\n</style>\n<emu-styled id=jghejijhvudjuhvg>\n    <h1>Solving FizzBuzz by the means of a DSL</h1>\n    <b> This text will be blue </b>\n</emu-styled>\n```\n\n## Jinja2\n\n```\n%[ user.name ]\n```\n\n```html\n{{ user.name }}\n```\n\n---\n```\n%extends[website.com]\n```\n\n```html\n{% extends \"website.com\" %}\n```\n---\n```\n%block(footer)[ header(2)[All lefts reserved] ]\n```\n\n```\n{% block footer %}\n<h2>All lefts reserved</h2>\n{% endblock %}\n```\n\n## FontAwesome\n\n```\nfas[home]\n```\n```html\n<i class=\"fas fas-home\"></i>\n```\n\n# Extending the language\n\nTutorial coming soon\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://https://github.com/decorator-factory/xmu-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xmu", "package_url": "https://pypi.org/project/xmu/", "platform": "", "project_url": "https://pypi.org/project/xmu/", "project_urls": {"Homepage": "https://https://github.com/decorator-factory/xmu-python"}, "release_url": "https://pypi.org/project/xmu/0.2.0/", "requires_dist": ["attrdict", "lark-parser", "libsass"], "requires_python": ">=3.6", "summary": "eXtensible MarkUp parser", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>xmu</code></h1>\n<h1>API Tutorial</h1>\n<p>The basic API is very simple. It consists of one function.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">xmu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xmu_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">... [   </span>\n<span class=\"s2\">...     p[ This is a paragraph. ]</span>\n<span class=\"s2\">...     p[ [Hello, ] $[name] [!] ]</span>\n<span class=\"s2\">... ]</span>\n<span class=\"s2\">... \"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">xmu</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">xmu_string</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span> This is a paragraph. <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello, \nJohn\n!<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n<h1>Feature example</h1>\n<h4>Input</h4>\n<pre>[\n    header(1)[\n        Hello, world!\n    ]\n    style[\n        $text-color: red;\n        color: $text-color;\n        border-color: darken($text-color, 10%);\n    ][\n        table(3, 2)[\n            [ Lorem ] [ Ipsum ] [ Dolor ]\n            [ Sit   ] [ Amet  ] [:raw \\_/__^[.]w[.]^__\\_/ rrr:]\n        ]\n     ]\n]\n</pre>\n<h4>Output</h4>\n<pre><code>&lt;h1&gt; Hello, world! &lt;/h1&gt;\n&lt;style&gt;#lwunnaxwqbgasdhs {\n    color: red;\n    border-color: #cc0000; }\n&lt;/style&gt;\n&lt;emu-styled id=lwunnaxwqbgasdhs&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt; Lorem &lt;/td&gt;\n            &lt;td&gt; Ipsum &lt;/td&gt;\n            &lt;td&gt; Dolor &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt; Sit &lt;/td&gt;\n            &lt;td&gt; Amet &lt;/td&gt;\n            &lt;td&gt; \\_/__^[.]w[.]^__\\_/ &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/emu-styled&gt;\n</code></pre>\n<h1>Language reference</h1>\n<h2>Plain text or HTML</h2>\n<p>You can include arbitrary text inside <code>[</code> and <code>]</code>,\ngiven that it doesn't contain any <code>[</code>.</p>\n<pre><code>[ Hello ]\n</code></pre>\n<pre><code>[ &lt;div id=\"hello\"&gt;&lt;/div&gt; ]\n</code></pre>\n<p>However, you can't just include a tag inside plain text:</p>\n<pre><code>[ Wrong: ]\n[ hello, it[world]! ]\n</code></pre>\n<p>But you can put a sequence of tags inside the brackets.</p>\n<pre><code>[ [hello,] it[world] [!] ]\n</code></pre>\n<p>In general, you can put either plain text or a sequence\nof tags inside the brackets.</p>\n<p>You can communicate structure by using brackets.</p>\n<h2>Arbitrary plain tags</h2>\n<p>You can create any tag you want using <code>!</code>:</p>\n<pre><code>[ !kbd[Ctrl + C] ]\n</code></pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">kbd</span><span class=\"p\">&gt;</span>Ctrl + C<span class=\"p\">&lt;/</span><span class=\"nt\">kbd</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Predefined tags</h2>\n<p>Some tags are defined as language builtins.</p>\n<pre><code>[\n    p [\n        This is a paragraph\n    ]\n]\n</code></pre>\n<p>Currently supported tags: <code>p</code>, <code>pre</code>, <code>it</code>, <code>bf</code>, <code>^</code> (superscript), <code>_</code> (subscript)</p>\n<p>The purpose of this group of language constructs is to allow rendering to different targets: LaTeX, an abstract syntax tree etc. in the future.</p>\n<h2>Raw text</h2>\n<pre><code>[:raw\n    This text preserves original\n        Indentation\n            And can [use]\n                [square] ]]]brackets[\nrrr:]\n</code></pre>\n<p><strong>rawrrr</strong></p>\n<h2>Comments</h2>\n<pre><code>[\n    comment[Comment]\n    todo[Comment]\n    bug[Comment]\n    doc[Comment]\n]\n</code></pre>\n<pre>    <span class=\"c\">&lt;!--comment:Comment--&gt;</span>\n    <span class=\"c\">&lt;!--todo:Comment--&gt;</span>\n    <span class=\"c\">&lt;!--bug:Comment--&gt;</span>\n    <span class=\"c\">&lt;!--doc:Comment--&gt;</span>\n</pre>\n<h2>Links</h2>\n<pre><code>[\n    a[https://my-site.com][My site!]\n]\n</code></pre>\n<h2>ID and class specifiers</h2>\n<pre><code>    #myDiv [\n        hello\n    ]\n    .some of my classes [\n        world\n    ]\n</code></pre>\n<pre>    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"myDiv\"</span><span class=\"p\">&gt;</span>hello<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"some of my classes\"</span><span class=\"p\">&gt;</span>hello<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Headers</h2>\n<pre><code>[\n    header(1)[Lorem ipsum]\n    header(2)[Dolor sit amet]\n]\n</code></pre>\n<pre>    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Lorem ipsum<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>Dolor sit amet<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Python expressions</h2>\n<pre><code>[\n    $[\"foo\" + \"!\"*3 + \"bar\"]\n    $[:raw\n        [1, 2, 3][1]\n    rrr:]\n]\n</code></pre>\n<pre>foo!!!bar\n2\n</pre>\n<h2>Parse the result of a python expression</h2>\n<pre><code>[   \n    $xmu[:raw \"[ p[Paragraph] ]\" rrr:]\n]\n</code></pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Paragraph<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><code>[   \n    $xmu[:raw \"[ $xmu['p[Paragraph]'] ]\" rrr:]\n]\n</code></pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Paragraph<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Tables</h2>\n<pre><code>[\n    table(3, 2)[\n        [ Lorem ] [ Ipsum ] [ Dolor ]\n        [ Sit   ] [ Amet  ] [       ]\n    ]\n]\n</code></pre>\n<pre>   <span class=\"p\">&lt;</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span> Lorem <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span> Ipsum <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span> Dolor <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span> Sit   <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span> Amet  <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>       <span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Constants</h2>\n<p>To see the list of all constants, take a look at\n<code>/xmu/extensions/text_formatting.py</code></p>\n<p>A constant begins with a <code>?</code>.</p>\n<pre><code>[\n    [XMU] ?-- [an extensible markup language]\n]\n</code></pre>\n<pre>XMU <span class=\"ni\">&amp;emdash;</span> an extensible markup language\n</pre>\n<h2>Styling</h2>\n<p>Anonymous styles are now very powerful!\nXMU uses SCSS (a flavour of SASS) to compile\ninline styles.</p>\n<pre><code>style [:raw\n    color: red;\n    font-family: 'Comic Sans MS';\nrrr:][\n    header(1)[\n        Solving FizzBuzz by the means of a DSL\n    ]\n]\n</code></pre>\n<p>Basically, XMU creates a random ID and creates\na standalone style for it.</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;#</span><span class=\"nn\">aspefpsnfglktjgu</span> <span class=\"p\">{</span>\n    <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">red</span><span class=\"p\">;</span>\n    <span class=\"k\">font-family</span><span class=\"p\">:</span> <span class=\"s1\">'Comic Sans MS'</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">emu-styled</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">aspefpsnfglktjgu</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Solving FizzBuzz by the means of a DSL<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">emu-styled</span><span class=\"p\">&gt;</span>\n</pre>\n<p>The advantage of using SASS is that you can define a nested style:</p>\n<pre><code>style [:raw\n    color: red;\n    font-family: 'Comic Sans MS';\n    b {\n        color: blue;\n    }\nrrr:][\n    header(1)[\n        Solving FizzBuzz by the means of a DSL\n    ]\n    bf[ This text will be blue]\n]\n</code></pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">#</span><span class=\"nn\">jghejijhvudjuhvg</span> <span class=\"p\">{</span>\n        <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">red</span><span class=\"p\">;</span>\n        <span class=\"k\">font-family</span><span class=\"p\">:</span> <span class=\"s1\">'Comic Sans MS'</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n        <span class=\"p\">#</span><span class=\"nn\">jghejijhvudjuhvg</span> <span class=\"nt\">b</span> <span class=\"p\">{</span>\n            <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">blue</span><span class=\"p\">;}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">emu-styled</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">jghejijhvudjuhvg</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Solving FizzBuzz by the means of a DSL<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">b</span><span class=\"p\">&gt;</span> This text will be blue <span class=\"p\">&lt;/</span><span class=\"nt\">b</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">emu-styled</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Jinja2</h2>\n<pre><code>%[ user.name ]\n</code></pre>\n<pre>{{ user.name }}\n</pre>\n<hr>\n<pre><code>%extends[website.com]\n</code></pre>\n<pre>{% extends \"website.com\" %}\n</pre>\n<hr>\n<pre><code>%block(footer)[ header(2)[All lefts reserved] ]\n</code></pre>\n<pre><code>{% block footer %}\n&lt;h2&gt;All lefts reserved&lt;/h2&gt;\n{% endblock %}\n</code></pre>\n<h2>FontAwesome</h2>\n<pre><code>fas[home]\n</code></pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">i</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"fas fas-home\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">i</span><span class=\"p\">&gt;</span>\n</pre>\n<h1>Extending the language</h1>\n<p>Tutorial coming soon</p>\n\n          </div>"}, "last_serial": 7064688, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3491d1e57deac40a5c10c2ecb5b81006", "sha256": "8694ef647d558c72def5a49deec64e3c294520bbfc20415ecc457ce19018f7d1"}, "downloads": -1, "filename": "xmu-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3491d1e57deac40a5c10c2ecb5b81006", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12850, "upload_time": "2020-04-20T13:26:08", "upload_time_iso_8601": "2020-04-20T13:26:08.716231Z", "url": "https://files.pythonhosted.org/packages/7e/10/5369946727d776b491be3b43025c64d9ff4285352dd7a779d31672d26db9/xmu-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a45eae22f7c7d62bae6d56b51887482", "sha256": "ec77b6adf080c4815e2dbb6a971926ad80ec5c9664fb5ef3af03c94761c9d11a"}, "downloads": -1, "filename": "xmu-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7a45eae22f7c7d62bae6d56b51887482", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9547, "upload_time": "2020-04-20T13:26:11", "upload_time_iso_8601": "2020-04-20T13:26:11.300853Z", "url": "https://files.pythonhosted.org/packages/83/cd/00a5659086da5ea03b7b7bdf3cc03606d94e82756d0f815ec5f562320de6/xmu-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "55029a961bba99149ee0231a92a3bea6", "sha256": "b793f9a7d48c68bb47c8dfb4dc10dc608bb4489ac43e81111d69c26ee98ad340"}, "downloads": -1, "filename": "xmu-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "55029a961bba99149ee0231a92a3bea6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12952, "upload_time": "2020-04-20T13:49:05", "upload_time_iso_8601": "2020-04-20T13:49:05.791689Z", "url": "https://files.pythonhosted.org/packages/99/a8/a72a46a22cf39e71d16fd9cd25bb8cd11b552f3aa765622d320bfb3dff57/xmu-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ad911d47753d4f918103318f92cd973", "sha256": "78224854b4b4cf4ea876353b7c3aea33fb244f98e6cff00a42e6a96963ded0c8"}, "downloads": -1, "filename": "xmu-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0ad911d47753d4f918103318f92cd973", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9647, "upload_time": "2020-04-20T13:49:06", "upload_time_iso_8601": "2020-04-20T13:49:06.837297Z", "url": "https://files.pythonhosted.org/packages/28/15/c843f30bb177c9a7bb143c94aaafca0bc5a0b3629ace3c691ead2d4b4b17/xmu-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ca2b915168f17b2d707fbf31c5170fe5", "sha256": "21837f39557185eca1d0c00f4c2a0749f8fb4a38ef6e8e407b143d3c1672ed26"}, "downloads": -1, "filename": "xmu-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ca2b915168f17b2d707fbf31c5170fe5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14600, "upload_time": "2020-04-20T22:31:57", "upload_time_iso_8601": "2020-04-20T22:31:57.432567Z", "url": "https://files.pythonhosted.org/packages/c6/d4/256858976289ed7c66320d456aced36169857686a08c11cf24da36118592/xmu-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c61e03e917de78cdd42914407d7c6c6", "sha256": "c2b9e4a5243892978b24a5a42beeeb00aeb6091c8a693ed21eab11bbbab94538"}, "downloads": -1, "filename": "xmu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6c61e03e917de78cdd42914407d7c6c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13432, "upload_time": "2020-04-20T22:31:58", "upload_time_iso_8601": "2020-04-20T22:31:58.958860Z", "url": "https://files.pythonhosted.org/packages/bf/a9/29eb776624a0a87f59374fa7ecb7c0fa7b70e890ae521874697caee8e037/xmu-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2d5ae1edb31c700660a0adbf9a3e6804", "sha256": "545b09752cfdd78e8af24fca52b01703da2243e84fc3c30b9913adb1642cf6d5"}, "downloads": -1, "filename": "xmu-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2d5ae1edb31c700660a0adbf9a3e6804", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14595, "upload_time": "2020-04-21T00:22:22", "upload_time_iso_8601": "2020-04-21T00:22:22.940994Z", "url": "https://files.pythonhosted.org/packages/41/d6/4543a733410e28eb339c1956b358e676d889dce029844ca9cb411a17634e/xmu-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48d620e167e35a2a0c914423c456f2e4", "sha256": "8b4084c77e2276328659821070e8649296200bba8d76f17e4c04afc7c5718b71"}, "downloads": -1, "filename": "xmu-0.1.1.tar.gz", "has_sig": false, "md5_digest": "48d620e167e35a2a0c914423c456f2e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13440, "upload_time": "2020-04-21T00:22:24", "upload_time_iso_8601": "2020-04-21T00:22:24.456233Z", "url": "https://files.pythonhosted.org/packages/d5/de/6f6e032919aa8c0482c444b5f743d228c0d897407c7d2ac0c4f59167c488/xmu-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eaa350d1f1a8974a53e9eb91fb82632f", "sha256": "f93cbc365bf13e5ccfa2ee8ccfcdc5448b75ecddc1727d3e965541ad7df0f4df"}, "downloads": -1, "filename": "xmu-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eaa350d1f1a8974a53e9eb91fb82632f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14591, "upload_time": "2020-04-21T00:40:17", "upload_time_iso_8601": "2020-04-21T00:40:17.205109Z", "url": "https://files.pythonhosted.org/packages/45/0b/9992a7e9ebc9a9011cd5324942e9e7bfa20a30cde43d38b98c3b9b680ae6/xmu-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1309fee0e0e6f00e4a2885632045176", "sha256": "7db1a7bee1690783a8e07aae1da142a0782c0b08b1766d6b8af117853888ca43"}, "downloads": -1, "filename": "xmu-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c1309fee0e0e6f00e4a2885632045176", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13440, "upload_time": "2020-04-21T00:40:18", "upload_time_iso_8601": "2020-04-21T00:40:18.792822Z", "url": "https://files.pythonhosted.org/packages/2a/13/c09be6d96296a2afce2c3900b0db47c14bf1f3791a959c710b98642572e9/xmu-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7616623b3ebb208224d526ed23cff3e3", "sha256": "cb6b5fad73636f648ba0b44540366ddca9733bd9098cca4f27b3194787daea3b"}, "downloads": -1, "filename": "xmu-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7616623b3ebb208224d526ed23cff3e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14685, "upload_time": "2020-04-21T01:46:31", "upload_time_iso_8601": "2020-04-21T01:46:31.352416Z", "url": "https://files.pythonhosted.org/packages/da/ae/689e03b5794405f14d2a2cf5f472eb5cf72a267e1ed78edafd00c365813c/xmu-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119393e9aa0f1b1eec87e451620652f0", "sha256": "af88389e351aca58e9c897d555358d19668705a03484a7758ec2956aebd2cd59"}, "downloads": -1, "filename": "xmu-0.2.0.tar.gz", "has_sig": false, "md5_digest": "119393e9aa0f1b1eec87e451620652f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13504, "upload_time": "2020-04-21T01:46:32", "upload_time_iso_8601": "2020-04-21T01:46:32.912391Z", "url": "https://files.pythonhosted.org/packages/75/ed/4416fc96cbfaacb32eb6877e3c3b09911f965dc3aae80c968cc6623192d7/xmu-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7616623b3ebb208224d526ed23cff3e3", "sha256": "cb6b5fad73636f648ba0b44540366ddca9733bd9098cca4f27b3194787daea3b"}, "downloads": -1, "filename": "xmu-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7616623b3ebb208224d526ed23cff3e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14685, "upload_time": "2020-04-21T01:46:31", "upload_time_iso_8601": "2020-04-21T01:46:31.352416Z", "url": "https://files.pythonhosted.org/packages/da/ae/689e03b5794405f14d2a2cf5f472eb5cf72a267e1ed78edafd00c365813c/xmu-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119393e9aa0f1b1eec87e451620652f0", "sha256": "af88389e351aca58e9c897d555358d19668705a03484a7758ec2956aebd2cd59"}, "downloads": -1, "filename": "xmu-0.2.0.tar.gz", "has_sig": false, "md5_digest": "119393e9aa0f1b1eec87e451620652f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13504, "upload_time": "2020-04-21T01:46:32", "upload_time_iso_8601": "2020-04-21T01:46:32.912391Z", "url": "https://files.pythonhosted.org/packages/75/ed/4416fc96cbfaacb32eb6877e3c3b09911f965dc3aae80c968cc6623192d7/xmu-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:52 2020"}