{"info": {"author": "M. G. Schultz", "author_email": "m.schultz@fz-juelich.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": "=============================\r\nAtmospheric Chemistry Package\r\n=============================\r\n\r\nThis collection of python classes and routines facilitates the exploration,\r\nconstruction, and conversion of (gas-phase) chemical mechanisms \r\n(the system of differential equations that are solved in numerical models \r\nof atmospheric chemistry and transport). It consists of the following key elements:\r\n\r\n1. The **Compound** class describing various physical and chemical properties of \r\nindividual molecules or lumped substances and defining their names in various\r\ncommon chemistry schemes. \r\n\r\n2. The **speciesTable** class which collects the compound information from all\r\nmolecules and handles reading and writing this information from or to csv\r\nfiles.\r\n\r\n3. The **Reaction** class describing gas-phase chemical reactants, products,\r\nproduct yields, the rate coefficient term(s) and optional tags, comments,\r\nand reaction labels.\r\n\r\n4. The **Mechanism** class which contains a list of reactions and additional \r\nvariables, comments, and other information and handles in- and output from\r\nand to various file formats (mech, csv, kpp, mozpp, racm).\r\n\r\nAdditional utilities allow computation of molecular weights based on the \r\nelemental composition of a molecule and queries of the Pubchem and Master\r\nChemical Mechanism databases to obtain additional information about a compound\r\n(e.g. SMILES code, IUPAC name, etc.). There is even a rudimentary algebra \r\nclass (mathTree) included, which allows scanning of mathematical expressions\r\nand factorisation.\r\n\r\nThe main purpose of this package is the interconversion of chemical mechanisms\r\nfrom one format to another, including the translation of species names from\r\nthe namespace of one model to that of another model. It has been developed originally \r\nbecause of the author's need to perform an intercomparison of various mechanisms\r\nwith the help of a specific chemical boxmodel (CAABA/MECCA, see http://www.mecca.messy-interface.org/),\r\nbut it may also be useful for other purposes, and the author will be grateful for \r\nfeedback on various use cases as well as suggestions for improvement. \r\n\r\nConversion of a chemical mechanism is possible in only 4 lines of code::\r\n\r\n    from ac.gasphase.mechanism import Mechanism\r\n\tm = Mechanism.from_mech(inputfilename)\r\n\tm.translate_to_model('tm5')\r\n\tm.write_kpp_mecca(outputfilename)\r\n\t\r\nThis will read a mechanism in the 'mech' format, translate all species names to the TM5 \r\nnamespace and write out species and equations files for the Kinetic Preprocessor (KPP,\r\nsee http://people.cs.vt.edu/~asandu/Software/Kpp/).\r\n\r\nIt is also easily possible to test all reactions for mass conservation::\r\n\r\n    m.check_mass_balance()\r\n\t\r\nor to find out which reactions involve a specific reactant, say HO2::\r\n\r\n    rlist = m.find_reactions(['HO2'])\r\n\tfor r in rlist:\r\n\t    print r.to_mech()\r\n\r\nA number of applications of the ac package are provided in the *bin* directory of\r\nthis distribution.\r\n\r\nRequirements\r\n============\r\n\r\nMost of the functionality of the AtmosphericChemistry package requires only python \r\nstandard libraries and numpy. However, if you want to use the pubchem or mcm_query\r\nroutines to access compound information from internet databases, you will also need\r\nurllib, urllib2, lxml.html, json, time.\r\n\r\n\r\nAuthor\r\n======\r\n\r\nMartin G. Schultz, IEK-8, Forschungszentrum Juelich, Germany\r\n\r\nA Acknowledgements\r\n==================\r\n\r\nMatt Swain for providing the PubChemPy module which is included in this package\r\nfor cross-referencing compound information in the master species table.\r\nSnehal Waychal for providing the mcm_query module and for packaging this up.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/AtmosphericChemistry/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "AtmosphericChemistry", "package_url": "https://pypi.org/project/AtmosphericChemistry/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/AtmosphericChemistry/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/AtmosphericChemistry/"}, "release_url": "https://pypi.org/project/AtmosphericChemistry/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Tools for creating and managing atmospheric chemistry mechanisms.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This collection of python classes and routines facilitates the exploration,\nconstruction, and conversion of (gas-phase) chemical mechanisms\n(the system of differential equations that are solved in numerical models\nof atmospheric chemistry and transport). It consists of the following key elements:</p>\n<p>1. The <strong>Compound</strong> class describing various physical and chemical properties of\nindividual molecules or lumped substances and defining their names in various\ncommon chemistry schemes.</p>\n<p>2. The <strong>speciesTable</strong> class which collects the compound information from all\nmolecules and handles reading and writing this information from or to csv\nfiles.</p>\n<p>3. The <strong>Reaction</strong> class describing gas-phase chemical reactants, products,\nproduct yields, the rate coefficient term(s) and optional tags, comments,\nand reaction labels.</p>\n<p>4. The <strong>Mechanism</strong> class which contains a list of reactions and additional\nvariables, comments, and other information and handles in- and output from\nand to various file formats (mech, csv, kpp, mozpp, racm).</p>\n<p>Additional utilities allow computation of molecular weights based on the\nelemental composition of a molecule and queries of the Pubchem and Master\nChemical Mechanism databases to obtain additional information about a compound\n(e.g. SMILES code, IUPAC name, etc.). There is even a rudimentary algebra\nclass (mathTree) included, which allows scanning of mathematical expressions\nand factorisation.</p>\n<p>The main purpose of this package is the interconversion of chemical mechanisms\nfrom one format to another, including the translation of species names from\nthe namespace of one model to that of another model. It has been developed originally\nbecause of the author\u2019s need to perform an intercomparison of various mechanisms\nwith the help of a specific chemical boxmodel (CAABA/MECCA, see <a href=\"http://www.mecca.messy-interface.org/\" rel=\"nofollow\">http://www.mecca.messy-interface.org/</a>),\nbut it may also be useful for other purposes, and the author will be grateful for\nfeedback on various use cases as well as suggestions for improvement.</p>\n<p>Conversion of a chemical mechanism is possible in only 4 lines of code:</p>\n<pre>from ac.gasphase.mechanism import Mechanism\n    m = Mechanism.from_mech(inputfilename)\n    m.translate_to_model('tm5')\n    m.write_kpp_mecca(outputfilename)\n</pre>\n<p>This will read a mechanism in the \u2018mech\u2019 format, translate all species names to the TM5\nnamespace and write out species and equations files for the Kinetic Preprocessor (KPP,\nsee <a href=\"http://people.cs.vt.edu/~asandu/Software/Kpp/\" rel=\"nofollow\">http://people.cs.vt.edu/~asandu/Software/Kpp/</a>).</p>\n<p>It is also easily possible to test all reactions for mass conservation:</p>\n<pre>m.check_mass_balance()\n</pre>\n<p>or to find out which reactions involve a specific reactant, say HO2:</p>\n<pre>rlist = m.find_reactions(['HO2'])\n    for r in rlist:\n        print r.to_mech()\n</pre>\n<p>A number of applications of the ac package are provided in the <em>bin</em> directory of\nthis distribution.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Most of the functionality of the AtmosphericChemistry package requires only python\nstandard libraries and numpy. However, if you want to use the pubchem or mcm_query\nroutines to access compound information from internet databases, you will also need\nurllib, urllib2, lxml.html, json, time.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Martin G. Schultz, IEK-8, Forschungszentrum Juelich, Germany</p>\n</div>\n<div id=\"a-acknowledgements\">\n<h2>A Acknowledgements</h2>\n<p>Matt Swain for providing the PubChemPy module which is included in this package\nfor cross-referencing compound information in the master species table.\nSnehal Waychal for providing the mcm_query module and for packaging this up.</p>\n</div>\n\n          </div>"}, "last_serial": 922872, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "96a7403d1fe1ec2a05546ae47634e00b", "sha256": "5248407229686aa204c8a1f321b42f103b7a7f6920e6bdd1bce9deae05779d76"}, "downloads": -1, "filename": "AtmosphericChemistry-0.1.0.tar.gz", "has_sig": false, "md5_digest": "96a7403d1fe1ec2a05546ae47634e00b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118989, "upload_time": "2013-11-18T17:19:22", "upload_time_iso_8601": "2013-11-18T17:19:22.359850Z", "url": "https://files.pythonhosted.org/packages/c7/a0/8d734ac85cb0e2fbdb2009635f6125a15fd5ef8ed3abf98893ccc42b06c6/AtmosphericChemistry-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96a7403d1fe1ec2a05546ae47634e00b", "sha256": "5248407229686aa204c8a1f321b42f103b7a7f6920e6bdd1bce9deae05779d76"}, "downloads": -1, "filename": "AtmosphericChemistry-0.1.0.tar.gz", "has_sig": false, "md5_digest": "96a7403d1fe1ec2a05546ae47634e00b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118989, "upload_time": "2013-11-18T17:19:22", "upload_time_iso_8601": "2013-11-18T17:19:22.359850Z", "url": "https://files.pythonhosted.org/packages/c7/a0/8d734ac85cb0e2fbdb2009635f6125a15fd5ef8ed3abf98893ccc42b06c6/AtmosphericChemistry-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:34 2020"}