{"info": {"author": "Mike Meacham", "author_email": "mdmeacham@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pyimi\n\npyimi is an **unsupported**, yet useful, python library for accessing IGEL's IMI.  \n\n### Overview\n  - Query for information about your IGEL endpoints\n  - Take actions such as reboot, shutdown, wakeup, send UMS settings and factory reset\n  - Assign profiles, move devices, create directories\n  - Query for asset inventory information (peripherals attached to the endpoints USB or bluetooth interface)\n\n### Dependencies\npyimi depends on the Python requests library:\n\n* [Python Requests] - Requests is an elegant and simple HTTP library for Python, built for human beings.\n\n### Installation\nInstall the requests library like this.\n\n```sh\n$ pip install requests\n```\nNext, install pyimi itself like this\n```sh\n$ pip install pyimi\n```\n\n### Some example code\n```python\nfrom pyimi import IMI, Devices, Directories, Profiles, Assets\n# First, create your IMI session\nimi = IMI(server='192.168.56.12', user='igel', password='igel#123')\n\n# retrieve a list of your devices\ndevices = Devices(imi)\n\n# and also a list of your directories\ndirectories = Directories(imi)\n\n# and also a list of your Profiles\nprofiles = Profiles(imi)\n\n# you can iterate through the retreived items\nfor device in devices:\n    print(device.name)\n\nfor directory in directories:\n    print(directory.name)\n\nfor profile in profiles:\n    print(profile.name)\n\n# Or, to find a paricular device, you can search\n# by name, IP address, or MAC, or UMS assigned id\ndevice1 = devices.find(name=\"ITC080027B8A48E\")\ndevice2 = devices.find(ip=\"192.168.56.104\")\ndevice3 = devices.find(mac=\"080027B8A48E\")\ndevice4 = devices.find(id=\"35591\")\n\nif device1:\n    print(\"device1 IP address is\", device1.ip)\n\nif device2:\n    print(\"device2 name is\", device2.name)\n\n# You can also filter the device list to return a\n# sub list of devices whose info property has a\n# matching key/value to the filter.\n# Note: to find the possible keys for filter, check\n# the dictionary returned by the device info property.\nfiltered_devices = devices.filter(\"site\", \"Downtown\")\nfor device in filtered_devices:\n    print(device.name)\n\n# Check if your device is online like this\nprint(\"Is device1 online?\", device1.online)\nprint(\"Is device2 online?\", device2.online)\n\n# You can find a directory by name\nmy_directory = directories.find(name=\"Portland\")\nif my_directory:\n    print(\"Found directory\")\nelse:\n    print(\"directory was not found\")\n\n# Create a new directory for devices like this\ndirectories.create(\"Vancouver\")\n# update the directories variable since there's a new dirctory\ndirectories = Directories(imi)\n\n# Now that you have both a device and a directory,\n# you can move the device into that directory\ndevice1.move(my_directory)\n\n# And you can also move a device directory into another directory\nmy_directory2 = directories.find(name=\"Bend\")\nmy_directory2.move(my_directory)\n\n# Here's how you assign a profile to a device or a directory\nbrowser_profile = profiles.find(name='Browser')\ndevice1.assign(browser_profile)\nmy_directory.assign(browser_profile)\n\n# And then you can unassign a profile like this\ndevice1.unassign(browser_profile)\nmy_directory.unassign(browser_profile)\n\n\n# Get some additional information about your device\nprint(\"Information about device:\", device1.info)\n\n# Run some commands on your device\ndevice1.reboot()\ndevice1.shutdown()\ndevice1.wakeup()\ndevice1.settings2tc()\n\n# If this device has an EMP (Enterprise Mgmt Pack) license,\n# query for it's Asset Inventory Tracker information.\ndevice_assets = device1.assets\nprint(\"Assets for thin client\", device1.name)\nfor asset in device1.assets:\n    print(\"asset name:\", asset.name, \"asset id\", asset.id)\n    print(\"history of this asset on this device\")\n    for history in asset.history:\n        print(history['ctime'], history, \"\\n\")\n\n# Factory reset a device\ndevice1.factory()\n# For now, when you factory a device\n# you should retrieve all devices again to have a\n# valid list\n\n# retrieve a list of your assets through Asset Inventory Tracker\nassets = Assets(imi)\n\n# you can iterate through the retreived items\nfor asset in assets:\n    print(\"Name of asset:\", asset.name)\n    print(\"Info about asset\")\n    for info in asset.info:\n        print(info,\"\\n\")\n    print(\"History of asset\")\n    for history in asset.history:\n        print(history['ctime'], history,\"\\n\")\n    print()\n\n# Set extra information tags on your devices\ndevice1.name = \"IGEL-1\"\ndevice1.site = \"Downtown\"\ndevice1.costCenter = \"Anyone but us\"\ndevice1.comment = \"no comment!!!\"\ndevice1.assetID = \"123456789\"\ndevice1.inserviceDate = \"01/21/20\"\ndevice1.serialNumber = \"3495712\"\n\nprint(\"Comment for this device\", device1.comment)\nprint(\"Asset ID for this device\", device1.assetID)\nprint(\"This device is located at\", device1.site)\nprint(\"And this place paid for it\", device1.costCenter)\n\n```\n\nLicense\n----\n\nMIT\n\n[//]: # (These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax)\n\n\n\n   [Python Requests]: <https://requests.readthedocs.io/en/master/>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mdmeacham/pyimi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyimi", "package_url": "https://pypi.org/project/pyimi/", "platform": "", "project_url": "https://pypi.org/project/pyimi/", "project_urls": {"Homepage": "https://github.com/mdmeacham/pyimi"}, "release_url": "https://pypi.org/project/pyimi/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A python library for accessing IGEL's IMI", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyimi</h1>\n<p>pyimi is an <strong>unsupported</strong>, yet useful, python library for accessing IGEL's IMI.</p>\n<h3>Overview</h3>\n<ul>\n<li>Query for information about your IGEL endpoints</li>\n<li>Take actions such as reboot, shutdown, wakeup, send UMS settings and factory reset</li>\n<li>Assign profiles, move devices, create directories</li>\n<li>Query for asset inventory information (peripherals attached to the endpoints USB or bluetooth interface)</li>\n</ul>\n<h3>Dependencies</h3>\n<p>pyimi depends on the Python requests library:</p>\n<ul>\n<li><a href=\"https://requests.readthedocs.io/en/master/\" rel=\"nofollow\">Python Requests</a> - Requests is an elegant and simple HTTP library for Python, built for human beings.</li>\n</ul>\n<h3>Installation</h3>\n<p>Install the requests library like this.</p>\n<pre>$ pip install requests\n</pre>\n<p>Next, install pyimi itself like this</p>\n<pre>$ pip install pyimi\n</pre>\n<h3>Some example code</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyimi</span> <span class=\"kn\">import</span> <span class=\"n\">IMI</span><span class=\"p\">,</span> <span class=\"n\">Devices</span><span class=\"p\">,</span> <span class=\"n\">Directories</span><span class=\"p\">,</span> <span class=\"n\">Profiles</span><span class=\"p\">,</span> <span class=\"n\">Assets</span>\n<span class=\"c1\"># First, create your IMI session</span>\n<span class=\"n\">imi</span> <span class=\"o\">=</span> <span class=\"n\">IMI</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">=</span><span class=\"s1\">'192.168.56.12'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'igel'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'igel#123'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve a list of your devices</span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">Devices</span><span class=\"p\">(</span><span class=\"n\">imi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and also a list of your directories</span>\n<span class=\"n\">directories</span> <span class=\"o\">=</span> <span class=\"n\">Directories</span><span class=\"p\">(</span><span class=\"n\">imi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and also a list of your Profiles</span>\n<span class=\"n\">profiles</span> <span class=\"o\">=</span> <span class=\"n\">Profiles</span><span class=\"p\">(</span><span class=\"n\">imi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can iterate through the retreived items</span>\n<span class=\"k\">for</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">devices</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">directory</span> <span class=\"ow\">in</span> <span class=\"n\">directories</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">profile</span> <span class=\"ow\">in</span> <span class=\"n\">profiles</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or, to find a paricular device, you can search</span>\n<span class=\"c1\"># by name, IP address, or MAC, or UMS assigned id</span>\n<span class=\"n\">device1</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"ITC080027B8A48E\"</span><span class=\"p\">)</span>\n<span class=\"n\">device2</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.56.104\"</span><span class=\"p\">)</span>\n<span class=\"n\">device3</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"o\">=</span><span class=\"s2\">\"080027B8A48E\"</span><span class=\"p\">)</span>\n<span class=\"n\">device4</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"35591\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">device1</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"device1 IP address is\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">ip</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">device2</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"device2 name is\"</span><span class=\"p\">,</span> <span class=\"n\">device2</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also filter the device list to return a</span>\n<span class=\"c1\"># sub list of devices whose info property has a</span>\n<span class=\"c1\"># matching key/value to the filter.</span>\n<span class=\"c1\"># Note: to find the possible keys for filter, check</span>\n<span class=\"c1\"># the dictionary returned by the device info property.</span>\n<span class=\"n\">filtered_devices</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s2\">\"site\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Downtown\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">filtered_devices</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Check if your device is online like this</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is device1 online?\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">online</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is device2 online?\"</span><span class=\"p\">,</span> <span class=\"n\">device2</span><span class=\"o\">.</span><span class=\"n\">online</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can find a directory by name</span>\n<span class=\"n\">my_directory</span> <span class=\"o\">=</span> <span class=\"n\">directories</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Portland\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">my_directory</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Found directory\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"directory was not found\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new directory for devices like this</span>\n<span class=\"n\">directories</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"Vancouver\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># update the directories variable since there's a new dirctory</span>\n<span class=\"n\">directories</span> <span class=\"o\">=</span> <span class=\"n\">Directories</span><span class=\"p\">(</span><span class=\"n\">imi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now that you have both a device and a directory,</span>\n<span class=\"c1\"># you can move the device into that directory</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">my_directory</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And you can also move a device directory into another directory</span>\n<span class=\"n\">my_directory2</span> <span class=\"o\">=</span> <span class=\"n\">directories</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Bend\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_directory2</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">my_directory</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Here's how you assign a profile to a device or a directory</span>\n<span class=\"n\">browser_profile</span> <span class=\"o\">=</span> <span class=\"n\">profiles</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Browser'</span><span class=\"p\">)</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"n\">browser_profile</span><span class=\"p\">)</span>\n<span class=\"n\">my_directory</span><span class=\"o\">.</span><span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"n\">browser_profile</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And then you can unassign a profile like this</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">unassign</span><span class=\"p\">(</span><span class=\"n\">browser_profile</span><span class=\"p\">)</span>\n<span class=\"n\">my_directory</span><span class=\"o\">.</span><span class=\"n\">unassign</span><span class=\"p\">(</span><span class=\"n\">browser_profile</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Get some additional information about your device</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Information about device:\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Run some commands on your device</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">reboot</span><span class=\"p\">()</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">wakeup</span><span class=\"p\">()</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">settings2tc</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># If this device has an EMP (Enterprise Mgmt Pack) license,</span>\n<span class=\"c1\"># query for it's Asset Inventory Tracker information.</span>\n<span class=\"n\">device_assets</span> <span class=\"o\">=</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">assets</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Assets for thin client\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">asset</span> <span class=\"ow\">in</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"asset name:\"</span><span class=\"p\">,</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">\"asset id\"</span><span class=\"p\">,</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"history of this asset on this device\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">history</span> <span class=\"ow\">in</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">[</span><span class=\"s1\">'ctime'</span><span class=\"p\">],</span> <span class=\"n\">history</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Factory reset a device</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">factory</span><span class=\"p\">()</span>\n<span class=\"c1\"># For now, when you factory a device</span>\n<span class=\"c1\"># you should retrieve all devices again to have a</span>\n<span class=\"c1\"># valid list</span>\n\n<span class=\"c1\"># retrieve a list of your assets through Asset Inventory Tracker</span>\n<span class=\"n\">assets</span> <span class=\"o\">=</span> <span class=\"n\">Assets</span><span class=\"p\">(</span><span class=\"n\">imi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can iterate through the retreived items</span>\n<span class=\"k\">for</span> <span class=\"n\">asset</span> <span class=\"ow\">in</span> <span class=\"n\">assets</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Name of asset:\"</span><span class=\"p\">,</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Info about asset\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">info</span> <span class=\"ow\">in</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">,</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"History of asset\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">history</span> <span class=\"ow\">in</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">[</span><span class=\"s1\">'ctime'</span><span class=\"p\">],</span> <span class=\"n\">history</span><span class=\"p\">,</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set extra information tags on your devices</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"IGEL-1\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">site</span> <span class=\"o\">=</span> <span class=\"s2\">\"Downtown\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">costCenter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Anyone but us\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"s2\">\"no comment!!!\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">assetID</span> <span class=\"o\">=</span> <span class=\"s2\">\"123456789\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">inserviceDate</span> <span class=\"o\">=</span> <span class=\"s2\">\"01/21/20\"</span>\n<span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">serialNumber</span> <span class=\"o\">=</span> <span class=\"s2\">\"3495712\"</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Comment for this device\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Asset ID for this device\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">assetID</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"This device is located at\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"And this place paid for it\"</span><span class=\"p\">,</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">costCenter</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 7174672, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "183d9c3a6dc3e648747c67d66a304469", "sha256": "5e31087c74e7fe5e254e427a0b1ac3b0405996ecf81a799a0920dc043fd79c19"}, "downloads": -1, "filename": "pyimi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "183d9c3a6dc3e648747c67d66a304469", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5092, "upload_time": "2020-04-11T14:40:40", "upload_time_iso_8601": "2020-04-11T14:40:40.772785Z", "url": "https://files.pythonhosted.org/packages/62/b5/ee622bb0a4899297b45ff9a29134e6562225ed4676c435e8b9cfaed47602/pyimi-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ad1ace9b115b0402dd791352977d79fd", "sha256": "7f7ace0f115ecfa51993a4c88e13979a829f8b51516ea4ee546e7a35fd97de27"}, "downloads": -1, "filename": "pyimi-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ad1ace9b115b0402dd791352977d79fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6941, "upload_time": "2020-04-22T03:08:31", "upload_time_iso_8601": "2020-04-22T03:08:31.997118Z", "url": "https://files.pythonhosted.org/packages/0f/09/bd77e207182bd2a28277c47909a89f06d273e4bac78c9b15dd57bb457073/pyimi-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7ceb47b60514f552b6c8713fdc228382", "sha256": "6251d138773d10fcc8d9de0bc10f09a38c07f5471520053ff6b1efaec2b66967"}, "downloads": -1, "filename": "pyimi-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7ceb47b60514f552b6c8713fdc228382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6963, "upload_time": "2020-05-05T18:56:51", "upload_time_iso_8601": "2020-05-05T18:56:51.566551Z", "url": "https://files.pythonhosted.org/packages/80/ff/8d5e440f0e8d4073604f411a176a54ab4e63422b220595a4041bf2c47698/pyimi-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ceb47b60514f552b6c8713fdc228382", "sha256": "6251d138773d10fcc8d9de0bc10f09a38c07f5471520053ff6b1efaec2b66967"}, "downloads": -1, "filename": "pyimi-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7ceb47b60514f552b6c8713fdc228382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6963, "upload_time": "2020-05-05T18:56:51", "upload_time_iso_8601": "2020-05-05T18:56:51.566551Z", "url": "https://files.pythonhosted.org/packages/80/ff/8d5e440f0e8d4073604f411a176a54ab4e63422b220595a4041bf2c47698/pyimi-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:05 2020"}