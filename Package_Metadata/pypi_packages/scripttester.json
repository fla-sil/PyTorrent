{"info": {"author": "Matthew Brett", "author_email": "matthew.brett@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "#######################################################\nScriptTester - utility for testing command line scripts\n#######################################################\n\n.. shared-text-body\n\n**********\nQuickstart\n**********\n\nProvides class to be instantiated in tests that check that scripts can be run\nand give correct output.  Usually works something like this in a test module::\n\n    import mymodule\n    from scripttester import ScriptTester\n    runner = ScriptTester(mymodule)\n\nThen, in the tests, something like::\n\n    code, stdout, stderr = runner.run_command(['my-script', my_arg])\n    assert code == 0\n    assert stdout == b'This script ran OK'\n\nThe class aims to find your scripts whether you have installed (with ``pip\ninstall .`` or ``pip install -e .`` or ``python setup.py install``), or not.\nIf you have not installed, the scripts will not be on your system PATH, and we\nhave to find them.  The heuristic is to look (by default) in the directory\ncontaining ``mymodule``; if there is a ``setup.py`` file there, and a\n``scripts`` sub-directory, assume that directory contains the scripts.\n\nNote there is no way of using this not-installed mechanism to find entrypoint\nscripts, that have not been installed. To find these, we would have to run the\n``setup.py`` file.\n\n************\nInstallation\n************\n\n::\n\n    pip install scripttester\n\n****\nCode\n****\n\nSee https://github.com/matthew-brett/scripttester\n\nReleased under the BSD two-clause license - see the file ``LICENSE`` in the\nsource distribution.\n\n`travis-ci <https://travis-ci.org/matthew-brett/scripttester>`_ kindly tests\nthe code automatically under Python versions 2.7, and 3.3 through 3.6.\n\nThe latest released version is at https://pypi.python.org/pypi/scripttester\n\n*****\nTests\n*****\n\n* Install ``scripttester``\n* Install the pytest_ testing framework::\n\n    pip install pytest\n\n* Run the tests with::\n\n    py.test --pyargs scripttester\n\n*******\nSupport\n*******\n\nPlease put up issues on the `scripttester issue tracker`_.\n\n.. standalone-references\n\n.. |scripttester-documentation| replace:: `scripttester documentation`_\n.. _scripttester documentation:\n    https://matthew-brett.github.com/scripttester/scripttester.html\n.. _documentation: https://matthew-brett.github.com/scripttester\n.. _pandoc: http://pandoc.org\n.. _jupyter: jupyter.org\n.. _homebrew: brew.sh\n.. _sphinx: http://sphinx-doc.org\n.. _rest: http://docutils.sourceforge.net/rst.html\n.. _scripttester issue tracker: https://github.com/matthew-brett/scripttester/issues\n.. _pytest: https://pytest.readthedocs.io\n.. _mock: https://github.com/testing-cabal/mock", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/matthew-brett/scripttester", "keywords": "", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "scripttester", "package_url": "https://pypi.org/project/scripttester/", "platform": "", "project_url": "https://pypi.org/project/scripttester/", "project_urls": {"Homepage": "http://github.com/matthew-brett/scripttester"}, "release_url": "https://pypi.org/project/scripttester/0.1/", "requires_dist": null, "requires_python": "", "summary": "Utility for testing command line scripts", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Provides class to be instantiated in tests that check that scripts can be run\nand give correct output.  Usually works something like this in a test module:</p>\n<pre>import mymodule\nfrom scripttester import ScriptTester\nrunner = ScriptTester(mymodule)\n</pre>\n<p>Then, in the tests, something like:</p>\n<pre>code, stdout, stderr = runner.run_command(['my-script', my_arg])\nassert code == 0\nassert stdout == b'This script ran OK'\n</pre>\n<p>The class aims to find your scripts whether you have installed (with <tt>pip\ninstall .</tt> or <tt>pip install <span class=\"pre\">-e</span> .</tt> or <tt>python setup.py install</tt>), or not.\nIf you have not installed, the scripts will not be on your system PATH, and we\nhave to find them.  The heuristic is to look (by default) in the directory\ncontaining <tt>mymodule</tt>; if there is a <tt>setup.py</tt> file there, and a\n<tt>scripts</tt> sub-directory, assume that directory contains the scripts.</p>\n<p>Note there is no way of using this not-installed mechanism to find entrypoint\nscripts, that have not been installed. To find these, we would have to run the\n<tt>setup.py</tt> file.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install scripttester\n</pre>\n</div>\n<div id=\"code\">\n<h2>Code</h2>\n<p>See <a href=\"https://github.com/matthew-brett/scripttester\" rel=\"nofollow\">https://github.com/matthew-brett/scripttester</a></p>\n<p>Released under the BSD two-clause license - see the file <tt>LICENSE</tt> in the\nsource distribution.</p>\n<p><a href=\"https://travis-ci.org/matthew-brett/scripttester\" rel=\"nofollow\">travis-ci</a> kindly tests\nthe code automatically under Python versions 2.7, and 3.3 through 3.6.</p>\n<p>The latest released version is at <a href=\"https://pypi.python.org/pypi/scripttester\" rel=\"nofollow\">https://pypi.python.org/pypi/scripttester</a></p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<ul>\n<li><p>Install <tt>scripttester</tt></p>\n</li>\n<li><p>Install the <a href=\"https://pytest.readthedocs.io\" rel=\"nofollow\">pytest</a> testing framework:</p>\n<pre>pip install pytest\n</pre>\n</li>\n<li><p>Run the tests with:</p>\n<pre>py.test --pyargs scripttester\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>Please put up issues on the <a href=\"https://github.com/matthew-brett/scripttester/issues\" rel=\"nofollow\">scripttester issue tracker</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 3548927, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "89de2cc315ba6d0e1395ce1225590aad", "sha256": "2fbd06425b48fadd6b4ef07d9e00d3c0fffada56a0f15d8d75619e78ee6451e4"}, "downloads": -1, "filename": "scripttester-0.1.tar.gz", "has_sig": true, "md5_digest": "89de2cc315ba6d0e1395ce1225590aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24727, "upload_time": "2018-02-03T18:09:01", "upload_time_iso_8601": "2018-02-03T18:09:01.966394Z", "url": "https://files.pythonhosted.org/packages/4b/8c/938e078b90f4d085aad7c31192efd4f7aadc2e1da6de54c6f7428c340553/scripttester-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89de2cc315ba6d0e1395ce1225590aad", "sha256": "2fbd06425b48fadd6b4ef07d9e00d3c0fffada56a0f15d8d75619e78ee6451e4"}, "downloads": -1, "filename": "scripttester-0.1.tar.gz", "has_sig": true, "md5_digest": "89de2cc315ba6d0e1395ce1225590aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24727, "upload_time": "2018-02-03T18:09:01", "upload_time_iso_8601": "2018-02-03T18:09:01.966394Z", "url": "https://files.pythonhosted.org/packages/4b/8c/938e078b90f4d085aad7c31192efd4f7aadc2e1da6de54c6f7428c340553/scripttester-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:30 2020"}