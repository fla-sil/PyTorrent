{"info": {"author": "Mauro DL Tosi", "author_email": "maurodlt@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# C-Rank\n\nC-Rank is an unsupervised keyphrase extraction algorithm that uses Concept Linking in order to improve its results.\n\nIt does not need external data to be inputted by the user other than the document to have its keyphrases extracted.\n\nIt is necessary to create an account to Babelfy (http://babelfy.org/login) as C-Rank uses its services. Then, your Babelfy key must be inserted in orde to C-Rank work properly.\n\n## Installation\nThe following packages must be installed to use C-Rank:\n\nnetworkx (https://networkx.github.io/): \n```\npip install networkx\n```\n\nnltk:(https://www.nltk.org/index.html)\n```\nsudo pip install -U nltk\n```\n\npybabelfy: (https://github.com/aghie/pybabelfy)\n```\nsudo pip install pybabelfy\n```\n\nThen:\n```\nsudo pip install C-Rank\n```\n\n\n## Getting started\n```\nimport CRank as cr\n\ncrank = cr.CRank(BABELFY_KEY, LIST_OF_INPUT_DOCUMENTS, OUTPUT_DIRECTORY)\n#Exemple\n#crank = cr.CRank(\"3ejklasd-a456-41ae-647f-0a1234546dd3\", ['./document1.txt', './document2.txt'], './')\ncrank.keyphrasesExtraction()\n\nprintKeyphrases()\n```\n## Functionalities\n```\n# all printing options \nprintKeyphrases(self, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)\n\n# save options to persist keyphrases in a single file (as in SemEval)\nsaveKeyphrasesSingleFile(self, fileName, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)\n\n# save options to persist keyphrases in diferent files\nsaveKeyphrasesDiferentFiles(self, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)\n\n# variables used in above functionalities\n##nKeyphrases = number of kyphrases to print  |  nKeyphrases = 0 for all keyphrases\n##documentIndex = index of document to print  |  documentIndex = -1 for all documents\n##showRanking = show or not weight of keyphrases\n##stem = stem or not keyphrases\n##fileName = name of the file\n```  \n### Intermediate results and available variables\n```\nself.key = BabelfyKey\nself.inputFiles = inputFiles\nself.outputDirectory = outputDirectory\nself.lang = language\nself.distance = dist\nself.graphName = []\nself.splitted_text = []\nself.dictionary = []\nself.dictionaryCode = []\nself.weight = []\nself.paragraphs_annotations = []\nself.paragraphs_text = []\nself.paragraphs_code = []\nself.graphs = []\nself.graphs2 = []\nself.keyPhrases = []\n```\n## Citation\nAvailable soon", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/user/maurodlt/C-Rank/archive/v_02.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maurodlt/C-Rank", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "C-Rank", "package_url": "https://pypi.org/project/C-Rank/", "platform": "", "project_url": "https://pypi.org/project/C-Rank/", "project_urls": {"Download": "https://github.com/user/maurodlt/C-Rank/archive/v_02.tar.gz", "Homepage": "https://github.com/maurodlt/C-Rank"}, "release_url": "https://pypi.org/project/C-Rank/3/", "requires_dist": null, "requires_python": "", "summary": "Extracts Keyphrases from Documents", "version": "3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # C-Rank<br><br>C-Rank is an unsupervised keyphrase extraction algorithm that uses Concept Linking in order to improve its results.<br><br>It does not need external data to be inputted by the user other than the document to have its keyphrases extracted.<br><br>It is necessary to create an account to Babelfy (http://babelfy.org/login) as C-Rank uses its services. Then, your Babelfy key must be inserted in orde to C-Rank work properly.<br><br>## Installation<br>The following packages must be installed to use C-Rank:<br><br>networkx (https://networkx.github.io/): <br>```<br>pip install networkx<br>```<br><br>nltk:(https://www.nltk.org/index.html)<br>```<br>sudo pip install -U nltk<br>```<br><br>pybabelfy: (https://github.com/aghie/pybabelfy)<br>```<br>sudo pip install pybabelfy<br>```<br><br>Then:<br>```<br>sudo pip install C-Rank<br>```<br><br><br>## Getting started<br>```<br>import CRank as cr<br><br>crank = cr.CRank(BABELFY_KEY, LIST_OF_INPUT_DOCUMENTS, OUTPUT_DIRECTORY)<br>#Exemple<br>#crank = cr.CRank(\"3ejklasd-a456-41ae-647f-0a1234546dd3\", ['./document1.txt', './document2.txt'], './')<br>crank.keyphrasesExtraction()<br><br>printKeyphrases()<br>```<br>## Functionalities<br>```<br># all printing options <br>printKeyphrases(self, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)<br><br># save options to persist keyphrases in a single file (as in SemEval)<br>saveKeyphrasesSingleFile(self, fileName, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)<br><br># save options to persist keyphrases in diferent files<br>saveKeyphrasesDiferentFiles(self, nKeyphrases = 10, documentIndex=-1, showRanking = True, stem = False)<br><br># variables used in above functionalities<br>##nKeyphrases = number of kyphrases to print  |  nKeyphrases = 0 for all keyphrases<br>##documentIndex = index of document to print  |  documentIndex = -1 for all documents<br>##showRanking = show or not weight of keyphrases<br>##stem = stem or not keyphrases<br>##fileName = name of the file<br>```  <br>### Intermediate results and available variables<br>```<br>self.key = BabelfyKey<br>self.inputFiles = inputFiles<br>self.outputDirectory = outputDirectory<br>self.lang = language<br>self.distance = dist<br>self.graphName = []<br>self.splitted_text = []<br>self.dictionary = []<br>self.dictionaryCode = []<br>self.weight = []<br>self.paragraphs_annotations = []<br>self.paragraphs_text = []<br>self.paragraphs_code = []<br>self.graphs = []<br>self.graphs2 = []<br>self.keyPhrases = []<br>```<br>## Citation<br>Available soon\n          </div>"}, "last_serial": 5160281, "releases": {"1": [{"comment_text": "", "digests": {"md5": "3bdd89e177d352a977bdd1686a31d2b6", "sha256": "639d16b7327049e3c6c26cb9fd3b8d9362c3cd0de83c416640d6cf33fa06d03d"}, "downloads": -1, "filename": "C-Rank-1.tar.gz", "has_sig": false, "md5_digest": "3bdd89e177d352a977bdd1686a31d2b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9823, "upload_time": "2019-04-18T12:42:55", "upload_time_iso_8601": "2019-04-18T12:42:55.677580Z", "url": "https://files.pythonhosted.org/packages/2e/b7/a96fb8d09b4d51da4a634f93593d1cf9053c46e10109b2aae3ec0f040de6/C-Rank-1.tar.gz", "yanked": false}], "2": [{"comment_text": "", "digests": {"md5": "004b1abbff4f15fa8a80eecc41ded727", "sha256": "02fcfe8f00fbf2f4c8926d5955ddbae5d5034ad71a82ac9c533ab7d3d09ec0a9"}, "downloads": -1, "filename": "C-Rank-2.tar.gz", "has_sig": false, "md5_digest": "004b1abbff4f15fa8a80eecc41ded727", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9818, "upload_time": "2019-04-18T13:02:52", "upload_time_iso_8601": "2019-04-18T13:02:52.429876Z", "url": "https://files.pythonhosted.org/packages/4c/3b/b92f0dd77d51133ad78fa6e29e2f0fa9b30e316f52ec51372c979456d3d1/C-Rank-2.tar.gz", "yanked": false}], "3": [{"comment_text": "", "digests": {"md5": "bade765038796523803550d1f989eca8", "sha256": "4795a0c4f7cbd78aa67d25cee2d94db243848d468b16d6c3826c2092d9c5fda9"}, "downloads": -1, "filename": "C-Rank-3.tar.gz", "has_sig": false, "md5_digest": "bade765038796523803550d1f989eca8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9834, "upload_time": "2019-04-18T13:09:34", "upload_time_iso_8601": "2019-04-18T13:09:34.147308Z", "url": "https://files.pythonhosted.org/packages/4a/9d/86ce4c59b97ccf07bc402102c2290eb6f8c5c0d48331d0efad5493263128/C-Rank-3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bade765038796523803550d1f989eca8", "sha256": "4795a0c4f7cbd78aa67d25cee2d94db243848d468b16d6c3826c2092d9c5fda9"}, "downloads": -1, "filename": "C-Rank-3.tar.gz", "has_sig": false, "md5_digest": "bade765038796523803550d1f989eca8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9834, "upload_time": "2019-04-18T13:09:34", "upload_time_iso_8601": "2019-04-18T13:09:34.147308Z", "url": "https://files.pythonhosted.org/packages/4a/9d/86ce4c59b97ccf07bc402102c2290eb6f8c5c0d48331d0efad5493263128/C-Rank-3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:28 2020"}