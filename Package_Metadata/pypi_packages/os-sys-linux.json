{"info": {"author": "Matthijs labots", "author_email": "py.libs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: IDLE", "License :: OSI Approved :: MIT License", "Natural Language :: Dutch", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Desktop Environment :: File Managers", "Topic :: Documentation", "Topic :: Internet", "Topic :: Internet :: File Transfer Protocol (FTP)", "Topic :: Internet :: WWW/HTTP", "Topic :: Other/Nonlisted Topic", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Security :: Cryptography", "Topic :: Software Development", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Compilers", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: Software Development :: User Interfaces", "Topic :: System", "Topic :: System :: Installation/Setup", "Topic :: System :: Operating System", "Topic :: System :: Software Distribution", "Topic :: Text Processing :: Markup :: HTML"], "description": "\u00ef\u00bb\u00bfupdate notes:\n===========================\n\nfixed:\n\nos_sys.log: get_logger function\n\nperformance:\n\nfixed some performance issues\n\n\n\nworking on:\n===========================\n\nbug fixing, making functions and classes faster and maybe adding threading support follow me on libaries.io for info about new releases\n\n\n\n\n\n\n\n\n\ninclude:\n===========================\n\n    introduction\n\n    server                                                                     \n\n    description                                                                                                                                                                    \n\n    home\n\n    loading_bars\n\nintroduction:\n===========================\n\n    to install os_sys you type: pip install os_sys                                                                                  \n    to upgrade os_sys you type: pip install --upgrade os_sys                                                                                  \n    so lets get start to install os_sys                                                                                  \n\n\nserver:\n===========================\nyou can read the server docs at https://www.stranica.nl/docs\n\n\ndiscription:\n===========================\n    os_sys is a extra package for python(3)                                                                                  \n    it's a extra to have a more easy use of the normal python libs                                                                                  \n    plz look sometimes to my packages becuse i am making more own libs(extra is not that own lib)                                                                                  \n    if i have more info i while show it here                                                                                   \n    plz read the license                                                                                  \n\n\n\n\n\nloading_bars:\nEasy progress reporting for Python\n==================================\n\n|pypi|\n\n\n\nBars\n----\n\nThere are 7 progress bars to choose from:\n\n- ``Bar``\n- ``ChargingBar``\n- ``FillingSquaresBar``\n- ``FillingCirclesBar``\n- ``IncrementalBar``\n- ``PixelBar``\n- ``ShadyBar``\n\nTo use them, just call ``next`` to advance and ``finish`` to finish:\n\n.. code-block:: python\n\n    from os_sys.progress import bar\n\n    bar = Bar('Processing', max=20)\n    for i in range(20):\n        # Do some work\n        bar.next()\n    bar.finish()\n\nor use any bar of this class as a context manager:\n\n.. code-block:: python\n\n    from os_sys.progress import bar\n\n    with Bar('Processing', max=20) as bar:\n        for i in range(20):\n            # Do some work\n            bar.next()\n\nThe result will be a bar like the following: ::\n\n    Processing |#############                   | 42/100\n\nTo simplify the common case where the work is done in an iterator, you can\nuse the ``iter`` method:\n\n.. code-block:: python\n\n    for i in Bar('Processing').iter(it):\n        # Do some work\n\nProgress bars are very customizable, you can change their width, their fill\ncharacter, their suffix and more:\n\n.. code-block:: python\n\n    bar = Bar('Loading', fill='@', suffix='%(percent)d%%')\n\nThis will produce a bar like the following: ::\n\n    Loading |@@@@@@@@@@@@@                   | 42%\n\nYou can use a number of template arguments in ``message`` and ``suffix``:\n\n==========  ================================\nName        Value\n==========  ================================\nindex       current value\nmax         maximum value\nremaining   max - index\nprogress    index / max\npercent     progress * 100\navg         simple moving average time per item (in seconds)\nelapsed     elapsed time in seconds\nelapsed_td  elapsed as a timedelta (useful for printing as a string)\neta         avg * remaining\neta_td      eta as a timedelta (useful for printing as a string)\n==========  ================================\n\nInstead of passing all configuration options on instatiation, you can create\nyour custom subclass:\n\n.. code-block:: python\n\n    class FancyBar(Bar):\n        message = 'Loading'\n        fill = '*'\n        suffix = '%(percent).1f%% - %(eta)ds'\n\nYou can also override any of the arguments or create your own:\n\n.. code-block:: python\n\n    class SlowBar(Bar):\n        suffix = '%(remaining_hours)d hours remaining'\n        @property\n        def remaining_hours(self):\n            return self.eta // 3600\n\n\nSpinners\n========\n\nFor actions with an unknown number of steps you can use a spinner:\n\n.. code-block:: python\n\n    from os_sys.progress import spinner\n\n    spinner = Spinner('Loading ')\n    while state != 'FINISHED':\n        # Do some work\n        spinner.next()\n\nThere are 5 predefined spinners:\n\n- ``Spinner``\n- ``PieSpinner``\n- ``MoonSpinner``\n- ``LineSpinner``\n- ``PixelSpinner``\n\ncomming - ``working to a big update the 2.0.0 release``\n\nhome:\n===========================\n\n    plz visit my one website there you can post every program for python that you want:\n\n    https://python-libs-com.webnode.nl/\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Matthijs990/os-sys-github/", "keywords": "", "license": "GNU General Public License", "maintainer": "", "maintainer_email": "", "name": "os-sys-linux", "package_url": "https://pypi.org/project/os-sys-linux/", "platform": "", "project_url": "https://pypi.org/project/os-sys-linux/", "project_urls": {".git": "https://github.com/Matthijs990/os_sys-github.git", "Downloads": "https://stranica.nl/downloads.html", "Homepage": "https://github.com/Matthijs990/os-sys-github/", "all files": "https://github.com/Matthijs990/os-sys-github/", "blog": "https://stranica.nl/wordpress/wordpress/", "github": "https://github.com/Matthijs990/os-sys-github/", "github wiki(under development)": "https://github.com/Matthijs990/os-sys-github/wiki", "gitlab": "https://gitlab.com/Matthijs990/os_sys", "help": "https://github.com/Matthijs990/os-sys-github/issues", "homepage": "https://stranica.nl/", "just a chat to talk about python": "https://github.com/Matthijs990/chat/issues/1", "made possible by": "https://pypi.org", "os_sys homepage": "https://stranica.nl/os_sys/", "os_sys online": "https://stranica.nl/os_sys/", "read the docs": "https://os-sys-wiki-page.readthedocs.io/en/latest/index.html", "server documentation": "https://www.stranica.nl/docs", "startpage": "https://pypi.org/project/os-sys/", "want to help": "https://github.com/Matthijs990/os_sys/tree/master/do%20you%20want%20to%20help"}, "release_url": "https://pypi.org/project/os-sys-linux/0.0.0.dev0/", "requires_dist": ["pygubu", "pytz", "sqlparse", "progress", "tqdm", "progressbar", "matplotlib", "numpy", "six", "jupyter", "pandas", "beautifulsoup4", "Eel", "extract-zip", "text-editor", "tuspy", "requests-download", "requests", "Send2Trash", "tornado", "pyspeedtest", "pytest", "wifi", "PyInstaller", "auto-py-to-exe", "Django", "mysql-connector", "geocoder", "selenium", "psutil", "pynput", "pythonGui", "pypiwin32", "wmi", "pyvalid", "netifaces", "mathparse (<0.2,>=0.1)", "nltk (<4.0,>=3.2)", "pint (>=0.8.1)", "python-dateutil (<2.8,>=2.7)", "pyyaml (<5.2,>=5.1)", "spacy (==2.2.0)", "sqlalchemy (<1.4,>=1.3)", "os-sys-php"], "requires_python": ">=3", "summary": "a big lib with many usefull tools and it are not only os and sys tools...", "version": "0.0.0.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u00ef\u00bb\u00bfupdate notes:</h1>\n<p>fixed:</p>\n<p>os_sys.log: get_logger function</p>\n<p>performance:</p>\n<p>fixed some performance issues</p>\n<h1>working on:</h1>\n<p>bug fixing, making functions and classes faster and maybe adding threading support follow me on libaries.io for info about new releases</p>\n<h1>include:</h1>\n<pre><code>introduction\n\nserver                                                                     \n\ndescription                                                                                                                                                                    \n\nhome\n\nloading_bars\n</code></pre>\n<h1>introduction:</h1>\n<pre><code>to install os_sys you type: pip install os_sys                                                                                  \nto upgrade os_sys you type: pip install --upgrade os_sys                                                                                  \nso lets get start to install os_sys                                                                                  \n</code></pre>\n<h1>server:</h1>\n<p>you can read the server docs at <a href=\"https://www.stranica.nl/docs\" rel=\"nofollow\">https://www.stranica.nl/docs</a></p>\n<h1>discription:</h1>\n<pre><code>os_sys is a extra package for python(3)                                                                                  \nit's a extra to have a more easy use of the normal python libs                                                                                  \nplz look sometimes to my packages becuse i am making more own libs(extra is not that own lib)                                                                                  \nif i have more info i while show it here                                                                                   \nplz read the license                                                                                  \n</code></pre>\n<h1>loading_bars:\nEasy progress reporting for Python</h1>\n<p>|pypi|</p>\n<h2>Bars</h2>\n<p>There are 7 progress bars to choose from:</p>\n<ul>\n<li><code>Bar</code></li>\n<li><code>ChargingBar</code></li>\n<li><code>FillingSquaresBar</code></li>\n<li><code>FillingCirclesBar</code></li>\n<li><code>IncrementalBar</code></li>\n<li><code>PixelBar</code></li>\n<li><code>ShadyBar</code></li>\n</ul>\n<p>To use them, just call <code>next</code> to advance and <code>finish</code> to finish:</p>\n<p>.. code-block:: python</p>\n<pre><code>from os_sys.progress import bar\n\nbar = Bar('Processing', max=20)\nfor i in range(20):\n    # Do some work\n    bar.next()\nbar.finish()\n</code></pre>\n<p>or use any bar of this class as a context manager:</p>\n<p>.. code-block:: python</p>\n<pre><code>from os_sys.progress import bar\n\nwith Bar('Processing', max=20) as bar:\n    for i in range(20):\n        # Do some work\n        bar.next()\n</code></pre>\n<p>The result will be a bar like the following: ::</p>\n<pre><code>Processing |#############                   | 42/100\n</code></pre>\n<p>To simplify the common case where the work is done in an iterator, you can\nuse the <code>iter</code> method:</p>\n<p>.. code-block:: python</p>\n<pre><code>for i in Bar('Processing').iter(it):\n    # Do some work\n</code></pre>\n<p>Progress bars are very customizable, you can change their width, their fill\ncharacter, their suffix and more:</p>\n<p>.. code-block:: python</p>\n<pre><code>bar = Bar('Loading', fill='@', suffix='%(percent)d%%')\n</code></pre>\n<p>This will produce a bar like the following: ::</p>\n<pre><code>Loading |@@@@@@@@@@@@@                   | 42%\n</code></pre>\n<p>You can use a number of template arguments in <code>message</code> and <code>suffix</code>:</p>\n<p>==========  ================================\nName        Value\n==========  ================================\nindex       current value\nmax         maximum value\nremaining   max - index\nprogress    index / max\npercent     progress * 100\navg         simple moving average time per item (in seconds)\nelapsed     elapsed time in seconds\nelapsed_td  elapsed as a timedelta (useful for printing as a string)\neta         avg * remaining\neta_td      eta as a timedelta (useful for printing as a string)\n==========  ================================</p>\n<p>Instead of passing all configuration options on instatiation, you can create\nyour custom subclass:</p>\n<p>.. code-block:: python</p>\n<pre><code>class FancyBar(Bar):\n    message = 'Loading'\n    fill = '*'\n    suffix = '%(percent).1f%% - %(eta)ds'\n</code></pre>\n<p>You can also override any of the arguments or create your own:</p>\n<p>.. code-block:: python</p>\n<pre><code>class SlowBar(Bar):\n    suffix = '%(remaining_hours)d hours remaining'\n    @property\n    def remaining_hours(self):\n        return self.eta // 3600\n</code></pre>\n<h1>Spinners</h1>\n<p>For actions with an unknown number of steps you can use a spinner:</p>\n<p>.. code-block:: python</p>\n<pre><code>from os_sys.progress import spinner\n\nspinner = Spinner('Loading ')\nwhile state != 'FINISHED':\n    # Do some work\n    spinner.next()\n</code></pre>\n<p>There are 5 predefined spinners:</p>\n<ul>\n<li><code>Spinner</code></li>\n<li><code>PieSpinner</code></li>\n<li><code>MoonSpinner</code></li>\n<li><code>LineSpinner</code></li>\n<li><code>PixelSpinner</code></li>\n</ul>\n<p>comming - <code>working to a big update the 2.0.0 release</code></p>\n<h1>home:</h1>\n<pre><code>plz visit my one website there you can post every program for python that you want:\n\nhttps://python-libs-com.webnode.nl/\n</code></pre>\n\n          </div>"}, "last_serial": 6394499, "releases": {"0.0.0.dev0": [{"comment_text": "", "digests": {"md5": "71b1800c5bc32e6fe5b4d4f93ba32af2", "sha256": "090316504da93a99bc9a3ee430bfd99341108e43901d73f5c8d3698aaeea506f"}, "downloads": -1, "filename": "os_sys_linux-0.0.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "71b1800c5bc32e6fe5b4d4f93ba32af2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 13428026, "upload_time": "2020-01-04T10:12:51", "upload_time_iso_8601": "2020-01-04T10:12:51.740522Z", "url": "https://files.pythonhosted.org/packages/92/92/1b7496b68be0caa95fd6e28bc652e06f02e421c2e19a58c5696c16999939/os_sys_linux-0.0.0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85784b84cad471d81322f03917b5d622", "sha256": "c89f566b0ec27e0d91422a6bc1a7f4de3369636013b71ef58bdd7c23ff28cfee"}, "downloads": -1, "filename": "os_sys_linux-0.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "85784b84cad471d81322f03917b5d622", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3417776, "upload_time": "2020-01-04T10:12:58", "upload_time_iso_8601": "2020-01-04T10:12:58.831236Z", "url": "https://files.pythonhosted.org/packages/68/10/0e968c3373278f6e9c239fdcea2ef23e43652f6ac75b7b0e6b74c1ba652c/os_sys_linux-0.0.0.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71b1800c5bc32e6fe5b4d4f93ba32af2", "sha256": "090316504da93a99bc9a3ee430bfd99341108e43901d73f5c8d3698aaeea506f"}, "downloads": -1, "filename": "os_sys_linux-0.0.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "71b1800c5bc32e6fe5b4d4f93ba32af2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 13428026, "upload_time": "2020-01-04T10:12:51", "upload_time_iso_8601": "2020-01-04T10:12:51.740522Z", "url": "https://files.pythonhosted.org/packages/92/92/1b7496b68be0caa95fd6e28bc652e06f02e421c2e19a58c5696c16999939/os_sys_linux-0.0.0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85784b84cad471d81322f03917b5d622", "sha256": "c89f566b0ec27e0d91422a6bc1a7f4de3369636013b71ef58bdd7c23ff28cfee"}, "downloads": -1, "filename": "os_sys_linux-0.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "85784b84cad471d81322f03917b5d622", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3417776, "upload_time": "2020-01-04T10:12:58", "upload_time_iso_8601": "2020-01-04T10:12:58.831236Z", "url": "https://files.pythonhosted.org/packages/68/10/0e968c3373278f6e9c239fdcea2ef23e43652f6ac75b7b0e6b74c1ba652c/os_sys_linux-0.0.0.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:57 2020"}