{"info": {"author": "Phil Adams", "author_email": "philadams.net@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Habitica\n========\n\nTwo tools for interacting with [Habitica](http://habitica.com):\n\n1. Python wrapper for the RESTful Habitica API (`habitica.api`)\n2. Command-line interface with subcommands (e.g. `> habitica todos`)\n\nInstall\n-------\n\n`pip install habitica`.\n\nI push to pip fairly frequently, but if you'd like to be on the bleeding edge,\nclone this project and install it by hand:\n\n    > git clone https://github.com/philadams/habitica\n    > pip install -e habitica\n\nConfigure\n---------\n\nYou'll need to let the tool know how to connect to your Habitica account. To do\nthis, you'll need to add the following credentials section in the file\n`~/.config/habitica/auth.cfg` (you may need to create the folder(s) and file):\n\n    [Habitica]\n    url = https://habitica.com\n    login = USER_ID\n    password = API_KEY\n\nThere's a template for this file at `auth.cfg.sample`.\n\nReplace USER\\_ID and API\\_KEY with the corresponding tokens from [your Habitica\nsettings>API page](https://habitica.com/#/options/settings/api).\n\nYou can replace `url` as needed, for example if you're self-hosting a Habitica\nserver.\n\nLastly, remember to `chmod 600 ~/.config/habitica/auth.cfg` to keep your\ncredentials secret.\n\nUsage\n-----\n\nWhat's my character's status?\n\n    > habitica status\n    --------------\n    Level 83 Rogue\n    --------------\n    Health: 50/50\n    XP: 904/2690\n    Mana: 133/218\n    Pet: Gryphon-Base (11 food items)\n    Mount: FlyingPig-Base\n\nShow me my todo items:\n\n    > habitica todos\n    [ ]  1 update habitica README with example instructions\n    [ ]  2 vacuum the car\n    [ ]  3 read Bell and Jofish \"Designing technology for domestic spaces\"\n    [ ]  4 order new contact lenses\n    [ ]  5 complete Keppi project report and share with Geri\n    [ ]  6 set up dinner with friends at Agava for Saturday night\n\nComplete a todo:\n\n    > habitica todos done 1\n    marked todo 'update habitica README with example instructions' complete\n    [ ] 1 vacuum the car\n    [ ] 2 read Bell and Jofish \"Designing technology for domestic spaces\"\n    [ ] 3 order new contact lenses\n    [ ] 4 complete Keppi project report and share with Geri\n    [ ] 5 make reservation at Agava for Saturday night\n\nComplete multiple todos. All `done`, `undo`, `up`, `down` commands can take one\nor more tasks as arguments, using either comma-separated lists or ranges or\nboth:\n\n    > habitica todos done 1,3-5\n    marked todo 'update habitica README with example instructions' complete\n    marked todo 'vacuum the car' complete\n    marked todo 'order new contact lenses' complete\n    marked todo 'complete Keppi project report and share with Geri' complete\n    marked todo 'make reservation at Agava for Saturday night' complete\n    [ ] 1 read Bell and Jofish \"Designing technology for domestic spaces\"\n\nAdd a new (hard!) todo. By default `--difficulty=easy`:\n\n    > habitica todos add finish dissertation --difficulty=hard\n    added new todo 'finish dissertation'\n    [ ] 1 finish dissertation\n    [ ] 2 read Bell and Jofish \"Designing technology for domestic spaces\"\n\nShow me my habits, and how well I'm doing with each:\n\n    > habitica habits\n    [*******] 1 commit code\n    [****] 2 drink water\n    [******] 3 encourage others\n\nRecord improvement with some habits:\n\n    > habitica habits up 2,3\n    incremented task 'drink water'\n    incremented task 'encourage others'\n    [*******] 1 commit code\n    [****] 2 drink water\n    [******] 3 encourage others\n\nShow me my dailies and each daily's state:\n\n    > habitica dailies\n    [ ] 1 pushups (5x20)\n    [ ] 2 clean dishes before bed\n    [x] 3 2x90mins writing\n\nComplete a daily task:\n\n    > habitica dailies done 1\n    marked daily 'pushups (5x20)' completed\n    [x] 1 pushups (5x20)\n    [ ] 2 clean dishes before bed\n    [x] 3 2x90mins writing\n\nIs the Habitica server up?\n\n    > habitica server\n    Habitica server is up\n\nHelp\n----\n\nVia `habitica --help`:\n\n    Habitica command-line interface.\n\n    Usage: habitica [--version] [--help]\n\t\t    <command> [<args>...] [--difficulty=<d>]\n\t\t    [--verbose | --debug] [--checklists]\n\n    Options:\n      -h --help         Show this screen\n      --version         Show version\n      --difficulty=<d>  (easy | medium | hard) [default: easy]\n      --verbose         Show some logging information\n      --debug           Some all logging information\n      -c --checklists   Toggle displaying checklists on or off\n\n    The habitica commands are:\n      status                 Show HP, XP, GP, and more\n      habits                 List habit tasks\n      habits up <task-id>    Up (+) habit <task-id>\n      habits down <task-id>  Down (-) habit <task-id>\n      dailies                List daily tasks\n      dailies done           Mark daily <task-id> complete\n      dailies undo           Mark daily <task-id> incomplete\n      todos                  List todo tasks\n      todos done <task-id>   Mark one or more todo <task-id> completed\n      todos add <task>       Add todo with description <task>\n      server                 Show status of Habitica service\n      home                   Open tasks page in default browser\n\n    For `habits up|down`, `dailies done|undo`, and `todos done`, you can pass\n    one or more <task-id> parameters, using either comma-separated lists or\n    ranges or both. For example, `todos done 1,3,6-9,11`.\n\n    To show checklists with \"todos\" and \"dailies\" permanently, set\n    'checklists' in your auth.cfg file to `checklists = true`.\n\nShell completion\n----------------\n\nThanks to [mohsend](https://github.com/mohsend), habitica now has shell completion! Basically, you'll want to add the following to your `~/.profile`:\n\n    if [ -f PATH_TO_SITE_PACKAGES/habitica/shell_completion.sh ]; then\n        . PATH_TO_SITE_PACKAGES/habitica/shell_completion.sh\n    fi\n\nYou can find your site-packages path with `python -c 'import habitica; print\nhabitica.__path__[0]'`.\n\nThanks\n------\n\nMany thanks to the following excellent projects:\n\n- [docopt](https://github.com/docopt/docopt)\n- [requests](https://github.com/kennethreitz/requests)\n\nAnd to [contributors to this project](./CONTRIBUTORS.md).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/philadams/habitica", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "habitica", "package_url": "https://pypi.org/project/habitica/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/habitica/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/philadams/habitica"}, "release_url": "https://pypi.org/project/habitica/0.0.16/", "requires_dist": null, "requires_python": null, "summary": "Commandline interface to Habitica (http://habitica.com)", "version": "0.0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            Habitica<br>========<br><br>Two tools for interacting with [Habitica](http://habitica.com):<br><br>1. Python wrapper for the RESTful Habitica API (`habitica.api`)<br>2. Command-line interface with subcommands (e.g. `&gt; habitica todos`)<br><br>Install<br>-------<br><br>`pip install habitica`.<br><br>I push to pip fairly frequently, but if you'd like to be on the bleeding edge,<br>clone this project and install it by hand:<br><br>    &gt; git clone https://github.com/philadams/habitica<br>    &gt; pip install -e habitica<br><br>Configure<br>---------<br><br>You'll need to let the tool know how to connect to your Habitica account. To do<br>this, you'll need to add the following credentials section in the file<br>`~/.config/habitica/auth.cfg` (you may need to create the folder(s) and file):<br><br>    [Habitica]<br>    url = https://habitica.com<br>    login = USER_ID<br>    password = API_KEY<br><br>There's a template for this file at `auth.cfg.sample`.<br><br>Replace USER\\_ID and API\\_KEY with the corresponding tokens from [your Habitica<br>settings&gt;API page](https://habitica.com/#/options/settings/api).<br><br>You can replace `url` as needed, for example if you're self-hosting a Habitica<br>server.<br><br>Lastly, remember to `chmod 600 ~/.config/habitica/auth.cfg` to keep your<br>credentials secret.<br><br>Usage<br>-----<br><br>What's my character's status?<br><br>    &gt; habitica status<br>    --------------<br>    Level 83 Rogue<br>    --------------<br>    Health: 50/50<br>    XP: 904/2690<br>    Mana: 133/218<br>    Pet: Gryphon-Base (11 food items)<br>    Mount: FlyingPig-Base<br><br>Show me my todo items:<br><br>    &gt; habitica todos<br>    [ ]  1 update habitica README with example instructions<br>    [ ]  2 vacuum the car<br>    [ ]  3 read Bell and Jofish \"Designing technology for domestic spaces\"<br>    [ ]  4 order new contact lenses<br>    [ ]  5 complete Keppi project report and share with Geri<br>    [ ]  6 set up dinner with friends at Agava for Saturday night<br><br>Complete a todo:<br><br>    &gt; habitica todos done 1<br>    marked todo 'update habitica README with example instructions' complete<br>    [ ] 1 vacuum the car<br>    [ ] 2 read Bell and Jofish \"Designing technology for domestic spaces\"<br>    [ ] 3 order new contact lenses<br>    [ ] 4 complete Keppi project report and share with Geri<br>    [ ] 5 make reservation at Agava for Saturday night<br><br>Complete multiple todos. All `done`, `undo`, `up`, `down` commands can take one<br>or more tasks as arguments, using either comma-separated lists or ranges or<br>both:<br><br>    &gt; habitica todos done 1,3-5<br>    marked todo 'update habitica README with example instructions' complete<br>    marked todo 'vacuum the car' complete<br>    marked todo 'order new contact lenses' complete<br>    marked todo 'complete Keppi project report and share with Geri' complete<br>    marked todo 'make reservation at Agava for Saturday night' complete<br>    [ ] 1 read Bell and Jofish \"Designing technology for domestic spaces\"<br><br>Add a new (hard!) todo. By default `--difficulty=easy`:<br><br>    &gt; habitica todos add finish dissertation --difficulty=hard<br>    added new todo 'finish dissertation'<br>    [ ] 1 finish dissertation<br>    [ ] 2 read Bell and Jofish \"Designing technology for domestic spaces\"<br><br>Show me my habits, and how well I'm doing with each:<br><br>    &gt; habitica habits<br>    [*******] 1 commit code<br>    [****] 2 drink water<br>    [******] 3 encourage others<br><br>Record improvement with some habits:<br><br>    &gt; habitica habits up 2,3<br>    incremented task 'drink water'<br>    incremented task 'encourage others'<br>    [*******] 1 commit code<br>    [****] 2 drink water<br>    [******] 3 encourage others<br><br>Show me my dailies and each daily's state:<br><br>    &gt; habitica dailies<br>    [ ] 1 pushups (5x20)<br>    [ ] 2 clean dishes before bed<br>    [x] 3 2x90mins writing<br><br>Complete a daily task:<br><br>    &gt; habitica dailies done 1<br>    marked daily 'pushups (5x20)' completed<br>    [x] 1 pushups (5x20)<br>    [ ] 2 clean dishes before bed<br>    [x] 3 2x90mins writing<br><br>Is the Habitica server up?<br><br>    &gt; habitica server<br>    Habitica server is up<br><br>Help<br>----<br><br>Via `habitica --help`:<br><br>    Habitica command-line interface.<br><br>    Usage: habitica [--version] [--help]<br>\t\t    &lt;command&gt; [&lt;args&gt;...] [--difficulty=&lt;d&gt;]<br>\t\t    [--verbose | --debug] [--checklists]<br><br>    Options:<br>      -h --help         Show this screen<br>      --version         Show version<br>      --difficulty=&lt;d&gt;  (easy | medium | hard) [default: easy]<br>      --verbose         Show some logging information<br>      --debug           Some all logging information<br>      -c --checklists   Toggle displaying checklists on or off<br><br>    The habitica commands are:<br>      status                 Show HP, XP, GP, and more<br>      habits                 List habit tasks<br>      habits up &lt;task-id&gt;    Up (+) habit &lt;task-id&gt;<br>      habits down &lt;task-id&gt;  Down (-) habit &lt;task-id&gt;<br>      dailies                List daily tasks<br>      dailies done           Mark daily &lt;task-id&gt; complete<br>      dailies undo           Mark daily &lt;task-id&gt; incomplete<br>      todos                  List todo tasks<br>      todos done &lt;task-id&gt;   Mark one or more todo &lt;task-id&gt; completed<br>      todos add &lt;task&gt;       Add todo with description &lt;task&gt;<br>      server                 Show status of Habitica service<br>      home                   Open tasks page in default browser<br><br>    For `habits up|down`, `dailies done|undo`, and `todos done`, you can pass<br>    one or more &lt;task-id&gt; parameters, using either comma-separated lists or<br>    ranges or both. For example, `todos done 1,3,6-9,11`.<br><br>    To show checklists with \"todos\" and \"dailies\" permanently, set<br>    'checklists' in your auth.cfg file to `checklists = true`.<br><br>Shell completion<br>----------------<br><br>Thanks to [mohsend](https://github.com/mohsend), habitica now has shell completion! Basically, you'll want to add the following to your `~/.profile`:<br><br>    if [ -f PATH_TO_SITE_PACKAGES/habitica/shell_completion.sh ]; then<br>        . PATH_TO_SITE_PACKAGES/habitica/shell_completion.sh<br>    fi<br><br>You can find your site-packages path with `python -c 'import habitica; print<br>habitica.__path__[0]'`.<br><br>Thanks<br>------<br><br>Many thanks to the following excellent projects:<br><br>- [docopt](https://github.com/docopt/docopt)<br>- [requests](https://github.com/kennethreitz/requests)<br><br>And to [contributors to this project](./CONTRIBUTORS.md).\n          </div>"}, "last_serial": 2533827, "releases": {"0.0.11": [{"comment_text": "", "digests": {"md5": "29ce7466c7040746f591e63d63e97487", "sha256": "5814e93c1257483bfd53ca652008a4f6f0924a801aea761a396ef7ede52d5379"}, "downloads": -1, "filename": "habitica-0.0.11.tar.gz", "has_sig": false, "md5_digest": "29ce7466c7040746f591e63d63e97487", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6394, "upload_time": "2015-07-31T16:23:45", "upload_time_iso_8601": "2015-07-31T16:23:45.985252Z", "url": "https://files.pythonhosted.org/packages/fb/7f/9d827ceadb6a3948b1412b9743b63401c8150c6eecbc4ac449ebbf458c8e/habitica-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "3bb0d87a6d36f334df8e1cdf1116cfa1", "sha256": "381e32568ff4fdf092d64bc9ff5c4fb39852a4b0344549ee4127805e1e2cf762"}, "downloads": -1, "filename": "habitica-0.0.12.tar.gz", "has_sig": false, "md5_digest": "3bb0d87a6d36f334df8e1cdf1116cfa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6214, "upload_time": "2015-08-15T19:55:25", "upload_time_iso_8601": "2015-08-15T19:55:25.715168Z", "url": "https://files.pythonhosted.org/packages/f0/87/ff80825bccdefdbada9b8a04a051c50e800105ae6e8f1c5677d95ce5a130/habitica-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "4fffa63a0f2c97a72826dbb77a603163", "sha256": "613c7de7fddc83c327c2968ebabe7840681cb226d1a48d5911cc9b6aee291335"}, "downloads": -1, "filename": "habitica-0.0.13.tar.gz", "has_sig": false, "md5_digest": "4fffa63a0f2c97a72826dbb77a603163", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8095, "upload_time": "2016-01-18T18:53:00", "upload_time_iso_8601": "2016-01-18T18:53:00.406246Z", "url": "https://files.pythonhosted.org/packages/90/5a/eddcb3c1215ea57f6b8b6ed02af1f00f1054a1e4d6acc2ddc93d506d9d12/habitica-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "e64f4ca45301698415521bf76c21be88", "sha256": "1591622a6e15e540cbd472cbbc2eff3244a9814ef008f2fc2e8cf65b9460c8cb"}, "downloads": -1, "filename": "habitica-0.0.14.tar.gz", "has_sig": false, "md5_digest": "e64f4ca45301698415521bf76c21be88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8611, "upload_time": "2016-09-16T01:56:25", "upload_time_iso_8601": "2016-09-16T01:56:25.938464Z", "url": "https://files.pythonhosted.org/packages/74/65/02bc7b09ba024949be7c85605462665b63dbd54ce3f19a0e344e61ce4e06/habitica-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "09de19d6f692a78b07064fcc29c7e2a1", "sha256": "c4b08c507b77b93074bb0d866a2fe2eb7fb6eeb208809ee1db7e61e822846f19"}, "downloads": -1, "filename": "habitica-0.0.15.tar.gz", "has_sig": false, "md5_digest": "09de19d6f692a78b07064fcc29c7e2a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8601, "upload_time": "2016-09-16T01:59:16", "upload_time_iso_8601": "2016-09-16T01:59:16.475120Z", "url": "https://files.pythonhosted.org/packages/a6/20/65ab6fc5dc8a41b28e08a628096707ae5acf384b7015f1ccaecd9d3d1f25/habitica-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "74186c1d3b8e0b99677a4cca865db443", "sha256": "7667bc69da5086f66c1bedf45af7614cf760c8aabce7d8396db5313113bf302f"}, "downloads": -1, "filename": "habitica-0.0.16.tar.gz", "has_sig": false, "md5_digest": "74186c1d3b8e0b99677a4cca865db443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8942, "upload_time": "2016-12-22T00:50:00", "upload_time_iso_8601": "2016-12-22T00:50:00.396142Z", "url": "https://files.pythonhosted.org/packages/2a/f3/4aa50300d1468e0fbfdb2b900927c6c786310ed2943771d1da6fa47fcebd/habitica-0.0.16.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74186c1d3b8e0b99677a4cca865db443", "sha256": "7667bc69da5086f66c1bedf45af7614cf760c8aabce7d8396db5313113bf302f"}, "downloads": -1, "filename": "habitica-0.0.16.tar.gz", "has_sig": false, "md5_digest": "74186c1d3b8e0b99677a4cca865db443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8942, "upload_time": "2016-12-22T00:50:00", "upload_time_iso_8601": "2016-12-22T00:50:00.396142Z", "url": "https://files.pythonhosted.org/packages/2a/f3/4aa50300d1468e0fbfdb2b900927c6c786310ed2943771d1da6fa47fcebd/habitica-0.0.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:52 2020"}