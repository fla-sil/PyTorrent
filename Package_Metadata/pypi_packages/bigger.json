{"info": {"author": "Mark Bell", "author_email": "mcbell@illinois.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Mathematics"], "description": "Bigger\n======\n\nBigger is a program for computing big mapping classes and their actions on non-compact laminations via ideal triangulation coordinates.\n\nBigger officially supports Python 3.5 -- 3.8 and PyPy3.\n\n.. image:: images/ladder.png\n   :scale: 75 %\n   :alt: An arc on the ladder surface\n   :align: center\n\nQuickstart\n----------\n\nBigger is available on `PyPI`_, so it can be installed via::\n\n    $ pip install bigger --user --upgrade\n\nOnce installed, try it inside of Python::\n\n    >>> import bigger\n    >>> S = bigger.load.ladder()  # The infinite-genus two-ended surface\n    >>> a = S.triangulation({(0, 5): -1})  # An arc\n    >>> a\n    Lamination (0, 5): -1\n\n    >>> b = S.triangulation(lambda e: 2 if e[1] in {2, 3, 4, 6} else 0)  # An infinite arc\n    >>> b\n    Infinitely supported lamination (0, 0): 0, (0, 1): 0, (0, 2): 2, (0, 3): 2, (0, 4): 2, (0, 5): 0, (0, 6): 2, (0, 7): 0, (0, 8): 0, (-1, 0): 0 ...\n\n    >>> c = S('b{n >= 0}.a[2].a.a')(b)  # Apply some mapping classes\n    >>> # Let's make the picture at the top\n    >>> edges = [(i, j) for i in range(-1, 2) for j in range(2, 9)] + [(i, 0) for i in range(2)]\n    >>> c.draw(edges, layout=S, w=800)\n\nExternal Links\n--------------\n\n* `PyPI`_\n* `ReadTheDocs`_\n* `GitHub`_\n* `Travis`_\n* `AppVeyor`_\n* `Azure`_\n\n.. _AppVeyor: https://ci.appveyor.com/project/MarkCBell/bigger\n.. _Azure: https://dev.azure.com/MarkCBell/bigger\n.. _GitHub: https://github.com/MarkCBell/bigger\n.. _PyPI: https://pypi.org/project/bigger\n.. _ReadTheDocs: http://biggermcg.readthedocs.io\n.. _Travis: https://travis-ci.com/MarkCBell/bigger", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MarkCBell/bigger", "keywords": "infinite surface MCG", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "bigger", "package_url": "https://pypi.org/project/bigger/", "platform": "", "project_url": "https://pypi.org/project/bigger/", "project_urls": {"Homepage": "https://github.com/MarkCBell/bigger"}, "release_url": "https://pypi.org/project/bigger/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "For studying big mapping classes", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Bigger is a program for computing big mapping classes and their actions on non-compact laminations via ideal triangulation coordinates.</p>\n<p>Bigger officially supports Python 3.5 \u2013 3.8 and PyPy3.</p>\n<img alt=\"An arc on the ladder surface\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18fa9919ab6f92b8a2ae030bde15556f4a38b980/696d616765732f6c61646465722e706e67\">\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Bigger is available on <a href=\"https://pypi.org/project/bigger\" rel=\"nofollow\">PyPI</a>, so it can be installed via:</p>\n<pre>$ pip install bigger --user --upgrade\n</pre>\n<p>Once installed, try it inside of Python:</p>\n<pre>&gt;&gt;&gt; import bigger\n&gt;&gt;&gt; S = bigger.load.ladder()  # The infinite-genus two-ended surface\n&gt;&gt;&gt; a = S.triangulation({(0, 5): -1})  # An arc\n&gt;&gt;&gt; a\nLamination (0, 5): -1\n\n&gt;&gt;&gt; b = S.triangulation(lambda e: 2 if e[1] in {2, 3, 4, 6} else 0)  # An infinite arc\n&gt;&gt;&gt; b\nInfinitely supported lamination (0, 0): 0, (0, 1): 0, (0, 2): 2, (0, 3): 2, (0, 4): 2, (0, 5): 0, (0, 6): 2, (0, 7): 0, (0, 8): 0, (-1, 0): 0 ...\n\n&gt;&gt;&gt; c = S('b{n &gt;= 0}.a[2].a.a')(b)  # Apply some mapping classes\n&gt;&gt;&gt; # Let's make the picture at the top\n&gt;&gt;&gt; edges = [(i, j) for i in range(-1, 2) for j in range(2, 9)] + [(i, 0) for i in range(2)]\n&gt;&gt;&gt; c.draw(edges, layout=S, w=800)\n</pre>\n</div>\n<div id=\"external-links\">\n<h2>External Links</h2>\n<ul>\n<li><a href=\"https://pypi.org/project/bigger\" rel=\"nofollow\">PyPI</a></li>\n<li><a href=\"http://biggermcg.readthedocs.io\" rel=\"nofollow\">ReadTheDocs</a></li>\n<li><a href=\"https://github.com/MarkCBell/bigger\" rel=\"nofollow\">GitHub</a></li>\n<li><a href=\"https://travis-ci.com/MarkCBell/bigger\" rel=\"nofollow\">Travis</a></li>\n<li><a href=\"https://ci.appveyor.com/project/MarkCBell/bigger\" rel=\"nofollow\">AppVeyor</a></li>\n<li><a href=\"https://dev.azure.com/MarkCBell/bigger\" rel=\"nofollow\">Azure</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7039488, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a68e6c01bec3920d2c9e930c3eace658", "sha256": "9333c1c1614385fd591fc96ad30d42840fa1632436fb61a434efd511ee89bcee"}, "downloads": -1, "filename": "bigger-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a68e6c01bec3920d2c9e930c3eace658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9958, "upload_time": "2020-02-28T00:54:13", "upload_time_iso_8601": "2020-02-28T00:54:13.890698Z", "url": "https://files.pythonhosted.org/packages/4e/25/0981759e044b3d8cc906157cfbe733a2ed61f0ba0fbdb8e75b86991d2399/bigger-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "23f9ad8458bbf2b5d471c7c173c1645e", "sha256": "827255bef516a7128d60c02ed563f5edfba766bd18a187875a92c2a9d5ea6f21"}, "downloads": -1, "filename": "bigger-0.2.0.tar.gz", "has_sig": false, "md5_digest": "23f9ad8458bbf2b5d471c7c173c1645e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15855, "upload_time": "2020-04-17T11:16:08", "upload_time_iso_8601": "2020-04-17T11:16:08.861313Z", "url": "https://files.pythonhosted.org/packages/cc/86/1ed80d75f198b80b374a69ca29b41fffe7e2cdf6547d2ad4caebd0ad41a4/bigger-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23f9ad8458bbf2b5d471c7c173c1645e", "sha256": "827255bef516a7128d60c02ed563f5edfba766bd18a187875a92c2a9d5ea6f21"}, "downloads": -1, "filename": "bigger-0.2.0.tar.gz", "has_sig": false, "md5_digest": "23f9ad8458bbf2b5d471c7c173c1645e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15855, "upload_time": "2020-04-17T11:16:08", "upload_time_iso_8601": "2020-04-17T11:16:08.861313Z", "url": "https://files.pythonhosted.org/packages/cc/86/1ed80d75f198b80b374a69ca29b41fffe7e2cdf6547d2ad4caebd0ad41a4/bigger-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:34 2020"}