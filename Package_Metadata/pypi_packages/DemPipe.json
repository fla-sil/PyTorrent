{"info": {"author": "Dhia Hmila", "author_email": "hmiladhia@hotmail.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# DemPipe\n\n## Installation\n\nA simple pip install will do :\n\n```bash\npython -m pip install DemPipe\n```\n\n## Use\n```python\nfrom DemPipe import PipeExecutor, Action\n\nwith PipeExecutor() as pipe:\n    actions = [Action(lambda x: x**2, 2),  # returns 4\n               Action(lambda x: x+3, ctx_in='last_value', ctx_out='my_result_name'),  # returns 4+3\n               Action(lambda x: x*2, ctx_in='my_result_name')  # returns 2*7\n              ]\n    result = pipe.execute(actions)\n    print('result:', result)  # 14\n    print('result (from context):', pipe.context['last_value'])  # 14\n    print('my_result_name:', pipe.context['my_result_name'])  # 7\n```\n\nYou can also use a Trigger Action for conditional Actions in the pipeline ! \n```python\nfrom DemPipe import PipeExecutor, Action, Trigger\n\nwith PipeExecutor() as pipe:\n    actions = [Action(lambda x: x**2, 2),  # returns 4\n               Trigger(lambda x: x==3,   # returns False -> executes the second action\n                       Action(lambda x: x+3, ctx_in='last_value'),  # ignored\n                       Action(lambda x: x+7, ctx_in='last_value'),  # returns 11\n                       ctx_in='last_value')\n              ]\n    result = pipe.execute(actions)\n    print('result:', result)  # 11\n```\n\n## Error Handling\nIn case an error occurs, you can configure an automatic e-mail to be sent with the traceback and the error message :\n- Create a config file containing your credentials : \n```json\n{\n  \"mail\": {\n    \"mail_server\": \"smtp.gmail.com\",\n\t\"mail_port\": 587,\n\t\"mail_user\": \"${os_environ[user]}\",\n\t\"mail_password\": \"${os_environ[password]}\",\n\t\"mail_use_tls\": true,\n\t\"mail_default_receiver\": \"${os_environ[receiver]}\"\n  },\n  \"pipe_name\": \"My Pipe\"\n}\n```\n\n- Specify **config_file** to the **PipeExecutor**\n```python\nfrom DemPipe import PipeExecutor, Action\n\nwith PipeExecutor(config_file='ConfigsFolder.MyConfig') as pipe:\n    pipe.execute(Action(lambda x: x/0, 2))  # raises ZeroDivisionException\n```\n\n## Other Types of actions\n\nIn addition to Trigger and Action there exist other kinds of actions :\n\n- **ContextSetter**: Makes it easier to set context values :\n\n  ```python\n  actions = [ContextSetter(var1=5, var2=\"test string\"),\n             Action(lambda x: x**2, ctx_in='var1')]\n  print(pipe.execute(actions))  # 25\n\n  actions = [ContextSetter(lambda c: {'var1': c['var2'] * 3}, var2=4), \n             Action(lambda x: x**2, ctx_in='variable1')]\n  print(pipe.execute(actions))  # 144\n  ```\n\n- **Procedure**: Same as an action but doesn't update the current context with its return value :\n\n  ```python\n  actions = [ContextSetter(last_value=3),\n             Procedure(lambda x: x**2, ctx_in='last_value'),\n             Action(lambda x: x + 2, ctx_in='last_value')]\n  print(pipe.execute(actions))  # 5\n  ```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hmiladhia/DemPipe", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "DemPipe", "package_url": "https://pypi.org/project/DemPipe/", "platform": "", "project_url": "https://pypi.org/project/DemPipe/", "project_urls": {"Homepage": "https://github.com/hmiladhia/DemPipe"}, "release_url": "https://pypi.org/project/DemPipe/0.0.2/", "requires_dist": ["configDmanager (>=0.1.8)", "Dmail (>=0.1.0)"], "requires_python": ">= 3.6", "summary": "A simple Pipeline creator", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DemPipe</h1>\n<h2>Installation</h2>\n<p>A simple pip install will do :</p>\n<pre>python -m pip install DemPipe\n</pre>\n<h2>Use</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DemPipe</span> <span class=\"kn\">import</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">,</span> <span class=\"n\">Action</span>\n\n<span class=\"k\">with</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">pipe</span><span class=\"p\">:</span>\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>  <span class=\"c1\"># returns 4</span>\n               <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">,</span> <span class=\"n\">ctx_out</span><span class=\"o\">=</span><span class=\"s1\">'my_result_name'</span><span class=\"p\">),</span>  <span class=\"c1\"># returns 4+3</span>\n               <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'my_result_name'</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 2*7</span>\n              <span class=\"p\">]</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'result:'</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>  <span class=\"c1\"># 14</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'result (from context):'</span><span class=\"p\">,</span> <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'last_value'</span><span class=\"p\">])</span>  <span class=\"c1\"># 14</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'my_result_name:'</span><span class=\"p\">,</span> <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'my_result_name'</span><span class=\"p\">])</span>  <span class=\"c1\"># 7</span>\n</pre>\n<p>You can also use a Trigger Action for conditional Actions in the pipeline !</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DemPipe</span> <span class=\"kn\">import</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">,</span> <span class=\"n\">Action</span><span class=\"p\">,</span> <span class=\"n\">Trigger</span>\n\n<span class=\"k\">with</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">pipe</span><span class=\"p\">:</span>\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>  <span class=\"c1\"># returns 4</span>\n               <span class=\"n\">Trigger</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">==</span><span class=\"mi\">3</span><span class=\"p\">,</span>   <span class=\"c1\"># returns False -&gt; executes the second action</span>\n                       <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">),</span>  <span class=\"c1\"># ignored</span>\n                       <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">),</span>  <span class=\"c1\"># returns 11</span>\n                       <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">)</span>\n              <span class=\"p\">]</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'result:'</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>  <span class=\"c1\"># 11</span>\n</pre>\n<h2>Error Handling</h2>\n<p>In case an error occurs, you can configure an automatic e-mail to be sent with the traceback and the error message :</p>\n<ul>\n<li>Create a config file containing your credentials :</li>\n</ul>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"mail\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"mail_server\"</span><span class=\"p\">:</span> <span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"mail_port\"</span><span class=\"p\">:</span> <span class=\"mi\">587</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"mail_user\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${os_environ[user]}\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"mail_password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${os_environ[password]}\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"mail_use_tls\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"mail_default_receiver\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${os_environ[receiver]}\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"pipe_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Pipe\"</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>Specify <strong>config_file</strong> to the <strong>PipeExecutor</strong></li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DemPipe</span> <span class=\"kn\">import</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">,</span> <span class=\"n\">Action</span>\n\n<span class=\"k\">with</span> <span class=\"n\">PipeExecutor</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s1\">'ConfigsFolder.MyConfig'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">pipe</span><span class=\"p\">:</span>\n    <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">/</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>  <span class=\"c1\"># raises ZeroDivisionException</span>\n</pre>\n<h2>Other Types of actions</h2>\n<p>In addition to Trigger and Action there exist other kinds of actions :</p>\n<ul>\n<li>\n<p><strong>ContextSetter</strong>: Makes it easier to set context values :</p>\n<pre><span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ContextSetter</span><span class=\"p\">(</span><span class=\"n\">var1</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">var2</span><span class=\"o\">=</span><span class=\"s2\">\"test string\"</span><span class=\"p\">),</span>\n           <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'var1'</span><span class=\"p\">)]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">))</span>  <span class=\"c1\"># 25</span>\n\n<span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ContextSetter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'var1'</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'var2'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"n\">var2</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">),</span> \n           <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'variable1'</span><span class=\"p\">)]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">))</span>  <span class=\"c1\"># 144</span>\n</pre>\n</li>\n<li>\n<p><strong>Procedure</strong>: Same as an action but doesn't update the current context with its return value :</p>\n<pre><span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ContextSetter</span><span class=\"p\">(</span><span class=\"n\">last_value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n           <span class=\"n\">Procedure</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">),</span>\n           <span class=\"n\">Action</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ctx_in</span><span class=\"o\">=</span><span class=\"s1\">'last_value'</span><span class=\"p\">)]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">))</span>  <span class=\"c1\"># 5</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6861658, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9d8f6925c533114f4327a4ce19c24fd1", "sha256": "fd3f92ad9466f1127503a71f5409ddb03e152ee4de2011f638e154fb48b669c1"}, "downloads": -1, "filename": "DemPipe-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d8f6925c533114f4327a4ce19c24fd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 4019, "upload_time": "2020-03-22T15:45:59", "upload_time_iso_8601": "2020-03-22T15:45:59.559796Z", "url": "https://files.pythonhosted.org/packages/5b/1b/24a1657f66fe5cde1761a4ee7396b3733f959fb388fbee72b3c016750cd9/DemPipe-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dda3bb76a8d5fa65cd45a7038d1c93e5", "sha256": "2213c565a609949791f69a0b79adae32127fab752d1876dc10b9a5c971ecb770"}, "downloads": -1, "filename": "DemPipe-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dda3bb76a8d5fa65cd45a7038d1c93e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 2443, "upload_time": "2020-03-22T15:47:51", "upload_time_iso_8601": "2020-03-22T15:47:51.360260Z", "url": "https://files.pythonhosted.org/packages/61/fa/74d87d7254e6dd6579bd3584ad8f24dd0600892cb183add4bae786a5d6ae/DemPipe-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "82d71983b9ff16fb07eb8b61a5563b2b", "sha256": "10bb38eedce2c6c7e980307ca53ab3e32f9eeae5d6b617fd7d938e83ba4415f1"}, "downloads": -1, "filename": "DemPipe-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "82d71983b9ff16fb07eb8b61a5563b2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 11626, "upload_time": "2020-03-22T20:12:27", "upload_time_iso_8601": "2020-03-22T20:12:27.006256Z", "url": "https://files.pythonhosted.org/packages/b7/45/fa48e278b50f890a6964d8e8c85dc6263adb14a7b3f29101b6489aca04a2/DemPipe-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f45d8750fd73dcdf0b7a79941c91e696", "sha256": "e4dbab86caf985cff5d3d588fa217d0b5705a05da9b4fb607edd92dcae16b892"}, "downloads": -1, "filename": "DemPipe-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f45d8750fd73dcdf0b7a79941c91e696", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 6260, "upload_time": "2020-03-22T20:12:28", "upload_time_iso_8601": "2020-03-22T20:12:28.277169Z", "url": "https://files.pythonhosted.org/packages/28/df/fa4eee020c85aba7ed6c797d3771a2903bd8a7c7bd6592c6b2a0a2b570e8/DemPipe-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82d71983b9ff16fb07eb8b61a5563b2b", "sha256": "10bb38eedce2c6c7e980307ca53ab3e32f9eeae5d6b617fd7d938e83ba4415f1"}, "downloads": -1, "filename": "DemPipe-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "82d71983b9ff16fb07eb8b61a5563b2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 11626, "upload_time": "2020-03-22T20:12:27", "upload_time_iso_8601": "2020-03-22T20:12:27.006256Z", "url": "https://files.pythonhosted.org/packages/b7/45/fa48e278b50f890a6964d8e8c85dc6263adb14a7b3f29101b6489aca04a2/DemPipe-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f45d8750fd73dcdf0b7a79941c91e696", "sha256": "e4dbab86caf985cff5d3d588fa217d0b5705a05da9b4fb607edd92dcae16b892"}, "downloads": -1, "filename": "DemPipe-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f45d8750fd73dcdf0b7a79941c91e696", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 6260, "upload_time": "2020-03-22T20:12:28", "upload_time_iso_8601": "2020-03-22T20:12:28.277169Z", "url": "https://files.pythonhosted.org/packages/28/df/fa4eee020c85aba7ed6c797d3771a2903bd8a7c7bd6592c6b2a0a2b570e8/DemPipe-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:08 2020"}