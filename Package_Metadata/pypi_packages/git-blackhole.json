{"info": {"author": "Takafumi Arakaki", "author_email": "aka.tkf@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Version Control :: Git"], "description": "Continuous backup and recoverable trash can for Git\n\nThe aim of ``git-blackhole`` is to connect any of your repositories to\na single repository (\"blackhole\" repository) to which you can push any\ncommits --- WIP commits, branches no longer needed, and useless\nstashes.\n\nThere are three main features of ``git-blackhole``:\n\n1. **Continuous backup**.  You can use ``git-blackhole`` to\n   continuously backup commits in background to a remote repository\n   (or actually any repository) called blackhole repository.\n\n   Run ``git blackhole init`` and then setup ``post-commit`` hook to\n   run ``git blackhole push``.  See the help of ``git blackhole push``\n   for the details.\n\n   By combining with git-wip_ command, you can backup/share\n   uncommitted changes as well.\n\n2. **Sharing local repository state**.  Since ``git-blackhole`` can\n   push commits and the location of HEAD to the blackhole repository,\n   the state of a repository in one machine is accessible from other\n   machines.\n\n   For example, if you forget to push a commit from your desktop (to\n   the usual remote) but want to resume the work from your laptop,\n   ``git blackhole warp`` would be helpful.\n\n3. **Recoverable trash can**.  Use ``git blackhole trash-branch`` and\n   ``git blackhole trash-stashes`` to remove branches and stashes from\n   the local repository after sending them to the remote blackhole\n   repository.  They are stored remotely as ordinary branches so that\n   you can recover them easily.\n\n.. _git-wip: https://github.com/bartman/git-wip", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tkf/git-blackhole", "keywords": "Git,Backup,CLI", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "git-blackhole", "package_url": "https://pypi.org/project/git-blackhole/", "platform": "", "project_url": "https://pypi.org/project/git-blackhole/", "project_urls": {"Homepage": "https://github.com/tkf/git-blackhole"}, "release_url": "https://pypi.org/project/git-blackhole/0.1.0.post1/", "requires_dist": null, "requires_python": "", "summary": "Continuous backup and recoverable trash can for Git", "version": "0.1.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Continuous backup and recoverable trash can for Git</p>\n<p>The aim of <tt><span class=\"pre\">git-blackhole</span></tt> is to connect any of your repositories to\na single repository (\u201cblackhole\u201d repository) to which you can push any\ncommits \u2014 WIP commits, branches no longer needed, and useless\nstashes.</p>\n<p>There are three main features of <tt><span class=\"pre\">git-blackhole</span></tt>:</p>\n<ol>\n<li><p><strong>Continuous backup</strong>.  You can use <tt><span class=\"pre\">git-blackhole</span></tt> to\ncontinuously backup commits in background to a remote repository\n(or actually any repository) called blackhole repository.</p>\n<p>Run <tt>git blackhole init</tt> and then setup <tt><span class=\"pre\">post-commit</span></tt> hook to\nrun <tt>git blackhole push</tt>.  See the help of <tt>git blackhole push</tt>\nfor the details.</p>\n<p>By combining with <a href=\"https://github.com/bartman/git-wip\" rel=\"nofollow\">git-wip</a> command, you can backup/share\nuncommitted changes as well.</p>\n</li>\n<li><p><strong>Sharing local repository state</strong>.  Since <tt><span class=\"pre\">git-blackhole</span></tt> can\npush commits and the location of HEAD to the blackhole repository,\nthe state of a repository in one machine is accessible from other\nmachines.</p>\n<p>For example, if you forget to push a commit from your desktop (to\nthe usual remote) but want to resume the work from your laptop,\n<tt>git blackhole warp</tt> would be helpful.</p>\n</li>\n<li><p><strong>Recoverable trash can</strong>.  Use <tt>git blackhole <span class=\"pre\">trash-branch</span></tt> and\n<tt>git blackhole <span class=\"pre\">trash-stashes</span></tt> to remove branches and stashes from\nthe local repository after sending them to the remote blackhole\nrepository.  They are stored remotely as ordinary branches so that\nyou can recover them easily.</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 3412462, "releases": {"0.1.0.post1": [{"comment_text": "", "digests": {"md5": "1eccfc38325a42c08ddf06d1e152ad53", "sha256": "dcd410e40b9f40479a3aeb85e6098aaa7f862efc110cc1a5988963ec51aab0f2"}, "downloads": -1, "filename": "git-blackhole-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "1eccfc38325a42c08ddf06d1e152ad53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15227, "upload_time": "2017-12-13T07:37:22", "upload_time_iso_8601": "2017-12-13T07:37:22.178719Z", "url": "https://files.pythonhosted.org/packages/44/fc/1f6f8b1c2c888d9e99751fd224f56503451f05e3848a6a8af4e4b11e27d0/git-blackhole-0.1.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1eccfc38325a42c08ddf06d1e152ad53", "sha256": "dcd410e40b9f40479a3aeb85e6098aaa7f862efc110cc1a5988963ec51aab0f2"}, "downloads": -1, "filename": "git-blackhole-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "1eccfc38325a42c08ddf06d1e152ad53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15227, "upload_time": "2017-12-13T07:37:22", "upload_time_iso_8601": "2017-12-13T07:37:22.178719Z", "url": "https://files.pythonhosted.org/packages/44/fc/1f6f8b1c2c888d9e99751fd224f56503451f05e3848a6a8af4e4b11e27d0/git-blackhole-0.1.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:10 2020"}