{"info": {"author": "Louis Abraham", "author_email": "louis.abraham@yahoo.fr", "bugtrack_url": null, "classifiers": ["Topic :: Internet :: Proxy Servers", "Topic :: Internet :: WWW/HTTP", "Topic :: Security"], "description": "# FRida In The Middle\n\n`fritm` is a minimalist, cross-platform (tested on macOS and Windows)\nnetwork reverse engineering framework written in Python.\n\n`fritm-hook` allows you to easily hook the\n[`connect()`](http://man7.org/linux/man-pages/man2/connect.2.html)\nfunction with [`frida`](https://www.frida.re/) to redirect all traffic\nfrom a target application.\n\nYou can then use the builtin server written in Python to initiate a\n[Man-in-the-middle\nattack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack).\n\nEven if you don't want to use Python, you can use the `fritm-hook`\ncommand to redirect the traffic to your application and implement the\nsimple lecture of the `HTTP CONNECT` header.\n\n## Installation\n\n``` bash\npip install fritm\n```\n\n## Usage\n\nHook the process:\n\n``` bash\nfritm-hook PROCESS_NAME_OR_PID -p PORT # (default 8080)\n```\n\nOr create a new one:\n\n``` bash\nfritm-spawn PATH_TO_COMMAND -p PORT # (default 8080)\n```\n\nLaunch a proxy server in Python:\n\n``` python\nimport select\n\nfrom fritm import start_proxy_server\n\n\ndef dumb_callback(soClient, soServer):\n    \"\"\"Forwards all the traffic between the two sockets\n    \"\"\"\n    conns = [soClient, soServer]\n    other = {soClient: soServer, soServer: soClient}\n    active = True\n    try:\n        while active:\n            rlist, wlist, xlist = select.select(conns, [], conns)\n            if xlist or not rlist:\n                break\n            for r in rlist:\n                data = r.recv(8192)\n                if not data:\n                    active = False\n                    break\n                other[r].sendall(data)\n    finally:\n        for c in conns:\n            c.close()\n\nhttpd = start_proxy_server(dumb_callback)\n```\n\nNow, all the traffic will go through your application. You can modify\nanything on the fly.\n\n## How does it work?\n\n### Hooking with `fritm.hook(process, port, filter)`\n\n1.  attach to the target process\n2.  intercept the calls to\n    [`connect()`](http://man7.org/linux/man-pages/man2/connect.2.html)\n3.  replace the target IP address by 127.0.0.1 and the port with the\n    chosen one\n4.  execute the `connect()` function with the local IP\n5.  just before returning, send the [HTTP CONNECT\n    method](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_method)\n    with the original IP and port\n\n`fritm.spawn_and_hook(process, port)` launches the process and ensures\nit is hooked from the beginning.\n\n### MITM with `fritm.start_proxy_server(callback, port, filter)`\n\n1.  Launch a local server that listens for connections on the given port\n2.  Upon receiving a new connection from the hooked client, read the IP\n    and port of the server from the HTTP CONNECT header\n3.  Open a new socket to the server\n4.  Call `callback(socket_to_client, socket_to_server)`\n\n\n### `filter` usage\n\nWhen specified, `filter` allows you to not redirect some connections.\nIt is a javascript expression that can use the variables `sa_family`,\n`addr` and `port`.\nA good value is `sa_family == 2` (corresponds to `AF_INET` aka ipv4), but\nfor unknown reasons `sa_family` is 0 on Windows.\n\n\n## Differences with [mitmproxy](https://mitmproxy.org/)\n\n  - mitmproxy doesn't use function hooking, it intercepts all the\n    traffic from your browser or computer\n  - mitmproxy only works for HTTP traffic, whereas fritm works with any\n    TCP\ntraffic.\n\n## Differences with [proxychains](https://github.com/haad/proxychains) / [proxychains-ng](https://github.com/rofl0r/proxychains-ng)\n\n  - `fritm-spawn` is intented as simplified and cross-platform version\n    of proxychains.\n  - `fritm-hook` can attach to an already running process.\n  - proxychains is not cross-platform and hard to install, whereas fritm\n    is cross-platform and simple to install.\n  - proxychains uses a config file whereas `fritm-spawn` only takes two\n    arguments\n  - fritm includes a HTTP proxy server (that is also able to communicate\n    with proxychains)\n  - proxychains can handle a lot of different proxy types (SOCKS4,\n    SOCKS5, HTTPS) with a lot of options (e.g. for authentification)\n  - proxychains can chain multiple proxies\n  - proxychains handles any proxy address whereas `fritm-spawn` defaults\n    to localhost. However, if anyone needs it for remote addresses, post\n    an issue and I'll implement it.\n\n## Current limitations\n\n  - Some Windows user faced issues that I couldn't reproduce\n  - fritm will fail on IPv6 addresses, but it should not be hard to fix\n    (I just don't happen to have any application that uses an IPv6\n    address to test).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/louisabraham/fritm", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fritm", "package_url": "https://pypi.org/project/fritm/", "platform": "", "project_url": "https://pypi.org/project/fritm/", "project_urls": {"Homepage": "https://github.com/louisabraham/fritm"}, "release_url": "https://pypi.org/project/fritm/0.4.1/", "requires_dist": ["frida", "click"], "requires_python": ">=3.5", "summary": "Minimalist and cross-platform network reverse engineering framework", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FRida In The Middle</h1>\n<p><code>fritm</code> is a minimalist, cross-platform (tested on macOS and Windows)\nnetwork reverse engineering framework written in Python.</p>\n<p><code>fritm-hook</code> allows you to easily hook the\n<a href=\"http://man7.org/linux/man-pages/man2/connect.2.html\" rel=\"nofollow\"><code>connect()</code></a>\nfunction with <a href=\"https://www.frida.re/\" rel=\"nofollow\"><code>frida</code></a> to redirect all traffic\nfrom a target application.</p>\n<p>You can then use the builtin server written in Python to initiate a\n<a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" rel=\"nofollow\">Man-in-the-middle\nattack</a>.</p>\n<p>Even if you don't want to use Python, you can use the <code>fritm-hook</code>\ncommand to redirect the traffic to your application and implement the\nsimple lecture of the <code>HTTP CONNECT</code> header.</p>\n<h2>Installation</h2>\n<pre>pip install fritm\n</pre>\n<h2>Usage</h2>\n<p>Hook the process:</p>\n<pre>fritm-hook PROCESS_NAME_OR_PID -p PORT <span class=\"c1\"># (default 8080)</span>\n</pre>\n<p>Or create a new one:</p>\n<pre>fritm-spawn PATH_TO_COMMAND -p PORT <span class=\"c1\"># (default 8080)</span>\n</pre>\n<p>Launch a proxy server in Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">select</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">fritm</span> <span class=\"kn\">import</span> <span class=\"n\">start_proxy_server</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">dumb_callback</span><span class=\"p\">(</span><span class=\"n\">soClient</span><span class=\"p\">,</span> <span class=\"n\">soServer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Forwards all the traffic between the two sockets</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">conns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">soClient</span><span class=\"p\">,</span> <span class=\"n\">soServer</span><span class=\"p\">]</span>\n    <span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">soClient</span><span class=\"p\">:</span> <span class=\"n\">soServer</span><span class=\"p\">,</span> <span class=\"n\">soServer</span><span class=\"p\">:</span> <span class=\"n\">soClient</span><span class=\"p\">}</span>\n    <span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">while</span> <span class=\"n\">active</span><span class=\"p\">:</span>\n            <span class=\"n\">rlist</span><span class=\"p\">,</span> <span class=\"n\">wlist</span><span class=\"p\">,</span> <span class=\"n\">xlist</span> <span class=\"o\">=</span> <span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">conns</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"n\">conns</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">xlist</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">rlist</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">rlist</span><span class=\"p\">:</span>\n                <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">recv</span><span class=\"p\">(</span><span class=\"mi\">8192</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n                    <span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">break</span>\n                <span class=\"n\">other</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sendall</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">conns</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">httpd</span> <span class=\"o\">=</span> <span class=\"n\">start_proxy_server</span><span class=\"p\">(</span><span class=\"n\">dumb_callback</span><span class=\"p\">)</span>\n</pre>\n<p>Now, all the traffic will go through your application. You can modify\nanything on the fly.</p>\n<h2>How does it work?</h2>\n<h3>Hooking with <code>fritm.hook(process, port, filter)</code></h3>\n<ol>\n<li>attach to the target process</li>\n<li>intercept the calls to\n<a href=\"http://man7.org/linux/man-pages/man2/connect.2.html\" rel=\"nofollow\"><code>connect()</code></a></li>\n<li>replace the target IP address by 127.0.0.1 and the port with the\nchosen one</li>\n<li>execute the <code>connect()</code> function with the local IP</li>\n<li>just before returning, send the <a href=\"https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_method\" rel=\"nofollow\">HTTP CONNECT\nmethod</a>\nwith the original IP and port</li>\n</ol>\n<p><code>fritm.spawn_and_hook(process, port)</code> launches the process and ensures\nit is hooked from the beginning.</p>\n<h3>MITM with <code>fritm.start_proxy_server(callback, port, filter)</code></h3>\n<ol>\n<li>Launch a local server that listens for connections on the given port</li>\n<li>Upon receiving a new connection from the hooked client, read the IP\nand port of the server from the HTTP CONNECT header</li>\n<li>Open a new socket to the server</li>\n<li>Call <code>callback(socket_to_client, socket_to_server)</code></li>\n</ol>\n<h3><code>filter</code> usage</h3>\n<p>When specified, <code>filter</code> allows you to not redirect some connections.\nIt is a javascript expression that can use the variables <code>sa_family</code>,\n<code>addr</code> and <code>port</code>.\nA good value is <code>sa_family == 2</code> (corresponds to <code>AF_INET</code> aka ipv4), but\nfor unknown reasons <code>sa_family</code> is 0 on Windows.</p>\n<h2>Differences with <a href=\"https://mitmproxy.org/\" rel=\"nofollow\">mitmproxy</a></h2>\n<ul>\n<li>mitmproxy doesn't use function hooking, it intercepts all the\ntraffic from your browser or computer</li>\n<li>mitmproxy only works for HTTP traffic, whereas fritm works with any\nTCP\ntraffic.</li>\n</ul>\n<h2>Differences with <a href=\"https://github.com/haad/proxychains\" rel=\"nofollow\">proxychains</a> / <a href=\"https://github.com/rofl0r/proxychains-ng\" rel=\"nofollow\">proxychains-ng</a></h2>\n<ul>\n<li><code>fritm-spawn</code> is intented as simplified and cross-platform version\nof proxychains.</li>\n<li><code>fritm-hook</code> can attach to an already running process.</li>\n<li>proxychains is not cross-platform and hard to install, whereas fritm\nis cross-platform and simple to install.</li>\n<li>proxychains uses a config file whereas <code>fritm-spawn</code> only takes two\narguments</li>\n<li>fritm includes a HTTP proxy server (that is also able to communicate\nwith proxychains)</li>\n<li>proxychains can handle a lot of different proxy types (SOCKS4,\nSOCKS5, HTTPS) with a lot of options (e.g. for authentification)</li>\n<li>proxychains can chain multiple proxies</li>\n<li>proxychains handles any proxy address whereas <code>fritm-spawn</code> defaults\nto localhost. However, if anyone needs it for remote addresses, post\nan issue and I'll implement it.</li>\n</ul>\n<h2>Current limitations</h2>\n<ul>\n<li>Some Windows user faced issues that I couldn't reproduce</li>\n<li>fritm will fail on IPv6 addresses, but it should not be hard to fix\n(I just don't happen to have any application that uses an IPv6\naddress to test).</li>\n</ul>\n\n          </div>"}, "last_serial": 7153394, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c21c6a1ac51074314e669ca1e3039aa6", "sha256": "dd4d8740144e658dd1b345752a5403a39927ed093c94aa71666e5f47902f34aa"}, "downloads": -1, "filename": "fritm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c21c6a1ac51074314e669ca1e3039aa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6064, "upload_time": "2019-05-23T15:04:43", "upload_time_iso_8601": "2019-05-23T15:04:43.193166Z", "url": "https://files.pythonhosted.org/packages/8d/60/e0dea47a1ed6b818675aa8e44fbc3996cec34bad37ad9bd8413f159e75df/fritm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5614c8fc5c445ea0e7d4654e1e4e3265", "sha256": "45a21a7ded837efc69db05fb1cff07f977c557dd4ccc6f6d7af71c631a4c98b5"}, "downloads": -1, "filename": "fritm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5614c8fc5c445ea0e7d4654e1e4e3265", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4756, "upload_time": "2019-05-23T15:04:45", "upload_time_iso_8601": "2019-05-23T15:04:45.463581Z", "url": "https://files.pythonhosted.org/packages/f7/b4/7207eabb90ec07d373edefd9e97fbedb431065a21209a510c43930d7ca80/fritm-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f887fd61ee6c2e3d99ab94c806b37139", "sha256": "c13ca495779fe011e4afd650e4c38c27336cc1e6076216cb0931114df1b634f5"}, "downloads": -1, "filename": "fritm-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f887fd61ee6c2e3d99ab94c806b37139", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6134, "upload_time": "2019-05-24T13:51:13", "upload_time_iso_8601": "2019-05-24T13:51:13.106888Z", "url": "https://files.pythonhosted.org/packages/33/46/5c40befe888ccbf14b7bcadc32b5cca07584d32de6a76b25d2b07f19ea86/fritm-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bf69e7afb7f0f48c8ac395173b94df9", "sha256": "dd77b623e127570dbf91680668ebcafeaedd098c7edc32eae60625c774f7a030"}, "downloads": -1, "filename": "fritm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9bf69e7afb7f0f48c8ac395173b94df9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4777, "upload_time": "2019-05-24T13:51:15", "upload_time_iso_8601": "2019-05-24T13:51:15.877469Z", "url": "https://files.pythonhosted.org/packages/3d/d4/ea7c0ef6887cc1342a0825d53af0c038c92c6f31cbe0e2d22fe7bc7abd16/fritm-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "972736cf087a5e94e99014ae4702d69b", "sha256": "788425f0f6df6bd9471534f470b1bcb5ee025b91e3d0247a6f581557b1169549"}, "downloads": -1, "filename": "fritm-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "972736cf087a5e94e99014ae4702d69b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6133, "upload_time": "2019-05-24T13:52:45", "upload_time_iso_8601": "2019-05-24T13:52:45.040507Z", "url": "https://files.pythonhosted.org/packages/01/7a/8e737109a5a76b36ded0b6b5bce6a98f11ee2bdd6c2de96183cae4c4711c/fritm-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44866c91e5cef7a8c9ac882381a58e93", "sha256": "e2da90f1bb55fdc86aa08d17b757827a4a13ac3f082032c1f1a0209112710ddc"}, "downloads": -1, "filename": "fritm-0.2.1.tar.gz", "has_sig": false, "md5_digest": "44866c91e5cef7a8c9ac882381a58e93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4776, "upload_time": "2019-05-24T13:52:46", "upload_time_iso_8601": "2019-05-24T13:52:46.783538Z", "url": "https://files.pythonhosted.org/packages/12/cc/bcc6aa2396e6d35490e4dd0ce2c9bbadbc1621dcae5a4a6cca1c433848f7/fritm-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "81c52984bc72c33c2a33f23d33e8671e", "sha256": "0f2a43d16d527628816a943aaa0b186fb5d9863efb6af9745c8e0abeb28423e0"}, "downloads": -1, "filename": "fritm-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81c52984bc72c33c2a33f23d33e8671e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6299, "upload_time": "2019-05-25T09:08:59", "upload_time_iso_8601": "2019-05-25T09:08:59.890446Z", "url": "https://files.pythonhosted.org/packages/df/d0/566757bf88e28074fb62f66c7ca68673f6fa9a26d116da58a5741c1d81f1/fritm-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0d08642ac805fa2de3176d26ba7b70", "sha256": "358dfa5fbe651b4a5b23f4c1584f6bb42da25ab17339de508987853d45984977"}, "downloads": -1, "filename": "fritm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0d0d08642ac805fa2de3176d26ba7b70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4951, "upload_time": "2019-05-25T09:09:01", "upload_time_iso_8601": "2019-05-25T09:09:01.505696Z", "url": "https://files.pythonhosted.org/packages/79/48/4068affd7e2dee407139b895e97b3ca2567a5ddb5b059eab7de82aef0784/fritm-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "88c153702142944112e9eba41a76a4c5", "sha256": "c9dbef8c12c02a22f86d65a69d4231959a2e5d49e23a35bd2dca4247f99735f2"}, "downloads": -1, "filename": "fritm-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "88c153702142944112e9eba41a76a4c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7072, "upload_time": "2020-05-02T16:20:56", "upload_time_iso_8601": "2020-05-02T16:20:56.104037Z", "url": "https://files.pythonhosted.org/packages/58/80/767676cb316f04ee7a041076f6b4c7ef06a19a2a7afd8fb49aa380dd06f7/fritm-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d73bc4d46390e4d3351024217209624f", "sha256": "e6de10bddf20045db024c3c2f788bf33cc9f6b5e3df2bab9a9c2120115c81f30"}, "downloads": -1, "filename": "fritm-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d73bc4d46390e4d3351024217209624f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5154, "upload_time": "2020-05-02T16:20:57", "upload_time_iso_8601": "2020-05-02T16:20:57.390577Z", "url": "https://files.pythonhosted.org/packages/d7/a8/a11d23b3c1c905b93caf19ea2b64c7177369bd41bd8a093be74decf3d246/fritm-0.3.1.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "aa897eee8a19c3ba7a47d65a2589b7c3", "sha256": "af8270471a821b84ff48b7355f343401f13b9aec48939f1a80d8a3cf251bcffb"}, "downloads": -1, "filename": "fritm-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa897eee8a19c3ba7a47d65a2589b7c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7324, "upload_time": "2020-05-02T20:30:42", "upload_time_iso_8601": "2020-05-02T20:30:42.607272Z", "url": "https://files.pythonhosted.org/packages/d2/92/d1b21c9e74f57026dccede612bbbf210bcfdca6bb926520678589470790d/fritm-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89a9c77ece9ac8f4cc528ea2b54ffe43", "sha256": "0682044310b8464e0c5645eb66d1fcf035f3286ff26c8de53c4c0cbcd0ce2011"}, "downloads": -1, "filename": "fritm-0.4.1.tar.gz", "has_sig": false, "md5_digest": "89a9c77ece9ac8f4cc528ea2b54ffe43", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5397, "upload_time": "2020-05-02T20:30:44", "upload_time_iso_8601": "2020-05-02T20:30:44.368399Z", "url": "https://files.pythonhosted.org/packages/91/38/d3a7576762e293155bf62d3b551afe9fbfbcb6b98055d0e60365b815b492/fritm-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa897eee8a19c3ba7a47d65a2589b7c3", "sha256": "af8270471a821b84ff48b7355f343401f13b9aec48939f1a80d8a3cf251bcffb"}, "downloads": -1, "filename": "fritm-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa897eee8a19c3ba7a47d65a2589b7c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7324, "upload_time": "2020-05-02T20:30:42", "upload_time_iso_8601": "2020-05-02T20:30:42.607272Z", "url": "https://files.pythonhosted.org/packages/d2/92/d1b21c9e74f57026dccede612bbbf210bcfdca6bb926520678589470790d/fritm-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89a9c77ece9ac8f4cc528ea2b54ffe43", "sha256": "0682044310b8464e0c5645eb66d1fcf035f3286ff26c8de53c4c0cbcd0ce2011"}, "downloads": -1, "filename": "fritm-0.4.1.tar.gz", "has_sig": false, "md5_digest": "89a9c77ece9ac8f4cc528ea2b54ffe43", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5397, "upload_time": "2020-05-02T20:30:44", "upload_time_iso_8601": "2020-05-02T20:30:44.368399Z", "url": "https://files.pythonhosted.org/packages/91/38/d3a7576762e293155bf62d3b551afe9fbfbcb6b98055d0e60365b815b492/fritm-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:11 2020"}