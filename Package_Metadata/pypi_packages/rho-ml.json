{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Rho ML\n\n__Rho ML__ provides a _thin_, _thoughtful_, and _proven_ interface for\nputting Data Science to work in production and enterprise-grade\nenvironments. [Rho](https://rho.ai \"Rho AI\") uses __Rho ML__ for\nworkloads as varied as _NLP_, to _Computer Vision_ to\n_Decision Modeling_ for professional racing. We see __Rho ML__ as\nhaving a few key benefits.\n\n#. __Any Model__ (_we won't dictate your libraries of choice!_)\n  * Any Model with a Python interface\n    * [PyTorch](https://pytorch.org/ \"PyTorch\")\n    * [Tensorflow](https://www.tensorflow.org/ \"Tensorflow\")\n    * [spaCy](https://spacy.io/ \"spaCy\")\n    * [Keras](https://keras.io/ \"Keras\")\n    * [insert your preferred library here]\n    * ... or some other custom Python code\n#. __Out-of-the-Box Versioning__ (_yet customizable_)\n  * Versioning is a common blind-spot in data science as compared to the\n    de facto standard of [Semver](https://semver.org/ \"Semver\") in much of\n    software engineering and modern CI/CD workflows.\n  * __Rho ML__ provides this _out-of-the-box_, no strings attached.\n  * That said, we get that not all versioning is created equal, and provide\n    easy access to customizing version patterns.\n#. __Default Serialization and Deserialization__ (_yet customizable_)\n  * Storing models for production workloads is non-trivial.\n  * Frequently, libraries (including those listed above) provide their\n  \"hello world\" and \"quickstart\" guides expecting you're on a local\n  development machine with a \"save to disk\" type interface. __Rho ML__\n  provides instant-access to easy, production-grade, methods to\n  store and retrieve models.\n  * The default option may not work, so __Rho ML__ provides easy\n  modification as necessary for advanced use cases.\n#. __Cloud and Cache__ (_speed versus cost_)\n  * A \"model\" is not created equal with respect to production workloads.\n    Storing and retrieving from the cloud versus locally (cached locally)\n    makes a tremendous difference in speed and cost when dealing with models\n    that often exceed 10s of megabytes / gigabytes.\n  * __Rho ML__ provides a sensible default for managing storage in both\n    scenarios.\n#. __Shameless Plug__ (_enterprise deployments_)\n  * Every __Rho ML__ model has instant compatibilty with\n    [Sermos](https://sermos.ai \"Sermos\") for enterprise-scale deployments\n    that need 10s to 10s of millions of transactions, scheduled tasks,\n    models behind public APIs, or complex\n    [pipelines](https://en.wikipedia.org/wiki/Directed_acyclic_graph \"DAGs\").\n\nRho ML is extremely easy to use and has only two external dependencies\n[attrs](https://www.attrs.org/en/stable/ \"attrs\"), and\n\n## Install\n\nInstall this software? Easy:\n\n    pip install rho-ml\n\n## Quickstart Guide\n\nHere is a trivial example of a rules-based \"model\" implemented as a `RhoModel`,\nincluding serialization.\n\n    from rho_ml import RhoModel, ValidationFailedError, Version, LocalModelStorage\n\n    class MyModel(RhoModel):\n\n        def predict_logic(self, prediction_data):\n            \"\"\" Logic for running the model on some prediction data \"\"\"\n            return prediction_data * 5\n\n        def validate_prediction_input(self, prediction_data):\n            \"\"\" Ensure data has an appropriate type before prediction \"\"\"\n            if not (isinstance(prediction_data, int)\n                or isinstance(prediction_data, float)):\n                raise ValidationError(\"Prediction data wasn't numeric!\")\n\n        def validate_prediction_output(self, data):\n            \"\"\" Ensure the prediction result is between 0 and 5 \"\"\"\n            if not 0 <= data <= 5:\n                raise ValidationError(\"Prediction result should always be\n                between 0 and 5!\")\n\n\n     some_instance = MyModel(name='some_name',\n                             version=Version.from_string(\"0.0.1\"))\n     result = some_instance.predict(0.5, run_validation=True)  # works!\n     result_2 = some_instance.predict(10, run_validation=True)  # fails!\n\n     local_storage = LocalModelStorage(base_path='./some-folder')\n     local_storage.store(some_instance)\n\n     stored_key = local_storage.get_key_from_pattern(model_name='some_name',\n                                                     version_pattern='0.*.*')\n     deserialized = local_storage.retrieve(key=stored_key)\n\n## Core Concepts\n\n### Rho Model\n\nThe `RhoModel` base class is the central concept in `RhoML`. A `RhoModel`\nis a basic wrapper that enforces what we believe are the central tasks a\nmachine learning model should accomplish, provides a consistent interface\nto 'all models', and provides the scaffolding for writing models that have\nvalidated input and output.\n\nTODO: Add additional detail on each component of a RhoModel and provide\nseveral examples.\n\n### Model Locator\n\nA \"model locator\" in Rho ML is the combination of the _model name_, the\n_model version_, and a _delimiter_ between them.\n\nThis is important for storage and retrieval of models as they evolve over\ntime. Using the default settings is highly recommended but each component is\nconfigurable.\n\nBy default:\n\n* Model names can be any alphanumeric character\n* Delimeter is \"_\" (the underscore character)\n* Model versions must adhere to [semver versioning](https://semver.org/)\n\ne.g. `MyModel_0.1.0`\n\n### Serialization\n\nTODO: Describe concept of serializing/deserializing.\n\n## Testing\n\nTo run the tests you need to have `pyenv` running on your system, along with\nall python versions listed in `tox.ini` under `envlist`.\n\n  * Install the required Python versions noted in `tox.ini`, e.g.\n\n        pyenv install 3.7.4\n\nInstall the testing requirements locally.\n\n    pip install -e .[test]\n\nNow, run the tests:\n\n    tox", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/rhoai/rho-ml", "keywords": "", "license": "Commercial", "maintainer": "Rho AI Corporation", "maintainer_email": "", "name": "rho-ml", "package_url": "https://pypi.org/project/rho-ml/", "platform": "", "project_url": "https://pypi.org/project/rho-ml/", "project_urls": {"Homepage": "https://bitbucket.org/rhoai/rho-ml"}, "release_url": "https://pypi.org/project/rho-ml/0.8.2/", "requires_dist": null, "requires_python": "", "summary": "Standard framework for wrapping ML and other algorithms", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rho ML</h1>\n<p><strong>Rho ML</strong> provides a <em>thin</em>, <em>thoughtful</em>, and <em>proven</em> interface for\nputting Data Science to work in production and enterprise-grade\nenvironments. <a href=\"https://rho.ai\" rel=\"nofollow\" title=\"Rho AI\">Rho</a> uses <strong>Rho ML</strong> for\nworkloads as varied as <em>NLP</em>, to <em>Computer Vision</em> to\n<em>Decision Modeling</em> for professional racing. We see <strong>Rho ML</strong> as\nhaving a few key benefits.</p>\n<p>#. <strong>Any Model</strong> (<em>we won't dictate your libraries of choice!</em>)</p>\n<ul>\n<li>Any Model with a Python interface\n<ul>\n<li><a href=\"https://pytorch.org/\" rel=\"nofollow\" title=\"PyTorch\">PyTorch</a></li>\n<li><a href=\"https://www.tensorflow.org/\" rel=\"nofollow\" title=\"Tensorflow\">Tensorflow</a></li>\n<li><a href=\"https://spacy.io/\" rel=\"nofollow\" title=\"spaCy\">spaCy</a></li>\n<li><a href=\"https://keras.io/\" rel=\"nofollow\" title=\"Keras\">Keras</a></li>\n<li>[insert your preferred library here]</li>\n<li>... or some other custom Python code\n#. <strong>Out-of-the-Box Versioning</strong> (<em>yet customizable</em>)</li>\n</ul>\n</li>\n<li>Versioning is a common blind-spot in data science as compared to the\nde facto standard of <a href=\"https://semver.org/\" rel=\"nofollow\" title=\"Semver\">Semver</a> in much of\nsoftware engineering and modern CI/CD workflows.</li>\n<li><strong>Rho ML</strong> provides this <em>out-of-the-box</em>, no strings attached.</li>\n<li>That said, we get that not all versioning is created equal, and provide\neasy access to customizing version patterns.\n#. <strong>Default Serialization and Deserialization</strong> (<em>yet customizable</em>)</li>\n<li>Storing models for production workloads is non-trivial.</li>\n<li>Frequently, libraries (including those listed above) provide their\n\"hello world\" and \"quickstart\" guides expecting you're on a local\ndevelopment machine with a \"save to disk\" type interface. <strong>Rho ML</strong>\nprovides instant-access to easy, production-grade, methods to\nstore and retrieve models.</li>\n<li>The default option may not work, so <strong>Rho ML</strong> provides easy\nmodification as necessary for advanced use cases.\n#. <strong>Cloud and Cache</strong> (<em>speed versus cost</em>)</li>\n<li>A \"model\" is not created equal with respect to production workloads.\nStoring and retrieving from the cloud versus locally (cached locally)\nmakes a tremendous difference in speed and cost when dealing with models\nthat often exceed 10s of megabytes / gigabytes.</li>\n<li><strong>Rho ML</strong> provides a sensible default for managing storage in both\nscenarios.\n#. <strong>Shameless Plug</strong> (<em>enterprise deployments</em>)</li>\n<li>Every <strong>Rho ML</strong> model has instant compatibilty with\n<a href=\"https://sermos.ai\" rel=\"nofollow\" title=\"Sermos\">Sermos</a> for enterprise-scale deployments\nthat need 10s to 10s of millions of transactions, scheduled tasks,\nmodels behind public APIs, or complex\n<a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\" rel=\"nofollow\" title=\"DAGs\">pipelines</a>.</li>\n</ul>\n<p>Rho ML is extremely easy to use and has only two external dependencies\n<a href=\"https://www.attrs.org/en/stable/\" rel=\"nofollow\" title=\"attrs\">attrs</a>, and</p>\n<h2>Install</h2>\n<p>Install this software? Easy:</p>\n<pre><code>pip install rho-ml\n</code></pre>\n<h2>Quickstart Guide</h2>\n<p>Here is a trivial example of a rules-based \"model\" implemented as a <code>RhoModel</code>,\nincluding serialization.</p>\n<pre><code>from rho_ml import RhoModel, ValidationFailedError, Version, LocalModelStorage\n\nclass MyModel(RhoModel):\n\n    def predict_logic(self, prediction_data):\n        \"\"\" Logic for running the model on some prediction data \"\"\"\n        return prediction_data * 5\n\n    def validate_prediction_input(self, prediction_data):\n        \"\"\" Ensure data has an appropriate type before prediction \"\"\"\n        if not (isinstance(prediction_data, int)\n            or isinstance(prediction_data, float)):\n            raise ValidationError(\"Prediction data wasn't numeric!\")\n\n    def validate_prediction_output(self, data):\n        \"\"\" Ensure the prediction result is between 0 and 5 \"\"\"\n        if not 0 &lt;= data &lt;= 5:\n            raise ValidationError(\"Prediction result should always be\n            between 0 and 5!\")\n\n\n some_instance = MyModel(name='some_name',\n                         version=Version.from_string(\"0.0.1\"))\n result = some_instance.predict(0.5, run_validation=True)  # works!\n result_2 = some_instance.predict(10, run_validation=True)  # fails!\n\n local_storage = LocalModelStorage(base_path='./some-folder')\n local_storage.store(some_instance)\n\n stored_key = local_storage.get_key_from_pattern(model_name='some_name',\n                                                 version_pattern='0.*.*')\n deserialized = local_storage.retrieve(key=stored_key)\n</code></pre>\n<h2>Core Concepts</h2>\n<h3>Rho Model</h3>\n<p>The <code>RhoModel</code> base class is the central concept in <code>RhoML</code>. A <code>RhoModel</code>\nis a basic wrapper that enforces what we believe are the central tasks a\nmachine learning model should accomplish, provides a consistent interface\nto 'all models', and provides the scaffolding for writing models that have\nvalidated input and output.</p>\n<p>TODO: Add additional detail on each component of a RhoModel and provide\nseveral examples.</p>\n<h3>Model Locator</h3>\n<p>A \"model locator\" in Rho ML is the combination of the <em>model name</em>, the\n<em>model version</em>, and a <em>delimiter</em> between them.</p>\n<p>This is important for storage and retrieval of models as they evolve over\ntime. Using the default settings is highly recommended but each component is\nconfigurable.</p>\n<p>By default:</p>\n<ul>\n<li>Model names can be any alphanumeric character</li>\n<li>Delimeter is \"_\" (the underscore character)</li>\n<li>Model versions must adhere to <a href=\"https://semver.org/\" rel=\"nofollow\">semver versioning</a></li>\n</ul>\n<p>e.g. <code>MyModel_0.1.0</code></p>\n<h3>Serialization</h3>\n<p>TODO: Describe concept of serializing/deserializing.</p>\n<h2>Testing</h2>\n<p>To run the tests you need to have <code>pyenv</code> running on your system, along with\nall python versions listed in <code>tox.ini</code> under <code>envlist</code>.</p>\n<ul>\n<li>\n<p>Install the required Python versions noted in <code>tox.ini</code>, e.g.</p>\n<pre><code>pyenv install 3.7.4\n</code></pre>\n</li>\n</ul>\n<p>Install the testing requirements locally.</p>\n<pre><code>pip install -e .[test]\n</code></pre>\n<p>Now, run the tests:</p>\n<pre><code>tox\n</code></pre>\n\n          </div>"}, "last_serial": 7147455, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "3fe9ef07544d423738dc02061f0effa6", "sha256": "526bd60348d5b9c592b7a9214fdf05b41c60274abeb848f3078dca7c6670904d"}, "downloads": -1, "filename": "rho-ml-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3fe9ef07544d423738dc02061f0effa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3382, "upload_time": "2019-10-15T17:26:31", "upload_time_iso_8601": "2019-10-15T17:26:31.568662Z", "url": "https://files.pythonhosted.org/packages/de/e8/a95d2074e13da1cfacf8679c9eaa96b9172277ad93f76a80ccd05686c276/rho-ml-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "52d282ddbcbe435b2c1d9cfb32d20dcb", "sha256": "1da024ad7475a618ccae5fc8e6a42f20ee310b686f218c88f2fe11fc9ca697fe"}, "downloads": -1, "filename": "rho-ml-0.1.2.tar.gz", "has_sig": false, "md5_digest": "52d282ddbcbe435b2c1d9cfb32d20dcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3401, "upload_time": "2019-10-16T17:39:54", "upload_time_iso_8601": "2019-10-16T17:39:54.543464Z", "url": "https://files.pythonhosted.org/packages/6f/98/8dbb477a47c10d3aa0f14614328b0cbf90c357555d946427c8500511b579/rho-ml-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0519cd732cc7a753e249f2a8c6e72a1c", "sha256": "7a72b52b49f97730216abc0d109312c18d0ec652aac5b6156222747ad948d4b7"}, "downloads": -1, "filename": "rho_ml-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0519cd732cc7a753e249f2a8c6e72a1c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4629, "upload_time": "2019-11-14T19:56:58", "upload_time_iso_8601": "2019-11-14T19:56:58.892491Z", "url": "https://files.pythonhosted.org/packages/53/50/1c83083e1f304efd4cad40cc5b877242458087a93c2908707cb1fa08a99a/rho_ml-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d217894f2126d08b616bee0f7935fcd3", "sha256": "213ed625f16b26ec8783aeda7b0ef8360cea533f34b45379dd8a4741527407d3"}, "downloads": -1, "filename": "rho-ml-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d217894f2126d08b616bee0f7935fcd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3762, "upload_time": "2019-11-14T19:57:00", "upload_time_iso_8601": "2019-11-14T19:57:00.386002Z", "url": "https://files.pythonhosted.org/packages/24/15/2aedb2854f08ff7eb95b7946ddfc6d55031b7979501bf09e3915ea27d03f/rho-ml-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c3a4e01cc6677b6612f8a7c8d1f35841", "sha256": "aaf62f721b6b81a7eef09b2e65d4ac1aff5c22af5cef56707406aa9b74e1ae20"}, "downloads": -1, "filename": "rho-ml-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c3a4e01cc6677b6612f8a7c8d1f35841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3745, "upload_time": "2019-11-15T15:23:24", "upload_time_iso_8601": "2019-11-15T15:23:24.601989Z", "url": "https://files.pythonhosted.org/packages/30/9a/5bcbefdaec3540d9295691454075a341a9704cf9901c47a6f022dc7b4af8/rho-ml-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6542e6bca449db1c97730839b017f2cb", "sha256": "72330b2dc1b8db8801f19ea0f1dd59ae6ebc5f2edbd4262387464280767951bb"}, "downloads": -1, "filename": "rho-ml-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6542e6bca449db1c97730839b017f2cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6198, "upload_time": "2020-01-14T19:45:04", "upload_time_iso_8601": "2020-01-14T19:45:04.892248Z", "url": "https://files.pythonhosted.org/packages/a6/c0/8a1fc34e9af5851a52bfbf49d28cbafd652e1b91aaac30e168f6be926570/rho-ml-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "802a169bf5df6709efa31b31a8914b97", "sha256": "4cd553011de418146c975b652ec99f7046c2d9765cdd0d59254a2b55e2da5bb7"}, "downloads": -1, "filename": "rho-ml-0.3.1.tar.gz", "has_sig": false, "md5_digest": "802a169bf5df6709efa31b31a8914b97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6236, "upload_time": "2020-01-14T22:17:40", "upload_time_iso_8601": "2020-01-14T22:17:40.111052Z", "url": "https://files.pythonhosted.org/packages/1f/00/e644a8e01fc62becc6920d0748d20b02b53d18242da7adf36ddee326316e/rho-ml-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "848c1e5a0bcfe348f185ac40e7e1d87c", "sha256": "79654e0381a5638ebd2e1061e25ccf394d5002653fe49738898232182b4d014a"}, "downloads": -1, "filename": "rho-ml-0.3.2.tar.gz", "has_sig": false, "md5_digest": "848c1e5a0bcfe348f185ac40e7e1d87c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6506, "upload_time": "2020-01-15T00:50:28", "upload_time_iso_8601": "2020-01-15T00:50:28.410488Z", "url": "https://files.pythonhosted.org/packages/4c/14/835b79d59a452af0218e676412ed9aeb4586f6c282b42c86e5054247c742/rho-ml-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "3a55d78f2583dd1c02c44416f5809139", "sha256": "c13daed9b0379e69eacc8ca056d09de5815f21bf8d83f4e8eea87bca6bc975f7"}, "downloads": -1, "filename": "rho-ml-0.3.3.tar.gz", "has_sig": false, "md5_digest": "3a55d78f2583dd1c02c44416f5809139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6236, "upload_time": "2020-01-20T21:49:34", "upload_time_iso_8601": "2020-01-20T21:49:34.243272Z", "url": "https://files.pythonhosted.org/packages/74/84/ef205043dc5dd26eeccf4f7bc52fb30b57d716e13c8091b24966bd473fe7/rho-ml-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a1c28a75d4df52b84ffca3379dbaa3e6", "sha256": "416bfc2405350796b5851d436ead1219b6a21918b33c8ef251426510c74b40da"}, "downloads": -1, "filename": "rho-ml-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a1c28a75d4df52b84ffca3379dbaa3e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6505, "upload_time": "2020-01-20T22:02:53", "upload_time_iso_8601": "2020-01-20T22:02:53.109343Z", "url": "https://files.pythonhosted.org/packages/7e/91/55a37e56afd4fdc1b1f25879d79a6dbb3717a6bbae3a4b7f249a025698d5/rho-ml-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1df8603d6424df1469eced1cac597330", "sha256": "472f51d44a9bd0f94769c5c3e4e5b430d94dcc753e4eb1f0c5bd323f30278fd8"}, "downloads": -1, "filename": "rho-ml-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1df8603d6424df1469eced1cac597330", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6831, "upload_time": "2020-03-19T21:10:45", "upload_time_iso_8601": "2020-03-19T21:10:45.378396Z", "url": "https://files.pythonhosted.org/packages/21/6f/6848eccc1f5014a1ee6c9061ec2f1f42573a9779ab15778c407262197e8a/rho-ml-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c84acfe4920aa34975dce098bc3c5a62", "sha256": "d004df6345d3afd32d86ece81994c6ab8e22533b059c2861828fd8ade3fb1892"}, "downloads": -1, "filename": "rho-ml-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c84acfe4920aa34975dce098bc3c5a62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6764, "upload_time": "2020-03-20T09:21:27", "upload_time_iso_8601": "2020-03-20T09:21:27.558251Z", "url": "https://files.pythonhosted.org/packages/c7/28/afb3a46df24de5e8a5b153468c769216673fae209809d3ba8387c1aecaf9/rho-ml-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "95c7df258d3f2a08e7c3daea792cc8e4", "sha256": "1f82a3de51c9197c548b312638bf162aacd135486625064f7667bdc04d9bd791"}, "downloads": -1, "filename": "rho-ml-0.5.2.tar.gz", "has_sig": false, "md5_digest": "95c7df258d3f2a08e7c3daea792cc8e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6884, "upload_time": "2020-03-20T10:09:44", "upload_time_iso_8601": "2020-03-20T10:09:44.974555Z", "url": "https://files.pythonhosted.org/packages/ea/3b/ca51f68acaf86595dd9e3f3bf9ba7ec9c9fd3eddea95a4803a19033fd429/rho-ml-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "d7e2b0373d9b69e6a73202c68f40ce50", "sha256": "710e0e6ec419ecef6ec3a52547feb1f7a3039b9b77eb4f9184135371924022d3"}, "downloads": -1, "filename": "rho-ml-0.5.3.tar.gz", "has_sig": false, "md5_digest": "d7e2b0373d9b69e6a73202c68f40ce50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6852, "upload_time": "2020-04-06T15:44:09", "upload_time_iso_8601": "2020-04-06T15:44:09.178977Z", "url": "https://files.pythonhosted.org/packages/ef/02/0f060c3a783348b1b6a1e3731493340db1f46aa559a68cc195a36020a060/rho-ml-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "13a3c1517a37f081a093cbb789683b0c", "sha256": "fa176fde53358f4afa861c0cfe5b0b592f0015f279ba827fb57665218d353ce8"}, "downloads": -1, "filename": "rho-ml-0.6.0.tar.gz", "has_sig": false, "md5_digest": "13a3c1517a37f081a093cbb789683b0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6685, "upload_time": "2020-04-08T17:07:16", "upload_time_iso_8601": "2020-04-08T17:07:16.788960Z", "url": "https://files.pythonhosted.org/packages/09/70/80b541f36b6e883f0b9c91ac2c4fcd2b6d211810c44f9566ceca3dd84246/rho-ml-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "fc020fa5965257d4c58f74ca2d1a35be", "sha256": "30921f78789da461f13fce27dc837e5bca49c3a35c042a0a3ef685d8865b7854"}, "downloads": -1, "filename": "rho-ml-0.7.0.tar.gz", "has_sig": false, "md5_digest": "fc020fa5965257d4c58f74ca2d1a35be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13295, "upload_time": "2020-04-14T19:04:37", "upload_time_iso_8601": "2020-04-14T19:04:37.073126Z", "url": "https://files.pythonhosted.org/packages/bb/12/d46bd4c309b667168636c144557f24ed61603f4dff6e3522905538294f60/rho-ml-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "2df1fe5e4677f098a4498511f5d9803f", "sha256": "9c7542e995431063f4392f16225b2058ca0814e98ed98f43c8da0da1020a8371"}, "downloads": -1, "filename": "rho-ml-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2df1fe5e4677f098a4498511f5d9803f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13607, "upload_time": "2020-04-15T04:05:25", "upload_time_iso_8601": "2020-04-15T04:05:25.233658Z", "url": "https://files.pythonhosted.org/packages/f7/c6/92dc9a0995f9b427e88fb429a19ecfbd035def31f66dd4deed64c5e48e19/rho-ml-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "ffe524a4e71a29f29f28b3840a4eb144", "sha256": "28a3fd5b51135b9eaf67ad88b1f8d12dfa616dc0c7cc0914c8d2d78b976f2ad9"}, "downloads": -1, "filename": "rho-ml-0.8.1.tar.gz", "has_sig": false, "md5_digest": "ffe524a4e71a29f29f28b3840a4eb144", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13590, "upload_time": "2020-04-16T03:53:07", "upload_time_iso_8601": "2020-04-16T03:53:07.123320Z", "url": "https://files.pythonhosted.org/packages/42/8f/f4a87f7201e8768c8cbdc087e98cb9d53306c96127d0f744a128b31137be/rho-ml-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "be07b16c94481e3aa13b23120699f054", "sha256": "278a3504f1f939ea4ac6768826ebf77d344bbf3e00eabda44dae6c1ed45efb31"}, "downloads": -1, "filename": "rho-ml-0.8.2.tar.gz", "has_sig": false, "md5_digest": "be07b16c94481e3aa13b23120699f054", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15684, "upload_time": "2020-05-01T20:03:47", "upload_time_iso_8601": "2020-05-01T20:03:47.793978Z", "url": "https://files.pythonhosted.org/packages/e7/11/8111f58d25243e2cb96a157fa98ac8c44612b6fa68457a70c6fb68a34390/rho-ml-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be07b16c94481e3aa13b23120699f054", "sha256": "278a3504f1f939ea4ac6768826ebf77d344bbf3e00eabda44dae6c1ed45efb31"}, "downloads": -1, "filename": "rho-ml-0.8.2.tar.gz", "has_sig": false, "md5_digest": "be07b16c94481e3aa13b23120699f054", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15684, "upload_time": "2020-05-01T20:03:47", "upload_time_iso_8601": "2020-05-01T20:03:47.793978Z", "url": "https://files.pythonhosted.org/packages/e7/11/8111f58d25243e2cb96a157fa98ac8c44612b6fa68457a70c6fb68a34390/rho-ml-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:55 2020"}