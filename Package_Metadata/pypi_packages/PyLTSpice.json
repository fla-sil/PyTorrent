{"info": {"author": "Nuno Brum", "author_email": "me@nunobrum.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# README #\n\nPySpicer is a toolchain of python utilities design to interact with LTSpice Electronic Simulator.\n\n## What is contained in this repository ##\n\n* __LTSteps.py__ \nAn utility that extracts from LTSpice output files data, and formats it for import in a spreadsheet,s uch like Excel or Calc. \n\n* __LTSpice_RawRead.py__\nA pure python class that serves to read raw files into a python class.\n\n* __Histogram.py__\nA python script that uses numpy and matplotlib to create an histogram and calculate the sigma deviations. This is useful for Monte-Carlo analysis. \n\n* __LTSpiceBatch.py__\nThis is a script to launch LTSpice Simulations. This is useful because:\n\n    - Can overcome the limitation of only stepping 3 parameters\n    - Different types of simulations .TRAN .AC .NOISE can be run in a single batch\n    - The RAW Files are smaller and easier to treat\n    - When used with the LTSpiceRaw_Reader.py and LTSteps.py, validattion of the circuit can be done automatically.\n    - Different models can be simulation in a single batch. The principle of operation is the following :\n        1. Add to the Spice circuit a .INC sim_settings.lib  . In this include simulation directives are written by the script per each simulation call.\n        1. Use the python script to update the simulation directives and call LTSpice to run the simulation in command line.\n        1. When the simulation is complete, the simulation results are renamed according to user guidance.\n\n    Note: It only works with Windows based installations.\n\n## How to Install ##\n\n### Using PiP Installer ###\n\n `pip install --upgrade PyLTSpic `  \n\n### Using GITHub ###\n\n `git clone https://github.com/nunobrum/PyLTSpice.gi `  \n\nIf using this method it would be good to add the path where you cloned the site to python path.\n\n `import sys `  \n `sys.path.append(<path to PyLTSpice>) `  \n\n## How to use ##\n\n### LTSpice_RawRead.py ###\nInclude the following line on your scripts\n\n `from PyLTSpice.LTSpice_RawRead import LTSpiceRawRead `\n\n `from matplotlib import plot `  \n\n\n `LTR = LTSpiceRawRead(\"Draft1.raw\") `  \n\n `print(LTR.get_trace_names()) `  \n `print(LTR.get_raw_property()) `  \n\n `IR1 = LTR.get_trace(\"I(R1)\") `  \n `x = LTR.get_trace('time') # Gets the time axis\n `steps = LTR.get_steps() `  \n `for step in range(len(steps)): `  \n `....# print(steps[step]) `  \n `....plt.plot(x.get_time_axis(step), IR1.get_wave(step), label=steps[step]) `  \n\n `plt.legend() # order a legend `  \n `plt.show() `  \n\n### LTSpice_Batch ###\nThis module is used to launch LTSPice simulations. Results then can be processed with either the LTSpiceRawRead\nor with the LTSteps module to read the log file which can contain .MEAS results.\n\nThe script will firstly invoke the LTSpice in command line to generate a netlist, and then this netlist can be \nupdated directly by the script, in order to change component values, parameters or simulation commands.\n\nHere follows an example of operation.\n\n ` import os `  \n ` from PyLTSpice.LTSpiceBatch import LTCommander `  \n ` from shutil import copyfile `  \n\n ` # get script absolute path `  \n ` meAbsPath = os.path.dirname(os.path.realpath(__file__)) `  \n ` # select spice model `  \n ` LTC = LTCommander(meAbsPath + \"\\\\Batch_Test.asc\") `  \n\n ` LTC.set_parameters(res=0, cap=100e-6)  # Redefining parameters in the netlist `  \n ` LTC.set_component_value('R2', '2k')  # Redefining component values `  \n ` LTC.set_component_value('R1', '4k') `  \n ` # define simulation `  \n ` LTC.add_instructions( `  \n `     \"; Simulation settings\", `  \n `     \".param run = 0\"  # Commands can be set directly with the .param command instad of the set_parameters(...) `  \n ` ) `  \n\n ` for opamp in ('AD712', 'AD820'): `  \n ` ....# Setting a model of the U1 Component. Note that subcircuits need the X prefix `  \n ` ....LTC.set_element_model('XU1', opamp)  \n ` ....for supply_voltage in (5, 10, 15): `  \n ` ........LTC.set_component_value('V1', supply_voltage)  # Set a voltage source value `  \n ` ........LTC.set_component_value('V2', -supply_voltage) `  \n ` ........rawfile, logfile = LTC.run()  # Runs the simulation with the updated netlist ` \n ` ........# The run() returns the RAW filename and LOG filenames so that can be processed with\n ` ........# the LTSpice_ReadRaw and LTSteps modules.\n ` ........# The command below is optional, used just to keep a copy of the netlist for debug purposes\n ` ........copyfile(LTC.run_netlist_file, `  \n ` .................\"{}_{}_{}.net\".format(LTC.circuit_radic, opamp, supply_voltage))  # Keep the netlist for reference `  \n\n ` LTC.reset_netlist()  # This resets all the changes done to the checklist`  \n ` LTC.add_instructions(  # Changing the simulation file`  \n `     \"; Simulation settings\", `  \n `     \".ac dec 30 10 1Meg\", `  \n `     \".meas AC Gain MAX mag(V(out)) ; find the peak response and call it \"\"Gain\"\"\", `  \n `     \".meas AC Fcut TRIG mag(V(out))=Gain/sqrt(2) FALL=last\" `  \n ` ) `  \n `  `  \n ` raw, log = LTC.run() `  \n\n\n### LTSteps.py ###\n\n `python -m PyLTSpice.LTSteps <logfile or directory where last simulation was made `\n\n### Histogram.py ###\n\n `python -m PyLTSpice.Histogra ` \n\n## To whom do I talk to? ##\n\n* Tools website : [https://www.nunobrum.com/pyspicer.html](https://www.nunobrum.com/pyspicer.html)\n* Repo owner : [me@nunobrum.com](me@nunobrum.com) \n* Alternative contact : nuno.brum@gmail.com\n\n## History ##\n* Version 1.0\nLTSpiceBatch.py: \nImplemented an new approach (NOT BACKWARDS COMPATIBLE), that avoids the usage of the sim_settings.inc file.\nAnd allows to modify not only parameters, but also models and even the simulation commands.\n\nLTSpice_RawRead.py: \nAdded the get_time_axis method to the RawRead class to avoid the problems with negative values on\ntime axis, when 2nd order compression is enabled in LTSpice.\n\nLTSteps.py: \nModified the LTSteps so it can also read measurements on log files without any steps done.\n\n\n* Version 0.6\nHistogram.py now has an option to make the histogram directly from values stored in the clipboard\n\n* Version 0.5\nThe LTSpice_RawReader.py now uses the struc.unpack function for a faster execution\n\n* Version 0.4\nAdded LTSpiceBatch.py to the collection of tools\n\n* Version 0.3\nA version of LTSteps that can be imported to use in a higher level script \n\n* Version 0.2\nAdding LTSteps.py and Histogram.py\n\n* Version 0.1 \nFirst commit to the bitbucket repository.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nunobrum/PyLTSpice", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyLTSpice", "package_url": "https://pypi.org/project/PyLTSpice/", "platform": "", "project_url": "https://pypi.org/project/PyLTSpice/", "project_urls": {"Homepage": "https://github.com/nunobrum/PyLTSpice"}, "release_url": "https://pypi.org/project/PyLTSpice/1.0.post4/", "requires_dist": null, "requires_python": "", "summary": "An set of tools to Automate LTSpice simulations", "version": "1.0.post4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>README</h1>\n<p>PySpicer is a toolchain of python utilities design to interact with LTSpice Electronic Simulator.</p>\n<h2>What is contained in this repository</h2>\n<ul>\n<li>\n<p><strong>LTSteps.py</strong>\nAn utility that extracts from LTSpice output files data, and formats it for import in a spreadsheet,s uch like Excel or Calc.</p>\n</li>\n<li>\n<p><strong>LTSpice_RawRead.py</strong>\nA pure python class that serves to read raw files into a python class.</p>\n</li>\n<li>\n<p><strong>Histogram.py</strong>\nA python script that uses numpy and matplotlib to create an histogram and calculate the sigma deviations. This is useful for Monte-Carlo analysis.</p>\n</li>\n<li>\n<p><strong>LTSpiceBatch.py</strong>\nThis is a script to launch LTSpice Simulations. This is useful because:</p>\n<ul>\n<li>Can overcome the limitation of only stepping 3 parameters</li>\n<li>Different types of simulations .TRAN .AC .NOISE can be run in a single batch</li>\n<li>The RAW Files are smaller and easier to treat</li>\n<li>When used with the LTSpiceRaw_Reader.py and LTSteps.py, validattion of the circuit can be done automatically.</li>\n<li>Different models can be simulation in a single batch. The principle of operation is the following :\n<ol>\n<li>Add to the Spice circuit a .INC sim_settings.lib  . In this include simulation directives are written by the script per each simulation call.</li>\n<li>Use the python script to update the simulation directives and call LTSpice to run the simulation in command line.</li>\n<li>When the simulation is complete, the simulation results are renamed according to user guidance.</li>\n</ol>\n</li>\n</ul>\n<p>Note: It only works with Windows based installations.</p>\n</li>\n</ul>\n<h2>How to Install</h2>\n<h3>Using PiP Installer</h3>\n<p><code>pip install --upgrade PyLTSpic</code></p>\n<h3>Using GITHub</h3>\n<p><code>git clone https://github.com/nunobrum/PyLTSpice.gi</code></p>\n<p>If using this method it would be good to add the path where you cloned the site to python path.</p>\n<p><code>import sys</code><br>\n<code>sys.path.append(&lt;path to PyLTSpice&gt;)</code></p>\n<h2>How to use</h2>\n<h3>LTSpice_RawRead.py</h3>\n<p>Include the following line on your scripts</p>\n<p><code>from PyLTSpice.LTSpice_RawRead import LTSpiceRawRead</code></p>\n<p><code>from matplotlib import plot</code></p>\n<p><code>LTR = LTSpiceRawRead(\"Draft1.raw\")</code></p>\n<p><code>print(LTR.get_trace_names())</code><br>\n<code>print(LTR.get_raw_property())</code></p>\n<p><code>IR1 = LTR.get_trace(\"I(R1)\")</code><br>\n<code>x = LTR.get_trace('time') # Gets the time axis</code>steps = LTR.get_steps() <code></code>for step in range(len(steps)): <code></code>....# print(steps[step]) <code></code>....plt.plot(x.get_time_axis(step), IR1.get_wave(step), label=steps[step]) `</p>\n<p><code>plt.legend() # order a legend</code><br>\n<code>plt.show()</code></p>\n<h3>LTSpice_Batch</h3>\n<p>This module is used to launch LTSPice simulations. Results then can be processed with either the LTSpiceRawRead\nor with the LTSteps module to read the log file which can contain .MEAS results.</p>\n<p>The script will firstly invoke the LTSpice in command line to generate a netlist, and then this netlist can be\nupdated directly by the script, in order to change component values, parameters or simulation commands.</p>\n<p>Here follows an example of operation.</p>\n<p><code>import os</code><br>\n<code>from PyLTSpice.LTSpiceBatch import LTCommander</code><br>\n<code>from shutil import copyfile</code></p>\n<p><code># get script absolute path</code><br>\n<code>meAbsPath = os.path.dirname(os.path.realpath(__file__))</code><br>\n<code># select spice model</code><br>\n<code>LTC = LTCommander(meAbsPath + \"\\\\Batch_Test.asc\")</code></p>\n<p><code>LTC.set_parameters(res=0, cap=100e-6) # Redefining parameters in the netlist</code><br>\n<code>LTC.set_component_value('R2', '2k') # Redefining component values</code><br>\n<code>LTC.set_component_value('R1', '4k')</code><br>\n<code># define simulation</code><br>\n<code>LTC.add_instructions(</code><br>\n<code>\"; Simulation settings\",</code><br>\n<code>\".param run = 0\" # Commands can be set directly with the .param command instad of the set_parameters(...)</code><br>\n<code>)</code></p>\n<p><code>for opamp in ('AD712', 'AD820'):</code><br>\n<code>....# Setting a model of the U1 Component. Note that subcircuits need the X prefix</code><br>\n<code>....LTC.set_element_model('XU1', opamp)</code> ....for supply_voltage in (5, 10, 15): <code></code> ........LTC.set_component_value('V1', supply_voltage)  # Set a voltage source value <code></code> ........LTC.set_component_value('V2', -supply_voltage) <code></code> ........rawfile, logfile = LTC.run()  # Runs the simulation with the updated netlist <code></code> ........# The run() returns the RAW filename and LOG filenames so that can be processed with\n<code>........# the LTSpice_ReadRaw and LTSteps modules.</code> ........# The command below is optional, used just to keep a copy of the netlist for debug purposes\n<code>........copyfile(LTC.run_netlist_file,</code><br>\n<code>.................\"{}_{}_{}.net\".format(LTC.circuit_radic, opamp, supply_voltage)) # Keep the netlist for reference</code></p>\n<p><code>LTC.reset_netlist() # This resets all the changes done to the checklist</code><br>\n<code>LTC.add_instructions( # Changing the simulation file</code><br>\n<code>\"; Simulation settings\",</code><br>\n<code>\".ac dec 30 10 1Meg\",</code><br>\n<code>\".meas AC Gain MAX mag(V(out)) ; find the peak response and call it \"\"Gain\"\"\",</code><br>\n<code>\".meas AC Fcut TRIG mag(V(out))=Gain/sqrt(2) FALL=last\"</code><br>\n<code>)</code><br>\n<code></code><br>\n<code>raw, log = LTC.run()</code></p>\n<h3>LTSteps.py</h3>\n<p><code>python -m PyLTSpice.LTSteps &lt;logfile or directory where last simulation was made</code></p>\n<h3>Histogram.py</h3>\n<p><code>python -m PyLTSpice.Histogra</code></p>\n<h2>To whom do I talk to?</h2>\n<ul>\n<li>Tools website : <a href=\"https://www.nunobrum.com/pyspicer.html\" rel=\"nofollow\">https://www.nunobrum.com/pyspicer.html</a></li>\n<li>Repo owner : <a href=\"me@nunobrum.com\" rel=\"nofollow\">me@nunobrum.com</a></li>\n<li>Alternative contact : <a href=\"mailto:nuno.brum@gmail.com\">nuno.brum@gmail.com</a></li>\n</ul>\n<h2>History</h2>\n<ul>\n<li>Version 1.0\nLTSpiceBatch.py:\nImplemented an new approach (NOT BACKWARDS COMPATIBLE), that avoids the usage of the sim_settings.inc file.\nAnd allows to modify not only parameters, but also models and even the simulation commands.</li>\n</ul>\n<p>LTSpice_RawRead.py:\nAdded the get_time_axis method to the RawRead class to avoid the problems with negative values on\ntime axis, when 2nd order compression is enabled in LTSpice.</p>\n<p>LTSteps.py:\nModified the LTSteps so it can also read measurements on log files without any steps done.</p>\n<ul>\n<li>\n<p>Version 0.6\nHistogram.py now has an option to make the histogram directly from values stored in the clipboard</p>\n</li>\n<li>\n<p>Version 0.5\nThe LTSpice_RawReader.py now uses the struc.unpack function for a faster execution</p>\n</li>\n<li>\n<p>Version 0.4\nAdded LTSpiceBatch.py to the collection of tools</p>\n</li>\n<li>\n<p>Version 0.3\nA version of LTSteps that can be imported to use in a higher level script</p>\n</li>\n<li>\n<p>Version 0.2\nAdding LTSteps.py and Histogram.py</p>\n</li>\n<li>\n<p>Version 0.1\nFirst commit to the bitbucket repository.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7160117, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1032d460a7dc742c35954537fc3f3d59", "sha256": "aa009ca653c2abfb5607e130df841205392608b84ad6a51833983fb32f049952"}, "downloads": -1, "filename": "PyLTSpice-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1032d460a7dc742c35954537fc3f3d59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31576, "upload_time": "2019-12-07T10:37:32", "upload_time_iso_8601": "2019-12-07T10:37:32.182583Z", "url": "https://files.pythonhosted.org/packages/ab/0d/3b98029d19c46ac435436c1919c847afdc683f48535fe6772671ed48db83/PyLTSpice-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e955d8f4a03fcd00c4f3850ab166b3b4", "sha256": "22e97f9fada82dd2cd858a7c72878d61f50b9c73643b97f6d7b28d528fe515c5"}, "downloads": -1, "filename": "PyLTSpice-0.1.tar.gz", "has_sig": false, "md5_digest": "e955d8f4a03fcd00c4f3850ab166b3b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16834, "upload_time": "2019-12-07T10:37:34", "upload_time_iso_8601": "2019-12-07T10:37:34.565835Z", "url": "https://files.pythonhosted.org/packages/f4/d5/e89e73f52ac8a31ead745db2759c2788bf295daf5103fae273365b64b323/PyLTSpice-0.1.tar.gz", "yanked": false}], "0.1.post1": [{"comment_text": "", "digests": {"md5": "aae1d59f244181a1b03cb5e94f65ba57", "sha256": "3bf026f1857bd6011617b254e77878dfd6a5da2c970b306d062a4fd872cf6caf"}, "downloads": -1, "filename": "PyLTSpice-0.1.post1.tar.gz", "has_sig": false, "md5_digest": "aae1d59f244181a1b03cb5e94f65ba57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17863, "upload_time": "2019-12-07T16:31:07", "upload_time_iso_8601": "2019-12-07T16:31:07.380754Z", "url": "https://files.pythonhosted.org/packages/76/98/31daf3e177990759c6c1cf9e30a9f632e7f3cd0965fbc5ce3ab01b8a6da7/PyLTSpice-0.1.post1.tar.gz", "yanked": false}], "0.1.post2": [{"comment_text": "", "digests": {"md5": "ae3aed5839953d9fbbe490645aa75a4f", "sha256": "0de598bc72b59b13a114e1b223ffb01d8076fdf985c9c8e473cabb222b8f7453"}, "downloads": -1, "filename": "PyLTSpice-0.1.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae3aed5839953d9fbbe490645aa75a4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31972, "upload_time": "2019-12-09T19:26:45", "upload_time_iso_8601": "2019-12-09T19:26:45.039525Z", "url": "https://files.pythonhosted.org/packages/b4/cd/ae01fe4945f67dc0dbf175314e0e9075329c081c16fda2a10afba77e75a9/PyLTSpice-0.1.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36adbf4a296780b3d54fffc394eb1f73", "sha256": "367409887686b94fa234a1516b06901531402c37eb52a6298b33b4d55951a1d9"}, "downloads": -1, "filename": "PyLTSpice-0.1.post2.tar.gz", "has_sig": false, "md5_digest": "36adbf4a296780b3d54fffc394eb1f73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17937, "upload_time": "2019-12-09T19:26:46", "upload_time_iso_8601": "2019-12-09T19:26:46.634088Z", "url": "https://files.pythonhosted.org/packages/81/cf/27c743cb7ee08ddd59b62dd99cf0c3c65790843511afc50cddde79c27eef/PyLTSpice-0.1.post2.tar.gz", "yanked": false}], "0.1.post3": [{"comment_text": "", "digests": {"md5": "ed0aea208cd537c986db44647411e712", "sha256": "c1c131c5f4b600988faba3f978ca9fc57b447d7206db58a6c38bb35bb79e25b8"}, "downloads": -1, "filename": "PyLTSpice-0.1.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "ed0aea208cd537c986db44647411e712", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31863, "upload_time": "2019-12-09T19:40:26", "upload_time_iso_8601": "2019-12-09T19:40:26.931724Z", "url": "https://files.pythonhosted.org/packages/fa/4d/01752ac38e48c5bf6766317fc49f35415153c2a33600aabcfc19973e9980/PyLTSpice-0.1.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69de75938298ca8eee0c8b3e23d4c6f0", "sha256": "9482500a9750cd224447c2ea94c5027555d3241449e9e379d077e1cbf19f1755"}, "downloads": -1, "filename": "PyLTSpice-0.1.post3.tar.gz", "has_sig": false, "md5_digest": "69de75938298ca8eee0c8b3e23d4c6f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17908, "upload_time": "2019-12-09T19:40:28", "upload_time_iso_8601": "2019-12-09T19:40:28.708500Z", "url": "https://files.pythonhosted.org/packages/3f/d5/f03b7d43eb787381e0f8b9668865d9ad73da28c8dc4162ad91d1c7373d93/PyLTSpice-0.1.post3.tar.gz", "yanked": false}], "0.1.post4": [{"comment_text": "", "digests": {"md5": "059107cd73728c09673435abe041de0e", "sha256": "51115d911c7be45eb81ac4a4fb44b0a6431517b4e4d7b6ff8a846361ccb4f5dc"}, "downloads": -1, "filename": "PyLTSpice-0.1.post4-py3-none-any.whl", "has_sig": false, "md5_digest": "059107cd73728c09673435abe041de0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32350, "upload_time": "2019-12-09T20:44:29", "upload_time_iso_8601": "2019-12-09T20:44:29.877001Z", "url": "https://files.pythonhosted.org/packages/c3/e3/10942241867661ea0a0df553f4f581620bfa6fa568f31804b07f7ac6c159/PyLTSpice-0.1.post4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fb10782636b0d1385d6e1dc589eec37", "sha256": "5d065554b40d33d07a824b62bdee2c0825db67e6c5dec7069b815a9b307e6216"}, "downloads": -1, "filename": "PyLTSpice-0.1.post4.tar.gz", "has_sig": false, "md5_digest": "1fb10782636b0d1385d6e1dc589eec37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18900, "upload_time": "2019-12-09T20:44:31", "upload_time_iso_8601": "2019-12-09T20:44:31.122157Z", "url": "https://files.pythonhosted.org/packages/64/8b/a0c0e528a73120a6856fb0edb09d1d8e03b905bcbe6e376c9e3d40e43f62/PyLTSpice-0.1.post4.tar.gz", "yanked": false}], "0.1.post5": [{"comment_text": "", "digests": {"md5": "3a9813dd7d2571e9cbb8c983b922de56", "sha256": "4ffc0f8ef6bd49ec47f32597a35a2555e3aa25a34c7579316098e195d6790d5e"}, "downloads": -1, "filename": "PyLTSpice-0.1.post5-py3-none-any.whl", "has_sig": false, "md5_digest": "3a9813dd7d2571e9cbb8c983b922de56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45080, "upload_time": "2019-12-14T23:16:27", "upload_time_iso_8601": "2019-12-14T23:16:27.429989Z", "url": "https://files.pythonhosted.org/packages/23/6b/891650645ff7dfeee94fb89b46a60235024b0c52a5b744c207a65682c37c/PyLTSpice-0.1.post5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ca95a9d252f8c6839f78af91d4e4339", "sha256": "128ba02be32b178cafef47728dc099ffdbc25bfbc961849de135939a14bfae9d"}, "downloads": -1, "filename": "PyLTSpice-0.1.post5.tar.gz", "has_sig": false, "md5_digest": "4ca95a9d252f8c6839f78af91d4e4339", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22965, "upload_time": "2019-12-14T23:16:29", "upload_time_iso_8601": "2019-12-14T23:16:29.170872Z", "url": "https://files.pythonhosted.org/packages/c5/f7/2f0271ebe9a74bcdd21d31ca5c8ebf4a7258df495e475f6f86039b50102f/PyLTSpice-0.1.post5.tar.gz", "yanked": false}], "0.1a0": [{"comment_text": "", "digests": {"md5": "9ab326c969f2856cb2f91549b64fe919", "sha256": "68d4d652c9d887e24e3d08ab918e6f8667d398fbc9e5d20ef6527d37b21d7cba"}, "downloads": -1, "filename": "PyLTSpice-0.1a0.tar.gz", "has_sig": false, "md5_digest": "9ab326c969f2856cb2f91549b64fe919", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16840, "upload_time": "2019-12-07T16:06:21", "upload_time_iso_8601": "2019-12-07T16:06:21.588574Z", "url": "https://files.pythonhosted.org/packages/12/28/bad8e2fe8094f6a6da00cfd3b3687c002feb089745cf734c96a9ece7cd9a/PyLTSpice-0.1a0.tar.gz", "yanked": false}], "0.1b0": [{"comment_text": "", "digests": {"md5": "54c1c383a416f460db08f3d15d6642e1", "sha256": "80e6a46c0cdaf5b2edd5bf8375a5504946ff87a1b3cac3da0006f6c6b0084bed"}, "downloads": -1, "filename": "PyLTSpice-0.1b0.tar.gz", "has_sig": false, "md5_digest": "54c1c383a416f460db08f3d15d6642e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17860, "upload_time": "2019-12-07T16:24:36", "upload_time_iso_8601": "2019-12-07T16:24:36.618780Z", "url": "https://files.pythonhosted.org/packages/b4/a0/5708db5a8953896c7250f23ddf7a11444ad06f19769a99b5660c94fd4ea7/PyLTSpice-0.1b0.tar.gz", "yanked": false}], "1.0.post0": [{"comment_text": "", "digests": {"md5": "db1e2ae46fb3c41d4d83dce80903b899", "sha256": "aa6d3bd6562146fe9d200eb6284ffaadc30d860c46817eb7a16bc346ba616438"}, "downloads": -1, "filename": "PyLTSpice-1.0.post0-py3-none-any.whl", "has_sig": false, "md5_digest": "db1e2ae46fb3c41d4d83dce80903b899", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49163, "upload_time": "2020-05-03T21:55:12", "upload_time_iso_8601": "2020-05-03T21:55:12.100473Z", "url": "https://files.pythonhosted.org/packages/ae/3c/32b470d10fb4cf18b114d3250e419cd45c87a09022a15ebf2eaef0eee5fb/PyLTSpice-1.0.post0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d679e26c57724e92c23f5dc57cc9055", "sha256": "6325bb37d6930a620e4f8a836902ba1e951210f0b432f95ef07be3c44a8cb0dc"}, "downloads": -1, "filename": "PyLTSpice-1.0.post0.tar.gz", "has_sig": false, "md5_digest": "0d679e26c57724e92c23f5dc57cc9055", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28715, "upload_time": "2020-05-03T21:55:13", "upload_time_iso_8601": "2020-05-03T21:55:13.652982Z", "url": "https://files.pythonhosted.org/packages/00/3b/33a6fcacb1be92e2755d9901a961cbbbe6014e256c583cccdf09a04b3ca8/PyLTSpice-1.0.post0.tar.gz", "yanked": false}], "1.0.post1": [{"comment_text": "", "digests": {"md5": "85707329160165aaf366353b6abfb49e", "sha256": "fbe3aaaa13c05722ac530a563ca4b1c76351eca0499bfbace0db779859a93d52"}, "downloads": -1, "filename": "PyLTSpice-1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "85707329160165aaf366353b6abfb49e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49167, "upload_time": "2020-05-03T22:00:02", "upload_time_iso_8601": "2020-05-03T22:00:02.959015Z", "url": "https://files.pythonhosted.org/packages/89/53/d5bf7cbd30bfb18851eb615d0b341dea1a56ae10e163d84efc5e83fdb3eb/PyLTSpice-1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19b4d2b7b096c7c017c03b33be106058", "sha256": "0d78edd1e56ef31d7ae9f76abfde43f0ebc0c4488b405b22c1f5e5fff860c7a3"}, "downloads": -1, "filename": "PyLTSpice-1.0.post1.tar.gz", "has_sig": false, "md5_digest": "19b4d2b7b096c7c017c03b33be106058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28727, "upload_time": "2020-05-03T22:00:04", "upload_time_iso_8601": "2020-05-03T22:00:04.117765Z", "url": "https://files.pythonhosted.org/packages/16/9f/1e9992075b5bbe9d918cd72963df8dd93c93f8999c25e09c8b8d16c8b5c4/PyLTSpice-1.0.post1.tar.gz", "yanked": false}], "1.0.post2": [{"comment_text": "", "digests": {"md5": "017284d529a2a6fb4e2f06a822bcfa2a", "sha256": "4bd6773e78dd9c2afb25c203440039aa746e5aa3ae8f0c6b0d11b0e2dc76f160"}, "downloads": -1, "filename": "PyLTSpice-1.0.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "017284d529a2a6fb4e2f06a822bcfa2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49147, "upload_time": "2020-05-03T22:02:22", "upload_time_iso_8601": "2020-05-03T22:02:22.680568Z", "url": "https://files.pythonhosted.org/packages/c6/8f/60763655ba81200107ee011152f85fb52c4bf45082b411c8d41c63ec98dd/PyLTSpice-1.0.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd9d1b24eb827ac81dd4648ff5c7eadb", "sha256": "fc130c5d7ca2d5a0ce64af4f6f0c74636e8027954fcf9beb0dec6b83ab541cc4"}, "downloads": -1, "filename": "PyLTSpice-1.0.post2.tar.gz", "has_sig": false, "md5_digest": "fd9d1b24eb827ac81dd4648ff5c7eadb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28720, "upload_time": "2020-05-03T22:02:23", "upload_time_iso_8601": "2020-05-03T22:02:23.682261Z", "url": "https://files.pythonhosted.org/packages/cc/1c/f044fd19719ee98e7718b888eb00b89a46e431d35dd7f42a88bccc3c7baf/PyLTSpice-1.0.post2.tar.gz", "yanked": false}], "1.0.post3": [{"comment_text": "", "digests": {"md5": "8cb6432bb9d078d359c62747eca748d8", "sha256": "618349b020070667a4d9502acaf965a86f55b37f20db3e1b50988a3ce0867f5d"}, "downloads": -1, "filename": "PyLTSpice-1.0.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "8cb6432bb9d078d359c62747eca748d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48826, "upload_time": "2020-05-03T22:08:01", "upload_time_iso_8601": "2020-05-03T22:08:01.755631Z", "url": "https://files.pythonhosted.org/packages/cb/43/bc9590f6024bb82a58df2a084e67748f6dab34ddff4d88f05c0fa47b1ef8/PyLTSpice-1.0.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "879a434e693dcdb081815b1616aa1d01", "sha256": "a8d59782bf113a1ca086102b280b125171884599206fe9e5d62eeee9dd5c5ca9"}, "downloads": -1, "filename": "PyLTSpice-1.0.post3.tar.gz", "has_sig": false, "md5_digest": "879a434e693dcdb081815b1616aa1d01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27939, "upload_time": "2020-05-03T22:08:03", "upload_time_iso_8601": "2020-05-03T22:08:03.206123Z", "url": "https://files.pythonhosted.org/packages/8e/bb/07aaacf7359727d2c6d48dd2d04ce8696b0fdf53b595e8fa437e5e379bef/PyLTSpice-1.0.post3.tar.gz", "yanked": false}], "1.0.post4": [{"comment_text": "", "digests": {"md5": "7adf3cd131e478e6e2f8d4cb9ba34921", "sha256": "825f7237b1d9e82bd3f99d75be4df0149c2c1ac402863a0f7a25bae74e549ef4"}, "downloads": -1, "filename": "PyLTSpice-1.0.post4-py3-none-any.whl", "has_sig": false, "md5_digest": "7adf3cd131e478e6e2f8d4cb9ba34921", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49054, "upload_time": "2020-05-03T22:26:09", "upload_time_iso_8601": "2020-05-03T22:26:09.391148Z", "url": "https://files.pythonhosted.org/packages/79/da/8b7a8b6d50f775da330f64544e0911d5a2594808fc371a7834ab535a18c3/PyLTSpice-1.0.post4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09350ea44e8b3397d91409db1244f6bc", "sha256": "e2b390853948e07e6819fd0c6767a1de3a37d0117bb39fa47c1df1a79e03cd26"}, "downloads": -1, "filename": "PyLTSpice-1.0.post4.tar.gz", "has_sig": false, "md5_digest": "09350ea44e8b3397d91409db1244f6bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28529, "upload_time": "2020-05-03T22:26:10", "upload_time_iso_8601": "2020-05-03T22:26:10.561313Z", "url": "https://files.pythonhosted.org/packages/ad/8c/3a3a175cd28fd220364387abb44d7a344456c8db78bc24fe323bf6e8a3ab/PyLTSpice-1.0.post4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7adf3cd131e478e6e2f8d4cb9ba34921", "sha256": "825f7237b1d9e82bd3f99d75be4df0149c2c1ac402863a0f7a25bae74e549ef4"}, "downloads": -1, "filename": "PyLTSpice-1.0.post4-py3-none-any.whl", "has_sig": false, "md5_digest": "7adf3cd131e478e6e2f8d4cb9ba34921", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49054, "upload_time": "2020-05-03T22:26:09", "upload_time_iso_8601": "2020-05-03T22:26:09.391148Z", "url": "https://files.pythonhosted.org/packages/79/da/8b7a8b6d50f775da330f64544e0911d5a2594808fc371a7834ab535a18c3/PyLTSpice-1.0.post4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09350ea44e8b3397d91409db1244f6bc", "sha256": "e2b390853948e07e6819fd0c6767a1de3a37d0117bb39fa47c1df1a79e03cd26"}, "downloads": -1, "filename": "PyLTSpice-1.0.post4.tar.gz", "has_sig": false, "md5_digest": "09350ea44e8b3397d91409db1244f6bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28529, "upload_time": "2020-05-03T22:26:10", "upload_time_iso_8601": "2020-05-03T22:26:10.561313Z", "url": "https://files.pythonhosted.org/packages/ad/8c/3a3a175cd28fd220364387abb44d7a344456c8db78bc24fe323bf6e8a3ab/PyLTSpice-1.0.post4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:43 2020"}