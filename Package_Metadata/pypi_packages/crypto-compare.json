{"info": {"author": "Parth Barot", "author_email": "parth.barot@botreetechnologies.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7"], "description": "# crypto_compare\n\nCryptoCompare.com API client for Python\n\n## Folder/code structure\n\nThe code is written such that all the methods are available as instance methods in `Client` class, but grouped them in diff. modules under `apis` module to keep the code readable. All these module methods are imported inside the class `Client`.\n\n```\n|_ crypto_compare\n|__ client.py -- This is the main client class which has all the public methods\n|__ apis\n|___ average.py - methods for average APIs\n|___ coin.py - methods for coin APIs\n|___ helper.py - helper methods\n|___ histo.py - methods for histo APIs\n|___ mining.py - methods for mining APIs\n|___ price.py - methods for pricing APIs\n|___ subs.py - methods for subs APIs\n|___ top.py - methods for top data APIs\n|___ uncategorized.py - other API methods\n\n\n```\n\n## Usage\n\n1. Install it using pip\n\n``` shell\npip install crypto_compare\n\n```\n2. Use it as following\n``` python\n\nimport crypto_compare\n\ncrypto_compare_client = crypto_compare.Client() #Create an instance and call any public API method!\ncrypto_compare_client.coin_list()\ncrypto_compare_client.coin_snapshot('BTC', 'USD')\n\n```\n\n## API docs\n\n### Coin methods\n1. `coin_list()`\n2. `coin_snapshot_full_by_id(coin_id)`\n3. `coin_snapshot(fsym, tsym)`\n\n### Price methods\n4. `price(**kwargs) - fsym and tsyms are mandatory as named arguments`\n5. `price_multi(**kwargs) - fsyms and tsyms are mandatory as named arguments`\n6. `price_multifull(**kwargs) - fsyms and tsyms are mandatory as named arguments`\n7. `price_historical(**kwargs) - fsym and tsyms are mandatory as named arguments`\n\n### Average methods\n8. `generate_avg(**kwargs) - fsym, tsym and markets are mandatory as named arguments`\n9. `day_avg(**kwargs) - fsym and tsym are mandatory as named arguments`\n\n### Subs methods\n10. `subs_watchlist(**kwargs) - fsyms and tsym are mandatory as named arguments`\n11. `subs(**kwargs) - fsym is mandatory as named argument`\n\n### Top Data methods\n12. `top_exchanges(**kwargs) - fsym and tsym are mandatory as named arguments`\n13. `top_volumes(**kwargs) - tsym is mandatory as named argument`\n14. `top_pairs(**kwargs) - fsym and tsym are mandatory as named arguments`\n\n### Histo methods\n15. `histo_day(**kwargs) - fsym and tsym are mandatory as named arguments`\n16. `histo_hour(**kwargs) - tsym is mandatory as named argument`\n17. `histo_minute(**kwargs) - fsym and tsym are mandatory as named arguments`\n\n### Mining methods\n18. `mining_contracts()`\n19. `mining_equipment()`\n\n### Other methods\n20. `all_exchanges(**kwargs)`\n21. `social_stats(coin_id)`\n\n## ToDo\n\n1. Add tests\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BoTreeConsultingTeam/crypto_compare", "keywords": "crypto cryptocurrency wrapper cryptocompare crypto_compare", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "crypto-compare", "package_url": "https://pypi.org/project/crypto-compare/", "platform": "", "project_url": "https://pypi.org/project/crypto-compare/", "project_urls": {"Homepage": "https://github.com/BoTreeConsultingTeam/crypto_compare"}, "release_url": "https://pypi.org/project/crypto-compare/0.0.1/", "requires_dist": ["urllib2"], "requires_python": "", "summary": "Wrapper for CryptoCompare.com public API", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # crypto_compare<br><br>CryptoCompare.com API client for Python<br><br>## Folder/code structure<br><br>The code is written such that all the methods are available as instance methods in `Client` class, but grouped them in diff. modules under `apis` module to keep the code readable. All these module methods are imported inside the class `Client`.<br><br>```<br>|_ crypto_compare<br>|__ client.py -- This is the main client class which has all the public methods<br>|__ apis<br>|___ average.py - methods for average APIs<br>|___ coin.py - methods for coin APIs<br>|___ helper.py - helper methods<br>|___ histo.py - methods for histo APIs<br>|___ mining.py - methods for mining APIs<br>|___ price.py - methods for pricing APIs<br>|___ subs.py - methods for subs APIs<br>|___ top.py - methods for top data APIs<br>|___ uncategorized.py - other API methods<br><br><br>```<br><br>## Usage<br><br>1. Install it using pip<br><br>``` shell<br>pip install crypto_compare<br><br>```<br>2. Use it as following<br>``` python<br><br>import crypto_compare<br><br>crypto_compare_client = crypto_compare.Client() #Create an instance and call any public API method!<br>crypto_compare_client.coin_list()<br>crypto_compare_client.coin_snapshot('BTC', 'USD')<br><br>```<br><br>## API docs<br><br>### Coin methods<br>1. `coin_list()`<br>2. `coin_snapshot_full_by_id(coin_id)`<br>3. `coin_snapshot(fsym, tsym)`<br><br>### Price methods<br>4. `price(**kwargs) - fsym and tsyms are mandatory as named arguments`<br>5. `price_multi(**kwargs) - fsyms and tsyms are mandatory as named arguments`<br>6. `price_multifull(**kwargs) - fsyms and tsyms are mandatory as named arguments`<br>7. `price_historical(**kwargs) - fsym and tsyms are mandatory as named arguments`<br><br>### Average methods<br>8. `generate_avg(**kwargs) - fsym, tsym and markets are mandatory as named arguments`<br>9. `day_avg(**kwargs) - fsym and tsym are mandatory as named arguments`<br><br>### Subs methods<br>10. `subs_watchlist(**kwargs) - fsyms and tsym are mandatory as named arguments`<br>11. `subs(**kwargs) - fsym is mandatory as named argument`<br><br>### Top Data methods<br>12. `top_exchanges(**kwargs) - fsym and tsym are mandatory as named arguments`<br>13. `top_volumes(**kwargs) - tsym is mandatory as named argument`<br>14. `top_pairs(**kwargs) - fsym and tsym are mandatory as named arguments`<br><br>### Histo methods<br>15. `histo_day(**kwargs) - fsym and tsym are mandatory as named arguments`<br>16. `histo_hour(**kwargs) - tsym is mandatory as named argument`<br>17. `histo_minute(**kwargs) - fsym and tsym are mandatory as named arguments`<br><br>### Mining methods<br>18. `mining_contracts()`<br>19. `mining_equipment()`<br><br>### Other methods<br>20. `all_exchanges(**kwargs)`<br>21. `social_stats(coin_id)`<br><br>## ToDo<br><br>1. Add tests<br><br>\n          </div>"}, "last_serial": 3139794, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ad62a87fc5ad3ca2c5bfaece60eccaed", "sha256": "92b2b20f350f21dbfccca29f34a32913896e5628bdb2a49beb5b833a1c161fa5"}, "downloads": -1, "filename": "crypto_compare-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ad62a87fc5ad3ca2c5bfaece60eccaed", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4769, "upload_time": "2017-09-01T07:49:46", "upload_time_iso_8601": "2017-09-01T07:49:46.830507Z", "url": "https://files.pythonhosted.org/packages/5c/82/ea4e2d52610fa18c088fbcd96c5cae6b641e1e0982e3fc045f0b798c907e/crypto_compare-0.0.1-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad62a87fc5ad3ca2c5bfaece60eccaed", "sha256": "92b2b20f350f21dbfccca29f34a32913896e5628bdb2a49beb5b833a1c161fa5"}, "downloads": -1, "filename": "crypto_compare-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ad62a87fc5ad3ca2c5bfaece60eccaed", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4769, "upload_time": "2017-09-01T07:49:46", "upload_time_iso_8601": "2017-09-01T07:49:46.830507Z", "url": "https://files.pythonhosted.org/packages/5c/82/ea4e2d52610fa18c088fbcd96c5cae6b641e1e0982e3fc045f0b798c907e/crypto_compare-0.0.1-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:02 2020"}