{"info": {"author": "Benoit Anctil-Robitaille", "author_email": "benoit.anctil-robitaille.1@ens.etsmtl.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Torch Vectorized\n> Batched and vectorized operations on volume of 3x3 symmetric matrices with Pytorch. The current Pytorch's implementation of batch eigen-decomposition is very slow when dealing with huge number of small matrices (e.g. 500k x 3x3). **This library offers some basic functions like vSymEig, vExpm and vLogm for fast computation (>250x faster) of huge number of small matrices with Pytorch using an analytical solution.**\n\n## vSymEig\n> A quick closed-form solution for volumetric 3x3 matrices Eigen-Decomposition with Pytorch. Solves Eigen-Decomposition of data with shape Bx9xDxHxW, where B is the batch size, 9 is the flattened 3x3 symmetric matrices, D is the depth, H is the Height, W is the width. The goal is to accelerate the Eigen-Decomposition of multiple (>500k) small matrices (3x3) on GPU with Pytorch using an analytical solution.   \n\n<img src=\"https://raw.githubusercontent.com/banctilrobitaille/torch-vectorized/master/icons/vsymeig.png\" width=\"100%\" vertical-align=\"bottom\">\n\n## vExpm\n> Based on vSymEig, computes the matrix exponential for batch of volumetric 3x3 matrices.\n\n<img src=\"https://raw.githubusercontent.com/banctilrobitaille/torch-vectorized/master/icons/vexpm.png\" width=\"100%\" vertical-align=\"bottom\">\n\n## vLogm\n> Based on vSymEig, computes the matrix logarithm for batch of volumetric 3x3 matrices.\n\n<img src=\"https://raw.githubusercontent.com/banctilrobitaille/torch-vectorized/master/icons/vlogm.png\" width=\"100%\" vertical-align=\"bottom\">\n\n## Install me\n\n> pip install torch-vectorized\n\n## How to use\n\n```python\nfrom torchvectorized.vlinalg import vSymeig\n\n# Random batch of volumetric 3x3 symmetric matrices of size 16x9x32x32x32\ninput = sym(torch.rand(16, 9, 32, 32, 32))\n\n# Output eig_vals with size: 16x3x32x32x32 and eig_vecs with size 16,3,3,32,32,32\neig_vals, eig_vecs = vSymeig(input, eigen_vectors=True)\n\ndef sym(self, inputs):\n    # Ensure symmetry of randomly generated 3x3 matrix using (X + X.T) / 2.0\n    return (inputs + inputs[:, [0, 3, 6, 1, 4, 7, 2, 5, 8], :, :, :]) / 2.0\n```\n\n## Contributing\n\n#### How to contribute ?\n- [X] Create a branch by feature and/or bug fix\n- [X] Get the code\n- [X] Commit and push\n- [X] Create a pull request\n\n#### Branch naming\n\n##### Feature branch\n> feature/ [Short feature description] [Issue number]\n\n##### Bug branch\n> fix/ [Short fix description] [Issue number]\n\n#### Commits syntax:\n\n##### Adding code:\n> \\+ Added [Short Description] [Issue Number]\n\n##### Deleting code:\n> \\- Deleted [Short Description] [Issue Number]\n\n##### Modifying code:\n> \\* Changed [Short Description] [Issue Number]\n\n##### Merging code:\n> Y Merged [Short Description] [Issue Number]\n\n\nIcons made by <a href=\"http://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"http://www.flaticon.com\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torch-vectorized", "package_url": "https://pypi.org/project/torch-vectorized/", "platform": "", "project_url": "https://pypi.org/project/torch-vectorized/", "project_urls": null, "release_url": "https://pypi.org/project/torch-vectorized/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A quick closed-form solution for volumetric 3x3 matrices Eigen-Decomposition with Pytorch.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Torch Vectorized</h1>\n<blockquote>\n<p>Batched and vectorized operations on volume of 3x3 symmetric matrices with Pytorch. The current Pytorch's implementation of batch eigen-decomposition is very slow when dealing with huge number of small matrices (e.g. 500k x 3x3). <strong>This library offers some basic functions like vSymEig, vExpm and vLogm for fast computation (&gt;250x faster) of huge number of small matrices with Pytorch using an analytical solution.</strong></p>\n</blockquote>\n<h2>vSymEig</h2>\n<blockquote>\n<p>A quick closed-form solution for volumetric 3x3 matrices Eigen-Decomposition with Pytorch. Solves Eigen-Decomposition of data with shape Bx9xDxHxW, where B is the batch size, 9 is the flattened 3x3 symmetric matrices, D is the depth, H is the Height, W is the width. The goal is to accelerate the Eigen-Decomposition of multiple (&gt;500k) small matrices (3x3) on GPU with Pytorch using an analytical solution.</p>\n</blockquote>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/823ccedb48025d4b677fb3107b65b143677314ed/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62616e6374696c726f62697461696c6c652f746f7263682d766563746f72697a65642f6d61737465722f69636f6e732f7673796d6569672e706e67\" width=\"100%\">\n<h2>vExpm</h2>\n<blockquote>\n<p>Based on vSymEig, computes the matrix exponential for batch of volumetric 3x3 matrices.</p>\n</blockquote>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9d9f6055315b8d62bfa96079849d49902cec31e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62616e6374696c726f62697461696c6c652f746f7263682d766563746f72697a65642f6d61737465722f69636f6e732f766578706d2e706e67\" width=\"100%\">\n<h2>vLogm</h2>\n<blockquote>\n<p>Based on vSymEig, computes the matrix logarithm for batch of volumetric 3x3 matrices.</p>\n</blockquote>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a32e09102390c70fb1c8c79a92e55b632d179590/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62616e6374696c726f62697461696c6c652f746f7263682d766563746f72697a65642f6d61737465722f69636f6e732f766c6f676d2e706e67\" width=\"100%\">\n<h2>Install me</h2>\n<blockquote>\n<p>pip install torch-vectorized</p>\n</blockquote>\n<h2>How to use</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">torchvectorized.vlinalg</span> <span class=\"kn\">import</span> <span class=\"n\">vSymeig</span>\n\n<span class=\"c1\"># Random batch of volumetric 3x3 symmetric matrices of size 16x9x32x32x32</span>\n<span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"n\">sym</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Output eig_vals with size: 16x3x32x32x32 and eig_vecs with size 16,3,3,32,32,32</span>\n<span class=\"n\">eig_vals</span><span class=\"p\">,</span> <span class=\"n\">eig_vecs</span> <span class=\"o\">=</span> <span class=\"n\">vSymeig</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">,</span> <span class=\"n\">eigen_vectors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sym</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Ensure symmetry of randomly generated 3x3 matrix using (X + X.T) / 2.0</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">inputs</span> <span class=\"o\">+</span> <span class=\"n\">inputs</span><span class=\"p\">[:,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">:,</span> <span class=\"p\">:,</span> <span class=\"p\">:])</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n</pre>\n<h2>Contributing</h2>\n<h4>How to contribute ?</h4>\n<ul>\n<li>[X] Create a branch by feature and/or bug fix</li>\n<li>[X] Get the code</li>\n<li>[X] Commit and push</li>\n<li>[X] Create a pull request</li>\n</ul>\n<h4>Branch naming</h4>\n<h5>Feature branch</h5>\n<blockquote>\n<p>feature/ [Short feature description] [Issue number]</p>\n</blockquote>\n<h5>Bug branch</h5>\n<blockquote>\n<p>fix/ [Short fix description] [Issue number]</p>\n</blockquote>\n<h4>Commits syntax:</h4>\n<h5>Adding code:</h5>\n<blockquote>\n<p>+ Added [Short Description] [Issue Number]</p>\n</blockquote>\n<h5>Deleting code:</h5>\n<blockquote>\n<p>- Deleted [Short Description] [Issue Number]</p>\n</blockquote>\n<h5>Modifying code:</h5>\n<blockquote>\n<p>* Changed [Short Description] [Issue Number]</p>\n</blockquote>\n<h5>Merging code:</h5>\n<blockquote>\n<p>Y Merged [Short Description] [Issue Number]</p>\n</blockquote>\n<p>Icons made by <a href=\"http://www.flaticon.com/authors/freepik\" rel=\"nofollow\" title=\"Freepik\">Freepik</a> from <a href=\"http://www.flaticon.com\" rel=\"nofollow\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" rel=\"nofollow\" title=\"Creative Commons BY 3.0\">CC 3.0 BY</a></p>\n\n          </div>"}, "last_serial": 6690325, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "867faf0ad44ce8b86c1b671b352576ee", "sha256": "d9a5b063be5095bce017d6751f8834db6899bdf4453de01578b9213e7dfe6300"}, "downloads": -1, "filename": "torch-vectorized-0.0.1.tar.gz", "has_sig": false, "md5_digest": "867faf0ad44ce8b86c1b671b352576ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2903, "upload_time": "2020-02-18T19:56:39", "upload_time_iso_8601": "2020-02-18T19:56:39.674013Z", "url": "https://files.pythonhosted.org/packages/b0/ed/beb6fad42477b43e2c14d0d7275f56100ac68fb11677ab3e9cc092c749f8/torch-vectorized-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "603154b58350d1a2242ba205609623b3", "sha256": "20817e34f5701840f1090cdbefedee03ef4df40bf34766c48010ae18a205ab6e"}, "downloads": -1, "filename": "torch-vectorized-0.0.2.tar.gz", "has_sig": false, "md5_digest": "603154b58350d1a2242ba205609623b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3270, "upload_time": "2020-02-18T20:53:39", "upload_time_iso_8601": "2020-02-18T20:53:39.979853Z", "url": "https://files.pythonhosted.org/packages/02/31/0206000a0799bd5a4281d8a25a21d0406d943e03374c34c970b1b4418415/torch-vectorized-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f05995ad4d963cf0c8fbe0051ca92dee", "sha256": "56ab2341d0b87712236a694abe755ebfd35d5415afe3ba267ff422401856dc26"}, "downloads": -1, "filename": "torch-vectorized-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f05995ad4d963cf0c8fbe0051ca92dee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3292, "upload_time": "2020-02-19T14:33:47", "upload_time_iso_8601": "2020-02-19T14:33:47.698786Z", "url": "https://files.pythonhosted.org/packages/91/11/f96c32c9a654fbdf108d0fde74d13e31d4ea2bfeeffb91eeb60d21d9757e/torch-vectorized-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6863a67c1c91f3fddc1cc9b3377ccf49", "sha256": "6e69856f2eee758ab31a37ef961a1d0cacf0972396007ed0959e4cc684b916de"}, "downloads": -1, "filename": "torch-vectorized-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6863a67c1c91f3fddc1cc9b3377ccf49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3321, "upload_time": "2020-02-19T15:17:21", "upload_time_iso_8601": "2020-02-19T15:17:21.349127Z", "url": "https://files.pythonhosted.org/packages/82/e4/ac4087dbfdc33e557f573c7fa224f224f984c6ab183b38c8b76eb4cda4c2/torch-vectorized-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "4139ae2c6f703123e0c3ad058bafe3b4", "sha256": "9a571ecc38ac8b16f1516e70a386bdad2018973c15940e8ebe386e092cc1d3cf"}, "downloads": -1, "filename": "torch-vectorized-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4139ae2c6f703123e0c3ad058bafe3b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2963, "upload_time": "2020-02-22T19:07:48", "upload_time_iso_8601": "2020-02-22T19:07:48.120141Z", "url": "https://files.pythonhosted.org/packages/ab/34/0475834233e035ea5a8a179740e7bbc7912bc7ed92cd9bf78d14e99af518/torch-vectorized-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e0b9f869e90d485d55ec71b355d3b13c", "sha256": "628ff2848a6375081a45e095d10807c7610f94ab4ad4d6dc19bb935e29cf1341"}, "downloads": -1, "filename": "torch-vectorized-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e0b9f869e90d485d55ec71b355d3b13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3333, "upload_time": "2020-02-24T18:42:30", "upload_time_iso_8601": "2020-02-24T18:42:30.125303Z", "url": "https://files.pythonhosted.org/packages/90/9e/1aa347a305e3c577dffa384fa2ffe3f8bd3c7c8c5176b0206cbb6870580d/torch-vectorized-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0b9f869e90d485d55ec71b355d3b13c", "sha256": "628ff2848a6375081a45e095d10807c7610f94ab4ad4d6dc19bb935e29cf1341"}, "downloads": -1, "filename": "torch-vectorized-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e0b9f869e90d485d55ec71b355d3b13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3333, "upload_time": "2020-02-24T18:42:30", "upload_time_iso_8601": "2020-02-24T18:42:30.125303Z", "url": "https://files.pythonhosted.org/packages/90/9e/1aa347a305e3c577dffa384fa2ffe3f8bd3c7c8c5176b0206cbb6870580d/torch-vectorized-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:04 2020"}