{"info": {"author": "Phoenix Chen", "author_email": "phoenix0722chen@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ContentfulORM\n***\nA Python toolkit for [Contentful](https://www.contentful.com/) to let you create/maintain your Content Type and queries in ORM style.\n\n## Install\n***\n- To install:\n    ```\n    pip install git+https://github.com/Phoenix-Chen/ContentfulORM.git\n    ```\n\n## Usage\n***\n\n### ORM Environment\n***\n- Create an ORM Environment:\n    ```python\n    import contentful_management\n    from contentful_orm import ORMEnvironment\n\n    # First create an contentful_management.environment.Environment\n    client = contentful_management.Client('CONTENTFUL_MANAGEMENT_TOKEN')\n    space = client.spaces().find('CONTENTFUL_SPACE_ID')\n    environment = space.environments().find('CONTENTFUL_ENVIRONMENT')\n\n    # Then create ORMEnvironment use contentful_management.environment.Environment\n    orm_env = ORMEnvironment.from_parent(environment)\n    ```\n\n### Content Type Model\n***\n- Model your content type:\n    ```python\n    from datetime import datetime\n    from contentful_orm.models import Model\n    from contentful_orm.fields import ArrayField, BooleanField, DateField, DecimalField, IntegerField, MediaField, ReferenceField, SymbolField, TextField, LocationField\n    from contentful_orm.fields.validations import In, Range, Unique, Size, Regex, ImageDimensions, FileSize\n\n    # class name will become content type name\n    # class name in camel case will become content type id\n    class Person(Model):\n        # docstring will become content type description\n        \"\"\"Person model description\n        \"\"\"\n        __display_field__ = 'name'\n\n        # Each field need to be a {SomeType}Field from contentful_orm.fields\n        # Most of the fields have keyword argument: disabled, localized, omitted, required, validations and default\n        # (disabled, localized, omitted and required default to False. validations defaults to []. default defaults to None)\n        email = SymbolField(validations=[Unique, Regex('^\\\\w[\\\\w.-]*@([\\\\w-]+\\\\.)+[\\\\w-]+$', error_msg='Invalid email address.')], required=True)\n        name = SymbolField(localized=True, required=True)\n        # ArrayField takes an argument to specify content type\n        title = ArrayField(SymbolField(validations=[In(['Manager', 'Seller'], error_msg='Invalid title')]), localized=True)\n        age = IntegerField(validations=[Range(min=1, error_msg='age must be a positive integer.')])\n        created_date = DateField(default=datetime.now().strftime(\"%Y-%m-%dT%H:%M-00:00\"))\n\n    class Company(Model):\n        \"\"\"Company model description\n        \"\"\"\n        __display_field__ = 'name'\n\n        name = SymbolField(validations=[Unique], required=True)\n        employees = ArrayField(ReferenceField(model_set={Person}, error_msg='employee has to be a Person entry'))\n        address = LocationField()\n\n    class Product(Model):\n        \"\"\"Product model description\n        \"\"\"\n        __display_field__ = 'name'\n\n        name = SymbolField(validations=[Unique], required=True)\n        description = TextField(localized=True)\n        # ReferenceField takes an additional keyword argument model_set to restrict reference content type.\n        # (Currently doesn't support reference to the content type itself)\n        seller = ReferenceField(model_set={Person, Company}, error_msg=\"seller has to be a Person or Company entry\")\n        images = ArrayField(\n            MediaField(\n                # validations takes a list of contentful_orm.fields.validations\n                # See: https://www.contentful.com/r/knowledgebase/validations/ for details\n                validations=[\n                    ImageDimensions(max_width=12, max_height=12),\n                    FileSize(max=40000, error_msg='Maximum file size is 40000 Bytes')\n                ]),\n            validations=[Size(max=10, error_msg=\"At most 10 images\")]\n        )\n        sponsored = BooleanField(required=True)\n        price = DecimalField(required=True)\n    ```\n- Create and publish the content type using model:\n    ```python\n    orm_env.create(Person).publish()\n    # Or\n    orm_env.create(Person)\n    orm_env.publish(Person)\n    ```\n- Unpublish and delete the content type using model:\n    ```python\n    orm_env.unpublish(Product)\n    orm_env.delete(Product)\n    ```\n- Add and publish entry:\n    ```python\n    person1 = orm_env.add(Person(email='a@a.com', name='a', title=['Manager', 'Seller'], age=13)).publish()\n    # You can specify entry id or it will randomly generate a UUID\n    person2 = orm_env.add(Person(email='b@a.com', name='b', title=['Seller'], age=66), id='S9SN3JWKN3565D').publish()\n    person3 = orm_env.add(Person(email='c@a.com', name='c', title=['Manager'], created_date='2019-08-11T00:00-07:00')).publish()\n    company1 = orm_env.add(Company(name='Contentful', employees=[person1.to_link().to_json(), person2.to_link().to_json()])).publish()\n    # Or\n    product1 = Product(\n        name='ContentfulORM',\n        description='Write your Contentful in ORM style!',\n        seller=company1.to_link().to_json(),\n        sponsored=True,\n        price=0.01\n    )\n    orm_env.add(product1).publish()\n    ```\n- Query:\n    ```python\n    # Query all entries of a content type\n    orm_env.query(Person).all()\n\n    # Filter query\n    # ORMContentTypeEntriesProxy extends ContentTypeEntriesProxy with additional filter function\n    from contentful_orm.operators import all_, limit, select, skip\n\n    # Filter with field names as keyword arguments for exact search\n    orm_env.query(Person).filter(email='c@a.com', name='c')\n\n    # Filter with operators, see operators all at: https://github.com/Phoenix-Chen/ContentfulORM/blob/dev/contentful_orm/operators.py\n    orm_env.query(Person).filter(all_(title=['Manager', 'seller']), skip(1), limit(100), select('fields.name'))\n\n    # Use combination of both\n    orm_env.query(Person).filter(limit(1), name='c')\n\n    ```\n- Serialize:\n    ```python\n    from contentful_orm.serializers import ModelSerializer\n\n    class ProductSerializer(ModelSerializer):\n        class Meta:\n            model = Product\n            # Specify fields to be serialized or use '__all__' for all the fields\n            fields = [\n                'name',\n                'description',\n                'price'\n            ]\n\n    # Query the entry/entries you want to serialize\n    products = orm_env.query(Product).all()\n\n    # Serialize single entry\n    serialized_product = ProductSerializer(products[0])\n\n    # Serialize multiple entries\n    serialized_products = ProductSerializer(products, many=True)\n\n    # Currently links won't be recursively serialized, in case of circular references.\n    ```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Phoenix-Chen/ContentfulORM", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "contentful-orm", "package_url": "https://pypi.org/project/contentful-orm/", "platform": "", "project_url": "https://pypi.org/project/contentful-orm/", "project_urls": {"Homepage": "https://github.com/Phoenix-Chen/ContentfulORM"}, "release_url": "https://pypi.org/project/contentful-orm/0.1.0/", "requires_dist": ["contentful-management", "python-baseconv"], "requires_python": "", "summary": "A Python toolkit for Contentful to let you create/maintain your Content Type and queries in ORM style.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ContentfulORM</h1>\n<hr>\n<p>A Python toolkit for <a href=\"https://www.contentful.com/\" rel=\"nofollow\">Contentful</a> to let you create/maintain your Content Type and queries in ORM style.</p>\n<h2>Install</h2>\n<hr>\n<ul>\n<li>To install:\n<pre><code>pip install git+https://github.com/Phoenix-Chen/ContentfulORM.git\n</code></pre>\n</li>\n</ul>\n<h2>Usage</h2>\n<hr>\n<h3>ORM Environment</h3>\n<hr>\n<ul>\n<li>Create an ORM Environment:\n<pre><span class=\"kn\">import</span> <span class=\"nn\">contentful_management</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contentful_orm</span> <span class=\"kn\">import</span> <span class=\"n\">ORMEnvironment</span>\n\n<span class=\"c1\"># First create an contentful_management.environment.Environment</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">contentful_management</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'CONTENTFUL_MANAGEMENT_TOKEN'</span><span class=\"p\">)</span>\n<span class=\"n\">space</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">spaces</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">'CONTENTFUL_SPACE_ID'</span><span class=\"p\">)</span>\n<span class=\"n\">environment</span> <span class=\"o\">=</span> <span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">environments</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">'CONTENTFUL_ENVIRONMENT'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Then create ORMEnvironment use contentful_management.environment.Environment</span>\n<span class=\"n\">orm_env</span> <span class=\"o\">=</span> <span class=\"n\">ORMEnvironment</span><span class=\"o\">.</span><span class=\"n\">from_parent</span><span class=\"p\">(</span><span class=\"n\">environment</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h3>Content Type Model</h3>\n<hr>\n<ul>\n<li>Model your content type:\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contentful_orm.models</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contentful_orm.fields</span> <span class=\"kn\">import</span> <span class=\"n\">ArrayField</span><span class=\"p\">,</span> <span class=\"n\">BooleanField</span><span class=\"p\">,</span> <span class=\"n\">DateField</span><span class=\"p\">,</span> <span class=\"n\">DecimalField</span><span class=\"p\">,</span> <span class=\"n\">IntegerField</span><span class=\"p\">,</span> <span class=\"n\">MediaField</span><span class=\"p\">,</span> <span class=\"n\">ReferenceField</span><span class=\"p\">,</span> <span class=\"n\">SymbolField</span><span class=\"p\">,</span> <span class=\"n\">TextField</span><span class=\"p\">,</span> <span class=\"n\">LocationField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contentful_orm.fields.validations</span> <span class=\"kn\">import</span> <span class=\"n\">In</span><span class=\"p\">,</span> <span class=\"n\">Range</span><span class=\"p\">,</span> <span class=\"n\">Unique</span><span class=\"p\">,</span> <span class=\"n\">Size</span><span class=\"p\">,</span> <span class=\"n\">Regex</span><span class=\"p\">,</span> <span class=\"n\">ImageDimensions</span><span class=\"p\">,</span> <span class=\"n\">FileSize</span>\n\n<span class=\"c1\"># class name will become content type name</span>\n<span class=\"c1\"># class name in camel case will become content type id</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># docstring will become content type description</span>\n    <span class=\"sd\">\"\"\"Person model description</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">__display_field__</span> <span class=\"o\">=</span> <span class=\"s1\">'name'</span>\n\n    <span class=\"c1\"># Each field need to be a {SomeType}Field from contentful_orm.fields</span>\n    <span class=\"c1\"># Most of the fields have keyword argument: disabled, localized, omitted, required, validations and default</span>\n    <span class=\"c1\"># (disabled, localized, omitted and required default to False. validations defaults to []. default defaults to None)</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">SymbolField</span><span class=\"p\">(</span><span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Unique</span><span class=\"p\">,</span> <span class=\"n\">Regex</span><span class=\"p\">(</span><span class=\"s1\">'^</span><span class=\"se\">\\\\</span><span class=\"s1\">w[</span><span class=\"se\">\\\\</span><span class=\"s1\">w.-]*@([</span><span class=\"se\">\\\\</span><span class=\"s1\">w-]+</span><span class=\"se\">\\\\</span><span class=\"s1\">.)+[</span><span class=\"se\">\\\\</span><span class=\"s1\">w-]+$'</span><span class=\"p\">,</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s1\">'Invalid email address.'</span><span class=\"p\">)],</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">SymbolField</span><span class=\"p\">(</span><span class=\"n\">localized</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ArrayField takes an argument to specify content type</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">ArrayField</span><span class=\"p\">(</span><span class=\"n\">SymbolField</span><span class=\"p\">(</span><span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">In</span><span class=\"p\">([</span><span class=\"s1\">'Manager'</span><span class=\"p\">,</span> <span class=\"s1\">'Seller'</span><span class=\"p\">],</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s1\">'Invalid title'</span><span class=\"p\">)]),</span> <span class=\"n\">localized</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Range</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s1\">'age must be a positive integer.'</span><span class=\"p\">)])</span>\n    <span class=\"n\">created_date</span> <span class=\"o\">=</span> <span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">\"%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\">T%H:%M-00:00\"</span><span class=\"p\">))</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Company</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Company model description</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">__display_field__</span> <span class=\"o\">=</span> <span class=\"s1\">'name'</span>\n\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">SymbolField</span><span class=\"p\">(</span><span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Unique</span><span class=\"p\">],</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">employees</span> <span class=\"o\">=</span> <span class=\"n\">ArrayField</span><span class=\"p\">(</span><span class=\"n\">ReferenceField</span><span class=\"p\">(</span><span class=\"n\">model_set</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">Person</span><span class=\"p\">},</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s1\">'employee has to be a Person entry'</span><span class=\"p\">))</span>\n    <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">LocationField</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Product</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Product model description</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">__display_field__</span> <span class=\"o\">=</span> <span class=\"s1\">'name'</span>\n\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">SymbolField</span><span class=\"p\">(</span><span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Unique</span><span class=\"p\">],</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">localized</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ReferenceField takes an additional keyword argument model_set to restrict reference content type.</span>\n    <span class=\"c1\"># (Currently doesn't support reference to the content type itself)</span>\n    <span class=\"n\">seller</span> <span class=\"o\">=</span> <span class=\"n\">ReferenceField</span><span class=\"p\">(</span><span class=\"n\">model_set</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">Company</span><span class=\"p\">},</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s2\">\"seller has to be a Person or Company entry\"</span><span class=\"p\">)</span>\n    <span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">ArrayField</span><span class=\"p\">(</span>\n        <span class=\"n\">MediaField</span><span class=\"p\">(</span>\n            <span class=\"c1\"># validations takes a list of contentful_orm.fields.validations</span>\n            <span class=\"c1\"># See: https://www.contentful.com/r/knowledgebase/validations/ for details</span>\n            <span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"n\">ImageDimensions</span><span class=\"p\">(</span><span class=\"n\">max_width</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">max_height</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">),</span>\n                <span class=\"n\">FileSize</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">40000</span><span class=\"p\">,</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s1\">'Maximum file size is 40000 Bytes'</span><span class=\"p\">)</span>\n            <span class=\"p\">]),</span>\n        <span class=\"n\">validations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Size</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"s2\">\"At most 10 images\"</span><span class=\"p\">)]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">sponsored</span> <span class=\"o\">=</span> <span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">DecimalField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Create and publish the content type using model:\n<pre><span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n<span class=\"c1\"># Or</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Unpublish and delete the content type using model:\n<pre><span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">unpublish</span><span class=\"p\">(</span><span class=\"n\">Product</span><span class=\"p\">)</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">Product</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Add and publish entry:\n<pre><span class=\"n\">person1</span> <span class=\"o\">=</span> <span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'a@a.com'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Manager'</span><span class=\"p\">,</span> <span class=\"s1\">'Seller'</span><span class=\"p\">],</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">13</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n<span class=\"c1\"># You can specify entry id or it will randomly generate a UUID</span>\n<span class=\"n\">person2</span> <span class=\"o\">=</span> <span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'b@a.com'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Seller'</span><span class=\"p\">],</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">66</span><span class=\"p\">),</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'S9SN3JWKN3565D'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n<span class=\"n\">person3</span> <span class=\"o\">=</span> <span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'c@a.com'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Manager'</span><span class=\"p\">],</span> <span class=\"n\">created_date</span><span class=\"o\">=</span><span class=\"s1\">'2019-08-11T00:00-07:00'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n<span class=\"n\">company1</span> <span class=\"o\">=</span> <span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Company</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Contentful'</span><span class=\"p\">,</span> <span class=\"n\">employees</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">person1</span><span class=\"o\">.</span><span class=\"n\">to_link</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(),</span> <span class=\"n\">person2</span><span class=\"o\">.</span><span class=\"n\">to_link</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()]))</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n<span class=\"c1\"># Or</span>\n<span class=\"n\">product1</span> <span class=\"o\">=</span> <span class=\"n\">Product</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'ContentfulORM'</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Write your Contentful in ORM style!'</span><span class=\"p\">,</span>\n    <span class=\"n\">seller</span><span class=\"o\">=</span><span class=\"n\">company1</span><span class=\"o\">.</span><span class=\"n\">to_link</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(),</span>\n    <span class=\"n\">sponsored</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>\n<span class=\"p\">)</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">product1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Query:\n<pre><span class=\"c1\"># Query all entries of a content type</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Filter query</span>\n<span class=\"c1\"># ORMContentTypeEntriesProxy extends ContentTypeEntriesProxy with additional filter function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contentful_orm.operators</span> <span class=\"kn\">import</span> <span class=\"n\">all_</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">select</span><span class=\"p\">,</span> <span class=\"n\">skip</span>\n\n<span class=\"c1\"># Filter with field names as keyword arguments for exact search</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'c@a.com'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'c'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Filter with operators, see operators all at: https://github.com/Phoenix-Chen/ContentfulORM/blob/dev/contentful_orm/operators.py</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">all_</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Manager'</span><span class=\"p\">,</span> <span class=\"s1\">'seller'</span><span class=\"p\">]),</span> <span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'fields.name'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Use combination of both</span>\n<span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'c'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Serialize:\n<pre><span class=\"kn\">from</span> <span class=\"nn\">contentful_orm.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">ModelSerializer</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ProductSerializer</span><span class=\"p\">(</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Product</span>\n        <span class=\"c1\"># Specify fields to be serialized or use '__all__' for all the fields</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'description'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'price'</span>\n        <span class=\"p\">]</span>\n\n<span class=\"c1\"># Query the entry/entries you want to serialize</span>\n<span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">orm_env</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Product</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Serialize single entry</span>\n<span class=\"n\">serialized_product</span> <span class=\"o\">=</span> <span class=\"n\">ProductSerializer</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Serialize multiple entries</span>\n<span class=\"n\">serialized_products</span> <span class=\"o\">=</span> <span class=\"n\">ProductSerializer</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">,</span> <span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Currently links won't be recursively serialized, in case of circular references.</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5800795, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f5223f779706a0a186452aed9bf6b259", "sha256": "21da6cddb80e5615c6a4e3acfe671e5aedd9445116299b094d537e168c5dc263"}, "downloads": -1, "filename": "contentful_orm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5223f779706a0a186452aed9bf6b259", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11967, "upload_time": "2019-09-08T21:42:07", "upload_time_iso_8601": "2019-09-08T21:42:07.918743Z", "url": "https://files.pythonhosted.org/packages/7f/9d/a0fc901656a67824d053a6b0e4f1e0cd4b6afee4934e47e7d17365013adb/contentful_orm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e479c613a4fd5f456085abeccddc302b", "sha256": "472d8a396d68d235f6bcab7828b96872a42121e119b44a5b08c66bef95caabdc"}, "downloads": -1, "filename": "contentful_orm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e479c613a4fd5f456085abeccddc302b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11031, "upload_time": "2019-09-08T21:42:10", "upload_time_iso_8601": "2019-09-08T21:42:10.444704Z", "url": "https://files.pythonhosted.org/packages/d4/6a/fa88080f4288246f40f90c82f8b53aebdbeeafa295a4c3d228a0a7c8eba3/contentful_orm-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5223f779706a0a186452aed9bf6b259", "sha256": "21da6cddb80e5615c6a4e3acfe671e5aedd9445116299b094d537e168c5dc263"}, "downloads": -1, "filename": "contentful_orm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5223f779706a0a186452aed9bf6b259", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11967, "upload_time": "2019-09-08T21:42:07", "upload_time_iso_8601": "2019-09-08T21:42:07.918743Z", "url": "https://files.pythonhosted.org/packages/7f/9d/a0fc901656a67824d053a6b0e4f1e0cd4b6afee4934e47e7d17365013adb/contentful_orm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e479c613a4fd5f456085abeccddc302b", "sha256": "472d8a396d68d235f6bcab7828b96872a42121e119b44a5b08c66bef95caabdc"}, "downloads": -1, "filename": "contentful_orm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e479c613a4fd5f456085abeccddc302b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11031, "upload_time": "2019-09-08T21:42:10", "upload_time_iso_8601": "2019-09-08T21:42:10.444704Z", "url": "https://files.pythonhosted.org/packages/d4/6a/fa88080f4288246f40f90c82f8b53aebdbeeafa295a4c3d228a0a7c8eba3/contentful_orm-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:35 2020"}