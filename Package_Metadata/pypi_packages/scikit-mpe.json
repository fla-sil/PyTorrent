{"info": {"author": "Eugene Prilepin", "author_email": "esp.home@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries"], "description": "# scikit-mpe\n\n[![PyPI version](https://img.shields.io/pypi/v/scikit-mpe.svg)](https://pypi.python.org/pypi/scikit-mpe)\n[![Build status](https://travis-ci.org/espdev/scikit-mpe.svg?branch=master)](https://travis-ci.org/espdev/scikit-mpe)\n[![Documentation Status](https://readthedocs.org/projects/scikit-mpe/badge/?version=latest)](https://scikit-mpe.readthedocs.io/en/latest/?badge=latest)\n[![Coverage Status](https://coveralls.io/repos/github/espdev/scikit-mpe/badge.svg?branch=master)](https://coveralls.io/github/espdev/scikit-mpe?branch=master)\n![Supported Python versions](https://img.shields.io/pypi/pyversions/scikit-mpe.svg)\n[![License](https://img.shields.io/pypi/l/scikit-mpe.svg)](LICENSE)\n\n**scikit-mpe** is a package for extracting a minimal path in N-dimensional Euclidean space (on regular Cartesian grids) \nusing [the fast marching method](https://math.berkeley.edu/~sethian/2006/Explanations/fast_marching_explain.html).\n\n\n## Quickstart\n\n### Installing\n\n```\npip install -U scikit-mpe\n```\n\n### Usage\n\nHere is a simple example that demonstrates how to extract the path passing through the retina vessels.\n\n```python\nfrom matplotlib import pyplot as plt\n\nfrom skimage.data import retina\nfrom skimage.color import rgb2gray\nfrom skimage.transform import rescale\nfrom skimage.filters import sato\n\nfrom skmpe import mpe\n\nimage = rescale(rgb2gray(retina()), 0.5)\nspeed_image = sato(image)\n\nstart_point = (76, 388)\nend_point = (611, 442)\nway_points = [(330, 98), (554, 203)]\n\npath_info = mpe(speed_image, start_point, end_point, way_points)\n\npx, py = path_info.path[:, 1], path_info.path[:, 0]\n\nplt.imshow(image, cmap='gray')\nplt.plot(px, py, '-r')\n\nplt.plot(*start_point[::-1], 'oy')\nplt.plot(*end_point[::-1], 'og')\nfor p in way_points:\n    plt.plot(*p[::-1], 'ob')\n\nplt.show()\n```\n\n![retina_vessel_path](https://user-images.githubusercontent.com/1299189/73838143-0d74c380-4824-11ea-946a-667c8236ed75.png)\n\n## Documentation\n\nThe full documentation can be found at https://scikit-mpe.readthedocs.io/en/latest\n\n(The documentation is being written)\n\n## References\n\n- [Fast Marching Methods: A boundary value formulation](https://math.berkeley.edu/~sethian/2006/Explanations/fast_marching_explain.html)\n- [Level Set Methods and Fast Marching Methods](https://math.berkeley.edu/~sethian/2006/History/Menu_Expanded_History.html)\n- [scikit-fmm](https://github.com/scikit-fmm/scikit-fmm) - Python implementation of the fast marching method\n- [ITKMinimalPathExtraction](https://github.com/InsightSoftwareConsortium/ITKMinimalPathExtraction) - ITK based C++ implementation of MPE\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/espdev/scikit-mpe", "keywords": "mpe,fmm,minimal-path,fast-marching,fast-marching-method", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "scikit-mpe", "package_url": "https://pypi.org/project/scikit-mpe/", "platform": "", "project_url": "https://pypi.org/project/scikit-mpe/", "project_urls": {"Documentation": "https://scikit-mpe.readthedocs.io/en/latest", "Homepage": "https://github.com/espdev/scikit-mpe", "Repository": "https://github.com/espdev/scikit-mpe"}, "release_url": "https://pypi.org/project/scikit-mpe/0.1.1/", "requires_dist": ["numpy (>=1.18.1,<2.0.0)", "scipy (>=1.4.1,<2.0.0)", "scikit-fmm (>=2019.1.30,<2020.0.0)", "pydantic (>=1.4,<2.0)", "pytest (>=5.3.5,<6.0.0); extra == \"tests\"", "pytest-cov (>=2.8.1,<3.0.0); extra == \"tests\"", "coveralls (>=1.10.0,<2.0.0); extra == \"tests\"", "scikit-image (>=0.16.2,<0.17.0); extra == \"tests\"", "sphinx (>=2.3.1,<3.0.0); extra == \"docs\"", "matplotlib (>=3.1.3,<4.0.0); extra == \"docs\"", "numpydoc (>=0.9.2,<0.10.0); extra == \"docs\"", "m2r (>=0.2.1,<0.3.0); extra == \"docs\"", "toml (>=0.10.0,<0.11.0); extra == \"docs\""], "requires_python": ">=3.6,<4.0", "summary": "Minimal path extraction using the fast marching method", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>scikit-mpe</h1>\n<p><a href=\"https://pypi.python.org/pypi/scikit-mpe\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a6b11f46169c8e81784d8d27b78ed53fb6cb647/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7363696b69742d6d70652e737667\"></a>\n<a href=\"https://travis-ci.org/espdev/scikit-mpe\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bbe5c14e8f5c7925cd83dae93734f24ca5f1f79/68747470733a2f2f7472617669732d63692e6f72672f6573706465762f7363696b69742d6d70652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://scikit-mpe.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03af4fbcc004216c5bf9d86f4e73aa0f779b7c2c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7363696b69742d6d70652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/espdev/scikit-mpe?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4417891b433b29b683412e3b8c3fbe1031f2d99/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6573706465762f7363696b69742d6d70652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64f7dbc2a6fc3824a78fd936e4120cae5a8b55e1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7363696b69742d6d70652e737667\">\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87c3af347e915ec4005db888f05f9b4d242e956d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7363696b69742d6d70652e737667\"></a></p>\n<p><strong>scikit-mpe</strong> is a package for extracting a minimal path in N-dimensional Euclidean space (on regular Cartesian grids)\nusing <a href=\"https://math.berkeley.edu/%7Esethian/2006/Explanations/fast_marching_explain.html\" rel=\"nofollow\">the fast marching method</a>.</p>\n<h2>Quickstart</h2>\n<h3>Installing</h3>\n<pre><code>pip install -U scikit-mpe\n</code></pre>\n<h3>Usage</h3>\n<p>Here is a simple example that demonstrates how to extract the path passing through the retina vessels.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">skimage.data</span> <span class=\"kn\">import</span> <span class=\"n\">retina</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage.color</span> <span class=\"kn\">import</span> <span class=\"n\">rgb2gray</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage.transform</span> <span class=\"kn\">import</span> <span class=\"n\">rescale</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage.filters</span> <span class=\"kn\">import</span> <span class=\"n\">sato</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">skmpe</span> <span class=\"kn\">import</span> <span class=\"n\">mpe</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">rescale</span><span class=\"p\">(</span><span class=\"n\">rgb2gray</span><span class=\"p\">(</span><span class=\"n\">retina</span><span class=\"p\">()),</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">speed_image</span> <span class=\"o\">=</span> <span class=\"n\">sato</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n\n<span class=\"n\">start_point</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"mi\">388</span><span class=\"p\">)</span>\n<span class=\"n\">end_point</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">611</span><span class=\"p\">,</span> <span class=\"mi\">442</span><span class=\"p\">)</span>\n<span class=\"n\">way_points</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">330</span><span class=\"p\">,</span> <span class=\"mi\">98</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">554</span><span class=\"p\">,</span> <span class=\"mi\">203</span><span class=\"p\">)]</span>\n\n<span class=\"n\">path_info</span> <span class=\"o\">=</span> <span class=\"n\">mpe</span><span class=\"p\">(</span><span class=\"n\">speed_image</span><span class=\"p\">,</span> <span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"n\">way_points</span><span class=\"p\">)</span>\n\n<span class=\"n\">px</span><span class=\"p\">,</span> <span class=\"n\">py</span> <span class=\"o\">=</span> <span class=\"n\">path_info</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">path_info</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'gray'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">px</span><span class=\"p\">,</span> <span class=\"n\">py</span><span class=\"p\">,</span> <span class=\"s1\">'-r'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">start_point</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">'oy'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">end_point</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">'og'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">way_points</span><span class=\"p\">:</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">p</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">'ob'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"retina_vessel_path\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f52d9d3cbef571f8622f119f9576306a39f4f45c/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313239393138392f37333833383134332d30643734633338302d343832342d313165612d393436612d3636376338323336656437352e706e67\"></p>\n<h2>Documentation</h2>\n<p>The full documentation can be found at <a href=\"https://scikit-mpe.readthedocs.io/en/latest\" rel=\"nofollow\">https://scikit-mpe.readthedocs.io/en/latest</a></p>\n<p>(The documentation is being written)</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://math.berkeley.edu/%7Esethian/2006/Explanations/fast_marching_explain.html\" rel=\"nofollow\">Fast Marching Methods: A boundary value formulation</a></li>\n<li><a href=\"https://math.berkeley.edu/%7Esethian/2006/History/Menu_Expanded_History.html\" rel=\"nofollow\">Level Set Methods and Fast Marching Methods</a></li>\n<li><a href=\"https://github.com/scikit-fmm/scikit-fmm\" rel=\"nofollow\">scikit-fmm</a> - Python implementation of the fast marching method</li>\n<li><a href=\"https://github.com/InsightSoftwareConsortium/ITKMinimalPathExtraction\" rel=\"nofollow\">ITKMinimalPathExtraction</a> - ITK based C++ implementation of MPE</li>\n</ul>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6581942, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f78d963a38c0f7adcb18b5035c26c48e", "sha256": "846cf4d7133f2253d620bddc8b41e99a5adfb3b92be009a8eb854832cb3f8076"}, "downloads": -1, "filename": "scikit_mpe-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f78d963a38c0f7adcb18b5035c26c48e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11284, "upload_time": "2020-02-06T12:37:45", "upload_time_iso_8601": "2020-02-06T12:37:45.874779Z", "url": "https://files.pythonhosted.org/packages/bb/43/260ab55dea0b07e1d0b826ed16e0b36939ccff4dde8698a73169168806b7/scikit_mpe-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7d8dd2212cbac99ef8a33668a945d2a", "sha256": "00884ce173cb1d66dee745c9940c9da77788cbf6db021c0fd4f8444bd5f36fcf"}, "downloads": -1, "filename": "scikit-mpe-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e7d8dd2212cbac99ef8a33668a945d2a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10603, "upload_time": "2020-02-06T12:37:42", "upload_time_iso_8601": "2020-02-06T12:37:42.712569Z", "url": "https://files.pythonhosted.org/packages/60/b9/bafd2534873702fe98ae7361fa684b4208641564a8e5cb9e4612cf7b8357/scikit-mpe-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4487d4336da9a4ba0fd2bdb519c6cb9d", "sha256": "01934045c59ce485b62315064e7f75a502e6c937fd22673a3f97c9fd7b0abcb8"}, "downloads": -1, "filename": "scikit_mpe-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4487d4336da9a4ba0fd2bdb519c6cb9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11673, "upload_time": "2020-02-06T13:04:11", "upload_time_iso_8601": "2020-02-06T13:04:11.231619Z", "url": "https://files.pythonhosted.org/packages/2e/79/2bb86a0cc9b26aee8868718d322cb9925acdb7ec64ab69f79359693739eb/scikit_mpe-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5943ea6e47219f73878049b1341f210", "sha256": "24963913481d33b18739cce9997dfbdbc1db14899ae531e6b977cdab8da72a67"}, "downloads": -1, "filename": "scikit-mpe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e5943ea6e47219f73878049b1341f210", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 11402, "upload_time": "2020-02-06T13:04:09", "upload_time_iso_8601": "2020-02-06T13:04:09.481326Z", "url": "https://files.pythonhosted.org/packages/34/c8/712f7a1993274b4fcf686ff4e2c2aecafef58804027f4c9b712e57c48ce9/scikit-mpe-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4487d4336da9a4ba0fd2bdb519c6cb9d", "sha256": "01934045c59ce485b62315064e7f75a502e6c937fd22673a3f97c9fd7b0abcb8"}, "downloads": -1, "filename": "scikit_mpe-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4487d4336da9a4ba0fd2bdb519c6cb9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11673, "upload_time": "2020-02-06T13:04:11", "upload_time_iso_8601": "2020-02-06T13:04:11.231619Z", "url": "https://files.pythonhosted.org/packages/2e/79/2bb86a0cc9b26aee8868718d322cb9925acdb7ec64ab69f79359693739eb/scikit_mpe-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5943ea6e47219f73878049b1341f210", "sha256": "24963913481d33b18739cce9997dfbdbc1db14899ae531e6b977cdab8da72a67"}, "downloads": -1, "filename": "scikit-mpe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e5943ea6e47219f73878049b1341f210", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 11402, "upload_time": "2020-02-06T13:04:09", "upload_time_iso_8601": "2020-02-06T13:04:09.481326Z", "url": "https://files.pythonhosted.org/packages/34/c8/712f7a1993274b4fcf686ff4e2c2aecafef58804027f4c9b712e57c48ce9/scikit-mpe-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:29 2020"}