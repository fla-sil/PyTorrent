{"info": {"author": "Vincent Li", "author_email": "vincentliyx@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# mgzip\nA multi-threading implement of Python gzip module\n\nUsing a block indexed GZIP file format to enable compress and decompress in parallel. This implement use 'FEXTRA' to record the index of compressed member, which is defined in offical GZIP file format specification version 4.3, so it is fully compatible with normal GZIP implement.\n\nThis module is **~25X** faster for compression and **~7X** faster for decompression (limited by IO and Python implementation) with a *24 CPUs* computer.\n\n***In theoretical, compression and decompression acceleration should be linear according to the CPU cores. In fact, the performance is limited by IO and program language implementation.***\n\n## Usage\nUse same method as gzip module\n```python\nimport mgzip\n\ns = \"a big string...\"\n\n## Use 8 threads to compress.\n## None or 0 means using all CPUs (default)\n## Compression block size is set to 200MB\nwith mgzip.open(\"test.txt.gz\", \"wt\", thread=8, blocksize=2*10**8) as fw:\n    fw.write(s)\n\nwith mgzip.open(\"test.txt.gz\", \"rt\", thread=8) as fr:\n    assert fr.read(len(s)) == s\n```\n\n## Performance\n### Compression:\n![Compression Performance](https://raw.githubusercontent.com/vinlyx/mgzip/master/CompressionBenchmark.png)\n\n### Decompression:\n![Decompression Performance](https://raw.githubusercontent.com/vinlyx/mgzip/master/DecompressionBenchmark.png)\n\n*Brenchmarked on a 24 cores, 48 threads server (Xeon(R) CPU E5-2650 v4 @ 2.20GHz) with 8.0GB FASTQ text file.*\n\n*Using parameters thread=42 and blocksize=200000000*\n\n## Warning\n**This package only replace the 'GzipFile' class and 'open', 'compress', 'decompress' functions of standard gzip module. It is not well tested for other class and function.**\n\n**As the first release version, some features are not yet supported, such as seek() and tell(). Any contribution or improvement is appreciated.**", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vinlyx/mgzip", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mgzip", "package_url": "https://pypi.org/project/mgzip/", "platform": "", "project_url": "https://pypi.org/project/mgzip/", "project_urls": {"Homepage": "https://github.com/vinlyx/mgzip"}, "release_url": "https://pypi.org/project/mgzip/0.2.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A multi-threading implementation of Python gzip module", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mgzip</h1>\n<p>A multi-threading implement of Python gzip module</p>\n<p>Using a block indexed GZIP file format to enable compress and decompress in parallel. This implement use 'FEXTRA' to record the index of compressed member, which is defined in offical GZIP file format specification version 4.3, so it is fully compatible with normal GZIP implement.</p>\n<p>This module is <strong>~25X</strong> faster for compression and <strong>~7X</strong> faster for decompression (limited by IO and Python implementation) with a <em>24 CPUs</em> computer.</p>\n<p><em><strong>In theoretical, compression and decompression acceleration should be linear according to the CPU cores. In fact, the performance is limited by IO and program language implementation.</strong></em></p>\n<h2>Usage</h2>\n<p>Use same method as gzip module</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mgzip</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">\"a big string...\"</span>\n\n<span class=\"c1\">## Use 8 threads to compress.</span>\n<span class=\"c1\">## None or 0 means using all CPUs (default)</span>\n<span class=\"c1\">## Compression block size is set to 200MB</span>\n<span class=\"k\">with</span> <span class=\"n\">mgzip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"test.txt.gz\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wt\"</span><span class=\"p\">,</span> <span class=\"n\">thread</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">blocksize</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fw</span><span class=\"p\">:</span>\n    <span class=\"n\">fw</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">mgzip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"test.txt.gz\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rt\"</span><span class=\"p\">,</span> <span class=\"n\">thread</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fr</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">fr</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">s</span>\n</pre>\n<h2>Performance</h2>\n<h3>Compression:</h3>\n<p><img alt=\"Compression Performance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69767432f7933193b8e74cbc08dcd4e4ca411bed/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f76696e6c79782f6d677a69702f6d61737465722f436f6d7072657373696f6e42656e63686d61726b2e706e67\"></p>\n<h3>Decompression:</h3>\n<p><img alt=\"Decompression Performance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70852fb16016d308311903d0271b3aea8f4cf319/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f76696e6c79782f6d677a69702f6d61737465722f4465636f6d7072657373696f6e42656e63686d61726b2e706e67\"></p>\n<p><em>Brenchmarked on a 24 cores, 48 threads server (Xeon(R) CPU E5-2650 v4 @ 2.20GHz) with 8.0GB FASTQ text file.</em></p>\n<p><em>Using parameters thread=42 and blocksize=200000000</em></p>\n<h2>Warning</h2>\n<p><strong>This package only replace the 'GzipFile' class and 'open', 'compress', 'decompress' functions of standard gzip module. It is not well tested for other class and function.</strong></p>\n<p><strong>As the first release version, some features are not yet supported, such as seek() and tell(). Any contribution or improvement is appreciated.</strong></p>\n\n          </div>"}, "last_serial": 6840629, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a1897ec4958697bfe6877674661d2c49", "sha256": "e3007257e40b2ef43e0dfc6ab68cb8eb4a2295ba6e464615bbd493ad866b2991"}, "downloads": -1, "filename": "mgzip-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a1897ec4958697bfe6877674661d2c49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8389, "upload_time": "2019-07-21T16:15:06", "upload_time_iso_8601": "2019-07-21T16:15:06.015410Z", "url": "https://files.pythonhosted.org/packages/31/15/a3b03192874cb294336f8588f3fddd806b5dfc3a1843ddfa7a59c53c4dd5/mgzip-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ed66e248d7d66e7489390e03727d0e32", "sha256": "869c2c8ca31e2b3507e17ee1960f498bafc3e08ba61b36659657ebe0314242f5"}, "downloads": -1, "filename": "mgzip-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ed66e248d7d66e7489390e03727d0e32", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8684, "upload_time": "2019-11-27T01:34:10", "upload_time_iso_8601": "2019-11-27T01:34:10.976390Z", "url": "https://files.pythonhosted.org/packages/63/82/91664d3c6dbe946b509f671a4c47ff31ad108109bbd601dd8eb77076b18e/mgzip-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "00f034d30400ac47cc1e68c100f48520", "sha256": "c2585a8c6b66ec65c2a0ccbb13236cd60782b6a150ca7fd54fb6814825126876"}, "downloads": -1, "filename": "mgzip-0.2.1.tar.gz", "has_sig": false, "md5_digest": "00f034d30400ac47cc1e68c100f48520", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9629, "upload_time": "2020-03-19T01:37:33", "upload_time_iso_8601": "2020-03-19T01:37:33.714697Z", "url": "https://files.pythonhosted.org/packages/80/31/0f83d46a92aae1a39d6b78c22def34c6791de2a300f019695d6aee3e4e5a/mgzip-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "00f034d30400ac47cc1e68c100f48520", "sha256": "c2585a8c6b66ec65c2a0ccbb13236cd60782b6a150ca7fd54fb6814825126876"}, "downloads": -1, "filename": "mgzip-0.2.1.tar.gz", "has_sig": false, "md5_digest": "00f034d30400ac47cc1e68c100f48520", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9629, "upload_time": "2020-03-19T01:37:33", "upload_time_iso_8601": "2020-03-19T01:37:33.714697Z", "url": "https://files.pythonhosted.org/packages/80/31/0f83d46a92aae1a39d6b78c22def34c6791de2a300f019695d6aee3e4e5a/mgzip-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:26 2020"}