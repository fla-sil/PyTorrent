{"info": {"author": "Shinya Takamaeda-Yamazaki", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Veriloggen\n==============================\n\n[![Build Status](https://travis-ci.org/PyHDI/veriloggen.svg)](https://travis-ci.org/PyHDI/veriloggen)\n\nA Mixed-Paradigm Hardware Construction Framework\n\nCopyright 2015, Shinya Takamaeda-Yamazaki and Contributors\n\n\nLicense\n==============================\n\nApache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n\nPublication\n==============================\n\nIf you use Veriloggen in your research, please cite my paper about Pyverilog. (Veriloggen is constructed on Pyverilog.)\n\n- Shinya Takamaeda-Yamazaki: Pyverilog: A Python-based Hardware Design Processing Toolkit for Verilog HDL, 11th International Symposium on Applied Reconfigurable Computing (ARC 2015) (Poster), Lecture Notes in Computer Science, Vol.9040/2015, pp.451-460, April 2015.\n[Paper](http://link.springer.com/chapter/10.1007/978-3-319-16214-0_42)\n\n```\n@inproceedings{Takamaeda:2015:ARC:Pyverilog,\ntitle={Pyverilog: A Python-Based Hardware Design Processing Toolkit for Verilog HDL},\nauthor={Takamaeda-Yamazaki, Shinya},\nbooktitle={Applied Reconfigurable Computing},\nmonth={Apr},\nyear={2015},\npages={451-460},\nvolume={9040},\nseries={Lecture Notes in Computer Science},\npublisher={Springer International Publishing},\ndoi={10.1007/978-3-319-16214-0_42},\nurl={http://dx.doi.org/10.1007/978-3-319-16214-0_42},\n}\n```\n\n\nWhat's Veriloggen?\n==============================\n\nVeriloggen is a mixed-paradigm framework for constructing a hardware in Python.\n\nVeriloggen provides a low-level abstraction of Verilog HDL AST. You can build up a hardware design written in Verilog HDL very easily by using the AST abstraction and the entire functionality of Python.\n\nIn addition to the low-level abstraction of Verilog HDL, Veriloggen provides high-level abstractions to productively express a hardware structure.\n\n- **Stream** is a dataflow-based high-level synthesis layer for high-performance parallel stream processing.\n- **Thread** is a procedural high-level synthesis layer to express sequential behaviors, such as DMA transfers and controls.\n\nVeriloggen is not designed for designing a hardware by programmer directly, but is for providing an efficient abstraction to develop a more efficient domain specific language and tools.\n\n\nContribute to Veriloggen\n==============================\n\nVeriloggen project always welcomes questions, bug reports, feature proposals, and pull requests on [GitHub](https://github.com/PyHDI/veriloggen).\n\nfor questions, bug reports, and feature proposals\n--------------------\n\nPlease leave your comment on the [issue tracker](https://github.com/PyHDI/veriloggen/issues) on GitHub.\n\nfor pull requests\n--------------------\n\nPlease check \"CONTRIBUTORS.md\" for the contributors who provided pull requests.\n\nVeriloggen uses **pytest** for the integration testing. **When you send a pull request, please include a testing example with pytest.**\nTo write a testing code, please refer the existing testing examples in \"tests\" directory.\n\nIf the pull request code passes all the tests successfully and has no obvious problem, it will be merged to the *develop* branch by the main committers.\n\n\nInstallation\n==============================\n\nRequirements\n--------------------\n\n- Python3: 3.6 or later\n- Icarus Verilog: 10.1 or later\n\n```\nsudo apt install iverilog\n```\n\n- Jinja2: 2.10 or later\n- Pyverilog: 1.2.1 or later\n- NumPy: 1.17 or later\n\n```\npip3 install pyverilog jinja2 numpy\n```\n\nOptional installation for testing\n--------------------\n\nThese are required for automatic testing of **tests** and **examples**.\nWe recommend to install these testing library to verify experimental features.\n\n- pytest: 3.8.1 or later\n- pytest-pythonpath: 0.7.3 or later\n\n```\npip3 install pytest pytest-pythonpath\n```\n\nFor fast RTL simulation, we recommend to install Verilator.\n\n- Verilator: 3.916 or later\n\n```\nsudo apt install verilator\n```\n\nOptional installation for visualization\n--------------------\n\nTo visualize the generated hardware by veriloggen.stream, these libraries are required.\n\n- Graphviz: 2.38.0 or later\n- Pygraphviz: 1.3.1 or later\n\n```\nsudo apt install graphviz\npip3 install pygraphviz\n```\n\nInstall\n--------------------\n\nNow you can install Veriloggen using setup.py script:\n\n```\npython3 setup.py install\n```\n\nDocker\n--------------------\n\nDockerfile is available. You can try Veriloggen on Docker without any installation on your host platform.\n\n```\ncd docker\nsudo docker build -t user/veriloggen .\nsudo docker run --name veriloggen -i -t user/veriloggen /bin/bash\ncd veriloggen/examples/led/\nmake\n```\n\n\nExamples and testing\n==============================\n\nThere are some exapmles in **examples** and various testing codes in **tests**.\nThe testing codes are actually good small examples suggesting how to represent a desired function.\n\nTo run the testing codes, please type the following commands.\n\n```\ncd tests\npython3 -m pytest .\n```\n\nIf you use Verilator instead of Icarus Verilog for RTL simulation, set \"--sim\" option.\n\n```\npython3 -m pytest --sim=verilator .\n```\n\n\nGetting started\n==============================\n\nYou can find some examples in 'veriloggen/examples/' and 'veriloggen/tests'.\n\nLet's begin veriloggen by an example. Create a example Python script in Python as below. A blinking LED hardware is modeled in Python.\nOpen 'hello_led.py' in the root directory.\n\n```python\nfrom __future__ import absolute_import\nfrom __future__ import print_function\nimport sys\nimport os\nfrom veriloggen import *\n\n\ndef mkLed():\n    m = Module('blinkled')\n    width = m.Parameter('WIDTH', 8)\n    clk = m.Input('CLK')\n    rst = m.Input('RST')\n    led = m.OutputReg('LED', width, initval=0)\n    count = m.Reg('count', 32, initval=0)\n\n    seq = Seq(m, 'seq', clk, rst)\n\n    seq.If(count == 1024 - 1)(\n        count(0)\n    ).Else(\n        count.inc()\n    )\n\n    seq.If(count == 1024 - 1)(\n        led.inc()\n    )\n\n    seq(\n        Systask('display', \"LED:%d count:%d\", led, count)\n    )\n\n    return m\n\n\ndef mkTest():\n    m = Module('test')\n\n    # target instance\n    led = mkLed()\n\n    uut = Submodule(m, led, name='uut')\n    clk = uut['CLK']\n    rst = uut['RST']\n\n    simulation.setup_waveform(m, uut, m.get_vars())\n    simulation.setup_clock(m, clk, hperiod=5)\n    init = simulation.setup_reset(m, rst, m.make_reset(), period=100)\n\n    init.add(\n        Delay(1000 * 100),\n        Systask('finish'),\n    )\n\n    return m\n\nif __name__ == '__main__':\n    test = mkTest()\n    verilog = test.to_verilog(filename='tmp.v')\n    #verilog = test.to_verilog()\n    print(verilog)\n\n    sim = simulation.Simulator(test)\n    rslt = sim.run()\n    print(rslt)\n\n    # sim.view_waveform()\n```\n\nRun the script.\n\n```\npython3 hello_led.py\n```\n\nYou will have a complete Verilog HDL source code named 'tmp.v' as below, which is generated by the source code generator.\n\n```verilog\nmodule test\n(\n\n);\n\n  localparam uut_WIDTH = 8;\n  reg uut_CLK;\n  reg uut_RST;\n  wire [uut_WIDTH-1:0] uut_LED;\n\n  blinkled\n  uut\n  (\n    .CLK(uut_CLK),\n    .RST(uut_RST),\n    .LED(uut_LED)\n  );\n\n\n  initial begin\n    $dumpfile(\"uut.vcd\");\n    $dumpvars(0, uut, uut_CLK, uut_RST, uut_LED);\n  end\n\n\n  initial begin\n    uut_CLK = 0;\n    forever begin\n      #5 uut_CLK = !uut_CLK;\n    end\n  end\n\n\n  initial begin\n    uut_RST = 0;\n    #100;\n    uut_RST = 1;\n    #100;\n    uut_RST = 0;\n    #100000;\n    $finish;\n  end\n\n\nendmodule\n\n\n\nmodule blinkled #\n(\n  parameter WIDTH = 8\n)\n(\n  input CLK,\n  input RST,\n  output reg [WIDTH-1:0] LED\n);\n\n  reg [32-1:0] count;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      count <= 0;\n      LED <= 0;\n    end else begin\n      if(count == 1023) begin\n        count <= 0;\n      end else begin\n        count <= count + 1;\n      end\n      if(count == 1023) begin\n        LED <= LED + 1;\n      end \n      $display(\"LED:%d count:%d\", LED, count);\n    end\n  end\n\n\nendmodule\n```\n\nYou will also see the simulation result of the generated Verilog code on Icarus Verilog.\n\n```\nVCD info: dumpfile uut.vcd opened for output.\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  0 count:         0\nLED:  0 count:         1\nLED:  0 count:         2\nLED:  0 count:         3\nLED:  0 count:         4\n...\nLED:  9 count:       777\nLED:  9 count:       778\nLED:  9 count:       779\nLED:  9 count:       780\nLED:  9 count:       781\nLED:  9 count:       782\nLED:  9 count:       783\n```\n\nIf you installed GTKwave and enable 'sim.view_waveform()' in 'hello_led.py', you can see the waveform the simulation result.\n\n![waveform.png](img/waveform.png)\n\n\nVeriloggen extension libraries\n==============================\n\nMixed-paradigm high-level synthesis\n--------------------\n\n- veriloggen.thread.Thread: Procedural high-level synthesis for DMA and I/O controls\n- veriloggen.thread.Stream: Dataflow-based high-level synthesis for high-performance stream processing\n\nFrequently-used abstractions\n--------------------\n\n- veriloggen.verilog: Verilog HDL source code synthesis and import APIs\n- veriloggen.simulation: Simulation APIs via Verilog simulators\n- veriloggen.seq: Synchronous circuit builder (Seq)\n- veriloggen.fsm: Finite state machine builder (FSM)\n\nPlease see examples and tests directories for many examples.\n\n\nRelated project\n==============================\n\n[Pyverilog](https://github.com/PyHDI/Pyverilog)\n- Python-based Hardware Design Processing Toolkit for Verilog HDL\n\n[NNgen](https://github.com/NNgen/nngen)\n- A Fully-Customizable Hardware Synthesis Compiler for Deep Neural Network", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyHDI/veriloggen", "keywords": "FPGA,Verilog HDL,High-Level Synthesis", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "veriloggen", "package_url": "https://pypi.org/project/veriloggen/", "platform": "", "project_url": "https://pypi.org/project/veriloggen/", "project_urls": {"Homepage": "https://github.com/PyHDI/veriloggen"}, "release_url": "https://pypi.org/project/veriloggen/1.8.2/", "requires_dist": null, "requires_python": "", "summary": "A Mixed-Paradigm Hardware Construction Framework", "version": "1.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Veriloggen</h1>\n<p><a href=\"https://travis-ci.org/PyHDI/veriloggen\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7e681c024bba8038dc938d3f2745afcbc5cb65c/68747470733a2f2f7472617669732d63692e6f72672f50794844492f766572696c6f6767656e2e737667\"></a></p>\n<p>A Mixed-Paradigm Hardware Construction Framework</p>\n<p>Copyright 2015, Shinya Takamaeda-Yamazaki and Contributors</p>\n<h1>License</h1>\n<p>Apache License 2.0 (<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>)</p>\n<h1>Publication</h1>\n<p>If you use Veriloggen in your research, please cite my paper about Pyverilog. (Veriloggen is constructed on Pyverilog.)</p>\n<ul>\n<li>Shinya Takamaeda-Yamazaki: Pyverilog: A Python-based Hardware Design Processing Toolkit for Verilog HDL, 11th International Symposium on Applied Reconfigurable Computing (ARC 2015) (Poster), Lecture Notes in Computer Science, Vol.9040/2015, pp.451-460, April 2015.\n<a href=\"http://link.springer.com/chapter/10.1007/978-3-319-16214-0_42\" rel=\"nofollow\">Paper</a></li>\n</ul>\n<pre><code>@inproceedings{Takamaeda:2015:ARC:Pyverilog,\ntitle={Pyverilog: A Python-Based Hardware Design Processing Toolkit for Verilog HDL},\nauthor={Takamaeda-Yamazaki, Shinya},\nbooktitle={Applied Reconfigurable Computing},\nmonth={Apr},\nyear={2015},\npages={451-460},\nvolume={9040},\nseries={Lecture Notes in Computer Science},\npublisher={Springer International Publishing},\ndoi={10.1007/978-3-319-16214-0_42},\nurl={http://dx.doi.org/10.1007/978-3-319-16214-0_42},\n}\n</code></pre>\n<h1>What's Veriloggen?</h1>\n<p>Veriloggen is a mixed-paradigm framework for constructing a hardware in Python.</p>\n<p>Veriloggen provides a low-level abstraction of Verilog HDL AST. You can build up a hardware design written in Verilog HDL very easily by using the AST abstraction and the entire functionality of Python.</p>\n<p>In addition to the low-level abstraction of Verilog HDL, Veriloggen provides high-level abstractions to productively express a hardware structure.</p>\n<ul>\n<li><strong>Stream</strong> is a dataflow-based high-level synthesis layer for high-performance parallel stream processing.</li>\n<li><strong>Thread</strong> is a procedural high-level synthesis layer to express sequential behaviors, such as DMA transfers and controls.</li>\n</ul>\n<p>Veriloggen is not designed for designing a hardware by programmer directly, but is for providing an efficient abstraction to develop a more efficient domain specific language and tools.</p>\n<h1>Contribute to Veriloggen</h1>\n<p>Veriloggen project always welcomes questions, bug reports, feature proposals, and pull requests on <a href=\"https://github.com/PyHDI/veriloggen\" rel=\"nofollow\">GitHub</a>.</p>\n<h2>for questions, bug reports, and feature proposals</h2>\n<p>Please leave your comment on the <a href=\"https://github.com/PyHDI/veriloggen/issues\" rel=\"nofollow\">issue tracker</a> on GitHub.</p>\n<h2>for pull requests</h2>\n<p>Please check \"CONTRIBUTORS.md\" for the contributors who provided pull requests.</p>\n<p>Veriloggen uses <strong>pytest</strong> for the integration testing. <strong>When you send a pull request, please include a testing example with pytest.</strong>\nTo write a testing code, please refer the existing testing examples in \"tests\" directory.</p>\n<p>If the pull request code passes all the tests successfully and has no obvious problem, it will be merged to the <em>develop</em> branch by the main committers.</p>\n<h1>Installation</h1>\n<h2>Requirements</h2>\n<ul>\n<li>Python3: 3.6 or later</li>\n<li>Icarus Verilog: 10.1 or later</li>\n</ul>\n<pre><code>sudo apt install iverilog\n</code></pre>\n<ul>\n<li>Jinja2: 2.10 or later</li>\n<li>Pyverilog: 1.2.1 or later</li>\n<li>NumPy: 1.17 or later</li>\n</ul>\n<pre><code>pip3 install pyverilog jinja2 numpy\n</code></pre>\n<h2>Optional installation for testing</h2>\n<p>These are required for automatic testing of <strong>tests</strong> and <strong>examples</strong>.\nWe recommend to install these testing library to verify experimental features.</p>\n<ul>\n<li>pytest: 3.8.1 or later</li>\n<li>pytest-pythonpath: 0.7.3 or later</li>\n</ul>\n<pre><code>pip3 install pytest pytest-pythonpath\n</code></pre>\n<p>For fast RTL simulation, we recommend to install Verilator.</p>\n<ul>\n<li>Verilator: 3.916 or later</li>\n</ul>\n<pre><code>sudo apt install verilator\n</code></pre>\n<h2>Optional installation for visualization</h2>\n<p>To visualize the generated hardware by veriloggen.stream, these libraries are required.</p>\n<ul>\n<li>Graphviz: 2.38.0 or later</li>\n<li>Pygraphviz: 1.3.1 or later</li>\n</ul>\n<pre><code>sudo apt install graphviz\npip3 install pygraphviz\n</code></pre>\n<h2>Install</h2>\n<p>Now you can install Veriloggen using setup.py script:</p>\n<pre><code>python3 setup.py install\n</code></pre>\n<h2>Docker</h2>\n<p>Dockerfile is available. You can try Veriloggen on Docker without any installation on your host platform.</p>\n<pre><code>cd docker\nsudo docker build -t user/veriloggen .\nsudo docker run --name veriloggen -i -t user/veriloggen /bin/bash\ncd veriloggen/examples/led/\nmake\n</code></pre>\n<h1>Examples and testing</h1>\n<p>There are some exapmles in <strong>examples</strong> and various testing codes in <strong>tests</strong>.\nThe testing codes are actually good small examples suggesting how to represent a desired function.</p>\n<p>To run the testing codes, please type the following commands.</p>\n<pre><code>cd tests\npython3 -m pytest .\n</code></pre>\n<p>If you use Verilator instead of Icarus Verilog for RTL simulation, set \"--sim\" option.</p>\n<pre><code>python3 -m pytest --sim=verilator .\n</code></pre>\n<h1>Getting started</h1>\n<p>You can find some examples in 'veriloggen/examples/' and 'veriloggen/tests'.</p>\n<p>Let's begin veriloggen by an example. Create a example Python script in Python as below. A blinking LED hardware is modeled in Python.\nOpen 'hello_led.py' in the root directory.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">veriloggen</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">mkLed</span><span class=\"p\">():</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"s1\">'blinkled'</span><span class=\"p\">)</span>\n    <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s1\">'WIDTH'</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n    <span class=\"n\">clk</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"s1\">'CLK'</span><span class=\"p\">)</span>\n    <span class=\"n\">rst</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"s1\">'RST'</span><span class=\"p\">)</span>\n    <span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">OutputReg</span><span class=\"p\">(</span><span class=\"s1\">'LED'</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">initval</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Reg</span><span class=\"p\">(</span><span class=\"s1\">'count'</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">initval</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">seq</span> <span class=\"o\">=</span> <span class=\"n\">Seq</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"s1\">'seq'</span><span class=\"p\">,</span> <span class=\"n\">clk</span><span class=\"p\">,</span> <span class=\"n\">rst</span><span class=\"p\">)</span>\n\n    <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">If</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">==</span> <span class=\"mi\">1024</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)(</span>\n        <span class=\"n\">count</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Else</span><span class=\"p\">(</span>\n        <span class=\"n\">count</span><span class=\"o\">.</span><span class=\"n\">inc</span><span class=\"p\">()</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">If</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">==</span> <span class=\"mi\">1024</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)(</span>\n        <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">inc</span><span class=\"p\">()</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">seq</span><span class=\"p\">(</span>\n        <span class=\"n\">Systask</span><span class=\"p\">(</span><span class=\"s1\">'display'</span><span class=\"p\">,</span> <span class=\"s2\">\"LED:</span><span class=\"si\">%d</span><span class=\"s2\"> count:</span><span class=\"si\">%d</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">led</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">m</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">mkTest</span><span class=\"p\">():</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># target instance</span>\n    <span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">mkLed</span><span class=\"p\">()</span>\n\n    <span class=\"n\">uut</span> <span class=\"o\">=</span> <span class=\"n\">Submodule</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">led</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'uut'</span><span class=\"p\">)</span>\n    <span class=\"n\">clk</span> <span class=\"o\">=</span> <span class=\"n\">uut</span><span class=\"p\">[</span><span class=\"s1\">'CLK'</span><span class=\"p\">]</span>\n    <span class=\"n\">rst</span> <span class=\"o\">=</span> <span class=\"n\">uut</span><span class=\"p\">[</span><span class=\"s1\">'RST'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">simulation</span><span class=\"o\">.</span><span class=\"n\">setup_waveform</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">uut</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get_vars</span><span class=\"p\">())</span>\n    <span class=\"n\">simulation</span><span class=\"o\">.</span><span class=\"n\">setup_clock</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">clk</span><span class=\"p\">,</span> <span class=\"n\">hperiod</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">init</span> <span class=\"o\">=</span> <span class=\"n\">simulation</span><span class=\"o\">.</span><span class=\"n\">setup_reset</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">rst</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">make_reset</span><span class=\"p\">(),</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"n\">init</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n        <span class=\"n\">Delay</span><span class=\"p\">(</span><span class=\"mi\">1000</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">),</span>\n        <span class=\"n\">Systask</span><span class=\"p\">(</span><span class=\"s1\">'finish'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">m</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">mkTest</span><span class=\"p\">()</span>\n    <span class=\"n\">verilog</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">to_verilog</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'tmp.v'</span><span class=\"p\">)</span>\n    <span class=\"c1\">#verilog = test.to_verilog()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">verilog</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">simulation</span><span class=\"o\">.</span><span class=\"n\">Simulator</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span>\n    <span class=\"n\">rslt</span> <span class=\"o\">=</span> <span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rslt</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sim.view_waveform()</span>\n</pre>\n<p>Run the script.</p>\n<pre><code>python3 hello_led.py\n</code></pre>\n<p>You will have a complete Verilog HDL source code named 'tmp.v' as below, which is generated by the source code generator.</p>\n<pre><span class=\"k\">module</span> <span class=\"n\">test</span>\n<span class=\"p\">(</span>\n\n<span class=\"p\">);</span>\n\n  <span class=\"k\">localparam</span> <span class=\"n\">uut_WIDTH</span> <span class=\"o\">=</span> <span class=\"mh\">8</span><span class=\"p\">;</span>\n  <span class=\"kt\">reg</span> <span class=\"n\">uut_CLK</span><span class=\"p\">;</span>\n  <span class=\"kt\">reg</span> <span class=\"n\">uut_RST</span><span class=\"p\">;</span>\n  <span class=\"kt\">wire</span> <span class=\"p\">[</span><span class=\"n\">uut_WIDTH</span><span class=\"o\">-</span><span class=\"mh\">1</span><span class=\"o\">:</span><span class=\"mh\">0</span><span class=\"p\">]</span> <span class=\"n\">uut_LED</span><span class=\"p\">;</span>\n\n  <span class=\"n\">blinkled</span>\n  <span class=\"n\">uut</span>\n  <span class=\"p\">(</span>\n    <span class=\"p\">.</span><span class=\"n\">CLK</span><span class=\"p\">(</span><span class=\"n\">uut_CLK</span><span class=\"p\">),</span>\n    <span class=\"p\">.</span><span class=\"n\">RST</span><span class=\"p\">(</span><span class=\"n\">uut_RST</span><span class=\"p\">),</span>\n    <span class=\"p\">.</span><span class=\"n\">LED</span><span class=\"p\">(</span><span class=\"n\">uut_LED</span><span class=\"p\">)</span>\n  <span class=\"p\">);</span>\n\n\n  <span class=\"k\">initial</span> <span class=\"k\">begin</span>\n    <span class=\"n\">$dumpfile</span><span class=\"p\">(</span><span class=\"s\">\"uut.vcd\"</span><span class=\"p\">);</span>\n    <span class=\"n\">$dumpvars</span><span class=\"p\">(</span><span class=\"mh\">0</span><span class=\"p\">,</span> <span class=\"n\">uut</span><span class=\"p\">,</span> <span class=\"n\">uut_CLK</span><span class=\"p\">,</span> <span class=\"n\">uut_RST</span><span class=\"p\">,</span> <span class=\"n\">uut_LED</span><span class=\"p\">);</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"k\">initial</span> <span class=\"k\">begin</span>\n    <span class=\"n\">uut_CLK</span> <span class=\"o\">=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">forever</span> <span class=\"k\">begin</span>\n      <span class=\"p\">#</span><span class=\"mh\">5</span> <span class=\"n\">uut_CLK</span> <span class=\"o\">=</span> <span class=\"o\">!</span><span class=\"n\">uut_CLK</span><span class=\"p\">;</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"k\">initial</span> <span class=\"k\">begin</span>\n    <span class=\"n\">uut_RST</span> <span class=\"o\">=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">#</span><span class=\"mh\">100</span><span class=\"p\">;</span>\n    <span class=\"n\">uut_RST</span> <span class=\"o\">=</span> <span class=\"mh\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">#</span><span class=\"mh\">100</span><span class=\"p\">;</span>\n    <span class=\"n\">uut_RST</span> <span class=\"o\">=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">#</span><span class=\"mh\">100000</span><span class=\"p\">;</span>\n    <span class=\"nb\">$finish</span><span class=\"p\">;</span>\n  <span class=\"k\">end</span>\n\n\n<span class=\"k\">endmodule</span>\n\n\n\n<span class=\"k\">module</span> <span class=\"n\">blinkled</span> <span class=\"p\">#</span>\n<span class=\"p\">(</span>\n  <span class=\"k\">parameter</span> <span class=\"n\">WIDTH</span> <span class=\"o\">=</span> <span class=\"mh\">8</span>\n<span class=\"p\">)</span>\n<span class=\"p\">(</span>\n  <span class=\"k\">input</span> <span class=\"n\">CLK</span><span class=\"p\">,</span>\n  <span class=\"k\">input</span> <span class=\"n\">RST</span><span class=\"p\">,</span>\n  <span class=\"k\">output</span> <span class=\"kt\">reg</span> <span class=\"p\">[</span><span class=\"n\">WIDTH</span><span class=\"o\">-</span><span class=\"mh\">1</span><span class=\"o\">:</span><span class=\"mh\">0</span><span class=\"p\">]</span> <span class=\"n\">LED</span>\n<span class=\"p\">);</span>\n\n  <span class=\"kt\">reg</span> <span class=\"p\">[</span><span class=\"mh\">32</span><span class=\"o\">-</span><span class=\"mh\">1</span><span class=\"o\">:</span><span class=\"mh\">0</span><span class=\"p\">]</span> <span class=\"n\">count</span><span class=\"p\">;</span>\n\n  <span class=\"k\">always</span> <span class=\"p\">@(</span><span class=\"k\">posedge</span> <span class=\"n\">CLK</span><span class=\"p\">)</span> <span class=\"k\">begin</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">RST</span><span class=\"p\">)</span> <span class=\"k\">begin</span>\n      <span class=\"n\">count</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n      <span class=\"n\">LED</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">end</span> <span class=\"k\">else</span> <span class=\"k\">begin</span>\n      <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">==</span> <span class=\"mh\">1023</span><span class=\"p\">)</span> <span class=\"k\">begin</span>\n        <span class=\"n\">count</span> <span class=\"o\">&lt;=</span> <span class=\"mh\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">end</span> <span class=\"k\">else</span> <span class=\"k\">begin</span>\n        <span class=\"n\">count</span> <span class=\"o\">&lt;=</span> <span class=\"n\">count</span> <span class=\"o\">+</span> <span class=\"mh\">1</span><span class=\"p\">;</span>\n      <span class=\"k\">end</span>\n      <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">==</span> <span class=\"mh\">1023</span><span class=\"p\">)</span> <span class=\"k\">begin</span>\n        <span class=\"n\">LED</span> <span class=\"o\">&lt;=</span> <span class=\"n\">LED</span> <span class=\"o\">+</span> <span class=\"mh\">1</span><span class=\"p\">;</span>\n      <span class=\"k\">end</span> \n      <span class=\"nb\">$display</span><span class=\"p\">(</span><span class=\"s\">\"LED:%d count:%d\"</span><span class=\"p\">,</span> <span class=\"n\">LED</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">);</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n\n\n<span class=\"k\">endmodule</span>\n</pre>\n<p>You will also see the simulation result of the generated Verilog code on Icarus Verilog.</p>\n<pre><code>VCD info: dumpfile uut.vcd opened for output.\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  x count:         x\nLED:  0 count:         0\nLED:  0 count:         1\nLED:  0 count:         2\nLED:  0 count:         3\nLED:  0 count:         4\n...\nLED:  9 count:       777\nLED:  9 count:       778\nLED:  9 count:       779\nLED:  9 count:       780\nLED:  9 count:       781\nLED:  9 count:       782\nLED:  9 count:       783\n</code></pre>\n<p>If you installed GTKwave and enable 'sim.view_waveform()' in 'hello_led.py', you can see the waveform the simulation result.</p>\n<p><img alt=\"waveform.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa2bcb3494ba9e0fd541879295e1873cc3821e68/696d672f77617665666f726d2e706e67\"></p>\n<h1>Veriloggen extension libraries</h1>\n<h2>Mixed-paradigm high-level synthesis</h2>\n<ul>\n<li>veriloggen.thread.Thread: Procedural high-level synthesis for DMA and I/O controls</li>\n<li>veriloggen.thread.Stream: Dataflow-based high-level synthesis for high-performance stream processing</li>\n</ul>\n<h2>Frequently-used abstractions</h2>\n<ul>\n<li>veriloggen.verilog: Verilog HDL source code synthesis and import APIs</li>\n<li>veriloggen.simulation: Simulation APIs via Verilog simulators</li>\n<li>veriloggen.seq: Synchronous circuit builder (Seq)</li>\n<li>veriloggen.fsm: Finite state machine builder (FSM)</li>\n</ul>\n<p>Please see examples and tests directories for many examples.</p>\n<h1>Related project</h1>\n<p><a href=\"https://github.com/PyHDI/Pyverilog\" rel=\"nofollow\">Pyverilog</a></p>\n<ul>\n<li>Python-based Hardware Design Processing Toolkit for Verilog HDL</li>\n</ul>\n<p><a href=\"https://github.com/NNgen/nngen\" rel=\"nofollow\">NNgen</a></p>\n<ul>\n<li>A Fully-Customizable Hardware Synthesis Compiler for Deep Neural Network</li>\n</ul>\n\n          </div>"}, "last_serial": 7156803, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "63902dbbe799e76dd55231d1afd144f9", "sha256": "f0d97ccf4cf20bb0fa18fb2adc8815103310e82be43d5f063d4f5352fe89e6f0"}, "downloads": -1, "filename": "veriloggen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "63902dbbe799e76dd55231d1afd144f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9118, "upload_time": "2015-06-21T16:26:59", "upload_time_iso_8601": "2015-06-21T16:26:59.446164Z", "url": "https://files.pythonhosted.org/packages/13/7a/2dbec01e2152e939cfeb1ff28e6cd6e83d01b23442b175691122e5c81146/veriloggen-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "87700880358ecaec0ed3934be5265e61", "sha256": "33827e220e60286ffe2c0edec753fc1c5f992450e00ae56c6f478eab9548a4e5"}, "downloads": -1, "filename": "veriloggen-0.1.2.tar.gz", "has_sig": false, "md5_digest": "87700880358ecaec0ed3934be5265e61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115586, "upload_time": "2015-06-26T02:30:16", "upload_time_iso_8601": "2015-06-26T02:30:16.230625Z", "url": "https://files.pythonhosted.org/packages/1e/c9/86cd060d5771829d777586a2329f1b237cd6e8d02500a8839a562e7b3bc6/veriloggen-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "eaf4dabcd3837257d3d84f765ea7ad2a", "sha256": "3cbd39073dc91017f9ca35494f310c8ae36750023236a6a238dce5f1dd8c13a6"}, "downloads": -1, "filename": "veriloggen-0.1.3.tar.gz", "has_sig": false, "md5_digest": "eaf4dabcd3837257d3d84f765ea7ad2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118033, "upload_time": "2015-07-10T16:05:48", "upload_time_iso_8601": "2015-07-10T16:05:48.746776Z", "url": "https://files.pythonhosted.org/packages/03/bb/64531bad5d364fb3702395a27dad90c7934629f2ea91b31fd1bc807be498/veriloggen-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8ba146e5fbff5f2b5b20aa13f719f205", "sha256": "5c2482eba5b01297db86f203a2ed2b25b855acfc11b145dace71e525d69c2088"}, "downloads": -1, "filename": "veriloggen-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8ba146e5fbff5f2b5b20aa13f719f205", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125296, "upload_time": "2015-08-18T18:11:57", "upload_time_iso_8601": "2015-08-18T18:11:57.370268Z", "url": "https://files.pythonhosted.org/packages/76/b4/0597293ba7a86b70184370b21b1ddd6cebe2b54a6fbb08479ec8d0e7d8e6/veriloggen-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a4a35652ec9ca785521468b24766774c", "sha256": "fb3209777c9132efa82abc12022249a6018605db9b689bf540f9493800e50b04"}, "downloads": -1, "filename": "veriloggen-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a4a35652ec9ca785521468b24766774c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205312, "upload_time": "2015-09-09T06:55:46", "upload_time_iso_8601": "2015-09-09T06:55:46.466828Z", "url": "https://files.pythonhosted.org/packages/c4/c9/320ded1b907b21eda48e21f368dacf0cce9027d92c37d3d223d5a0764a95/veriloggen-0.3.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "219ef9c260ab3d4f1ed3dd9488ebca4e", "sha256": "872f127d266ae775cc79432284df5e582824b15f54655bfd11b9c62d86571412"}, "downloads": -1, "filename": "veriloggen-0.4.1.tar.gz", "has_sig": false, "md5_digest": "219ef9c260ab3d4f1ed3dd9488ebca4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70233, "upload_time": "2015-10-30T06:17:44", "upload_time_iso_8601": "2015-10-30T06:17:44.573885Z", "url": "https://files.pythonhosted.org/packages/f7/57/79ed58fc61b278a998c486a0b6317eaa246783f7b602736f52c580b6981c/veriloggen-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "e2a6d221abe1ab03da7ed0a1244a65d9", "sha256": "5b0bcbeb6c500d4142a159859b4472b96ac8921ed66fe024d83fd7738f9f274e"}, "downloads": -1, "filename": "veriloggen-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e2a6d221abe1ab03da7ed0a1244a65d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71242, "upload_time": "2015-10-31T18:07:00", "upload_time_iso_8601": "2015-10-31T18:07:00.806266Z", "url": "https://files.pythonhosted.org/packages/bc/cb/ece042daf697f63385342fa7241190cd4c0744d8a7ef098c482fa54bf1ad/veriloggen-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "de095bface67bc6d52304feaeb2ce59b", "sha256": "8b1ca66ac7f3a675a8939f0877c45612a5fc2036eabbca33867a444da32d5de9"}, "downloads": -1, "filename": "veriloggen-0.4.3.tar.gz", "has_sig": false, "md5_digest": "de095bface67bc6d52304feaeb2ce59b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72682, "upload_time": "2015-11-02T15:41:37", "upload_time_iso_8601": "2015-11-02T15:41:37.413635Z", "url": "https://files.pythonhosted.org/packages/ae/a4/2bda4cbc42cc9fad925f80ace9870958da16cc89f00b2182d1f463bc6cb1/veriloggen-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "a2396f47a2ec8fb10c760082c5104825", "sha256": "db8031ac31a7b490bcf34015f6f9b4db8f99215bbb0d06a2e236e849cb970439"}, "downloads": -1, "filename": "veriloggen-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a2396f47a2ec8fb10c760082c5104825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82690, "upload_time": "2015-11-16T15:27:35", "upload_time_iso_8601": "2015-11-16T15:27:35.913355Z", "url": "https://files.pythonhosted.org/packages/2c/c0/07597396ff9d2c52db06cfec94bb802205b40b066bacde52611ac96a417f/veriloggen-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "e51ec527d69880b44e525c3daaf901de", "sha256": "7207ed9396dcb7435d9a0cb4987ac458fccb6418c0ce45e693b86912ea2ce8eb"}, "downloads": -1, "filename": "veriloggen-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e51ec527d69880b44e525c3daaf901de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 179335, "upload_time": "2015-11-20T04:11:47", "upload_time_iso_8601": "2015-11-20T04:11:47.246861Z", "url": "https://files.pythonhosted.org/packages/52/c2/f60d00c3f2e5e5dc6936518e5a3e2ceb86aae89ff5b456befa952ba5eb6c/veriloggen-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "6b2876add7e4de6c7a45bff7efe61e8f", "sha256": "206fd7bebeff67acbfc717c8b41764448b6b65e8b03eae6478e20eb05ddc85d0"}, "downloads": -1, "filename": "veriloggen-0.5.2.tar.gz", "has_sig": false, "md5_digest": "6b2876add7e4de6c7a45bff7efe61e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180215, "upload_time": "2015-11-22T07:17:22", "upload_time_iso_8601": "2015-11-22T07:17:22.726825Z", "url": "https://files.pythonhosted.org/packages/89/f0/5c701a6a93d2d9ecaa3268f1c2d448f19aa5d98ac75196d3b76a52bd544c/veriloggen-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "62455def9dbd19413fbc5f3bfab5c62c", "sha256": "ede7a570b6cd147a8cfdf9896add0d38d46d07dae7b29a1c0b56f02224ad08a5"}, "downloads": -1, "filename": "veriloggen-0.5.3.tar.gz", "has_sig": false, "md5_digest": "62455def9dbd19413fbc5f3bfab5c62c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 182416, "upload_time": "2015-12-08T09:41:40", "upload_time_iso_8601": "2015-12-08T09:41:40.351538Z", "url": "https://files.pythonhosted.org/packages/fe/3d/05bb6fba8b3afe526441fdb5be37cf2ba46b608faa56fc4174b9b5b0d6d2/veriloggen-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "0341e1ec5d42cfc9cdead2a3bebdb914", "sha256": "0cbcfeef0d2ec9fd8a731572bcf5b6eeb24d2adf0b9bec6d83c91439af6a71e5"}, "downloads": -1, "filename": "veriloggen-0.5.4.tar.gz", "has_sig": false, "md5_digest": "0341e1ec5d42cfc9cdead2a3bebdb914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 183662, "upload_time": "2015-12-11T05:18:19", "upload_time_iso_8601": "2015-12-11T05:18:19.988899Z", "url": "https://files.pythonhosted.org/packages/69/bc/9715107b4d24a7bb6fc91898e91366f5e57eb0fee22bcce2e95456c31299/veriloggen-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "b241afb96ebece390595abb3143f9754", "sha256": "039c7db9ef70c4a63f8b8b25ce3a109b0b68c63dba670de7d7ab0820a0c2b78d"}, "downloads": -1, "filename": "veriloggen-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b241afb96ebece390595abb3143f9754", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342152, "upload_time": "2016-02-01T09:54:10", "upload_time_iso_8601": "2016-02-01T09:54:10.373272Z", "url": "https://files.pythonhosted.org/packages/60/87/fde3df233a5827b6150cf2c1354fd1b6d4a57a58b8bebc6186e50e6aa8b9/veriloggen-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "a92fd497c760ad4b60033029e7c6ffc6", "sha256": "84673e5f19c0917a9101496fefb603d34f6cefab9c90fe02952b268a68ada967"}, "downloads": -1, "filename": "veriloggen-0.6.1.tar.gz", "has_sig": false, "md5_digest": "a92fd497c760ad4b60033029e7c6ffc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 344614, "upload_time": "2016-03-01T08:00:13", "upload_time_iso_8601": "2016-03-01T08:00:13.450395Z", "url": "https://files.pythonhosted.org/packages/cd/43/20c3def2c9b8cc50d80d3de0b416b25ca7849fb5379a6c3fc3a2f136b58f/veriloggen-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f2fcaa30a35a8b60c0def2e4654830b7", "sha256": "84a8648c56f1f000e373a8b7ad051c5d8622e6d4cb915f825f430294e1bcbfe4"}, "downloads": -1, "filename": "veriloggen-0.7.0.tar.gz", "has_sig": false, "md5_digest": "f2fcaa30a35a8b60c0def2e4654830b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 456252, "upload_time": "2016-11-07T08:32:44", "upload_time_iso_8601": "2016-11-07T08:32:44.675975Z", "url": "https://files.pythonhosted.org/packages/1e/e7/d845b6e1613703c22289454df89aa5e7dafa4c9d9e4c37b2d292a3629375/veriloggen-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "e0587f77082f5c69ab1cb0c73bf80c91", "sha256": "97772f107936bbd5dc764a72808aa796b4e56fb93f12daab1fb600aaf6e9de04"}, "downloads": -1, "filename": "veriloggen-0.8.0.tar.gz", "has_sig": false, "md5_digest": "e0587f77082f5c69ab1cb0c73bf80c91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 612224, "upload_time": "2017-03-04T11:50:02", "upload_time_iso_8601": "2017-03-04T11:50:02.311879Z", "url": "https://files.pythonhosted.org/packages/9a/ca/d360f614ecc873f0796b91e8aef3996234a9b7314689f99a78517d6098d5/veriloggen-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "ddf40e736e14c014f801b3f7ff6554d4", "sha256": "24bf39942a2a7c1adb70351b46c4f59c3763695376198c09b51adb2aa8d1080b"}, "downloads": -1, "filename": "veriloggen-0.8.1.tar.gz", "has_sig": false, "md5_digest": "ddf40e736e14c014f801b3f7ff6554d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 964950, "upload_time": "2017-04-07T14:55:27", "upload_time_iso_8601": "2017-04-07T14:55:27.384038Z", "url": "https://files.pythonhosted.org/packages/9d/cb/24cae4b378861cdea2061060d1bc3b02125c72f1100e4ca13a5cb90c4419/veriloggen-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "4757f6b878a20f8048f312052ee2bfef", "sha256": "0cc8fb8beecdce2a467a18df2316f6d63978a4e3c9c7a3dc86c762e4b3bf948c"}, "downloads": -1, "filename": "veriloggen-0.8.2.tar.gz", "has_sig": false, "md5_digest": "4757f6b878a20f8048f312052ee2bfef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1022931, "upload_time": "2017-04-10T04:32:36", "upload_time_iso_8601": "2017-04-10T04:32:36.753328Z", "url": "https://files.pythonhosted.org/packages/7f/10/496535f1c57e9d72636e16f388dde3041ac2a8e8ab4e49a3bf58fe46e0ed/veriloggen-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "f3dec56447ca0ab0aac9be0edce1cf3e", "sha256": "05546502160e2df8abdedc6104db28379694dd899a209942a65ad32746d1691c"}, "downloads": -1, "filename": "veriloggen-0.8.3.tar.gz", "has_sig": false, "md5_digest": "f3dec56447ca0ab0aac9be0edce1cf3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031545, "upload_time": "2017-05-02T05:40:22", "upload_time_iso_8601": "2017-05-02T05:40:22.274838Z", "url": "https://files.pythonhosted.org/packages/a2/2e/33e1de77dc16c618d6acca601de52482bf117882a2678cb77d9dae7ee9aa/veriloggen-0.8.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "bb35919cce1cffe7b89cfb7af506e306", "sha256": "9d575c7654699c071802ee12ba8f0e4f1542fe3624c65ef3ceebf113d1b084bb"}, "downloads": -1, "filename": "veriloggen-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bb35919cce1cffe7b89cfb7af506e306", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1410514, "upload_time": "2017-10-01T03:45:13", "upload_time_iso_8601": "2017-10-01T03:45:13.715808Z", "url": "https://files.pythonhosted.org/packages/20/b4/41ba1e60798da765d3c35d7e03b3c56c6b9a104d00cc84c0892375de419e/veriloggen-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b21c57fbb7c78c60a6998ea315630db9", "sha256": "bd0e43c490a9a71b5cfc4a50b136f3f49f12d0d9f41a40180e68eddc1f19a667"}, "downloads": -1, "filename": "veriloggen-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b21c57fbb7c78c60a6998ea315630db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1417533, "upload_time": "2017-10-04T14:24:16", "upload_time_iso_8601": "2017-10-04T14:24:16.216086Z", "url": "https://files.pythonhosted.org/packages/4d/71/9c5572293c2acf1a50564d24b5c0ae675812079e5f8d3de786d041d7b7ca/veriloggen-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b9b8250bc72b81a4198b7eb756ae5cf8", "sha256": "e5a2cc7ce8667f63111315a68cb1f0fcf6dcbf09bcef5cd1ea6031a888228df1"}, "downloads": -1, "filename": "veriloggen-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b9b8250bc72b81a4198b7eb756ae5cf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1423224, "upload_time": "2017-10-06T17:04:51", "upload_time_iso_8601": "2017-10-06T17:04:51.990595Z", "url": "https://files.pythonhosted.org/packages/3a/23/b1ecf70beb48502a304697bd09426d7e2ae19d750050fd688249af3b8e49/veriloggen-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "01d46cf4af6914c7c07f2d8868fff15c", "sha256": "1cc64f43f570b7209a964dfb5d7a835928d29b801454d86235a7221896334148"}, "downloads": -1, "filename": "veriloggen-1.0.3.tar.gz", "has_sig": false, "md5_digest": "01d46cf4af6914c7c07f2d8868fff15c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1423284, "upload_time": "2017-10-07T14:00:31", "upload_time_iso_8601": "2017-10-07T14:00:31.760284Z", "url": "https://files.pythonhosted.org/packages/03/ca/9b0881092285edc881db0c63f7dfa01e6b06eb007ef9dbfe523151e4c9e9/veriloggen-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2159ea0cbf1cd1e33cf3434b233e7fb4", "sha256": "a1b7d90d08d23eb1d94f01a365f639b8b8dd2d42ff0687b58dc8a0eb60e2ae4c"}, "downloads": -1, "filename": "veriloggen-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2159ea0cbf1cd1e33cf3434b233e7fb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1435668, "upload_time": "2017-10-08T15:15:52", "upload_time_iso_8601": "2017-10-08T15:15:52.015369Z", "url": "https://files.pythonhosted.org/packages/c6/9e/1cc4cf14621391b55ca3e8cbc1c5e86778b60d6f3905898bf06264296ecc/veriloggen-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "0f15f01f1d2d0fdbea08849af96723c3", "sha256": "178a93353a0238682117ee036ea2ea28699cf69bcf06daa034dbd78c4890b226"}, "downloads": -1, "filename": "veriloggen-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0f15f01f1d2d0fdbea08849af96723c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1435816, "upload_time": "2017-10-09T14:25:48", "upload_time_iso_8601": "2017-10-09T14:25:48.370983Z", "url": "https://files.pythonhosted.org/packages/cd/8e/81d6f58db1284cb8bc26d74c04f00079e2aabbd015642ac7bf13bb8d9482/veriloggen-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "abc2524ded57f1aa24b796b3d56d5042", "sha256": "1f1c3ab6da4ff3ae9400c41ab92675a771382181e8d66b3f00e46c85b7ef19a0"}, "downloads": -1, "filename": "veriloggen-1.1.0-3.tar.gz", "has_sig": false, "md5_digest": "abc2524ded57f1aa24b796b3d56d5042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 850136, "upload_time": "2018-10-17T16:17:38", "upload_time_iso_8601": "2018-10-17T16:17:38.406536Z", "url": "https://files.pythonhosted.org/packages/c6/41/41436a5fab56228d6b9620b8911b497a9ca9a87b367795a8ab41431baff2/veriloggen-1.1.0-3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3fec40d51ad15322772c448f361ad596", "sha256": "54aceaf954ba58a9217954d18893abca62a4fc2add6cc95339ccadc2d38921fd"}, "downloads": -1, "filename": "veriloggen-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3fec40d51ad15322772c448f361ad596", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 856339, "upload_time": "2018-10-18T03:36:37", "upload_time_iso_8601": "2018-10-18T03:36:37.490498Z", "url": "https://files.pythonhosted.org/packages/02/c5/0ab691ad61722aa56fefde54c39f4219f5aa41e0946e3765c2238c0d1041/veriloggen-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "1de14c7a9d975364c3206fc2cf079158", "sha256": "b69495a018a57b3ae1011d3d00c2c05f292954607147a381a8f255c55ca7d787"}, "downloads": -1, "filename": "veriloggen-1.2.1.tar.gz", "has_sig": false, "md5_digest": "1de14c7a9d975364c3206fc2cf079158", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 856401, "upload_time": "2018-10-25T09:32:33", "upload_time_iso_8601": "2018-10-25T09:32:33.504563Z", "url": "https://files.pythonhosted.org/packages/90/fa/ce73545d772a55ef3ec947810a05b326aed8c97fdaa8a77a7abbd2b1b72c/veriloggen-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "0cc391ba1a662d924a2e36f6c082fe09", "sha256": "05151a8ef4d69060aaaeed7da7a375fc4d1ab738cf9c58107344bf9ec7685e4f"}, "downloads": -1, "filename": "veriloggen-1.2.2.tar.gz", "has_sig": false, "md5_digest": "0cc391ba1a662d924a2e36f6c082fe09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 856703, "upload_time": "2018-10-25T11:12:52", "upload_time_iso_8601": "2018-10-25T11:12:52.814118Z", "url": "https://files.pythonhosted.org/packages/b8/5a/e797da8a17894a09946b4eba10251bffff8510f79f7b7c32108d8ea0d0a7/veriloggen-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "f372021dc9b17f861039c9edc98038f1", "sha256": "1ee28a53e655d886b7b72a89f0ccffaab0e4d82c1d8f7984c7406d36ece49c9c"}, "downloads": -1, "filename": "veriloggen-1.2.3-1.tar.gz", "has_sig": false, "md5_digest": "f372021dc9b17f861039c9edc98038f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 856910, "upload_time": "2018-10-27T08:12:58", "upload_time_iso_8601": "2018-10-27T08:12:58.250598Z", "url": "https://files.pythonhosted.org/packages/36/1a/1167aac469a1f912eeccc773e8371b5de6d2b11fc8006dd8ec886caf1bbb/veriloggen-1.2.3-1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "58cfbe0ad100762599651b0201993598", "sha256": "a2137641e3baae1c77b0713f7435899fe2ae25254939d041261781b78dc1b54a"}, "downloads": -1, "filename": "veriloggen-1.3.0.tar.gz", "has_sig": false, "md5_digest": "58cfbe0ad100762599651b0201993598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 866150, "upload_time": "2018-11-11T12:53:29", "upload_time_iso_8601": "2018-11-11T12:53:29.080230Z", "url": "https://files.pythonhosted.org/packages/fa/4a/0eedebee99968e3aa7e32a9867f1c078ff2cc07d5da0248113b04511fcfe/veriloggen-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "3d5ea791681f91a05e1042c7f184b955", "sha256": "772281ba5d220621f59f7ce077308396cee0408c2ece8fdff85ae01e9d7c22ad"}, "downloads": -1, "filename": "veriloggen-1.3.1.tar.gz", "has_sig": false, "md5_digest": "3d5ea791681f91a05e1042c7f184b955", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 866120, "upload_time": "2018-11-13T08:48:45", "upload_time_iso_8601": "2018-11-13T08:48:45.551683Z", "url": "https://files.pythonhosted.org/packages/be/c5/75c9f75475334702332a630b8ac86b9771d8864ae2362caaf7325929e823/veriloggen-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "d58ea4e094122bb30818f9adacd18f6c", "sha256": "0b9467c659e345d214441061b5ff9cc8bde777b44649049f7056068803ec419e"}, "downloads": -1, "filename": "veriloggen-1.4.0.tar.gz", "has_sig": false, "md5_digest": "d58ea4e094122bb30818f9adacd18f6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867626, "upload_time": "2018-11-21T10:23:42", "upload_time_iso_8601": "2018-11-21T10:23:42.290749Z", "url": "https://files.pythonhosted.org/packages/43/3e/9c935ee230e42c8ab08c8705ba9c25b9a2357ec17b28f886e531580aa4c1/veriloggen-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "9525e10a7bb585720b1a925f462ae11f", "sha256": "18d352d25cc5e9362128869a155928ad6c1a6108355eff96acf7b6686a1c516b"}, "downloads": -1, "filename": "veriloggen-1.4.1.tar.gz", "has_sig": false, "md5_digest": "9525e10a7bb585720b1a925f462ae11f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867652, "upload_time": "2018-11-21T10:46:21", "upload_time_iso_8601": "2018-11-21T10:46:21.778146Z", "url": "https://files.pythonhosted.org/packages/af/77/f19ce6e7732f4fc891e104efe3ead1c3ba543c939cc97e4d26d145643b0f/veriloggen-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "6c26d8c6a0782c473db105e3aa67bde9", "sha256": "824579fb65cc908d4c703babfb75440202d568bb4a8064158dc24cca00522a4c"}, "downloads": -1, "filename": "veriloggen-1.4.2.tar.gz", "has_sig": false, "md5_digest": "6c26d8c6a0782c473db105e3aa67bde9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867705, "upload_time": "2018-11-21T11:21:28", "upload_time_iso_8601": "2018-11-21T11:21:28.356086Z", "url": "https://files.pythonhosted.org/packages/a6/6c/da085b8248683720d70ad0de0e964decea5b38c47cad6a270b687121c802/veriloggen-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "6ab83882e4cf2b8272aec2a689fd5d96", "sha256": "4c1232687f1d6829a31eb33602264b1db49aef066607c26025e3e497b05ec0af"}, "downloads": -1, "filename": "veriloggen-1.4.3.tar.gz", "has_sig": false, "md5_digest": "6ab83882e4cf2b8272aec2a689fd5d96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 868064, "upload_time": "2018-11-21T14:25:49", "upload_time_iso_8601": "2018-11-21T14:25:49.391726Z", "url": "https://files.pythonhosted.org/packages/7d/5c/36bb123731e22ec24b159c8ca99083517db4782792aee15817e6c74c9bc3/veriloggen-1.4.3.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "82475e30003a520ea1b3f132ae5052e3", "sha256": "abf453d2094f4069cf4870cf8f2c7b5b80513d992f40d635ba7bb539dc20b6f1"}, "downloads": -1, "filename": "veriloggen-1.4.4.tar.gz", "has_sig": false, "md5_digest": "82475e30003a520ea1b3f132ae5052e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 868004, "upload_time": "2018-11-21T14:45:06", "upload_time_iso_8601": "2018-11-21T14:45:06.690068Z", "url": "https://files.pythonhosted.org/packages/78/5a/5f248e131068d06b9dac844e272f3f61b4f34fe6fd13eb7c3722ed3393ee/veriloggen-1.4.4.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "00059140de241c958765bbe56c4de7c3", "sha256": "cef2d745f8cc04b34e4fbd32cf50779e2c55c9157ffeb18bc571fd9bbc4e8db2"}, "downloads": -1, "filename": "veriloggen-1.5.0.tar.gz", "has_sig": false, "md5_digest": "00059140de241c958765bbe56c4de7c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 885838, "upload_time": "2018-11-25T03:56:43", "upload_time_iso_8601": "2018-11-25T03:56:43.538089Z", "url": "https://files.pythonhosted.org/packages/0c/3e/be20ee34d47736331236c59623cf74367dfa6f7d560a9388e6fd02f3d000/veriloggen-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "12ccd05ce13e38c9d17d6eb7f1ddf1df", "sha256": "a7ac7735a40f632207ffba3067aba32add50a1546e817962d47902b8774fd413"}, "downloads": -1, "filename": "veriloggen-1.5.1.tar.gz", "has_sig": false, "md5_digest": "12ccd05ce13e38c9d17d6eb7f1ddf1df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 886090, "upload_time": "2018-11-25T15:28:01", "upload_time_iso_8601": "2018-11-25T15:28:01.032414Z", "url": "https://files.pythonhosted.org/packages/5c/44/0de1da2b194981f8f664ecc2e733eeb5d983ceea00fd6244957f4a2b67e8/veriloggen-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "d111f65b1ab3961506be193623ab8768", "sha256": "181865b8cd439e2e1c90106324b3d87ffe036c38d9df43205ae3c3bff52b625f"}, "downloads": -1, "filename": "veriloggen-1.5.2.tar.gz", "has_sig": false, "md5_digest": "d111f65b1ab3961506be193623ab8768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 885934, "upload_time": "2018-11-29T07:19:30", "upload_time_iso_8601": "2018-11-29T07:19:30.143940Z", "url": "https://files.pythonhosted.org/packages/a9/7e/da9b180ae013f0aa8c30a40573e2214924494de7650511fec452e87778b7/veriloggen-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "90da99eadd2773eeb871282f5586c233", "sha256": "85689b93038d2ee084de162ef74356042c0eed9a921c06e609f5d18981fcd0fd"}, "downloads": -1, "filename": "veriloggen-1.5.3.tar.gz", "has_sig": false, "md5_digest": "90da99eadd2773eeb871282f5586c233", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 889332, "upload_time": "2018-12-02T23:45:55", "upload_time_iso_8601": "2018-12-02T23:45:55.533822Z", "url": "https://files.pythonhosted.org/packages/21/e9/d98140356d90656a16431aa3c08374cae0f4d3937dd10e5b173a2e1af2ab/veriloggen-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "2b7a8a62149e134d71f0d4682a82ba8d", "sha256": "9099a4a06bbfb24597f2bba58d60c6a642f4645069da22f6a6597cdb4002bdd6"}, "downloads": -1, "filename": "veriloggen-1.5.4.tar.gz", "has_sig": false, "md5_digest": "2b7a8a62149e134d71f0d4682a82ba8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 887706, "upload_time": "2018-12-11T04:19:04", "upload_time_iso_8601": "2018-12-11T04:19:04.184833Z", "url": "https://files.pythonhosted.org/packages/49/74/dec02067523fd97c88289c49a7cc5fec0ccc897d9a0602b388c6ed4d3f85/veriloggen-1.5.4.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "0421be270b16bf90716250aa65b4b937", "sha256": "1022fe2a98a9e84930dd5c86e6c10619baac94c954fb4f8772f87ce681f09f99"}, "downloads": -1, "filename": "veriloggen-1.6.0.b.tar.gz", "has_sig": false, "md5_digest": "0421be270b16bf90716250aa65b4b937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 916440, "upload_time": "2019-04-18T07:33:22", "upload_time_iso_8601": "2019-04-18T07:33:22.878867Z", "url": "https://files.pythonhosted.org/packages/37/30/99d0ce4f30bd105cbb8865b9134cc3e3820959493141546143bd9d365444/veriloggen-1.6.0.b.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "2b79898ebfbba12637387e380a31f4dd", "sha256": "e578e2108b63979cb7b197be785b20806af97c83cc7e2cee1241fe3431e74ea5"}, "downloads": -1, "filename": "veriloggen-1.7.0.tar.gz", "has_sig": false, "md5_digest": "2b79898ebfbba12637387e380a31f4dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 924435, "upload_time": "2019-05-07T07:12:22", "upload_time_iso_8601": "2019-05-07T07:12:22.144569Z", "url": "https://files.pythonhosted.org/packages/0a/35/b96e11fc3be95954265d1fb220a2639d84a941e13a9a8c4490190e89cd06/veriloggen-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "1d780bf27911b9c8798fc4a49584936e", "sha256": "291ffc9cef6eceb6fae15dec4ccbb5c0cdacd984ffefd0319cc50403d26d02ba"}, "downloads": -1, "filename": "veriloggen-1.7.1.tar.gz", "has_sig": false, "md5_digest": "1d780bf27911b9c8798fc4a49584936e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 924460, "upload_time": "2019-05-08T09:39:13", "upload_time_iso_8601": "2019-05-08T09:39:13.939249Z", "url": "https://files.pythonhosted.org/packages/9b/85/8fbb046afec68894fd85bb4edd0acf278c9bb31f172a8dbd0b155b43fbd0/veriloggen-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "5f8a086c2244101feb2098a1e29ad61e", "sha256": "a819998143b35c2b1800e3b578a38c18dcab78e7dcb89f1143deedb945e1236a"}, "downloads": -1, "filename": "veriloggen-1.7.2-2.tar.gz", "has_sig": false, "md5_digest": "5f8a086c2244101feb2098a1e29ad61e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 929082, "upload_time": "2019-07-25T07:05:07", "upload_time_iso_8601": "2019-07-25T07:05:07.629072Z", "url": "https://files.pythonhosted.org/packages/0a/b0/3ebd2441f4475100b692779045ceb50aaaa4b99b40a74ab30c3134a5b6cd/veriloggen-1.7.2-2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "5b07cc16b58d7b7bc103f3596e7b8094", "sha256": "0bd665724d0a7acb3d6eed608e2b2554e5b32ecf092b46a11b0747828b4b53ad"}, "downloads": -1, "filename": "veriloggen-1.7.3.tar.gz", "has_sig": false, "md5_digest": "5b07cc16b58d7b7bc103f3596e7b8094", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 929215, "upload_time": "2019-08-29T08:49:25", "upload_time_iso_8601": "2019-08-29T08:49:25.352937Z", "url": "https://files.pythonhosted.org/packages/ec/92/e18fd13a9e0a749373f064b9518b847767bf8e43b4397eb1a7f4fda08eff/veriloggen-1.7.3.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "ae47c5d64664b6d6d7691b113dc14232", "sha256": "6a8a76ad041be4b2bb2fb3a5684d3ffb2864a88f35e2db9519d398881b0afd93"}, "downloads": -1, "filename": "veriloggen-1.8.0.tar.gz", "has_sig": false, "md5_digest": "ae47c5d64664b6d6d7691b113dc14232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 931946, "upload_time": "2019-11-19T11:19:47", "upload_time_iso_8601": "2019-11-19T11:19:47.142904Z", "url": "https://files.pythonhosted.org/packages/bf/c1/55c5d1e22eba858e1426f75e2747df64972e55721d9d1d09075ad61b6cbe/veriloggen-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "8be24a7bd107c6a3fa1cec3cda597bde", "sha256": "422d73e3ced7b7dd2c57cf3c7d91bb06f0ccdb58576eda02daa644a797a025f7"}, "downloads": -1, "filename": "veriloggen-1.8.1.tar.gz", "has_sig": false, "md5_digest": "8be24a7bd107c6a3fa1cec3cda597bde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 931236, "upload_time": "2019-11-30T04:53:35", "upload_time_iso_8601": "2019-11-30T04:53:35.922702Z", "url": "https://files.pythonhosted.org/packages/1a/7a/23be6e7636c8d872db24c6d903dac4d06629c6d889abef9c7a4aa90c5b62/veriloggen-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "", "digests": {"md5": "1718d58eebe9c7f5d1509a2bf271ed83", "sha256": "2eae2c69c36098142f140e4223cb4864c41cae63a87e988597979d3b31b1e498"}, "downloads": -1, "filename": "veriloggen-1.8.2.tar.gz", "has_sig": false, "md5_digest": "1718d58eebe9c7f5d1509a2bf271ed83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 954904, "upload_time": "2020-05-03T13:15:04", "upload_time_iso_8601": "2020-05-03T13:15:04.649824Z", "url": "https://files.pythonhosted.org/packages/32/f3/77407c3ab9ebf2fe22b8f4b2c91eb92ab9a778cac331efb5303389023df3/veriloggen-1.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1718d58eebe9c7f5d1509a2bf271ed83", "sha256": "2eae2c69c36098142f140e4223cb4864c41cae63a87e988597979d3b31b1e498"}, "downloads": -1, "filename": "veriloggen-1.8.2.tar.gz", "has_sig": false, "md5_digest": "1718d58eebe9c7f5d1509a2bf271ed83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 954904, "upload_time": "2020-05-03T13:15:04", "upload_time_iso_8601": "2020-05-03T13:15:04.649824Z", "url": "https://files.pythonhosted.org/packages/32/f3/77407c3ab9ebf2fe22b8f4b2c91eb92ab9a778cac331efb5303389023df3/veriloggen-1.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:49 2020"}