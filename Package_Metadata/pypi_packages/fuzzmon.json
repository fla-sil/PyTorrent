{"info": {"author": "Alex Moneger", "author_email": "alexmgr+github@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "fuzzmon\n=======\n\nEver wished you could just focus on data mutation and not fuzzing\ninstrumentation? Fuzzmon let's you do just that. It takes care of the\ninstrumentation and tracking of fuzzed inputs and let's you focus on\nbuilding a good data model or fuzzing transform.\n\nIt's an application layer proxy which attaches to the backend server to\ndetect faults. It's purpose is to record and proxy fuzzing traffic from\nclients, whilst gathering interesting crash information from the target\nusing ptrace.\n\nIt tries to solve the problem of some network fuzzers: **which input\ncaused which crash?** Since fuzzmon sees both the traffic in flight and\nthe state of the application, it knows which input triggered which\ncrash. It is also fast, since it does not require any form of fuzzing\nclient/server synchronization.\n\nOnce a crash happens, it records interesting information as JSON blobs,\nand either exits or restarts the target process. The information within\nthe JSON blob makes it easy to match the corresponding coredump. It also\nmakes it easy to perform initial analysis on the recorded JSON.\n\n``Fuzzmon`` also provides ``fuzzreplay``, which is able to replay a\ngiven JSON output against the server ## Installation #### From pypi\n\n::\n\n    pip install fuzzmon\n\nFrom github\n^^^^^^^^^^^\n\n::\n\n    git clone https://github.com/alexmgr/fuzzmon/\n\nFuzzmon usage\n-------------\n\nGet me started\n^^^^^^^^^^^^^^\n\nProxy all connections from tcp port ``1234`` to my target running on\nport ``6666``. Also start the process (``vuln-server 6666``)\n\n.. code:: python\n\n     \u00bb ./fuzzmon -d tcp:0.0.0.0:1234 -u tcp:127.0.0.1:6666 vuln-server 6666\n\nProxy all connections from udp port ``1234`` to my target running unix\nsocket ``\"/tmp/test\"``. Also start the process\n(``vuln-server /tmp/test``). Follow fork() and execve()\n\n.. code:: python\n\n     \u00bb ./fuzzmon -f -e -d udp:0.0.0.0:1234 -u tcp:uds:/tmp/test vuln-server /tmp/test\n\nProxy all connections to tcp port ``5555``, restart process\nautomatically on crash, but wait for ``45`` seconds before doing so.\nAlso set logging to ``DEBUG``, redirect target stdout/stderr and accept\n``10`` client connections:\n\n.. code:: python\n\n     \u00bb ./fuzzmon -w 45 -l DEBUG -n -c 10 -u tcp:127.0.0.1:5555 vuln-server 5555\n\nYou get the idea. #### A bit more detail Fuzzmon requires only 2\nmandatory arguments:\n\n1. The *binary and arguments* to run (or the *pid* (**-p**) to attach\n   to)\n\n2. The *upstream server* (**-u**) to connect to. Since fuzzmon uses\n   ptrace to monitor the target, both fuzzmon and the target server must\n   run on the same host. The following protocols are supported:\n\n-  IPv4 (TCP or UDP)\n-  IPv6 (TCP or UDP)\n-  Unix Domain Sockets (UDS) (TCP or UDP)\n\nDetailed usage\n^^^^^^^^^^^^^^\n\n::\n\n    usage: fuzzmon [-h] [-p PID] -u UPSTREAM [-d DOWNSTREAM] [-o OUTPUT]\n                   [-s SESSION] [-f] [-e] [-n] [-c CONNS] [-q | -w WAIT]\n                   [-l {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                   ...\n\n    A proxy which monitors the backend application state\n\n    positional arguments:\n      program               The command line to run and attach to\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -p PID, --pid PID     Attach running process specified by its identifier\n      -u UPSTREAM, --upstream UPSTREAM\n                            Upstream server to which to connect. Format is\n                            proto:host:port or uds:proto:file for Unix Domain\n                            Sockets\n      -d DOWNSTREAM, --downstream DOWNSTREAM\n                            IP and port to bind to, or UDS. Format is\n                            proto:host:port or uds:proto:file. By default, listen\n                            to TCP connections on port 25746\n      -o OUTPUT, --output OUTPUT\n                            Output folder where to store the crash metadata\n      -s SESSION, --session SESSION\n                            A session identifier for the fuzzing session\n      -f, --fork            Trace fork and child process\n      -e, --trace-exec      Trace execve() event\n      -n, --no-stdout       Use /dev/null as stdout/stderr, or close stdout and\n                            stderr if /dev/null doesn't exist\n      -c CONNS, --conns CONNS\n                            Number of downstream connections to accept in\n                            parallel. Default is 1\n      -q, --quit            Do not restart the program after a fault is detected.\n                            Exit cleanly\n      -w WAIT, --wait WAIT  How long to wait for before restarting the crashed\n                            process\n      -l {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                            Set the debugging level\n\nRecording crashes\n-----------------\n\nWhen a crash is detected, the following elements are extracted on\ncompatible OS: \\* ``pip``: pid \\* ``stream``: packets causing the crash\n(as well as previous packets within the stream) in hex format. Each\npacket is tagged with the direction is has been seen in (\"upstream\" or\n\"downstream\") \\* ``stream_count``: stream count since beginning of\nfuzzing in hex format \\* ``history``: history of previous streams (up to\n10) \\* ``backtrace``: backtrace \\* ``disassembly``: instruction causing\nthe crash, as well as the 10 following instructions \\* ``maps``: memory\nmappings \\* ``stack``: state of the stack \\* ``time``: time of the crash\n\\* ``signal``: signal \\* ``session_id``: fuzzing session identifier\n\nAll output is written to a JSON blob which is identified by the process\n**pid**. Example output from a test run:\n\n.. code:: python\n\n     \u00bb fuzzmon -q -n -l WARNING -f -e -s a_session_id -d tcp:0.0.0.0:1234 -u tcp:127.0.0.1:6666 vuln-server 6666\n     ....\n     \u00bb nc 127.0.0.1 1234                               \n    abcdefgh\n    1234567890\n    qwertyuiop\n    ^C\n     \u00bb nc 127.0.0.1 1234\n    i'm going to crash soon\n    it's coming\n    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n     \u00bb\n    WARNING:DebuggingHooks:Received signal 11 from process: 13223. Gathering crash information\n    WARNING:DebuggingHooks:Propagating signal 11 to child process: 13223\n    WARNING:PtraceDbg:Detached from process: 13223\n    WARNING:PtraceDbg:Terminated process: 13223\n    WARNING:DebuggingHooks:Stopped debugger. Exiting now\n    WARNING:DebuggingHooks:Upstream server crashed!\n    WARNING:Downstream:Upstream server appears to be dead: <socket._socketobject object at 0x1bfb600>\n    WARNING:Downstream:Stopped downstream server\n\n     \u00bb cat metadata/14612.json \n    {\n        \"stream\": [\n            [\n                \"downstream\", \n                \"547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a\"\n            ], \n            [\n                \"upstream\", \n                \"69276d20676f696e6720746f20637261736820736f6f6e0a\"\n            ], \n            [\n                \"downstream\", \n                \"6e6f6f73206873617263206f7420676e696f67206d27690a\"\n            ], \n            [\n                \"upstream\", \n                \"6974277320636f6d696e670a\"\n            ], \n            [\n                \"downstream\", \n                \"676e696d6f6320732774690a\"\n            ], \n            [\n                \"upstream\", \n                \"41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424343434343434343434343434343434343434343434343434343434343434343434343434343434344444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444440a\"\n            ]\n        ], \n        \"backtrace\": {\n            \"0x400ea1L\": [\n                \"???\", \n                []\n            ]\n        }, \n        \"pid\": 13223, \n        \"registers\": {\n            \"gs\": \"0x0000000000000000\", \n            \"gs_base\": \"0x0000000000000000\", \n            \"rip\": \"0x0000000000400ea1\", \n            \"rdx\": \"0x0000000000000000\", \n            \"fs\": \"0x0000000000000000\", \n            \"cs\": \"0x0000000000000033\", \n            \"rax\": \"0x00007fffd7ab84c0\", \n            \"rsi\": \"0x0000000000000000\", \n            \"rcx\": \"0x00000000000000fb\", \n            \"es\": \"0x0000000000000000\", \n            \"r14\": \"0x0000000000000000\", \n            \"r15\": \"0x0000000000000000\", \n            \"r12\": \"0x0000000000400a80\", \n            \"r13\": \"0x00007fffd7ab8850\", \n            \"r10\": \"0x0000000000000000\", \n            \"r11\": \"0x00007f26a52e09a8\", \n            \"orig_rax\": \"0xffffffffffffffff\", \n            \"fs_base\": \"0x00007f26a57eb700\", \n            \"rsp\": \"0x00007fffd7ab8778\", \n            \"ds\": \"0x0000000000000000\", \n            \"rbx\": \"0x0000000000000000\", \n            \"ss\": \"0x000000000000002b\", \n            \"r8\": \"0x0000000000000074\", \n            \"r9\": \"0x0000000000c00000\", \n            \"rbp\": \"0x4141414141414141\", \n            \"eflags\": \"0x0000000000010206\", \n            \"rdi\": \"0x00007fffd7ab86b4\"\n        }, \n        \"disassembly\": {\n            \"0x400ea1L\": \"RET\", \n            \"0x400ea2L\": \"PUSH RBP\", \n            \"0x400ea3L\": \"MOV RBP, RSP\", \n            \"0x400ea6L\": \"SUB RSP, 0x140\", \n            \"0x400eadL\": \"MOV [RBP-0x134], EDI\", \n            \"0x400eb3L\": \"MOV [RBP-0xa0], RDX\", \n            \"0x400ebaL\": \"MOV [RBP-0x98], RCX\", \n            \"0x400ec1L\": \"MOV [RBP-0x90], R8\", \n            \"0x400ec8L\": \"MOV [RBP-0x88], R9\", \n            \"0x400ecfL\": \"TEST AL, AL\"\n        }, \n        \"stack\": {\n            \"STACK\": \"0x00007fffd7a99000-0x00007fffd7aba000 => [stack] (rwxp)\", \n            \"STACK-40\": \"0x4242424242424242\", \n            \"STACK-32\": \"0x4242424242424242\", \n            \"STACK-24\": \"0x4142424242424242\", \n            \"STACK-16\": \"0x4141414141414141\", \n            \"STACK -8\": \"0x4141414141414141\", \n            \"STACK +0\": \"0x4141414141414141\", \n            \"STACK +8\": \"0x4141414141414141\", \n            \"STACK+16\": \"0x4141414141414141\", \n            \"STACK+24\": \"0x4141414141414141\", \n            \"STACK+32\": \"0x4141414141414141\", \n            \"STACK+40\": \"0x4141414141414141\"\n        }, \n        \"stream_count\": 1, \n        \"signal\": \"SIGSEGV\", \n        \"session_id\": \"a_session_id\", \n        \"maps\": [\n            [\n                [\n                    \"0x0000000000400000\", \n                    \"0x0000000000402000\"\n                ], \n                \"vuln-server\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0x0000000000601000\", \n                    \"0x0000000000602000\"\n                ], \n                \"vuln-server\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x000000000162e000\", \n                    \"0x000000000164f000\"\n                ], \n                \"[heap]\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a525d000\", \n                    \"0x00007f26a53df000\"\n                ], \n                \"/lib/x86_64-linux-gnu/libc-2.13.so\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0x00007f26a53df000\", \n                    \"0x00007f26a55df000\"\n                ], \n                \"/lib/x86_64-linux-gnu/libc-2.13.so\", \n                \"---p\"\n            ], \n            [\n                [\n                    \"0x00007f26a55df000\", \n                    \"0x00007f26a55e3000\"\n                ], \n                \"/lib/x86_64-linux-gnu/libc-2.13.so\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0x00007f26a55e3000\", \n                    \"0x00007f26a55e4000\"\n                ], \n                \"/lib/x86_64-linux-gnu/libc-2.13.so\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a55e4000\", \n                    \"0x00007f26a55e9000\"\n                ], \n                \"\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a55e9000\", \n                    \"0x00007f26a5609000\"\n                ], \n                \"/lib/x86_64-linux-gnu/ld-2.13.so\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0x00007f26a57ea000\", \n                    \"0x00007f26a57ed000\"\n                ], \n                \"\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a5805000\", \n                    \"0x00007f26a5808000\"\n                ], \n                \"\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a5808000\", \n                    \"0x00007f26a5809000\"\n                ], \n                \"/lib/x86_64-linux-gnu/ld-2.13.so\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0x00007f26a5809000\", \n                    \"0x00007f26a580a000\"\n                ], \n                \"/lib/x86_64-linux-gnu/ld-2.13.so\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007f26a580a000\", \n                    \"0x00007f26a580b000\"\n                ], \n                \"\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007fffd7a99000\", \n                    \"0x00007fffd7aba000\"\n                ], \n                \"[stack]\", \n                \"rwxp\"\n            ], \n            [\n                [\n                    \"0x00007fffd7ad4000\", \n                    \"0x00007fffd7ad6000\"\n                ], \n                \"[vvar]\", \n                \"r--p\"\n            ], \n            [\n                [\n                    \"0x00007fffd7ad6000\", \n                    \"0x00007fffd7ad8000\"\n                ], \n                \"[vdso]\", \n                \"r-xp\"\n            ], \n            [\n                [\n                    \"0xffffffffff600000\", \n                    \"0xffffffffff601000\"\n                ], \n                \"[vsyscall]\", \n                \"r-xp\"\n            ]\n        ], \n        \"time\": 1437179338.290207, \n        \"history\": [\n            [\n                [\n                    \"downstream\", \n                    \"547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a\"\n                ], \n                [\n                    \"upstream\", \n                    \"61626364656667680a\"\n                ], \n                [\n                    \"downstream\", \n                    \"68676665646362610a\"\n                ], \n                [\n                    \"upstream\", \n                    \"313233343536373839300a\"\n                ], \n                [\n                    \"downstream\", \n                    \"303938373635343332310a\"\n                ], \n                [\n                    \"upstream\", \n                    \"71776572747975696f700a\"\n                ], \n                [\n                    \"downstream\", \n                    \"706f69757974726577710a\"\n                ]\n            ]\n        ]\n    }\n\nBy setting the proper sysctls, you can record the pid in the coredump\nname. You should then have all the information needed to automatically\ntriage your crashes!\n\nFuzzreplay usage\n----------------\n\n``fuzzreplay`` allows to replay crashes recorded by ``fuzzmon``. Provide\nthe target server address as well as the JSON dump, and ``fuzzreplay``\nwill reproduce the crash. The last stream can be replayed or all streams\n(*-a*) in history can be replayed. That way it is possible to reproduce\ncrashes which take a specific set of requests to trigger. ####Get me\nstarted Just provide the target upstream server (*-u*) and the JSON to\nreplay. Note that you can replay crashes directly to the server, or\nthrough ``fuzzmon`` if you wish to leverage application layer\ntranslation\n\n.. code:: python\n\n    ./fuzzreplay tests/integration/replay-test.json -a -u tcp:10.212.223.52:1234\n    WARNING:root:Sleeping for 3 seconds before sending alive test\n    WARNING:root:Performing alive test against target\n    Replay of stream 0 did not crash the server\n    WARNING:root:Sleeping for 3 seconds before sending alive test\n    WARNING:root:Performing alive test against target\n    WARNING:root:Stream replay failed: [Errno 61] Connection refused\n    Successfully crashed server by replaying stream 1:\n    [[u'downstream', u'547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a'], [u'upstream', u'3131313131313131313131313131313131323332343334330a'], [u'downstream', u'3334333432333231313131313131313131313131313131310a'], [u'upstream', u'333235313435333235323335323532333534323532330a'], [u'downstream', u'333235323435333235323533323532333534313532330a'], [u'upstream', u'414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434444444444444444444444444444444444444444444444444444444444444444444444444444444444444545454545454545454545454545454545454545454545454545454545454545454545454545450a']]\n\nDetailed usage\n^^^^^^^^^^^^^^\n\n.. code:: python\n\n    usage: fuzzreplay [-h] -u UPSTREAM [-a] [-w WAIT]\n                      [-l {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                      filename\n\n    Replay streams captured by fuzzmon\n\n    positional arguments:\n      filename              JSON test case to replay\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -u UPSTREAM, --upstream UPSTREAM\n                            Upstream server to which to connect. Format is\n                            proto:host:port or uds:proto:file for Unix Domain\n                            Sockets\n      -a, --all             Also replay all packets from history\n      -w WAIT, --wait WAIT  Time to wait before performing alive test. Default is\n                            3 seconds\n      -l {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                            Set the debugging level", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexmgr/fuzzmon", "keywords": "proxy,fuzzing,debugger,ptrace,bsd", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "fuzzmon", "package_url": "https://pypi.org/project/fuzzmon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fuzzmon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alexmgr/fuzzmon"}, "release_url": "https://pypi.org/project/fuzzmon/0.4/", "requires_dist": null, "requires_python": null, "summary": "A transport layer proxy which monitors the target server using ptrace", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Ever wished you could just focus on data mutation and not fuzzing\ninstrumentation? Fuzzmon let\u2019s you do just that. It takes care of the\ninstrumentation and tracking of fuzzed inputs and let\u2019s you focus on\nbuilding a good data model or fuzzing transform.</p>\n<p>It\u2019s an application layer proxy which attaches to the backend server to\ndetect faults. It\u2019s purpose is to record and proxy fuzzing traffic from\nclients, whilst gathering interesting crash information from the target\nusing ptrace.</p>\n<p>It tries to solve the problem of some network fuzzers: <strong>which input\ncaused which crash?</strong> Since fuzzmon sees both the traffic in flight and\nthe state of the application, it knows which input triggered which\ncrash. It is also fast, since it does not require any form of fuzzing\nclient/server synchronization.</p>\n<p>Once a crash happens, it records interesting information as JSON blobs,\nand either exits or restarts the target process. The information within\nthe JSON blob makes it easy to match the corresponding coredump. It also\nmakes it easy to perform initial analysis on the recorded JSON.</p>\n<p><tt>Fuzzmon</tt> also provides <tt>fuzzreplay</tt>, which is able to replay a\ngiven JSON output against the server ## Installation #### From pypi</p>\n<pre>pip install fuzzmon\n</pre>\n<div id=\"from-github\">\n<h2>From github</h2>\n<pre>git clone https://github.com/alexmgr/fuzzmon/\n</pre>\n<div id=\"fuzzmon-usage\">\n<h3>Fuzzmon usage</h3>\n</div>\n</div>\n<div id=\"get-me-started\">\n<h2>Get me started</h2>\n<p>Proxy all connections from tcp port <tt>1234</tt> to my target running on\nport <tt>6666</tt>. Also start the process (<tt><span class=\"pre\">vuln-server</span> 6666</tt>)</p>\n<pre><span class=\"err\">\u00bb</span> <span class=\"o\">./</span><span class=\"n\">fuzzmon</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"p\">:</span><span class=\"mi\">1234</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span><span class=\"p\">:</span><span class=\"mi\">6666</span> <span class=\"n\">vuln</span><span class=\"o\">-</span><span class=\"n\">server</span> <span class=\"mi\">6666</span>\n</pre>\n<p>Proxy all connections from udp port <tt>1234</tt> to my target running unix\nsocket <tt>\"/tmp/test\"</tt>. Also start the process\n(<tt><span class=\"pre\">vuln-server</span> /tmp/test</tt>). Follow fork() and execve()</p>\n<pre><span class=\"err\">\u00bb</span> <span class=\"o\">./</span><span class=\"n\">fuzzmon</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">udp</span><span class=\"p\">:</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"p\">:</span><span class=\"mi\">1234</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"n\">uds</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">test</span> <span class=\"n\">vuln</span><span class=\"o\">-</span><span class=\"n\">server</span> <span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">test</span>\n</pre>\n<p>Proxy all connections to tcp port <tt>5555</tt>, restart process\nautomatically on crash, but wait for <tt>45</tt> seconds before doing so.\nAlso set logging to <tt>DEBUG</tt>, redirect target stdout/stderr and accept\n<tt>10</tt> client connections:</p>\n<pre><span class=\"err\">\u00bb</span> <span class=\"o\">./</span><span class=\"n\">fuzzmon</span> <span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"mi\">45</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">DEBUG</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">10</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span><span class=\"p\">:</span><span class=\"mi\">5555</span> <span class=\"n\">vuln</span><span class=\"o\">-</span><span class=\"n\">server</span> <span class=\"mi\">5555</span>\n</pre>\n<p>You get the idea. #### A bit more detail Fuzzmon requires only 2\nmandatory arguments:</p>\n<ol>\n<li>The <em>binary and arguments</em> to run (or the <em>pid</em> (<strong>-p</strong>) to attach\nto)</li>\n<li>The <em>upstream server</em> (<strong>-u</strong>) to connect to. Since fuzzmon uses\nptrace to monitor the target, both fuzzmon and the target server must\nrun on the same host. The following protocols are supported:</li>\n</ol>\n<ul>\n<li>IPv4 (TCP or UDP)</li>\n<li>IPv6 (TCP or UDP)</li>\n<li>Unix Domain Sockets (UDS) (TCP or UDP)</li>\n</ul>\n</div>\n<div id=\"detailed-usage\">\n<h2>Detailed usage</h2>\n<pre>usage: fuzzmon [-h] [-p PID] -u UPSTREAM [-d DOWNSTREAM] [-o OUTPUT]\n               [-s SESSION] [-f] [-e] [-n] [-c CONNS] [-q | -w WAIT]\n               [-l {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n               ...\n\nA proxy which monitors the backend application state\n\npositional arguments:\n  program               The command line to run and attach to\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PID, --pid PID     Attach running process specified by its identifier\n  -u UPSTREAM, --upstream UPSTREAM\n                        Upstream server to which to connect. Format is\n                        proto:host:port or uds:proto:file for Unix Domain\n                        Sockets\n  -d DOWNSTREAM, --downstream DOWNSTREAM\n                        IP and port to bind to, or UDS. Format is\n                        proto:host:port or uds:proto:file. By default, listen\n                        to TCP connections on port 25746\n  -o OUTPUT, --output OUTPUT\n                        Output folder where to store the crash metadata\n  -s SESSION, --session SESSION\n                        A session identifier for the fuzzing session\n  -f, --fork            Trace fork and child process\n  -e, --trace-exec      Trace execve() event\n  -n, --no-stdout       Use /dev/null as stdout/stderr, or close stdout and\n                        stderr if /dev/null doesn't exist\n  -c CONNS, --conns CONNS\n                        Number of downstream connections to accept in\n                        parallel. Default is 1\n  -q, --quit            Do not restart the program after a fault is detected.\n                        Exit cleanly\n  -w WAIT, --wait WAIT  How long to wait for before restarting the crashed\n                        process\n  -l {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the debugging level\n</pre>\n<div id=\"recording-crashes\">\n<h3>Recording crashes</h3>\n<p>When a crash is detected, the following elements are extracted on\ncompatible OS: * <tt>pip</tt>: pid * <tt>stream</tt>: packets causing the crash\n(as well as previous packets within the stream) in hex format. Each\npacket is tagged with the direction is has been seen in (\u201cupstream\u201d or\n\u201cdownstream\u201d) * <tt>stream_count</tt>: stream count since beginning of\nfuzzing in hex format * <tt>history</tt>: history of previous streams (up to\n10) * <tt>backtrace</tt>: backtrace * <tt>disassembly</tt>: instruction causing\nthe crash, as well as the 10 following instructions * <tt>maps</tt>: memory\nmappings * <tt>stack</tt>: state of the stack * <tt>time</tt>: time of the crash\n* <tt>signal</tt>: signal * <tt>session_id</tt>: fuzzing session identifier</p>\n<p>All output is written to a JSON blob which is identified by the process\n<strong>pid</strong>. Example output from a test run:</p>\n<pre> <span class=\"err\">\u00bb</span> <span class=\"n\">fuzzmon</span> <span class=\"o\">-</span><span class=\"n\">q</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">WARNING</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"n\">a_session_id</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"mf\">0.0</span><span class=\"p\">:</span><span class=\"mi\">1234</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span><span class=\"p\">:</span><span class=\"mi\">6666</span> <span class=\"n\">vuln</span><span class=\"o\">-</span><span class=\"n\">server</span> <span class=\"mi\">6666</span>\n <span class=\"o\">....</span>\n <span class=\"err\">\u00bb</span> <span class=\"n\">nc</span> <span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span> <span class=\"mi\">1234</span>\n<span class=\"n\">abcdefgh</span>\n<span class=\"mi\">1234567890</span>\n<span class=\"n\">qwertyuiop</span>\n<span class=\"o\">^</span><span class=\"n\">C</span>\n <span class=\"err\">\u00bb</span> <span class=\"n\">nc</span> <span class=\"mf\">127.0</span><span class=\"o\">.</span><span class=\"mf\">0.1</span> <span class=\"mi\">1234</span>\n<span class=\"n\">i</span><span class=\"s1\">'m going to crash soon</span>\n<span class=\"n\">it</span><span class=\"s1\">'s coming</span>\n<span class=\"n\">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>\n <span class=\"err\">\u00bb</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">DebuggingHooks</span><span class=\"p\">:</span><span class=\"n\">Received</span> <span class=\"n\">signal</span> <span class=\"mi\">11</span> <span class=\"kn\">from</span> <span class=\"nn\">process</span><span class=\"p\">:</span> <span class=\"mf\">13223.</span> <span class=\"n\">Gathering</span> <span class=\"n\">crash</span> <span class=\"n\">information</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">DebuggingHooks</span><span class=\"p\">:</span><span class=\"n\">Propagating</span> <span class=\"n\">signal</span> <span class=\"mi\">11</span> <span class=\"n\">to</span> <span class=\"n\">child</span> <span class=\"n\">process</span><span class=\"p\">:</span> <span class=\"mi\">13223</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">PtraceDbg</span><span class=\"p\">:</span><span class=\"n\">Detached</span> <span class=\"kn\">from</span> <span class=\"nn\">process</span><span class=\"p\">:</span> <span class=\"mi\">13223</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">PtraceDbg</span><span class=\"p\">:</span><span class=\"n\">Terminated</span> <span class=\"n\">process</span><span class=\"p\">:</span> <span class=\"mi\">13223</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">DebuggingHooks</span><span class=\"p\">:</span><span class=\"n\">Stopped</span> <span class=\"n\">debugger</span><span class=\"o\">.</span> <span class=\"n\">Exiting</span> <span class=\"n\">now</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">DebuggingHooks</span><span class=\"p\">:</span><span class=\"n\">Upstream</span> <span class=\"n\">server</span> <span class=\"n\">crashed</span><span class=\"err\">!</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">Downstream</span><span class=\"p\">:</span><span class=\"n\">Upstream</span> <span class=\"n\">server</span> <span class=\"n\">appears</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">dead</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">_socketobject</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x1bfb600</span><span class=\"o\">&gt;</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">Downstream</span><span class=\"p\">:</span><span class=\"n\">Stopped</span> <span class=\"n\">downstream</span> <span class=\"n\">server</span>\n\n <span class=\"err\">\u00bb</span> <span class=\"n\">cat</span> <span class=\"n\">metadata</span><span class=\"o\">/</span><span class=\"mf\">14612.</span><span class=\"n\">json</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"stream\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"69276d20676f696e6720746f20637261736820736f6f6e0a\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"6e6f6f73206873617263206f7420676e696f67206d27690a\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"6974277320636f6d696e670a\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"676e696d6f6320732774690a\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424343434343434343434343434343434343434343434343434343434343434343434343434343434344444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444440a\"</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"backtrace\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"0x400ea1L\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"???\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[]</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"pid\"</span><span class=\"p\">:</span> <span class=\"mi\">13223</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"registers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"gs\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"gs_base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rip\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000400ea1\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rdx\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"fs\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"cs\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000033\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rax\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007fffd7ab84c0\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rsi\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rcx\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00000000000000fb\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"es\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r14\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r15\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r12\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000400a80\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r13\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007fffd7ab8850\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r10\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r11\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007f26a52e09a8\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"orig_rax\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0xffffffffffffffff\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"fs_base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007f26a57eb700\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rsp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007fffd7ab8778\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"ds\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rbx\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"ss\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x000000000000002b\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r8\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000000074\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"r9\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000c00000\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rbp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"eflags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x0000000000010206\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"rdi\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007fffd7ab86b4\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"disassembly\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"0x400ea1L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RET\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ea2L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PUSH RBP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ea3L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV RBP, RSP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ea6L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SUB RSP, 0x140\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400eadL\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV [RBP-0x134], EDI\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400eb3L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV [RBP-0xa0], RDX\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ebaL\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV [RBP-0x98], RCX\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ec1L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV [RBP-0x90], R8\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ec8L\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MOV [RBP-0x88], R9\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"0x400ecfL\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TEST AL, AL\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"stack\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"STACK\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x00007fffd7a99000-0x00007fffd7aba000 =&gt; [stack] (rwxp)\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK-40\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4242424242424242\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK-32\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4242424242424242\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK-24\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4142424242424242\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK-16\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK -8\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK +0\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK +8\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK+16\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK+24\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK+32\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"STACK+40\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0x4141414141414141\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"stream_count\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"signal\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SIGSEGV\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"session_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"a_session_id\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"maps\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x0000000000400000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x0000000000402000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"vuln-server\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x0000000000601000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x0000000000602000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"vuln-server\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x000000000162e000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x000000000164f000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"[heap]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a525d000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a53df000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/libc-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a53df000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a55df000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/libc-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"---p\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a55df000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a55e3000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/libc-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a55e3000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a55e4000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/libc-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a55e4000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a55e9000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a55e9000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a5609000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/ld-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a57ea000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a57ed000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a5805000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a5808000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a5808000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a5809000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/ld-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a5809000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a580a000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"/lib/x86_64-linux-gnu/ld-2.13.so\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007f26a580a000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007f26a580b000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007fffd7a99000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007fffd7aba000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"[stack]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"rwxp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007fffd7ad4000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007fffd7ad6000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"[vvar]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r--p\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0x00007fffd7ad6000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0x00007fffd7ad8000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"[vdso]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"0xffffffffff600000\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"0xffffffffff601000\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"[vsyscall]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"r-xp\"</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mf\">1437179338.290207</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"history\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"61626364656667680a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"68676665646362610a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"313233343536373839300a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"303938373635343332310a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"upstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"71776572747975696f700a\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">\"downstream\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"706f69757974726577710a\"</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>By setting the proper sysctls, you can record the pid in the coredump\nname. You should then have all the information needed to automatically\ntriage your crashes!</p>\n</div>\n<div id=\"fuzzreplay-usage\">\n<h3>Fuzzreplay usage</h3>\n<p><tt>fuzzreplay</tt> allows to replay crashes recorded by <tt>fuzzmon</tt>. Provide\nthe target server address as well as the JSON dump, and <tt>fuzzreplay</tt>\nwill reproduce the crash. The last stream can be replayed or all streams\n(<em>-a</em>) in history can be replayed. That way it is possible to reproduce\ncrashes which take a specific set of requests to trigger. ####Get me\nstarted Just provide the target upstream server (<em>-u</em>) and the JSON to\nreplay. Note that you can replay crashes directly to the server, or\nthrough <tt>fuzzmon</tt> if you wish to leverage application layer\ntranslation</p>\n<pre><span class=\"o\">./</span><span class=\"n\">fuzzreplay</span> <span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">integration</span><span class=\"o\">/</span><span class=\"n\">replay</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">json</span> <span class=\"o\">-</span><span class=\"n\">a</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">tcp</span><span class=\"p\">:</span><span class=\"mf\">10.212</span><span class=\"o\">.</span><span class=\"mf\">223.52</span><span class=\"p\">:</span><span class=\"mi\">1234</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Sleeping</span> <span class=\"k\">for</span> <span class=\"mi\">3</span> <span class=\"n\">seconds</span> <span class=\"n\">before</span> <span class=\"n\">sending</span> <span class=\"n\">alive</span> <span class=\"n\">test</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Performing</span> <span class=\"n\">alive</span> <span class=\"n\">test</span> <span class=\"n\">against</span> <span class=\"n\">target</span>\n<span class=\"n\">Replay</span> <span class=\"n\">of</span> <span class=\"n\">stream</span> <span class=\"mi\">0</span> <span class=\"n\">did</span> <span class=\"ow\">not</span> <span class=\"n\">crash</span> <span class=\"n\">the</span> <span class=\"n\">server</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Sleeping</span> <span class=\"k\">for</span> <span class=\"mi\">3</span> <span class=\"n\">seconds</span> <span class=\"n\">before</span> <span class=\"n\">sending</span> <span class=\"n\">alive</span> <span class=\"n\">test</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Performing</span> <span class=\"n\">alive</span> <span class=\"n\">test</span> <span class=\"n\">against</span> <span class=\"n\">target</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Stream</span> <span class=\"n\">replay</span> <span class=\"n\">failed</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Errno</span> <span class=\"mi\">61</span><span class=\"p\">]</span> <span class=\"n\">Connection</span> <span class=\"n\">refused</span>\n<span class=\"n\">Successfully</span> <span class=\"n\">crashed</span> <span class=\"n\">server</span> <span class=\"n\">by</span> <span class=\"n\">replaying</span> <span class=\"n\">stream</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"p\">[[</span><span class=\"sa\">u</span><span class=\"s1\">'downstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'547970652051554954206f6e2061206c696e6520627920697473656c6620746f20717569740a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'upstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3131313131313131313131313131313131323332343334330a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'downstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'3334333432333231313131313131313131313131313131310a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'upstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'333235313435333235323335323532333534323532330a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'downstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'333235323435333235323533323532333534313532330a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'upstream'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434444444444444444444444444444444444444444444444444444444444444444444444444444444444444545454545454545454545454545454545454545454545454545454545454545454545454545450a'</span><span class=\"p\">]]</span>\n</pre>\n</div>\n</div>\n<div id=\"id1\">\n<h2>Detailed usage</h2>\n<pre><span class=\"n\">usage</span><span class=\"p\">:</span> <span class=\"n\">fuzzreplay</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">h</span><span class=\"p\">]</span> <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">UPSTREAM</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"n\">WAIT</span><span class=\"p\">]</span>\n                  <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"p\">{</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span><span class=\"n\">INFO</span><span class=\"p\">,</span><span class=\"n\">WARNING</span><span class=\"p\">,</span><span class=\"n\">ERROR</span><span class=\"p\">,</span><span class=\"n\">CRITICAL</span><span class=\"p\">}]</span>\n                  <span class=\"n\">filename</span>\n\n<span class=\"n\">Replay</span> <span class=\"n\">streams</span> <span class=\"n\">captured</span> <span class=\"n\">by</span> <span class=\"n\">fuzzmon</span>\n\n<span class=\"n\">positional</span> <span class=\"n\">arguments</span><span class=\"p\">:</span>\n  <span class=\"n\">filename</span>              <span class=\"n\">JSON</span> <span class=\"n\">test</span> <span class=\"n\">case</span> <span class=\"n\">to</span> <span class=\"n\">replay</span>\n\n<span class=\"n\">optional</span> <span class=\"n\">arguments</span><span class=\"p\">:</span>\n  <span class=\"o\">-</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"o\">--</span><span class=\"n\">help</span>            <span class=\"n\">show</span> <span class=\"n\">this</span> <span class=\"n\">help</span> <span class=\"n\">message</span> <span class=\"ow\">and</span> <span class=\"n\">exit</span>\n  <span class=\"o\">-</span><span class=\"n\">u</span> <span class=\"n\">UPSTREAM</span><span class=\"p\">,</span> <span class=\"o\">--</span><span class=\"n\">upstream</span> <span class=\"n\">UPSTREAM</span>\n                        <span class=\"n\">Upstream</span> <span class=\"n\">server</span> <span class=\"n\">to</span> <span class=\"n\">which</span> <span class=\"n\">to</span> <span class=\"n\">connect</span><span class=\"o\">.</span> <span class=\"n\">Format</span> <span class=\"ow\">is</span>\n                        <span class=\"n\">proto</span><span class=\"p\">:</span><span class=\"n\">host</span><span class=\"p\">:</span><span class=\"n\">port</span> <span class=\"ow\">or</span> <span class=\"n\">uds</span><span class=\"p\">:</span><span class=\"n\">proto</span><span class=\"p\">:</span><span class=\"n\">file</span> <span class=\"k\">for</span> <span class=\"n\">Unix</span> <span class=\"n\">Domain</span>\n                        <span class=\"n\">Sockets</span>\n  <span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"o\">--</span><span class=\"nb\">all</span>             <span class=\"n\">Also</span> <span class=\"n\">replay</span> <span class=\"nb\">all</span> <span class=\"n\">packets</span> <span class=\"kn\">from</span> <span class=\"nn\">history</span>\n  <span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"n\">WAIT</span><span class=\"p\">,</span> <span class=\"o\">--</span><span class=\"n\">wait</span> <span class=\"n\">WAIT</span>  <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">wait</span> <span class=\"n\">before</span> <span class=\"n\">performing</span> <span class=\"n\">alive</span> <span class=\"n\">test</span><span class=\"o\">.</span> <span class=\"n\">Default</span> <span class=\"ow\">is</span>\n                        <span class=\"mi\">3</span> <span class=\"n\">seconds</span>\n  <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"p\">{</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span><span class=\"n\">INFO</span><span class=\"p\">,</span><span class=\"n\">WARNING</span><span class=\"p\">,</span><span class=\"n\">ERROR</span><span class=\"p\">,</span><span class=\"n\">CRITICAL</span><span class=\"p\">},</span> <span class=\"o\">--</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">level</span> <span class=\"p\">{</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span><span class=\"n\">INFO</span><span class=\"p\">,</span><span class=\"n\">WARNING</span><span class=\"p\">,</span><span class=\"n\">ERROR</span><span class=\"p\">,</span><span class=\"n\">CRITICAL</span><span class=\"p\">}</span>\n                        <span class=\"n\">Set</span> <span class=\"n\">the</span> <span class=\"n\">debugging</span> <span class=\"n\">level</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2014835, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "69982644945c740d558b319dc8eacba9", "sha256": "becb51ac4c74030df436be0fa417fdc02c977c96f7268ae905e4b890a51e1411"}, "downloads": -1, "filename": "fuzzmon-0.4.tar.gz", "has_sig": false, "md5_digest": "69982644945c740d558b319dc8eacba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15475, "upload_time": "2016-03-18T18:28:32", "upload_time_iso_8601": "2016-03-18T18:28:32.804384Z", "url": "https://files.pythonhosted.org/packages/d7/91/7af8da8dc6da355e168c8ca7263770a801aace51bfd1b98b3952584356c3/fuzzmon-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69982644945c740d558b319dc8eacba9", "sha256": "becb51ac4c74030df436be0fa417fdc02c977c96f7268ae905e4b890a51e1411"}, "downloads": -1, "filename": "fuzzmon-0.4.tar.gz", "has_sig": false, "md5_digest": "69982644945c740d558b319dc8eacba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15475, "upload_time": "2016-03-18T18:28:32", "upload_time_iso_8601": "2016-03-18T18:28:32.804384Z", "url": "https://files.pythonhosted.org/packages/d7/91/7af8da8dc6da355e168c8ca7263770a801aace51bfd1b98b3952584356c3/fuzzmon-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:32 2020"}