{"info": {"author": "Zach Gates", "author_email": "zachgatestech@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable"], "description": "matphys v1.1.27\r\n\r\nA Python math and physics modules\r\n\r\n* Pascal's Triangle\r\n* Bell Triangle\r\n* Euler's Triangle\r\n* Euler's Constant\r\n* Power Series\r\n* Floyd's Triangle\r\n* Fibonacci Sequence\r\n\r\npascal module\r\n\r\nPascal's Triangle\r\n\r\n>>> from matphys import pascal\r\n>>> p = pascal.PascalTriangle(10) #arg is the number of rows wanted\r\n>>> p.read()\r\n[1]\r\n[1, 1]\r\n[1, 2, 1]\r\n[1, 3, 3, 1]\r\n[1, 4, 6, 4, 1]\r\n[1, 5, 10, 10, 5, 1]\r\n[1, 6, 15, 20, 15, 6, 1]\r\n[1, 7, 21, 35, 35, 21, 7, 1]\r\n[1, 8, 28, 56, 70, 56, 28, 8, 1]\r\n[1, 9, 36, 84, 126, 126, 84, 36, 9, 1]\r\n>>> p.row(5) #arg is row number\r\n16\r\n\r\n\r\nbell module\r\n\r\nBell Triangle\r\n\r\n>>> from matphys import bell\r\n>>> b = bell.BellTriangle(10) #arg is the number of rows wanted\r\n>>> b.read()\r\n[1]\r\n[1, 2]\r\n[2, 3, 5]\r\n[5, 7, 10, 15]\r\n[15, 20, 27, 37, 52]\r\n[52, 67, 87, 114, 151, 203]\r\n[203, 255, 322, 409, 523, 674, 877]\r\n[877, 1080, 1335, 1657, 2066, 2589, 3263, 4140]\r\n[4140, 5017, 6097, 7432, 9089, 11155, 13744, 17007, 21147]\r\n[21147, 25287, 30304, 36401, 43833, 52922, 64077, 77821, 94828, 115975]\r\n>>> b.row(5) #arg is row number\r\n151\r\n\r\n\r\nfloyd module\r\n\r\nFloyd's Triangle\r\n\r\n>>> from matphys import floyd\r\n>>> f = floyd.FloydTriangle(10) #arg is the number of rows wanted\r\n>>> f.read()\r\n[1]\r\n[2, 3]\r\n[4, 5, 6]\r\n[7, 8, 9, 10]\r\n[11, 12, 13, 14, 15]\r\n[16, 17, 18, 19, 20, 21]\r\n[22, 23, 24, 25, 26, 27, 28]\r\n[29, 30, 31, 32, 33, 34, 35, 36]\r\n[37, 38, 39, 40, 41, 42, 43, 44, 45]\r\n[46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\r\n>>> f.row(5) #arg is row number\r\n65\r\n\r\n\r\neuler module\r\n\r\nEuler's Triangle\r\n\r\n>>> from matphys import euler\r\n>>> e = euler.EulerTriangle(10) #arg is the number of rows wanted\r\n>>> e.read()\r\n[1]\r\n[1, 1]\r\n[1, 4, 1]\r\n[1, 11, 11, 1]\r\n[1, 26, 66, 26, 1]\r\n[1, 57, 302, 302, 57, 1]\r\n[1, 120, 1191, 2416, 1191, 120, 1]\r\n[1, 247, 4293, 15619, 15619, 4293, 247, 1]\r\n[1, 502, 14608, 88234, 156190, 88234, 14608, 502, 1]\r\n[1, 1013, 47840, 455192, 1310354, 1310354, 455192, 47840, 1013, 1]\r\n>>> e.row(5)\r\n120\r\n\r\nEuler's Number\r\n\r\nEuler's number is represented by (e) in mathematics\r\n\r\n>>> from matphys import euler\r\n>>> e = euler.EulerNumber(128500000) #arg is the precision\r\n>>> e.read()\r\n2.7182818243\r\n\r\nEuler's Constant\r\n\r\nEuler's Constant is represented by gamma (\u03b3) in mathematics\r\n\r\n>>> from matphys import euler\r\n>>> e = euler.EulerConstant(10000000) #arg is the precision of the constant\r\n>>> e.read()\r\n0.577265664068\r\n\r\nPower Series\r\n\r\n>>> from matphys import euler\r\n>>> p = euler.PowerSeries(10, 10) #args are (n, x)\r\n>>> p.read()\r\n12842.305114638448\r\n\r\n\r\nfibonacci module\r\n\r\nFibonacci Sequence\r\n\r\n>>> from matphys import fibonacci\r\n>>> f = fibonacci.FibonacciSequence(10) #arg is the sequence out to the nth term\r\n>>> f.read()\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/zachgates7/matphys/tarball/v1.1.27", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zachgates7/matphys", "keywords": "math, physics, euler, fibonacci, pascal", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "matphys", "package_url": "https://pypi.org/project/matphys/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/matphys/", "project_urls": {"Download": "https://github.com/zachgates7/matphys/tarball/v1.1.27", "Homepage": "https://github.com/zachgates7/matphys"}, "release_url": "https://pypi.org/project/matphys/1.1.27/", "requires_dist": null, "requires_python": null, "summary": "A Python math and physics module", "version": "1.1.27", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>matphys v1.1.27</p>\n<p>A Python math and physics modules</p>\n<ul>\n<li>Pascal\u2019s Triangle</li>\n<li>Bell Triangle</li>\n<li>Euler\u2019s Triangle</li>\n<li>Euler\u2019s Constant</li>\n<li>Power Series</li>\n<li>Floyd\u2019s Triangle</li>\n<li>Fibonacci Sequence</li>\n</ul>\n<p>pascal module</p>\n<p>Pascal\u2019s Triangle</p>\n<pre>&gt;&gt;&gt; from matphys import pascal\n&gt;&gt;&gt; p = pascal.PascalTriangle(10) #arg is the number of rows wanted\n&gt;&gt;&gt; p.read()\n[1]\n[1, 1]\n[1, 2, 1]\n[1, 3, 3, 1]\n[1, 4, 6, 4, 1]\n[1, 5, 10, 10, 5, 1]\n[1, 6, 15, 20, 15, 6, 1]\n[1, 7, 21, 35, 35, 21, 7, 1]\n[1, 8, 28, 56, 70, 56, 28, 8, 1]\n[1, 9, 36, 84, 126, 126, 84, 36, 9, 1]\n&gt;&gt;&gt; p.row(5) #arg is row number\n16\n</pre>\n<p>bell module</p>\n<p>Bell Triangle</p>\n<pre>&gt;&gt;&gt; from matphys import bell\n&gt;&gt;&gt; b = bell.BellTriangle(10) #arg is the number of rows wanted\n&gt;&gt;&gt; b.read()\n[1]\n[1, 2]\n[2, 3, 5]\n[5, 7, 10, 15]\n[15, 20, 27, 37, 52]\n[52, 67, 87, 114, 151, 203]\n[203, 255, 322, 409, 523, 674, 877]\n[877, 1080, 1335, 1657, 2066, 2589, 3263, 4140]\n[4140, 5017, 6097, 7432, 9089, 11155, 13744, 17007, 21147]\n[21147, 25287, 30304, 36401, 43833, 52922, 64077, 77821, 94828, 115975]\n&gt;&gt;&gt; b.row(5) #arg is row number\n151\n</pre>\n<p>floyd module</p>\n<p>Floyd\u2019s Triangle</p>\n<pre>&gt;&gt;&gt; from matphys import floyd\n&gt;&gt;&gt; f = floyd.FloydTriangle(10) #arg is the number of rows wanted\n&gt;&gt;&gt; f.read()\n[1]\n[2, 3]\n[4, 5, 6]\n[7, 8, 9, 10]\n[11, 12, 13, 14, 15]\n[16, 17, 18, 19, 20, 21]\n[22, 23, 24, 25, 26, 27, 28]\n[29, 30, 31, 32, 33, 34, 35, 36]\n[37, 38, 39, 40, 41, 42, 43, 44, 45]\n[46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n&gt;&gt;&gt; f.row(5) #arg is row number\n65\n</pre>\n<p>euler module</p>\n<p>Euler\u2019s Triangle</p>\n<pre>&gt;&gt;&gt; from matphys import euler\n&gt;&gt;&gt; e = euler.EulerTriangle(10) #arg is the number of rows wanted\n&gt;&gt;&gt; e.read()\n[1]\n[1, 1]\n[1, 4, 1]\n[1, 11, 11, 1]\n[1, 26, 66, 26, 1]\n[1, 57, 302, 302, 57, 1]\n[1, 120, 1191, 2416, 1191, 120, 1]\n[1, 247, 4293, 15619, 15619, 4293, 247, 1]\n[1, 502, 14608, 88234, 156190, 88234, 14608, 502, 1]\n[1, 1013, 47840, 455192, 1310354, 1310354, 455192, 47840, 1013, 1]\n&gt;&gt;&gt; e.row(5)\n120\n</pre>\n<p>Euler\u2019s Number</p>\n<p>Euler\u2019s number is represented by (e) in mathematics</p>\n<pre>&gt;&gt;&gt; from matphys import euler\n&gt;&gt;&gt; e = euler.EulerNumber(128500000) #arg is the precision\n&gt;&gt;&gt; e.read()\n2.7182818243\n</pre>\n<p>Euler\u2019s Constant</p>\n<p>Euler\u2019s Constant is represented by gamma (\u03b3) in mathematics</p>\n<pre>&gt;&gt;&gt; from matphys import euler\n&gt;&gt;&gt; e = euler.EulerConstant(10000000) #arg is the precision of the constant\n&gt;&gt;&gt; e.read()\n0.577265664068\n</pre>\n<p>Power Series</p>\n<pre>&gt;&gt;&gt; from matphys import euler\n&gt;&gt;&gt; p = euler.PowerSeries(10, 10) #args are (n, x)\n&gt;&gt;&gt; p.read()\n12842.305114638448\n</pre>\n<p>fibonacci module</p>\n<p>Fibonacci Sequence</p>\n<pre>&gt;&gt;&gt; from matphys import fibonacci\n&gt;&gt;&gt; f = fibonacci.FibonacciSequence(10) #arg is the sequence out to the nth term\n&gt;&gt;&gt; f.read()\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n</pre>\n\n          </div>"}, "last_serial": 1438198, "releases": {"1.1.27": []}, "urls": [], "timestamp": "Fri May  8 00:57:19 2020"}