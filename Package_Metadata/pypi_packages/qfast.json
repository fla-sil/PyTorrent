{"info": {"author": "Ed Younis", "author_email": "edyounis@berkeley.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Compilers"], "description": "# QFAST: Quantum Fast Approximate Synthesis Tool\n\nQFAST is a quantum synthesis tool designed to produce short circuits and to scale well in practice. QFAST uses a mathematical model of circuits encoding both gate placement and function. This is packaged together with a hierarchical stochastic gradient descent formulation that combines \u201ccoarse-grained\u201d fast optimization during circuit structure search with a better, but slower, stage only in the final circuit refinement.\n\n## Installation\n\nThe best way to install this python package is with pip.\n\n```\npip install qfast\n```\n\n## Usage\n\nQFAST can be used to convert a quantum operation specified by a unitary matrix into a circuit given by [openqasm](https://github.com/Qiskit/openqasm) code. There is a command-line interface provided with qfast that can be accessed by `python -m qfast`. This can be used to synthesize a matrix.\n\n```\npython -m qfast --unitary-file=input.unitary --qasm-file=output.qasm --native-tool=kak\n```\n\nHere the `input.unitary` file is a NumPy matrix saved with [np.savetxt](https://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html), the qasm output will be saved in the `output.qasm` file and the KAK native tool will be used. The command-line help option `python -m qfast -h` can be used for further information.\n\nQFAST can also be used as a library, [an example](https://github.com/edyounis/qfast/blob/master/examples/synthesize_qft4.py) is included.\n\n### Native Tools\n\nNative tools are necessary for QFAST to perform instantiation. During decomposition, the input unitary matrix is hierarchically broken into many smaller unitaries. At some level in the hierarchy, QFAST switches to instantiation using a native synthesis tool to perform the final step.\n\nIncluded with this python package is the KAK native tool. Here are some others:\n\n- [qfast-uq](https://github.com/edyounis/qfast-uq): A UniversalQCompiler native tool\n- [qfast-sc](https://github.com/edyounis/qfast-sc): A Search Compiler native tool\n\n## References\n\nYounis, Ed, et al. \"[QFAST: Quantum Synthesis Using a Hierarchical Continuous Circuit Space.](https://arxiv.org/abs/2003.04462)\" arXiv preprint arXiv:2003.04462 (2020).\n\n## Copyright\n\nQuantum Fast Approximate Synthesis Tool (QFAST) Copyright (c) 2020,\nThe Regents of the University of California, through Lawrence Berkeley\nNational Laboratory (subject to receipt of any required approvals from\nthe U.S. Dept. of Energy). All rights reserved.\n\nIf you have questions about your rights to use or distribute this software,\nplease contact Berkeley Lab's Intellectual Property Office at\nIPO@lbl.gov.\n\nNOTICE.  This Software was developed under funding from the U.S. Department\nof Energy and the U.S. Government consequently retains certain rights.  As\nsuch, the U.S. Government has been granted for itself and others acting on\nits behalf a paid-up, nonexclusive, irrevocable, worldwide license in the\nSoftware to reproduce, distribute copies to the public, prepare derivative \nworks, and perform publicly and display publicly, and to permit others to do so.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/edyounis/qfast", "keywords": "quantum synthesis compilation", "license": "", "maintainer": "", "maintainer_email": "", "name": "qfast", "package_url": "https://pypi.org/project/qfast/", "platform": "", "project_url": "https://pypi.org/project/qfast/", "project_urls": {"Bug Tracker": "https://github.com/edyounis/qfast/issues", "Homepage": "https://github.com/edyounis/qfast", "Source Code": "https://github.com/edyounis/qfast"}, "release_url": "https://pypi.org/project/qfast/1.0.1/", "requires_dist": ["numpy (==1.16.6)", "qiskit (==0.16.1)", "scipy (==1.4.1)", "tensorflow (==1.13.1)"], "requires_python": ">=3.5, <4", "summary": "Quantum Fast Approximate Synthesis Tool", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>QFAST: Quantum Fast Approximate Synthesis Tool</h1>\n<p>QFAST is a quantum synthesis tool designed to produce short circuits and to scale well in practice. QFAST uses a mathematical model of circuits encoding both gate placement and function. This is packaged together with a hierarchical stochastic gradient descent formulation that combines \u201ccoarse-grained\u201d fast optimization during circuit structure search with a better, but slower, stage only in the final circuit refinement.</p>\n<h2>Installation</h2>\n<p>The best way to install this python package is with pip.</p>\n<pre><code>pip install qfast\n</code></pre>\n<h2>Usage</h2>\n<p>QFAST can be used to convert a quantum operation specified by a unitary matrix into a circuit given by <a href=\"https://github.com/Qiskit/openqasm\" rel=\"nofollow\">openqasm</a> code. There is a command-line interface provided with qfast that can be accessed by <code>python -m qfast</code>. This can be used to synthesize a matrix.</p>\n<pre><code>python -m qfast --unitary-file=input.unitary --qasm-file=output.qasm --native-tool=kak\n</code></pre>\n<p>Here the <code>input.unitary</code> file is a NumPy matrix saved with <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html\" rel=\"nofollow\">np.savetxt</a>, the qasm output will be saved in the <code>output.qasm</code> file and the KAK native tool will be used. The command-line help option <code>python -m qfast -h</code> can be used for further information.</p>\n<p>QFAST can also be used as a library, <a href=\"https://github.com/edyounis/qfast/blob/master/examples/synthesize_qft4.py\" rel=\"nofollow\">an example</a> is included.</p>\n<h3>Native Tools</h3>\n<p>Native tools are necessary for QFAST to perform instantiation. During decomposition, the input unitary matrix is hierarchically broken into many smaller unitaries. At some level in the hierarchy, QFAST switches to instantiation using a native synthesis tool to perform the final step.</p>\n<p>Included with this python package is the KAK native tool. Here are some others:</p>\n<ul>\n<li><a href=\"https://github.com/edyounis/qfast-uq\" rel=\"nofollow\">qfast-uq</a>: A UniversalQCompiler native tool</li>\n<li><a href=\"https://github.com/edyounis/qfast-sc\" rel=\"nofollow\">qfast-sc</a>: A Search Compiler native tool</li>\n</ul>\n<h2>References</h2>\n<p>Younis, Ed, et al. \"<a href=\"https://arxiv.org/abs/2003.04462\" rel=\"nofollow\">QFAST: Quantum Synthesis Using a Hierarchical Continuous Circuit Space.</a>\" arXiv preprint arXiv:2003.04462 (2020).</p>\n<h2>Copyright</h2>\n<p>Quantum Fast Approximate Synthesis Tool (QFAST) Copyright (c) 2020,\nThe Regents of the University of California, through Lawrence Berkeley\nNational Laboratory (subject to receipt of any required approvals from\nthe U.S. Dept. of Energy). All rights reserved.</p>\n<p>If you have questions about your rights to use or distribute this software,\nplease contact Berkeley Lab's Intellectual Property Office at\n<a href=\"mailto:IPO@lbl.gov\">IPO@lbl.gov</a>.</p>\n<p>NOTICE.  This Software was developed under funding from the U.S. Department\nof Energy and the U.S. Government consequently retains certain rights.  As\nsuch, the U.S. Government has been granted for itself and others acting on\nits behalf a paid-up, nonexclusive, irrevocable, worldwide license in the\nSoftware to reproduce, distribute copies to the public, prepare derivative\nworks, and perform publicly and display publicly, and to permit others to do so.</p>\n\n          </div>"}, "last_serial": 7191366, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "ec604ebb3b98daadc612307941fb151d", "sha256": "692b8b552443f1064fa41da7d2276247db13e4967783988826f483408dcde6f5"}, "downloads": -1, "filename": "qfast-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec604ebb3b98daadc612307941fb151d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <4", "size": 26785, "upload_time": "2020-05-07T19:57:42", "upload_time_iso_8601": "2020-05-07T19:57:42.165854Z", "url": "https://files.pythonhosted.org/packages/b5/df/bde67187d1d387b4cd18ecf954e717b8f530b30eb1fc294a3c493b5638c7/qfast-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0ec778cee355e171ae71f7d12c0ea9c", "sha256": "5e53fb9c63d69b0f90c2eb0cae807fdbd8873abbaac907a9f11d085d7aed9f8c"}, "downloads": -1, "filename": "qfast-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a0ec778cee355e171ae71f7d12c0ea9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 19818, "upload_time": "2020-05-07T19:57:43", "upload_time_iso_8601": "2020-05-07T19:57:43.092411Z", "url": "https://files.pythonhosted.org/packages/e8/9d/780894dbd3ffb4c5ff852b8f9ec2e6ea121ea1d9e86401536aad0ed00944/qfast-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec604ebb3b98daadc612307941fb151d", "sha256": "692b8b552443f1064fa41da7d2276247db13e4967783988826f483408dcde6f5"}, "downloads": -1, "filename": "qfast-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec604ebb3b98daadc612307941fb151d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <4", "size": 26785, "upload_time": "2020-05-07T19:57:42", "upload_time_iso_8601": "2020-05-07T19:57:42.165854Z", "url": "https://files.pythonhosted.org/packages/b5/df/bde67187d1d387b4cd18ecf954e717b8f530b30eb1fc294a3c493b5638c7/qfast-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0ec778cee355e171ae71f7d12c0ea9c", "sha256": "5e53fb9c63d69b0f90c2eb0cae807fdbd8873abbaac907a9f11d085d7aed9f8c"}, "downloads": -1, "filename": "qfast-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a0ec778cee355e171ae71f7d12c0ea9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 19818, "upload_time": "2020-05-07T19:57:43", "upload_time_iso_8601": "2020-05-07T19:57:43.092411Z", "url": "https://files.pythonhosted.org/packages/e8/9d/780894dbd3ffb4c5ff852b8f9ec2e6ea121ea1d9e86401536aad0ed00944/qfast-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:46 2020"}