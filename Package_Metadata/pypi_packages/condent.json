{"info": {"author": "Julian Berman", "author_email": "Julian@GrayVines.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=======\r\nCondent\r\n=======\r\n\r\n``condent`` is a quick hack to reindent containers the way that I like them.\r\n\r\nIt's mostly (currently entirely) for Python, but due to similar object literal\r\nsyntaxes it should work for other languages by chance, and is easily\r\ngeneralizable to actually work with them in case it doesn't. I suspect over\r\ntime I'll add actual support for the other languages I use on a semi-regular\r\nbasis (mostly Ruby and JS).\r\n\r\nIt can fix basic things like:\r\n    * Spacing\r\n    * Moving something that fits on a single line onto one line\r\n    * Moving something that doesn't onto multiple lines\r\n    * Fixing indentation of multiple line containers\r\n\r\nWhat it won't (shouldn't) do is change the semantics of your code. If it does,\r\nplease open a ticket.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstall with ``pip install condent`` and you'll find a ``condent`` executable\r\ninstalled.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nSample invocation and output is::\r\n\r\n    $ echo 'd = {\"foo\":\"bar\",\"baz\":\"quux\"}' | condent \r\n    d = {\"foo\" : \"bar\", \"baz\" : \"quux\"}\r\n\r\n    $ condent <<EOF\r\n    the_dict = {\r\n    foo:bar,\r\n    baz:quux,\r\n    spam:eggs}'\r\n    EOF\r\n    the_dict = {foo : bar, baz : quux, spam : eggs}\r\n\r\n    $ condent <<EOF\r\n        an_already_indented_dict_that_does_not_fit_on_one_line = {\r\n    foo:bar, baz:quux,\r\n    spam:eggs}\r\n    EOF\r\n        an_already_indented_dict_that_does_not_fit_on_one_line = {\r\n            foo : bar,\r\n            baz : quux,\r\n            spam : eggs,\r\n        }\r\n\r\nYou can see full usage info with ``condent -h``.\r\n\r\n\r\nUsage With Vim\r\n--------------\r\n\r\nThe main reason this exists is to use with ``vim`` and its ``equalprg`` option.\r\n\r\nTo do so, put something like ``autocmd FileType python set equalprg=condent``\r\nin your ``.vimrc`` or in an ``ftplugin`` file. You can then use it with ``=``\r\n(see ``:help =`` for details).\r\n\r\nI've tried a number of ``vim`` indent scripts over the past few years but never\r\nfound one that worked right. Maybe it exists and it's my (settings') fault,\r\nbut rather than figure out whether that's the case it was easy enough to throw\r\ntogether in an afternoon.\r\n\r\nYou also might be interested in my ``ftplugin`` file for `Python\r\n<https://github.com/Julian/dotfiles/blob/master/.vim/ftplugin/python.vim>`_\r\nwhich has some more of what I do with this, like auto-reindenting when\r\ninserting closing characters.\r\n\r\n\r\nStyle\r\n-----\r\n\r\nIt *should* be ``pep8`` compliant with one exception. \r\n\r\nI like my ``dict`` key and value to be symmetric around the ``:``. Depending on\r\ninterpretation this might be in violation of ``pep8`` recommending avoiding\r\nextra whitespace, but I've been doing it forever and I like the way it looks,\r\nnot to mention I've seen a ton of code that does it this way as well. To\r\nillustrate, this will produce ``{\"foo\" : \"bar\"}`` rather than producing\r\n``{\"foo\": \"bar\"}``. If you really don't like that you can disable it with the\r\ncommand line flag ``--no-symmetric-colon``. There are a bunch of other\r\nsubjective style choices that can be toggled with command line flags.\r\n\r\n\r\nAdding Features\r\n---------------\r\n\r\nLike many similar things, this is likely going to be a continual WIP. Like I\r\nsaid, I use things like this daily, so as I find bugs or desired features I'll\r\nprobably fix or add them.\r\n\r\nThere are a few specific things I have in mind which will probably get added\r\nin the next couple of days. If you have others, feel free to send a pull\r\nrequest. Even if I don't like or use the style you desire, if it's sane enough\r\n;) it probably be merged as an option anyhow.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Julian/condent", "keywords": "", "license": "MIT/X", "maintainer": "", "maintainer_email": "", "name": "condent", "package_url": "https://pypi.org/project/condent/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/condent/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/Julian/condent"}, "release_url": "https://pypi.org/project/condent/0.3/", "requires_dist": null, "requires_python": null, "summary": "A simple reindent for containers that reindents as I like it", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>condent</tt> is a quick hack to reindent containers the way that I like them.</p>\n<p>It\u2019s mostly (currently entirely) for Python, but due to similar object literal\nsyntaxes it should work for other languages by chance, and is easily\ngeneralizable to actually work with them in case it doesn\u2019t. I suspect over\ntime I\u2019ll add actual support for the other languages I use on a semi-regular\nbasis (mostly Ruby and JS).</p>\n<dl>\n<dt>It can fix basic things like:</dt>\n<dd><ul>\n<li>Spacing</li>\n<li>Moving something that fits on a single line onto one line</li>\n<li>Moving something that doesn\u2019t onto multiple lines</li>\n<li>Fixing indentation of multiple line containers</li>\n</ul>\n</dd>\n</dl>\n<p>What it won\u2019t (shouldn\u2019t) do is change the semantics of your code. If it does,\nplease open a ticket.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with <tt>pip install condent</tt> and you\u2019ll find a <tt>condent</tt> executable\ninstalled.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Sample invocation and output is:</p>\n<pre>$ echo 'd = {\"foo\":\"bar\",\"baz\":\"quux\"}' | condent\nd = {\"foo\" : \"bar\", \"baz\" : \"quux\"}\n\n$ condent &lt;&lt;EOF\nthe_dict = {\nfoo:bar,\nbaz:quux,\nspam:eggs}'\nEOF\nthe_dict = {foo : bar, baz : quux, spam : eggs}\n\n$ condent &lt;&lt;EOF\n    an_already_indented_dict_that_does_not_fit_on_one_line = {\nfoo:bar, baz:quux,\nspam:eggs}\nEOF\n    an_already_indented_dict_that_does_not_fit_on_one_line = {\n        foo : bar,\n        baz : quux,\n        spam : eggs,\n    }\n</pre>\n<p>You can see full usage info with <tt>condent <span class=\"pre\">-h</span></tt>.</p>\n</div>\n<div id=\"usage-with-vim\">\n<h2>Usage With Vim</h2>\n<p>The main reason this exists is to use with <tt>vim</tt> and its <tt>equalprg</tt> option.</p>\n<p>To do so, put something like <tt>autocmd FileType python set equalprg=condent</tt>\nin your <tt>.vimrc</tt> or in an <tt>ftplugin</tt> file. You can then use it with <tt>=</tt>\n(see <tt>:help =</tt> for details).</p>\n<p>I\u2019ve tried a number of <tt>vim</tt> indent scripts over the past few years but never\nfound one that worked right. Maybe it exists and it\u2019s my (settings\u2019) fault,\nbut rather than figure out whether that\u2019s the case it was easy enough to throw\ntogether in an afternoon.</p>\n<p>You also might be interested in my <tt>ftplugin</tt> file for <a href=\"https://github.com/Julian/dotfiles/blob/master/.vim/ftplugin/python.vim\" rel=\"nofollow\">Python</a>\nwhich has some more of what I do with this, like auto-reindenting when\ninserting closing characters.</p>\n</div>\n<div id=\"style\">\n<h2>Style</h2>\n<p>It <em>should</em> be <tt>pep8</tt> compliant with one exception.</p>\n<p>I like my <tt>dict</tt> key and value to be symmetric around the <tt>:</tt>. Depending on\ninterpretation this might be in violation of <tt>pep8</tt> recommending avoiding\nextra whitespace, but I\u2019ve been doing it forever and I like the way it looks,\nnot to mention I\u2019ve seen a ton of code that does it this way as well. To\nillustrate, this will produce <tt>{\"foo\" : \"bar\"}</tt> rather than producing\n<tt>{\"foo\": \"bar\"}</tt>. If you really don\u2019t like that you can disable it with the\ncommand line flag <tt><span class=\"pre\">--no-symmetric-colon</span></tt>. There are a bunch of other\nsubjective style choices that can be toggled with command line flags.</p>\n</div>\n<div id=\"adding-features\">\n<h2>Adding Features</h2>\n<p>Like many similar things, this is likely going to be a continual WIP. Like I\nsaid, I use things like this daily, so as I find bugs or desired features I\u2019ll\nprobably fix or add them.</p>\n<p>There are a few specific things I have in mind which will probably get added\nin the next couple of days. If you have others, feel free to send a pull\nrequest. Even if I don\u2019t like or use the style you desire, if it\u2019s sane enough\n;) it probably be merged as an option anyhow.</p>\n</div>\n\n          </div>"}, "last_serial": 788355, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7e9f1df0694a8e9640837476539ec51a", "sha256": "0cadabf0d5ea884a97fdbf4e2f8ea16b1a3cbedd29ef1652bca15b4ad478eb7a"}, "downloads": -1, "filename": "condent-0.1.tar.gz", "has_sig": false, "md5_digest": "7e9f1df0694a8e9640837476539ec51a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5582, "upload_time": "2012-10-11T18:11:36", "upload_time_iso_8601": "2012-10-11T18:11:36.364225Z", "url": "https://files.pythonhosted.org/packages/27/d7/219fc62e20d713c519fbd46522039905b1092d53ea72d42353827336ba14/condent-0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f00bf3b7e167e498df9e25673b27551", "sha256": "7cd7756b58224cf7815c3aee19cfc340116f1a86fa40e7470e1effdc63ebb5e9"}, "downloads": -1, "filename": "condent-0.1.zip", "has_sig": false, "md5_digest": "9f00bf3b7e167e498df9e25673b27551", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7672, "upload_time": "2012-10-11T18:11:37", "upload_time_iso_8601": "2012-10-11T18:11:37.927273Z", "url": "https://files.pythonhosted.org/packages/0f/d0/e3ebed2f82da6b1b3f4da73052e693d1458587f90274cfe378bd3584563e/condent-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "cf20b1fc23a4cc3407ae61221bdf6999", "sha256": "1aa8a197aafcf734a48949f6ea59cd3fa5ddd95587bc90280ece2122e0bcc177"}, "downloads": -1, "filename": "condent-0.2.tar.gz", "has_sig": false, "md5_digest": "cf20b1fc23a4cc3407ae61221bdf6999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5461, "upload_time": "2012-10-12T17:36:38", "upload_time_iso_8601": "2012-10-12T17:36:38.103633Z", "url": "https://files.pythonhosted.org/packages/0d/0b/ab25c1e41c2d6cbcfa19fb832b4b08406f767dc530222b8cc9181f6fccb6/condent-0.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c0b6c6ae5ce0b09f7da79d04308283c", "sha256": "a0c86e984f89f02462b885fddaf3fb3cc49cd098ae843bf0ee1700bbe8df1f28"}, "downloads": -1, "filename": "condent-0.2.zip", "has_sig": false, "md5_digest": "5c0b6c6ae5ce0b09f7da79d04308283c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7414, "upload_time": "2012-10-12T17:36:39", "upload_time_iso_8601": "2012-10-12T17:36:39.462888Z", "url": "https://files.pythonhosted.org/packages/ac/a4/0bdac7187a7dae588f46ad0647312372711b2721b7be5c5628cb5aa99335/condent-0.2.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a690af1455dade35c6a71f1c9c48100e", "sha256": "61f81537c975fa75ea3eab54824dab361885372a5a3c2b84692eaca244d8d0f1"}, "downloads": -1, "filename": "condent-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a690af1455dade35c6a71f1c9c48100e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6922, "upload_time": "2012-10-12T17:39:31", "upload_time_iso_8601": "2012-10-12T17:39:31.373425Z", "url": "https://files.pythonhosted.org/packages/f1/63/0235d92d1a85f902851e3f61a27f9b0da994db30b5e8fae69228fbb0eaff/condent-0.2.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "aed5a0ff2160664396378a9fb94b975e", "sha256": "b520187a88eeb712dcd5928609b42fde8dacce7eb1fe192ed39aec74c3478f53"}, "downloads": -1, "filename": "condent-0.2.1.zip", "has_sig": false, "md5_digest": "aed5a0ff2160664396378a9fb94b975e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9945, "upload_time": "2012-10-12T17:39:32", "upload_time_iso_8601": "2012-10-12T17:39:32.440911Z", "url": "https://files.pythonhosted.org/packages/c6/86/8726c8ee5eeb57eb4356008ea11a6b2bfaf72e92ad4c6b4f2e4df3928655/condent-0.2.1.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "45b56c977ffc56220b60c5dfa0e818ad", "sha256": "3e9c6e70d615c593b23bde36eeed48185934e296a5e323fe5ccfc39838173e35"}, "downloads": -1, "filename": "condent-0.3.tar.gz", "has_sig": false, "md5_digest": "45b56c977ffc56220b60c5dfa0e818ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7389, "upload_time": "2012-10-14T08:16:51", "upload_time_iso_8601": "2012-10-14T08:16:51.162517Z", "url": "https://files.pythonhosted.org/packages/5c/5f/91011824312890663f91426e928b2c1fc08edd619b6401acf1775e266868/condent-0.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "73eaa0a54dbc0371f6cffa0383ecf9c6", "sha256": "76f8b53701fa05a17ce2795e43e00599bd20b215295ddcdd0087c8f4f9321c46"}, "downloads": -1, "filename": "condent-0.3.zip", "has_sig": false, "md5_digest": "73eaa0a54dbc0371f6cffa0383ecf9c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10498, "upload_time": "2012-10-14T08:16:52", "upload_time_iso_8601": "2012-10-14T08:16:52.871818Z", "url": "https://files.pythonhosted.org/packages/e0/ce/a6ac8e63d637e8ea7c4e8fca82cdfd679444e7776355d44934c5e6895c7b/condent-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45b56c977ffc56220b60c5dfa0e818ad", "sha256": "3e9c6e70d615c593b23bde36eeed48185934e296a5e323fe5ccfc39838173e35"}, "downloads": -1, "filename": "condent-0.3.tar.gz", "has_sig": false, "md5_digest": "45b56c977ffc56220b60c5dfa0e818ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7389, "upload_time": "2012-10-14T08:16:51", "upload_time_iso_8601": "2012-10-14T08:16:51.162517Z", "url": "https://files.pythonhosted.org/packages/5c/5f/91011824312890663f91426e928b2c1fc08edd619b6401acf1775e266868/condent-0.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "73eaa0a54dbc0371f6cffa0383ecf9c6", "sha256": "76f8b53701fa05a17ce2795e43e00599bd20b215295ddcdd0087c8f4f9321c46"}, "downloads": -1, "filename": "condent-0.3.zip", "has_sig": false, "md5_digest": "73eaa0a54dbc0371f6cffa0383ecf9c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10498, "upload_time": "2012-10-14T08:16:52", "upload_time_iso_8601": "2012-10-14T08:16:52.871818Z", "url": "https://files.pythonhosted.org/packages/e0/ce/a6ac8e63d637e8ea7c4e8fca82cdfd679444e7776355d44934c5e6895c7b/condent-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:02 2020"}