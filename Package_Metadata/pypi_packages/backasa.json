{"info": {"author": "Jonathan Johnson", "author_email": "me@jondavidjohn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Topic :: System :: Archiving :: Backup", "Topic :: System :: Archiving :: Mirroring"], "description": "Backasa\n=======\n\n::\n\n    (sudo) pip install backasa\n\nThe goal of this tool is to provide a minimal CLI backup/mirroring tool\nfor Picasa Web Albums.\n\nUsage\n-----\n\nQuickstart\n~~~~~~~~~~\n\nThis will initiate or sync an existing backup of all picasa web albumns\nfor this user, into ``/target/of/backup``\n\n::\n\n    backasa -e your@gmail.com -p password1 -t /target/of/backup/ backup\n\nFull Cycle\n~~~~~~~~~~\n\n1. **Setup** - Setup backup directory and store your credentials\n\n   ::\n\n       mkdir backup-target\n       cd backup-target\n       backasa setup\n\n2. **Backup** - routinely run the backup (cron, etc..)\n\n   ::\n\n       cd backup-target\n       backasa backup\n\n3. **Cleanup** - Remove old versions of files and deleted files\n\n   ::\n\n       cd backup-target\n       backasa cleanup\n\nOptions\n~~~~~~~\n\n-  ``--email`` or ``-e``\n\n   -  Manually provide account email on the command line\n\n-  ``--password`` or ``-p``\n\n   -  Manually provide password on the command line\n\n-  ``--limit`` or ``-l``\n\n   -  Provide a time limit (in hours) to run.\n   -  Accepts floating points (``-l 0.5`` for 30 minutes, etc..)\n   -  This is helpful if you want to gradually catch up your backups\n      during off peak times\n   -  Ex. Cron job starts at 1 AM, using ``-l 4`` it will stop ~ 5 AM\n   -  backasa will pick up where it left off for the next run\n\n-  ``--target`` or ``-t``\n\n   -  Specify the target backup directory\n   -  Defaults to the current working directory\n\n-  ``--notify`` or ``-n``\n\n   -  Send an email to the account upon completion or failure\n   -  includes job log\n\n-  ``--help`` or ``-h``\n\n   -  Built in help documentation\n\nAuthentication:\n---------------\n\nBackasa handles user authentication one of two ways, specified as\ncommand-line arguments (``--email`` and ``--password``), or via a\n``.config`` file in the backup directory generated by the ``setup``\naction. This ``.config`` file is stored with the same level of security\nas your private ssh keys.\n\nIf you are using Google 2-step Verification, you will need to create an\napplication specific password for backasa and use it in your setup.\n\nManual Garbage Collection\n-------------------------\n\nBy default Backasa does not delete files. As new file versions come in\nolder versions are marked as ``.old`` and are left on the file system\nalong side their newer counterparts. Files deleted from picasa are left\nas is in your backups. The ``cleanup`` action is used to remove old\nversions of files and scan picasa for deleted files to remove from your\nfile system.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/jondavidjohn/backasa/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jondavidjohn/backasa", "keywords": "picasa,backup,web album", "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "backasa", "package_url": "https://pypi.org/project/backasa/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/backasa/", "project_urls": {"Download": "https://github.com/jondavidjohn/backasa/tarball/master", "Homepage": "https://github.com/jondavidjohn/backasa"}, "release_url": "https://pypi.org/project/backasa/0.9.5/", "requires_dist": null, "requires_python": null, "summary": "A Picasa Web Albums backup utility", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>(sudo) pip install backasa\n</pre>\n<p>The goal of this tool is to provide a minimal CLI backup/mirroring tool\nfor Picasa Web Albums.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"quickstart\">\n<h3>Quickstart</h3>\n<p>This will initiate or sync an existing backup of all picasa web albumns\nfor this user, into <tt>/target/of/backup</tt></p>\n<pre>backasa -e your@gmail.com -p password1 -t /target/of/backup/ backup\n</pre>\n</div>\n<div id=\"full-cycle\">\n<h3>Full Cycle</h3>\n<ol>\n<li><p><strong>Setup</strong> - Setup backup directory and store your credentials</p>\n<pre>mkdir backup-target\ncd backup-target\nbackasa setup\n</pre>\n</li>\n<li><p><strong>Backup</strong> - routinely run the backup (cron, etc..)</p>\n<pre>cd backup-target\nbackasa backup\n</pre>\n</li>\n<li><p><strong>Cleanup</strong> - Remove old versions of files and deleted files</p>\n<pre>cd backup-target\nbackasa cleanup\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"options\">\n<h3>Options</h3>\n<ul>\n<li><tt><span class=\"pre\">--email</span></tt> or <tt><span class=\"pre\">-e</span></tt><ul>\n<li>Manually provide account email on the command line</li>\n</ul>\n</li>\n<li><tt><span class=\"pre\">--password</span></tt> or <tt><span class=\"pre\">-p</span></tt><ul>\n<li>Manually provide password on the command line</li>\n</ul>\n</li>\n<li><tt><span class=\"pre\">--limit</span></tt> or <tt><span class=\"pre\">-l</span></tt><ul>\n<li>Provide a time limit (in hours) to run.</li>\n<li>Accepts floating points (<tt><span class=\"pre\">-l</span> 0.5</tt> for 30 minutes, etc..)</li>\n<li>This is helpful if you want to gradually catch up your backups\nduring off peak times</li>\n<li>Ex. Cron job starts at 1 AM, using <tt><span class=\"pre\">-l</span> 4</tt> it will stop ~ 5 AM</li>\n<li>backasa will pick up where it left off for the next run</li>\n</ul>\n</li>\n<li><tt><span class=\"pre\">--target</span></tt> or <tt><span class=\"pre\">-t</span></tt><ul>\n<li>Specify the target backup directory</li>\n<li>Defaults to the current working directory</li>\n</ul>\n</li>\n<li><tt><span class=\"pre\">--notify</span></tt> or <tt><span class=\"pre\">-n</span></tt><ul>\n<li>Send an email to the account upon completion or failure</li>\n<li>includes job log</li>\n</ul>\n</li>\n<li><tt><span class=\"pre\">--help</span></tt> or <tt><span class=\"pre\">-h</span></tt><ul>\n<li>Built in help documentation</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"authentication\">\n<h2>Authentication:</h2>\n<p>Backasa handles user authentication one of two ways, specified as\ncommand-line arguments (<tt><span class=\"pre\">--email</span></tt> and <tt><span class=\"pre\">--password</span></tt>), or via a\n<tt>.config</tt> file in the backup directory generated by the <tt>setup</tt>\naction. This <tt>.config</tt> file is stored with the same level of security\nas your private ssh keys.</p>\n<p>If you are using Google 2-step Verification, you will need to create an\napplication specific password for backasa and use it in your setup.</p>\n</div>\n<div id=\"manual-garbage-collection\">\n<h2>Manual Garbage Collection</h2>\n<p>By default Backasa does not delete files. As new file versions come in\nolder versions are marked as <tt>.old</tt> and are left on the file system\nalong side their newer counterparts. Files deleted from picasa are left\nas is in your backups. The <tt>cleanup</tt> action is used to remove old\nversions of files and scan picasa for deleted files to remove from your\nfile system.</p>\n</div>\n\n          </div>"}, "last_serial": 786668, "releases": {"0.9.3": [{"comment_text": "", "digests": {"md5": "73c58579ef68058991ac772314cba72d", "sha256": "48590ea6733ae491b0e96fdb8a566ec19321f1a3ec3c0f881982e3cbedf9bdc8"}, "downloads": -1, "filename": "backasa-0.9.3.tar.gz", "has_sig": false, "md5_digest": "73c58579ef68058991ac772314cba72d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10845, "upload_time": "2013-02-21T17:11:54", "upload_time_iso_8601": "2013-02-21T17:11:54.216992Z", "url": "https://files.pythonhosted.org/packages/7e/68/48ee1cfa2fe5c28031d760c63abffc0d29b0962048a7c18b69f1b5368e75/backasa-0.9.3.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "9a9e3c2484e084a166a1ae25d6676068", "sha256": "d1573310be58525c06ff5df29908f46cbb95e05458a13f7af66625244c903d0e"}, "downloads": -1, "filename": "backasa-0.9.5.tar.gz", "has_sig": false, "md5_digest": "9a9e3c2484e084a166a1ae25d6676068", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11527, "upload_time": "2013-02-21T22:32:38", "upload_time_iso_8601": "2013-02-21T22:32:38.111638Z", "url": "https://files.pythonhosted.org/packages/35/e0/d4e418e19e16eab1e73c1e3b6df625b2d7aea40111dc882e9bab09bc41ac/backasa-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a9e3c2484e084a166a1ae25d6676068", "sha256": "d1573310be58525c06ff5df29908f46cbb95e05458a13f7af66625244c903d0e"}, "downloads": -1, "filename": "backasa-0.9.5.tar.gz", "has_sig": false, "md5_digest": "9a9e3c2484e084a166a1ae25d6676068", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11527, "upload_time": "2013-02-21T22:32:38", "upload_time_iso_8601": "2013-02-21T22:32:38.111638Z", "url": "https://files.pythonhosted.org/packages/35/e0/d4e418e19e16eab1e73c1e3b6df625b2d7aea40111dc882e9bab09bc41ac/backasa-0.9.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:09 2020"}