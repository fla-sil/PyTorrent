{"info": {"author": "Masahiko Okada", "author_email": "moqada@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "##########################\nDjango Simple Spam Blocker\n##########################\n\n.. image:: https://secure.travis-ci.org/moqada/django-simple-spam-blocker.png?branch=master\n   :target: http://travis-ci.org/moqada/django-simple-spam-blocker/\n\nDjango Simple Spam Blocker is blocking spam by regular expression.\n\nFiltering the following matters.\n\n* Author\n* Content\n* Email\n* IP\n* Referer\n* URL\n* UserAgent\n\nAnd you can edit regular expression, on Django's admin site.\n\n\nInstallation\n============\n\n#. Add the ``simplespamblocker`` directory to your Python path.\n#. Add ``simplespamblocker`` to your ``INSTALLED_APPS``.::\n\n       INSTALLED_APPS = (\n           # ...\n           'simplespamblocker',\n           # ...\n       )\n\n#. Add the following middleware to your ``MIDDLEWARE_CLASSES``.::\n\n       MIDDLEWARE_CLASSES = (\n           # ...\n           'simplespamblocker.middleware.SpamBlockMiddleware',\n           # ...\n       )\n\n#. Add path which you wanto to block spam to ``SIMPLESPAMBLOCKER_PROFILES`` on ``settings.py``.::\n\n       SIMPLESPAMBLOCKER_PROFILES = (\n           # Sample for django's comment framework\n           (r'^/comments/post/$', {\n               'method': 'post',\n               'author': lambda request: request.POST.get('name', ''),\n               'email': lambda request: request.POST.get('email', ''),\n               'url': lambda request: request.POST.get('url', ''),\n               'content': lambda request: request.POST.get('comment', ''),\n           }),\n       )\n\n#. Run syncdb.::\n\n       $ python manage.py syncdb\n\n   **Note**: When your project use South, run the following command.::\n\n       $ python manage.py migrate simplespamblocker\n\n#. Run your server, visit admin site and edit regular expression of Option model.\n\n\nSettings\n========\n\n``SIMPLESPAMBLOCKER_PROFILES``\n    The list of tuple -- regular expression of path and block profile --.\n\n``SIMPLESPAMBLOCKER_SPAM_TEMPLATE``\n    A path of template file which is rendering after blocking spam\n    This key is generated per Option model.\n\n    default: 'simplespamblocker/option/<id>'\n\n``SIMPLESPAMBLOCKER_LOGGER_NAME``\n    Python's builtin logger name.\n    This logger logs at blocking spam.\n    Default value is None. (inactive)\n\n\nOthers\n======\n\nThis project is Inspired by `django-spaminspector <http://github.com/lambdalisue/django-spaminspector>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/moqada/django-simple-spam-blocker/", "keywords": "django,spam", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-simple-spam-blocker", "package_url": "https://pypi.org/project/django-simple-spam-blocker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-simple-spam-blocker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/moqada/django-simple-spam-blocker/"}, "release_url": "https://pypi.org/project/django-simple-spam-blocker/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple spam blocker for Django", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/moqada/django-simple-spam-blocker/\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/moqada/django-simple-spam-blocker.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62d26f187852534298988c368785781f524908d9/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6d6f716164612f646a616e676f2d73696d706c652d7370616d2d626c6f636b65722e706e673f6272616e63683d6d6173746572\"></a>\n<p>Django Simple Spam Blocker is blocking spam by regular expression.</p>\n<p>Filtering the following matters.</p>\n<ul>\n<li>Author</li>\n<li>Content</li>\n<li>Email</li>\n<li>IP</li>\n<li>Referer</li>\n<li>URL</li>\n<li>UserAgent</li>\n</ul>\n<p>And you can edit regular expression, on Django\u2019s admin site.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Add the <tt>simplespamblocker</tt> directory to your Python path.</p>\n</li>\n<li><p>Add <tt>simplespamblocker</tt> to your <tt>INSTALLED_APPS</tt>.:</p>\n<pre>INSTALLED_APPS = (\n    # ...\n    'simplespamblocker',\n    # ...\n)\n</pre>\n</li>\n<li><p>Add the following middleware to your <tt>MIDDLEWARE_CLASSES</tt>.:</p>\n<pre>MIDDLEWARE_CLASSES = (\n    # ...\n    'simplespamblocker.middleware.SpamBlockMiddleware',\n    # ...\n)\n</pre>\n</li>\n<li><p>Add path which you wanto to block spam to <tt>SIMPLESPAMBLOCKER_PROFILES</tt> on <tt>settings.py</tt>.:</p>\n<pre>SIMPLESPAMBLOCKER_PROFILES = (\n    # Sample for django's comment framework\n    (r'^/comments/post/$', {\n        'method': 'post',\n        'author': lambda request: request.POST.get('name', ''),\n        'email': lambda request: request.POST.get('email', ''),\n        'url': lambda request: request.POST.get('url', ''),\n        'content': lambda request: request.POST.get('comment', ''),\n    }),\n)\n</pre>\n</li>\n<li><p>Run syncdb.:</p>\n<pre>$ python manage.py syncdb\n</pre>\n<p><strong>Note</strong>: When your project use South, run the following command.:</p>\n<pre>$ python manage.py migrate simplespamblocker\n</pre>\n</li>\n<li><p>Run your server, visit admin site and edit regular expression of Option model.</p>\n</li>\n</ol>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<dl>\n<dt><tt>SIMPLESPAMBLOCKER_PROFILES</tt></dt>\n<dd>The list of tuple \u2013 regular expression of path and block profile \u2013.</dd>\n<dt><tt>SIMPLESPAMBLOCKER_SPAM_TEMPLATE</tt></dt>\n<dd><p>A path of template file which is rendering after blocking spam\nThis key is generated per Option model.</p>\n<p>default: \u2018simplespamblocker/option/&lt;id&gt;\u2019</p>\n</dd>\n<dt><tt>SIMPLESPAMBLOCKER_LOGGER_NAME</tt></dt>\n<dd>Python\u2019s builtin logger name.\nThis logger logs at blocking spam.\nDefault value is None. (inactive)</dd>\n</dl>\n</div>\n<div id=\"others\">\n<h2>Others</h2>\n<p>This project is Inspired by <a href=\"http://github.com/lambdalisue/django-spaminspector\" rel=\"nofollow\">django-spaminspector</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 790642, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "11dcce9d9956b158af33e0696b082878", "sha256": "81ee20000bd231614fa0cf7a7db36b861b2210539f5ebfe72f6e81008c95085b"}, "downloads": -1, "filename": "django-simple-spam-blocker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "11dcce9d9956b158af33e0696b082878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8888, "upload_time": "2012-12-19T09:40:24", "upload_time_iso_8601": "2012-12-19T09:40:24.165027Z", "url": "https://files.pythonhosted.org/packages/23/a5/ef0e644152429d7be068a255668ed7607d30b7507404b4eb22dd96834c89/django-simple-spam-blocker-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11dcce9d9956b158af33e0696b082878", "sha256": "81ee20000bd231614fa0cf7a7db36b861b2210539f5ebfe72f6e81008c95085b"}, "downloads": -1, "filename": "django-simple-spam-blocker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "11dcce9d9956b158af33e0696b082878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8888, "upload_time": "2012-12-19T09:40:24", "upload_time_iso_8601": "2012-12-19T09:40:24.165027Z", "url": "https://files.pythonhosted.org/packages/23/a5/ef0e644152429d7be068a255668ed7607d30b7507404b4eb22dd96834c89/django-simple-spam-blocker-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:20 2020"}