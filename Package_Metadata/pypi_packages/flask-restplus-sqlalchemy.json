{"info": {"author": "Brandon Bluemner", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Flask RestPlus SqlAlchemy\nAuto generates the Flask RestPlus Model section in swagger from SqlAlchemy models. \n\n> **Note:** Make sure you don't import any endpoints be for you call `init_db(flask_application)` else the `api_model_factory.get_entity` will be empty\n\n> **Disclaimer** This project is not at this time, 2020 Feb. 1,  affiliated with Flask, Flask-RestPlus or SqlAlchemy projects.\n\n# Usage\n```python \n    from sqlalchemy import BigInteger, Column, Integer, String, DateTime, Date\n    from flask_sqlalchemy import SQLAlchemy\n    from flask import Flask\n    from flask_restplus import Api\n    from flask_restplus_sqlalchemy import ApiModelFactory\n\n    flask_app = Flask(__name__) # Flask Application\n    flask_app.config['SQLALCHEMY_DATABASE_URI'] = 'connection string'\n    # Create RestPlus API\n    api: Api = Api(\n            version='x',\n            title='test_api',\n            default='test',\n            default_label='test',\n            description='Test') # \n    # SQLAlchemy Database instance\n    db: SQLAlchemy = SQLAlchemy()\n\n    # normally you would import models here\n    # ex: from app.data import models\n\n    # For this example will just make one model\n    class Person(db.Model): \n        \"\"\" Person Entity\n        \"\"\"\n        __tablename__ = \"person\"\n        __abstract__ = False\n        id: Column = Column(\n            BigInteger().with_variant(Integer, \"sqlite\"),\n            primary_key=True,\n            nullable=False\n        )\n        created_on: Column = Column(DateTime, nullable=False)\n        birth: Column = Column(Date, nullable=False)\n        first_name: Column = Column(String(100), nullable=False)\n        middle_name: Column = Column(String(100), nullable=True)\n        last_name: Column = Column(String(100), nullable=False)\n\n    # Bind the SQLAlchemy to the Flask Application\n    db.init_app(flask_app)\n\n    # Link Flask Rest Plus API with SQLAlchemy\n    api_model_factory = ApiModelFactory(api=api, db=db)\n\n    # Get entity Person \n    model = api_model_factory.get_entity(Person.__tablename__)\n```\n\n# Sample Integration into full project\nBelow is a sample use case. \n## Folder structure \n```\n.\n\u251c\u2500\u2500 sample api\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 api\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 auth.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 endpoints\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 status.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 restplus.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 swagger\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 status.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 access\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dal.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 audit.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settings.py\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements-dev.txt\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 run.py\n\u2514\u2500\u2500 test\n \u00a0\u00a0 \u251c\u2500\u2500 api\n    \u2502   All tests should go here\n \u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n\n```\n## Person Endpoint\nThis example used A DataAccessLayer as an abstraction, may not needed. \n```python\n\"\"\" Person Endpoint\n\"\"\"\nimport logging\n\nfrom http import HTTPStatus\nfrom flask import request\nfrom flask_restplus import Resource\nfrom ..restplus import api, name_space\nfrom ..swagger import api_model_factory\n\nfrom ...data.access import DataAccessLayer, PersonDAL\nfrom ..auth import user_id\n\nENTITY_NAME = 'person'\nENTITY = api_model_factory.get_entity(ENTITY_NAME)\nNAME_SPACE = name_space(ENTITY_NAME)\n\n\n@NAME_SPACE.route('')\nclass PersonCollection(Resource):\n    \"\"\" PersonCollection\n    \"\"\"\n    log = logging.getLogger(__name__)\n    dal: DataAccessLayer = PersonDAL()\n\n    @api.marshal_list_with(ENTITY)\n    def get(self):\n        \"\"\"\n        Returns list of persons.\n        \"\"\"\n        return self.dal.get_collection(), HTTPStatus.OK\n\n    @api.response(HTTPStatus.CREATED, 'Created person')\n    @api.expect(ENTITY)\n    def post(self):\n        \"\"\" Creates a new person\n        \"\"\"\n        return self.dal.create(user_id(), request.json), HTTPStatus.CREATED\n\n\n@NAME_SPACE.route('/<int:id>')\n@NAME_SPACE.response(404, \"Could not find person\")\nclass PersonItem(Resource):\n    \"\"\" PersonItem\n    \"\"\"\n    log = logging.getLogger(__name__)\n    dal: DataAccessLayer = PersonDAL()\n\n    @api.marshal_list_with(ENTITY)\n    @api.response(HTTPStatus.NOT_FOUND, 'Cant find person')\n    def get(self, id: int):\n        \"\"\" Returns a single person.\n        \"\"\"\n        return self.dal.get_item(id), HTTPStatus.OK\n\n    @api.response(HTTPStatus.NO_CONTENT, 'Update classed person information')\n    @api.expect(ENTITY)\n    def put(self, id):\n        \"\"\" Updates a person\n        \"\"\"\n        self.dal.update(\n            user_id=user_id(),\n            entity_id=id,\n            data=request.json)\n        return None, HTTPStatus.NO_CONTENT\n\n    @api.response(HTTPStatus.NO_CONTENT, 'Deleted person information')\n    def delete(self, id):\n        \"\"\" Delete a person\n        \"\"\"\n        self.dal.delete(user_id(), id)\n        return None, HTTPStatus.NO_CONTENT\n\n```\n## Restplus\nIn above example this is where api and error handling logic is located\n```python\n\"\"\" Api Creation\n\"\"\"\nimport logging\n\nfrom flask_restplus import Api, Namespace\nfrom sqlalchemy.orm.exc import NoResultFound\nfrom .. import __version__\nlog = logging.getLogger(__name__)\n\napi: Api = Api(\n    version=__version__,\n    title='My API',\n    default='???',\n    default_label='',\n    description='My Rest Api')\n\n\ndef format_uri(entity_name: str) -> str:\n    \"\"\" Format url from entity name.\n    \"\"\"\n    return entity_name.replace('_', '/')\n\n\ndef explode_entity_name(entity_name: str) -> str:\n    \"\"\" replaces _ with space\n    \"\"\"\n    return entity_name.replace('_', ' ')\n\n\ndef name_space(entity_name) -> Namespace:\n    \"\"\" Get formatted namespace\n    \"\"\"\n    return api.namespace(\n        format_uri(entity_name),\n        description='Operations related to {}'\n        .format(explode_entity_name(entity_name)))\n\n\n@api.errorhandler\ndef default_error_handler(e):\n    \"\"\" By default all errors will be handled here\n    \"\"\"\n    message = 'An Unhandled exception has occurred'\n    log.exception(e)\n    return {'message': message}, 500\n\n\n@api.errorhandler(NoResultFound)\ndef database_not_found_error_handler(e):\n    \"\"\" Database not found\n    \"\"\"\n    return {'message': 'A database result was not found'}, 404\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bluemner.github.io/flask_restplus_sqlalchemy/", "keywords": "flask restplus api sql SqlAlchemy swagger models", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-restplus-sqlalchemy", "package_url": "https://pypi.org/project/flask-restplus-sqlalchemy/", "platform": "", "project_url": "https://pypi.org/project/flask-restplus-sqlalchemy/", "project_urls": {"Bug Reports": "https://github.com/bluemner/flask_restplus_sqlalchemy/issues", "Homepage": "https://bluemner.github.io/flask_restplus_sqlalchemy/", "Source": "https://github.com/bluemner/flask_restplus_sqlalchemy"}, "release_url": "https://pypi.org/project/flask-restplus-sqlalchemy/0.0.1/", "requires_dist": ["SQLAlchemy", "flask-restplus", "flask-sqlalchemy", "bandit ; extra == 'dev'", "coverage ; extra == 'dev'", "pylint ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "sphinx-theme ; extra == 'dev'", "bandit ; extra == 'test'", "coverage ; extra == 'test'", "pylint ; extra == 'test'", "pytest-cov ; extra == 'test'", "sphinx-theme ; extra == 'test'"], "requires_python": ">=3.5", "summary": "Flask RestPlus SqlAlchemy", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask RestPlus SqlAlchemy</h1>\n<p>Auto generates the Flask RestPlus Model section in swagger from SqlAlchemy models.</p>\n<blockquote>\n<p><strong>Note:</strong> Make sure you don't import any endpoints be for you call <code>init_db(flask_application)</code> else the <code>api_model_factory.get_entity</code> will be empty</p>\n</blockquote>\n<blockquote>\n<p><strong>Disclaimer</strong> This project is not at this time, 2020 Feb. 1,  affiliated with Flask, Flask-RestPlus or SqlAlchemy projects.</p>\n</blockquote>\n<h1>Usage</h1>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">BigInteger</span><span class=\"p\">,</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">DateTime</span><span class=\"p\">,</span> <span class=\"n\">Date</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">flask_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemy</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">flask_restplus</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">flask_restplus_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">ApiModelFactory</span>\n\n    <span class=\"n\">flask_app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span> <span class=\"c1\"># Flask Application</span>\n    <span class=\"n\">flask_app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'connection string'</span>\n    <span class=\"c1\"># Create RestPlus API</span>\n    <span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"n\">Api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span>\n            <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'x'</span><span class=\"p\">,</span>\n            <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'test_api'</span><span class=\"p\">,</span>\n            <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n            <span class=\"n\">default_label</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Test'</span><span class=\"p\">)</span> <span class=\"c1\"># </span>\n    <span class=\"c1\"># SQLAlchemy Database instance</span>\n    <span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">SQLAlchemy</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemy</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># normally you would import models here</span>\n    <span class=\"c1\"># ex: from app.data import models</span>\n\n    <span class=\"c1\"># For this example will just make one model</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span> \n        <span class=\"sd\">\"\"\" Person Entity</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s2\">\"person\"</span>\n        <span class=\"n\">__abstract__</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span>\n            <span class=\"n\">BigInteger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">with_variant</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"s2\">\"sqlite\"</span><span class=\"p\">),</span>\n            <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">created_on</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">DateTime</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">birth</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Date</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">first_name</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">middle_name</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">last_name</span><span class=\"p\">:</span> <span class=\"n\">Column</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Bind the SQLAlchemy to the Flask Application</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">flask_app</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Link Flask Rest Plus API with SQLAlchemy</span>\n    <span class=\"n\">api_model_factory</span> <span class=\"o\">=</span> <span class=\"n\">ApiModelFactory</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">=</span><span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"n\">db</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Get entity Person </span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">api_model_factory</span><span class=\"o\">.</span><span class=\"n\">get_entity</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">__tablename__</span><span class=\"p\">)</span>\n</pre>\n<h1>Sample Integration into full project</h1>\n<p>Below is a sample use case.</p>\n<h2>Folder structure</h2>\n<pre><code>.\n\u251c\u2500\u2500 sample api\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 api\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 auth.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 endpoints\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 status.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 restplus.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 swagger\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 status.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 access\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dal.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 models\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 audit.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 person.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settings.py\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements-dev.txt\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 run.py\n\u2514\u2500\u2500 test\n \u00a0\u00a0 \u251c\u2500\u2500 api\n    \u2502   All tests should go here\n \u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n\n</code></pre>\n<h2>Person Endpoint</h2>\n<p>This example used A DataAccessLayer as an abstraction, may not needed.</p>\n<pre><span class=\"sd\">\"\"\" Person Endpoint</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">http</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPStatus</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restplus</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..restplus</span> <span class=\"kn\">import</span> <span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">name_space</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..swagger</span> <span class=\"kn\">import</span> <span class=\"n\">api_model_factory</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">...data.access</span> <span class=\"kn\">import</span> <span class=\"n\">DataAccessLayer</span><span class=\"p\">,</span> <span class=\"n\">PersonDAL</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..auth</span> <span class=\"kn\">import</span> <span class=\"n\">user_id</span>\n\n<span class=\"n\">ENTITY_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'person'</span>\n<span class=\"n\">ENTITY</span> <span class=\"o\">=</span> <span class=\"n\">api_model_factory</span><span class=\"o\">.</span><span class=\"n\">get_entity</span><span class=\"p\">(</span><span class=\"n\">ENTITY_NAME</span><span class=\"p\">)</span>\n<span class=\"n\">NAME_SPACE</span> <span class=\"o\">=</span> <span class=\"n\">name_space</span><span class=\"p\">(</span><span class=\"n\">ENTITY_NAME</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@NAME_SPACE</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonCollection</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" PersonCollection</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">dal</span><span class=\"p\">:</span> <span class=\"n\">DataAccessLayer</span> <span class=\"o\">=</span> <span class=\"n\">PersonDAL</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">marshal_list_with</span><span class=\"p\">(</span><span class=\"n\">ENTITY</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns list of persons.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"n\">get_collection</span><span class=\"p\">(),</span> <span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">OK</span>\n\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">CREATED</span><span class=\"p\">,</span> <span class=\"s1\">'Created person'</span><span class=\"p\">)</span>\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">ENTITY</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Creates a new person</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">(),</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">),</span> <span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">CREATED</span>\n\n\n<span class=\"nd\">@NAME_SPACE</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;int:id&gt;'</span><span class=\"p\">)</span>\n<span class=\"nd\">@NAME_SPACE</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"mi\">404</span><span class=\"p\">,</span> <span class=\"s2\">\"Could not find person\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonItem</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" PersonItem</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">dal</span><span class=\"p\">:</span> <span class=\"n\">DataAccessLayer</span> <span class=\"o\">=</span> <span class=\"n\">PersonDAL</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">marshal_list_with</span><span class=\"p\">(</span><span class=\"n\">ENTITY</span><span class=\"p\">)</span>\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NOT_FOUND</span><span class=\"p\">,</span> <span class=\"s1\">'Cant find person'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Returns a single person.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"n\">get_item</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span> <span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">OK</span>\n\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NO_CONTENT</span><span class=\"p\">,</span> <span class=\"s1\">'Update classed person information'</span><span class=\"p\">)</span>\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">ENTITY</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Updates a person</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">(),</span>\n            <span class=\"n\">entity_id</span><span class=\"o\">=</span><span class=\"nb\">id</span><span class=\"p\">,</span>\n            <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NO_CONTENT</span>\n\n    <span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NO_CONTENT</span><span class=\"p\">,</span> <span class=\"s1\">'Deleted person information'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Delete a person</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">(),</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NO_CONTENT</span>\n</pre>\n<h2>Restplus</h2>\n<p>In above example this is where api and error handling logic is located</p>\n<pre><span class=\"sd\">\"\"\" Api Creation</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restplus</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Namespace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.orm.exc</span> <span class=\"kn\">import</span> <span class=\"n\">NoResultFound</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..</span> <span class=\"kn\">import</span> <span class=\"n\">__version__</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"n\">Api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"n\">__version__</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'My API'</span><span class=\"p\">,</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'???'</span><span class=\"p\">,</span>\n    <span class=\"n\">default_label</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'My Rest Api'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">format_uri</span><span class=\"p\">(</span><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" Format url from entity name.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">entity_name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'_'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">explode_entity_name</span><span class=\"p\">(</span><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" replaces _ with space</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">entity_name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'_'</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">name_space</span><span class=\"p\">(</span><span class=\"n\">entity_name</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Namespace</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" Get formatted namespace</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">namespace</span><span class=\"p\">(</span>\n        <span class=\"n\">format_uri</span><span class=\"p\">(</span><span class=\"n\">entity_name</span><span class=\"p\">),</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Operations related to </span><span class=\"si\">{}</span><span class=\"s1\">'</span>\n        <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">explode_entity_name</span><span class=\"p\">(</span><span class=\"n\">entity_name</span><span class=\"p\">)))</span>\n\n\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">errorhandler</span>\n<span class=\"k\">def</span> <span class=\"nf\">default_error_handler</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" By default all errors will be handled here</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">'An Unhandled exception has occurred'</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"n\">message</span><span class=\"p\">},</span> <span class=\"mi\">500</span>\n\n\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">errorhandler</span><span class=\"p\">(</span><span class=\"n\">NoResultFound</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">database_not_found_error_handler</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" Database not found</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"s1\">'A database result was not found'</span><span class=\"p\">},</span> <span class=\"mi\">404</span>\n</pre>\n\n          </div>"}, "last_serial": 6866422, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "075da33df2520d7507cf95bfd19eabc0", "sha256": "dfc7a71ead01c03243ae387b7be8f56ab2d3797e7e75578046c0b23b25badfe9"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "075da33df2520d7507cf95bfd19eabc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7810, "upload_time": "2020-02-01T22:29:08", "upload_time_iso_8601": "2020-02-01T22:29:08.528280Z", "url": "https://files.pythonhosted.org/packages/42/c4/0f0a8f4165388131788412fe4d9839eef741e8f3a909d0a72b5919da2a64/flask_restplus_sqlalchemy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "484fc8794077666fff3f354400c87571", "sha256": "de6dab4f087c6b6a97e13c926078383ee1246fc4c2a03a7e1f3a3450632ff040"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "484fc8794077666fff3f354400c87571", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6394, "upload_time": "2020-02-01T22:29:09", "upload_time_iso_8601": "2020-02-01T22:29:09.882782Z", "url": "https://files.pythonhosted.org/packages/26/ef/4b6251ebf56d6db4f6c6a4b583e6a6d7e5d43429116c62a7c8ca99e58cb3/flask_restplus_sqlalchemy-0.0.1.tar.gz", "yanked": false}], "0.0.1b1": [{"comment_text": "", "digests": {"md5": "e8301971cfc60475dafcbc83ea6cdc56", "sha256": "e7060fdc40b898354e34197fdf67a8664b5e153edc5124951e8e1821a6ca2800"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8301971cfc60475dafcbc83ea6cdc56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7857, "upload_time": "2020-02-01T22:14:28", "upload_time_iso_8601": "2020-02-01T22:14:28.054203Z", "url": "https://files.pythonhosted.org/packages/66/ae/254dfec11fa183010f95bcfb785b9f46d825d106bace1a1315292c5a4ff5/flask_restplus_sqlalchemy-0.0.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9780b72c51ffd6b4cfdc8f86efe1f4dc", "sha256": "b6fc5f5e49fa691bca2d716b617a0b7954d0c7d65895aa4127857904a4cc6b33"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "9780b72c51ffd6b4cfdc8f86efe1f4dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6438, "upload_time": "2020-02-01T22:14:30", "upload_time_iso_8601": "2020-02-01T22:14:30.741346Z", "url": "https://files.pythonhosted.org/packages/0d/17/fb6d406729cdd26d3cc7104734c999dc004561bbd9d3bf886cb432e28d93/flask_restplus_sqlalchemy-0.0.1b1.tar.gz", "yanked": false}], "0.0.2rc1": [{"comment_text": "", "digests": {"md5": "b37a4181ef7770bb08f895d559a37db2", "sha256": "9e27407b791779ec6565b42b94f02bd21906b8583b9b3d5a0bae596f2ff3f79e"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.2rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "b37a4181ef7770bb08f895d559a37db2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7937, "upload_time": "2020-03-23T14:03:09", "upload_time_iso_8601": "2020-03-23T14:03:09.840584Z", "url": "https://files.pythonhosted.org/packages/50/3e/7719c323310d8627c2b778e99a2446f09839843a3d0589afef5f1f2533c2/flask_restplus_sqlalchemy-0.0.2rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ecd970e126830cf88a0e9c307302b76", "sha256": "103f30c5fe9bfb5ed7a8af4807228d0c4813c71fddd9750739401b8c8b2c9c57"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.2rc1.tar.gz", "has_sig": false, "md5_digest": "5ecd970e126830cf88a0e9c307302b76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6490, "upload_time": "2020-03-23T14:03:11", "upload_time_iso_8601": "2020-03-23T14:03:11.159903Z", "url": "https://files.pythonhosted.org/packages/9c/0f/7a5d356ca2dcf52d494b614448dc4c1223cd847983bb3181ecca6df72889/flask_restplus_sqlalchemy-0.0.2rc1.tar.gz", "yanked": false}], "0.0.2rc2": [{"comment_text": "", "digests": {"md5": "74b68020b58238b57d279d399b2b2e0f", "sha256": "7e79589c46934bc9ed34b48dd54f0507ca04a2866dd41f5cdfae7574cb9753bb"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.2rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "74b68020b58238b57d279d399b2b2e0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7943, "upload_time": "2020-03-23T15:53:51", "upload_time_iso_8601": "2020-03-23T15:53:51.252677Z", "url": "https://files.pythonhosted.org/packages/ab/70/8987ff89146b3423f4e91adcca1ba39f6b9a7e61692bc815164ca004351b/flask_restplus_sqlalchemy-0.0.2rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f450b4b22ad790fc5a324ce5d4c899b", "sha256": "b6b2c2544d2f6618a5f97c03f67aad72ff169d1448e95030a157bc15fed1c7e1"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.2rc2.tar.gz", "has_sig": false, "md5_digest": "4f450b4b22ad790fc5a324ce5d4c899b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6484, "upload_time": "2020-03-23T15:53:53", "upload_time_iso_8601": "2020-03-23T15:53:53.340962Z", "url": "https://files.pythonhosted.org/packages/5e/b3/616a924321f38508394969febe1f888dec44c1c29a357e39168c2d7df41d/flask_restplus_sqlalchemy-0.0.2rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "075da33df2520d7507cf95bfd19eabc0", "sha256": "dfc7a71ead01c03243ae387b7be8f56ab2d3797e7e75578046c0b23b25badfe9"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "075da33df2520d7507cf95bfd19eabc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7810, "upload_time": "2020-02-01T22:29:08", "upload_time_iso_8601": "2020-02-01T22:29:08.528280Z", "url": "https://files.pythonhosted.org/packages/42/c4/0f0a8f4165388131788412fe4d9839eef741e8f3a909d0a72b5919da2a64/flask_restplus_sqlalchemy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "484fc8794077666fff3f354400c87571", "sha256": "de6dab4f087c6b6a97e13c926078383ee1246fc4c2a03a7e1f3a3450632ff040"}, "downloads": -1, "filename": "flask_restplus_sqlalchemy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "484fc8794077666fff3f354400c87571", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6394, "upload_time": "2020-02-01T22:29:09", "upload_time_iso_8601": "2020-02-01T22:29:09.882782Z", "url": "https://files.pythonhosted.org/packages/26/ef/4b6251ebf56d6db4f6c6a4b583e6a6d7e5d43429116c62a7c8ca99e58cb3/flask_restplus_sqlalchemy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:24 2020"}