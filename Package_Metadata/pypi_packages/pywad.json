{"info": {"author": "TakesxiSximada", "author_email": "takesxi.sximada@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Web Environment :: Mozilla", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing"], "description": "The Python Web Auto Drive Framework.\n\nThe pywad is framework for driving the web browser automatically,\nusing selenium. Need Selenium and python binding of it(selenium-2.35.0 or later).\nAnd need the Chrome Driver if you want to be use Google Chrome.\nBut we have not been able to support it not yet.\nNow, Firefox only.\n\ninstall\n===========\n\nNeed Selenium,\nsee http://www.seleniumhq.org/\n\nNext, execute command.::\n\n    $ pip install pywad\n\n\nHow to use\n===========\n\nThe pywad.Part control the browser when pywad.Part.is_target() return True.\n:term:`browser` is a selenium's WebDriver object. :term:`status` is a dictionaly,\nbut anything ok. The mission of it is to communicate datas for other part object.\n\nFor example,\n::\n\n    from pywad import Part\n    from pywad.decorator import url_match\n    \n\n    class GoogleTop(Part):\n        def _is_search_button(self, text):\n            for word in self.search_words:\n                if word in text:\n                    return True\n\n        @url_match('www\\.google\\.')\n        def is_target(self, browser, status):\n            return True\n\n        def run(self, browser, status):\n            entries = browser.find_elements_by_css_selector('input')\n            for entry in entries:\n                if entry.get_attribute('type') == 'text':\n                    entry.send_keys('test\\n\\n')\n\n\nNext, let running it using Runner object. The Runner object is list-like object.\nIt expects that the Part object enters. Run the parts objects if execute Runner.run().\n\n::\n\n    def main():\n        url = 'http://www.google.com'\n        runner = Runner()\n        runner.append(GoogleTop())\n        runner.run(url)\n\n    if __name__ == '__main__':\n        main()\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/TakesxiSximada/pywad/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TakesxiSximada/pywad", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pywad", "package_url": "https://pypi.org/project/pywad/", "platform": "any", "project_url": "https://pypi.org/project/pywad/", "project_urls": {"Download": "https://github.com/TakesxiSximada/pywad/archive/master.zip", "Homepage": "https://github.com/TakesxiSximada/pywad"}, "release_url": "https://pypi.org/project/pywad/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "The Python Web Auto Drive framework using selenium.webdriver.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            The Python Web Auto Drive Framework.<br><br>The pywad is framework for driving the web browser automatically,<br>using selenium. Need Selenium and python binding of it(selenium-2.35.0 or later).<br>And need the Chrome Driver if you want to be use Google Chrome.<br>But we have not been able to support it not yet.<br>Now, Firefox only.<br><br>install<br>===========<br><br>Need Selenium,<br>see http://www.seleniumhq.org/<br><br>Next, execute command.::<br><br>    $ pip install pywad<br><br><br>How to use<br>===========<br><br>The pywad.Part control the browser when pywad.Part.is_target() return True.<br>:term:`browser` is a selenium's WebDriver object. :term:`status` is a dictionaly,<br>but anything ok. The mission of it is to communicate datas for other part object.<br><br>For example,<br>::<br><br>    from pywad import Part<br>    from pywad.decorator import url_match<br>    <br><br>    class GoogleTop(Part):<br>        def _is_search_button(self, text):<br>            for word in self.search_words:<br>                if word in text:<br>                    return True<br><br>        @url_match('www\\.google\\.')<br>        def is_target(self, browser, status):<br>            return True<br><br>        def run(self, browser, status):<br>            entries = browser.find_elements_by_css_selector('input')<br>            for entry in entries:<br>                if entry.get_attribute('type') == 'text':<br>                    entry.send_keys('test\\n\\n')<br><br><br>Next, let running it using Runner object. The Runner object is list-like object.<br>It expects that the Part object enters. Run the parts objects if execute Runner.run().<br><br>::<br><br>    def main():<br>        url = 'http://www.google.com'<br>        runner = Runner()<br>        runner.append(GoogleTop())<br>        runner.run(url)<br><br>    if __name__ == '__main__':<br>        main()<br>\n          </div>"}, "last_serial": 1714920, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a386d71b3ee4cf6ec82fb0ca14cd126", "sha256": "f5f74ff9a4d15baff46c94d1f67b5d705bfd90434986872a7b20a7d114c6c914"}, "downloads": -1, "filename": "pywad-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2a386d71b3ee4cf6ec82fb0ca14cd126", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4426, "upload_time": "2013-10-30T13:17:21", "upload_time_iso_8601": "2013-10-30T13:17:21.381800Z", "url": "https://files.pythonhosted.org/packages/22/e4/da3524dfe6998aec4a137995c8a326ad2a4352b44e95de90afa5faad93c3/pywad-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "da0cac2762100b449eb490f26ee61819", "sha256": "eabd7a91246a70f946e3f56533a000e56569866fc3e2126e1ddde85088e33bc0"}, "downloads": -1, "filename": "pywad-0.1.2.tar.gz", "has_sig": false, "md5_digest": "da0cac2762100b449eb490f26ee61819", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4401, "upload_time": "2014-04-15T13:53:19", "upload_time_iso_8601": "2014-04-15T13:53:19.430748Z", "url": "https://files.pythonhosted.org/packages/44/29/fb34b767a8c6436a3002967e20d6f58997fbd685a9e5db4e14f944250a27/pywad-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5e457c45e4484cef30fff9ca8ac89783", "sha256": "5d43ceea1b75d1f8beb43a3a70a29423db13214ec136f37376464dfc2bb0bb3f"}, "downloads": -1, "filename": "pywad-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5e457c45e4484cef30fff9ca8ac89783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4322, "upload_time": "2014-12-11T01:05:33", "upload_time_iso_8601": "2014-12-11T01:05:33.666665Z", "url": "https://files.pythonhosted.org/packages/c3/65/cf790259c78c7e80fe8ec1590290c443b5dcfc8eddc17356b80aacbf4f2a/pywad-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "cdef5b3e8faa784c550b2d548a40d388", "sha256": "5be21e86919f5e67415a1290e3748083bf5f94bc05728d769299a48882d3bc95"}, "downloads": -1, "filename": "pywad-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cdef5b3e8faa784c550b2d548a40d388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4608, "upload_time": "2015-03-16T09:38:54", "upload_time_iso_8601": "2015-03-16T09:38:54.983037Z", "url": "https://files.pythonhosted.org/packages/5b/ef/6c290145ea829244602dedb694d4eee0a21f8adf149ff4a3a15389f3b79c/pywad-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cdef5b3e8faa784c550b2d548a40d388", "sha256": "5be21e86919f5e67415a1290e3748083bf5f94bc05728d769299a48882d3bc95"}, "downloads": -1, "filename": "pywad-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cdef5b3e8faa784c550b2d548a40d388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4608, "upload_time": "2015-03-16T09:38:54", "upload_time_iso_8601": "2015-03-16T09:38:54.983037Z", "url": "https://files.pythonhosted.org/packages/5b/ef/6c290145ea829244602dedb694d4eee0a21f8adf149ff4a3a15389f3b79c/pywad-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:45 2020"}