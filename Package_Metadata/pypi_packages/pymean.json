{"info": {"author": "Keiron O'Shea", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "# pyMEAN: Metabolomic Enrichment ANalysis in Python\n\nThe pyMEAN package is designed to facilitate semi-automated enrichment analysis for metabolomic experiments.\n\n## Installation\n\npyMEAN requires Python 3+ and is unfortunately not compatible with Python 2. If you are still using Python 2, a clever workaround is to install Python 3 and use that instead.\n\nThe easiest way of installing pyMEAN is using pip:\n\n```\npip install pymean\n```\n\nAlternatively, you can use git and pip in unison to get the development branch:\n\n```\npip install https://github.com/KeironO/pyMEAN\n```\n\n## Usage\n\nHere's a starting template to get you started:\n\n```python\n# Import pyMEAN module into Python.\nfrom pymean import EnrichmentAnalysis\n\n# A compound list of inchikeys.\ncompound_list = [\n    \"WDJHALXBUFZDSR-UHFFFAOYSA-N\", # acetoacetic acid\n    \"UCMIRNVEIXFBKS-UHFFFAOYSA-N\", # beta-alanine\n    \"CVSVTCORWBXHQV-UHFFFAOYSA-N\", # creatine\n    \"FFDGPVCHZBVARC-UHFFFAOYSA-N\", # dimethylglycine\n    \"VZCYOOQTPOCHFL-OWOJBTEDSA-N\", # fumaric acid\n    \"DHMQDGOQFOQNFH-UHFFFAOYSA-N\", # glycine\n    \"FFFHZYDWPBMWHY-UHFFFAOYSA-N\", # l-homocysteine\n    \"XUJNEKJLAYXESH-REOHCLBHSA-N\", # l-cysteine\n    \"COLNVLDHVKWLRT-QMMMGPOBSA-N\", # l-phenylalanine\n    \"BTNMPGBKDVTSJY-UHFFFAOYSA-N\" # phenylpyruvic acid\n]\n\n\n# Create an EnrichmentAnalysis object for the analysis of hsa\nea = EnrichmentAnalysis(compound_list, organism=\"hsa\")\n\n# Run the analysis\nea.run_analysis(pvalue_cutoff=0.05)\n\n# Obtain results (in the format of a pandas dataframe)\nresuklts = ea.results\n\n```\n\nIf you'd like to plot out your results, take inspiration from the following method:\n\n```python\ndef plot_enrichment_analysis_results(results: pd.DataFrame, adj_method:str):\n    fold_enrichment = np.abs(np.log(results[\"%s adj. p-value\" % (adj_method)]))\n    plt.figure()\n    plt.title(\"Metabolite Sets Enrichment Overview\")\n    plt.barh(results[\"Pathway Name\"], fold_enrichment, height=0.5)\n    plt.xlabel(\"Fold Enrichment\")\n\n    plt.yticks(fontsize=6)\n    plt.tight_layout()\n\n    plt.show()\n\nplot_enrichment_analysis_results(results, \"fdr_bh\")\n\n```\n\nWhich will return the following chart:\n\n![Plot of results](https://github.com/AberystwythSystemsBiology/pyMEAN/raw/master/example.png)\n\n## License\n\nCode released under the [GPLv3](https://github.com/AberystwythSystemsBiology/pyMEAN/blob/master/LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AberystwythSystemsBiology/pyMEAN", "keywords": "metabolomics,enrichment analysis,omics", "license": "", "maintainer": "", "maintainer_email": "", "name": "pymean", "package_url": "https://pypi.org/project/pymean/", "platform": "", "project_url": "https://pypi.org/project/pymean/", "project_urls": {"Homepage": "https://github.com/AberystwythSystemsBiology/pyMEAN"}, "release_url": "https://pypi.org/project/pymean/0.30/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "The pyMEAN package is designed to facilitate semi-automated enrichment analysis for metabolomic experiments.", "version": "0.30", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyMEAN: Metabolomic Enrichment ANalysis in Python</h1>\n<p>The pyMEAN package is designed to facilitate semi-automated enrichment analysis for metabolomic experiments.</p>\n<h2>Installation</h2>\n<p>pyMEAN requires Python 3+ and is unfortunately not compatible with Python 2. If you are still using Python 2, a clever workaround is to install Python 3 and use that instead.</p>\n<p>The easiest way of installing pyMEAN is using pip:</p>\n<pre><code>pip install pymean\n</code></pre>\n<p>Alternatively, you can use git and pip in unison to get the development branch:</p>\n<pre><code>pip install https://github.com/KeironO/pyMEAN\n</code></pre>\n<h2>Usage</h2>\n<p>Here's a starting template to get you started:</p>\n<pre><span class=\"c1\"># Import pyMEAN module into Python.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymean</span> <span class=\"kn\">import</span> <span class=\"n\">EnrichmentAnalysis</span>\n\n<span class=\"c1\"># A compound list of inchikeys.</span>\n<span class=\"n\">compound_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"WDJHALXBUFZDSR-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># acetoacetic acid</span>\n    <span class=\"s2\">\"UCMIRNVEIXFBKS-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># beta-alanine</span>\n    <span class=\"s2\">\"CVSVTCORWBXHQV-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># creatine</span>\n    <span class=\"s2\">\"FFDGPVCHZBVARC-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># dimethylglycine</span>\n    <span class=\"s2\">\"VZCYOOQTPOCHFL-OWOJBTEDSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># fumaric acid</span>\n    <span class=\"s2\">\"DHMQDGOQFOQNFH-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># glycine</span>\n    <span class=\"s2\">\"FFFHZYDWPBMWHY-UHFFFAOYSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># l-homocysteine</span>\n    <span class=\"s2\">\"XUJNEKJLAYXESH-REOHCLBHSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># l-cysteine</span>\n    <span class=\"s2\">\"COLNVLDHVKWLRT-QMMMGPOBSA-N\"</span><span class=\"p\">,</span> <span class=\"c1\"># l-phenylalanine</span>\n    <span class=\"s2\">\"BTNMPGBKDVTSJY-UHFFFAOYSA-N\"</span> <span class=\"c1\"># phenylpyruvic acid</span>\n<span class=\"p\">]</span>\n\n\n<span class=\"c1\"># Create an EnrichmentAnalysis object for the analysis of hsa</span>\n<span class=\"n\">ea</span> <span class=\"o\">=</span> <span class=\"n\">EnrichmentAnalysis</span><span class=\"p\">(</span><span class=\"n\">compound_list</span><span class=\"p\">,</span> <span class=\"n\">organism</span><span class=\"o\">=</span><span class=\"s2\">\"hsa\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Run the analysis</span>\n<span class=\"n\">ea</span><span class=\"o\">.</span><span class=\"n\">run_analysis</span><span class=\"p\">(</span><span class=\"n\">pvalue_cutoff</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Obtain results (in the format of a pandas dataframe)</span>\n<span class=\"n\">resuklts</span> <span class=\"o\">=</span> <span class=\"n\">ea</span><span class=\"o\">.</span><span class=\"n\">results</span>\n</pre>\n<p>If you'd like to plot out your results, take inspiration from the following method:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">plot_enrichment_analysis_results</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">adj_method</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"n\">fold_enrichment</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> adj. p-value\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">adj_method</span><span class=\"p\">)]))</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s2\">\"Metabolite Sets Enrichment Overview\"</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">barh</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s2\">\"Pathway Name\"</span><span class=\"p\">],</span> <span class=\"n\">fold_enrichment</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s2\">\"Fold Enrichment\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">yticks</span><span class=\"p\">(</span><span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">plot_enrichment_analysis_results</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"s2\">\"fdr_bh\"</span><span class=\"p\">)</span>\n</pre>\n<p>Which will return the following chart:</p>\n<p><img alt=\"Plot of results\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/295254a7eb2d8395569421378063401f3bbd29c7/68747470733a2f2f6769746875622e636f6d2f416265727973747779746853797374656d7342696f6c6f67792f70794d45414e2f7261772f6d61737465722f6578616d706c652e706e67\"></p>\n<h2>License</h2>\n<p>Code released under the <a href=\"https://github.com/AberystwythSystemsBiology/pyMEAN/blob/master/LICENSE\" rel=\"nofollow\">GPLv3</a>.</p>\n\n          </div>"}, "last_serial": 5484362, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "27739b81d6fd324f4f6daa9baf54ba1d", "sha256": "c736ded50175de0d9cbe98cfcc311fc734878598e76b4f3768496422e00e7b48"}, "downloads": -1, "filename": "pymean-0.2.tar.gz", "has_sig": false, "md5_digest": "27739b81d6fd324f4f6daa9baf54ba1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 18062, "upload_time": "2019-06-18T16:45:19", "upload_time_iso_8601": "2019-06-18T16:45:19.498782Z", "url": "https://files.pythonhosted.org/packages/91/6d/f7bc3742897bb49f93a4101348a531e8c3e0389d22e403a291f9457780f2/pymean-0.2.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "3dd52978f9cc29dfede30ae7c0e42663", "sha256": "fddd0c719ac20f8682455db2c0d832229e85d0c1873f0e2cc70b888a14643c4d"}, "downloads": -1, "filename": "pymean-0.21.tar.gz", "has_sig": false, "md5_digest": "3dd52978f9cc29dfede30ae7c0e42663", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 18058, "upload_time": "2019-06-19T14:06:49", "upload_time_iso_8601": "2019-06-19T14:06:49.197916Z", "url": "https://files.pythonhosted.org/packages/9a/2b/7c39830a50ee655af186cb5f4bb96946fe2951922980a0cd5460d575abf8/pymean-0.21.tar.gz", "yanked": false}], "0.22": [{"comment_text": "", "digests": {"md5": "95c2887751c1f9c90e28fa910a015c1a", "sha256": "9444533cd863c6a4ed46e771138a3223a0d22cec715aafdd2440c6394b8c5d3f"}, "downloads": -1, "filename": "pymean-0.22.tar.gz", "has_sig": false, "md5_digest": "95c2887751c1f9c90e28fa910a015c1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 18172, "upload_time": "2019-06-19T15:10:52", "upload_time_iso_8601": "2019-06-19T15:10:52.801949Z", "url": "https://files.pythonhosted.org/packages/a8/94/30c87e6b244ff1aee2d9a23ac9027799c792fee751480da63f4789cfc313/pymean-0.22.tar.gz", "yanked": false}], "0.30": [{"comment_text": "", "digests": {"md5": "b7183434094b1c23e48b9b1d782d189f", "sha256": "51fe958ca755bc24c302d01c9437dbc2db5b523092a6c885d83ea48bad517430"}, "downloads": -1, "filename": "pymean-0.30.tar.gz", "has_sig": false, "md5_digest": "b7183434094b1c23e48b9b1d782d189f", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 18314, "upload_time": "2019-07-04T02:29:08", "upload_time_iso_8601": "2019-07-04T02:29:08.569512Z", "url": "https://files.pythonhosted.org/packages/fe/7d/976c4ab634efa4b1feeccc05136b7b51606961c326ccd96962e82db7966a/pymean-0.30.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7183434094b1c23e48b9b1d782d189f", "sha256": "51fe958ca755bc24c302d01c9437dbc2db5b523092a6c885d83ea48bad517430"}, "downloads": -1, "filename": "pymean-0.30.tar.gz", "has_sig": false, "md5_digest": "b7183434094b1c23e48b9b1d782d189f", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 18314, "upload_time": "2019-07-04T02:29:08", "upload_time_iso_8601": "2019-07-04T02:29:08.569512Z", "url": "https://files.pythonhosted.org/packages/fe/7d/976c4ab634efa4b1feeccc05136b7b51606961c326ccd96962e82db7966a/pymean-0.30.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:20 2020"}