{"info": {"author": "Yuriy Shatrov", "author_email": "ykshatrov@ya.ru", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "yzconfig\n========\n\n![build](https://travis-ci.org/ykshatroff/yzconfig.svg?branch=master)\n\nSimple application configuration tool for Django (and others)\n\nSummary\n-------\n\n`yzconfig` allows you to:\n\n* Define all settings for all of your Django project's applications in one python object (usually, a module)\n* Use name prefixes to instantiate the settings object of an application \n\nUsage\n-----\n\n`yzconfig` takes an arbitrary object and populates `settings` with values from its attributes whose names\nare constructed as `prefix + attr` where `attr` is a `settings` class attribute and `prefix` is given as argument to\n`settings` constructor.\n\nAn application's settings are defined in a class which inherits from `YzConfig`, then a settings object\nis instantiated with the desired prefix:\n```python\nfrom yzconfig import YzConfig\n\nclass Settings(YzConfig):\n    VALUE = \"default\"\n    _SKIPPED_VALUE = 'skipped'\n\nsettings = Settings('TEST_')\n```\n\nIf your Django settings contain a `TEST_VALUE` property, then the `settings` object's `VALUE` will contain its value,\notherwise it will remain with `\"default\"`.\n\nAttributes beginning with `_` will not be overwritten. \n\n`yzconfig` can be used with Django or standalone. For the latter case, it's possible to provide a python dotted path\nto the settings object in `YZCONFIG_MODULE` environment variable. The default is to import `settings`. \nTo be used with Django, no extra actions are required.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ykshatroff/yzconfig", "keywords": "config settings", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "yzconfig", "package_url": "https://pypi.org/project/yzconfig/", "platform": "", "project_url": "https://pypi.org/project/yzconfig/", "project_urls": {"Homepage": "https://github.com/ykshatroff/yzconfig"}, "release_url": "https://pypi.org/project/yzconfig/1.0/", "requires_dist": ["check-manifest; extra == 'dev'", "coverage; extra == 'test'"], "requires_python": "", "summary": "Easy configuration for your project", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            yzconfig<br>========<br><br>![build](https://travis-ci.org/ykshatroff/yzconfig.svg?branch=master)<br><br>Simple application configuration tool for Django (and others)<br><br>Summary<br>-------<br><br>`yzconfig` allows you to:<br><br>* Define all settings for all of your Django project's applications in one python object (usually, a module)<br>* Use name prefixes to instantiate the settings object of an application <br><br>Usage<br>-----<br><br>`yzconfig` takes an arbitrary object and populates `settings` with values from its attributes whose names<br>are constructed as `prefix + attr` where `attr` is a `settings` class attribute and `prefix` is given as argument to<br>`settings` constructor.<br><br>An application's settings are defined in a class which inherits from `YzConfig`, then a settings object<br>is instantiated with the desired prefix:<br>```python<br>from yzconfig import YzConfig<br><br>class Settings(YzConfig):<br>    VALUE = \"default\"<br>    _SKIPPED_VALUE = 'skipped'<br><br>settings = Settings('TEST_')<br>```<br><br>If your Django settings contain a `TEST_VALUE` property, then the `settings` object's `VALUE` will contain its value,<br>otherwise it will remain with `\"default\"`.<br><br>Attributes beginning with `_` will not be overwritten. <br><br>`yzconfig` can be used with Django or standalone. For the latter case, it's possible to provide a python dotted path<br>to the settings object in `YZCONFIG_MODULE` environment variable. The default is to import `settings`. <br>To be used with Django, no extra actions are required.<br><br><br>\n          </div>"}, "last_serial": 3385051, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "fb161bf0dd1e8e425ab973c8e543aa82", "sha256": "94eda32e66402e7a277fc245d61f3ea0699d8a45638046033e469c20dc385989"}, "downloads": -1, "filename": "yzconfig-1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "fb161bf0dd1e8e425ab973c8e543aa82", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7336, "upload_time": "2017-12-03T17:29:13", "upload_time_iso_8601": "2017-12-03T17:29:13.684548Z", "url": "https://files.pythonhosted.org/packages/9d/d2/267f016cae84a90b7e363fee1a336bf3b9fd5d12101aae8411bacab62bb9/yzconfig-1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b52deab4be4caaae772d3f9af5e221f", "sha256": "3053aa3ac9ee23a0f626fa5117a852acb3eda532153df9e57a99b159991465bf"}, "downloads": -1, "filename": "yzconfig-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4b52deab4be4caaae772d3f9af5e221f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7337, "upload_time": "2017-12-03T17:29:04", "upload_time_iso_8601": "2017-12-03T17:29:04.914805Z", "url": "https://files.pythonhosted.org/packages/4e/06/b312d8f012d21ae648878408839107be72e36414a8961d49d5bbf74b81e7/yzconfig-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a54c2ce30144766c686f4b43fa9acce6", "sha256": "ced7b38570977451d17f6415efc355b62e65716fc663c11e8d629b06f366ce4e"}, "downloads": -1, "filename": "yzconfig-1.0.tar.gz", "has_sig": false, "md5_digest": "a54c2ce30144766c686f4b43fa9acce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5185, "upload_time": "2017-12-03T17:29:05", "upload_time_iso_8601": "2017-12-03T17:29:05.889234Z", "url": "https://files.pythonhosted.org/packages/05/32/a14fc88982667eadb0b9c2f6e19a53c720e9d52bb1413b653ee269e8bf59/yzconfig-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb161bf0dd1e8e425ab973c8e543aa82", "sha256": "94eda32e66402e7a277fc245d61f3ea0699d8a45638046033e469c20dc385989"}, "downloads": -1, "filename": "yzconfig-1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "fb161bf0dd1e8e425ab973c8e543aa82", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7336, "upload_time": "2017-12-03T17:29:13", "upload_time_iso_8601": "2017-12-03T17:29:13.684548Z", "url": "https://files.pythonhosted.org/packages/9d/d2/267f016cae84a90b7e363fee1a336bf3b9fd5d12101aae8411bacab62bb9/yzconfig-1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b52deab4be4caaae772d3f9af5e221f", "sha256": "3053aa3ac9ee23a0f626fa5117a852acb3eda532153df9e57a99b159991465bf"}, "downloads": -1, "filename": "yzconfig-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4b52deab4be4caaae772d3f9af5e221f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7337, "upload_time": "2017-12-03T17:29:04", "upload_time_iso_8601": "2017-12-03T17:29:04.914805Z", "url": "https://files.pythonhosted.org/packages/4e/06/b312d8f012d21ae648878408839107be72e36414a8961d49d5bbf74b81e7/yzconfig-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a54c2ce30144766c686f4b43fa9acce6", "sha256": "ced7b38570977451d17f6415efc355b62e65716fc663c11e8d629b06f366ce4e"}, "downloads": -1, "filename": "yzconfig-1.0.tar.gz", "has_sig": false, "md5_digest": "a54c2ce30144766c686f4b43fa9acce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5185, "upload_time": "2017-12-03T17:29:05", "upload_time_iso_8601": "2017-12-03T17:29:05.889234Z", "url": "https://files.pythonhosted.org/packages/05/32/a14fc88982667eadb0b9c2f6e19a53c720e9d52bb1413b653ee269e8bf59/yzconfig-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:15 2020"}