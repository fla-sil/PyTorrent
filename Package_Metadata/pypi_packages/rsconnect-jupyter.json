{"info": {"author": "Jonathan Curran", "author_email": "jonathan.curran@rstudio.com", "bugtrack_url": null, "classifiers": [], "description": "# rsconnect-jupyter\n\n[rsconnect-jupyter](https://www.github.com/rstudio/rsconnect-jupyter/) is a\nplugin for [Jupyter Notebook](https://jupyter.org/) that enables\npublishing notebooks to [RStudio\nConnect](https://www.rstudio.com/products/connect/).\n\n# Requirements\n\n- Python 2.7.9 or Python 3.5.0 and higher\n- Jupyter Notebook 5.x\n- [pip](https://pypi.org/project/pip/)\n- [wheel](https://pypi.org/project/wheel/)\n- [RStudio Connect](https://www.rstudio.com/products/connect/download-commercial/) v1.7.0\n  or higher, configured with Python support.\n\nIf using `conda`, `pip` and `wheel` should already be installed.\n\n# Installation\n\nIf you are installing `rsconnect-jupyter` for use in Jupyterhub, please see the\n[Jupyterhub](#installation-in-jupyterhub) section below.\n\nWe recommend working within a `virtualenv`.  If you\nare unfamiliar, these commands create and activate a `virtualenv`\nat `/my/path`:\n\n```bash\npip install virtualenv\nvirtualenv /my/path\nsource /my/path/bin/activate\n```\n\nInstall Jupyter inside the `virtualenv`:\n```bash\npip install jupyter\n```\n\n> Note: be sure to run Jupyter from the virtual environment, not from a global\n> installation.\n\nInstall the `rsconnect-jupyter` package with the following command:\n\n```bash\npip install rsconnect_jupyter\n```\n\nEnable the `rsconnect-jupyter` extension with the following commands:\n\n```bash\n# Install `rsconnect-jupyter` as a jupyter extension\njupyter-nbextension install --sys-prefix --py rsconnect_jupyter\n\n# Enable JavaScript extension\njupyter-nbextension enable --sys-prefix --py rsconnect_jupyter\n\n# Enable Python extension\njupyter-serverextension enable --sys-prefix --py rsconnect_jupyter\n```\n\nNote: The above commands only need to be run once when installing\n`rsconnect_jupyter`.\n\nNote: In order to deploy content, you will need at least the \n[rsconnect-python](https://github.com/rstudio/rsconnect-python) package\nin every kernel you plan to deploy from.\n\nNote: If you run into an issue during installation please let us know by filing\na bug [here](https://github.com/rstudio/rsconnect-jupyter/issues).\n\n# Uninstalling\n\nFirst disable and remove the `rsconnect-jupyter` notebook extension:\n\n```bash\n# Disable Python extensions found in `rsconnect-jupyter`\njupyter-serverextension disable --sys-prefix --py rsconnect_jupyter\n\n# Remove JavaScript extension\njupyter-nbextension uninstall --sys-prefix --py rsconnect_jupyter\n```\n\nFinally, uninstall the `rsconnect-jupyter` python package:\n\n```bash\npip uninstall rsconnect_jupyter\n```\n\n# Upgrading\n\nTo upgrade `rsconnect-jupyter`, first uninstall the extension and then\nre-install it.\n\n# Usage\n\nOpen a notebook and click the blue icon and select `Publish to RStudio Connect`\nto publish the current notebook to RStudio Connect.\n\n![blue toolbar icon used for publishing the notebook](docs/images/publish-icon.gif)\n\n### Entering server information\n\nIf this is your first time publishing a notebook, you will be\nprompted to enter the location and a nickname for the RStudio Connect\nserver.\n\nYou will also be prompted to enter your API Key. See the [RStudio Connect User\nGuide](http://docs.rstudio.com/connect/user/api-keys.html) for\ninstructions on generating API Keys for your user.\n\nWhen you click the Add Server button, `rsconnect-jupyter` will send a request \nto the RStudio Connect server to verify that it can be reached via the requested \nURL and that the API key is valid. \n\nIf your RStudio Connect server was configured with a self-signed certificate \n(or other certificate that computer hosting your Jupyter notebook server does \nnot trust), the attempt to contact RStudio Connect may fail with a \nTLS-related error. You have multiple options in this case, depending on your needs:\n\n 1. If your RStudio Connect Administrator can give you the Certificate Authority (CA)\n Bundle for your RStudio Connect server, ask your Jupyter Administrator if it\n can be added to the trusted system store.\n\n 2. If the CA Bundle cannot be added to the trusted system store, you may select\n `Upload TLS Certificate Bundle` to upload the bundle to Jupyter, which will verify\n your secure connection to RStudio Connect.\n\n 3. If you cannot obtain the CA bundle, you can disable TLS verification completely\n by selecting the `Disable TLS Certificate Verification` box. Your connection to\n RStudio Connect will still be encrypted, but you will not be able to verify the\n identity of the RStudio Connect server.\n\n![initial dialog that prompts for the location of RStudio Connect](docs/images/add-dialog.png)\n\n### Publishing options\n\n![publish dialog](docs/images/manage.png)\n\nThere are two different publication modes. Selecting `Publish finished document only` will \npublish an HTML snapshot of the notebook to RStudio Connect. HTML snapshots are static and \ncannot be scheduled or re-run on the RStudio Connect server.\n\nIf you select `Publish document with source code`, the notebook file and a list of the Python \npackages installed in your environment will be sent to RStudio Connect. This enables RStudio \nConnect to recreate the environment and re-run the notebook at a later time.\n\n#### Additional Files\n\nIf your notebook needs some external file in order to render, add the file using the \n`Select Files` button. You can select any file within the notebook folder. However,\nthese files may not be made available to users after render.\n\n#### Environment detection with pip\n\nThe list of packages sent along with the notebook comes from the python\nenvironment where the notebook kernel is running. In order for environment\ninspection to work, the `rsconnect-jupyter` package must be installed in the\nkernel environment; that is, the environment where the `ipykernel` package is\ninstalled. In most cases that will be the same as the notebook server\nenvironment where `jupyter` is installed.\n\nThe command `pip freeze` will be used to inspect the environment. The output\nof `pip freeze` lists all packages currently installed, as well as their\nversions, which enables RStudio Connect to recreate the same environment.\n\n### Generating Manifests for git Publishing\n\nRStudio Connect can poll git repositories for deployable content and update\nas you add new commits to your repository. In order to be deployable, a\ndirectory must have a valid `manifest.json`. Python content should also have\nsome kind of environment file (i.e.: `requirements.txt`) in order to be able\nto restore the package set in your current environment.\n\n![Deployment drop-down menu showing \"Publish to Connect\" and \"Create Manifest for git Publishing\"](docs/images/deploy-options.png)\n\nTo begin, select `Create Manifest for git Publishing`.\n\n![Dialog titled \"Create Manifest\" explaining the manifest creation process with \"Cancel\" and \"Create Manifest\" options](docs/images/git-backed.png)\n\nWhen you click `Create Manifest`, a `manifest.json` and `requirements.txt`\nwill be generated for the current notebook using your current environment,\nif they do not exist. If they do exist, you will be presented with a message\ninforming you of this fact. If you need to regenerate the files, delete them\nin the Jupyter UI or using the console, then repeat this process.\n\nFor more information on git publishing, see the \n[RStudio Connect User Guide](https://docs.rstudio.com/connect/user/git-backed.html#git-backed-publishing)\n\n### Handling conflicts\nIf content that matches your notebook's title is found on RStudio Connect, you\nmay choose to overwrite the existing content or create new content.\n\n![dialog that prompts for overwriting or publishing new content](docs/images/overwrite.png)\n\nChoosing `New location` will create a new document in RStudio Connect. \nYou can choose either publication mode - an HTML snapshot or a document \nwith source code.\n\nUpdating an existing document will not change its publication mode.\n\n\nUpon successful publishing of the document a notification will be\nshown in toolbar.  Clicking the notification will open the published\ndocument in the RStudio Connect server you selected in the previous\ndialog.\n\n![notification that shows the notebook was published successfully](docs/images/published.gif)\n\n# Collaboration\n\nTo collaborate with others add them as collaborators in RStudio Connect. During\npublishing they should provide their API key and will be able to choose a\ncontent location to publish to if the notebook title is the same.\n\nYou may share notebooks if appropriate.\n\n# Installation in JupyterHub\n\nIn JupyterHub, follow the directions [above](#installation) to install the\n`rsconnect-jupyter` package into the Python environment where the Jupyter\nnotebook server and kernel are installed. Typically those will be the same\nenvironment. If you've configured separate kernel environments, install the\n`rsconnect-jupyter` package in the notebook server environment as well as each\nkernel environment.\n\nThe exact install location depends on your Jupyterhub configuration.\n\n\n## JupyterHub Example Configuration\n\nThis section presents a simple working example of a Jupyterhub configuration\nwith `rsconnect-jupyter` installed.\n\nThis example uses Docker, but you can install the `rsconnect-jupyter` package in\nany Jupyterhub installation. Docker is not required.\n\nExample Dockerfile:\n\n```dockerfile\nFROM jupyterhub/jupyterhub:0.9.4\n\n# Install Jupyter notebook into the existing base conda environment\nRUN conda install notebook\n\n# Download and install rsconnect-jupyter in the same environment\n# Update this to specify the desired version of the rsconnect-jupyter package,\n# or pass `--build-arg VERSION=...` to docker build.\nARG VERSION=RSCONNECT_VERSION\nARG REPOSITORY=https://s3.amazonaws.com/rstudio-rsconnect-jupyter\n\nRUN wget ${REPOSITORY}/rsconnect_jupyter-${VERSION}-py2.py3-none-any.whl\nRUN pip install rsconnect_jupyter-${VERSION}-py2.py3-none-any.whl && \\\n\tjupyter-nbextension install --sys-prefix --py rsconnect_jupyter && \\\n\tjupyter-nbextension enable --sys-prefix --py rsconnect_jupyter && \\\n\tjupyter-serverextension enable --sys-prefix --py rsconnect_jupyter\n\n# create test users\nRUN useradd -m -s /bin/bash user1 && \\\n\tuseradd -m -s /bin/bash user2 && \\\n\tuseradd -m -s /bin/bash user3 && \\\n\tbash -c 'echo -en \"password\\npassword\" | passwd user1' && \\\n\tbash -c 'echo -en \"password\\npassword\" | passwd user2' && \\\n\tbash -c 'echo -en \"password\\npassword\" | passwd user3'\n\nCMD [\"jupyterhub\"]\n```\n\nRun these commands to build and start the container:\n```bash\ndocker build -t jupyterhub:rsconnect-jupyter .\ndocker run --rm -p 8000:8000 --name jupyterhub jupyterhub:rsconnect-jupyter\n```\n\nConnect to Jupyterhub on http://localhost:8000 and log in as one of the test\nusers. From there, you can create a notebook and publish it to RStudio Connect.\nNote that the current Jupyterhub docker image uses Python 3.6.5, so you will\nneed a compatible Python version installed on your RStudio Connect server.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rstudio/rsconnect-jupyter", "keywords": "", "license": "GPL-2.0", "maintainer": "", "maintainer_email": "", "name": "rsconnect-jupyter", "package_url": "https://pypi.org/project/rsconnect-jupyter/", "platform": "", "project_url": "https://pypi.org/project/rsconnect-jupyter/", "project_urls": {"Documentation": "https://docs.rstudio.com/rsconnect-jupyter", "Homepage": "http://github.com/rstudio/rsconnect-jupyter"}, "release_url": "https://pypi.org/project/rsconnect-jupyter/1.3.3.1/", "requires_dist": ["rsconnect-python (==1.4.4.*)", "notebook", "nbformat", "nbconvert (>=5.0)", "six", "ipython"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Jupyter Notebook integration with RStudio Connect", "version": "1.3.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rsconnect-jupyter</h1>\n<p><a href=\"https://www.github.com/rstudio/rsconnect-jupyter/\" rel=\"nofollow\">rsconnect-jupyter</a> is a\nplugin for <a href=\"https://jupyter.org/\" rel=\"nofollow\">Jupyter Notebook</a> that enables\npublishing notebooks to <a href=\"https://www.rstudio.com/products/connect/\" rel=\"nofollow\">RStudio\nConnect</a>.</p>\n<h1>Requirements</h1>\n<ul>\n<li>Python 2.7.9 or Python 3.5.0 and higher</li>\n<li>Jupyter Notebook 5.x</li>\n<li><a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a></li>\n<li><a href=\"https://pypi.org/project/wheel/\" rel=\"nofollow\">wheel</a></li>\n<li><a href=\"https://www.rstudio.com/products/connect/download-commercial/\" rel=\"nofollow\">RStudio Connect</a> v1.7.0\nor higher, configured with Python support.</li>\n</ul>\n<p>If using <code>conda</code>, <code>pip</code> and <code>wheel</code> should already be installed.</p>\n<h1>Installation</h1>\n<p>If you are installing <code>rsconnect-jupyter</code> for use in Jupyterhub, please see the\n<a href=\"#installation-in-jupyterhub\" rel=\"nofollow\">Jupyterhub</a> section below.</p>\n<p>We recommend working within a <code>virtualenv</code>.  If you\nare unfamiliar, these commands create and activate a <code>virtualenv</code>\nat <code>/my/path</code>:</p>\n<pre>pip install virtualenv\nvirtualenv /my/path\n<span class=\"nb\">source</span> /my/path/bin/activate\n</pre>\n<p>Install Jupyter inside the <code>virtualenv</code>:</p>\n<pre>pip install jupyter\n</pre>\n<blockquote>\n<p>Note: be sure to run Jupyter from the virtual environment, not from a global\ninstallation.</p>\n</blockquote>\n<p>Install the <code>rsconnect-jupyter</code> package with the following command:</p>\n<pre>pip install rsconnect_jupyter\n</pre>\n<p>Enable the <code>rsconnect-jupyter</code> extension with the following commands:</p>\n<pre><span class=\"c1\"># Install `rsconnect-jupyter` as a jupyter extension</span>\njupyter-nbextension install --sys-prefix --py rsconnect_jupyter\n\n<span class=\"c1\"># Enable JavaScript extension</span>\njupyter-nbextension <span class=\"nb\">enable</span> --sys-prefix --py rsconnect_jupyter\n\n<span class=\"c1\"># Enable Python extension</span>\njupyter-serverextension <span class=\"nb\">enable</span> --sys-prefix --py rsconnect_jupyter\n</pre>\n<p>Note: The above commands only need to be run once when installing\n<code>rsconnect_jupyter</code>.</p>\n<p>Note: In order to deploy content, you will need at least the\n<a href=\"https://github.com/rstudio/rsconnect-python\" rel=\"nofollow\">rsconnect-python</a> package\nin every kernel you plan to deploy from.</p>\n<p>Note: If you run into an issue during installation please let us know by filing\na bug <a href=\"https://github.com/rstudio/rsconnect-jupyter/issues\" rel=\"nofollow\">here</a>.</p>\n<h1>Uninstalling</h1>\n<p>First disable and remove the <code>rsconnect-jupyter</code> notebook extension:</p>\n<pre><span class=\"c1\"># Disable Python extensions found in `rsconnect-jupyter`</span>\njupyter-serverextension disable --sys-prefix --py rsconnect_jupyter\n\n<span class=\"c1\"># Remove JavaScript extension</span>\njupyter-nbextension uninstall --sys-prefix --py rsconnect_jupyter\n</pre>\n<p>Finally, uninstall the <code>rsconnect-jupyter</code> python package:</p>\n<pre>pip uninstall rsconnect_jupyter\n</pre>\n<h1>Upgrading</h1>\n<p>To upgrade <code>rsconnect-jupyter</code>, first uninstall the extension and then\nre-install it.</p>\n<h1>Usage</h1>\n<p>Open a notebook and click the blue icon and select <code>Publish to RStudio Connect</code>\nto publish the current notebook to RStudio Connect.</p>\n<p><img alt=\"blue toolbar icon used for publishing the notebook\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d93c871dc6034dbe0183cf6694b9c6d1c3a0a830/646f63732f696d616765732f7075626c6973682d69636f6e2e676966\"></p>\n<h3>Entering server information</h3>\n<p>If this is your first time publishing a notebook, you will be\nprompted to enter the location and a nickname for the RStudio Connect\nserver.</p>\n<p>You will also be prompted to enter your API Key. See the <a href=\"http://docs.rstudio.com/connect/user/api-keys.html\" rel=\"nofollow\">RStudio Connect User\nGuide</a> for\ninstructions on generating API Keys for your user.</p>\n<p>When you click the Add Server button, <code>rsconnect-jupyter</code> will send a request\nto the RStudio Connect server to verify that it can be reached via the requested\nURL and that the API key is valid.</p>\n<p>If your RStudio Connect server was configured with a self-signed certificate\n(or other certificate that computer hosting your Jupyter notebook server does\nnot trust), the attempt to contact RStudio Connect may fail with a\nTLS-related error. You have multiple options in this case, depending on your needs:</p>\n<ol>\n<li>\n<p>If your RStudio Connect Administrator can give you the Certificate Authority (CA)\nBundle for your RStudio Connect server, ask your Jupyter Administrator if it\ncan be added to the trusted system store.</p>\n</li>\n<li>\n<p>If the CA Bundle cannot be added to the trusted system store, you may select\n<code>Upload TLS Certificate Bundle</code> to upload the bundle to Jupyter, which will verify\nyour secure connection to RStudio Connect.</p>\n</li>\n<li>\n<p>If you cannot obtain the CA bundle, you can disable TLS verification completely\nby selecting the <code>Disable TLS Certificate Verification</code> box. Your connection to\nRStudio Connect will still be encrypted, but you will not be able to verify the\nidentity of the RStudio Connect server.</p>\n</li>\n</ol>\n<p><img alt=\"initial dialog that prompts for the location of RStudio Connect\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2057f6e448e07926e731e0b3ebfd8c1c117e15a/646f63732f696d616765732f6164642d6469616c6f672e706e67\"></p>\n<h3>Publishing options</h3>\n<p><img alt=\"publish dialog\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad1fd024a040a4ef19f9494937f9dfab3ee532f8/646f63732f696d616765732f6d616e6167652e706e67\"></p>\n<p>There are two different publication modes. Selecting <code>Publish finished document only</code> will\npublish an HTML snapshot of the notebook to RStudio Connect. HTML snapshots are static and\ncannot be scheduled or re-run on the RStudio Connect server.</p>\n<p>If you select <code>Publish document with source code</code>, the notebook file and a list of the Python\npackages installed in your environment will be sent to RStudio Connect. This enables RStudio\nConnect to recreate the environment and re-run the notebook at a later time.</p>\n<h4>Additional Files</h4>\n<p>If your notebook needs some external file in order to render, add the file using the\n<code>Select Files</code> button. You can select any file within the notebook folder. However,\nthese files may not be made available to users after render.</p>\n<h4>Environment detection with pip</h4>\n<p>The list of packages sent along with the notebook comes from the python\nenvironment where the notebook kernel is running. In order for environment\ninspection to work, the <code>rsconnect-jupyter</code> package must be installed in the\nkernel environment; that is, the environment where the <code>ipykernel</code> package is\ninstalled. In most cases that will be the same as the notebook server\nenvironment where <code>jupyter</code> is installed.</p>\n<p>The command <code>pip freeze</code> will be used to inspect the environment. The output\nof <code>pip freeze</code> lists all packages currently installed, as well as their\nversions, which enables RStudio Connect to recreate the same environment.</p>\n<h3>Generating Manifests for git Publishing</h3>\n<p>RStudio Connect can poll git repositories for deployable content and update\nas you add new commits to your repository. In order to be deployable, a\ndirectory must have a valid <code>manifest.json</code>. Python content should also have\nsome kind of environment file (i.e.: <code>requirements.txt</code>) in order to be able\nto restore the package set in your current environment.</p>\n<p><img alt='Deployment drop-down menu showing \"Publish to Connect\" and \"Create Manifest for git Publishing\"' src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/122772cdc43c306a7cd4984adede47085efbf2a9/646f63732f696d616765732f6465706c6f792d6f7074696f6e732e706e67\"></p>\n<p>To begin, select <code>Create Manifest for git Publishing</code>.</p>\n<p><img alt='Dialog titled \"Create Manifest\" explaining the manifest creation process with \"Cancel\" and \"Create Manifest\" options' src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/389ef7247deb843366ae0518484f140a1808b145/646f63732f696d616765732f6769742d6261636b65642e706e67\"></p>\n<p>When you click <code>Create Manifest</code>, a <code>manifest.json</code> and <code>requirements.txt</code>\nwill be generated for the current notebook using your current environment,\nif they do not exist. If they do exist, you will be presented with a message\ninforming you of this fact. If you need to regenerate the files, delete them\nin the Jupyter UI or using the console, then repeat this process.</p>\n<p>For more information on git publishing, see the\n<a href=\"https://docs.rstudio.com/connect/user/git-backed.html#git-backed-publishing\" rel=\"nofollow\">RStudio Connect User Guide</a></p>\n<h3>Handling conflicts</h3>\n<p>If content that matches your notebook's title is found on RStudio Connect, you\nmay choose to overwrite the existing content or create new content.</p>\n<p><img alt=\"dialog that prompts for overwriting or publishing new content\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3c24edd0660048113d7e373354c91a029dc0b5c/646f63732f696d616765732f6f76657277726974652e706e67\"></p>\n<p>Choosing <code>New location</code> will create a new document in RStudio Connect.\nYou can choose either publication mode - an HTML snapshot or a document\nwith source code.</p>\n<p>Updating an existing document will not change its publication mode.</p>\n<p>Upon successful publishing of the document a notification will be\nshown in toolbar.  Clicking the notification will open the published\ndocument in the RStudio Connect server you selected in the previous\ndialog.</p>\n<p><img alt=\"notification that shows the notebook was published successfully\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f2b742e8d3e5ae95e2d9d6b775796da3a4c53ee/646f63732f696d616765732f7075626c69736865642e676966\"></p>\n<h1>Collaboration</h1>\n<p>To collaborate with others add them as collaborators in RStudio Connect. During\npublishing they should provide their API key and will be able to choose a\ncontent location to publish to if the notebook title is the same.</p>\n<p>You may share notebooks if appropriate.</p>\n<h1>Installation in JupyterHub</h1>\n<p>In JupyterHub, follow the directions <a href=\"#installation\" rel=\"nofollow\">above</a> to install the\n<code>rsconnect-jupyter</code> package into the Python environment where the Jupyter\nnotebook server and kernel are installed. Typically those will be the same\nenvironment. If you've configured separate kernel environments, install the\n<code>rsconnect-jupyter</code> package in the notebook server environment as well as each\nkernel environment.</p>\n<p>The exact install location depends on your Jupyterhub configuration.</p>\n<h2>JupyterHub Example Configuration</h2>\n<p>This section presents a simple working example of a Jupyterhub configuration\nwith <code>rsconnect-jupyter</code> installed.</p>\n<p>This example uses Docker, but you can install the <code>rsconnect-jupyter</code> package in\nany Jupyterhub installation. Docker is not required.</p>\n<p>Example Dockerfile:</p>\n<pre><span class=\"k\">FROM</span> <span class=\"s\">jupyterhub/jupyterhub:0.9.4</span>\n\n<span class=\"c\"># Install Jupyter notebook into the existing base conda environment</span>\n<span class=\"k\">RUN</span> conda install notebook\n\n<span class=\"c\"># Download and install rsconnect-jupyter in the same environment</span>\n<span class=\"c\"># Update this to specify the desired version of the rsconnect-jupyter package,</span>\n<span class=\"c\"># or pass `--build-arg VERSION=...` to docker build.</span>\n<span class=\"k\">ARG</span> <span class=\"nv\">VERSION</span><span class=\"o\">=</span>RSCONNECT_VERSION\n<span class=\"k\">ARG</span> <span class=\"nv\">REPOSITORY</span><span class=\"o\">=</span>https://s3.amazonaws.com/rstudio-rsconnect-jupyter\n\n<span class=\"k\">RUN</span> wget <span class=\"si\">${</span><span class=\"nv\">REPOSITORY</span><span class=\"si\">}</span>/rsconnect_jupyter-<span class=\"si\">${</span><span class=\"nv\">VERSION</span><span class=\"si\">}</span>-py2.py3-none-any.whl\n<span class=\"k\">RUN</span> pip install rsconnect_jupyter-<span class=\"si\">${</span><span class=\"nv\">VERSION</span><span class=\"si\">}</span>-py2.py3-none-any.whl <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tjupyter-nbextension install --sys-prefix --py rsconnect_jupyter <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tjupyter-nbextension <span class=\"nb\">enable</span> --sys-prefix --py rsconnect_jupyter <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tjupyter-serverextension <span class=\"nb\">enable</span> --sys-prefix --py rsconnect_jupyter\n\n<span class=\"c\"># create test users</span>\n<span class=\"k\">RUN</span> useradd -m -s /bin/bash user1 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tuseradd -m -s /bin/bash user2 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tuseradd -m -s /bin/bash user3 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tbash -c <span class=\"s1\">'echo -en \"password\\npassword\" | passwd user1'</span> <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tbash -c <span class=\"s1\">'echo -en \"password\\npassword\" | passwd user2'</span> <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\n\tbash -c <span class=\"s1\">'echo -en \"password\\npassword\" | passwd user3'</span>\n\n<span class=\"k\">CMD</span> <span class=\"p\">[</span><span class=\"s2\">\"jupyterhub\"</span><span class=\"p\">]</span>\n</pre>\n<p>Run these commands to build and start the container:</p>\n<pre>docker build -t jupyterhub:rsconnect-jupyter .\ndocker run --rm -p <span class=\"m\">8000</span>:8000 --name jupyterhub jupyterhub:rsconnect-jupyter\n</pre>\n<p>Connect to Jupyterhub on <a href=\"http://localhost:8000\" rel=\"nofollow\">http://localhost:8000</a> and log in as one of the test\nusers. From there, you can create a notebook and publish it to RStudio Connect.\nNote that the current Jupyterhub docker image uses Python 3.6.5, so you will\nneed a compatible Python version installed on your RStudio Connect server.</p>\n\n          </div>"}, "last_serial": 6943925, "releases": {"1.2.1.93": [{"comment_text": "", "digests": {"md5": "9cdec979889f67fd22822a7273ce544d", "sha256": "30f28b5b70c13c9397795385822c4068807b13143b4a9b4f7814fbbc10838a3d"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.1.93-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9cdec979889f67fd22822a7273ce544d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 54185, "upload_time": "2019-02-26T20:43:16", "upload_time_iso_8601": "2019-02-26T20:43:16.414897Z", "url": "https://files.pythonhosted.org/packages/22/9a/4cbe0092551ca2a5471866c5e8ab87b97221b15e2d05cd38db12608afdbc/rsconnect_jupyter-1.2.1.93-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0c310c8d2bc4ec21d243c0c0eef9105", "sha256": "6d7fc739e946af1a0e80b27e7151074ac5b4bbb414df5a96e886df1f4dfa973c"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.1.93.tar.gz", "has_sig": false, "md5_digest": "d0c310c8d2bc4ec21d243c0c0eef9105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54036, "upload_time": "2019-02-26T20:43:18", "upload_time_iso_8601": "2019-02-26T20:43:18.534811Z", "url": "https://files.pythonhosted.org/packages/4b/e3/18d6793da07ca72d07158c39eb7998fc52943278f6478047b3192af66e63/rsconnect_jupyter-1.2.1.93.tar.gz", "yanked": false}], "1.2.2.4": [{"comment_text": "", "digests": {"md5": "887af4c4288179ca9d6978e40a88e811", "sha256": "90e2edf5288fe38770a0ffa2e523f60e4f5eaf214002a8ab1dd5cb7139523edc"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "887af4c4288179ca9d6978e40a88e811", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 58091, "upload_time": "2019-10-23T17:57:19", "upload_time_iso_8601": "2019-10-23T17:57:19.316416Z", "url": "https://files.pythonhosted.org/packages/a7/33/061acdba993f92ed3ac270a7c9b7aa6aec7e41170a182304969de4f64c5d/rsconnect_jupyter-1.2.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7daed02dd2ec7b7138051f5bd726ed56", "sha256": "bd852b1a515d449d17b54fe8d92ead45ee4629bb157597b24862409ab6a60098"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.2.4.tar.gz", "has_sig": false, "md5_digest": "7daed02dd2ec7b7138051f5bd726ed56", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 57412, "upload_time": "2019-10-23T17:57:20", "upload_time_iso_8601": "2019-10-23T17:57:20.874983Z", "url": "https://files.pythonhosted.org/packages/07/48/020cce228239e5ec7a8effcf0db4d39ca80e21dff9e329a1a1a4ecc602fc/rsconnect_jupyter-1.2.2.4.tar.gz", "yanked": false}], "1.2.2.7": [{"comment_text": "", "digests": {"md5": "f1714c1456878967f153278d2b0e36c1", "sha256": "0ee9533b710d8a72a17d0e97c8234e291c76de5a605b4cdabb5efed89def0bd3"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1714c1456878967f153278d2b0e36c1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 58189, "upload_time": "2019-11-04T15:43:26", "upload_time_iso_8601": "2019-11-04T15:43:26.962327Z", "url": "https://files.pythonhosted.org/packages/bb/a2/8ca9370eafa428012e71f8592d23cd38a352459b01c4a74e31ec76274f1a/rsconnect_jupyter-1.2.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2702cbbe0410932d70f9db14e8df2028", "sha256": "ded8e6af8363483b9d27e0bac436b0ab5a9d9ffa39791be933c5f4d50fedbb60"}, "downloads": -1, "filename": "rsconnect_jupyter-1.2.2.7.tar.gz", "has_sig": false, "md5_digest": "2702cbbe0410932d70f9db14e8df2028", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 57579, "upload_time": "2019-11-04T15:43:28", "upload_time_iso_8601": "2019-11-04T15:43:28.747403Z", "url": "https://files.pythonhosted.org/packages/e6/6d/959e8c7db065b02d846995b7b96b90991b22a11549aca9302539e9c09acc/rsconnect_jupyter-1.2.2.7.tar.gz", "yanked": false}], "1.3.0.4": [{"comment_text": "", "digests": {"md5": "6421881d8fa61651645e795a75dd514c", "sha256": "0d8a86f161d8e41a74c8ecaba25d735b47847269377c8b35b529da2ea4b0a027"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6421881d8fa61651645e795a75dd514c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 58658, "upload_time": "2020-01-16T18:38:38", "upload_time_iso_8601": "2020-01-16T18:38:38.734874Z", "url": "https://files.pythonhosted.org/packages/73/8b/d4f39b86a95a83abb9141c9278f7d9b24560b3662dbf13f853259fbc75c0/rsconnect_jupyter-1.3.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "202d71d307e137bd94ee9c583d8cb128", "sha256": "7295c331bb967b48873c6a0a66c3900429179d0e90ba9069e55d4b1f746facf3"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.0.4.tar.gz", "has_sig": false, "md5_digest": "202d71d307e137bd94ee9c583d8cb128", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 61419, "upload_time": "2020-01-16T18:38:40", "upload_time_iso_8601": "2020-01-16T18:38:40.387244Z", "url": "https://files.pythonhosted.org/packages/4c/36/b6060cf7275ed6c542d8e9390e6a22874d0312c45de72cf968c56087b230/rsconnect_jupyter-1.3.0.4.tar.gz", "yanked": false}], "1.3.1.1": [{"comment_text": "", "digests": {"md5": "0ba15945c28c09165e6d18a7b2a57b30", "sha256": "668aaab7fc9f89f823efae55fc099825234aec98cf2a04fc069548b05a2c3bb1"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ba15945c28c09165e6d18a7b2a57b30", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 62123, "upload_time": "2020-03-27T13:55:24", "upload_time_iso_8601": "2020-03-27T13:55:24.115933Z", "url": "https://files.pythonhosted.org/packages/c2/fd/446eaba4400b088b9f10ff84125193d3d76b93a5189a51e5898fb0ddf869/rsconnect_jupyter-1.3.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45ce51b7b1afa007b1f0265bf87b3eb5", "sha256": "cf64d72fc57a298ce227154cee0323c33d07cb058598d2fca8850f7770aeeabd"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.1.1.tar.gz", "has_sig": false, "md5_digest": "45ce51b7b1afa007b1f0265bf87b3eb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 65256, "upload_time": "2020-03-27T13:55:25", "upload_time_iso_8601": "2020-03-27T13:55:25.383680Z", "url": "https://files.pythonhosted.org/packages/e4/93/fed76021fa74ae40d2c161fee5e1c92a316245cf8215ec886b5d9c8b10bb/rsconnect_jupyter-1.3.1.1.tar.gz", "yanked": false}], "1.3.1.2": [{"comment_text": "", "digests": {"md5": "4f295d436aaf74d978f940b0675ace39", "sha256": "7a6a0e01be1b55c2084e9a33e9aad2cec2941fc0484375206c1a38bd5894d452"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f295d436aaf74d978f940b0675ace39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 62125, "upload_time": "2020-03-27T21:02:20", "upload_time_iso_8601": "2020-03-27T21:02:20.679805Z", "url": "https://files.pythonhosted.org/packages/c2/28/a4268b999fee58b38352c7bb090f2ca9fc7e97ad1ce17ed7b0c7451edae8/rsconnect_jupyter-1.3.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9a728aaf2240e2d2d9536d9a00c2f99", "sha256": "3fb316de4737f8d09b49f4590e78a9d6de2a224d68f14bc264b947e891b059a1"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.1.2.tar.gz", "has_sig": false, "md5_digest": "b9a728aaf2240e2d2d9536d9a00c2f99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 65245, "upload_time": "2020-03-27T21:02:22", "upload_time_iso_8601": "2020-03-27T21:02:22.088048Z", "url": "https://files.pythonhosted.org/packages/63/20/9bea7d39d8b9059753c1d25f7e418490621dc1bf33b98a52a8f4f28d7310/rsconnect_jupyter-1.3.1.2.tar.gz", "yanked": false}], "1.3.2.1": [{"comment_text": "", "digests": {"md5": "2fdb69396ee1f03d9243ee2b1b0214d2", "sha256": "f685ef497a890f6a72892b729e1745bb15adfccbf5528fbf4a19188666a95857"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2fdb69396ee1f03d9243ee2b1b0214d2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 62220, "upload_time": "2020-04-01T23:24:25", "upload_time_iso_8601": "2020-04-01T23:24:25.384070Z", "url": "https://files.pythonhosted.org/packages/4f/0f/72e7b5a01b49e56d525dd99f7310dbe152af2f42f20b2584cc98013d52b9/rsconnect_jupyter-1.3.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3052e936da1235df50df22c9e46d3b2c", "sha256": "3dd131c804304abec986e3fdfe33a1423dc297fc3eafc269daa056a38171ad42"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.2.1.tar.gz", "has_sig": false, "md5_digest": "3052e936da1235df50df22c9e46d3b2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 65374, "upload_time": "2020-04-01T23:24:26", "upload_time_iso_8601": "2020-04-01T23:24:26.718787Z", "url": "https://files.pythonhosted.org/packages/93/76/de58dc1c81d12d8d57271f4a14b941fa70079c3518e2bc5b7d6cda4e25e8/rsconnect_jupyter-1.3.2.1.tar.gz", "yanked": false}], "1.3.3.1": [{"comment_text": "", "digests": {"md5": "fd42686b03ee5b5400324483902fc93f", "sha256": "04eb37ad0d3e9f1aaeef4180b2174bd050e6a1b1a129f476368d054e884a8929"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd42686b03ee5b5400324483902fc93f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 62195, "upload_time": "2020-04-03T14:52:01", "upload_time_iso_8601": "2020-04-03T14:52:01.918788Z", "url": "https://files.pythonhosted.org/packages/81/81/789d8206a89284161b5dad21148467a810670c604f43c624dfb300afb321/rsconnect_jupyter-1.3.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb8c7d4ab2d5d5a9c179903d302c1934", "sha256": "ff521182938a100937c524ec0f9dcf9f9bcbb5df7bc497cf7592da4be21d6490"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.3.1.tar.gz", "has_sig": false, "md5_digest": "bb8c7d4ab2d5d5a9c179903d302c1934", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 65325, "upload_time": "2020-04-03T14:52:02", "upload_time_iso_8601": "2020-04-03T14:52:02.893099Z", "url": "https://files.pythonhosted.org/packages/a4/78/c889b96b8f33e3fdd420d24e7b6422759e2c2f53313b07d0659590c276b4/rsconnect_jupyter-1.3.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd42686b03ee5b5400324483902fc93f", "sha256": "04eb37ad0d3e9f1aaeef4180b2174bd050e6a1b1a129f476368d054e884a8929"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd42686b03ee5b5400324483902fc93f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 62195, "upload_time": "2020-04-03T14:52:01", "upload_time_iso_8601": "2020-04-03T14:52:01.918788Z", "url": "https://files.pythonhosted.org/packages/81/81/789d8206a89284161b5dad21148467a810670c604f43c624dfb300afb321/rsconnect_jupyter-1.3.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb8c7d4ab2d5d5a9c179903d302c1934", "sha256": "ff521182938a100937c524ec0f9dcf9f9bcbb5df7bc497cf7592da4be21d6490"}, "downloads": -1, "filename": "rsconnect_jupyter-1.3.3.1.tar.gz", "has_sig": false, "md5_digest": "bb8c7d4ab2d5d5a9c179903d302c1934", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 65325, "upload_time": "2020-04-03T14:52:02", "upload_time_iso_8601": "2020-04-03T14:52:02.893099Z", "url": "https://files.pythonhosted.org/packages/a4/78/c889b96b8f33e3fdd420d24e7b6422759e2c2f53313b07d0659590c276b4/rsconnect_jupyter-1.3.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:42 2020"}