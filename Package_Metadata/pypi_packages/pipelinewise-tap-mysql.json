{"info": {"author": "TransferWise", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python :: 3 :: Only"], "description": "# pipelinewise-tap-mysql\n\n[![PyPI version](https://badge.fury.io/py/pipelinewise-tap-mysql.svg)](https://badge.fury.io/py/pipelinewise-tap-mysql)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pipelinewise-tap-mysql.svg)](https://pypi.org/project/pipelinewise-tap-mysql/)\n[![License: MIT](https://img.shields.io/badge/License-GPLv3-yellow.svg)](https://opensource.org/licenses/GPL-3.0)\n\n[Singer](https://www.singer.io/) tap that extracts data from a [MySQL](https://www.mysql.com/) database and produces JSON-formatted data following the [Singer spec](https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md).\n\nThis is a [PipelineWise](https://transferwise.github.io/pipelinewise) compatible tap connector.\n\n## How to use it\n\nThe recommended method of running this tap is to use it from [PipelineWise](https://transferwise.github.io/pipelinewise). When running it from PipelineWise you don't need to configure this tap with JSON files and most of things are automated. Please check the related documentation at [Tap MySQL](https://transferwise.github.io/pipelinewise/connectors/taps/mysql.html)\n\nIf you want to run this [Singer Tap](https://singer.io) independently please read further.\n\n## Usage\n\nThis section dives into basic usage of `tap-mysql` by walking through extracting\ndata from a table. It assumes that you can connect to and read from a MySQL\ndatabase.\n\n### Install\n\nFirst, make sure Python 3 is installed on your system or follow these\ninstallation instructions for [Mac](http://docs.python-guide.org/en/latest/starting/install3/osx/) or\n[Ubuntu](https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04).\n\nIt's recommended to use a virtualenv:\n\n```bash\n  python3 -m venv venv\n  pip install pipelinewise-tap-mysql\n```\n\nor\n\n```bash\n  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n```\n\n### Have a source database\n\nThere's some important business data siloed in this MySQL database -- we need to\nextract it. Here's the table we'd like to sync:\n\n```\nmysql> select * from example_db.animals;\n+----|----------|----------------------+\n| id | name     | likes_getting_petted |\n+----|----------|----------------------+\n|  1 | aardvark |                    0 |\n|  2 | bear     |                    0 |\n|  3 | cow      |                    1 |\n+----|----------|----------------------+\n3 rows in set (0.00 sec)\n```\n\n### Create the configuration file\n\nCreate a config file containing the database connection credentials, e.g.:\n\n```json\n{\n  \"host\": \"localhost\",\n  \"port\": \"3306\",\n  \"user\": \"root\",\n  \"password\": \"password\"\n}\n```\n\nThese are the same basic configuration properties used by the MySQL command-line\nclient (`mysql`).\n\n### Discovery mode\n\nThe tap can be invoked in discovery mode to find the available tables and\ncolumns in the database:\n\n```bash\n$ tap-mysql --config config.json --discover\n\n```\n\nA discovered catalog is output, with a JSON-schema description of each table. A\nsource table directly corresponds to a Singer stream.\n\n```json\n{\n  \"streams\": [\n    {\n      \"tap_stream_id\": \"example_db-animals\",\n      \"table_name\": \"animals\",\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"inclusion\": \"available\",\n            \"type\": [\n              \"null\",\n              \"string\"\n            ],\n            \"maxLength\": 255\n          },\n          \"id\": {\n            \"inclusion\": \"automatic\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647,\n            \"type\": [\n              \"null\",\n              \"integer\"\n            ]\n          },\n          \"likes_getting_petted\": {\n            \"inclusion\": \"available\",\n            \"type\": [\n              \"null\",\n              \"boolean\"\n            ]\n          }\n        }\n      },\n      \"metadata\": [\n        {\n          \"breadcrumb\": [],\n          \"metadata\": {\n            \"row-count\": 3,\n            \"table-key-properties\": [\n              \"id\"\n            ],\n            \"database-name\": \"example_db\",\n            \"selected-by-default\": false,\n            \"is-view\": false,\n          }\n        },\n        {\n          \"breadcrumb\": [\n            \"properties\",\n            \"id\"\n          ],\n          \"metadata\": {\n            \"sql-datatype\": \"int(11)\",\n            \"selected-by-default\": true\n          }\n        },\n        {\n          \"breadcrumb\": [\n            \"properties\",\n            \"name\"\n          ],\n          \"metadata\": {\n            \"sql-datatype\": \"varchar(255)\",\n            \"selected-by-default\": true\n          }\n        },\n        {\n          \"breadcrumb\": [\n            \"properties\",\n            \"likes_getting_petted\"\n          ],\n          \"metadata\": {\n            \"sql-datatype\": \"tinyint(1)\",\n            \"selected-by-default\": true\n          }\n        }\n      ],\n      \"stream\": \"animals\"\n    }\n  ]\n}\n\n```\n\n### Field selection\n\nIn sync mode, `tap-mysql` consumes the catalog and looks for tables and fields\nhave been marked as _selected_ in their associated metadata entries.\n\nRedirect output from the tap's discovery mode to a file so that it can be\nmodified:\n\n```bash\n$ tap-mysql -c config.json --discover > properties.json\n```\n\nThen edit `properties.json` to make selections. In this example we want the\n`animals` table. The stream's metadata entry (associated with `\"breadcrumb\": []`) \ngets a top-level `selected` flag, as does its columns' metadata entries. Additionally,\nwe will mark the `animals` table to replicate using a `FULL_TABLE` strategy. For more,\ninformation, see [Replication methods and state file](#replication-methods-and-state-file).\n\n```json\n[\n  {\n    \"breadcrumb\": [],\n    \"metadata\": {\n      \"row-count\": 3,\n      \"table-key-properties\": [\n        \"id\"\n      ],\n      \"database-name\": \"example_db\",\n      \"selected-by-default\": false,\n      \"is-view\": false,\n      \"selected\": true,\n      \"replication-method\": \"FULL_TABLE\"\n    }\n  },\n  {\n    \"breadcrumb\": [\n      \"properties\",\n      \"id\"\n    ],\n    \"metadata\": {\n      \"sql-datatype\": \"int(11)\",\n      \"selected-by-default\": true,\n      \"selected\": true\n    }\n  },\n  {\n    \"breadcrumb\": [\n      \"properties\",\n      \"name\"\n    ],\n    \"metadata\": {\n      \"sql-datatype\": \"varchar(255)\",\n      \"selected-by-default\": true,\n      \"selected\": true\n    }\n  },\n  {\n    \"breadcrumb\": [\n      \"properties\",\n      \"likes_getting_petted\"\n    ],\n    \"metadata\": {\n      \"sql-datatype\": \"tinyint(1)\",\n      \"selected-by-default\": true,\n      \"selected\": true\n    }\n  }\n]\n```\n\n### Sync mode\n\nWith a properties catalog that describes field and table selections, the tap can be invoked in sync mode:\n\n```bash\n$ tap-mysql -c config.json --properties properties.json\n```\n\nMessages are written to standard output following the Singer specification. The\nresultant stream of JSON data can be consumed by a Singer target.\n\n```json\n{\"value\": {\"currently_syncing\": \"example_db-animals\"}, \"type\": \"STATE\"}\n\n{\"key_properties\": [\"id\"], \"stream\": \"animals\", \"schema\": {\"properties\": {\"name\": {\"inclusion\": \"available\", \"maxLength\": 255, \"type\": [\"null\", \"string\"]}, \"likes_getting_petted\": {\"inclusion\": \"available\", \"type\": [\"null\", \"boolean\"]}, \"id\": {\"inclusion\": \"automatic\", \"minimum\": -2147483648, \"type\": [\"null\", \"integer\"], \"maximum\": 2147483647}}, \"type\": \"object\"}, \"type\": \"SCHEMA\"}\n\n{\"stream\": \"animals\", \"version\": 1509133344771, \"type\": \"ACTIVATE_VERSION\"}\n\n{\"record\": {\"name\": \"aardvark\", \"likes_getting_petted\": false, \"id\": 1}, \"stream\": \"animals\", \"version\": 1509133344771, \"type\": \"RECORD\"}\n\n{\"record\": {\"name\": \"bear\", \"likes_getting_petted\": false, \"id\": 2}, \"stream\": \"animals\", \"version\": 1509133344771, \"type\": \"RECORD\"}\n\n{\"record\": {\"name\": \"cow\", \"likes_getting_petted\": true, \"id\": 3}, \"stream\": \"animals\", \"version\": 1509133344771, \"type\": \"RECORD\"}\n\n{\"stream\": \"animals\", \"version\": 1509133344771, \"type\": \"ACTIVATE_VERSION\"}\n\n{\"value\": {\"currently_syncing\": \"example_db-animals\", \"bookmarks\": {\"example_db-animals\": {\"initial_full_table_complete\": true}}}, \"type\": \"STATE\"}\n\n{\"value\": {\"currently_syncing\": null, \"bookmarks\": {\"example_db-animals\": {\"initial_full_table_complete\": true}}}, \"type\": \"STATE\"}\n```\n\n## Replication methods and state file\n\nIn the above example, we invoked `tap-mysql` without providing a _state_ file\nand without specifying a replication method. The two ways to replicate a given\ntable are `FULL_TABLE` and `INCREMENTAL`.\n\n### Full Table\n\nFull-table replication extracts all data from the source table each time the tap\nis invoked.\n\n### Incremental\n\nIncremental replication works in conjunction with a state file to only extract\nnew records each time the tap is invoked. This requires a replication key to be\nspecified in the table's metadata as well.\n\n#### Example\n\nLet's sync the `animals` table again, but this time using incremental\nreplication. The replication method and replication key are set in the\ntable's metadata entry in properties file:\n\n```json\n{\n  \"streams\": [\n    {\n      \"tap_stream_id\": \"example_db-animals\",\n      \"table_name\": \"animals\",\n      \"schema\": { ... },\n      \"metadata\": [\n        {\n          \"breadcrumb\": [],\n          \"metadata\": {\n            \"row-count\": 3,\n            \"table-key-properties\": [\n              \"id\"\n            ],\n            \"database-name\": \"example_db\",\n            \"selected-by-default\": false,\n            \"is-view\": false,\n            \"replication-method\": \"INCREMENTAL\",\n            \"replication-key\": \"id\"\n          }\n        },\n        ...\n      ],\n      \"stream\": \"animals\"\n    }\n  ]\n}\n```\n\nWe have no meaningful state so far, so just invoke the tap in sync mode again\nwithout a state file:\n\n```bash\n$ tap-mysql -c config.json --properties properties.json\n```\n\nThe output messages look very similar to when the table was replicated using the\ndefault `FULL_TABLE` replication method. One important difference is that the\n`STATE` messages now contain a `replication_key_value` -- a bookmark or\nhigh-water mark -- for data that was extracted:\n\n```json\n{\"type\": \"STATE\", \"value\": {\"currently_syncing\": \"example_db-animals\"}}\n\n{\"stream\": \"animals\", \"type\": \"SCHEMA\", \"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": [\"null\", \"integer\"], \"minimum\": -2147483648, \"maximum\": 2147483647, \"inclusion\": \"automatic\"}, \"name\": {\"type\": [\"null\", \"string\"], \"inclusion\": \"available\", \"maxLength\": 255}, \"likes_getting_petted\": {\"type\": [\"null\", \"boolean\"], \"inclusion\": \"available\"}}}, \"key_properties\": [\"id\"]}\n\n{\"stream\": \"animals\", \"type\": \"ACTIVATE_VERSION\", \"version\": 1509135204169}\n\n{\"stream\": \"animals\", \"type\": \"RECORD\", \"version\": 1509135204169, \"record\": {\"id\": 1, \"name\": \"aardvark\", \"likes_getting_petted\": false}}\n\n{\"stream\": \"animals\", \"type\": \"RECORD\", \"version\": 1509135204169, \"record\": {\"id\": 2, \"name\": \"bear\", \"likes_getting_petted\": false}}\n\n{\"stream\": \"animals\", \"type\": \"RECORD\", \"version\": 1509135204169, \"record\": {\"id\": 3, \"name\": \"cow\", \"likes_getting_petted\": true}}\n\n{\"type\": \"STATE\", \"value\": {\"bookmarks\": {\"example_db-animals\": {\"version\": 1509135204169, \"replication_key_value\": 3, \"replication_key\": \"id\"}}, \"currently_syncing\": \"example_db-animals\"}}\n\n{\"type\": \"STATE\", \"value\": {\"bookmarks\": {\"example_db-animals\": {\"version\": 1509135204169, \"replication_key_value\": 3, \"replication_key\": \"id\"}}, \"currently_syncing\": null}}\n```\n\nNote that the final `STATE` message has a `replication_key_value` of `3`,\nreflecting that the extraction ended on a record that had an `id` of `3`.\nSubsequent invocations of the tap will pick up from this bookmark.\n\nNormally, the target will echo the last `STATE` after it's finished processing\ndata. For this example, let's manually write a `state.json` file using the\n`STATE` message:\n\n```json\n{\n  \"bookmarks\": {\n    \"example_db-animals\": {\n      \"version\": 1509135204169,\n      \"replication_key_value\": 3,\n      \"replication_key\": \"id\"\n    }\n  },\n  \"currently_syncing\": null\n}\n```\n\nLet's add some more animals to our farm:\n\n```\nmysql> insert into animals (name, likes_getting_petted) values ('dog', true), ('elephant', true), ('frog', false);\n```\n\n```bash\n$ tap-mysql -c config.json --properties properties.json --state state.json\n```\n\nThis invocation extracts any data since (and including) the\n`replication_key_value`:\n\n```json\n{\"type\": \"STATE\", \"value\": {\"bookmarks\": {\"example_db-animals\": {\"replication_key\": \"id\", \"version\": 1509135204169, \"replication_key_value\": 3}}, \"currently_syncing\": \"example_db-animals\"}}\n\n{\"key_properties\": [\"id\"], \"schema\": {\"properties\": {\"name\": {\"maxLength\": 255, \"inclusion\": \"available\", \"type\": [\"null\", \"string\"]}, \"id\": {\"maximum\": 2147483647, \"minimum\": -2147483648, \"inclusion\": \"automatic\", \"type\": [\"null\", \"integer\"]}, \"likes_getting_petted\": {\"inclusion\": \"available\", \"type\": [\"null\", \"boolean\"]}}, \"type\": \"object\"}, \"type\": \"SCHEMA\", \"stream\": \"animals\"}\n\n{\"type\": \"ACTIVATE_VERSION\", \"version\": 1509135204169, \"stream\": \"animals\"}\n\n{\"record\": {\"name\": \"cow\", \"id\": 3, \"likes_getting_petted\": true}, \"type\": \"RECORD\", \"version\": 1509135204169, \"stream\": \"animals\"}\n{\"record\": {\"name\": \"dog\", \"id\": 4, \"likes_getting_petted\": true}, \"type\": \"RECORD\", \"version\": 1509135204169, \"stream\": \"animals\"}\n{\"record\": {\"name\": \"elephant\", \"id\": 5, \"likes_getting_petted\": true}, \"type\": \"RECORD\", \"version\": 1509135204169, \"stream\": \"animals\"}\n{\"record\": {\"name\": \"frog\", \"id\": 6, \"likes_getting_petted\": false}, \"type\": \"RECORD\", \"version\": 1509135204169, \"stream\": \"animals\"}\n\n{\"type\": \"STATE\", \"value\": {\"bookmarks\": {\"example_db-animals\": {\"replication_key\": \"id\", \"version\": 1509135204169, \"replication_key_value\": 6}}, \"currently_syncing\": \"example_db-animals\"}}\n\n{\"type\": \"STATE\", \"value\": {\"bookmarks\": {\"example_db-animals\": {\"replication_key\": \"id\", \"version\": 1509135204169, \"replication_key_value\": 6}}, \"currently_syncing\": null}}\n```\n\n---\n\nBased on Stitch documentation\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/transferwise/pipelinewise-tap-mysql", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pipelinewise-tap-mysql", "package_url": "https://pypi.org/project/pipelinewise-tap-mysql/", "platform": "", "project_url": "https://pypi.org/project/pipelinewise-tap-mysql/", "project_urls": {"Homepage": "https://github.com/transferwise/pipelinewise-tap-mysql"}, "release_url": "https://pypi.org/project/pipelinewise-tap-mysql/1.2.0/", "requires_dist": ["attrs (==16.3.0)", "pendulum (==1.2.0)", "pipelinewise-singer-python (==1.*)", "PyMySQL (==0.7.11)", "mysql-replication (==0.21)", "pyyaml (==5.3)", "nose (==1.3.*) ; extra == 'test'", "pylint (==2.4.*) ; extra == 'test'", "nose-cov (==1.6) ; extra == 'test'"], "requires_python": "", "summary": "Singer.io tap for extracting data from MySQL - PipelineWise compatible", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pipelinewise-tap-mysql</h1>\n<p><a href=\"https://badge.fury.io/py/pipelinewise-tap-mysql\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81e3140c0bd3ee4876c4b60642c883c4a86cc621/68747470733a2f2f62616467652e667572792e696f2f70792f706970656c696e65776973652d7461702d6d7973716c2e737667\"></a>\n<a href=\"https://pypi.org/project/pipelinewise-tap-mysql/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7107757bfcf95cc677b62f470260c08fb4714bf4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706970656c696e65776973652d7461702d6d7973716c2e737667\"></a>\n<a href=\"https://opensource.org/licenses/GPL-3.0\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f103c9b4ae6eaa684967bbaee8c507c609ff5ca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d79656c6c6f772e737667\"></a></p>\n<p><a href=\"https://www.singer.io/\" rel=\"nofollow\">Singer</a> tap that extracts data from a <a href=\"https://www.mysql.com/\" rel=\"nofollow\">MySQL</a> database and produces JSON-formatted data following the <a href=\"https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md\" rel=\"nofollow\">Singer spec</a>.</p>\n<p>This is a <a href=\"https://transferwise.github.io/pipelinewise\" rel=\"nofollow\">PipelineWise</a> compatible tap connector.</p>\n<h2>How to use it</h2>\n<p>The recommended method of running this tap is to use it from <a href=\"https://transferwise.github.io/pipelinewise\" rel=\"nofollow\">PipelineWise</a>. When running it from PipelineWise you don't need to configure this tap with JSON files and most of things are automated. Please check the related documentation at <a href=\"https://transferwise.github.io/pipelinewise/connectors/taps/mysql.html\" rel=\"nofollow\">Tap MySQL</a></p>\n<p>If you want to run this <a href=\"https://singer.io\" rel=\"nofollow\">Singer Tap</a> independently please read further.</p>\n<h2>Usage</h2>\n<p>This section dives into basic usage of <code>tap-mysql</code> by walking through extracting\ndata from a table. It assumes that you can connect to and read from a MySQL\ndatabase.</p>\n<h3>Install</h3>\n<p>First, make sure Python 3 is installed on your system or follow these\ninstallation instructions for <a href=\"http://docs.python-guide.org/en/latest/starting/install3/osx/\" rel=\"nofollow\">Mac</a> or\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04\" rel=\"nofollow\">Ubuntu</a>.</p>\n<p>It's recommended to use a virtualenv:</p>\n<pre>  python3 -m venv venv\n  pip install pipelinewise-tap-mysql\n</pre>\n<p>or</p>\n<pre>  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n</pre>\n<h3>Have a source database</h3>\n<p>There's some important business data siloed in this MySQL database -- we need to\nextract it. Here's the table we'd like to sync:</p>\n<pre><code>mysql&gt; select * from example_db.animals;\n+----|----------|----------------------+\n| id | name     | likes_getting_petted |\n+----|----------|----------------------+\n|  1 | aardvark |                    0 |\n|  2 | bear     |                    0 |\n|  3 | cow      |                    1 |\n+----|----------|----------------------+\n3 rows in set (0.00 sec)\n</code></pre>\n<h3>Create the configuration file</h3>\n<p>Create a config file containing the database connection credentials, e.g.:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"host\"</span><span class=\"p\">:</span> <span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"port\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3306\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"user\"</span><span class=\"p\">:</span> <span class=\"s2\">\"root\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"password\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>These are the same basic configuration properties used by the MySQL command-line\nclient (<code>mysql</code>).</p>\n<h3>Discovery mode</h3>\n<p>The tap can be invoked in discovery mode to find the available tables and\ncolumns in the database:</p>\n<pre>$ tap-mysql --config config.json --discover\n</pre>\n<p>A discovered catalog is output, with a JSON-schema description of each table. A\nsource table directly corresponds to a Singer stream.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"streams\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"tap_stream_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"table_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"null\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"string\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"maxLength\"</span><span class=\"p\">:</span> <span class=\"mi\">255</span>\n          <span class=\"p\">},</span>\n          <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"automatic\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"minimum\"</span><span class=\"p\">:</span> <span class=\"mi\">-2147483648</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"maximum\"</span><span class=\"p\">:</span> <span class=\"mi\">2147483647</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"null\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"integer\"</span>\n            <span class=\"p\">]</span>\n          <span class=\"p\">},</span>\n          <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"null\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"boolean\"</span>\n            <span class=\"p\">]</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n          <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"row-count\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"table-key-properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"id\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"database-name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"is-view\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"id\"</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"int(11)\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"name\"</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"varchar(255)\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"likes_getting_petted\"</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tinyint(1)\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Field selection</h3>\n<p>In sync mode, <code>tap-mysql</code> consumes the catalog and looks for tables and fields\nhave been marked as <em>selected</em> in their associated metadata entries.</p>\n<p>Redirect output from the tap's discovery mode to a file so that it can be\nmodified:</p>\n<pre>$ tap-mysql -c config.json --discover &gt; properties.json\n</pre>\n<p>Then edit <code>properties.json</code> to make selections. In this example we want the\n<code>animals</code> table. The stream's metadata entry (associated with <code>\"breadcrumb\": []</code>)\ngets a top-level <code>selected</code> flag, as does its columns' metadata entries. Additionally,\nwe will mark the <code>animals</code> table to replicate using a <code>FULL_TABLE</code> strategy. For more,\ninformation, see <a href=\"#replication-methods-and-state-file\" rel=\"nofollow\">Replication methods and state file</a>.</p>\n<pre><span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"row-count\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"table-key-properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"id\"</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"database-name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"is-view\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"replication-method\"</span><span class=\"p\">:</span> <span class=\"s2\">\"FULL_TABLE\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"id\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"int(11)\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"name\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"varchar(255)\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"properties\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"likes_getting_petted\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"sql-datatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tinyint(1)\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"selected\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<h3>Sync mode</h3>\n<p>With a properties catalog that describes field and table selections, the tap can be invoked in sync mode:</p>\n<pre>$ tap-mysql -c config.json --properties properties.json\n</pre>\n<p>Messages are written to standard output following the Singer specification. The\nresultant stream of JSON data can be consumed by a Singer target.</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"key_properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">],</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span> <span class=\"nt\">\"maxLength\"</span><span class=\"p\">:</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string\"</span><span class=\"p\">]},</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"boolean\"</span><span class=\"p\">]},</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"automatic\"</span><span class=\"p\">,</span> <span class=\"nt\">\"minimum\"</span><span class=\"p\">:</span> <span class=\"mi\">-2147483648</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">],</span> <span class=\"nt\">\"maximum\"</span><span class=\"p\">:</span> <span class=\"mi\">2147483647</span><span class=\"p\">}},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SCHEMA\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509133344771</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ACTIVATE_VERSION\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"aardvark\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509133344771</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bear\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509133344771</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cow\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509133344771</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509133344771</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ACTIVATE_VERSION\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"initial_full_table_complete\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">}}},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"initial_full_table_complete\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">}}},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">}</span>\n</pre>\n<h2>Replication methods and state file</h2>\n<p>In the above example, we invoked <code>tap-mysql</code> without providing a <em>state</em> file\nand without specifying a replication method. The two ways to replicate a given\ntable are <code>FULL_TABLE</code> and <code>INCREMENTAL</code>.</p>\n<h3>Full Table</h3>\n<p>Full-table replication extracts all data from the source table each time the tap\nis invoked.</p>\n<h3>Incremental</h3>\n<p>Incremental replication works in conjunction with a state file to only extract\nnew records each time the tap is invoked. This requires a replication key to be\nspecified in the table's metadata as well.</p>\n<h4>Example</h4>\n<p>Let's sync the <code>animals</code> table again, but this time using incremental\nreplication. The replication method and replication key are set in the\ntable's metadata entry in properties file:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"streams\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"tap_stream_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"table_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"err\">...</span> <span class=\"p\">},</span>\n      <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"breadcrumb\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n          <span class=\"nt\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"row-count\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"table-key-properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"id\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"database-name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"selected-by-default\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"is-view\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"replication-method\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INCREMENTAL\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"replication-key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"err\">...</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>We have no meaningful state so far, so just invoke the tap in sync mode again\nwithout a state file:</p>\n<pre>$ tap-mysql -c config.json --properties properties.json\n</pre>\n<p>The output messages look very similar to when the table was replicated using the\ndefault <code>FULL_TABLE</code> replication method. One important difference is that the\n<code>STATE</code> messages now contain a <code>replication_key_value</code> -- a bookmark or\nhigh-water mark -- for data that was extracted:</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SCHEMA\"</span><span class=\"p\">,</span> <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span> <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">],</span> <span class=\"nt\">\"minimum\"</span><span class=\"p\">:</span> <span class=\"mi\">-2147483648</span><span class=\"p\">,</span> <span class=\"nt\">\"maximum\"</span><span class=\"p\">:</span> <span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"automatic\"</span><span class=\"p\">},</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string\"</span><span class=\"p\">],</span> <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span> <span class=\"nt\">\"maxLength\"</span><span class=\"p\">:</span> <span class=\"mi\">255</span><span class=\"p\">},</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"boolean\"</span><span class=\"p\">],</span> <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">}}},</span> <span class=\"nt\">\"key_properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">]}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ACTIVATE_VERSION\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"aardvark\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bear\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cow\"</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">}},</span> <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">}},</span> <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">}}</span>\n</pre>\n<p>Note that the final <code>STATE</code> message has a <code>replication_key_value</code> of <code>3</code>,\nreflecting that the extraction ended on a record that had an <code>id</code> of <code>3</code>.\nSubsequent invocations of the tap will pick up from this bookmark.</p>\n<p>Normally, the target will echo the last <code>STATE</code> after it's finished processing\ndata. For this example, let's manually write a <code>state.json</code> file using the\n<code>STATE</code> message:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Let's add some more animals to our farm:</p>\n<pre><code>mysql&gt; insert into animals (name, likes_getting_petted) values ('dog', true), ('elephant', true), ('frog', false);\n</code></pre>\n<pre>$ tap-mysql -c config.json --properties properties.json --state state.json\n</pre>\n<p>This invocation extracts any data since (and including) the\n<code>replication_key_value</code>:</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}},</span> <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"key_properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">],</span> <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"maxLength\"</span><span class=\"p\">:</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string\"</span><span class=\"p\">]},</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"maximum\"</span><span class=\"p\">:</span> <span class=\"mi\">2147483647</span><span class=\"p\">,</span> <span class=\"nt\">\"minimum\"</span><span class=\"p\">:</span> <span class=\"mi\">-2147483648</span><span class=\"p\">,</span> <span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"automatic\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">]},</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"inclusion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"available\"</span><span class=\"p\">,</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"null\"</span><span class=\"p\">,</span> <span class=\"s2\">\"boolean\"</span><span class=\"p\">]}},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SCHEMA\"</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ACTIVATE_VERSION\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cow\"</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dog\"</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"elephant\"</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"nt\">\"record\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frog\"</span><span class=\"p\">,</span> <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"nt\">\"likes_getting_petted\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">},</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"stream\"</span><span class=\"p\">:</span> <span class=\"s2\">\"animals\"</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}},</span> <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example_db-animals\"</span><span class=\"p\">}}</span>\n\n<span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STATE\"</span><span class=\"p\">,</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"bookmarks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"example_db-animals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"replication_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1509135204169</span><span class=\"p\">,</span> <span class=\"nt\">\"replication_key_value\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}},</span> <span class=\"nt\">\"currently_syncing\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">}}</span>\n</pre>\n<hr>\n<p>Based on Stitch documentation</p>\n\n          </div>"}, "last_serial": 6652198, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "78f318bfe966bc8b412059a317889b47", "sha256": "2cd1ea6fffbc443e02a88133a7db82f3f4a6ae2445ec78067b1034fcdbf09cfd"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "78f318bfe966bc8b412059a317889b47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30071, "upload_time": "2019-05-28T22:38:38", "upload_time_iso_8601": "2019-05-28T22:38:38.487346Z", "url": "https://files.pythonhosted.org/packages/61/ec/713a8d27e2bc12333d715e826012f3d5e6d22c62b2459f436b6c714fa02e/pipelinewise_tap_mysql-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bd9efb46d3914cedb7c150226a5e162", "sha256": "5ba3c1f744b6c39f5268c244c5e5e22f156a2a72a4eba7315f887d81e9443d8d"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.0.5.tar.gz", "has_sig": false, "md5_digest": "4bd9efb46d3914cedb7c150226a5e162", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28874, "upload_time": "2019-05-28T22:38:40", "upload_time_iso_8601": "2019-05-28T22:38:40.729869Z", "url": "https://files.pythonhosted.org/packages/cb/ff/52ce3a877d8d67fe7c59bdeb40424601d6e2657b9072a8aa6f78579adb5b/pipelinewise-tap-mysql-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "1bf4f8c29e7aa30245b617d70e1425c2", "sha256": "931b23b87c2d77835d375dd491a41036b14e209c184198d95beef6acf4560ed9"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.0.6.tar.gz", "has_sig": false, "md5_digest": "1bf4f8c29e7aa30245b617d70e1425c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29036, "upload_time": "2019-08-16T15:52:47", "upload_time_iso_8601": "2019-08-16T15:52:47.912175Z", "url": "https://files.pythonhosted.org/packages/b3/82/b530304b14b0dd9a20dac9ea7d27e1732b5be7f8f6d8125c800e4cd68fab/pipelinewise-tap-mysql-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "2497c3aaf759dbc79e699acd5f7e8aa9", "sha256": "4b14dd004a05585f67ad71ce74e3c25937c0479533ff2fca26e89c14ae0a0b1c"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.0.7.tar.gz", "has_sig": false, "md5_digest": "2497c3aaf759dbc79e699acd5f7e8aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29116, "upload_time": "2019-12-06T11:40:34", "upload_time_iso_8601": "2019-12-06T11:40:34.256933Z", "url": "https://files.pythonhosted.org/packages/ce/3e/c087a5a9d5b6721aaf81b57ba2e1b570e5ee30c5dde31972f9ec51808abe/pipelinewise-tap-mysql-1.0.7.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6e2cfdbf3f0abaa2f415a77939c80129", "sha256": "3338393b07519c7e169c9da1e427758b28ca067a60fb1213fa41839e5d68dbd6"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6e2cfdbf3f0abaa2f415a77939c80129", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29912, "upload_time": "2019-12-27T07:34:06", "upload_time_iso_8601": "2019-12-27T07:34:06.688319Z", "url": "https://files.pythonhosted.org/packages/05/49/af7c1dcacd803ec5d31ab4e58844be404fa8f3fa6ca7b629515bc786e9cf/pipelinewise_tap_mysql-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f74fb7836a689063c90e2f0a29d42814", "sha256": "3b9fd1330e2c69c9e25fca48c0d128dfb530526d89f74f331313b28cc2bcdc9e"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f74fb7836a689063c90e2f0a29d42814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29502, "upload_time": "2019-12-27T07:34:08", "upload_time_iso_8601": "2019-12-27T07:34:08.273363Z", "url": "https://files.pythonhosted.org/packages/15/12/c689fb17529351873811a4ec71cc1318c6e7206e6751f26d7db29670ec5e/pipelinewise-tap-mysql-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c69a4c1028ab0b1ff81ad9cafca1e0f5", "sha256": "3cd9fa69b9167af356da99f9e81822112853c1507c6f1f56353e13b19455d508"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c69a4c1028ab0b1ff81ad9cafca1e0f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30269, "upload_time": "2020-01-07T09:47:17", "upload_time_iso_8601": "2020-01-07T09:47:17.997454Z", "url": "https://files.pythonhosted.org/packages/d5/f7/03c79cf055e742c9a709375fc3743e4870cbb9ec030616955c2145d85c0d/pipelinewise_tap_mysql-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "417f627c6ac2f458b00d9765c62ac544", "sha256": "82c6fa863b00b1741f49094b8cd09edcde9943ff3178b8c3c1466117b4654501"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.1.tar.gz", "has_sig": false, "md5_digest": "417f627c6ac2f458b00d9765c62ac544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29832, "upload_time": "2020-01-07T09:47:19", "upload_time_iso_8601": "2020-01-07T09:47:19.218092Z", "url": "https://files.pythonhosted.org/packages/1f/a8/94c930f9cd3364f0cd183b654115d1bb90c69d6cf50264e3ae7ae611e4a1/pipelinewise-tap-mysql-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ff524ca4403ef121330a3b335965fbb8", "sha256": "0622f43cd761f39b38139312935e90291c57d63addfa9af01a8d48870c2f0b94"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ff524ca4403ef121330a3b335965fbb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30093, "upload_time": "2020-01-14T10:55:57", "upload_time_iso_8601": "2020-01-14T10:55:57.175553Z", "url": "https://files.pythonhosted.org/packages/c9/23/8b9d99d8b2b79ade571e4f61d5426b5cace99166194454689384d041438c/pipelinewise_tap_mysql-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "406b243ef94fcfc4159fc9b0ae4ea384", "sha256": "db1e4b2423f862b00adf0265b4ab7a31f6a43bfbc59255ed80b43df6c07d6d5f"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.2.tar.gz", "has_sig": false, "md5_digest": "406b243ef94fcfc4159fc9b0ae4ea384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29698, "upload_time": "2020-01-14T10:55:58", "upload_time_iso_8601": "2020-01-14T10:55:58.456484Z", "url": "https://files.pythonhosted.org/packages/59/da/80959a0ad597fdc618a84a18d4338c8619871cbae3a58874af11bd7c7414/pipelinewise-tap-mysql-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "eac9277c1f41dbec365dd78c7db6fa0d", "sha256": "8ff9411cfed0d9f02dedb4788c03f5118ab5a5ae53c88a783bc2847d7efada06"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eac9277c1f41dbec365dd78c7db6fa0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30090, "upload_time": "2020-01-20T20:02:23", "upload_time_iso_8601": "2020-01-20T20:02:23.910004Z", "url": "https://files.pythonhosted.org/packages/f3/4b/0b0b5e2882230344cb8716b4dbaeaf1974c655fa521019c41e1f6911ccdb/pipelinewise_tap_mysql-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "669e1514482de47bd6312e60908ec76d", "sha256": "dc8712be89d5d6de918fad4e950c9f6ed769633fcc50c690f84a940a57958439"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.3.tar.gz", "has_sig": false, "md5_digest": "669e1514482de47bd6312e60908ec76d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29698, "upload_time": "2020-01-20T20:02:25", "upload_time_iso_8601": "2020-01-20T20:02:25.032228Z", "url": "https://files.pythonhosted.org/packages/49/05/ddb8a5fa6b872ee41ac48daa951301de6a9badc399c6861c031cb9699018/pipelinewise-tap-mysql-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "ce2d8fff249d7a8d8780bf62b880577d", "sha256": "b485d85a3b3762d3eeca45b1920b0b08e717102921d6d7fc3b9d1cb58afef0ed"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ce2d8fff249d7a8d8780bf62b880577d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30208, "upload_time": "2020-01-21T09:49:56", "upload_time_iso_8601": "2020-01-21T09:49:56.863306Z", "url": "https://files.pythonhosted.org/packages/e3/ee/2ed7a00da97b98c24ca5cb28bd669cf70cef8f08743cd21a8f81dcc8d7b1/pipelinewise_tap_mysql-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67e450b1bf914405cb981f54eeff5e34", "sha256": "4573fb092daa1adb44e0128bffb1b38bef24682bc18c4494ef76d6d226084387"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.4.tar.gz", "has_sig": false, "md5_digest": "67e450b1bf914405cb981f54eeff5e34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29799, "upload_time": "2020-01-21T09:49:58", "upload_time_iso_8601": "2020-01-21T09:49:58.276684Z", "url": "https://files.pythonhosted.org/packages/92/21/f24b24ac8d04606fa8c94b5240925a1a3dd599f80a4b74ccede11b1a1a60/pipelinewise-tap-mysql-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "2cb48b2fca3d75f0db2480be5684aae6", "sha256": "9c1ea6b01c6f786a01eb2369b93df25cd5790d7038fd5b2c9cb38ad61b94a295"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2cb48b2fca3d75f0db2480be5684aae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30217, "upload_time": "2020-01-21T10:06:25", "upload_time_iso_8601": "2020-01-21T10:06:25.000771Z", "url": "https://files.pythonhosted.org/packages/9a/7f/51cf123c39b474cdd5ded41ef415f08800de18f1df730362303428d3449e/pipelinewise_tap_mysql-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b8c97ceef8a6365d985c7cf01bcdb45", "sha256": "0aca9d8689d28c95a0f097889630d69729ea77abc9807389c84d826345058b1b"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.1.5.tar.gz", "has_sig": false, "md5_digest": "6b8c97ceef8a6365d985c7cf01bcdb45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29814, "upload_time": "2020-01-21T10:06:26", "upload_time_iso_8601": "2020-01-21T10:06:26.735384Z", "url": "https://files.pythonhosted.org/packages/da/07/8f203681f7f26d09ffb4c400ea2345e76bab4dabc5af438356e9a56a05ae/pipelinewise-tap-mysql-1.1.5.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "0e1434b38dc1c96d76eb5298d7e9c085", "sha256": "9466779bf2f000a35a0f369a422da51821637c390c52ccb858bb7c8bf1069a4f"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0e1434b38dc1c96d76eb5298d7e9c085", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33777, "upload_time": "2020-02-18T10:14:06", "upload_time_iso_8601": "2020-02-18T10:14:06.517308Z", "url": "https://files.pythonhosted.org/packages/c1/07/3bbf3cab5188e74edae2fd65b1b1760f6d35c64981bd5f8a2681fa5aab18/pipelinewise_tap_mysql-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0156ad25a98274528008d4c0185c8c8", "sha256": "dc6b433f374549440dc4533247a0d115273ea462c581f0aeb73a8f955cf2f81e"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c0156ad25a98274528008d4c0185c8c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21034, "upload_time": "2020-02-18T10:14:08", "upload_time_iso_8601": "2020-02-18T10:14:08.309117Z", "url": "https://files.pythonhosted.org/packages/16/e5/11f59fe185f9409ca46145644b4878409bbfc7c025893bc71bac872b5ec7/pipelinewise-tap-mysql-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e1434b38dc1c96d76eb5298d7e9c085", "sha256": "9466779bf2f000a35a0f369a422da51821637c390c52ccb858bb7c8bf1069a4f"}, "downloads": -1, "filename": "pipelinewise_tap_mysql-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0e1434b38dc1c96d76eb5298d7e9c085", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33777, "upload_time": "2020-02-18T10:14:06", "upload_time_iso_8601": "2020-02-18T10:14:06.517308Z", "url": "https://files.pythonhosted.org/packages/c1/07/3bbf3cab5188e74edae2fd65b1b1760f6d35c64981bd5f8a2681fa5aab18/pipelinewise_tap_mysql-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0156ad25a98274528008d4c0185c8c8", "sha256": "dc6b433f374549440dc4533247a0d115273ea462c581f0aeb73a8f955cf2f81e"}, "downloads": -1, "filename": "pipelinewise-tap-mysql-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c0156ad25a98274528008d4c0185c8c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21034, "upload_time": "2020-02-18T10:14:08", "upload_time_iso_8601": "2020-02-18T10:14:08.309117Z", "url": "https://files.pythonhosted.org/packages/16/e5/11f59fe185f9409ca46145644b4878409bbfc7c025893bc71bac872b5ec7/pipelinewise-tap-mysql-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:19 2020"}