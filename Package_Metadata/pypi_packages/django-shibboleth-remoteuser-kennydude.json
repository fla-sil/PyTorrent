{"info": {"author": "Joe Simpson", "author_email": "me@kennydude.me", "bugtrack_url": null, "classifiers": [], "description": "django-shibboleth-remoteuser\n============================\n\nThis is a fork used to keep things up to date\n\nMiddleware for using Shibboleth with Django.  Requires Django 1.3 or above for RemoteAuthMiddleware.\n\n[![Build Status](https://secure.travis-ci.org/Brown-University-Library/django-shibboleth-remoteuser.png?branch=master)](http://travis-ci.org/Brown-University-Library/django-shibboleth-remoteuser)\n\nInstallation and configuration\n------\n * Either checkout and run ```python setup.py install``` or install directly from Github with pip:\n\n   ```\n   pip install git+https://github.com/Brown-University-Library/django-shibboleth-remoteuser.git\n   ```\n\n * In settings.py :\n\n  * Enable the RemoteUserBackend.\n\n    ```python\n    AUTHENTICATION_BACKENDS += (\n      'shibboleth.backends.ShibbolethRemoteUserBackend',\n    )\n    ```\n\n  * Add the Django Shibboleth middleware.\n    You must add the django.contrib.auth.middleware.ShibbolethRemoteUserMiddleware to the MIDDLEWARE_CLASSES setting after the django.contrib.auth.middleware.AuthenticationMiddleware.\n    For example:\n\n   ```python\n    MIDDLEWARE_CLASSES = (\n    ...\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'shibboleth.middleware.ShibbolethRemoteUserMiddleware',\n    ...\n    )\n    ```\n\n\n  * Map Shibboleth attributes to Django User models. The attributes must be stated in the form they have in the HTTP headers.\n    Use this to populate the Django User object from Shibboleth attributes.\n\n    The first element of the tuple states if the attribute is required or not. If a reqired element is not found in the parsed\n    Shibboleth headers, an exception will be raised.\n    (True, \"required_attribute\")\n    (False, \"optional_attribute).\n\n    ```python\n    SHIBBOLETH_ATTRIBUTE_MAP = {\n       \"shib-user\": (True, \"username\"),\n       \"shib-given-name\": (True, \"first_name\"),\n       \"shib-sn\": (True, \"last_name\"),\n       \"shib-mail\": (False, \"email\"),\n    }\n    ```\n\n\n\n  * Login url - set this to the login handler of your shibboleth installation. In most cases, this will be something like:\n\n   ```python\n   LOGIN_URL = 'https://your_domain.edu/Shibboleth.sso/Login'\n   ```\n\n * Apache configuration - make sure the shibboleth attributes are available to the app.  The app url doesn't need to require Shibboleth.  \n\n    ```\n    <Location /app>\n      AuthType shibboleth\n      Require shibboleth\n    </Location>\n    ```\n\nVerify configuration\n--------\nIf you would like to verify that everything is configured correctly, follow the next two steps below.  It will create a route in your application at /yourapp/shib/ that echos the attributes obtained from Shibboleth.  If you see the attributes you mapped above on the screen, all is good.  \n * Add shibboleth to installed apps.\n\n    ```python\n    INSTALLED_APPS += (\n      'shibboleth',\n    )\n    ```\n\n * Add below to urls.py to enable the included sample view.  This view just echos back the parsed user attributes, which can be helpful for testing.\n\n    ```python\n    urlpatterns += patterns('',\n      url(r'^shib/', include('shibboleth.urls', namespace='shibboleth')),\n    )\n    ```\n\nAt this point, the django-shibboleth-remoteuser middleware should be complete.\n\n##Optional\n###Template tags\n * Template tags are included which will allow you to place {{ login_link }} or {{ logout_link }} in your templates for routing users to the login or logout page.  These are available as a convenience and not required.  To activate add the following to settings.py.\n\n   ```python\n    TEMPLATE_CONTEXT_PROCESSORS += (\n       'shibboleth.context_processors.login_link',\n       'shibboleth.context_processors.logout_link'\n    )\n   ```", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": null, "keywords": null, "license": null, "maintainer": null, "maintainer_email": null, "name": "django-shibboleth-remoteuser-kennydude", "package_url": "https://pypi.org/project/django-shibboleth-remoteuser-kennydude/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-shibboleth-remoteuser-kennydude/", "project_urls": null, "release_url": "https://pypi.org/project/django-shibboleth-remoteuser-kennydude/0.6.2/", "requires_dist": null, "requires_python": null, "summary": "Use Shibboleth users inside of Django", "version": "0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-shibboleth-remoteuser<br>============================<br><br>This is a fork used to keep things up to date<br><br>Middleware for using Shibboleth with Django.  Requires Django 1.3 or above for RemoteAuthMiddleware.<br><br>[![Build Status](https://secure.travis-ci.org/Brown-University-Library/django-shibboleth-remoteuser.png?branch=master)](http://travis-ci.org/Brown-University-Library/django-shibboleth-remoteuser)<br><br>Installation and configuration<br>------<br> * Either checkout and run ```python setup.py install``` or install directly from Github with pip:<br><br>   ```<br>   pip install git+https://github.com/Brown-University-Library/django-shibboleth-remoteuser.git<br>   ```<br><br> * In settings.py :<br><br>  * Enable the RemoteUserBackend.<br><br>    ```python<br>    AUTHENTICATION_BACKENDS += (<br>      'shibboleth.backends.ShibbolethRemoteUserBackend',<br>    )<br>    ```<br><br>  * Add the Django Shibboleth middleware.<br>    You must add the django.contrib.auth.middleware.ShibbolethRemoteUserMiddleware to the MIDDLEWARE_CLASSES setting after the django.contrib.auth.middleware.AuthenticationMiddleware.<br>    For example:<br><br>   ```python<br>    MIDDLEWARE_CLASSES = (<br>    ...<br>    'django.contrib.auth.middleware.AuthenticationMiddleware',<br>    'shibboleth.middleware.ShibbolethRemoteUserMiddleware',<br>    ...<br>    )<br>    ```<br><br><br>  * Map Shibboleth attributes to Django User models. The attributes must be stated in the form they have in the HTTP headers.<br>    Use this to populate the Django User object from Shibboleth attributes.<br><br>    The first element of the tuple states if the attribute is required or not. If a reqired element is not found in the parsed<br>    Shibboleth headers, an exception will be raised.<br>    (True, \"required_attribute\")<br>    (False, \"optional_attribute).<br><br>    ```python<br>    SHIBBOLETH_ATTRIBUTE_MAP = {<br>       \"shib-user\": (True, \"username\"),<br>       \"shib-given-name\": (True, \"first_name\"),<br>       \"shib-sn\": (True, \"last_name\"),<br>       \"shib-mail\": (False, \"email\"),<br>    }<br>    ```<br><br><br><br>  * Login url - set this to the login handler of your shibboleth installation. In most cases, this will be something like:<br><br>   ```python<br>   LOGIN_URL = 'https://your_domain.edu/Shibboleth.sso/Login'<br>   ```<br><br> * Apache configuration - make sure the shibboleth attributes are available to the app.  The app url doesn't need to require Shibboleth.  <br><br>    ```<br>    &lt;Location /app&gt;<br>      AuthType shibboleth<br>      Require shibboleth<br>    &lt;/Location&gt;<br>    ```<br><br>Verify configuration<br>--------<br>If you would like to verify that everything is configured correctly, follow the next two steps below.  It will create a route in your application at /yourapp/shib/ that echos the attributes obtained from Shibboleth.  If you see the attributes you mapped above on the screen, all is good.  <br> * Add shibboleth to installed apps.<br><br>    ```python<br>    INSTALLED_APPS += (<br>      'shibboleth',<br>    )<br>    ```<br><br> * Add below to urls.py to enable the included sample view.  This view just echos back the parsed user attributes, which can be helpful for testing.<br><br>    ```python<br>    urlpatterns += patterns('',<br>      url(r'^shib/', include('shibboleth.urls', namespace='shibboleth')),<br>    )<br>    ```<br><br>At this point, the django-shibboleth-remoteuser middleware should be complete.<br><br>##Optional<br>###Template tags<br> * Template tags are included which will allow you to place {{ login_link }} or {{ logout_link }} in your templates for routing users to the login or logout page.  These are available as a convenience and not required.  To activate add the following to settings.py.<br><br>   ```python<br>    TEMPLATE_CONTEXT_PROCESSORS += (<br>       'shibboleth.context_processors.login_link',<br>       'shibboleth.context_processors.logout_link'<br>    )<br>   ```\n          </div>"}, "last_serial": 1660622, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "9ff59166531ae74a594f72f23aa10197", "sha256": "0956c1befeebe707e94ede59b34aface4b1f459da3e2dd0c6ae6811419b53683"}, "downloads": -1, "filename": "django-shibboleth-remoteuser-kennydude-0.5.macosx-10.11-intel.tar.gz", "has_sig": false, "md5_digest": "9ff59166531ae74a594f72f23aa10197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13519, "upload_time": "2015-08-02T12:17:59", "upload_time_iso_8601": "2015-08-02T12:17:59.132275Z", "url": "https://files.pythonhosted.org/packages/a8/34/999199dce58da1f94a7800122af93faca606b1c031ac0efc9d0159ba3a7e/django-shibboleth-remoteuser-kennydude-0.5.macosx-10.11-intel.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "3c56dc0fc4eea47671c4fef7f8de1226", "sha256": "69bdefe1fcaa2ec91db3fc4f16e18585d9582e12d3f07a7b60584e169ee4a817"}, "downloads": -1, "filename": "django-shibboleth-remoteuser-kennydude-0.6.tar.gz", "has_sig": false, "md5_digest": "3c56dc0fc4eea47671c4fef7f8de1226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8934, "upload_time": "2015-08-02T12:18:58", "upload_time_iso_8601": "2015-08-02T12:18:58.016045Z", "url": "https://files.pythonhosted.org/packages/91/0d/772d824fe0240b3bbb82713c230af4c081bce6e7499b76fbb656fd6c2453/django-shibboleth-remoteuser-kennydude-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "10f9f8b7b540f1560f05032dd45c9c29", "sha256": "c2fccdb72a650973c80564eba1c310669466f0c042df3d4ed4d254325bec9f77"}, "downloads": -1, "filename": "django-shibboleth-remoteuser-kennydude-0.6.1.tar.gz", "has_sig": false, "md5_digest": "10f9f8b7b540f1560f05032dd45c9c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7716, "upload_time": "2015-08-02T12:23:16", "upload_time_iso_8601": "2015-08-02T12:23:16.926325Z", "url": "https://files.pythonhosted.org/packages/bc/98/194e2a18119ff43ddd8946b59a9b6c94997a1a859e1fb54cb7659beac2a0/django-shibboleth-remoteuser-kennydude-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "c1a840686b7ee4fce046ffac84896a19", "sha256": "9eaa9df263d4ba7e2bd7158f92bb2d5a351f632ddb43d558ccdf975e5e2bac70"}, "downloads": -1, "filename": "django-shibboleth-remoteuser-kennydude-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c1a840686b7ee4fce046ffac84896a19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7738, "upload_time": "2015-08-02T13:13:26", "upload_time_iso_8601": "2015-08-02T13:13:26.630646Z", "url": "https://files.pythonhosted.org/packages/4e/62/b07218eaefa21570fb275443bc632ff00f5929010e587ca0a1c004c57c2c/django-shibboleth-remoteuser-kennydude-0.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1a840686b7ee4fce046ffac84896a19", "sha256": "9eaa9df263d4ba7e2bd7158f92bb2d5a351f632ddb43d558ccdf975e5e2bac70"}, "downloads": -1, "filename": "django-shibboleth-remoteuser-kennydude-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c1a840686b7ee4fce046ffac84896a19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7738, "upload_time": "2015-08-02T13:13:26", "upload_time_iso_8601": "2015-08-02T13:13:26.630646Z", "url": "https://files.pythonhosted.org/packages/4e/62/b07218eaefa21570fb275443bc632ff00f5929010e587ca0a1c004c57c2c/django-shibboleth-remoteuser-kennydude-0.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:31 2020"}