{"info": {"author": "John J. H. Lin", "author_email": "john.jrhunglin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "################################################################################\ndeepdata_alpha\n################################################################################\n\nThe package is for developing algorithm in prediction.\n\nProject Setup\n*************\n\nHere we provide some details about the project setup. Most of the choices are explained in the `guide <https://guide.esciencecenter.nl>`_. Links to the relevant sections are included below.\nFeel free to remove this text when the development of the software package takes off.\n\nFor a quick reference on software development, we refer to `the software guide checklist <https://guide.esciencecenter.nl/best_practices/checklist.html>`_.\n\nVersion control\n---------------\n\nOnce your Python package is created, put it under\n`version control <https://guide.esciencecenter.nl/best_practices/version_control.html>`_!\nWe recommend using `git <http://git-scm.com/>`_ and `github <https://github.com/>`_.\n\n.. code-block:: console\n\n  cd deepdata_alpha\n  git init\n  git add -A\n  git commit\n\nTo put your code on github, follow `this tutorial <https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/>`_.\n\nPython versions\n---------------\n\nThis repository is set up with Python versions:\n* 3.4\n* 3.5\n* 3.6\n\nAdd or remove Python versions based on project requirements. `The guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html>`_ contains more information about Python versions and writing Python 2 and 3 compatible code.\n\nPackage management and dependencies\n-----------------------------------\n\nYou can use either `pip` or `conda` for installing dependencies and package management. This repository does not force you to use one or the other, as project requirements differ. For advice on what to use, please check `the relevant section of the guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#dependencies-and-package-management>`_.\n\n* Dependencies should be added to `setup.py` in the `install_requires` list.\n\nPackaging/One command install\n-----------------------------\n\nYou can distribute your code using pipy or conda. Again, the project template does not enforce the use of either one. `The guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#building-and-packaging-code>`_ can help you decide which tool to use for packaging.\n\nTesting and code coverage\n-------------------------\n\n* Tests should be put in the ``tests`` folder.\n* The ``tests`` folder contains:\n\n  - Example tests that you should replace with your own meaningful tests (file: ``test_deepdata_alpha``)\n  - A test that checks whether your code conforms to the Python style guide (PEP 8) (file: ``test_lint.py``)\n\n* The testing framework used is `PyTest <https://pytest.org>`_\n\n  - `PyTest introduction <http://pythontesting.net/framework/pytest/pytest-introduction/>`_\n\n* Tests can be run with ``python setup.py test``\n\n  - This is configured in ``setup.py`` and ``setup.cfg``\n\n* Use `Travis CI <https://travis-ci.com/>`_ to automatically run tests and to test using multiple Python versions\n\n  - Configuration can be found in ``.travis.yml``\n  - `Getting started with Travis CI <https://docs.travis-ci.com/user/getting-started/>`_\n\n* TODO: add something about code quality/coverage tool?\n* `Relevant section in the guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#testing>`_\n\nDocumentation\n-------------\n\n* Documentation should be put in the ``docs`` folder. The contents have been generated using ``sphinx-quickstart`` (Sphinx version 1.6.5).\n* We recommend writing the documentation using Restructured Text (reST) and Google style docstrings.\n\n  - `Restructured Text (reST) and Sphinx CheatSheet <http://openalea.gforge.inria.fr/doc/openalea/doc/_build/html/source/sphinx/rest_syntax.html>`_\n  - `Google style docstring examples <http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`_.\n\n* The documentation is set up with the Read the Docs Sphinx Theme.\n\n  - Check out the `configuration options <https://sphinx-rtd-theme.readthedocs.io/en/latest/>`_.\n\n* To generate html documentation run ``python setup.py build_sphinx``\n\n  - This is configured in ``setup.cfg``\n  - Alternatively, run ``make html`` in the ``docs`` folder.\n\n* The ``docs/_templates`` directory contains an (empty) ``.gitignore`` file, to be able to add it to the repository. This file can be safely removed (or you can just leave it there).\n* To put the documentation on `Read the Docs <https://readthedocs.org>`_, log in to your Read the Docs account, and import the repository (under 'My Projects').\n\n  - Include the link to the documentation in this README_.\n\n* `Relevant section in the guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#writingdocumentation>`_\n\nCoding style conventions and code quality\n-----------------------------------------\n\n* Check your code style with ``prospector``\n* You may need run ``pip install .[dev]`` first, to install the required dependencies\n* You can use ``yapf`` to fix the readability of your code style and ``isort`` to format and group your imports\n* `Relevant section in the guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#coding-style-conventions>`_\n\nPackage version number\n----------------------\n\n* We recommend using `semantic versioning <https://guide.esciencecenter.nl/best_practices/releases.html#semantic-versioning>`_.\n* For convenience, the package version is stored in a single place: ``deepdata_alpha/__version__.py``. For updating the version number, you only have to change this file.\n* Don't forget to update the version number before `making a release <https://guide.esciencecenter.nl/best_practices/releases.html>`_!\n\nCHANGELOG.rst\n-------------\n\n* Document changes to your software package\n* `Relevant section in the guide <https://guide.esciencecenter.nl/software/releases.html#changelogmd>`_\n\nCITATION.cff\n------------\n\n* To allow others to cite your software, add a ``CITATION.cff`` file\n* It only makes sense to do this once there is something to cite (e.g., a software release with a DOI).\n* Follow the `making software citable <https://guide.esciencecenter.nl/citable_software/making_software_citable.html>`_ section in the guide.\n\nCODE_OF_CONDUCT.rst\n-------------------\n\n* Information about how to behave professionally\n* `Relevant section in the guide <https://guide.esciencecenter.nl/software/documentation.html#code-of-conduct>`_\n\nCONTRIBUTING.rst\n----------------\n\n* Information about how to contribute to this software package\n* `Relevant section in the guide <https://guide.esciencecenter.nl/software/documentation.html#contribution-guidelines>`_\n\nMANIFEST.in\n-----------\n\n* List non-Python files that should be included in a source distribution\n* `Relevant section in the guide <https://guide.esciencecenter.nl/best_practices/language_guides/python.html#building-and-packaging-code>`_\n\nNOTICE\n------\n\n* List of attributions of this project and Apache-license dependencies\n* `Relevant section in the guide <https://guide.esciencecenter.nl/best_practices/licensing.html#notice>`_\n\nInstallation\n------------\n\nTo install deepdata_alpha, do:\n\n.. code-block:: console\n\n  git clone https://github.com/John/deepdata_alpha.git\n  cd deepdata_alpha\n  pip install .\n\n\nRun tests (including coverage) with:\n\n.. code-block:: console\n\n  python setup.py test\n\n\nDocumentation\n*************\n\n.. _README:\n\nInclude a link to your project's full documentation here.\n\nContributing\n************\n\nIf you want to contribute to the development of deepdata_alpha,\nhave a look at the `contribution guidelines <CONTRIBUTING.rst>`_.\n\nLicense\n*******\n\nCopyright (c) 2018, John J. H. Lin\n\n\nCredits\n*******\n\nThis package was created with `Cookiecutter <https://github.com/audreyr/cookiecutter>`_ and the `NLeSC/python-template <https://github.com/NLeSC/python-template>`_.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/John/deepdata_alpha", "keywords": "deepdata_alpha", "license": "", "maintainer": "", "maintainer_email": "", "name": "deepdata_alpha", "package_url": "https://pypi.org/project/deepdata_alpha/", "platform": "", "project_url": "https://pypi.org/project/deepdata_alpha/", "project_urls": {"Homepage": "https://github.com/John/deepdata_alpha"}, "release_url": "https://pypi.org/project/deepdata_alpha/0.2.4/", "requires_dist": null, "requires_python": "", "summary": "The package is for developing algorithm in prediction.", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            ################################################################################<br>deepdata_alpha<br>################################################################################<br><br>The package is for developing algorithm in prediction.<br><br>Project Setup<br>*************<br><br>Here we provide some details about the project setup. Most of the choices are explained in the `guide &lt;https://guide.esciencecenter.nl&gt;`_. Links to the relevant sections are included below.<br>Feel free to remove this text when the development of the software package takes off.<br><br>For a quick reference on software development, we refer to `the software guide checklist &lt;https://guide.esciencecenter.nl/best_practices/checklist.html&gt;`_.<br><br>Version control<br>---------------<br><br>Once your Python package is created, put it under<br>`version control &lt;https://guide.esciencecenter.nl/best_practices/version_control.html&gt;`_!<br>We recommend using `git &lt;http://git-scm.com/&gt;`_ and `github &lt;https://github.com/&gt;`_.<br><br>.. code-block:: console<br><br>  cd deepdata_alpha<br>  git init<br>  git add -A<br>  git commit<br><br>To put your code on github, follow `this tutorial &lt;https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/&gt;`_.<br><br>Python versions<br>---------------<br><br>This repository is set up with Python versions:<br>* 3.4<br>* 3.5<br>* 3.6<br><br>Add or remove Python versions based on project requirements. `The guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html&gt;`_ contains more information about Python versions and writing Python 2 and 3 compatible code.<br><br>Package management and dependencies<br>-----------------------------------<br><br>You can use either `pip` or `conda` for installing dependencies and package management. This repository does not force you to use one or the other, as project requirements differ. For advice on what to use, please check `the relevant section of the guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#dependencies-and-package-management&gt;`_.<br><br>* Dependencies should be added to `setup.py` in the `install_requires` list.<br><br>Packaging/One command install<br>-----------------------------<br><br>You can distribute your code using pipy or conda. Again, the project template does not enforce the use of either one. `The guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#building-and-packaging-code&gt;`_ can help you decide which tool to use for packaging.<br><br>Testing and code coverage<br>-------------------------<br><br>* Tests should be put in the ``tests`` folder.<br>* The ``tests`` folder contains:<br><br>  - Example tests that you should replace with your own meaningful tests (file: ``test_deepdata_alpha``)<br>  - A test that checks whether your code conforms to the Python style guide (PEP 8) (file: ``test_lint.py``)<br><br>* The testing framework used is `PyTest &lt;https://pytest.org&gt;`_<br><br>  - `PyTest introduction &lt;http://pythontesting.net/framework/pytest/pytest-introduction/&gt;`_<br><br>* Tests can be run with ``python setup.py test``<br><br>  - This is configured in ``setup.py`` and ``setup.cfg``<br><br>* Use `Travis CI &lt;https://travis-ci.com/&gt;`_ to automatically run tests and to test using multiple Python versions<br><br>  - Configuration can be found in ``.travis.yml``<br>  - `Getting started with Travis CI &lt;https://docs.travis-ci.com/user/getting-started/&gt;`_<br><br>* TODO: add something about code quality/coverage tool?<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#testing&gt;`_<br><br>Documentation<br>-------------<br><br>* Documentation should be put in the ``docs`` folder. The contents have been generated using ``sphinx-quickstart`` (Sphinx version 1.6.5).<br>* We recommend writing the documentation using Restructured Text (reST) and Google style docstrings.<br><br>  - `Restructured Text (reST) and Sphinx CheatSheet &lt;http://openalea.gforge.inria.fr/doc/openalea/doc/_build/html/source/sphinx/rest_syntax.html&gt;`_<br>  - `Google style docstring examples &lt;http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html&gt;`_.<br><br>* The documentation is set up with the Read the Docs Sphinx Theme.<br><br>  - Check out the `configuration options &lt;https://sphinx-rtd-theme.readthedocs.io/en/latest/&gt;`_.<br><br>* To generate html documentation run ``python setup.py build_sphinx``<br><br>  - This is configured in ``setup.cfg``<br>  - Alternatively, run ``make html`` in the ``docs`` folder.<br><br>* The ``docs/_templates`` directory contains an (empty) ``.gitignore`` file, to be able to add it to the repository. This file can be safely removed (or you can just leave it there).<br>* To put the documentation on `Read the Docs &lt;https://readthedocs.org&gt;`_, log in to your Read the Docs account, and import the repository (under 'My Projects').<br><br>  - Include the link to the documentation in this README_.<br><br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#writingdocumentation&gt;`_<br><br>Coding style conventions and code quality<br>-----------------------------------------<br><br>* Check your code style with ``prospector``<br>* You may need run ``pip install .[dev]`` first, to install the required dependencies<br>* You can use ``yapf`` to fix the readability of your code style and ``isort`` to format and group your imports<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#coding-style-conventions&gt;`_<br><br>Package version number<br>----------------------<br><br>* We recommend using `semantic versioning &lt;https://guide.esciencecenter.nl/best_practices/releases.html#semantic-versioning&gt;`_.<br>* For convenience, the package version is stored in a single place: ``deepdata_alpha/__version__.py``. For updating the version number, you only have to change this file.<br>* Don't forget to update the version number before `making a release &lt;https://guide.esciencecenter.nl/best_practices/releases.html&gt;`_!<br><br>CHANGELOG.rst<br>-------------<br><br>* Document changes to your software package<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/software/releases.html#changelogmd&gt;`_<br><br>CITATION.cff<br>------------<br><br>* To allow others to cite your software, add a ``CITATION.cff`` file<br>* It only makes sense to do this once there is something to cite (e.g., a software release with a DOI).<br>* Follow the `making software citable &lt;https://guide.esciencecenter.nl/citable_software/making_software_citable.html&gt;`_ section in the guide.<br><br>CODE_OF_CONDUCT.rst<br>-------------------<br><br>* Information about how to behave professionally<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/software/documentation.html#code-of-conduct&gt;`_<br><br>CONTRIBUTING.rst<br>----------------<br><br>* Information about how to contribute to this software package<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/software/documentation.html#contribution-guidelines&gt;`_<br><br>MANIFEST.in<br>-----------<br><br>* List non-Python files that should be included in a source distribution<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/best_practices/language_guides/python.html#building-and-packaging-code&gt;`_<br><br>NOTICE<br>------<br><br>* List of attributions of this project and Apache-license dependencies<br>* `Relevant section in the guide &lt;https://guide.esciencecenter.nl/best_practices/licensing.html#notice&gt;`_<br><br>Installation<br>------------<br><br>To install deepdata_alpha, do:<br><br>.. code-block:: console<br><br>  git clone https://github.com/John/deepdata_alpha.git<br>  cd deepdata_alpha<br>  pip install .<br><br><br>Run tests (including coverage) with:<br><br>.. code-block:: console<br><br>  python setup.py test<br><br><br>Documentation<br>*************<br><br>.. _README:<br><br>Include a link to your project's full documentation here.<br><br>Contributing<br>************<br><br>If you want to contribute to the development of deepdata_alpha,<br>have a look at the `contribution guidelines &lt;CONTRIBUTING.rst&gt;`_.<br><br>License<br>*******<br><br>Copyright (c) 2018, John J. H. Lin<br><br><br>Credits<br>*******<br><br>This package was created with `Cookiecutter &lt;https://github.com/audreyr/cookiecutter&gt;`_ and the `NLeSC/python-template &lt;https://github.com/NLeSC/python-template&gt;`_.\n          </div>"}, "last_serial": 4564320, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eb2fa8521a9491217ddd1d26621572a1", "sha256": "74c7306c0c081a98cef5747dd7101ce27765037e232196a5c3c9d9b738d2cac0"}, "downloads": -1, "filename": "deepdata_alpha-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eb2fa8521a9491217ddd1d26621572a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5182, "upload_time": "2018-11-27T08:12:58", "upload_time_iso_8601": "2018-11-27T08:12:58.480330Z", "url": "https://files.pythonhosted.org/packages/03/32/1e58d66edf052fdd986c204be40e2657ae9537f2a1f9cd4d71fd417cbe8e/deepdata_alpha-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "509b7ba9124ee0155fcbc5b4eae8ced2", "sha256": "32e858e4978a53f1b02e0069931876a36284cfb2354aa368f7a1361dc2cc84ea"}, "downloads": -1, "filename": "deepdata_alpha-0.2.0.tar.gz", "has_sig": false, "md5_digest": "509b7ba9124ee0155fcbc5b4eae8ced2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5340, "upload_time": "2018-12-05T05:17:26", "upload_time_iso_8601": "2018-12-05T05:17:26.219215Z", "url": "https://files.pythonhosted.org/packages/4d/e4/81c8a2ccdc255045c6b57baf1ba1ef672df55e65837b35851c9787c49d3e/deepdata_alpha-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bbe3a147bfc4b8f907ebdc9fc755919c", "sha256": "1c5d180f4aac5b577329ff218146f558bb2798c9e5444d21ae06eee644ccd0ca"}, "downloads": -1, "filename": "deepdata_alpha-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bbe3a147bfc4b8f907ebdc9fc755919c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10003, "upload_time": "2018-12-05T05:36:21", "upload_time_iso_8601": "2018-12-05T05:36:21.371990Z", "url": "https://files.pythonhosted.org/packages/ee/01/96bebb5609eade3809ed923e2d238bd65c237117fd5739c5889fcb958524/deepdata_alpha-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f57bb1153e7c90439e79def1f40b6115", "sha256": "9e9d9cdede342adcc3f77ceeed2c0c1cafa637deccc5f61959e6b3d806268411"}, "downloads": -1, "filename": "deepdata_alpha-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f57bb1153e7c90439e79def1f40b6115", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12228, "upload_time": "2018-12-05T13:41:28", "upload_time_iso_8601": "2018-12-05T13:41:28.059312Z", "url": "https://files.pythonhosted.org/packages/9b/da/1af6f78289dd67afaa83f3daa74ed9442f8799102a8442302d48d74b6e7e/deepdata_alpha-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3acf32e59fe0e2b8ea98a1cd5e2549ca", "sha256": "5818d323f170e12dcf1b8de5ab746f3e2dfae162298c7536824a157b3d10cdea"}, "downloads": -1, "filename": "deepdata_alpha-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3acf32e59fe0e2b8ea98a1cd5e2549ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10000, "upload_time": "2018-12-05T13:41:29", "upload_time_iso_8601": "2018-12-05T13:41:29.806324Z", "url": "https://files.pythonhosted.org/packages/13/5b/47bc4c86dff0f5549a77bdfd4798ef3f7ebda7cc4ff92b18de577c1e9874/deepdata_alpha-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fc574e7885636e394aa3a4bcffd55e0c", "sha256": "316b274d85c8e0f8e105d0b6ba99c6fc411edf5e848a2983d4d0b7437c335cdc"}, "downloads": -1, "filename": "deepdata_alpha-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fc574e7885636e394aa3a4bcffd55e0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18473003, "upload_time": "2018-12-05T15:14:30", "upload_time_iso_8601": "2018-12-05T15:14:30.243357Z", "url": "https://files.pythonhosted.org/packages/31/3a/1a39deb04e11fb515e0702b5084c078646121f6803199a7bc5d2da92c831/deepdata_alpha-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52088ae7351e62fb3871cdae13a2c053", "sha256": "f420b0004f1af92e62d09b347d4219f5c27344ea0272211372bda72fd920a1b5"}, "downloads": -1, "filename": "deepdata_alpha-0.2.3.tar.gz", "has_sig": false, "md5_digest": "52088ae7351e62fb3871cdae13a2c053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17860785, "upload_time": "2018-12-05T15:18:18", "upload_time_iso_8601": "2018-12-05T15:18:18.412268Z", "url": "https://files.pythonhosted.org/packages/22/ff/676d553096480d28ec52a7b5dcb186110386892f83489eee9dffab024642/deepdata_alpha-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0413d0b0a28debb3c641acaf943ba640", "sha256": "96e9eb2257ec0a8d86213009a1d652ac75d1dde1dea80db2dd950da78629bd40"}, "downloads": -1, "filename": "deepdata_alpha-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0413d0b0a28debb3c641acaf943ba640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17910010, "upload_time": "2018-12-05T15:42:01", "upload_time_iso_8601": "2018-12-05T15:42:01.447387Z", "url": "https://files.pythonhosted.org/packages/53/dc/8c49601534ba4fa570a25fcbf03d654a3f88ec3940b5336c547474e0dc4f/deepdata_alpha-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0413d0b0a28debb3c641acaf943ba640", "sha256": "96e9eb2257ec0a8d86213009a1d652ac75d1dde1dea80db2dd950da78629bd40"}, "downloads": -1, "filename": "deepdata_alpha-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0413d0b0a28debb3c641acaf943ba640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17910010, "upload_time": "2018-12-05T15:42:01", "upload_time_iso_8601": "2018-12-05T15:42:01.447387Z", "url": "https://files.pythonhosted.org/packages/53/dc/8c49601534ba4fa570a25fcbf03d654a3f88ec3940b5336c547474e0dc4f/deepdata_alpha-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:28 2020"}