{"info": {"author": "Dongsheng Cao", "author_email": "oriental-cds@163.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "[![PyPI version](https://badge.fury.io/py/propy3.svg)](https://badge.fury.io/py/propy3)\n[![Python Support](https://img.shields.io/pypi/pyversions/propy3.svg)](https://pypi.org/project/propy3/)\n[![Documentation Status](https://readthedocs.org/projects/propy3/badge/?version=latest)](https://propy3.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.org/MartinThoma/propy3.svg?branch=master)](https://travis-ci.org/MartinThoma/propy3)\n[![Coverage Status](https://coveralls.io/repos/github/MartinThoma/propy3/badge.svg?branch=master)](https://coveralls.io/github/MartinThoma/propy3?branch=master)\n\n# propy3\n\n`propy3` is a drop-in replacement for [`propy`](https://code.google.com/archive/p/protpy/).\nThe original project was developed by Dongsheng Cao. See the commit history\nfor all changes made afterwards.\n\nThe reason for creating this fork of propy is to add Python 3 support.\n\nThe only point where you have to enter `propy3` is at installation. Afterwards,\nyou simply `import propy`.\n\n## Introduction\n\nSequence-derived structural and physicochemical features are highly useful for\nrepresenting and distinguishing proteins or peptides of different structural,\nfunctional and interaction properties, and have been extensively used in\ndeveloping methods and software for predicting protein structural and\nfunctional classes, protein-protein interactions, drug-target interactions,\nprotein substrates, molecualr binding sites on proteins, subcellular locations,\nprotein crystallization propensity and peptides of specific properties. In\norder to conveniently apply these structural features from a protein sequence\nfor researchers, we developed a propy package using pure python language, which\ncould calculate a large number of protein descriptors from a protein sequence.\n\n## Features\n\nThe propy package has the following significant features:\n\n1. It is written by the pure python language. It only needs the support of some\n   built-in modules in the python software.\n2. For academic users, it is free of charge. They can freely use and distribute\n   it. For commercial purpose, they must contact the author.\n3. It can calculate a large number of protein descriptors including: amino acid\n   composition descriptors, dipeptide composition descriptors, tri-peptide\n   composition descriptors, Normalized Moreau-Broto autocorrelation\n   descriptors, Moran autocorrelation descriptors, Geary autocorrelation\n   descriptors, Composition, Transition, Distribution descriptors (CTD),\n   sequence order coupling numbers, quasi-sequence order descriptors, pseudo\n   amino acid composition descriptors, amphiphilic pseudo amino acid\n   composition descriptors.\n4. The users could specify the needed properties of 20 amino acids to calculate\n   the corresponding protein descriptors.\n5. The package includes the module which could directly download the protein\n   sequence form uniprot website by uniprot id.\n6. The package includes the module which could automatrically download the\n   property from the AAindex database. Thus, the user could calcualte thousands\n   of protein features.\n\nThe protein descriptors calculated by propy\n\n1. AAC: amino acid composition descriptors (20)\n2. DPC: dipeptide composition descriptors (400)\n3. TPC: tri-peptide composition descriptors (8000)\n4. MBauto: Normalized Moreau-Broto autocorrelation descriptors (depend on the given properties, the default is 240)\n5. Moranauto: Moran autocorrelation descriptors(depend on the given properties, the default is 240)\n6. Gearyauto: Geary autocorrelation descriptors(depend on the given properties, the default is 240)\n6. CTD: Composition, Transition, Distribution descriptors (CTD) (21+21+105=147)\n7. SOCN: sequence order coupling numbers (depend on the choice of maxlag, the default is 60)\n8. QSO: quasi-sequence order descriptors (depend on the choice of maxlag, the default is 100)\n9. PAAC: pseudo amino acid composition descriptors (depend on the choice of lamda, the default is 50)\n10. APAAC: amphiphilic pseudo amino acid composition descriptors(depend on the choice of lamda, the default is 50)\n\n## Install\n\n```\npip install propy3\n```\n\n## Usage Example\n\nFor more examples, please see the user guide.\n\n```python\nfrom propy import PyPro\nfrom propy.GetProteinFromUniprot import GetProteinSequence\n\nproteinsequence = GetProteinSequence(\"P48039\")    # download the protein sequence by uniprot id\nDesObject = PyPro.GetProDes(proteinsequence)      # construct a GetProDes object\nprint(DesObject.GetCTD())                         # calculate 147 CTD descriptors\nprint(DesObject.GetAAComp())                      # calculate 20 amino acid composition descriptors\npaac = DesObject.GetPAAC(lamda=10,weight=0.05)    # calculate 30 pseudo amino acid composition descriptors\n\nfor i in paac:\n    print(i, paaci)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://cbdd.csu.edu.cn/index", "keywords": "", "license": "GPL", "maintainer": "Martin Thoma", "maintainer_email": "info@martin-thoma.de", "name": "propy3", "package_url": "https://pypi.org/project/propy3/", "platform": "", "project_url": "https://pypi.org/project/propy3/", "project_urls": {"Homepage": "http://cbdd.csu.edu.cn/index"}, "release_url": "https://pypi.org/project/propy3/1.0.0a2/", "requires_dist": null, "requires_python": "", "summary": "Compute protein descriptors", "version": "1.0.0a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/propy3\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aeba95569da770200c6889344ab940eb29717a14/68747470733a2f2f62616467652e667572792e696f2f70792f70726f7079332e737667\"></a>\n<a href=\"https://pypi.org/project/propy3/\" rel=\"nofollow\"><img alt=\"Python Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dde812971abef5840a039858a499bcb6d5f9ad6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70726f7079332e737667\"></a>\n<a href=\"https://propy3.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29613645d895a195ead3db33a1d095305de56b2e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70726f7079332f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/MartinThoma/propy3\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91eefbe9938af3039a7e6630470fd3a5954da3e6/68747470733a2f2f7472617669732d63692e6f72672f4d617274696e54686f6d612f70726f7079332e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/MartinThoma/propy3?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6de3aa8bc74d4aacb3e1f2ed8e1867d26c8f12bc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4d617274696e54686f6d612f70726f7079332f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>propy3</h1>\n<p><code>propy3</code> is a drop-in replacement for <a href=\"https://code.google.com/archive/p/protpy/\" rel=\"nofollow\"><code>propy</code></a>.\nThe original project was developed by Dongsheng Cao. See the commit history\nfor all changes made afterwards.</p>\n<p>The reason for creating this fork of propy is to add Python 3 support.</p>\n<p>The only point where you have to enter <code>propy3</code> is at installation. Afterwards,\nyou simply <code>import propy</code>.</p>\n<h2>Introduction</h2>\n<p>Sequence-derived structural and physicochemical features are highly useful for\nrepresenting and distinguishing proteins or peptides of different structural,\nfunctional and interaction properties, and have been extensively used in\ndeveloping methods and software for predicting protein structural and\nfunctional classes, protein-protein interactions, drug-target interactions,\nprotein substrates, molecualr binding sites on proteins, subcellular locations,\nprotein crystallization propensity and peptides of specific properties. In\norder to conveniently apply these structural features from a protein sequence\nfor researchers, we developed a propy package using pure python language, which\ncould calculate a large number of protein descriptors from a protein sequence.</p>\n<h2>Features</h2>\n<p>The propy package has the following significant features:</p>\n<ol>\n<li>It is written by the pure python language. It only needs the support of some\nbuilt-in modules in the python software.</li>\n<li>For academic users, it is free of charge. They can freely use and distribute\nit. For commercial purpose, they must contact the author.</li>\n<li>It can calculate a large number of protein descriptors including: amino acid\ncomposition descriptors, dipeptide composition descriptors, tri-peptide\ncomposition descriptors, Normalized Moreau-Broto autocorrelation\ndescriptors, Moran autocorrelation descriptors, Geary autocorrelation\ndescriptors, Composition, Transition, Distribution descriptors (CTD),\nsequence order coupling numbers, quasi-sequence order descriptors, pseudo\namino acid composition descriptors, amphiphilic pseudo amino acid\ncomposition descriptors.</li>\n<li>The users could specify the needed properties of 20 amino acids to calculate\nthe corresponding protein descriptors.</li>\n<li>The package includes the module which could directly download the protein\nsequence form uniprot website by uniprot id.</li>\n<li>The package includes the module which could automatrically download the\nproperty from the AAindex database. Thus, the user could calcualte thousands\nof protein features.</li>\n</ol>\n<p>The protein descriptors calculated by propy</p>\n<ol>\n<li>AAC: amino acid composition descriptors (20)</li>\n<li>DPC: dipeptide composition descriptors (400)</li>\n<li>TPC: tri-peptide composition descriptors (8000)</li>\n<li>MBauto: Normalized Moreau-Broto autocorrelation descriptors (depend on the given properties, the default is 240)</li>\n<li>Moranauto: Moran autocorrelation descriptors(depend on the given properties, the default is 240)</li>\n<li>Gearyauto: Geary autocorrelation descriptors(depend on the given properties, the default is 240)</li>\n<li>CTD: Composition, Transition, Distribution descriptors (CTD) (21+21+105=147)</li>\n<li>SOCN: sequence order coupling numbers (depend on the choice of maxlag, the default is 60)</li>\n<li>QSO: quasi-sequence order descriptors (depend on the choice of maxlag, the default is 100)</li>\n<li>PAAC: pseudo amino acid composition descriptors (depend on the choice of lamda, the default is 50)</li>\n<li>APAAC: amphiphilic pseudo amino acid composition descriptors(depend on the choice of lamda, the default is 50)</li>\n</ol>\n<h2>Install</h2>\n<pre><code>pip install propy3\n</code></pre>\n<h2>Usage Example</h2>\n<p>For more examples, please see the user guide.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">propy</span> <span class=\"kn\">import</span> <span class=\"n\">PyPro</span>\n<span class=\"kn\">from</span> <span class=\"nn\">propy.GetProteinFromUniprot</span> <span class=\"kn\">import</span> <span class=\"n\">GetProteinSequence</span>\n\n<span class=\"n\">proteinsequence</span> <span class=\"o\">=</span> <span class=\"n\">GetProteinSequence</span><span class=\"p\">(</span><span class=\"s2\">\"P48039\"</span><span class=\"p\">)</span>    <span class=\"c1\"># download the protein sequence by uniprot id</span>\n<span class=\"n\">DesObject</span> <span class=\"o\">=</span> <span class=\"n\">PyPro</span><span class=\"o\">.</span><span class=\"n\">GetProDes</span><span class=\"p\">(</span><span class=\"n\">proteinsequence</span><span class=\"p\">)</span>      <span class=\"c1\"># construct a GetProDes object</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">DesObject</span><span class=\"o\">.</span><span class=\"n\">GetCTD</span><span class=\"p\">())</span>                         <span class=\"c1\"># calculate 147 CTD descriptors</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">DesObject</span><span class=\"o\">.</span><span class=\"n\">GetAAComp</span><span class=\"p\">())</span>                      <span class=\"c1\"># calculate 20 amino acid composition descriptors</span>\n<span class=\"n\">paac</span> <span class=\"o\">=</span> <span class=\"n\">DesObject</span><span class=\"o\">.</span><span class=\"n\">GetPAAC</span><span class=\"p\">(</span><span class=\"n\">lamda</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">)</span>    <span class=\"c1\"># calculate 30 pseudo amino acid composition descriptors</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">paac</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">paaci</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6713264, "releases": {"1.0.0a0": [{"comment_text": "", "digests": {"md5": "4161e37d6cd59eb346f3a58fcec947ab", "sha256": "446cf00fa10305335661faa91946a7f69b6149f2fa5582b887845cc9abef4d0a"}, "downloads": -1, "filename": "propy3-1.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "4161e37d6cd59eb346f3a58fcec947ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 461567, "upload_time": "2020-02-26T23:29:20", "upload_time_iso_8601": "2020-02-26T23:29:20.422970Z", "url": "https://files.pythonhosted.org/packages/c7/2d/7e02927f41c3491a8893bcf9c2f2d8bf47f07248f96449030417f53f73fd/propy3-1.0.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f016d463be6e8122b6ccfc28075d63a", "sha256": "914684c8a54bd6a6c83751c80e76ed6c78f1b810ca7ddabca7b582a962c1eea8"}, "downloads": -1, "filename": "propy3-1.0.0a0.tar.gz", "has_sig": false, "md5_digest": "5f016d463be6e8122b6ccfc28075d63a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 452469, "upload_time": "2020-02-26T13:36:52", "upload_time_iso_8601": "2020-02-26T13:36:52.553292Z", "url": "https://files.pythonhosted.org/packages/21/33/3af77fc9f1e3c7e426ed1c8e26ee2c106dc58fa0e42c52b4c066c24f7264/propy3-1.0.0a0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "60a6a866a00ba7d05a5143ee808b68f4", "sha256": "e362360468847b3f22f29635aabfcc60e7a645dbe880416f64d8a6e966b91d1b"}, "downloads": -1, "filename": "propy3-1.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "60a6a866a00ba7d05a5143ee808b68f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 461567, "upload_time": "2020-02-26T23:29:39", "upload_time_iso_8601": "2020-02-26T23:29:39.629377Z", "url": "https://files.pythonhosted.org/packages/b2/9d/446722359f172258d164d7c853d0c2a8c1f978edd5f4e8b885020d06e376/propy3-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2f88c2f8b275311d3a4111dae5d1244", "sha256": "3da3263e8d457ef199c63020aaadc35e25b62d80328ca6287f245894f5e2f74e"}, "downloads": -1, "filename": "propy3-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "d2f88c2f8b275311d3a4111dae5d1244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27712, "upload_time": "2020-02-26T23:29:41", "upload_time_iso_8601": "2020-02-26T23:29:41.536268Z", "url": "https://files.pythonhosted.org/packages/4e/5a/7e7e0884b380511ee0ed71d0f7f55611f89778db76cb15e0de5499194520/propy3-1.0.0a1.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "4d435aabb317ec28895a1d1fe8a03aff", "sha256": "61840831ea3b5f84c0c2e96cdfb8c1c14b867999dd4e8925a9505c3e0e28d979"}, "downloads": -1, "filename": "propy3-1.0.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "4d435aabb317ec28895a1d1fe8a03aff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 462520, "upload_time": "2020-02-27T20:42:36", "upload_time_iso_8601": "2020-02-27T20:42:36.184068Z", "url": "https://files.pythonhosted.org/packages/bf/11/aa186f20019b616cccbf496399782b6765cbb1c31f216c16743781555b30/propy3-1.0.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4000a8c112e0bf74895719d434df33e", "sha256": "7565de1f04b2673c9c0e62eac70a71b47b798a2193037935a7e48bcb757928c5"}, "downloads": -1, "filename": "propy3-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "e4000a8c112e0bf74895719d434df33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 209845, "upload_time": "2020-02-27T20:42:38", "upload_time_iso_8601": "2020-02-27T20:42:38.865785Z", "url": "https://files.pythonhosted.org/packages/0d/03/b9ea9c031b3739b0745b76b42849cbdb7f0a8de1c32b718d65cbe7bd81c1/propy3-1.0.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d435aabb317ec28895a1d1fe8a03aff", "sha256": "61840831ea3b5f84c0c2e96cdfb8c1c14b867999dd4e8925a9505c3e0e28d979"}, "downloads": -1, "filename": "propy3-1.0.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "4d435aabb317ec28895a1d1fe8a03aff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 462520, "upload_time": "2020-02-27T20:42:36", "upload_time_iso_8601": "2020-02-27T20:42:36.184068Z", "url": "https://files.pythonhosted.org/packages/bf/11/aa186f20019b616cccbf496399782b6765cbb1c31f216c16743781555b30/propy3-1.0.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4000a8c112e0bf74895719d434df33e", "sha256": "7565de1f04b2673c9c0e62eac70a71b47b798a2193037935a7e48bcb757928c5"}, "downloads": -1, "filename": "propy3-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "e4000a8c112e0bf74895719d434df33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 209845, "upload_time": "2020-02-27T20:42:38", "upload_time_iso_8601": "2020-02-27T20:42:38.865785Z", "url": "https://files.pythonhosted.org/packages/0d/03/b9ea9c031b3739b0745b76b42849cbdb7f0a8de1c32b718d65cbe7bd81c1/propy3-1.0.0a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:51 2020"}