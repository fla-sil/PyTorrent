{"info": {"author": "Jonathan Frere", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3 :: Only", "Topic :: Database"], "description": "OGitM\r\n=====\r\n\r\n**Because doing stupid things with git is surprisingly fun.**\r\n\r\n\r\n.. image:: https://travis-ci.org/MrJohz/ogitm.svg?branch=master\r\n    :target: https://travis-ci.org/MrJohz/ogitm\r\n    :alt: Build Status\r\n.. image:: https://coveralls.io/repos/MrJohz/ogitm/badge.svg?branch=master\r\n    :target: https://coveralls.io/r/MrJohz/ogitm?branch=master\r\n    :alt: Coverage Status\r\n.. image:: https://readthedocs.org/projects/ogitm/badge/?version=latest\r\n    :target: https://readthedocs.org/projects/ogitm/?badge=latest\r\n    :alt: Documentation Status\r\n\r\n\r\nOGitM is an ORM, but where the relational database that underlies the entire\r\nmapping has been replaced by an awful attempt at replicating a stupidly basic\r\nkey-value document store in git_.  This software should never be used by\r\nanyone ever.  Please, for the good of humanity.\r\n\r\n.. _git: http://git-scm.com/\r\n\r\n\r\nUm... What?\r\n-----------\r\n\r\nGit is useful, because it stores both data, and the history of that data.\r\nThis might be a useful property for a database to have.  Writing a whole\r\ndatabase based on git is boring, I should try writing an ORM to wrap around\r\nit.  Well, it wouldn't so much be an ORM, more an O... git M?\r\n\r\n\r\nHow do I use this?\r\n---------------------\r\n\r\nImport the module, declare your model, and go!\r\n\r\n.. code-block:: pycon\r\n\r\n    >>> import tempfile; db_directory = tempfile.TemporaryDirectory()\r\n    >>>\r\n    >>> import ogitm\r\n    >>> class MyModel(ogitm.Model, db=db_directory.name):\r\n    ...     name = ogitm.fields.String()\r\n    ...     age = ogitm.fields.Integer(min=0)\r\n    >>>\r\n    >>> instance = MyModel(name=\"Bob\", age=172)\r\n    >>> instance_id = instance.save()\r\n    >>> MyModel.find(name=\"Bob\", age=172).first() == instance\r\n    True\r\n    >>> instance.age = -5\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Disallowed value -5 ...\r\n\r\n\r\nCan I get at the underlying database?\r\n-------------------------------------\r\n\r\nYes.  Meet the gitdb module, which provides direct access to a document-based\r\ndatabase.  Initialise it with a directory that it can use as a git bare\r\nrepository, and start inserting and getting.\r\n\r\n.. code-block:: pycon\r\n\r\n    >>> import tempfile; db_directory = tempfile.TemporaryDirectory()\r\n    >>>\r\n    >>> from ogitm import gitdb\r\n    >>> db = gitdb.GitDB(db_directory.name)\r\n    >>> doc_id = db.insert({'name': 'Jimmy', 'age': 45, 'car': False})\r\n    >>> db.get(doc_id) == {'name': 'Jimmy', 'age': 45, 'car': False}\r\n    True\r\n\r\nMore than that, you can also search for documents previously inserted.  These\r\nqueries accept simple scalar arguments, which return all documents which have\r\nthe same values as the query, and more complex dictionary arguments which can\r\ntest for existence, compare etc.\r\n\r\n.. code-block:: pycon\r\n\r\n    >>> doc_id = db.insert({'name': 'Bobbie', 'car': True})\r\n    >>> doc_id = db.insert({'name': 'Bertie', 'age': 26, 'car': False})\r\n    >>> {'name': 'Bobbie', 'car': True} in db.find_items({'car': True})\r\n    True\r\n    >>> doc_id = db.insert({'name': 'Jimmy'})\r\n    >>> db.find_items({'car': {'exists': False}}) == [{'name': 'Jimmy'}]\r\n    True\r\n\r\n\r\nTodo\r\n----\r\n\r\n- Documentation.  (docstrings & manual)\r\n- PyPI\r\n- Relationships? (U f*cking wot m8?)\r\n- Python 2\r\n- Better way of accessing git (May be needed for Py2, is needed for pypy, will\r\n  make it easier for anyone to install it from PyPI) (See Dulwich)\r\n- Begin versioning sometime fairly soon", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MrJohz/ogitm", "keywords": "git database", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ogitm", "package_url": "https://pypi.org/project/ogitm/", "platform": "", "project_url": "https://pypi.org/project/ogitm/", "project_urls": {"Homepage": "https://github.com/MrJohz/ogitm"}, "release_url": "https://pypi.org/project/ogitm/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A OO-based Git Database", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Because doing stupid things with git is surprisingly fun.</strong></p>\n<a href=\"https://travis-ci.org/MrJohz/ogitm\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f8d5aa1e10aa0a60636c6273aa91dfaaa7cb3ab/68747470733a2f2f7472617669732d63692e6f72672f4d724a6f687a2f6f6769746d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/MrJohz/ogitm?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65f257347c8114bcfb593f8db54f38c164c20e81/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4d724a6f687a2f6f6769746d2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://readthedocs.org/projects/ogitm/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9b7cfbb7ba7cc24604863447b01999412c41886/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6f6769746d2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>OGitM is an ORM, but where the relational database that underlies the entire\nmapping has been replaced by an awful attempt at replicating a stupidly basic\nkey-value document store in <a href=\"http://git-scm.com/\" rel=\"nofollow\">git</a>.  This software should never be used by\nanyone ever.  Please, for the good of humanity.</p>\n<div id=\"um-what\">\n<h2>Um\u2026 What?</h2>\n<p>Git is useful, because it stores both data, and the history of that data.\nThis might be a useful property for a database to have.  Writing a whole\ndatabase based on git is boring, I should try writing an ORM to wrap around\nit.  Well, it wouldn\u2019t so much be an ORM, more an O\u2026 git M?</p>\n</div>\n<div id=\"how-do-i-use-this\">\n<h2>How do I use this?</h2>\n<p>Import the module, declare your model, and go!</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">tempfile</span><span class=\"p\">;</span> <span class=\"n\">db_directory</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">TemporaryDirectory</span><span class=\"p\">()</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">ogitm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">ogitm</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"n\">db_directory</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">ogitm</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">ogitm</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">172</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">instance_id</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">172</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">instance</span>\n<span class=\"go\">True\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">5</span>\n<span class=\"gt\">Traceback (most recent call last):\n</span>    <span class=\"o\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">Disallowed value -5 ...</span>\n</pre>\n</div>\n<div id=\"can-i-get-at-the-underlying-database\">\n<h2>Can I get at the underlying database?</h2>\n<p>Yes.  Meet the gitdb module, which provides direct access to a document-based\ndatabase.  Initialise it with a directory that it can use as a git bare\nrepository, and start inserting and getting.</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">tempfile</span><span class=\"p\">;</span> <span class=\"n\">db_directory</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">TemporaryDirectory</span><span class=\"p\">()</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ogitm</span> <span class=\"kn\">import</span> <span class=\"n\">gitdb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">gitdb</span><span class=\"o\">.</span><span class=\"n\">GitDB</span><span class=\"p\">(</span><span class=\"n\">db_directory</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">doc_id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jimmy'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">doc_id</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jimmy'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>\n<span class=\"go\">True</span>\n</pre>\n<p>More than that, you can also search for documents previously inserted.  These\nqueries accept simple scalar arguments, which return all documents which have\nthe same values as the query, and more complex dictionary arguments which can\ntest for existence, compare etc.</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">doc_id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Bobbie'</span><span class=\"p\">,</span> <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">doc_id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Bertie'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Bobbie'</span><span class=\"p\">,</span> <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span> <span class=\"ow\">in</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">find_items</span><span class=\"p\">({</span><span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n<span class=\"go\">True\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">doc_id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jimmy'</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">find_items</span><span class=\"p\">({</span><span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'exists'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}})</span> <span class=\"o\">==</span> <span class=\"p\">[{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jimmy'</span><span class=\"p\">}]</span>\n<span class=\"go\">True</span>\n</pre>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Documentation.  (docstrings &amp; manual)</li>\n<li>PyPI</li>\n<li>Relationships? (U f*cking wot m8?)</li>\n<li>Python 2</li>\n<li>Better way of accessing git (May be needed for Py2, is needed for pypy, will\nmake it easier for anyone to install it from PyPI) (See Dulwich)</li>\n<li>Begin versioning sometime fairly soon</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1478664, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "88abd92fd63efd2ea6f210f05763766f", "sha256": "0c31fa4ceb506f1b40172113ca40f2dd28113b1e478de4fd1535742cc0ef8c9c"}, "downloads": -1, "filename": "ogitm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88abd92fd63efd2ea6f210f05763766f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11485, "upload_time": "2015-03-26T13:50:14", "upload_time_iso_8601": "2015-03-26T13:50:14.049300Z", "url": "https://files.pythonhosted.org/packages/99/50/05db3d7c5484e49dec98b87377e9293dde49b602f29fd498ce8d148a20c9/ogitm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea4681ac488e8e24a1ada2b50fbb0655", "sha256": "5b99563d9baae442cd2177de80b7a671d1459d28f815c26e355b71e21288cab3"}, "downloads": -1, "filename": "ogitm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ea4681ac488e8e24a1ada2b50fbb0655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13324, "upload_time": "2015-03-26T13:50:17", "upload_time_iso_8601": "2015-03-26T13:50:17.445962Z", "url": "https://files.pythonhosted.org/packages/29/df/a8fd98734ef48cc3806132e6173b381fa887668a2f76d770025290944ddc/ogitm-0.1.0.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "a92b8559c122ab405bf4abe06e8f65b5", "sha256": "13559f3fe4dd3bb3e16ae4700481577bbcc8f0f8e132a86b3661d1439c0b9030"}, "downloads": -1, "filename": "ogitm-0.1.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "a92b8559c122ab405bf4abe06e8f65b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11524, "upload_time": "2015-03-26T13:49:28", "upload_time_iso_8601": "2015-03-26T13:49:28.771652Z", "url": "https://files.pythonhosted.org/packages/3b/54/cad74ade2f313eda4169d59414c0ecf026466abe572cd50eba7a312534f7/ogitm-0.1.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24f1bc0b91527cdd1c0c72dbf0b0bb8f", "sha256": "6d899dc447310f7b7aabc1caf3d9f2b0e744bcf767e7870fab1574edc8f92ebd"}, "downloads": -1, "filename": "ogitm-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "24f1bc0b91527cdd1c0c72dbf0b0bb8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13317, "upload_time": "2015-03-26T13:49:31", "upload_time_iso_8601": "2015-03-26T13:49:31.991493Z", "url": "https://files.pythonhosted.org/packages/f3/9a/596652245fc3187704c74ad87f6b981ab3e1a3052b4c306d98851073f80f/ogitm-0.1.0b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88abd92fd63efd2ea6f210f05763766f", "sha256": "0c31fa4ceb506f1b40172113ca40f2dd28113b1e478de4fd1535742cc0ef8c9c"}, "downloads": -1, "filename": "ogitm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88abd92fd63efd2ea6f210f05763766f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11485, "upload_time": "2015-03-26T13:50:14", "upload_time_iso_8601": "2015-03-26T13:50:14.049300Z", "url": "https://files.pythonhosted.org/packages/99/50/05db3d7c5484e49dec98b87377e9293dde49b602f29fd498ce8d148a20c9/ogitm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea4681ac488e8e24a1ada2b50fbb0655", "sha256": "5b99563d9baae442cd2177de80b7a671d1459d28f815c26e355b71e21288cab3"}, "downloads": -1, "filename": "ogitm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ea4681ac488e8e24a1ada2b50fbb0655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13324, "upload_time": "2015-03-26T13:50:17", "upload_time_iso_8601": "2015-03-26T13:50:17.445962Z", "url": "https://files.pythonhosted.org/packages/29/df/a8fd98734ef48cc3806132e6173b381fa887668a2f76d770025290944ddc/ogitm-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:53 2020"}