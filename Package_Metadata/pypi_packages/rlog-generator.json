{"info": {"author": "Fedele Mantuano", "author_email": "mantuano.fedele@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "`Build Status <https://travis-ci.org/WuerthPhoenix/log-generator>`__\n\nRandom Log Generator\n====================\n\nGenerator of random logs for multiple types of technologies.\n\nThis tool can generate all kinds of logs starting from templates. You\nshould create a pattern file in YAML format foreach log that you want to\ngenerate, like in `conf/patterns <conf/patterns>`__ examples.\n\nIf more than one patterns are specified in patterns folder, all logs are\ngenerated in parallel. It\u2019s possible to generate 100 logs in parallel.\n\nInstall\n-------\n\nClone repository\n\n::\n\n   git clone https://github.com/WuerthPhoenix/log-generator.git\n\nand install with ``setup.py``:\n\n::\n\n   $ cd log-generator\n\n   $ python setup.py install\n\nor use ``pip``:\n\n::\n\n   $ pip install rlog-generator\n\nPattern file\n------------\n\nA pattern file has many parameters.\n\n+-------------------------------+--------------------------------------+\n| Parameters                    | Descriptions                         |\n+===============================+======================================+\n| *name*                        | name of log                          |\n+-------------------------------+--------------------------------------+\n| *enabled*                     | enable/disable this pattern          |\n+-------------------------------+--------------------------------------+\n| *path*                        | path where store the log             |\n+-------------------------------+--------------------------------------+\n| *eps*                         | number of logs per seconds that will |\n|                               | be generate                          |\n+-------------------------------+--------------------------------------+\n| *correction*                  | eps correction percentage            |\n+-------------------------------+--------------------------------------+\n| *time_period*                 | how many seconds the generating is   |\n|                               | active                               |\n+-------------------------------+--------------------------------------+\n| *generator_type*              | you can choose which generator use.  |\n|                               | The common value is ``template``,    |\n|                               | that generate the logs from a        |\n|                               | template                             |\n+-------------------------------+--------------------------------------+\n| *examples*                    | logs of examples                     |\n+-------------------------------+--------------------------------------+\n| *template*                    | template to use to generate logs     |\n+-------------------------------+--------------------------------------+\n| *fields*                      | fields used in template              |\n+-------------------------------+--------------------------------------+\n\nWe can have two kinds of fields: - *list*: the list fields are used to\ngenerate random values from a given list - *func*: the func fields\nenable functions to generate the random values.\n\nThe ``func`` fields start with ``func_`` and then have the name of\nfunction. It can also have parameters.\n\nThe ``func`` developed are: - ``func_randip``: generate a random ip\naddress - ``func_randint``: generate a random integer from *min* to\n*max*\n\nFor more details see the examples in folder\n`conf/patterns <conf/patterns>`__.\n\nIf you want to contribute with real templates, add them in\n`patterns <patterns>`__ folder.\n\nCommand line\n------------\n\nThe installation stores on system the ``rlog-generator`` command line.\n\n::\n\n    $ rlog-generator --help\n   Usage: rlog-generator [OPTIONS]\n\n     Random Logs Generator Tool.\n\n   Options:\n     -p, --patterns TEXT             Path all log patterns files (only *.yml)\n                                     [default: ~/.config/rlog_generator/patterns]\n     -m, --max-concur-req INTEGER    Max concurrent logs generating  [default: 10]\n     -l, --log-level [CRITICAL|ERROR|WARNING|INFO|DEBUG|NOTSET]\n                                     Log level on stdout  [default: WARNING]\n     --progress-bar / --no-progress-bar\n                                     Enable/Disable progress bar  [default: False]\n     --help                          Show this message and exit.\n\nFeatures\n--------\n\n-  Random logging from template\n-  Template can be a list of more formats\n\nTODO\n----\n\n-  Generate logs from raw examples\n\nApache 2 Open Source License\n----------------------------\n\nThis tool can be downloaded, used, and modified free of charge. It is\navailable under the Apache 2 license.\n\n\nHistory\n=======\n\n0.1.0 (2019-05-05)\n------------------\n\n-  First release.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/WuerthPhoenix/log-generator", "keywords": "log,generator,random", "license": "", "maintainer": "Fedele Mantuano", "maintainer_email": "mantuano.fedele@gmail.com", "name": "rlog-generator", "package_url": "https://pypi.org/project/rlog-generator/", "platform": "Linux", "project_url": "https://pypi.org/project/rlog-generator/", "project_urls": {"Homepage": "https://github.com/WuerthPhoenix/log-generator"}, "release_url": "https://pypi.org/project/rlog-generator/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Generator of random logs for multiple types of technologies", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/WuerthPhoenix/log-generator\" rel=\"nofollow\">Build Status</a></p>\n<div id=\"random-log-generator\">\n<h2>Random Log Generator</h2>\n<p>Generator of random logs for multiple types of technologies.</p>\n<p>This tool can generate all kinds of logs starting from templates. You\nshould create a pattern file in YAML format foreach log that you want to\ngenerate, like in <a href=\"conf/patterns\" rel=\"nofollow\">conf/patterns</a> examples.</p>\n<p>If more than one patterns are specified in patterns folder, all logs are\ngenerated in parallel. It\u2019s possible to generate 100 logs in parallel.</p>\n<div id=\"install\">\n<h3>Install</h3>\n<p>Clone repository</p>\n<pre>git clone https://github.com/WuerthPhoenix/log-generator.git\n</pre>\n<p>and install with <tt>setup.py</tt>:</p>\n<pre>$ cd log-generator\n\n$ python setup.py install\n</pre>\n<p>or use <tt>pip</tt>:</p>\n<pre>$ pip install rlog-generator\n</pre>\n</div>\n<div id=\"pattern-file\">\n<h3>Pattern file</h3>\n<p>A pattern file has many parameters.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parameters</th>\n<th>Descriptions</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><em>name</em></td>\n<td>name of log</td>\n</tr>\n<tr><td><em>enabled</em></td>\n<td>enable/disable this pattern</td>\n</tr>\n<tr><td><em>path</em></td>\n<td>path where store the log</td>\n</tr>\n<tr><td><em>eps</em></td>\n<td>number of logs per seconds that will\nbe generate</td>\n</tr>\n<tr><td><em>correction</em></td>\n<td>eps correction percentage</td>\n</tr>\n<tr><td><em>time_period</em></td>\n<td>how many seconds the generating is\nactive</td>\n</tr>\n<tr><td><em>generator_type</em></td>\n<td>you can choose which generator use.\nThe common value is <tt>template</tt>,\nthat generate the logs from a\ntemplate</td>\n</tr>\n<tr><td><em>examples</em></td>\n<td>logs of examples</td>\n</tr>\n<tr><td><em>template</em></td>\n<td>template to use to generate logs</td>\n</tr>\n<tr><td><em>fields</em></td>\n<td>fields used in template</td>\n</tr>\n</tbody>\n</table>\n<p>We can have two kinds of fields: - <em>list</em>: the list fields are used to\ngenerate random values from a given list - <em>func</em>: the func fields\nenable functions to generate the random values.</p>\n<p>The <tt>func</tt> fields start with <tt>func_</tt> and then have the name of\nfunction. It can also have parameters.</p>\n<p>The <tt>func</tt> developed are: - <tt>func_randip</tt>: generate a random ip\naddress - <tt>func_randint</tt>: generate a random integer from <em>min</em> to\n<em>max</em></p>\n<p>For more details see the examples in folder\n<a href=\"conf/patterns\" rel=\"nofollow\">conf/patterns</a>.</p>\n<p>If you want to contribute with real templates, add them in\n<a href=\"patterns\" rel=\"nofollow\">patterns</a> folder.</p>\n</div>\n<div id=\"command-line\">\n<h3>Command line</h3>\n<p>The installation stores on system the <tt><span class=\"pre\">rlog-generator</span></tt> command line.</p>\n<pre> $ rlog-generator --help\nUsage: rlog-generator [OPTIONS]\n\n  Random Logs Generator Tool.\n\nOptions:\n  -p, --patterns TEXT             Path all log patterns files (only *.yml)\n                                  [default: ~/.config/rlog_generator/patterns]\n  -m, --max-concur-req INTEGER    Max concurrent logs generating  [default: 10]\n  -l, --log-level [CRITICAL|ERROR|WARNING|INFO|DEBUG|NOTSET]\n                                  Log level on stdout  [default: WARNING]\n  --progress-bar / --no-progress-bar\n                                  Enable/Disable progress bar  [default: False]\n  --help                          Show this message and exit.\n</pre>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Random logging from template</li>\n<li>Template can be a list of more formats</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Generate logs from raw examples</li>\n</ul>\n</div>\n<div id=\"apache-2-open-source-license\">\n<h3>Apache 2 Open Source License</h3>\n<p>This tool can be downloaded, used, and modified free of charge. It is\navailable under the Apache 2 license.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2019-05-05)</span></h2>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5320018, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "f527969cd3cc8725422a21809beb58f8", "sha256": "150224cc5cb04c22beac9b53de7060534b72cfa23292927ec8e1c3994ecbd11b"}, "downloads": -1, "filename": "rlog-generator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f527969cd3cc8725422a21809beb58f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10173, "upload_time": "2019-05-26T23:05:57", "upload_time_iso_8601": "2019-05-26T23:05:57.630093Z", "url": "https://files.pythonhosted.org/packages/68/75/5b1fe2cf1f0f0b492de6d4196bb3a038ac882829253a99f4450319edc825/rlog-generator-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f527969cd3cc8725422a21809beb58f8", "sha256": "150224cc5cb04c22beac9b53de7060534b72cfa23292927ec8e1c3994ecbd11b"}, "downloads": -1, "filename": "rlog-generator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f527969cd3cc8725422a21809beb58f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10173, "upload_time": "2019-05-26T23:05:57", "upload_time_iso_8601": "2019-05-26T23:05:57.630093Z", "url": "https://files.pythonhosted.org/packages/68/75/5b1fe2cf1f0f0b492de6d4196bb3a038ac882829253a99f4450319edc825/rlog-generator-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:16 2020"}