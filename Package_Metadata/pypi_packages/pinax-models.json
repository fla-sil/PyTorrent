{"info": {"author": "Pinax Developers", "author_email": "developers@pinaxproject.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Pinax Models\n============\n.. image:: http://slack.pinaxproject.com/badge.svg\n   :target: http://slack.pinaxproject.com/\n\n.. image:: https://img.shields.io/travis/pinax/pinax-models.svg\n    :target: https://travis-ci.org/pinax/pinax-models\n\n.. image:: https://img.shields.io/coveralls/pinax/pinax-models.svg\n    :target: https://coveralls.io/r/pinax/pinax-models\n\n.. image:: https://img.shields.io/pypi/dm/pinax-models.svg\n    :target:  https://pypi.python.org/pypi/pinax-models/\n\n.. image:: https://img.shields.io/pypi/v/pinax-models.svg\n    :target:  https://pypi.python.org/pypi/pinax-models/\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target:  https://pypi.python.org/pypi/pinax-models/\n    \n    \nPinax\n--------\n\nPinax is an open-source platform built on the Django Web Framework. It is an ecosystem of reusable Django apps, themes, and starter project templates. \nThis collection can be found at http://pinaxproject.com.\n\nThis app was developed as part of the Pinax ecosystem but is just a Django app and can be used independently of other Pinax apps.\n\n\npinax-models\n-------------\n\n``pinax-models`` provides support for logical deletes on models and in the Django admin.\n\nThis is a small and simple app that Patrick Altman wrote to get some reuse out\nof something he did in nearly every project and every model he created.  It's\ntoo easy for good data to get deleted and it be unrecoverable.  It's also too\neasy to fix this by overriding the model's delete() method and just flagging\nrecords as deleted and then leveraging Django's managers to override default\nbehavior so that logically deleted items are not returned in querysets.\n\nThere are two exceptions to this rule, however, that are useful.\n\n#. In the admin it is nice to see everything with an indicator of whether or not\n   it has been deleted, with the ability to filter down to just active records,\n   (or deleted for that matter).\n#. It is a valid request when an item is fetched by its primary key value, that\n   the object should return, even if it is marked as deleted.\n   \n   \nHistory\n--------\n\nOn May 25, 2015, Patrick donated ``django-logicaldelete`` to Pinax and as part of\nthat process, ``pinax-models`` was born and the code incorporated into that\npackage. It remains just a Django app and can be quite independently of other\nPinax apps.\n\n\nInstallation\n-----------------------\n\n::\n\n    pip install pinax-models\n    \n\nUsage\n------------------\n\nUsing the app is pretty simple:\n\n#. add `pinax.models` to your INSTALLED_APPS\n#. Inherit from ``pinax.models.LogicalDeleteModel`` for all models that you wish\n   to share in this functionality.\n#. Create and/or Register admins for each of these models using\n   ``pinax.models.LogicalDeleteModelAdmin``\n\n\nAdditional\n----------\n\nLogical deletes are handled by date stamping a `date_removed` column.  In\naddition, a ``date_created`` and ``date_modified`` columns will be populated as a\nconvenience.\n\n\nBackwards Incompatible Changes\n------------------------------\n\n2.0\n***\n\n* Renamed to ``pinax-models`` and base model renamed to ``LogicalDeleteModel``\n\n\n1.1\n***\n\n* Changed ``everything`` to ``all_with_deleted`` on LogicalDeleteManager\n* LogicalDeleteManager moved from ``logicaldelete.models`` to ``logicaldelete.managers``\n* Removed ``deleted`` and ``everything`` querysets from ``logicaldelete.models.Model``\n\n\nDocumentation\n--------------\n\nThe ``pinax-models`` documentation is currently under construction. If you would like to help us write documentation, please join our Pinax Project Slack team and let us know! The Pinax documentation is available at http://pinaxproject.com/pinax/.\n\n\nContribute\n----------------\n\nSee this blog post http://blog.pinaxproject.com/2016/02/26/recap-february-pinax-hangout/ including a video, or our How to Contribute (http://pinaxproject.com/pinax/how_to_contribute/) section for an overview on how contributing to Pinax works. For concrete contribution ideas, please see our Ways to Contribute/What We Need Help With (http://pinaxproject.com/pinax/ways_to_contribute/) section.\n\nIn case of any questions we recommend you join our Pinax Slack team (http://slack.pinaxproject.com) and ping us there instead of creating an issue on GitHub. Creating issues on GitHub is of course also valid but we are usually able to help you faster if you ping us in Slack.\n\nWe also highly recommend reading our Open Source and Self-Care blog post (http://blog.pinaxproject.com/2016/01/19/open-source-and-self-care/).  \n\n\nCode of Conduct\n----------------\n\nIn order to foster a kind, inclusive, and harassment-free community, the Pinax Project has a code of conduct, which can be found here  http://pinaxproject.com/pinax/code_of_conduct/. We ask you to treat everyone as a smart human programmer that shares an interest in Python, Django, and Pinax with you.\n\n\nPinax Project Blog and Twitter\n-------------------------------\n\nFor updates and news regarding the Pinax Project, please follow us on Twitter at @pinaxproject and check out our blog http://blog.pinaxproject.com.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pinax-models.rtfd.org/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pinax-models", "package_url": "https://pypi.org/project/pinax-models/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pinax-models/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pinax-models.rtfd.org/"}, "release_url": "https://pypi.org/project/pinax-models/3.0/", "requires_dist": null, "requires_python": null, "summary": "Provide Support for Logical Deletes on Models and in the Django Admin", "version": "3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://slack.pinaxproject.com/\" rel=\"nofollow\"><img alt=\"http://slack.pinaxproject.com/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4ff3edc9c686d7af52168f31dd15975b0a3cbb5/687474703a2f2f736c61636b2e70696e617870726f6a6563742e636f6d2f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/pinax/pinax-models\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/pinax/pinax-models.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7abd3cd1ba4894dfcc0974ab5a69f7a6d4794f8a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f70696e61782f70696e61782d6d6f64656c732e737667\"></a>\n<a href=\"https://coveralls.io/r/pinax/pinax-models\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/pinax/pinax-models.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca582eaa561b3b2fe493e1a07f454aa2e9afd511/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f70696e61782f70696e61782d6d6f64656c732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pinax-models/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/pinax-models.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21cff95a86a0e4e846d7f389a21cd42764e70026/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70696e61782d6d6f64656c732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pinax-models/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pinax-models.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1ae6fa043792ec4f8a0b77c4a49fc4b3bfb8cc4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70696e61782d6d6f64656c732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pinax-models/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<div id=\"pinax\">\n<h2>Pinax</h2>\n<p>Pinax is an open-source platform built on the Django Web Framework. It is an ecosystem of reusable Django apps, themes, and starter project templates.\nThis collection can be found at <a href=\"http://pinaxproject.com\" rel=\"nofollow\">http://pinaxproject.com</a>.</p>\n<p>This app was developed as part of the Pinax ecosystem but is just a Django app and can be used independently of other Pinax apps.</p>\n</div>\n<div id=\"id1\">\n<h2>pinax-models</h2>\n<p><tt><span class=\"pre\">pinax-models</span></tt> provides support for logical deletes on models and in the Django admin.</p>\n<p>This is a small and simple app that Patrick Altman wrote to get some reuse out\nof something he did in nearly every project and every model he created.  It\u2019s\ntoo easy for good data to get deleted and it be unrecoverable.  It\u2019s also too\neasy to fix this by overriding the model\u2019s delete() method and just flagging\nrecords as deleted and then leveraging Django\u2019s managers to override default\nbehavior so that logically deleted items are not returned in querysets.</p>\n<p>There are two exceptions to this rule, however, that are useful.</p>\n<ol>\n<li>In the admin it is nice to see everything with an indicator of whether or not\nit has been deleted, with the ability to filter down to just active records,\n(or deleted for that matter).</li>\n<li>It is a valid request when an item is fetched by its primary key value, that\nthe object should return, even if it is marked as deleted.</li>\n</ol>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p>On May 25, 2015, Patrick donated <tt><span class=\"pre\">django-logicaldelete</span></tt> to Pinax and as part of\nthat process, <tt><span class=\"pre\">pinax-models</span></tt> was born and the code incorporated into that\npackage. It remains just a Django app and can be quite independently of other\nPinax apps.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pinax-models\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using the app is pretty simple:</p>\n<ol>\n<li>add <cite>pinax.models</cite> to your INSTALLED_APPS</li>\n<li>Inherit from <tt>pinax.models.LogicalDeleteModel</tt> for all models that you wish\nto share in this functionality.</li>\n<li>Create and/or Register admins for each of these models using\n<tt>pinax.models.LogicalDeleteModelAdmin</tt></li>\n</ol>\n</div>\n<div id=\"additional\">\n<h2>Additional</h2>\n<p>Logical deletes are handled by date stamping a <cite>date_removed</cite> column.  In\naddition, a <tt>date_created</tt> and <tt>date_modified</tt> columns will be populated as a\nconvenience.</p>\n</div>\n<div id=\"backwards-incompatible-changes\">\n<h2>Backwards Incompatible Changes</h2>\n<div id=\"id2\">\n<h3>2.0</h3>\n<ul>\n<li>Renamed to <tt><span class=\"pre\">pinax-models</span></tt> and base model renamed to <tt>LogicalDeleteModel</tt></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1</h3>\n<ul>\n<li>Changed <tt>everything</tt> to <tt>all_with_deleted</tt> on LogicalDeleteManager</li>\n<li>LogicalDeleteManager moved from <tt>logicaldelete.models</tt> to <tt>logicaldelete.managers</tt></li>\n<li>Removed <tt>deleted</tt> and <tt>everything</tt> querysets from <tt>logicaldelete.models.Model</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The <tt><span class=\"pre\">pinax-models</span></tt> documentation is currently under construction. If you would like to help us write documentation, please join our Pinax Project Slack team and let us know! The Pinax documentation is available at <a href=\"http://pinaxproject.com/pinax/\" rel=\"nofollow\">http://pinaxproject.com/pinax/</a>.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>See this blog post <a href=\"http://blog.pinaxproject.com/2016/02/26/recap-february-pinax-hangout/\" rel=\"nofollow\">http://blog.pinaxproject.com/2016/02/26/recap-february-pinax-hangout/</a> including a video, or our How to Contribute (<a href=\"http://pinaxproject.com/pinax/how_to_contribute/\" rel=\"nofollow\">http://pinaxproject.com/pinax/how_to_contribute/</a>) section for an overview on how contributing to Pinax works. For concrete contribution ideas, please see our Ways to Contribute/What We Need Help With (<a href=\"http://pinaxproject.com/pinax/ways_to_contribute/\" rel=\"nofollow\">http://pinaxproject.com/pinax/ways_to_contribute/</a>) section.</p>\n<p>In case of any questions we recommend you join our Pinax Slack team (<a href=\"http://slack.pinaxproject.com\" rel=\"nofollow\">http://slack.pinaxproject.com</a>) and ping us there instead of creating an issue on GitHub. Creating issues on GitHub is of course also valid but we are usually able to help you faster if you ping us in Slack.</p>\n<p>We also highly recommend reading our Open Source and Self-Care blog post (<a href=\"http://blog.pinaxproject.com/2016/01/19/open-source-and-self-care/\" rel=\"nofollow\">http://blog.pinaxproject.com/2016/01/19/open-source-and-self-care/</a>).</p>\n</div>\n<div id=\"code-of-conduct\">\n<h2>Code of Conduct</h2>\n<p>In order to foster a kind, inclusive, and harassment-free community, the Pinax Project has a code of conduct, which can be found here  <a href=\"http://pinaxproject.com/pinax/code_of_conduct/\" rel=\"nofollow\">http://pinaxproject.com/pinax/code_of_conduct/</a>. We ask you to treat everyone as a smart human programmer that shares an interest in Python, Django, and Pinax with you.</p>\n</div>\n<div id=\"pinax-project-blog-and-twitter\">\n<h2>Pinax Project Blog and Twitter</h2>\n<p>For updates and news regarding the Pinax Project, please follow us on Twitter at @pinaxproject and check out our blog <a href=\"http://blog.pinaxproject.com\" rel=\"nofollow\">http://blog.pinaxproject.com</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2504893, "releases": {"2.0": [{"comment_text": "", "digests": {"md5": "53873ee1ffefb2ac0c47981c16cf36bd", "sha256": "8096961c8d0700b760e3e1f71ca3bd628a79661b572c8d930325b87762b63db2"}, "downloads": -1, "filename": "pinax-models-2.0.tar.gz", "has_sig": false, "md5_digest": "53873ee1ffefb2ac0c47981c16cf36bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5096, "upload_time": "2015-05-25T17:07:20", "upload_time_iso_8601": "2015-05-25T17:07:20.428475Z", "url": "https://files.pythonhosted.org/packages/66/ea/b3149de562d6d2aa53b8073b485ee1d46ad1b96835f35b7857fc1f6538c9/pinax-models-2.0.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "079863aca3609f67dbe4b7a0ad4ccf29", "sha256": "e92ee4665ccc3a1b31740e5a8dd67ab889a4c893119242d51f7d69542bb59568"}, "downloads": -1, "filename": "pinax-models-3.0.tar.gz", "has_sig": false, "md5_digest": "079863aca3609f67dbe4b7a0ad4ccf29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6178, "upload_time": "2016-12-07T15:32:18", "upload_time_iso_8601": "2016-12-07T15:32:18.034715Z", "url": "https://files.pythonhosted.org/packages/61/57/fb70540843159d19e0badd5d782b13ec23d07829a44d01f9a661e8e0a7bd/pinax-models-3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "079863aca3609f67dbe4b7a0ad4ccf29", "sha256": "e92ee4665ccc3a1b31740e5a8dd67ab889a4c893119242d51f7d69542bb59568"}, "downloads": -1, "filename": "pinax-models-3.0.tar.gz", "has_sig": false, "md5_digest": "079863aca3609f67dbe4b7a0ad4ccf29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6178, "upload_time": "2016-12-07T15:32:18", "upload_time_iso_8601": "2016-12-07T15:32:18.034715Z", "url": "https://files.pythonhosted.org/packages/61/57/fb70540843159d19e0badd5d782b13ec23d07829a44d01f9a661e8e0a7bd/pinax-models-3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:35 2020"}