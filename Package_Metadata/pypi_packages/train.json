{"info": {"author": "Ravindra Marella", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Train\n=====\n\nA library to build and train reinforcement learning agents in OpenAI Gym environments.\n\n.. image:: https://travis-ci.org/marella/train.svg?branch=master\n    :target: https://travis-ci.org/marella/train\n    :alt: Build Status\n.. image:: https://readthedocs.org/projects/train/badge/?version=latest\n    :target: https://train.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\nRead full documentation `here <https://train.readthedocs.io/>`_.\n\nGetting Started\n***************\n\nAn agent has to implement the ``act()`` method which takes the current ``state`` as input and returns an action:\n\n.. code:: python\n\n    from train import Agent\n\n    class RandomAgent(Agent):\n\n        def act(self, state):\n            return self.env.action_space.sample()\n\n\nCreate an environment using OpenAI Gym_:\n\n.. code:: python\n\n    import gym\n\n    env = gym.make('CartPole-v0')\n\nInitialize your agent using the environment:\n\n.. code:: python\n\n    agent = RandomAgent(env=env)\n\nNow you can start training your agent (in this example, the agent acts randomly always and doesn't learn anything):\n\n.. code:: python\n\n    scores = agent.train(episodes=100)\n\nYou can also visualize how the training progresses but it will slow down the process:\n\n.. code:: python\n\n    scores = agent.train(episodes=100, render=True)\n\nOnce you are done with the training, you can test it:\n\n.. code:: python\n\n    scores = agent.test(episodes=10)\n\nAlternatively, visualize how it performs:\n\n.. code:: python\n\n    scores = agent.test(episodes=10, render=True)\n\nTo learn more about how to build an agent that learns see Agent_ documentation.\n\nSee examples_ directory to see implementations of some algorithms (DQN, A3C, PPO etc.) in TensorFlow.\n\nInstallation\n************\n\nRequirements:\n\n-   Python >= 3.6\n\nInstall from PyPI (recommended):\n\n::\n\n    pip install train\n\nAlternatively, install from source:\n\n::\n\n    git clone https://github.com/marella/train.git\n    cd train\n    pip install -e .\n\nTo run examples and tests, install from source.\n\nOther libraries such as Gym_ and TensorFlow_ should be installed separately.\n\nExamples\n********\n\nTo run examples, install TensorFlow_ and install dependencies:\n\n::\n\n    pip install -e .[examples]\n\nand run an example in examples_ directory:\n\n::\n\n    cd examples\n    python PPO.py\n\nTesting\n*******\n\nTo run tests, install dependencies:\n\n::\n\n    pip install -e .[tests]\n\nand run:\n\n::\n\n    pytest tests\n\n.. _Agent: https://train.readthedocs.io/en/latest/agents.html\n.. _examples: https://github.com/marella/train/tree/master/examples\n.. _Gym: https://gym.openai.com/docs/\n.. _TensorFlow: https://www.tensorflow.org/install", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marella/train", "keywords": "train reinforcement-learning machine-learning gym tensorflow", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "train", "package_url": "https://pypi.org/project/train/", "platform": "", "project_url": "https://pypi.org/project/train/", "project_urls": {"Documentation": "https://train.readthedocs.io/", "Homepage": "https://github.com/marella/train", "Source Code": "https://github.com/marella/train"}, "release_url": "https://pypi.org/project/train/0.0.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A library to build and train reinforcement learning agents in OpenAI Gym environments.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A library to build and train reinforcement learning agents in OpenAI Gym environments.</p>\n<a href=\"https://travis-ci.org/marella/train\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05d987562457fb695ca2b078189d02eb3276022f/68747470733a2f2f7472617669732d63692e6f72672f6d6172656c6c612f747261696e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://train.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c2abc5aa4da0e09932abd066f61307c73080160/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f747261696e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Read full documentation <a href=\"https://train.readthedocs.io/\" rel=\"nofollow\">here</a>.</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>An agent has to implement the <tt>act()</tt> method which takes the current <tt>state</tt> as input and returns an action:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">train</span> <span class=\"kn\">import</span> <span class=\"n\">Agent</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RandomAgent</span><span class=\"p\">(</span><span class=\"n\">Agent</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">act</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">action_space</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n</pre>\n<p>Create an environment using OpenAI <a href=\"https://gym.openai.com/docs/\" rel=\"nofollow\">Gym</a>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gym</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s1\">'CartPole-v0'</span><span class=\"p\">)</span>\n</pre>\n<p>Initialize your agent using the environment:</p>\n<pre><span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can start training your agent (in this example, the agent acts randomly always and doesn\u2019t learn anything):</p>\n<pre><span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">episodes</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p>You can also visualize how the training progresses but it will slow down the process:</p>\n<pre><span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">episodes</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">render</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Once you are done with the training, you can test it:</p>\n<pre><span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">episodes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, visualize how it performs:</p>\n<pre><span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">episodes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">render</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>To learn more about how to build an agent that learns see <a href=\"https://train.readthedocs.io/en/latest/agents.html\" rel=\"nofollow\">Agent</a> documentation.</p>\n<p>See <a href=\"https://github.com/marella/train/tree/master/examples\" rel=\"nofollow\">examples</a> directory to see implementations of some algorithms (DQN, A3C, PPO etc.) in TensorFlow.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Requirements:</p>\n<ul>\n<li>Python &gt;= 3.6</li>\n</ul>\n<p>Install from PyPI (recommended):</p>\n<pre>pip install train\n</pre>\n<p>Alternatively, install from source:</p>\n<pre>git clone https://github.com/marella/train.git\ncd train\npip install -e .\n</pre>\n<p>To run examples and tests, install from source.</p>\n<p>Other libraries such as <a href=\"https://gym.openai.com/docs/\" rel=\"nofollow\">Gym</a> and <a href=\"https://www.tensorflow.org/install\" rel=\"nofollow\">TensorFlow</a> should be installed separately.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>To run examples, install <a href=\"https://www.tensorflow.org/install\" rel=\"nofollow\">TensorFlow</a> and install dependencies:</p>\n<pre>pip install -e .[examples]\n</pre>\n<p>and run an example in <a href=\"https://github.com/marella/train/tree/master/examples\" rel=\"nofollow\">examples</a> directory:</p>\n<pre>cd examples\npython PPO.py\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run tests, install dependencies:</p>\n<pre>pip install -e .[tests]\n</pre>\n<p>and run:</p>\n<pre>pytest tests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6325873, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "4099c984de5ee6d220365e0803721863", "sha256": "126dfe175217c4369c3019fac58cb68775d40d84bd25eb4e77c64d26d96d8bc7"}, "downloads": -1, "filename": "train-0.0.0.tar.gz", "has_sig": false, "md5_digest": "4099c984de5ee6d220365e0803721863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3697, "upload_time": "2018-04-30T18:11:00", "upload_time_iso_8601": "2018-04-30T18:11:00.698415Z", "url": "https://files.pythonhosted.org/packages/b2/4d/2c1499971db7719d829fdd4cdd372f3251a10c2e44b89e18ae7b7d453d22/train-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "d746de8f0aaa6361bf2a3d374387ae7f", "sha256": "6d5bac41a02b97a6fc327ecab8367209771e72d08cf8ae421963826a7bd82553"}, "downloads": -1, "filename": "train-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d746de8f0aaa6361bf2a3d374387ae7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3716, "upload_time": "2018-05-07T09:02:01", "upload_time_iso_8601": "2018-05-07T09:02:01.191576Z", "url": "https://files.pythonhosted.org/packages/74/e0/7d501212e1e000ef79051ef233a89cb4a3b9e510df71b67e2066f5120000/train-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "969bffa20aba9204b29f149b8a7f5932", "sha256": "8d151a72b93ab9a35022e396221129690cf784a48f10be5a63466816529dab12"}, "downloads": -1, "filename": "train-0.0.2.tar.gz", "has_sig": false, "md5_digest": "969bffa20aba9204b29f149b8a7f5932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3794, "upload_time": "2018-05-08T16:28:40", "upload_time_iso_8601": "2018-05-08T16:28:40.348326Z", "url": "https://files.pythonhosted.org/packages/64/80/aef40f3a7ec8321143fdfc0ce2b130d544539618b183a885bc5fdc73e8e6/train-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "46cb8214ab78360ac2c9f60bfbba5fab", "sha256": "75fbac3ae7e177067ce4c6199b936f0b3ad47a40a44477f70ed5e48475894f2d"}, "downloads": -1, "filename": "train-0.0.3.tar.gz", "has_sig": false, "md5_digest": "46cb8214ab78360ac2c9f60bfbba5fab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3856, "upload_time": "2018-05-08T18:46:33", "upload_time_iso_8601": "2018-05-08T18:46:33.742217Z", "url": "https://files.pythonhosted.org/packages/40/41/1ea2e51a8873917d82bd5ead4fc4dedfbf74c92ac8f3f3ce7cff55a91f8d/train-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "337c7f48c237592b0b29fe3d014c6b0d", "sha256": "6056ac22a04b42ad2e381daa7e1053e48292cdd0c409491e6969ee085e32ac64"}, "downloads": -1, "filename": "train-0.0.4.tar.gz", "has_sig": false, "md5_digest": "337c7f48c237592b0b29fe3d014c6b0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4350, "upload_time": "2019-12-12T09:54:06", "upload_time_iso_8601": "2019-12-12T09:54:06.860699Z", "url": "https://files.pythonhosted.org/packages/a6/5f/678f85d6b8259a14daf62f87eca7b2d347f204afc85e101bb35ad810de06/train-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "fac4b208ce8d3ac2361794642096ec88", "sha256": "441beaa4b792bdca301ac3c69bb8299256873e081a9f0de1e3782064a2f36cdf"}, "downloads": -1, "filename": "train-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fac4b208ce8d3ac2361794642096ec88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8083, "upload_time": "2019-12-18T14:07:18", "upload_time_iso_8601": "2019-12-18T14:07:18.291721Z", "url": "https://files.pythonhosted.org/packages/f7/bd/03ef37dfb2f0550f1fa43423bf8a2c833d1833ce1d90eb71dee05131eee2/train-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fac4b208ce8d3ac2361794642096ec88", "sha256": "441beaa4b792bdca301ac3c69bb8299256873e081a9f0de1e3782064a2f36cdf"}, "downloads": -1, "filename": "train-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fac4b208ce8d3ac2361794642096ec88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8083, "upload_time": "2019-12-18T14:07:18", "upload_time_iso_8601": "2019-12-18T14:07:18.291721Z", "url": "https://files.pythonhosted.org/packages/f7/bd/03ef37dfb2f0550f1fa43423bf8a2c833d1833ce1d90eb71dee05131eee2/train-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:33 2020"}