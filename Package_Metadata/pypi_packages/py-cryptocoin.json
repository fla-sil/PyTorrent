{"info": {"author": "Theodorus van der Sluijs", "author_email": "theo@vandersluijs.nl", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Python CryptoCoin\n=================\n\nThis python3 script is based on the `coinmarketcap\nAPI <https://coinmarketcap.com/api/>`__\n\nFor getting coin data you can use the shortcodes for the coins.\n\nSo you don't have to use 'Basic Attention Token' but 'bat' is enough to\nget the coin data.\n\nLimits\n------\n\nPlease limit requests to no more than 10 per minute.\n\nEndpoints update every 5 minutes.\n\nCreate your own caching mechanism to keep requests to minimum\n\nHow do I get set up?\n--------------------\n\n-  Install this script with:\n\n   -  pip3 py\\_cryptocoin --upgrade (or pip py\\_nsapi --upgrade )\n\n-  ready to use it!\n\nCurrent Coins\n-------------\n\n'btc' : 'Bitcoin', 'eth' : 'Ethereum', 'xrp' : 'Ripple', 'bch' :\n'Bitcoin Cash', 'ada' : 'Cardano', 'ltc' : 'Litecoin', 'xem' : 'NEM',\n'neo' : 'NEO', 'xlm' : 'Stellar', 'eos' : 'EOS', 'miota' : 'IOTA',\n'dash' : 'Dash', 'xmr' : 'Monero', 'trx' : 'TRON', 'btg' : 'Bitcoin\nGold', 'icx' : 'ICON', 'qtum' : 'Qtum', 'etc' : 'Ethereum Classic',\n'lsk' : 'Lisk', 'xrb' : 'RaiBlocks', 'ven' : 'VeChain', 'omg' :\n'OmiseGO', 'usdt' : 'Tether', 'ppt' : 'Populous', 'zec' : 'Zcash', 'xvg'\n: 'Verge', 'sc' : 'Siacoin', 'bnb' : 'Binance Coin', 'strat' :\n'Stratis', 'bcn' : 'Bytecoin', 'steem' : 'Steem', 'ardr' : 'Ardor',\n'snt' : 'Status', 'mkr' : 'Maker', 'rep' : 'Augur', 'bts' : 'BitShares',\n'kcs' : 'KuCoin Shares', 'waves' : 'Waves', 'zrx' : '0x', 'doge' :\n'Dogecoin', 'etn' : 'Electroneum', 'veri' : 'Veritaseum', 'kmd' :\n'Komodo', 'dcr' : 'Decred', 'drgn' : 'Dragonchain', 'wtc' : 'Walton',\n'dcn' : 'Dentacoin', 'lrc' : 'Loopring', 'ark' : 'Ark', 'salt' : 'SALT',\n'qash' : 'QASH', 'dgb' : 'DigiByte', 'bat' : 'Basic Attention Token',\n'gnt' : 'Golem', 'hsr' : 'Hshare', 'knc' : 'Kyber Network', 'gas' :\n'Gas', 'wax' : 'WAX', 'ethos' : 'Ethos', 'pivx' : 'PIVX', 'gbyte' :\n'Byteball Bytes', 'fun' : 'FunFair', 'aion' : 'Aion', 'rhoc' : 'RChain',\n'zcl' : 'ZClassic', 'fct' : 'Factom', 'smart' : 'SmartCash', 'dent' :\n'Dent', 'mona' : 'MonaCoin', 'elf' : 'aelf', 'powr' : 'Power Ledger',\n'dgd' : 'DigixDAO', 'kin' : 'Kin', 'rdd' : 'ReddCoin', 'ae' :\n'Aeternity', 'btm' : 'Bytom', 'nas' : 'Nebulas', 'sys' : 'Syscoin',\n'req' : 'Request Network', 'nebl' : 'Neblio', 'link' : 'ChainLink',\n'eng' : 'Enigma', 'xp' : 'Experience Points', 'gxs' : 'GXShares', 'maid'\n: 'MaidSafeCoin', 'sub' : 'Substratum', 'xzc' : 'ZCoin', 'nxs' :\n'Nexus', 'nxt' : 'Nxt', 'med' : 'MediBloc', 'emc' : 'Emercoin', 'btx' :\n'Bitcore', 'bnt' : 'Bancor', 'cnd' : 'Cindicator', 'qsp' : 'Quantstamp',\n'cnx' : 'Cryptonex', 'icn' : 'Iconomi', 'game' : 'GameCredits', 'pay' :\n'TenX', 'part' : 'Particl'\n\nGlobal Data\n-----------\n\nThe global data return a Dictionary (DICT) with total market cap and\nvolume of currencies\n\nParameters\n~~~~~~~~~~\n\nOptional parameters: - (string) convert - return 24h volume, and market\ncap in terms of another currency. Valid values are: - \"AUD\", \"BRL\",\n\"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"HUF\",\n\"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\",\n\"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  total\\_market\\_cap\\_usd\n-  total\\_24h\\_volume\\_usd\n-  bitcoin\\_percentage\\_of\\_market\\_cap\n-  active\\_currencies\n-  active\\_assets\n-  active\\_markets\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    cc = CryptoCoin()\n    data = cc.getGlobalData() #standard currency (USD)\n\n    #or\n\n    data = cc.getGlobalData('EUR') #to get by currency\n\n    print(data)\n\nCoin Data\n---------\n\nReturns al information about one cryptocoin and the pricing\n\nIf you add the convert parameter it will return the cryptocoin price in\nthat currency\n\nParameters\n~~~~~~~~~~\n\n-  (string) cryptocoin shortcode, see Current Coins above what to use\n\nOptional parameters: -(string) currency - return price, 24h volume, and\nmarket cap in terms of another currency. Valid values are: - \"AUD\",\n\"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\",\n\"HUF\", \"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\",\n\"PHP\", \"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  id\n-  name\n-  symbol\n-  rank\n-  price\\_usd [depening on convert / currency]\n-  price\\_btc\n-  24h\\_volume\\_usd [depening on convert / currency]\n-  market\\_cap\\_usd [depening on convert / currency]\n-  available\\_supply\n-  total\\_supply\n-  max\\_supply\n-  percent\\_change\\_1h\n-  percent\\_change\\_24h\n-  percent\\_change\\_7d\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    coin = \"bat\"\n\n    cc = CryptoCoin()\n    data = cc.(coin) # standard US Dollars\n\n    #or\n\n    data = cc.(coin, \"EUR\") #get the coin price back in Euro's\n\n    print(data)\n\nAll Coins Data\n--------------\n\nReturns al information about all current know cryptocoins and the\npricing\n\nIf you add the convert parameter it will return the cryptocoin price in\nthat currency\n\nParameters\n~~~~~~~~~~\n\nOptional parameters: - (int) start - return results from rank [start]\nand above - (int) limit - return a maximum of [limit] results (default\nis 100, use 0 to return all results) - (string) currency - return price,\n24h volume, and market cap in terms of another currency. Valid values\nare: - \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\",\n\"GBP\", \"HKD\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\",\n\"NOK\", \"NZD\", \"PHP\", \"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\",\n\"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  id\n-  name\n-  symbol\n-  rank\n-  price\\_usd [depening on convert / currency]\n-  price\\_btc\n-  24h\\_volume\\_usd [depening on convert / currency]\n-  market\\_cap\\_usd [depening on convert / currency]\n-  available\\_supply\n-  total\\_supply\n-  max\\_supply\n-  percent\\_change\\_1h\n-  percent\\_change\\_24h\n-  percent\\_change\\_7d\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    cc = CryptoCoin()\n    data = cc.getAllCoinData() # Get default data in US Dollars\n\n    start = 100\n    limit = 10\n    currency = \"EUR\"\n\n    data = cc.getAllCoinData(start, limit, currrency)\n\n    print(data)\n\nWho do I talk to?\n-----------------\n\n-  Theodorus van der Sluijs\n-  theo@vandersluijs.nl\n\nLicense\n-------\n\nAttribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\n\nYou are free to:\n~~~~~~~~~~~~~~~~\n\n-  Share \u2014 copy and redistribute the material in any medium or format\n-  Adapt \u2014 remix, transform, and build upon the material\n\n-The licensor cannot revoke these freedoms as long as you follow the\nlicense terms.-\n\nUnder the following terms:\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Attribution \u2014 You must give appropriate credit, provide a link to the\n   license, and indicate if changes were made. You may do so in any\n   reasonable manner, but not in any way that suggests the licensor\n   endorses you or your use.\n-  NonCommercial \u2014 You may not use the material for commercial purposes.\n-  ShareAlike \u2014 If you remix, transform, or build upon the material, you\n   must distribute your contributions under the same license as the\n   original.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/tvdsluijs/py_cryptocoin", "keywords": "trains transport train dutch ns", "license": "CC BY-NC-SA 4.0", "maintainer": "", "maintainer_email": "", "name": "py-cryptocoin", "package_url": "https://pypi.org/project/py-cryptocoin/", "platform": "", "project_url": "https://pypi.org/project/py-cryptocoin/", "project_urls": {"Homepage": "https://bitbucket.org/tvdsluijs/py_cryptocoin"}, "release_url": "https://pypi.org/project/py-cryptocoin/1.0/", "requires_dist": null, "requires_python": "", "summary": "Python3 CryptoCoin data parser", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This python3 script is based on the <a href=\"https://coinmarketcap.com/api/\" rel=\"nofollow\">coinmarketcap\nAPI</a></p>\n<p>For getting coin data you can use the shortcodes for the coins.</p>\n<p>So you don\u2019t have to use \u2018Basic Attention Token\u2019 but \u2018bat\u2019 is enough to\nget the coin data.</p>\n<div id=\"limits\">\n<h2>Limits</h2>\n<p>Please limit requests to no more than 10 per minute.</p>\n<p>Endpoints update every 5 minutes.</p>\n<p>Create your own caching mechanism to keep requests to minimum</p>\n</div>\n<div id=\"how-do-i-get-set-up\">\n<h2>How do I get set up?</h2>\n<ul>\n<li>Install this script with:<ul>\n<li>pip3 py_cryptocoin \u2013upgrade (or pip py_nsapi \u2013upgrade )</li>\n</ul>\n</li>\n<li>ready to use it!</li>\n</ul>\n</div>\n<div id=\"current-coins\">\n<h2>Current Coins</h2>\n<p>\u2018btc\u2019 : \u2018Bitcoin\u2019, \u2018eth\u2019 : \u2018Ethereum\u2019, \u2018xrp\u2019 : \u2018Ripple\u2019, \u2018bch\u2019 :\n\u2018Bitcoin Cash\u2019, \u2018ada\u2019 : \u2018Cardano\u2019, \u2018ltc\u2019 : \u2018Litecoin\u2019, \u2018xem\u2019 : \u2018NEM\u2019,\n\u2018neo\u2019 : \u2018NEO\u2019, \u2018xlm\u2019 : \u2018Stellar\u2019, \u2018eos\u2019 : \u2018EOS\u2019, \u2018miota\u2019 : \u2018IOTA\u2019,\n\u2018dash\u2019 : \u2018Dash\u2019, \u2018xmr\u2019 : \u2018Monero\u2019, \u2018trx\u2019 : \u2018TRON\u2019, \u2018btg\u2019 : \u2018Bitcoin\nGold\u2019, \u2018icx\u2019 : \u2018ICON\u2019, \u2018qtum\u2019 : \u2018Qtum\u2019, \u2018etc\u2019 : \u2018Ethereum Classic\u2019,\n\u2018lsk\u2019 : \u2018Lisk\u2019, \u2018xrb\u2019 : \u2018RaiBlocks\u2019, \u2018ven\u2019 : \u2018VeChain\u2019, \u2018omg\u2019 :\n\u2018OmiseGO\u2019, \u2018usdt\u2019 : \u2018Tether\u2019, \u2018ppt\u2019 : \u2018Populous\u2019, \u2018zec\u2019 : \u2018Zcash\u2019, \u2018xvg\u2019\n: \u2018Verge\u2019, \u2018sc\u2019 : \u2018Siacoin\u2019, \u2018bnb\u2019 : \u2018Binance Coin\u2019, \u2018strat\u2019 :\n\u2018Stratis\u2019, \u2018bcn\u2019 : \u2018Bytecoin\u2019, \u2018steem\u2019 : \u2018Steem\u2019, \u2018ardr\u2019 : \u2018Ardor\u2019,\n\u2018snt\u2019 : \u2018Status\u2019, \u2018mkr\u2019 : \u2018Maker\u2019, \u2018rep\u2019 : \u2018Augur\u2019, \u2018bts\u2019 : \u2018BitShares\u2019,\n\u2018kcs\u2019 : \u2018KuCoin Shares\u2019, \u2018waves\u2019 : \u2018Waves\u2019, \u2018zrx\u2019 : \u20180x\u2019, \u2018doge\u2019 :\n\u2018Dogecoin\u2019, \u2018etn\u2019 : \u2018Electroneum\u2019, \u2018veri\u2019 : \u2018Veritaseum\u2019, \u2018kmd\u2019 :\n\u2018Komodo\u2019, \u2018dcr\u2019 : \u2018Decred\u2019, \u2018drgn\u2019 : \u2018Dragonchain\u2019, \u2018wtc\u2019 : \u2018Walton\u2019,\n\u2018dcn\u2019 : \u2018Dentacoin\u2019, \u2018lrc\u2019 : \u2018Loopring\u2019, \u2018ark\u2019 : \u2018Ark\u2019, \u2018salt\u2019 : \u2018SALT\u2019,\n\u2018qash\u2019 : \u2018QASH\u2019, \u2018dgb\u2019 : \u2018DigiByte\u2019, \u2018bat\u2019 : \u2018Basic Attention Token\u2019,\n\u2018gnt\u2019 : \u2018Golem\u2019, \u2018hsr\u2019 : \u2018Hshare\u2019, \u2018knc\u2019 : \u2018Kyber Network\u2019, \u2018gas\u2019 :\n\u2018Gas\u2019, \u2018wax\u2019 : \u2018WAX\u2019, \u2018ethos\u2019 : \u2018Ethos\u2019, \u2018pivx\u2019 : \u2018PIVX\u2019, \u2018gbyte\u2019 :\n\u2018Byteball Bytes\u2019, \u2018fun\u2019 : \u2018FunFair\u2019, \u2018aion\u2019 : \u2018Aion\u2019, \u2018rhoc\u2019 : \u2018RChain\u2019,\n\u2018zcl\u2019 : \u2018ZClassic\u2019, \u2018fct\u2019 : \u2018Factom\u2019, \u2018smart\u2019 : \u2018SmartCash\u2019, \u2018dent\u2019 :\n\u2018Dent\u2019, \u2018mona\u2019 : \u2018MonaCoin\u2019, \u2018elf\u2019 : \u2018aelf\u2019, \u2018powr\u2019 : \u2018Power Ledger\u2019,\n\u2018dgd\u2019 : \u2018DigixDAO\u2019, \u2018kin\u2019 : \u2018Kin\u2019, \u2018rdd\u2019 : \u2018ReddCoin\u2019, \u2018ae\u2019 :\n\u2018Aeternity\u2019, \u2018btm\u2019 : \u2018Bytom\u2019, \u2018nas\u2019 : \u2018Nebulas\u2019, \u2018sys\u2019 : \u2018Syscoin\u2019,\n\u2018req\u2019 : \u2018Request Network\u2019, \u2018nebl\u2019 : \u2018Neblio\u2019, \u2018link\u2019 : \u2018ChainLink\u2019,\n\u2018eng\u2019 : \u2018Enigma\u2019, \u2018xp\u2019 : \u2018Experience Points\u2019, \u2018gxs\u2019 : \u2018GXShares\u2019, \u2018maid\u2019\n: \u2018MaidSafeCoin\u2019, \u2018sub\u2019 : \u2018Substratum\u2019, \u2018xzc\u2019 : \u2018ZCoin\u2019, \u2018nxs\u2019 :\n\u2018Nexus\u2019, \u2018nxt\u2019 : \u2018Nxt\u2019, \u2018med\u2019 : \u2018MediBloc\u2019, \u2018emc\u2019 : \u2018Emercoin\u2019, \u2018btx\u2019 :\n\u2018Bitcore\u2019, \u2018bnt\u2019 : \u2018Bancor\u2019, \u2018cnd\u2019 : \u2018Cindicator\u2019, \u2018qsp\u2019 : \u2018Quantstamp\u2019,\n\u2018cnx\u2019 : \u2018Cryptonex\u2019, \u2018icn\u2019 : \u2018Iconomi\u2019, \u2018game\u2019 : \u2018GameCredits\u2019, \u2018pay\u2019 :\n\u2018TenX\u2019, \u2018part\u2019 : \u2018Particl\u2019</p>\n</div>\n<div id=\"global-data\">\n<h2>Global Data</h2>\n<p>The global data return a Dictionary (DICT) with total market cap and\nvolume of currencies</p>\n<div id=\"parameters\">\n<h3>Parameters</h3>\n<p>Optional parameters: - (string) convert - return 24h volume, and market\ncap in terms of another currency. Valid values are: - \u201cAUD\u201d, \u201cBRL\u201d,\n\u201cCAD\u201d, \u201cCHF\u201d, \u201cCLP\u201d, \u201cCNY\u201d, \u201cCZK\u201d, \u201cDKK\u201d, \u201cEUR\u201d, \u201cGBP\u201d, \u201cHKD\u201d, \u201cHUF\u201d,\n\u201cIDR\u201d, \u201cILS\u201d, \u201cINR\u201d, \u201cJPY\u201d, \u201cKRW\u201d, \u201cMXN\u201d, \u201cMYR\u201d, \u201cNOK\u201d, \u201cNZD\u201d, \u201cPHP\u201d,\n\u201cPKR\u201d, \u201cPLN\u201d, \u201cRUB\u201d, \u201cSEK\u201d, \u201cSGD\u201d, \u201cTHB\u201d, \u201cTRY\u201d, \u201cTWD\u201d, \u201cZAR\u201d</p>\n</div>\n<div id=\"return-fields\">\n<h3>Return Fields</h3>\n<p>You will get a DICT with the followin fields</p>\n<ul>\n<li>total_market_cap_usd</li>\n<li>total_24h_volume_usd</li>\n<li>bitcoin_percentage_of_market_cap</li>\n<li>active_currencies</li>\n<li>active_assets</li>\n<li>active_markets</li>\n<li>last_updated</li>\n</ul>\n</div>\n<div id=\"example-code\">\n<h3>Example code</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CryptoCoin</span>\n\n<span class=\"n\">cc</span> <span class=\"o\">=</span> <span class=\"n\">CryptoCoin</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">getGlobalData</span><span class=\"p\">()</span> <span class=\"c1\">#standard currency (USD)</span>\n\n<span class=\"c1\">#or</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">getGlobalData</span><span class=\"p\">(</span><span class=\"s1\">'EUR'</span><span class=\"p\">)</span> <span class=\"c1\">#to get by currency</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"coin-data\">\n<h2>Coin Data</h2>\n<p>Returns al information about one cryptocoin and the pricing</p>\n<p>If you add the convert parameter it will return the cryptocoin price in\nthat currency</p>\n<div id=\"id1\">\n<h3>Parameters</h3>\n<ul>\n<li>(string) cryptocoin shortcode, see Current Coins above what to use</li>\n</ul>\n<p>Optional parameters: -(string) currency - return price, 24h volume, and\nmarket cap in terms of another currency. Valid values are: - \u201cAUD\u201d,\n\u201cBRL\u201d, \u201cCAD\u201d, \u201cCHF\u201d, \u201cCLP\u201d, \u201cCNY\u201d, \u201cCZK\u201d, \u201cDKK\u201d, \u201cEUR\u201d, \u201cGBP\u201d, \u201cHKD\u201d,\n\u201cHUF\u201d, \u201cIDR\u201d, \u201cILS\u201d, \u201cINR\u201d, \u201cJPY\u201d, \u201cKRW\u201d, \u201cMXN\u201d, \u201cMYR\u201d, \u201cNOK\u201d, \u201cNZD\u201d,\n\u201cPHP\u201d, \u201cPKR\u201d, \u201cPLN\u201d, \u201cRUB\u201d, \u201cSEK\u201d, \u201cSGD\u201d, \u201cTHB\u201d, \u201cTRY\u201d, \u201cTWD\u201d, \u201cZAR\u201d</p>\n</div>\n<div id=\"id2\">\n<h3>Return Fields</h3>\n<p>You will get a DICT with the followin fields</p>\n<ul>\n<li>id</li>\n<li>name</li>\n<li>symbol</li>\n<li>rank</li>\n<li>price_usd [depening on convert / currency]</li>\n<li>price_btc</li>\n<li>24h_volume_usd [depening on convert / currency]</li>\n<li>market_cap_usd [depening on convert / currency]</li>\n<li>available_supply</li>\n<li>total_supply</li>\n<li>max_supply</li>\n<li>percent_change_1h</li>\n<li>percent_change_24h</li>\n<li>percent_change_7d</li>\n<li>last_updated</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>Example code</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CryptoCoin</span>\n\n<span class=\"n\">coin</span> <span class=\"o\">=</span> <span class=\"s2\">\"bat\"</span>\n\n<span class=\"n\">cc</span> <span class=\"o\">=</span> <span class=\"n\">CryptoCoin</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">coin</span><span class=\"p\">)</span> <span class=\"c1\"># standard US Dollars</span>\n\n<span class=\"c1\">#or</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">coin</span><span class=\"p\">,</span> <span class=\"s2\">\"EUR\"</span><span class=\"p\">)</span> <span class=\"c1\">#get the coin price back in Euro's</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"all-coins-data\">\n<h2>All Coins Data</h2>\n<p>Returns al information about all current know cryptocoins and the\npricing</p>\n<p>If you add the convert parameter it will return the cryptocoin price in\nthat currency</p>\n<div id=\"id4\">\n<h3>Parameters</h3>\n<p>Optional parameters: - (int) start - return results from rank [start]\nand above - (int) limit - return a maximum of [limit] results (default\nis 100, use 0 to return all results) - (string) currency - return price,\n24h volume, and market cap in terms of another currency. Valid values\nare: - \u201cAUD\u201d, \u201cBRL\u201d, \u201cCAD\u201d, \u201cCHF\u201d, \u201cCLP\u201d, \u201cCNY\u201d, \u201cCZK\u201d, \u201cDKK\u201d, \u201cEUR\u201d,\n\u201cGBP\u201d, \u201cHKD\u201d, \u201cHUF\u201d, \u201cIDR\u201d, \u201cILS\u201d, \u201cINR\u201d, \u201cJPY\u201d, \u201cKRW\u201d, \u201cMXN\u201d, \u201cMYR\u201d,\n\u201cNOK\u201d, \u201cNZD\u201d, \u201cPHP\u201d, \u201cPKR\u201d, \u201cPLN\u201d, \u201cRUB\u201d, \u201cSEK\u201d, \u201cSGD\u201d, \u201cTHB\u201d, \u201cTRY\u201d,\n\u201cTWD\u201d, \u201cZAR\u201d</p>\n</div>\n<div id=\"id5\">\n<h3>Return Fields</h3>\n<p>You will get a DICT with the followin fields</p>\n<ul>\n<li>id</li>\n<li>name</li>\n<li>symbol</li>\n<li>rank</li>\n<li>price_usd [depening on convert / currency]</li>\n<li>price_btc</li>\n<li>24h_volume_usd [depening on convert / currency]</li>\n<li>market_cap_usd [depening on convert / currency]</li>\n<li>available_supply</li>\n<li>total_supply</li>\n<li>max_supply</li>\n<li>percent_change_1h</li>\n<li>percent_change_24h</li>\n<li>percent_change_7d</li>\n<li>last_updated</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>Example code</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CryptoCoin</span>\n\n<span class=\"n\">cc</span> <span class=\"o\">=</span> <span class=\"n\">CryptoCoin</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">getAllCoinData</span><span class=\"p\">()</span> <span class=\"c1\"># Get default data in US Dollars</span>\n\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">currency</span> <span class=\"o\">=</span> <span class=\"s2\">\"EUR\"</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">getAllCoinData</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">currrency</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"who-do-i-talk-to\">\n<h2>Who do I talk to?</h2>\n<ul>\n<li>Theodorus van der Sluijs</li>\n<li><a href=\"mailto:theo%40vandersluijs.nl\">theo<span>@</span>vandersluijs<span>.</span>nl</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</p>\n<div id=\"you-are-free-to\">\n<h3>You are free to:</h3>\n<ul>\n<li>Share \u2014 copy and redistribute the material in any medium or format</li>\n<li>Adapt \u2014 remix, transform, and build upon the material</li>\n</ul>\n<p>-The licensor cannot revoke these freedoms as long as you follow the\nlicense terms.-</p>\n</div>\n<div id=\"under-the-following-terms\">\n<h3>Under the following terms:</h3>\n<ul>\n<li>Attribution \u2014 You must give appropriate credit, provide a link to the\nlicense, and indicate if changes were made. You may do so in any\nreasonable manner, but not in any way that suggests the licensor\nendorses you or your use.</li>\n<li>NonCommercial \u2014 You may not use the material for commercial purposes.</li>\n<li>ShareAlike \u2014 If you remix, transform, or build upon the material, you\nmust distribute your contributions under the same license as the\noriginal.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3522741, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a5cebbfc709f4c1208fa5b6dc7d0810a", "sha256": "bd60c1f19e5bd2f97b44132a82f4c81b0112d7bb467f96179f6f765f63b7ce8f"}, "downloads": -1, "filename": "py_cryptocoin-0.1.tar.gz", "has_sig": false, "md5_digest": "a5cebbfc709f4c1208fa5b6dc7d0810a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5970, "upload_time": "2018-01-21T12:25:51", "upload_time_iso_8601": "2018-01-21T12:25:51.140176Z", "url": "https://files.pythonhosted.org/packages/35/bb/e2579c2451dd85ecbe5cbb3c866e3533c29e34e108673a406d544c44a79e/py_cryptocoin-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e535dbfb5008a1bd7b08242035257b2e", "sha256": "bd7d1842b5d977e2af327c557a397afb9cb7c93ff9d0e05832e879f698e46c94"}, "downloads": -1, "filename": "py_cryptocoin-0.2.tar.gz", "has_sig": false, "md5_digest": "e535dbfb5008a1bd7b08242035257b2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6372, "upload_time": "2018-01-21T14:41:36", "upload_time_iso_8601": "2018-01-21T14:41:36.379749Z", "url": "https://files.pythonhosted.org/packages/a2/c0/f300faa2b5cfbfd36665a2cdcbd39a41c754cd3a993f05675a8938500b43/py_cryptocoin-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "4205fe9948e3a2fedfa6fe8de61bb5cd", "sha256": "87a1a9cf1c2571874f7ed14e08b1de9536fbdeafbd73675d808b5a2ce74eb4a6"}, "downloads": -1, "filename": "py_cryptocoin-1.0.tar.gz", "has_sig": false, "md5_digest": "4205fe9948e3a2fedfa6fe8de61bb5cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7243, "upload_time": "2018-01-26T06:32:50", "upload_time_iso_8601": "2018-01-26T06:32:50.558977Z", "url": "https://files.pythonhosted.org/packages/62/0f/edd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69/py_cryptocoin-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4205fe9948e3a2fedfa6fe8de61bb5cd", "sha256": "87a1a9cf1c2571874f7ed14e08b1de9536fbdeafbd73675d808b5a2ce74eb4a6"}, "downloads": -1, "filename": "py_cryptocoin-1.0.tar.gz", "has_sig": false, "md5_digest": "4205fe9948e3a2fedfa6fe8de61bb5cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7243, "upload_time": "2018-01-26T06:32:50", "upload_time_iso_8601": "2018-01-26T06:32:50.558977Z", "url": "https://files.pythonhosted.org/packages/62/0f/edd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69/py_cryptocoin-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:44 2020"}