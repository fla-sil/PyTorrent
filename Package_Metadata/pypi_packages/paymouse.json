{"info": {"author": "Mark Skelton", "author_email": "mdskelton99@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PayMouse\n\nPython payment processor that supports multiple configurable payment gateways.\n\nCurrently supported gateways are:\n\n- Stripe\n\n## Installation\n\nInstall PayMouse using `pip`\n\n```bash\npip install paymouse\n```\n\n## Usage\n\n### Setup\n\nThe code below is an example of setting up PayMouse with the Stripe gateway.\n\nThe setup step only needs to be completed once unless the PayMouse options need to be updated.  To update the options, simply run `paymouse.setup` again with new or updated options.\n\n```py\nimport paymouse\n\npaymouse.setup({\n    'gateway': 'Stripe',\n    'api_key': 'sk_test_LTAhe6WM7my2MTNT8cRRHtXh',\n})\n```\n\n### PayMouse classes\n\nThree classes are used when executing PayMouse methods.  These classes are `Money`, `Account`, and `Card`.\n\nBelow shows samples of using these classes\n\n```py\n# Create Money object\nmoney = paymouse.Money(10, 'USD')\n# Create Money object using default currency (USD)\nmoney = paymouse.Money(10)\n\n# Create Account object\naccount = paymouse.Account('John', 'Doe', '123 Main St', 'Anytown', 'Wisconsin', 12345, 'USA')\n# Create Account object using only first and last name\naccount = paymouse.Account('John', 'Doe')\n# Create Account object using keyword args\naccount = paymouse.Account('John', 'Doe', country='USA')\n\n# Create Card object\ncard = paymouse.Card(4111111111111111, 12, 2020, 123)\n# Create Card object without CVC\ncard = paymouse.Card(4111111111111111, 12, 2020)\n```\n\n### Perform a transaction\n\nThe following transactions types are currently supported:\n\n- charge\n- authorize\n- void\n- refund\n\nAn example of performing a charge is shown below:\n\n```py\nmoney = Money(1)\ntoken = 'tok_visa'\n\n# Run the transaction\nresult = paymouse.charge(money, token)\n\nprint('Charge Id:', result['id'])\n```\n\n### Errors\n\nIf the transaction fails, it will return a dictionary with the following keys:\n\n- `error` - The PayMouse normalized error code\n- `message` - The PayMouse normalized error message\n- `gateway_error` - The gateway error code\n- `gateway_message` - The gateway error message\n- `gateway_response` - The full gateway response\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/markypython/paymouse", "keywords": "payments", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "paymouse", "package_url": "https://pypi.org/project/paymouse/", "platform": "", "project_url": "https://pypi.org/project/paymouse/", "project_urls": {"Homepage": "https://github.com/markypython/paymouse"}, "release_url": "https://pypi.org/project/paymouse/0.1/", "requires_dist": ["stripe", "authorizenet"], "requires_python": "", "summary": "Python multiple payment gateway", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PayMouse</h1>\n<p>Python payment processor that supports multiple configurable payment gateways.</p>\n<p>Currently supported gateways are:</p>\n<ul>\n<li>Stripe</li>\n</ul>\n<h2>Installation</h2>\n<p>Install PayMouse using <code>pip</code></p>\n<pre>pip install paymouse\n</pre>\n<h2>Usage</h2>\n<h3>Setup</h3>\n<p>The code below is an example of setting up PayMouse with the Stripe gateway.</p>\n<p>The setup step only needs to be completed once unless the PayMouse options need to be updated.  To update the options, simply run <code>paymouse.setup</code> again with new or updated options.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">paymouse</span>\n\n<span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">({</span>\n    <span class=\"s1\">'gateway'</span><span class=\"p\">:</span> <span class=\"s1\">'Stripe'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'api_key'</span><span class=\"p\">:</span> <span class=\"s1\">'sk_test_LTAhe6WM7my2MTNT8cRRHtXh'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n<h3>PayMouse classes</h3>\n<p>Three classes are used when executing PayMouse methods.  These classes are <code>Money</code>, <code>Account</code>, and <code>Card</code>.</p>\n<p>Below shows samples of using these classes</p>\n<pre><span class=\"c1\"># Create Money object</span>\n<span class=\"n\">money</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Money</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'USD'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create Money object using default currency (USD)</span>\n<span class=\"n\">money</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Money</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Account object</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'Doe'</span><span class=\"p\">,</span> <span class=\"s1\">'123 Main St'</span><span class=\"p\">,</span> <span class=\"s1\">'Anytown'</span><span class=\"p\">,</span> <span class=\"s1\">'Wisconsin'</span><span class=\"p\">,</span> <span class=\"mi\">12345</span><span class=\"p\">,</span> <span class=\"s1\">'USA'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create Account object using only first and last name</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'Doe'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create Account object using keyword args</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'Doe'</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s1\">'USA'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Card object</span>\n<span class=\"n\">card</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Card</span><span class=\"p\">(</span><span class=\"mi\">4111111111111111</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create Card object without CVC</span>\n<span class=\"n\">card</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">Card</span><span class=\"p\">(</span><span class=\"mi\">4111111111111111</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">2020</span><span class=\"p\">)</span>\n</pre>\n<h3>Perform a transaction</h3>\n<p>The following transactions types are currently supported:</p>\n<ul>\n<li>charge</li>\n<li>authorize</li>\n<li>void</li>\n<li>refund</li>\n</ul>\n<p>An example of performing a charge is shown below:</p>\n<pre><span class=\"n\">money</span> <span class=\"o\">=</span> <span class=\"n\">Money</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'tok_visa'</span>\n\n<span class=\"c1\"># Run the transaction</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">paymouse</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"p\">(</span><span class=\"n\">money</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Charge Id:'</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n</pre>\n<h3>Errors</h3>\n<p>If the transaction fails, it will return a dictionary with the following keys:</p>\n<ul>\n<li><code>error</code> - The PayMouse normalized error code</li>\n<li><code>message</code> - The PayMouse normalized error message</li>\n<li><code>gateway_error</code> - The gateway error code</li>\n<li><code>gateway_message</code> - The gateway error message</li>\n<li><code>gateway_response</code> - The full gateway response</li>\n</ul>\n\n          </div>"}, "last_serial": 3963356, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b42584a4304387e0c44a7777e639eb4d", "sha256": "2aa702cb289dd5e16dc5c1a8fafeb3e6dae83127d2d49481e9474ad356df5598"}, "downloads": -1, "filename": "paymouse-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b42584a4304387e0c44a7777e639eb4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2576, "upload_time": "2018-06-15T02:32:04", "upload_time_iso_8601": "2018-06-15T02:32:04.247064Z", "url": "https://files.pythonhosted.org/packages/64/24/a9050859ab8ab9af324f473333e40d58df9d684f4c4563712d80eebd77b0/paymouse-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ae08f1aa2e7a5e786eeff683725c648", "sha256": "4ca53902958e181577760e94e74dee67f38b7f88e19b46a2b85b70f30a0b6698"}, "downloads": -1, "filename": "paymouse-0.1.tar.gz", "has_sig": false, "md5_digest": "2ae08f1aa2e7a5e786eeff683725c648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2544, "upload_time": "2018-06-15T02:32:05", "upload_time_iso_8601": "2018-06-15T02:32:05.370260Z", "url": "https://files.pythonhosted.org/packages/44/1c/75ca90d61f31c0717cc2bba00916e6c60314064fb7f0ff3dafab8ebd2560/paymouse-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b42584a4304387e0c44a7777e639eb4d", "sha256": "2aa702cb289dd5e16dc5c1a8fafeb3e6dae83127d2d49481e9474ad356df5598"}, "downloads": -1, "filename": "paymouse-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b42584a4304387e0c44a7777e639eb4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2576, "upload_time": "2018-06-15T02:32:04", "upload_time_iso_8601": "2018-06-15T02:32:04.247064Z", "url": "https://files.pythonhosted.org/packages/64/24/a9050859ab8ab9af324f473333e40d58df9d684f4c4563712d80eebd77b0/paymouse-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ae08f1aa2e7a5e786eeff683725c648", "sha256": "4ca53902958e181577760e94e74dee67f38b7f88e19b46a2b85b70f30a0b6698"}, "downloads": -1, "filename": "paymouse-0.1.tar.gz", "has_sig": false, "md5_digest": "2ae08f1aa2e7a5e786eeff683725c648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2544, "upload_time": "2018-06-15T02:32:05", "upload_time_iso_8601": "2018-06-15T02:32:05.370260Z", "url": "https://files.pythonhosted.org/packages/44/1c/75ca90d61f31c0717cc2bba00916e6c60314064fb7f0ff3dafab8ebd2560/paymouse-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:41 2020"}