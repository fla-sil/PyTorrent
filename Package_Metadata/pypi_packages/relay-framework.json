{"info": {"author": "Lucas Desgouilles", "author_email": "ldesgoui@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Communications :: Chat :: Internet Relay Chat"], "description": "relay\n=====\n\n\nAn irc micro-framework that smells too much like a web framework.\n\nRelay is a toy project, its goals were for me to try out framework design,\nlearn more about the IRC protocol, and to be a replacement for the available\nirc python libraries: most of them did not please me.\n\n\n\nInstallation\n------------\n\nI suggest you use a virtualenv\n\n.. code-block:: sh\n\n    $ pip install relay-framework\n\n\nExample\n-------\n\nThis is an example of a bot that sends whatever is send after '!echo ' in a PRIVMSG:\n\n.. code-block:: python\n\n    from relay import Relay, auto_join, auto_pong\n    from relay.constants import privmsg\n\n    bot = Relay(\"echobot\")\n\n    @bot.handler(privmsg)\n    def echo(target, message, sender, *args, **kwargs):\n        if not message.startswith(\"!echo \"):\n            return\n        sender_nick = sender.split('@')[0].split('!')[0] # We just want the nick\n        message = message[6:] # We just want whatever is after '!echo '\n        if target == bot.client['nick']:\n            result = \"PRIVMSG {sender_nick} :{sender_nick}: {message}\"\n        else:\n            result = \"PRIVMSG {{target}} :{sender_nick}: {message}\"\n        yield result.format(sender_nick=sender_nick, message=message)\n\n    if __name__ == \"__main__\":\n        bot.register(auto_pong)\n        bot.register(auto_join(['#tests']))\n        bot.config(from_env=True).run()\n\n\nAnd to run it:\n\n.. code-block:: sh\n\n    $ RELAY_HOST=irc.example.net RELAY_NICK=echobot python echobot.py\n\n\nChangelog\n---------\n\n:0.1.0:\n   Initial version, client accepts handlers, connects and matches data with those.\n\n\nTodo\n----\n\n- Write a decent IRC client implementation\n- Write tests for the Relay class\n- Write documentation\n- Subclass Relay to allow regexp routes", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ldesgoui/relay", "keywords": "irc internet relay chat framework", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "relay-framework", "package_url": "https://pypi.org/project/relay-framework/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/relay-framework/", "project_urls": {"Homepage": "https://github.com/ldesgoui/relay"}, "release_url": "https://pypi.org/project/relay-framework/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Relay is an irc micro-framework that smells too much like a web framework", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An irc micro-framework that smells too much like a web framework.</p>\n<p>Relay is a toy project, its goals were for me to try out framework design,\nlearn more about the IRC protocol, and to be a replacement for the available\nirc python libraries: most of them did not please me.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>I suggest you use a virtualenv</p>\n<pre>$ pip install relay-framework\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>This is an example of a bot that sends whatever is send after \u2018!echo \u2018 in a PRIVMSG:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">relay</span> <span class=\"kn\">import</span> <span class=\"n\">Relay</span><span class=\"p\">,</span> <span class=\"n\">auto_join</span><span class=\"p\">,</span> <span class=\"n\">auto_pong</span>\n<span class=\"kn\">from</span> <span class=\"nn\">relay.constants</span> <span class=\"kn\">import</span> <span class=\"n\">privmsg</span>\n\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">Relay</span><span class=\"p\">(</span><span class=\"s2\">\"echobot\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@bot</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">privmsg</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">\"!echo \"</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span>\n    <span class=\"n\">sender_nick</span> <span class=\"o\">=</span> <span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'@'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'!'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># We just want the nick</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:]</span> <span class=\"c1\"># We just want whatever is after '!echo '</span>\n    <span class=\"k\">if</span> <span class=\"n\">target</span> <span class=\"o\">==</span> <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'nick'</span><span class=\"p\">]:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s2\">\"PRIVMSG </span><span class=\"si\">{sender_nick}</span><span class=\"s2\"> :</span><span class=\"si\">{sender_nick}</span><span class=\"s2\">: </span><span class=\"si\">{message}</span><span class=\"s2\">\"</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s2\">\"PRIVMSG {{target}} :</span><span class=\"si\">{sender_nick}</span><span class=\"s2\">: </span><span class=\"si\">{message}</span><span class=\"s2\">\"</span>\n    <span class=\"k\">yield</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sender_nick</span><span class=\"o\">=</span><span class=\"n\">sender_nick</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">auto_pong</span><span class=\"p\">)</span>\n    <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">auto_join</span><span class=\"p\">([</span><span class=\"s1\">'#tests'</span><span class=\"p\">]))</span>\n    <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">from_env</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>And to run it:</p>\n<pre>$ <span class=\"nv\">RELAY_HOST</span><span class=\"o\">=</span>irc.example.net <span class=\"nv\">RELAY_NICK</span><span class=\"o\">=</span>echobot python echobot.py\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>0.1.0:</th><td>Initial version, client accepts handlers, connects and matches data with those.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Write a decent IRC client implementation</li>\n<li>Write tests for the Relay class</li>\n<li>Write documentation</li>\n<li>Subclass Relay to allow regexp routes</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1590892, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b92628cda65721501cd948a40d5bd5ac", "sha256": "78f8c8a600ee5e4268f20d36c25c05d7573e2e82f6bee309d9c8a1c08bae7aec"}, "downloads": -1, "filename": "relay-framework-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b92628cda65721501cd948a40d5bd5ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4186, "upload_time": "2015-06-08T14:40:21", "upload_time_iso_8601": "2015-06-08T14:40:21.779989Z", "url": "https://files.pythonhosted.org/packages/00/9c/ed5e5605cfb931bcb5f3aa9b95acb5cdbefef4c98267654fc2e0d0b73af4/relay-framework-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "94a4c1632d4c9d73ba073436f28ac5f6", "sha256": "0d6ee791616fe2f38721387b594e68b54acc3ab8ef6df7950a09521bc33ae659"}, "downloads": -1, "filename": "relay-framework-0.1.1.tar.gz", "has_sig": false, "md5_digest": "94a4c1632d4c9d73ba073436f28ac5f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4179, "upload_time": "2015-06-08T14:53:51", "upload_time_iso_8601": "2015-06-08T14:53:51.665996Z", "url": "https://files.pythonhosted.org/packages/dd/e3/b794a0a61609d59c23eae16b4b7a6f08052b6e7beb6bd45e704221f0d5cc/relay-framework-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c608e0f8ec32edeffd62e8e6995f011e", "sha256": "9e6a9ce04c6f210134530793a89055716a905f8a4fd17794457edeab172f9a83"}, "downloads": -1, "filename": "relay-framework-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c608e0f8ec32edeffd62e8e6995f011e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5314, "upload_time": "2015-06-13T17:02:19", "upload_time_iso_8601": "2015-06-13T17:02:19.097156Z", "url": "https://files.pythonhosted.org/packages/ed/92/868a960594aca70ae2a3ddfc4c68bae21b5cc784969d1e8a4e29c231942e/relay-framework-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c608e0f8ec32edeffd62e8e6995f011e", "sha256": "9e6a9ce04c6f210134530793a89055716a905f8a4fd17794457edeab172f9a83"}, "downloads": -1, "filename": "relay-framework-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c608e0f8ec32edeffd62e8e6995f011e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5314, "upload_time": "2015-06-13T17:02:19", "upload_time_iso_8601": "2015-06-13T17:02:19.097156Z", "url": "https://files.pythonhosted.org/packages/ed/92/868a960594aca70ae2a3ddfc4c68bae21b5cc784969d1e8a4e29c231942e/relay-framework-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:03 2020"}