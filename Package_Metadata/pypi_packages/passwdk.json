{"info": {"author": "\u0141ukasz Krotowski", "author_email": "lukasz.krotowski@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX :: Linux", "Topic :: Utilities"], "description": "Passwdk\r\n=======\r\n\r\nPasswdk is simple console password manager that uses single json file as it's backend.\r\n\r\nUsage\r\n-----\r\n\r\nStart passwdk using:\r\n\r\n.. code-block:: bash\r\n\r\n\t$ passwdk --help\r\n\tusage: passwdk [-h] {add,get}\r\n\r\n\tpositional arguments:\r\n\t  {add,get}   action to take\r\n\r\n\toptional arguments:\r\n\t  -h, --help  show this help message and exit\r\n\r\nAdd password\r\n~~~~~~~~~~~~\r\n\r\nAdd new password to password file using:\r\n\r\n.. code-block:: bash\r\n\r\n\t$ passwdk add --help\r\n\tusage: passwdk add arguments\r\n\r\n\toptional arguments:\r\n\t  -h, --help          show this help message and exit\r\n\t  -n NAME             password name\r\n\t  -u USER             user name\r\n\t  -e EMAIL            email\r\n\t  -o NAME VALUE       other informations\r\n\t  -t TAGS [TAGS ...]  password tags\r\n\r\nOnly name is required. Other information may be provided multiple times to store whatever information on password entry. You will be prompted for password. If you want to generate that use application designed to do that, e.g. `pwgen <http://sourceforge.net/projects/pwgen/>`_.\r\n\r\nAfter saving changes to password file POST_ADD_HOOK is executed (if defined). It can be used to e.g. commit changes to git repository storing password file (see passwdkrc.sample). NEW_PASSWORD_NAME and PASSWD_FILE env variable can be used in that hook.\r\n\r\nGet password entries\r\n~~~~~~~~~~~~~~~~~~~~\r\n\r\nFind password entries by search terms using:\r\n\r\n.. code-block:: bash\r\n\r\n\t$ passwdk get --help\r\n\tusage: passwdk get search terms\r\n\r\n\tpositional arguments:\r\n\t  search      search terms\r\n\r\n\toptional arguments:\r\n\t  -h, --help  show this help message and exit\r\n\t  -p          only password without ending new-line\r\n\r\nAt least one search term is required. It will print either entries with name equal to one of the search terms or with tags including all search terms.\r\n\r\nConfiguration\r\n~~~~~~~~~~~~~\r\n\r\nPasswdk configuration is stored in $HOME/.passwdkrc file. See `sample configuration file <https://github.com/lkrotowski/passwdk/blob/master/passwdkrc.sample>`_.\r\n\r\nRequirements\r\n------------\r\n\r\nPasswdk currently is developed and tested on Linux using Python 2.7.\r\n\r\nInstallation\r\n------------\r\n\r\nThe latest version is available to install using `pip <http://www.pip-installer.org/>`_:\r\n\r\n.. code-block:: bash\r\n\r\n\t$ pip install https://github.com/lkrotowski/passwdk/zipball/master\r\n\r\nZsh completion\r\n~~~~~~~~~~~~~~\r\n\r\nTo install Zsh completion copy `_passwdk <https://github.com/lkrotowski/passwdk/blob/master/_passwdk>`_ file to directory listed in $fpath (see `zsh-completions-howto <https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org>`_).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lkrotowski/passwdk", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "passwdk", "package_url": "https://pypi.org/project/passwdk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/passwdk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/lkrotowski/passwdk"}, "release_url": "https://pypi.org/project/passwdk/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Simple console password manager using json as backend", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Passwdk is simple console password manager that uses single json file as it\u2019s backend.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Start passwdk using:</p>\n<pre>$ passwdk --help\nusage: passwdk <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">{</span>add,get<span class=\"o\">}</span>\n\npositional arguments:\n  <span class=\"o\">{</span>add,get<span class=\"o\">}</span>   action to take\n\noptional arguments:\n  -h, --help  show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n</pre>\n<div id=\"add-password\">\n<h3>Add password</h3>\n<p>Add new password to password file using:</p>\n<pre>$ passwdk add --help\nusage: passwdk add arguments\n\noptional arguments:\n  -h, --help          show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -n NAME             password name\n  -u USER             user name\n  -e EMAIL            email\n  -o NAME VALUE       other informations\n  -t TAGS <span class=\"o\">[</span>TAGS ...<span class=\"o\">]</span>  password tags\n</pre>\n<p>Only name is required. Other information may be provided multiple times to store whatever information on password entry. You will be prompted for password. If you want to generate that use application designed to do that, e.g. <a href=\"http://sourceforge.net/projects/pwgen/\" rel=\"nofollow\">pwgen</a>.</p>\n<p>After saving changes to password file POST_ADD_HOOK is executed (if defined). It can be used to e.g. commit changes to git repository storing password file (see passwdkrc.sample). NEW_PASSWORD_NAME and PASSWD_FILE env variable can be used in that hook.</p>\n</div>\n<div id=\"get-password-entries\">\n<h3>Get password entries</h3>\n<p>Find password entries by search terms using:</p>\n<pre>$ passwdk get --help\nusage: passwdk get search terms\n\npositional arguments:\n  search      search terms\n\noptional arguments:\n  -h, --help  show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -p          only password without ending new-line\n</pre>\n<p>At least one search term is required. It will print either entries with name equal to one of the search terms or with tags including all search terms.</p>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Passwdk configuration is stored in $HOME/.passwdkrc file. See <a href=\"https://github.com/lkrotowski/passwdk/blob/master/passwdkrc.sample\" rel=\"nofollow\">sample configuration file</a>.</p>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Passwdk currently is developed and tested on Linux using Python 2.7.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The latest version is available to install using <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install https://github.com/lkrotowski/passwdk/zipball/master\n</pre>\n<div id=\"zsh-completion\">\n<h3>Zsh completion</h3>\n<p>To install Zsh completion copy <a href=\"https://github.com/lkrotowski/passwdk/blob/master/_passwdk\" rel=\"nofollow\">_passwdk</a> file to directory listed in $fpath (see <a href=\"https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org\" rel=\"nofollow\">zsh-completions-howto</a>).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1536917, "releases": {"0.2.1": []}, "urls": [], "timestamp": "Fri May  8 02:58:03 2020"}