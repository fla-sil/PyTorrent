{"info": {"author": "Christian Metts", "author_email": "xian@mintchaos.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "Note: This is a fork of the original `typogrify` project made especially\nfor `Engineer<http://www.github.com/tylerbutler/engineer/>`_. The\nmodifications are very minor:\n\n- SmartyPants defaults changed so that `--` is interpreted as an en-dash\nand `---` is interpreted as an em-dash. I don't know why in the world this\nisn't the default.\n\ntypogrify: Filters to make web typography easier\n================================================================\n\n\nThis application provides a set of custom filters for the Django\ntemplate system which automatically apply various transformations to\nplain text in order to yield typographically-improved HTML.\n\n\nVersion 2 changes\n-----------------\n\n* Django is no longer a requirement. The typogrify filters can be used in any\n  environment by importing them from typogrify.filters\n* Experimental jinja2 support added in typogrify.templatetags.jinja_filters \u2013\n  untested and defintely needs some eyes on it. Might trigger a point release\n  soon to update.\n\n\nRequirements\n============\n\n``typogrify`` is a set of functions that take text or html input and mark them up with HTML.\nit requires `the Python port of John Gruber's SmartyPants`_ for tokenization.\n\nIt includes optional template filters for Django. So you'll need Django if you want to use those.\n\n.._ The Python port of John Gruber's SmartyPants: http://web.chad.org/projects/smartypants.py/\n\n\nTo use with Django\n==================\n\nBACKWARDS INCOMPATIBILTY NOTE: Version 2 of typogrify has moved the typogrify\ntag to {% load typogrify_tags %}\u00a0\u2013 This necessary to allow the tags files to\nimport from the rest of the library.\n\nOnce ``typogrify`` is installed on your system, you can add it to the\n``INSTALLED_APPS`` setting of any Django project in which you wish to\nuse it, and then use ``{% load typogrify_tags %}`` in your templates to\nload the filters it provides.\n\n\nIncluded filters\n================\n\n``amp``\n-------\n\nWraps ampersands in HTML with ``<span class=\"amp\">`` so they can be\nstyled with CSS. Ampersands are also normalized to ``&amp;``. Requires\nampersands to have whitespace or an ``&nbsp;`` on both sides. Will not\nchange any ampersand which has already been wrapped in this fashion.\n\n\n``caps``\n--------\n\nWraps multiple capital letters in ``<span class=\"caps\">`` so they can\nbe styled with CSS.\n\n\n``initial_quotes``\n------------------\n\nWraps initial quotes in ``<span class=\"dquo\">`` for double quotes or\n``<span class=\"quo\">`` for single quotes. Works inside these block\nelements:\n\n* ``h1``, ``h2``, ``h3``, ``h4``, ``h5``, ``h6``\n\n* ``p``\n\n* ``li``\n\n* ``dt``\n\n* ``dd``\n\nAlso accounts for potential opening inline elements: ``a``, ``em``,\n``strong``, ``span``, ``b``, ``i``.\n\n\n``smartypants``\n---------------\n\nApplies ``SmartyPants``.\n\n\n``typogrify``\n-------------\n\nApplies all of the following filters, in order:\n\n* ``amp``\n\n* ``widont``\n\n* ``smartypants``\n\n* ``caps``\n\n* ``initial_quotes``\n\n\n``widont``\n----------\n\nBased on Shaun Inman's PHP utility of the same name, replaces the\nspace between the last two words in a string with ``&nbsp;`` to avoid\na final line of text with only one word.\n\nWorks inside these block elements:\n\n* ``h1``, ``h2``, ``h3``, ``h4``, ``h5``, ``h6``\n\n* ``p``\n\n* ``li``\n\n* ``dt``\n\n* ``dd``\n\nAlso accounts for potential closing inline elements: ``a``, ``em``,\n``strong``, ``span``, ``b``, ``i``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mintchaos/typogrify", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "typogrify-engineer", "package_url": "https://pypi.org/project/typogrify-engineer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/typogrify-engineer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mintchaos/typogrify"}, "release_url": "https://pypi.org/project/typogrify-engineer/2.0.0/", "requires_dist": null, "requires_python": null, "summary": "Typography related template filters for Django & Jinja2 applications", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Note: This is a fork of the original `typogrify` project made especially<br>for `Engineer&lt;http://www.github.com/tylerbutler/engineer/&gt;`_. The<br>modifications are very minor:<br><br>- SmartyPants defaults changed so that `--` is interpreted as an en-dash<br>and `---` is interpreted as an em-dash. I don't know why in the world this<br>isn't the default.<br><br>typogrify: Filters to make web typography easier<br>================================================================<br><br><br>This application provides a set of custom filters for the Django<br>template system which automatically apply various transformations to<br>plain text in order to yield typographically-improved HTML.<br><br><br>Version 2 changes<br>-----------------<br><br>* Django is no longer a requirement. The typogrify filters can be used in any<br>  environment by importing them from typogrify.filters<br>* Experimental jinja2 support added in typogrify.templatetags.jinja_filters \u2013<br>  untested and defintely needs some eyes on it. Might trigger a point release<br>  soon to update.<br><br><br>Requirements<br>============<br><br>``typogrify`` is a set of functions that take text or html input and mark them up with HTML.<br>it requires `the Python port of John Gruber's SmartyPants`_ for tokenization.<br><br>It includes optional template filters for Django. So you'll need Django if you want to use those.<br><br>.._ The Python port of John Gruber's SmartyPants: http://web.chad.org/projects/smartypants.py/<br><br><br>To use with Django<br>==================<br><br>BACKWARDS INCOMPATIBILTY NOTE: Version 2 of typogrify has moved the typogrify<br>tag to {% load typogrify_tags %}\u00a0\u2013 This necessary to allow the tags files to<br>import from the rest of the library.<br><br>Once ``typogrify`` is installed on your system, you can add it to the<br>``INSTALLED_APPS`` setting of any Django project in which you wish to<br>use it, and then use ``{% load typogrify_tags %}`` in your templates to<br>load the filters it provides.<br><br><br>Included filters<br>================<br><br>``amp``<br>-------<br><br>Wraps ampersands in HTML with ``&lt;span class=\"amp\"&gt;`` so they can be<br>styled with CSS. Ampersands are also normalized to ``&amp;amp;``. Requires<br>ampersands to have whitespace or an ``&amp;nbsp;`` on both sides. Will not<br>change any ampersand which has already been wrapped in this fashion.<br><br><br>``caps``<br>--------<br><br>Wraps multiple capital letters in ``&lt;span class=\"caps\"&gt;`` so they can<br>be styled with CSS.<br><br><br>``initial_quotes``<br>------------------<br><br>Wraps initial quotes in ``&lt;span class=\"dquo\"&gt;`` for double quotes or<br>``&lt;span class=\"quo\"&gt;`` for single quotes. Works inside these block<br>elements:<br><br>* ``h1``, ``h2``, ``h3``, ``h4``, ``h5``, ``h6``<br><br>* ``p``<br><br>* ``li``<br><br>* ``dt``<br><br>* ``dd``<br><br>Also accounts for potential opening inline elements: ``a``, ``em``,<br>``strong``, ``span``, ``b``, ``i``.<br><br><br>``smartypants``<br>---------------<br><br>Applies ``SmartyPants``.<br><br><br>``typogrify``<br>-------------<br><br>Applies all of the following filters, in order:<br><br>* ``amp``<br><br>* ``widont``<br><br>* ``smartypants``<br><br>* ``caps``<br><br>* ``initial_quotes``<br><br><br>``widont``<br>----------<br><br>Based on Shaun Inman's PHP utility of the same name, replaces the<br>space between the last two words in a string with ``&amp;nbsp;`` to avoid<br>a final line of text with only one word.<br><br>Works inside these block elements:<br><br>* ``h1``, ``h2``, ``h3``, ``h4``, ``h5``, ``h6``<br><br>* ``p``<br><br>* ``li``<br><br>* ``dt``<br><br>* ``dd``<br><br>Also accounts for potential closing inline elements: ``a``, ``em``,<br>``strong``, ``span``, ``b``, ``i``.\n          </div>"}, "last_serial": 879635, "releases": {"1.0.1a": [{"comment_text": "", "digests": {"md5": "345ac14feb7ccf17b735555db60081db", "sha256": "31017c77e74e803fe63e65a081147f98a6f311696c818a2edc2e711eee817968"}, "downloads": -1, "filename": "typogrify-engineer-1.0.1a.zip", "has_sig": false, "md5_digest": "345ac14feb7ccf17b735555db60081db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14363, "upload_time": "2012-04-15T10:09:48", "upload_time_iso_8601": "2012-04-15T10:09:48.661470Z", "url": "https://files.pythonhosted.org/packages/a2/70/477344f1e27b6e90b79ab122de796ecd570f298b53232fe7d16f265e8326/typogrify-engineer-1.0.1a.zip", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "87e8a0689395e39235f292cfa1ad48f0", "sha256": "71b0cb82754e1cf9171f9cbb3a7ce479b6b8087cd5bd7bf95cd3c3f956dd0cb3"}, "downloads": -1, "filename": "typogrify-engineer-2.0.0.zip", "has_sig": false, "md5_digest": "87e8a0689395e39235f292cfa1ad48f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14472, "upload_time": "2013-10-02T23:48:13", "upload_time_iso_8601": "2013-10-02T23:48:13.049486Z", "url": "https://files.pythonhosted.org/packages/99/37/23e6b03b79e42b8096cbc59a2c771c135c3b795ac593ad79ea7ba0dec00a/typogrify-engineer-2.0.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87e8a0689395e39235f292cfa1ad48f0", "sha256": "71b0cb82754e1cf9171f9cbb3a7ce479b6b8087cd5bd7bf95cd3c3f956dd0cb3"}, "downloads": -1, "filename": "typogrify-engineer-2.0.0.zip", "has_sig": false, "md5_digest": "87e8a0689395e39235f292cfa1ad48f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14472, "upload_time": "2013-10-02T23:48:13", "upload_time_iso_8601": "2013-10-02T23:48:13.049486Z", "url": "https://files.pythonhosted.org/packages/99/37/23e6b03b79e42b8096cbc59a2c771c135c3b795ac593ad79ea7ba0dec00a/typogrify-engineer-2.0.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:42:35 2020"}