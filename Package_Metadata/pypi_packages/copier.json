{"info": {"author": "Ben Felder", "author_email": "ben@felder.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "## Think this library is awesome? Vote with a \ud83d\udc4d to include it in the awesome-python list: https://github.com/vinta/awesome-python/pull/1350\n\n![Copier](https://github.com/pykong/copier/raw/master/img/copier-logotype.png)\n\n[![codecov](https://codecov.io/gh/pykong/copier/branch/master/graph/badge.svg)](https://codecov.io/gh/pykong/copier)\n![](https://github.com/pykong/copier/workflows/CI/badge.svg)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n![](https://img.shields.io/pypi/pyversions/copier)\n![](https://img.shields.io/pypi/v/copier)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nA library for rendering project templates.\n\n- Works with **local** paths and **git URLs**.\n- Your project can include any file and `Copier` can dynamically replace values in any\n  kind of text file.\n- It generates a beautiful output and takes care of not overwrite existing files unless\n  instructed to do so.\n\n![Sample output](https://github.com/pykong/copier/raw/master/img/copier-output.png)\n\n## How to install\n\n1. Install Git 2.24 or newer.\n1. To use as a CLI app: `pipx install copier`\n1. To use as a library: `pip install copier`\n\n## How to use\n\n- Use it in your Python code:\n\n```python\nfrom copier import copy\n\n# Create a project from a local path\ncopy(\"path/to/project/template\", \"path/to/destination\")\n\n# Or from a git URL.\ncopy(\"https://github.com/pykong/copier.git\", \"path/to/destination\")\n\n# You can also use \"gh:\" as a shortcut of \"https://github.com/\"\ncopy(\"gh:pykong/copier.git\", \"path/to/destination\")\n\n# Or \"gl:\" as a shortcut of \"https://gitlab.com/\"\ncopy(\"gl:pykong/copier.git\", \"path/to/destination\")\n```\n\n- Or as a command-line tool:\n\n```bash\ncopier path/to/project/template path/to/destination\n```\n\n## How it works\n\nThe content of the files inside the project template is copied to the destination\nwithout changes, **unless they end with `.tmpl`** (or your chosen `templates_suffix`).\nIn that case, the templating engine will be used to render them.\n\nA slightly customized Jinja2 templating is used. The main difference is those variables\nare referenced with `[[ name ]]` instead of `{{ name }}` and blocks are `[% if name %]`\ninstead of `{% if name %}`. To read more about templating see the\n[Jinja2 documentation](https://jinja.palletsprojects.com/).\n\nIf a **YAML** file named `copier.yml` is found in the root of the project\n(alternatively, a YAML file named `copier.yaml`), the user will be prompted to fill in\nor confirm the default values.\n\nUse the `data` argument to pass whatever extra context you want to be available in the\ntemplates. The arguments can be any valid Python value, even a function.\n\nSince version 3.0, only Python 3.6 or later are supported. Please use the 2.5.1 version\nif your project runs on a previous Python version.\n\n## The `copier.yml` file\n\nIf a `copier.yml`, or `copier.yaml` is found in the root of the template, it will be\nread and used for two purposes:\n\n### Prompt the user for information\n\nFor each key found, Copier will prompt the user to fill or confirm the values before\nthey become available to the project template. So content like this:\n\n```yaml\nname_of_the_project: My awesome project\nnumber_of_eels: 1234\nyour_email: \"\"\n```\n\nwill result in this series of questions:\n\n<pre>\n  <b>name_of_the_project</b>? Format: yaml\n\ud83c\udfa4 [My awesome project]:\n\n  <b>number_of_eels</b>? Format: yaml\n\ud83c\udfa4 [1234]:\n\n  <b>your_email</b>? Format: yaml\n\ud83c\udfa4 []:\n</pre>\n\n#### Advanced prompt formatting\n\nApart from the simplified format, as seen above, Copier supports a more advanced format\nto ask users for data. To use it, the value must be a dict.\n\nSupported keys:\n\n- **type**: User input must match this type. Options are: bool, float, int, json, str,\n  yaml.\n- **help**: Additional text to help the user know what's this question for.\n- **default**: Leave empty to force the user to answer. Provide a default to save him\n  from typing it if it's quite common. When using **choices**, the default must be the\n  choice _value_, not its _key_. If values are quite long, you can use\n  [YAML anchors](https://confluence.atlassian.com/bitbucket/yaml-anchors-960154027.html).\n\n```yaml\nlove_copier:\n  type: bool # This makes Copier ask for y/n\n  help: Do you love Copier?\n  default: yes # Without a default, you force the user to answer\n\nproject_name:\n  type: str # Any value will be treated raw as a string\n  help: An awesome project needs an awesome name. Tell me yours.\n  default: paradox-specifier\n\nrocket_launch_password:\n  type: str\n  secret: true # This value will not be logged into .copier-answers.yml\n  default: my top secret password\n\n# I'll avoid default and help here, but you can use them too\nage:\n  type: int\n\nheight:\n  type: float\n\nany_json:\n  help: Tell me anything, but format it as a one-line JSON string\n  type: json\n\nany_yaml:\n  help: Tell me anything, but format it as a one-line YAML string\n  type: yaml # This is the default type, also for short syntax questions\n\nyour_favorite_book:\n  # User will type 1 or 2, but your template will get the value\n  choices:\n    - The Bible\n    - The Hitchhiker's Guide to the Galaxy\n\nproject_license:\n  # User will type 1 or 2 and will see only the dict key, but you will\n  # get the dict value in your template\n  choices:\n    MIT: &mit_text |\n      Here I can write the full text of the MIT license.\n      This will be a long text, shortened here for example purposes.\n    Apache2: |\n      Full text of Apache2 license.\n  # When using choices, the default value is the value, **not** the key;\n  # that's why I'm using the YAML anchor declared above to avoid retyping the\n  # whole license\n  default: *mit_text\n  # You can still define the type, to make sure answers that come from --data\n  # CLI argument match the type that your template expects\n  type: str\n\nclose_to_work:\n  help: Do you live close to your work?\n  # This format works just like the dict one\n  choices:\n    - [at home, I work at home]\n    - [less than 10km, quite close]\n    - [more than 10km, not so close]\n    - [more than 100km, quite far away]\n```\n\n### Arguments defaults\n\nThe keys `_exclude`, `_skip_if_exists`, `_tasks`, and `_extra_paths` in the `copier.yml`\nfile, will be treated as the default values for the `exclude`, `tasks`, and ,\n`extra_paths` arguments to `copier.copy()`.\n\nNote that they become just _the defaults_, so any explicitly-passed argument will\noverwrite them.\n\n```yaml\n# File where answers will be recorded. Defaults to `.copier-answers.yml`.\n# Remember to add that file to your template if you want to support updates.\n_answers_file: .my-custom-answers.yml\n\n# Suffix that instructs which files are to be processed by Jinja as templates\n_templates_suffix: .tmpl\n\n# gitignore-style patterns files/folders that must not be copied.\n_exclude:\n  - \"*.bar\"\n  - \".git\"\n\n# gitignore-style patterns files to skip, without asking, if they already exists\n# in the destination folder\n_skip_if_exists:\n\n# Commands to be executed after the copy\n# They have the $STAGE=task environment variable\n_tasks:\n  # Strings get executed under system's default shell\n  - \"git init\"\n  - \"rm [[ name_of_the_project / 'README.md' ]]\"\n  # Arrays are executed without shell, saving you the work of escaping arguments\n  - [invoke, \"--search-root=[[ _copier_conf.src_path ]]\", after-copy]\n  # You are able to output the full conf to JSON, to be parsed by your script,\n  # but you cannot use the normal `|tojson` filter; instead, use `.json()`\n  - [invoke, end-process, \"--full-conf=[[ _copier_conf.json() ]]\"]\n\n# Migrations are like tasks, but they are executed:\n# - Evaluated using PEP 440\n# - In the same order as declared here\n# - Only when new version >= declared version > old version\n# - Only when updating\n# - After being rendered with the same renderer as the rest of the template\n# - With the same supported syntaxes as `_tasks`, above\n# - With $VERSION_FROM, $VERSION_TO and $VERSION_CURRENT, $STAGE (before/after)\n#   environment variables\n_migrations:\n  - version: v1.0.0\n    before:\n      - rm ./old-folder\n    after:\n      # [[ _copier_conf.src_path ]] points to the path where the template was\n      # cloned, so it can be helpful to run migration scripts stored there.\n      - invoke -r [[ _copier_conf.src_path ]] -c migrations migrate $VERSION_CURRENT\n\n# Additional paths, from where to search for templates\n_extra_paths:\n  - ~/Projects/templates\n```\n\n### Include other yaml files\n\nTo reuse configurations across templates you can reference other yaml files. You just\nneed to state the `!include` together with the absolute or relative path to the file to\nbe included. Multiple files can be included per `copier.yml`. For more detailed\ninstructions, see [pyyaml-include](https://github.com/tanbro/pyyaml-include#usage).\n\n```yaml\n# other_place/include_me.yml\ncommon_setting: \"1\"\n\n# copier.yml\n!include other_place/include_me.yml\n```\n\n**Warning:** Use only trusted project templates as these tasks run with the same level\nof access as your user.\n\n## The answers file\n\nIf the destination path exists and a `.copier-answers.yml` file is present there, it\nwill be used to load the last user's answers to the questions made in\n[the `copier.yml` file](#the-copieryml-file).\n\nThis makes projects easier to update because when the user is asked, the default answers\nwill be the last ones he used.\n\nTo make sure projects based on your templates can make use of this nice feature, **add a\nfile called `[[ _copier_conf.answers_file ]].tmpl`** (or your chosen `templates_suffix`)\nin your template's root folder, with this content:\n\n```yml\n# Changes here will be overwritten by Copier\n[[_copier_answers|to_nice_yaml]]\n```\n\nIf this file is called different than `[[ _copier_conf.answers_file ]].tmpl` your users\nwill not be able to choose a custom answers file name, and thus they will not be able to\nintegrate several updatable templates into one destination directory.\n\nThe builtin `_copier_answers` variable includes all data needed to smooth future updates\nof this project. This includes (but is not limited to) all JSON-serializable values\ndeclared as user questions in [the `copier.yml` file](#the-copieryml-file).\n\nAs you can see, you also have the power to customize what will be logged here. Keys that\nstart with an underscore (`_`) are specific to Copier. Other keys should match questions\nin `copier.yml`.\n\nIf you plan to integrate several templates into one single downstream project, you can\nuse a different path for this file:\n\n```yaml\n# In your `copier.yml`:\n_answers_file: .my-custom-answers.yml\n```\n\n### Updating a project\n\nThe best way to update a project from its template is when all of these conditions are\ntrue:\n\n1. The template includes a valid `.copier-answers.yml` file.\n2. The template is versioned with git (with tags).\n3. The destination folder is versioned with git.\n\nIf that's your case, then just enter the destination folder, make sure `git status`\nshows it clean, and run:\n\n```bash\ncopier update\n```\n\nThis will read all available git tags, will compare them using\n[PEP 440](https://www.python.org/dev/peps/pep-0440/), and will check out the latest one\nbefore updating. To update to the latest commit, add `--vcs-ref=HEAD`. You can use any\nother git ref you want.\n\nWhen updating, Copier will do its best to respect your project evolution by using the\nanswers you provided when copied last time. However, sometimes it's impossible for\nCopier to know what to do with a diff code hunk. In those cases, you will find `*.rej`\nfiles that contain the unresolved diffs. _You should review those manually_ before\ncommitting.\n\nYou probably don't want `*.rej` files in your git history, but if you add them to\n`.gitignore`, some important changes could pass unnoticed to you. That's why the\nrecommended way to deal with them is to _not_ add them to add a\n[pre-commit](https://pre-commit.com/) (or equivalent) hook that forbids them, just like\nthis:\n\n```yaml\n# .pre-commit-config.yaml\nrepos:\n  - repo: local\n    hooks:\n      - id: forbidden-files\n        name: forbidden files\n        entry: found copier update rejection files; review them and remove them\n        language: fail\n        files: \"\\\\.rej$\"\n```\n\n## Patterns syntax\n\nCopier supports matching names against patterns in a gitignore style fashion. This works\nfor the options `exclude` and `skip` . This means you can write patterns as you would\nfor any `.gitignore` file. The full range of the gitignore syntax ist supported via\n[pathspec]([https://github.com/cpburnz/python-path-specification](https://github.com/cpburnz/python-path-specification).\n\n### Examples for pattern matching\n\nPutting the following settings in your `copier.yaml` file would exclude all files ending\nwith \"txt\" from being copied to the destination folder, except the file `a.txt`.\n\n```yaml\n_exclude:\n  # match all text files...\n  - \"*.txt\"\n  # .. but not this one:\n  - \"!a.txt\"\n```\n\n## Template helpers\n\nIn addition to\n[all the features Jinja supports](https://jinja.palletsprojects.com/en/2.10.x/templates/),\nCopier includes:\n\n### Builtin variables/functions\n\n- `now()` to get current UTC time.\n- `make_secret()` to get a random string.\n- `_copier_answers` includes the current answers dict, but slightly modified to make it\n  suitable to [autoupdate your project safely](#the-answers-file):\n  - It doesn't contain secret answers.\n  - It doesn't contain any data that is not easy to render to JSON or YAML.\n- `_copier_conf` includes the current copier `ConfigData` object, also slightly\n  modified:\n  - It only contains JSON-serializable data.\n  - But you have to serialize it with `[[ _copier_conf.json() ]]` instead of\n    `[[ _copier_conf|tojson ]]`.\n  - \u26a0\ufe0f It contains secret answers inside its `.data` key.\n  - Modifying it doesn't alter the current rendering configuration.\n\n### Builtin filters\n\n- `anything|to_nice_yaml` to print as pretty-formatted YAML.\n\n  Without arguments it defaults to:\n  `anything|to_nice_yaml(indent=2, width=80, allow_unicode=True)`, but you can modify\n  those.\n\n---\n\n## API\n\n#### copier.copy()\n\n```python\ncopier.copy(\n    src_path,\n    dst_path,\n\n    data=DEFAULT_DATA,\n    *,\n    exclude=DEFAULT_FILTER,\n    skip_if_exists=[],\n    tasks=[],\n\n    envops={},\n    extra_paths=[],\n\n    pretend=False,\n    force=False,\n    skip=False,\n    quiet=False,\n    cleanup_on_error=True\n)\n```\n\nUses the template in _src_path_ to generate a new project at _dst_path_.\n\n**Arguments**:\n\n- **src_path** (str):<br> Absolute path to the project skeleton, which can also be a\n  version control system URL.\n\n- **dst_path** (str):<br> Absolute path to where to render the skeleton.\n\n- **data** (dict):<br> Data to be passed to the templates in addition to the user data\n  from a `copier.yml`.\n\n- **exclude** (list):<br> A list of names or gitignore-style patterns matching files or\n  folders that must not be copied.\n\n- **skip_if_exists** (list):<br> A list of names or gitignore-style patterns matching\n  files or folders, that are skipped if another with the same name already exists in the\n  destination folder. (It only makes sense if you are copying to a folder that already\n  exists).\n\n- **tasks** (list):<br> Optional lists of commands to run in order after finishing the\n  copy. Like in the templates files, you can use variables on the commands that will be\n  replaced by the real values before running the command. If one of the commands fails,\n  the rest of them will not run.\n\n- **envops** (dict):<br> Extra options for the Jinja template environment. See available\n  options in\n  [Jinja's docs](https://jinja.palletsprojects.com/en/2.10.x/api/#jinja2.Environment).\n\n  Copier uses these defaults that are different from Jinja's:\n\n  ```yml\n  # copier.yml\n  _envops:\n    block_start_string: \"[%\"\n    block_end_string: \"%]\"\n    comment_start_string: \"[#\"\n    comment_end_string: \"#]\"\n    variable_start_string: \"[[\"\n    variable_end_string: \"]]\"\n    keep_trailing_newline: true\n  ```\n\n  You can use default Jinja syntax with:\n\n  ```yml\n  # copier.yml\n  _envops:\n    block_start_string: \"{%\"\n    block_end_string: \"%}\"\n    comment_start_string: \"{#\"\n    comment_end_string: \"#}\"\n    variable_start_string: \"{{\"\n    variable_end_string: \"}}\"\n    keep_trailing_newline: false\n  ```\n\n- **extra_paths** (list):<br> Additional paths, from where to search for templates. This\n  is intended to be used with shared parent templates, files with macros, etc. outside\n  the copied project skeleton.\n\n- **pretend** (bool):<br> Run but do not make any changes.\n\n- **force** (bool):<br> Overwrite files that already exist, without asking.\n\n- **skip** (bool):<br> Skip files that already exist, without asking.\n\n- **quiet** (bool):<br> Suppress the status output.\n\n- **cleanup_on_error** (bool):<br> Remove the destination folder if the copy process or\n  one of the tasks fails. True by default.\n\n## Credits\n\nSpecial thanks go to\n[jpscaletti](<[https://github.com/jpscaletti](https://github.com/jpscaletti)>) for\noriginally creating `Copier`. This project would not be a thing without him.\n\nBig thanks also go to [Yajo](<[https://github.com/Yajo](https://github.com/Yajo)>) for\nhis relentless zest for improving `Copier` even further.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pykong/copier", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "copier", "package_url": "https://pypi.org/project/copier/", "platform": "", "project_url": "https://pypi.org/project/copier/", "project_urls": {"Bug Tracker": "https://github.com/pykong/copier/issues", "Homepage": "https://github.com/pykong/copier", "Repository": "https://github.com/pykong/copier"}, "release_url": "https://pypi.org/project/copier/3.0.6/", "requires_dist": ["colorama (>=0.4.0,<1.0.0)", "jinja2 (>=2.10.0,<3.0.0)", "packaging (>=20.1,<21.0)", "pathspec (>=0.7.0,<0.8.0)", "plumbum (>=1.6.0,<2.0.0)", "pydantic (>=1.0b1)", "pytest-xdist (>=1.31.0,<2.0.0)", "pyyaml (>=5.3,<6.0)", "pyyaml-include (>=1.2,<2.0)", "regex (>=2020.2.20,<2021.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "A library for rendering project templates.", "version": "3.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Think this library is awesome? Vote with a \ud83d\udc4d to include it in the awesome-python list: <a href=\"https://github.com/vinta/awesome-python/pull/1350\" rel=\"nofollow\">https://github.com/vinta/awesome-python/pull/1350</a></h2>\n<p><img alt=\"Copier\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a620c53cbc9ecdb0cb32122fb673a12323b7cb3/68747470733a2f2f6769746875622e636f6d2f70796b6f6e672f636f706965722f7261772f6d61737465722f696d672f636f706965722d6c6f676f747970652e706e67\"></p>\n<p><a href=\"https://codecov.io/gh/pykong/copier\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efefc242ef4c9337c887c31183c7dee3210d18e5/68747470733a2f2f636f6465636f762e696f2f67682f70796b6f6e672f636f706965722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2708dfd6eef5be84da6f251a5fa5e6643adb1e6a/68747470733a2f2f6769746875622e636f6d2f70796b6f6e672f636f706965722f776f726b666c6f77732f43492f62616467652e737667\">\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c6a42dbb9f1b9a6af3367e86b3f0e080651b235/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f70696572\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa56f7cd79739b0402903b81ee8cdb137b3e7a57/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f70696572\">\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>A library for rendering project templates.</p>\n<ul>\n<li>Works with <strong>local</strong> paths and <strong>git URLs</strong>.</li>\n<li>Your project can include any file and <code>Copier</code> can dynamically replace values in any\nkind of text file.</li>\n<li>It generates a beautiful output and takes care of not overwrite existing files unless\ninstructed to do so.</li>\n</ul>\n<p><img alt=\"Sample output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9876278ecfad0eb440969c005744c50d30de491/68747470733a2f2f6769746875622e636f6d2f70796b6f6e672f636f706965722f7261772f6d61737465722f696d672f636f706965722d6f75747075742e706e67\"></p>\n<h2>How to install</h2>\n<ol>\n<li>Install Git 2.24 or newer.</li>\n<li>To use as a CLI app: <code>pipx install copier</code></li>\n<li>To use as a library: <code>pip install copier</code></li>\n</ol>\n<h2>How to use</h2>\n<ul>\n<li>Use it in your Python code:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">copier</span> <span class=\"kn\">import</span> <span class=\"n\">copy</span>\n\n<span class=\"c1\"># Create a project from a local path</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/project/template\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/destination\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or from a git URL.</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"https://github.com/pykong/copier.git\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/destination\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also use \"gh:\" as a shortcut of \"https://github.com/\"</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"gh:pykong/copier.git\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/destination\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or \"gl:\" as a shortcut of \"https://gitlab.com/\"</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"gl:pykong/copier.git\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/destination\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Or as a command-line tool:</li>\n</ul>\n<pre>copier path/to/project/template path/to/destination\n</pre>\n<h2>How it works</h2>\n<p>The content of the files inside the project template is copied to the destination\nwithout changes, <strong>unless they end with <code>.tmpl</code></strong> (or your chosen <code>templates_suffix</code>).\nIn that case, the templating engine will be used to render them.</p>\n<p>A slightly customized Jinja2 templating is used. The main difference is those variables\nare referenced with <code>[[ name ]]</code> instead of <code>{{ name }}</code> and blocks are <code>[% if name %]</code>\ninstead of <code>{% if name %}</code>. To read more about templating see the\n<a href=\"https://jinja.palletsprojects.com/\" rel=\"nofollow\">Jinja2 documentation</a>.</p>\n<p>If a <strong>YAML</strong> file named <code>copier.yml</code> is found in the root of the project\n(alternatively, a YAML file named <code>copier.yaml</code>), the user will be prompted to fill in\nor confirm the default values.</p>\n<p>Use the <code>data</code> argument to pass whatever extra context you want to be available in the\ntemplates. The arguments can be any valid Python value, even a function.</p>\n<p>Since version 3.0, only Python 3.6 or later are supported. Please use the 2.5.1 version\nif your project runs on a previous Python version.</p>\n<h2>The <code>copier.yml</code> file</h2>\n<p>If a <code>copier.yml</code>, or <code>copier.yaml</code> is found in the root of the template, it will be\nread and used for two purposes:</p>\n<h3>Prompt the user for information</h3>\n<p>For each key found, Copier will prompt the user to fill or confirm the values before\nthey become available to the project template. So content like this:</p>\n<pre><span class=\"nt\">name_of_the_project</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">My awesome project</span>\n<span class=\"nt\">number_of_eels</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1234</span>\n<span class=\"nt\">your_email</span><span class=\"p\">:</span> <span class=\"s\">\"\"</span>\n</pre>\n<p>will result in this series of questions:</p>\n<pre>  <b>name_of_the_project</b>? Format: yaml\n\ud83c\udfa4 [My awesome project]:\n\n  <b>number_of_eels</b>? Format: yaml\n\ud83c\udfa4 [1234]:\n\n  <b>your_email</b>? Format: yaml\n\ud83c\udfa4 []:\n</pre>\n<h4>Advanced prompt formatting</h4>\n<p>Apart from the simplified format, as seen above, Copier supports a more advanced format\nto ask users for data. To use it, the value must be a dict.</p>\n<p>Supported keys:</p>\n<ul>\n<li><strong>type</strong>: User input must match this type. Options are: bool, float, int, json, str,\nyaml.</li>\n<li><strong>help</strong>: Additional text to help the user know what's this question for.</li>\n<li><strong>default</strong>: Leave empty to force the user to answer. Provide a default to save him\nfrom typing it if it's quite common. When using <strong>choices</strong>, the default must be the\nchoice <em>value</em>, not its <em>key</em>. If values are quite long, you can use\n<a href=\"https://confluence.atlassian.com/bitbucket/yaml-anchors-960154027.html\" rel=\"nofollow\">YAML anchors</a>.</li>\n</ul>\n<pre><span class=\"nt\">love_copier</span><span class=\"p\">:</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">bool</span> <span class=\"c1\"># This makes Copier ask for y/n</span>\n  <span class=\"nt\">help</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Do you love Copier?</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span> <span class=\"c1\"># Without a default, you force the user to answer</span>\n\n<span class=\"nt\">project_name</span><span class=\"p\">:</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">str</span> <span class=\"c1\"># Any value will be treated raw as a string</span>\n  <span class=\"nt\">help</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">An awesome project needs an awesome name. Tell me yours.</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">paradox-specifier</span>\n\n<span class=\"nt\">rocket_launch_password</span><span class=\"p\">:</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">str</span>\n  <span class=\"nt\">secret</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span> <span class=\"c1\"># This value will not be logged into .copier-answers.yml</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my top secret password</span>\n\n<span class=\"c1\"># I'll avoid default and help here, but you can use them too</span>\n<span class=\"nt\">age</span><span class=\"p\">:</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">int</span>\n\n<span class=\"nt\">height</span><span class=\"p\">:</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">float</span>\n\n<span class=\"nt\">any_json</span><span class=\"p\">:</span>\n  <span class=\"nt\">help</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Tell me anything, but format it as a one-line JSON string</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">json</span>\n\n<span class=\"nt\">any_yaml</span><span class=\"p\">:</span>\n  <span class=\"nt\">help</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Tell me anything, but format it as a one-line YAML string</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yaml</span> <span class=\"c1\"># This is the default type, also for short syntax questions</span>\n\n<span class=\"nt\">your_favorite_book</span><span class=\"p\">:</span>\n  <span class=\"c1\"># User will type 1 or 2, but your template will get the value</span>\n  <span class=\"nt\">choices</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">The Bible</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">The Hitchhiker's Guide to the Galaxy</span>\n\n<span class=\"nt\">project_license</span><span class=\"p\">:</span>\n  <span class=\"c1\"># User will type 1 or 2 and will see only the dict key, but you will</span>\n  <span class=\"c1\"># get the dict value in your template</span>\n  <span class=\"nt\">choices</span><span class=\"p\">:</span>\n    <span class=\"nt\">MIT</span><span class=\"p\">:</span> <span class=\"nl\">&amp;mit_text</span> <span class=\"p p-Indicator\">|</span>\n      <span class=\"no\">Here I can write the full text of the MIT license.</span>\n      <span class=\"no\">This will be a long text, shortened here for example purposes.</span>\n    <span class=\"nt\">Apache2</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n      <span class=\"no\">Full text of Apache2 license.</span>\n  <span class=\"c1\"># When using choices, the default value is the value, **not** the key;</span>\n  <span class=\"c1\"># that's why I'm using the YAML anchor declared above to avoid retyping the</span>\n  <span class=\"c1\"># whole license</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"nv\">*mit_text</span>\n  <span class=\"c1\"># You can still define the type, to make sure answers that come from --data</span>\n  <span class=\"c1\"># CLI argument match the type that your template expects</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">str</span>\n\n<span class=\"nt\">close_to_work</span><span class=\"p\">:</span>\n  <span class=\"nt\">help</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Do you live close to your work?</span>\n  <span class=\"c1\"># This format works just like the dict one</span>\n  <span class=\"nt\">choices</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">at home</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">I work at home</span><span class=\"p p-Indicator\">]</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">less than 10km</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">quite close</span><span class=\"p p-Indicator\">]</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">more than 10km</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">not so close</span><span class=\"p p-Indicator\">]</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">more than 100km</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">quite far away</span><span class=\"p p-Indicator\">]</span>\n</pre>\n<h3>Arguments defaults</h3>\n<p>The keys <code>_exclude</code>, <code>_skip_if_exists</code>, <code>_tasks</code>, and <code>_extra_paths</code> in the <code>copier.yml</code>\nfile, will be treated as the default values for the <code>exclude</code>, <code>tasks</code>, and ,\n<code>extra_paths</code> arguments to <code>copier.copy()</code>.</p>\n<p>Note that they become just <em>the defaults</em>, so any explicitly-passed argument will\noverwrite them.</p>\n<pre><span class=\"c1\"># File where answers will be recorded. Defaults to `.copier-answers.yml`.</span>\n<span class=\"c1\"># Remember to add that file to your template if you want to support updates.</span>\n<span class=\"nt\">_answers_file</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.my-custom-answers.yml</span>\n\n<span class=\"c1\"># Suffix that instructs which files are to be processed by Jinja as templates</span>\n<span class=\"nt\">_templates_suffix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.tmpl</span>\n\n<span class=\"c1\"># gitignore-style patterns files/folders that must not be copied.</span>\n<span class=\"nt\">_exclude</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*.bar\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\".git\"</span>\n\n<span class=\"c1\"># gitignore-style patterns files to skip, without asking, if they already exists</span>\n<span class=\"c1\"># in the destination folder</span>\n<span class=\"nt\">_skip_if_exists</span><span class=\"p\">:</span>\n\n<span class=\"c1\"># Commands to be executed after the copy</span>\n<span class=\"c1\"># They have the $STAGE=task environment variable</span>\n<span class=\"nt\">_tasks</span><span class=\"p\">:</span>\n  <span class=\"c1\"># Strings get executed under system's default shell</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"git</span><span class=\"nv\"> </span><span class=\"s\">init\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"rm</span><span class=\"nv\"> </span><span class=\"s\">[[</span><span class=\"nv\"> </span><span class=\"s\">name_of_the_project</span><span class=\"nv\"> </span><span class=\"s\">/</span><span class=\"nv\"> </span><span class=\"s\">'README.md'</span><span class=\"nv\"> </span><span class=\"s\">]]\"</span>\n  <span class=\"c1\"># Arrays are executed without shell, saving you the work of escaping arguments</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">invoke</span><span class=\"p p-Indicator\">,</span> <span class=\"s\">\"--search-root=[[</span><span class=\"nv\"> </span><span class=\"s\">_copier_conf.src_path</span><span class=\"nv\"> </span><span class=\"s\">]]\"</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">after-copy</span><span class=\"p p-Indicator\">]</span>\n  <span class=\"c1\"># You are able to output the full conf to JSON, to be parsed by your script,</span>\n  <span class=\"c1\"># but you cannot use the normal `|tojson` filter; instead, use `.json()`</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">invoke</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">end-process</span><span class=\"p p-Indicator\">,</span> <span class=\"s\">\"--full-conf=[[</span><span class=\"nv\"> </span><span class=\"s\">_copier_conf.json()</span><span class=\"nv\"> </span><span class=\"s\">]]\"</span><span class=\"p p-Indicator\">]</span>\n\n<span class=\"c1\"># Migrations are like tasks, but they are executed:</span>\n<span class=\"c1\"># - Evaluated using PEP 440</span>\n<span class=\"c1\"># - In the same order as declared here</span>\n<span class=\"c1\"># - Only when new version &gt;= declared version &gt; old version</span>\n<span class=\"c1\"># - Only when updating</span>\n<span class=\"c1\"># - After being rendered with the same renderer as the rest of the template</span>\n<span class=\"c1\"># - With the same supported syntaxes as `_tasks`, above</span>\n<span class=\"c1\"># - With $VERSION_FROM, $VERSION_TO and $VERSION_CURRENT, $STAGE (before/after)</span>\n<span class=\"c1\">#   environment variables</span>\n<span class=\"nt\">_migrations</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">v1.0.0</span>\n    <span class=\"nt\">before</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rm ./old-folder</span>\n    <span class=\"nt\">after</span><span class=\"p\">:</span>\n      <span class=\"c1\"># [[ _copier_conf.src_path ]] points to the path where the template was</span>\n      <span class=\"c1\"># cloned, so it can be helpful to run migration scripts stored there.</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">invoke -r [[ _copier_conf.src_path ]] -c migrations migrate $VERSION_CURRENT</span>\n\n<span class=\"c1\"># Additional paths, from where to search for templates</span>\n<span class=\"nt\">_extra_paths</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">~/Projects/templates</span>\n</pre>\n<h3>Include other yaml files</h3>\n<p>To reuse configurations across templates you can reference other yaml files. You just\nneed to state the <code>!include</code> together with the absolute or relative path to the file to\nbe included. Multiple files can be included per <code>copier.yml</code>. For more detailed\ninstructions, see <a href=\"https://github.com/tanbro/pyyaml-include#usage\" rel=\"nofollow\">pyyaml-include</a>.</p>\n<pre><span class=\"c1\"># other_place/include_me.yml</span>\n<span class=\"nt\">common_setting</span><span class=\"p\">:</span> <span class=\"s\">\"1\"</span>\n\n<span class=\"c1\"># copier.yml</span>\n<span class=\"kt\">!include</span> <span class=\"l l-Scalar l-Scalar-Plain\">other_place/include_me.yml</span>\n</pre>\n<p><strong>Warning:</strong> Use only trusted project templates as these tasks run with the same level\nof access as your user.</p>\n<h2>The answers file</h2>\n<p>If the destination path exists and a <code>.copier-answers.yml</code> file is present there, it\nwill be used to load the last user's answers to the questions made in\n<a href=\"#the-copieryml-file\" rel=\"nofollow\">the <code>copier.yml</code> file</a>.</p>\n<p>This makes projects easier to update because when the user is asked, the default answers\nwill be the last ones he used.</p>\n<p>To make sure projects based on your templates can make use of this nice feature, <strong>add a\nfile called <code>[[ _copier_conf.answers_file ]].tmpl</code></strong> (or your chosen <code>templates_suffix</code>)\nin your template's root folder, with this content:</p>\n<pre># Changes here will be overwritten by Copier\n[[_copier_answers|to_nice_yaml]]\n</pre>\n<p>If this file is called different than <code>[[ _copier_conf.answers_file ]].tmpl</code> your users\nwill not be able to choose a custom answers file name, and thus they will not be able to\nintegrate several updatable templates into one destination directory.</p>\n<p>The builtin <code>_copier_answers</code> variable includes all data needed to smooth future updates\nof this project. This includes (but is not limited to) all JSON-serializable values\ndeclared as user questions in <a href=\"#the-copieryml-file\" rel=\"nofollow\">the <code>copier.yml</code> file</a>.</p>\n<p>As you can see, you also have the power to customize what will be logged here. Keys that\nstart with an underscore (<code>_</code>) are specific to Copier. Other keys should match questions\nin <code>copier.yml</code>.</p>\n<p>If you plan to integrate several templates into one single downstream project, you can\nuse a different path for this file:</p>\n<pre><span class=\"c1\"># In your `copier.yml`:</span>\n<span class=\"nt\">_answers_file</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.my-custom-answers.yml</span>\n</pre>\n<h3>Updating a project</h3>\n<p>The best way to update a project from its template is when all of these conditions are\ntrue:</p>\n<ol>\n<li>The template includes a valid <code>.copier-answers.yml</code> file.</li>\n<li>The template is versioned with git (with tags).</li>\n<li>The destination folder is versioned with git.</li>\n</ol>\n<p>If that's your case, then just enter the destination folder, make sure <code>git status</code>\nshows it clean, and run:</p>\n<pre>copier update\n</pre>\n<p>This will read all available git tags, will compare them using\n<a href=\"https://www.python.org/dev/peps/pep-0440/\" rel=\"nofollow\">PEP 440</a>, and will check out the latest one\nbefore updating. To update to the latest commit, add <code>--vcs-ref=HEAD</code>. You can use any\nother git ref you want.</p>\n<p>When updating, Copier will do its best to respect your project evolution by using the\nanswers you provided when copied last time. However, sometimes it's impossible for\nCopier to know what to do with a diff code hunk. In those cases, you will find <code>*.rej</code>\nfiles that contain the unresolved diffs. <em>You should review those manually</em> before\ncommitting.</p>\n<p>You probably don't want <code>*.rej</code> files in your git history, but if you add them to\n<code>.gitignore</code>, some important changes could pass unnoticed to you. That's why the\nrecommended way to deal with them is to <em>not</em> add them to add a\n<a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a> (or equivalent) hook that forbids them, just like\nthis:</p>\n<pre><span class=\"c1\"># .pre-commit-config.yaml</span>\n<span class=\"nt\">repos</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">local</span>\n    <span class=\"nt\">hooks</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">forbidden-files</span>\n        <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">forbidden files</span>\n        <span class=\"nt\">entry</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">found copier update rejection files; review them and remove them</span>\n        <span class=\"nt\">language</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">fail</span>\n        <span class=\"nt\">files</span><span class=\"p\">:</span> <span class=\"s\">\"\\\\.rej$\"</span>\n</pre>\n<h2>Patterns syntax</h2>\n<p>Copier supports matching names against patterns in a gitignore style fashion. This works\nfor the options <code>exclude</code> and <code>skip</code> . This means you can write patterns as you would\nfor any <code>.gitignore</code> file. The full range of the gitignore syntax ist supported via\n[pathspec](<a href=\"https://github.com/cpburnz/python-path-specification\" rel=\"nofollow\">https://github.com/cpburnz/python-path-specification</a>.</p>\n<h3>Examples for pattern matching</h3>\n<p>Putting the following settings in your <code>copier.yaml</code> file would exclude all files ending\nwith \"txt\" from being copied to the destination folder, except the file <code>a.txt</code>.</p>\n<pre><span class=\"nt\">_exclude</span><span class=\"p\">:</span>\n  <span class=\"c1\"># match all text files...</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*.txt\"</span>\n  <span class=\"c1\"># .. but not this one:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"!a.txt\"</span>\n</pre>\n<h2>Template helpers</h2>\n<p>In addition to\n<a href=\"https://jinja.palletsprojects.com/en/2.10.x/templates/\" rel=\"nofollow\">all the features Jinja supports</a>,\nCopier includes:</p>\n<h3>Builtin variables/functions</h3>\n<ul>\n<li><code>now()</code> to get current UTC time.</li>\n<li><code>make_secret()</code> to get a random string.</li>\n<li><code>_copier_answers</code> includes the current answers dict, but slightly modified to make it\nsuitable to <a href=\"#the-answers-file\" rel=\"nofollow\">autoupdate your project safely</a>:\n<ul>\n<li>It doesn't contain secret answers.</li>\n<li>It doesn't contain any data that is not easy to render to JSON or YAML.</li>\n</ul>\n</li>\n<li><code>_copier_conf</code> includes the current copier <code>ConfigData</code> object, also slightly\nmodified:\n<ul>\n<li>It only contains JSON-serializable data.</li>\n<li>But you have to serialize it with <code>[[ _copier_conf.json() ]]</code> instead of\n<code>[[ _copier_conf|tojson ]]</code>.</li>\n<li>\u26a0\ufe0f It contains secret answers inside its <code>.data</code> key.</li>\n<li>Modifying it doesn't alter the current rendering configuration.</li>\n</ul>\n</li>\n</ul>\n<h3>Builtin filters</h3>\n<ul>\n<li>\n<p><code>anything|to_nice_yaml</code> to print as pretty-formatted YAML.</p>\n<p>Without arguments it defaults to:\n<code>anything|to_nice_yaml(indent=2, width=80, allow_unicode=True)</code>, but you can modify\nthose.</p>\n</li>\n</ul>\n<hr>\n<h2>API</h2>\n<h4>copier.copy()</h4>\n<pre><span class=\"n\">copier</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span>\n    <span class=\"n\">src_path</span><span class=\"p\">,</span>\n    <span class=\"n\">dst_path</span><span class=\"p\">,</span>\n\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_DATA</span><span class=\"p\">,</span>\n    <span class=\"o\">*</span><span class=\"p\">,</span>\n    <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_FILTER</span><span class=\"p\">,</span>\n    <span class=\"n\">skip_if_exists</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">tasks</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n\n    <span class=\"n\">envops</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n    <span class=\"n\">extra_paths</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n\n    <span class=\"n\">pretend</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">skip</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">cleanup_on_error</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Uses the template in <em>src_path</em> to generate a new project at <em>dst_path</em>.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li>\n<p><strong>src_path</strong> (str):<br> Absolute path to the project skeleton, which can also be a\nversion control system URL.</p>\n</li>\n<li>\n<p><strong>dst_path</strong> (str):<br> Absolute path to where to render the skeleton.</p>\n</li>\n<li>\n<p><strong>data</strong> (dict):<br> Data to be passed to the templates in addition to the user data\nfrom a <code>copier.yml</code>.</p>\n</li>\n<li>\n<p><strong>exclude</strong> (list):<br> A list of names or gitignore-style patterns matching files or\nfolders that must not be copied.</p>\n</li>\n<li>\n<p><strong>skip_if_exists</strong> (list):<br> A list of names or gitignore-style patterns matching\nfiles or folders, that are skipped if another with the same name already exists in the\ndestination folder. (It only makes sense if you are copying to a folder that already\nexists).</p>\n</li>\n<li>\n<p><strong>tasks</strong> (list):<br> Optional lists of commands to run in order after finishing the\ncopy. Like in the templates files, you can use variables on the commands that will be\nreplaced by the real values before running the command. If one of the commands fails,\nthe rest of them will not run.</p>\n</li>\n<li>\n<p><strong>envops</strong> (dict):<br> Extra options for the Jinja template environment. See available\noptions in\n<a href=\"https://jinja.palletsprojects.com/en/2.10.x/api/#jinja2.Environment\" rel=\"nofollow\">Jinja's docs</a>.</p>\n<p>Copier uses these defaults that are different from Jinja's:</p>\n<pre># copier.yml\n_envops:\n  block_start_string: \"[%\"\n  block_end_string: \"%]\"\n  comment_start_string: \"[#\"\n  comment_end_string: \"#]\"\n  variable_start_string: \"[[\"\n  variable_end_string: \"]]\"\n  keep_trailing_newline: true\n</pre>\n<p>You can use default Jinja syntax with:</p>\n<pre># copier.yml\n_envops:\n  block_start_string: \"{%\"\n  block_end_string: \"%}\"\n  comment_start_string: \"{#\"\n  comment_end_string: \"#}\"\n  variable_start_string: \"{{\"\n  variable_end_string: \"}}\"\n  keep_trailing_newline: false\n</pre>\n</li>\n<li>\n<p><strong>extra_paths</strong> (list):<br> Additional paths, from where to search for templates. This\nis intended to be used with shared parent templates, files with macros, etc. outside\nthe copied project skeleton.</p>\n</li>\n<li>\n<p><strong>pretend</strong> (bool):<br> Run but do not make any changes.</p>\n</li>\n<li>\n<p><strong>force</strong> (bool):<br> Overwrite files that already exist, without asking.</p>\n</li>\n<li>\n<p><strong>skip</strong> (bool):<br> Skip files that already exist, without asking.</p>\n</li>\n<li>\n<p><strong>quiet</strong> (bool):<br> Suppress the status output.</p>\n</li>\n<li>\n<p><strong>cleanup_on_error</strong> (bool):<br> Remove the destination folder if the copy process or\none of the tasks fails. True by default.</p>\n</li>\n</ul>\n<h2>Credits</h2>\n<p>Special thanks go to\n<a href=\"%5Bhttps://github.com/jpscaletti%5D(https://github.com/jpscaletti)\" rel=\"nofollow\">jpscaletti</a> for\noriginally creating <code>Copier</code>. This project would not be a thing without him.</p>\n<p>Big thanks also go to <a href=\"%5Bhttps://github.com/Yajo%5D(https://github.com/Yajo)\" rel=\"nofollow\">Yajo</a> for\nhis relentless zest for improving <code>Copier</code> even further.</p>\n\n          </div>"}, "last_serial": 7009409, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "a4480df72158bc0e9137a75bab9af202", "sha256": "5436b0eb495d49dae0b5c2eefe8076c2244dc49339bffaafa54167863ddbc1e1"}, "downloads": -1, "filename": "Copier-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a4480df72158bc0e9137a75bab9af202", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 22786, "upload_time": "2019-02-07T18:11:25", "upload_time_iso_8601": "2019-02-07T18:11:25.921850Z", "url": "https://files.pythonhosted.org/packages/50/02/1e9f1b02f60153ec324cd8b42d252dcbc7656143c1b2bc52ef0fc6aa095c/Copier-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15fecec0099931994553c3508e888479", "sha256": "83f9a1aef9e3b1a430d9700356a3dca2c6304d989070d9809410ac6b34189cbb"}, "downloads": -1, "filename": "Copier-2.0.0.tar.gz", "has_sig": false, "md5_digest": "15fecec0099931994553c3508e888479", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 10051, "upload_time": "2019-02-07T18:11:27", "upload_time_iso_8601": "2019-02-07T18:11:27.663682Z", "url": "https://files.pythonhosted.org/packages/72/ca/d02b2a43982a054c7359cc3743bd10fe1b729abacd3941f986dfc844bdd1/Copier-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "2b7e7bf4178d5bdb55e13e6bbd06a96a", "sha256": "d2280b0fec322c7a9ffcb17df05a9fcb7b7e55cc4c30adce49c0e41c2b2df300"}, "downloads": -1, "filename": "Copier-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b7e7bf4178d5bdb55e13e6bbd06a96a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 22790, "upload_time": "2019-02-07T20:02:02", "upload_time_iso_8601": "2019-02-07T20:02:02.696712Z", "url": "https://files.pythonhosted.org/packages/d0/ee/c8e780548d14e8d567df46326ea947fad9db03045444169f5bf292cee621/Copier-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "accef211b76b5b639011b6c82647329b", "sha256": "61c06fbcff7ef72b522f863ccf0c34ce3bafffae1b8f49657ab3fc1e8f8ad93e"}, "downloads": -1, "filename": "Copier-2.0.1.tar.gz", "has_sig": false, "md5_digest": "accef211b76b5b639011b6c82647329b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 10059, "upload_time": "2019-02-07T20:02:08", "upload_time_iso_8601": "2019-02-07T20:02:08.206760Z", "url": "https://files.pythonhosted.org/packages/a3/e3/1491128acdeb20bb44c725552c727838bb24fcf6bd0660bb6696d4713a41/Copier-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "758f6bc66856e7f75df29c906c7fb8e4", "sha256": "723af43c3118526b71eed37fe338080b4e4eac43fdb3be58ef8d7e78e246d4c3"}, "downloads": -1, "filename": "Copier-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "758f6bc66856e7f75df29c906c7fb8e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 24339, "upload_time": "2019-02-08T16:12:55", "upload_time_iso_8601": "2019-02-08T16:12:55.782636Z", "url": "https://files.pythonhosted.org/packages/b6/b3/5b5f28145b4504b9cf8d387429c2995b61882e5d823ae543172d08b602ae/Copier-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68fce1fe51002e0b91dfb8ddb9c6b921", "sha256": "0543e24adcf851ac1ea17347d693992ddf9cc465dedad0cf44f65df3bfa80a79"}, "downloads": -1, "filename": "Copier-2.1.0.tar.gz", "has_sig": false, "md5_digest": "68fce1fe51002e0b91dfb8ddb9c6b921", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 11303, "upload_time": "2019-02-08T16:12:57", "upload_time_iso_8601": "2019-02-08T16:12:57.154009Z", "url": "https://files.pythonhosted.org/packages/c7/09/88500db6a468956c0118ae1801a9c83c1841e29fac0143f038595aa56c54/Copier-2.1.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "0b7e5fb37983ce037c869ae1d89fadc1", "sha256": "4af94031fa0ec07b99377c7a248689812c029ab7f9cbb6ecf8ad3d1b0656e96a"}, "downloads": -1, "filename": "Copier-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b7e5fb37983ce037c869ae1d89fadc1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 24438, "upload_time": "2019-04-05T15:41:14", "upload_time_iso_8601": "2019-04-05T15:41:14.788936Z", "url": "https://files.pythonhosted.org/packages/90/12/a230f8c68d4147377c9412f028768ad7e99de8f4f859a9535a9a67628e01/Copier-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7ad589ba62e90560a78f51d3073e222", "sha256": "5ff92b51f0871a31cdbc7a4b3a745b247d798201fd6f226b1b92b414febda5f1"}, "downloads": -1, "filename": "Copier-2.2.1.tar.gz", "has_sig": false, "md5_digest": "e7ad589ba62e90560a78f51d3073e222", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 11374, "upload_time": "2019-04-05T15:41:16", "upload_time_iso_8601": "2019-04-05T15:41:16.173593Z", "url": "https://files.pythonhosted.org/packages/e1/51/57116a80167b3100cee854b490feaf688a23f2728f072dd03d456a78c1ea/Copier-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "58e667ee19fd16647574be2093213849", "sha256": "98da00cd840b0b9ebd8ba443d5980d2c76228d365bcf90e48c8e45aa1b97be38"}, "downloads": -1, "filename": "Copier-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "58e667ee19fd16647574be2093213849", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 24600, "upload_time": "2019-04-05T22:39:15", "upload_time_iso_8601": "2019-04-05T22:39:15.024234Z", "url": "https://files.pythonhosted.org/packages/49/82/73bb22c9b3eb0ae7146de584b9b99a7c8fa49778c64236404765c6622749/Copier-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e209d2f16a5162c6dacfd8bf177b03c3", "sha256": "b3413b2927a349753d11a39b8877a368f20aefa5df3f932c19b1aa0f3aeadb15"}, "downloads": -1, "filename": "Copier-2.2.2.tar.gz", "has_sig": false, "md5_digest": "e209d2f16a5162c6dacfd8bf177b03c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 11438, "upload_time": "2019-04-05T22:39:16", "upload_time_iso_8601": "2019-04-05T22:39:16.536449Z", "url": "https://files.pythonhosted.org/packages/16/81/a703baf821958d3829e469144bd8d0f7c8125a1a738e30815866414e1207/Copier-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "97ce38d605b05035399226c42afa51e5", "sha256": "0041583d95d23a0a598c5e8eb77e08e61660e662842282eb0a9771d3dc17a155"}, "downloads": -1, "filename": "Copier-2.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "97ce38d605b05035399226c42afa51e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12178, "upload_time": "2019-04-13T02:56:32", "upload_time_iso_8601": "2019-04-13T02:56:32.296989Z", "url": "https://files.pythonhosted.org/packages/73/7c/99c02ff41b0d2cb884abbf78c0f3a75fd9f419d5526f6cfb677099db7771/Copier-2.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19ad396bf47e9d1bd1539eb7504e9246", "sha256": "50aac270e4e8725f1ea93cd0e3a38b5b3c6d016a024b420a777335816d3ae24a"}, "downloads": -1, "filename": "Copier-2.2.3.tar.gz", "has_sig": false, "md5_digest": "19ad396bf47e9d1bd1539eb7504e9246", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 9731, "upload_time": "2019-04-13T02:56:33", "upload_time_iso_8601": "2019-04-13T02:56:33.857832Z", "url": "https://files.pythonhosted.org/packages/cf/3f/774b3d2cbdbe6e7d7cc8150f59862189bf11d4c149812c230e64faa7f6ae/Copier-2.2.3.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "7a651406c8d5c791f585383b93b5f325", "sha256": "c30942893b4f7315bf46c7d9fa5cd1e39c859b7f950c52dceb5bc95feb54c66d"}, "downloads": -1, "filename": "Copier-2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7a651406c8d5c791f585383b93b5f325", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12063, "upload_time": "2019-04-17T04:22:39", "upload_time_iso_8601": "2019-04-17T04:22:39.503214Z", "url": "https://files.pythonhosted.org/packages/ec/3c/199a1d01923be3ce6c8530c7c663dfae1a631fd0fc6934471f532ec5adea/Copier-2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "337b20e4168dee5aae619cce327f79c4", "sha256": "592a0876a8b34444d053c516dd0a613fb439ba2c7e18ded374ff25b8f6ee4417"}, "downloads": -1, "filename": "Copier-2.3.tar.gz", "has_sig": false, "md5_digest": "337b20e4168dee5aae619cce327f79c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 9597, "upload_time": "2019-04-17T04:22:41", "upload_time_iso_8601": "2019-04-17T04:22:41.286781Z", "url": "https://files.pythonhosted.org/packages/c5/67/17ecd972662bc15ebafa4f3329d4716c365a763639c2dccb1b1f15de0783/Copier-2.3.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "154c8d7811c52f8138fbbbba232b1bd2", "sha256": "bfc9dc3d0efd29299dd705487495231823b01522a4457c3fc09581a0450a7206"}, "downloads": -1, "filename": "Copier-2.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "154c8d7811c52f8138fbbbba232b1bd2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12269, "upload_time": "2019-04-17T20:26:36", "upload_time_iso_8601": "2019-04-17T20:26:36.041418Z", "url": "https://files.pythonhosted.org/packages/d5/2d/96683cff6c882569ae1fe0c3e3d253f0cb783c5a50d4aea9c2dcaf552706/Copier-2.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16bb015928635060d8f3fdfc4f37f52a", "sha256": "3cad12627f2098c0b0f7c09507b023a2a009fa9bbb07c47012eb378ffcf3fe89"}, "downloads": -1, "filename": "Copier-2.3.1.tar.gz", "has_sig": false, "md5_digest": "16bb015928635060d8f3fdfc4f37f52a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 9777, "upload_time": "2019-04-17T20:26:37", "upload_time_iso_8601": "2019-04-17T20:26:37.501416Z", "url": "https://files.pythonhosted.org/packages/9f/66/b3b9d9bbf41090c3dd79f65bf58cc27001443f10c294f411cb91a73fe18e/Copier-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "bcbea96c12499097a76704645e7694f0", "sha256": "c0ef7c2c1d1ac5f8b257591edfc4f38218eb948dadffd7136329256d8c1f9d34"}, "downloads": -1, "filename": "Copier-2.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bcbea96c12499097a76704645e7694f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12190, "upload_time": "2019-04-17T22:47:47", "upload_time_iso_8601": "2019-04-17T22:47:47.626240Z", "url": "https://files.pythonhosted.org/packages/d5/62/7c0615a3c40be1c8e3f9bffdf253b0b52056c39d19ff70444ed40b2f6e2b/Copier-2.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43e5f8bf95647460ac6cda080964416d", "sha256": "2ea9208d183805d4afc4520a3a1df7439ccdd659775ea3c9c0175d62756da6b4"}, "downloads": -1, "filename": "Copier-2.3.2.tar.gz", "has_sig": false, "md5_digest": "43e5f8bf95647460ac6cda080964416d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 9685, "upload_time": "2019-04-17T22:47:49", "upload_time_iso_8601": "2019-04-17T22:47:49.559372Z", "url": "https://files.pythonhosted.org/packages/05/bc/b50edb5fddfc4782f04b14c869e636b8db807543697d0a2faa7f64d89dcf/Copier-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "c37618e848fc3bd1c9802a8e10896315", "sha256": "6075e59f86e0009eba562be1ef36ca020e061305c96f670ea2b4ef5648ccde6d"}, "downloads": -1, "filename": "Copier-2.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c37618e848fc3bd1c9802a8e10896315", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12190, "upload_time": "2019-04-17T23:05:58", "upload_time_iso_8601": "2019-04-17T23:05:58.767197Z", "url": "https://files.pythonhosted.org/packages/04/08/64c3582be7b0bd7f0526556168dcf958c37b3d64ccd35efd08948e43833c/Copier-2.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "746c478d8e90726f4783998853940591", "sha256": "4a9c5e71c8b1488e60a7db1fda73bdef2ade83a696e690a5b1bc5e21f94bbf28"}, "downloads": -1, "filename": "Copier-2.3.3.tar.gz", "has_sig": false, "md5_digest": "746c478d8e90726f4783998853940591", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 9680, "upload_time": "2019-04-17T23:06:01", "upload_time_iso_8601": "2019-04-17T23:06:01.010585Z", "url": "https://files.pythonhosted.org/packages/10/3c/cdfd4b5ea2622f1cce0ce146e9bf3b34550121f3508d1a83d974ab6e1209/Copier-2.3.3.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "fc420f8dab9bf824d4bd33aaae833c42", "sha256": "a1838d24c3f310704a8dc2ee4aff76248f0cf5140d7bcdda37b529d1f1a6b604"}, "downloads": -1, "filename": "Copier-2.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc420f8dab9bf824d4bd33aaae833c42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12693, "upload_time": "2019-06-08T17:17:10", "upload_time_iso_8601": "2019-06-08T17:17:10.184074Z", "url": "https://files.pythonhosted.org/packages/bf/f4/676645392d67cac678e5cca0e9677d2c171a4d5c55a2809ce99fe0fb6865/Copier-2.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de877c77652d18a949d4c6d29c8e87b5", "sha256": "3a8161a5b813508cfb9c143ab0298757327bad8afddf0b8346208bd1464faefd"}, "downloads": -1, "filename": "Copier-2.4.0.tar.gz", "has_sig": false, "md5_digest": "de877c77652d18a949d4c6d29c8e87b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 10186, "upload_time": "2019-06-08T17:17:12", "upload_time_iso_8601": "2019-06-08T17:17:12.217545Z", "url": "https://files.pythonhosted.org/packages/6e/b3/d73f7dc055073221b5cf2ea6c23c9f337d77f0fb901e67bd35d5361a4075/Copier-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "80521f1edae566d34ae978b4a056118b", "sha256": "1e1a4d59e57372d41bb157c2346a10f3e62f59e0a89ffd7312e2af95201dfef6"}, "downloads": -1, "filename": "Copier-2.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "80521f1edae566d34ae978b4a056118b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12697, "upload_time": "2019-06-08T17:22:05", "upload_time_iso_8601": "2019-06-08T17:22:05.017861Z", "url": "https://files.pythonhosted.org/packages/e7/71/3f442cad0e1fcbde2f585be9edd855a11f5472fac1a4f3564160a07c353b/Copier-2.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e129254a1232661ccad0834db3a1aac", "sha256": "4e26e61a54f1ea6d09e02ce584bbcaab4177488f6ab961067fc0b8a94f6abd7b"}, "downloads": -1, "filename": "Copier-2.4.1.tar.gz", "has_sig": false, "md5_digest": "6e129254a1232661ccad0834db3a1aac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 10200, "upload_time": "2019-06-08T17:22:07", "upload_time_iso_8601": "2019-06-08T17:22:07.773616Z", "url": "https://files.pythonhosted.org/packages/82/e8/924d2d3a92997a1d8692266b8d51579477bde17824081b0eae29bf938c88/Copier-2.4.1.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "5e6f1064fc1578e534cba3e03fb849c9", "sha256": "d1e011d0fe6cf9bb61b569d5689ce5809a5ff34ea7213b92dd4222a826e154cc"}, "downloads": -1, "filename": "Copier-2.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5e6f1064fc1578e534cba3e03fb849c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 12807, "upload_time": "2019-06-09T04:02:22", "upload_time_iso_8601": "2019-06-09T04:02:22.532260Z", "url": "https://files.pythonhosted.org/packages/f6/4a/0bf4f1178fa7c177d7d5976477314caf2a35c08474cb3332523e05a4ca14/Copier-2.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0eb4440361b061ef99e8caa743fed076", "sha256": "74439301a8e3214ac92cda22cdc86f34d28813d083a78e47f021a8eb80a13b8f"}, "downloads": -1, "filename": "Copier-2.4.2.tar.gz", "has_sig": false, "md5_digest": "0eb4440361b061ef99e8caa743fed076", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 10318, "upload_time": "2019-06-09T04:02:24", "upload_time_iso_8601": "2019-06-09T04:02:24.657331Z", "url": "https://files.pythonhosted.org/packages/9c/53/0fc60e8c49b77440c917158f551af0215bd5dbe603c4e92b73d5e57f5b1b/Copier-2.4.2.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "98206ca2c7f0e907fe7d112ecf8d83b0", "sha256": "3df2a62fa8f367fa061b02ebd4d34be9746192923d18b22b40e3adaa25b51c38"}, "downloads": -1, "filename": "copier-2.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "98206ca2c7f0e907fe7d112ecf8d83b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5,<4.0", "size": 13767, "upload_time": "2019-06-16T03:16:59", "upload_time_iso_8601": "2019-06-16T03:16:59.251066Z", "url": "https://files.pythonhosted.org/packages/51/09/5ebb648501cf10fd2272f43a22635202e886ea39238dcac2582adf464af6/copier-2.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2904233d67bef3862b1646af1e5a8cab", "sha256": "ecb8bf496534d12f1f78bff5d39e61e7feb213e79ce4011c9d52a51068cf1d90"}, "downloads": -1, "filename": "copier-2.5.0.tar.gz", "has_sig": false, "md5_digest": "2904233d67bef3862b1646af1e5a8cab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 13303, "upload_time": "2019-06-16T03:17:01", "upload_time_iso_8601": "2019-06-16T03:17:01.106049Z", "url": "https://files.pythonhosted.org/packages/82/e2/079e4d5ba5764d297c9bdf77db176392b17a4da78827b6c3375c44c8b57f/copier-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "af1f3fcc29676e48257f47c5f450b746", "sha256": "6feccafe52131c10aba1dc320ad5edf7c1daee0341c7b9bca7d83b23e527cad2"}, "downloads": -1, "filename": "copier-2.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af1f3fcc29676e48257f47c5f450b746", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5,<4.0", "size": 13779, "upload_time": "2019-06-18T16:33:45", "upload_time_iso_8601": "2019-06-18T16:33:45.331484Z", "url": "https://files.pythonhosted.org/packages/cd/da/2fbe0bdc9483070c5f00679c218859d2c3c4fe3f86f6d5eedca7156e06ee/copier-2.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99aaffabe4e7928ee87799ae8f4b5dc2", "sha256": "c12b255a8d57d08ec36b47e7b3fccbaaf7f57cfdfad56e94720ab148482f482c"}, "downloads": -1, "filename": "copier-2.5.1.tar.gz", "has_sig": false, "md5_digest": "99aaffabe4e7928ee87799ae8f4b5dc2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 13987, "upload_time": "2019-06-18T16:33:47", "upload_time_iso_8601": "2019-06-18T16:33:47.999099Z", "url": "https://files.pythonhosted.org/packages/6a/15/30568af55a8da45cb690cbf767b7a9a0b65dce96f3bcc5d3df1d8d43e58b/copier-2.5.1.tar.gz", "yanked": false}], "3.0.0a3": [{"comment_text": "", "digests": {"md5": "4a9501785bb8aa6559fe97d29bb603fb", "sha256": "e11d65ce409ca193fb2261779036490ea8a74b3bbb9f192e1fd65cc7b1b42ad6"}, "downloads": -1, "filename": "copier-3.0.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "4a9501785bb8aa6559fe97d29bb603fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 21640, "upload_time": "2020-02-27T18:28:41", "upload_time_iso_8601": "2020-02-27T18:28:41.567365Z", "url": "https://files.pythonhosted.org/packages/e6/97/d8e42b11da8a622de5d2aa14aa769d7cbaca886ab2269c25d853f9fcbcac/copier-3.0.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69b138529efeca6e77a1f58317e32568", "sha256": "cb5bd1eaaabb96f54e852867933faa8785cd73297214aa8ac5c7c728188ccc64"}, "downloads": -1, "filename": "copier-3.0.0a3.tar.gz", "has_sig": false, "md5_digest": "69b138529efeca6e77a1f58317e32568", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 24144, "upload_time": "2020-02-27T18:28:42", "upload_time_iso_8601": "2020-02-27T18:28:42.898123Z", "url": "https://files.pythonhosted.org/packages/bc/d6/63be50ff66ef70d8351f9a287450a6eac8b48ad8e8ed930d6763fbcb7aaa/copier-3.0.0a3.tar.gz", "yanked": false}], "3.0.0a5": [{"comment_text": "", "digests": {"md5": "a975289a60f8c1261cae7e1d20778236", "sha256": "341855b232fe3139b20df1dca800370105b4ca96a2e2af52c474e1d7ea81860e"}, "downloads": -1, "filename": "copier-3.0.0a5-py3-none-any.whl", "has_sig": false, "md5_digest": "a975289a60f8c1261cae7e1d20778236", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22337, "upload_time": "2020-03-03T13:36:52", "upload_time_iso_8601": "2020-03-03T13:36:52.196635Z", "url": "https://files.pythonhosted.org/packages/4e/fc/94fe144862f38a4d8d41d9ba13976443d4301780a2fb02b6dd0c7ba6824c/copier-3.0.0a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ba2e740ae87dd866a9fc426b10275c9", "sha256": "309fb987201fe8106c142226652837426fa59b17223e0c059fc063e2e09a4b31"}, "downloads": -1, "filename": "copier-3.0.0a5.tar.gz", "has_sig": false, "md5_digest": "1ba2e740ae87dd866a9fc426b10275c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 25400, "upload_time": "2020-03-03T13:36:53", "upload_time_iso_8601": "2020-03-03T13:36:53.523875Z", "url": "https://files.pythonhosted.org/packages/40/24/24927b145d2da5df4096af0ee55f1b4327b3d418d04e0d31019947d172e4/copier-3.0.0a5.tar.gz", "yanked": false}], "3.0.0a6": [{"comment_text": "", "digests": {"md5": "23d07dbea049511d328fc1ef4c4e3c63", "sha256": "b6c03b242087f49b29742f9526eec79b48b33198b5361c621b458878dd2aba6f"}, "downloads": -1, "filename": "copier-3.0.0a6-py3-none-any.whl", "has_sig": false, "md5_digest": "23d07dbea049511d328fc1ef4c4e3c63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22287, "upload_time": "2020-03-04T13:54:30", "upload_time_iso_8601": "2020-03-04T13:54:30.045348Z", "url": "https://files.pythonhosted.org/packages/10/46/5226639f300a42fcc8b3ac62fc6bd46484bb31580b52ceb2b10f43613d9e/copier-3.0.0a6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ed9ab2182acf00cbfb13d7a600deaa", "sha256": "523a0a68cd49a58832ec91783f742c7f338be473715e1e789b2a6bfe67425efc"}, "downloads": -1, "filename": "copier-3.0.0a6.tar.gz", "has_sig": false, "md5_digest": "f1ed9ab2182acf00cbfb13d7a600deaa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 25355, "upload_time": "2020-03-04T13:54:31", "upload_time_iso_8601": "2020-03-04T13:54:31.102032Z", "url": "https://files.pythonhosted.org/packages/23/bb/173deb4c260989f5033e06fd93fc1aa44e92c136791031fc5cc1561fe940/copier-3.0.0a6.tar.gz", "yanked": false}], "3.0.0a7": [{"comment_text": "", "digests": {"md5": "c76a043b56a998e7913dc1baefd2a137", "sha256": "9c8e52f194994b6f3381963239a365550fbc188e3a6d17db1e88033ebd79480c"}, "downloads": -1, "filename": "copier-3.0.0a7-py3-none-any.whl", "has_sig": false, "md5_digest": "c76a043b56a998e7913dc1baefd2a137", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 22851, "upload_time": "2020-03-15T17:38:44", "upload_time_iso_8601": "2020-03-15T17:38:44.150691Z", "url": "https://files.pythonhosted.org/packages/95/04/f4936e7f196da51e5a7ad22eb47f14d001fe0e6c8b7fe3f1567be7a5a899/copier-3.0.0a7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9984522574b114f1209a7231078c8a47", "sha256": "ec365cff7935b4b828674f023a39b31e8704d04557059548f6fb52ebc3b723a2"}, "downloads": -1, "filename": "copier-3.0.0a7.tar.gz", "has_sig": false, "md5_digest": "9984522574b114f1209a7231078c8a47", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 26747, "upload_time": "2020-03-15T17:38:45", "upload_time_iso_8601": "2020-03-15T17:38:45.501694Z", "url": "https://files.pythonhosted.org/packages/49/95/ff0d88b9d091d8fdfd33bf86870851356715bcf5e7d91f1e59037e945f15/copier-3.0.0a7.tar.gz", "yanked": false}], "3.0.0a8": [{"comment_text": "", "digests": {"md5": "40d440d6bf402fb29a726a274ed5d5bb", "sha256": "7e5371610184b5f90ee3a1ee8281538a1d9d955a1836154ab90625604efd2918"}, "downloads": -1, "filename": "copier-3.0.0a8-py3-none-any.whl", "has_sig": false, "md5_digest": "40d440d6bf402fb29a726a274ed5d5bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23064, "upload_time": "2020-03-16T12:56:53", "upload_time_iso_8601": "2020-03-16T12:56:53.626685Z", "url": "https://files.pythonhosted.org/packages/af/be/76b7216d6a5cdf9a8c19267985a276b3ca8089351cfe5153cb8262618108/copier-3.0.0a8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1156dafddec4c1e7085fdd2988d68007", "sha256": "c036100f32b4bf5a30be38461dea1e7fa48bd3d5cf907fa5e2698681059ac4b5"}, "downloads": -1, "filename": "copier-3.0.0a8.tar.gz", "has_sig": false, "md5_digest": "1156dafddec4c1e7085fdd2988d68007", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27160, "upload_time": "2020-03-16T12:56:54", "upload_time_iso_8601": "2020-03-16T12:56:54.912257Z", "url": "https://files.pythonhosted.org/packages/26/c9/6bf46725113982cdef3b16e5315359603fa267fed99f5d8ac25d49d2e646/copier-3.0.0a8.tar.gz", "yanked": false}], "3.0.0b1": [{"comment_text": "", "digests": {"md5": "2b1c329e789328ac94f13c89904bc8b8", "sha256": "b2d01f8840bb90e1ba74de3c31b6e23ed967c146b8a811b89736a0ba130d3ad9"}, "downloads": -1, "filename": "copier-3.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1c329e789328ac94f13c89904bc8b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23074, "upload_time": "2020-03-18T10:48:05", "upload_time_iso_8601": "2020-03-18T10:48:05.461746Z", "url": "https://files.pythonhosted.org/packages/15/f1/f4071f5ac6669257d581e32669784083cbbdbcb19ec0bd38f72232a4fae1/copier-3.0.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5345dc40849c84ed9c0ff851892199c8", "sha256": "a7fbee0c01129aec14b32c73f83adc58c1423cf34b982bc6fe70338fc6aa49ba"}, "downloads": -1, "filename": "copier-3.0.0b1.tar.gz", "has_sig": false, "md5_digest": "5345dc40849c84ed9c0ff851892199c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27163, "upload_time": "2020-03-18T10:48:06", "upload_time_iso_8601": "2020-03-18T10:48:06.836658Z", "url": "https://files.pythonhosted.org/packages/ff/1a/e4068aefc48ee6e4dc3de0b1fbc8ca4dcc22fb6d6b8a5996381fe227480b/copier-3.0.0b1.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "c080cb6b086dc030c25f1ba8993e2325", "sha256": "544bdeea033fe112f6ce83173ba3e094c5148fdd4dc32c9daed4ea7571a6c2da"}, "downloads": -1, "filename": "copier-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c080cb6b086dc030c25f1ba8993e2325", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23129, "upload_time": "2020-03-24T14:45:41", "upload_time_iso_8601": "2020-03-24T14:45:41.755682Z", "url": "https://files.pythonhosted.org/packages/63/11/57e6ffddbed36c8c08817e9c83ebfd756f1191303fee970dd88c822c1b9f/copier-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0158c02fa75cc4d0b39acab970655655", "sha256": "5630bd9992a0f0dd7ba8fa36bfe42fef38104359561ed40359383ff910bcb9f8"}, "downloads": -1, "filename": "copier-3.0.1.tar.gz", "has_sig": false, "md5_digest": "0158c02fa75cc4d0b39acab970655655", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27245, "upload_time": "2020-03-24T14:45:42", "upload_time_iso_8601": "2020-03-24T14:45:42.898151Z", "url": "https://files.pythonhosted.org/packages/77/c2/26b3efddbb92b1e0bc3c6b417efff6a2acd4c76a12d01b471701e25a7f7a/copier-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "271a005de7b9ac1053dadf331644f708", "sha256": "c0ecf70cbe7df5973996b2fb52980005ec7282ccc05dbdd66293d9c900f075f5"}, "downloads": -1, "filename": "copier-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "271a005de7b9ac1053dadf331644f708", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23133, "upload_time": "2020-03-25T10:39:30", "upload_time_iso_8601": "2020-03-25T10:39:30.575915Z", "url": "https://files.pythonhosted.org/packages/ba/6d/4ea3496b873f2457819faec56fd277940fb4b52a5fda8c04fb7b8f650122/copier-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e96c8c0edd36645819e75a1b5b6c31f", "sha256": "61ab23c1e8e31d6ee9b4ad39cfe0e42d4ebdabdd19eec3b719b70af897d3a3a5"}, "downloads": -1, "filename": "copier-3.0.2.tar.gz", "has_sig": false, "md5_digest": "1e96c8c0edd36645819e75a1b5b6c31f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27232, "upload_time": "2020-03-25T10:39:32", "upload_time_iso_8601": "2020-03-25T10:39:32.087573Z", "url": "https://files.pythonhosted.org/packages/d4/3f/36bca0cc6c2e8da134c5f0e0f2dc88e68ea496a423d43525a09a3ca8bdd9/copier-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "54c3bff8d703c93c7464b0293a0a8e27", "sha256": "7d2b58cee2baabe29a5b87a0efff6446fc524227409e63d955d5009a67b6fa79"}, "downloads": -1, "filename": "copier-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "54c3bff8d703c93c7464b0293a0a8e27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23179, "upload_time": "2020-03-27T11:53:58", "upload_time_iso_8601": "2020-03-27T11:53:58.196860Z", "url": "https://files.pythonhosted.org/packages/7a/57/c395b0a44820a62c228b24e98e8d0005059ab372514161f3137a5889f8b5/copier-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "379ab29b3ac5f31d252aab80b14c1ce8", "sha256": "ebe77d7e5d6b49107f35ec08b3c15e6131f08939ade165004444c357201a0cba"}, "downloads": -1, "filename": "copier-3.0.3.tar.gz", "has_sig": false, "md5_digest": "379ab29b3ac5f31d252aab80b14c1ce8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27262, "upload_time": "2020-03-27T11:53:59", "upload_time_iso_8601": "2020-03-27T11:53:59.152598Z", "url": "https://files.pythonhosted.org/packages/67/ee/37c03a4b4110fa99a7cd017eb0d2145e03797fe89ef6500567ab6d96de30/copier-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "72b870b00e3654557c0efc21694f9ed0", "sha256": "9177cac34a7111db6bb393b430d127ca4b90d3c08571432d23b4136afd531c19"}, "downloads": -1, "filename": "copier-3.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "72b870b00e3654557c0efc21694f9ed0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23188, "upload_time": "2020-03-27T12:42:01", "upload_time_iso_8601": "2020-03-27T12:42:01.586174Z", "url": "https://files.pythonhosted.org/packages/b4/bc/5159b6eeb8bf7f84a0fcedd55e0d5c0835a7ba0af344fa165ae46ff35c0c/copier-3.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "232aa1d43d13098789e3ef4f9e908850", "sha256": "5760f46b9e7c1117c90b163fb2ba17c214bbdae2e79b366d2738a83405a1d390"}, "downloads": -1, "filename": "copier-3.0.4.tar.gz", "has_sig": false, "md5_digest": "232aa1d43d13098789e3ef4f9e908850", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27288, "upload_time": "2020-03-27T12:42:02", "upload_time_iso_8601": "2020-03-27T12:42:02.645699Z", "url": "https://files.pythonhosted.org/packages/54/9f/b84be1f9219ea13072287fd5b937270c6fd61256cd740cd756ca34218ce4/copier-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "fe829bd5fd09d9be85c89180bf651f42", "sha256": "6086cfbe447dbd696a0f670df212fb50b6a0e99c45e07cc0f02b4ca07e6d9e41"}, "downloads": -1, "filename": "copier-3.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fe829bd5fd09d9be85c89180bf651f42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23720, "upload_time": "2020-04-08T11:14:12", "upload_time_iso_8601": "2020-04-08T11:14:12.034402Z", "url": "https://files.pythonhosted.org/packages/ad/98/9e5d14524933668d50f9e949f6ebd72b7c9891ee14fa167aee3baf7ca864/copier-3.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fdac1013f64028007f8114e507fb781", "sha256": "7415be8743d37047c056621ee7de2ae56368fbb947e9a91a2376829b2f9868e3"}, "downloads": -1, "filename": "copier-3.0.5.tar.gz", "has_sig": false, "md5_digest": "2fdac1013f64028007f8114e507fb781", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 27990, "upload_time": "2020-04-08T11:14:13", "upload_time_iso_8601": "2020-04-08T11:14:13.234863Z", "url": "https://files.pythonhosted.org/packages/e2/a7/cc1faf06d3c4311fe9e543071b05903650fd602d416a101bf4555273dea6/copier-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "128632d557530312b9ec540a88616fc0", "sha256": "e51926edf9885cfdf5b3176c02e5975db8bc5347548245a1fb0798547a391a62"}, "downloads": -1, "filename": "copier-3.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "128632d557530312b9ec540a88616fc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23936, "upload_time": "2020-04-13T11:40:56", "upload_time_iso_8601": "2020-04-13T11:40:56.839437Z", "url": "https://files.pythonhosted.org/packages/a7/60/1b7f49107af01dbfe53510b33d0b0aa3cc8c8f230c16a3d0b66c18d0fd08/copier-3.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b0260650da64f1b0286caad91b1ccde", "sha256": "848b639ae5bef036e50a051cd2f5db26ee1c8205055b805fbe6e098d03cd4be2"}, "downloads": -1, "filename": "copier-3.0.6.tar.gz", "has_sig": false, "md5_digest": "9b0260650da64f1b0286caad91b1ccde", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 28313, "upload_time": "2020-04-13T11:40:57", "upload_time_iso_8601": "2020-04-13T11:40:57.990578Z", "url": "https://files.pythonhosted.org/packages/64/3b/4f010ed6621ce9ad87a1e93f3305b7573eda619cdec0ad8c402de7464f81/copier-3.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "128632d557530312b9ec540a88616fc0", "sha256": "e51926edf9885cfdf5b3176c02e5975db8bc5347548245a1fb0798547a391a62"}, "downloads": -1, "filename": "copier-3.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "128632d557530312b9ec540a88616fc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23936, "upload_time": "2020-04-13T11:40:56", "upload_time_iso_8601": "2020-04-13T11:40:56.839437Z", "url": "https://files.pythonhosted.org/packages/a7/60/1b7f49107af01dbfe53510b33d0b0aa3cc8c8f230c16a3d0b66c18d0fd08/copier-3.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b0260650da64f1b0286caad91b1ccde", "sha256": "848b639ae5bef036e50a051cd2f5db26ee1c8205055b805fbe6e098d03cd4be2"}, "downloads": -1, "filename": "copier-3.0.6.tar.gz", "has_sig": false, "md5_digest": "9b0260650da64f1b0286caad91b1ccde", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 28313, "upload_time": "2020-04-13T11:40:57", "upload_time_iso_8601": "2020-04-13T11:40:57.990578Z", "url": "https://files.pythonhosted.org/packages/64/3b/4f010ed6621ce9ad87a1e93f3305b7573eda619cdec0ad8c402de7464f81/copier-3.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:18 2020"}