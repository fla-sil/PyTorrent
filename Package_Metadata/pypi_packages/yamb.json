{"info": {"author": "Ivan Kalinin", "author_email": "pupssman@yandex-team.ru", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development"], "description": "yamb\n====\n\n.. image:: https://travis-ci.org/yandex-qatools/yamb.svg?branch=master \n        :alt: Build Status\n        :target: https://travis-ci.org/yandex-qatools/yamb/\n\nYAml Meta Binding microframework\n\nDefine schema for YAML documents a-la SQLAlchemy to read, write and manipulate data like a python object.\n\n\nBasic example\n=============\n\n.. code:: python\n\n from yamb import Literal, Nested, Collection, YAMBObject\n\n\n class Address(YAMBObject):\n     city = Literal(default='New York')\n     street = Literal()\n\n class Person(YAMBObject):\n     name = Literal()\n     phone = Literal()\n     address = Nested(Address)\n\n     def lives_close_to(self, another_person):\n         return self.address.city == another_person.address.city\n\n class Phonebook(YAMBObject):\n     title = Literal()\n     people = Collection(Person)\n\n\n friends = Phonebook(title='Friends', people=[])\n\n friends.people.append(Person(name='Sue', phone='+12345', address=Address(street='Some blvd')))\n sam = Person(name='Sam', phone='+123456', address=Address(city='London', street='Picadilly'))\n friends.people += [sam]\n\n with open('friends.yml', 'w') as f:\n     f.write(friends._dump())\n\n parsed = Phonebook._load(open('friends.yml'))\n\n assert parsed.title == 'Friends'\n assert parsed.people[0].address.city == 'New York'\n assert parsed.people[1].name == 'Sam'", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "yamb", "package_url": "https://pypi.org/project/yamb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yamb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/yamb/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Lightweight test data generation framework", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"yamb\">\n<h2>yamb</h2>\n<a href=\"https://travis-ci.org/yandex-qatools/yamb/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51069d4e3d59239c621f73eeffc1334a0a4b68fb/68747470733a2f2f7472617669732d63692e6f72672f79616e6465782d7161746f6f6c732f79616d622e7376673f6272616e63683d6d6173746572\"></a>\n<p>YAml Meta Binding microframework</p>\n<p>Define schema for YAML documents a-la SQLAlchemy to read, write and manipulate data like a python object.</p>\n</div>\n<div id=\"basic-example\">\n<h2>Basic example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yamb</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">Nested</span><span class=\"p\">,</span> <span class=\"n\">Collection</span><span class=\"p\">,</span> <span class=\"n\">YAMBObject</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Address</span><span class=\"p\">(</span><span class=\"n\">YAMBObject</span><span class=\"p\">):</span>\n    <span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'New York'</span><span class=\"p\">)</span>\n    <span class=\"n\">street</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">YAMBObject</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">()</span>\n    <span class=\"n\">phone</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">()</span>\n    <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">Address</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">lives_close_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">another_person</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"o\">.</span><span class=\"n\">city</span> <span class=\"o\">==</span> <span class=\"n\">another_person</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"o\">.</span><span class=\"n\">city</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Phonebook</span><span class=\"p\">(</span><span class=\"n\">YAMBObject</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">()</span>\n    <span class=\"n\">people</span> <span class=\"o\">=</span> <span class=\"n\">Collection</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">friends</span> <span class=\"o\">=</span> <span class=\"n\">Phonebook</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Friends'</span><span class=\"p\">,</span> <span class=\"n\">people</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n<span class=\"n\">friends</span><span class=\"o\">.</span><span class=\"n\">people</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Sue'</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s1\">'+12345'</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"n\">street</span><span class=\"o\">=</span><span class=\"s1\">'Some blvd'</span><span class=\"p\">)))</span>\n<span class=\"n\">sam</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Sam'</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s1\">'+123456'</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s1\">'London'</span><span class=\"p\">,</span> <span class=\"n\">street</span><span class=\"o\">=</span><span class=\"s1\">'Picadilly'</span><span class=\"p\">))</span>\n<span class=\"n\">friends</span><span class=\"o\">.</span><span class=\"n\">people</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">sam</span><span class=\"p\">]</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'friends.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">friends</span><span class=\"o\">.</span><span class=\"n\">_dump</span><span class=\"p\">())</span>\n\n<span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">Phonebook</span><span class=\"o\">.</span><span class=\"n\">_load</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'friends.yml'</span><span class=\"p\">))</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">==</span> <span class=\"s1\">'Friends'</span>\n<span class=\"k\">assert</span> <span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">people</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"o\">.</span><span class=\"n\">city</span> <span class=\"o\">==</span> <span class=\"s1\">'New York'</span>\n<span class=\"k\">assert</span> <span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">people</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'Sam'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1347997, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "82de7b79cffcfd760d313dc634ad1fc3", "sha256": "c38218ff216ec3c25130db297e52547fcda3c1c6559281255bc32cdbf58a9eab"}, "downloads": -1, "filename": "yamb-0.1.tar.gz", "has_sig": false, "md5_digest": "82de7b79cffcfd760d313dc634ad1fc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3166, "upload_time": "2014-10-07T11:23:21", "upload_time_iso_8601": "2014-10-07T11:23:21.979564Z", "url": "https://files.pythonhosted.org/packages/d2/ca/027500429eaddf73da870c25e31ff9bb9f6bd5b4da6fd3d57463bb7e7021/yamb-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "343780fa6403c6c8a18c214f3909e6ce", "sha256": "d80073fae84b59f77c89a23de65a8c246a52b8f5921d82259d3f434c885bbb3b"}, "downloads": -1, "filename": "yamb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "343780fa6403c6c8a18c214f3909e6ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3135, "upload_time": "2014-10-07T11:43:06", "upload_time_iso_8601": "2014-10-07T11:43:06.399230Z", "url": "https://files.pythonhosted.org/packages/35/cf/f385544be36d1f065f8b5db5702683f511c618111692c9f014ccac1eb946/yamb-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "44b79596815746b870a8ae175463e037", "sha256": "5f6e6782739d1cb3468d432600023488b2633659a926807ce0ddc37068c5467a"}, "downloads": -1, "filename": "yamb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "44b79596815746b870a8ae175463e037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3135, "upload_time": "2014-12-17T16:52:51", "upload_time_iso_8601": "2014-12-17T16:52:51.288657Z", "url": "https://files.pythonhosted.org/packages/e3/d4/c872948ca3e2ef968a93b42c541f9121fcc9ebd629e6a38fdf6f35557e46/yamb-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44b79596815746b870a8ae175463e037", "sha256": "5f6e6782739d1cb3468d432600023488b2633659a926807ce0ddc37068c5467a"}, "downloads": -1, "filename": "yamb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "44b79596815746b870a8ae175463e037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3135, "upload_time": "2014-12-17T16:52:51", "upload_time_iso_8601": "2014-12-17T16:52:51.288657Z", "url": "https://files.pythonhosted.org/packages/e3/d4/c872948ca3e2ef968a93b42c541f9121fcc9ebd629e6a38fdf6f35557e46/yamb-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:27 2020"}