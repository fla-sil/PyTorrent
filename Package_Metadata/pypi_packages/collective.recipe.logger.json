{"info": {"author": "Poburynnyi Taras (potar)", "author_email": "poburynnyitaras@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Framework :: Buildout :: Recipe", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Software Development :: Build Tools"], "description": "Introduction\r\n============\r\n\r\nThis recipe creates the program daemon (logger) which is listening to the socket.\r\nIt generates logs in an appropriate format (JSON, CSV, PICKLE).\r\n\r\nExample usage\r\n-------------\r\nThe simplest way to use this recipe is to add it to your ``buildout.cfg`` like this::\r\n\r\n    [buildout]\r\n    parts = logger\r\n\r\n    [logger]\r\n    recipe = collective.recipe.logger\r\n\r\n\r\nGo to ``collective/recipe/logger/README.rst`` to see more details.\r\n\r\n\r\nDevelopment\r\n-----------\r\n\r\n- Code repository: https://github.com/potar/collective.recipe.logger\r\n\r\n- The code comes with a ``buildout.cfg``.  Please bootstrap the\r\n  buildout and run the created ``bin/test`` to see if the tests still\r\n  pass.  Please add tests if you add code.\r\n\r\n- Questions and comments send to the Plone product-developers list or to\r\n  potar: poburynnyitaras@gmail.com\r\n\r\nSupported options\r\n-----------------\r\nThe recipe supports the following options (none of which are needed by default):\r\n\r\n**ip**\r\n    It's a host ip. Default value: localhost\r\n\r\n**port**\r\n    It's an application (daemon) port.\r\n    Default value: 8090 (DEFAULT_TCP_LOGGING_PORT)\r\n\r\n**maxlen**\r\n    It's a circular buffer size.\r\n    Default value: 100. It means that you can store 100 records into storage.\r\n\r\n**mode**\r\n    It's file mode bits which is intended to the file storage.\r\n    Default value: 0644\r\n\r\n**format**\r\n    It's a storage type.\r\n    Options: 'csv', 'json', 'pickle'.\r\n    Default value: 'json'\r\n\r\n**eggs**\r\n    It sets up additional products. They help serialize objects.\r\n    For example, your object will not be a standard python collection so you need an appropriate class for this object.\r\n    If you use Plone I recommend you set up ``eggs = ${instance:eggs}``\r\n\r\n\r\nNotes\r\n-----\r\n\r\n* A storage filename is generated by id_generator (``src/collective/recipe/logger/utils.py``).\r\n\r\n\r\nContributors\r\n============\r\n\r\nTaras Poburynnyi (potar), Author\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n0.1.0b1\r\n-------\r\n\r\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/potar/collective.recipe.logger", "keywords": "buildout logger", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.recipe.logger", "package_url": "https://pypi.org/project/collective.recipe.logger/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.logger/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/potar/collective.recipe.logger"}, "release_url": "https://pypi.org/project/collective.recipe.logger/0.1.0b1/", "requires_dist": null, "requires_python": null, "summary": "This recipe logs an information into storage. It's a part of https://github.com/potar/dagger", "version": "0.1.0b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This recipe creates the program daemon (logger) which is listening to the socket.\nIt generates logs in an appropriate format (JSON, CSV, PICKLE).</p>\n<div id=\"example-usage\">\n<h3>Example usage</h3>\n<p>The simplest way to use this recipe is to add it to your <tt>buildout.cfg</tt> like this:</p>\n<pre>[buildout]\nparts = logger\n\n[logger]\nrecipe = collective.recipe.logger\n</pre>\n<p>Go to <tt>collective/recipe/logger/README.rst</tt> to see more details.</p>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<ul>\n<li>Code repository: <a href=\"https://github.com/potar/collective.recipe.logger\" rel=\"nofollow\">https://github.com/potar/collective.recipe.logger</a></li>\n<li>The code comes with a <tt>buildout.cfg</tt>.  Please bootstrap the\nbuildout and run the created <tt>bin/test</tt> to see if the tests still\npass.  Please add tests if you add code.</li>\n<li>Questions and comments send to the Plone product-developers list or to\npotar: <a href=\"mailto:poburynnyitaras%40gmail.com\">poburynnyitaras<span>@</span>gmail<span>.</span>com</a></li>\n</ul>\n</div>\n<div id=\"supported-options\">\n<h3>Supported options</h3>\n<p>The recipe supports the following options (none of which are needed by default):</p>\n<dl>\n<dt><strong>ip</strong></dt>\n<dd>It\u2019s a host ip. Default value: localhost</dd>\n<dt><strong>port</strong></dt>\n<dd>It\u2019s an application (daemon) port.\nDefault value: 8090 (DEFAULT_TCP_LOGGING_PORT)</dd>\n<dt><strong>maxlen</strong></dt>\n<dd>It\u2019s a circular buffer size.\nDefault value: 100. It means that you can store 100 records into storage.</dd>\n<dt><strong>mode</strong></dt>\n<dd>It\u2019s file mode bits which is intended to the file storage.\nDefault value: 0644</dd>\n<dt><strong>format</strong></dt>\n<dd>It\u2019s a storage type.\nOptions: \u2018csv\u2019, \u2018json\u2019, \u2018pickle\u2019.\nDefault value: \u2018json\u2019</dd>\n<dt><strong>eggs</strong></dt>\n<dd>It sets up additional products. They help serialize objects.\nFor example, your object will not be a standard python collection so you need an appropriate class for this object.\nIf you use Plone I recommend you set up <tt>eggs = ${instance:eggs}</tt></dd>\n</dl>\n</div>\n<div id=\"notes\">\n<h3>Notes</h3>\n<ul>\n<li>A storage filename is generated by id_generator (<tt>src/collective/recipe/logger/utils.py</tt>).</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Taras Poburynnyi (potar), Author</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"b1\"><span class=\"section-subtitle\">0.1.0b1</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 835390, "releases": {"0.1.0b1": [{"comment_text": "", "digests": {"md5": "b92ca9d29c6ef8c0d721ed3fc1b1b455", "sha256": "1bf468fb84fa347898258d9d094c1d9c655a422f0468290c7e715f130c51565c"}, "downloads": -1, "filename": "collective.recipe.logger-0.1.0b1.zip", "has_sig": false, "md5_digest": "b92ca9d29c6ef8c0d721ed3fc1b1b455", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22016, "upload_time": "2013-07-03T10:33:21", "upload_time_iso_8601": "2013-07-03T10:33:21.582672Z", "url": "https://files.pythonhosted.org/packages/49/c2/092efce688fc472a4c98c6de40ec0989252d21229e9a70dc33f4e6495339/collective.recipe.logger-0.1.0b1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b92ca9d29c6ef8c0d721ed3fc1b1b455", "sha256": "1bf468fb84fa347898258d9d094c1d9c655a422f0468290c7e715f130c51565c"}, "downloads": -1, "filename": "collective.recipe.logger-0.1.0b1.zip", "has_sig": false, "md5_digest": "b92ca9d29c6ef8c0d721ed3fc1b1b455", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22016, "upload_time": "2013-07-03T10:33:21", "upload_time_iso_8601": "2013-07-03T10:33:21.582672Z", "url": "https://files.pythonhosted.org/packages/49/c2/092efce688fc472a4c98c6de40ec0989252d21229e9a70dc33f4e6495339/collective.recipe.logger-0.1.0b1.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:55 2020"}