{"info": {"author": "Jan St\u00fcrtz", "author_email": "stuertz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Topic :: Office/Business :: Financial"], "description": "# Bunqexport\n\nAfter the some discussion in the lexware Finanzmanger forum, it looks\nlike the authors do not feel the need to integrate bunq into their\napplication (https://forum.lexware.de/threads/37851/)\n\nAlso in the bunq forums, no one seemed to have a prior solution\n(https://together.bunq.com/d/24026-lexware-quicken-finanzmanager-import-from-bunq).\n\nSo I decided to implement a simple export with python and the bunq\nrest API.\n\n## Features\n\n* Connect to bunq (https://www.bunq.com) API with a pregenerated API\n  key (see Tinker example: https://github.com/bunq/tinker_python)\n* Export payments from bunq as `json` and `csv` into one file per\n  account\n* support special `csv` format with timestamps in `DD.MM.YYYY` format\n  in timstamps, as expected from `Haufe-Lexware Finanzmanger`, when\n  mode is `lexware`\n* Unit testing using `nose`\n* Pre-commit checking with `pre-commit`\n\n## Usage\n\nInstall `bunqexport` and generate an export:\n\n```\n$ pip install bunqexport\n$ bunqexport --conf bunq-production.conf --mode lexware\n[INFO   ] Using conf: bunq-production.conf\n[INFO   ] found XX while fetching last 200 Payments for account XXXXXXX\n[INFO   ] Wrote bunq_XXXXXXX_Default.csv\n[INFO   ] Wrote bunq_XXXXXXX_Default.json\ncreated    type               counterparty_alias.name                   amount.currency amount.value description\n23.12.2019  CHECKOUT_MERCHANT                                      bunq  EUR              200.00                                    bunq account top up\n23.12.2019         MASTERCARD                    XXXXXXXXXXXXXXXXXXXXXX  EUR              -16.96               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n23.12.2019            SAVINGS                               XXXXXXXXXXX  EUR               -0.04\n24.12.2019            EBA_SCT                                XXXXXXXXXX  EUR              500.00                                                    ---\n27.12.2019            EBA_SCT  PayPal (Europe) S.a.r.l. et Cie., S.C.A.  EUR                0.13                           PAYPAL BEVEILIGINGSMAATREGEL\n27.12.2019            EBA_SCT  PayPal (Europe) S.a.r.l. et Cie., S.C.A.  EUR                0.03                           PAYPAL BEVEILIGINGSMAATREGEL\n...\n```\n\n## Contributing\n\nAny contributions are very welcome.\n\nWhen contributing to this repository, please first discuss the change\nyou wish to make via issue with the owners of this repository before\nmaking a change.\n\n### Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end\n   of the layer when doing a build.\n2. Document your changes (whereever useful), e.g in `README.md`.\n3. Use `pre-commit` hooks by installing `pip install\n   pre-commit` and run `pre-commit install`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stuertz/pybunqexport", "keywords": "open-banking sepa bunq finance api payment csv lexware finanzmanager", "license": "gpl-3.0", "maintainer": "", "maintainer_email": "", "name": "bunqexport", "package_url": "https://pypi.org/project/bunqexport/", "platform": "", "project_url": "https://pypi.org/project/bunqexport/", "project_urls": {"Homepage": "https://github.com/stuertz/pybunqexport"}, "release_url": "https://pypi.org/project/bunqexport/0.0.1/", "requires_dist": ["bunq-sdk", "pandas", "nose ; extra == 'dev'", "pre-commit ; extra == 'dev'", "safety ; extra == 'dev'", "flake8 ; extra == 'dev'", "pylint ; extra == 'dev'", "autopep8 ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Convert bunq payments to csv", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bunqexport</h1>\n<p>After the some discussion in the lexware Finanzmanger forum, it looks\nlike the authors do not feel the need to integrate bunq into their\napplication (<a href=\"https://forum.lexware.de/threads/37851/\" rel=\"nofollow\">https://forum.lexware.de/threads/37851/</a>)</p>\n<p>Also in the bunq forums, no one seemed to have a prior solution\n(<a href=\"https://together.bunq.com/d/24026-lexware-quicken-finanzmanager-import-from-bunq\" rel=\"nofollow\">https://together.bunq.com/d/24026-lexware-quicken-finanzmanager-import-from-bunq</a>).</p>\n<p>So I decided to implement a simple export with python and the bunq\nrest API.</p>\n<h2>Features</h2>\n<ul>\n<li>Connect to bunq (<a href=\"https://www.bunq.com\" rel=\"nofollow\">https://www.bunq.com</a>) API with a pregenerated API\nkey (see Tinker example: <a href=\"https://github.com/bunq/tinker_python\" rel=\"nofollow\">https://github.com/bunq/tinker_python</a>)</li>\n<li>Export payments from bunq as <code>json</code> and <code>csv</code> into one file per\naccount</li>\n<li>support special <code>csv</code> format with timestamps in <code>DD.MM.YYYY</code> format\nin timstamps, as expected from <code>Haufe-Lexware Finanzmanger</code>, when\nmode is <code>lexware</code></li>\n<li>Unit testing using <code>nose</code></li>\n<li>Pre-commit checking with <code>pre-commit</code></li>\n</ul>\n<h2>Usage</h2>\n<p>Install <code>bunqexport</code> and generate an export:</p>\n<pre><code>$ pip install bunqexport\n$ bunqexport --conf bunq-production.conf --mode lexware\n[INFO   ] Using conf: bunq-production.conf\n[INFO   ] found XX while fetching last 200 Payments for account XXXXXXX\n[INFO   ] Wrote bunq_XXXXXXX_Default.csv\n[INFO   ] Wrote bunq_XXXXXXX_Default.json\ncreated    type               counterparty_alias.name                   amount.currency amount.value description\n23.12.2019  CHECKOUT_MERCHANT                                      bunq  EUR              200.00                                    bunq account top up\n23.12.2019         MASTERCARD                    XXXXXXXXXXXXXXXXXXXXXX  EUR              -16.96               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n23.12.2019            SAVINGS                               XXXXXXXXXXX  EUR               -0.04\n24.12.2019            EBA_SCT                                XXXXXXXXXX  EUR              500.00                                                    ---\n27.12.2019            EBA_SCT  PayPal (Europe) S.a.r.l. et Cie., S.C.A.  EUR                0.13                           PAYPAL BEVEILIGINGSMAATREGEL\n27.12.2019            EBA_SCT  PayPal (Europe) S.a.r.l. et Cie., S.C.A.  EUR                0.03                           PAYPAL BEVEILIGINGSMAATREGEL\n...\n</code></pre>\n<h2>Contributing</h2>\n<p>Any contributions are very welcome.</p>\n<p>When contributing to this repository, please first discuss the change\nyou wish to make via issue with the owners of this repository before\nmaking a change.</p>\n<h3>Pull Request Process</h3>\n<ol>\n<li>Ensure any install or build dependencies are removed before the end\nof the layer when doing a build.</li>\n<li>Document your changes (whereever useful), e.g in <code>README.md</code>.</li>\n<li>Use <code>pre-commit</code> hooks by installing <code>pip install pre-commit</code> and run <code>pre-commit install</code>.</li>\n</ol>\n\n          </div>"}, "last_serial": 6445663, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ba6f346f6df048b823834e18abe83e4a", "sha256": "9cbd0105e8a2299c1d9f4d4e02392c0e70e6b7c583cc376eecf7bd8ccf654655"}, "downloads": -1, "filename": "bunqexport-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba6f346f6df048b823834e18abe83e4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19430, "upload_time": "2020-01-13T17:11:14", "upload_time_iso_8601": "2020-01-13T17:11:14.233030Z", "url": "https://files.pythonhosted.org/packages/75/bc/24ebcf60b3dcab77f9411d81121ccde6fb17fe54e0026e0a1fd01b6515a7/bunqexport-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebc47ab2d1a27ae5ee12a0cc94879ec7", "sha256": "f27ad2dcee87437fc4bc96c05ffaad9ab603bf499e26602276780d62acd5303a"}, "downloads": -1, "filename": "bunqexport-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ebc47ab2d1a27ae5ee12a0cc94879ec7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7937, "upload_time": "2020-01-13T17:11:16", "upload_time_iso_8601": "2020-01-13T17:11:16.998726Z", "url": "https://files.pythonhosted.org/packages/61/87/afe9bb3f41ea781ad61b0709358aba9d3d906f37d7ad431c72746a0eac2a/bunqexport-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba6f346f6df048b823834e18abe83e4a", "sha256": "9cbd0105e8a2299c1d9f4d4e02392c0e70e6b7c583cc376eecf7bd8ccf654655"}, "downloads": -1, "filename": "bunqexport-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba6f346f6df048b823834e18abe83e4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19430, "upload_time": "2020-01-13T17:11:14", "upload_time_iso_8601": "2020-01-13T17:11:14.233030Z", "url": "https://files.pythonhosted.org/packages/75/bc/24ebcf60b3dcab77f9411d81121ccde6fb17fe54e0026e0a1fd01b6515a7/bunqexport-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebc47ab2d1a27ae5ee12a0cc94879ec7", "sha256": "f27ad2dcee87437fc4bc96c05ffaad9ab603bf499e26602276780d62acd5303a"}, "downloads": -1, "filename": "bunqexport-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ebc47ab2d1a27ae5ee12a0cc94879ec7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7937, "upload_time": "2020-01-13T17:11:16", "upload_time_iso_8601": "2020-01-13T17:11:16.998726Z", "url": "https://files.pythonhosted.org/packages/61/87/afe9bb3f41ea781ad61b0709358aba9d3d906f37d7ad431c72746a0eac2a/bunqexport-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:58 2020"}