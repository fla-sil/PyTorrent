{"info": {"author": "SecurActive SA", "author_email": "opensource@securactive.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Buildout :: Recipe", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Overview\n========\n\nThis package is a `zc.buildout`_ recipe which allows to install a custom version\nof the `PostgreSQL`_ database server, locally to the package you are working on.\n\nIt can install the database server from:\n\n    * source: this is handy if you want to quickly test your application with a\n      new release of `PostgreSQL`_ or with a new development snapshot;\n\n    * pre-compiled binary: if you already have a compiled version of PostgreSQL,\n      you can also reuse it to speed up the buildout process.\n\nThe recipe will give you several tools in the ``bin/`` directory to control the\nserver. Thus, you will be able to start and stop it, launch a command line\nutility on the server, and so on.\n\nIt makes use of `hexagonit.recipe.cmmi`_ and `hexagonit.recipe.download`_\nbehind the scenes, so all options for these recipes are also valid.\n\n.. _zc.buildout: http://www.buildout.org\n.. _PostgreSQL: http://www.postgresql.org\n.. _hexagonit.recipe.cmmi: http://pypi.python.org/pypi/hexagonit.recipe.cmmi\n.. _hexagonit.recipe.download: http://pypi.python.org/pypi/hexagonit.recipe.download\n\nSupported options\n=================\n\nThe recipe supports the following options:\n\nadmin\n    Aministrator accounts to create. Defaults to ``postgres``.\n\nsuperusers\n    Super-users accounts to create. Defaults to ``root``.\n\nusers\n    User accounts to create.\n\nlocation\n   Destination of Postgresql. Defaults to the buildout section name.\n\nurl\n   Download URL for the target source version of Postgresql (required if\n   url-bin is empty).\n\nurl-bin\n   Download URL for the target binary version of Postgresql. This option is\n   always used if it is set.\n\nconf_dir\n    Folder of configuration files (the folder must exist). Defaults to ${location}.\n\npostgresql.conf\n    Custom Postgresql configuration. Two options are required:\n    - ``data_directory``\n    - ``unix_socket_directories`` (``unix_socket_directory`` for older versions\n      of PostgreSQL).\n\nverbose-conf\n    If ``true``, include defaults reported by postgres server into generated\n    configuration file. Defaults to false.\n\nBinary url\n==========\n\nThe recipe can detect automatically your platform within *(arch)s* in the url.\nThe syntax must follow the Python convention (read the sys.platform documentation).\nThe goal is to use a CI tool on various platforms without create an buildout\nfile to each one.\n\nThe binary mode is useful when you use a CI tool: you can test quickly the new\ncode.\n\nExamples\n========\n\nSimple example::\n\n    [pg92]\n    recipe = sact.recipe.postgresql\n    url = http://ftp.postgresql.org/pub/source/v9.2.2/postgresql-9.2.2.tar.bz2\n    conf-dir = /etc/postgresql/9.2\n    postgresql.conf =\n        data_directory = '/srv/postgresql/9.2/db'\n        unix_socket_directories = '/var/run'\n\nMore options::\n\n    [pg92]\n    recipe = sact.recipe.postgresql\n    url = http://ftp.postgresql.org/pub/source/v9.2.2/postgresql-9.2.2.tar.bz2\n    configure-options =\n        --without-readline\n        --with-python\n    make-options =\n        -j10\n    conf-dir = /etc/postgresql/9.2\n    postgresql.conf =\n        data_directory = '/srv/postgresql/9.2/db'\n        unix_socket_directories = '/var/run'\n        listen_addresses = ''\n        fsync = off\n        synchronous_commit = off\n        full_page_writes = off\n        wal_buffers = 1024kB\n        wal_writer_delay = 5000ms\n\n\nChangelog\n=========\n\n.. to be generated by ./autogen.sh", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/securactive/sact.recipe.postgresql", "keywords": "buildout postgresql", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "sact.recipe.postgresql", "package_url": "https://pypi.org/project/sact.recipe.postgresql/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sact.recipe.postgresql/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/securactive/sact.recipe.postgresql"}, "release_url": "https://pypi.org/project/sact.recipe.postgresql/0.10.0/", "requires_dist": null, "requires_python": null, "summary": "zc.buildout recipe to build PostgreSQL.", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Overview<br>========<br><br>This package is a `zc.buildout`_ recipe which allows to install a custom version<br>of the `PostgreSQL`_ database server, locally to the package you are working on.<br><br>It can install the database server from:<br><br>    * source: this is handy if you want to quickly test your application with a<br>      new release of `PostgreSQL`_ or with a new development snapshot;<br><br>    * pre-compiled binary: if you already have a compiled version of PostgreSQL,<br>      you can also reuse it to speed up the buildout process.<br><br>The recipe will give you several tools in the ``bin/`` directory to control the<br>server. Thus, you will be able to start and stop it, launch a command line<br>utility on the server, and so on.<br><br>It makes use of `hexagonit.recipe.cmmi`_ and `hexagonit.recipe.download`_<br>behind the scenes, so all options for these recipes are also valid.<br><br>.. _zc.buildout: http://www.buildout.org<br>.. _PostgreSQL: http://www.postgresql.org<br>.. _hexagonit.recipe.cmmi: http://pypi.python.org/pypi/hexagonit.recipe.cmmi<br>.. _hexagonit.recipe.download: http://pypi.python.org/pypi/hexagonit.recipe.download<br><br>Supported options<br>=================<br><br>The recipe supports the following options:<br><br>admin<br>    Aministrator accounts to create. Defaults to ``postgres``.<br><br>superusers<br>    Super-users accounts to create. Defaults to ``root``.<br><br>users<br>    User accounts to create.<br><br>location<br>   Destination of Postgresql. Defaults to the buildout section name.<br><br>url<br>   Download URL for the target source version of Postgresql (required if<br>   url-bin is empty).<br><br>url-bin<br>   Download URL for the target binary version of Postgresql. This option is<br>   always used if it is set.<br><br>conf_dir<br>    Folder of configuration files (the folder must exist). Defaults to ${location}.<br><br>postgresql.conf<br>    Custom Postgresql configuration. Two options are required:<br>    - ``data_directory``<br>    - ``unix_socket_directories`` (``unix_socket_directory`` for older versions<br>      of PostgreSQL).<br><br>verbose-conf<br>    If ``true``, include defaults reported by postgres server into generated<br>    configuration file. Defaults to false.<br><br>Binary url<br>==========<br><br>The recipe can detect automatically your platform within *(arch)s* in the url.<br>The syntax must follow the Python convention (read the sys.platform documentation).<br>The goal is to use a CI tool on various platforms without create an buildout<br>file to each one.<br><br>The binary mode is useful when you use a CI tool: you can test quickly the new<br>code.<br><br>Examples<br>========<br><br>Simple example::<br><br>    [pg92]<br>    recipe = sact.recipe.postgresql<br>    url = http://ftp.postgresql.org/pub/source/v9.2.2/postgresql-9.2.2.tar.bz2<br>    conf-dir = /etc/postgresql/9.2<br>    postgresql.conf =<br>        data_directory = '/srv/postgresql/9.2/db'<br>        unix_socket_directories = '/var/run'<br><br>More options::<br><br>    [pg92]<br>    recipe = sact.recipe.postgresql<br>    url = http://ftp.postgresql.org/pub/source/v9.2.2/postgresql-9.2.2.tar.bz2<br>    configure-options =<br>        --without-readline<br>        --with-python<br>    make-options =<br>        -j10<br>    conf-dir = /etc/postgresql/9.2<br>    postgresql.conf =<br>        data_directory = '/srv/postgresql/9.2/db'<br>        unix_socket_directories = '/var/run'<br>        listen_addresses = ''<br>        fsync = off<br>        synchronous_commit = off<br>        full_page_writes = off<br>        wal_buffers = 1024kB<br>        wal_writer_delay = 5000ms<br><br><br>Changelog<br>=========<br><br>.. to be generated by ./autogen.sh\n          </div>"}, "last_serial": 1535682, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "8b8dac20d3b5abc15c0846f12b1b2b05", "sha256": "946cf9be11e078435eea999cbc717c9f921594b4404794f75f794d7a31b59b38"}, "downloads": -1, "filename": "sact.recipe.postgresql-0.10.0.tar.gz", "has_sig": false, "md5_digest": "8b8dac20d3b5abc15c0846f12b1b2b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13197, "upload_time": "2015-05-06T14:09:37", "upload_time_iso_8601": "2015-05-06T14:09:37.130385Z", "url": "https://files.pythonhosted.org/packages/db/29/2361181bb995f51e0fac4ebd511f2cdb8133ffdb833b57b4d92f7199cf6d/sact.recipe.postgresql-0.10.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "63d2c82ebba57dd534d137fc62a5fe75", "sha256": "685afc25ebda828ceca9ae440104df7217a6262a1d38c88f16b032eb1cd59272"}, "downloads": -1, "filename": "sact.recipe.postgresql-0.8.0.tar.gz", "has_sig": false, "md5_digest": "63d2c82ebba57dd534d137fc62a5fe75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10647, "upload_time": "2013-08-29T13:29:43", "upload_time_iso_8601": "2013-08-29T13:29:43.650835Z", "url": "https://files.pythonhosted.org/packages/6e/67/2c400a21cd697573e8e9c0cd65a0aecae5e320b335d45860fd1501d3f688/sact.recipe.postgresql-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b8dac20d3b5abc15c0846f12b1b2b05", "sha256": "946cf9be11e078435eea999cbc717c9f921594b4404794f75f794d7a31b59b38"}, "downloads": -1, "filename": "sact.recipe.postgresql-0.10.0.tar.gz", "has_sig": false, "md5_digest": "8b8dac20d3b5abc15c0846f12b1b2b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13197, "upload_time": "2015-05-06T14:09:37", "upload_time_iso_8601": "2015-05-06T14:09:37.130385Z", "url": "https://files.pythonhosted.org/packages/db/29/2361181bb995f51e0fac4ebd511f2cdb8133ffdb833b57b4d92f7199cf6d/sact.recipe.postgresql-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:28 2020"}