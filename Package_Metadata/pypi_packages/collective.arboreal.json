{"info": {"author": "Pareto", "author_email": "info@pareto.nl", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python"], "description": "========\nArboreal\n========\n\nArboreal is a tool which lets you manage multiple trees. These trees are \nstored within the portal. They can be used in Archetypes as a vocabulary for\nfields.\n\n\nInstallation\n============\n\nThe tool comes with a GenericSetup profile. Therefore you can just install it\nby going to the portal setup system. It will create a configlet which you can \naccess via the same portal setup.\n\nIntegration with Archetypes\n===========================\n\nThe primary usage for Arboreal is to use it for hierarchical vocabularies. To\nmake this a reality Arboreal has its own widget and field types.\n\nAn example of configuring a field within a schema is given below.\n\n::\n\n    MultiArborealField('groups',\n        tree='tree_group_id',\n        storeCompletePath = True,\n        widget=MultiTreeSelectionWidget(\n            label='Group',\n            label_msgid='label_group',\n            description_msgid='help_group',\n            i18n_domain='JUNG',\n        )\n    ),\n\n\nThe tree is used as a vocabulary. You do not have to create this tree.\nArboreal will create it automatically when it does not exist. The\nMultiTreeSelectionWidget is basically a multi selection widget which indents\nthe tree nodes using spaces. This gives the visual appearance of a tree. And\nlastly we have the MultiArborealField. With this field you can get a list of\nall paths stored. The storeCompletePath keyword toggles parent storage. It is\nset to False by default. Parent storage works as follows.\n\nSay you have a tree like given below:\n\n- Node\n  - Subnode\n  \nIf you select the sub node in the interface and store it the path will be\nstored. When storeCompletePath is set to False it will only contain the path\nto Subnode. If storeCompletePath is set to True the parent will be stored as\nwell. An example of the differences:\n\nstoreCompletePath = False\n-------------------------\n\npath = [Node/Subnode]\n\nstoreCompletePath = True\n-------------------------\n\npath = [Node/Subnode, Node]\n\nStoring the full path is useful for when you want to use the path as a\nfiltering mechanism. You can then easily do a catalog query on a keyword index\nfor a specific path. The reason we are not just using a path index is that you\ncan select multiple points in the tree.\n\n\nCredits\n========\n\nMartijn Pieters (mj@jarn.com)\nJan Murre (jan.murre@pareto.nl)\nJeroen Vloothuis (jeroen.vloothuis@pareto.nl)\n\n\nChange History\n==============\n\n2.0 - 2011-07-21\n----------------\n\n- Add a new `storeOnlyLeaves` option on the field.\n  [hannosch]\n\n- Adjust some templates for Plone 4 compatibility and allow renaming of nodes.\n  [hannosch]\n\n- Adjust imports to match Plone 4 locations, avoid `__implements__`.\n  [hannosch]\n\n- Add z3c.autoinclude entry point.\n  [hannosch]\n\n- Update GS profile to Plone 4-style.\n  [hannosch]\n\n- Update distribution metadata.\n  [hannosch]\n\n1.0 - 2008-09-18\n----------------\n\n- Allow creation of nodes with a specific id.\n  [mj]\n\n- Made XML import/export code accept a path, defaulting to old-hardcoded value.\n  [mj]\n\n- Converted to an egg, renamed to collective.arboreal, updated to Z3 tech,\n  replaced Install.py with a GS profile.\n  [mj]\n\n- Initial import to the collective\n  [jvloothuis, jjmurre]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.arboreal", "keywords": "archetypes trees field widget index", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.arboreal", "package_url": "https://pypi.org/project/collective.arboreal/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.arboreal/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.arboreal"}, "release_url": "https://pypi.org/project/collective.arboreal/2.0/", "requires_dist": null, "requires_python": null, "summary": "Arboreal is a tool which lets you manage multiple trees.", "version": "2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Arboreal is a tool which lets you manage multiple trees. These trees are\nstored within the portal. They can be used in Archetypes as a vocabulary for\nfields.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The tool comes with a GenericSetup profile. Therefore you can just install it\nby going to the portal setup system. It will create a configlet which you can\naccess via the same portal setup.</p>\n</div>\n<div id=\"integration-with-archetypes\">\n<h2>Integration with Archetypes</h2>\n<p>The primary usage for Arboreal is to use it for hierarchical vocabularies. To\nmake this a reality Arboreal has its own widget and field types.</p>\n<p>An example of configuring a field within a schema is given below.</p>\n<pre>MultiArborealField('groups',\n    tree='tree_group_id',\n    storeCompletePath = True,\n    widget=MultiTreeSelectionWidget(\n        label='Group',\n        label_msgid='label_group',\n        description_msgid='help_group',\n        i18n_domain='JUNG',\n    )\n),\n</pre>\n<p>The tree is used as a vocabulary. You do not have to create this tree.\nArboreal will create it automatically when it does not exist. The\nMultiTreeSelectionWidget is basically a multi selection widget which indents\nthe tree nodes using spaces. This gives the visual appearance of a tree. And\nlastly we have the MultiArborealField. With this field you can get a list of\nall paths stored. The storeCompletePath keyword toggles parent storage. It is\nset to False by default. Parent storage works as follows.</p>\n<p>Say you have a tree like given below:</p>\n<ul>\n<li>Node\n- Subnode</li>\n</ul>\n<p>If you select the sub node in the interface and store it the path will be\nstored. When storeCompletePath is set to False it will only contain the path\nto Subnode. If storeCompletePath is set to True the parent will be stored as\nwell. An example of the differences:</p>\n<div id=\"storecompletepath-false\">\n<h3>storeCompletePath = False</h3>\n<p>path = [Node/Subnode]</p>\n</div>\n<div id=\"storecompletepath-true\">\n<h3>storeCompletePath = True</h3>\n<p>path = [Node/Subnode, Node]</p>\n<p>Storing the full path is useful for when you want to use the path as a\nfiltering mechanism. You can then easily do a catalog query on a keyword index\nfor a specific path. The reason we are not just using a path index is that you\ncan select multiple points in the tree.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Martijn Pieters (<a href=\"mailto:mj%40jarn.com\">mj<span>@</span>jarn<span>.</span>com</a>)\nJan Murre (<a href=\"mailto:jan.murre%40pareto.nl\">jan<span>.</span>murre<span>@</span>pareto<span>.</span>nl</a>)\nJeroen Vloothuis (<a href=\"mailto:jeroen.vloothuis%40pareto.nl\">jeroen<span>.</span>vloothuis<span>@</span>pareto<span>.</span>nl</a>)</p>\n</div>\n<div id=\"change-history\">\n<h2>Change History</h2>\n<div id=\"id1\">\n<h3>2.0 - 2011-07-21</h3>\n<ul>\n<li>Add a new <cite>storeOnlyLeaves</cite> option on the field.\n[hannosch]</li>\n<li>Adjust some templates for Plone 4 compatibility and allow renaming of nodes.\n[hannosch]</li>\n<li>Adjust imports to match Plone 4 locations, avoid <cite>__implements__</cite>.\n[hannosch]</li>\n<li>Add z3c.autoinclude entry point.\n[hannosch]</li>\n<li>Update GS profile to Plone 4-style.\n[hannosch]</li>\n<li>Update distribution metadata.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0 - 2008-09-18</h3>\n<ul>\n<li>Allow creation of nodes with a specific id.\n[mj]</li>\n<li>Made XML import/export code accept a path, defaulting to old-hardcoded value.\n[mj]</li>\n<li>Converted to an egg, renamed to collective.arboreal, updated to Z3 tech,\nreplaced Install.py with a GS profile.\n[mj]</li>\n<li>Initial import to the collective\n[jvloothuis, jjmurre]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 656795, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d1eda2038d147d511267f45616d5d1c2", "sha256": "a910ee4873a4099ea62fd14f9e856130f3b3e4727511d6686f63a1646848bfe7"}, "downloads": -1, "filename": "collective.arboreal-1.0.tar.gz", "has_sig": true, "md5_digest": "d1eda2038d147d511267f45616d5d1c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29905, "upload_time": "2008-09-18T11:51:39", "upload_time_iso_8601": "2008-09-18T11:51:39Z", "url": "https://files.pythonhosted.org/packages/61/26/3ce8bbf3aebe1fa84d5c963f6c4fd9eb44f7f4a337d8d4d2bbedc409afa1/collective.arboreal-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "e10938cf44121c818080b90ebe26673c", "sha256": "693f758b3be8831f785417fe12fdec3a6bec89619d3c0c111a1c7712707f56c1"}, "downloads": -1, "filename": "collective.arboreal-2.0.zip", "has_sig": false, "md5_digest": "e10938cf44121c818080b90ebe26673c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55751, "upload_time": "2011-07-21T14:38:30", "upload_time_iso_8601": "2011-07-21T14:38:30.208767Z", "url": "https://files.pythonhosted.org/packages/ff/d5/30e05753462162500e232a4b58faf8a2e06332dfee4151fa0ac7467c564e/collective.arboreal-2.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e10938cf44121c818080b90ebe26673c", "sha256": "693f758b3be8831f785417fe12fdec3a6bec89619d3c0c111a1c7712707f56c1"}, "downloads": -1, "filename": "collective.arboreal-2.0.zip", "has_sig": false, "md5_digest": "e10938cf44121c818080b90ebe26673c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55751, "upload_time": "2011-07-21T14:38:30", "upload_time_iso_8601": "2011-07-21T14:38:30.208767Z", "url": "https://files.pythonhosted.org/packages/ff/d5/30e05753462162500e232a4b58faf8a2e06332dfee4151fa0ac7467c564e/collective.arboreal-2.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:18:02 2020"}