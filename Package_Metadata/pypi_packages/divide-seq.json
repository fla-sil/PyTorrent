{"info": {"author": "Ping Wu", "author_email": "wpwupingwp@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# join_and_split.py\n\nHelper for join and split fastq files.\n\nRequired python 3.6 or above.\n\n## Usage\n```\n# Linux\n## split\npython3 join_and_split.py split -m fastq_file\n## join\npython3 join_and_split.py join -f forward.fastq -r reverse.fastq\n# Windows\n## split\npython join_and_split.py split -m fastq_file\n## join\npython join_and_split.py join -f forward.fastq -r reverse.fastq\n```\n\nUse -t to set linker text, by default the program use \"JOINTEXT\".\n\nWhen split, \"fastq_file\" could be multiple files, use \"\\*.fastq\" (include\nquotation mark) to represent all \".fastq\" files in current folder.\n\n# divide.py\n\nDivide NGS data by barcode and primer.\n\n## Prerequisite\n\n* Python 3.5 or above\n* Biopython\n* regex\n* [vsearch](https://github.com/torognes/vsearch) (Optional)\n\nTo install Biopython and regex, run as administrator:\n\n> pip install biopython regex\n\n## Changelog\n\n### v4.6\nSupport ambiguous base.\n\n### v4.5\nExtend vsearch options.\nImprove output\n\n### v4.2\nIntegrate vsearch.\n\n### v4.0\nUse regex instead of BLAST. Faster and easier.\n\n### v3.3\nParallel version, use BLAST.\n\n### v2.1\nSingle core version. Use BLAST.\n\n### v1.0\nDeprecated.\n\n## Sequence structure\n\nIt can handle merged pair-end sequence like this:\n\n>barcode-adapter-primer-sequence-primer-adapter-barcode\n\nOr just handle one direction:\n\n>barcode-adapter-primer-sequence\n\nSequences will be divided by barcode according to given barcode file.\nIf barcode is wrong even only one base, it will be dropped.\n\n## adapter\n\nSome one adds sequence between barcode and primer, if you do not have it, just\nset adapter length to zero by \"--adapter 0\". The default value is 14.\n\n## Barcode mode\n\nUse \"-m\" to set barcode mode, like \"8\\*1\", means barcode with length 5 repeats\nonly 1 times. The default is \"5\\*2\", i.e., 5-base barcode repeats twice.\n\nNote that the forward and reverse barcode may be different sequence, but they\n*SHOULD FOLLOW THE SAME MODE!*\n\n## Strict option\n\nUse \"-s\" or \"--strict\" to use strict version. If set, the program will check\nbarcode in head and tail is equal or not and whether barcode in tail (3') is\ncorrect. If not, it will only check barcode in head (5') of sequence.\n\n## Barcode file\n\nBarcode file looks like this:\n\n>   sample,barcode-f,barcode-r\n\n>   S0001,ATACG,ATACG\n\n>   S0002,ATATA,TATAC\n\n>   S0003,ATACG\n\n>   ...\n\nThe _barcode-f_ means barcode in 5' direction and _barcode-r_ means barcode in\n3' direction. All sequences should be *forward*.\n\nIf forward and reverse barcode are same, you can omit the reverse barcode in\nthe table.\n\nTo avoid potential error, _please do not use space in sample info_.\n\nAnd notice that here it use **English comma** to seperate two  fields rather\nthan **Chinese comma**.\n\n## Primer file\nPrimer file looks like this:\n\n>    gene,forward,reverse\n\n>    rbcL,ATCGATCGATCGA,TACGTACGTACG\n\n>    matK,AAAATTTTCCCC,GGGGTTACCAAAA\n\n>    ...\n\nOr:\n\n>    gene,sequence\n\n>    rbcL-f,ATCGATCGATCGA\n\n>    rbcL-r,TACGTACGTACG\n\n\nYou can use Microsoft Excel to prepare these two files and save as CSV format,\nor use any text editor you prefer.\n\n**Make sure you don't miss the first line.**\n\n# task.sh\n\nIf you use PBS task submitting system, you can use this script to submit the\ntask, and you can finish the work from combine two direction sequence by flash and join_fastq.py to divide them.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wpwupingwp/divide", "keywords": "", "license": "GNU AGPL v3", "maintainer": "", "maintainer_email": "", "name": "divide-seq", "package_url": "https://pypi.org/project/divide-seq/", "platform": "", "project_url": "https://pypi.org/project/divide-seq/", "project_urls": {"Homepage": "https://github.com/wpwupingwp/divide"}, "release_url": "https://pypi.org/project/divide-seq/5.22/", "requires_dist": ["biopython (>=1.72)", "pip (>=18.0)", "regex (>=2019.08.19)", "wheel (>=0.32.3)"], "requires_python": "", "summary": "Divide amplicon sequences", "version": "5.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>join_and_split.py</h1>\n<p>Helper for join and split fastq files.</p>\n<p>Required python 3.6 or above.</p>\n<h2>Usage</h2>\n<pre><code># Linux\n## split\npython3 join_and_split.py split -m fastq_file\n## join\npython3 join_and_split.py join -f forward.fastq -r reverse.fastq\n# Windows\n## split\npython join_and_split.py split -m fastq_file\n## join\npython join_and_split.py join -f forward.fastq -r reverse.fastq\n</code></pre>\n<p>Use -t to set linker text, by default the program use \"JOINTEXT\".</p>\n<p>When split, \"fastq_file\" could be multiple files, use \"*.fastq\" (include\nquotation mark) to represent all \".fastq\" files in current folder.</p>\n<h1>divide.py</h1>\n<p>Divide NGS data by barcode and primer.</p>\n<h2>Prerequisite</h2>\n<ul>\n<li>Python 3.5 or above</li>\n<li>Biopython</li>\n<li>regex</li>\n<li><a href=\"https://github.com/torognes/vsearch\" rel=\"nofollow\">vsearch</a> (Optional)</li>\n</ul>\n<p>To install Biopython and regex, run as administrator:</p>\n<blockquote>\n<p>pip install biopython regex</p>\n</blockquote>\n<h2>Changelog</h2>\n<h3>v4.6</h3>\n<p>Support ambiguous base.</p>\n<h3>v4.5</h3>\n<p>Extend vsearch options.\nImprove output</p>\n<h3>v4.2</h3>\n<p>Integrate vsearch.</p>\n<h3>v4.0</h3>\n<p>Use regex instead of BLAST. Faster and easier.</p>\n<h3>v3.3</h3>\n<p>Parallel version, use BLAST.</p>\n<h3>v2.1</h3>\n<p>Single core version. Use BLAST.</p>\n<h3>v1.0</h3>\n<p>Deprecated.</p>\n<h2>Sequence structure</h2>\n<p>It can handle merged pair-end sequence like this:</p>\n<blockquote>\n<p>barcode-adapter-primer-sequence-primer-adapter-barcode</p>\n</blockquote>\n<p>Or just handle one direction:</p>\n<blockquote>\n<p>barcode-adapter-primer-sequence</p>\n</blockquote>\n<p>Sequences will be divided by barcode according to given barcode file.\nIf barcode is wrong even only one base, it will be dropped.</p>\n<h2>adapter</h2>\n<p>Some one adds sequence between barcode and primer, if you do not have it, just\nset adapter length to zero by \"--adapter 0\". The default value is 14.</p>\n<h2>Barcode mode</h2>\n<p>Use \"-m\" to set barcode mode, like \"8*1\", means barcode with length 5 repeats\nonly 1 times. The default is \"5*2\", i.e., 5-base barcode repeats twice.</p>\n<p>Note that the forward and reverse barcode may be different sequence, but they\n<em>SHOULD FOLLOW THE SAME MODE!</em></p>\n<h2>Strict option</h2>\n<p>Use \"-s\" or \"--strict\" to use strict version. If set, the program will check\nbarcode in head and tail is equal or not and whether barcode in tail (3') is\ncorrect. If not, it will only check barcode in head (5') of sequence.</p>\n<h2>Barcode file</h2>\n<p>Barcode file looks like this:</p>\n<blockquote>\n<p>sample,barcode-f,barcode-r</p>\n</blockquote>\n<blockquote>\n<p>S0001,ATACG,ATACG</p>\n</blockquote>\n<blockquote>\n<p>S0002,ATATA,TATAC</p>\n</blockquote>\n<blockquote>\n<p>S0003,ATACG</p>\n</blockquote>\n<blockquote>\n<p>...</p>\n</blockquote>\n<p>The <em>barcode-f</em> means barcode in 5' direction and <em>barcode-r</em> means barcode in\n3' direction. All sequences should be <em>forward</em>.</p>\n<p>If forward and reverse barcode are same, you can omit the reverse barcode in\nthe table.</p>\n<p>To avoid potential error, <em>please do not use space in sample info</em>.</p>\n<p>And notice that here it use <strong>English comma</strong> to seperate two  fields rather\nthan <strong>Chinese comma</strong>.</p>\n<h2>Primer file</h2>\n<p>Primer file looks like this:</p>\n<blockquote>\n<p>gene,forward,reverse</p>\n</blockquote>\n<blockquote>\n<p>rbcL,ATCGATCGATCGA,TACGTACGTACG</p>\n</blockquote>\n<blockquote>\n<p>matK,AAAATTTTCCCC,GGGGTTACCAAAA</p>\n</blockquote>\n<blockquote>\n<p>...</p>\n</blockquote>\n<p>Or:</p>\n<blockquote>\n<p>gene,sequence</p>\n</blockquote>\n<blockquote>\n<p>rbcL-f,ATCGATCGATCGA</p>\n</blockquote>\n<blockquote>\n<p>rbcL-r,TACGTACGTACG</p>\n</blockquote>\n<p>You can use Microsoft Excel to prepare these two files and save as CSV format,\nor use any text editor you prefer.</p>\n<p><strong>Make sure you don't miss the first line.</strong></p>\n<h1>task.sh</h1>\n<p>If you use PBS task submitting system, you can use this script to submit the\ntask, and you can finish the work from combine two direction sequence by flash and join_fastq.py to divide them.</p>\n\n          </div>"}, "last_serial": 6246433, "releases": {"5.0": [{"comment_text": "", "digests": {"md5": "e29659ff8ee061ca91fc978a8783a683", "sha256": "15141c3dcbe52255e0b0342b55289113b1c5c4d7c251bfbd23be6ef01736bcae"}, "downloads": -1, "filename": "divide_seq-5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e29659ff8ee061ca91fc978a8783a683", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18800, "upload_time": "2019-10-07T09:26:47", "upload_time_iso_8601": "2019-10-07T09:26:47.926984Z", "url": "https://files.pythonhosted.org/packages/c4/d5/61fae31e120cde52d27e9d3416013b55fed29cd60a144c96ece79b282b3f/divide_seq-5.0-py3-none-any.whl", "yanked": false}], "5.1": [{"comment_text": "", "digests": {"md5": "825e06e9aaa85863b1e8a38ade21a9d6", "sha256": "62488a9b3f661c15aa8bc4b00ac87da2bd56f5eea4fe6fa8e29454a5dc1a5292"}, "downloads": -1, "filename": "divide_seq-5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "825e06e9aaa85863b1e8a38ade21a9d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18793, "upload_time": "2019-10-08T05:30:32", "upload_time_iso_8601": "2019-10-08T05:30:32.322937Z", "url": "https://files.pythonhosted.org/packages/3f/57/5ac6bdaca710309c1941163e557cd40cbc1b7f40a1d5980de745c54c27f7/divide_seq-5.1-py3-none-any.whl", "yanked": false}], "5.2": [{"comment_text": "", "digests": {"md5": "344141464b85145e09cbc321fb98a8e6", "sha256": "e0e7422a8d0a1d8b87c28257a43f763ab268f574cc1477eae92325475f75f6e9"}, "downloads": -1, "filename": "divide_seq-5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "344141464b85145e09cbc321fb98a8e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18845, "upload_time": "2019-12-05T07:50:33", "upload_time_iso_8601": "2019-12-05T07:50:33.618927Z", "url": "https://files.pythonhosted.org/packages/41/29/7532ab2f64f2c4aa78e7984f501b0443fdeaea212ba11be65527456c3d99/divide_seq-5.2-py3-none-any.whl", "yanked": false}], "5.22": [{"comment_text": "", "digests": {"md5": "b0af805e5ccdc44de9646d8b10baa807", "sha256": "723bb4b2c60191ba7628627dd6f711e739f76da84494895032f69ecf08058266"}, "downloads": -1, "filename": "divide_seq-5.22-py3-none-any.whl", "has_sig": false, "md5_digest": "b0af805e5ccdc44de9646d8b10baa807", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18848, "upload_time": "2019-12-05T09:26:49", "upload_time_iso_8601": "2019-12-05T09:26:49.796156Z", "url": "https://files.pythonhosted.org/packages/4a/e4/207b19577b569322a016bc3925c64bb5bc2a9b53dd80ffa1574f5a2dc8a3/divide_seq-5.22-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0af805e5ccdc44de9646d8b10baa807", "sha256": "723bb4b2c60191ba7628627dd6f711e739f76da84494895032f69ecf08058266"}, "downloads": -1, "filename": "divide_seq-5.22-py3-none-any.whl", "has_sig": false, "md5_digest": "b0af805e5ccdc44de9646d8b10baa807", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18848, "upload_time": "2019-12-05T09:26:49", "upload_time_iso_8601": "2019-12-05T09:26:49.796156Z", "url": "https://files.pythonhosted.org/packages/4a/e4/207b19577b569322a016bc3925c64bb5bc2a9b53dd80ffa1574f5a2dc8a3/divide_seq-5.22-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:37:59 2020"}