{"info": {"author": "Jakub STOLARSKI (Dryobates)", "author_email": "jakub.stolarski@kidosoft.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "##########\nKido Redis\n##########\n\n.. warning::\n\n   This module is not maintained anymore. Please use\n   http://pypi.python.org/pypi/django-redisdb\n\nGoal\n====\n\nProvide Redis backends for Django that faciliates using multiple Redis servers\nin the same time like if they were in master/master or sharded configuration.\n\nInstallation\n============\n\nInstall requirements:\n\n.. code-block:: console\n    \n    pip install redis hash_ring\n\nInstall Kido Redis:\n\n.. code-block:: console\n\n   pip install django-kidoredis\n\nor current development version:\n\n.. code-block:: console\n\n   pip install hg+https:://bitbucket.org/kidosoft/django-kidoredis\n\nConfiguration\n=============\n\n.. code-block:: python\n\n    CACHES = {\n        'redis_ring': {\n            'BACKEND': 'kidoredis.backends.RedisRing',  # sharding backend\n            'DB': 0,\n            'LOCATION': [\n                'localhost:6379',\n                'localhost:6380',\n            ]\n        },\n        'redis_copy': {\n            'BACKEND': 'kidoredis.backends.RedisCopy',  # copying backend\n            'DB': 0,\n            'LOCATION': [\n                'localhost:6379',\n                'localhost:6380',\n            ]\n        }\n    }\n\n\nRedis is configured as cache backend although it should be treat as specialized\ndatabase. There are two backends:\n\nUsage\n=====\n\nAfter configuration access to Redis is done like to any other Django cache:\n\n.. code-block:: python\n\n   from django.core.cache import caches\n   caches['redis_ring'].set('key1', 1)  # set key1 only on on server\n   caches['redis_copy'].set('key2', 2)  # set key2 on all servers\n   result_list = caches['redis_copy'].zrange('key3', 1, 10)  # redis only command\n\nCaveats \n=======\n\nRedisCopy can save data to many nodes. Each of this nodes can return different\nresult on save. For that reason commands that save data to nodes returns list\nof results from each node. E.g. with two nodes set for redis_copy:\n\n.. code-block:: python\n\n   >>> print caches['redis_copy'].set('key1', 2)\n   [True, True]\n\nSupported Django versions\n=========================\n\nTested with: \n\n* Django 1.2.7 on python2.7\n* Django 1.3.7 on python2.7\n* Django 1.4.16 on python2.7\n* Django 1.5.11 on python2.7, python3.4\n* Django 1.6.8 on python2.7, python3.4\n* Django 1.7.1 on python2.7, python3.4", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://kidosoft.pl", "keywords": "django redis", "license": "beerware", "maintainer": null, "maintainer_email": null, "name": "django-kidoredis", "package_url": "https://pypi.org/project/django-kidoredis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-kidoredis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://kidosoft.pl"}, "release_url": "https://pypi.org/project/django-kidoredis/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Django redis backend", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Warning</p>\n<p>This module is not maintained anymore. Please use\n<a href=\"http://pypi.python.org/pypi/django-redisdb\" rel=\"nofollow\">http://pypi.python.org/pypi/django-redisdb</a></p>\n</div>\n<div id=\"goal\">\n<h2>Goal</h2>\n<p>Provide Redis backends for Django that faciliates using multiple Redis servers\nin the same time like if they were in master/master or sharded configuration.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install requirements:</p>\n<pre><span class=\"go\">pip install redis hash_ring</span>\n</pre>\n<p>Install Kido Redis:</p>\n<pre><span class=\"go\">pip install django-kidoredis</span>\n</pre>\n<p>or current development version:</p>\n<pre><span class=\"go\">pip install hg+https:://bitbucket.org/kidosoft/django-kidoredis</span>\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<pre><span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'redis_ring'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'kidoredis.backends.RedisRing'</span><span class=\"p\">,</span>  <span class=\"c1\"># sharding backend</span>\n        <span class=\"s1\">'DB'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s1\">'LOCATION'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'localhost:6379'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'localhost:6380'</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'redis_copy'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'kidoredis.backends.RedisCopy'</span><span class=\"p\">,</span>  <span class=\"c1\"># copying backend</span>\n        <span class=\"s1\">'DB'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s1\">'LOCATION'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'localhost:6379'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'localhost:6380'</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Redis is configured as cache backend although it should be treat as specialized\ndatabase. There are two backends:</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After configuration access to Redis is done like to any other Django cache:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.core.cache</span> <span class=\"kn\">import</span> <span class=\"n\">caches</span>\n<span class=\"n\">caches</span><span class=\"p\">[</span><span class=\"s1\">'redis_ring'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># set key1 only on on server</span>\n<span class=\"n\">caches</span><span class=\"p\">[</span><span class=\"s1\">'redis_copy'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'key2'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># set key2 on all servers</span>\n<span class=\"n\">result_list</span> <span class=\"o\">=</span> <span class=\"n\">caches</span><span class=\"p\">[</span><span class=\"s1\">'redis_copy'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">zrange</span><span class=\"p\">(</span><span class=\"s1\">'key3'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># redis only command</span>\n</pre>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>RedisCopy can save data to many nodes. Each of this nodes can return different\nresult on save. For that reason commands that save data to nodes returns list\nof results from each node. E.g. with two nodes set for redis_copy:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">caches</span><span class=\"p\">[</span><span class=\"s1\">'redis_copy'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"supported-django-versions\">\n<h2>Supported Django versions</h2>\n<p>Tested with:</p>\n<ul>\n<li>Django 1.2.7 on python2.7</li>\n<li>Django 1.3.7 on python2.7</li>\n<li>Django 1.4.16 on python2.7</li>\n<li>Django 1.5.11 on python2.7, python3.4</li>\n<li>Django 1.6.8 on python2.7, python3.4</li>\n<li>Django 1.7.1 on python2.7, python3.4</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1473943, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "44332ae9f65553f0052e9b92dbbfe9d7", "sha256": "c9f1b7e3f9e7359c4c72d45734f720a209e7d2240f74b128c18f6ebac676cb07"}, "downloads": -1, "filename": "django_kidoredis-1.0-py2-none-any.whl", "has_sig": true, "md5_digest": "44332ae9f65553f0052e9b92dbbfe9d7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6365, "upload_time": "2014-10-24T19:08:00", "upload_time_iso_8601": "2014-10-24T19:08:00.218356Z", "url": "https://files.pythonhosted.org/packages/6c/c5/8d78af767481c111e8d9ef6e0e2b4b9597d66b4c1e476eb69810c5c2001d/django_kidoredis-1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8ca6d9ca8a5e0fe03eab5fb9195bc25", "sha256": "b4c5d21895b0b7d103667761235eef7db0ea5a0fc0847aacaf9a0a6c311170e5"}, "downloads": -1, "filename": "django-kidoredis-1.0.tar.gz", "has_sig": true, "md5_digest": "b8ca6d9ca8a5e0fe03eab5fb9195bc25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54828, "upload_time": "2014-10-24T19:07:50", "upload_time_iso_8601": "2014-10-24T19:07:50.567122Z", "url": "https://files.pythonhosted.org/packages/58/cf/dad1f2cce7281894f67f1dc0138155750252f00f8e1a2dc64307771d4e92/django-kidoredis-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "34a56a6d3584e20a97621defd3506a94", "sha256": "706d8ad0d142f14a8d343eec27be54e0d18c7814118ca74ebbe0f847ebdbb3cc"}, "downloads": -1, "filename": "django-kidoredis-1.0.1.tar.gz", "has_sig": false, "md5_digest": "34a56a6d3584e20a97621defd3506a94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56292, "upload_time": "2015-03-23T17:18:28", "upload_time_iso_8601": "2015-03-23T17:18:28.875281Z", "url": "https://files.pythonhosted.org/packages/5d/5b/b7b308bc3894fd5c17f3feb4eb5c401aa996cb12594ddd3fe4f1424694ef/django-kidoredis-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34a56a6d3584e20a97621defd3506a94", "sha256": "706d8ad0d142f14a8d343eec27be54e0d18c7814118ca74ebbe0f847ebdbb3cc"}, "downloads": -1, "filename": "django-kidoredis-1.0.1.tar.gz", "has_sig": false, "md5_digest": "34a56a6d3584e20a97621defd3506a94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56292, "upload_time": "2015-03-23T17:18:28", "upload_time_iso_8601": "2015-03-23T17:18:28.875281Z", "url": "https://files.pythonhosted.org/packages/5d/5b/b7b308bc3894fd5c17f3feb4eb5c401aa996cb12594ddd3fe4f1424694ef/django-kidoredis-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:26 2020"}