{"info": {"author": "Lucas Liu", "author_email": "llychinalz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# LightNER\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![PyPI version](https://badge.fury.io/py/LightNER.svg)](https://badge.fury.io/py/LightNER)\n[![Downloads](https://pepy.tech/badge/lightner)](https://pepy.tech/project/lightner)\n<!-- [![Documentation Status](https://readthedocs.org/projects/tensorboard-wrapper/badge/?version=latest)](http://tensorboard-wrapper.readthedocs.io/en/latest/?badge=latest) -->\n\n**Check Our New NER Toolkit\ud83d\ude80\ud83d\ude80\ud83d\ude80**\n- **Inference**:\n  - **[LightNER](https://github.com/LiyuanLucasLiu/LightNER)**: inference w. models pre-trained / trained w. *any* following tools, *efficiently*. \n- **Training**:\n  - **[LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)**: train NER models w. efficient contextualized representations.\n  - **[VanillaNER](https://github.com/LiyuanLucasLiu/Vanilla_NER)**: train vanilla NER models w. pre-trained embedding.\n- **Distant Training**:\n  - **[AutoNER](https://github.com/shangjingbo1226/AutoNER)**: train NER models w.o. line-by-line annotations and get competitive performance.\n\n--------------------------------\n\nThis package supports to conduct inference with models pre-trained by:\n- [Vanilla_NER](https://github.com/LiyuanLucasLiu/Vanilla_NER): vanilla sequence labeling models.\n- [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net): sequence labeling models w. efficient contextualized representation.\n- [AutoNER](https://github.com/shangjingbo1226/AutoNER): distant supervised named entity recognition models (*no line-by-line annotations for training*).\n\nWe are in an early-release beta. Expect some adventures and rough edges.\n\n## Quick Links\n\n- [Installation](#installation)\n- [Usage](#usage)\n\n## Installation\n\nTo install via pypi:\n```\npip install lightner\n```\n\nTo build from source:\n```\npip install git+https://github.com/LiyuanLucasLiu/LightNER\n```\nor\n```\ngit clone https://github.com/LiyuanLucasLiu/LightNER.git\ncd LightNER\npython setup.py install\n```\n\n## Usage\n\n### Pre-trained Models\n\n|               | Model             | Task            | Performance            |\n| ------------- |-------------      | -------------   | -------------          |\n| [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)        | [pner1.th](http://dmserv4.cs.illinois.edu/pner1.th) | NER for (PER, LOC, ORG & MISC) | F1 92.21 |\n| [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)        | [pnp0.th](http://dmserv4.cs.illinois.edu/pnp0.th)   | Chunking                       | F1 95.79 |  \n| Vanilla_NER   |                                                               | NER for (PER, LOC, ORG & MISC) | |\n| Vanilla_NER   |                                                               | Chunking                       | |\n| [AutoNER](https://github.com/shangjingbo1226/AutoNER)       | [autoner0.th](http://dmserv4.cs.illinois.edu/bioner_models/autoner0.th)                                                              | Distant NER trained w.o. line-by-line annotations (Disease, Chemical) | F1 85.30 |\n\n\n### Decode API\n\nThe decode api can be called in the following way:\n```\nfrom lightner import decoder_wrapper\nmodel = decoder_wrapper()\nmodel.decode([\"Ronaldo\", \"won\", \"'t\", \"score\", \"more\", \"than\", \"30\", \"goals\", \"for\", \"Juve\", \".\"])\n```\n\nThe ```decode()``` method also can conduct decoding at document level (takes list of list of ```str``` as input) or corpus level (takes list of list of list of ```str``` as input).\n\nThe ```decoder_wrapper``` method can be customized by choosing a different pre-trained model or passing an additional ```configs``` file as:\n```\nmodel = decoder_wrapper(URL_OR_PATH_TO_CHECKPOINT, configs)\n```\nAnd you can access the config options by:\n```\nlightner decode -h\n```\n\n### Console\n\nAfter installing and downloading the pre-trained mdoels, conduct the inference by \n```\nlightner decode -m MODEL_FILE -i INPUT_FILE -o OUTPUT_FILE\n```\n\nYou can find more options by:\n```\nlightner decode -h\n```\n\nThe current accepted paper format is as below (tokenized by line break and ```-DOCSTART-``` is optional):\n```\n-DOCSTART-\n\nRonaldo\nwon\n't\nscore\nmore\n30\ngoals\nfor\nJuve\n.\n```\n\nThe output would be:\n```\n<PER> Ronaldo </PER> won 't score more than 30 goals for <ORG> Juve </ORG> . \n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LiyuanLucasLiu/LightNER", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "LightNER", "package_url": "https://pypi.org/project/LightNER/", "platform": "", "project_url": "https://pypi.org/project/LightNER/", "project_urls": {"Homepage": "https://github.com/LiyuanLucasLiu/LightNER"}, "release_url": "https://pypi.org/project/LightNER/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A Toolkit for Pre-trained Sequence Labeling Models Inference", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # LightNER<br><br>[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)<br>[![PyPI version](https://badge.fury.io/py/LightNER.svg)](https://badge.fury.io/py/LightNER)<br>[![Downloads](https://pepy.tech/badge/lightner)](https://pepy.tech/project/lightner)<br>&lt;!-- [![Documentation Status](https://readthedocs.org/projects/tensorboard-wrapper/badge/?version=latest)](http://tensorboard-wrapper.readthedocs.io/en/latest/?badge=latest) --&gt;<br><br>**Check Our New NER Toolkit\ud83d\ude80\ud83d\ude80\ud83d\ude80**<br>- **Inference**:<br>  - **[LightNER](https://github.com/LiyuanLucasLiu/LightNER)**: inference w. models pre-trained / trained w. *any* following tools, *efficiently*. <br>- **Training**:<br>  - **[LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)**: train NER models w. efficient contextualized representations.<br>  - **[VanillaNER](https://github.com/LiyuanLucasLiu/Vanilla_NER)**: train vanilla NER models w. pre-trained embedding.<br>- **Distant Training**:<br>  - **[AutoNER](https://github.com/shangjingbo1226/AutoNER)**: train NER models w.o. line-by-line annotations and get competitive performance.<br><br>--------------------------------<br><br>This package supports to conduct inference with models pre-trained by:<br>- [Vanilla_NER](https://github.com/LiyuanLucasLiu/Vanilla_NER): vanilla sequence labeling models.<br>- [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net): sequence labeling models w. efficient contextualized representation.<br>- [AutoNER](https://github.com/shangjingbo1226/AutoNER): distant supervised named entity recognition models (*no line-by-line annotations for training*).<br><br>We are in an early-release beta. Expect some adventures and rough edges.<br><br>## Quick Links<br><br>- [Installation](#installation)<br>- [Usage](#usage)<br><br>## Installation<br><br>To install via pypi:<br>```<br>pip install lightner<br>```<br><br>To build from source:<br>```<br>pip install git+https://github.com/LiyuanLucasLiu/LightNER<br>```<br>or<br>```<br>git clone https://github.com/LiyuanLucasLiu/LightNER.git<br>cd LightNER<br>python setup.py install<br>```<br><br>## Usage<br><br>### Pre-trained Models<br><br>|               | Model             | Task            | Performance            |<br>| ------------- |-------------      | -------------   | -------------          |<br>| [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)        | [pner1.th](http://dmserv4.cs.illinois.edu/pner1.th) | NER for (PER, LOC, ORG &amp; MISC) | F1 92.21 |<br>| [LD-Net](https://github.com/LiyuanLucasLiu/LD-Net)        | [pnp0.th](http://dmserv4.cs.illinois.edu/pnp0.th)   | Chunking                       | F1 95.79 |  <br>| Vanilla_NER   |                                                               | NER for (PER, LOC, ORG &amp; MISC) | |<br>| Vanilla_NER   |                                                               | Chunking                       | |<br>| [AutoNER](https://github.com/shangjingbo1226/AutoNER)       | [autoner0.th](http://dmserv4.cs.illinois.edu/bioner_models/autoner0.th)                                                              | Distant NER trained w.o. line-by-line annotations (Disease, Chemical) | F1 85.30 |<br><br><br>### Decode API<br><br>The decode api can be called in the following way:<br>```<br>from lightner import decoder_wrapper<br>model = decoder_wrapper()<br>model.decode([\"Ronaldo\", \"won\", \"'t\", \"score\", \"more\", \"than\", \"30\", \"goals\", \"for\", \"Juve\", \".\"])<br>```<br><br>The ```decode()``` method also can conduct decoding at document level (takes list of list of ```str``` as input) or corpus level (takes list of list of list of ```str``` as input).<br><br>The ```decoder_wrapper``` method can be customized by choosing a different pre-trained model or passing an additional ```configs``` file as:<br>```<br>model = decoder_wrapper(URL_OR_PATH_TO_CHECKPOINT, configs)<br>```<br>And you can access the config options by:<br>```<br>lightner decode -h<br>```<br><br>### Console<br><br>After installing and downloading the pre-trained mdoels, conduct the inference by <br>```<br>lightner decode -m MODEL_FILE -i INPUT_FILE -o OUTPUT_FILE<br>```<br><br>You can find more options by:<br>```<br>lightner decode -h<br>```<br><br>The current accepted paper format is as below (tokenized by line break and ```-DOCSTART-``` is optional):<br>```<br>-DOCSTART-<br><br>Ronaldo<br>won<br>'t<br>score<br>more<br>30<br>goals<br>for<br>Juve<br>.<br>```<br><br>The output would be:<br>```<br>&lt;PER&gt; Ronaldo &lt;/PER&gt; won 't score more than 30 goals for &lt;ORG&gt; Juve &lt;/ORG&gt; . <br>```\n          </div>"}, "last_serial": 4601636, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a86ea630489ed8e10625d03c7787f98b", "sha256": "2da85886338f400b7f12e0384fcee7826fdbe510681d05f39e19c62a783a569f"}, "downloads": -1, "filename": "LightNER-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a86ea630489ed8e10625d03c7787f98b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13725, "upload_time": "2018-10-02T19:25:50", "upload_time_iso_8601": "2018-10-02T19:25:50.934864Z", "url": "https://files.pythonhosted.org/packages/8d/61/b48c5a6976d581b76121785bd9e465964cbd56ac5ee8ab0e2032c9fc8ce3/LightNER-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8ef412d8562e916cb73a066e094e96a4", "sha256": "f9a45333ef60e7176ef52b7d8b46cf2d33141063f9569858a60814c0e1907378"}, "downloads": -1, "filename": "LightNER-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8ef412d8562e916cb73a066e094e96a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14903, "upload_time": "2018-10-02T21:10:19", "upload_time_iso_8601": "2018-10-02T21:10:19.335693Z", "url": "https://files.pythonhosted.org/packages/74/6f/f7603efe64fcdfa0bd35b9c227c6b60225dd448f834817e43a83ed9d04e5/LightNER-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "63f99d08e1d5e6552dcc373e9c66311c", "sha256": "4f41eb3933d2bf2d0f95b69caf57771f35804a365f0b196352f81679918c6d7a"}, "downloads": -1, "filename": "LightNER-0.1.0.tar.gz", "has_sig": false, "md5_digest": "63f99d08e1d5e6552dcc373e9c66311c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15119, "upload_time": "2018-10-03T05:33:30", "upload_time_iso_8601": "2018-10-03T05:33:30.324282Z", "url": "https://files.pythonhosted.org/packages/3a/12/1e895ce317fc94823fa211da95e232184197ce4f6640276fbb67a94a47aa/LightNER-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "505caabf114ff9cc26cbb9839e75cbf2", "sha256": "00f35194a0fb9d5839ac57ce39bbe1cdb6e09d295fdcee1a79dcca23dda620cd"}, "downloads": -1, "filename": "LightNER-0.1.1.tar.gz", "has_sig": false, "md5_digest": "505caabf114ff9cc26cbb9839e75cbf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15220, "upload_time": "2018-10-03T17:31:25", "upload_time_iso_8601": "2018-10-03T17:31:25.663943Z", "url": "https://files.pythonhosted.org/packages/14/a3/390f689e895ea6857860bb7aed3b33d670972723a0de004126bb6679c818/LightNER-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d9e355a582c602302220095359e7c526", "sha256": "199480d067600dd65f147a1e95e118ee69de1f09727db6c30cf45851ab53ef56"}, "downloads": -1, "filename": "LightNER-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d9e355a582c602302220095359e7c526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15383, "upload_time": "2018-10-05T00:12:39", "upload_time_iso_8601": "2018-10-05T00:12:39.726533Z", "url": "https://files.pythonhosted.org/packages/a7/37/cf9be78962ae4466d4c7c640a3328f069b3f79794d517e6b365bc8f46927/LightNER-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b48939951a8c8b0ff704b3c8ebcca2f5", "sha256": "b67194d465d694ad20c8fcfa5ac4c633654092194a1aee72b322665930c01720"}, "downloads": -1, "filename": "LightNER-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b48939951a8c8b0ff704b3c8ebcca2f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19071, "upload_time": "2018-10-06T21:20:56", "upload_time_iso_8601": "2018-10-06T21:20:56.400514Z", "url": "https://files.pythonhosted.org/packages/58/a6/bc0caec060c1be622a1e709436db8f9f579868b0fec6a0d16bbfdb32f0f4/LightNER-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2fb4997f3b8aeadcdfd9cfb8b931967b", "sha256": "01dba62b221ef454b2ba61bfe9d5cdbe0f74c11b6cc7b6ad4dfdd0614fc80e9f"}, "downloads": -1, "filename": "LightNER-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2fb4997f3b8aeadcdfd9cfb8b931967b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19933, "upload_time": "2018-10-06T22:57:48", "upload_time_iso_8601": "2018-10-06T22:57:48.591630Z", "url": "https://files.pythonhosted.org/packages/af/d7/7846415736cb6f504461cadd7618cd12e5d9da0525ee64d848f8bc46c855/LightNER-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "173287c6f1610408ed6602dc3d9d6937", "sha256": "a850f3dfc132eea58a4bf8dafb731dd8ab2c922f163d5005ddc645aae5fc0d06"}, "downloads": -1, "filename": "LightNER-0.2.2.tar.gz", "has_sig": false, "md5_digest": "173287c6f1610408ed6602dc3d9d6937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19955, "upload_time": "2018-10-09T20:13:43", "upload_time_iso_8601": "2018-10-09T20:13:43.344563Z", "url": "https://files.pythonhosted.org/packages/d7/a2/31e26c2b60e597737f0061c705833a7128a061a9d1aa76d4fcd57c4fca7d/LightNER-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e641bac74e3a459479e227291a0db6e3", "sha256": "41f4e31aea49c6188a14280b45dab69413b28ace38d75464555adf0c681f6f01"}, "downloads": -1, "filename": "LightNER-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e641bac74e3a459479e227291a0db6e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17396, "upload_time": "2018-12-15T04:22:35", "upload_time_iso_8601": "2018-12-15T04:22:35.457498Z", "url": "https://files.pythonhosted.org/packages/f3/ed/0b1d112a829c9f059947fd8617a171019375f8aef0e62a5ea864a75cd1e1/LightNER-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e641bac74e3a459479e227291a0db6e3", "sha256": "41f4e31aea49c6188a14280b45dab69413b28ace38d75464555adf0c681f6f01"}, "downloads": -1, "filename": "LightNER-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e641bac74e3a459479e227291a0db6e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17396, "upload_time": "2018-12-15T04:22:35", "upload_time_iso_8601": "2018-12-15T04:22:35.457498Z", "url": "https://files.pythonhosted.org/packages/f3/ed/0b1d112a829c9f059947fd8617a171019375f8aef0e62a5ea864a75cd1e1/LightNER-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:02 2020"}