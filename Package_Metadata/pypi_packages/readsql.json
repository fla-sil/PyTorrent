{"info": {"author": "Azis", "author_email": "azuolas.krusna@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# readsql\n\nConvert SQL to most human readable format\n\n# Installation \n\n`pip install readsql`\n\n# Usage\n\n- Format SQL code provided in command line\n    - `readsql <SQL_STRING> -s`\n    - e.g., `readsql 'select sushi from tokyo' -s`\n    - prints out `SELECT sushi FROM tokyo`\n- Format an SQL file \n    - `readsql <FILE_PATH>` \n    - e.g., `readsql sql_example.sql`\n    - given a Python file (ends with `.py`), it looks for variables `query` and formats their insides\n    - variable to represent SQL code can be change with `-py` option\n    - e.g., `readsql sql_in_python_variable_example.py -py sql`\n    - given a Python file with this code\n```python\ndef get_query():\n    limit = 6\n    sql = f\"SELEct speed from world where animal='dolphin' limit {limit}\"\n    return sql\n```\nconverts it to \n```python\ndef get_query():\n    limit = 6\n    sql = f\"SELECT speed FROM world WHERE animal='dolphin' LIMIT {limit}\"\n    return sql\n```\n\n# Development\nHaving the repo cloned\n\n- `python readsql tests/sql_example.sql` converts example SQL code to easier readable format\n- `python readsql tests/sql_in_python_example.py` converts example SQL code in Python (it looks for variables `query`)\n- we can change the SQL variable with `-py` option `python readsql tests/sql_in_python_variable_example.py -py sql` \n- `python readsql \"select gold from mine\" -s` takes the `\"select gold from mine\"` string as input and outputs it formatted\n\n# Testing\n\nHave `pytest` installed and run `pytest -v` (-v stands for verbose)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AzisK/readsql/", "keywords": "SQL,Lint,Python", "license": "MIT", "maintainer": "Azis", "maintainer_email": "azuolas.krusna@yahoo.com", "name": "readsql", "package_url": "https://pypi.org/project/readsql/", "platform": "", "project_url": "https://pypi.org/project/readsql/", "project_urls": {"Homepage": "https://github.com/AzisK/readsql/", "Repository": "https://github.com/AzisK/readsql/"}, "release_url": "https://pypi.org/project/readsql/0.1.0/", "requires_dist": ["argparse (>=1.4.0,<2.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Convert SQL to most human readable format", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>readsql</h1>\n<p>Convert SQL to most human readable format</p>\n<h1>Installation</h1>\n<p><code>pip install readsql</code></p>\n<h1>Usage</h1>\n<ul>\n<li>Format SQL code provided in command line\n<ul>\n<li><code>readsql &lt;SQL_STRING&gt; -s</code></li>\n<li>e.g., <code>readsql 'select sushi from tokyo' -s</code></li>\n<li>prints out <code>SELECT sushi FROM tokyo</code></li>\n</ul>\n</li>\n<li>Format an SQL file\n<ul>\n<li><code>readsql &lt;FILE_PATH&gt;</code></li>\n<li>e.g., <code>readsql sql_example.sql</code></li>\n<li>given a Python file (ends with <code>.py</code>), it looks for variables <code>query</code> and formats their insides</li>\n<li>variable to represent SQL code can be change with <code>-py</code> option</li>\n<li>e.g., <code>readsql sql_in_python_variable_example.py -py sql</code></li>\n<li>given a Python file with this code</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">get_query</span><span class=\"p\">():</span>\n    <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n    <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"SELEct speed from world where animal='dolphin' limit </span><span class=\"si\">{</span><span class=\"n\">limit</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">sql</span>\n</pre>\n<p>converts it to</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">get_query</span><span class=\"p\">():</span>\n    <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n    <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"SELECT speed FROM world WHERE animal='dolphin' LIMIT </span><span class=\"si\">{</span><span class=\"n\">limit</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">sql</span>\n</pre>\n<h1>Development</h1>\n<p>Having the repo cloned</p>\n<ul>\n<li><code>python readsql tests/sql_example.sql</code> converts example SQL code to easier readable format</li>\n<li><code>python readsql tests/sql_in_python_example.py</code> converts example SQL code in Python (it looks for variables <code>query</code>)</li>\n<li>we can change the SQL variable with <code>-py</code> option <code>python readsql tests/sql_in_python_variable_example.py -py sql</code></li>\n<li><code>python readsql \"select gold from mine\" -s</code> takes the <code>\"select gold from mine\"</code> string as input and outputs it formatted</li>\n</ul>\n<h1>Testing</h1>\n<p>Have <code>pytest</code> installed and run <code>pytest -v</code> (-v stands for verbose)</p>\n\n          </div>"}, "last_serial": 7182327, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "de0d2c7c4c4fd272c4b3fbd79fb9e513", "sha256": "db118afd713e638dc2c92b473c9b35aafe014c15e4e1355f20e95ae04a957f0b"}, "downloads": -1, "filename": "readsql-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de0d2c7c4c4fd272c4b3fbd79fb9e513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4277, "upload_time": "2020-05-06T18:39:15", "upload_time_iso_8601": "2020-05-06T18:39:15.099198Z", "url": "https://files.pythonhosted.org/packages/c8/5f/1753167eecc28b8aae7ab715d5210a4d44c30dca6b5fa35a26dd0c0e50b9/readsql-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84b132c3164ec3d6e61ec6d947473fe5", "sha256": "1769a79104502c31bbbe356be61571ae212b37fc68baa05159fa2466e519a27f"}, "downloads": -1, "filename": "readsql-0.1.0.tar.gz", "has_sig": false, "md5_digest": "84b132c3164ec3d6e61ec6d947473fe5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3526, "upload_time": "2020-05-06T18:39:17", "upload_time_iso_8601": "2020-05-06T18:39:17.140655Z", "url": "https://files.pythonhosted.org/packages/48/b3/3b9cddc1934560ed227434d6c3693e187af6bd3089c97ee6a46d04120eed/readsql-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de0d2c7c4c4fd272c4b3fbd79fb9e513", "sha256": "db118afd713e638dc2c92b473c9b35aafe014c15e4e1355f20e95ae04a957f0b"}, "downloads": -1, "filename": "readsql-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de0d2c7c4c4fd272c4b3fbd79fb9e513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4277, "upload_time": "2020-05-06T18:39:15", "upload_time_iso_8601": "2020-05-06T18:39:15.099198Z", "url": "https://files.pythonhosted.org/packages/c8/5f/1753167eecc28b8aae7ab715d5210a4d44c30dca6b5fa35a26dd0c0e50b9/readsql-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84b132c3164ec3d6e61ec6d947473fe5", "sha256": "1769a79104502c31bbbe356be61571ae212b37fc68baa05159fa2466e519a27f"}, "downloads": -1, "filename": "readsql-0.1.0.tar.gz", "has_sig": false, "md5_digest": "84b132c3164ec3d6e61ec6d947473fe5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3526, "upload_time": "2020-05-06T18:39:17", "upload_time_iso_8601": "2020-05-06T18:39:17.140655Z", "url": "https://files.pythonhosted.org/packages/48/b3/3b9cddc1934560ed227434d6c3693e187af6bd3089c97ee6a46d04120eed/readsql-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:24 2020"}