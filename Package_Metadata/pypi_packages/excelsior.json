{"info": {"author": "Peter Hillerstr\u00f6m", "author_email": "peter.hillerstrom@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Spreadsheet", "Topic :: Text Processing :: Filters", "Topic :: Utilities"], "description": "Excelsior\n=========\n\nExcelsior is a tool to convert Excel spreadsheets into TSV, CSV, Json or Yaml.\nReads all sheets of the spreasheets.\n\nUses `xlrd <http://www.python-excel.org/>`_ for reading the Excel\nfiles, and thus supports the new `Open Office XML file\nformat <https://en.wikipedia.org/wiki/Office_Open_XML>`_ (.xlsx\nextension).\n\nSupported output formats are `tab separated values\n(.tsv) <http://www.cs.tut.fi/~jkorpela/TSV.html>`_, `comma separated\nvalues (.csv) <https://en.wikipedia.org/wiki/Comma-separated_values>`_,\nYaml and JSON.\n\nFor TSV and CSV output, uses the Python csv module from the standard library.\n\n\nInstallation\n============\n\n.. code-block:: bash\n\n    $ pip install excelsior\n\n\nUsage\n=====\n\nBy default outputs into standard output, and separate sheets are separated by\na `form feed <https://en.wikipedia.org/wiki/Page_break#Form_feed>`_ and new\nline characters (``\\x0c\\n``), followed by a header line of the form ``# Sheet\nname #\\n``.\n\nWhen writing onto files with the ``-w`` option, no such characters or headers\nare written.\n\nOutput TSV:\n-----------\n\n.. code-block:: bash\n\n    $ excelsior -f tsv excel.xlsx\n\nConvert into TSV and write to files:\n------------------------------------\n\n.. code-block:: bash\n\n    $ excelsior -w -f tsv excel.xlsx another-excel.xls\n\nThis will save the output into ``<filename>.tsv``, if the spreasheet has only  \none sheet, or ``<filename>-<sheet>.tsv`` if it has multiple sheets.\n\nYou can also pipe in the filenames (separated by newlines):\n\n.. code-block:: bash\n\n    $ echo \"ds140-bauxi.xlsx\\nds140-alumi.xlsx\" | excelsior -w -f tsv\n    ds140-bauxi-Bauxite.tsv: written\n    ds140-bauxi-Alumina.tsv: written\n    ds140-alumi.tsv: written\n\nShow help:\n----------\n\n.. code-block:: bash\n\n    $ excelsior -h", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peterhil/excelsior", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "excelsior", "package_url": "https://pypi.org/project/excelsior/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/excelsior/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/peterhil/excelsior"}, "release_url": "https://pypi.org/project/excelsior/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "Convert Excel spreadsheets into TSV, CSV, Json or Yaml format.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"excelsior\">\n<h2>Excelsior</h2>\n<p>Excelsior is a tool to convert Excel spreadsheets into TSV, CSV, Json or Yaml.\nReads all sheets of the spreasheets.</p>\n<p>Uses <a href=\"http://www.python-excel.org/\" rel=\"nofollow\">xlrd</a> for reading the Excel\nfiles, and thus supports the new <a href=\"https://en.wikipedia.org/wiki/Office_Open_XML\" rel=\"nofollow\">Open Office XML file\nformat</a> (.xlsx\nextension).</p>\n<p>Supported output formats are <a href=\"http://www.cs.tut.fi/~jkorpela/TSV.html\" rel=\"nofollow\">tab separated values\n(.tsv)</a>, <a href=\"https://en.wikipedia.org/wiki/Comma-separated_values\" rel=\"nofollow\">comma separated\nvalues (.csv)</a>,\nYaml and JSON.</p>\n<p>For TSV and CSV output, uses the Python csv module from the standard library.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install excelsior\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>By default outputs into standard output, and separate sheets are separated by\na <a href=\"https://en.wikipedia.org/wiki/Page_break#Form_feed\" rel=\"nofollow\">form feed</a> and new\nline characters (<tt>\\x0c\\n</tt>), followed by a header line of the form <tt># Sheet\nname #\\n</tt>.</p>\n<p>When writing onto files with the <tt><span class=\"pre\">-w</span></tt> option, no such characters or headers\nare written.</p>\n<div id=\"output-tsv\">\n<h3>Output TSV:</h3>\n<pre>$ excelsior -f tsv excel.xlsx\n</pre>\n</div>\n<div id=\"convert-into-tsv-and-write-to-files\">\n<h3>Convert into TSV and write to files:</h3>\n<pre>$ excelsior -w -f tsv excel.xlsx another-excel.xls\n</pre>\n<p>This will save the output into <tt><span class=\"pre\">&lt;filename&gt;.tsv</span></tt>, if the spreasheet has only\none sheet, or <tt><span class=\"pre\">&lt;filename&gt;-&lt;sheet&gt;.tsv</span></tt> if it has multiple sheets.</p>\n<p>You can also pipe in the filenames (separated by newlines):</p>\n<pre>$ <span class=\"nb\">echo</span> <span class=\"s2\">\"ds140-bauxi.xlsx\\nds140-alumi.xlsx\"</span> <span class=\"p\">|</span> excelsior -w -f tsv\nds140-bauxi-Bauxite.tsv: written\nds140-bauxi-Alumina.tsv: written\nds140-alumi.tsv: written\n</pre>\n</div>\n<div id=\"show-help\">\n<h3>Show help:</h3>\n<pre>$ excelsior -h\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1283322, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a9dd80fb0d22c6a5dfcbc2e0b26c5b7", "sha256": "cb0df3dc2ddf44dda17fc5332821a69a94a61b5a3f4b9e0b0a9fed433a7d6451"}, "downloads": -1, "filename": "excelsior-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4a9dd80fb0d22c6a5dfcbc2e0b26c5b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3487, "upload_time": "2014-10-25T21:50:27", "upload_time_iso_8601": "2014-10-25T21:50:27.131267Z", "url": "https://files.pythonhosted.org/packages/8c/18/190df3d706565f2f3d01b2a3bff73201826a1af80c5087243fb50f2c466c/excelsior-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d655f09bdeaf1dfc9832b6eea1402c41", "sha256": "7109831f9b0c3e26265032daa87e1bfe4d207a674ea6d9a4d96a868919df56a9"}, "downloads": -1, "filename": "excelsior-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d655f09bdeaf1dfc9832b6eea1402c41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2014-10-25T22:25:00", "upload_time_iso_8601": "2014-10-25T22:25:00.677719Z", "url": "https://files.pythonhosted.org/packages/22/c2/6be7d0fff01092c98a0865cd3b03a717df3bac1ebaf251c3d196cec7b047/excelsior-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d91e36c2082921250317786ab9769f28", "sha256": "1d14eaee7813e43fedcd00bcc5788bdf5806abeab46c2a4d838e71dd504177a7"}, "downloads": -1, "filename": "excelsior-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d91e36c2082921250317786ab9769f28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4416, "upload_time": "2014-10-25T23:49:57", "upload_time_iso_8601": "2014-10-25T23:49:57.480259Z", "url": "https://files.pythonhosted.org/packages/d4/9f/60c2541148a19024002d108bfe5a5e6bac16a756dc1d5fe643528947f785/excelsior-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "cbd5ef51be225975ba40ea5696389885", "sha256": "e6bc0e8ad3c3b441402d7d30612d2c332a1e09c37772ab2051142175069d7fd9"}, "downloads": -1, "filename": "excelsior-0.0.4.tar.gz", "has_sig": false, "md5_digest": "cbd5ef51be225975ba40ea5696389885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5045, "upload_time": "2014-10-26T15:51:38", "upload_time_iso_8601": "2014-10-26T15:51:38.472151Z", "url": "https://files.pythonhosted.org/packages/fa/73/812a3b405bacdd815278538911c53987f516217c3e797df68568a81e54bf/excelsior-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "bea8c4255118ecd6e07c51ea37360ce3", "sha256": "ba4463aed574eaad577a750aede8be39474ceaacf60cdc3c7a574ca74109dd3d"}, "downloads": -1, "filename": "excelsior-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bea8c4255118ecd6e07c51ea37360ce3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5129, "upload_time": "2014-10-26T16:53:30", "upload_time_iso_8601": "2014-10-26T16:53:30.020838Z", "url": "https://files.pythonhosted.org/packages/12/10/b25ff3de1355d4ee81f4fd25339cddd85c59abc12d36135b47cd27cd226e/excelsior-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bea8c4255118ecd6e07c51ea37360ce3", "sha256": "ba4463aed574eaad577a750aede8be39474ceaacf60cdc3c7a574ca74109dd3d"}, "downloads": -1, "filename": "excelsior-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bea8c4255118ecd6e07c51ea37360ce3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5129, "upload_time": "2014-10-26T16:53:30", "upload_time_iso_8601": "2014-10-26T16:53:30.020838Z", "url": "https://files.pythonhosted.org/packages/12/10/b25ff3de1355d4ee81f4fd25339cddd85c59abc12d36135b47cd27cd226e/excelsior-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:54 2020"}