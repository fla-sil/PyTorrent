{"info": {"author": "Kyle Laplante", "author_email": "kyle.laplante@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Communications :: File Sharing", "Topic :: Internet :: File Transfer Protocol (FTP)", "Topic :: Internet :: WWW/HTTP", "Topic :: System :: Filesystems", "Topic :: Utilities"], "description": "A class to show a progress bar of a certain file.\r\n    It will display progress up to 100%.\r\n\r\n    Example:\r\n        from Pbar import Pbar\r\n        myfile = Pbar(pfile=\"/tmp/somefile\", size='25.9kb, timeout=20')\r\n        myfile.show_progress()\r\n\r\n    The above example will watch the file '/tmp/somefile' and display\r\n    the progress up to 25.9kb. If the file does not exist within 20\r\n    seconds then it will raise an exception.\r\n\r\n    Example (using fork to get the file):\r\n        from Pbar import Pbar\r\n        import os\r\n        url = 'http://www.someurl.com/path/to/somefile'\r\n        child = os.fork()\r\n        if child == 0:\r\n            os.system('wget %s -q -O /tmp/somefile' %url)\r\n        else:\r\n            myfile = Pbar(pfile='/tmp/somefile', size='120mb', timeout=10)\r\n            myfile.show_progress()\r\n\r\n        Required args: pfile, size\r\n            + pfile:\r\n                  String (path to file). The file to watch.\r\n            + size:\r\n                  String of number with denomination. (e.g. 100mb).\r\n                  The expected total size of the file. e.g. '2gb'. (Valid sizes = b, kb, mb, gb).\r\n\r\n        Optional args: timeout, show_size_progress\r\n            + timeout:\r\n                  Integer. The timeout (in seconds) Pbar will wait for the file \r\n                  to exist once show_progress() has been called. This \r\n                  is useful if you are waiting for the file to get created.\r\n                  The default is 5 seconds.\r\n            + show_size_progress:\r\n                  Boolean. Default is False. Setting this to true\r\n                  will change the output from showing 'File: and Current size:'\r\n                  to showing the 'current size of total size'. This way is not\r\n                  best.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "progress bar download file size", "license": "", "maintainer": "", "maintainer_email": "", "name": "Pbar", "package_url": "https://pypi.org/project/Pbar/", "platform": "Unix, Linux, Windows", "project_url": "https://pypi.org/project/Pbar/", "project_urls": null, "release_url": "https://pypi.org/project/Pbar/1.0/", "requires_dist": null, "requires_python": null, "summary": "Progress bar to watch file size", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            A class to show a progress bar of a certain file.\n<br>    It will display progress up to 100%.\n<br>\n<br>    Example:\n<br>        from Pbar import Pbar\n<br>        myfile = Pbar(pfile=\"/tmp/somefile\", size='25.9kb, timeout=20')\n<br>        myfile.show_progress()\n<br>\n<br>    The above example will watch the file '/tmp/somefile' and display\n<br>    the progress up to 25.9kb. If the file does not exist within 20\n<br>    seconds then it will raise an exception.\n<br>\n<br>    Example (using fork to get the file):\n<br>        from Pbar import Pbar\n<br>        import os\n<br>        url = 'http://www.someurl.com/path/to/somefile'\n<br>        child = os.fork()\n<br>        if child == 0:\n<br>            os.system('wget %s -q -O /tmp/somefile' %url)\n<br>        else:\n<br>            myfile = Pbar(pfile='/tmp/somefile', size='120mb', timeout=10)\n<br>            myfile.show_progress()\n<br>\n<br>        Required args: pfile, size\n<br>            + pfile:\n<br>                  String (path to file). The file to watch.\n<br>            + size:\n<br>                  String of number with denomination. (e.g. 100mb).\n<br>                  The expected total size of the file. e.g. '2gb'. (Valid sizes = b, kb, mb, gb).\n<br>\n<br>        Optional args: timeout, show_size_progress\n<br>            + timeout:\n<br>                  Integer. The timeout (in seconds) Pbar will wait for the file \n<br>                  to exist once show_progress() has been called. This \n<br>                  is useful if you are waiting for the file to get created.\n<br>                  The default is 5 seconds.\n<br>            + show_size_progress:\n<br>                  Boolean. Default is False. Setting this to true\n<br>                  will change the output from showing 'File: and Current size:'\n<br>                  to showing the 'current size of total size'. This way is not\n<br>                  best.\n          </div>"}, "last_serial": 824585, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b8ac8e0d10c93ad25c8fb43ef0834106", "sha256": "a77d5a966cb0aec9b02dfd717d3d289147852dbb10de4cdf5dd3af5ddf247bb5"}, "downloads": -1, "filename": "Pbar-1.0.tar.gz", "has_sig": false, "md5_digest": "b8ac8e0d10c93ad25c8fb43ef0834106", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 2230, "upload_time": "2013-07-25T04:11:36", "upload_time_iso_8601": "2013-07-25T04:11:36.906985Z", "url": "https://files.pythonhosted.org/packages/10/f6/0367bb71ee5e6a435d56af90567c56c4a0294712db75c36e23b31be6ed88/Pbar-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8ac8e0d10c93ad25c8fb43ef0834106", "sha256": "a77d5a966cb0aec9b02dfd717d3d289147852dbb10de4cdf5dd3af5ddf247bb5"}, "downloads": -1, "filename": "Pbar-1.0.tar.gz", "has_sig": false, "md5_digest": "b8ac8e0d10c93ad25c8fb43ef0834106", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 2230, "upload_time": "2013-07-25T04:11:36", "upload_time_iso_8601": "2013-07-25T04:11:36.906985Z", "url": "https://files.pythonhosted.org/packages/10/f6/0367bb71ee5e6a435d56af90567c56c4a0294712db75c36e23b31be6ed88/Pbar-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:38 2020"}