{"info": {"author": "naonder", "author_email": "nate.a.onder@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# NetworkConfigUtility\n\nNetworkConfigUtility is currently a small program to assist with pushing configuration data to network devices. It can\nalso retrieve state data. This utility is built using the Nornir framework:\n\nhttps://github.com/nornir-automation/nornir\n\n## Source Code\nhttps://github.com/naonder/NetworkConfigUtility\n\n## PyPI package\nhttps://pypi.org/project/networkconfigutility\n\n## Setup\n    pip install networkconfigutility\n    \nSee sample hosts, groups, and defaults file for reference. Also see the following for more information on Nornir and\nSimpleInventory\n\nhttps://nornir.readthedocs.io/en/stable/tutorials/intro/inventory.html\n\nAlso - see the sample 'configuration.ini' file on how to set it up properly\n\nLastly - this requires that ntc-templates are downloaded to the host running this program:\n\nhttps://github.com/networktocode/ntc-templates\n\n## ntc-templates\nEasiest method is to download and keep the ntc-templates in the home directory of the user running this program.\n\n    git clone https://github.com/networktocode/ntc-templates\n\nOtherwise you can explicitly tell the program (namely Netmiko) where to look for them (example is for Linux):\n\n    export NET_TEXTFSM=/path/to/ntc-templates/templates/\n    \nMore information is here:\n\nhttps://pynet.twb-tech.com/blog/automation/netmiko-textfsm.html\n\n## Usage\nRun using the following:\n\n    python -m networkconfigutility [options\\files\\filters]\n\nExample of current capabilities:\n\n\n    usage: networkconfigutility [-h] -config path to config file for device(s |\n                            -getters GETTERS [GETTERS ...] | -cli command)\n                            configuration_file ftype filter\n\n    positional arguments:\n      configuration_file    name of configuration file for program itself\n      ftype                 type of filter to use\n      filter                name of device or group\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      \n      -config path to config file for device(s)\n      \n                            change configuration on a device or groups of devices\n                            \n      -merge path to config file for device(s)\n      \n                        merge a configuration to a device or group of devices\n\n                            \n      -getters GETTERS [GETTERS ...]\n      \n                            use built-in NAPALM getters to retrieve information\n                            \n      -cli command          use the system CLI to retrieve information\n      \n        -getters_extra GETTERS_EXTRA [GETTERS_EXTRA ...]\n        \n                        optional, additional getters to use\n                        \n      -cli_extra command    optional, additional CLI to retrieve information\n\n\nExample execution of the getters looks like such:\n\n    Enter username: test-user\n    Input password: \n    napalm_get**********************************************************************\n    * test-device ** changed : False ***********************************************\n    vvvv napalm_get ** changed : False vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv INFO\n    { 'get_interfaces_ip': { 'Vlan10': { 'ipv4': { '10.96.128.18': { 'prefix_length': 24}}}}}\n    ^^^^ END napalm_get ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nReturned output is utilized from the Nornir 'print_result()' method", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "networkconfigutility", "package_url": "https://pypi.org/project/networkconfigutility/", "platform": "", "project_url": "https://pypi.org/project/networkconfigutility/", "project_urls": null, "release_url": "https://pypi.org/project/networkconfigutility/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Utility for pushing configuration data to network devices and retrieving state data", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NetworkConfigUtility</h1>\n<p>NetworkConfigUtility is currently a small program to assist with pushing configuration data to network devices. It can\nalso retrieve state data. This utility is built using the Nornir framework:</p>\n<p><a href=\"https://github.com/nornir-automation/nornir\" rel=\"nofollow\">https://github.com/nornir-automation/nornir</a></p>\n<h2>Source Code</h2>\n<p><a href=\"https://github.com/naonder/NetworkConfigUtility\" rel=\"nofollow\">https://github.com/naonder/NetworkConfigUtility</a></p>\n<h2>PyPI package</h2>\n<p><a href=\"https://pypi.org/project/networkconfigutility\" rel=\"nofollow\">https://pypi.org/project/networkconfigutility</a></p>\n<h2>Setup</h2>\n<pre><code>pip install networkconfigutility\n</code></pre>\n<p>See sample hosts, groups, and defaults file for reference. Also see the following for more information on Nornir and\nSimpleInventory</p>\n<p><a href=\"https://nornir.readthedocs.io/en/stable/tutorials/intro/inventory.html\" rel=\"nofollow\">https://nornir.readthedocs.io/en/stable/tutorials/intro/inventory.html</a></p>\n<p>Also - see the sample 'configuration.ini' file on how to set it up properly</p>\n<p>Lastly - this requires that ntc-templates are downloaded to the host running this program:</p>\n<p><a href=\"https://github.com/networktocode/ntc-templates\" rel=\"nofollow\">https://github.com/networktocode/ntc-templates</a></p>\n<h2>ntc-templates</h2>\n<p>Easiest method is to download and keep the ntc-templates in the home directory of the user running this program.</p>\n<pre><code>git clone https://github.com/networktocode/ntc-templates\n</code></pre>\n<p>Otherwise you can explicitly tell the program (namely Netmiko) where to look for them (example is for Linux):</p>\n<pre><code>export NET_TEXTFSM=/path/to/ntc-templates/templates/\n</code></pre>\n<p>More information is here:</p>\n<p><a href=\"https://pynet.twb-tech.com/blog/automation/netmiko-textfsm.html\" rel=\"nofollow\">https://pynet.twb-tech.com/blog/automation/netmiko-textfsm.html</a></p>\n<h2>Usage</h2>\n<p>Run using the following:</p>\n<pre><code>python -m networkconfigutility [options\\files\\filters]\n</code></pre>\n<p>Example of current capabilities:</p>\n<pre><code>usage: networkconfigutility [-h] -config path to config file for device(s |\n                        -getters GETTERS [GETTERS ...] | -cli command)\n                        configuration_file ftype filter\n\npositional arguments:\n  configuration_file    name of configuration file for program itself\n  ftype                 type of filter to use\n  filter                name of device or group\n\noptional arguments:\n  -h, --help            show this help message and exit\n  \n  -config path to config file for device(s)\n  \n                        change configuration on a device or groups of devices\n                        \n  -merge path to config file for device(s)\n  \n                    merge a configuration to a device or group of devices\n\n                        \n  -getters GETTERS [GETTERS ...]\n  \n                        use built-in NAPALM getters to retrieve information\n                        \n  -cli command          use the system CLI to retrieve information\n  \n    -getters_extra GETTERS_EXTRA [GETTERS_EXTRA ...]\n    \n                    optional, additional getters to use\n                    \n  -cli_extra command    optional, additional CLI to retrieve information\n</code></pre>\n<p>Example execution of the getters looks like such:</p>\n<pre><code>Enter username: test-user\nInput password: \nnapalm_get**********************************************************************\n* test-device ** changed : False ***********************************************\nvvvv napalm_get ** changed : False vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv INFO\n{ 'get_interfaces_ip': { 'Vlan10': { 'ipv4': { '10.96.128.18': { 'prefix_length': 24}}}}}\n^^^^ END napalm_get ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n<p>Returned output is utilized from the Nornir 'print_result()' method</p>\n\n          </div>"}, "last_serial": 5574407, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "322b916b1b1a5428b384a77afa0cdbc1", "sha256": "3af1345f2c92007f5e41099c432c05d65aeb36ca32a18ea9908f515c4a0bd93e"}, "downloads": -1, "filename": "networkconfigutility-1.0.0.tar.gz", "has_sig": false, "md5_digest": "322b916b1b1a5428b384a77afa0cdbc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4297, "upload_time": "2019-07-18T20:23:22", "upload_time_iso_8601": "2019-07-18T20:23:22.617871Z", "url": "https://files.pythonhosted.org/packages/49/42/82bc3699a636f0548789ae4072906a24d84d7c6010fd18bbf512b2caeae4/networkconfigutility-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "69f5ad528ec37375bdc6e7f5927d4df1", "sha256": "923d662a8688311557ddc10632e7a6964795b63994fefe8f5450f6ce1c70a26b"}, "downloads": -1, "filename": "networkconfigutility-1.0.1.tar.gz", "has_sig": false, "md5_digest": "69f5ad528ec37375bdc6e7f5927d4df1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4378, "upload_time": "2019-07-23T19:46:22", "upload_time_iso_8601": "2019-07-23T19:46:22.668438Z", "url": "https://files.pythonhosted.org/packages/24/df/de715da02f385f99656e7e30000bbc0964f31745739087a5344481cd57ac/networkconfigutility-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "33cc0205a92bedb64eb72a416caedba8", "sha256": "a504cc63d24b215bdacf098badf88f66b464ed06dca31dba4c2a60173782dec2"}, "downloads": -1, "filename": "networkconfigutility-1.0.2.tar.gz", "has_sig": false, "md5_digest": "33cc0205a92bedb64eb72a416caedba8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4390, "upload_time": "2019-07-23T20:44:19", "upload_time_iso_8601": "2019-07-23T20:44:19.175108Z", "url": "https://files.pythonhosted.org/packages/45/30/e60caacb6d3cc87bc0dd1a2de093d79bd9d7a321892623cd633ff96f59cd/networkconfigutility-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "fc4529a28b4e601f3d0e3a1900a81eb3", "sha256": "65b0a1d85649ebb1b4b7ba16c1c929e97a944623123751a015c6866cfcfffa5a"}, "downloads": -1, "filename": "networkconfigutility-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fc4529a28b4e601f3d0e3a1900a81eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4626, "upload_time": "2019-07-23T20:48:06", "upload_time_iso_8601": "2019-07-23T20:48:06.344870Z", "url": "https://files.pythonhosted.org/packages/91/a4/b2e73040b95e8814d62065c0afbba64ca3d6268541c7cf35c93a8a2d0071/networkconfigutility-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc4529a28b4e601f3d0e3a1900a81eb3", "sha256": "65b0a1d85649ebb1b4b7ba16c1c929e97a944623123751a015c6866cfcfffa5a"}, "downloads": -1, "filename": "networkconfigutility-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fc4529a28b4e601f3d0e3a1900a81eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4626, "upload_time": "2019-07-23T20:48:06", "upload_time_iso_8601": "2019-07-23T20:48:06.344870Z", "url": "https://files.pythonhosted.org/packages/91/a4/b2e73040b95e8814d62065c0afbba64ca3d6268541c7cf35c93a8a2d0071/networkconfigutility-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:53 2020"}