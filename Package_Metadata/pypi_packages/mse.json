{"info": {"author": "fqaiser94", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "This library adds `withField`, `withFieldRenamed`, and `dropFields` methods to the Column class allowing users to easily add, rename, and drop fields inside StructType columns. \nThe signature and behaviour of these methods is intended to be similar to their Dataset equivalents, namely the `withColumn`, `withColumnRenamed`, and `drop` methods.\n\nThe methods themselves are backed by efficient Catalyst Expressions and as a result, should provide better performance than equivalent UDFs. \nWhile this library \"monkey patches\" the methods on to the Column class, \nthere is an on-going effort to add these methods natively to the Column class in the Apache Spark SQL project. \nYou can follow along with the progress of this initiative in [SPARK-22231](https://issues.apache.org/jira/browse/SPARK-22231).\n\nIf you find this project useful, please consider supporting it by giving a star!\n\n# Supported Spark versions\n\nMSE should work without any further requirements on Spark/PySpark 2.4.x. \nThe library is available for Python 3.x.\n\n# Installation\n\nStable releases of MSE are published to PyPi.\nYou will also need to provide your PySpark application/s with the path to the MSE jar which you can get from [here](https://search.maven.org/artifact/com.github.fqaiser94/mse_2.11).  \nFor example: \n\n```bash\npip install mse\ncurl https://repo1.maven.org/maven2/com/github/fqaiser94/mse_2.11/0.2.4/mse_2.11-0.2.4.jar --output mse.jar\npyspark --jars mse.jar\n```\n\nIf you get errors like `TypeError: 'JavaPackage' object is not callable`, this usually indicates that you haven't \nprovided PySpark with the correct path to the MSE jar.\n\n# Usage \nTo bring in to scope the (implicit) Column methods in Python, use:\n\n```python3\nfrom mse import *\n```\n\nYou can now use these methods to manipulate fields in a StructType column: \n\n```python3\nfrom pyspark.sql import *\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.types import *\nfrom mse import *\n\n# Generate some example data\nstructLevel1 = spark.createDataFrame(\n  sc.parallelize([Row(Row(1, None, 3))]),\n  StructType([\n    StructField(\"a\", StructType([\n      StructField(\"a\", IntegerType()),\n      StructField(\"b\", IntegerType()),\n      StructField(\"c\", IntegerType())]))])).cache()\n\nstructLevel1.show()\n# +-------+                                                                       \n# |      a|\n# +-------+\n# |[1,, 3]|\n# +-------+\n\nstructLevel1.printSchema()\n#  root\n#   |-- a: struct (nullable = true)\n#   |    |-- a: integer (nullable = true)\n#   |    |-- b: integer (nullable = true)\n#   |    |-- c: integer (nullable = true)\n\n#  add new field to top level struct\nstructLevel1.withColumn(\"a\", col(\"a\").withField(\"d\", lit(4))).show()\n#  +----------+\n#  |         a|\n#  +----------+\n#  |[1,, 3, 4]|\n#  +----------+\n\n#  replace field in top level struct\nstructLevel1.withColumn(\"a\", col(\"a\").withField(\"b\", lit(2))).show()\n#  +---------+\n#  |        a|\n#  +---------+\n#  |[1, 2, 3]|\n#  +---------+\n\n#  rename field in top level struct\nstructLevel1.withColumn(\"a\", col(\"a\").withFieldRenamed(\"b\", \"z\")).printSchema()\n#  root\n#   |-- a: struct (nullable = true)\n#   |    |-- a: integer (nullable = true)\n#   |    |-- z: integer (nullable = true)\n#   |    |-- c: integer (nullable = true)\n\n#  drop field in top level struct\nstructLevel1.withColumn(\"a\", col(\"a\").dropFields(\"b\")).show()\n#  +------+\n#  |     a|\n#  +------+\n#  |[1, 3]|\n#  +------+\n```\n\nFor more complicated examples, see the GitHub page. \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fqaiser94/mse", "keywords": "pyspark,struct,StructType,add,drop,rename", "license": "Apache license 2.0", "maintainer": "", "maintainer_email": "", "name": "mse", "package_url": "https://pypi.org/project/mse/", "platform": "", "project_url": "https://pypi.org/project/mse/", "project_urls": {"Homepage": "https://github.com/fqaiser94/mse"}, "release_url": "https://pypi.org/project/mse/0.1.4/", "requires_dist": ["pyspark (>=2.4)"], "requires_python": "", "summary": "Make Structs Easy (MSE)", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library adds <code>withField</code>, <code>withFieldRenamed</code>, and <code>dropFields</code> methods to the Column class allowing users to easily add, rename, and drop fields inside StructType columns.\nThe signature and behaviour of these methods is intended to be similar to their Dataset equivalents, namely the <code>withColumn</code>, <code>withColumnRenamed</code>, and <code>drop</code> methods.</p>\n<p>The methods themselves are backed by efficient Catalyst Expressions and as a result, should provide better performance than equivalent UDFs.\nWhile this library \"monkey patches\" the methods on to the Column class,\nthere is an on-going effort to add these methods natively to the Column class in the Apache Spark SQL project.\nYou can follow along with the progress of this initiative in <a href=\"https://issues.apache.org/jira/browse/SPARK-22231\" rel=\"nofollow\">SPARK-22231</a>.</p>\n<p>If you find this project useful, please consider supporting it by giving a star!</p>\n<h1>Supported Spark versions</h1>\n<p>MSE should work without any further requirements on Spark/PySpark 2.4.x.\nThe library is available for Python 3.x.</p>\n<h1>Installation</h1>\n<p>Stable releases of MSE are published to PyPi.\nYou will also need to provide your PySpark application/s with the path to the MSE jar which you can get from <a href=\"https://search.maven.org/artifact/com.github.fqaiser94/mse_2.11\" rel=\"nofollow\">here</a>.<br>\nFor example:</p>\n<pre>pip install mse\ncurl https://repo1.maven.org/maven2/com/github/fqaiser94/mse_2.11/0.2.4/mse_2.11-0.2.4.jar --output mse.jar\npyspark --jars mse.jar\n</pre>\n<p>If you get errors like <code>TypeError: 'JavaPackage' object is not callable</code>, this usually indicates that you haven't\nprovided PySpark with the correct path to the MSE jar.</p>\n<h1>Usage</h1>\n<p>To bring in to scope the (implicit) Column methods in Python, use:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mse</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>You can now use these methods to manipulate fields in a StructType column:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyspark.sql</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyspark.sql.functions</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyspark.sql.types</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mse</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Generate some example data</span>\n<span class=\"n\">structLevel1</span> <span class=\"o\">=</span> <span class=\"n\">spark</span><span class=\"o\">.</span><span class=\"n\">createDataFrame</span><span class=\"p\">(</span>\n  <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">parallelize</span><span class=\"p\">([</span><span class=\"n\">Row</span><span class=\"p\">(</span><span class=\"n\">Row</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))]),</span>\n  <span class=\"n\">StructType</span><span class=\"p\">([</span>\n    <span class=\"n\">StructField</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">StructType</span><span class=\"p\">([</span>\n      <span class=\"n\">StructField</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">IntegerType</span><span class=\"p\">()),</span>\n      <span class=\"n\">StructField</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">IntegerType</span><span class=\"p\">()),</span>\n      <span class=\"n\">StructField</span><span class=\"p\">(</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"n\">IntegerType</span><span class=\"p\">())]))]))</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">()</span>\n\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"c1\"># +-------+                                                                       </span>\n<span class=\"c1\"># |      a|</span>\n<span class=\"c1\"># +-------+</span>\n<span class=\"c1\"># |[1,, 3]|</span>\n<span class=\"c1\"># +-------+</span>\n\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">printSchema</span><span class=\"p\">()</span>\n<span class=\"c1\">#  root</span>\n<span class=\"c1\">#   |-- a: struct (nullable = true)</span>\n<span class=\"c1\">#   |    |-- a: integer (nullable = true)</span>\n<span class=\"c1\">#   |    |-- b: integer (nullable = true)</span>\n<span class=\"c1\">#   |    |-- c: integer (nullable = true)</span>\n\n<span class=\"c1\">#  add new field to top level struct</span>\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">withColumn</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">withField</span><span class=\"p\">(</span><span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"n\">lit</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"c1\">#  +----------+</span>\n<span class=\"c1\">#  |         a|</span>\n<span class=\"c1\">#  +----------+</span>\n<span class=\"c1\">#  |[1,, 3, 4]|</span>\n<span class=\"c1\">#  +----------+</span>\n\n<span class=\"c1\">#  replace field in top level struct</span>\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">withColumn</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">withField</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">lit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"c1\">#  +---------+</span>\n<span class=\"c1\">#  |        a|</span>\n<span class=\"c1\">#  +---------+</span>\n<span class=\"c1\">#  |[1, 2, 3]|</span>\n<span class=\"c1\">#  +---------+</span>\n\n<span class=\"c1\">#  rename field in top level struct</span>\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">withColumn</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">withFieldRenamed</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"z\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">printSchema</span><span class=\"p\">()</span>\n<span class=\"c1\">#  root</span>\n<span class=\"c1\">#   |-- a: struct (nullable = true)</span>\n<span class=\"c1\">#   |    |-- a: integer (nullable = true)</span>\n<span class=\"c1\">#   |    |-- z: integer (nullable = true)</span>\n<span class=\"c1\">#   |    |-- c: integer (nullable = true)</span>\n\n<span class=\"c1\">#  drop field in top level struct</span>\n<span class=\"n\">structLevel1</span><span class=\"o\">.</span><span class=\"n\">withColumn</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dropFields</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"c1\">#  +------+</span>\n<span class=\"c1\">#  |     a|</span>\n<span class=\"c1\">#  +------+</span>\n<span class=\"c1\">#  |[1, 3]|</span>\n<span class=\"c1\">#  +------+</span>\n</pre>\n<p>For more complicated examples, see the GitHub page.</p>\n\n          </div>"}, "last_serial": 6908221, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "f52be867d4a70d6537331a1f24f96435", "sha256": "0538c88036cf3e03a7272b2e917046cd9459d9389e8c9a34e040f28fccd36f95"}, "downloads": -1, "filename": "mse-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f52be867d4a70d6537331a1f24f96435", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7777, "upload_time": "2020-03-17T00:27:10", "upload_time_iso_8601": "2020-03-17T00:27:10.473969Z", "url": "https://files.pythonhosted.org/packages/97/e3/954cac452b8a261ceac023bfe46d398f3a6262decef9df37ba7286e54ba8/mse-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34a09440139936478cdde44c348e33da", "sha256": "30f82b67497325f9b5954c553b1bcee4106e5a122092a265da86e096a198b8ce"}, "downloads": -1, "filename": "mse-0.1.2.tar.gz", "has_sig": false, "md5_digest": "34a09440139936478cdde44c348e33da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3627, "upload_time": "2020-03-17T00:27:11", "upload_time_iso_8601": "2020-03-17T00:27:11.727157Z", "url": "https://files.pythonhosted.org/packages/14/07/1fc25d5b875c92c9521fbd8464a44a8b1ecda6694d75f0503d44ac74969f/mse-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "28946f789834fa8a9e89c85f34941e1f", "sha256": "98e738f0f95fcf2e70d0538adf506cb4b36945866b88ef942536815323c974ed"}, "downloads": -1, "filename": "mse-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28946f789834fa8a9e89c85f34941e1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7764, "upload_time": "2020-03-17T00:57:22", "upload_time_iso_8601": "2020-03-17T00:57:22.895447Z", "url": "https://files.pythonhosted.org/packages/bc/23/533b09d0206fe99b4efc3da19aadeee415d4b1059098e6c7b383c0afacd0/mse-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7584f8ba1b3f8ea76e541c12a1c2ab7c", "sha256": "81c942546aabd71ecf4ac9ee57e8e4461da61a008b3ab27d5c06b799cc017a50"}, "downloads": -1, "filename": "mse-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7584f8ba1b3f8ea76e541c12a1c2ab7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3623, "upload_time": "2020-03-17T00:57:24", "upload_time_iso_8601": "2020-03-17T00:57:24.034798Z", "url": "https://files.pythonhosted.org/packages/ed/c0/ab8b9fc6947e66ea4ea679b4cbca5955bee4dcd5a9b814e658ef8ef2fd75/mse-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "9c8f5f2aa9a5b029f7029ca19ded90f9", "sha256": "1dbf3462da5228be254e12b2ea700a85fec1056b4c87716a7ee8d78bb37c1b33"}, "downloads": -1, "filename": "mse-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9c8f5f2aa9a5b029f7029ca19ded90f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7763, "upload_time": "2020-03-29T19:20:29", "upload_time_iso_8601": "2020-03-29T19:20:29.730155Z", "url": "https://files.pythonhosted.org/packages/76/c6/064e8b302d0b30e0cbdacca210aead0b659abb35c10dca7083083984ebd4/mse-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18c031c48464ea65863266dec92a6dbc", "sha256": "06c5a4b9e1152d579c08bc02e011af2002585da3cbed6069ab522194b681ec86"}, "downloads": -1, "filename": "mse-0.1.4.tar.gz", "has_sig": false, "md5_digest": "18c031c48464ea65863266dec92a6dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3589, "upload_time": "2020-03-29T19:20:30", "upload_time_iso_8601": "2020-03-29T19:20:30.995051Z", "url": "https://files.pythonhosted.org/packages/66/14/eebbed44d2c1251d932d4986f60511eadd43284855652437387d98481f6b/mse-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c8f5f2aa9a5b029f7029ca19ded90f9", "sha256": "1dbf3462da5228be254e12b2ea700a85fec1056b4c87716a7ee8d78bb37c1b33"}, "downloads": -1, "filename": "mse-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9c8f5f2aa9a5b029f7029ca19ded90f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7763, "upload_time": "2020-03-29T19:20:29", "upload_time_iso_8601": "2020-03-29T19:20:29.730155Z", "url": "https://files.pythonhosted.org/packages/76/c6/064e8b302d0b30e0cbdacca210aead0b659abb35c10dca7083083984ebd4/mse-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18c031c48464ea65863266dec92a6dbc", "sha256": "06c5a4b9e1152d579c08bc02e011af2002585da3cbed6069ab522194b681ec86"}, "downloads": -1, "filename": "mse-0.1.4.tar.gz", "has_sig": false, "md5_digest": "18c031c48464ea65863266dec92a6dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3589, "upload_time": "2020-03-29T19:20:30", "upload_time_iso_8601": "2020-03-29T19:20:30.995051Z", "url": "https://files.pythonhosted.org/packages/66/14/eebbed44d2c1251d932d4986f60511eadd43284855652437387d98481f6b/mse-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:54 2020"}