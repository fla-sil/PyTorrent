{"info": {"author": "Samuel Y. W. Low", "author_email": "sammmlow@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![LEOGPS - GPS-Aided Relative Satellite Navigation in Python](https://raw.githubusercontent.com/sammmlow/LEOGPS/master/gui/logo.png)\n\n### What is LEOGPS?\nLEOGPS is an open-source Python package for absolute and relative satellite navigation.\n\n### How do I use LEOGPS?\n\nTo use LEOGPS, the user first runs the application by running 'leogps.py', the main python file. The app interfaces with the inputs configuration file, allowing the user to save or load parameters in the 'config.txt' file. \n\nThen, the user simply provides the program with two RINEX (v2.xx) observation files, one for each LEO satellite, by pasting it in the 'inputs' folder. By default, LEOGPS should be provided with two example RINEX files comprising GPS pseudorange and carrier phase measurements from two satellites in formation - GRACE A and B. Ground truths are also provided in the 'outputs' directory.\n\nNext, the user simply has to run LEOGPS via the GUI, once the user saves the desired configuration options. Keep an internet connection online, as LEOGPS will attempt to download precise ephemerides and clock bias data from the International GNSS Service (IGS) file portal (unless you already have those files). The app should look something like the image below.\n\n![LEOGPS - Graphical User Interface](https://raw.githubusercontent.com/sammmlow/LEOGPS/master/gui/gui.jpg)\n\nLEOGPS will process the raw GPS measurements to produce a report comprising:\n\n- The absolute positions and absolute velocities of both LEOs.\n- Precise (centimeter-level) baseline estimation (relative position vector).\n- Dilution of precision values.\n\nLEOGPS will also (optionally, depending on your choice in the GUI) output plots or reports on the interpolated GPS satellite ephemeris and clock biases.\n\n### What is the method of navigation used behind LEOGPS?\n\nAbsolute positioning and velocity estimation is performed by trilaterating GPS pseudorange measurements, and Doppler (pseudorange rate) measurements respectively. Single-frequency measurements employ the GRAPHIC linear combination (credits to T. P. Yunck, 1993), while dual frequency measurements employ the ionosphere-free linear combination. If Doppler values are missing in the RINEX observation file, LEOGPS will also attempt to estimate them (in v0.2 onwards).\n\nThe relative navigation between LEO satellites are performed using a double-differencing of carrier phase values, and using the float ambiguities directly. An optional module exists ('ambfix.py') in the codes folder for Dr Peter Teunissen's LAMBDA method for estimating integer ambiguities given the float ambiguities and covariance matrices.\n\n### Why did you create LEOGPS?\n\nLEOGPS is a personal pet project of mine, useful as a modular software used to study relative satellite navigation techniques for distributed space systems with a GPS receiver, such as formation missions like GRACE A and B. LEOGPS' sole purpose is as an adaptable platform for the rapid prototyping of navigation algorithms in Python, or for testing out integer ambiguity resolution techniques. A Pythonic translation of Professor Peter Teunissen's LAMBDA method has also been adapted, in the 'file ambfix.py'\n\n### Requirements for LEOGPS:\n\nRequires Python version 3.6.5 (Anaconda with Spyder recommended).\n\nCore libraries necessary: NumPy (v1.14 and above) and matplotlib\n\nStandard Python libaries: os, copy, math, datetime, decimal, shutil, subprocess, warnings, urllib.request\n\nLibraries for GUI (optional if you do not want to use the GUI): PIL, tkinter\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sammmlow/LEOGPS", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "LEOGPS", "package_url": "https://pypi.org/project/LEOGPS/", "platform": "", "project_url": "https://pypi.org/project/LEOGPS/", "project_urls": {"Homepage": "https://github.com/sammmlow/LEOGPS"}, "release_url": "https://pypi.org/project/LEOGPS/0.2.1/", "requires_dist": null, "requires_python": ">=3.6.5", "summary": "Relative Satellite Navigation in Python", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"LEOGPS - GPS-Aided Relative Satellite Navigation in Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64d264f1acba1ac48499eb5d40a8a19759c0f560/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616d6d6d6c6f772f4c454f4750532f6d61737465722f6775692f6c6f676f2e706e67\"></p>\n<h3>What is LEOGPS?</h3>\n<p>LEOGPS is an open-source Python package for absolute and relative satellite navigation.</p>\n<h3>How do I use LEOGPS?</h3>\n<p>To use LEOGPS, the user first runs the application by running 'leogps.py', the main python file. The app interfaces with the inputs configuration file, allowing the user to save or load parameters in the 'config.txt' file.</p>\n<p>Then, the user simply provides the program with two RINEX (v2.xx) observation files, one for each LEO satellite, by pasting it in the 'inputs' folder. By default, LEOGPS should be provided with two example RINEX files comprising GPS pseudorange and carrier phase measurements from two satellites in formation - GRACE A and B. Ground truths are also provided in the 'outputs' directory.</p>\n<p>Next, the user simply has to run LEOGPS via the GUI, once the user saves the desired configuration options. Keep an internet connection online, as LEOGPS will attempt to download precise ephemerides and clock bias data from the International GNSS Service (IGS) file portal (unless you already have those files). The app should look something like the image below.</p>\n<p><img alt=\"LEOGPS - Graphical User Interface\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7a5913d46f97b1e6bf6abce9ed294e72173c196/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616d6d6d6c6f772f4c454f4750532f6d61737465722f6775692f6775692e6a7067\"></p>\n<p>LEOGPS will process the raw GPS measurements to produce a report comprising:</p>\n<ul>\n<li>The absolute positions and absolute velocities of both LEOs.</li>\n<li>Precise (centimeter-level) baseline estimation (relative position vector).</li>\n<li>Dilution of precision values.</li>\n</ul>\n<p>LEOGPS will also (optionally, depending on your choice in the GUI) output plots or reports on the interpolated GPS satellite ephemeris and clock biases.</p>\n<h3>What is the method of navigation used behind LEOGPS?</h3>\n<p>Absolute positioning and velocity estimation is performed by trilaterating GPS pseudorange measurements, and Doppler (pseudorange rate) measurements respectively. Single-frequency measurements employ the GRAPHIC linear combination (credits to T. P. Yunck, 1993), while dual frequency measurements employ the ionosphere-free linear combination. If Doppler values are missing in the RINEX observation file, LEOGPS will also attempt to estimate them (in v0.2 onwards).</p>\n<p>The relative navigation between LEO satellites are performed using a double-differencing of carrier phase values, and using the float ambiguities directly. An optional module exists ('ambfix.py') in the codes folder for Dr Peter Teunissen's LAMBDA method for estimating integer ambiguities given the float ambiguities and covariance matrices.</p>\n<h3>Why did you create LEOGPS?</h3>\n<p>LEOGPS is a personal pet project of mine, useful as a modular software used to study relative satellite navigation techniques for distributed space systems with a GPS receiver, such as formation missions like GRACE A and B. LEOGPS' sole purpose is as an adaptable platform for the rapid prototyping of navigation algorithms in Python, or for testing out integer ambiguity resolution techniques. A Pythonic translation of Professor Peter Teunissen's LAMBDA method has also been adapted, in the 'file ambfix.py'</p>\n<h3>Requirements for LEOGPS:</h3>\n<p>Requires Python version 3.6.5 (Anaconda with Spyder recommended).</p>\n<p>Core libraries necessary: NumPy (v1.14 and above) and matplotlib</p>\n<p>Standard Python libaries: os, copy, math, datetime, decimal, shutil, subprocess, warnings, urllib.request</p>\n<p>Libraries for GUI (optional if you do not want to use the GUI): PIL, tkinter</p>\n\n          </div>"}, "last_serial": 6811565, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "16e3a1ec91493723fc3aa63d76561e08", "sha256": "c1c4d1e532b3d11e2fe54ee8cbc63ef4373d9a72c8259f3cb7369f59707081c1"}, "downloads": -1, "filename": "LEOGPS-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "16e3a1ec91493723fc3aa63d76561e08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45253, "upload_time": "2019-12-08T13:41:57", "upload_time_iso_8601": "2019-12-08T13:41:57.899544Z", "url": "https://files.pythonhosted.org/packages/98/b9/8cb5015d7b9d43fe1718fd7e453ff0974d2da5fc55ee83868ee67184cafd/LEOGPS-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae4a6622faf2043e8eb1aec52cb86d15", "sha256": "0fc9ef54f5d4aaaf0aefd9dbe95f9da51e232e73beafc2cb395caafe6b6fe7e0"}, "downloads": -1, "filename": "LEOGPS-0.1.tar.gz", "has_sig": false, "md5_digest": "ae4a6622faf2043e8eb1aec52cb86d15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36504, "upload_time": "2019-12-08T13:42:00", "upload_time_iso_8601": "2019-12-08T13:42:00.465307Z", "url": "https://files.pythonhosted.org/packages/36/1a/c6bf850a4ac88266e17cb7bbfdb5ea5dcaeb74a2d6ca10ffbf50141bc402/LEOGPS-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f61b9a045730bfc4acece270abb91333", "sha256": "939d74bb687100669cf608f037913b4cbc67966b3f641c142c3fceaf3c0a0e8d"}, "downloads": -1, "filename": "LEOGPS-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f61b9a045730bfc4acece270abb91333", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 56429, "upload_time": "2020-03-14T14:14:16", "upload_time_iso_8601": "2020-03-14T14:14:16.324780Z", "url": "https://files.pythonhosted.org/packages/00/14/e21d5fd3c86b209246c1b7f6f9ad6595cbdf1f6636b6acb5cb6ef488b280/LEOGPS-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3216ec903609fa142c873ac68d8bba78", "sha256": "4190b9f1b8c4d68c192f518d3279659878decac1ff10b2507d88c6e0f1be4b23"}, "downloads": -1, "filename": "LEOGPS-0.2.tar.gz", "has_sig": false, "md5_digest": "3216ec903609fa142c873ac68d8bba78", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 46278, "upload_time": "2020-03-14T14:14:17", "upload_time_iso_8601": "2020-03-14T14:14:17.709801Z", "url": "https://files.pythonhosted.org/packages/9f/66/49fbb7e462645dc3580ad1fdf8873d840ae0941c898813b3a1131998d56a/LEOGPS-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3a56de010f97e2f1b8ac1b8b37745432", "sha256": "253c095a3961a1307f604da1ab388e95ec9657df8754264e9418befbc55a26d2"}, "downloads": -1, "filename": "LEOGPS-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a56de010f97e2f1b8ac1b8b37745432", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 57158, "upload_time": "2020-03-14T14:22:50", "upload_time_iso_8601": "2020-03-14T14:22:50.560446Z", "url": "https://files.pythonhosted.org/packages/ca/fe/6845a87b723c0309662022da40fd072c872ab21cded2f19206d19664d2ef/LEOGPS-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ce974db4e6f90c34a46897be49191f", "sha256": "7c4c992003dcf35f19965fa768e8989b7af73e22546acd97f7035aee6155e10c"}, "downloads": -1, "filename": "LEOGPS-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b2ce974db4e6f90c34a46897be49191f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 47079, "upload_time": "2020-03-14T14:22:51", "upload_time_iso_8601": "2020-03-14T14:22:51.714482Z", "url": "https://files.pythonhosted.org/packages/a8/de/a3efbc16309b08e617d887de381d43f3c7da091d72f3249d7189831e38b5/LEOGPS-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a56de010f97e2f1b8ac1b8b37745432", "sha256": "253c095a3961a1307f604da1ab388e95ec9657df8754264e9418befbc55a26d2"}, "downloads": -1, "filename": "LEOGPS-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a56de010f97e2f1b8ac1b8b37745432", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 57158, "upload_time": "2020-03-14T14:22:50", "upload_time_iso_8601": "2020-03-14T14:22:50.560446Z", "url": "https://files.pythonhosted.org/packages/ca/fe/6845a87b723c0309662022da40fd072c872ab21cded2f19206d19664d2ef/LEOGPS-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ce974db4e6f90c34a46897be49191f", "sha256": "7c4c992003dcf35f19965fa768e8989b7af73e22546acd97f7035aee6155e10c"}, "downloads": -1, "filename": "LEOGPS-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b2ce974db4e6f90c34a46897be49191f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 47079, "upload_time": "2020-03-14T14:22:51", "upload_time_iso_8601": "2020-03-14T14:22:51.714482Z", "url": "https://files.pythonhosted.org/packages/a8/de/a3efbc16309b08e617d887de381d43f3c7da091d72f3249d7189831e38b5/LEOGPS-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:59 2020"}