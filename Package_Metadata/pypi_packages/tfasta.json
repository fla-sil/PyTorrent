{"info": {"author": "James C. Stroud", "author_email": "xtald00d@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "========\n tfasta \n========\n\nIntroduction\n------------\n\nThe tfasta python package simplifies working\nwith fasta, providing functionality\nfor both reading and writing fasta files.\nThe \"t\" in \"tfasta\" represents\n\"templated\", which means that fasta parsing is\nperformed according to pre-defined or user-defined\ntemplates::\n\n    >>> from tfasta import fasta_parser, T_NR\n    >>> fast = fasta_parser(\"cytb.fas\", template=T_NR)\n    >>> f = fast.next()\n    >>> print f['gi']\n    5524211\n    >>> print f['accession']\n    AAD44166.1\n    >>> print f['sequence'][:60]\n    LCLYTHIGRNIYYGSYLYSETWNTGIMLLLITMATAFMGYVLPWGQMSFWGATVITNLFS\n\nThis example parses records that follow the conventions\nof the NCBI non-redundant database (nr).\n\nMore examples are given in the `tfasta full documentation`_.\n\n\nInstallation\n------------\n\nInstall tfasta with `pip`_ (recommended) or `easy_install`_::\n\n  sudo pip install tfasta\n\nOptionally, download the source files from\nhttp://pypi.python.org/pypi/tfasta/\nand run the following commands in the source directory::\n\n  python setup.py build\n  sudo python setup.py install\n\nHome Page & Repository\n----------------------\n\n  - Home Page: http://pypi.python.org/pypi/tfasta/\n  - Documentation: http://pythonhosted.org/tfasta/\n  - Repository: https://github.com/jcstroud/tfasta/\n\n\nBasic Usage\n-----------\n\nReading Fasta Files\n~~~~~~~~~~~~~~~~~~~\n\nReading fasta files is performed with the *fasta_parser()* function.\nThe following text is the first 2 records from a file\ncalled \"``short-extended.fas``\"::\n\n    >gi|32033604|ref|ZP_00133915.1|\n    ATGQVIGTFTVRNDNGLHARPSAVLVQTLKPFAAKVTVENLDRGTAPANAKSTMKVVALG\n    ASQAHRLRFVAEGEDAQQAIEALAKAFVEGLGESVSFVPAVEDTIEGAAQPQAVESAKNF\n    ANPTASEPTVEGQVEGTFVIQNEHGLHARPSAVLVNEVKKYNATIVVQNLDRNTQLVSAK\n    SLMKIVALGVVKGHRLHFVATGDDAQKAIDGIGEAIAAGLGE\n    >gi|1573424|gb|AAC22107.1|\n    VEGAVVGTFTIRNEHGLHARPSANLVNEVKKFTSKITMQNLTRESEVVSAKSLMKIVALG\n    VTQGHRLRFVAEGEDAKQAIESLGKAIANGLGENVSAVPPSEPDTIEIMGDQIHTPAVTE\n    DDNLPANAIEAVFVIKNEQGLHARPSAILVNEVKKYNASVAVQNLDRNSQLVSAKSLMKI\n    VALGVVKGTRLRFVATGEEAQQAIDGIGAVIESGLGE\n\nLike any other fasta file, ``short-extended.fas`` may be parsed\nwith a single command::\n\n    fast = fasta_parser(file_name)\n\nFor example::\n\n    >>> from tfasta import fasta_parser\n    >>> fast = fasta_parser(\"short-extended.fas\")\n    >>> f = fast.next()\n    >>> print f['name']\n    gi|32033604|ref|ZP_00133915.1|\n    >>> print f['sequence'][:60]\n    ATGQVIGTFTVRNDNGLHARPSAVLVQTLKPFAAKVTVENLDRGTAPANAKSTMKVVALG\n    f = fast.next()\n    print f['name']\n    gi|1573424|gb|AAC22107.1|\n\nIn this example, the *fasta_parser()* function returns\nan iterator of dictionaries (\"``fast``\") with two\nkeys: ``name`` and ``sequence``.\nThe ``name`` key corresponds to all of the plain text after\nthe fasta format marker \"``>``\" that marks a new sequence.\n\n\nIteration\n~~~~~~~~~\n\nThe iterator returned by the *fasta_parser()* function\nmay serve in ``for`` loops::\n\n    \n    >>> from tfasta import fasta_parser\n    >>> for f in fasta_parser(\"short-extended.fas\"):\n    ...   print f['name']\n    gi|32033604|ref|ZP_00133915.1|\n    gi|1573424|gb|AAC22107.1|\n    [...]\n\n\nOther Usage\n-----------\n\nSee the `tfasta full documentation`_ for more sophisticated\nreading and writing of fasta.\n\n\n.. _`pip`: http://www.pip-installer.org/en/latest/\n.. _`easy_install`: http://peak.telecommunity.com/DevCenter/EasyInstall\n.. _`tfasta full documentation`: http://pythonhosted.org/tfasta/", "description_content_type": null, "docs_url": "https://pythonhosted.org/tfasta/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/tfasta/", "keywords": "fasta,fasta parser,fasta reader,fasta writer", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "tfasta", "package_url": "https://pypi.org/project/tfasta/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tfasta/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/tfasta/"}, "release_url": "https://pypi.org/project/tfasta/0.3.4/", "requires_dist": null, "requires_python": null, "summary": "Parses fasta files using templates and creates formatted fasta.", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The tfasta python package simplifies working\nwith fasta, providing functionality\nfor both reading and writing fasta files.\nThe \u201ct\u201d in \u201ctfasta\u201d represents\n\u201ctemplated\u201d, which means that fasta parsing is\nperformed according to pre-defined or user-defined\ntemplates:</p>\n<pre>&gt;&gt;&gt; from tfasta import fasta_parser, T_NR\n&gt;&gt;&gt; fast = fasta_parser(\"cytb.fas\", template=T_NR)\n&gt;&gt;&gt; f = fast.next()\n&gt;&gt;&gt; print f['gi']\n5524211\n&gt;&gt;&gt; print f['accession']\nAAD44166.1\n&gt;&gt;&gt; print f['sequence'][:60]\nLCLYTHIGRNIYYGSYLYSETWNTGIMLLLITMATAFMGYVLPWGQMSFWGATVITNLFS\n</pre>\n<p>This example parses records that follow the conventions\nof the NCBI non-redundant database (nr).</p>\n<p>More examples are given in the <a href=\"http://pythonhosted.org/tfasta/\" rel=\"nofollow\">tfasta full documentation</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install tfasta with <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> (recommended) or <a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">easy_install</a>:</p>\n<pre>sudo pip install tfasta\n</pre>\n<p>Optionally, download the source files from\n<a href=\"http://pypi.python.org/pypi/tfasta/\" rel=\"nofollow\">http://pypi.python.org/pypi/tfasta/</a>\nand run the following commands in the source directory:</p>\n<pre>python setup.py build\nsudo python setup.py install\n</pre>\n</div>\n<div id=\"home-page-repository\">\n<h2>Home Page &amp; Repository</h2>\n<blockquote>\n<ul>\n<li>Home Page: <a href=\"http://pypi.python.org/pypi/tfasta/\" rel=\"nofollow\">http://pypi.python.org/pypi/tfasta/</a></li>\n<li>Documentation: <a href=\"http://pythonhosted.org/tfasta/\" rel=\"nofollow\">http://pythonhosted.org/tfasta/</a></li>\n<li>Repository: <a href=\"https://github.com/jcstroud/tfasta/\" rel=\"nofollow\">https://github.com/jcstroud/tfasta/</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<div id=\"reading-fasta-files\">\n<h3>Reading Fasta Files</h3>\n<p>Reading fasta files is performed with the <em>fasta_parser()</em> function.\nThe following text is the first 2 records from a file\ncalled \u201c<tt><span class=\"pre\">short-extended.fas</span></tt>\u201d:</p>\n<pre>&gt;gi|32033604|ref|ZP_00133915.1|\nATGQVIGTFTVRNDNGLHARPSAVLVQTLKPFAAKVTVENLDRGTAPANAKSTMKVVALG\nASQAHRLRFVAEGEDAQQAIEALAKAFVEGLGESVSFVPAVEDTIEGAAQPQAVESAKNF\nANPTASEPTVEGQVEGTFVIQNEHGLHARPSAVLVNEVKKYNATIVVQNLDRNTQLVSAK\nSLMKIVALGVVKGHRLHFVATGDDAQKAIDGIGEAIAAGLGE\n&gt;gi|1573424|gb|AAC22107.1|\nVEGAVVGTFTIRNEHGLHARPSANLVNEVKKFTSKITMQNLTRESEVVSAKSLMKIVALG\nVTQGHRLRFVAEGEDAKQAIESLGKAIANGLGENVSAVPPSEPDTIEIMGDQIHTPAVTE\nDDNLPANAIEAVFVIKNEQGLHARPSAILVNEVKKYNASVAVQNLDRNSQLVSAKSLMKI\nVALGVVKGTRLRFVATGEEAQQAIDGIGAVIESGLGE\n</pre>\n<p>Like any other fasta file, <tt><span class=\"pre\">short-extended.fas</span></tt> may be parsed\nwith a single command:</p>\n<pre>fast = fasta_parser(file_name)\n</pre>\n<p>For example:</p>\n<pre>&gt;&gt;&gt; from tfasta import fasta_parser\n&gt;&gt;&gt; fast = fasta_parser(\"short-extended.fas\")\n&gt;&gt;&gt; f = fast.next()\n&gt;&gt;&gt; print f['name']\ngi|32033604|ref|ZP_00133915.1|\n&gt;&gt;&gt; print f['sequence'][:60]\nATGQVIGTFTVRNDNGLHARPSAVLVQTLKPFAAKVTVENLDRGTAPANAKSTMKVVALG\nf = fast.next()\nprint f['name']\ngi|1573424|gb|AAC22107.1|\n</pre>\n<p>In this example, the <em>fasta_parser()</em> function returns\nan iterator of dictionaries (\u201c<tt>fast</tt>\u201d) with two\nkeys: <tt>name</tt> and <tt>sequence</tt>.\nThe <tt>name</tt> key corresponds to all of the plain text after\nthe fasta format marker \u201c<tt>&gt;</tt>\u201d that marks a new sequence.</p>\n</div>\n<div id=\"iteration\">\n<h3>Iteration</h3>\n<p>The iterator returned by the <em>fasta_parser()</em> function\nmay serve in <tt>for</tt> loops:</p>\n<pre>&gt;&gt;&gt; from tfasta import fasta_parser\n&gt;&gt;&gt; for f in fasta_parser(\"short-extended.fas\"):\n...   print f['name']\ngi|32033604|ref|ZP_00133915.1|\ngi|1573424|gb|AAC22107.1|\n[...]\n</pre>\n</div>\n</div>\n<div id=\"other-usage\">\n<h2>Other Usage</h2>\n<p>See the <a href=\"http://pythonhosted.org/tfasta/\" rel=\"nofollow\">tfasta full documentation</a> for more sophisticated\nreading and writing of fasta.</p>\n</div>\n\n          </div>"}, "last_serial": 1058262, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "5765269b46e3a68580562ca10c3f3fcf", "sha256": "366fb6bc90b1fa736d32b62862dfff16c80da0d8598811097e2c988890bfbd33"}, "downloads": -1, "filename": "tfasta-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5765269b46e3a68580562ca10c3f3fcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116862, "upload_time": "2014-04-10T00:08:02", "upload_time_iso_8601": "2014-04-10T00:08:02.042828Z", "url": "https://files.pythonhosted.org/packages/29/e7/9dc944fc6e36f63773e105991ce57357d8df9842e73e72f85b0695bb576a/tfasta-0.2.2.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "652c9142b223c5b4953bf897aefb62ae", "sha256": "a0cdb4caa394442fd514648858aff108ec6c9122541dc656e45276d1f6ebe69e"}, "downloads": -1, "filename": "tfasta-0.3.1.tar.gz", "has_sig": false, "md5_digest": "652c9142b223c5b4953bf897aefb62ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122496, "upload_time": "2014-04-11T00:32:26", "upload_time_iso_8601": "2014-04-11T00:32:26.104160Z", "url": "https://files.pythonhosted.org/packages/92/4d/e2213f5fe012908d3e78dc4f582b25aa70a065349dc61a3fa4fa3b7576d1/tfasta-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "5da1403a65bfab4444c9445194abe2c0", "sha256": "8a922ee669c04592b8455d1eef2be2aaa555c9f61d8bec89cc45f683006b9040"}, "downloads": -1, "filename": "tfasta-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5da1403a65bfab4444c9445194abe2c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121773, "upload_time": "2014-04-11T21:21:25", "upload_time_iso_8601": "2014-04-11T21:21:25.296075Z", "url": "https://files.pythonhosted.org/packages/c8/67/3b5e648763bf4a009e7811e47d98099349b0654e166a82c6c9ce4462625b/tfasta-0.3.2.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "5dfad15e4c9e0a8308cab6b0cf914529", "sha256": "30d9de9ccbd028cfbd8ebadc0487ecd40d8e535f4287bf5829cc0eeba90b79b1"}, "downloads": -1, "filename": "tfasta-0.3.4.tar.gz", "has_sig": false, "md5_digest": "5dfad15e4c9e0a8308cab6b0cf914529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122946, "upload_time": "2014-04-11T21:48:52", "upload_time_iso_8601": "2014-04-11T21:48:52.644982Z", "url": "https://files.pythonhosted.org/packages/ba/5e/b1d8abdac8bff59e0db7ad0c4f8cfd0edf57bd812e98aa26869adab00265/tfasta-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5dfad15e4c9e0a8308cab6b0cf914529", "sha256": "30d9de9ccbd028cfbd8ebadc0487ecd40d8e535f4287bf5829cc0eeba90b79b1"}, "downloads": -1, "filename": "tfasta-0.3.4.tar.gz", "has_sig": false, "md5_digest": "5dfad15e4c9e0a8308cab6b0cf914529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122946, "upload_time": "2014-04-11T21:48:52", "upload_time_iso_8601": "2014-04-11T21:48:52.644982Z", "url": "https://files.pythonhosted.org/packages/ba/5e/b1d8abdac8bff59e0db7ad0c4f8cfd0edf57bd812e98aa26869adab00265/tfasta-0.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:41 2020"}