{"info": {"author": "Mike McKerns", "author_email": "mmckerns@caltech.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "pygrace\r\n# Python bindings for grace, based on Nathan Gray's gracePlot\r\n# Requires grace and Numpy\r\n# Download pygrace source tarfile\r\n# Installation\r\n\r\nunzup and unpack the gzipped tar archive\r\n$ tar -xvzf pygrace-0.4.tgz\r\n\r\ninstall the package\r\n$ python setup.py build\r\n$ python setup.py install\r\n\r\n# Documentation\r\n\r\nimport the grace class\r\n>>> from pygrace import grace\r\n\r\ninstantiate the grace class\r\n>>> pg = grace()\r\n\r\nget help\r\n>>> pg.doc()\r\nMethods:\r\n  prompt() --> start interactive session\r\n  eval(command) --> execute a grace command\r\n  put(name,val) --> put variable into interactive session\r\n  get(name) --> get variable from interactive session\r\n  who([name]) --> return the existing grace variables\r\n  delete(name) --> destroy selected pylab variables\r\n  restart() --> restart a grace window\r\nNotes:\r\n  grace and Numpy must be installed, grace also relies on (open)motif\r\n\r\nCopyright (c) 2009 California Institute of Technology. All rights reserved.\r\n\r\n\r\nIf you use this software to do productive scientific research that leads to\r\npublication, we ask that you acknowledge use of the software by citing the\r\nfollowing paper in your publication:\r\n\r\n    \"pygrace: python bindings to the Grace plotting package\", Michael McKerns,\r\n    unpublished; http://www.its.caltech.edu/~mmckerns/software.html\r\n\r\n\r\nuse grace methods directly from the python interpreter\r\n>>> from Numpy import *\r\n>>> x = []\r\n>>> for i in range(21): x.append(i*pi/10)\r\n... \r\n>>> pg.plot(x,sin(x))\r\n\r\npush python variables into grace and interact with grace scripting language\r\n>>> pg.put('x',x)\r\n>>> pg.put('y',cos(x))\r\n>>> pg.eval('s0 line color 2')\r\n>>> pg.eval('plot(x,y)')\r\n\r\nuse the interactive grace prompt\r\n>>> pg.prompt()\r\ngrace interface:\r\nvars=\r\n     y\r\n     x\r\ngrace> histoPlot(y)\r\ngrace> s0 fill color 3\r\ngrace> redraw()\r\ngrace> exit\r\n\r\ncheck variables in grace session\r\n>>> pg.who().keys()\r\n['y', 'x']\r\n>>> pg.who('x')\r\n[0.0, 0.31415926535897931, 0.62831853071795862, 0.94247779607693793,\r\n 1.2566370614359172, 1.5707963267948966, 1.8849555921538759,\r\n 2.1991148575128552, 2.5132741228718345, 2.8274333882308138,\r\n 3.1415926535897931, 3.455751918948772, 3.7699111843077517,\r\n 4.0840704496667311, 4.3982297150257104, 4.7123889803846897,\r\n 5.026548245743669, 5.3407075111026483, 5.6548667764616276,\r\n 5.9690260418206069, 6.2831853071795862]\r\n\r\nget variables back into python from grace\r\n>>> cosx = pg.get('y')\r\n\r\nuse shortcuts for put, eval, and get\r\n>>> pg.z = 0.5\r\n>>> pg('print z')\r\n0.5\r\n>>> pg.z + 1\r\n1.5\r\n\r\ndelete variables from grace\r\n>>> pg.delete('x')\r\n>>> pg.delete('y')\r\n\r\n# Versions\r\n\r\n0.4: 03/02/09\r\n migrated Numeric dependency to Numpy\r\n added license text\r\n installs with setuptools, if available\r\n more gentle install & dependency failure\r\n0.3: 05/23/06\r\n added examples directory\r\n shortcuts for put, get, & eval\r\n0.2: 06/20/05\r\n put() & get() now handle sequence elements, slices, etc.\r\n0.1: 06/17/05\r\n initial; python bindings for grace\r\n interactive grace prompt\r\n embed python into grace\r\n 'plot' for 2-D line plots\r\n 'histoPlot' for 2-D histograms", "description_content_type": null, "docs_url": null, "download_url": "http://dev.danse.us/packages/pygrace-0.4.tgz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cacr.caltech.edu/~mmckerns/software.html", "keywords": "grace xmgrace plotting", "license": "modified BSD", "maintainer": "Mike McKerns", "maintainer_email": "", "name": "pygrace", "package_url": "https://pypi.org/project/pygrace/", "platform": "Linux, Windows, and Mac", "project_url": "https://pypi.org/project/pygrace/", "project_urls": {"Download": "http://dev.danse.us/packages/pygrace-0.4.tgz", "Homepage": "http://www.cacr.caltech.edu/~mmckerns/software.html"}, "release_url": "https://pypi.org/project/pygrace/0.4/", "requires_dist": null, "requires_python": null, "summary": "Python bindings for grace", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            pygrace\n<br># Python bindings for grace, based on Nathan Gray's gracePlot\n<br># Requires grace and Numpy\n<br># Download pygrace source tarfile\n<br># Installation\n<br>\n<br>unzup and unpack the gzipped tar archive\n<br>$ tar -xvzf pygrace-0.4.tgz\n<br>\n<br>install the package\n<br>$ python setup.py build\n<br>$ python setup.py install\n<br>\n<br># Documentation\n<br>\n<br>import the grace class\n<br>&gt;&gt;&gt; from pygrace import grace\n<br>\n<br>instantiate the grace class\n<br>&gt;&gt;&gt; pg = grace()\n<br>\n<br>get help\n<br>&gt;&gt;&gt; pg.doc()\n<br>Methods:\n<br>  prompt() --&gt; start interactive session\n<br>  eval(command) --&gt; execute a grace command\n<br>  put(name,val) --&gt; put variable into interactive session\n<br>  get(name) --&gt; get variable from interactive session\n<br>  who([name]) --&gt; return the existing grace variables\n<br>  delete(name) --&gt; destroy selected pylab variables\n<br>  restart() --&gt; restart a grace window\n<br>Notes:\n<br>  grace and Numpy must be installed, grace also relies on (open)motif\n<br>\n<br>Copyright (c) 2009 California Institute of Technology. All rights reserved.\n<br>\n<br>\n<br>If you use this software to do productive scientific research that leads to\n<br>publication, we ask that you acknowledge use of the software by citing the\n<br>following paper in your publication:\n<br>\n<br>    \"pygrace: python bindings to the Grace plotting package\", Michael McKerns,\n<br>    unpublished; http://www.its.caltech.edu/~mmckerns/software.html\n<br>\n<br>\n<br>use grace methods directly from the python interpreter\n<br>&gt;&gt;&gt; from Numpy import *\n<br>&gt;&gt;&gt; x = []\n<br>&gt;&gt;&gt; for i in range(21): x.append(i*pi/10)\n<br>... \n<br>&gt;&gt;&gt; pg.plot(x,sin(x))\n<br>\n<br>push python variables into grace and interact with grace scripting language\n<br>&gt;&gt;&gt; pg.put('x',x)\n<br>&gt;&gt;&gt; pg.put('y',cos(x))\n<br>&gt;&gt;&gt; pg.eval('s0 line color 2')\n<br>&gt;&gt;&gt; pg.eval('plot(x,y)')\n<br>\n<br>use the interactive grace prompt\n<br>&gt;&gt;&gt; pg.prompt()\n<br>grace interface:\n<br>vars=\n<br>     y\n<br>     x\n<br>grace&gt; histoPlot(y)\n<br>grace&gt; s0 fill color 3\n<br>grace&gt; redraw()\n<br>grace&gt; exit\n<br>\n<br>check variables in grace session\n<br>&gt;&gt;&gt; pg.who().keys()\n<br>['y', 'x']\n<br>&gt;&gt;&gt; pg.who('x')\n<br>[0.0, 0.31415926535897931, 0.62831853071795862, 0.94247779607693793,\n<br> 1.2566370614359172, 1.5707963267948966, 1.8849555921538759,\n<br> 2.1991148575128552, 2.5132741228718345, 2.8274333882308138,\n<br> 3.1415926535897931, 3.455751918948772, 3.7699111843077517,\n<br> 4.0840704496667311, 4.3982297150257104, 4.7123889803846897,\n<br> 5.026548245743669, 5.3407075111026483, 5.6548667764616276,\n<br> 5.9690260418206069, 6.2831853071795862]\n<br>\n<br>get variables back into python from grace\n<br>&gt;&gt;&gt; cosx = pg.get('y')\n<br>\n<br>use shortcuts for put, eval, and get\n<br>&gt;&gt;&gt; pg.z = 0.5\n<br>&gt;&gt;&gt; pg('print z')\n<br>0.5\n<br>&gt;&gt;&gt; pg.z + 1\n<br>1.5\n<br>\n<br>delete variables from grace\n<br>&gt;&gt;&gt; pg.delete('x')\n<br>&gt;&gt;&gt; pg.delete('y')\n<br>\n<br># Versions\n<br>\n<br>0.4: 03/02/09\n<br> migrated Numeric dependency to Numpy\n<br> added license text\n<br> installs with setuptools, if available\n<br> more gentle install &amp; dependency failure\n<br>0.3: 05/23/06\n<br> added examples directory\n<br> shortcuts for put, get, &amp; eval\n<br>0.2: 06/20/05\n<br> put() &amp; get() now handle sequence elements, slices, etc.\n<br>0.1: 06/17/05\n<br> initial; python bindings for grace\n<br> interactive grace prompt\n<br> embed python into grace\n<br> 'plot' for 2-D line plots\n<br> 'histoPlot' for 2-D histograms\n          </div>"}, "last_serial": 3070099, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "3be2d5c64bd18b4889272fbbb7f74d5b", "sha256": "3ed8670a2af83a5374ad69258f22dc2f629c17422014008243e9bf0b6f365e64"}, "downloads": -1, "filename": "pygrace-0.4.tgz", "has_sig": false, "md5_digest": "3be2d5c64bd18b4889272fbbb7f74d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18914, "upload_time": "2015-12-22T20:25:37", "upload_time_iso_8601": "2015-12-22T20:25:37.647224Z", "url": "https://files.pythonhosted.org/packages/c2/c2/a15a23817ffe3d79a8b10bdd73009e64360221c0c4648c54f57e30e526be/pygrace-0.4.tgz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3be2d5c64bd18b4889272fbbb7f74d5b", "sha256": "3ed8670a2af83a5374ad69258f22dc2f629c17422014008243e9bf0b6f365e64"}, "downloads": -1, "filename": "pygrace-0.4.tgz", "has_sig": false, "md5_digest": "3be2d5c64bd18b4889272fbbb7f74d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18914, "upload_time": "2015-12-22T20:25:37", "upload_time_iso_8601": "2015-12-22T20:25:37.647224Z", "url": "https://files.pythonhosted.org/packages/c2/c2/a15a23817ffe3d79a8b10bdd73009e64360221c0c4648c54f57e30e526be/pygrace-0.4.tgz", "yanked": false}], "timestamp": "Fri May  8 03:04:44 2020"}