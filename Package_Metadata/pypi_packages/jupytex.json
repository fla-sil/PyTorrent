{"info": {"author": "Angus Hollands", "author_email": "goosey15@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Jupyter", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Text Processing :: Markup :: LaTeX"], "description": "# JupyTeX\nProvides Jupyter-backed execution of LaTeX `code` environments, and embeds the results. Similar in concept to [PythonTex](https://github.com/gpoore/PythonTex), but focuses on code _execution_, and avoids any language specific features.\n\n## How to use\n1. Install JupyTeX with `pip install git+https://github.com/agoose77/jupytex.git#egg=jupytex`\n2. Run `jupytex install` in LaTeX project directory (or provide an install directory with `-d DIR`) to create the necessary `.latexmkrc` and `jupytex.sty` files\n3. Add `\\usepackage{jupytex}` to the document header\n4. Declare code environments with\n    ```latex\n    \\begin{code}{language}[opts]\n        Some source code\n    \\end{code}\n    ```\n    See the configuration section for valid options in `opts`.\n5. Run `jupytex make` (which is a pass-through to `latexmk --shell-escape`) to invoke `latexmk`.\n### Example Python Script\n```latex\n\\begin{code}{python}[kernel=python3]\n    print(\"$x + y = z$\")\n\\end{code}\n```\n## Uninstallation\nRun `jupytex uninstall` in LaTeX project directory (or provide an install directory with `-d DIR`) to remove the installed `.latexmkrc` and `jupytex.sty` files\n## Cleaning\nRun `jupytex clean` (which is a pass-through to `latexmk -c` or `latexmk -C`) to remove both LaTeX and JupyTex-related run files.\n## JupyTeX flow control\n1. `jupytex.sty` declares dependency upon `\\jobname.timestamp`\n1. `jupytex.sty` macro writes code blocks to numbered `.code` files and attempts to include results\n1. Code 'blocks' are written to a `\\jobname.blocks` csv file\n1. `jupytex hash` is invoked to calculate the md5 hash for all of the blocks, which is written to `\\jobname.hash`. In future this should only be performed per-kernel-session.\n1. If `\\jobname.hash` has been modified, `jupytex execute` is invoked for the corresponding job, the code blocks executed, and results written to `.result` files, and errors to `.traceback` files. Code blocks which do not write to stdout write an empty results file. `\\jobname.timestamp` is updated with new timestamp.\n1. `latexmk` performs a new pass for the dependencies upon `\\jobname.timestamp`\n\n## Configuration\n* Each code block must be given a language. \n* One can specify the Jupyter kernel name with a `kernel` key parameter, which will be used instead of the language if present. One can also access an existing kernel, by passing the name of a connection file. \n* A `session` key parameter may be passed to create a new kernel associated with the kernel-session pair.  If the `kernel` parameter is set to a connection file, then *this will create a new client to the same kernel*.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agoose77/jupytex", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jupytex", "package_url": "https://pypi.org/project/jupytex/", "platform": "", "project_url": "https://pypi.org/project/jupytex/", "project_urls": {"Homepage": "https://github.com/agoose77/jupytex"}, "release_url": "https://pypi.org/project/jupytex/0.0.3/", "requires_dist": ["colorama", "jupyter-client", "jupyter", "importlib-resources"], "requires_python": ">=3.6", "summary": "Jupyter execution of TeX code environments.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>JupyTeX</h1>\n<p>Provides Jupyter-backed execution of LaTeX <code>code</code> environments, and embeds the results. Similar in concept to <a href=\"https://github.com/gpoore/PythonTex\" rel=\"nofollow\">PythonTex</a>, but focuses on code <em>execution</em>, and avoids any language specific features.</p>\n<h2>How to use</h2>\n<ol>\n<li>Install JupyTeX with <code>pip install git+https://github.com/agoose77/jupytex.git#egg=jupytex</code></li>\n<li>Run <code>jupytex install</code> in LaTeX project directory (or provide an install directory with <code>-d DIR</code>) to create the necessary <code>.latexmkrc</code> and <code>jupytex.sty</code> files</li>\n<li>Add <code>\\usepackage{jupytex}</code> to the document header</li>\n<li>Declare code environments with\n<pre><span class=\"k\">\\begin</span><span class=\"nb\">{</span>code<span class=\"nb\">}{</span>language<span class=\"nb\">}</span>[opts]\n    Some source code\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>code<span class=\"nb\">}</span>\n</pre>\nSee the configuration section for valid options in <code>opts</code>.</li>\n<li>Run <code>jupytex make</code> (which is a pass-through to <code>latexmk --shell-escape</code>) to invoke <code>latexmk</code>.</li>\n</ol>\n<h3>Example Python Script</h3>\n<pre><span class=\"k\">\\begin</span><span class=\"nb\">{</span>code<span class=\"nb\">}{</span>python<span class=\"nb\">}</span>[kernel=python3]\n    print(\"<span class=\"s\">$</span><span class=\"nb\">x </span><span class=\"o\">+</span><span class=\"nb\"> y </span><span class=\"o\">=</span><span class=\"nb\"> z</span><span class=\"s\">$</span>\")\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>code<span class=\"nb\">}</span>\n</pre>\n<h2>Uninstallation</h2>\n<p>Run <code>jupytex uninstall</code> in LaTeX project directory (or provide an install directory with <code>-d DIR</code>) to remove the installed <code>.latexmkrc</code> and <code>jupytex.sty</code> files</p>\n<h2>Cleaning</h2>\n<p>Run <code>jupytex clean</code> (which is a pass-through to <code>latexmk -c</code> or <code>latexmk -C</code>) to remove both LaTeX and JupyTex-related run files.</p>\n<h2>JupyTeX flow control</h2>\n<ol>\n<li><code>jupytex.sty</code> declares dependency upon <code>\\jobname.timestamp</code></li>\n<li><code>jupytex.sty</code> macro writes code blocks to numbered <code>.code</code> files and attempts to include results</li>\n<li>Code 'blocks' are written to a <code>\\jobname.blocks</code> csv file</li>\n<li><code>jupytex hash</code> is invoked to calculate the md5 hash for all of the blocks, which is written to <code>\\jobname.hash</code>. In future this should only be performed per-kernel-session.</li>\n<li>If <code>\\jobname.hash</code> has been modified, <code>jupytex execute</code> is invoked for the corresponding job, the code blocks executed, and results written to <code>.result</code> files, and errors to <code>.traceback</code> files. Code blocks which do not write to stdout write an empty results file. <code>\\jobname.timestamp</code> is updated with new timestamp.</li>\n<li><code>latexmk</code> performs a new pass for the dependencies upon <code>\\jobname.timestamp</code></li>\n</ol>\n<h2>Configuration</h2>\n<ul>\n<li>Each code block must be given a language.</li>\n<li>One can specify the Jupyter kernel name with a <code>kernel</code> key parameter, which will be used instead of the language if present. One can also access an existing kernel, by passing the name of a connection file.</li>\n<li>A <code>session</code> key parameter may be passed to create a new kernel associated with the kernel-session pair.  If the <code>kernel</code> parameter is set to a connection file, then <em>this will create a new client to the same kernel</em>.</li>\n</ul>\n\n          </div>"}, "last_serial": 4763477, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "48d9206e09396ba3f5d83004e688a5a5", "sha256": "b95b333760c0bc984bb645dc161553af6f17cf4e3cd7df11e5ce82ae19913085"}, "downloads": -1, "filename": "jupytex-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "48d9206e09396ba3f5d83004e688a5a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10556, "upload_time": "2019-01-31T12:18:17", "upload_time_iso_8601": "2019-01-31T12:18:17.853810Z", "url": "https://files.pythonhosted.org/packages/f5/3f/07efef0b0ddb78f831975ad1968447b66d989e9b9bfa3d222776a53efc46/jupytex-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11ec2d2405dc6b75a4ac838d2c8d756a", "sha256": "9b1e64032fa1948220055126afdf114cd9fd048c7bf63be1f986defb36206af8"}, "downloads": -1, "filename": "jupytex-0.0.3.tar.gz", "has_sig": false, "md5_digest": "11ec2d2405dc6b75a4ac838d2c8d756a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8160, "upload_time": "2019-01-31T12:18:19", "upload_time_iso_8601": "2019-01-31T12:18:19.740228Z", "url": "https://files.pythonhosted.org/packages/6e/df/52c207c36e4212807f8625d97ea4e9b4d7e0da36e5821355666aa4fba6b0/jupytex-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "48d9206e09396ba3f5d83004e688a5a5", "sha256": "b95b333760c0bc984bb645dc161553af6f17cf4e3cd7df11e5ce82ae19913085"}, "downloads": -1, "filename": "jupytex-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "48d9206e09396ba3f5d83004e688a5a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10556, "upload_time": "2019-01-31T12:18:17", "upload_time_iso_8601": "2019-01-31T12:18:17.853810Z", "url": "https://files.pythonhosted.org/packages/f5/3f/07efef0b0ddb78f831975ad1968447b66d989e9b9bfa3d222776a53efc46/jupytex-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11ec2d2405dc6b75a4ac838d2c8d756a", "sha256": "9b1e64032fa1948220055126afdf114cd9fd048c7bf63be1f986defb36206af8"}, "downloads": -1, "filename": "jupytex-0.0.3.tar.gz", "has_sig": false, "md5_digest": "11ec2d2405dc6b75a4ac838d2c8d756a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8160, "upload_time": "2019-01-31T12:18:19", "upload_time_iso_8601": "2019-01-31T12:18:19.740228Z", "url": "https://files.pythonhosted.org/packages/6e/df/52c207c36e4212807f8625d97ea4e9b4d7e0da36e5821355666aa4fba6b0/jupytex-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:06 2020"}