{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n    =====================\n    wishbone.output.email\n    =====================\n\n    Version: 1.0.0\n\n    Sends out incoming events as email.\n    -----------------------------------\n\n\n        Treats event.data as the body of an email.\n\n\n        Parameters:\n\n            - selection(str)(\"@data\")\n               |  The part of the event to submit externally.\n               |  Use an empty string to refer to the complete event.\n\n            - mta(string)(\"localhost:25)\n               |  The address:port of the MTA to submit the\n               |  mail to.\n\n            - to(list)([])*\n               |  A list of destinations.\n\n            - subject(str)(\"Wishbone\")*\n               |  The subject of the email.\n\n            - from_address(str)(\"wishbone@localhost\")*\n               |  The form email address.\n\n\n        Queues:\n\n            - inbox\n               |  Incoming messages", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-output-email/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-output-email", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_output_email", "package_url": "https://pypi.org/project/wishbone_output_email/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_output_email/", "project_urls": {"Download": "https://github.com/smetj/wishbone-output-email/tarball/master", "Homepage": "https://github.com/smetj/wishbone-output-email"}, "release_url": "https://pypi.org/project/wishbone_output_email/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone output module to send mails from incoming events.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n=====================\nwishbone.output.email\n=====================\n\nVersion: 1.0.0\n\nSends out incoming events as email.\n-----------------------------------\n\n\n    Treats event.data as the body of an email.\n\n\n    Parameters:\n\n        - selection(str)(\"@data\")\n           |  The part of the event to submit externally.\n           |  Use an empty string to refer to the complete event.\n\n        - mta(string)(\"localhost:25)\n           |  The address:port of the MTA to submit the\n           |  mail to.\n\n        - to(list)([])*\n           |  A list of destinations.\n\n        - subject(str)(\"Wishbone\")*\n           |  The subject of the email.\n\n        - from_address(str)(\"wishbone@localhost\")*\n           |  The form email address.\n\n\n    Queues:\n\n        - inbox\n           |  Incoming messages\n</pre>\n\n          </div>"}, "last_serial": 2031754, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b7e317eecabef2a6e12f651b2bd7e5c5", "sha256": "6fbd3744980058a9d884963070c820b2eaee600a782536d9d9615f1035d3ab3f"}, "downloads": -1, "filename": "wishbone_output_email-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b7e317eecabef2a6e12f651b2bd7e5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3217, "upload_time": "2016-03-28T13:50:18", "upload_time_iso_8601": "2016-03-28T13:50:18.151151Z", "url": "https://files.pythonhosted.org/packages/ee/6a/46962509e0dce0de40c4a529f83ca1e5bfac9fc50b994c28e7ebdb302bfe/wishbone_output_email-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7e317eecabef2a6e12f651b2bd7e5c5", "sha256": "6fbd3744980058a9d884963070c820b2eaee600a782536d9d9615f1035d3ab3f"}, "downloads": -1, "filename": "wishbone_output_email-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b7e317eecabef2a6e12f651b2bd7e5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3217, "upload_time": "2016-03-28T13:50:18", "upload_time_iso_8601": "2016-03-28T13:50:18.151151Z", "url": "https://files.pythonhosted.org/packages/ee/6a/46962509e0dce0de40c4a529f83ca1e5bfac9fc50b994c28e7ebdb302bfe/wishbone_output_email-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}