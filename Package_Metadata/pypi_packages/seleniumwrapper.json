{"info": {"author": "Keita Oouchi", "author_email": "keita.oouchi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "About this module\n-----------------\nselenium webdriver wrapper to make manipulation easier.\n\n.. image:: https://secure.travis-ci.org/keitaoouchi/seleniumwrapper.png\n.. image:: https://pypip.in/download/seleniumwrapper/badge.svg?period=month\n    :target: https://pypi.python.org/pypi//seleniumwrapper/\n    :alt: Downloads\n.. image:: https://pypip.in/version/seleniumwrapper/badge.svg?text=version\n    :target: https://pypi.python.org/pypi/seleniumwrapper/\n    :alt: Latest Version\n.. image:: https://pypip.in/py_versions/seleniumwrapper/badge.svg\n    :target: https://pypi.python.org/pypi/seleniumwrapper/\n    :alt: Supported Python versions\n.. image:: https://pypip.in/status/seleniumwrapper/badge.svg\n    :target: https://pypi.python.org/pypi/seleniumwrapper/\n    :alt: Development Status\n\nFeatures\n--------\n\n* Support Internet Explorer, Chrome, Opera, Firefox, PhantomJS\n* Support remote webdriver.\n* Easy to type aliases. (find_element_by_xpath => xpath, etc.)\n* Wrapped WebdriverWait( ... ).until( ... ) pattern.\n* Polling at the time of clicking or selecting.\n* Wrapping chaining.\n\nHow to install\n--------------\nRequires python2.6 or later.\nYou need *pip* or *distribute* or *setuptools*::\n\n    $ pip install seleniumwrapper\n\nor use easy_install::\n\n    $ easy_install seleniumwrapper\n\nalso you need selenium::\n\n    $ pip install selenium\n\nExample to use\n--------------\n\n**create** function helps you to init webdriver and wrap it easily::\n\n    >>> import seleniumwrapper as selwrap\n    >>> br = selwrap.create(\"chrome\")\n\n**connect** function helps you to use remote webdriver and wrap it::\n\n    >>> br = connect(\"android\", \"http://localhost:9999\", {\"acceptSslCerts\": True})\n\nSeleniumWrapper delegate to its wrapped webdriver::\n\n    >>> br.get(\"http://www.example.com\")\n    <seleniumwrapper.wrapper.SeleniumWrapper object at 0x...>\n    >>> br.xpath(\"//div[@class='main'])\n    <seleniumwrapper.wrapper.SeleniumWrapper object at 0x...>\n\nSetting **eager=True** to invoke find_elements::\n\n    >>> br.xpath(\"//a\", eager=True)\n    <seleniumwrapper.wrapper.SeleniumContainerWrapper object at 0x...>\n\nSeleniumContainerWrapper also delegate to its wrapped container::\n\n    >>> links = [i.get_attribute(\"href\") for i in br.xpath(\"//a\", eager=True)]\n\nEach contents in SeleniumContainerWrapper also SeleniumWrapper::\n\n    >>> tds = [tr.xpath(\"//td\", eager=True) for tr in br.xpath(\"//tr\", eager=True)]\n\nBasic API\n---------\n* seleniumwrapper.create(drivername)\n* seleniumwrapper.connect(drivername, executor, custom_capabilities)\n    Create webdriver instance and wrap it with SeleniumWrapper.\n\nSeleniumWrapper\n^^^^^^^^^^^^^^^\n* unwrap\n    Retrieves WebDriver or WebElement from wrapped object::\n\n        >>> isinstance(br.unwrap, WebElement)\n        True\n\n* parent\n    find_element_by_xpath(\"./parent::node()\")::\n\n        >>> price = br.by_tag(\"th\", \"Price\").parent.by_tag(\"td\").text\n\n* performance\n    Returns window.performance wrapped object::\n\n        >>> performance = br.performance\n        >>> timing = performance.timing\n        >>> navigation = performance.navigation\n        >>> timing.loadEventEnd\n        1358319427476\n\n* to_select\n    Convert wrapped WebElement to raw Select object::\n\n        >>> br.by_id('select_button').to_select.select_by_visible_text(\"hoge\")\n\n    select method returns the same as below::\n\n        >>> br.select(id = 'select_button').select_by_visible_text(\"hoge\")\n\n* alert\n    Returns Alert(switch_to_alert()) object::\n\n        >>> br.alert.accept()\n\n* current_url\n    Returns current_url after loading page body::\n\n        >>> br.current_url\n\n* timeout\n    Accessor for _timeout property::\n\n        >>> br.timeout\n        5\n        >>> br.timeout = 10\n        >>> br.timeout\n        10\n\n* silent\n    Accessor for _silent property::\n\n        # default\n        >>> br.by_id(\"Hoge\")\n        Traceback (most recent call last):\n            ...\n        NoSuchElementException:...\n        >>> br.silent = True\n        >>> br.by_id(\"Hoge\") is None\n        True\n\n* attr(name)\n    Shortcut to get_attribute::\n\n        >>> br.attr('href')\n\n* click(timeout=3, presleep=0, postsleep=0)\n    Continue to polling until timeout or element is displayed and clickable::\n\n        >>> br.button(\"Send\").click()\n\n* scroll_to(x, y)\n    equivalent to javascript's scrollTo::\n\n        >>> br.scrollTo(0, 100)\n\n* scroll_by(x, y)\n    equivalent to javascript's scrollBy::\n\n        >>> br.scrollBy(10, 10)\n\n* scroll_into_view(jq_identifier, align_with_top=True)\n    find elements by jq_identifier and retrieve its first element and invoke scrollIntoView to it::\n\n        >>> var element = $('#hoge');\n        >>> element && element.scrollIntoView(true)\n\n    second argument is passed as javascript's boolean to scrollIntoView::\n\n        >>> br.scrollIntoView('#hoge', False)\n\n* waitfor(type, target, eager=False, timeout=3)\n    See source::\n\n        >>> br.waitfor(\"xpath\", \"//input[@type='submit']\")\n\n* xpath(target, eager=False, timeout=3)\n    find_element_by_xpath(target, timeout)::\n\n        >>> buttons = br.xpath(\"//input[@type='submit' or @type='button']\", eager=True)\n\n* css(target, eager=False, timeout=3)\n    find_element_by_css_selector(target, timeout)::\n\n        >>> [li.text for li in br.css(\"ul li\")]\n\n* by_tag(self, tag, eager=False, timeout=3, \\*\\*attributes)\n    Returns specified tagged element with specified attributes optionally.::\n\n        >>> br.by_tag(\"link\", rel=\"stylesheet\")\n\n* by_text(text, tag='*', partial=False, eager=False, timeout=3)\n    similar to find_element_by_link_text or find_element_by_partial_link_text, but this method can be applicable to any tag::\n\n        >>> br.by_text(\"Go back to Top Page\", \"a\")\n\n* by_class(target, eager=False, timeout=3)\n    find_element_by_class_name(target, timeout)::\n\n        >>> br.by_class(\"colored\")\n\n* by_id(target, eager=False, timeout=3)\n    find_element_by_id(target, timeout)::\n\n        >>> br.by_id(\"main_contents\")\n\n* by_name(target, eager=False, timeout=3)\n    find_element_by_name(target, timeout)::\n\n        >>> br.by_name(\"page_password\")\n\n* by_linktxt(target, eager=False, timeout=3, partial=False)\n    find_element_by_link_text(target, timeout). if partial=True, then find_element_by_partial_link_text::\n\n        >>> br.by_linktxt(\"Go back to\", partial=True)\n\n* href(partialurl=None, eager=False, timeout=3):\n    find_element_by_xpath(\"//a\", timeout). if partialurl was given, search 'a' tag which href contains partialurl::\n\n        >>> phplinks = br.href(\".php\", eager=True)\n\n* img(alt=None, ext=None, eager=False, timeout=3)\n    find_elements_by_xpath(\"//img\", timeout)::\n\n        >>> br.img(alt=\"I am sorry\", ext=\"sorry.gif\")\n\n* button(value, eager=False, timeout=3)\n    find_element_by_xpath(\"//input[@type='submit' or @type='button' and @value='{0}']|.//button[text()='{0}']\".format(value), timeout)::\n\n        >>> br.button(\"Send this form\").click()\n\n* checkbox(self, eager=False, timeout=3, \\*\\*attributes)\n    Returns 'input' element type='checkbox'::\n\n        >>> br.checkbox(name='checked_value', id='hoge')\n\n* radio(self, eager=False, timeout=3, \\*\\*attributes)\n    Retuns 'input' element type='radio'.::\n\n        >>> br.radio(name='hoge', id='fuga').click()\n\n* select(self, eager=False, timeout=3, \\*\\*attributes)\n    Returns Select(self.by_tag(\"select\", eager, timeout, \\*\\*attributes) or their wrapped SeleniumContainerWrapper::\n\n        >>> br.select(name=\"hoge\").select_by_index(1)\n        >>> [select.is_multiple for select in br.select(eager=True, name=\"hoge\")]\n\nSeleniumContainerWrapper\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n* size\n    Returns length of wrapped iterable::\n\n        >>> br.img(eager=True).size\n\n* sample(size)\n    Returns random.sample(self._iterable, size)::\n\n        >>> br.img(eager=True).sample(10)\n\n* choice()\n    Returns random.choice(self._iterable)::\n\n        >>> br.img(eager=True).choice()\n\nRecent Change\n-------------\n* 0.5.4\n    * Add support for Python-3.4.\n    * Fix **button** to look for `<button>` tag.\n* 0.5.3\n    * Fix README\n* 0.5.2\n    * Add silent mode option.\n* 0.5.0\n    * Support Python3.\n* 0.4.3\n    * Add **perfomance**, **performance.timing**, **performance.navigation**, **performance.memory** properties.\n* 0.4.2\n    * Add 'PhantomJS' support.\n* 0.4.1\n    * Fixed some bugs.\n* 0.4.0\n    * Added **scroll_to**, **scroll_by**, **scroll_into_view** methods.\n* 0.3.5\n    * Added **attr** method.\n    * Fixed some typos.\n* 0.3.4\n    * Added size property to SeleniumContainerWrapper\n    * Fixed to be able to change default timeout.\n* 0.3.3\n    * Fixed bugs of string formatting.\n* 0.3.2\n    * Changed **alert** to wait until Alert's text is accesible.\n    * Override **current_url** to wait for page body loaded.\n* 0.3.1\n    * Added **connect** functon.\n* 0.3.0\n    * Changed **tag** method to **by_tag**.\n    * Added **checkbox**, **radio**.\n    * Changed **select** property to method.\n    * Added **sample**, **choice** methods to SeleniumContainerWrapper.\n    * Fixed **click** bug.\n* 0.2.4\n    * Fixed bug.\n* 0.2.3\n    * Added ext argument to **img** (alt and ext are both optional.)\n* 0.2.2\n    * Added new property **alert**\n    * Changed **img**'s argument from ext to alt( find_element_by_xpath(\"//img[@alt='{}'.format(alt)) )\n    * Modified SeleniumContainerWrapper's __contains__ behavior to unwrap given object if it is a SeleniumWrapper.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/keitaoouchi/seleniumwrapper", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "seleniumwrapper", "package_url": "https://pypi.org/project/seleniumwrapper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/seleniumwrapper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/keitaoouchi/seleniumwrapper"}, "release_url": "https://pypi.org/project/seleniumwrapper/0.5.4/", "requires_dist": null, "requires_python": null, "summary": "selenium webdriver wrapper to make manipulation easier.", "version": "0.5.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-this-module\">\n<h2>About this module</h2>\n<p>selenium webdriver wrapper to make manipulation easier.</p>\n<img alt=\"https://secure.travis-ci.org/keitaoouchi/seleniumwrapper.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320da4b7af0432e0eda50350ed81d525de74bf63/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6b656974616f6f756368692f73656c656e69756d777261707065722e706e67\">\n<a href=\"https://pypi.python.org/pypi//seleniumwrapper/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9de2c9b346c20787a81ad29875b99ac5e70b73ae/68747470733a2f2f70797069702e696e2f646f776e6c6f61642f73656c656e69756d777261707065722f62616467652e7376673f706572696f643d6d6f6e7468\"></a>\n<a href=\"https://pypi.python.org/pypi/seleniumwrapper/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c4dbd0f68d336daf4feffea80488471d87659bf/68747470733a2f2f70797069702e696e2f76657273696f6e2f73656c656e69756d777261707065722f62616467652e7376673f746578743d76657273696f6e\"></a>\n<a href=\"https://pypi.python.org/pypi/seleniumwrapper/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/997d8ef61c7dfe90fbc86b9d99135bdcc52ef0ef/68747470733a2f2f70797069702e696e2f70795f76657273696f6e732f73656c656e69756d777261707065722f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/seleniumwrapper/\" rel=\"nofollow\"><img alt=\"Development Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e5c636379cefcde0624fdd195cf97b146cbffac/68747470733a2f2f70797069702e696e2f7374617475732f73656c656e69756d777261707065722f62616467652e737667\"></a>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Support Internet Explorer, Chrome, Opera, Firefox, PhantomJS</li>\n<li>Support remote webdriver.</li>\n<li>Easy to type aliases. (find_element_by_xpath =&gt; xpath, etc.)</li>\n<li>Wrapped WebdriverWait( \u2026 ).until( \u2026 ) pattern.</li>\n<li>Polling at the time of clicking or selecting.</li>\n<li>Wrapping chaining.</li>\n</ul>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>Requires python2.6 or later.\nYou need <em>pip</em> or <em>distribute</em> or <em>setuptools</em>:</p>\n<pre>$ pip install seleniumwrapper\n</pre>\n<p>or use easy_install:</p>\n<pre>$ easy_install seleniumwrapper\n</pre>\n<p>also you need selenium:</p>\n<pre>$ pip install selenium\n</pre>\n</div>\n<div id=\"example-to-use\">\n<h2>Example to use</h2>\n<p><strong>create</strong> function helps you to init webdriver and wrap it easily:</p>\n<pre>&gt;&gt;&gt; import seleniumwrapper as selwrap\n&gt;&gt;&gt; br = selwrap.create(\"chrome\")\n</pre>\n<p><strong>connect</strong> function helps you to use remote webdriver and wrap it:</p>\n<pre>&gt;&gt;&gt; br = connect(\"android\", \"http://localhost:9999\", {\"acceptSslCerts\": True})\n</pre>\n<p>SeleniumWrapper delegate to its wrapped webdriver:</p>\n<pre>&gt;&gt;&gt; br.get(\"http://www.example.com\")\n&lt;seleniumwrapper.wrapper.SeleniumWrapper object at 0x...&gt;\n&gt;&gt;&gt; br.xpath(\"//div[@class='main'])\n&lt;seleniumwrapper.wrapper.SeleniumWrapper object at 0x...&gt;\n</pre>\n<p>Setting <strong>eager=True</strong> to invoke find_elements:</p>\n<pre>&gt;&gt;&gt; br.xpath(\"//a\", eager=True)\n&lt;seleniumwrapper.wrapper.SeleniumContainerWrapper object at 0x...&gt;\n</pre>\n<p>SeleniumContainerWrapper also delegate to its wrapped container:</p>\n<pre>&gt;&gt;&gt; links = [i.get_attribute(\"href\") for i in br.xpath(\"//a\", eager=True)]\n</pre>\n<p>Each contents in SeleniumContainerWrapper also SeleniumWrapper:</p>\n<pre>&gt;&gt;&gt; tds = [tr.xpath(\"//td\", eager=True) for tr in br.xpath(\"//tr\", eager=True)]\n</pre>\n</div>\n<div id=\"basic-api\">\n<h2>Basic API</h2>\n<ul>\n<li>seleniumwrapper.create(drivername)</li>\n<li><dl>\n<dt>seleniumwrapper.connect(drivername, executor, custom_capabilities)</dt>\n<dd>Create webdriver instance and wrap it with SeleniumWrapper.</dd>\n</dl>\n</li>\n</ul>\n<div id=\"seleniumwrapper\">\n<h3>SeleniumWrapper</h3>\n<ul>\n<li><dl>\n<dt>unwrap</dt>\n<dd><p>Retrieves WebDriver or WebElement from wrapped object:</p>\n<pre>&gt;&gt;&gt; isinstance(br.unwrap, WebElement)\nTrue\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>parent</dt>\n<dd><p>find_element_by_xpath(\u201c./parent::node()\u201d):</p>\n<pre>&gt;&gt;&gt; price = br.by_tag(\"th\", \"Price\").parent.by_tag(\"td\").text\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>performance</dt>\n<dd><p>Returns window.performance wrapped object:</p>\n<pre>&gt;&gt;&gt; performance = br.performance\n&gt;&gt;&gt; timing = performance.timing\n&gt;&gt;&gt; navigation = performance.navigation\n&gt;&gt;&gt; timing.loadEventEnd\n1358319427476\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>to_select</dt>\n<dd><p>Convert wrapped WebElement to raw Select object:</p>\n<pre>&gt;&gt;&gt; br.by_id('select_button').to_select.select_by_visible_text(\"hoge\")\n</pre>\n<p>select method returns the same as below:</p>\n<pre>&gt;&gt;&gt; br.select(id = 'select_button').select_by_visible_text(\"hoge\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>alert</dt>\n<dd><p>Returns Alert(switch_to_alert()) object:</p>\n<pre>&gt;&gt;&gt; br.alert.accept()\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>current_url</dt>\n<dd><p>Returns current_url after loading page body:</p>\n<pre>&gt;&gt;&gt; br.current_url\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>timeout</dt>\n<dd><p>Accessor for _timeout property:</p>\n<pre>&gt;&gt;&gt; br.timeout\n5\n&gt;&gt;&gt; br.timeout = 10\n&gt;&gt;&gt; br.timeout\n10\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>silent</dt>\n<dd><p>Accessor for _silent property:</p>\n<pre># default\n&gt;&gt;&gt; br.by_id(\"Hoge\")\nTraceback (most recent call last):\n    ...\nNoSuchElementException:...\n&gt;&gt;&gt; br.silent = True\n&gt;&gt;&gt; br.by_id(\"Hoge\") is None\nTrue\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>attr(name)</dt>\n<dd><p>Shortcut to get_attribute:</p>\n<pre>&gt;&gt;&gt; br.attr('href')\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>click(timeout=3, presleep=0, postsleep=0)</dt>\n<dd><p>Continue to polling until timeout or element is displayed and clickable:</p>\n<pre>&gt;&gt;&gt; br.button(\"Send\").click()\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>scroll_to(x, y)</dt>\n<dd><p>equivalent to javascript\u2019s scrollTo:</p>\n<pre>&gt;&gt;&gt; br.scrollTo(0, 100)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>scroll_by(x, y)</dt>\n<dd><p>equivalent to javascript\u2019s scrollBy:</p>\n<pre>&gt;&gt;&gt; br.scrollBy(10, 10)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>scroll_into_view(jq_identifier, align_with_top=True)</dt>\n<dd><p>find elements by jq_identifier and retrieve its first element and invoke scrollIntoView to it:</p>\n<pre>&gt;&gt;&gt; var element = $('#hoge');\n&gt;&gt;&gt; element &amp;&amp; element.scrollIntoView(true)\n</pre>\n<p>second argument is passed as javascript\u2019s boolean to scrollIntoView:</p>\n<pre>&gt;&gt;&gt; br.scrollIntoView('#hoge', False)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>waitfor(type, target, eager=False, timeout=3)</dt>\n<dd><p>See source:</p>\n<pre>&gt;&gt;&gt; br.waitfor(\"xpath\", \"//input[@type='submit']\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>xpath(target, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_xpath(target, timeout):</p>\n<pre>&gt;&gt;&gt; buttons = br.xpath(\"//input[@type='submit' or @type='button']\", eager=True)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>css(target, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_css_selector(target, timeout):</p>\n<pre>&gt;&gt;&gt; [li.text for li in br.css(\"ul li\")]\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_tag(self, tag, eager=False, timeout=3, **attributes)</dt>\n<dd><p>Returns specified tagged element with specified attributes optionally.:</p>\n<pre>&gt;&gt;&gt; br.by_tag(\"link\", rel=\"stylesheet\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_text(text, tag=\u2019*\u2019, partial=False, eager=False, timeout=3)</dt>\n<dd><p>similar to find_element_by_link_text or find_element_by_partial_link_text, but this method can be applicable to any tag:</p>\n<pre>&gt;&gt;&gt; br.by_text(\"Go back to Top Page\", \"a\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_class(target, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_class_name(target, timeout):</p>\n<pre>&gt;&gt;&gt; br.by_class(\"colored\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_id(target, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_id(target, timeout):</p>\n<pre>&gt;&gt;&gt; br.by_id(\"main_contents\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_name(target, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_name(target, timeout):</p>\n<pre>&gt;&gt;&gt; br.by_name(\"page_password\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>by_linktxt(target, eager=False, timeout=3, partial=False)</dt>\n<dd><p>find_element_by_link_text(target, timeout). if partial=True, then find_element_by_partial_link_text:</p>\n<pre>&gt;&gt;&gt; br.by_linktxt(\"Go back to\", partial=True)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>href(partialurl=None, eager=False, timeout=3):</dt>\n<dd><p>find_element_by_xpath(\u201c//a\u201d, timeout). if partialurl was given, search \u2018a\u2019 tag which href contains partialurl:</p>\n<pre>&gt;&gt;&gt; phplinks = br.href(\".php\", eager=True)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>img(alt=None, ext=None, eager=False, timeout=3)</dt>\n<dd><p>find_elements_by_xpath(\u201c//img\u201d, timeout):</p>\n<pre>&gt;&gt;&gt; br.img(alt=\"I am sorry\", ext=\"sorry.gif\")\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>button(value, eager=False, timeout=3)</dt>\n<dd><p>find_element_by_xpath(\u201c//input[@type=\u2019submit\u2019 or @type=\u2019button\u2019 and @value=\u2019{0}\u2019]|.//button[text()=\u2019{0}\u2019]\u201d.format(value), timeout):</p>\n<pre>&gt;&gt;&gt; br.button(\"Send this form\").click()\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>checkbox(self, eager=False, timeout=3, **attributes)</dt>\n<dd><p>Returns \u2018input\u2019 element type=\u2019checkbox\u2019:</p>\n<pre>&gt;&gt;&gt; br.checkbox(name='checked_value', id='hoge')\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>radio(self, eager=False, timeout=3, **attributes)</dt>\n<dd><p>Retuns \u2018input\u2019 element type=\u2019radio\u2019.:</p>\n<pre>&gt;&gt;&gt; br.radio(name='hoge', id='fuga').click()\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>select(self, eager=False, timeout=3, **attributes)</dt>\n<dd><p>Returns Select(self.by_tag(\u201cselect\u201d, eager, timeout, **attributes) or their wrapped SeleniumContainerWrapper:</p>\n<pre>&gt;&gt;&gt; br.select(name=\"hoge\").select_by_index(1)\n&gt;&gt;&gt; [select.is_multiple for select in br.select(eager=True, name=\"hoge\")]\n</pre>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"seleniumcontainerwrapper\">\n<h3>SeleniumContainerWrapper</h3>\n<ul>\n<li><dl>\n<dt>size</dt>\n<dd><p>Returns length of wrapped iterable:</p>\n<pre>&gt;&gt;&gt; br.img(eager=True).size\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>sample(size)</dt>\n<dd><p>Returns random.sample(self._iterable, size):</p>\n<pre>&gt;&gt;&gt; br.img(eager=True).sample(10)\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>choice()</dt>\n<dd><p>Returns random.choice(self._iterable):</p>\n<pre>&gt;&gt;&gt; br.img(eager=True).choice()\n</pre>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"recent-change\">\n<h2>Recent Change</h2>\n<ul>\n<li><dl>\n<dt>0.5.4</dt>\n<dd><ul>\n<li>Add support for Python-3.4.</li>\n<li>Fix <strong>button</strong> to look for <cite>&lt;button&gt;</cite> tag.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.5.3</dt>\n<dd><ul>\n<li>Fix README</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.5.2</dt>\n<dd><ul>\n<li>Add silent mode option.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.5.0</dt>\n<dd><ul>\n<li>Support Python3.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.4.3</dt>\n<dd><ul>\n<li>Add <strong>perfomance</strong>, <strong>performance.timing</strong>, <strong>performance.navigation</strong>, <strong>performance.memory</strong> properties.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.4.2</dt>\n<dd><ul>\n<li>Add \u2018PhantomJS\u2019 support.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.4.1</dt>\n<dd><ul>\n<li>Fixed some bugs.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.4.0</dt>\n<dd><ul>\n<li>Added <strong>scroll_to</strong>, <strong>scroll_by</strong>, <strong>scroll_into_view</strong> methods.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.5</dt>\n<dd><ul>\n<li>Added <strong>attr</strong> method.</li>\n<li>Fixed some typos.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.4</dt>\n<dd><ul>\n<li>Added size property to SeleniumContainerWrapper</li>\n<li>Fixed to be able to change default timeout.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.3</dt>\n<dd><ul>\n<li>Fixed bugs of string formatting.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.2</dt>\n<dd><ul>\n<li>Changed <strong>alert</strong> to wait until Alert\u2019s text is accesible.</li>\n<li>Override <strong>current_url</strong> to wait for page body loaded.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.1</dt>\n<dd><ul>\n<li>Added <strong>connect</strong> functon.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.3.0</dt>\n<dd><ul>\n<li>Changed <strong>tag</strong> method to <strong>by_tag</strong>.</li>\n<li>Added <strong>checkbox</strong>, <strong>radio</strong>.</li>\n<li>Changed <strong>select</strong> property to method.</li>\n<li>Added <strong>sample</strong>, <strong>choice</strong> methods to SeleniumContainerWrapper.</li>\n<li>Fixed <strong>click</strong> bug.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.2.4</dt>\n<dd><ul>\n<li>Fixed bug.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.2.3</dt>\n<dd><ul>\n<li>Added ext argument to <strong>img</strong> (alt and ext are both optional.)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>0.2.2</dt>\n<dd><ul>\n<li>Added new property <strong>alert</strong></li>\n<li>Changed <strong>img</strong>\u2019s argument from ext to alt( find_element_by_xpath(\u201c//img[@alt=\u2019{}\u2019.format(alt)) )</li>\n<li>Modified SeleniumContainerWrapper\u2019s __contains__ behavior to unwrap given object if it is a SeleniumWrapper.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1342272, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "2ecc73601ea91baecda7c4191f7d021c", "sha256": "f74c00dde067ddaa74bf3c1376cd531790789036d2af49cdc915f7e2d35c9270"}, "downloads": -1, "filename": "seleniumwrapper-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2ecc73601ea91baecda7c4191f7d021c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10118, "upload_time": "2012-05-23T06:31:25", "upload_time_iso_8601": "2012-05-23T06:31:25.018985Z", "url": "https://files.pythonhosted.org/packages/58/d1/1c6e3463664880df47e078769940a52185ec76210f56528729b1e90e4cbe/seleniumwrapper-0.3.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8e788d4274ef3967db2763795d2bb71", "sha256": "03650c9ad51e751a0e73e51536c67175ca5792a76da2db93788a1adb2e4437a1"}, "downloads": -1, "filename": "seleniumwrapper-0.3.0.zip", "has_sig": false, "md5_digest": "d8e788d4274ef3967db2763795d2bb71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15491, "upload_time": "2012-05-23T06:31:14", "upload_time_iso_8601": "2012-05-23T06:31:14.841684Z", "url": "https://files.pythonhosted.org/packages/4e/ac/6e0d86951d9d6a0cdfabe2cc279a57436a6fe257114b05446e91d4a50807/seleniumwrapper-0.3.0.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "cd8a5ddff236b65587c202679ce53b96", "sha256": "57992119a04378eb7c4998c726d6de91c383bc3301ecb20620c5be33c341e78c"}, "downloads": -1, "filename": "seleniumwrapper-0.3.1.tar.gz", "has_sig": false, "md5_digest": "cd8a5ddff236b65587c202679ce53b96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10853, "upload_time": "2012-05-23T15:57:01", "upload_time_iso_8601": "2012-05-23T15:57:01.025215Z", "url": "https://files.pythonhosted.org/packages/05/a9/ca0278850fe7e8eaca38418cba62ae8cfb8bce5fef31b836f4dc774af290/seleniumwrapper-0.3.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa27ba0e97b63573902145da445ff732", "sha256": "0aa754516bca2a9f0f233f6af1b11e2df900d7d809e417d105389f238faf93b3"}, "downloads": -1, "filename": "seleniumwrapper-0.3.1.zip", "has_sig": false, "md5_digest": "aa27ba0e97b63573902145da445ff732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16416, "upload_time": "2012-05-23T15:56:46", "upload_time_iso_8601": "2012-05-23T15:56:46.800953Z", "url": "https://files.pythonhosted.org/packages/e0/39/3e4a8c422ab16684a9be122ababc35af007bf662e399ee3e529d9d58c143/seleniumwrapper-0.3.1.zip", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "664afb8f2df7cff05be2fc49cac038c5", "sha256": "dd798340f610e6220d8868e9a6b45ed08a5862486bd97f068b4d9eab30705f53"}, "downloads": -1, "filename": "seleniumwrapper-0.3.2.tar.gz", "has_sig": false, "md5_digest": "664afb8f2df7cff05be2fc49cac038c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11004, "upload_time": "2012-05-24T12:41:36", "upload_time_iso_8601": "2012-05-24T12:41:36.515311Z", "url": "https://files.pythonhosted.org/packages/d1/d5/3029b95861220f9f06dab7086fa0b576361b50a1d275f47fb9be9f5aaf5f/seleniumwrapper-0.3.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecb8f55d74bff1cf062747434a3df3ed", "sha256": "c940980fc15370eb17c96332ec984f3e0137e39d31fab59666a12417ad248319"}, "downloads": -1, "filename": "seleniumwrapper-0.3.2.zip", "has_sig": false, "md5_digest": "ecb8f55d74bff1cf062747434a3df3ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16556, "upload_time": "2012-05-24T12:41:24", "upload_time_iso_8601": "2012-05-24T12:41:24.937657Z", "url": "https://files.pythonhosted.org/packages/c9/a2/f2225562bc4d268c87f514e0ad02bfdbde78b40af1ded500823517bfee5d/seleniumwrapper-0.3.2.zip", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "8b6960cf2d4decb301a0bfe9ce3735e8", "sha256": "75dc71d0d56787271c19cca1b40d834a94cc19d8af5eb1849bb6f3ba3b0b5ba9"}, "downloads": -1, "filename": "seleniumwrapper-0.3.3.tar.gz", "has_sig": false, "md5_digest": "8b6960cf2d4decb301a0bfe9ce3735e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11300, "upload_time": "2012-05-31T06:39:27", "upload_time_iso_8601": "2012-05-31T06:39:27.575231Z", "url": "https://files.pythonhosted.org/packages/c6/42/128d6b30821127c03e25fb29ec7e9b538bd72b4e7f9afbf7418dc32ecf33/seleniumwrapper-0.3.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d17582b8993724d936e7bd3c98423305", "sha256": "2c04107c04680b0d6406d28abcd4b9c67ae3b97e3bb14f8721bc7196438aa60b"}, "downloads": -1, "filename": "seleniumwrapper-0.3.3.zip", "has_sig": false, "md5_digest": "d17582b8993724d936e7bd3c98423305", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17234, "upload_time": "2012-05-31T06:39:16", "upload_time_iso_8601": "2012-05-31T06:39:16.754181Z", "url": "https://files.pythonhosted.org/packages/7f/f6/20f42783aa0aee3629128d8d15a51afa26b906a9c3131da70a4d635784af/seleniumwrapper-0.3.3.zip", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "0bf89e6939cf83c88792cb3f4a331ef9", "sha256": "d6558d20931440991149124669aeeac2f7dad78f1b901eb9cb8e82d64e97e88e"}, "downloads": -1, "filename": "seleniumwrapper-0.3.4.tar.gz", "has_sig": false, "md5_digest": "0bf89e6939cf83c88792cb3f4a331ef9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11850, "upload_time": "2012-06-20T09:23:33", "upload_time_iso_8601": "2012-06-20T09:23:33.414472Z", "url": "https://files.pythonhosted.org/packages/08/2a/33f6813c79c9a05cb55976294fc10a2078d3b8d35b91e4ebcd47fef34cab/seleniumwrapper-0.3.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d567fe4a94d8d6ac269a4076296d2936", "sha256": "cf17aed63ca53c7a12e5ed14bff772e36afe04156e69a3e60321402a69533e23"}, "downloads": -1, "filename": "seleniumwrapper-0.3.4.zip", "has_sig": false, "md5_digest": "d567fe4a94d8d6ac269a4076296d2936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17932, "upload_time": "2012-06-20T09:23:49", "upload_time_iso_8601": "2012-06-20T09:23:49.016556Z", "url": "https://files.pythonhosted.org/packages/de/34/fde6e4dc675f44552e403e6ae463e632d1f5a50ba0709f228fcd59bb835f/seleniumwrapper-0.3.4.zip", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "5864a89d40735cd976fedab9f671b465", "sha256": "1ec5ec30b3b785a0f9db0e4e8dda82ceffe493657dcfa3d30a1fed4dfaa89fee"}, "downloads": -1, "filename": "seleniumwrapper-0.3.5.tar.gz", "has_sig": false, "md5_digest": "5864a89d40735cd976fedab9f671b465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10904, "upload_time": "2012-07-28T12:21:55", "upload_time_iso_8601": "2012-07-28T12:21:55.912100Z", "url": "https://files.pythonhosted.org/packages/36/be/31119fac409d456f6526aafec0907f3efb53c865321e826e89931547376e/seleniumwrapper-0.3.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "592bb18ac75fc0a0f941b1a34bb5233a", "sha256": "a1480bee965134f81e744bdb331b37a556a31536f023c0915dd8067aa4726bfc"}, "downloads": -1, "filename": "seleniumwrapper-0.3.5.zip", "has_sig": false, "md5_digest": "592bb18ac75fc0a0f941b1a34bb5233a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18173, "upload_time": "2012-07-28T12:21:40", "upload_time_iso_8601": "2012-07-28T12:21:40.436005Z", "url": "https://files.pythonhosted.org/packages/da/bb/b099708c70be70d82860e56a4e74751d10dee88f6e784e273ab82de5436c/seleniumwrapper-0.3.5.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "1b966877ebe59c293efd6d63a7055d68", "sha256": "6b85b97e017edfe45420281af5cd12cf63111867b27cdc35feee747b85ddbf79"}, "downloads": -1, "filename": "seleniumwrapper-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1b966877ebe59c293efd6d63a7055d68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13964, "upload_time": "2012-09-13T09:18:04", "upload_time_iso_8601": "2012-09-13T09:18:04.054314Z", "url": "https://files.pythonhosted.org/packages/c9/1c/4892eed15ed484d46d8ce764e8e7b656c37b15a2a6e9796251d8f55e6e0f/seleniumwrapper-0.4.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c0285bcf918d2730c4629cb767df211", "sha256": "932330bf14c301946833dfb5103f459a57247fd72c4221dddb0268656f302715"}, "downloads": -1, "filename": "seleniumwrapper-0.4.0.zip", "has_sig": false, "md5_digest": "6c0285bcf918d2730c4629cb767df211", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19800, "upload_time": "2012-09-13T09:18:50", "upload_time_iso_8601": "2012-09-13T09:18:50.792838Z", "url": "https://files.pythonhosted.org/packages/de/05/d9b537343f53549fc389fabc5e8b762cce3a12eda051ff24ae5b4746c159/seleniumwrapper-0.4.0.zip", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "fbd20d427084c441ed512b11916d69a1", "sha256": "7c94deb227c593d23c245e10d136b14b2942e86ddf3ff51e431525be4f793888"}, "downloads": -1, "filename": "seleniumwrapper-0.4.1-py2.7.egg", "has_sig": false, "md5_digest": "fbd20d427084c441ed512b11916d69a1", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 14943, "upload_time": "2012-10-08T12:35:36", "upload_time_iso_8601": "2012-10-08T12:35:36.965734Z", "url": "https://files.pythonhosted.org/packages/68/1b/44f830b96d578496dc281b2c93ed0ee3804d00d327de962e17c1cd5cf236/seleniumwrapper-0.4.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bd6981ccc58a0c39c9091f229b6487c", "sha256": "63bddfc8f61dcf6f4eeb8bcef27efc6dde93a94932e559cf9b07837ff5d1ce0d"}, "downloads": -1, "filename": "seleniumwrapper-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6bd6981ccc58a0c39c9091f229b6487c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13696, "upload_time": "2012-10-08T12:35:30", "upload_time_iso_8601": "2012-10-08T12:35:30.380894Z", "url": "https://files.pythonhosted.org/packages/e2/bc/30a018fdf0d5a0aaae45ce21b65f09d880fbdd90fe1d5e35113ef3ab00b8/seleniumwrapper-0.4.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2da92db40bd0335156e4221fc7d8a42e", "sha256": "4211d180a5c121a4c7f8f6da9965ec760ec01a3f282d9d3239a0b0d068362226"}, "downloads": -1, "filename": "seleniumwrapper-0.4.1.zip", "has_sig": false, "md5_digest": "2da92db40bd0335156e4221fc7d8a42e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19383, "upload_time": "2012-10-08T12:36:33", "upload_time_iso_8601": "2012-10-08T12:36:33.282937Z", "url": "https://files.pythonhosted.org/packages/88/b3/6843490dff0cc7c7f2b87d306b0b502684e5584bec6c835c3dfbef5a663c/seleniumwrapper-0.4.1.zip", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "cf46b2e3dfee1871bc3c6d9b6e98531d", "sha256": "1eaf132d2fa147a2695b67779bf8e49db47c55652eece7772e5c8d2558a8468c"}, "downloads": -1, "filename": "seleniumwrapper-0.4.2.tar.gz", "has_sig": false, "md5_digest": "cf46b2e3dfee1871bc3c6d9b6e98531d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13841, "upload_time": "2013-01-08T10:01:07", "upload_time_iso_8601": "2013-01-08T10:01:07.573550Z", "url": "https://files.pythonhosted.org/packages/34/f1/00b44a883142cddac23064a95ae623e304ed1732897e21a2e0f4b47a6b4b/seleniumwrapper-0.4.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f32a75e2f643b03e533a8fb3971a0899", "sha256": "bc5b28ea563ef024187f649afd9d91756735acc924055623e5e133b348bd4950"}, "downloads": -1, "filename": "seleniumwrapper-0.4.2.zip", "has_sig": false, "md5_digest": "f32a75e2f643b03e533a8fb3971a0899", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19649, "upload_time": "2013-01-08T10:01:20", "upload_time_iso_8601": "2013-01-08T10:01:20.687504Z", "url": "https://files.pythonhosted.org/packages/3e/ec/74e16d8e0c8b46089431f7a39944c7ae33b5f93c87731198512356e60cbe/seleniumwrapper-0.4.2.zip", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d7bf69c0a7b9fe44d379ad40a787d685", "sha256": "8257874cdcd86089a19bb7fadad9b08dc1eb7b2ac8dbb1ed78266dc975d6495b"}, "downloads": -1, "filename": "seleniumwrapper-0.4.3.tar.gz", "has_sig": false, "md5_digest": "d7bf69c0a7b9fe44d379ad40a787d685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14568, "upload_time": "2013-01-16T07:42:22", "upload_time_iso_8601": "2013-01-16T07:42:22.400216Z", "url": "https://files.pythonhosted.org/packages/53/6b/6a4c1f1e875030d35033558b25b89a0844c257633e4101f4793200af938a/seleniumwrapper-0.4.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc877dd6aeebda0f3bbb01da1898598e", "sha256": "0c9a5e97260932475ac485ffbfbfda9db3a62d5c78cac5793ee053b3411639ed"}, "downloads": -1, "filename": "seleniumwrapper-0.4.3.zip", "has_sig": false, "md5_digest": "bc877dd6aeebda0f3bbb01da1898598e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20453, "upload_time": "2013-01-16T07:42:32", "upload_time_iso_8601": "2013-01-16T07:42:32.682349Z", "url": "https://files.pythonhosted.org/packages/3d/e3/81d44dcd7940c98b5270ffea7c97da2fae5d8e2cdec89b09e182601bd55a/seleniumwrapper-0.4.3.zip", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "58112e928715702b13eeeac4f113bee3", "sha256": "70c84c8581726eb962ec1700b219f51715d4bbc0abd6e1251ac47a25dee0addb"}, "downloads": -1, "filename": "seleniumwrapper-0.5.1.tar.gz", "has_sig": false, "md5_digest": "58112e928715702b13eeeac4f113bee3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14679, "upload_time": "2013-05-09T12:48:21", "upload_time_iso_8601": "2013-05-09T12:48:21.630840Z", "url": "https://files.pythonhosted.org/packages/7c/39/5c4c056720699ecf7c8aca4666bc8aa31befaecbee701462315832843b26/seleniumwrapper-0.5.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d79df51b3cd4f14089f6a0c5ba671b78", "sha256": "f97a8d916b9738ae11fda6f15fd10885cbad57b298c70d6fc7dd4781ea3400a1"}, "downloads": -1, "filename": "seleniumwrapper-0.5.1.zip", "has_sig": false, "md5_digest": "d79df51b3cd4f14089f6a0c5ba671b78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20699, "upload_time": "2013-05-09T12:48:38", "upload_time_iso_8601": "2013-05-09T12:48:38.716681Z", "url": "https://files.pythonhosted.org/packages/da/36/61a73144c43f898955d2d191bbed1119420164932dddecf866b8a176bec7/seleniumwrapper-0.5.1.zip", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "c462b5f118c0edc19288d81d79bc533c", "sha256": "51718c7d0f55c399d536213ce168c6646f4dff578f507889fb56dfe7956e8056"}, "downloads": -1, "filename": "seleniumwrapper-0.5.2.tar.gz", "has_sig": false, "md5_digest": "c462b5f118c0edc19288d81d79bc533c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15262, "upload_time": "2013-06-19T04:18:52", "upload_time_iso_8601": "2013-06-19T04:18:52.142975Z", "url": "https://files.pythonhosted.org/packages/da/99/627d5e063330679a099fb78cbe147c6dfa9f6055bdca7bba3e0667369aa8/seleniumwrapper-0.5.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6d91129eb8199e8f1da0bd24bfcba92", "sha256": "9796cd08bebfcbffa3185541013949d738fff3dca4274595c4eee7e41c4368dc"}, "downloads": -1, "filename": "seleniumwrapper-0.5.2.zip", "has_sig": false, "md5_digest": "a6d91129eb8199e8f1da0bd24bfcba92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21377, "upload_time": "2013-06-19T04:19:01", "upload_time_iso_8601": "2013-06-19T04:19:01.348216Z", "url": "https://files.pythonhosted.org/packages/aa/bd/ef820e064348edeb12f703a403ed3bdef77ca2afac2fe753f2ad54b1bc84/seleniumwrapper-0.5.2.zip", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "9d87ce0934ddf893c1a47cb447121aad", "sha256": "5f3dbe80fabe4d7acf89949485b4c7000fbad495fd6986f0ab22a591ab71e5ac"}, "downloads": -1, "filename": "seleniumwrapper-0.5.3.tar.gz", "has_sig": false, "md5_digest": "9d87ce0934ddf893c1a47cb447121aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15280, "upload_time": "2013-06-19T04:24:39", "upload_time_iso_8601": "2013-06-19T04:24:39.194369Z", "url": "https://files.pythonhosted.org/packages/eb/f4/a0cc44c1da4a1b477c877e84e4ddb0e9abddd01f8c064d6c702577723797/seleniumwrapper-0.5.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "76178be227e8646330753dc81cc45253", "sha256": "0642b87c8b87b1987c1d65732efc9364279fbf6c4a8feaef1c4872072351ad2c"}, "downloads": -1, "filename": "seleniumwrapper-0.5.3.zip", "has_sig": false, "md5_digest": "76178be227e8646330753dc81cc45253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21406, "upload_time": "2013-06-19T04:24:48", "upload_time_iso_8601": "2013-06-19T04:24:48.218222Z", "url": "https://files.pythonhosted.org/packages/24/36/52109f9adf5567f838da5e4ecee877a1faf48f3c5a17ac7a0a884b906151/seleniumwrapper-0.5.3.zip", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "22f15b929f2a001929fe95417ebf021d", "sha256": "7c8797b6fe14a7ab55548c36c60be062d2f0b9fdc7c3cf4e9edb15921d91a6f2"}, "downloads": -1, "filename": "seleniumwrapper-0.5.4.tar.gz", "has_sig": false, "md5_digest": "22f15b929f2a001929fe95417ebf021d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15376, "upload_time": "2014-11-13T03:28:25", "upload_time_iso_8601": "2014-11-13T03:28:25.158922Z", "url": "https://files.pythonhosted.org/packages/ca/8b/fe05846031f2bc4137d543cc56b60b2038a1de5b64922455f588cc78785a/seleniumwrapper-0.5.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1756b5c82f4fdf3a4be4d655297e22e9", "sha256": "bb9cf4f42e871a7dfca39dc2258f798a932b531774ec4d5d72e6066bd4da27fd"}, "downloads": -1, "filename": "seleniumwrapper-0.5.4.zip", "has_sig": false, "md5_digest": "1756b5c82f4fdf3a4be4d655297e22e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21572, "upload_time": "2014-11-13T03:28:16", "upload_time_iso_8601": "2014-11-13T03:28:16.716998Z", "url": "https://files.pythonhosted.org/packages/42/85/e64e88596ac57eaab707683d2f5dcab46dcbcd2cfb99d98cafc867bb8d43/seleniumwrapper-0.5.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "22f15b929f2a001929fe95417ebf021d", "sha256": "7c8797b6fe14a7ab55548c36c60be062d2f0b9fdc7c3cf4e9edb15921d91a6f2"}, "downloads": -1, "filename": "seleniumwrapper-0.5.4.tar.gz", "has_sig": false, "md5_digest": "22f15b929f2a001929fe95417ebf021d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15376, "upload_time": "2014-11-13T03:28:25", "upload_time_iso_8601": "2014-11-13T03:28:25.158922Z", "url": "https://files.pythonhosted.org/packages/ca/8b/fe05846031f2bc4137d543cc56b60b2038a1de5b64922455f588cc78785a/seleniumwrapper-0.5.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1756b5c82f4fdf3a4be4d655297e22e9", "sha256": "bb9cf4f42e871a7dfca39dc2258f798a932b531774ec4d5d72e6066bd4da27fd"}, "downloads": -1, "filename": "seleniumwrapper-0.5.4.zip", "has_sig": false, "md5_digest": "1756b5c82f4fdf3a4be4d655297e22e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21572, "upload_time": "2014-11-13T03:28:16", "upload_time_iso_8601": "2014-11-13T03:28:16.716998Z", "url": "https://files.pythonhosted.org/packages/42/85/e64e88596ac57eaab707683d2f5dcab46dcbcd2cfb99d98cafc867bb8d43/seleniumwrapper-0.5.4.zip", "yanked": false}], "timestamp": "Fri May  8 02:55:27 2020"}