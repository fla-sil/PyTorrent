{"info": {"author": "RobertoPrevato", "author_email": "roberto.prevato@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://dev.azure.com/robertoprevato/Nest/_apis/build/status/RobertoPrevato.Gallerist?branchName=master)](https://dev.azure.com/robertoprevato/Nest/_build/latest?definitionId=26&branchName=master) [![pypi](https://img.shields.io/pypi/v/Gallerist.svg?color=blue)](https://pypi.org/project/Gallerist/)\n\n# Gallerist\nClasses and methods to handle pictures for the web, using [Pillow](https://pillow.readthedocs.io).\n\n```bash\n$ pip install gallerist\n```\n\n## Features\n* Code api to handle the generation of pictures in various sizes (e.g. medium size picture, small size, thumbnail)\n* Both asynchronous api and synchronous api\n* Supports user defined stores for binaries, for example to read and write files in [Azure Blob Storage](https://azure.microsoft.com/en-us/services/storage/blobs/), or [AWS S3](https://aws.amazon.com/s3/)\n* Supports scaling animated GIF files\n* Maintain PNG transparencies\n* Handles by default JPG, PNG, GIF, MPO; and provides a code api to support adding more supported formats\n\n## Examples\nBasic example using the synchronous api, and reading files from file system:\n\n```python\nfrom gallerist import Gallerist\nfrom gallerist.fs import FileSystemSyncFileStore\n\n\ngallerist = Gallerist(FileSystemSyncFileStore('tests'))\n\n\nmetadata = gallerist.process_image('files/blacksheep.png')\n```\n\n#### Configuring sizes\n\n```python\nfrom gallerist import Gallerist, ImageSize\nfrom gallerist.fs import FileSystemSyncFileStore\n\n\nstore = FileSystemSyncFileStore('tests')\n\n# configuring sizes by mime (use '*' to match any mime):\ngallerist = Gallerist(store, sizes={\n    'image/jpeg': [\n        ImageSize('a', 500),\n        ImageSize('b', 400),\n        ImageSize('c', 300)\n    ],\n    'image/png': [\n        ImageSize('a', 350),\n        ImageSize('b', 250),\n        ImageSize('c', 150)\n    ]\n})\n```\n\n#### Implementing a custom file store\n\n```python\nfrom gallerist.abc import FileStore, SyncFileStore\n\n\nclass MyAsyncFileStore(FileStore):\n    \"\"\"Implement your async file store, then use gallerist.process_image_async method\"\"\"\n\n    async def read_file(self, file_path: str) -> bytes:\n        pass\n\n    async def write_file(self, file_path: str, data: bytes):\n        pass\n\n    async def delete_file(self, file_path: str):\n        pass\n\n\nclass MySyncFileStore(SyncFileStore):\n    \"\"\"Implement your sync file store, then use gallerist.process_image method\"\"\"\n\n    def read_file(self, file_path: str) -> bytes:\n        pass\n\n    def write_file(self, file_path: str, data: bytes):\n        pass\n\n    def delete_file(self, file_path: str):\n        pass\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RobertoPrevato/Gallerist", "keywords": "pictures images web", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gallerist", "package_url": "https://pypi.org/project/gallerist/", "platform": "", "project_url": "https://pypi.org/project/gallerist/", "project_urls": {"Homepage": "https://github.com/RobertoPrevato/Gallerist"}, "release_url": "https://pypi.org/project/gallerist/0.0.4/", "requires_dist": ["aiofiles", "Pillow"], "requires_python": "", "summary": "Classes and methods to handle pictures for the web", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://dev.azure.com/robertoprevato/Nest/_build/latest?definitionId=26&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33fa962dd278f3b033c8bda06fa32ec5e6bcfc5e/68747470733a2f2f6465762e617a7572652e636f6d2f726f626572746f7072657661746f2f4e6573742f5f617069732f6275696c642f7374617475732f526f626572746f5072657661746f2e47616c6c65726973743f6272616e63684e616d653d6d6173746572\"></a> <a href=\"https://pypi.org/project/Gallerist/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9238d02009070a59e612a9e807da480b61075798/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f47616c6c65726973742e7376673f636f6c6f723d626c7565\"></a></p>\n<h1>Gallerist</h1>\n<p>Classes and methods to handle pictures for the web, using <a href=\"https://pillow.readthedocs.io\" rel=\"nofollow\">Pillow</a>.</p>\n<pre>$ pip install gallerist\n</pre>\n<h2>Features</h2>\n<ul>\n<li>Code api to handle the generation of pictures in various sizes (e.g. medium size picture, small size, thumbnail)</li>\n<li>Both asynchronous api and synchronous api</li>\n<li>Supports user defined stores for binaries, for example to read and write files in <a href=\"https://azure.microsoft.com/en-us/services/storage/blobs/\" rel=\"nofollow\">Azure Blob Storage</a>, or <a href=\"https://aws.amazon.com/s3/\" rel=\"nofollow\">AWS S3</a></li>\n<li>Supports scaling animated GIF files</li>\n<li>Maintain PNG transparencies</li>\n<li>Handles by default JPG, PNG, GIF, MPO; and provides a code api to support adding more supported formats</li>\n</ul>\n<h2>Examples</h2>\n<p>Basic example using the synchronous api, and reading files from file system:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gallerist</span> <span class=\"kn\">import</span> <span class=\"n\">Gallerist</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gallerist.fs</span> <span class=\"kn\">import</span> <span class=\"n\">FileSystemSyncFileStore</span>\n\n\n<span class=\"n\">gallerist</span> <span class=\"o\">=</span> <span class=\"n\">Gallerist</span><span class=\"p\">(</span><span class=\"n\">FileSystemSyncFileStore</span><span class=\"p\">(</span><span class=\"s1\">'tests'</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">gallerist</span><span class=\"o\">.</span><span class=\"n\">process_image</span><span class=\"p\">(</span><span class=\"s1\">'files/blacksheep.png'</span><span class=\"p\">)</span>\n</pre>\n<h4>Configuring sizes</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gallerist</span> <span class=\"kn\">import</span> <span class=\"n\">Gallerist</span><span class=\"p\">,</span> <span class=\"n\">ImageSize</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gallerist.fs</span> <span class=\"kn\">import</span> <span class=\"n\">FileSystemSyncFileStore</span>\n\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">FileSystemSyncFileStore</span><span class=\"p\">(</span><span class=\"s1\">'tests'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># configuring sizes by mime (use '*' to match any mime):</span>\n<span class=\"n\">gallerist</span> <span class=\"o\">=</span> <span class=\"n\">Gallerist</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'image/jpeg'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">),</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">),</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"s1\">'image/png'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"mi\">350</span><span class=\"p\">),</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">),</span>\n        <span class=\"n\">ImageSize</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n</pre>\n<h4>Implementing a custom file store</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gallerist.abc</span> <span class=\"kn\">import</span> <span class=\"n\">FileStore</span><span class=\"p\">,</span> <span class=\"n\">SyncFileStore</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAsyncFileStore</span><span class=\"p\">(</span><span class=\"n\">FileStore</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Implement your async file store, then use gallerist.process_image_async method\"\"\"</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">read_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">write_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">delete_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MySyncFileStore</span><span class=\"p\">(</span><span class=\"n\">SyncFileStore</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Implement your sync file store, then use gallerist.process_image method\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">read_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">write_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">delete_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 5868282, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4738da6820da51ac670de612791b8c7f", "sha256": "18c13fdb2d3f89d5f8e3d926f4e0246d5645aecd8c664128d64578370bd94239"}, "downloads": -1, "filename": "gallerist-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4738da6820da51ac670de612791b8c7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7671, "upload_time": "2019-09-20T18:22:16", "upload_time_iso_8601": "2019-09-20T18:22:16.182910Z", "url": "https://files.pythonhosted.org/packages/b7/35/74c3ef8175649e7587c15698e8e28b65dd5d5533f0f0cdc9b1e9dcd8181d/gallerist-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8803cb00a876f60d51ae2a94df1cf9f1", "sha256": "b3257a3cc7d37db73cd52a765869ac900d0d89a093ae53e1901772159bcdee19"}, "downloads": -1, "filename": "gallerist-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8803cb00a876f60d51ae2a94df1cf9f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6007, "upload_time": "2019-09-20T18:22:18", "upload_time_iso_8601": "2019-09-20T18:22:18.677041Z", "url": "https://files.pythonhosted.org/packages/92/2d/612414b87d9b5dfa81cb8ad9577034f54d2b6f6144c3a0710e931146de14/gallerist-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2a586198b97b19731701858e61db19f7", "sha256": "28a95cb7d4583a3c8bceae5f1dd66bc65d2cfb90b36ac65905f6f76cb58bc3b0"}, "downloads": -1, "filename": "gallerist-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2a586198b97b19731701858e61db19f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8072, "upload_time": "2019-09-21T10:06:53", "upload_time_iso_8601": "2019-09-21T10:06:53.409275Z", "url": "https://files.pythonhosted.org/packages/5f/31/f203932e77798271a69c3d8b60327b8cf8a228efbb123cabcc928f5b3f34/gallerist-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7825e688d65464e45428a04686f7ae9", "sha256": "9b9872d9bdd7b90e3cd3d36d074a44908186d115282697b3e10957ae5a6af3d4"}, "downloads": -1, "filename": "gallerist-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d7825e688d65464e45428a04686f7ae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6371, "upload_time": "2019-09-21T10:06:55", "upload_time_iso_8601": "2019-09-21T10:06:55.104090Z", "url": "https://files.pythonhosted.org/packages/f5/6a/31c1f61f76aa0327f28f793264f726a5e8beeb8ab154590bcc94fd9cfc15/gallerist-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ccbd1ade323a600ae2417d82a187e7af", "sha256": "bfe1e69ea505f20638a30d49b23377a690fc54ba7e4f80df93290866e13d4923"}, "downloads": -1, "filename": "gallerist-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ccbd1ade323a600ae2417d82a187e7af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8384, "upload_time": "2019-09-22T08:27:31", "upload_time_iso_8601": "2019-09-22T08:27:31.901604Z", "url": "https://files.pythonhosted.org/packages/e8/0c/e1a1b0dcfce107ea22d2a68078a35b9ab5345a37a1e82a1b5830aa1546fe/gallerist-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b59df68bd8e1731424d641fedccaaf5c", "sha256": "94b8ada9ac355571548371a4405e28be1affc3e194d918c46339e79bca973fef"}, "downloads": -1, "filename": "gallerist-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b59df68bd8e1731424d641fedccaaf5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7053, "upload_time": "2019-09-22T08:27:33", "upload_time_iso_8601": "2019-09-22T08:27:33.372980Z", "url": "https://files.pythonhosted.org/packages/f0/67/8ddcf4087c2b761dc8d97636062d26eb266aae90ec616983da0b0726bc18/gallerist-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccbd1ade323a600ae2417d82a187e7af", "sha256": "bfe1e69ea505f20638a30d49b23377a690fc54ba7e4f80df93290866e13d4923"}, "downloads": -1, "filename": "gallerist-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ccbd1ade323a600ae2417d82a187e7af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8384, "upload_time": "2019-09-22T08:27:31", "upload_time_iso_8601": "2019-09-22T08:27:31.901604Z", "url": "https://files.pythonhosted.org/packages/e8/0c/e1a1b0dcfce107ea22d2a68078a35b9ab5345a37a1e82a1b5830aa1546fe/gallerist-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b59df68bd8e1731424d641fedccaaf5c", "sha256": "94b8ada9ac355571548371a4405e28be1affc3e194d918c46339e79bca973fef"}, "downloads": -1, "filename": "gallerist-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b59df68bd8e1731424d641fedccaaf5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7053, "upload_time": "2019-09-22T08:27:33", "upload_time_iso_8601": "2019-09-22T08:27:33.372980Z", "url": "https://files.pythonhosted.org/packages/f0/67/8ddcf4087c2b761dc8d97636062d26eb266aae90ec616983da0b0726bc18/gallerist-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:17 2020"}