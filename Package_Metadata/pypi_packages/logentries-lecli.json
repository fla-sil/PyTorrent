{"info": {"author": "John Fitzpatrick, Safa Topal", "author_email": "john.fitzpatrick@rapid7.com, safa.topal@rapid7.com", "bugtrack_url": null, "classifiers": [], "description": "**Logentries Command Line Interface**\n==================\nThis document provides an overview of installing and using the Logentries Command Line Interface.\nThe CLI is build on the Logentries REST APIs and provides a tool to interact directly with the Logentries service outside of the UI. It is in beta and currently supports log event querying and account user management. New functionality will be continually added.\n\n**Installation**\n----------------\n\n`pip install logentries-lecli`\n\nor\n\n`pip install git+https://github.com/rapid7/lecli`\n\nor \n\n`pip install <path to project directory>`\n\n**Note** \n\n\nIf there is no lecli configuration file, a dummy config file will be created in config directory at first use of any lecli command. You should edit the file in the provided path on your shell with your API keys and other configurations after this first use.\n\nDepending on your operating system the Lecli config can be located at the following paths:\n\nIf you're running on OSX, path to your configuration file should be:\n    \n    /Users/<username>/Library/Application Support/lecli/config.ini\n    \nIf you're running on Debian, path to your configuration file should be:\n    \n    /home/<username>/.config/lecli/config.ini\n\nWe are using `appdirs` library for this and you can always refer to its user_config_dir attribute for locating the configuration file.\n\n**Supported Platforms**\n\n * Linux - Tested on `Debian 8`\n * OSX   - Tested on `El Capitan`\n\n**Configuration File**\n----------------\nIn order to use the CLI you must first setup the configuration file with your API keys. \nYour account API keys are available at logentries.com. Under the account management section select the API Keys tab. For more information: [https://docs.logentries.com/docs/api-keys](https://docs.logentries.com/docs/api-keys)\nHere you will get access to your account resource Id and be able to generate your Owner, Read/Write and Read-Only API keys. Note that only the account owner is allowed to generate an Owner API key. \n\nIn order to do User and account management via the CLI an owner API key and account resource Id is required. Querying of events and logs can be done using the Read/Write API key.\n\nCopy and paste your API keys into the AUTH section of the CLI configuration file 'config.ini'\n```\n[Auth]\naccount_resource_id = 912345678-aaaa-bbbb-1234-1234cb12345a\nowner_api_key_id = 12345678-aaaa-bbbb-1234-1234cb12345b\nowner_api_key = 12345678-aaaa-bbbb-1234-1234cb12345c\nrw_api_key = 12345678-aaaa-bbbb-1234-1234cb12345d\n```\n\nYou will also need to set your log management URL. This defaults to:\n    \n    https://rest.logentries.com/management\n\nThis value can be updated in the URL section of the CLI configuration file:\n\n    [Url]\n    log_management_url=https://<some_url>/management\n\n**Query and Events**\n--------------------\nThe event and query functionality of the CLI supports a number of different ways to query events and statistics.\n\n####Recent Events\n\nThe 'get recentevents' command allows you to retrieve the most recent log events that have been sent to Logentries.\nThe logs to retrieve events from can be specified in a few ways. The Log IDs can be passed directly as a space separated list of log Ids, or you can take advantage of log sets and CLI Favorites. Log Ids can be obtained from the settings page or logsets page of a log in the Logentries UI (https://logentries.com). CLI favorites can be passed using the '--favorites' '-c' arguments, logset ID can be passed using the '--logset' '-g' arguments. For more information in setting up CLI Favorites and using log sets, see the 'Cli Favorites and Log Sets' section below.\nBy default the 'get recentevents' command will return events for the last 20 minutes. The command also takes an optional time argument that allows you to specify how far back in time you wish to get events from; this is passed using '--last' or '-l' argument.\nIt is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).\n\nExample usage: \n```\nlecli get recentevents 12345678-aaaa-bbbb-1234-1234cb123456 -l 200\nlecli get recentevents 12345678-aaaa-bbbb-1234-1234cb123456 -r 'last 2 hours'\nlecli get recentevents -c mylogalias -l 200\nlecli get recentevents --logset 12345678-aaaa-bbbb-1234-1234cb123457 -l 200\nlecli get recentevents -g 12345678-aaaa-bbbb-1234-1234cb123457 -r 'last 1 week'\n```\n\n####Events\nThe 'get events' command allows for the retrieval of log events within defined time ranges. As with 'get recentevents', logs can be passed to the 'get events' command as a space separated list of log Ids, or you can take advantage of log sets and CLI Favorites.\nThe 'get events' command accepts time ranges in ISO-8601 human readable time format (YYYY-MM-DD HH:MM:SS); time ranges in this format can be passed using the '--datefrom' and '--dateto' arguments. Note, all time values are in UTC timezone. \nThe command also accepts epoch time with second granularity. Epoch format time parameters can be passed using the '--timefrom' '-f' and '--timeto' '-t' arguments. \nIt is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).\n\nExample usage: \n```\nlecli get events 12345678-aaaa-bbbb-1234-1234cb123456 -f 1465370400 -t 1465370500\nlecli get events 12345678-aaaa-bbbb-1234-1234cb123456 --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'\nlecli get events 12345678-aaaa-bbbb-1234-1234cb123456 -r 'yesterday'\nlecli get events --logset 12345678-aaaa-bbbb-1234-1234cb123457 --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'\nlecli get events --favorites mylogalias --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'\nlecli get events --favorites mylogalias -r 'last 3 weeks'\n```\n\n####Query\nThe 'query' command allows you to run LEQL queries on logs from the command line. Logs can be passed to the 'query' command using a space separated list of log Ids, log sets or CLI Favorites.\nAs with the 'events' command, 'query' accepts time ranges in ISO-8601 human readable time format (YYYY-MM-DD HH:MM:SS); time ranges in this format can be passed using the '--datefrom' and '--dateto' arguments.\nIt also accepts epoch time with second granularity. Epoch format time parameters can be passed using the '--timefrom' '-f' and '--timeto' '-t' arguments.\nIt is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).\n\nAny LEQL query type that can be used in the advanced mode in the Logentries UI can also be used with the 'query' command. The LEQL query is passed as a string using the '--leql' '-l' argument. For detailed information on using LEQL see https://logentries.com/doc/search/\nA query can return three types of results. For searches just using a where() and without any calculate or groupby functions then the CLI will print the list of matching log events. Other queries will return either statistical or timeseries data, the CLI will pretty print both of these.\n\nExample usage:\n```\nlecli query --logset 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'where(method=GET) calculate(count)' --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'\nlecli query --favorites mylogalias --leql 'where(method=GET) calculate(count)' --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'\n```\n\n####Supported Relative Time Patterns\nLogentries REST API also supports relative time ranges instead of absolute `start` and `end` dates. All relative times are case insensitive and supported patterns are like these: \n\n- `today`\n- `yesterday`\n- `last n timeunits` where timeunits can be:\n  - min, mins, minute, minutes\n  - hr, hrs, hour, hours\n  - day, days\n  - week, weeks\n  - month, months\n  - year, years\n\n####Live Tail\nLogentries REST API supports tailing log events in real time. Lecli makes use of this with `tail events` command. While logkeys(space separated log keys) is a mandatory argument for this command, `--leql`, `--favorites` and `--logset` options are supported for this command.\nAnother option is `--poll-interval` or `-i`, which is the request interval to the live tail API. Defaults to 1.0 seconds. As this may affect api key limits, it should be used carefully.\n\nExample usage:\n\n    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456\n    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 -i 5.0 --leql 'where(event=login)'\n    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 --logset 12345678-aaaa-bbbb-1234-1234cb123457\n    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 --favorites mylogalias\n\n####Running Saved Queries\nLogentries REST API supports running saved queries with its configurated parameters. Events, recent events, query and live tail commands support running saved queries directly from lecli. If your saved query has the log and time range information, no other information need to be supplied to the command. If any these information are not part of the saved query, they must be supplied in the command as well.\nIn case a redundant parameter has been supplied(log keys, time range or start and end times), REST will return an error response with a message indicating the redundant parameter and lecli will show this information on terminal.\n\nExample usage:\nFirst get the saved query id to run with `get savedqueries` command, then use this id in below command formats:\n\n    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456\n    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456 -r 'last 10 min' // if there is no time range information in saved query\n    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456 -f 1481558514334 -t 1481562814000 // if there is no time range information in saved query\n    lecli tail events LOG_KEY_UUID1 LOG_KEY_UUID2... --saved-query SAVED_QUERY_UUID // if there is no log information in saved query\n    \"tail events\" command can be replaced with \"query\", \"get events\", \"get recentevents\" as they all support saved queries in the same options format.\n\n    \n\n**CLI favorites and Log Sets**\n--------------------------------------------------\nThe CLI supports command line favorites (CLI Favorites) for query commands as well as log sets from the Logentries account. This makes searching well known or large lists of logs much simpler as you do not need to pass in lists of log Ids.\n\n#### CLI Favorites\nCLI Favorites allow an alias for a single log or a list of log Ids to be configured, this is done in the 'Cli_Favorites' section of the configuration file. \n```\n[Cli_Favorites]\nfavlog =    12345678-aaaa-bbbb-1234-1234cb123456\nfavlist =   12345678-aaaa-bbbb-1234-1234cb123456\n            12345678-aaaa-bbbb-1234-1234cb123457\n```\n\n#### Log Sets\nThe Logset '-g' or '--logset' option allows for a list of log Ids to be used from an existing logset (see below for details on logset management). Where a logset Id is used a request is made on the server to get a list of any log Ids that are present in that logset. That list of log Ids are then used in the command. No information from the logset is retained in the config file.\n```\nlecli query --logset 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'calculate(count)' -r 'last 3 days'\nlecli query -g 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'calculate(count)' -r 'last 3 days'\n```\n\n**User and Account Management**\n-------------------------------\nThe user and account management functionality of the CLI can only be used with a valid owner API key. The configuration file must contain the account_resource_id, owner_api_key_id and owner_api_key in the Auth section. These are all available from the account management and API keys section at https://logentries.com.\nIt is worth noting that if your account does not have a specific owner set then some user management functions may fail with a 500 error; to check if an owner is set the 'getowner' command below can be used. If no owner is set then you must regenerate the owner API key, at which point you will be asked to set an account owner.\n\n####Get Users\nThe 'get users' command will return a list of all users that have access to the account for which the CLI has been configured. The command will return the users first and last name, email address, user key and the last time they logged in. The 'get users' command does not accept any arguments.\n\nExample usage:\n```\nlecli get users\n```\n\n####Add User\nThe 'create user' command allows you to add a user to your account. There are two ways to add users, depending on whether they are a new or existing user. \nA new user is a user that has no Logentries account. \n\nTo add a new user you must provide their first and last name, and email address. If successfully added the CLI will print the users account information, including their newly generated user key. A user added via the CLI must then go to https://logentries.com/user/password-reset/ and enter their email address. They will then be sent a link that they can use to setup the password for their new account.\n\nA new user can be added using the following command\n```\nlecli create user -f John -l Smith -e john.smith@email.com\n```\n\nTo add an existing user (i.e. a user that already has a Logentries account, even if not associated with your account), you must first obtain their user key. The user can obtain their user key from the account management page of the Logentries application at https://logentries.com\n\nAn existing user can be added to your account use the following command\n```\nlecli create user -u 12345678-aaaa-bbbb-1234-1234cb123456\n```\n\n####Delete User\nThe 'delete user' command allows for the removal of a user from your account and deletion of the users account from Logentries.\nIf the user is associated with only your account then the users access to your account will be removed and the users account deleted. \nHowever, if the user is associated to any other account then access to your account will be removed but the users Logentries account and any association to other accounts will remain.\n\nTo delete a user use the following command\n```\nlecli delete user -u 12345678-aaaa-bbbb-1234-1234cb123456\n```\n\n####Get Account Owner\nThe 'get owner' command allows you to retrieve the details of the account owner, this  is done using the following command\n```\nlecli get owner\n```\n\n**Team Management**\n-------------------\nTeam management requires a valid read-write API key in your configuration file. The configuration file must contain a valid account_resource_id and rw_api_key in Auth section.\n\n####Get Teams\nGet all teams associated with this accounts.\n\n     lecli get teams\n     \n####Get a Specific Team\nGet a specific team by providing team UUID.\n\n    lecli get team <team id>\n    \n####Create a New Team\nCreate a new team with the given name.\n\n    lecli create team <new name>\n    \n####Delete a Team\nDelete a team with the given UUID.\n\n    lecli delete team <team id>\n    \n####Rename a Team\nRename a team with the given UUID to given name.\n\n    lecli rename team <team id> <team name>\n\n####Add User to a Team\nAdd a new user to a team with the given UUID and user UUID respectively.\n\n    lecli update team add_user <team id> <user key>\n\n####Delete User from a Team\nAdd a new user to a team with the given UUID and user UUID respectively.\n\n    lecli update team delete_user <team id> <user key>\n\n\n**Account Usage**\n-----------------\nAccount usage can be retrieved using lecli 'get usage' command along with 'start' and 'end' date ranges to be queried. \nA valid read-write api key in configuration file is required for this operation.\n*Note:* 'start' and 'end' dates should be in ISO-8601 format: 'YYYY-MM-DD', example: '2016-01-01'\n\n    lecli get usage -s <start date> -e <end date>\n\n\n**Saved Query Management**\n--------------------------\nSaved queries that belong to an account can be managed via lecli. Lecli supports creating(POST), listing(GET ALL), retrieving(GET), deleting(DELETE) and updating(PATCH) saved queries via command line. \nThis operation required read-write api key to be in lecli config file.\n\n####List saved queries\nGet a list of saved queries belongs to the used account.\n\nExample:\n\n    lecli get savedqueries\n\n####Get a saved query\nGet a specific saved query\nMandatory positional argument:\n- UUID of the saved query to be retrieved.\n\nExample:\n\n    lecli get savedquery <uuid of the saved query>\n\n####Create a new saved query\nCreate a new saved query with the given arguments:\n\nMandatory positional arguments:\n- Name: Name of the saved query\n- Statement: LEQL statement of the saved query\nOptional named arguments:\n- '-f': From timestamp - epoch in milliseconds\n- '-t': To timestamp - epoch in milliseconds\n- '-r': Relative time range(cannot be defined with from and/or to fields)\n- '-l': Logs of the saved query. Multiple logs can be provided with a colon(:) separated logs string.\n\nExamples:\n\n    lecli create savedquery 'new_saved_query' 'where(event)'\n    lecli create savedquery 'new_saved_query' 'where(event)' -l '123456789012345678901234567890123456'\n    lecli create savedquery 'new_saved_query' 'where(event)' -r 'last 5 min' -l '123456789012345678901234567890123456:123456789012345678901234567890123457'\n    lecli create savedquery 'new_saved_query' 'where(event)' -f 1481558514334 -t 1481562814000 -l '123456789012345678901234567890123456:123456789012345678901234567890123457'\n\n####Update a saved query\nUpdate a saved query with the given arguments.\n\nMandatory positional argument:\n- UUID of the saved query to be updated.\n\nOptional named arguments:\n- '-n': Name of the saved query\n- '-s': LEQL statement of the saved query\n- '-f': From timestamp - epoch in milliseconds\n- '-t': To timestamp - epoch in milliseconds\n- '-r': Relative time range(cannot be defined with from and/or to fields) \n- '-l': Logs of the saved query. To provide multiple logs, colon(:) separated logs can be used.\n    \nExamples:\n\n    lecli update savedquery -n 'new_name_for_query' -s 'where(/*/)'\n    lecli update savedquery -n 'new_name_for_query' -s 'where(/*/)' -r 'last 10 days'\n    lecli update savedquery -n 'new_name_for_query' -f 1481558514334 -t 1481562814000\n    lecli update savedquery -n 'new_name_for_query' -l '123456789012345678901234567890123456'\n\n####Delete a saved query\nDelete a saved query.\nMandatory positional argument:\n- UUID of the saved query to be deleted.\n\nExample:\n\n    lecli delete savedquery <uuid of the saved query>\n    \n     \n**Log Management**\n----------------------\n\nThe CLI allows you to retrieve and manage logs. You can retrieve a specific or all logs, as well as create, delete, replace and rename logs. \nRetrieving logs requires a valid read-only API key in your configuration file.\nThe remaining actions also require a valid read-write API key.\n\n####Retrieve all logs\nRetrieve all logs:\n\nExample:\n    \n    lecli get logs\n    \n####Retrieve a specific log\nRetrieve a log with a given ID.\n\nMandatory positional argument:\n- UUID of the log to the retrieved.\n\nExample:\n    \n    lecli get log <log_id>\n    \n####Create a new log\nCreate a new log with a given name or from a provided JSON file.\n\nLogs can be created with a given name and default values by providing the name. \nIf you wish to supply additional information, the (relative or full) path to a JSON file can be provided.\n\nNote that only creation of a single log object is supported at this time.\n\nExample JSON:\n\n    {\n        \"name\": \"log name\",\n        \"logsets_info\": [\n            {\n                \"id\": \"logset id\",\n                \"name\": \"logset name\"\n            }\n         ]\n     }\n     \nExample:\n\n    lecli create log -n <name>\n    lecli create log -f <path_to_json_file>\n    \n    \n####Rename a log\nRename a log with the provided ID.\n\nMandatory positional arguments:\n- UUID of the log to be renamed\n- New name of the log\n\nExample:\n    \n    lecli rename log <log_id> <new_name>\n    \n####Update a log\nAdd information to a given log.\n\nMandatory positional arguments:\n- UUID of the log to be updated\n- Full or relative path to a JSON file containing the updated log information\n\nExample:\n    \n    lecli update log <log_id> <path_to_json_file>\n    \n\n####Delete a log\nDeletes a log with the provided ID.\n\nMandatory positional argument:\n- UUID of the log to be deleted\n\nExample:\n\n    lecli delete log <log_id>\n    \n    \n####Replace a log\nReplaces a log with the provided log.\n\nMandatory positional argument:\n- UUID of the log to be replaced\n- Full or relative path to JSON file containing a valid log object\n\nExample:\n\n    lecli replace log <log_id> <path_to_json_file>\n    \n    \n   \n**Logset Management**\n----------------------\n\nThe CLI allows you to retrieve and manage logsets. You can retrieve all or single logsets as well as create, \ndelete and rename logsets. You can also add or remove a log to a logset. These actions require a valid read-write and read-only API key in your configuration file.\n\n\n####Retrieve all logsets\nRetrieve all logsets.\n\nExample:\n    \n    lecli get logsets\n\n####Retrieve a specific logset\n\nRetrieve a logset with a given ID.\n\nMandatory positional argument:\n- UUID of the logset to be retrieved.\n\nExample:\n    \n    lecli get logset <logset_id>\n\n\n####Create a new logset\n\nCreate a new logset with a given name or from a provided json file.\n\nLogsets can be created with a given name and default values by providing the name. \nIf you wish to supply additional information, the (relative or full) path to a JSON file can be provided.\n\nExample JSON:\n\n    {\n        \"name\": \"logset name\",\n        \"logs_info\": [\n            {\n                \"id\": \"log id\",,\n                \"name\": \"log name\"\n            }\n        ]\n    }\n\nExample:\n\n    lecli create logset -n <name>\n    lecli create logset -f <path_to_json_file>\n\n####Rename a logset\nRename a logset with the provided ID.\n\nMandatory positional arguments:\n- UUID of the logset to be renamed\n- New name of the logset\n\nExample:\n\n    lecli rename logset <logset_id> <new_name>\n\n####Update a logset\nAdd or remove log information to a given logset.\n\nMandatory positional arguments:\n- UUID of the logset to be updated\n- UUID of the log to be added or removed\n\nExamples:\n    \n    lecli update logset add_log <logset_id> <log_id>\n    lecli update logset delete_log <logset_id> <log_id>\n\n\n####Delete a logset\nDeletes a logset with the provided ID.\n\nMandatory positional argument:\n- UUID of the logset to be deleted\n\nExample:\n\n    lecli delete logset <logset_id>\n\n\n####Replace a logset\nReplaces a logset with the provided logset.\n\nMandator positional arguments:\n- UUID of the logset to be replaced\n- Full or relative path to JSON file containing a valid logset object\n\nExample:\n\n    lecli replace logset <logset_id> <path_to_json_file>\n    \n\n**Api Key Management**\n--------------------------\nApi keys of an account can be managed via lecli. Lecli supports creating(POST), listing(GET ALL), retrieving(GET), deleting(DELETE) and updating(PATCH) api keys via command line. \n\n####List api keys\nGet a list of api keys belongs to the used account.\nUses `rw` or `owner` api key.\n\nNote: this does not show owner api key unless `--owner` option is supplied.\n\nExample:\n\n    lecli get apikeys\n    lecli get apikeys --owner\n\n####Get an api key\nGet a specific api keys\nUses `rw` api key.\n\nMandatory positional argument:\n- UUID of the api key to be retrieved.\n\nExample:\n\n    lecli get apikey <uuid of the apikey>\n\n####Create a new api key\nCreate a new api key with the given arguments from a provided json file.\nUses `owner` api key.\n\nExample JSON:\n\n    {\n        \"api_key\": [\n            {\n                \"acl_type\": \"ReadOnly\",\n                \"active\": true,\n            }\n        ]\n    }\n    \nNote: If an acl_type of api key exists already, it cannot be created again. It needs to be `deleted` first to be created.\n\n####Update an api key\nUpdate an api key to either disable or enable it.\nUses `owner` api key.\n\nMandatory positional argument:\n- UUID of the api key to be updated.\n\nOptional named arguments:\n- '--enable': Enable the given api key\n- '--disable': Disable the given api key\n    \nExamples:\n\n    lecli update apikey <uuid of the api key> --enable\n    lecli update apikey <uuid of the api key> --disable\n\n####Delete an api key\nDelete an api key.\nUses `owner` api key.\n\nMandatory positional argument:\n- UUID of the api key to be deleted.\n\nExample:\n\n    lecli delete apikey <uuid of the api key>\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/logentries/lecli", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "logentries-lecli", "package_url": "https://pypi.org/project/logentries-lecli/", "platform": "", "project_url": "https://pypi.org/project/logentries-lecli/", "project_urls": {"Homepage": "https://github.com/logentries/lecli"}, "release_url": "https://pypi.org/project/logentries-lecli/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Logentries Command Line Interface", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            **Logentries Command Line Interface**<br>==================<br>This document provides an overview of installing and using the Logentries Command Line Interface.<br>The CLI is build on the Logentries REST APIs and provides a tool to interact directly with the Logentries service outside of the UI. It is in beta and currently supports log event querying and account user management. New functionality will be continually added.<br><br>**Installation**<br>----------------<br><br>`pip install logentries-lecli`<br><br>or<br><br>`pip install git+https://github.com/rapid7/lecli`<br><br>or <br><br>`pip install &lt;path to project directory&gt;`<br><br>**Note** <br><br><br>If there is no lecli configuration file, a dummy config file will be created in config directory at first use of any lecli command. You should edit the file in the provided path on your shell with your API keys and other configurations after this first use.<br><br>Depending on your operating system the Lecli config can be located at the following paths:<br><br>If you're running on OSX, path to your configuration file should be:<br>    <br>    /Users/&lt;username&gt;/Library/Application Support/lecli/config.ini<br>    <br>If you're running on Debian, path to your configuration file should be:<br>    <br>    /home/&lt;username&gt;/.config/lecli/config.ini<br><br>We are using `appdirs` library for this and you can always refer to its user_config_dir attribute for locating the configuration file.<br><br>**Supported Platforms**<br><br> * Linux - Tested on `Debian 8`<br> * OSX   - Tested on `El Capitan`<br><br>**Configuration File**<br>----------------<br>In order to use the CLI you must first setup the configuration file with your API keys. <br>Your account API keys are available at logentries.com. Under the account management section select the API Keys tab. For more information: [https://docs.logentries.com/docs/api-keys](https://docs.logentries.com/docs/api-keys)<br>Here you will get access to your account resource Id and be able to generate your Owner, Read/Write and Read-Only API keys. Note that only the account owner is allowed to generate an Owner API key. <br><br>In order to do User and account management via the CLI an owner API key and account resource Id is required. Querying of events and logs can be done using the Read/Write API key.<br><br>Copy and paste your API keys into the AUTH section of the CLI configuration file 'config.ini'<br>```<br>[Auth]<br>account_resource_id = 912345678-aaaa-bbbb-1234-1234cb12345a<br>owner_api_key_id = 12345678-aaaa-bbbb-1234-1234cb12345b<br>owner_api_key = 12345678-aaaa-bbbb-1234-1234cb12345c<br>rw_api_key = 12345678-aaaa-bbbb-1234-1234cb12345d<br>```<br><br>You will also need to set your log management URL. This defaults to:<br>    <br>    https://rest.logentries.com/management<br><br>This value can be updated in the URL section of the CLI configuration file:<br><br>    [Url]<br>    log_management_url=https://&lt;some_url&gt;/management<br><br>**Query and Events**<br>--------------------<br>The event and query functionality of the CLI supports a number of different ways to query events and statistics.<br><br>####Recent Events<br><br>The 'get recentevents' command allows you to retrieve the most recent log events that have been sent to Logentries.<br>The logs to retrieve events from can be specified in a few ways. The Log IDs can be passed directly as a space separated list of log Ids, or you can take advantage of log sets and CLI Favorites. Log Ids can be obtained from the settings page or logsets page of a log in the Logentries UI (https://logentries.com). CLI favorites can be passed using the '--favorites' '-c' arguments, logset ID can be passed using the '--logset' '-g' arguments. For more information in setting up CLI Favorites and using log sets, see the 'Cli Favorites and Log Sets' section below.<br>By default the 'get recentevents' command will return events for the last 20 minutes. The command also takes an optional time argument that allows you to specify how far back in time you wish to get events from; this is passed using '--last' or '-l' argument.<br>It is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).<br><br>Example usage: <br>```<br>lecli get recentevents 12345678-aaaa-bbbb-1234-1234cb123456 -l 200<br>lecli get recentevents 12345678-aaaa-bbbb-1234-1234cb123456 -r 'last 2 hours'<br>lecli get recentevents -c mylogalias -l 200<br>lecli get recentevents --logset 12345678-aaaa-bbbb-1234-1234cb123457 -l 200<br>lecli get recentevents -g 12345678-aaaa-bbbb-1234-1234cb123457 -r 'last 1 week'<br>```<br><br>####Events<br>The 'get events' command allows for the retrieval of log events within defined time ranges. As with 'get recentevents', logs can be passed to the 'get events' command as a space separated list of log Ids, or you can take advantage of log sets and CLI Favorites.<br>The 'get events' command accepts time ranges in ISO-8601 human readable time format (YYYY-MM-DD HH:MM:SS); time ranges in this format can be passed using the '--datefrom' and '--dateto' arguments. Note, all time values are in UTC timezone. <br>The command also accepts epoch time with second granularity. Epoch format time parameters can be passed using the '--timefrom' '-f' and '--timeto' '-t' arguments. <br>It is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).<br><br>Example usage: <br>```<br>lecli get events 12345678-aaaa-bbbb-1234-1234cb123456 -f 1465370400 -t 1465370500<br>lecli get events 12345678-aaaa-bbbb-1234-1234cb123456 --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'<br>lecli get events 12345678-aaaa-bbbb-1234-1234cb123456 -r 'yesterday'<br>lecli get events --logset 12345678-aaaa-bbbb-1234-1234cb123457 --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'<br>lecli get events --favorites mylogalias --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'<br>lecli get events --favorites mylogalias -r 'last 3 weeks'<br>```<br><br>####Query<br>The 'query' command allows you to run LEQL queries on logs from the command line. Logs can be passed to the 'query' command using a space separated list of log Ids, log sets or CLI Favorites.<br>As with the 'events' command, 'query' accepts time ranges in ISO-8601 human readable time format (YYYY-MM-DD HH:MM:SS); time ranges in this format can be passed using the '--datefrom' and '--dateto' arguments.<br>It also accepts epoch time with second granularity. Epoch format time parameters can be passed using the '--timefrom' '-f' and '--timeto' '-t' arguments.<br>It is also possible to provide '-r' (--relative-range) to use relative time range functionality of the Logentries REST API. Check [supported patterns](#supported-relative-time-patterns).<br><br>Any LEQL query type that can be used in the advanced mode in the Logentries UI can also be used with the 'query' command. The LEQL query is passed as a string using the '--leql' '-l' argument. For detailed information on using LEQL see https://logentries.com/doc/search/<br>A query can return three types of results. For searches just using a where() and without any calculate or groupby functions then the CLI will print the list of matching log events. Other queries will return either statistical or timeseries data, the CLI will pretty print both of these.<br><br>Example usage:<br>```<br>lecli query --logset 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'where(method=GET) calculate(count)' --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'<br>lecli query --favorites mylogalias --leql 'where(method=GET) calculate(count)' --datefrom '2016-05-18 11:04:00' --dateto '2016-05-18 11:09:59'<br>```<br><br>####Supported Relative Time Patterns<br>Logentries REST API also supports relative time ranges instead of absolute `start` and `end` dates. All relative times are case insensitive and supported patterns are like these: <br><br>- `today`<br>- `yesterday`<br>- `last n timeunits` where timeunits can be:<br>  - min, mins, minute, minutes<br>  - hr, hrs, hour, hours<br>  - day, days<br>  - week, weeks<br>  - month, months<br>  - year, years<br><br>####Live Tail<br>Logentries REST API supports tailing log events in real time. Lecli makes use of this with `tail events` command. While logkeys(space separated log keys) is a mandatory argument for this command, `--leql`, `--favorites` and `--logset` options are supported for this command.<br>Another option is `--poll-interval` or `-i`, which is the request interval to the live tail API. Defaults to 1.0 seconds. As this may affect api key limits, it should be used carefully.<br><br>Example usage:<br><br>    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456<br>    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 -i 5.0 --leql 'where(event=login)'<br>    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 --logset 12345678-aaaa-bbbb-1234-1234cb123457<br>    lecli tail events 12345678-aaaa-bbbb-1234-1234cb123456 --favorites mylogalias<br><br>####Running Saved Queries<br>Logentries REST API supports running saved queries with its configurated parameters. Events, recent events, query and live tail commands support running saved queries directly from lecli. If your saved query has the log and time range information, no other information need to be supplied to the command. If any these information are not part of the saved query, they must be supplied in the command as well.<br>In case a redundant parameter has been supplied(log keys, time range or start and end times), REST will return an error response with a message indicating the redundant parameter and lecli will show this information on terminal.<br><br>Example usage:<br>First get the saved query id to run with `get savedqueries` command, then use this id in below command formats:<br><br>    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456<br>    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456 -r 'last 10 min' // if there is no time range information in saved query<br>    lecli tail events --saved-query 12345678-aaaa-bbbb-1234-1234cb123456 -f 1481558514334 -t 1481562814000 // if there is no time range information in saved query<br>    lecli tail events LOG_KEY_UUID1 LOG_KEY_UUID2... --saved-query SAVED_QUERY_UUID // if there is no log information in saved query<br>    \"tail events\" command can be replaced with \"query\", \"get events\", \"get recentevents\" as they all support saved queries in the same options format.<br><br>    <br><br>**CLI favorites and Log Sets**<br>--------------------------------------------------<br>The CLI supports command line favorites (CLI Favorites) for query commands as well as log sets from the Logentries account. This makes searching well known or large lists of logs much simpler as you do not need to pass in lists of log Ids.<br><br>#### CLI Favorites<br>CLI Favorites allow an alias for a single log or a list of log Ids to be configured, this is done in the 'Cli_Favorites' section of the configuration file. <br>```<br>[Cli_Favorites]<br>favlog =    12345678-aaaa-bbbb-1234-1234cb123456<br>favlist =   12345678-aaaa-bbbb-1234-1234cb123456<br>            12345678-aaaa-bbbb-1234-1234cb123457<br>```<br><br>#### Log Sets<br>The Logset '-g' or '--logset' option allows for a list of log Ids to be used from an existing logset (see below for details on logset management). Where a logset Id is used a request is made on the server to get a list of any log Ids that are present in that logset. That list of log Ids are then used in the command. No information from the logset is retained in the config file.<br>```<br>lecli query --logset 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'calculate(count)' -r 'last 3 days'<br>lecli query -g 12345678-aaaa-bbbb-1234-1234cb123457 --leql 'calculate(count)' -r 'last 3 days'<br>```<br><br>**User and Account Management**<br>-------------------------------<br>The user and account management functionality of the CLI can only be used with a valid owner API key. The configuration file must contain the account_resource_id, owner_api_key_id and owner_api_key in the Auth section. These are all available from the account management and API keys section at https://logentries.com.<br>It is worth noting that if your account does not have a specific owner set then some user management functions may fail with a 500 error; to check if an owner is set the 'getowner' command below can be used. If no owner is set then you must regenerate the owner API key, at which point you will be asked to set an account owner.<br><br>####Get Users<br>The 'get users' command will return a list of all users that have access to the account for which the CLI has been configured. The command will return the users first and last name, email address, user key and the last time they logged in. The 'get users' command does not accept any arguments.<br><br>Example usage:<br>```<br>lecli get users<br>```<br><br>####Add User<br>The 'create user' command allows you to add a user to your account. There are two ways to add users, depending on whether they are a new or existing user. <br>A new user is a user that has no Logentries account. <br><br>To add a new user you must provide their first and last name, and email address. If successfully added the CLI will print the users account information, including their newly generated user key. A user added via the CLI must then go to https://logentries.com/user/password-reset/ and enter their email address. They will then be sent a link that they can use to setup the password for their new account.<br><br>A new user can be added using the following command<br>```<br>lecli create user -f John -l Smith -e john.smith@email.com<br>```<br><br>To add an existing user (i.e. a user that already has a Logentries account, even if not associated with your account), you must first obtain their user key. The user can obtain their user key from the account management page of the Logentries application at https://logentries.com<br><br>An existing user can be added to your account use the following command<br>```<br>lecli create user -u 12345678-aaaa-bbbb-1234-1234cb123456<br>```<br><br>####Delete User<br>The 'delete user' command allows for the removal of a user from your account and deletion of the users account from Logentries.<br>If the user is associated with only your account then the users access to your account will be removed and the users account deleted. <br>However, if the user is associated to any other account then access to your account will be removed but the users Logentries account and any association to other accounts will remain.<br><br>To delete a user use the following command<br>```<br>lecli delete user -u 12345678-aaaa-bbbb-1234-1234cb123456<br>```<br><br>####Get Account Owner<br>The 'get owner' command allows you to retrieve the details of the account owner, this  is done using the following command<br>```<br>lecli get owner<br>```<br><br>**Team Management**<br>-------------------<br>Team management requires a valid read-write API key in your configuration file. The configuration file must contain a valid account_resource_id and rw_api_key in Auth section.<br><br>####Get Teams<br>Get all teams associated with this accounts.<br><br>     lecli get teams<br>     <br>####Get a Specific Team<br>Get a specific team by providing team UUID.<br><br>    lecli get team &lt;team id&gt;<br>    <br>####Create a New Team<br>Create a new team with the given name.<br><br>    lecli create team &lt;new name&gt;<br>    <br>####Delete a Team<br>Delete a team with the given UUID.<br><br>    lecli delete team &lt;team id&gt;<br>    <br>####Rename a Team<br>Rename a team with the given UUID to given name.<br><br>    lecli rename team &lt;team id&gt; &lt;team name&gt;<br><br>####Add User to a Team<br>Add a new user to a team with the given UUID and user UUID respectively.<br><br>    lecli update team add_user &lt;team id&gt; &lt;user key&gt;<br><br>####Delete User from a Team<br>Add a new user to a team with the given UUID and user UUID respectively.<br><br>    lecli update team delete_user &lt;team id&gt; &lt;user key&gt;<br><br><br>**Account Usage**<br>-----------------<br>Account usage can be retrieved using lecli 'get usage' command along with 'start' and 'end' date ranges to be queried. <br>A valid read-write api key in configuration file is required for this operation.<br>*Note:* 'start' and 'end' dates should be in ISO-8601 format: 'YYYY-MM-DD', example: '2016-01-01'<br><br>    lecli get usage -s &lt;start date&gt; -e &lt;end date&gt;<br><br><br>**Saved Query Management**<br>--------------------------<br>Saved queries that belong to an account can be managed via lecli. Lecli supports creating(POST), listing(GET ALL), retrieving(GET), deleting(DELETE) and updating(PATCH) saved queries via command line. <br>This operation required read-write api key to be in lecli config file.<br><br>####List saved queries<br>Get a list of saved queries belongs to the used account.<br><br>Example:<br><br>    lecli get savedqueries<br><br>####Get a saved query<br>Get a specific saved query<br>Mandatory positional argument:<br>- UUID of the saved query to be retrieved.<br><br>Example:<br><br>    lecli get savedquery &lt;uuid of the saved query&gt;<br><br>####Create a new saved query<br>Create a new saved query with the given arguments:<br><br>Mandatory positional arguments:<br>- Name: Name of the saved query<br>- Statement: LEQL statement of the saved query<br>Optional named arguments:<br>- '-f': From timestamp - epoch in milliseconds<br>- '-t': To timestamp - epoch in milliseconds<br>- '-r': Relative time range(cannot be defined with from and/or to fields)<br>- '-l': Logs of the saved query. Multiple logs can be provided with a colon(:) separated logs string.<br><br>Examples:<br><br>    lecli create savedquery 'new_saved_query' 'where(event)'<br>    lecli create savedquery 'new_saved_query' 'where(event)' -l '123456789012345678901234567890123456'<br>    lecli create savedquery 'new_saved_query' 'where(event)' -r 'last 5 min' -l '123456789012345678901234567890123456:123456789012345678901234567890123457'<br>    lecli create savedquery 'new_saved_query' 'where(event)' -f 1481558514334 -t 1481562814000 -l '123456789012345678901234567890123456:123456789012345678901234567890123457'<br><br>####Update a saved query<br>Update a saved query with the given arguments.<br><br>Mandatory positional argument:<br>- UUID of the saved query to be updated.<br><br>Optional named arguments:<br>- '-n': Name of the saved query<br>- '-s': LEQL statement of the saved query<br>- '-f': From timestamp - epoch in milliseconds<br>- '-t': To timestamp - epoch in milliseconds<br>- '-r': Relative time range(cannot be defined with from and/or to fields) <br>- '-l': Logs of the saved query. To provide multiple logs, colon(:) separated logs can be used.<br>    <br>Examples:<br><br>    lecli update savedquery -n 'new_name_for_query' -s 'where(/*/)'<br>    lecli update savedquery -n 'new_name_for_query' -s 'where(/*/)' -r 'last 10 days'<br>    lecli update savedquery -n 'new_name_for_query' -f 1481558514334 -t 1481562814000<br>    lecli update savedquery -n 'new_name_for_query' -l '123456789012345678901234567890123456'<br><br>####Delete a saved query<br>Delete a saved query.<br>Mandatory positional argument:<br>- UUID of the saved query to be deleted.<br><br>Example:<br><br>    lecli delete savedquery &lt;uuid of the saved query&gt;<br>    <br>     <br>**Log Management**<br>----------------------<br><br>The CLI allows you to retrieve and manage logs. You can retrieve a specific or all logs, as well as create, delete, replace and rename logs. <br>Retrieving logs requires a valid read-only API key in your configuration file.<br>The remaining actions also require a valid read-write API key.<br><br>####Retrieve all logs<br>Retrieve all logs:<br><br>Example:<br>    <br>    lecli get logs<br>    <br>####Retrieve a specific log<br>Retrieve a log with a given ID.<br><br>Mandatory positional argument:<br>- UUID of the log to the retrieved.<br><br>Example:<br>    <br>    lecli get log &lt;log_id&gt;<br>    <br>####Create a new log<br>Create a new log with a given name or from a provided JSON file.<br><br>Logs can be created with a given name and default values by providing the name. <br>If you wish to supply additional information, the (relative or full) path to a JSON file can be provided.<br><br>Note that only creation of a single log object is supported at this time.<br><br>Example JSON:<br><br>    {<br>        \"name\": \"log name\",<br>        \"logsets_info\": [<br>            {<br>                \"id\": \"logset id\",<br>                \"name\": \"logset name\"<br>            }<br>         ]<br>     }<br>     <br>Example:<br><br>    lecli create log -n &lt;name&gt;<br>    lecli create log -f &lt;path_to_json_file&gt;<br>    <br>    <br>####Rename a log<br>Rename a log with the provided ID.<br><br>Mandatory positional arguments:<br>- UUID of the log to be renamed<br>- New name of the log<br><br>Example:<br>    <br>    lecli rename log &lt;log_id&gt; &lt;new_name&gt;<br>    <br>####Update a log<br>Add information to a given log.<br><br>Mandatory positional arguments:<br>- UUID of the log to be updated<br>- Full or relative path to a JSON file containing the updated log information<br><br>Example:<br>    <br>    lecli update log &lt;log_id&gt; &lt;path_to_json_file&gt;<br>    <br><br>####Delete a log<br>Deletes a log with the provided ID.<br><br>Mandatory positional argument:<br>- UUID of the log to be deleted<br><br>Example:<br><br>    lecli delete log &lt;log_id&gt;<br>    <br>    <br>####Replace a log<br>Replaces a log with the provided log.<br><br>Mandatory positional argument:<br>- UUID of the log to be replaced<br>- Full or relative path to JSON file containing a valid log object<br><br>Example:<br><br>    lecli replace log &lt;log_id&gt; &lt;path_to_json_file&gt;<br>    <br>    <br>   <br>**Logset Management**<br>----------------------<br><br>The CLI allows you to retrieve and manage logsets. You can retrieve all or single logsets as well as create, <br>delete and rename logsets. You can also add or remove a log to a logset. These actions require a valid read-write and read-only API key in your configuration file.<br><br><br>####Retrieve all logsets<br>Retrieve all logsets.<br><br>Example:<br>    <br>    lecli get logsets<br><br>####Retrieve a specific logset<br><br>Retrieve a logset with a given ID.<br><br>Mandatory positional argument:<br>- UUID of the logset to be retrieved.<br><br>Example:<br>    <br>    lecli get logset &lt;logset_id&gt;<br><br><br>####Create a new logset<br><br>Create a new logset with a given name or from a provided json file.<br><br>Logsets can be created with a given name and default values by providing the name. <br>If you wish to supply additional information, the (relative or full) path to a JSON file can be provided.<br><br>Example JSON:<br><br>    {<br>        \"name\": \"logset name\",<br>        \"logs_info\": [<br>            {<br>                \"id\": \"log id\",,<br>                \"name\": \"log name\"<br>            }<br>        ]<br>    }<br><br>Example:<br><br>    lecli create logset -n &lt;name&gt;<br>    lecli create logset -f &lt;path_to_json_file&gt;<br><br>####Rename a logset<br>Rename a logset with the provided ID.<br><br>Mandatory positional arguments:<br>- UUID of the logset to be renamed<br>- New name of the logset<br><br>Example:<br><br>    lecli rename logset &lt;logset_id&gt; &lt;new_name&gt;<br><br>####Update a logset<br>Add or remove log information to a given logset.<br><br>Mandatory positional arguments:<br>- UUID of the logset to be updated<br>- UUID of the log to be added or removed<br><br>Examples:<br>    <br>    lecli update logset add_log &lt;logset_id&gt; &lt;log_id&gt;<br>    lecli update logset delete_log &lt;logset_id&gt; &lt;log_id&gt;<br><br><br>####Delete a logset<br>Deletes a logset with the provided ID.<br><br>Mandatory positional argument:<br>- UUID of the logset to be deleted<br><br>Example:<br><br>    lecli delete logset &lt;logset_id&gt;<br><br><br>####Replace a logset<br>Replaces a logset with the provided logset.<br><br>Mandator positional arguments:<br>- UUID of the logset to be replaced<br>- Full or relative path to JSON file containing a valid logset object<br><br>Example:<br><br>    lecli replace logset &lt;logset_id&gt; &lt;path_to_json_file&gt;<br>    <br><br>**Api Key Management**<br>--------------------------<br>Api keys of an account can be managed via lecli. Lecli supports creating(POST), listing(GET ALL), retrieving(GET), deleting(DELETE) and updating(PATCH) api keys via command line. <br><br>####List api keys<br>Get a list of api keys belongs to the used account.<br>Uses `rw` or `owner` api key.<br><br>Note: this does not show owner api key unless `--owner` option is supplied.<br><br>Example:<br><br>    lecli get apikeys<br>    lecli get apikeys --owner<br><br>####Get an api key<br>Get a specific api keys<br>Uses `rw` api key.<br><br>Mandatory positional argument:<br>- UUID of the api key to be retrieved.<br><br>Example:<br><br>    lecli get apikey &lt;uuid of the apikey&gt;<br><br>####Create a new api key<br>Create a new api key with the given arguments from a provided json file.<br>Uses `owner` api key.<br><br>Example JSON:<br><br>    {<br>        \"api_key\": [<br>            {<br>                \"acl_type\": \"ReadOnly\",<br>                \"active\": true,<br>            }<br>        ]<br>    }<br>    <br>Note: If an acl_type of api key exists already, it cannot be created again. It needs to be `deleted` first to be created.<br><br>####Update an api key<br>Update an api key to either disable or enable it.<br>Uses `owner` api key.<br><br>Mandatory positional argument:<br>- UUID of the api key to be updated.<br><br>Optional named arguments:<br>- '--enable': Enable the given api key<br>- '--disable': Disable the given api key<br>    <br>Examples:<br><br>    lecli update apikey &lt;uuid of the api key&gt; --enable<br>    lecli update apikey &lt;uuid of the api key&gt; --disable<br><br>####Delete an api key<br>Delete an api key.<br>Uses `owner` api key.<br><br>Mandatory positional argument:<br>- UUID of the api key to be deleted.<br><br>Example:<br><br>    lecli delete apikey &lt;uuid of the api key&gt;<br>\n          </div>"}, "last_serial": 4721577, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "8a496a21a30f162b88d19271b99ef77c", "sha256": "17313ea9f22ed1a25e38c5916ea513b9026d75c231e39412175d8367efd15215"}, "downloads": -1, "filename": "logentries-lecli-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8a496a21a30f162b88d19271b99ef77c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22681, "upload_time": "2016-07-15T13:35:34", "upload_time_iso_8601": "2016-07-15T13:35:34.295189Z", "url": "https://files.pythonhosted.org/packages/65/b7/93d1d7beba611da6595811a5d51395638e5d5882a6c5330e98873f991fa6/logentries-lecli-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "5337291886f096f63c83f73ab927deee", "sha256": "cd2c13ab7227061d573859f9c1d3fe04220f3da80e83e46f585b3baff0a2c9e6"}, "downloads": -1, "filename": "logentries-lecli-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5337291886f096f63c83f73ab927deee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23156, "upload_time": "2016-07-22T16:17:23", "upload_time_iso_8601": "2016-07-22T16:17:23.350318Z", "url": "https://files.pythonhosted.org/packages/3c/f8/abf530c0e0033582de98588e67960aa9b3992f851fb4bf58317b6157be8e/logentries-lecli-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "e288d45798192b4e0c208064304c2a3e", "sha256": "957efbd0b2eda2f5bddf48cbf460025a916ae3ac128189962d1ba8a9cd2e8815"}, "downloads": -1, "filename": "logentries-lecli-0.3.3.tar.gz", "has_sig": false, "md5_digest": "e288d45798192b4e0c208064304c2a3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23381, "upload_time": "2016-08-10T13:24:02", "upload_time_iso_8601": "2016-08-10T13:24:02.510765Z", "url": "https://files.pythonhosted.org/packages/8f/bb/ddeb50cc02fb0e4ac2ac38d80db7fc65445d508ed2cab0904ab029ef5365/logentries-lecli-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "52820a5556f77467fecc49a11a025cc2", "sha256": "124b511f691e14b99a517f0551ba4c1ae5165b38f1f6af396eaecf162bffc8b4"}, "downloads": -1, "filename": "logentries-lecli-0.4.0.tar.gz", "has_sig": false, "md5_digest": "52820a5556f77467fecc49a11a025cc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24055, "upload_time": "2016-08-16T15:30:15", "upload_time_iso_8601": "2016-08-16T15:30:15.104556Z", "url": "https://files.pythonhosted.org/packages/4e/ee/7cc2c8bd82dd7091497d357c54dd9448f60923dcc1c31dc8cc348873981d/logentries-lecli-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3876c2c3b1f2a2d8f3f8a3cea8c05829", "sha256": "74bfa595f746aa38a8586978b1117d1c97ab3cb78722ca2e35241b67bb806d7e"}, "downloads": -1, "filename": "logentries-lecli-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3876c2c3b1f2a2d8f3f8a3cea8c05829", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25383, "upload_time": "2016-09-12T13:34:24", "upload_time_iso_8601": "2016-09-12T13:34:24.332059Z", "url": "https://files.pythonhosted.org/packages/95/d5/736bcfbc4528700c6381c291aadeab02b078e7a7421a515a05808de40ac7/logentries-lecli-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "45dc0b510c481473c085b16047717270", "sha256": "08d1f0e3ddf46b1e72d5486ff983b0fd131c1646d74524974e31e6028ce51788"}, "downloads": -1, "filename": "logentries-lecli-0.5.0.tar.gz", "has_sig": false, "md5_digest": "45dc0b510c481473c085b16047717270", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23510, "upload_time": "2016-11-10T18:45:40", "upload_time_iso_8601": "2016-11-10T18:45:40.928401Z", "url": "https://files.pythonhosted.org/packages/cc/36/ca5f5591350504647eeda70dacb163ac59e737bbe9fcdaa02d414accd15d/logentries-lecli-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "801f8dde14a9e64ca67ed6cb17558dbe", "sha256": "653f7596ebe2fb1ad34c8fee2ab2ee20dfca845ebbb579dfe9c4f5baeb1c0508"}, "downloads": -1, "filename": "logentries-lecli-0.6.0.tar.gz", "has_sig": false, "md5_digest": "801f8dde14a9e64ca67ed6cb17558dbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26056, "upload_time": "2016-12-13T15:04:24", "upload_time_iso_8601": "2016-12-13T15:04:24.345129Z", "url": "https://files.pythonhosted.org/packages/81/8d/a098f3992ede8f805fa800ce7ec344832696ef3a551ba8b59b0a40eaffa5/logentries-lecli-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "1409ecae08a6dacf37703c36af950978", "sha256": "52e9841f4bf7dffddfb08e8aeaac90aa36a3dca14def8c454cfe0339c8548519"}, "downloads": -1, "filename": "logentries-lecli-0.6.1.tar.gz", "has_sig": false, "md5_digest": "1409ecae08a6dacf37703c36af950978", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26438, "upload_time": "2016-12-14T10:29:45", "upload_time_iso_8601": "2016-12-14T10:29:45.146526Z", "url": "https://files.pythonhosted.org/packages/90/c8/0615897a9d62dd110235d85977f305cf0a84ae41a0b400d00e32a4a85496/logentries-lecli-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "5db338f9aa22d194201c95f0d6768a16", "sha256": "459cee7e3f9086b6a1780d8069311a42f015df8acaf9b86eef4713c4b58fcfbc"}, "downloads": -1, "filename": "logentries-lecli-0.7.0.tar.gz", "has_sig": false, "md5_digest": "5db338f9aa22d194201c95f0d6768a16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21366, "upload_time": "2017-02-06T12:09:28", "upload_time_iso_8601": "2017-02-06T12:09:28.208547Z", "url": "https://files.pythonhosted.org/packages/52/07/4005a8fb21f769633a214d16772e37ffbac9ef4aa4628a904ec33f9d4856/logentries-lecli-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "ac8531943e141283a4b1e6e668e48dc4", "sha256": "31e2dc32abf6ac4d68d3d01b4d309e73a7acbe5f33cd4e312c9857586b412e5d"}, "downloads": -1, "filename": "logentries-lecli-0.7.1.tar.gz", "has_sig": false, "md5_digest": "ac8531943e141283a4b1e6e668e48dc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21377, "upload_time": "2017-02-06T12:22:50", "upload_time_iso_8601": "2017-02-06T12:22:50.538893Z", "url": "https://files.pythonhosted.org/packages/cd/e9/9b4594f6b230294ea6e12f06303ce2d90b1c483b9596c9c3817718851fc5/logentries-lecli-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "4a2d2844f69ea6cfc751bd0ef2490840", "sha256": "806130f8d5a744871f97e5aefb57cb3584a4b6f673303f6ea8de21b90cab8205"}, "downloads": -1, "filename": "logentries-lecli-0.7.2.tar.gz", "has_sig": false, "md5_digest": "4a2d2844f69ea6cfc751bd0ef2490840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21387, "upload_time": "2017-02-06T16:49:28", "upload_time_iso_8601": "2017-02-06T16:49:28.830638Z", "url": "https://files.pythonhosted.org/packages/b9/2a/5f030b38753d478465a70c1655f4f17810cf1206404d99a841f7fe873bcf/logentries-lecli-0.7.2.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "1cf774c71f2086f8426bee87b2dfc757", "sha256": "78d950536943be0b0ab419718ccadebdd9c5e1d4f37f016a2b5acc8916024e1b"}, "downloads": -1, "filename": "logentries-lecli-0.7.4.tar.gz", "has_sig": false, "md5_digest": "1cf774c71f2086f8426bee87b2dfc757", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23427, "upload_time": "2017-02-14T16:10:04", "upload_time_iso_8601": "2017-02-14T16:10:04.679241Z", "url": "https://files.pythonhosted.org/packages/7e/6f/e57bf92504782a9b01cd94b0f351f12ce51da82dc571ad1e7a8eac07ab65/logentries-lecli-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "a7ec6d1d22b861dae18aa10c62c6b798", "sha256": "80820c498a231f890e5c937b4b2c42b83551f140c58c07b1953fe7ca52cd7b17"}, "downloads": -1, "filename": "logentries-lecli-0.7.5.tar.gz", "has_sig": false, "md5_digest": "a7ec6d1d22b861dae18aa10c62c6b798", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23343, "upload_time": "2017-03-03T11:23:18", "upload_time_iso_8601": "2017-03-03T11:23:18.156243Z", "url": "https://files.pythonhosted.org/packages/2a/c8/5addfa9fcb7e0af45293c8916c246566f12251d1abcac6b4f3bd5cc3f3cc/logentries-lecli-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "3870d125ce5df58adb40999b91851f20", "sha256": "1f3aa3e287ca06400c63e502454f84448df545e1fbc4ee04cec8f032489c26d0"}, "downloads": -1, "filename": "logentries-lecli-0.7.6.tar.gz", "has_sig": false, "md5_digest": "3870d125ce5df58adb40999b91851f20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39363, "upload_time": "2017-05-24T15:59:13", "upload_time_iso_8601": "2017-05-24T15:59:13.271624Z", "url": "https://files.pythonhosted.org/packages/3c/34/bbaa84d5bfee671bfaa2457e78ed9ce917885502e2d8df6f7ae2366ac2e2/logentries-lecli-0.7.6.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "15519235ccfb05557225d5f858907f32", "sha256": "ef5d44d6b1ec6081da2aa29a9319603323ae50b46a3f0ab047efc0bb3d6b2736"}, "downloads": -1, "filename": "logentries-lecli-1.0.0.tar.gz", "has_sig": false, "md5_digest": "15519235ccfb05557225d5f858907f32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37396, "upload_time": "2017-05-29T13:32:02", "upload_time_iso_8601": "2017-05-29T13:32:02.347705Z", "url": "https://files.pythonhosted.org/packages/4c/0f/4f90f2fbe1a9a0a4d60a2fc06b1ab482c79eefa5cbc3bde5264d18a7ab0c/logentries-lecli-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "60e6e2a9e144ca46b22835f187ab81ac", "sha256": "e44c4e32fe465f80ca27000eda377883cac62656f800ac0915cb7de2767845c3"}, "downloads": -1, "filename": "logentries-lecli-1.0.1.tar.gz", "has_sig": false, "md5_digest": "60e6e2a9e144ca46b22835f187ab81ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39487, "upload_time": "2017-08-25T16:08:05", "upload_time_iso_8601": "2017-08-25T16:08:05.320871Z", "url": "https://files.pythonhosted.org/packages/bc/66/751949f00c73240b71d1f67865a84ffa6000c98fbab2c7aed1e642189a78/logentries-lecli-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f2bf744353cde82dc62e10e9ac5fcb53", "sha256": "e72a1dc43967f855b3f3bb862420c86a5266c246f5f16936976fcaac3c55751d"}, "downloads": -1, "filename": "logentries-lecli-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f2bf744353cde82dc62e10e9ac5fcb53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39496, "upload_time": "2017-08-28T10:18:51", "upload_time_iso_8601": "2017-08-28T10:18:51.799171Z", "url": "https://files.pythonhosted.org/packages/cb/b4/2444069eff1eaa540509f347a066a8128bed2c46df7475df14617c8d34c4/logentries-lecli-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4f0d01825cf82132296b9b1e245159fa", "sha256": "9003fa4e26c04bd92196cecd61dd5bf8fb101fe55026e12283f886c9038ab10e"}, "downloads": -1, "filename": "logentries-lecli-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4f0d01825cf82132296b9b1e245159fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25525, "upload_time": "2017-10-02T12:04:07", "upload_time_iso_8601": "2017-10-02T12:04:07.745401Z", "url": "https://files.pythonhosted.org/packages/97/38/6a4ae0d12ffeaa0de8fc66ce100afc53055ee9e1d717cb4071408cc36dc9/logentries-lecli-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f0d01825cf82132296b9b1e245159fa", "sha256": "9003fa4e26c04bd92196cecd61dd5bf8fb101fe55026e12283f886c9038ab10e"}, "downloads": -1, "filename": "logentries-lecli-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4f0d01825cf82132296b9b1e245159fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25525, "upload_time": "2017-10-02T12:04:07", "upload_time_iso_8601": "2017-10-02T12:04:07.745401Z", "url": "https://files.pythonhosted.org/packages/97/38/6a4ae0d12ffeaa0de8fc66ce100afc53055ee9e1d717cb4071408cc36dc9/logentries-lecli-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:21 2020"}