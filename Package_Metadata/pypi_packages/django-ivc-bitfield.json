{"info": {"author": "Disqus", "author_email": "info@ivc-inform.ru", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development"], "description": "django-bitfield\n---------------\n\n.. image:: https://api.travis-ci.org/disqus/django-bitfield.png?branch=master\n    :target: https://travis-ci.org/disqus/django-bitfield\n\nProvides a BitField like class (using a BigIntegerField) for your Django models.\n\n(If you're upgrading from a version before 1.2 the API has changed greatly and is backwards incompatible!)\n\nRequirements\n============\n\n* Django >= 1.4\n* PostgreSQL (see notes)\n\n**Notes:**\n\n- SQLite does not support save operations using a ``Bit`` (per the example under Usage).\n- MySQL fails on most queries related to BitField's.\n\nInstallation\n============\n\nInstall it with pip (or easy_install)::\n\n\tpip install django-bitfield\n\nUsage\n=====\n\nFirst you'll need to attach a BitField to your class. This acts as a BigIntegerField (BIGINT) in your database::\n\n\tfrom bitfield import BitField\n\n\tclass MyModel(models.Model):\n\t    flags = BitField(flags=(\n\t        'awesome_flag',\n\t        'flaggy_foo',\n\t        'baz_bar',\n\t    ))\n\nFlags can also be defined with labels::\n\n\tclass MyModel(models.Model):\n\t    flags = BitField(flags=(\n\t        ('awesome_flag', 'Awesome Flag!'),\n\t        ('flaggy_foo', 'Flaggy Foo'),\n\t        ('baz_bar', 'Baz (bar)'),\n\t    ))\n\nNow you can use the field using very familiar Django operations::\n\n\t# Create the model\n\to = MyModel.objects.create(flags=0)\n\n\t# Add awesome_flag (does not work in SQLite)\n\tMyModel.objects.filter(pk=o.pk).update(flags=F('flags').bitor(MyModel.flags.awesome_flag))\n\n\t# Set flags manually to [awesome_flag, flaggy_foo]\n\tMyModel.objects.filter(pk=o.pk).update(flags=MyModel.flags.awesome_flag | MyModel.flags.flaggy_foo)\n\n\t# Remove awesome_flag (does not work in SQLite)\n\tMyModel.objects.filter(pk=o.pk).update(flags=F('flags').bitand(~MyModel.flags.awesome_flag))\n\n\t# Find by awesome_flag\n\tMyModel.objects.filter(flags=MyModel.flags.awesome_flag)\n\n\t# Exclude by awesome_flag\n\tMyModel.objects.filter(flags=~MyModel.flags.awesome_flag)\n\n\t# Test awesome_flag\n\tif o.flags.awesome_flag:\n\t    print \"Happy times!\"\n\n\t# List all flags on the field\n\tfor f in o.flags:\n\t    print f\n\n\t# Get a flag label\n\tprint o.flags.get_label('awesome_flag')\n\nEnjoy!\n\nAdmin\n=====\n\nTo use the widget in the admin, you'll need to update your ModelAdmin. Add the\nfollowing lines to your ModelAdmin::\n\n\tformfield_overrides = {\n\t\tBitField: {'widget': BitFieldCheckboxSelectMultiple},\n\t}\n\nMake sure you've imported the classes by adding these lines to the top of the file::\n\n\tfrom bitfield import BitField\n\tfrom bitfield.forms import BitFieldCheckboxSelectMultiple\n\nThere is also a ``BitFieldListFilter`` list filter (Django 1.4 or newer).\nTo use it set ``list_filter`` ModelAdmin option::\n\n    list_filter = (\n            ('flags', BitFieldListFilter,)\n            )\n\nBitFieldListFilter is in ``bitfield.admin`` module::\n\n    from bitfield.admin import BitFieldListFilter\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ivc-inform/django-bitfield.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-ivc-bitfield", "package_url": "https://pypi.org/project/django-ivc-bitfield/", "platform": "", "project_url": "https://pypi.org/project/django-ivc-bitfield/", "project_urls": {"Homepage": "https://github.com/ivc-inform/django-bitfield.git"}, "release_url": "https://pypi.org/project/django-ivc-bitfield/1.9.7/", "requires_dist": ["Django (>=2.2)", "six", "psycopg2", "flake8 ; extra == 'tests'", "mysqlclient ; extra == 'tests'", "psycopg2 ; extra == 'tests'", "pytest-django ; extra == 'tests'"], "requires_python": "", "summary": "BitField in Django", "version": "1.9.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/disqus/django-bitfield\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/disqus/django-bitfield.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/302c63c181da665771e61a92bd0f2f06218bd6dc/68747470733a2f2f6170692e7472617669732d63692e6f72672f6469737175732f646a616e676f2d6269746669656c642e706e673f6272616e63683d6d6173746572\"></a>\n<p>Provides a BitField like class (using a BigIntegerField) for your Django models.</p>\n<p>(If you\u2019re upgrading from a version before 1.2 the API has changed greatly and is backwards incompatible!)</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Django &gt;= 1.4</li>\n<li>PostgreSQL (see notes)</li>\n</ul>\n<p><strong>Notes:</strong></p>\n<ul>\n<li>SQLite does not support save operations using a <tt>Bit</tt> (per the example under Usage).</li>\n<li>MySQL fails on most queries related to BitField\u2019s.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install it with pip (or easy_install):</p>\n<pre>pip install django-bitfield\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First you\u2019ll need to attach a BitField to your class. This acts as a BigIntegerField (BIGINT) in your database:</p>\n<pre>from bitfield import BitField\n\nclass MyModel(models.Model):\n    flags = BitField(flags=(\n        'awesome_flag',\n        'flaggy_foo',\n        'baz_bar',\n    ))\n</pre>\n<p>Flags can also be defined with labels:</p>\n<pre>class MyModel(models.Model):\n    flags = BitField(flags=(\n        ('awesome_flag', 'Awesome Flag!'),\n        ('flaggy_foo', 'Flaggy Foo'),\n        ('baz_bar', 'Baz (bar)'),\n    ))\n</pre>\n<p>Now you can use the field using very familiar Django operations:</p>\n<pre># Create the model\no = MyModel.objects.create(flags=0)\n\n# Add awesome_flag (does not work in SQLite)\nMyModel.objects.filter(pk=o.pk).update(flags=F('flags').bitor(MyModel.flags.awesome_flag))\n\n# Set flags manually to [awesome_flag, flaggy_foo]\nMyModel.objects.filter(pk=o.pk).update(flags=MyModel.flags.awesome_flag | MyModel.flags.flaggy_foo)\n\n# Remove awesome_flag (does not work in SQLite)\nMyModel.objects.filter(pk=o.pk).update(flags=F('flags').bitand(~MyModel.flags.awesome_flag))\n\n# Find by awesome_flag\nMyModel.objects.filter(flags=MyModel.flags.awesome_flag)\n\n# Exclude by awesome_flag\nMyModel.objects.filter(flags=~MyModel.flags.awesome_flag)\n\n# Test awesome_flag\nif o.flags.awesome_flag:\n    print \"Happy times!\"\n\n# List all flags on the field\nfor f in o.flags:\n    print f\n\n# Get a flag label\nprint o.flags.get_label('awesome_flag')\n</pre>\n<p>Enjoy!</p>\n</div>\n<div id=\"admin\">\n<h2>Admin</h2>\n<p>To use the widget in the admin, you\u2019ll need to update your ModelAdmin. Add the\nfollowing lines to your ModelAdmin:</p>\n<pre>formfield_overrides = {\n        BitField: {'widget': BitFieldCheckboxSelectMultiple},\n}\n</pre>\n<p>Make sure you\u2019ve imported the classes by adding these lines to the top of the file:</p>\n<pre>from bitfield import BitField\nfrom bitfield.forms import BitFieldCheckboxSelectMultiple\n</pre>\n<p>There is also a <tt>BitFieldListFilter</tt> list filter (Django 1.4 or newer).\nTo use it set <tt>list_filter</tt> ModelAdmin option:</p>\n<pre>list_filter = (\n        ('flags', BitFieldListFilter,)\n        )\n</pre>\n<p>BitFieldListFilter is in <tt>bitfield.admin</tt> module:</p>\n<pre>from bitfield.admin import BitFieldListFilter\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6239429, "releases": {"1.9.7": [{"comment_text": "", "digests": {"md5": "e48bc28c5f54321ed7aad4de26050c15", "sha256": "19699b7b146504f9cd5c7a98d7b464d579b397c146072e93626ff49ea848ac52"}, "downloads": -1, "filename": "django_ivc_bitfield-1.9.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e48bc28c5f54321ed7aad4de26050c15", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18261, "upload_time": "2019-12-04T04:25:10", "upload_time_iso_8601": "2019-12-04T04:25:10.787028Z", "url": "https://files.pythonhosted.org/packages/3c/e0/3366ed4962662e3095d533b20c975aec8bda79cb28e199e15672fdb95f38/django_ivc_bitfield-1.9.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff730de81890dd391f1be630db770309", "sha256": "abb842e625dc4878887f11fc8b223c96cf9c8b01615fb02c0d624f75fc25ef59"}, "downloads": -1, "filename": "django-ivc-bitfield-1.9.7.tar.gz", "has_sig": false, "md5_digest": "ff730de81890dd391f1be630db770309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16373, "upload_time": "2019-12-04T04:25:13", "upload_time_iso_8601": "2019-12-04T04:25:13.740466Z", "url": "https://files.pythonhosted.org/packages/fa/b0/6bc80026b7457cdce831ffc6c99358f9a9c40225caa60c2dd9ad9567637d/django-ivc-bitfield-1.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e48bc28c5f54321ed7aad4de26050c15", "sha256": "19699b7b146504f9cd5c7a98d7b464d579b397c146072e93626ff49ea848ac52"}, "downloads": -1, "filename": "django_ivc_bitfield-1.9.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e48bc28c5f54321ed7aad4de26050c15", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18261, "upload_time": "2019-12-04T04:25:10", "upload_time_iso_8601": "2019-12-04T04:25:10.787028Z", "url": "https://files.pythonhosted.org/packages/3c/e0/3366ed4962662e3095d533b20c975aec8bda79cb28e199e15672fdb95f38/django_ivc_bitfield-1.9.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff730de81890dd391f1be630db770309", "sha256": "abb842e625dc4878887f11fc8b223c96cf9c8b01615fb02c0d624f75fc25ef59"}, "downloads": -1, "filename": "django-ivc-bitfield-1.9.7.tar.gz", "has_sig": false, "md5_digest": "ff730de81890dd391f1be630db770309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16373, "upload_time": "2019-12-04T04:25:13", "upload_time_iso_8601": "2019-12-04T04:25:13.740466Z", "url": "https://files.pythonhosted.org/packages/fa/b0/6bc80026b7457cdce831ffc6c99358f9a9c40225caa60c2dd9ad9567637d/django-ivc-bitfield-1.9.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:32 2020"}