{"info": {"author": "Tyler Hughes, Momchil Minkov, Ian Williamson", "author_email": "tylerwhughes91@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<link rel=\"icon\" href=\"/img/favicon.png\" type=\"image/x-icon\" />\n<img src=\"/img/anglerlogos/rainbow.png\" title=\"Angler\" alt=\"Angler\">\n\n# angler\n\n`angler` (named for '**a**djoint **n**onlinear **g**radients') is a package for simulating and optimizing optical structures.\n\nIt provides a finite-difference frequency-domain (FDFD) solver for simulating for linear and nonlinear devices in the frequency domain.\n\nIt also provides an easy to use package for adjoint-based inverse design and optimization of linear and nonlinear devices.  For example, you can inverse design optical switches to transport power to different ports for different input powers:\n\n<img src=\"/img/Tport.gif\" title=\"Fields\" alt=\"Fields\">\n\n`angler` is released as part of a paper `Adjoint method and inverse design for nonlinear optical devices`, which can be viewed [here](https://arxiv.org/abs/1811.01255).\n\n## Installation\n\nOne can install the most stable version of `angler` and all of its dependencies (apart from MKL) using\n\n\tpip install angler\n\t\nAlternatively, to use the most current version\n\n\tgit clone https://github.com/fancompute/angler.git\n\tpip install -e angler\n\nAnd then this directory can be added to path to import angler, i.e.\n\n\timport sys\n\tsys.path.append('path/to/angler')\n\n\n## Make angler faster\n\nThe most computationally expensive operation in `angler` is the sparse linear system solve.  This is done with [`scipy.sparse.linalg.spsolve()`](https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.sparse.linalg.spsolve.html) by default.  If MKL is installed, `angler` instead uses this with a python wrapper [`pyMKL`](https://github.com/dwfmarchant/pyMKL), which makes things significantly faster, depending on the problem.  The best way to install MKL, if using anaconda, is\n\n\tconda install MKL\n\t\n(pyMKL does not work when MKL is pip installed.)\n\n## Examples / Quickstart\n\nThere are several jupyter notebook examples in the `Notebooks/` directory.\n\nFor a good introduction, try:\n\n\tNotebooks/Splitter.ipynb\n\nFor more specific applications:\n\n#### Electromagnetic simulations\n\nFor modeling linear devices with our FDFD solver (no optimization), see\n\n\tNotebooks/Linear_system.ipynb\n\nFor modeling nonlinear devices with FDFD (no optimization), see \n\n\tNotebooks/Nonlinear_system.ipynb\n\n#### Inverse design & optimization\n\nFor examples of optimizing linear devices, see \n\n\tNotebooks/Splitter.ipynb\n\tNotebooks/Accelerator.ipynb\n\nFor examples of optimizing nonlinear devices, see\n\n\tNotebooks/2_port.ipynb\n\tNotebooks/3_port.ipynb\n\tNotebooks/T_port.ipynb\n\n## Package Structure\n\n`angler` provides two main classes, `Simulation` and `Optimization`, which perform most of the functionality.\n\nGenerally, `Simulation` objects are used to perform FDFD simulations, and `Optimization` classes run inverse design and optimization algorithms over `Simulation`s.  To learn more about how `angler` works and how to use it, please take a look at [angler/README.md](angler/README.md) for a more detailed explanation.\n\n## Tests\n\nTo run all tests:\n\n\tpython -m unittest discover tests\n\nOr to run individually:\n\t\n\tpython tests/individual_test.py\n\n## Contributing\n\n`angler` is under development and we welcome suggestions, pull-requests, feature-requests, etc.\n\nIf you contribute a new feature, please also write a few tests and document your changes in [angler/README.md](angler/README.md) or the wiki.\n\n## Authors\n\n`angler` was written by Tyler Hughes, Momchil Minkov, and Ian Williamson.\n\n## Citing\n\nIf you use `angler`, please cite us using\n\n\t@misc{hughes2018adjoint,\n\tAuthor = {Tyler W. Hughes and Momchil Minkov and Ian A. D. Williamson and Shanhui Fan},\n\tTitle = {Adjoint method and inverse design for nonlinear nanophotonic devices},\n\tYear = {2018},\n\tEprint = {arXiv:1811.01255},\n\t}\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details. Copyright 2018 Tyler Hughes.\n\n## Acknowledgments\n\n* our logo was made by [Nadine Gilmer](http://nadinegilmer.com/)\n* RIP Ian's contributions before the code merge\n* We made use of a lot of code snippets (and advice) from [Jerry Shi](https://yujerryshi.github.io/index.html)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fancompute/angler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "angler", "package_url": "https://pypi.org/project/angler/", "platform": "", "project_url": "https://pypi.org/project/angler/", "project_urls": {"Homepage": "https://github.com/fancompute/angler"}, "release_url": "https://pypi.org/project/angler/0.0.15/", "requires_dist": null, "requires_python": "", "summary": "Adjoint Nonlinear Gradients", "version": "0.0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            &lt;link rel=\"icon\" href=\"/img/favicon.png\" type=\"image/x-icon\" /&gt;\n<img alt=\"Angler\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/338def983eca4c78abcb08f12925ce42acf1a9a1/2f696d672f616e676c65726c6f676f732f7261696e626f772e706e67\">\n<h1>angler</h1>\n<p><code>angler</code> (named for '<strong>a</strong>djoint <strong>n</strong>onlinear <strong>g</strong>radients') is a package for simulating and optimizing optical structures.</p>\n<p>It provides a finite-difference frequency-domain (FDFD) solver for simulating for linear and nonlinear devices in the frequency domain.</p>\n<p>It also provides an easy to use package for adjoint-based inverse design and optimization of linear and nonlinear devices.  For example, you can inverse design optical switches to transport power to different ports for different input powers:</p>\n<img alt=\"Fields\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/677fd9a241b725a4d3a1ba42a4de53f9f2850c55/2f696d672f54706f72742e676966\">\n<p><code>angler</code> is released as part of a paper <code>Adjoint method and inverse design for nonlinear optical devices</code>, which can be viewed <a href=\"https://arxiv.org/abs/1811.01255\" rel=\"nofollow\">here</a>.</p>\n<h2>Installation</h2>\n<p>One can install the most stable version of <code>angler</code> and all of its dependencies (apart from MKL) using</p>\n<pre><code>pip install angler\n</code></pre>\n<p>Alternatively, to use the most current version</p>\n<pre><code>git clone https://github.com/fancompute/angler.git\npip install -e angler\n</code></pre>\n<p>And then this directory can be added to path to import angler, i.e.</p>\n<pre><code>import sys\nsys.path.append('path/to/angler')\n</code></pre>\n<h2>Make angler faster</h2>\n<p>The most computationally expensive operation in <code>angler</code> is the sparse linear system solve.  This is done with <a href=\"https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.sparse.linalg.spsolve.html\" rel=\"nofollow\"><code>scipy.sparse.linalg.spsolve()</code></a> by default.  If MKL is installed, <code>angler</code> instead uses this with a python wrapper <a href=\"https://github.com/dwfmarchant/pyMKL\" rel=\"nofollow\"><code>pyMKL</code></a>, which makes things significantly faster, depending on the problem.  The best way to install MKL, if using anaconda, is</p>\n<pre><code>conda install MKL\n</code></pre>\n<p>(pyMKL does not work when MKL is pip installed.)</p>\n<h2>Examples / Quickstart</h2>\n<p>There are several jupyter notebook examples in the <code>Notebooks/</code> directory.</p>\n<p>For a good introduction, try:</p>\n<pre><code>Notebooks/Splitter.ipynb\n</code></pre>\n<p>For more specific applications:</p>\n<h4>Electromagnetic simulations</h4>\n<p>For modeling linear devices with our FDFD solver (no optimization), see</p>\n<pre><code>Notebooks/Linear_system.ipynb\n</code></pre>\n<p>For modeling nonlinear devices with FDFD (no optimization), see</p>\n<pre><code>Notebooks/Nonlinear_system.ipynb\n</code></pre>\n<h4>Inverse design &amp; optimization</h4>\n<p>For examples of optimizing linear devices, see</p>\n<pre><code>Notebooks/Splitter.ipynb\nNotebooks/Accelerator.ipynb\n</code></pre>\n<p>For examples of optimizing nonlinear devices, see</p>\n<pre><code>Notebooks/2_port.ipynb\nNotebooks/3_port.ipynb\nNotebooks/T_port.ipynb\n</code></pre>\n<h2>Package Structure</h2>\n<p><code>angler</code> provides two main classes, <code>Simulation</code> and <code>Optimization</code>, which perform most of the functionality.</p>\n<p>Generally, <code>Simulation</code> objects are used to perform FDFD simulations, and <code>Optimization</code> classes run inverse design and optimization algorithms over <code>Simulation</code>s.  To learn more about how <code>angler</code> works and how to use it, please take a look at <a href=\"angler/README.md\" rel=\"nofollow\">angler/README.md</a> for a more detailed explanation.</p>\n<h2>Tests</h2>\n<p>To run all tests:</p>\n<pre><code>python -m unittest discover tests\n</code></pre>\n<p>Or to run individually:</p>\n<pre><code>python tests/individual_test.py\n</code></pre>\n<h2>Contributing</h2>\n<p><code>angler</code> is under development and we welcome suggestions, pull-requests, feature-requests, etc.</p>\n<p>If you contribute a new feature, please also write a few tests and document your changes in <a href=\"angler/README.md\" rel=\"nofollow\">angler/README.md</a> or the wiki.</p>\n<h2>Authors</h2>\n<p><code>angler</code> was written by Tyler Hughes, Momchil Minkov, and Ian Williamson.</p>\n<h2>Citing</h2>\n<p>If you use <code>angler</code>, please cite us using</p>\n<pre><code>@misc{hughes2018adjoint,\nAuthor = {Tyler W. Hughes and Momchil Minkov and Ian A. D. Williamson and Shanhui Fan},\nTitle = {Adjoint method and inverse design for nonlinear nanophotonic devices},\nYear = {2018},\nEprint = {arXiv:1811.01255},\n}\n</code></pre>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details. Copyright 2018 Tyler Hughes.</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>our logo was made by <a href=\"http://nadinegilmer.com/\" rel=\"nofollow\">Nadine Gilmer</a></li>\n<li>RIP Ian's contributions before the code merge</li>\n<li>We made use of a lot of code snippets (and advice) from <a href=\"https://yujerryshi.github.io/index.html\" rel=\"nofollow\">Jerry Shi</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4541059, "releases": {"0.0.11": [{"comment_text": "", "digests": {"md5": "9f6b074fc567db2f3efbcd1c8f56a5bb", "sha256": "ec901f59da5bf761fdb6ebe335ac8c2ea09c2ffe55a81f26f3f24b008e67ed53"}, "downloads": -1, "filename": "angler-0.0.11.tar.gz", "has_sig": false, "md5_digest": "9f6b074fc567db2f3efbcd1c8f56a5bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27097, "upload_time": "2018-11-28T23:11:50", "upload_time_iso_8601": "2018-11-28T23:11:50.475623Z", "url": "https://files.pythonhosted.org/packages/0d/5d/5d1b2aac1e98ee907536ff6a9424a3bcf5ac3321da96cf6bec6059ba59f9/angler-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "dbac404f1b920000f3a6db9da7eb8433", "sha256": "44b854dddb0642fb51d86d35cddf84ef91fa970b3806cc2a18db87091ecc0c6e"}, "downloads": -1, "filename": "angler-0.0.12.tar.gz", "has_sig": false, "md5_digest": "dbac404f1b920000f3a6db9da7eb8433", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27201, "upload_time": "2018-11-29T01:10:36", "upload_time_iso_8601": "2018-11-29T01:10:36.269812Z", "url": "https://files.pythonhosted.org/packages/98/9f/995d81935a223a6b2c0467345c230f28d61f7f3545dff5a48a09337cc5fb/angler-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "348449b141865a2db97c4ab2d74554ef", "sha256": "0f5f9ffeebaa83e98e4c1068a14d99a73879f5adf162ce1b960527ef19431224"}, "downloads": -1, "filename": "angler-0.0.13.tar.gz", "has_sig": false, "md5_digest": "348449b141865a2db97c4ab2d74554ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27194, "upload_time": "2018-11-29T01:24:31", "upload_time_iso_8601": "2018-11-29T01:24:31.977214Z", "url": "https://files.pythonhosted.org/packages/bc/fd/8a9497b73bda82523b3513c609cc1b3d22f7b25a9af2bcb50bfd2d629467/angler-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "eb155b32cb7b3b2816e0e12c7a92e691", "sha256": "ae62c52cb6b826a2dd25f6182621b2776926a292c1557c307982fcafdcc1ccd2"}, "downloads": -1, "filename": "angler-0.0.14.tar.gz", "has_sig": false, "md5_digest": "eb155b32cb7b3b2816e0e12c7a92e691", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27323, "upload_time": "2018-11-29T01:25:19", "upload_time_iso_8601": "2018-11-29T01:25:19.938656Z", "url": "https://files.pythonhosted.org/packages/09/2f/b44a3e3533a617bd6366e3ee1a70771e9ca6bec139d1b1e135da3291be68/angler-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "0342294c01333a04e32c815aca51de6c", "sha256": "bc75485350b037eae03e5632fdd11b6ed14b44e11cfee93504438331cf363c67"}, "downloads": -1, "filename": "angler-0.0.15.tar.gz", "has_sig": false, "md5_digest": "0342294c01333a04e32c815aca51de6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25660790, "upload_time": "2018-11-29T01:34:04", "upload_time_iso_8601": "2018-11-29T01:34:04.366390Z", "url": "https://files.pythonhosted.org/packages/a0/44/e6a955a09ca9054200bb65a67383e57f2d2f5537ab975a6cbd4af4da2072/angler-0.0.15.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0342294c01333a04e32c815aca51de6c", "sha256": "bc75485350b037eae03e5632fdd11b6ed14b44e11cfee93504438331cf363c67"}, "downloads": -1, "filename": "angler-0.0.15.tar.gz", "has_sig": false, "md5_digest": "0342294c01333a04e32c815aca51de6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25660790, "upload_time": "2018-11-29T01:34:04", "upload_time_iso_8601": "2018-11-29T01:34:04.366390Z", "url": "https://files.pythonhosted.org/packages/a0/44/e6a955a09ca9054200bb65a67383e57f2d2f5537ab975a6cbd4af4da2072/angler-0.0.15.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:12 2020"}