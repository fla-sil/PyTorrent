{"info": {"author": "Alain Gilbert", "author_email": "alain.gilbert.15@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "## Installation\n\n### Using pip\n\n    pip install ttapi\n\n### Via source\n\nObtain the source by downloading from the web or cloning with git. In the\ndirectory containing setup.py run:\n\n    python setup.py install\n\n## Examples\n\n### Chat bot\n\nThis bot respond to anybody who write \"/hello\" on the chat.\n\n```py\nfrom ttapi import Bot\nbot = Bot(AUTH, USERID, ROOMID)\n\ndef speak(data):\n   name = data['name']\n   text = data['text']\n   if text == '/hello':\n      bot.speak('Hey! How are you %s ?' % name)\n\nbot.on('speak', speak)\n\nbot.start()\n```\n\n### Simple\n\n```py\nfrom ttapi import Bot\nbot = Bot(AUTH, USERID, ROOMID)\n\n# Define callbacks\ndef roomChanged(data): print 'The bot has changed room.', data\ndef speak(data):       print 'Someone has spoken.',       data\ndef updateVotes(data): print 'Someone has voted.',        data\ndef registered(data):  print 'Someone registered.',       data\n\n# Bind listeners\nbot.on('roomChanged',  roomChanged)\nbot.on('speak',        speak      )\nbot.on('update_votes', updateVotes)\nbot.on('registered',   registered )\n\n# Start the bot\nbot.start()\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alaingilbert/Turntable-API/tree/python_ttapi", "keywords": "turntable bot", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ttapi", "package_url": "https://pypi.org/project/ttapi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ttapi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alaingilbert/Turntable-API/tree/python_ttapi"}, "release_url": "https://pypi.org/project/ttapi/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "Allows you to create bots for turntable.fm.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## Installation<br><br>### Using pip<br><br>    pip install ttapi<br><br>### Via source<br><br>Obtain the source by downloading from the web or cloning with git. In the<br>directory containing setup.py run:<br><br>    python setup.py install<br><br>## Examples<br><br>### Chat bot<br><br>This bot respond to anybody who write \"/hello\" on the chat.<br><br>```py<br>from ttapi import Bot<br>bot = Bot(AUTH, USERID, ROOMID)<br><br>def speak(data):<br>   name = data['name']<br>   text = data['text']<br>   if text == '/hello':<br>      bot.speak('Hey! How are you %s ?' % name)<br><br>bot.on('speak', speak)<br><br>bot.start()<br>```<br><br>### Simple<br><br>```py<br>from ttapi import Bot<br>bot = Bot(AUTH, USERID, ROOMID)<br><br># Define callbacks<br>def roomChanged(data): print 'The bot has changed room.', data<br>def speak(data):       print 'Someone has spoken.',       data<br>def updateVotes(data): print 'Someone has voted.',        data<br>def registered(data):  print 'Someone registered.',       data<br><br># Bind listeners<br>bot.on('roomChanged',  roomChanged)<br>bot.on('speak',        speak      )<br>bot.on('update_votes', updateVotes)<br>bot.on('registered',   registered )<br><br># Start the bot<br>bot.start()<br>```\n          </div>"}, "last_serial": 970456, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "553d723cd31ebcc812188a415f5ee03b", "sha256": "568225484696c47c8aefd4137d4c226ee8496f1445bf8f7564f3ff222e26fd0d"}, "downloads": -1, "filename": "ttapi-0.1.tar.gz", "has_sig": false, "md5_digest": "553d723cd31ebcc812188a415f5ee03b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7369, "upload_time": "2012-11-02T03:59:32", "upload_time_iso_8601": "2012-11-02T03:59:32.815243Z", "url": "https://files.pythonhosted.org/packages/76/e8/3cd23f94ce8cedd207d1e57e6660fa5edd5182b1f5113cc1a01b5a865483/ttapi-0.1.tar.gz", "yanked": false}], "0.1dev": [{"comment_text": "", "digests": {"md5": "3d12e5eef8172da45bfe818e6176ba04", "sha256": "0a2a7566d2c1686465daef757142b2c3dd793014f5cb5997770017b615e41d8a"}, "downloads": -1, "filename": "ttapi-0.1dev.tar.gz", "has_sig": true, "md5_digest": "3d12e5eef8172da45bfe818e6176ba04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5701, "upload_time": "2012-10-26T19:28:37", "upload_time_iso_8601": "2012-10-26T19:28:37.394031Z", "url": "https://files.pythonhosted.org/packages/0d/6f/5598089ee8a81475111e4e89da41a88752704b474310edadbed8e130a1e2/ttapi-0.1dev.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b106c07a31eddf2ecbe80f2fad3b0e20", "sha256": "7119a985669221799165eb99ca0f7c83a6c766a6c94ef390ed9f8027ce03f32b"}, "downloads": -1, "filename": "ttapi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b106c07a31eddf2ecbe80f2fad3b0e20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7298, "upload_time": "2012-11-03T19:19:34", "upload_time_iso_8601": "2012-11-03T19:19:34.218389Z", "url": "https://files.pythonhosted.org/packages/3c/4a/1f2b96fbc4a6b4296e476a4185d96146b284a9c7e6103d218f21be4de2a3/ttapi-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cd3743bf4c26863310123d855dc6278b", "sha256": "518b9825bfe6c3f19593a89ae6d48bc09846e392cd6f771cf565ade077f6af35"}, "downloads": -1, "filename": "ttapi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cd3743bf4c26863310123d855dc6278b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7406, "upload_time": "2012-11-03T20:36:42", "upload_time_iso_8601": "2012-11-03T20:36:42.844009Z", "url": "https://files.pythonhosted.org/packages/79/4a/4c40cfeb8349a0c933b1b7ef1e260e5bfaca226092947f7c989e31177d5b/ttapi-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d8176caf03614745d94453319917d849", "sha256": "ab0fa6b9bb412db09c7ee2d165b7c5b1bed5ed2e527d7785cb9734c26d7ecc43"}, "downloads": -1, "filename": "ttapi-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d8176caf03614745d94453319917d849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6770, "upload_time": "2012-12-20T01:57:41", "upload_time_iso_8601": "2012-12-20T01:57:41.427898Z", "url": "https://files.pythonhosted.org/packages/c8/ae/be5c06b38fded7943796f565cfc3b62263e2a3ed22844a760a5b88cbc5fb/ttapi-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "4e24f6e2d8541a3ec76e24c369db1c40", "sha256": "c7711b19d89815bd011108d7c3ec6c4c0ffd7bcc4f76867dc99cb74dcb734be2"}, "downloads": -1, "filename": "ttapi-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4e24f6e2d8541a3ec76e24c369db1c40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6938, "upload_time": "2013-03-24T19:08:13", "upload_time_iso_8601": "2013-03-24T19:08:13.819343Z", "url": "https://files.pythonhosted.org/packages/d1/14/a95a0822ab266b84ba2e7364ac3470403724a5cddb4f07c1fa9981d2e80e/ttapi-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e24f6e2d8541a3ec76e24c369db1c40", "sha256": "c7711b19d89815bd011108d7c3ec6c4c0ffd7bcc4f76867dc99cb74dcb734be2"}, "downloads": -1, "filename": "ttapi-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4e24f6e2d8541a3ec76e24c369db1c40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6938, "upload_time": "2013-03-24T19:08:13", "upload_time_iso_8601": "2013-03-24T19:08:13.819343Z", "url": "https://files.pythonhosted.org/packages/d1/14/a95a0822ab266b84ba2e7364ac3470403724a5cddb4f07c1fa9981d2e80e/ttapi-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:06 2020"}