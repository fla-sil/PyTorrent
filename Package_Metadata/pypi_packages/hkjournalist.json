{"info": {"author": "Xinyi", "author_email": "wolixinyi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# HK-journalist: Custom Automatic Report Generator for Python program!\n\n[![Python Versions](https://img.shields.io/pypi/pyversions/hkjournalist.svg)](https://pypi.org/project/hkjournalist)\n[![PyPI Version](https://img.shields.io/pypi/v/hkjournalist.svg)](https://pypi.org/project/hkjournalist)\n[![License](https://img.shields.io/github/license/li-xin-yi/hk-journalist.svg)](https://github.com/shenweichen/li-xin-yi/blob/master/LICENSE)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/hkjournalist)](https://pypi.org/project/hkjournalist)\n[![code size](https://img.shields.io/github/languages/code-size/li-xin-yi/hk-journalist)]()\n[![panodc](https://img.shields.io/badge/pandoc-v2.2.3-yellow.svg)](https://pandoc.org/)\n[![TeXLive](https://img.shields.io/badge/TeXLive-2018/2019-important.svg)](https://www.tug.org/texlive/)\n[![documents status](https://img.shields.io/readthedocs/hk-journalist)](https://hk-journalist.readthedocs.io/)\n\n\n\nIt is a light and useful Python module, helping you generate a small size, pretty report as PDF slides (or any other format documents which humans can directly read and hand out) each time after your programs finish. All you need to do is to customize a report template using `MarkDown` with variables names used in your Python program and maintain a `dict` to store those variables. Then, A few lines of code added before the end of programs can automatically fetch and display them in the final report file. Also, the codes intended to deal with frequent structures/arguments changes or data source changes can benefit from the package if the report can play a role of 'snapshot' (with timestamp) of each code version.\n\n- documentation: https://hk-journalist.readthedocs.io/en/latest/index.html\n- Slides for sharing: [slides](./slides/slides.pdf)\n\n## Table of Contents\n- [Quick Start](#quick-start)\n  * [Install](#install)\n  * [Customize your report template](#customize-your-report-template)\n  * [Run a `Journalist()` in your code to fetch variables](#run-a--journalist----in-your-code-to-fetch-variables)\n  * [Invite a journalist to make a big news report](#invite-a-journalist-to-make-a-big-news-report)\n- [I am too lazy to write a `md` template](#i-am-too-lazy-to-write-an--md--template)\n- [What will my variables on slides look like?](#what-will-my-variables-on-slides-look-like-)\n- [More examples and instructions](#more-examples-and-instructions)\n- [Tips](#tips)\n- [Prerequirements](#prerequirements)\n\n## Quick Start\n\nBefore installing `hkjournalist`, please make sure `pandoc` and `pdflatex` are already properly installed in the environment. ([install instruction](#prerequirements))\n\n### Install\n\n```\npip install hkjournalist\n```\n\n### Customize your report template\n\nWrite such an `md` file, use a pair of `{}` to wrap every variable which will be assigned a specified value in your code. save it to `template.md`\n\n````md\n% Hello World\n% Xinyi Li\n% 2019-12-19\n\n---\n\n### sine plot\n\n![]({sin_plot})\n\n### sine table\n\n{sin_table}\n\n### sine function\n\n```{{.python}}\n{sin_func}\n```\n\n````\n\n### Run a `Journalist()` in your code to fetch variables\n\nFirst, you should define a `dict` to record mapping with variable names and their value\n\n```py\nfrom hkjournalist import Journalist\n\nconfig = {}\n```\n\n\nThen, start your programming, and do not forget to assign value to corresponding variable names in `config`:\n```py\ndef sin_2x_and_cos_2x(x):\n    y = np.sin(x) * np.sin(x) + np.cos(x) *  np.cos(x)\n    return y\n\nx = np.arange(0, 4 * np.pi, 0.1)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\ndf = pd.DataFrame({'x': x, 'sin(x)': y1, 'cos(x)': y2})\ndf['sin^2^(x)+cos^2^(x)'] = sin_2x_and_cos_2x(df['x']).values\ndf = df.set_index('x')\n\n# plot sine curve as sin_plot\nax = df.plot()\nplt.tight_layout()\nconfig['sin_plot'] = ax\n\n# random select 5 point (x,y) as sin_table\nconfig['sin_table'] = df.sample(5)\n\n# sin_2x_and_cos_2x as sin_func\nconfig['sin_func'] = sin_2x_and_cos_2x\n```\n\n### Invite a journalist to make a big news report\n\nLast but not least, attach 3 lines **critical** code below to have your `Journalist` make a report and save it to `big_news.pdf` (you can get all code above in [demo](./demo) and the output file [big_news.pdf](./demo/big_news.pdf))\n\n```py\n# HK journalist runs faster than everyone! hear variable and make a report\nreporter = Journalist(template_file='template.md')\nreporter.hear(config)\nreporter.report(output_file='big_news.pdf', beamer=True, overwrite=True)\n```\n\nReport slides display as below:\n![](./demo/big_news.png)\n\n## I am too lazy to write an `md` template\n\nIf you have too many variables to report, which make write a template a big project, or simply don't want to write an `md` template, **No problem!** `hkjournalist` can generate a report template with each variable on one slide page automatically. With slight modification or directly using it as a template, you can get your real report.\n\n**Example**\n\n```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom hkjournalist import Journalist\n\nconfig = {}\n\nfor i in range(1, 4):\n    uniform_data = np.random.rand(10, 12)\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(uniform_data, cmap='Blues', annot=True, linewidth=.5)\n    plt.tight_layout()\n    config[f'Plot_{i}'] = ax\n\nreporter = Journalist(fig_height='80%')\nreporter.hear(config)\nreporter.generate_template('auto_generate_template.md')\nreporter.report(output_file='auto_report.pdf', beamer=True, overwrite=True)\n```\nOutput ([raw file](./demo/auto_report.pdf) ):\n\n![](./demo/auto_report.png)\n\n## What will my variables on slides look like?\n\nAll variables pass to `Journalist` via `hear` will display as strings just like what their `__str__` method does.\n\nExcept for 4 types with special support:\n\n- `pandas.DataFrame`: -> a 3-line table (`TeX` default style)\n- `matplotlib.axes.SubplotBase` (known as base figure object `ax` in `matplotlib`):  -> a figure print on report (with high quality and small size as `pdf`)\n- `function`: -> its full definition\n- `list(str)`: -> `len(list)` followed by a sentance with all words concatenated.\n\n## More examples and instructions\n\n- [Documentation(https://hk-journalist.readthedocs.io/)\n- More complex usages available in [examples](./examples)\n- How to write a sophisticated slides template using `md`\u00ef\u00bc\u0178 See [pandoc tutorials](https://pandoc.org/MANUAL.html#producing-slide-shows-with-pandoc)\n\n## Tips\n\n- Before pass `plt.Axes` object (figure object used in `matplotlib`) to `dict`, use `plt.tight_layout()`statement to adjust its size.\n- Use double curly braces `{{}}` to escape `{}` in the template.\n- Turn off parameter `overwrite` in `Journalist.report()`, you will get a file name with a timestamp in it. All these reports generated by such a method serve as snapshots.\n\n\n## Prerequirements\n\n- `pandoc`: https://pandoc.org/installing.html\n- `texlive`/`mactex`(for MacOS): https://www.tug.org/texlive/ http://www.tug.org/mactex/\n\nAnd if you use some IDEs like PyCharm, you need to add their path (use `which tex` and `which pandoc` in bash environment to find them) to environment variables `$PATH` in IDE run options. (e.g. in Pycharm,`run`-> `edit configuration` -> `environment variables`)\n\nFor [Jupyter Notebook](https://jupyter.org/) users, the final output file may not be opened on Chrome (see [this question](https://stackoverflow.com/questions/55251691/how-to-open-pdf-file-in-jupyter-file-browser)). So, for convenience, you can download [Firefox](https://www.mozilla.org/en-US/firefox/new/) to write notebooks and view pdf reports right after generating.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/li-xin-yi/HK-journalist", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hkjournalist", "package_url": "https://pypi.org/project/hkjournalist/", "platform": "", "project_url": "https://pypi.org/project/hkjournalist/", "project_urls": {"Homepage": "https://github.com/li-xin-yi/HK-journalist"}, "release_url": "https://pypi.org/project/hkjournalist/0.0.5/", "requires_dist": ["tabulate", "pandas", "pandoc", "matplotlib"], "requires_python": "", "summary": "Custom Auto Report Generator for Python Program", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HK-journalist: Custom Automatic Report Generator for Python program!</h1>\n<p><a href=\"https://pypi.org/project/hkjournalist\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c25fa76e1bbe2332bb7759e8a47b4fc8aaf3c365/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f686b6a6f75726e616c6973742e737667\"></a>\n<a href=\"https://pypi.org/project/hkjournalist\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94b2992f0b6808182e1d4a267eb7dc9f5b55a88d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f686b6a6f75726e616c6973742e737667\"></a>\n<a href=\"https://github.com/shenweichen/li-xin-yi/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/224ecedc2fb5391dc176c1ca357f92db1ec3bc7e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c692d78696e2d79692f686b2d6a6f75726e616c6973742e737667\"></a>\n<a href=\"https://pypi.org/project/hkjournalist\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31e9dc7f7af7bcb896063e4e47c6cef0844654d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f686b6a6f75726e616c697374\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"code size\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d306a06f08ceb5a94e73048901c898da8b531124/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f6c692d78696e2d79692f686b2d6a6f75726e616c697374\"></a>\n<a href=\"https://pandoc.org/\" rel=\"nofollow\"><img alt=\"panodc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdc8dfb68285aeb2707db7cdf94ef0df0ee54e32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70616e646f632d76322e322e332d79656c6c6f772e737667\"></a>\n<a href=\"https://www.tug.org/texlive/\" rel=\"nofollow\"><img alt=\"TeXLive\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/086b3276110dd94f48a3be12c2e1234792eebfa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5465584c6976652d323031382f323031392d696d706f7274616e742e737667\"></a>\n<a href=\"https://hk-journalist.readthedocs.io/\" rel=\"nofollow\"><img alt=\"documents status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/854bbc6bea73cfc008d1b88d72b01676d0ca0a19/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f686b2d6a6f75726e616c697374\"></a></p>\n<p>It is a light and useful Python module, helping you generate a small size, pretty report as PDF slides (or any other format documents which humans can directly read and hand out) each time after your programs finish. All you need to do is to customize a report template using <code>MarkDown</code> with variables names used in your Python program and maintain a <code>dict</code> to store those variables. Then, A few lines of code added before the end of programs can automatically fetch and display them in the final report file. Also, the codes intended to deal with frequent structures/arguments changes or data source changes can benefit from the package if the report can play a role of 'snapshot' (with timestamp) of each code version.</p>\n<ul>\n<li>documentation: <a href=\"https://hk-journalist.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">https://hk-journalist.readthedocs.io/en/latest/index.html</a></li>\n<li>Slides for sharing: <a href=\"./slides/slides.pdf\" rel=\"nofollow\">slides</a></li>\n</ul>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick Start</a>\n<ul>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#customize-your-report-template\" rel=\"nofollow\">Customize your report template</a></li>\n<li><a href=\"#run-a--journalist----in-your-code-to-fetch-variables\" rel=\"nofollow\">Run a <code>Journalist()</code> in your code to fetch variables</a></li>\n<li><a href=\"#invite-a-journalist-to-make-a-big-news-report\" rel=\"nofollow\">Invite a journalist to make a big news report</a></li>\n</ul>\n</li>\n<li><a href=\"#i-am-too-lazy-to-write-an--md--template\" rel=\"nofollow\">I am too lazy to write a <code>md</code> template</a></li>\n<li><a href=\"#what-will-my-variables-on-slides-look-like-\" rel=\"nofollow\">What will my variables on slides look like?</a></li>\n<li><a href=\"#more-examples-and-instructions\" rel=\"nofollow\">More examples and instructions</a></li>\n<li><a href=\"#tips\" rel=\"nofollow\">Tips</a></li>\n<li><a href=\"#prerequirements\" rel=\"nofollow\">Prerequirements</a></li>\n</ul>\n<h2>Quick Start</h2>\n<p>Before installing <code>hkjournalist</code>, please make sure <code>pandoc</code> and <code>pdflatex</code> are already properly installed in the environment. (<a href=\"#prerequirements\" rel=\"nofollow\">install instruction</a>)</p>\n<h3>Install</h3>\n<pre><code>pip install hkjournalist\n</code></pre>\n<h3>Customize your report template</h3>\n<p>Write such an <code>md</code> file, use a pair of <code>{}</code> to wrap every variable which will be assigned a specified value in your code. save it to <code>template.md</code></p>\n<pre>% Hello World\n% Xinyi Li\n% 2019-12-19\n\n---\n\n<span class=\"gu\">###</span> sine plot\n\n![]({sin_plot})\n\n<span class=\"gu\">###</span> sine table\n\n{sin_table}\n\n<span class=\"gu\">###</span> sine function\n\n```{{.python}}\n{sin_func}\n```\n</pre>\n<h3>Run a <code>Journalist()</code> in your code to fetch variables</h3>\n<p>First, you should define a <code>dict</code> to record mapping with variable names and their value</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hkjournalist</span> <span class=\"kn\">import</span> <span class=\"n\">Journalist</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n</pre>\n<p>Then, start your programming, and do not forget to assign value to corresponding variable names in <code>config</code>:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">sin_2x_and_cos_2x</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span>  <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">y</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">y1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"s1\">'sin(x)'</span><span class=\"p\">:</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"s1\">'cos(x)'</span><span class=\"p\">:</span> <span class=\"n\">y2</span><span class=\"p\">})</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'sin^2^(x)+cos^2^(x)'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sin_2x_and_cos_2x</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">values</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># plot sine curve as sin_plot</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'sin_plot'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ax</span>\n\n<span class=\"c1\"># random select 5 point (x,y) as sin_table</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'sin_table'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># sin_2x_and_cos_2x as sin_func</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'sin_func'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sin_2x_and_cos_2x</span>\n</pre>\n<h3>Invite a journalist to make a big news report</h3>\n<p>Last but not least, attach 3 lines <strong>critical</strong> code below to have your <code>Journalist</code> make a report and save it to <code>big_news.pdf</code> (you can get all code above in <a href=\"./demo\" rel=\"nofollow\">demo</a> and the output file <a href=\"./demo/big_news.pdf\" rel=\"nofollow\">big_news.pdf</a>)</p>\n<pre><span class=\"c1\"># HK journalist runs faster than everyone! hear variable and make a report</span>\n<span class=\"n\">reporter</span> <span class=\"o\">=</span> <span class=\"n\">Journalist</span><span class=\"p\">(</span><span class=\"n\">template_file</span><span class=\"o\">=</span><span class=\"s1\">'template.md'</span><span class=\"p\">)</span>\n<span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">hear</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"p\">(</span><span class=\"n\">output_file</span><span class=\"o\">=</span><span class=\"s1\">'big_news.pdf'</span><span class=\"p\">,</span> <span class=\"n\">beamer</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Report slides display as below:\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45fe08695edc820f48c7c0708d01330da1dafe62/2e2f64656d6f2f6269675f6e6577732e706e67\"></p>\n<h2>I am too lazy to write an <code>md</code> template</h2>\n<p>If you have too many variables to report, which make write a template a big project, or simply don't want to write an <code>md</code> template, <strong>No problem!</strong> <code>hkjournalist</code> can generate a report template with each variable on one slide page automatically. With slight modification or directly using it as a template, you can get your real report.</p>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">seaborn</span> <span class=\"k\">as</span> <span class=\"nn\">sns</span>\n<span class=\"kn\">from</span> <span class=\"nn\">hkjournalist</span> <span class=\"kn\">import</span> <span class=\"n\">Journalist</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">):</span>\n    <span class=\"n\">uniform_data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">))</span>\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">uniform_data</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'Blues'</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'Plot_</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ax</span>\n\n<span class=\"n\">reporter</span> <span class=\"o\">=</span> <span class=\"n\">Journalist</span><span class=\"p\">(</span><span class=\"n\">fig_height</span><span class=\"o\">=</span><span class=\"s1\">'80%'</span><span class=\"p\">)</span>\n<span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">hear</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">generate_template</span><span class=\"p\">(</span><span class=\"s1\">'auto_generate_template.md'</span><span class=\"p\">)</span>\n<span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"p\">(</span><span class=\"n\">output_file</span><span class=\"o\">=</span><span class=\"s1\">'auto_report.pdf'</span><span class=\"p\">,</span> <span class=\"n\">beamer</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Output (<a href=\"./demo/auto_report.pdf\" rel=\"nofollow\">raw file</a> ):</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cfb30228db9a2f18a9a0cf3ea397764655e677c/2e2f64656d6f2f6175746f5f7265706f72742e706e67\"></p>\n<h2>What will my variables on slides look like?</h2>\n<p>All variables pass to <code>Journalist</code> via <code>hear</code> will display as strings just like what their <code>__str__</code> method does.</p>\n<p>Except for 4 types with special support:</p>\n<ul>\n<li><code>pandas.DataFrame</code>: -&gt; a 3-line table (<code>TeX</code> default style)</li>\n<li><code>matplotlib.axes.SubplotBase</code> (known as base figure object <code>ax</code> in <code>matplotlib</code>):  -&gt; a figure print on report (with high quality and small size as <code>pdf</code>)</li>\n<li><code>function</code>: -&gt; its full definition</li>\n<li><code>list(str)</code>: -&gt; <code>len(list)</code> followed by a sentance with all words concatenated.</li>\n</ul>\n<h2>More examples and instructions</h2>\n<ul>\n<li>[Documentation(https://hk-journalist.readthedocs.io/)</li>\n<li>More complex usages available in <a href=\"./examples\" rel=\"nofollow\">examples</a></li>\n<li>How to write a sophisticated slides template using <code>md</code>\u00ef\u00bc\u0178 See <a href=\"https://pandoc.org/MANUAL.html#producing-slide-shows-with-pandoc\" rel=\"nofollow\">pandoc tutorials</a></li>\n</ul>\n<h2>Tips</h2>\n<ul>\n<li>Before pass <code>plt.Axes</code> object (figure object used in <code>matplotlib</code>) to <code>dict</code>, use <code>plt.tight_layout()</code>statement to adjust its size.</li>\n<li>Use double curly braces <code>{{}}</code> to escape <code>{}</code> in the template.</li>\n<li>Turn off parameter <code>overwrite</code> in <code>Journalist.report()</code>, you will get a file name with a timestamp in it. All these reports generated by such a method serve as snapshots.</li>\n</ul>\n<h2>Prerequirements</h2>\n<ul>\n<li><code>pandoc</code>: <a href=\"https://pandoc.org/installing.html\" rel=\"nofollow\">https://pandoc.org/installing.html</a></li>\n<li><code>texlive</code>/<code>mactex</code>(for MacOS): <a href=\"https://www.tug.org/texlive/\" rel=\"nofollow\">https://www.tug.org/texlive/</a> <a href=\"http://www.tug.org/mactex/\" rel=\"nofollow\">http://www.tug.org/mactex/</a></li>\n</ul>\n<p>And if you use some IDEs like PyCharm, you need to add their path (use <code>which tex</code> and <code>which pandoc</code> in bash environment to find them) to environment variables <code>$PATH</code> in IDE run options. (e.g. in Pycharm,<code>run</code>-&gt; <code>edit configuration</code> -&gt; <code>environment variables</code>)</p>\n<p>For <a href=\"https://jupyter.org/\" rel=\"nofollow\">Jupyter Notebook</a> users, the final output file may not be opened on Chrome (see <a href=\"https://stackoverflow.com/questions/55251691/how-to-open-pdf-file-in-jupyter-file-browser\" rel=\"nofollow\">this question</a>). So, for convenience, you can download <a href=\"https://www.mozilla.org/en-US/firefox/new/\" rel=\"nofollow\">Firefox</a> to write notebooks and view pdf reports right after generating.</p>\n\n          </div>"}, "last_serial": 7159840, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fbe7f4ca77ac88f0422309fcd7b8ba8c", "sha256": "8c6ab25a049c5ea8d0f7a00ca1bdf200fff1b0e1cefe4583cac99994f6680f5f"}, "downloads": -1, "filename": "hkjournalist-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fbe7f4ca77ac88f0422309fcd7b8ba8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7310, "upload_time": "2019-12-19T13:10:21", "upload_time_iso_8601": "2019-12-19T13:10:21.577126Z", "url": "https://files.pythonhosted.org/packages/f9/20/8e040696d5bf9c7e75ae33860f94459dd16517cbd1642887ef8d79cf3eea/hkjournalist-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1a66b0f62efb6e59d860ec8f55f3bb3", "sha256": "1f61bbaa3c10816bd8682efa18acab84f70559508aadf32a0411e3f15472b02b"}, "downloads": -1, "filename": "hkjournalist-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b1a66b0f62efb6e59d860ec8f55f3bb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1488763, "upload_time": "2019-12-19T13:10:25", "upload_time_iso_8601": "2019-12-19T13:10:25.552902Z", "url": "https://files.pythonhosted.org/packages/b8/8b/dea969b2c6a23095cdcdd312260e0b63c030b6ed344f5c72a438e651fb6a/hkjournalist-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bc946a154ae5c6c3790f145b2de600aa", "sha256": "90c47be68f25bbed878e5434bf38541d5023af0be50f5bf2411e08d5478812ac"}, "downloads": -1, "filename": "hkjournalist-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bc946a154ae5c6c3790f145b2de600aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8648, "upload_time": "2019-12-23T12:48:36", "upload_time_iso_8601": "2019-12-23T12:48:36.323761Z", "url": "https://files.pythonhosted.org/packages/98/80/01a54191302b11ddbf3742701e37cac3b6b1f1c8872d6985fdb345726d5b/hkjournalist-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49d3b784acb30700cf186dfd83df5af7", "sha256": "b9d195f76d97317d6ef331ac9029d722da1c381ee326fed0ab9ec4b9f4730d55"}, "downloads": -1, "filename": "hkjournalist-0.0.3.tar.gz", "has_sig": false, "md5_digest": "49d3b784acb30700cf186dfd83df5af7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2794472, "upload_time": "2019-12-23T12:48:46", "upload_time_iso_8601": "2019-12-23T12:48:46.251160Z", "url": "https://files.pythonhosted.org/packages/cc/66/71edf7c178e3c7b14fe2532f21fd674a0a516da5ea95a448ae4eaccafb7c/hkjournalist-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "addc198c5f62619c505bfabb5d0b1066", "sha256": "f8a7e00c5dea3997684742763ece7eb5da3554aa8dce3a47d13cfb30158681bb"}, "downloads": -1, "filename": "hkjournalist-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "addc198c5f62619c505bfabb5d0b1066", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8812, "upload_time": "2019-12-26T09:06:05", "upload_time_iso_8601": "2019-12-26T09:06:05.793477Z", "url": "https://files.pythonhosted.org/packages/aa/fe/2d707a75f941f18ea94ee65c64df3f544e6ee69539620691e81aaff64553/hkjournalist-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abae693db2fd153596d73636099eee9c", "sha256": "442b44101f978c295ec788e585025a61fdf4de4fa9d8694320e33a0ca3d55c41"}, "downloads": -1, "filename": "hkjournalist-0.0.4.tar.gz", "has_sig": false, "md5_digest": "abae693db2fd153596d73636099eee9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3215234, "upload_time": "2019-12-26T09:06:16", "upload_time_iso_8601": "2019-12-26T09:06:16.504199Z", "url": "https://files.pythonhosted.org/packages/3d/cf/ebd93730b6e19e7f220b9312ef6a5d736218c52043b01726e9c3fec1edb6/hkjournalist-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "da9ff8e959f7c066367443b27e2d1090", "sha256": "213987e33f7f6e391266ea77d2004e33929ba218e64b0374c96825643baf60be"}, "downloads": -1, "filename": "hkjournalist-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "da9ff8e959f7c066367443b27e2d1090", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8439, "upload_time": "2020-05-03T21:29:18", "upload_time_iso_8601": "2020-05-03T21:29:18.389920Z", "url": "https://files.pythonhosted.org/packages/c2/4c/5602d06d73821d7ddba559f4339a0919040f5ece3bb78c8c33b35e682078/hkjournalist-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "886212062de8438d3dc957c6100ce794", "sha256": "5472743d9fa7158793b27d56dcf7048d78c595bbeda29db219c71b3744a30eda"}, "downloads": -1, "filename": "hkjournalist-0.0.5.tar.gz", "has_sig": false, "md5_digest": "886212062de8438d3dc957c6100ce794", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7615, "upload_time": "2020-05-03T21:29:19", "upload_time_iso_8601": "2020-05-03T21:29:19.744437Z", "url": "https://files.pythonhosted.org/packages/b7/eb/848e5ce0f3d2017621348940577c850e1b6b24b540661f9d9d0b5e6fb85e/hkjournalist-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da9ff8e959f7c066367443b27e2d1090", "sha256": "213987e33f7f6e391266ea77d2004e33929ba218e64b0374c96825643baf60be"}, "downloads": -1, "filename": "hkjournalist-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "da9ff8e959f7c066367443b27e2d1090", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8439, "upload_time": "2020-05-03T21:29:18", "upload_time_iso_8601": "2020-05-03T21:29:18.389920Z", "url": "https://files.pythonhosted.org/packages/c2/4c/5602d06d73821d7ddba559f4339a0919040f5ece3bb78c8c33b35e682078/hkjournalist-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "886212062de8438d3dc957c6100ce794", "sha256": "5472743d9fa7158793b27d56dcf7048d78c595bbeda29db219c71b3744a30eda"}, "downloads": -1, "filename": "hkjournalist-0.0.5.tar.gz", "has_sig": false, "md5_digest": "886212062de8438d3dc957c6100ce794", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7615, "upload_time": "2020-05-03T21:29:19", "upload_time_iso_8601": "2020-05-03T21:29:19.744437Z", "url": "https://files.pythonhosted.org/packages/b7/eb/848e5ce0f3d2017621348940577c850e1b6b24b540661f9d9d0b5e6fb85e/hkjournalist-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:59 2020"}