{"info": {"author": "Julian Blank", "author_email": "blankjul@egr.msu.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics"], "description": "pyastar - A* Algorithm in Python\n====================================================================\n\nYou can find a documentation of `pyastar` at: https://www.egr.msu.edu/coinlab/pyastar/\n\n\n|travis| |python| |license|\n\n\n.. |travis| image:: https://travis-ci.com/julesy89/pyastar.svg?branch=master\n   :alt: build status\n   :target: https://travis-ci.com/msu-coinlab/pymoo\n\n.. |python| image:: https://img.shields.io/badge/python-3.6-blue.svg\n   :alt: python 3.6\n\n.. |license| image:: https://img.shields.io/badge/license-apache-orange.svg\n   :alt: license apache\n   :target: https://www.apache.org/licenses/LICENSE-2.0\n\n\nInstallation\n====================================================================\n\nThe official release is always available at PyPi:\n\n.. code:: bash\n\n    pip install -U pyastar\n\n\nUsage\n==================================\n\nGraph\n----------------------------------\n\n.. code:: python\n\n\n    from pyastar.interface import astar_graph\n    from pyastar.util.graph import WeightedGraph\n\n\n    def create_sample_graph():\n        G = WeightedGraph()\n\n        G.add_node(\"s\", \"a\", \"b\", \"c\", \"d\", \"e\", \"g\")\n        G.add_edge(\"s\", \"a\", 1.5)\n        G.add_edge(\"a\", \"b\", 2.0)\n        G.add_edge(\"b\", \"c\", 3.0)\n        G.add_edge(\"c\", \"g\", 4.0)\n        G.add_edge(\"s\", \"d\", 2.0)\n        G.add_edge(\"d\", \"e\", 3.0)\n        G.add_edge(\"e\", \"g\", 2.0)\n\n        G.preprocess()\n\n        return G\n\n\n    def heuristic_sample_graph(node):\n        D = {\n            \"s\": None,\n            \"a\": 4.0,\n            \"b\": 4.0,\n            \"c\": 4.0,\n            \"d\": 4.0,\n            \"e\": 4.0,\n            \"g\": 0.0\n        }\n\n        return D[node]\n\n\n    if __name__ == '__main__':\n        G = create_sample_graph()\n        ret = astar_graph(G, \"s\", \"g\", heuristic_sample_graph)\n        print(\"Shortest Path:\", ret)\n\n\nGrid\n----------------------------------\n\n.. code:: python\n\n\n    from pyastar.interface import astar_graph\n    from pyastar.util.grid import Grid\n    from pyastar.util.heuristics import manhatten_dist_2d\n\n    grid = Grid(5, 5)\n    grid.add_obstacle((3, 0), (3, 1))\n    G = grid.to_graph()\n\n    start = (4, 0)\n    goal = (0, 4)\n\n    ret = astar_graph(G, start, goal, lambda x: manhatten_dist_2d(x, goal))\n    print(\"Shortest Path:\", ret)\n\n\n\n\nContact\n====================================================================\n\nFeel free to contact me if you have any question:\n\n| Julian Blank (blankjul [at] egr.msu.edu)\n| Michigan State University\n| Computational Optimization and Innovation Laboratory (COIN)\n| East Lansing, MI 48824, USA\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.egr.msu.edu/coinlab/pyastar/", "keywords": "graph,heuristic search", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "pyastar", "package_url": "https://pypi.org/project/pyastar/", "platform": "any", "project_url": "https://pypi.org/project/pyastar/", "project_urls": {"Homepage": "https://www.egr.msu.edu/coinlab/pyastar/"}, "release_url": "https://pypi.org/project/pyastar/0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "AStar Algorithm", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyastar-a-algorithm-in-python\">\n<h2>pyastar - A* Algorithm in Python</h2>\n<p>You can find a documentation of <cite>pyastar</cite> at: <a href=\"https://www.egr.msu.edu/coinlab/pyastar/\" rel=\"nofollow\">https://www.egr.msu.edu/coinlab/pyastar/</a></p>\n<p><a href=\"https://travis-ci.com/msu-coinlab/pymoo\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e9b7950824216067eebc220c0999ea06a568d51/68747470733a2f2f7472617669732d63692e636f6d2f6a756c65737938392f707961737461722e7376673f6272616e63683d6d6173746572\"></a> <img alt=\"python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"> <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\"><img alt=\"license apache\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4db9c552f066d1676cec0e69f2791c4b7c2ab31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d6170616368652d6f72616e67652e737667\"></a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The official release is always available at PyPi:</p>\n<pre>pip install -U pyastar\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"graph\">\n<h3>Graph</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyastar.interface</span> <span class=\"kn\">import</span> <span class=\"n\">astar_graph</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyastar.util.graph</span> <span class=\"kn\">import</span> <span class=\"n\">WeightedGraph</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_sample_graph</span><span class=\"p\">():</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">WeightedGraph</span><span class=\"p\">()</span>\n\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s2\">\"s\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"s2\">\"e\"</span><span class=\"p\">,</span> <span class=\"s2\">\"g\"</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"s\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"g\"</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"s\"</span><span class=\"p\">,</span> <span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"s2\">\"e\"</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span> <span class=\"s2\">\"g\"</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">preprocess</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">G</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">heuristic_sample_graph</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">):</span>\n    <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"s\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"a\"</span><span class=\"p\">:</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"c\"</span><span class=\"p\">:</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"d\"</span><span class=\"p\">:</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"e\"</span><span class=\"p\">:</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"g\"</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">D</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">create_sample_graph</span><span class=\"p\">()</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">astar_graph</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s2\">\"s\"</span><span class=\"p\">,</span> <span class=\"s2\">\"g\"</span><span class=\"p\">,</span> <span class=\"n\">heuristic_sample_graph</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Shortest Path:\"</span><span class=\"p\">,</span> <span class=\"n\">ret</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"grid\">\n<h3>Grid</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyastar.interface</span> <span class=\"kn\">import</span> <span class=\"n\">astar_graph</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyastar.util.grid</span> <span class=\"kn\">import</span> <span class=\"n\">Grid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyastar.util.heuristics</span> <span class=\"kn\">import</span> <span class=\"n\">manhatten_dist_2d</span>\n\n<span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"n\">Grid</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">add_obstacle</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">to_graph</span><span class=\"p\">()</span>\n\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">goal</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">astar_graph</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">goal</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">manhatten_dist_2d</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">goal</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Shortest Path:\"</span><span class=\"p\">,</span> <span class=\"n\">ret</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Feel free to contact me if you have any question:</p>\n<div>\n<div>Julian Blank (blankjul [at] egr.msu.edu)</div>\n<div>Michigan State University</div>\n<div>Computational Optimization and Innovation Laboratory (COIN)</div>\n<div>East Lansing, MI 48824, USA</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6603581, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0a6ab8535383308261de688b5c5f9139", "sha256": "60ba67ce5b2a1514fbc6421d48c36b173ae739a57aeb6b5becd2779a41ee9485"}, "downloads": -1, "filename": "pyastar-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a6ab8535383308261de688b5c5f9139", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15850, "upload_time": "2020-02-10T16:28:03", "upload_time_iso_8601": "2020-02-10T16:28:03.620469Z", "url": "https://files.pythonhosted.org/packages/68/38/fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572/pyastar-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7837a14e577c914b80802c8458192bb", "sha256": "be9b1d32aa22a1bed78bb2e6fd1a3a864ba572791039778d64c133da2f8819b9"}, "downloads": -1, "filename": "pyastar-0.1.tar.gz", "has_sig": false, "md5_digest": "b7837a14e577c914b80802c8458192bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12787, "upload_time": "2020-02-10T16:28:06", "upload_time_iso_8601": "2020-02-10T16:28:06.101367Z", "url": "https://files.pythonhosted.org/packages/70/10/f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2/pyastar-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a6ab8535383308261de688b5c5f9139", "sha256": "60ba67ce5b2a1514fbc6421d48c36b173ae739a57aeb6b5becd2779a41ee9485"}, "downloads": -1, "filename": "pyastar-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a6ab8535383308261de688b5c5f9139", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15850, "upload_time": "2020-02-10T16:28:03", "upload_time_iso_8601": "2020-02-10T16:28:03.620469Z", "url": "https://files.pythonhosted.org/packages/68/38/fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572/pyastar-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7837a14e577c914b80802c8458192bb", "sha256": "be9b1d32aa22a1bed78bb2e6fd1a3a864ba572791039778d64c133da2f8819b9"}, "downloads": -1, "filename": "pyastar-0.1.tar.gz", "has_sig": false, "md5_digest": "b7837a14e577c914b80802c8458192bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12787, "upload_time": "2020-02-10T16:28:06", "upload_time_iso_8601": "2020-02-10T16:28:06.101367Z", "url": "https://files.pythonhosted.org/packages/70/10/f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2/pyastar-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:06 2020"}