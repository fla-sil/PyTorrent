{"info": {"author": "Roger Ineichen and the Zope Community", "author_email": "zope3-dev@zope.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "This package provides an JSON-RPC item tree implementation for Zope3.\n\n\nDetailed Documentation\n**********************\n\n============\nJSONRPC Tree\n============\n\nThis package offers a JSONRPC tree view which can be used as navigation tree.\nLet's show how we can register our jsonrpc tree view:\n\n  >>> from zope.configuration import xmlconfig\n  >>> import z3c.jsonrpc\n  >>> context = xmlconfig.file('meta.zcml', z3c.jsonrpc)\n  >>> context = xmlconfig.string(\"\"\"\n  ... <configure\n  ...     xmlns:z3c=\"http://namespaces.zope.org/z3c\">\n  ...   <z3c:jsonrpc\n  ...       for=\"*\"\n  ...       class=\"z3c.jsontree.jsonrpc.JSONTreeItems\"\n  ...       permission=\"zope.Public\"\n  ...       methods=\"loadJSONTreeItems\"\n  ...       layer=\"z3c.jsonrpc.testing.IJSONRPCTestSkin\"\n  ...       />\n  ... </configure>\n  ... \"\"\", context)\n\nNow we will setup some content structure based on the default zope folder class:\n\n  >>> from zope.site.folder import Folder\n  >>> site  = getRootFolder()\n  >>> content = Folder()\n  >>> site['content'] = content\n\nAnd we need to be able to get an absoluteURL for the form:\n\n  >>> import zope.interface\n  >>> import zope.component\n  >>> from zope.location.interfaces import ILocation\n  >>> from zope.traversing.browser.interfaces import IAbsoluteURL\n  >>> class FakeURL(object):\n  ...     zope.interface.implements(IAbsoluteURL)\n  ...     zope.component.adapts(ILocation, zope.interface.Interface)\n  ...     def __init__(self, context, request):\n  ...         pass\n  ...     def __str__(self):\n  ...         return u'http://fake/url'\n  ...     def __call__(self):\n  ...         return str(self)\n\n  >>> zope.component.provideAdapter(FakeURL)\n\n\nJSON-RPC proxy\n--------------\n\nIf we call our JSON-RPC tree item method, we can see the different JSON data\non the different contexts:\n\n  >>> from z3c.jsonrpc.testing import JSONRPCTestProxy\n  >>> siteURL = 'http://localhost/++skin++JSONRPCTestSkin'\n  >>> proxy = JSONRPCTestProxy(siteURL)\n  >>> proxy.loadJSONTreeItems('z3cJSONTree')\n  {u'treeChilds': {u'childs':\n  [{u'hasChilds': False,\n    u'contextURL': u'http://fake/url',\n    u'url': u'http://fake/url/@@SelectedManagementView.html',\n    u'linkHandler': u'',\n    u'content': u'content',\n    u'iconURL': u'',\n    u'id': u'z3cJSONTree.::content'}],\n    u'id': u'z3cJSONTree'}}\n\nThe content object has no items and returns some empty JSON data:\n\n  >>> proxy = JSONRPCTestProxy(siteURL + '/content')\n  >>> proxy.loadJSONTreeItems('z3cJSONTree')\n  {u'treeChilds': {u'childs': [], u'id': u'z3cJSONTree'}}\n\n\n=======\nCHANGES\n=======\n\n0.6.0 (2010-09-23)\n------------------\n\n- reflect changes in zope packages, use new package externals\n\n- fix broken tests\n\n- Fix className handling in javacsript, it seems that newer version of JQuery\n  can't handle $.className.has(ele, ...) use $(ele).hasClass(...) instead.\n\n- Fix: getParentsFromContextToObject, don't return a parent chain if an item \n  is a location proxied NotFound error object. It's possible that such a\n  NotFound object will wrap a context which we don't allow in our parent\n  chain at all.\n\n\n0.5.1 (2009-03-10)\n------------------\n\n- Fix: use imports from newest packages e.g. zope.site.folder.Folder\n\n- Fix: be smart to NotFound error objects. NotFound errors are not locatable.\n\n\n0.5.0 (2008-04-16)\n------------------\n\n- Fix: adjust ITreeItems adapter. Added additional discriminator which \n  prevents to get missused as /@@/ adapter if configured with base registry\n\n- implemented ITreeItems adapter which is responsible for list all items listed\n  in tree\n\n- Initial Release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/z3c.jsontree", "keywords": "zope3 z3c json rpc tree", "license": "ZPL 2.1", "maintainer": null, "maintainer_email": null, "name": "z3c.jsontree", "package_url": "https://pypi.org/project/z3c.jsontree/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/z3c.jsontree/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/z3c.jsontree"}, "release_url": "https://pypi.org/project/z3c.jsontree/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "JSON RPC item tree for Zope3", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides an JSON-RPC item tree implementation for Zope3.</p>\n<div id=\"detailed-documentation\">\n<h2>Detailed Documentation</h2>\n<div id=\"jsonrpc-tree\">\n<h3>JSONRPC Tree</h3>\n<p>This package offers a JSONRPC tree view which can be used as navigation tree.\nLet\u2019s show how we can register our jsonrpc tree view:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.configuration import xmlconfig\n&gt;&gt;&gt; import z3c.jsonrpc\n&gt;&gt;&gt; context = xmlconfig.file('meta.zcml', z3c.jsonrpc)\n&gt;&gt;&gt; context = xmlconfig.string(\"\"\"\n... &lt;configure\n...     xmlns:z3c=\"http://namespaces.zope.org/z3c\"&gt;\n...   &lt;z3c:jsonrpc\n...       for=\"*\"\n...       class=\"z3c.jsontree.jsonrpc.JSONTreeItems\"\n...       permission=\"zope.Public\"\n...       methods=\"loadJSONTreeItems\"\n...       layer=\"z3c.jsonrpc.testing.IJSONRPCTestSkin\"\n...       /&gt;\n... &lt;/configure&gt;\n... \"\"\", context)\n</pre>\n</blockquote>\n<p>Now we will setup some content structure based on the default zope folder class:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.site.folder import Folder\n&gt;&gt;&gt; site  = getRootFolder()\n&gt;&gt;&gt; content = Folder()\n&gt;&gt;&gt; site['content'] = content\n</pre>\n</blockquote>\n<p>And we need to be able to get an absoluteURL for the form:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import zope.interface\n&gt;&gt;&gt; import zope.component\n&gt;&gt;&gt; from zope.location.interfaces import ILocation\n&gt;&gt;&gt; from zope.traversing.browser.interfaces import IAbsoluteURL\n&gt;&gt;&gt; class FakeURL(object):\n...     zope.interface.implements(IAbsoluteURL)\n...     zope.component.adapts(ILocation, zope.interface.Interface)\n...     def __init__(self, context, request):\n...         pass\n...     def __str__(self):\n...         return u'http://fake/url'\n...     def __call__(self):\n...         return str(self)\n</pre>\n<pre>&gt;&gt;&gt; zope.component.provideAdapter(FakeURL)\n</pre>\n</blockquote>\n<div id=\"json-rpc-proxy\">\n<h4>JSON-RPC proxy</h4>\n<p>If we call our JSON-RPC tree item method, we can see the different JSON data\non the different contexts:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from z3c.jsonrpc.testing import JSONRPCTestProxy\n&gt;&gt;&gt; siteURL = 'http://localhost/++skin++JSONRPCTestSkin'\n&gt;&gt;&gt; proxy = JSONRPCTestProxy(siteURL)\n&gt;&gt;&gt; proxy.loadJSONTreeItems('z3cJSONTree')\n{u'treeChilds': {u'childs':\n[{u'hasChilds': False,\n  u'contextURL': u'http://fake/url',\n  u'url': u'http://fake/url/@@SelectedManagementView.html',\n  u'linkHandler': u'',\n  u'content': u'content',\n  u'iconURL': u'',\n  u'id': u'z3cJSONTree.::content'}],\n  u'id': u'z3cJSONTree'}}\n</pre>\n</blockquote>\n<p>The content object has no items and returns some empty JSON data:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; proxy = JSONRPCTestProxy(siteURL + '/content')\n&gt;&gt;&gt; proxy.loadJSONTreeItems('z3cJSONTree')\n{u'treeChilds': {u'childs': [], u'id': u'z3cJSONTree'}}\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"changes\">\n<h3>CHANGES</h3>\n<div id=\"id1\">\n<h4>0.6.0 (2010-09-23)</h4>\n<ul>\n<li>reflect changes in zope packages, use new package externals</li>\n<li>fix broken tests</li>\n<li>Fix className handling in javacsript, it seems that newer version of JQuery\ncan\u2019t handle $.className.has(ele, \u2026) use $(ele).hasClass(\u2026) instead.</li>\n<li>Fix: getParentsFromContextToObject, don\u2019t return a parent chain if an item\nis a location proxied NotFound error object. It\u2019s possible that such a\nNotFound object will wrap a context which we don\u2019t allow in our parent\nchain at all.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.5.1 (2009-03-10)</h4>\n<ul>\n<li>Fix: use imports from newest packages e.g. zope.site.folder.Folder</li>\n<li>Fix: be smart to NotFound error objects. NotFound errors are not locatable.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.5.0 (2008-04-16)</h4>\n<ul>\n<li>Fix: adjust ITreeItems adapter. Added additional discriminator which\nprevents to get missused as /@@/ adapter if configured with base registry</li>\n<li>implemented ITreeItems adapter which is responsible for list all items listed\nin tree</li>\n<li>Initial Release</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 802036, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "9baa484a4748a484f27cd88114684a83", "sha256": "c03ef386bc6814f2f2e86dfcdd6814d4364b4d2ebb0d9acd664e278eb791cd47"}, "downloads": -1, "filename": "z3c.jsontree-0.5.0.zip", "has_sig": false, "md5_digest": "9baa484a4748a484f27cd88114684a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32369, "upload_time": "2008-04-16T01:21:13", "upload_time_iso_8601": "2008-04-16T01:21:13Z", "url": "https://files.pythonhosted.org/packages/25/5e/3d93fa05f4c47c1ffffdb038cc09d50940085eb27ce932d5095a9f71954e/z3c.jsontree-0.5.0.zip", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "feaa9e93becb6b4b2f0e0e3f9ddedaf1", "sha256": "cfe0acecd186cf864841e2b110d8daa05d1d72715d37c95ed9fac2a53cc7cd66"}, "downloads": -1, "filename": "z3c.jsontree-0.5.1.zip", "has_sig": false, "md5_digest": "feaa9e93becb6b4b2f0e0e3f9ddedaf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34859, "upload_time": "2009-03-10T04:48:10", "upload_time_iso_8601": "2009-03-10T04:48:10.514691Z", "url": "https://files.pythonhosted.org/packages/2c/d8/e4c887c8a52dbd2bdf2e901167f0c21ef11c136730ae9d7f46e91d73566d/z3c.jsontree-0.5.1.zip", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "be59020584a141a090449b53248a3fbd", "sha256": "886a97b866f9e6988e0cd349d93dc61e1a159667343ec0da78d9ef66c401cac6"}, "downloads": -1, "filename": "z3c.jsontree-0.6.0.tar.gz", "has_sig": false, "md5_digest": "be59020584a141a090449b53248a3fbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20799, "upload_time": "2010-09-23T18:54:41", "upload_time_iso_8601": "2010-09-23T18:54:41.988039Z", "url": "https://files.pythonhosted.org/packages/6d/ce/8b65a7adaf9510a5ccb2e9f0817f72006ad98f33f3cd750df26dc1b5d082/z3c.jsontree-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be59020584a141a090449b53248a3fbd", "sha256": "886a97b866f9e6988e0cd349d93dc61e1a159667343ec0da78d9ef66c401cac6"}, "downloads": -1, "filename": "z3c.jsontree-0.6.0.tar.gz", "has_sig": false, "md5_digest": "be59020584a141a090449b53248a3fbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20799, "upload_time": "2010-09-23T18:54:41", "upload_time_iso_8601": "2010-09-23T18:54:41.988039Z", "url": "https://files.pythonhosted.org/packages/6d/ce/8b65a7adaf9510a5ccb2e9f0817f72006ad98f33f3cd750df26dc1b5d082/z3c.jsontree-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:58 2020"}