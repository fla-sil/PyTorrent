{"info": {"author": "Jason Hwang", "author_email": "jhwang.astro@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Arcbound \n> Collection of tools to arrange bound methods into a graph.\n\nArcbound contains a series of decorators to aid data-driven programming, where\nthe methods and properties of a class are abstracted as nodes on a graph,\ninter-connected by arcs (directed edges).\n\n## Installation\n```bash\npip install arcbound\n```\n\n## Usage example\n```python\nimport math\nfrom typing import Tuple, Union\n\nimport arcbound as ab\nimport attr\n\n@ab.graph\n@attr.s(auto_attribs=True)\nclass QuadraticSolver(object):\n    \"\"\" Calculates the solutions to a given quadratic equation.\n\n    Input parameters:\n        a: Quadratic coefficient.\n        b: Linear coefficient.\n        c: Constant.\n    \"\"\"\n    a: float = 0.\n    b: float = 0.\n    c: float = 0.\n\n    # Here we explicitly define the coefficient arcs.\n    @property\n    @ab.arcs(a=\"a\", b=\"b\", c=\"c\")\n    def discriminant(self, a: float, b: float, c: float) -> float:\n        \"\"\" Discriminant of the quadratic equation; used to determine the\n        number of roots and if they are rational.\n        \"\"\"\n        return b * b - 4 * a * c\n\n    # Here we use the auto_arcs decorator to automatically link to the\n    # property of the same name.\n    @property\n    @ab.auto_arcs()\n    def roots(\n        self,\n        a: float,\n        b: float,\n        discriminant: float\n    ) -> Tuple[Union[float, complex], ...]:\n        \"\"\" Returns the root(s) of the equation.\n        \"\"\"\n        if discriminant == 0:\n            roots = (-b / (2 * a),)\n\n        elif discriminant > 0:\n            roots = (\n                (-b + math.sqrt(discriminant)) / (2 * a),\n                (-b - math.sqrt(discriminant)) / (2 * a),\n            )\n\n        else:\n            real = -b / (2 * a)\n            imag = math.sqrt(-discriminant) / (2 * a)\n            roots = (\n                complex(real, imag),\n                complex(real, -imag)\n            )\n\n        return roots\n\n    # Since this property is not decorated with an arcbound decorator, a node\n    # is not generated on the arcbound_graph.\n    @property\n    def number_of_roots(self) -> int:\n        \"\"\" Returns the number of roots.\n        \"\"\"\n        discriminant = self.discriminant\n\n        return (\n            1 if discriminant == 0. else\n            2\n        )\n\n\nquad_solver = QuadraticSolver(a=1, b=4, c=3)\n\nquad_solver.roots\n# (-1,0, -3.0)\n\n# Create a function that solves for the discriminant of a quadratic equation.\n# Retains the defaults of a=1, b=4, and c=3 from the quad_solver object.\ndiscriminant_solver = quad_solver.get_arcbound_node(\"discriminant\")\ndiscriminant_solver(a=2, b=4)\n# -8\n\nquad_solver.visualize_arcbound_graph()\n```\n![arcbound_graph](https://github.com/JHwangAstro/arcbound/blob/master/utils/arcbound_graph.png \"ArcboundGraph\")\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JHwangAstro/arcbound", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "arcbound", "package_url": "https://pypi.org/project/arcbound/", "platform": "", "project_url": "https://pypi.org/project/arcbound/", "project_urls": {"Homepage": "https://github.com/JHwangAstro/arcbound"}, "release_url": "https://pypi.org/project/arcbound/0.0.4/", "requires_dist": ["attrs (>=19.3.0)", "graphviz (==0.13.2) ; extra == 'graphviz'"], "requires_python": ">=3.6", "summary": "Collection of tools to arrange bound methods into a graph.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Arcbound</h1>\n<blockquote>\n<p>Collection of tools to arrange bound methods into a graph.</p>\n</blockquote>\n<p>Arcbound contains a series of decorators to aid data-driven programming, where\nthe methods and properties of a class are abstracted as nodes on a graph,\ninter-connected by arcs (directed edges).</p>\n<h2>Installation</h2>\n<pre>pip install arcbound\n</pre>\n<h2>Usage example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">arcbound</span> <span class=\"k\">as</span> <span class=\"nn\">ab</span>\n<span class=\"kn\">import</span> <span class=\"nn\">attr</span>\n\n<span class=\"nd\">@ab</span><span class=\"o\">.</span><span class=\"n\">graph</span>\n<span class=\"nd\">@attr</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"p\">(</span><span class=\"n\">auto_attribs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">QuadraticSolver</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" Calculates the solutions to a given quadratic equation.</span>\n\n<span class=\"sd\">    Input parameters:</span>\n<span class=\"sd\">        a: Quadratic coefficient.</span>\n<span class=\"sd\">        b: Linear coefficient.</span>\n<span class=\"sd\">        c: Constant.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.</span>\n    <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.</span>\n    <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.</span>\n\n    <span class=\"c1\"># Here we explicitly define the coefficient arcs.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"nd\">@ab</span><span class=\"o\">.</span><span class=\"n\">arcs</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s2\">\"c\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">discriminant</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\" Discriminant of the quadratic equation; used to determine the</span>\n<span class=\"sd\">        number of roots and if they are rational.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">b</span> <span class=\"o\">-</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">c</span>\n\n    <span class=\"c1\"># Here we use the auto_arcs decorator to automatically link to the</span>\n    <span class=\"c1\"># property of the same name.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"nd\">@ab</span><span class=\"o\">.</span><span class=\"n\">auto_arcs</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roots</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n        <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n        <span class=\"n\">discriminant</span><span class=\"p\">:</span> <span class=\"nb\">float</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\" Returns the root(s) of the equation.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">if</span> <span class=\"n\">discriminant</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">roots</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">),)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">discriminant</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">roots</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"o\">+</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">discriminant</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"o\">-</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">discriminant</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">),</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">real</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n            <span class=\"n\">imag</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">discriminant</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n            <span class=\"n\">roots</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"n\">real</span><span class=\"p\">,</span> <span class=\"n\">imag</span><span class=\"p\">),</span>\n                <span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"n\">real</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">imag</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">roots</span>\n\n    <span class=\"c1\"># Since this property is not decorated with an arcbound decorator, a node</span>\n    <span class=\"c1\"># is not generated on the arcbound_graph.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">number_of_roots</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\" Returns the number of roots.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">discriminant</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">discriminant</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">discriminant</span> <span class=\"o\">==</span> <span class=\"mf\">0.</span> <span class=\"k\">else</span>\n            <span class=\"mi\">2</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">quad_solver</span> <span class=\"o\">=</span> <span class=\"n\">QuadraticSolver</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">quad_solver</span><span class=\"o\">.</span><span class=\"n\">roots</span>\n<span class=\"c1\"># (-1,0, -3.0)</span>\n\n<span class=\"c1\"># Create a function that solves for the discriminant of a quadratic equation.</span>\n<span class=\"c1\"># Retains the defaults of a=1, b=4, and c=3 from the quad_solver object.</span>\n<span class=\"n\">discriminant_solver</span> <span class=\"o\">=</span> <span class=\"n\">quad_solver</span><span class=\"o\">.</span><span class=\"n\">get_arcbound_node</span><span class=\"p\">(</span><span class=\"s2\">\"discriminant\"</span><span class=\"p\">)</span>\n<span class=\"n\">discriminant_solver</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"c1\"># -8</span>\n\n<span class=\"n\">quad_solver</span><span class=\"o\">.</span><span class=\"n\">visualize_arcbound_graph</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"arcbound_graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fabb40c8e0f3b65c9638d64658ef1a16ff15ae03/68747470733a2f2f6769746875622e636f6d2f4a4877616e67417374726f2f617263626f756e642f626c6f622f6d61737465722f7574696c732f617263626f756e645f67726170682e706e67\"></p>\n\n          </div>"}, "last_serial": 7006177, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "97832b521c3bb72335cd304e97a0d8df", "sha256": "c5630c17c5dacda26e9a485b165ce0f6fe4728eca2162b695158501953adb39b"}, "downloads": -1, "filename": "arcbound-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "97832b521c3bb72335cd304e97a0d8df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19462, "upload_time": "2020-01-26T16:47:33", "upload_time_iso_8601": "2020-01-26T16:47:33.511188Z", "url": "https://files.pythonhosted.org/packages/93/3d/9e3bf9bd6cee12912ffb1d9269d40b177481712996b831cacc2f231dae83/arcbound-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "456559c3e690209a5eed093d08684fbb", "sha256": "1cd8d5f0b1eac612a3376c8581560ec67ea318192d707675d25bb01c6dbfc587"}, "downloads": -1, "filename": "arcbound-0.0.3.tar.gz", "has_sig": false, "md5_digest": "456559c3e690209a5eed093d08684fbb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5888, "upload_time": "2020-01-26T16:47:36", "upload_time_iso_8601": "2020-01-26T16:47:36.280934Z", "url": "https://files.pythonhosted.org/packages/51/8e/e7a0c3f544414a84084f8dfde17943f128c06aa032bb3dcf8dec256216d5/arcbound-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a637e77291b648e2ae7c7751ba5df38d", "sha256": "4b67741bda9c31d5a45c6d41ecb26297ece64186fb6a9d6e3b87dc16a9dc9df4"}, "downloads": -1, "filename": "arcbound-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a637e77291b648e2ae7c7751ba5df38d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21695, "upload_time": "2020-04-12T20:44:00", "upload_time_iso_8601": "2020-04-12T20:44:00.531865Z", "url": "https://files.pythonhosted.org/packages/c9/f7/a74fc5e66844d8095a5b649288d26ecc91bd4a5edb39c6d339519b04d6a0/arcbound-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c5abcf89a04f465c145980503c13fc1", "sha256": "167210ef54fdc61c7afa6cde42e843dcb14da06d8a2769cf1fbeae4e02bcba47"}, "downloads": -1, "filename": "arcbound-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4c5abcf89a04f465c145980503c13fc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8327, "upload_time": "2020-04-12T20:44:02", "upload_time_iso_8601": "2020-04-12T20:44:02.016041Z", "url": "https://files.pythonhosted.org/packages/5a/ec/967a0e95aba162ca6114f8c306e0ed1b421fc8d1349eddd0e1514d31f1ba/arcbound-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a637e77291b648e2ae7c7751ba5df38d", "sha256": "4b67741bda9c31d5a45c6d41ecb26297ece64186fb6a9d6e3b87dc16a9dc9df4"}, "downloads": -1, "filename": "arcbound-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a637e77291b648e2ae7c7751ba5df38d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21695, "upload_time": "2020-04-12T20:44:00", "upload_time_iso_8601": "2020-04-12T20:44:00.531865Z", "url": "https://files.pythonhosted.org/packages/c9/f7/a74fc5e66844d8095a5b649288d26ecc91bd4a5edb39c6d339519b04d6a0/arcbound-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c5abcf89a04f465c145980503c13fc1", "sha256": "167210ef54fdc61c7afa6cde42e843dcb14da06d8a2769cf1fbeae4e02bcba47"}, "downloads": -1, "filename": "arcbound-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4c5abcf89a04f465c145980503c13fc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8327, "upload_time": "2020-04-12T20:44:02", "upload_time_iso_8601": "2020-04-12T20:44:02.016041Z", "url": "https://files.pythonhosted.org/packages/5a/ec/967a0e95aba162ca6114f8c306e0ed1b421fc8d1349eddd0e1514d31f1ba/arcbound-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:25 2020"}