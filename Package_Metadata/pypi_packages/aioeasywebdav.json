{"info": {"author": "Andrew Leech", "author_email": "andrew@alelec.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3.5"], "description": "aioEasyWebDAV: A WebDAV Client for asyncio\n==========================================\n\nThis project started as a port of the requests-based EasyWebDAV (\nhttp://github.com/amnong/easywebdav ) to asyncio on Python 3.5. It has\nsince been extended with additional features.\n\nFeatures\n--------\n\n-  Basic authentication\n-  Creating directories, removing directories and files\n-  Uploading and downloading files\n-  Directory listing\n-  Support for client side SSL certificates\n-  Fragmented download (multiple chunks in simultaneous streams)\n-  MD5 checksum validation when used with OwnCloud/Nextcloud webdav\n-  Progress tracking/reporting via callback system\n\nInstallation\n------------\n\nInstall using distribute:\n\n::\n\n    pip install aioeasywebdav\n\nQuick Start\n-----------\n\n::\n\n    import aioeasywebdav\n    loop = asyncio.get_event_loop()\n\n    # Start off by creating a client object. Username and\n    # password may be omitted if no authentication is needed.\n    webdav = aioeasywebdav.connect('webdav.your-domain.com', username='myuser', password='mypass')\n\n    # Do some stuff:\n    loop.run_until_complete(webdav.mkdir('some_dir'))\n    loop.run_until_complete(webdav.rmdir('another_dir'))\n\n    async def fn():\n        await webdav.download('/remote/path/to/file', '/local/target/file')\n        await webdav.upload('/local/path/to/file', '/remote/target/file')\n    loop.run_until_complete(fn())\n\nClient object API\n-----------------\n\nThe API is pretty much self-explanatory:\n\n::\n\n    cd(path)\n    ls(path=None)\n    exists(remote_path)\n    mkdir(path, safe=False)\n    mkdirs(path)\n    rmdir(path, safe=False)\n    delete(file_path)\n    upload(local_path_or_fileobj, remote_path)\n    download(remote_path, local_path)\n\nUsing clientside SSL certificate\n--------------------------------\n\n::\n\n    webdav = aioeasywebdav.connect('secure.example.net',\n                                   username='user',\n                                   password='pass',\n                                   protocol='https',\n                                   cert=\"/path/to/your/certificate.pem\")\n    # Do some stuff:\n    print(await webdav.ls())\n\nPlease note that all options and restriction regarding the \"cert\"\nparameter from `Requests\nAPI <http://docs.python-requests.org/en/latest/api/>`__ apply here as\nthe parameter is only passed through!\n\nDeveloping aioEasyWebDAV\n------------------------\n\nWorking with a virtual environment is highly recommended:\n\n::\n\n    virtualenv --no-site-packages aioeasywebdav_dev\n    source aioeasywebdav_dev/bin/activate\n\nInstalling the library in development-mode:\n\n::\n\n    EASYWEBDAV_DEV=1 python setup.py develop\n\nThe first part of the command causes setup.py to install development\ndependencies, in addition to the normal dependencies.\n\nRunning the tests:\n\n::\n\n    nosetests --with-yanc --nologcapture --nocapture tests\n\nRunning the tests with WebDAV server logs:\n\n::\n\n    WEBDAV_LOGS=1 nosetests --with-yanc --nologcapture --nocapture -v tests\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/alelec/aioeasywebdav", "keywords": "", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "aioeasywebdav", "package_url": "https://pypi.org/project/aioeasywebdav/", "platform": "", "project_url": "https://pypi.org/project/aioeasywebdav/", "project_urls": {"Homepage": "https://gitlab.com/alelec/aioeasywebdav"}, "release_url": "https://pypi.org/project/aioeasywebdav/2.4.0/", "requires_dist": ["aiohttp", "six", "setuptools-scm"], "requires_python": "", "summary": "A straight-forward WebDAV client, ported from easywebdav to use aiohttp.", "version": "2.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project started as a port of the requests-based EasyWebDAV (\n<a href=\"http://github.com/amnong/easywebdav\" rel=\"nofollow\">http://github.com/amnong/easywebdav</a> ) to asyncio on Python 3.5. It has\nsince been extended with additional features.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Basic authentication</li>\n<li>Creating directories, removing directories and files</li>\n<li>Uploading and downloading files</li>\n<li>Directory listing</li>\n<li>Support for client side SSL certificates</li>\n<li>Fragmented download (multiple chunks in simultaneous streams)</li>\n<li>MD5 checksum validation when used with OwnCloud/Nextcloud webdav</li>\n<li>Progress tracking/reporting via callback system</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using distribute:</p>\n<pre>pip install aioeasywebdav\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<pre>import aioeasywebdav\nloop = asyncio.get_event_loop()\n\n# Start off by creating a client object. Username and\n# password may be omitted if no authentication is needed.\nwebdav = aioeasywebdav.connect('webdav.your-domain.com', username='myuser', password='mypass')\n\n# Do some stuff:\nloop.run_until_complete(webdav.mkdir('some_dir'))\nloop.run_until_complete(webdav.rmdir('another_dir'))\n\nasync def fn():\n    await webdav.download('/remote/path/to/file', '/local/target/file')\n    await webdav.upload('/local/path/to/file', '/remote/target/file')\nloop.run_until_complete(fn())\n</pre>\n</div>\n<div id=\"client-object-api\">\n<h2>Client object API</h2>\n<p>The API is pretty much self-explanatory:</p>\n<pre>cd(path)\nls(path=None)\nexists(remote_path)\nmkdir(path, safe=False)\nmkdirs(path)\nrmdir(path, safe=False)\ndelete(file_path)\nupload(local_path_or_fileobj, remote_path)\ndownload(remote_path, local_path)\n</pre>\n</div>\n<div id=\"using-clientside-ssl-certificate\">\n<h2>Using clientside SSL certificate</h2>\n<pre>webdav = aioeasywebdav.connect('secure.example.net',\n                               username='user',\n                               password='pass',\n                               protocol='https',\n                               cert=\"/path/to/your/certificate.pem\")\n# Do some stuff:\nprint(await webdav.ls())\n</pre>\n<p>Please note that all options and restriction regarding the \u201ccert\u201d\nparameter from <a href=\"http://docs.python-requests.org/en/latest/api/\" rel=\"nofollow\">Requests\nAPI</a> apply here as\nthe parameter is only passed through!</p>\n</div>\n<div id=\"developing-aioeasywebdav\">\n<h2>Developing aioEasyWebDAV</h2>\n<p>Working with a virtual environment is highly recommended:</p>\n<pre>virtualenv --no-site-packages aioeasywebdav_dev\nsource aioeasywebdav_dev/bin/activate\n</pre>\n<p>Installing the library in development-mode:</p>\n<pre>EASYWEBDAV_DEV=1 python setup.py develop\n</pre>\n<p>The first part of the command causes setup.py to install development\ndependencies, in addition to the normal dependencies.</p>\n<p>Running the tests:</p>\n<pre>nosetests --with-yanc --nologcapture --nocapture tests\n</pre>\n<p>Running the tests with WebDAV server logs:</p>\n<pre>WEBDAV_LOGS=1 nosetests --with-yanc --nologcapture --nocapture -v tests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3321202, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "05279f49750c2c65ae785e05e3963c00", "sha256": "42c9d50769207ff3a6b9c7b56e8830000c4656a30a01bd94d2df02766426b193"}, "downloads": -1, "filename": "aioeasywebdav-2.0.0.tar.gz", "has_sig": false, "md5_digest": "05279f49750c2c65ae785e05e3963c00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8230, "upload_time": "2016-10-04T00:06:22", "upload_time_iso_8601": "2016-10-04T00:06:22.830174Z", "url": "https://files.pythonhosted.org/packages/cc/a9/874bee97a5583c7a85b4923f6420eca2e308776f531247b768e490cdb05f/aioeasywebdav-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "cfe250abec21537fe8a0a1b455134fd7", "sha256": "3be5d9a0a88d5fd1db4143ca62c03585c4c0300787e46f5930c611e5a9e86e58"}, "downloads": -1, "filename": "aioeasywebdav-2.1.0.tar.gz", "has_sig": false, "md5_digest": "cfe250abec21537fe8a0a1b455134fd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15344, "upload_time": "2016-11-20T04:14:20", "upload_time_iso_8601": "2016-11-20T04:14:20.387107Z", "url": "https://files.pythonhosted.org/packages/2e/a3/d393e2d8ac19486c65f20ff7aec90d7adb62460e8d8797eff31ab1345f8e/aioeasywebdav-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "9e2c058c8b54b8fbffb660247e16f84b", "sha256": "2645934033bf2788ac962123d223e853fdbb0425127080e86b43be58d5d2545f"}, "downloads": -1, "filename": "aioeasywebdav-2.2.0.tar.gz", "has_sig": false, "md5_digest": "9e2c058c8b54b8fbffb660247e16f84b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15337, "upload_time": "2016-12-03T12:07:16", "upload_time_iso_8601": "2016-12-03T12:07:16.566255Z", "url": "https://files.pythonhosted.org/packages/9d/0e/1705e5cc83c181e1df0c388652c340fd8ad1cf61d2bb0f4b0cf2477aa03f/aioeasywebdav-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "d4db440f0e2d77bdc9b4233b31059abc", "sha256": "c4e25a76b22160ac2c02eee50e362f8bed5c3eea0528a17b3d9c657c11166ba9"}, "downloads": -1, "filename": "aioeasywebdav-2.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4db440f0e2d77bdc9b4233b31059abc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10637, "upload_time": "2017-10-29T11:30:12", "upload_time_iso_8601": "2017-10-29T11:30:12.525984Z", "url": "https://files.pythonhosted.org/packages/e8/a5/a6ba8b485cdc9a27c32f2989f3f703fceef1908cba0bfe13474544845564/aioeasywebdav-2.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de0fb0d26e82127c3c90d697e1eebd3b", "sha256": "9b57e6a56ad092c71379105c08eec69b68964e1722959767559e0e4854c4c30b"}, "downloads": -1, "filename": "aioeasywebdav-2.3.0.tar.gz", "has_sig": false, "md5_digest": "de0fb0d26e82127c3c90d697e1eebd3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16602, "upload_time": "2017-10-29T11:37:18", "upload_time_iso_8601": "2017-10-29T11:37:18.432453Z", "url": "https://files.pythonhosted.org/packages/a1/a5/2538b9e430a1430056c039a7e0efad5beeb9468db388c50139b419765012/aioeasywebdav-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "736c83dc3be3f73db3d3f2d9da454fe7", "sha256": "e4b760697ba23831bff41f2e9ce37b46dd9503d8aa0ba8d6e680842879ebb603"}, "downloads": -1, "filename": "aioeasywebdav-2.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "736c83dc3be3f73db3d3f2d9da454fe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10632, "upload_time": "2017-11-10T03:41:42", "upload_time_iso_8601": "2017-11-10T03:41:42.927925Z", "url": "https://files.pythonhosted.org/packages/5b/c6/761700c7748252cf1e73f6b11238d74ee786d833c06fe1d13260f3f1e3aa/aioeasywebdav-2.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "361273da3e59d5a718ead3ab731102e9", "sha256": "216aa71e76bf810c2293fec93922475a532af999fce89b37b6788f0c237981ee"}, "downloads": -1, "filename": "aioeasywebdav-2.4.0.tar.gz", "has_sig": false, "md5_digest": "361273da3e59d5a718ead3ab731102e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15328, "upload_time": "2017-11-10T03:41:44", "upload_time_iso_8601": "2017-11-10T03:41:44.909753Z", "url": "https://files.pythonhosted.org/packages/f7/47/526a1ca91d442cd49eb35791137b68b14aaa1f4e00c635fcf863af642f96/aioeasywebdav-2.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "736c83dc3be3f73db3d3f2d9da454fe7", "sha256": "e4b760697ba23831bff41f2e9ce37b46dd9503d8aa0ba8d6e680842879ebb603"}, "downloads": -1, "filename": "aioeasywebdav-2.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "736c83dc3be3f73db3d3f2d9da454fe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10632, "upload_time": "2017-11-10T03:41:42", "upload_time_iso_8601": "2017-11-10T03:41:42.927925Z", "url": "https://files.pythonhosted.org/packages/5b/c6/761700c7748252cf1e73f6b11238d74ee786d833c06fe1d13260f3f1e3aa/aioeasywebdav-2.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "361273da3e59d5a718ead3ab731102e9", "sha256": "216aa71e76bf810c2293fec93922475a532af999fce89b37b6788f0c237981ee"}, "downloads": -1, "filename": "aioeasywebdav-2.4.0.tar.gz", "has_sig": false, "md5_digest": "361273da3e59d5a718ead3ab731102e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15328, "upload_time": "2017-11-10T03:41:44", "upload_time_iso_8601": "2017-11-10T03:41:44.909753Z", "url": "https://files.pythonhosted.org/packages/f7/47/526a1ca91d442cd49eb35791137b68b14aaa1f4e00c635fcf863af642f96/aioeasywebdav-2.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:38 2020"}