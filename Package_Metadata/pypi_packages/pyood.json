{"info": {"author": "Saman Fekri", "author_email": "samanf74@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# StreamOutlierDetector\nDetect outliers of sequence in stream.  \nIn this project we have some assumption:\n-   This project works online that means has no idea about the future data\n-   This project forget older data (more than size of sample array)\n-   If more than half of sample array be in outlier then this project assume the majority is not outlier and calculate outlier detection for the sample again\n\n\n## Usage\n\n### install\n```bash\npip install pyood\npip install --upgrade pyood # if you want update package\n```\n\n### How use it\n```python\nfrom pyood import OutlierDetector\n\noutlier_detector = OutlierDetector(bound_factor_standard_deviation=3, window_size=20, size_initial_ignore=10)\n\nis_outlier = outlier_detector.push(your_value)\n```\n\nif you want, you can use it with callback function\n```python\nfrom pyood import OutlierDetector\n\ndef result(is_outlier):\n    print(is_outlier)\n\noutlier_detector = OutlierDetector(bound_factor_standard_deviation=3, window_size=20, size_initial_ignore=10)\n\nis_outlier = outlier_detector.push(value=your_value, callback=result)\n```\n### Help\n``bound_factor_standard_deviation`` is the factor that multiple with standard deviation. ``|value - mean| > bound_factor_standard_deviation * satandard deviation`` is the outlier.  \n``window_size`` is the size of array is effective for finding outlier.  \n``first_learning_number`` is the number of first value we ignore and learn from them.  \n\nWarning \u26a0                               |\n----------------------------------------| \nif the outlier be in the first ``first_learning_number`` we return it is not outlier and more dangerous we learn it and ruined the mean and variance for a while| \n\n\n## Result\nI test this class and show the functionality of it on a chart.  \n\u274c are the outliers we detect.  \n\ud83d\udd35 are the normal values.  \n<span> - </span> are the bound of outlier detection.  \n\nWithout bound                           | With bounds\n----------------------------------------| ------------------------------ \n![]( ./images/test_result_normal.png)   | ![]( ./images/test_result.png) \n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamanFekri/StreamOutlierDetector", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyood", "package_url": "https://pypi.org/project/pyood/", "platform": "", "project_url": "https://pypi.org/project/pyood/", "project_urls": {"Homepage": "https://github.com/SamanFekri/StreamOutlierDetector"}, "release_url": "https://pypi.org/project/pyood/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Detect outliers of sequence in stream.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>StreamOutlierDetector</h1>\n<p>Detect outliers of sequence in stream.<br>\nIn this project we have some assumption:</p>\n<ul>\n<li>This project works online that means has no idea about the future data</li>\n<li>This project forget older data (more than size of sample array)</li>\n<li>If more than half of sample array be in outlier then this project assume the majority is not outlier and calculate outlier detection for the sample again</li>\n</ul>\n<h2>Usage</h2>\n<h3>install</h3>\n<pre>pip install pyood\npip install --upgrade pyood <span class=\"c1\"># if you want update package</span>\n</pre>\n<h3>How use it</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyood</span> <span class=\"kn\">import</span> <span class=\"n\">OutlierDetector</span>\n\n<span class=\"n\">outlier_detector</span> <span class=\"o\">=</span> <span class=\"n\">OutlierDetector</span><span class=\"p\">(</span><span class=\"n\">bound_factor_standard_deviation</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">size_initial_ignore</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">is_outlier</span> <span class=\"o\">=</span> <span class=\"n\">outlier_detector</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">your_value</span><span class=\"p\">)</span>\n</pre>\n<p>if you want, you can use it with callback function</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyood</span> <span class=\"kn\">import</span> <span class=\"n\">OutlierDetector</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">result</span><span class=\"p\">(</span><span class=\"n\">is_outlier</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">is_outlier</span><span class=\"p\">)</span>\n\n<span class=\"n\">outlier_detector</span> <span class=\"o\">=</span> <span class=\"n\">OutlierDetector</span><span class=\"p\">(</span><span class=\"n\">bound_factor_standard_deviation</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">size_initial_ignore</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">is_outlier</span> <span class=\"o\">=</span> <span class=\"n\">outlier_detector</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">your_value</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<h3>Help</h3>\n<p><code>bound_factor_standard_deviation</code> is the factor that multiple with standard deviation. <code>|value - mean| &gt; bound_factor_standard_deviation * satandard deviation</code> is the outlier.<br>\n<code>window_size</code> is the size of array is effective for finding outlier.<br>\n<code>first_learning_number</code> is the number of first value we ignore and learn from them.</p>\n<table>\n<thead>\n<tr>\n<th>Warning \u26a0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>if the outlier be in the first <code>first_learning_number</code> we return it is not outlier and more dangerous we learn it and ruined the mean and variance for a while</td>\n</tr></tbody></table>\n<h2>Result</h2>\n<p>I test this class and show the functionality of it on a chart.<br>\n\u274c are the outliers we detect.<br>\n\ud83d\udd35 are the normal values.<br>\n<span> - </span> are the bound of outlier detection.</p>\n<table>\n<thead>\n<tr>\n<th>Without bound</th>\n<th>With bounds</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b366dec3062d7005b87b04f03158bcbc72a22452/2e2f696d616765732f746573745f726573756c745f6e6f726d616c2e706e67\"></td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17ce3e69288a147edf31d53739ebbc8422af49da/2e2f696d616765732f746573745f726573756c742e706e67\"></td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 5505427, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "30595a10c9d0a9640237c37b480a84f3", "sha256": "72dba145b56334fc537c60f179fafd564c486defefc7c58b43cbbd3861c72c70"}, "downloads": -1, "filename": "pyood-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30595a10c9d0a9640237c37b480a84f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16841, "upload_time": "2019-07-09T07:57:57", "upload_time_iso_8601": "2019-07-09T07:57:57.602790Z", "url": "https://files.pythonhosted.org/packages/24/9e/dc506151aa52c7787032b1566fe7a28758fbd03278ce0b88aa36c4395a52/pyood-0.2.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30595a10c9d0a9640237c37b480a84f3", "sha256": "72dba145b56334fc537c60f179fafd564c486defefc7c58b43cbbd3861c72c70"}, "downloads": -1, "filename": "pyood-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30595a10c9d0a9640237c37b480a84f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16841, "upload_time": "2019-07-09T07:57:57", "upload_time_iso_8601": "2019-07-09T07:57:57.602790Z", "url": "https://files.pythonhosted.org/packages/24/9e/dc506151aa52c7787032b1566fe7a28758fbd03278ce0b88aa36c4395a52/pyood-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:14 2020"}