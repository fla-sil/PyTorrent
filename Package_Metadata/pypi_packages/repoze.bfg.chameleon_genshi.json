{"info": {"author": "Agendaless Consulting", "author_email": "repoze-dev@lists.repoze.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "repoze.bfg.chameleon_genshi\n===========================\n\nBindings for Chameleon Genshi-style templating support under\n`repoze.bfg <http://bfg.repoze.org/>`_.  See the `Chameleon website\n<http://chameleon.repoze.org>`_ for ``chameleon.genshi`` templating\nlanguage details.\n\nThe API for use of ``repoze.bfg.chameleon_genshi`` under BFG is\nidentical to the one used for `chameleon.zpt`` templates as documented\nin the \"Templating\" chapter of the `BFG docs\n<http://docs.repoze.org/bfg/1.3/narr/templates.html#chameleon-zpt-templates>`_.\nOnly the templating language itself (Genshi vs. ZPT) and import\nlocations (r.b.chameleon_genshi vs. r.b.chameleon_zpt) differ.\n\nAn example::\n\n  from repoze.bfg.chameleon_genshi import render_template_to_response\n  render_template_to_response('relative/path/to/template')\n\n``relative/path/to/template`` is relative to the package directory in\nwhich the above code is defined.\n\nSee also the ``render_template`` and ``get_template`` APIs exposed by\nthe ``repoze.bfg.chameleon_genshi`` package, which serve the same\npurpose as their brethren in ``repoze.bfg.chameleon_zpt``.\n\nGenshi templates can also be used as a BFG \"renderer\" when you use\n``repoze.bfg.chameleon_genshi``.  The easiest way to allow for this is\nto use the following ZCML in your application's ``configure.zcml``::\n\n  <include package=\"repoze.bfg.chameleon_genshi\"/>\n\nOnce your application has been set up to process this ZCML, your\napplication can point at ``chameleon.genshi`` templates that have the\n``.genshi`` file extension from within ``@bfg_view`` directives or\nZCML ``view`` directives in your application.  For example::\n\n  @bfg_view(renderer='templates/foo.genshi')\n  def someview(request):\n      ....\n\nOr::\n\n   <view\n     renderer=\"templates/foo.genshi\"\n     view=\".views.someview\"/>\n\nIf you'd rather not use a ``.genshi`` extension for your\n``chameleon.genshi`` templates, or if you'd rather not use ZCML to do\nregistration, you can explicitly register a renderer using the\n``add_renderer`` method of a \"configurator\".  To do so, in the\n``run.py`` of your BFG application, in the function called at startup,\nwhich uses a ``repoze.bfg.configuration.Configurator`` as ``config``::\n\n  from repoze.bfg.chameleon_genshi import renderer_factory\n  config.add_renderer('.cgenshi', renderer_factory)\n\nOnce you've registered ``.cgenshi`` as a renderer in a view\nconfiguration, you can do the following::\n\n  @bfg_view(renderer='templates/foo.cgenshi')\n  def someview(request):\n      ....\n\nMisc\n----\n\nBy default, Chameleon's Genshi XIncludes support cannot resolve\n``repoze.bfg`` \"resource specifications\"\n(e.g. ``my_package:foo/bar.genshi``).  In order to activate an\nXIncludes class that understands repoze.bfg resource specifications,\ncall the ``repoze.bfg.chameleon_genshi.XIncludes.activate`` method\nbefore using any templates (e.g., at process startup time)::\n\n  from repoze.bfg.chameleon_genshi import XIncludes\n  XIncludes.activate()\n\nThis will replace the XIncludes helper class for all consumers of\nChameleon in the process.\n\n\nrepoze.bfg.chameleon_genshi\n===========================\n\n0.3 (2010-07-09)\n----------------\n\n- By default, Chameleon's Genshi XIncludes support cannot resolve\n  ``repoze.bfg`` \"resource specifications\"\n  (e.g. ``my_package:foo/bar.genshi``).  In order to activate an\n  XIncludes class that understands repoze.bfg resource specifications,\n  call the ``repoze.bfg.chameleon_genshi.XIncludes.activate`` method\n  before using any templates (e.g., at process startup time)::\n\n    from repoze.bfg.chameleon_genshi import XIncludes\n    XIncludes.activate()\n\n  This will replace the XIncludes helper class for all consumers of\n  Chameleon in the process.\n\n- Depend on Chameleon >= 1.2.8 (replaceable XIncludes class).\n\n0.2 (2010-06-15)\n----------------\n\n- Bring up to speed with BFG 1.3.X.\n\n0.1 (2009-05-02)\n----------------\n\n- Initial release (break code out of BFG core).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bfg.repoze.org", "keywords": "bfg repoze.bfg genshi chameleon templates", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": null, "maintainer_email": null, "name": "repoze.bfg.chameleon_genshi", "package_url": "https://pypi.org/project/repoze.bfg.chameleon_genshi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repoze.bfg.chameleon_genshi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bfg.repoze.org"}, "release_url": "https://pypi.org/project/repoze.bfg.chameleon_genshi/0.3/", "requires_dist": null, "requires_python": null, "summary": "chameleon.genshi template bindings for the repoze.bfg web framework", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"repoze-bfg-chameleon-genshi\">\n<h2>repoze.bfg.chameleon_genshi</h2>\n<p>Bindings for Chameleon Genshi-style templating support under\n<a href=\"http://bfg.repoze.org/\" rel=\"nofollow\">repoze.bfg</a>.  See the <a href=\"http://chameleon.repoze.org\" rel=\"nofollow\">Chameleon website</a> for <tt>chameleon.genshi</tt> templating\nlanguage details.</p>\n<p>The API for use of <tt>repoze.bfg.chameleon_genshi</tt> under BFG is\nidentical to the one used for <cite>chameleon.zpt`</cite> templates as documented\nin the \u201cTemplating\u201d chapter of the <a href=\"http://docs.repoze.org/bfg/1.3/narr/templates.html#chameleon-zpt-templates\" rel=\"nofollow\">BFG docs</a>.\nOnly the templating language itself (Genshi vs. ZPT) and import\nlocations (r.b.chameleon_genshi vs. r.b.chameleon_zpt) differ.</p>\n<p>An example:</p>\n<pre>from repoze.bfg.chameleon_genshi import render_template_to_response\nrender_template_to_response('relative/path/to/template')\n</pre>\n<p><tt>relative/path/to/template</tt> is relative to the package directory in\nwhich the above code is defined.</p>\n<p>See also the <tt>render_template</tt> and <tt>get_template</tt> APIs exposed by\nthe <tt>repoze.bfg.chameleon_genshi</tt> package, which serve the same\npurpose as their brethren in <tt>repoze.bfg.chameleon_zpt</tt>.</p>\n<p>Genshi templates can also be used as a BFG \u201crenderer\u201d when you use\n<tt>repoze.bfg.chameleon_genshi</tt>.  The easiest way to allow for this is\nto use the following ZCML in your application\u2019s <tt>configure.zcml</tt>:</p>\n<pre>&lt;include package=\"repoze.bfg.chameleon_genshi\"/&gt;\n</pre>\n<p>Once your application has been set up to process this ZCML, your\napplication can point at <tt>chameleon.genshi</tt> templates that have the\n<tt>.genshi</tt> file extension from within <tt>@bfg_view</tt> directives or\nZCML <tt>view</tt> directives in your application.  For example:</p>\n<pre>@bfg_view(renderer='templates/foo.genshi')\ndef someview(request):\n    ....\n</pre>\n<p>Or:</p>\n<pre>&lt;view\n  renderer=\"templates/foo.genshi\"\n  view=\".views.someview\"/&gt;\n</pre>\n<p>If you\u2019d rather not use a <tt>.genshi</tt> extension for your\n<tt>chameleon.genshi</tt> templates, or if you\u2019d rather not use ZCML to do\nregistration, you can explicitly register a renderer using the\n<tt>add_renderer</tt> method of a \u201cconfigurator\u201d.  To do so, in the\n<tt>run.py</tt> of your BFG application, in the function called at startup,\nwhich uses a <tt>repoze.bfg.configuration.Configurator</tt> as <tt>config</tt>:</p>\n<pre>from repoze.bfg.chameleon_genshi import renderer_factory\nconfig.add_renderer('.cgenshi', renderer_factory)\n</pre>\n<p>Once you\u2019ve registered <tt>.cgenshi</tt> as a renderer in a view\nconfiguration, you can do the following:</p>\n<pre>@bfg_view(renderer='templates/foo.cgenshi')\ndef someview(request):\n    ....\n</pre>\n<div id=\"misc\">\n<h3>Misc</h3>\n<p>By default, Chameleon\u2019s Genshi XIncludes support cannot resolve\n<tt>repoze.bfg</tt> \u201cresource specifications\u201d\n(e.g. <tt>my_package:foo/bar.genshi</tt>).  In order to activate an\nXIncludes class that understands repoze.bfg resource specifications,\ncall the <tt>repoze.bfg.chameleon_genshi.XIncludes.activate</tt> method\nbefore using any templates (e.g., at process startup time):</p>\n<pre>from repoze.bfg.chameleon_genshi import XIncludes\nXIncludes.activate()\n</pre>\n<p>This will replace the XIncludes helper class for all consumers of\nChameleon in the process.</p>\n</div>\n</div>\n<div id=\"id1\">\n<h2>repoze.bfg.chameleon_genshi</h2>\n<div id=\"id2\">\n<h3>0.3 (2010-07-09)</h3>\n<ul>\n<li><p>By default, Chameleon\u2019s Genshi XIncludes support cannot resolve\n<tt>repoze.bfg</tt> \u201cresource specifications\u201d\n(e.g. <tt>my_package:foo/bar.genshi</tt>).  In order to activate an\nXIncludes class that understands repoze.bfg resource specifications,\ncall the <tt>repoze.bfg.chameleon_genshi.XIncludes.activate</tt> method\nbefore using any templates (e.g., at process startup time):</p>\n<pre>from repoze.bfg.chameleon_genshi import XIncludes\nXIncludes.activate()\n</pre>\n<p>This will replace the XIncludes helper class for all consumers of\nChameleon in the process.</p>\n</li>\n<li><p>Depend on Chameleon &gt;= 1.2.8 (replaceable XIncludes class).</p>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 (2010-06-15)</h3>\n<ul>\n<li>Bring up to speed with BFG 1.3.X.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 (2009-05-02)</h3>\n<ul>\n<li>Initial release (break code out of BFG core).</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 636196, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "295229348908c4d847f392570e90d1e4", "sha256": "505e782552fe5d8768296e7f3c77e2df00d7290615a21c9273e115cbd7bab7a8"}, "downloads": -1, "filename": "repoze.bfg.chameleon_genshi-0.2.tar.gz", "has_sig": false, "md5_digest": "295229348908c4d847f392570e90d1e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6650, "upload_time": "2010-06-15T16:06:08", "upload_time_iso_8601": "2010-06-15T16:06:08.446596Z", "url": "https://files.pythonhosted.org/packages/6b/0b/25db85a7b8f6063b612c22738cbdd9371ee08c13a4a6fdf920a1bdbb81fb/repoze.bfg.chameleon_genshi-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1138a822caacaa88c2481ab38780112b", "sha256": "e0eaf94f317e805b36af7aa65ff90756669fd09979ed2206e03930a464231c38"}, "downloads": -1, "filename": "repoze.bfg.chameleon_genshi-0.3.tar.gz", "has_sig": false, "md5_digest": "1138a822caacaa88c2481ab38780112b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8055, "upload_time": "2010-07-09T20:16:54", "upload_time_iso_8601": "2010-07-09T20:16:54.979841Z", "url": "https://files.pythonhosted.org/packages/ba/72/d6fba082896a351654864221481956db83f85c54927ad908657994bb495f/repoze.bfg.chameleon_genshi-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1138a822caacaa88c2481ab38780112b", "sha256": "e0eaf94f317e805b36af7aa65ff90756669fd09979ed2206e03930a464231c38"}, "downloads": -1, "filename": "repoze.bfg.chameleon_genshi-0.3.tar.gz", "has_sig": false, "md5_digest": "1138a822caacaa88c2481ab38780112b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8055, "upload_time": "2010-07-09T20:16:54", "upload_time_iso_8601": "2010-07-09T20:16:54.979841Z", "url": "https://files.pythonhosted.org/packages/ba/72/d6fba082896a351654864221481956db83f85c54927ad908657994bb495f/repoze.bfg.chameleon_genshi-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:28 2020"}