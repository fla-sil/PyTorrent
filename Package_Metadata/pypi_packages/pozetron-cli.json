{"info": {"author": "Pozetron Inc", "author_email": "hello@pozetroninc.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "[Pozetron](https://www.pozetron.com/) is the next evolution of development tools for the devices which make up the Internet of Things.\n\nThis package provides a single unified command line interface for developers to interact with the Pozetron Cloud.\n\nThe pozetron-cli package is tested on Python versions:\n\n* 2.7\n* 3.4\n* 3.5\n* 3.6\n* 3.7\n\nPozetron enables you to write MicroPython code which will run on small, cost efficient, low power modules such as the ESP8266 or ESP32 from\n[Espressif Systems](https://espressif.com/).\n\n## Getting an Account\n\nYou can register for an account at [https://registration.apps.pozetron.com/registration](https://registration.apps.pozetron.com/registration).\n\nOnce you have registered, you will receive an email like the following:\n``` text\nHi there!\n\nThanks for being an early adopter of Pozetron!\n\nTo authenticate to the cloud, download your identity file from https://registration.apps.pozetron.com/registration/id-pozetron/\n\nMove this file to `~/.pozetron/id_pozetron` if you are on Linux or macOS.\nIf you are on Windows, move this file to `C:\\Users\\%USERNAME%\\.pozetron\\id_pozetron`.\n\nOnce you have this file you can continue with the installation of the pozetron-cli by using pip to install it like so:\n\n$ pip install pozetron-cli\n\nOnce you have your ~/.pozetron/id_pozetron configured and the pozetron-cli command line tool installed, you can follow our tutorial to get your \"hello world\" up and running.\n\nhttps://www.pozetron.com/tutorial/getting-started/\nhttps://www.pozetron.com/tutorial/getting-started-esp8266/\n\nNote: By downloading or using our software, you accept the terms of service https://www.pozetron.com/legal/tos.html and privacy policy https://www.pozetron.com/legal/privacy.html\n```\n\nAs the email instructs, you need to create a file which will contain your credentials for the CLI. The default location is in `~/.pozetron/` but this can be overridden using the `POZETRON_DIR` environment variable.\n\n## Installing the Command line\n\nObtaining the Command Line Interface (CLI) is simply a matter of using Python's `pip` to install it.\n\n```bash\n$ pip install pozetron-cli\n```\n\n## Provisioning your first device\n\nAfter your credentials set up, you'll want to take your first steps with the command line client. let's do that now by requesting a new device be provisioned.\nThis process will take a secret that you supply and register it with the cloud. In return you will receive a device ID, in the form of a device address, and a\nkey ID. These three items will be copied to your device and will be used to authenticate the device to the cloud.\n\n``` bash\n$ poze.py device provision -k DEADBEEF\nusage: poze.py device provision [-h] -k KEY\npoze.py device provision: error: argument -k/--key: Enter a valid hash (64 characters).\nMay we suggest: 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\n$ poze.py device provision -k 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\na77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8@pozetrondevices.com\n36d43af16bfde6575efff2878c9b081b71bc3d5f3105cbfbead8ed62770d267d\n```\n\n## Uploading a module\n\nAfter you have a device, you'll want to have something ready to deploy to that device. You can upload modules or packages to the cloud to be deployed.\nTo keep things simple we'll start off by uploading a single module.\n\n``` python3\ndef say_hello():\n    log('Hello World!')\n```\n\n``` bash\n$ poze.py script upload -f hello.py -m hello\nf2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n```\n\n## Adding tags\n\nPozetron uses hashes to identify devices, modules and packages. These are very easy for a computer to work with but are not the most user friendly.\nTo make it easier we'll add a tag to the module we just uploaded.\n\n``` bash\n$ poze.py tag add f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5 hello:v1\nhello:v1 -> f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n```\n\nNow that we have a tag for our module, we should create a tag to use for our device.\n\n``` bash\n$ poze.py tag add a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8 tutorial\ntutorial -> a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8\n```\n\nWe can now use these tags whenever we would use the matching hashes. Tags are synced to the cloud so you will also see them on https://devices.apps.pozetron.com/.\n\n## Deploying our module\n\nOnce we have the credentials, we will want to program our device so that we can deploy our new module.\nAfter following the\n[Getting Started with Pozetron on the ESP8266](https://www.pozetron.com/tutorial/getting-started-esp8266) or [Getting Started with Pozetron on the ESP32](https://www.pozetron.com/tutorial/getting-started-esp32) tutorial you will have a device connected to your network and ready to use.\n\nDeploying a new module to a device is as easy as:\n\n``` bash\n$ poze.py script deploy -s hello:v1 -d tutorial\n```\n\nNow that we have a module on the device, let's set up the special `main.py` module which is launched when the device starts.\n\n``` python3\nimport hello\nimport time\nimport sys\n\n# This is a pointer to the module object instance itself. We use this so we can reference module level variables\n# inside our main_loop(). This is more memory efficient than using a class.\nmain = sys.modules[__name__]\n######################################################################################################\n#                                            MAIN LOOP                                               #\n######################################################################################################\n\n# The only things that should go in the main loop are those which you want to execute hundreds\n# of thousands of times. Anything that you want to do once, like assign a constant string to a\n# variable should occur above for performance reasons. Also, anything whose value you want to\n# share with your 'epilog'.\n\n# The epilog runs if the main_loop ever exits. The main_loop should exit regularly to provide\n# an opportunity for the Pozetron functionality to run.\n\ndef main_loop():\n    hello.say_hello()\n    log('We came, we saw, we said hello')\n    time.sleep(10)\n```\n\nLet's upload this module and deploy it to the device.\n```bash\n$ poze.py script deploy -s `poze.py script upload -f main.py -m main` -d tutorial\n```\n\nSuccess! Now that we have our module on the device, let's restart it so that it picks up the new modules.\n\n``` bash\n$ poze.py device reboot -d tutorial\n```\n\n## Logs\n\nSo now we have a device, connected to the Internet and with our module deployed. Let's get the logs from this device to see our handy work.\n\n``` bash\n$ poze.py device logs -d tutorial\n2017-05-12T06:39:44.210265 Hello World!\n2017-05-12T06:39:44.211335 We came, we saw, we said hello\n```\n\nSo there you have it, we've set up our account credentials, provisioned our device, deployed our first code to the device, and successfully retrieved the logs for our device, from the cloud. All without even needing to be on the same continent as our device.\n\nWhether you are working with devices near you or deployed in some remote location, you can always keep them up to date, diagnose problems or push new features without ever plugging them into a laptop again.\n\nIf you would like to get some inspiration for your next project check out our blog post [https://www.pozetron.com/blog/jedi-lights/](https://www.pozetron.com/blog/jedi-lights/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.pozetron.com", "keywords": "pozetron,IoT,MicroPython", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "pozetron-cli", "package_url": "https://pypi.org/project/pozetron-cli/", "platform": "", "project_url": "https://pypi.org/project/pozetron-cli/", "project_urls": {"Homepage": "https://www.pozetron.com"}, "release_url": "https://pypi.org/project/pozetron-cli/0.7.0/", "requires_dist": ["dictdiffer (==0.7.1)", "httpsig-pure-hmac (==1.1.2)", "pydicti (==0.0.6)", "python-dateutil (==2.8.0)", "pytz (==2018.9)", "requests (==2.21.0)", "six (==1.11.0)"], "requires_python": "", "summary": "Pozetron command-line interface. The developer interface for the Pozetron IoT Cloud.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.pozetron.com/\" rel=\"nofollow\">Pozetron</a> is the next evolution of development tools for the devices which make up the Internet of Things.</p>\n<p>This package provides a single unified command line interface for developers to interact with the Pozetron Cloud.</p>\n<p>The pozetron-cli package is tested on Python versions:</p>\n<ul>\n<li>2.7</li>\n<li>3.4</li>\n<li>3.5</li>\n<li>3.6</li>\n<li>3.7</li>\n</ul>\n<p>Pozetron enables you to write MicroPython code which will run on small, cost efficient, low power modules such as the ESP8266 or ESP32 from\n<a href=\"https://espressif.com/\" rel=\"nofollow\">Espressif Systems</a>.</p>\n<h2>Getting an Account</h2>\n<p>You can register for an account at <a href=\"https://registration.apps.pozetron.com/registration\" rel=\"nofollow\">https://registration.apps.pozetron.com/registration</a>.</p>\n<p>Once you have registered, you will receive an email like the following:</p>\n<pre>Hi there!\n\nThanks for being an early adopter of Pozetron!\n\nTo authenticate to the cloud, download your identity file from https://registration.apps.pozetron.com/registration/id-pozetron/\n\nMove this file to `~/.pozetron/id_pozetron` if you are on Linux or macOS.\nIf you are on Windows, move this file to `C:\\Users\\%USERNAME%\\.pozetron\\id_pozetron`.\n\nOnce you have this file you can continue with the installation of the pozetron-cli by using pip to install it like so:\n\n$ pip install pozetron-cli\n\nOnce you have your ~/.pozetron/id_pozetron configured and the pozetron-cli command line tool installed, you can follow our tutorial to get your \"hello world\" up and running.\n\nhttps://www.pozetron.com/tutorial/getting-started/\nhttps://www.pozetron.com/tutorial/getting-started-esp8266/\n\nNote: By downloading or using our software, you accept the terms of service https://www.pozetron.com/legal/tos.html and privacy policy https://www.pozetron.com/legal/privacy.html\n</pre>\n<p>As the email instructs, you need to create a file which will contain your credentials for the CLI. The default location is in <code>~/.pozetron/</code> but this can be overridden using the <code>POZETRON_DIR</code> environment variable.</p>\n<h2>Installing the Command line</h2>\n<p>Obtaining the Command Line Interface (CLI) is simply a matter of using Python's <code>pip</code> to install it.</p>\n<pre>$ pip install pozetron-cli\n</pre>\n<h2>Provisioning your first device</h2>\n<p>After your credentials set up, you'll want to take your first steps with the command line client. let's do that now by requesting a new device be provisioned.\nThis process will take a secret that you supply and register it with the cloud. In return you will receive a device ID, in the form of a device address, and a\nkey ID. These three items will be copied to your device and will be used to authenticate the device to the cloud.</p>\n<pre>$ poze.py device provision -k DEADBEEF\nusage: poze.py device provision <span class=\"o\">[</span>-h<span class=\"o\">]</span> -k KEY\npoze.py device provision: error: argument -k/--key: Enter a valid <span class=\"nb\">hash</span> <span class=\"o\">(</span><span class=\"m\">64</span> characters<span class=\"o\">)</span>.\nMay we suggest: 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\n$ poze.py device provision -k 7ed951450f7bef3f5a359464bbf430a88af316aef3dae5097faf364cae323056\na77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8@pozetrondevices.com\n36d43af16bfde6575efff2878c9b081b71bc3d5f3105cbfbead8ed62770d267d\n</pre>\n<h2>Uploading a module</h2>\n<p>After you have a device, you'll want to have something ready to deploy to that device. You can upload modules or packages to the cloud to be deployed.\nTo keep things simple we'll start off by uploading a single module.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">say_hello</span><span class=\"p\">():</span>\n    <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">)</span>\n</pre>\n<pre>$ poze.py script upload -f hello.py -m hello\nf2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n</pre>\n<h2>Adding tags</h2>\n<p>Pozetron uses hashes to identify devices, modules and packages. These are very easy for a computer to work with but are not the most user friendly.\nTo make it easier we'll add a tag to the module we just uploaded.</p>\n<pre>$ poze.py tag add f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5 hello:v1\nhello:v1 -&gt; f2fefab13050f4e5b0e580ba9b5b4e9f88ffc633581b5fbeaf3da231477258e5\n</pre>\n<p>Now that we have a tag for our module, we should create a tag to use for our device.</p>\n<pre>$ poze.py tag add a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8 tutorial\ntutorial -&gt; a77eed66d15a3b3cba76573376695729bf7bce33d8e0997bfd8399f993fca4f8\n</pre>\n<p>We can now use these tags whenever we would use the matching hashes. Tags are synced to the cloud so you will also see them on <a href=\"https://devices.apps.pozetron.com/\" rel=\"nofollow\">https://devices.apps.pozetron.com/</a>.</p>\n<h2>Deploying our module</h2>\n<p>Once we have the credentials, we will want to program our device so that we can deploy our new module.\nAfter following the\n<a href=\"https://www.pozetron.com/tutorial/getting-started-esp8266\" rel=\"nofollow\">Getting Started with Pozetron on the ESP8266</a> or <a href=\"https://www.pozetron.com/tutorial/getting-started-esp32\" rel=\"nofollow\">Getting Started with Pozetron on the ESP32</a> tutorial you will have a device connected to your network and ready to use.</p>\n<p>Deploying a new module to a device is as easy as:</p>\n<pre>$ poze.py script deploy -s hello:v1 -d tutorial\n</pre>\n<p>Now that we have a module on the device, let's set up the special <code>main.py</code> module which is launched when the device starts.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hello</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"c1\"># This is a pointer to the module object instance itself. We use this so we can reference module level variables</span>\n<span class=\"c1\"># inside our main_loop(). This is more memory efficient than using a class.</span>\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"vm\">__name__</span><span class=\"p\">]</span>\n<span class=\"c1\">######################################################################################################</span>\n<span class=\"c1\">#                                            MAIN LOOP                                               #</span>\n<span class=\"c1\">######################################################################################################</span>\n\n<span class=\"c1\"># The only things that should go in the main loop are those which you want to execute hundreds</span>\n<span class=\"c1\"># of thousands of times. Anything that you want to do once, like assign a constant string to a</span>\n<span class=\"c1\"># variable should occur above for performance reasons. Also, anything whose value you want to</span>\n<span class=\"c1\"># share with your 'epilog'.</span>\n\n<span class=\"c1\"># The epilog runs if the main_loop ever exits. The main_loop should exit regularly to provide</span>\n<span class=\"c1\"># an opportunity for the Pozetron functionality to run.</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main_loop</span><span class=\"p\">():</span>\n    <span class=\"n\">hello</span><span class=\"o\">.</span><span class=\"n\">say_hello</span><span class=\"p\">()</span>\n    <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s1\">'We came, we saw, we said hello'</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Let's upload this module and deploy it to the device.</p>\n<pre>$ poze.py script deploy -s <span class=\"sb\">`</span>poze.py script upload -f main.py -m main<span class=\"sb\">`</span> -d tutorial\n</pre>\n<p>Success! Now that we have our module on the device, let's restart it so that it picks up the new modules.</p>\n<pre>$ poze.py device reboot -d tutorial\n</pre>\n<h2>Logs</h2>\n<p>So now we have a device, connected to the Internet and with our module deployed. Let's get the logs from this device to see our handy work.</p>\n<pre>$ poze.py device logs -d tutorial\n<span class=\"m\">2017</span>-05-12T06:39:44.210265 Hello World!\n<span class=\"m\">2017</span>-05-12T06:39:44.211335 We came, we saw, we said hello\n</pre>\n<p>So there you have it, we've set up our account credentials, provisioned our device, deployed our first code to the device, and successfully retrieved the logs for our device, from the cloud. All without even needing to be on the same continent as our device.</p>\n<p>Whether you are working with devices near you or deployed in some remote location, you can always keep them up to date, diagnose problems or push new features without ever plugging them into a laptop again.</p>\n<p>If you would like to get some inspiration for your next project check out our blog post <a href=\"https://www.pozetron.com/blog/jedi-lights/\" rel=\"nofollow\">https://www.pozetron.com/blog/jedi-lights/</a></p>\n\n          </div>"}, "last_serial": 5899171, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f270eb71a70772bc2f54e9d3d9ea6f9d", "sha256": "cafabc61e20f978df52bbcc66dcaf35bd4424f242f18227de1f73a210b1c15d4"}, "downloads": -1, "filename": "pozetron_cli-0.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "f270eb71a70772bc2f54e9d3d9ea6f9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14222, "upload_time": "2017-07-13T05:41:05", "upload_time_iso_8601": "2017-07-13T05:41:05.358643Z", "url": "https://files.pythonhosted.org/packages/a3/d9/0d153bcfd000413313764a57f9b584dac5187c1267f8ddfc1876be8441c0/pozetron_cli-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "824110be88d1bd918b4338021f1235c8", "sha256": "fcd759fa4cb16146338b0d07e41f5a1a1120a005e847cd42ab17f7777fd6c677"}, "downloads": -1, "filename": "pozetron_cli-0.2.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "824110be88d1bd918b4338021f1235c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15150, "upload_time": "2017-08-21T06:11:19", "upload_time_iso_8601": "2017-08-21T06:11:19.909420Z", "url": "https://files.pythonhosted.org/packages/c6/8d/3095028b5c50681351c306b4f94c49873cbc9c9c7c762615a77d90341a81/pozetron_cli-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "12aff5ef9bfb31135cb5bdbdae3d7edf", "sha256": "86f6b1e097b76c29f14e0ae936e8b2a745750748280089669ddecf4ebbd6e3cf"}, "downloads": -1, "filename": "pozetron_cli-0.3.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "12aff5ef9bfb31135cb5bdbdae3d7edf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16497, "upload_time": "2017-11-13T07:07:11", "upload_time_iso_8601": "2017-11-13T07:07:11.678854Z", "url": "https://files.pythonhosted.org/packages/95/8d/41b4b4fec74189ef04bb11ad4e3b0222ed903586a1d4b8b2df1d043c05aa/pozetron_cli-0.3.0-py2.py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d30db0f1413edb800356190ac32f87fd", "sha256": "7f8d44171daa017e958216c216976574753629a0cc41a53f1dbace752d6428a3"}, "downloads": -1, "filename": "pozetron_cli-0.4.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d30db0f1413edb800356190ac32f87fd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22605, "upload_time": "2017-12-30T10:01:56", "upload_time_iso_8601": "2017-12-30T10:01:56.486437Z", "url": "https://files.pythonhosted.org/packages/1e/12/cdb4e780d4cc69e6e11c2fe080c64b57218aeebc66717301d6d011b698b4/pozetron_cli-0.4.0-py2.py3-none-any.whl", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1f1b22eb29d815f82ef227fb61cbe8cc", "sha256": "048226d03b929b5551fe01d9c653e921b12e67b47664e85509493eedef18a679"}, "downloads": -1, "filename": "pozetron_cli-0.4.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1f1b22eb29d815f82ef227fb61cbe8cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22671, "upload_time": "2018-02-17T09:11:11", "upload_time_iso_8601": "2018-02-17T09:11:11.715062Z", "url": "https://files.pythonhosted.org/packages/11/1c/dc1c02912246e52eb924b20df925f508c948f20d0995ad12cd7d0c7fd2e8/pozetron_cli-0.4.1-py2.py3-none-any.whl", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "126d993441fd29c1b2df384379b83813", "sha256": "1ab189a31d6b596b315ac34752cad641fe8034c5ecb4c615eed9a07d0762f4e8"}, "downloads": -1, "filename": "pozetron_cli-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "126d993441fd29c1b2df384379b83813", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22479, "upload_time": "2018-05-25T07:46:51", "upload_time_iso_8601": "2018-05-25T07:46:51.006670Z", "url": "https://files.pythonhosted.org/packages/1b/fc/fb383b82904dd6d938b3889c64eab3462d8c8f190949fba1816786ac7062/pozetron_cli-0.4.2-py2.py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "bd409786ba42344018636f644936bc0d", "sha256": "ffe0167d087fa959470762618e5a6fcae7a1304ba716af6bb2b60e19efd3ea2b"}, "downloads": -1, "filename": "pozetron_cli-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd409786ba42344018636f644936bc0d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21084, "upload_time": "2019-03-14T05:36:38", "upload_time_iso_8601": "2019-03-14T05:36:38.915260Z", "url": "https://files.pythonhosted.org/packages/e7/68/c0c9244d08d5dae0a46329556d223d0a67f36871493e041485b2c6b8d921/pozetron_cli-0.5.0-py2.py3-none-any.whl", "yanked": false}], "0.5.0.1": [{"comment_text": "", "digests": {"md5": "3e183d0a241cad0701bbe3689c83881c", "sha256": "fa4cffa1c1b5a7087bed967a56867e1d54ab4ccbb1eed2d56b220b1b62c1897e"}, "downloads": -1, "filename": "pozetron_cli-0.5.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e183d0a241cad0701bbe3689c83881c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21132, "upload_time": "2019-03-14T06:22:14", "upload_time_iso_8601": "2019-03-14T06:22:14.538050Z", "url": "https://files.pythonhosted.org/packages/71/6e/e22cd07124adf9e6aca8f925e4d1690a42fe47babda1e058d5ef79e7c2de/pozetron_cli-0.5.0.1-py2.py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "0ef1d323d4c8d365ad07909a4928e0d5", "sha256": "702e2adaa488563e9655c3e22e1a38ef2a88af2d0133ce5f563026defd7b3a99"}, "downloads": -1, "filename": "pozetron_cli-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ef1d323d4c8d365ad07909a4928e0d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25165, "upload_time": "2019-03-24T07:39:31", "upload_time_iso_8601": "2019-03-24T07:39:31.735226Z", "url": "https://files.pythonhosted.org/packages/d9/b5/013cec5805c4450134d53a801dd48a999d0f4d2817ca0cca0e35eba12e30/pozetron_cli-0.5.1-py2.py3-none-any.whl", "yanked": false}], "0.5.1.1": [{"comment_text": "", "digests": {"md5": "d172e1484c07e8685236a39de55a15fe", "sha256": "1a5555b6713c777685066f556647e7a35bab141fe85f55433f2018e685ed6445"}, "downloads": -1, "filename": "pozetron_cli-0.5.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d172e1484c07e8685236a39de55a15fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21151, "upload_time": "2019-03-24T07:53:57", "upload_time_iso_8601": "2019-03-24T07:53:57.731078Z", "url": "https://files.pythonhosted.org/packages/86/c2/184221ad537d63abe4ab6f0d4be59968e8c1cdc73858422bf804e51dae78/pozetron_cli-0.5.1.1-py2.py3-none-any.whl", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "cbd2af8ec5291a7207f038d4c3eef284", "sha256": "2e154180207f79a870513c7b00dc7e449b60c0a81ee45b62561ad47421e7f76b"}, "downloads": -1, "filename": "pozetron_cli-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbd2af8ec5291a7207f038d4c3eef284", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21685, "upload_time": "2019-09-28T07:09:37", "upload_time_iso_8601": "2019-09-28T07:09:37.557990Z", "url": "https://files.pythonhosted.org/packages/a8/4b/b67285b874a4611f708b62df6f3c17224bf94024f3d44bc083d77be6e163/pozetron_cli-0.7.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbd2af8ec5291a7207f038d4c3eef284", "sha256": "2e154180207f79a870513c7b00dc7e449b60c0a81ee45b62561ad47421e7f76b"}, "downloads": -1, "filename": "pozetron_cli-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbd2af8ec5291a7207f038d4c3eef284", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21685, "upload_time": "2019-09-28T07:09:37", "upload_time_iso_8601": "2019-09-28T07:09:37.557990Z", "url": "https://files.pythonhosted.org/packages/a8/4b/b67285b874a4611f708b62df6f3c17224bf94024f3d44bc083d77be6e163/pozetron_cli-0.7.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:20:35 2020"}