{"info": {"author": "Robert Doiel, Thomas E Morrell", "author_email": "rsdoiel@caltech.edu, tmorrell@caltech.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: POSIX :: Linux", "Programming Language :: Other", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "\n\n# py_dataset   [![DOI](https://data.caltech.edu/badge/175684474.svg)](https://data.caltech.edu/badge/latestdoi/175684474)\n\npy_dataset is a Python wrapper for the [dataset](https://github.com/caltechlibrary/dataset) \nlibdataset a C shared library for working with \n[JSON](https://en.wikipedia.org/wiki/JSON) objects as collections. \nCollections can be stored on disc or in Cloud Storage.  JSON objects \nare stored in collections using a pairtree as plain UTF-8 text files.\nThis means the objects can be accessed with common \nUnix text processing tools as well as most programming languages.\n\nThis package wraps all [dataset](docs/) operations such \nas initialization of collections, creation, \nreading, updating and deleting JSON objects in the collection. Some of \nits enhanced features include the ability to generate data \n[frames](docs/frame.html) as well as the ability to \nimport and export JSON objects to and from CSV files.\n\npy_dataset is release under a [BSD](LICENSE) style license.\n\n## Features\n\n[dataset](docs/) supports \n\n- Basic storage actions ([create](docs/create.html), [read](docs/read.html), [update](docs/update.html) and [delete](docs/delete.html))\n- listing of collection [keys](docs/keys.html) (including filtering and sorting)\n- import/export  of [CSV](docs/csv.html) files.\n- The ability to reshape data by performing simple object [join](docs/join.html)\n- The ability to create data [frames](docs/frames.html) from collections based on keys lists and [dot paths](docs/dotpath.html) into the JSON objects stored\n\nSee [docs](docs/) for detials.\n\n### Limitations of _dataset_\n\n_dataset_ has many limitations, some are listed below\n\n- it is not a multi-process, multi-user data store (it's files on \"disc\" without locking)\n- it is not a replacement for a repository management system\n- it is not a general purpose database system\n- it does not supply version control on collections or objects\n\n## Install\n\nAvailable via pip `pip install py_dataset` or by downloading this repo and\ntyping `python setup.py install`. This repo includes dataset shared C libraries\ncompiled for Windows, Mac, and Linux and the appripriate library will be used\nautomatically.\n\n## Quick Tutorial\n\nThis module provides the functionality of the _dataset_ command line tool as a Python 3.8 module.\nOnce installed try out the following commands to see if everything is in order (or to get familier with\n_dataset_).\n\nThe \"#\" comments don't have to be typed in, they are there to explain the commands as your type them.\nStart the tour by launching Python3 in interactive mode.\n\n```shell\n    python3\n```\n\nThen run the following Python commands.\n\n```python\n    from py_dataset import dataset\n    # Almost all the commands require the collection_name as first paramter, \n    # we're storing that name in c_name for convienence.\n    c_name = \"a_tour_of_dataset.ds\"\n\n    # Let's create our a dataset collection. We use the method called \n    # 'init' it returns True on success or False otherwise.\n    dataset.init(c_name)\n\n    # Let's check to see if our collection to exists, True it exists\n    # False if it doesn't.\n    dataset.status(c_name)\n\n    # Let's count the records in our collection (should be zero)\n    cnt = dataset.count(c_name)\n    print(cnt)\n\n    # Let's read all the keys in the collection (should be an empty list)\n    keys = dataset.keys(c_name)\n    print(keys)\n\n    # Now let's add a record to our collection. To create a record we need to know\n    # this collection name (e.g. c_name), the key (most be string) and have a \n    # record (i.e. a dict literal or variable)\n    key = \"one\"\n    record = {\"one\": 1}\n    # If create returns False, we can check the last error message \n    # with the 'error_message' method\n    if not dataset.create(c_name, key, record):\n        print(dataset.error_message())\n\n    # Let's count and list the keys in our collection, we should see a count of '1' and a key of 'one'\n    dataset.count(c_name)\n    keys = dataset.keys(c_name)\n    print(keys)\n\n    # We can read the record we stored using the 'read' method.\n    new_record, err = dataset.read(c_name, key)\n    if err != '':\n        print(err)\n    else:\n        print(new_record)\n\n    # Let's modify new_record and update the record in our collection\n    new_record[\"two\"] = 2\n    if not dataset.update(c_name, key, new_record):\n        print(dataset.error_message())\n\n    # Let's print out the record we stored using read method\n    # read returns a touple so we're printing the first one.\n    print(dataset.read(c_name, key)[0])\n\n    # Finally we can remove (delete) a record from our collection\n    if not dataset.delete(c_name, key):\n        print(dataset.error_message())\n\n    # We should not have a count of Zero records\n    cnt = dataset.count(c_name)\n    print(cnt)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/caltechlibrary/py_dataset/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caltechlibrary/py_dataset", "keywords": "GitHub,metadata,data,software,json", "license": "https://data.caltech.edu/license", "maintainer": "", "maintainer_email": "", "name": "py-dataset", "package_url": "https://pypi.org/project/py-dataset/", "platform": "", "project_url": "https://pypi.org/project/py-dataset/", "project_urls": {"Download": "https://github.com/caltechlibrary/py_dataset/releases", "Homepage": "https://github.com/caltechlibrary/py_dataset"}, "release_url": "https://pypi.org/project/py-dataset/0.1.8/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "A command line tool for working with JSON documents on local disc, in an S3 bucket or on Google Sheets/Cloud Storage", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py_dataset   <a href=\"https://data.caltech.edu/badge/latestdoi/175684474\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f429c8f21c0d0054d63f205a52b17f5456f638b8/68747470733a2f2f646174612e63616c746563682e6564752f62616467652f3137353638343437342e737667\"></a></h1>\n<p>py_dataset is a Python wrapper for the <a href=\"https://github.com/caltechlibrary/dataset\" rel=\"nofollow\">dataset</a>\nlibdataset a C shared library for working with\n<a href=\"https://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">JSON</a> objects as collections.\nCollections can be stored on disc or in Cloud Storage.  JSON objects\nare stored in collections using a pairtree as plain UTF-8 text files.\nThis means the objects can be accessed with common\nUnix text processing tools as well as most programming languages.</p>\n<p>This package wraps all <a href=\"docs/\" rel=\"nofollow\">dataset</a> operations such\nas initialization of collections, creation,\nreading, updating and deleting JSON objects in the collection. Some of\nits enhanced features include the ability to generate data\n<a href=\"docs/frame.html\" rel=\"nofollow\">frames</a> as well as the ability to\nimport and export JSON objects to and from CSV files.</p>\n<p>py_dataset is release under a <a href=\"LICENSE\" rel=\"nofollow\">BSD</a> style license.</p>\n<h2>Features</h2>\n<p><a href=\"docs/\" rel=\"nofollow\">dataset</a> supports</p>\n<ul>\n<li>Basic storage actions (<a href=\"docs/create.html\" rel=\"nofollow\">create</a>, <a href=\"docs/read.html\" rel=\"nofollow\">read</a>, <a href=\"docs/update.html\" rel=\"nofollow\">update</a> and <a href=\"docs/delete.html\" rel=\"nofollow\">delete</a>)</li>\n<li>listing of collection <a href=\"docs/keys.html\" rel=\"nofollow\">keys</a> (including filtering and sorting)</li>\n<li>import/export  of <a href=\"docs/csv.html\" rel=\"nofollow\">CSV</a> files.</li>\n<li>The ability to reshape data by performing simple object <a href=\"docs/join.html\" rel=\"nofollow\">join</a></li>\n<li>The ability to create data <a href=\"docs/frames.html\" rel=\"nofollow\">frames</a> from collections based on keys lists and <a href=\"docs/dotpath.html\" rel=\"nofollow\">dot paths</a> into the JSON objects stored</li>\n</ul>\n<p>See <a href=\"docs/\" rel=\"nofollow\">docs</a> for detials.</p>\n<h3>Limitations of <em>dataset</em></h3>\n<p><em>dataset</em> has many limitations, some are listed below</p>\n<ul>\n<li>it is not a multi-process, multi-user data store (it's files on \"disc\" without locking)</li>\n<li>it is not a replacement for a repository management system</li>\n<li>it is not a general purpose database system</li>\n<li>it does not supply version control on collections or objects</li>\n</ul>\n<h2>Install</h2>\n<p>Available via pip <code>pip install py_dataset</code> or by downloading this repo and\ntyping <code>python setup.py install</code>. This repo includes dataset shared C libraries\ncompiled for Windows, Mac, and Linux and the appripriate library will be used\nautomatically.</p>\n<h2>Quick Tutorial</h2>\n<p>This module provides the functionality of the <em>dataset</em> command line tool as a Python 3.8 module.\nOnce installed try out the following commands to see if everything is in order (or to get familier with\n<em>dataset</em>).</p>\n<p>The \"#\" comments don't have to be typed in, they are there to explain the commands as your type them.\nStart the tour by launching Python3 in interactive mode.</p>\n<pre>    python3\n</pre>\n<p>Then run the following Python commands.</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">py_dataset</span> <span class=\"kn\">import</span> <span class=\"n\">dataset</span>\n    <span class=\"c1\"># Almost all the commands require the collection_name as first paramter, </span>\n    <span class=\"c1\"># we're storing that name in c_name for convienence.</span>\n    <span class=\"n\">c_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"a_tour_of_dataset.ds\"</span>\n\n    <span class=\"c1\"># Let's create our a dataset collection. We use the method called </span>\n    <span class=\"c1\"># 'init' it returns True on success or False otherwise.</span>\n    <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Let's check to see if our collection to exists, True it exists</span>\n    <span class=\"c1\"># False if it doesn't.</span>\n    <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Let's count the records in our collection (should be zero)</span>\n    <span class=\"n\">cnt</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cnt</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Let's read all the keys in the collection (should be an empty list)</span>\n    <span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Now let's add a record to our collection. To create a record we need to know</span>\n    <span class=\"c1\"># this collection name (e.g. c_name), the key (most be string) and have a </span>\n    <span class=\"c1\"># record (i.e. a dict literal or variable)</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"one\"</span>\n    <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"one\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n    <span class=\"c1\"># If create returns False, we can check the last error message </span>\n    <span class=\"c1\"># with the 'error_message' method</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">error_message</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># Let's count and list the keys in our collection, we should see a count of '1' and a key of 'one'</span>\n    <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n    <span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># We can read the record we stored using the 'read' method.</span>\n    <span class=\"n\">new_record</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"s1\">''</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">new_record</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Let's modify new_record and update the record in our collection</span>\n    <span class=\"n\">new_record</span><span class=\"p\">[</span><span class=\"s2\">\"two\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">new_record</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">error_message</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># Let's print out the record we stored using read method</span>\n    <span class=\"c1\"># read returns a touple so we're printing the first one.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># Finally we can remove (delete) a record from our collection</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">error_message</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># We should not have a count of Zero records</span>\n    <span class=\"n\">cnt</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">c_name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cnt</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6931641, "releases": {"0.0.59": [{"comment_text": "", "digests": {"md5": "02fce807316221caab950765453573e4", "sha256": "e25a98656bed6825e18c810da4cee2b8a293270c9f51fa905cff3c9d3820820f"}, "downloads": -1, "filename": "py_dataset-0.0.59-py3-none-any.whl", "has_sig": false, "md5_digest": "02fce807316221caab950765453573e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 40216718, "upload_time": "2019-04-29T19:31:14", "upload_time_iso_8601": "2019-04-29T19:31:14.682621Z", "url": "https://files.pythonhosted.org/packages/82/7b/5c3d238627b6183a6591f8c296099813cc33e97d5eeace1ed30d069c7234/py_dataset-0.0.59-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab994086c659589b59fb2cba9314d83", "sha256": "c1663e379fa784a8d93f1b087826518082235fe986a42c7a9da0914663f2f0e5"}, "downloads": -1, "filename": "py_dataset-0.0.59.tar.gz", "has_sig": false, "md5_digest": "6ab994086c659589b59fb2cba9314d83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 39923258, "upload_time": "2019-04-29T19:31:23", "upload_time_iso_8601": "2019-04-29T19:31:23.722781Z", "url": "https://files.pythonhosted.org/packages/13/d9/f5176929cf90a3318ce53fcb21158ef8d6b41f9fd901fc4c7d39f30f0499/py_dataset-0.0.59.tar.gz", "yanked": false}], "0.0.60": [{"comment_text": "", "digests": {"md5": "1c3a6b98b2b2038138270b9d01e45d77", "sha256": "56563e0e48e1a9c7b076efa46f97bc4e3bfe7e513794c5345849001799fea22e"}, "downloads": -1, "filename": "py_dataset-0.0.60-py3-none-any.whl", "has_sig": false, "md5_digest": "1c3a6b98b2b2038138270b9d01e45d77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 40304284, "upload_time": "2019-05-06T21:26:53", "upload_time_iso_8601": "2019-05-06T21:26:53.014101Z", "url": "https://files.pythonhosted.org/packages/0d/c7/79d2358a2b65c36edc7b8878bb3908062bef403f8b35ef02306df43a6e3e/py_dataset-0.0.60-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ce2c658d3b6a354cfefa4b1e6a40548", "sha256": "07397793b4b32914704f8d12a7e720197d43659720b36c4bedc44791b25b7767"}, "downloads": -1, "filename": "py_dataset-0.0.60.tar.gz", "has_sig": false, "md5_digest": "3ce2c658d3b6a354cfefa4b1e6a40548", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 40015307, "upload_time": "2019-05-06T21:27:00", "upload_time_iso_8601": "2019-05-06T21:27:00.047485Z", "url": "https://files.pythonhosted.org/packages/8e/39/e88cc3355eb9da90246f70ca7896eec7e551395bd9111b0135555bdb1069/py_dataset-0.0.60.tar.gz", "yanked": false}], "0.0.67": [{"comment_text": "", "digests": {"md5": "fad7f9a2b9e8039a68219643a4236f6b", "sha256": "8a49464fe6d61e4e5a812c2b071921bafa45b397a47ba2d881cf384e83f87fc7"}, "downloads": -1, "filename": "py_dataset-0.0.67-py3-none-any.whl", "has_sig": false, "md5_digest": "fad7f9a2b9e8039a68219643a4236f6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27139603, "upload_time": "2019-07-16T18:38:24", "upload_time_iso_8601": "2019-07-16T18:38:24.614785Z", "url": "https://files.pythonhosted.org/packages/25/23/301fcdfb943fad85f2c4dc30b53f1880cf3efb929e3cba47bc4c9b5f9a8b/py_dataset-0.0.67-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37b6a25bf097c2763bdf50a252f61f22", "sha256": "b9cec7b221b892463566f34720cd2c10036f93a4b8ca7eb5907fdb265888f655"}, "downloads": -1, "filename": "py_dataset-0.0.67.tar.gz", "has_sig": false, "md5_digest": "37b6a25bf097c2763bdf50a252f61f22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 26933355, "upload_time": "2019-07-16T18:38:31", "upload_time_iso_8601": "2019-07-16T18:38:31.443249Z", "url": "https://files.pythonhosted.org/packages/af/e0/886d07233cab6aa6416778e1421870ebd6fa2b26f7ef625826c759787e98/py_dataset-0.0.67.tar.gz", "yanked": false}], "0.0.68": [{"comment_text": "", "digests": {"md5": "30858cd6594d042ccd220d4a448247f6", "sha256": "8404d125f5a8509e44210348e470b86adbd43381a8388f33dc96697a6767ba48"}, "downloads": -1, "filename": "py_dataset-0.0.68-py3-none-any.whl", "has_sig": false, "md5_digest": "30858cd6594d042ccd220d4a448247f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 31417330, "upload_time": "2019-07-19T18:34:42", "upload_time_iso_8601": "2019-07-19T18:34:42.803432Z", "url": "https://files.pythonhosted.org/packages/b2/14/989b657990f2188f8a129ba01c5619f5f4f8b7d64198ed91ccc8a326eb1d/py_dataset-0.0.68-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc6e24332702cfd4de8f126f05ac32e5", "sha256": "378c94a1c90167b0454d28fb18822a6bd8fcf1f46a07ca63d36729d449dc9a37"}, "downloads": -1, "filename": "py_dataset-0.0.68.tar.gz", "has_sig": false, "md5_digest": "cc6e24332702cfd4de8f126f05ac32e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 31199691, "upload_time": "2019-07-19T18:34:50", "upload_time_iso_8601": "2019-07-19T18:34:50.282780Z", "url": "https://files.pythonhosted.org/packages/f4/4a/861d90d8adc2ce40aaa4b7c8d1e0d3a5f275e9eaffb25e63739a408315ef/py_dataset-0.0.68.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "0e83e43a64c9dfb9d1724e3811191303", "sha256": "c5069ebe4d6a7fdbe2e2cff9659e4cb50c7eb52aee23affd8498887d7ee59a74"}, "downloads": -1, "filename": "py_dataset-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0e83e43a64c9dfb9d1724e3811191303", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 8549671, "upload_time": "2020-04-01T22:15:21", "upload_time_iso_8601": "2020-04-01T22:15:21.889613Z", "url": "https://files.pythonhosted.org/packages/3b/ca/d947e87cd845515658cae91a8902c01c9a1b40d1df6378de39a94865f7d8/py_dataset-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db30cbb7dbe10292072e08ffda6a1b1f", "sha256": "d93118a326743985b23f6125b408f6dea1364ee484c70aa178c05459b5a20c90"}, "downloads": -1, "filename": "py_dataset-0.1.8.tar.gz", "has_sig": false, "md5_digest": "db30cbb7dbe10292072e08ffda6a1b1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8492722, "upload_time": "2020-04-01T22:15:39", "upload_time_iso_8601": "2020-04-01T22:15:39.227562Z", "url": "https://files.pythonhosted.org/packages/5b/86/fa4400324a9990155d98fe73782dc9485685bb5e37b3f349cb6924ad1fab/py_dataset-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e83e43a64c9dfb9d1724e3811191303", "sha256": "c5069ebe4d6a7fdbe2e2cff9659e4cb50c7eb52aee23affd8498887d7ee59a74"}, "downloads": -1, "filename": "py_dataset-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0e83e43a64c9dfb9d1724e3811191303", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 8549671, "upload_time": "2020-04-01T22:15:21", "upload_time_iso_8601": "2020-04-01T22:15:21.889613Z", "url": "https://files.pythonhosted.org/packages/3b/ca/d947e87cd845515658cae91a8902c01c9a1b40d1df6378de39a94865f7d8/py_dataset-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db30cbb7dbe10292072e08ffda6a1b1f", "sha256": "d93118a326743985b23f6125b408f6dea1364ee484c70aa178c05459b5a20c90"}, "downloads": -1, "filename": "py_dataset-0.1.8.tar.gz", "has_sig": false, "md5_digest": "db30cbb7dbe10292072e08ffda6a1b1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8492722, "upload_time": "2020-04-01T22:15:39", "upload_time_iso_8601": "2020-04-01T22:15:39.227562Z", "url": "https://files.pythonhosted.org/packages/5b/86/fa4400324a9990155d98fe73782dc9485685bb5e37b3f349cb6924ad1fab/py_dataset-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:20 2020"}