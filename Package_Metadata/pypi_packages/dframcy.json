{"info": {"author": "Yash Patadia", "author_email": "yash@patadia.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# DframCy\n\n[![Package Version](https://img.shields.io/pypi/v/dframcy.svg?&service=github)](https://pypi.python.org/pypi/dframcy/)\n[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)](https://www.python.org/downloads/release/python-360/)\n[![Build Status](https://travis-ci.org/yash1994/dframcy.svg?branch=master)](https://travis-ci.org/yash1994/dframcy) \n[![codecov](https://codecov.io/gh/yash1994/dframcy/branch/master/graph/badge.svg)](https://codecov.io/gh/yash1994/dframcy)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nDframCy is a light-weight utility module to integrate Pandas Dataframe to spaCy's linguistic annotation and training tasks. DframCy provides clean APIs to convert spaCy's linguistic annotations, Matcher and PhraseMatcher information to Pandas dataframe, also supports training and evaluation of NLP pipeline from CSV/XLXS/XLS without any changes to spaCy's underlying APIs.\n\n## Getting Started\n\nDframCy can be easily installed. Just need to the following:\n\n### Requirements\n\n* Python 3.5 or later\n* Pandas\n* spaCy >= 2.2.0\n\nAlso need to download spaCy's language model:\n\n```bash\npython -m spacy download en_core_web_sm\n```\n\nFor more information refer to: [Models & Languages](https://spacy.io/usage/models)\n\n### Installation:\n\nThis package can be installed from [PyPi](https://pypi.org/project/dframcy/) by running:\n\n```bash\npip install dframcy\n```\n\nTo build from source:\n\n```bash\ngit clone https://github.com/yash1994/dframcy.git\ncd dframcy\npython setup.py install\n```\n\n## Usage\n\n### Linguistic Annotations\n\nGet linguistic annotation in the dataframe. For linguistic annotations (dataframe column names) refer to [spaCy's Token API](https://spacy.io/api/token) document.\n\n```python\nimport spacy\nfrom dframcy import DframCy\n\nnlp = spacy.load(\"en_core_web_sm\")\n\ndframcy = DframCy(nlp)\ndoc = dframcy.nlp(u\"Apple is looking at buying U.K. startup for $1 billion\")\n\n# default columns: [\"id\", \"text\", \"start\", \"end\", \"pos_\", \"tag_\", \"dep_\", \"head\", \"ent_type_\"]\nannotation_dataframe = dframcy.to_dataframe(doc)\n\n# can also pass columns names (spaCy's linguistic annotation attributes)\nannotation_dataframe = dframcy.to_dataframe(doc, columns=[\"text\", \"lemma_\", \"lower_\", \"is_punct\"])\n\n# for separate entity dataframe\ntoken_annotation_dataframe, entity_dataframe = dframcy.to_dataframe(doc, separate_entity_dframe=True)\n\n# custom attributes can also be included\nfrom spacy.tokens import Token\nfruit_getter = lambda token: token.text in (\"apple\", \"pear\", \"banana\")\nToken.set_extension(\"is_fruit\", getter=fruit_getter)\ndoc = dframcy.nlp(u\"I have an apple\")\n\nannotation_dataframe = dframcy.to_dataframe(doc, custom_attributes=[\"is_fruit\"])\n```\n\n### Rule-Based Matching\n\n```python\n# Token-based Matching\nimport spacy\n\nnlp = spacy.load(\"en_core_web_sm\")\n\nfrom dframcy.matcher import DframCyMatcher, DframCyPhraseMatcher\ndframcy_matcher = DframCyMatcher(nlp)\npattern = [{\"LOWER\": \"hello\"}, {\"IS_PUNCT\": True}, {\"LOWER\": \"world\"}]\ndframcy_matcher.add(\"HelloWorld\", None, pattern)\ndoc = dframcy_matcher.nlp(\"Hello, world! Hello world!\")\nmatches_dataframe = dframcy_matcher(doc)\n\n# Phrase Matching\ndframcy_phrase_matcher = DframCyPhraseMatcher(nlp)\nterms = [u\"Barack Obama\", u\"Angela Merkel\",u\"Washington, D.C.\"]\npatterns = [dframcy_phrase_matcher.get_nlp().make_doc(text) for text in terms]\ndframcy_phrase_matcher.add(\"TerminologyList\", None, *patterns)\ndoc = dframcy_phrase_matcher.nlp(u\"German Chancellor Angela Merkel and US President Barack Obama \"\n                                u\"converse in the Oval Office inside the White House in Washington, D.C.\")\nphrase_matches_dataframe = dframcy_phrase_matcher(doc)\n```\n\n### Command Line Interface\n\nDframcy supports command line arguments for conversion of plain text file to linguistically annotated text in CSV/JSON format, training and evaluation of language models from CSV/XLS formatted training data.\n[Training data example](https://github.com/yash1994/dframcy/blob/master/data/training_data_format.csv). CLI arguments for training and evaluation are exactly same as [spaCy's CLI](https://spacy.io/api/cli), only difference is the format of training data.\n\n```bash\n# convert\ndframcy convert -i plain_text.txt -o annotations.csv -t csv\n\n# train\ndframcy train -l en -o spacy_models -t train.csv -d test.csv\n\n# evaluate\ndframcy evaluate -m spacy_model/ -d test.csv\n\n# train text classifier\ndframcy textcat -o spacy_model/ -t data/textcat_training.csv -d data/textcat_training.csv\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yash1994/dframcy", "keywords": "spacy,dataframe,pandas", "license": "", "maintainer": "", "maintainer_email": "", "name": "dframcy", "package_url": "https://pypi.org/project/dframcy/", "platform": "", "project_url": "https://pypi.org/project/dframcy/", "project_urls": {"Homepage": "https://github.com/yash1994/dframcy"}, "release_url": "https://pypi.org/project/dframcy/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Pandas Dataframe integration for spaCy", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DframCy</h1>\n<p><a href=\"https://pypi.python.org/pypi/dframcy/\" rel=\"nofollow\"><img alt=\"Package Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0938681e372d54e39d4e47f8a1ffef1c2e31132f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646672616d63792e7376673f26736572766963653d676974687562\"></a>\n<a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\"><img alt=\"Python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></a>\n<a href=\"https://travis-ci.org/yash1994/dframcy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fcc14582c9d1d58fee30a1ad91d754677e351ef/68747470733a2f2f7472617669732d63692e6f72672f79617368313939342f646672616d63792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/yash1994/dframcy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f11b820f2f7590ea5f127cfbaa1000dc130dd05/68747470733a2f2f636f6465636f762e696f2f67682f79617368313939342f646672616d63792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>DframCy is a light-weight utility module to integrate Pandas Dataframe to spaCy's linguistic annotation and training tasks. DframCy provides clean APIs to convert spaCy's linguistic annotations, Matcher and PhraseMatcher information to Pandas dataframe, also supports training and evaluation of NLP pipeline from CSV/XLXS/XLS without any changes to spaCy's underlying APIs.</p>\n<h2>Getting Started</h2>\n<p>DframCy can be easily installed. Just need to the following:</p>\n<h3>Requirements</h3>\n<ul>\n<li>Python 3.5 or later</li>\n<li>Pandas</li>\n<li>spaCy &gt;= 2.2.0</li>\n</ul>\n<p>Also need to download spaCy's language model:</p>\n<pre>python -m spacy download en_core_web_sm\n</pre>\n<p>For more information refer to: <a href=\"https://spacy.io/usage/models\" rel=\"nofollow\">Models &amp; Languages</a></p>\n<h3>Installation:</h3>\n<p>This package can be installed from <a href=\"https://pypi.org/project/dframcy/\" rel=\"nofollow\">PyPi</a> by running:</p>\n<pre>pip install dframcy\n</pre>\n<p>To build from source:</p>\n<pre>git clone https://github.com/yash1994/dframcy.git\n<span class=\"nb\">cd</span> dframcy\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<h3>Linguistic Annotations</h3>\n<p>Get linguistic annotation in the dataframe. For linguistic annotations (dataframe column names) refer to <a href=\"https://spacy.io/api/token\" rel=\"nofollow\">spaCy's Token API</a> document.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spacy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dframcy</span> <span class=\"kn\">import</span> <span class=\"n\">DframCy</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">spacy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en_core_web_sm\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">dframcy</span> <span class=\"o\">=</span> <span class=\"n\">DframCy</span><span class=\"p\">(</span><span class=\"n\">nlp</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"Apple is looking at buying U.K. startup for $1 billion\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># default columns: [\"id\", \"text\", \"start\", \"end\", \"pos_\", \"tag_\", \"dep_\", \"head\", \"ent_type_\"]</span>\n<span class=\"n\">annotation_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">to_dataframe</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># can also pass columns names (spaCy's linguistic annotation attributes)</span>\n<span class=\"n\">annotation_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">to_dataframe</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"text\"</span><span class=\"p\">,</span> <span class=\"s2\">\"lemma_\"</span><span class=\"p\">,</span> <span class=\"s2\">\"lower_\"</span><span class=\"p\">,</span> <span class=\"s2\">\"is_punct\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># for separate entity dataframe</span>\n<span class=\"n\">token_annotation_dataframe</span><span class=\"p\">,</span> <span class=\"n\">entity_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">to_dataframe</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"n\">separate_entity_dframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># custom attributes can also be included</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spacy.tokens</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span>\n<span class=\"n\">fruit_getter</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">\"apple\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pear\"</span><span class=\"p\">,</span> <span class=\"s2\">\"banana\"</span><span class=\"p\">)</span>\n<span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">set_extension</span><span class=\"p\">(</span><span class=\"s2\">\"is_fruit\"</span><span class=\"p\">,</span> <span class=\"n\">getter</span><span class=\"o\">=</span><span class=\"n\">fruit_getter</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"I have an apple\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">annotation_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy</span><span class=\"o\">.</span><span class=\"n\">to_dataframe</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"n\">custom_attributes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"is_fruit\"</span><span class=\"p\">])</span>\n</pre>\n<h3>Rule-Based Matching</h3>\n<pre><span class=\"c1\"># Token-based Matching</span>\n<span class=\"kn\">import</span> <span class=\"nn\">spacy</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">spacy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en_core_web_sm\"</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dframcy.matcher</span> <span class=\"kn\">import</span> <span class=\"n\">DframCyMatcher</span><span class=\"p\">,</span> <span class=\"n\">DframCyPhraseMatcher</span>\n<span class=\"n\">dframcy_matcher</span> <span class=\"o\">=</span> <span class=\"n\">DframCyMatcher</span><span class=\"p\">(</span><span class=\"n\">nlp</span><span class=\"p\">)</span>\n<span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">\"LOWER\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">\"IS_PUNCT\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">\"LOWER\"</span><span class=\"p\">:</span> <span class=\"s2\">\"world\"</span><span class=\"p\">}]</span>\n<span class=\"n\">dframcy_matcher</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"HelloWorld\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">dframcy_matcher</span><span class=\"o\">.</span><span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, world! Hello world!\"</span><span class=\"p\">)</span>\n<span class=\"n\">matches_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy_matcher</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Phrase Matching</span>\n<span class=\"n\">dframcy_phrase_matcher</span> <span class=\"o\">=</span> <span class=\"n\">DframCyPhraseMatcher</span><span class=\"p\">(</span><span class=\"n\">nlp</span><span class=\"p\">)</span>\n<span class=\"n\">terms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s2\">\"Barack Obama\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"Angela Merkel\"</span><span class=\"p\">,</span><span class=\"sa\">u</span><span class=\"s2\">\"Washington, D.C.\"</span><span class=\"p\">]</span>\n<span class=\"n\">patterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dframcy_phrase_matcher</span><span class=\"o\">.</span><span class=\"n\">get_nlp</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">make_doc</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"n\">terms</span><span class=\"p\">]</span>\n<span class=\"n\">dframcy_phrase_matcher</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"TerminologyList\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">dframcy_phrase_matcher</span><span class=\"o\">.</span><span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"German Chancellor Angela Merkel and US President Barack Obama \"</span>\n                                <span class=\"sa\">u</span><span class=\"s2\">\"converse in the Oval Office inside the White House in Washington, D.C.\"</span><span class=\"p\">)</span>\n<span class=\"n\">phrase_matches_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">dframcy_phrase_matcher</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n</pre>\n<h3>Command Line Interface</h3>\n<p>Dframcy supports command line arguments for conversion of plain text file to linguistically annotated text in CSV/JSON format, training and evaluation of language models from CSV/XLS formatted training data.\n<a href=\"https://github.com/yash1994/dframcy/blob/master/data/training_data_format.csv\" rel=\"nofollow\">Training data example</a>. CLI arguments for training and evaluation are exactly same as <a href=\"https://spacy.io/api/cli\" rel=\"nofollow\">spaCy's CLI</a>, only difference is the format of training data.</p>\n<pre><span class=\"c1\"># convert</span>\ndframcy convert -i plain_text.txt -o annotations.csv -t csv\n\n<span class=\"c1\"># train</span>\ndframcy train -l en -o spacy_models -t train.csv -d test.csv\n\n<span class=\"c1\"># evaluate</span>\ndframcy evaluate -m spacy_model/ -d test.csv\n\n<span class=\"c1\"># train text classifier</span>\ndframcy textcat -o spacy_model/ -t data/textcat_training.csv -d data/textcat_training.csv\n</pre>\n\n          </div>"}, "last_serial": 7120105, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "09509afa22262be1e1c3fc3e6fa55584", "sha256": "8c27c8c011ce01ae0d1e8cd708df33376ffe16bfc23d43facb5b6973193478c0"}, "downloads": -1, "filename": "dframcy-0.0.1-py3.6.egg", "has_sig": false, "md5_digest": "09509afa22262be1e1c3fc3e6fa55584", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 35740, "upload_time": "2019-10-14T09:31:41", "upload_time_iso_8601": "2019-10-14T09:31:41.989951Z", "url": "https://files.pythonhosted.org/packages/c2/e7/9b5f8dc2917cb657274ada375181914f30dedf9ff8170794382036f968d6/dframcy-0.0.1-py3.6.egg", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "86571819ff1968a21cd02c513d954ffb", "sha256": "0336527ddb376b428cae35eba512907b9c383cf0a763515ea661aece05fa1e77"}, "downloads": -1, "filename": "dframcy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "86571819ff1968a21cd02c513d954ffb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20710, "upload_time": "2019-10-14T09:47:39", "upload_time_iso_8601": "2019-10-14T09:47:39.275758Z", "url": "https://files.pythonhosted.org/packages/87/6b/48578cea6395dd6c0273653897dc6da5ac853c7aa8d007a93d6481cda5f5/dframcy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a53c0172c9071a376d4d8ad177b97a4", "sha256": "476c7851f8c4281e73867b725a575cd290c1bf46290f1ee025f28472d1eebebf"}, "downloads": -1, "filename": "dframcy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a53c0172c9071a376d4d8ad177b97a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17953, "upload_time": "2019-10-14T09:31:45", "upload_time_iso_8601": "2019-10-14T09:31:45.374777Z", "url": "https://files.pythonhosted.org/packages/30/54/9c78ed3fe505a3143fd2f72fed5fe634434ceebaf98c58c5fd40e0721e82/dframcy-0.1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e11ffe20fd57cedfdc9ec0804662d55", "sha256": "863269aa31673797b52bb83a90e45411bba3e1800d379fb198a96359dbd7edda"}, "downloads": -1, "filename": "dframcy-0.1-py3.6.egg", "has_sig": false, "md5_digest": "0e11ffe20fd57cedfdc9ec0804662d55", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 43249, "upload_time": "2019-10-14T09:31:47", "upload_time_iso_8601": "2019-10-14T09:31:47.921518Z", "url": "https://files.pythonhosted.org/packages/4e/b0/090eb9f96bdd0d8dd2f5161c209a69d084c0741d6553adb3905f3b9883fe/dframcy-0.1-py3.6.egg", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8665067d94d7a745a3159c459b9bdfb9", "sha256": "5cd15836698676a8799518d65ef2126f6c3ccb852e1ca907c1ee1bf557496eea"}, "downloads": -1, "filename": "dframcy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8665067d94d7a745a3159c459b9bdfb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18179, "upload_time": "2019-10-14T10:05:20", "upload_time_iso_8601": "2019-10-14T10:05:20.988405Z", "url": "https://files.pythonhosted.org/packages/f9/da/7b4b03026baf38ad92c71db305dea24283b0c8a94c891010e72923cd8771/dframcy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d131e8baaf7d30d1b8758b5123f727f6", "sha256": "b5e0204b84fbc58dd02643690e473f969f362156daa54b8f229a26d3d9f5f6fa"}, "downloads": -1, "filename": "dframcy-0.1.2-py3.6.egg", "has_sig": false, "md5_digest": "d131e8baaf7d30d1b8758b5123f727f6", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 49336, "upload_time": "2019-11-04T10:04:19", "upload_time_iso_8601": "2019-11-04T10:04:19.880065Z", "url": "https://files.pythonhosted.org/packages/5f/14/3a74697baca004352e9f9ae44c810d36253ba6a486689f7b79b2dd13ccb8/dframcy-0.1.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "672349d6f7a506a9a33154a46a66eb46", "sha256": "01fc1ca5896c6f213b552f5f8f2d31558f2d782043280ea374c0b72cc2619293"}, "downloads": -1, "filename": "dframcy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "672349d6f7a506a9a33154a46a66eb46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24536, "upload_time": "2019-10-14T10:41:19", "upload_time_iso_8601": "2019-10-14T10:41:19.565286Z", "url": "https://files.pythonhosted.org/packages/61/b1/b93f0360aa88815e3ec79ca7c928d620963686c6b2b8b790394e1fecdde9/dframcy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9973869551ee08ccaf51e65cfce5e4e7", "sha256": "c98964cb36ee9a999d838549c1d5f04020dddb1e3abebdf484634fd14bbdd0af"}, "downloads": -1, "filename": "dframcy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9973869551ee08ccaf51e65cfce5e4e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40536, "upload_time": "2019-11-04T10:04:23", "upload_time_iso_8601": "2019-11-04T10:04:23.376555Z", "url": "https://files.pythonhosted.org/packages/fe/77/db1aa0ad12de312dbab17ee2a1bb867884b9575f1fca16d61504a266dae5/dframcy-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "374a94bf92757d1b307896a3ba6a422c", "sha256": "6f4f942b8b1f979182f31a31925decc26b12bfb9da14e833568aaed7f498de5c"}, "downloads": -1, "filename": "dframcy-0.1.4-py3.6.egg", "has_sig": false, "md5_digest": "374a94bf92757d1b307896a3ba6a422c", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 50165, "upload_time": "2020-04-28T12:38:12", "upload_time_iso_8601": "2020-04-28T12:38:12.042248Z", "url": "https://files.pythonhosted.org/packages/1f/de/5e1eb1f5a4965b0a5ff893b4e66bf4b8f1c99fbc05995780192f62e40a04/dframcy-0.1.4-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0acf4d40353ddc5b881505cfab751da5", "sha256": "409f13dfb3f06643abd0596a23c97f4919d4a0d0c4879869c6506d02af99e0bb"}, "downloads": -1, "filename": "dframcy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "0acf4d40353ddc5b881505cfab751da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38592, "upload_time": "2020-04-09T10:39:39", "upload_time_iso_8601": "2020-04-09T10:39:39.168312Z", "url": "https://files.pythonhosted.org/packages/1c/fd/451c361cb635a12860ef22bc19789daa0e689161d6f4aa63210b5ecd128a/dframcy-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1cbf37c02cfa66fc9cc248e3e1e92d9e", "sha256": "16cba1aa386f437c218f21e17dd661241f17c8256a1543fb17a6fc20b844bd70"}, "downloads": -1, "filename": "dframcy-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1cbf37c02cfa66fc9cc248e3e1e92d9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39314, "upload_time": "2020-04-28T12:38:15", "upload_time_iso_8601": "2020-04-28T12:38:15.118498Z", "url": "https://files.pythonhosted.org/packages/4d/36/2550d135440c21c0cae6f258740b1bfeb4bcb3ade85c11e96d635bdb89cf/dframcy-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cbf37c02cfa66fc9cc248e3e1e92d9e", "sha256": "16cba1aa386f437c218f21e17dd661241f17c8256a1543fb17a6fc20b844bd70"}, "downloads": -1, "filename": "dframcy-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1cbf37c02cfa66fc9cc248e3e1e92d9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39314, "upload_time": "2020-04-28T12:38:15", "upload_time_iso_8601": "2020-04-28T12:38:15.118498Z", "url": "https://files.pythonhosted.org/packages/4d/36/2550d135440c21c0cae6f258740b1bfeb4bcb3ade85c11e96d635bdb89cf/dframcy-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:45 2020"}