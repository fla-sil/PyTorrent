{"info": {"author": "Billcountry", "author_email": "me@billcountry.tech", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Extended JSON(ESON)\nJSON is great for sharing data in a human readable format but sometimes it lacks in object types support.\nESON does not re-invent the wheel, it just provides a base for you to implement extended JSON objects allowing you to\nshare data between services, apps and languages as objects.\n\nESON comes with built in extensions for date and datetime. You can write your own extensions to manage\ncustom data.\n\nThis is the python version of ESON. See other languages [here](https://github.com/Billcountry/eson#languages)\n\n## Getting Started\n\n### Install\nRun `pip install eson`\n\n### Usage\nBelow is a summary of various operations using eson. \n[Click here](https://repl.it/@Billcountry/eson-python) to open a live test environment.\n\n#### Encoding:\n```python\nfrom datetime import datetime, date\nimport eson\n\nuser = {\n    \"name\": \"Jane Doe\",\n    \"date_of_birth\": date.today(),\n    \"registered\": datetime.now()\n}\n\n# Encoding the data\neson_data = eson.encode(user, pretty=True)\n\n# Sample output\n\"\"\"\n{\n    \"name\": \"Jane Doe\",\n    \"EsonDate~date_of_birth\": {\"year\": 2020, \"month\": 04, \"day\": 10},\n    \"EsonDatetime~registered\": {...}\n}\n\"\"\"\n```\n\n#### Decoding\n```python\nimport eson\n\n# A timezone aware date object\neson_data = '{\"EsonDatetime~eatime\": {\"timestamp\": 1588822240000400, \"timezone\": {\"offset\": 10800, \"name\": \"EAT\"}}}'\ndata = eson.decode(eson_data)\n\nprint(data.get(\"eatime\"))\n# Expected output '2020-05-07 06:30:40.000400+03:00'\n```\n\n#### Extending ESON\nYou can extend ESON to achieve various purposes, e.g loading a database entity when you recieve it's ID\n\nBelow is the sample code used to extend Date objects in ESON\n```python\nfrom datetime import date\nfrom eson import EsonExtension\n\nclass EsonDate(EsonExtension):\n    # Extend this method, use it to check whether you should encode this value\n    def should_encode(self, value) -> bool:\n        return type(value) == date\n\n    def encode(self, value):\n        # Encode your value to valid JSON object\n        return dict(year=value.year, month=value.month, day=value.day)\n\n    def decode(self, encoded_value):\n        # Decode your object to an object relevant to your application\n        return date(**encoded_value)\n```\n\nOnce an extension is created, at the entry of your application add the extension to ESON\n```python\nimport eson\n\neson.add_extension(EsonDate)\n```\n\nThat's it, your extension is ready to encode objects.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Billcountry/eson", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "eson", "package_url": "https://pypi.org/project/eson/", "platform": "", "project_url": "https://pypi.org/project/eson/", "project_urls": {"Homepage": "https://github.com/Billcountry/eson"}, "release_url": "https://pypi.org/project/eson/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Extendable JSON to support different formats of data across languages. By default supports date and datetime objects", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Extended JSON(ESON)</h1>\n<p>JSON is great for sharing data in a human readable format but sometimes it lacks in object types support.\nESON does not re-invent the wheel, it just provides a base for you to implement extended JSON objects allowing you to\nshare data between services, apps and languages as objects.</p>\n<p>ESON comes with built in extensions for date and datetime. You can write your own extensions to manage\ncustom data.</p>\n<p>This is the python version of ESON. See other languages <a href=\"https://github.com/Billcountry/eson#languages\" rel=\"nofollow\">here</a></p>\n<h2>Getting Started</h2>\n<h3>Install</h3>\n<p>Run <code>pip install eson</code></p>\n<h3>Usage</h3>\n<p>Below is a summary of various operations using eson.\n<a href=\"https://repl.it/@Billcountry/eson-python\" rel=\"nofollow\">Click here</a> to open a live test environment.</p>\n<h4>Encoding:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">date</span>\n<span class=\"kn\">import</span> <span class=\"nn\">eson</span>\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Jane Doe\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"date_of_birth\"</span><span class=\"p\">:</span> <span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">(),</span>\n    <span class=\"s2\">\"registered\"</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Encoding the data</span>\n<span class=\"n\">eson_data</span> <span class=\"o\">=</span> <span class=\"n\">eson</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pretty</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sample output</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">{</span>\n<span class=\"sd\">    \"name\": \"Jane Doe\",</span>\n<span class=\"sd\">    \"EsonDate~date_of_birth\": {\"year\": 2020, \"month\": 04, \"day\": 10},</span>\n<span class=\"sd\">    \"EsonDatetime~registered\": {...}</span>\n<span class=\"sd\">}</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<h4>Decoding</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">eson</span>\n\n<span class=\"c1\"># A timezone aware date object</span>\n<span class=\"n\">eson_data</span> <span class=\"o\">=</span> <span class=\"s1\">'{\"EsonDatetime~eatime\": {\"timestamp\": 1588822240000400, \"timezone\": {\"offset\": 10800, \"name\": \"EAT\"}}}'</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">eson</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">eson_data</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"eatime\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># Expected output '2020-05-07 06:30:40.000400+03:00'</span>\n</pre>\n<h4>Extending ESON</h4>\n<p>You can extend ESON to achieve various purposes, e.g loading a database entity when you recieve it's ID</p>\n<p>Below is the sample code used to extend Date objects in ESON</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eson</span> <span class=\"kn\">import</span> <span class=\"n\">EsonExtension</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EsonDate</span><span class=\"p\">(</span><span class=\"n\">EsonExtension</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Extend this method, use it to check whether you should encode this value</span>\n    <span class=\"k\">def</span> <span class=\"nf\">should_encode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">date</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Encode your value to valid JSON object</span>\n        <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">month</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">day</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">encoded_value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Decode your object to an object relevant to your application</span>\n        <span class=\"k\">return</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">encoded_value</span><span class=\"p\">)</span>\n</pre>\n<p>Once an extension is created, at the entry of your application add the extension to ESON</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">eson</span>\n\n<span class=\"n\">eson</span><span class=\"o\">.</span><span class=\"n\">add_extension</span><span class=\"p\">(</span><span class=\"n\">EsonDate</span><span class=\"p\">)</span>\n</pre>\n<p>That's it, your extension is ready to encode objects.</p>\n\n          </div>"}, "last_serial": 7189430, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7f466038a163b25bc585cdbc8d6e2ffa", "sha256": "a989209636b583fd22047bfc4eaa065df816f9e5b5fd6c424a630683164d5320"}, "downloads": -1, "filename": "eson-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f466038a163b25bc585cdbc8d6e2ffa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5177, "upload_time": "2020-05-06T01:45:33", "upload_time_iso_8601": "2020-05-06T01:45:33.578726Z", "url": "https://files.pythonhosted.org/packages/d7/39/5501b7a9b6ff79d15b8e2bfeb8c2a08ca216ba546c9dfe369ede18662a28/eson-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31cb99cd6411a453702e13670716256e", "sha256": "a90ce7bd94f90d268197ca30be21bc2497c3b91dc182822380ecb9dace5c5e38"}, "downloads": -1, "filename": "eson-0.0.1.tar.gz", "has_sig": false, "md5_digest": "31cb99cd6411a453702e13670716256e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3978, "upload_time": "2020-05-06T01:45:36", "upload_time_iso_8601": "2020-05-06T01:45:36.209212Z", "url": "https://files.pythonhosted.org/packages/19/7e/354f357ff0cb1181492b2c2a217b5396b952e6950d104961a3300a33d62c/eson-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "74e4b450c4c045ae3344d1bfbd0f2be6", "sha256": "a4d65c0129878ac66eb535a6b7d4d6b4133b6b0d57c97fa233192bab93d3a04c"}, "downloads": -1, "filename": "eson-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "74e4b450c4c045ae3344d1bfbd0f2be6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5405, "upload_time": "2020-05-06T02:17:49", "upload_time_iso_8601": "2020-05-06T02:17:49.638949Z", "url": "https://files.pythonhosted.org/packages/c7/2e/c9128e39016f681f171c63021486e1e155fe84b27f80e10017fa6ce2cd85/eson-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d16bd0e851a66c90731f1b027128a44e", "sha256": "91bf987e5dd290bee01ed3ffaed44edf6bf8c47d0737f1a8936e826564c25fe4"}, "downloads": -1, "filename": "eson-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d16bd0e851a66c90731f1b027128a44e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4193, "upload_time": "2020-05-06T02:17:50", "upload_time_iso_8601": "2020-05-06T02:17:50.757571Z", "url": "https://files.pythonhosted.org/packages/10/05/34cc5c9309204de996c180b50bc98c0dfaf2049edfe0b9d75fc9d2f4ccb2/eson-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "33ec0ce40d55150aebee7c5cd6063c46", "sha256": "dc40dae574efd61d993fb4080e55aeb47a83591a143c71f6aed48071b1781e5a"}, "downloads": -1, "filename": "eson-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "33ec0ce40d55150aebee7c5cd6063c46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5429, "upload_time": "2020-05-07T15:23:23", "upload_time_iso_8601": "2020-05-07T15:23:23.855966Z", "url": "https://files.pythonhosted.org/packages/9b/e1/cf0fae1f17376962363119057a44d6f35ea20a0e85e7729d066e082d5a2e/eson-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a1c2be23d81959675446d1e1622ce6d", "sha256": "c911fb50c50a0083f374c82d16c71a56950ac155c2abdae9edeb2606ef348fc8"}, "downloads": -1, "filename": "eson-0.0.3.tar.gz", "has_sig": false, "md5_digest": "4a1c2be23d81959675446d1e1622ce6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4196, "upload_time": "2020-05-07T15:23:25", "upload_time_iso_8601": "2020-05-07T15:23:25.236729Z", "url": "https://files.pythonhosted.org/packages/68/03/5edf0d5f15362c0d1aa372d3f0d04492b347d898c3d0c065a82a20279990/eson-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "33ec0ce40d55150aebee7c5cd6063c46", "sha256": "dc40dae574efd61d993fb4080e55aeb47a83591a143c71f6aed48071b1781e5a"}, "downloads": -1, "filename": "eson-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "33ec0ce40d55150aebee7c5cd6063c46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5429, "upload_time": "2020-05-07T15:23:23", "upload_time_iso_8601": "2020-05-07T15:23:23.855966Z", "url": "https://files.pythonhosted.org/packages/9b/e1/cf0fae1f17376962363119057a44d6f35ea20a0e85e7729d066e082d5a2e/eson-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a1c2be23d81959675446d1e1622ce6d", "sha256": "c911fb50c50a0083f374c82d16c71a56950ac155c2abdae9edeb2606ef348fc8"}, "downloads": -1, "filename": "eson-0.0.3.tar.gz", "has_sig": false, "md5_digest": "4a1c2be23d81959675446d1e1622ce6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4196, "upload_time": "2020-05-07T15:23:25", "upload_time_iso_8601": "2020-05-07T15:23:25.236729Z", "url": "https://files.pythonhosted.org/packages/68/03/5edf0d5f15362c0d1aa372d3f0d04492b347d898c3d0c065a82a20279990/eson-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:38 2020"}