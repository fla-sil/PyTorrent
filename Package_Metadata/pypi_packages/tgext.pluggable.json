{"info": {"author": "Alessandro Molina", "author_email": "alessandro.molina@axant.it", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: TurboGears", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "About Pluggable Apps\n-------------------------\n\ntgext.pluggable permits to plug extensions and applications inside a TG projects\nmuch like the Django Apps.\n\nInstalling\n-------------------------------\n\ntgext.pluggable can be installed both from pypi or from bitbucket::\n\n    pip install tgext.pluggable\n\nshould just work for most of the users\n\nPlugging Apps\n----------------------------\n\nIn your application *config/app_cfg.py* import **plug**::\n\n    from tgext.pluggable import plug\n\nThen at the *end of the file* call plug for each pluggable\napplication you want to enable (package_name must be\nalready installed in your python environment)::\n\n    plug(base_config, 'package_name')\n\nThe plug function accepts various optional arguments, for\nexample if the plugged application exposes a controller\nyou can mount it in a different place specifying a different\n**appid**::\n\n    plug(base_config, 'package_name', 'new_app_id')\n\nIf you want to mount the pluggable application in a subcontroller\nyou can used a dotted **appid**, like ``subcontroller.appid``.\nNote that ``subcontroller`` must exist in RootController.\n\n\nOther options include:\n\n    - plug_helpers (True/False) -> Enable helpers injection\n    - plug_models (True/False) -> Enable models plugging\n    - plug_controller (True/False) -> Mount pluggable app root controller\n    - plug_bootstrap (True/False) -> Enable websetup.bootstrap plugging\n    - plug_statics (True/False) -> Enable plugged app statics\n    - rename_tables (True/False) -> Rename pluggable tables by prepending appid.\n\nRelations with Plugged Apps Models\n--------------------------------------\n\nThere are cases when you might need to create a relationship or a foreign key\nwith a model which is defined by a pluggable application. As pluggable application\nmodels are loaded after loading your application they are not available at the\ntime your app models are imported.\n\n``tgext.pluggable`` provides some utilities to make easier to create relations\nwith models defined by pluggable applications.\n\nThe first step you might want to take is setting the ``global_models=True``\nparameter to the ``plug`` call, this will make all the models declared by the\npluggable application available to you::\n\n    plug(base_config, 'package_name', global_models=True)\n\nAfter the specified pluggable application is plugged, the models will be available\ninside your code through the ``tgext.pluggable.app_model`` object.\n\nThen you can create foreign keys to the desired model using the\n``tgext.pluggable.LazyForeignKey`` class and declare relations using the lazy\nversion of ``sqlalchemy.orm.relation``::\n\n    from tgext.pluggable import app_model, LazyForeignKey\n\n    class AdditionalInfo(DeclarativeBase):\n        __tablename__ = 'sample_model'\n\n        uid = Column(Integer, primary_key=True)\n        data = Column(Unicode(255), nullable=False)\n\n        plugged_model_id = Column(Integer, LazyForeignKey(lambda:app_model.PluggedModel.uid))\n        plugged_model = relation(lambda: app_model.PluggedModel)\n\n\nPartials\n--------------------------\n\ntgext.pluggables provides a bunch of utilities to work with partials.\nPartials in tgext.pluggable can be declared as a function or TGController\nsubclass method that has an *@expose* decorator. Those partials can lately\nbe rendered with::\n\n    ${h.call_partial('module:function_name', arg1='Something')}\n\nIn the case of a class method::\n\n    ${h.call_partial('module.Class:method', arg1='Something')}\n\nThe quickstarted pluggable application provides an example partial::\n\n    from tg import expose\n\n    @expose('plugappname.templates.little_partial')\n    def something(name):\n        return dict(name=name)\n\nwhich can be rendered using::\n\n    ${h.call_partial('plugappname.partials:something', name='Partial')}\n\nReplacing Templates\n--------------------------\n\ntgext.pluggable provides a function to replace templates.\nThis is useful when you want to override the template that an application\nyou plugged in is exposing. To override call **replace_template** inside\nyour application config::\n\n    from tgext.pluggable import replace_template\n\n    replace_template(base_config, 'myapp.templates.about', 'myapp.templates.index')\n\n**replace_template** will work even with tgext.pluggable partials, but\nwon't work with templates rendered directly calling the **render** method.\n\nCalls to replace_template must be performed before the application has started.\n\nPatching Templates\n----------------------------\n\ntgext.pluggable provides a function to patch templates, the result\nof a template rendering will be passed through a list of operations which will\nmake possible to alter the rendering result.\n\nThis behavior is much inspired by **Deliverance** http://pythonhosted.org/Deliverance\nmeant for much simpler use cases. The most common usage is for small changes to templates\nof plugged applications. For advanced manipulations using `replace_template` is suggested\nas it's both faster and easier to maintain.\n\nTemplate patching is enabled by using the `load_template_patches` function::\n\n    from tgext.pluggable import load_template_patches\n\n    load_template_patches(base_config)\n\nSupposing your project is inside a Python distribution named **myapp** this will\nload the ``template_patches.xml`` file from the root of the distribution and will\napply all the specified patches.\n\nTo load template patches from a python module (or pluggable) use::\n\n    load_template_patches(base_config, 'plugname')\n\nYou can use previous expression even to load patches from your own application\nin case the distribution automatic detection failed.\n\nTemplate patching format is an xml file in the form of::\n\n    <patches>\n      <patch template=\"tgext.crud.templates.get_all\">\n        <content selector=\"#crud_content > h1\" template=\"myapp.templates.replacements.crud_title\" />\n        <append  selector=\"#crud_content > h1\" template=\"myapp.templates.replacements.crud_subtitle\" />\n        <prepend selector=\"#crud_content > h1\" template=\"myapp.templates.replacements.crud_superscript\" />\n        <replace selector=\"#crud_btn_new > .add_link\" template=\"\" />\n      </patch>\n    </patches>\n\nEach action listed inside the patch will be performed whenever the specified template\nis rendered, the template associated to the action will be used as the content of the templacement\nand the same data available to the patched template will be available to the action template too.\nAvailable actions are:\n\n    * `content` - replaces the content of tags identified by the selector\n\n    * `append` - appends after the tags identified by the selector\n\n    * `prepend` - prepends before the tags identified by the selector\n\n    * `replace` - replaces the tags identified bt the selector.\n\nCreating Pluggable Apps\n----------------------------\n\ntgext.pluggable provides a **quickstart-pluggable** command\nto create a new pluggable application::\n\n    $ gearbox quickstart-pluggable plugtest\n    Enter package name [plugtest]:\n    ...\n\nThe quickstarted application will provide an example on how to use\nmodels, helpers, bootstrap, controllers and statics.\n\nIn the previous example the pluggable application can be enabled\ninside any TurboGears using::\n\n    plug(base_config, 'plugtest')\n\nAfter enabling the *plugtest* application you should run\n*gearbox setup-app* inside your TurboGears project\nto create the sample model. Then you can access the sample\napplication page though *http://localhost:8080/plugtest*\n\nThe plugme Entry Point\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPluggable applications are required to implement a **plugme(app_config, options)** entry\npoint which will be called when plugging the application.\n\nThe plugme action is called before TurboGears configuration has been loaded so that\nit is possible to register more pluggables inside the plugme hook. This way a pluggable\ncan plug any dependency it requires just by calling tgext.pluggable.plug inside its own\n*plugme* function.\n\nAny options passed to the plug call will be available inside the options dictionary,\nother parts of the pluggable applications like controllers, models and so on will be\nimported after the call to plugme so that plugme can set any configuration options that\nwill drive the behavior of the other parts.\n\nKeep in mind that as plugme is called before loading the TurboGears configuration if you\nneed to perform something based on any configuration file option you must register a *setup*\nfrom the plugme call and perform them there.\n\nChanging Static Files Behavior\n+++++++++++++++++++++++++++++++++++\n\nBy default every pluggable application serves all the static files available inside\nits public directory as they are. This is performed by a WSGI application which is\nin charge of serving the static files. Since version 0.2.1 it is now possible to\nreplace this application or apply any WSGI middleware to it through the\n``static_middlewares`` option.\n\nFor example you can enable SCSS inside your pluggable application by\ndefining a ``plugme`` function like::\n\n    from tgext.scss import SCSSMiddleware\n\n    def plugme(app_config, options):\n        return dict(appid='plugtest', global_helpers=False, static_middlewares=[SCSSMiddleware])\n  \nAccessing Application Models from Pluggable Apps\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen creating a pluggable application you might often need to\naccess to some models that have been declared inside the\ntarget application where the pluggable app will be mounted.\n\nThe most common use case for this is referencing the User, Group and Permission\nmodels. To do this tgext.pluggable provides an **app_model** object which\nwraps the application model and is initialized before loading the pluggable app.\n\nThis makes possible to access target application models referencing\nthem as **app_model.User** or **app_model.Group** and so on.\nWhile you can guess that the primary key for those models is known\n(for the app_model.User object for example you might consider referencing\nto it as app_model.User.user_id) it is best practice to call the **primary_key**\nfunction provided by tgext.pluggable to get a reference to its column.\n\nThis way it is possibile to declare relations to models which are not\nprovided by your pluggable app::\n\n    from tgext.pluggable import app_model, primary_key\n\n    user_id = Column(Integer, ForeignKey(primary_key(app_model.User)))\n    user = relation(app_model.User)\n\nPluggable Relative Urls\n----------------------------------\n\nIt is possible to generate an url relative to a pluggable mount point\nusing the **plug_url(pluggable, path, params=None, lazy=False)** this\nfunction is also exposed inside the application helpers when a pluggable\nis used. For example to generate an url relative to the *plugtest* pluggable\nit is possible to call plug_url::\n\n    plug_url('plugtest', '/')\n\nTo perform redirects inside a pluggable app the **plug_redirect(pluggable, path, params=None)**\nfunction is provided. This function exposes the same interface as *plug_url* but\nperforms a redirect much like tg.redirect.\n\nInternationalization\n-------------------------------------\n\ntgext.pluggable provides some utilities for to manage text translations inside\npluggables. When ``tg.i18n.ugettext`` or ``tg.i18n.lazy_ugettext`` are used\nthey will lookup for translations inside the Application and when not available\nwill fallback to the translations provided by the pluggable itself.\n \nMessages extration and catalog creation/update for the pluggable work as in TurboGears \nusing Babel. \nJust run inside the pluggable application the ``python setup.py extract_messages``\n, ``python setup.py init_catalog -l LANG`` and ``python setup.py compile_catalog``\ncommands to create a catalog for ``LANG``.\n\nJust distribute the catalogs with your pluggable application to make them\navailable and translated in applications that use it.\n\nManaging Migrations\n-------------------------------------\n\nIt is possible to initialize a migrations repository for a pluggable application.\nThis makes possible to evolve the database at later times for each pluggable application using\nthe `alembic <http://alembic.readthedocs.org/en/latest/tutorial.html#create-a-migration-script>`_ migration\nlibrary for SQLAlchemy.\n\nCreate Migration Repository\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo be able to manage migrations the pluggable has to be initialized with a migration repository\nto perform so, the author of the pluggable application has to run::\n\n    $ gearbox migrate-pluggable plugtest init\n\nThen to create migration scripts run::\n\n    $ gearbox migrate-pluggable plugtest create 'Add column for user_name'\n\nA file named like `2c8c79324a5e_Add_column_for_user_name.py` will be available inside the `migration/versions` directory\nof the pluggable application.\n*Remember to add this directory to your distribution package to make it available to users of your pluggable application*\n\nUsing Migrations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf the pluggable application your are using supports migrations it is possible to apply them\nusing the `upgrade` and `downgrade` commands.\n\nIt is possible to run `upgrade` to move forward::\n\n    $ gearbox migrate-pluggable plugtest upgrade\n    22:11:28,029 INFO  [alembic.migration] Running upgrade None -> 3ca22a16fdcc\n\nOr `downgrade` to revert a migration::\n\n    $ gearbox migrate-pluggable plugtest downgrade\n    22:15:24,004 INFO  [alembic.migration] Running downgrade 3ca22a16fdcc -> None\n\nThe versioning commands support being called on all the pluggables enabled inside your application\nby specifying `all` as the pluggable name. This will load your application to detect the plugged\napps and will run the specified command for each one of them::\n\n    $ gearbox migrate-pluggable all db_version\n    22:15:54,104 INFO  [tgext.pluggable] Plugging plug1\n    22:15:54,105 INFO  [tgext.pluggable] Plugging plug2\n    22:15:54,106 INFO  [tgext.pluggable] Plugging plug3\n    Migrating plug1, plug3, plug2\n    \n    plug1 Migrations\n        Repository '/tmp/PLUGS/plug1/migration'\n        Configuration File 'development.ini'\n        Versioning Table 'plug1_migrate'\n    22:15:54,249 INFO  [alembic.migration] Context impl SQLiteImpl.\n    22:15:54,249 INFO  [alembic.migration] Will assume transactional DDL.\n    Current revision for sqlite:////tmp/provaapp/devdata.db: 4edef05cc346 -> 1ae930148d69 (head), fourth migration\n    \n    plug3 Migrations\n        Repository '/tmp/PLUGS/plug3/migration'\n        Configuration File 'development.ini'\n        Versioning Table 'plug3_migrate'\n    22:15:54,253 INFO  [alembic.migration] Context impl SQLiteImpl.\n    22:15:54,254 INFO  [alembic.migration] Will assume transactional DDL.\n    Current revision for sqlite:////tmp/provaapp/devdata.db: 15819683bb72 -> 453f571f41e4 (head), test migration\n    \n    plug2 Migrations\n        Repository '/tmp/PLUGS/plug2/migration'\n        Configuration File 'development.ini'\n        Versioning Table 'plug2_migrate'\n    22:15:54,258 INFO  [alembic.migration] Context impl SQLiteImpl.\n    22:15:54,259 INFO  [alembic.migration] Will assume transactional DDL.\n    Current revision for sqlite:////tmp/provaapp/devdata.db: 154b4f69cbd1 -> 2c8c79324a5e (head), third migration\n    \n    \n    \n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TurboGears/tgext.pluggable", "keywords": "turbogears2.extension", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tgext.pluggable", "package_url": "https://pypi.org/project/tgext.pluggable/", "platform": "", "project_url": "https://pypi.org/project/tgext.pluggable/", "project_urls": {"Homepage": "https://github.com/TurboGears/tgext.pluggable"}, "release_url": "https://pypi.org/project/tgext.pluggable/0.8.4/", "requires_dist": null, "requires_python": "", "summary": "Plug applications and extensions in a TurboGears2 project", "version": "0.8.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-pluggable-apps\">\n<h2>About Pluggable Apps</h2>\n<p>tgext.pluggable permits to plug extensions and applications inside a TG projects\nmuch like the Django Apps.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>tgext.pluggable can be installed both from pypi or from bitbucket:</p>\n<pre>pip install tgext.pluggable\n</pre>\n<p>should just work for most of the users</p>\n</div>\n<div id=\"plugging-apps\">\n<h2>Plugging Apps</h2>\n<p>In your application <em>config/app_cfg.py</em> import <strong>plug</strong>:</p>\n<pre>from tgext.pluggable import plug\n</pre>\n<p>Then at the <em>end of the file</em> call plug for each pluggable\napplication you want to enable (package_name must be\nalready installed in your python environment):</p>\n<pre>plug(base_config, 'package_name')\n</pre>\n<p>The plug function accepts various optional arguments, for\nexample if the plugged application exposes a controller\nyou can mount it in a different place specifying a different\n<strong>appid</strong>:</p>\n<pre>plug(base_config, 'package_name', 'new_app_id')\n</pre>\n<p>If you want to mount the pluggable application in a subcontroller\nyou can used a dotted <strong>appid</strong>, like <tt>subcontroller.appid</tt>.\nNote that <tt>subcontroller</tt> must exist in RootController.</p>\n<p>Other options include:</p>\n<blockquote>\n<ul>\n<li>plug_helpers (True/False) -&gt; Enable helpers injection</li>\n<li>plug_models (True/False) -&gt; Enable models plugging</li>\n<li>plug_controller (True/False) -&gt; Mount pluggable app root controller</li>\n<li>plug_bootstrap (True/False) -&gt; Enable websetup.bootstrap plugging</li>\n<li>plug_statics (True/False) -&gt; Enable plugged app statics</li>\n<li>rename_tables (True/False) -&gt; Rename pluggable tables by prepending appid.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"relations-with-plugged-apps-models\">\n<h2>Relations with Plugged Apps Models</h2>\n<p>There are cases when you might need to create a relationship or a foreign key\nwith a model which is defined by a pluggable application. As pluggable application\nmodels are loaded after loading your application they are not available at the\ntime your app models are imported.</p>\n<p><tt>tgext.pluggable</tt> provides some utilities to make easier to create relations\nwith models defined by pluggable applications.</p>\n<p>The first step you might want to take is setting the <tt>global_models=True</tt>\nparameter to the <tt>plug</tt> call, this will make all the models declared by the\npluggable application available to you:</p>\n<pre>plug(base_config, 'package_name', global_models=True)\n</pre>\n<p>After the specified pluggable application is plugged, the models will be available\ninside your code through the <tt>tgext.pluggable.app_model</tt> object.</p>\n<p>Then you can create foreign keys to the desired model using the\n<tt>tgext.pluggable.LazyForeignKey</tt> class and declare relations using the lazy\nversion of <tt>sqlalchemy.orm.relation</tt>:</p>\n<pre>from tgext.pluggable import app_model, LazyForeignKey\n\nclass AdditionalInfo(DeclarativeBase):\n    __tablename__ = 'sample_model'\n\n    uid = Column(Integer, primary_key=True)\n    data = Column(Unicode(255), nullable=False)\n\n    plugged_model_id = Column(Integer, LazyForeignKey(lambda:app_model.PluggedModel.uid))\n    plugged_model = relation(lambda: app_model.PluggedModel)\n</pre>\n</div>\n<div id=\"partials\">\n<h2>Partials</h2>\n<p>tgext.pluggables provides a bunch of utilities to work with partials.\nPartials in tgext.pluggable can be declared as a function or TGController\nsubclass method that has an <em>@expose</em> decorator. Those partials can lately\nbe rendered with:</p>\n<pre>${h.call_partial('module:function_name', arg1='Something')}\n</pre>\n<p>In the case of a class method:</p>\n<pre>${h.call_partial('module.Class:method', arg1='Something')}\n</pre>\n<p>The quickstarted pluggable application provides an example partial:</p>\n<pre>from tg import expose\n\n@expose('plugappname.templates.little_partial')\ndef something(name):\n    return dict(name=name)\n</pre>\n<p>which can be rendered using:</p>\n<pre>${h.call_partial('plugappname.partials:something', name='Partial')}\n</pre>\n</div>\n<div id=\"replacing-templates\">\n<h2>Replacing Templates</h2>\n<p>tgext.pluggable provides a function to replace templates.\nThis is useful when you want to override the template that an application\nyou plugged in is exposing. To override call <strong>replace_template</strong> inside\nyour application config:</p>\n<pre>from tgext.pluggable import replace_template\n\nreplace_template(base_config, 'myapp.templates.about', 'myapp.templates.index')\n</pre>\n<p><strong>replace_template</strong> will work even with tgext.pluggable partials, but\nwon\u2019t work with templates rendered directly calling the <strong>render</strong> method.</p>\n<p>Calls to replace_template must be performed before the application has started.</p>\n</div>\n<div id=\"patching-templates\">\n<h2>Patching Templates</h2>\n<p>tgext.pluggable provides a function to patch templates, the result\nof a template rendering will be passed through a list of operations which will\nmake possible to alter the rendering result.</p>\n<p>This behavior is much inspired by <strong>Deliverance</strong> <a href=\"http://pythonhosted.org/Deliverance\" rel=\"nofollow\">http://pythonhosted.org/Deliverance</a>\nmeant for much simpler use cases. The most common usage is for small changes to templates\nof plugged applications. For advanced manipulations using <cite>replace_template</cite> is suggested\nas it\u2019s both faster and easier to maintain.</p>\n<p>Template patching is enabled by using the <cite>load_template_patches</cite> function:</p>\n<pre>from tgext.pluggable import load_template_patches\n\nload_template_patches(base_config)\n</pre>\n<p>Supposing your project is inside a Python distribution named <strong>myapp</strong> this will\nload the <tt>template_patches.xml</tt> file from the root of the distribution and will\napply all the specified patches.</p>\n<p>To load template patches from a python module (or pluggable) use:</p>\n<pre>load_template_patches(base_config, 'plugname')\n</pre>\n<p>You can use previous expression even to load patches from your own application\nin case the distribution automatic detection failed.</p>\n<p>Template patching format is an xml file in the form of:</p>\n<pre>&lt;patches&gt;\n  &lt;patch template=\"tgext.crud.templates.get_all\"&gt;\n    &lt;content selector=\"#crud_content &gt; h1\" template=\"myapp.templates.replacements.crud_title\" /&gt;\n    &lt;append  selector=\"#crud_content &gt; h1\" template=\"myapp.templates.replacements.crud_subtitle\" /&gt;\n    &lt;prepend selector=\"#crud_content &gt; h1\" template=\"myapp.templates.replacements.crud_superscript\" /&gt;\n    &lt;replace selector=\"#crud_btn_new &gt; .add_link\" template=\"\" /&gt;\n  &lt;/patch&gt;\n&lt;/patches&gt;\n</pre>\n<p>Each action listed inside the patch will be performed whenever the specified template\nis rendered, the template associated to the action will be used as the content of the templacement\nand the same data available to the patched template will be available to the action template too.\nAvailable actions are:</p>\n<blockquote>\n<ul>\n<li><cite>content</cite> - replaces the content of tags identified by the selector</li>\n<li><cite>append</cite> - appends after the tags identified by the selector</li>\n<li><cite>prepend</cite> - prepends before the tags identified by the selector</li>\n<li><cite>replace</cite> - replaces the tags identified bt the selector.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"creating-pluggable-apps\">\n<h2>Creating Pluggable Apps</h2>\n<p>tgext.pluggable provides a <strong>quickstart-pluggable</strong> command\nto create a new pluggable application:</p>\n<pre>$ gearbox quickstart-pluggable plugtest\nEnter package name [plugtest]:\n...\n</pre>\n<p>The quickstarted application will provide an example on how to use\nmodels, helpers, bootstrap, controllers and statics.</p>\n<p>In the previous example the pluggable application can be enabled\ninside any TurboGears using:</p>\n<pre>plug(base_config, 'plugtest')\n</pre>\n<p>After enabling the <em>plugtest</em> application you should run\n<em>gearbox setup-app</em> inside your TurboGears project\nto create the sample model. Then you can access the sample\napplication page though <em>http://localhost:8080/plugtest</em></p>\n<div id=\"the-plugme-entry-point\">\n<h3>The plugme Entry Point</h3>\n<p>Pluggable applications are required to implement a <strong>plugme(app_config, options)</strong> entry\npoint which will be called when plugging the application.</p>\n<p>The plugme action is called before TurboGears configuration has been loaded so that\nit is possible to register more pluggables inside the plugme hook. This way a pluggable\ncan plug any dependency it requires just by calling tgext.pluggable.plug inside its own\n<em>plugme</em> function.</p>\n<p>Any options passed to the plug call will be available inside the options dictionary,\nother parts of the pluggable applications like controllers, models and so on will be\nimported after the call to plugme so that plugme can set any configuration options that\nwill drive the behavior of the other parts.</p>\n<p>Keep in mind that as plugme is called before loading the TurboGears configuration if you\nneed to perform something based on any configuration file option you must register a <em>setup</em>\nfrom the plugme call and perform them there.</p>\n<div id=\"changing-static-files-behavior\">\n<h4>Changing Static Files Behavior</h4>\n<p>By default every pluggable application serves all the static files available inside\nits public directory as they are. This is performed by a WSGI application which is\nin charge of serving the static files. Since version 0.2.1 it is now possible to\nreplace this application or apply any WSGI middleware to it through the\n<tt>static_middlewares</tt> option.</p>\n<p>For example you can enable SCSS inside your pluggable application by\ndefining a <tt>plugme</tt> function like:</p>\n<pre>from tgext.scss import SCSSMiddleware\n\ndef plugme(app_config, options):\n    return dict(appid='plugtest', global_helpers=False, static_middlewares=[SCSSMiddleware])\n</pre>\n</div>\n</div>\n<div id=\"accessing-application-models-from-pluggable-apps\">\n<h3>Accessing Application Models from Pluggable Apps</h3>\n<p>When creating a pluggable application you might often need to\naccess to some models that have been declared inside the\ntarget application where the pluggable app will be mounted.</p>\n<p>The most common use case for this is referencing the User, Group and Permission\nmodels. To do this tgext.pluggable provides an <strong>app_model</strong> object which\nwraps the application model and is initialized before loading the pluggable app.</p>\n<p>This makes possible to access target application models referencing\nthem as <strong>app_model.User</strong> or <strong>app_model.Group</strong> and so on.\nWhile you can guess that the primary key for those models is known\n(for the app_model.User object for example you might consider referencing\nto it as app_model.User.user_id) it is best practice to call the <strong>primary_key</strong>\nfunction provided by tgext.pluggable to get a reference to its column.</p>\n<p>This way it is possibile to declare relations to models which are not\nprovided by your pluggable app:</p>\n<pre>from tgext.pluggable import app_model, primary_key\n\nuser_id = Column(Integer, ForeignKey(primary_key(app_model.User)))\nuser = relation(app_model.User)\n</pre>\n</div>\n</div>\n<div id=\"pluggable-relative-urls\">\n<h2>Pluggable Relative Urls</h2>\n<p>It is possible to generate an url relative to a pluggable mount point\nusing the <strong>plug_url(pluggable, path, params=None, lazy=False)</strong> this\nfunction is also exposed inside the application helpers when a pluggable\nis used. For example to generate an url relative to the <em>plugtest</em> pluggable\nit is possible to call plug_url:</p>\n<pre>plug_url('plugtest', '/')\n</pre>\n<p>To perform redirects inside a pluggable app the <strong>plug_redirect(pluggable, path, params=None)</strong>\nfunction is provided. This function exposes the same interface as <em>plug_url</em> but\nperforms a redirect much like tg.redirect.</p>\n</div>\n<div id=\"internationalization\">\n<h2>Internationalization</h2>\n<p>tgext.pluggable provides some utilities for to manage text translations inside\npluggables. When <tt>tg.i18n.ugettext</tt> or <tt>tg.i18n.lazy_ugettext</tt> are used\nthey will lookup for translations inside the Application and when not available\nwill fallback to the translations provided by the pluggable itself.</p>\n<p>Messages extration and catalog creation/update for the pluggable work as in TurboGears\nusing Babel.\nJust run inside the pluggable application the <tt>python setup.py extract_messages</tt>\n, <tt>python setup.py init_catalog <span class=\"pre\">-l</span> LANG</tt> and <tt>python setup.py compile_catalog</tt>\ncommands to create a catalog for <tt>LANG</tt>.</p>\n<p>Just distribute the catalogs with your pluggable application to make them\navailable and translated in applications that use it.</p>\n</div>\n<div id=\"managing-migrations\">\n<h2>Managing Migrations</h2>\n<p>It is possible to initialize a migrations repository for a pluggable application.\nThis makes possible to evolve the database at later times for each pluggable application using\nthe <a href=\"http://alembic.readthedocs.org/en/latest/tutorial.html#create-a-migration-script\" rel=\"nofollow\">alembic</a> migration\nlibrary for SQLAlchemy.</p>\n<div id=\"create-migration-repository\">\n<h3>Create Migration Repository</h3>\n<p>To be able to manage migrations the pluggable has to be initialized with a migration repository\nto perform so, the author of the pluggable application has to run:</p>\n<pre>$ gearbox migrate-pluggable plugtest init\n</pre>\n<p>Then to create migration scripts run:</p>\n<pre>$ gearbox migrate-pluggable plugtest create 'Add column for user_name'\n</pre>\n<p>A file named like <cite>2c8c79324a5e_Add_column_for_user_name.py</cite> will be available inside the <cite>migration/versions</cite> directory\nof the pluggable application.\n<em>Remember to add this directory to your distribution package to make it available to users of your pluggable application</em></p>\n</div>\n<div id=\"using-migrations\">\n<h3>Using Migrations</h3>\n<p>If the pluggable application your are using supports migrations it is possible to apply them\nusing the <cite>upgrade</cite> and <cite>downgrade</cite> commands.</p>\n<p>It is possible to run <cite>upgrade</cite> to move forward:</p>\n<pre>$ gearbox migrate-pluggable plugtest upgrade\n22:11:28,029 INFO  [alembic.migration] Running upgrade None -&gt; 3ca22a16fdcc\n</pre>\n<p>Or <cite>downgrade</cite> to revert a migration:</p>\n<pre>$ gearbox migrate-pluggable plugtest downgrade\n22:15:24,004 INFO  [alembic.migration] Running downgrade 3ca22a16fdcc -&gt; None\n</pre>\n<p>The versioning commands support being called on all the pluggables enabled inside your application\nby specifying <cite>all</cite> as the pluggable name. This will load your application to detect the plugged\napps and will run the specified command for each one of them:</p>\n<pre>$ gearbox migrate-pluggable all db_version\n22:15:54,104 INFO  [tgext.pluggable] Plugging plug1\n22:15:54,105 INFO  [tgext.pluggable] Plugging plug2\n22:15:54,106 INFO  [tgext.pluggable] Plugging plug3\nMigrating plug1, plug3, plug2\n\nplug1 Migrations\n    Repository '/tmp/PLUGS/plug1/migration'\n    Configuration File 'development.ini'\n    Versioning Table 'plug1_migrate'\n22:15:54,249 INFO  [alembic.migration] Context impl SQLiteImpl.\n22:15:54,249 INFO  [alembic.migration] Will assume transactional DDL.\nCurrent revision for sqlite:////tmp/provaapp/devdata.db: 4edef05cc346 -&gt; 1ae930148d69 (head), fourth migration\n\nplug3 Migrations\n    Repository '/tmp/PLUGS/plug3/migration'\n    Configuration File 'development.ini'\n    Versioning Table 'plug3_migrate'\n22:15:54,253 INFO  [alembic.migration] Context impl SQLiteImpl.\n22:15:54,254 INFO  [alembic.migration] Will assume transactional DDL.\nCurrent revision for sqlite:////tmp/provaapp/devdata.db: 15819683bb72 -&gt; 453f571f41e4 (head), test migration\n\nplug2 Migrations\n    Repository '/tmp/PLUGS/plug2/migration'\n    Configuration File 'development.ini'\n    Versioning Table 'plug2_migrate'\n22:15:54,258 INFO  [alembic.migration] Context impl SQLiteImpl.\n22:15:54,259 INFO  [alembic.migration] Will assume transactional DDL.\nCurrent revision for sqlite:////tmp/provaapp/devdata.db: 154b4f69cbd1 -&gt; 2c8c79324a5e (head), third migration\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5239354, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a11a2b0111652fa51d5bce20e7481851", "sha256": "f82f783fb5551ad4cb1af6c64ab93a64a96259db62d18ddcd30413db23dbc3bb"}, "downloads": -1, "filename": "tgext.pluggable-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a11a2b0111652fa51d5bce20e7481851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10357, "upload_time": "2012-01-07T20:30:32", "upload_time_iso_8601": "2012-01-07T20:30:32.332490Z", "url": "https://files.pythonhosted.org/packages/6d/ef/67de232e2b914142485e3972fcc98670de3fedca015bb835f72769427914/tgext.pluggable-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6f3b7f7b2a3c2aacbde2aa23c95ade20", "sha256": "f1b7fa6f3535799ab067ac2778dfbabbffbe457ffcddd25c186c532f42d4c2de"}, "downloads": -1, "filename": "tgext.pluggable-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6f3b7f7b2a3c2aacbde2aa23c95ade20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11915, "upload_time": "2012-01-09T23:23:39", "upload_time_iso_8601": "2012-01-09T23:23:39.976511Z", "url": "https://files.pythonhosted.org/packages/9e/04/4b68c2d01fa9aa70b83116977113cda431529ca89207aa0e2a68762f91e2/tgext.pluggable-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "593f975122f5ce030f8aeef13245b407", "sha256": "64bbc9d76d79794e907148daf26785313588de7726255260613bc23e1e94973f"}, "downloads": -1, "filename": "tgext.pluggable-0.0.3.tar.gz", "has_sig": false, "md5_digest": "593f975122f5ce030f8aeef13245b407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11913, "upload_time": "2012-01-10T12:23:16", "upload_time_iso_8601": "2012-01-10T12:23:16.512951Z", "url": "https://files.pythonhosted.org/packages/a2/cb/4e7b10f06cd9113b1e511a7c53e2de90c69d9b397f81fc1d53cae7b051f9/tgext.pluggable-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fa57fe537335625e182c477915d0e42f", "sha256": "2d78578cc6af1f79e0bc39ccd6f4e0550be20dc7e1b93d5570de42fb5d688d69"}, "downloads": -1, "filename": "tgext.pluggable-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fa57fe537335625e182c477915d0e42f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13496, "upload_time": "2012-01-13T13:00:12", "upload_time_iso_8601": "2012-01-13T13:00:12.220913Z", "url": "https://files.pythonhosted.org/packages/43/70/c7dbaa42534e90e82f8a7c37d09ad30960bcc9f74d5eed99e37a41b4e935/tgext.pluggable-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "661c546ec6aaef4451e4bd70132051cd", "sha256": "664c7c7ff83e48829554e0fe3c38b2adc5d8d6ea0da717d378af7a93c7507df0"}, "downloads": -1, "filename": "tgext.pluggable-0.0.5.tar.gz", "has_sig": false, "md5_digest": "661c546ec6aaef4451e4bd70132051cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16387, "upload_time": "2012-06-26T12:20:03", "upload_time_iso_8601": "2012-06-26T12:20:03.316089Z", "url": "https://files.pythonhosted.org/packages/3d/3e/f8b6a94927a116f77e16f576cfd70fd78ea03808c81619466c463d2e2175/tgext.pluggable-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "8d70d06e66808e9950f73ce10c84db36", "sha256": "4f7ceffc74b7705d1b1d367c4fd0d1b4287d462d7ca60d96cc45e75893e59e08"}, "downloads": -1, "filename": "tgext.pluggable-0.0.6.tar.gz", "has_sig": false, "md5_digest": "8d70d06e66808e9950f73ce10c84db36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16383, "upload_time": "2012-07-12T14:38:56", "upload_time_iso_8601": "2012-07-12T14:38:56.261407Z", "url": "https://files.pythonhosted.org/packages/8c/b2/809d13941ac1900a7d8b0c0aada5040957d74a37aa6c19f9d032d3dce469/tgext.pluggable-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "acf9cfbdf10da3231c5a37415a3179a2", "sha256": "79a57d5c8823eac82128dfed26411a13190d7a1600495a8dd6ce8a27dd3b9e5c"}, "downloads": -1, "filename": "tgext.pluggable-0.0.7.tar.gz", "has_sig": false, "md5_digest": "acf9cfbdf10da3231c5a37415a3179a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14080, "upload_time": "2012-08-07T17:54:30", "upload_time_iso_8601": "2012-08-07T17:54:30.849035Z", "url": "https://files.pythonhosted.org/packages/75/b6/68cfda4d9c7138ba9b0ad56f136945c55720695171f37ae184e29d765a51/tgext.pluggable-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "a6a2ed9fe6e03a7258bbccbfcce1c197", "sha256": "3862885c2a40e7105c1dc2e65db0dd88e81d2a3e3651d6869d5379f984d01315"}, "downloads": -1, "filename": "tgext.pluggable-0.0.8.tar.gz", "has_sig": false, "md5_digest": "a6a2ed9fe6e03a7258bbccbfcce1c197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14099, "upload_time": "2012-08-17T16:21:32", "upload_time_iso_8601": "2012-08-17T16:21:32.189685Z", "url": "https://files.pythonhosted.org/packages/2c/eb/f1e78bc77fb61395c84b4325219d57138ac0fe75a2e5c806a7c005af216c/tgext.pluggable-0.0.8.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fd2f801051ef5fa5aaab43459ee16f5b", "sha256": "f7b48ff088d8f285f00d74a6cf454e94ce889fe85fd0d26ffc19eff37792b313"}, "downloads": -1, "filename": "tgext.pluggable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fd2f801051ef5fa5aaab43459ee16f5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14859, "upload_time": "2012-09-05T20:04:00", "upload_time_iso_8601": "2012-09-05T20:04:00.014760Z", "url": "https://files.pythonhosted.org/packages/bc/bd/15324b8bca071042f668de8119a3321e335a6e3a168adbb222706e5e23fe/tgext.pluggable-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7ec09359e791b7a7ea188b600e3add57", "sha256": "4e23faf0fbd4f6602d09ddd3d0ae5631cbdcc9a8a12b02f9d8e58632fa137f32"}, "downloads": -1, "filename": "tgext.pluggable-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7ec09359e791b7a7ea188b600e3add57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14924, "upload_time": "2012-10-11T12:11:25", "upload_time_iso_8601": "2012-10-11T12:11:25.150095Z", "url": "https://files.pythonhosted.org/packages/17/40/64641473cb5d26598088957f1e4edc6fb1c21565cd5bdcbaeb37ae1a2ab2/tgext.pluggable-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "24a662c88c5616eae0915e982bb0ec72", "sha256": "1bdf71e214bd0c51ff69b8d41b64dfc7ad92dd2f120baf6fb8b9b4b301f78d7f"}, "downloads": -1, "filename": "tgext.pluggable-0.1.2.tar.gz", "has_sig": false, "md5_digest": "24a662c88c5616eae0915e982bb0ec72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15001, "upload_time": "2012-11-27T11:42:28", "upload_time_iso_8601": "2012-11-27T11:42:28.339244Z", "url": "https://files.pythonhosted.org/packages/6f/f1/d0cf8812fd1114f4ba8ea6765475068e899f66b4eecb9f551fc206b4ceef/tgext.pluggable-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "11e67a66087b231cf2b2f0c937a40841", "sha256": "540fda7409ca6ad7b11bf35c1a4014da388a9e36b1e698dc8d2189e3f8e928a9"}, "downloads": -1, "filename": "tgext.pluggable-0.1.3.tar.gz", "has_sig": false, "md5_digest": "11e67a66087b231cf2b2f0c937a40841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20956, "upload_time": "2013-02-27T18:57:50", "upload_time_iso_8601": "2013-02-27T18:57:50.389556Z", "url": "https://files.pythonhosted.org/packages/e1/4d/60b1616e9c966783e5fe43fa9684e46a8c177df876a237ad8f504c61ee1c/tgext.pluggable-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "037a4584583f38f906bcb8b28932bf4b", "sha256": "30abbf13ff682e84235ae280ea5cbc10ce4488c0c386a5fed81fafeec6d20317"}, "downloads": -1, "filename": "tgext.pluggable-0.2.0.tar.gz", "has_sig": false, "md5_digest": "037a4584583f38f906bcb8b28932bf4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23697, "upload_time": "2013-05-01T14:50:30", "upload_time_iso_8601": "2013-05-01T14:50:30.447641Z", "url": "https://files.pythonhosted.org/packages/a3/4b/a8a5850546cb9be627d3a816710f1310ba805058026c31a0ca5995007e3a/tgext.pluggable-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f1a56a5b45ff38f58120b5d51d17e793", "sha256": "2a3ad7a4aa0347386041f1998f3159d7670c978122b7ba7162851050475d0222"}, "downloads": -1, "filename": "tgext.pluggable-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f1a56a5b45ff38f58120b5d51d17e793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23722, "upload_time": "2013-05-21T21:53:26", "upload_time_iso_8601": "2013-05-21T21:53:26.594514Z", "url": "https://files.pythonhosted.org/packages/4e/58/a71b610f2f399f370a9a3a8744d5e62ef8bd76b237b3920e03c3c436d126/tgext.pluggable-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "be61cd3e24769eb7039ec5a5f512a508", "sha256": "d50a4b1e35e2675dbd465778eff99692f5224dba3265817043a156d121174a0f"}, "downloads": -1, "filename": "tgext.pluggable-0.3.0.tar.gz", "has_sig": false, "md5_digest": "be61cd3e24769eb7039ec5a5f512a508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26054, "upload_time": "2014-01-10T14:26:39", "upload_time_iso_8601": "2014-01-10T14:26:39.236772Z", "url": "https://files.pythonhosted.org/packages/7e/54/ef9b4fa8976a733f5152c73e84fabfb4a5b51bd9dd1738aeebfdb5762449/tgext.pluggable-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f03fe9340940d25331be8fd0db20941d", "sha256": "b9e737b5b16ee9be452efa6e27e8936ee5575091a3dd3eca529e0cd1dc6114b8"}, "downloads": -1, "filename": "tgext.pluggable-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f03fe9340940d25331be8fd0db20941d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26398, "upload_time": "2014-01-14T00:26:05", "upload_time_iso_8601": "2014-01-14T00:26:05.168042Z", "url": "https://files.pythonhosted.org/packages/f6/32/d5a4033600edca6674beded5af4a112f97d4914a28ab9aeaeae4f27c792d/tgext.pluggable-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c60aad7e6af8c6e63c43354cd4c26632", "sha256": "cc222f228b666e9e878a6bec4c67e603ebf2aeb0694d576ec8caee42b85f179c"}, "downloads": -1, "filename": "tgext.pluggable-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c60aad7e6af8c6e63c43354cd4c26632", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26779, "upload_time": "2014-02-11T23:12:40", "upload_time_iso_8601": "2014-02-11T23:12:40.897113Z", "url": "https://files.pythonhosted.org/packages/dd/22/849a6c65bed996f01171b8929752ae0237db0cfb2f57cfb70307cf6d428a/tgext.pluggable-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "4e809579e0e11cac93c77919dc27f68b", "sha256": "9fcc796f5c3991fe8e23dd460d5103c68c55c4e54c08d093ae80b8c1c3a31736"}, "downloads": -1, "filename": "tgext.pluggable-0.4.1.tar.gz", "has_sig": false, "md5_digest": "4e809579e0e11cac93c77919dc27f68b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26839, "upload_time": "2014-03-10T15:34:34", "upload_time_iso_8601": "2014-03-10T15:34:34.704794Z", "url": "https://files.pythonhosted.org/packages/8c/24/6e3c5854a097d5215ff0f79cb2b8c5ea5ada0877577bb36a1c40db4ef853/tgext.pluggable-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "02e61c5a3cff2ccf946f045433d88f0e", "sha256": "8964644b9a7e10462534c7c597e0b75b00afa08713b9ede98edca31682adaac4"}, "downloads": -1, "filename": "tgext.pluggable-0.4.2.tar.gz", "has_sig": false, "md5_digest": "02e61c5a3cff2ccf946f045433d88f0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24276, "upload_time": "2014-03-20T11:17:32", "upload_time_iso_8601": "2014-03-20T11:17:32.766823Z", "url": "https://files.pythonhosted.org/packages/78/96/a0a5be50675e0cec5b39186073565edd111efeff7dd5e378ded41c9ddef4/tgext.pluggable-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "f9c45578c2647775c0b00c8c27872966", "sha256": "04fac6e7cf1dcef2ab3abec09151c13fecd3fa98da377db1def08ccbef585851"}, "downloads": -1, "filename": "tgext.pluggable-0.5.0.tar.gz", "has_sig": false, "md5_digest": "f9c45578c2647775c0b00c8c27872966", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28682, "upload_time": "2014-04-13T21:37:15", "upload_time_iso_8601": "2014-04-13T21:37:15.568222Z", "url": "https://files.pythonhosted.org/packages/ac/75/89f30fa7dce3a6c0fde68adf51803d6ab6b0f87e22c746f6c2b575316c8b/tgext.pluggable-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6b457181d560164c5be211cf9bd1e2ef", "sha256": "c8231f02c04af31a874b97701fac8b839bca96695d4e03413fcaad17aad6506e"}, "downloads": -1, "filename": "tgext.pluggable-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6b457181d560164c5be211cf9bd1e2ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31693, "upload_time": "2014-05-20T08:59:30", "upload_time_iso_8601": "2014-05-20T08:59:30.747546Z", "url": "https://files.pythonhosted.org/packages/a0/5d/869bedd7a997f3ca3c66169784ddd1f3903c2ccf7eed99ee2f06d9cae38b/tgext.pluggable-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "ca66796cef6de85f257aba29535c9ccf", "sha256": "6551f68d3df372f54aee4c5c281a54fe20bc85f93ee94a938c6ae220528c54a8"}, "downloads": -1, "filename": "tgext.pluggable-0.5.2.tar.gz", "has_sig": false, "md5_digest": "ca66796cef6de85f257aba29535c9ccf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31707, "upload_time": "2014-05-30T11:39:27", "upload_time_iso_8601": "2014-05-30T11:39:27.154959Z", "url": "https://files.pythonhosted.org/packages/e0/2d/80d78d35754b126b862f3b70e237dc80d49dbba3441b5b4080186cdac06e/tgext.pluggable-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "dcaaf4973014407d0acf0c4c0ca1f4f5", "sha256": "549e07b1e8238cf2f725fae97580a926de39d07e5ca2bbb76897a02256354093"}, "downloads": -1, "filename": "tgext.pluggable-0.5.3.tar.gz", "has_sig": false, "md5_digest": "dcaaf4973014407d0acf0c4c0ca1f4f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31798, "upload_time": "2015-02-23T22:09:42", "upload_time_iso_8601": "2015-02-23T22:09:42.624490Z", "url": "https://files.pythonhosted.org/packages/b5/72/5bfdddba802f41e884df6968a8943f27a2937574ed554177e68b3d9c94dd/tgext.pluggable-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "caa08672714e1ea0900319e1cf05d457", "sha256": "233fed27a22c99542264e49f7fd16c3e5b8881db53117cf5428464a585cc291e"}, "downloads": -1, "filename": "tgext.pluggable-0.5.4.tar.gz", "has_sig": false, "md5_digest": "caa08672714e1ea0900319e1cf05d457", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31794, "upload_time": "2015-02-23T22:15:35", "upload_time_iso_8601": "2015-02-23T22:15:35.307414Z", "url": "https://files.pythonhosted.org/packages/ec/6e/c316ae7e513144e0ee9cf35813436783ad0bbee65cd8d029f0b2d50a4e80/tgext.pluggable-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "5cc1b22a25abc4053ce37469e6605108", "sha256": "c96df50e840cb2e5c393046eeb4faf0ecb0f622184d3b2126df596652950af57"}, "downloads": -1, "filename": "tgext.pluggable-0.5.5.tar.gz", "has_sig": false, "md5_digest": "5cc1b22a25abc4053ce37469e6605108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31910, "upload_time": "2015-11-06T16:05:55", "upload_time_iso_8601": "2015-11-06T16:05:55.262908Z", "url": "https://files.pythonhosted.org/packages/ea/76/6049e7e231bbe299697deff5c7c925a9e69be704b463570e9d5149651f50/tgext.pluggable-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "47507dbad9c617e7f99bb9857d4dbed0", "sha256": "3353a307ab03fb949a51ee39c1fa7447c9d6446881e69adf73f666139ae9ff64"}, "downloads": -1, "filename": "tgext.pluggable-0.5.6.tar.gz", "has_sig": false, "md5_digest": "47507dbad9c617e7f99bb9857d4dbed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31936, "upload_time": "2016-03-04T22:59:20", "upload_time_iso_8601": "2016-03-04T22:59:20.037248Z", "url": "https://files.pythonhosted.org/packages/da/37/1ab11dade8f5efec3dc8980461d546034a98c353d3578932e04a3d7f2b18/tgext.pluggable-0.5.6.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "bcbcc392d574f9376b5cc7b133750d64", "sha256": "8fa51bd56e8f2403921f7f81112b839bfa2b8594252dbb0e322b4453a19d796c"}, "downloads": -1, "filename": "tgext.pluggable-0.6.0.tar.gz", "has_sig": false, "md5_digest": "bcbcc392d574f9376b5cc7b133750d64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32856, "upload_time": "2016-08-11T20:52:51", "upload_time_iso_8601": "2016-08-11T20:52:51.232734Z", "url": "https://files.pythonhosted.org/packages/5e/ca/51285fbb869d5bc05e0f55c6f8f6644b9d80d08dccefe2a132fc778cc250/tgext.pluggable-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "b58dae57c34ca6123c67b9774083a697", "sha256": "f5a08cb850ff12584af716f5fe01d4a9ab625f403f2ad09423f5bda4cd125dbb"}, "downloads": -1, "filename": "tgext.pluggable-0.6.1.tar.gz", "has_sig": false, "md5_digest": "b58dae57c34ca6123c67b9774083a697", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33058, "upload_time": "2016-09-02T17:18:43", "upload_time_iso_8601": "2016-09-02T17:18:43.303048Z", "url": "https://files.pythonhosted.org/packages/b4/3e/2a5c6ff29a584418c82d7d42e72f3cabfa409ad4f7f69f53ce865dce711c/tgext.pluggable-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "67d4eddce10b92d13ecc18c0eb2f6fef", "sha256": "6f3efb8d77e6cbf5eeaddb7bfb6a05d620ccc421b3b9ff109fb0d9ad58265a56"}, "downloads": -1, "filename": "tgext.pluggable-0.6.2.tar.gz", "has_sig": false, "md5_digest": "67d4eddce10b92d13ecc18c0eb2f6fef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33095, "upload_time": "2016-09-11T15:19:57", "upload_time_iso_8601": "2016-09-11T15:19:57.045909Z", "url": "https://files.pythonhosted.org/packages/65/f8/bc427e6ef40a7189e9d9e4aedc2d46be90658e35af9ae818e8ebc8056bbd/tgext.pluggable-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "98a023b6ca04765224961d4b1e766191", "sha256": "c96bac3b2079afe53266698d9bf9f4d220a0983bb84a3deff0ae3c753fe6cea9"}, "downloads": -1, "filename": "tgext.pluggable-0.7.0.tar.gz", "has_sig": false, "md5_digest": "98a023b6ca04765224961d4b1e766191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33292, "upload_time": "2017-05-27T14:01:53", "upload_time_iso_8601": "2017-05-27T14:01:53.366928Z", "url": "https://files.pythonhosted.org/packages/bb/33/5159a1280af11cd3544dfdbc42f2a46a7e8b984d00def978e81257ac886d/tgext.pluggable-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "e3df9c683b915d7e186df4a0d8c385d4", "sha256": "04f700cec4e92a974239840c1a7e4bf6946a33ce35227c81a4331f1ca0b7a766"}, "downloads": -1, "filename": "tgext.pluggable-0.7.1.tar.gz", "has_sig": false, "md5_digest": "e3df9c683b915d7e186df4a0d8c385d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33384, "upload_time": "2017-10-11T08:56:26", "upload_time_iso_8601": "2017-10-11T08:56:26.207495Z", "url": "https://files.pythonhosted.org/packages/83/79/671c760cc34a665c8b25f01b4f34b3dd9d75b5d239d7133a04bcd6c13757/tgext.pluggable-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "cf6e450a84f711578ff215bd068f26f5", "sha256": "09bb30173c38af7d5ab7d1aabfd9f01e29dfeafadafafaa06e25ca07f213973b"}, "downloads": -1, "filename": "tgext.pluggable-0.7.2.tar.gz", "has_sig": false, "md5_digest": "cf6e450a84f711578ff215bd068f26f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33448, "upload_time": "2018-02-06T14:37:29", "upload_time_iso_8601": "2018-02-06T14:37:29.204684Z", "url": "https://files.pythonhosted.org/packages/e8/fb/df6251d7296b0a80049bfa2a69eab6e3ab583a4e8cf9fadafd23a125d322/tgext.pluggable-0.7.2.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "d5c9206e3a13cf65a78916f25e9a0eb3", "sha256": "567ee93915857cf4eb9808db6a60bb99551c1a2befaed592b6417db0c8965ec5"}, "downloads": -1, "filename": "tgext.pluggable-0.8.0.tar.gz", "has_sig": false, "md5_digest": "d5c9206e3a13cf65a78916f25e9a0eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30566, "upload_time": "2019-01-05T23:43:47", "upload_time_iso_8601": "2019-01-05T23:43:47.421614Z", "url": "https://files.pythonhosted.org/packages/69/02/11c19f3be63a32b2fc79448475fd01acba87a81bf67ae68f3a450ca7581b/tgext.pluggable-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3de03cc7c43b789e488b17cd195d63ad", "sha256": "3f15636fdca357269d946428b0e6289a0cd552613577810664325a66d5e1cf7b"}, "downloads": -1, "filename": "tgext.pluggable-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3de03cc7c43b789e488b17cd195d63ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34339, "upload_time": "2019-02-12T10:50:19", "upload_time_iso_8601": "2019-02-12T10:50:19.228266Z", "url": "https://files.pythonhosted.org/packages/01/83/4a7c744c01913af6a0bc07736ce37304db9ff3758a76b68157a5d39aad5d/tgext.pluggable-0.8.1.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "09eae1bec57c4e15ed9bb3cddb7c0240", "sha256": "2dee37ccb058998e2660243dd18110ffe82b332d0c27f6336eff1a0e2ead0b16"}, "downloads": -1, "filename": "tgext.pluggable-0.8.3.tar.gz", "has_sig": false, "md5_digest": "09eae1bec57c4e15ed9bb3cddb7c0240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30930, "upload_time": "2019-04-11T20:59:40", "upload_time_iso_8601": "2019-04-11T20:59:40.455691Z", "url": "https://files.pythonhosted.org/packages/28/bb/d83e0a168585695739ef7a6a1b5c697da444b4c5e17411488ee57971acf1/tgext.pluggable-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "465309e33d17642f2163782b06761937", "sha256": "6beb534e66ec33949045c7360bddd4314226057e1b48379bea799dc774f9fe07"}, "downloads": -1, "filename": "tgext.pluggable-0.8.4.tar.gz", "has_sig": false, "md5_digest": "465309e33d17642f2163782b06761937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34748, "upload_time": "2019-05-07T18:30:08", "upload_time_iso_8601": "2019-05-07T18:30:08.592807Z", "url": "https://files.pythonhosted.org/packages/0b/8b/398a3477c641eba51f492c4dd8122471d3545e63821e905fea79308824d2/tgext.pluggable-0.8.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "465309e33d17642f2163782b06761937", "sha256": "6beb534e66ec33949045c7360bddd4314226057e1b48379bea799dc774f9fe07"}, "downloads": -1, "filename": "tgext.pluggable-0.8.4.tar.gz", "has_sig": false, "md5_digest": "465309e33d17642f2163782b06761937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34748, "upload_time": "2019-05-07T18:30:08", "upload_time_iso_8601": "2019-05-07T18:30:08.592807Z", "url": "https://files.pythonhosted.org/packages/0b/8b/398a3477c641eba51f492c4dd8122471d3545e63821e905fea79308824d2/tgext.pluggable-0.8.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:14 2020"}