{"info": {"author": "Dreas Nielsen", "author_email": "dreas.nielsen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2.7", "Topic :: Software Development"], "description": "This library simplifies the layout of Tkinter user\ninterfaces by allowing the developer to specify the structure of the\ninterface elements from the inside out.\n\nWhereas Tkinter requires that nested frames and other widgets be\ncreated from the outside in (i.e., the outermost frame created first),\nthe layout of an interface is often easier to conceptualize and describe\nfrom the inside out.  For example, a layout composed of the following\nelements:\n\n::\n\n          +------------------------------------+\n          |              Element D             |\n          +-------------------+----------------+\n          |    Element A      |                |\n          +-------------------+    Element C   |\n          |    Element B      |                |\n          +-------------------+----------------+\n          |              Element E             |\n          +------------------------------------+\n\ncould be described as\n\n* Elements A and B vertically arranged in a column,\n* Joined left to right with Element C in a row,\n* Joined in a single column with Element D above and Element E below.\n\nThis sort of narrative description can be easily represented in code\nby assigning names to each of the layout elements (e.g., \"A\", \"B\", \"C\",\n\"D\", and \"E\"), instantiating an object of the *AppLayout* class from the\n*tklayout* module (e.g., \"lo\"), and then calling the following methods::\n\n    ab = lo.column_elements([\"A\", \"B\"])\n    abc = lo.row_elements([ab, \"C\"])\n    app = lo.column_elements([\"D\", abc, \"E\"])\n\nand then creating the frames to represent this layout with::\n\n    lo.create_layout(root, app)\n\nRestructuring the application's layout is easily done simply by changing\nthe calls to the *row_elements()* and *column_elements()* methods.\n\nFull documentation is at ReadTheDocs: http://tklayout.readthedocs.io/\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/rdnielsen/tklayout/", "keywords": "Tkinter", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "tklayout", "package_url": "https://pypi.org/project/tklayout/", "platform": "", "project_url": "https://pypi.org/project/tklayout/", "project_urls": {"Homepage": "https://bitbucket.org/rdnielsen/tklayout/"}, "release_url": "https://pypi.org/project/tklayout/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Simplifies the implementation of Tkinter UI layouts by allowing the developer to describe the hierarchy of UI elements from the inside out.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library simplifies the layout of Tkinter user\ninterfaces by allowing the developer to specify the structure of the\ninterface elements from the inside out.</p>\n<p>Whereas Tkinter requires that nested frames and other widgets be\ncreated from the outside in (i.e., the outermost frame created first),\nthe layout of an interface is often easier to conceptualize and describe\nfrom the inside out.  For example, a layout composed of the following\nelements:</p>\n<pre>+------------------------------------+\n|              Element D             |\n+-------------------+----------------+\n|    Element A      |                |\n+-------------------+    Element C   |\n|    Element B      |                |\n+-------------------+----------------+\n|              Element E             |\n+------------------------------------+\n</pre>\n<p>could be described as</p>\n<ul>\n<li>Elements A and B vertically arranged in a column,</li>\n<li>Joined left to right with Element C in a row,</li>\n<li>Joined in a single column with Element D above and Element E below.</li>\n</ul>\n<p>This sort of narrative description can be easily represented in code\nby assigning names to each of the layout elements (e.g., \u201cA\u201d, \u201cB\u201d, \u201cC\u201d,\n\u201cD\u201d, and \u201cE\u201d), instantiating an object of the <em>AppLayout</em> class from the\n<em>tklayout</em> module (e.g., \u201clo\u201d), and then calling the following methods:</p>\n<pre>ab = lo.column_elements([\"A\", \"B\"])\nabc = lo.row_elements([ab, \"C\"])\napp = lo.column_elements([\"D\", abc, \"E\"])\n</pre>\n<p>and then creating the frames to represent this layout with:</p>\n<pre>lo.create_layout(root, app)\n</pre>\n<p>Restructuring the application\u2019s layout is easily done simply by changing\nthe calls to the <em>row_elements()</em> and <em>column_elements()</em> methods.</p>\n<p>Full documentation is at ReadTheDocs: <a href=\"http://tklayout.readthedocs.io/\" rel=\"nofollow\">http://tklayout.readthedocs.io/</a></p>\n\n          </div>"}, "last_serial": 3679839, "releases": {"0.7.0": [{"comment_text": "", "digests": {"md5": "19f589bd7316f1a721cbc19a0e92f135", "sha256": "af14087b19eacf32d2d3cb7dcbdac9bc4f7677e27f76edcf4bb36444ef861a22"}, "downloads": -1, "filename": "tklayout-0.7.0.tar.gz", "has_sig": false, "md5_digest": "19f589bd7316f1a721cbc19a0e92f135", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8429, "upload_time": "2018-01-26T19:53:47", "upload_time_iso_8601": "2018-01-26T19:53:47.580827Z", "url": "https://files.pythonhosted.org/packages/4f/90/d5ad08968bff458b6d87a43e3f8e1d7368ac470c554319bdce2ae9514a6e/tklayout-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "3b1d9e3bc89c5709ed4719c5cd8bb636", "sha256": "92321df5132481a5057a89f49ad705578a0916a4365a047af948d0eb1481d824"}, "downloads": -1, "filename": "tklayout-0.7.1.tar.gz", "has_sig": false, "md5_digest": "3b1d9e3bc89c5709ed4719c5cd8bb636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8616, "upload_time": "2018-01-26T23:05:51", "upload_time_iso_8601": "2018-01-26T23:05:51.189198Z", "url": "https://files.pythonhosted.org/packages/09/00/3d53ea43b7687487f7c490ed414a75338b002a10ae6e897d702471fac299/tklayout-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "14140abdb8821fdf3bf396e8f0170a66", "sha256": "0a2e01104f6c69bc9eb15eb8baa6cc75a12bed65bb8fe16562280c3cd67fa894"}, "downloads": -1, "filename": "tklayout-0.7.2.tar.gz", "has_sig": false, "md5_digest": "14140abdb8821fdf3bf396e8f0170a66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5736, "upload_time": "2018-01-27T01:34:29", "upload_time_iso_8601": "2018-01-27T01:34:29.385689Z", "url": "https://files.pythonhosted.org/packages/e8/ef/fea1d342f6ec9067af1864d6f858f25680983653da05a3d4d881adb95201/tklayout-0.7.2.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "fa99a806e8458efb543f2cc17793b2a3", "sha256": "5079c2dc183ce028c2ac3b43ecf96d0fd3607fe9e5e7b157227c7b4fa2a168fd"}, "downloads": -1, "filename": "tklayout-0.8.0.tar.gz", "has_sig": false, "md5_digest": "fa99a806e8458efb543f2cc17793b2a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5710, "upload_time": "2018-01-27T03:01:25", "upload_time_iso_8601": "2018-01-27T03:01:25.054397Z", "url": "https://files.pythonhosted.org/packages/9c/de/03eb89cfeaa1b174fac19407cd914ccf2edc0709581df98dfed629105500/tklayout-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "5570451c32e1969351d9fac1accf241d", "sha256": "f8040bc1231e1733cda26c8f86a6b7f99976f7059830aee777e4180a5e14de1e"}, "downloads": -1, "filename": "tklayout-0.9.0.zip", "has_sig": false, "md5_digest": "5570451c32e1969351d9fac1accf241d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12268, "upload_time": "2018-02-26T19:06:58", "upload_time_iso_8601": "2018-02-26T19:06:58.758077Z", "url": "https://files.pythonhosted.org/packages/71/ce/5cfdbb4469ee1829952202ef07630e1d3b13206859aa9d2200ee02a34214/tklayout-0.9.0.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "75b03d893670634fad6885cf3e5f050d", "sha256": "217a060f8165bc96c42c32b23128114cdf6a2658943b8dc9517aa97856155f18"}, "downloads": -1, "filename": "tklayout-1.0.0.tar.gz", "has_sig": false, "md5_digest": "75b03d893670634fad6885cf3e5f050d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5952, "upload_time": "2018-03-17T23:11:20", "upload_time_iso_8601": "2018-03-17T23:11:20.475749Z", "url": "https://files.pythonhosted.org/packages/fe/12/d6861d54e00d9aa95b858f22e0259e39c17247202c4a509101ca57ea0838/tklayout-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75b03d893670634fad6885cf3e5f050d", "sha256": "217a060f8165bc96c42c32b23128114cdf6a2658943b8dc9517aa97856155f18"}, "downloads": -1, "filename": "tklayout-1.0.0.tar.gz", "has_sig": false, "md5_digest": "75b03d893670634fad6885cf3e5f050d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5952, "upload_time": "2018-03-17T23:11:20", "upload_time_iso_8601": "2018-03-17T23:11:20.475749Z", "url": "https://files.pythonhosted.org/packages/fe/12/d6861d54e00d9aa95b858f22e0259e39c17247202c4a509101ca57ea0838/tklayout-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:34 2020"}