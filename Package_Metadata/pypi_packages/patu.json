{"info": {"author": "Alex Kritikos", "author_email": "alex@8bitb.us", "bugtrack_url": null, "classifiers": [], "description": "Patu\n====\n\nA small spider, useful for checking a site for 404s and 500s. Patu requires httplib2 and lxml:\n\n    pip install -U httplib2 lxml\n\nQuick Usage\n===========\n\nTo see available options:\n\n    patu.py --help\n\nTo spider an entire site using 5 workers, only showing errors:\n\n    patu.py --spiders=5 www.example.com\n    \nTo spider, stopping after the first level of links:\n\n    patu.py --depth=1 www.example.com\n    \nTo get a list of every linked page on a site:\n\n    patu.py --generate www.example.com > urls.txt\n    \nInstead of spidering for URLs, use a file instead and show all responses:\n\n    patu.py --input=urls.txt --verbose www.example.com\n\nFormat of URLs File\n===================\n\nThe output produced by <code>--generate</code> is formatted like so:\n\n    FIRST_URL<TAB>None\n    LINK1<TAB>REFERER\n    LINK2<TAB>REFERER\n    \n<code>--input</code> can take a file of that format, or one URL per line with no referer. <code>--input=-</code> reads from stdin.\n\nTesting\n=======\n\nPatu uses Nose for testing. To install Nose and test:\n\n    pip install -U nose\n    nosetests", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/akrito/patu", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "patu", "package_url": "https://pypi.org/project/patu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/patu/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/akrito/patu"}, "release_url": "https://pypi.org/project/patu/0.1/", "requires_dist": null, "requires_python": null, "summary": "Patu is a small spider", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"patu\">\n<h2>Patu</h2>\n<p>A small spider, useful for checking a site for 404s and 500s. Patu requires httplib2 and lxml:</p>\n<blockquote>\npip install -U httplib2 lxml</blockquote>\n</div>\n<div id=\"quick-usage\">\n<h2>Quick Usage</h2>\n<p>To see available options:</p>\n<blockquote>\npatu.py \u2013help</blockquote>\n<p>To spider an entire site using 5 workers, only showing errors:</p>\n<blockquote>\npatu.py \u2013spiders=5 www.example.com</blockquote>\n<p>To spider, stopping after the first level of links:</p>\n<blockquote>\npatu.py \u2013depth=1 www.example.com</blockquote>\n<p>To get a list of every linked page on a site:</p>\n<blockquote>\npatu.py \u2013generate www.example.com &gt; urls.txt</blockquote>\n<p>Instead of spidering for URLs, use a file instead and show all responses:</p>\n<blockquote>\npatu.py \u2013input=urls.txt \u2013verbose www.example.com</blockquote>\n</div>\n<div id=\"format-of-urls-file\">\n<h2>Format of URLs File</h2>\n<p>The output produced by &lt;code&gt;\u2013generate&lt;/code&gt; is formatted like so:</p>\n<blockquote>\nFIRST_URL&lt;TAB&gt;None\nLINK1&lt;TAB&gt;REFERER\nLINK2&lt;TAB&gt;REFERER</blockquote>\n<p>&lt;code&gt;\u2013input&lt;/code&gt; can take a file of that format, or one URL per line with no referer. &lt;code&gt;\u2013input=-&lt;/code&gt; reads from stdin.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Patu uses Nose for testing. To install Nose and test:</p>\n<blockquote>\npip install -U nose\nnosetests</blockquote>\n</div>\n\n          </div>"}, "last_serial": 796066, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "920fa7869446408bf1641dc98be1ee64", "sha256": "3d57674b597576f66602e1e8a80339fab9d629b587c8bdae2d69db541c19e472"}, "downloads": -1, "filename": "patu-0.1.tar.gz", "has_sig": false, "md5_digest": "920fa7869446408bf1641dc98be1ee64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9077, "upload_time": "2010-05-19T05:29:08", "upload_time_iso_8601": "2010-05-19T05:29:08.107015Z", "url": "https://files.pythonhosted.org/packages/43/d4/45fbd3af3708aea8cf1a41a5cab2572c2db9aadd57506f3f6e3e1b3bfe82/patu-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "920fa7869446408bf1641dc98be1ee64", "sha256": "3d57674b597576f66602e1e8a80339fab9d629b587c8bdae2d69db541c19e472"}, "downloads": -1, "filename": "patu-0.1.tar.gz", "has_sig": false, "md5_digest": "920fa7869446408bf1641dc98be1ee64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9077, "upload_time": "2010-05-19T05:29:08", "upload_time_iso_8601": "2010-05-19T05:29:08.107015Z", "url": "https://files.pythonhosted.org/packages/43/d4/45fbd3af3708aea8cf1a41a5cab2572c2db9aadd57506f3f6e3e1b3bfe82/patu-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:46 2020"}