{"info": {"author": "Matt Ruffalo", "author_email": "matt.ruffalo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development"], "description": "Docker build automation\n=======================\n\nOverview\n--------\n\nThis package provides a script which builds multiple Docker containers in\nsequence, using the contents of a ``docker_images.txt`` file in some directory.\nThis file is tab-delimited, and lines starting with ``#`` are ignored.\n\nEach non-comment line in ``docker_images.txt`` is of the format::\n\n  label    path/to/Dockerfile    comma,separated,options,if,desired\n\n(with a tab character between pieces, not the spaces above). By default, images\nwill be built by running ``docker build -t label -f Dockerfile .`` in the parent\ndirectory of the Dockerfile. Add the option ``base_directory_build`` after the\nDockerfile to specify that the image should be built with::\n\n  docker build -t label -f path/to/Dockerfile .\n\nin the directory containing ``docker_images.txt`` instead. If the default behavior\nis acceptable, the third tab-delimited piece of each line can be omitted.\n\nDocker images will be built in sequence, so images can refer to the results of\nprevious images, e.g.::\n\n  image-base    base/Dockerfile\n  image-dev     dev/Dockerfile\n\nwith ``dev/Dockerfile`` containing::\n\n  FROM image-base\n  ...\n\nSince images are unconditionally built with the ``latest`` tag, first, then\ntagged with a timestamp if desired, no ``Dockerfile`` needs to be modified for\na \"release\" image.\n\nThe container build script checks for any uninitialized Git submodules, and\nby default refuses to build if any are found. This can be overridden if\ndesired (see below).\n\nUsage\n-----\n\nThe command-line entry point provided by this script is\n``build_docker_containers``. By default, images will be tagged with\n``:latest`` appended to the base image name.\n\nOptions:\n\n--tag-timestamp  In addition to tagging images as ``latest``, also tag with a\n                 timestamp in ``YYYYMMDD-HHmmss`` format. All images in\n                 ``docker_images.txt`` are tagged with the same timestamp.\n\n--push          Push all built containers to Docker Hub, both with ``latest``\n                tags and timestamp tags if ``--tag-timestamp`` is given.\n\n--ignore-missing-submodules  Allow building Docker containers if\n                ``git submodule`` reports that at least one submodule is\n                uninitialized.\n\n--pretend       Run in pretend mode: don't actually execute anything\n                (building, tagging, pushing).\n\nRequirements\n------------\n\nPython 3.6 or newer for this script. Docker to build/tag/push images (version\nunimportant).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mruffalo/multi-docker-build", "keywords": "docker automation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "multi-docker-build", "package_url": "https://pypi.org/project/multi-docker-build/", "platform": "", "project_url": "https://pypi.org/project/multi-docker-build/", "project_urls": {"Homepage": "https://github.com/mruffalo/multi-docker-build"}, "release_url": "https://pypi.org/project/multi-docker-build/0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Automated building/tagging/pushing of multiple Docker images in succession", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>This package provides a script which builds multiple Docker containers in\nsequence, using the contents of a <tt>docker_images.txt</tt> file in some directory.\nThis file is tab-delimited, and lines starting with <tt>#</tt> are ignored.</p>\n<p>Each non-comment line in <tt>docker_images.txt</tt> is of the format:</p>\n<pre>label    path/to/Dockerfile    comma,separated,options,if,desired\n</pre>\n<p>(with a tab character between pieces, not the spaces above). By default, images\nwill be built by running <tt>docker build <span class=\"pre\">-t</span> label <span class=\"pre\">-f</span> Dockerfile .</tt> in the parent\ndirectory of the Dockerfile. Add the option <tt>base_directory_build</tt> after the\nDockerfile to specify that the image should be built with:</p>\n<pre>docker build -t label -f path/to/Dockerfile .\n</pre>\n<p>in the directory containing <tt>docker_images.txt</tt> instead. If the default behavior\nis acceptable, the third tab-delimited piece of each line can be omitted.</p>\n<p>Docker images will be built in sequence, so images can refer to the results of\nprevious images, e.g.:</p>\n<pre>image-base    base/Dockerfile\nimage-dev     dev/Dockerfile\n</pre>\n<p>with <tt>dev/Dockerfile</tt> containing:</p>\n<pre>FROM image-base\n...\n</pre>\n<p>Since images are unconditionally built with the <tt>latest</tt> tag, first, then\ntagged with a timestamp if desired, no <tt>Dockerfile</tt> needs to be modified for\na \u201crelease\u201d image.</p>\n<p>The container build script checks for any uninitialized Git submodules, and\nby default refuses to build if any are found. This can be overridden if\ndesired (see below).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The command-line entry point provided by this script is\n<tt>build_docker_containers</tt>. By default, images will be tagged with\n<tt>:latest</tt> appended to the base image name.</p>\n<p>Options:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--tag-timestamp</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>In addition to tagging images as <tt>latest</tt>, also tag with a\ntimestamp in <tt><span class=\"pre\">YYYYMMDD-HHmmss</span></tt> format. All images in\n<tt>docker_images.txt</tt> are tagged with the same timestamp.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--push</span></kbd></td>\n<td>Push all built containers to Docker Hub, both with <tt>latest</tt>\ntags and timestamp tags if <tt><span class=\"pre\">--tag-timestamp</span></tt> is given.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--ignore-missing-submodules</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Allow building Docker containers if\n<tt>git submodule</tt> reports that at least one submodule is\nuninitialized.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--pretend</span></kbd></td>\n<td>Run in pretend mode: don\u2019t actually execute anything\n(building, tagging, pushing).</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python 3.6 or newer for this script. Docker to build/tag/push images (version\nunimportant).</p>\n</div>\n\n          </div>"}, "last_serial": 7168349, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d6d9715a134cc152f814f78b2576d519", "sha256": "411e7ade8a230c52bbe8a7f04eb5f5949f18014e660ae614491b18d82f930e91"}, "downloads": -1, "filename": "multi_docker_build-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d6d9715a134cc152f814f78b2576d519", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5706, "upload_time": "2020-04-30T15:20:30", "upload_time_iso_8601": "2020-04-30T15:20:30.160145Z", "url": "https://files.pythonhosted.org/packages/5f/bc/b275bfe896f1a45722547ed14eecea971643c67e2564ac0f000f47e2a844/multi_docker_build-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6f53a166cc835ccbd1f56aca0ef67acd", "sha256": "07a0ff4a41fe59be55c8125aa77d8ae7d12143f61dc8f66efa3e141308b62425"}, "downloads": -1, "filename": "multi_docker_build-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f53a166cc835ccbd1f56aca0ef67acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6214, "upload_time": "2020-05-04T23:02:11", "upload_time_iso_8601": "2020-05-04T23:02:11.123706Z", "url": "https://files.pythonhosted.org/packages/c3/cc/2f4d6e8134b7b8dfa75b89f81e7643a793b63dca771bb38123fcb53b5921/multi_docker_build-0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f53a166cc835ccbd1f56aca0ef67acd", "sha256": "07a0ff4a41fe59be55c8125aa77d8ae7d12143f61dc8f66efa3e141308b62425"}, "downloads": -1, "filename": "multi_docker_build-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f53a166cc835ccbd1f56aca0ef67acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6214, "upload_time": "2020-05-04T23:02:11", "upload_time_iso_8601": "2020-05-04T23:02:11.123706Z", "url": "https://files.pythonhosted.org/packages/c3/cc/2f4d6e8134b7b8dfa75b89f81e7643a793b63dca771bb38123fcb53b5921/multi_docker_build-0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:27 2020"}