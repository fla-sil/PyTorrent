{"info": {"author": "Journalism Robotics Stockholm", "author_email": "contact@newsworthy.se", "bugtrack_url": null, "classifiers": [], "description": "\nInstalling\n----------\n\n.. code-block:: bash\n\n  pip install newsworthy_slides\n\n\nUsing\n-----\n\nThis library has one main function: `slides_from_xml()` which lets you generate and slides from a custom HTML structure (described below).\n\nBasic usage:\n\n.. code-block:: python\n\n  from newsworthy_slides import slides_from_xml\n\n  slides_xml = \"\"\"\n  <slide layout=\"Title and content\">\n    <placeholder type=\"text\">\n      Hello world!\n    </placeholder>\n  </slide>\n  \"\"\"\n\n  # Generate to new, empty presentation\n  pres = slides_from_xml(slides_xml)\n\n  # Generate to existing presentation\n  pres = slides_from_xml(slides_xml, \"path/to/my_base_slides.pptx\")\n\n  # pres is an instance of pptx.Presentation and can be saved easily:\n  pres.save('my_presentation.pptx')\n\n\n\nThe XML structure\n-----------------\n\n\nSlides\n~~~~~~\n\nA slide must always have a `layout` attribute referring to the name of a slide layout.\n\n.. code-block:: XML\n\n  <slide layout=\"Title and content\">\n  </slide>\n\nA slide _may_ have `position` attribute which defines where in the presentation the slide is to be added.\n\nA slide consists of a number of placeholders.\n\n.. code-block:: XML\n\n  <slide layout=\"Title and content\">\n    <placeholder type=\"text\">\n      Hello world!\n    </placeholder>\n  </slide>\n\nEach placeholder must have  a `type` attribute, which can be either `text`, `image`, `table`. The `type` attribute defines how the content of the tag is to be interpreted.\n\nThe placeholders may also have a `name` attribute. This attribute should refer to a placeholder name in the slide layout.\n\n.. code-block:: XML\n\n  <slide layout=\"Title and content\">\n    <placeholder type=\"text\" name=\"Text Placeholder 1\">Hello</placeholder>\n    <placeholder type=\"text\" name=\"Text Placeholder 2\">World!</placeholder>\n  </slide>\n\nIf no placeholder name is defined the placeholders will be positioned in order.\n\n.. code-block:: XML\n\n  <slide layout=\"Title and content\">\n    <placeholder type=\"text\">First placeholder</placeholder>\n    <placeholder type=\"text\">Second placeholder</placeholder>\n  </slide>\n\n\nThe different placeholders types are defined below.\n\nText placeholders\n~~~~~~~~~~~~~~~~~\n\nText placeholders may contain plain text or basic html. `<p>` and `<li>` tags are interpreted as paragraphs.\n\n.. code-block:: XML\n\n  <placeholder type=\"text\">\n    Hello world!\n  </placeholder>\n\n  <placeholder type=\"text\">\n    <p>Hello Earth!</p>\n    <p>Hello Mars!</p>\n  </placeholder>\n\n  <placeholder type=\"text\">\n    <li>Hello Earth!</li>\n    <li>Hello Mars!</li>\n  </placeholder>\n\n`<strong>`, `<i>`/`<em>` and `<a>` tags may be used for inline formating and linking.\n\n.. code-block:: XML\n\n  <placeholder type=\"text\">\n    Hello <strong>world</strong>. Considering a <a href=\"http://outer.space\">Mars</a>?\n  </placeholder>\n\n\nImage placeholders\n~~~~~~~~~~~~~~~~~~\n\nAn image placeholder recognizes `<img>` tags and picks up the path (or url) to the image from the `src` attribute.\n\n.. code-block:: XML\n\n  <placeholder type=\"image\">\n    <img src=\"path/to/image.png\">\n  </placeholder>\n\nNote that the placeholder explicitly has to be a picture placeholder. This has to be set manually in Powerpoint. At the moment of writing Google Slides does not support picture placeholders (neither does Libre Office). A base presentation from Google Slides will not, in other words, be able to handle this image placeholders.\n\nTable placeholders\n~~~~~~~~~~~~~~~~~~\n\nA table placeholder should contain an html table. All `<tr>` tags are parsed as rows. `<td>` and `<th>` tags are parsed as cells. The cells may contain same basic text formatting as paragraphs (`<strong>` for bold, `<i>` for italic etc).\n\nCells with `class=\"value\"` are interpreted as numbers and right-aligned.\n\n`<thead>` and `<tbody>` may be present, but does not bring any meaning. `<caption>` is _not_ parsed.\n\n.. code-block:: XML\n\n  <placeholder type=\"table\">\n    <table>\n        <tr>\n          <td>Country</td>\n          <td>Happiness</td>\n        </tr>\n        <tr>\n          <td>Finland</td>\n          <td class=\"value\">9.5</td>\n        </tr>\n        <tr>\n          <td>Sweden</td>\n          <td class=\"value\">8.5</td>\n        </tr>\n    </table>\n  </placeholder>\n\nDeveloping\n----------\n\nTo run tests:\n\n.. code-block:: bash\n\n  python3 -m pytest test\n\nDeployment\n----------\n\nTo deploy a new version to PyPi:\n\n1. Update Changelog below.\n2. Update `version.py`\n3. Build: `python3 setup.py sdist bdist_wheel`\n4. Upload: `python3 -m twine upload dist/newsworthy_slides-X.Y.X*`\n\n...assuming you have Twine installed (`pip install twine`) and configured.\n\nChangelog\n---------\n\n- 1.0.1 Add custom exception if image is missing\n\n- 1.0.0 First version\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://gitlab.com/newsworthy/newsworthy_slides/archive/1.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/newsworthy/newsworthy_slides", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "newsworthy-slides", "package_url": "https://pypi.org/project/newsworthy-slides/", "platform": "", "project_url": "https://pypi.org/project/newsworthy-slides/", "project_urls": {"Download": "https://gitlab.com/newsworthy/newsworthy_slides/archive/1.0.1.tar.gz", "Homepage": "https://gitlab.com/newsworthy/newsworthy_slides"}, "release_url": "https://pypi.org/project/newsworthy-slides/1.0.1/", "requires_dist": ["python-pptx (>=0.6.18)", "pytest (>=3.10.1)", "beautifulsoup4 (>=4.7.1)", "requests (>=2.22.0)"], "requires_python": "~=3.5", "summary": "Generate PPTX slides and presentations from HTML markup.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installing\">\n<h2>Installing</h2>\n<pre>pip install newsworthy_slides\n</pre>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>This library has one main function: <cite>slides_from_xml()</cite> which lets you generate and slides from a custom HTML structure (described below).</p>\n<p>Basic usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">newsworthy_slides</span> <span class=\"kn\">import</span> <span class=\"n\">slides_from_xml</span>\n\n<span class=\"n\">slides_xml</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n&lt;slide layout=\"Title and content\"&gt;\n  &lt;placeholder type=\"text\"&gt;\n    Hello world!\n  &lt;/placeholder&gt;\n&lt;/slide&gt;\n\"\"\"</span>\n\n<span class=\"c1\"># Generate to new, empty presentation</span>\n<span class=\"n\">pres</span> <span class=\"o\">=</span> <span class=\"n\">slides_from_xml</span><span class=\"p\">(</span><span class=\"n\">slides_xml</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Generate to existing presentation</span>\n<span class=\"n\">pres</span> <span class=\"o\">=</span> <span class=\"n\">slides_from_xml</span><span class=\"p\">(</span><span class=\"n\">slides_xml</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/my_base_slides.pptx\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pres is an instance of pptx.Presentation and can be saved easily:</span>\n<span class=\"n\">pres</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'my_presentation.pptx'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"the-xml-structure\">\n<h2>The XML structure</h2>\n<div id=\"slides\">\n<h3>Slides</h3>\n<p>A slide must always have a <cite>layout</cite> attribute referring to the name of a slide layout.</p>\n<pre><span class=\"nt\">&lt;slide</span> <span class=\"na\">layout=</span><span class=\"s\">\"Title and content\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;/slide&gt;</span>\n</pre>\n<p>A slide _may_ have <cite>position</cite> attribute which defines where in the presentation the slide is to be added.</p>\n<p>A slide consists of a number of placeholders.</p>\n<pre><span class=\"nt\">&lt;slide</span> <span class=\"na\">layout=</span><span class=\"s\">\"Title and content\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>\n    Hello world!\n  <span class=\"nt\">&lt;/placeholder&gt;</span>\n<span class=\"nt\">&lt;/slide&gt;</span>\n</pre>\n<p>Each placeholder must have  a <cite>type</cite> attribute, which can be either <cite>text</cite>, <cite>image</cite>, <cite>table</cite>. The <cite>type</cite> attribute defines how the content of the tag is to be interpreted.</p>\n<p>The placeholders may also have a <cite>name</cite> attribute. This attribute should refer to a placeholder name in the slide layout.</p>\n<pre><span class=\"nt\">&lt;slide</span> <span class=\"na\">layout=</span><span class=\"s\">\"Title and content\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"Text Placeholder 1\"</span><span class=\"nt\">&gt;</span>Hello<span class=\"nt\">&lt;/placeholder&gt;</span>\n  <span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"Text Placeholder 2\"</span><span class=\"nt\">&gt;</span>World!<span class=\"nt\">&lt;/placeholder&gt;</span>\n<span class=\"nt\">&lt;/slide&gt;</span>\n</pre>\n<p>If no placeholder name is defined the placeholders will be positioned in order.</p>\n<pre><span class=\"nt\">&lt;slide</span> <span class=\"na\">layout=</span><span class=\"s\">\"Title and content\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>First placeholder<span class=\"nt\">&lt;/placeholder&gt;</span>\n  <span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>Second placeholder<span class=\"nt\">&lt;/placeholder&gt;</span>\n<span class=\"nt\">&lt;/slide&gt;</span>\n</pre>\n<p>The different placeholders types are defined below.</p>\n</div>\n<div id=\"text-placeholders\">\n<h3>Text placeholders</h3>\n<p>Text placeholders may contain plain text or basic html. <cite>&lt;p&gt;</cite> and <cite>&lt;li&gt;</cite> tags are interpreted as paragraphs.</p>\n<pre><span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>\n  Hello world!\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n\n<span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;p&gt;</span>Hello Earth!<span class=\"nt\">&lt;/p&gt;</span>\n  <span class=\"nt\">&lt;p&gt;</span>Hello Mars!<span class=\"nt\">&lt;/p&gt;</span>\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n\n<span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;li&gt;</span>Hello Earth!<span class=\"nt\">&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;li&gt;</span>Hello Mars!<span class=\"nt\">&lt;/li&gt;</span>\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n</pre>\n<p><cite>&lt;strong&gt;</cite>, <cite>&lt;i&gt;</cite>/<cite>&lt;em&gt;</cite> and <cite>&lt;a&gt;</cite> tags may be used for inline formating and linking.</p>\n<pre><span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span><span class=\"nt\">&gt;</span>\n  Hello <span class=\"nt\">&lt;strong&gt;</span>world<span class=\"nt\">&lt;/strong&gt;</span>. Considering a <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"http://outer.space\"</span><span class=\"nt\">&gt;</span>Mars<span class=\"nt\">&lt;/a&gt;</span>?\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n</pre>\n</div>\n<div id=\"image-placeholders\">\n<h3>Image placeholders</h3>\n<p>An image placeholder recognizes <cite>&lt;img&gt;</cite> tags and picks up the path (or url) to the image from the <cite>src</cite> attribute.</p>\n<pre><span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"image\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"path/to/image.png\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n</pre>\n<p>Note that the placeholder explicitly has to be a picture placeholder. This has to be set manually in Powerpoint. At the moment of writing Google Slides does not support picture placeholders (neither does Libre Office). A base presentation from Google Slides will not, in other words, be able to handle this image placeholders.</p>\n</div>\n<div id=\"table-placeholders\">\n<h3>Table placeholders</h3>\n<p>A table placeholder should contain an html table. All <cite>&lt;tr&gt;</cite> tags are parsed as rows. <cite>&lt;td&gt;</cite> and <cite>&lt;th&gt;</cite> tags are parsed as cells. The cells may contain same basic text formatting as paragraphs (<cite>&lt;strong&gt;</cite> for bold, <cite>&lt;i&gt;</cite> for italic etc).</p>\n<p>Cells with <cite>class=\u201dvalue\u201d</cite> are interpreted as numbers and right-aligned.</p>\n<p><cite>&lt;thead&gt;</cite> and <cite>&lt;tbody&gt;</cite> may be present, but does not bring any meaning. <cite>&lt;caption&gt;</cite> is _not_ parsed.</p>\n<pre><span class=\"nt\">&lt;placeholder</span> <span class=\"na\">type=</span><span class=\"s\">\"table\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;table&gt;</span>\n      <span class=\"nt\">&lt;tr&gt;</span>\n        <span class=\"nt\">&lt;td&gt;</span>Country<span class=\"nt\">&lt;/td&gt;</span>\n        <span class=\"nt\">&lt;td&gt;</span>Happiness<span class=\"nt\">&lt;/td&gt;</span>\n      <span class=\"nt\">&lt;/tr&gt;</span>\n      <span class=\"nt\">&lt;tr&gt;</span>\n        <span class=\"nt\">&lt;td&gt;</span>Finland<span class=\"nt\">&lt;/td&gt;</span>\n        <span class=\"nt\">&lt;td</span> <span class=\"na\">class=</span><span class=\"s\">\"value\"</span><span class=\"nt\">&gt;</span>9.5<span class=\"nt\">&lt;/td&gt;</span>\n      <span class=\"nt\">&lt;/tr&gt;</span>\n      <span class=\"nt\">&lt;tr&gt;</span>\n        <span class=\"nt\">&lt;td&gt;</span>Sweden<span class=\"nt\">&lt;/td&gt;</span>\n        <span class=\"nt\">&lt;td</span> <span class=\"na\">class=</span><span class=\"s\">\"value\"</span><span class=\"nt\">&gt;</span>8.5<span class=\"nt\">&lt;/td&gt;</span>\n      <span class=\"nt\">&lt;/tr&gt;</span>\n  <span class=\"nt\">&lt;/table&gt;</span>\n<span class=\"nt\">&lt;/placeholder&gt;</span>\n</pre>\n</div>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<p>To run tests:</p>\n<pre>python3 -m pytest <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"deployment\">\n<h2>Deployment</h2>\n<p>To deploy a new version to PyPi:</p>\n<ol>\n<li>Update Changelog below.</li>\n<li>Update <cite>version.py</cite></li>\n<li>Build: <cite>python3 setup.py sdist bdist_wheel</cite></li>\n<li>Upload: <cite>python3 -m twine upload dist/newsworthy_slides-X.Y.X*</cite></li>\n</ol>\n<p>\u2026assuming you have Twine installed (<cite>pip install twine</cite>) and configured.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<ul>\n<li>1.0.1 Add custom exception if image is missing</li>\n<li>1.0.0 First version</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5840362, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "735025cfc188bbe0835eed6167c6dbe8", "sha256": "f7e1698bd3837f822c9acb966eead78c54e8c9de0bfa4201e16e198e01d1c0d9"}, "downloads": -1, "filename": "newsworthy_slides-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "735025cfc188bbe0835eed6167c6dbe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 9586, "upload_time": "2019-09-09T13:15:46", "upload_time_iso_8601": "2019-09-09T13:15:46.374871Z", "url": "https://files.pythonhosted.org/packages/b1/45/5b5412165791b4323bdf1268ee423a121403fad289794eefa8f422035a8b/newsworthy_slides-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "261a27d1cacf07d1c96cf1de12f28344", "sha256": "2388e618d669a9a3aa665e5b47eeceffa0665fffb6d443149edd1d66fe584194"}, "downloads": -1, "filename": "newsworthy_slides-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "261a27d1cacf07d1c96cf1de12f28344", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 9686, "upload_time": "2019-09-17T08:52:36", "upload_time_iso_8601": "2019-09-17T08:52:36.031107Z", "url": "https://files.pythonhosted.org/packages/81/8b/e01323765c4d361d217b17ef2212e4766e6a93bb5a41f3786643ab7747f5/newsworthy_slides-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5dc61f28b4021095eb70fab1008ccb1", "sha256": "725ce35f2fb6276f7d6ae88d4425098982557a3a5d6099c53d9ef5034e235e66"}, "downloads": -1, "filename": "newsworthy_slides-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e5dc61f28b4021095eb70fab1008ccb1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 11070, "upload_time": "2019-09-17T08:52:37", "upload_time_iso_8601": "2019-09-17T08:52:37.804797Z", "url": "https://files.pythonhosted.org/packages/46/a1/6b9f0a04200def35ae46cc3b91a04e5536712103c37eb6cc8158fd73c50c/newsworthy_slides-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "261a27d1cacf07d1c96cf1de12f28344", "sha256": "2388e618d669a9a3aa665e5b47eeceffa0665fffb6d443149edd1d66fe584194"}, "downloads": -1, "filename": "newsworthy_slides-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "261a27d1cacf07d1c96cf1de12f28344", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 9686, "upload_time": "2019-09-17T08:52:36", "upload_time_iso_8601": "2019-09-17T08:52:36.031107Z", "url": "https://files.pythonhosted.org/packages/81/8b/e01323765c4d361d217b17ef2212e4766e6a93bb5a41f3786643ab7747f5/newsworthy_slides-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5dc61f28b4021095eb70fab1008ccb1", "sha256": "725ce35f2fb6276f7d6ae88d4425098982557a3a5d6099c53d9ef5034e235e66"}, "downloads": -1, "filename": "newsworthy_slides-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e5dc61f28b4021095eb70fab1008ccb1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 11070, "upload_time": "2019-09-17T08:52:37", "upload_time_iso_8601": "2019-09-17T08:52:37.804797Z", "url": "https://files.pythonhosted.org/packages/46/a1/6b9f0a04200def35ae46cc3b91a04e5536712103c37eb6cc8158fd73c50c/newsworthy_slides-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:38 2020"}