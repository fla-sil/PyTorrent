{"info": {"author": "Stone.J", "author_email": "stone2083@yahoo.cn", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Debuggers"], "description": "                PDBX\n\nWhat is it\n----------\npdbx: A remote pdb debugger Base on pdb\nIt's:\n1) be compatible with pdb\n2) remote debug supported\n3) xq/xquit commands supported\n    quit safely from debugger, the program being executed is continued(not abored)\n4) redebug supported\n5) suspend mode supported\n6) pystack(like jstack) supported\n\n\nInstalling pdbx\n---------------\n1) Download pdbx from https://code.google.com/p/stonelab/downloads/list or https://pypi.python.org/pypi \n2) Unpack the archive\n    tar xvf pdbx-x.x.x.tar.gz\n3) Install pdbx\n    sudo python setup.py install\n\n\nHow to use pdbx\n---------------\n1) Add pbdx in python scripts\ne.g.\nfrom pdbx import Rpdb\nrpdb = Rpdb()                # Debugger started. Port is 8787(Default Value),   Suspend is True(Default Value)\nrpdb = Rpdb(9898)            # Debugger started. Port is 9898(Specified Value), Suspend is True(Default Value)\nrpdb = Rpdb(suspend=False)   # Debugger started. Port is 8787(Default Value),   Suspend is False(Specified Value) \nrpdb = Rpdb(9898, False)     # Debugger started. Port is 9898(Specified Value), Suspend is False(Specified Value) \nrpdb.set_trace()\n\n2) Remote debug with telnet\ne.g.\ntelnet xxx.xxx.xxx.xxx 8787\n\n3) Interact with pdb commands\nDocumented commands (type help <topic>):\n========================================\nEOF    bt         cont      enable  jump  pp       run      unt     xq   \na      c          continue  exit    l     q        s        until   xquit\nalias  cl         d         h       list  quit     step     up    \nargs   clear      debug     help    n     r        tbreak   w     \nb      commands   disable   ignore  next  restart  u        whatis\nbreak  condition  down      j       p     return   unalias  where\n\nxq/xquit are new commands in pdbx\nit's used to quit safely from debugger, the program being executed is continued(not abored)\n\n4) Re-Remote debug with telnet\ntelnet again.\n\n5) use pystack\nenable pystack in python scripts and then run the scripts\ne.g.\nimport pdbx\npdbx.enable_pystack()\n\nuse kill -30 pid, then scripts will print python thread stack info:\n\"CP Server Thread-4\" tid=4369723392\n    at self.__bootstrap_inner()(threading.py:525)\n    at self.run()(threading.py:552)\n    at conn = self.server.requests.get()(__init__.py:1367)\n    at self.not_empty.wait()(Queue.py:168)\n    at waiter.acquire()(threading.py:244)\n\n\"CP Server Thread-7\" tid=4382343168\n    at self.__bootstrap_inner()(threading.py:525)\n    at self.run()(threading.py:552)\n    at conn = self.server.requests.get()(__init__.py:1367)\n    at self.not_empty.wait()(Queue.py:168)\n    at waiter.acquire()(threading.py:244)\n\n\"MainThread\" tid=140735286018432\n    at app.run()(raspctl.py:173)\n    at return wsgi.runwsgi(self.wsgifunc(*middleware))(application.py:313)\n    at return httpserver.runsimple(func, validip(listget(sys.argv, 1, '')))(wsgi.py:54)\n    at server.start()(httpserver.py:157)\n    at self.tick()(__init__.py:1765)\n    at s, addr = self.socket.accept()(__init__.py:1800)\n    at sock, addr = self._sock.accept()(socket.py:202)\n    at pystack()(pdbx.py:179)\n    at for filename, lineno, _, line in traceback.extract_stack(stack):(pdbx.py:168)\n\n\nRelease Notes\n-------------\nV0.1.0\n1) remote debug supported\n\nV0.2.0\n1) xq/xquit supported\n2) redebug supported\n3) suspend mode supported\n4) add setup.py\n\nv0.3.0\n1) pystack supported\n\nAuthor Info\n-----------\nauthor: stone2083<Stone.J>\nemail:  stone2083@yahoo.cn\nblog:   http://www.blogjava.net/stone2083\nsite:   https://code.google.com/p/stonelab\n", "description_content_type": null, "docs_url": "https://pythonhosted.org/pdbx/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://code.google.com/p/stonelab/wiki/pdbx", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pdbx", "package_url": "https://pypi.org/project/pdbx/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pdbx/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://code.google.com/p/stonelab/wiki/pdbx"}, "release_url": "https://pypi.org/project/pdbx/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Remote PDB Debugger Based On PDB", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            PDBX<br><br>What is it<br>----------<br>pdbx: A remote pdb debugger Base on pdb<br>It's:<br>1) be compatible with pdb<br>2) remote debug supported<br>3) xq/xquit commands supported<br>    quit safely from debugger, the program being executed is continued(not abored)<br>4) redebug supported<br>5) suspend mode supported<br>6) pystack(like jstack) supported<br><br><br>Installing pdbx<br>---------------<br>1) Download pdbx from https://code.google.com/p/stonelab/downloads/list or https://pypi.python.org/pypi <br>2) Unpack the archive<br>    tar xvf pdbx-x.x.x.tar.gz<br>3) Install pdbx<br>    sudo python setup.py install<br><br><br>How to use pdbx<br>---------------<br>1) Add pbdx in python scripts<br>e.g.<br>from pdbx import Rpdb<br>rpdb = Rpdb()                # Debugger started. Port is 8787(Default Value),   Suspend is True(Default Value)<br>rpdb = Rpdb(9898)            # Debugger started. Port is 9898(Specified Value), Suspend is True(Default Value)<br>rpdb = Rpdb(suspend=False)   # Debugger started. Port is 8787(Default Value),   Suspend is False(Specified Value) <br>rpdb = Rpdb(9898, False)     # Debugger started. Port is 9898(Specified Value), Suspend is False(Specified Value) <br>rpdb.set_trace()<br><br>2) Remote debug with telnet<br>e.g.<br>telnet xxx.xxx.xxx.xxx 8787<br><br>3) Interact with pdb commands<br>Documented commands (type help &lt;topic&gt;):<br>========================================<br>EOF    bt         cont      enable  jump  pp       run      unt     xq   <br>a      c          continue  exit    l     q        s        until   xquit<br>alias  cl         d         h       list  quit     step     up    <br>args   clear      debug     help    n     r        tbreak   w     <br>b      commands   disable   ignore  next  restart  u        whatis<br>break  condition  down      j       p     return   unalias  where<br><br>xq/xquit are new commands in pdbx<br>it's used to quit safely from debugger, the program being executed is continued(not abored)<br><br>4) Re-Remote debug with telnet<br>telnet again.<br><br>5) use pystack<br>enable pystack in python scripts and then run the scripts<br>e.g.<br>import pdbx<br>pdbx.enable_pystack()<br><br>use kill -30 pid, then scripts will print python thread stack info:<br>\"CP Server Thread-4\" tid=4369723392<br>    at self.__bootstrap_inner()(threading.py:525)<br>    at self.run()(threading.py:552)<br>    at conn = self.server.requests.get()(__init__.py:1367)<br>    at self.not_empty.wait()(Queue.py:168)<br>    at waiter.acquire()(threading.py:244)<br><br>\"CP Server Thread-7\" tid=4382343168<br>    at self.__bootstrap_inner()(threading.py:525)<br>    at self.run()(threading.py:552)<br>    at conn = self.server.requests.get()(__init__.py:1367)<br>    at self.not_empty.wait()(Queue.py:168)<br>    at waiter.acquire()(threading.py:244)<br><br>\"MainThread\" tid=140735286018432<br>    at app.run()(raspctl.py:173)<br>    at return wsgi.runwsgi(self.wsgifunc(*middleware))(application.py:313)<br>    at return httpserver.runsimple(func, validip(listget(sys.argv, 1, '')))(wsgi.py:54)<br>    at server.start()(httpserver.py:157)<br>    at self.tick()(__init__.py:1765)<br>    at s, addr = self.socket.accept()(__init__.py:1800)<br>    at sock, addr = self._sock.accept()(socket.py:202)<br>    at pystack()(pdbx.py:179)<br>    at for filename, lineno, _, line in traceback.extract_stack(stack):(pdbx.py:168)<br><br><br>Release Notes<br>-------------<br>V0.1.0<br>1) remote debug supported<br><br>V0.2.0<br>1) xq/xquit supported<br>2) redebug supported<br>3) suspend mode supported<br>4) add setup.py<br><br>v0.3.0<br>1) pystack supported<br><br>Author Info<br>-----------<br>author: stone2083&lt;Stone.J&gt;<br>email:  stone2083@yahoo.cn<br>blog:   http://www.blogjava.net/stone2083<br>site:   https://code.google.com/p/stonelab<br>\n          </div>"}, "last_serial": 842906, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "5e5a62f731d50a12b362dd5cd4530c6c", "sha256": "f31fbdd12a35239cc94f875dfe1a57c9c9f037b8d55bbe9154c73568802664f3"}, "downloads": -1, "filename": "pdbx-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5e5a62f731d50a12b362dd5cd4530c6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2906, "upload_time": "2013-03-23T07:57:07", "upload_time_iso_8601": "2013-03-23T07:57:07.972551Z", "url": "https://files.pythonhosted.org/packages/2a/a4/f280cbfaf611a356db8ab43a3f7b082f5cfcbf48ee18d0677a37b5a8b74f/pdbx-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2a652c9adae00e40c4b8d033d0c271ad", "sha256": "31f3e5775723cd07d0637e3f58421d67a8f4ca2734459730e2fa4310789d709c"}, "downloads": -1, "filename": "pdbx-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2a652c9adae00e40c4b8d033d0c271ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3598, "upload_time": "2013-08-19T03:19:06", "upload_time_iso_8601": "2013-08-19T03:19:06.315088Z", "url": "https://files.pythonhosted.org/packages/f1/06/62aa034c16d2225424318daa20597f0d20a23ead4d147f32ed477de03544/pdbx-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a652c9adae00e40c4b8d033d0c271ad", "sha256": "31f3e5775723cd07d0637e3f58421d67a8f4ca2734459730e2fa4310789d709c"}, "downloads": -1, "filename": "pdbx-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2a652c9adae00e40c4b8d033d0c271ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3598, "upload_time": "2013-08-19T03:19:06", "upload_time_iso_8601": "2013-08-19T03:19:06.315088Z", "url": "https://files.pythonhosted.org/packages/f1/06/62aa034c16d2225424318daa20597f0d20a23ead4d147f32ed477de03544/pdbx-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:19 2020"}