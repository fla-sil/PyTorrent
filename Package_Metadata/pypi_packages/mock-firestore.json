{"info": {"author": "Matt Dowds", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Python Mock Firestore\n\nAn in-memory implementation of the [Python client library](https://github.com/googleapis/google-cloud-python/tree/master/firestore) for Google Cloud Firestore, intended for use in tests to replace the real thing. This project is in early stages and is only a partial implementation of the real  client library.\n\nTo install:\n\n`pip install mock-firestore`\n\nPython 3.5+ is required for it to work.\n\n## Usage\n\n```python\ndb = firestore.Client()\nmock_db = MockFirestore()\n\n# Can be used in the same way as a firestore.Client() object would be, e.g.:\ndb.collection('users').get()\nmock_db.collection('users').get()\n```\n\nTo reset the store to an empty state, use the `reset()` method:\n```python\nmock_db = MockFirestore()\nmock_db.reset()\n```\n\n## Supported operations\n\n```python\nmock_db = MockFirestore()\n\n# Collections\nmock_db.collection('users')\nmock_db.collection('users').get()\nmock_db.collection('users').list_documents()\nmock_db.collection('users').stream()\nmock_db.collection('users').start_after({'id': 'alovelace'}).stream()\nmock_db.collection('users').end_before({'id': 'alovelace'}).stream()\nmock_db.collection('users').end_at({'id': 'alovelace'}).stream()\n\n# Documents\nmock_db.collection('users').document()\nmock_db.collection('users').document('alovelace')\nmock_db.collection('users').document('alovelace').id\nmock_db.collection('users').document('alovelace').parent\nmock_db.collection('users').document('alovelace').get()\nmock_db.collection('users').document('alovelace').get().exists\nmock_db.collection('users').document('alovelace').get().to_dict()\nmock_db.collection('users').document('alovelace').set({\n    'first': 'Ada',\n    'last': 'Lovelace'\n})\nmock_db.collection('users').document('alovelace').set({\n    'first': 'Augusta Ada'\n}, merge=True)\nmock_db.collection('users').document('alovelace').update({\n    'born': 1815\n})\nmock_db.collection('users').document('alovelace').update({\n    'associates': ['Charles Babbage', 'Michael Faraday']\n})\nmock_db.collection('users').document('alovelace').collection('friends')\nmock_db.collection('users').document('alovelace').delete()\n\nmock_db.collection('users').add({'first': 'Ada', 'last': 'Lovelace'},\n                                'alovelace')\n\n# Querying\nmock_db.collection('users').order_by('born').get()\nmock_db.collection('users').order_by('born', direction='DESCENDING').get()\nmock_db.collection('users').limit(5).get()\nmock_db.collection('users').where('born', '==', 1815).get()\nmock_db.collection('users').where('born', '<', 1815).get()\nmock_db.collection('users').where('born', '>', 1815).get()\nmock_db.collection('users').where('born', '<=', 1815).get()\nmock_db.collection('users').where('born', '>=', 1815).get()\nmock_db.collection('users').where('born', 'in', [1815, 1900]).stream()\nmock_db.collection('users').where('born', 'in', [1815, 1900]).stream()\nmock_db.collection('users').where('associates', 'array_contains', 'Charles Babbage').stream()\nmock_db.collection('users').where('associates', 'array_contains_any', ['Charles Babbage', 'Michael Faraday']).stream()\n```\n\n## Contributors\n\n* [Matt Dowds](https://github.com/mdowds)\n* [Chris Tippett](https://github.com/christippett)\n* [Anton Melnikov](https://github.com/notnami)\n* [Ben Riggleman](https://github.com/briggleman)\n* [Steve Atwell](https://github.com/satwell)\n* [ahti123](https://github.com/ahti123)\n* [Billcountry Mwaniki](https://github.com/Billcountry)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mdowds/mock-firestore", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mock-firestore", "package_url": "https://pypi.org/project/mock-firestore/", "platform": "", "project_url": "https://pypi.org/project/mock-firestore/", "project_urls": {"Homepage": "https://github.com/mdowds/mock-firestore"}, "release_url": "https://pypi.org/project/mock-firestore/0.7.1/", "requires_dist": null, "requires_python": "", "summary": "In-memory implementation of Google Cloud Firestore for use in tests", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Mock Firestore</h1>\n<p>An in-memory implementation of the <a href=\"https://github.com/googleapis/google-cloud-python/tree/master/firestore\" rel=\"nofollow\">Python client library</a> for Google Cloud Firestore, intended for use in tests to replace the real thing. This project is in early stages and is only a partial implementation of the real  client library.</p>\n<p>To install:</p>\n<p><code>pip install mock-firestore</code></p>\n<p>Python 3.5+ is required for it to work.</p>\n<h2>Usage</h2>\n<pre><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">firestore</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span> <span class=\"o\">=</span> <span class=\"n\">MockFirestore</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Can be used in the same way as a firestore.Client() object would be, e.g.:</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n<p>To reset the store to an empty state, use the <code>reset()</code> method:</p>\n<pre><span class=\"n\">mock_db</span> <span class=\"o\">=</span> <span class=\"n\">MockFirestore</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n<h2>Supported operations</h2>\n<pre><span class=\"n\">mock_db</span> <span class=\"o\">=</span> <span class=\"n\">MockFirestore</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Collections</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">list_documents</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">start_after</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'alovelace'</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">end_before</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'alovelace'</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">end_at</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'alovelace'</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Documents</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">id</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s1\">'first'</span><span class=\"p\">:</span> <span class=\"s1\">'Ada'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last'</span><span class=\"p\">:</span> <span class=\"s1\">'Lovelace'</span>\n<span class=\"p\">})</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s1\">'first'</span><span class=\"p\">:</span> <span class=\"s1\">'Augusta Ada'</span>\n<span class=\"p\">},</span> <span class=\"n\">merge</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n    <span class=\"s1\">'born'</span><span class=\"p\">:</span> <span class=\"mi\">1815</span>\n<span class=\"p\">})</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n    <span class=\"s1\">'associates'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Charles Babbage'</span><span class=\"p\">,</span> <span class=\"s1\">'Michael Faraday'</span><span class=\"p\">]</span>\n<span class=\"p\">})</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'friends'</span><span class=\"p\">)</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"s1\">'alovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">({</span><span class=\"s1\">'first'</span><span class=\"p\">:</span> <span class=\"s1\">'Ada'</span><span class=\"p\">,</span> <span class=\"s1\">'last'</span><span class=\"p\">:</span> <span class=\"s1\">'Lovelace'</span><span class=\"p\">},</span>\n                                <span class=\"s1\">'alovelace'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Querying</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s1\">'DESCENDING'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">1815</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;'</span><span class=\"p\">,</span> <span class=\"mi\">1815</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">1815</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;='</span><span class=\"p\">,</span> <span class=\"mi\">1815</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'&gt;='</span><span class=\"p\">,</span> <span class=\"mi\">1815</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'in'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1815</span><span class=\"p\">,</span> <span class=\"mi\">1900</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'born'</span><span class=\"p\">,</span> <span class=\"s1\">'in'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1815</span><span class=\"p\">,</span> <span class=\"mi\">1900</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'associates'</span><span class=\"p\">,</span> <span class=\"s1\">'array_contains'</span><span class=\"p\">,</span> <span class=\"s1\">'Charles Babbage'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n<span class=\"n\">mock_db</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'associates'</span><span class=\"p\">,</span> <span class=\"s1\">'array_contains_any'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'Charles Babbage'</span><span class=\"p\">,</span> <span class=\"s1\">'Michael Faraday'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n</pre>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/mdowds\" rel=\"nofollow\">Matt Dowds</a></li>\n<li><a href=\"https://github.com/christippett\" rel=\"nofollow\">Chris Tippett</a></li>\n<li><a href=\"https://github.com/notnami\" rel=\"nofollow\">Anton Melnikov</a></li>\n<li><a href=\"https://github.com/briggleman\" rel=\"nofollow\">Ben Riggleman</a></li>\n<li><a href=\"https://github.com/satwell\" rel=\"nofollow\">Steve Atwell</a></li>\n<li><a href=\"https://github.com/ahti123\" rel=\"nofollow\">ahti123</a></li>\n<li><a href=\"https://github.com/Billcountry\" rel=\"nofollow\">Billcountry Mwaniki</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6772036, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e0d228773304bdf9ea576ce72fb9050c", "sha256": "3b43b8e3968da66d39ca5b5ba26b62a7672481856eab2eb68f36a852ff0e041c"}, "downloads": -1, "filename": "mock-firestore-0.1.tar.gz", "has_sig": false, "md5_digest": "e0d228773304bdf9ea576ce72fb9050c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3040, "upload_time": "2019-01-26T21:13:23", "upload_time_iso_8601": "2019-01-26T21:13:23.789822Z", "url": "https://files.pythonhosted.org/packages/c3/56/93d79651e2384e9c60b0e0ba410fdb42057ff98efe93541c0ecb4fb4ba11/mock-firestore-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a0fa63a1da103c6c7fb5955163b1171f", "sha256": "89212607662d74eca2983d3ccdd88906eccf46ac6c453d4e664acb98c46766ce"}, "downloads": -1, "filename": "mock-firestore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a0fa63a1da103c6c7fb5955163b1171f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3762, "upload_time": "2019-01-27T13:51:15", "upload_time_iso_8601": "2019-01-27T13:51:15.037127Z", "url": "https://files.pythonhosted.org/packages/6c/1b/afc09504d8d4077bc29e2072831894e7d142f76a1e74f335a82d69fc4459/mock-firestore-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b9b9579fa48e585ac4f33534edb1cdff", "sha256": "c6d0e323a8b0051ccaa3f5ba35be5fb945efdf800112341590d76fa2dd7889c7"}, "downloads": -1, "filename": "mock-firestore-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b9b9579fa48e585ac4f33534edb1cdff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3814, "upload_time": "2019-05-25T15:20:19", "upload_time_iso_8601": "2019-05-25T15:20:19.061898Z", "url": "https://files.pythonhosted.org/packages/74/0d/faa2abb7de3b29b0a4a8ea2c8bd8c9b7fa7a697197f723a42a4a3d6ac759/mock-firestore-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1272c405b87014d96f305ffc728e9f30", "sha256": "ce1ef090937cf9aa0db39b336fdabe3036b8b3827824c5da88f51980d7fce736"}, "downloads": -1, "filename": "mock-firestore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1272c405b87014d96f305ffc728e9f30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4306, "upload_time": "2019-06-22T13:50:59", "upload_time_iso_8601": "2019-06-22T13:50:59.354251Z", "url": "https://files.pythonhosted.org/packages/91/97/f6a2ed750725d7eeb0e1379bbe8afd99669a9b784f50e80902b8487ae320/mock-firestore-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "410d4b5539322c579778f08349d86d72", "sha256": "a2b0277646990273590c6f42f2b683e70c77e43a992a64e972623ce96a668688"}, "downloads": -1, "filename": "mock-firestore-0.3.0.tar.gz", "has_sig": false, "md5_digest": "410d4b5539322c579778f08349d86d72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5622, "upload_time": "2019-10-20T15:03:44", "upload_time_iso_8601": "2019-10-20T15:03:44.564142Z", "url": "https://files.pythonhosted.org/packages/b2/c2/bf9053f994046ce7365e664ed2bdc4ac8b26f4f5f6373b4b8212d3fe9ea9/mock-firestore-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "9ec2e499cd6f81883eca16cb5e77a407", "sha256": "86f0f852d9814e5e09c8a4c0e07b1fcfc426a2d6554e2054203a090a172141f1"}, "downloads": -1, "filename": "mock-firestore-0.4.0.tar.gz", "has_sig": false, "md5_digest": "9ec2e499cd6f81883eca16cb5e77a407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6609, "upload_time": "2019-11-09T17:59:17", "upload_time_iso_8601": "2019-11-09T17:59:17.441862Z", "url": "https://files.pythonhosted.org/packages/cd/f7/2b7229735ddd8f220392d64c6899bbfc6192cec1e8d38d959e3aa9fa03ca/mock-firestore-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e1f8679a894e18a14336e3075dc086e2", "sha256": "45244f63bd2dcabf2171cfdc412397d768e36451db94eade6f85ee681b6331cb"}, "downloads": -1, "filename": "mock-firestore-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e1f8679a894e18a14336e3075dc086e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6751, "upload_time": "2019-11-10T13:31:30", "upload_time_iso_8601": "2019-11-10T13:31:30.851669Z", "url": "https://files.pythonhosted.org/packages/87/45/8eaf44bcc55a0a2c224d68879af903e37b545be7752329c8955734dfbbe0/mock-firestore-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "9918d6643a9cf3aab33eefbf46a6d5af", "sha256": "85195175fa4e5b55f46cf5c21c8ffb58242fce4073caf0e27fd82d374c83df28"}, "downloads": -1, "filename": "mock-firestore-0.6.0.tar.gz", "has_sig": false, "md5_digest": "9918d6643a9cf3aab33eefbf46a6d5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6906, "upload_time": "2019-12-08T15:52:40", "upload_time_iso_8601": "2019-12-08T15:52:40.883008Z", "url": "https://files.pythonhosted.org/packages/48/30/f14ddf4c9a26b15fcaf0b43c36402bd80b9c9ceb534b35afe71153c9720b/mock-firestore-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "1699469d26393ffccb52be619d4c4f59", "sha256": "a2615fa53672b39764801092e93fadc9d1c32ada153e8555e19b22ae994b178c"}, "downloads": -1, "filename": "mock-firestore-0.7.0.tar.gz", "has_sig": false, "md5_digest": "1699469d26393ffccb52be619d4c4f59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7246, "upload_time": "2020-03-07T16:39:00", "upload_time_iso_8601": "2020-03-07T16:39:00.490928Z", "url": "https://files.pythonhosted.org/packages/06/0d/7da89858f681ddb33eaff977cd3fa57476f2610425036c16e49f6720ff6d/mock-firestore-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "21fc8c098508b73993210ddac884aad4", "sha256": "024dc7b6e38feb9ab71acfc7af2f2f93e3df7941090ec81fc77d70bcea3f0755"}, "downloads": -1, "filename": "mock-firestore-0.7.1.tar.gz", "has_sig": false, "md5_digest": "21fc8c098508b73993210ddac884aad4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7348, "upload_time": "2020-03-08T14:31:23", "upload_time_iso_8601": "2020-03-08T14:31:23.215375Z", "url": "https://files.pythonhosted.org/packages/91/c1/a57662f2c1cc2874eadac73cc161f6e90660e7f5d05ae8778d0644c9710f/mock-firestore-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21fc8c098508b73993210ddac884aad4", "sha256": "024dc7b6e38feb9ab71acfc7af2f2f93e3df7941090ec81fc77d70bcea3f0755"}, "downloads": -1, "filename": "mock-firestore-0.7.1.tar.gz", "has_sig": false, "md5_digest": "21fc8c098508b73993210ddac884aad4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7348, "upload_time": "2020-03-08T14:31:23", "upload_time_iso_8601": "2020-03-08T14:31:23.215375Z", "url": "https://files.pythonhosted.org/packages/91/c1/a57662f2c1cc2874eadac73cc161f6e90660e7f5d05ae8778d0644c9710f/mock-firestore-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:03 2020"}