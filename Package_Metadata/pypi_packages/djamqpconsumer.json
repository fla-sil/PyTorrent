{"info": {"author": "Aitzol Naberan", "author_email": "anaberan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "What is this\n============\n\nAdds a custom command which opens a blocking connection with an AMQP server and passes messages to a callback fuction\n\nSettings\n--------\n\nThis settings are requiered for the command run\n\n``COM_BROKER``\n\nAMQP server ip\n\n``COM_VHOST``\n\nAMQP server Virtual Host\n\n``COM_USERNAME`` \n\nAMQP server User name for the virtual host\n\n\n``COM_PASSWORD``\n\nUsername's password\n\n``COM_QUEUE``\n\nWhich queue listen to\n\n``CONSUMER_CALLBACK``\n\nPath to the callback func. ex.: djamqpconsumer.printconsumer.printdata\n\nInstall\n-------\n\nUse pip to install from PyPI::\n\n  pip install djamqpconsumer\n\n\nUsage\n-----\n\nAdd ``djamqpconsumer`` to your settings.py file::\n\n    INSTALLED_APPS = (\n        ...\n        'djamqpconsumer',\n        ...\n    )\n\nUse with manage.py::\n\n  manage.py consumer [debug]\n\n0.6 (2014-03-27)\n================\n- Parse results to send nack/requeue commands\n    callback command must return a dict with \n    {'result': 0/1 \n     'msg': String,\n     'retry': Bool}\n\n- Use logging instead of printing\n\n0.5 (2014-02-21)\n================\n- Add pika dependency", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/codesyntax/djamqpconsumer", "keywords": "django amql pika", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "djamqpconsumer", "package_url": "https://pypi.org/project/djamqpconsumer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djamqpconsumer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/codesyntax/djamqpconsumer"}, "release_url": "https://pypi.org/project/djamqpconsumer/0.7/", "requires_dist": null, "requires_python": null, "summary": "Blocking custom django command to consume a AMQP queue", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            What is this<br>============<br><br>Adds a custom command which opens a blocking connection with an AMQP server and passes messages to a callback fuction<br><br>Settings<br>--------<br><br>This settings are requiered for the command run<br><br>``COM_BROKER``<br><br>AMQP server ip<br><br>``COM_VHOST``<br><br>AMQP server Virtual Host<br><br>``COM_USERNAME`` <br><br>AMQP server User name for the virtual host<br><br><br>``COM_PASSWORD``<br><br>Username's password<br><br>``COM_QUEUE``<br><br>Which queue listen to<br><br>``CONSUMER_CALLBACK``<br><br>Path to the callback func. ex.: djamqpconsumer.printconsumer.printdata<br><br>Install<br>-------<br><br>Use pip to install from PyPI::<br><br>  pip install djamqpconsumer<br><br><br>Usage<br>-----<br><br>Add ``djamqpconsumer`` to your settings.py file::<br><br>    INSTALLED_APPS = (<br>        ...<br>        'djamqpconsumer',<br>        ...<br>    )<br><br>Use with manage.py::<br><br>  manage.py consumer [debug]<br><br>0.6 (2014-03-27)<br>================<br>- Parse results to send nack/requeue commands<br>    callback command must return a dict with <br>    {'result': 0/1 <br>     'msg': String,<br>     'retry': Bool}<br><br>- Use logging instead of printing<br><br>0.5 (2014-02-21)<br>================<br>- Add pika dependency\n          </div>"}, "last_serial": 1043427, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "33d21719d053e639de968c17ca8f186b", "sha256": "001569a5ccbf95bed56f23aefd5f00a0da9f349ec91399f503b7bb170ef71308"}, "downloads": -1, "filename": "djamqpconsumer-0.1.zip", "has_sig": false, "md5_digest": "33d21719d053e639de968c17ca8f186b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5279, "upload_time": "2014-02-13T08:58:04", "upload_time_iso_8601": "2014-02-13T08:58:04.639322Z", "url": "https://files.pythonhosted.org/packages/eb/03/7d2570c32c76c476201ee275049af14b3cb4fb328c046b1ca284a892aaca/djamqpconsumer-0.1.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "63eeae1912d999f3db0ee6ab761dbb5f", "sha256": "74876f068c3ccc52ade3f6e16b9ef579d635c748851c288319b46587f9bc102a"}, "downloads": -1, "filename": "djamqpconsumer-0.3.zip", "has_sig": false, "md5_digest": "63eeae1912d999f3db0ee6ab761dbb5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5129, "upload_time": "2014-02-13T14:40:15", "upload_time_iso_8601": "2014-02-13T14:40:15.538220Z", "url": "https://files.pythonhosted.org/packages/23/af/b72cc1eabfcf3d633830104d211c434ee7e487c8d6f904827f6d3c48cf62/djamqpconsumer-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b6cc36ce5013223570e409c912fe3fe2", "sha256": "100cae5b85fb15a83ab572e8417938fbf9fd9faddc4ca0b504c7579906f90497"}, "downloads": -1, "filename": "djamqpconsumer-0.4.zip", "has_sig": false, "md5_digest": "b6cc36ce5013223570e409c912fe3fe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5129, "upload_time": "2014-02-20T17:05:27", "upload_time_iso_8601": "2014-02-20T17:05:27.584931Z", "url": "https://files.pythonhosted.org/packages/a2/3e/a7476598bb746c22543815fd15ab1b74de03deec0d961c88233ac0fa79ba/djamqpconsumer-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "d87cc03d133fd7afce8b453b33a30b9c", "sha256": "09a645cf70d76e360b266059cce8ea5996fae6d4798985544d10407f1f0728df"}, "downloads": -1, "filename": "djamqpconsumer-0.5.zip", "has_sig": false, "md5_digest": "d87cc03d133fd7afce8b453b33a30b9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6435, "upload_time": "2014-02-21T10:05:39", "upload_time_iso_8601": "2014-02-21T10:05:39.798680Z", "url": "https://files.pythonhosted.org/packages/6a/2f/e8c40df4f327154108d2ab28b732b87ea43aff647b39dc5a627ccd55ad77/djamqpconsumer-0.5.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "28667a1b902ad75aee334269ff919590", "sha256": "d8843db31f88b9c1cf22b7880712c1ee185328e6a93040f9b6982661fb5fdd59"}, "downloads": -1, "filename": "djamqpconsumer-0.7.zip", "has_sig": false, "md5_digest": "28667a1b902ad75aee334269ff919590", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6971, "upload_time": "2014-03-27T14:44:05", "upload_time_iso_8601": "2014-03-27T14:44:05.078196Z", "url": "https://files.pythonhosted.org/packages/a4/45/7411ecffb7e21062d2255afe397bce9c6d106da61c12b43bd9ec13bc9592/djamqpconsumer-0.7.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28667a1b902ad75aee334269ff919590", "sha256": "d8843db31f88b9c1cf22b7880712c1ee185328e6a93040f9b6982661fb5fdd59"}, "downloads": -1, "filename": "djamqpconsumer-0.7.zip", "has_sig": false, "md5_digest": "28667a1b902ad75aee334269ff919590", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6971, "upload_time": "2014-03-27T14:44:05", "upload_time_iso_8601": "2014-03-27T14:44:05.078196Z", "url": "https://files.pythonhosted.org/packages/a4/45/7411ecffb7e21062d2255afe397bce9c6d106da61c12b43bd9ec13bc9592/djamqpconsumer-0.7.zip", "yanked": false}], "timestamp": "Fri May  8 00:37:56 2020"}