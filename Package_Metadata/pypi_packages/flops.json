{"info": {"author": "Anton Tuchak", "author_email": "anton.tuchak@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP"], "description": "python-flops\n============\n\nPython-flops is python lib to access\n`flops.ru <http://bit.ly/flops_ru>`__ API\n\n###Requirements \\* Python (2.7, 3.4+) \\* requests\n\nUsage\n~~~~~\n\nInstallation.\n^^^^^^^^^^^^^\n\n.. code:: bash\n\n   pip install flops\n\nCredentials.\n^^^^^^^^^^^^\n\n.. code:: python\n\n   from flops import FlopsClient\n\n   flops_client = FlopsClient(client_id='client_id', api_key='api_key')\n   tariffs = flops_client.get_tariffs()\n\nFlopsClient methods.\n^^^^^^^^^^^^^^^^^^^^\n\n.. code:: text\n\n   add_pubkey(self, name, public_key, tenant_id)\n\n\n   add_vm_ip(self, vm_id, tenant_id)\n\n\n   change_vm_backup_policy(self, vm_id, quantity, frequency, tenant_id)\n\n\n   change_vm_cpu(self, vm_id, cpu, tenant_id)\n\n\n   change_vm_disk(self, vm_id, disk, allow_restart, tenant_id, allow_memory_change)\n\n\n   change_vm_memory(self, vm_id, memory, allow_restart, tenant_id)\n\n\n   change_vm_password(self, vm_id, password, send_password, tenant_id)\n\n\n   change_vm_pubkeys(self, vm_id, key_ids, tenant_id)\n\n\n   clone_vm(self, vm_id, name, tenant_id, snapshot_id)\n\n\n   create_vm_snapshot(self, vm_id, name, description, tenant_id)\n\n\n   delete_pubkey(self, key_id, tenant_id)\n\n\n   delete_vm(self, vm_id, tenant_id)\n\n\n   delete_vm_ip(self, vm_id, ip, tenant_id)\n\n\n   delete_vm_snapshot(self, vm_id, snapshot_id, delete_children, tenant_id)\n\n\n   edit_pubkey(self, key_id, tenant_id, name, public_key)\n\n\n   get_distributions(self,)\n\n\n   get_distributions_by_name(self, name, match_type)\n\n\n   get_operation_status(self, operation_id)\n\n\n   get_pubkey(self, key_id)\n\n\n   get_pubkeys(self,)\n\n\n   get_pubkeys_by_name(self, name, match_type)\n\n\n   get_software(self,)\n\n\n   get_tariffs(self, for_windows, order_by, on_demand)\n\n\n   get_tenants(self,)\n\n\n   get_vm(self, vm_id)\n\n\n   get_vm_backups(self, vm_id)\n\n\n   get_vm_snapshots(self, vm_id)\n\n\n   get_vms(self,)\n\n\n   get_vms_by_name(self, name, match_type)\n\n\n   install_vm(self, name, distribution_id, tariff_id, tenant_id, memory, disk, cpu, ip_count, password, send_password, open_support_access, public_key_ids, software_ids)\n\n\n   move_vm_ip(self, vm_id, to_vm_id, ip, tenant_id)\n\n\n   poweroff_vm(self, vm_id, tenant_id)\n\n\n   reboot_vm(self, vm_id, tenant_id)\n\n\n   reinstall_vm(self, vm_id, name, distribution_id, tariff_id, tenant_id, memory, disk, cpu, password, send_password, open_support_access, public_key_ids, software_ids)\n\n\n   rename_vm(self, vm_id, new_name, tenant_id)\n\n\n   reset_vm(self, vm_id, tenant_id)\n\n\n   rollback_vm_backup(self, vm_id, backup, create_backup, tenant_id)\n\n\n   rollback_vm_snapshot(self, vm_id, snapshot_id, tenant_id)\n\n\n   shutdown_vm(self, vm_id, tenant_id)\n\n\n   start_vm(self, vm_id, tenant_id)\n\n\n   wait_for_operation(self, operation_id, timeout, polling_time)\n\nTesting\n~~~~~~~\n\nInstall development requirements.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: bash\n\n   pip install pytest pytest-env tcpping2\n\nRun the tests.\n^^^^^^^^^^^^^^\n\nWarning: Your account could be charged for VMs creation\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: bash\n\n   export CLIENT_ID=<CLIENT_ID>\n   export API_KEY=<API_KEY>\n   pytest flops/tests/*\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/atuchak/python-flops", "keywords": "flops.ru API client flops", "license": "", "maintainer": "", "maintainer_email": "", "name": "flops", "package_url": "https://pypi.org/project/flops/", "platform": "", "project_url": "https://pypi.org/project/flops/", "project_urls": {"Homepage": "https://github.com/atuchak/python-flops"}, "release_url": "https://pypi.org/project/flops/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Python library to easy access flops.ru API.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python-flops is python lib to access\n<a href=\"http://bit.ly/flops_ru\" rel=\"nofollow\">flops.ru</a> API</p>\n<p>###Requirements * Python (2.7, 3.4+) * requests</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"installation\">\n<h3>Installation.</h3>\n<pre>pip install flops\n</pre>\n</div>\n<div id=\"credentials\">\n<h3>Credentials.</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flops</span> <span class=\"kn\">import</span> <span class=\"n\">FlopsClient</span>\n\n<span class=\"n\">flops_client</span> <span class=\"o\">=</span> <span class=\"n\">FlopsClient</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s1\">'client_id'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'api_key'</span><span class=\"p\">)</span>\n<span class=\"n\">tariffs</span> <span class=\"o\">=</span> <span class=\"n\">flops_client</span><span class=\"o\">.</span><span class=\"n\">get_tariffs</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"flopsclient-methods\">\n<h3>FlopsClient methods.</h3>\n<pre>add_pubkey(self, name, public_key, tenant_id)\n\n\nadd_vm_ip(self, vm_id, tenant_id)\n\n\nchange_vm_backup_policy(self, vm_id, quantity, frequency, tenant_id)\n\n\nchange_vm_cpu(self, vm_id, cpu, tenant_id)\n\n\nchange_vm_disk(self, vm_id, disk, allow_restart, tenant_id, allow_memory_change)\n\n\nchange_vm_memory(self, vm_id, memory, allow_restart, tenant_id)\n\n\nchange_vm_password(self, vm_id, password, send_password, tenant_id)\n\n\nchange_vm_pubkeys(self, vm_id, key_ids, tenant_id)\n\n\nclone_vm(self, vm_id, name, tenant_id, snapshot_id)\n\n\ncreate_vm_snapshot(self, vm_id, name, description, tenant_id)\n\n\ndelete_pubkey(self, key_id, tenant_id)\n\n\ndelete_vm(self, vm_id, tenant_id)\n\n\ndelete_vm_ip(self, vm_id, ip, tenant_id)\n\n\ndelete_vm_snapshot(self, vm_id, snapshot_id, delete_children, tenant_id)\n\n\nedit_pubkey(self, key_id, tenant_id, name, public_key)\n\n\nget_distributions(self,)\n\n\nget_distributions_by_name(self, name, match_type)\n\n\nget_operation_status(self, operation_id)\n\n\nget_pubkey(self, key_id)\n\n\nget_pubkeys(self,)\n\n\nget_pubkeys_by_name(self, name, match_type)\n\n\nget_software(self,)\n\n\nget_tariffs(self, for_windows, order_by, on_demand)\n\n\nget_tenants(self,)\n\n\nget_vm(self, vm_id)\n\n\nget_vm_backups(self, vm_id)\n\n\nget_vm_snapshots(self, vm_id)\n\n\nget_vms(self,)\n\n\nget_vms_by_name(self, name, match_type)\n\n\ninstall_vm(self, name, distribution_id, tariff_id, tenant_id, memory, disk, cpu, ip_count, password, send_password, open_support_access, public_key_ids, software_ids)\n\n\nmove_vm_ip(self, vm_id, to_vm_id, ip, tenant_id)\n\n\npoweroff_vm(self, vm_id, tenant_id)\n\n\nreboot_vm(self, vm_id, tenant_id)\n\n\nreinstall_vm(self, vm_id, name, distribution_id, tariff_id, tenant_id, memory, disk, cpu, password, send_password, open_support_access, public_key_ids, software_ids)\n\n\nrename_vm(self, vm_id, new_name, tenant_id)\n\n\nreset_vm(self, vm_id, tenant_id)\n\n\nrollback_vm_backup(self, vm_id, backup, create_backup, tenant_id)\n\n\nrollback_vm_snapshot(self, vm_id, snapshot_id, tenant_id)\n\n\nshutdown_vm(self, vm_id, tenant_id)\n\n\nstart_vm(self, vm_id, tenant_id)\n\n\nwait_for_operation(self, operation_id, timeout, polling_time)\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<div id=\"install-development-requirements\">\n<h3>Install development requirements.</h3>\n<pre>pip install pytest pytest-env tcpping2\n</pre>\n</div>\n<div id=\"run-the-tests\">\n<h3>Run the tests.</h3>\n<h3 id=\"warning-your-account-could-be-charged-for-vms-creation\"><span class=\"section-subtitle\">Warning: Your account could be charged for VMs creation</span></h3>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">CLIENT_ID</span><span class=\"o\">=</span>&lt;CLIENT_ID&gt;\n<span class=\"nb\">export</span> <span class=\"nv\">API_KEY</span><span class=\"o\">=</span>&lt;API_KEY&gt;\npytest flops/tests/*\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3949734, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "f67b73075da12bc4140377e9e07c85d9", "sha256": "3f9f0054b94a64813037f4cd350dc69b01e6684d3cfe91b5951e29e0471b02c5"}, "downloads": -1, "filename": "flops-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f67b73075da12bc4140377e9e07c85d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6282, "upload_time": "2018-06-11T10:27:16", "upload_time_iso_8601": "2018-06-11T10:27:16.236548Z", "url": "https://files.pythonhosted.org/packages/5f/4e/da5a12ad48f1b4ad03d687788c2f171484abfd0c00478b1878ccde99c7c1/flops-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f67b73075da12bc4140377e9e07c85d9", "sha256": "3f9f0054b94a64813037f4cd350dc69b01e6684d3cfe91b5951e29e0471b02c5"}, "downloads": -1, "filename": "flops-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f67b73075da12bc4140377e9e07c85d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6282, "upload_time": "2018-06-11T10:27:16", "upload_time_iso_8601": "2018-06-11T10:27:16.236548Z", "url": "https://files.pythonhosted.org/packages/5f/4e/da5a12ad48f1b4ad03d687788c2f171484abfd0c00478b1878ccde99c7c1/flops-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:46 2020"}