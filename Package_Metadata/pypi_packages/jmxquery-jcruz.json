{"info": {"author": "Jonathan Cruz", "author_email": "jcruzdeveloper@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# JMXQuery Python Module\n\nProvides a Python module to easily run queries and collect metrics from a Java Virtual Machine via JMX.\n\nIn order to use this module, provide a list of queries, and the module will return all of the values it \nfinds matching the query. Please note that the interfact to the JMX uses a small jar file contained in \nthis module, so you will need to have java installed on the machine you're running this module on.\n\n## Usage\n\nThis example query for a Kafka server will get all cluster partition metrics:\n\n```\njmxConnection = JMXConnection(\"service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi\")\njmxQuery = [JMXQuery(\"kafka.cluster:type=*,name=*,topic=*,partition=*\",\n                         metric_name=\"kafka_cluster_{type}_{name}\",\n                         metric_labels={\"topic\" : \"{topic}\", \"partition\" : \"{partition}\"})]\nmetrics = jmxConnection.query(jmxQuery)\nfor metric in metrics:\n    print(f\"{metric.metric_name}<{metric.metric_labels}> == {metric.value}\")\n```\n\nThis will return the following:\n\n```\nkafka_cluster_Partition_UnderReplicated<{'partition': '0', 'topic': 'test'}> == 0\nkafka_cluster_Partition_UnderMinIsr<{'partition': '0', 'topic': 'test'}> == 0\nkafka_cluster_Partition_InSyncReplicasCount<{'partition': '0', 'topic': 'test'}> == 1\nkafka_cluster_Partition_ReplicasCount<{'partition': '0', 'topic': 'test'}> == 1\nkafka_cluster_Partition_LastStableOffsetLag<{'partition': '0', 'topic': 'test'}> == 0\n```\n\nAs you will notice you can optionally send a metric_name and metric_labels with {} tokens in them. These\ntokens are replaced at runtime by the jar so you can easily build metric names with associated labels using\nthe MBean properties of the values your query pulls back. \n\nYou can also use the module to pull back a list of all the MBean values available in the JVM too:\n\n```\njmxConnection = JMXConnection(\"service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi\")\njmxQuery = [JMXQuery(\"*:*\")]\nmetrics = jmxConnection.query(jmxQuery)\nfor metric in metrics:\n    print(f\"{metric.to_query_string()} ({metric.value_type}) = {metric.value}\")\n```\n\n## Installation\n\nJust use pip to install the module in your Python environment:\n\n```\npip install jmxquery\n```\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/outlyerapp/jmxquery", "keywords": "java,jmx,metrics,monitoring", "license": "", "maintainer": "", "maintainer_email": "", "name": "jmxquery-jcruz", "package_url": "https://pypi.org/project/jmxquery-jcruz/", "platform": "", "project_url": "https://pypi.org/project/jmxquery-jcruz/", "project_urls": {"Homepage": "https://github.com/outlyerapp/jmxquery"}, "release_url": "https://pypi.org/project/jmxquery-jcruz/0.5.3/", "requires_dist": null, "requires_python": "", "summary": "A JMX Interface for Python to Query runtime metrics in a JVM", "version": "0.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # JMXQuery Python Module<br><br>Provides a Python module to easily run queries and collect metrics from a Java Virtual Machine via JMX.<br><br>In order to use this module, provide a list of queries, and the module will return all of the values it <br>finds matching the query. Please note that the interfact to the JMX uses a small jar file contained in <br>this module, so you will need to have java installed on the machine you're running this module on.<br><br>## Usage<br><br>This example query for a Kafka server will get all cluster partition metrics:<br><br>```<br>jmxConnection = JMXConnection(\"service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi\")<br>jmxQuery = [JMXQuery(\"kafka.cluster:type=*,name=*,topic=*,partition=*\",<br>                         metric_name=\"kafka_cluster_{type}_{name}\",<br>                         metric_labels={\"topic\" : \"{topic}\", \"partition\" : \"{partition}\"})]<br>metrics = jmxConnection.query(jmxQuery)<br>for metric in metrics:<br>    print(f\"{metric.metric_name}&lt;{metric.metric_labels}&gt; == {metric.value}\")<br>```<br><br>This will return the following:<br><br>```<br>kafka_cluster_Partition_UnderReplicated&lt;{'partition': '0', 'topic': 'test'}&gt; == 0<br>kafka_cluster_Partition_UnderMinIsr&lt;{'partition': '0', 'topic': 'test'}&gt; == 0<br>kafka_cluster_Partition_InSyncReplicasCount&lt;{'partition': '0', 'topic': 'test'}&gt; == 1<br>kafka_cluster_Partition_ReplicasCount&lt;{'partition': '0', 'topic': 'test'}&gt; == 1<br>kafka_cluster_Partition_LastStableOffsetLag&lt;{'partition': '0', 'topic': 'test'}&gt; == 0<br>```<br><br>As you will notice you can optionally send a metric_name and metric_labels with {} tokens in them. These<br>tokens are replaced at runtime by the jar so you can easily build metric names with associated labels using<br>the MBean properties of the values your query pulls back. <br><br>You can also use the module to pull back a list of all the MBean values available in the JVM too:<br><br>```<br>jmxConnection = JMXConnection(\"service:jmx:rmi:///jndi/rmi://localhost:9999/jmxrmi\")<br>jmxQuery = [JMXQuery(\"*:*\")]<br>metrics = jmxConnection.query(jmxQuery)<br>for metric in metrics:<br>    print(f\"{metric.to_query_string()} ({metric.value_type}) = {metric.value}\")<br>```<br><br>## Installation<br><br>Just use pip to install the module in your Python environment:<br><br>```<br>pip install jmxquery<br>```<br><br>\n          </div>"}, "last_serial": 4372657, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "2871e24fdbb5659d4819ace01500f1b2", "sha256": "7b48639da42d20f214274ebaf0119152da2e6dd7e6adb792fcfcc7d65e34acbc"}, "downloads": -1, "filename": "jmxquery_jcruz-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2871e24fdbb5659d4819ace01500f1b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5229, "upload_time": "2018-10-12T22:22:11", "upload_time_iso_8601": "2018-10-12T22:22:11.454999Z", "url": "https://files.pythonhosted.org/packages/8b/08/4cc7d72037965d762bc71befb10037b0eb7b221f42e1f51e5cc88ef1b28b/jmxquery_jcruz-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "485fc017f29e1c1e94b9bde8079928c7", "sha256": "a5402b3adf3dbfb8d59814589d70f92798a57e962f4b9c988343126880579983"}, "downloads": -1, "filename": "jmxquery-jcruz-0.5.1.tar.gz", "has_sig": false, "md5_digest": "485fc017f29e1c1e94b9bde8079928c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4381, "upload_time": "2018-10-12T22:22:12", "upload_time_iso_8601": "2018-10-12T22:22:12.563788Z", "url": "https://files.pythonhosted.org/packages/8c/83/eb19935e6ee3e000dcadd0ebc9f877e00d38cc7543f10e1e82e33be405f5/jmxquery-jcruz-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "e1d72838bfff2edd6d0127fa37822d38", "sha256": "e601e619e8e7be4b0c3147a16fd0d8d5ef466bb997fdaa796467b9ac67fa6967"}, "downloads": -1, "filename": "jmxquery_jcruz-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d72838bfff2edd6d0127fa37822d38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23391, "upload_time": "2018-10-13T19:25:27", "upload_time_iso_8601": "2018-10-13T19:25:27.296805Z", "url": "https://files.pythonhosted.org/packages/c0/ea/dac4f0409d5c39b77de1645f0e93c5e1c82b224d7bd8e42b75d816afc6c9/jmxquery_jcruz-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf8f84a704281104029360b12141820b", "sha256": "33ce15bb1382a7caa0042638652e184b53298f9ebb4245989d5faefaa7c541d4"}, "downloads": -1, "filename": "jmxquery-jcruz-0.5.2.tar.gz", "has_sig": false, "md5_digest": "bf8f84a704281104029360b12141820b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24198, "upload_time": "2018-10-13T19:25:28", "upload_time_iso_8601": "2018-10-13T19:25:28.748484Z", "url": "https://files.pythonhosted.org/packages/6a/7b/1f23874471fc687e82e80d7cb7c3724d3260e245ab785d2c1ce2c7024b55/jmxquery-jcruz-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "98cfdf66fc563ce2dff27ce49079c651", "sha256": "be2cda4f0312c520ee781fd251e7f6b65de87ef22fbb6364bbcb9f55b9c88d0e"}, "downloads": -1, "filename": "jmxquery_jcruz-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "98cfdf66fc563ce2dff27ce49079c651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23399, "upload_time": "2018-10-13T19:35:56", "upload_time_iso_8601": "2018-10-13T19:35:56.610625Z", "url": "https://files.pythonhosted.org/packages/af/e4/f9f64f11d3724cc133b52d6b6bf9bd0b24fb3c51e204fdb23f5997ee1cf5/jmxquery_jcruz-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "390c5dd1a301c46701069f187aa5d940", "sha256": "47b598da97dd223ad0ffaf497f917cd63a3ccef90f96e129dd7bf588afa17a83"}, "downloads": -1, "filename": "jmxquery-jcruz-0.5.3.tar.gz", "has_sig": false, "md5_digest": "390c5dd1a301c46701069f187aa5d940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24203, "upload_time": "2018-10-13T19:35:57", "upload_time_iso_8601": "2018-10-13T19:35:57.944092Z", "url": "https://files.pythonhosted.org/packages/c4/0b/5039d3f5a745e1ea22f558252a13c4217c44411dff60847d2a95cfa0fb2c/jmxquery-jcruz-0.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98cfdf66fc563ce2dff27ce49079c651", "sha256": "be2cda4f0312c520ee781fd251e7f6b65de87ef22fbb6364bbcb9f55b9c88d0e"}, "downloads": -1, "filename": "jmxquery_jcruz-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "98cfdf66fc563ce2dff27ce49079c651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23399, "upload_time": "2018-10-13T19:35:56", "upload_time_iso_8601": "2018-10-13T19:35:56.610625Z", "url": "https://files.pythonhosted.org/packages/af/e4/f9f64f11d3724cc133b52d6b6bf9bd0b24fb3c51e204fdb23f5997ee1cf5/jmxquery_jcruz-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "390c5dd1a301c46701069f187aa5d940", "sha256": "47b598da97dd223ad0ffaf497f917cd63a3ccef90f96e129dd7bf588afa17a83"}, "downloads": -1, "filename": "jmxquery-jcruz-0.5.3.tar.gz", "has_sig": false, "md5_digest": "390c5dd1a301c46701069f187aa5d940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24203, "upload_time": "2018-10-13T19:35:57", "upload_time_iso_8601": "2018-10-13T19:35:57.944092Z", "url": "https://files.pythonhosted.org/packages/c4/0b/5039d3f5a745e1ea22f558252a13c4217c44411dff60847d2a95cfa0fb2c/jmxquery-jcruz-0.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:21 2020"}