{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Arrayish\n========\n\nA library for downstream compatibility of Numpy-compatible arrays.\n\nUsage\n-----\n\nFor an alternative array implementation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n   import numpy as np\n   import arrayish as ai\n\n\n   class CustomArray(object):\n       \"\"\"Your custom ``ndarray`` compatible implementation.\"\"\"\n       pass\n\n\n   def dot(a, b, out=None)\n       \"\"\" Your custom implementation of ``np.dot``. \"\"\"\n       pass\n\n\n   # Between your own arrays\n   ai.dot.add((CustomArray, CustomArray), dot)\n\n   # With Numpy Arrays, if you'd like. Can also pass another function\n   ai.dot.add((np.ndarray, CustomArray), dot)\n   ai.dot.add((CustomArray, np.ndarray), dot)\n\nFor a downstream library willing to support alternative arrays\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n   import arrayish as ai\n   import numpy as np\n\n   # Instead of this:\n   np.dot(a, b)\n\n   # Do this:\n   ai.dot(a, b)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hameerabbasi/arrayish", "keywords": "", "license": "BSD", "maintainer": "Hameer Abbasi", "maintainer_email": "hameerabbasi@yahoo.com", "name": "arrayish", "package_url": "https://pypi.org/project/arrayish/", "platform": "", "project_url": "https://pypi.org/project/arrayish/", "project_urls": {"Homepage": "https://github.com/hameerabbasi/arrayish"}, "release_url": "https://pypi.org/project/arrayish/0.0.1/", "requires_dist": ["numpy", "multipledispatch"], "requires_python": "", "summary": "A package to allow downstream inter-compatibility for Numpy-compatible array structures", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A library for downstream compatibility of Numpy-compatible arrays.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"for-an-alternative-array-implementation\">\n<h3>For an alternative array implementation</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">arrayish</span> <span class=\"k\">as</span> <span class=\"nn\">ai</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomArray</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Your custom ``ndarray`` compatible implementation.\"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"sd\">\"\"\" Your custom implementation of ``np.dot``. \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"c1\"># Between your own arrays</span>\n<span class=\"n\">ai</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">((</span><span class=\"n\">CustomArray</span><span class=\"p\">,</span> <span class=\"n\">CustomArray</span><span class=\"p\">),</span> <span class=\"n\">dot</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With Numpy Arrays, if you'd like. Can also pass another function</span>\n<span class=\"n\">ai</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">CustomArray</span><span class=\"p\">),</span> <span class=\"n\">dot</span><span class=\"p\">)</span>\n<span class=\"n\">ai</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">((</span><span class=\"n\">CustomArray</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">),</span> <span class=\"n\">dot</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"for-a-downstream-library-willing-to-support-alternative-arrays\">\n<h3>For a downstream library willing to support alternative arrays</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">arrayish</span> <span class=\"k\">as</span> <span class=\"nn\">ai</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># Instead of this:</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Do this:</span>\n<span class=\"n\">ai</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3783677, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "93c858cdfa6a3204dfbfa4d7edfd84da", "sha256": "65ae4efb1e955b3c0fe53d66b150ddd648413346e13494650cbe80f78b1daa8a"}, "downloads": -1, "filename": "arrayish-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93c858cdfa6a3204dfbfa4d7edfd84da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2661, "upload_time": "2018-04-20T09:43:07", "upload_time_iso_8601": "2018-04-20T09:43:07.364744Z", "url": "https://files.pythonhosted.org/packages/6b/51/93ce4a400b1f08f85e8274fe11ea858d9723cdca8ced1b2a14a9a4574ed1/arrayish-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfe6dcbfaee0bf9c42fd8ecea7dcb944", "sha256": "d8969fd7dc4cfb4a93ebd32e675aba634f9119bf374473fd8c47894657b7a207"}, "downloads": -1, "filename": "arrayish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dfe6dcbfaee0bf9c42fd8ecea7dcb944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19257, "upload_time": "2018-04-20T09:43:09", "upload_time_iso_8601": "2018-04-20T09:43:09.043766Z", "url": "https://files.pythonhosted.org/packages/60/88/3c1493475a8cb6cb22b5c323a2fe09bbbb24b9396f7aa05f28fc9992a321/arrayish-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93c858cdfa6a3204dfbfa4d7edfd84da", "sha256": "65ae4efb1e955b3c0fe53d66b150ddd648413346e13494650cbe80f78b1daa8a"}, "downloads": -1, "filename": "arrayish-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93c858cdfa6a3204dfbfa4d7edfd84da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2661, "upload_time": "2018-04-20T09:43:07", "upload_time_iso_8601": "2018-04-20T09:43:07.364744Z", "url": "https://files.pythonhosted.org/packages/6b/51/93ce4a400b1f08f85e8274fe11ea858d9723cdca8ced1b2a14a9a4574ed1/arrayish-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfe6dcbfaee0bf9c42fd8ecea7dcb944", "sha256": "d8969fd7dc4cfb4a93ebd32e675aba634f9119bf374473fd8c47894657b7a207"}, "downloads": -1, "filename": "arrayish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dfe6dcbfaee0bf9c42fd8ecea7dcb944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19257, "upload_time": "2018-04-20T09:43:09", "upload_time_iso_8601": "2018-04-20T09:43:09.043766Z", "url": "https://files.pythonhosted.org/packages/60/88/3c1493475a8cb6cb22b5c323a2fe09bbbb24b9396f7aa05f28fc9992a321/arrayish-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:10 2020"}