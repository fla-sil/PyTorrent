{"info": {"author": "Janusz Skonieczny", "author_email": "js+pypi@bravelabs.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 1.10", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "====================\nDjango Model Cleanup\n====================\n\n\n.. image:: https://img.shields.io/pypi/v/django-model-cleanup.svg\n        :target: https://pypi.python.org/pypi/django-model-cleanup\n\n.. image:: https://img.shields.io/travis/wooyek/django-model-cleanup.svg\n        :target: https://travis-ci.org/wooyek/django-model-cleanup\n\n.. image:: https://readthedocs.org/projects/django-model-cleanup/badge/?version=latest\n        :target: https://django-model-cleanup.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n.. image:: https://coveralls.io/repos/github/wooyek/django-model-cleanup/badge.svg?branch=develop\n        :target: https://coveralls.io/github/wooyek/django-model-cleanup?branch=develop\n        :alt: Coveralls.io coverage\n\n.. image:: https://codecov.io/gh/wooyek/django-model-cleanup/branch/develop/graph/badge.svg\n        :target: https://codecov.io/gh/wooyek/django-model-cleanup\n        :alt: CodeCov coverage\n\n.. image:: https://api.codeclimate.com/v1/badges/0e7992f6259bc7fd1a1a/maintainability\n        :target: https://codeclimate.com/github/wooyek/django-model-cleanup/maintainability\n        :alt: Maintainability\n\n.. image:: https://img.shields.io/github/license/wooyek/django-model-cleanup.svg\n        :target: https://github.com/wooyek/django-model-cleanup/blob/develop/LICENSE\n        :alt: License\n\n.. image:: https://img.shields.io/twitter/url/https/github.com/wooyek/django-model-cleanup.svg?style=social\n        :target: https://twitter.com/intent/tweet?text=Wow:&url=https://github.com/wooyek/django-model-cleanup\n        :alt: Tweet about this project\n\n.. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\n        :target: https://saythanks.io/to/wooyek\n\nMixins for model cleanup methods and validation error concatenations\n\n* Free software: MIT license\n* Documentation: https://django-model-cleanup.readthedocs.io.\n\nFeatures of CleanMixin\n----------------------\n\n* Provides `clean` method implementation\n* Call to `full_clean` will result in call to all `clean_*` methods\n* All methods will get called regardless of validation errors - get all errors at once\n* Auto mapping of errors to field names based on clean method names, if errors have no error_dict\n\nQuickstart\n----------\n\nInstall Django Model Cleanup::\n\n    pip install django-model-cleanup\n\nAdd mixin in your models and enjoy `clean_` method collection and error concatenation when `full_clean` is called:\n\n.. code-block:: python\n\n    from django.core.exceptions import ValidationError\n    from django.db import models\n    from django.utils.translation import ugettext_lazy as _\n    from django_model_cleanup import CleanMixin, ExtensibleValidationError\n\n\n    class SomeModel(CleanMixin, models.Model):\n        lorem = models.CharField(max_length=10, blank=True)\n\n        def clean_foo(self):\n            raise ValidationError('Foo is bad')\n\n        def clean_bar(self):\n            raise ExtensibleValidationError({'bar': _('Bar is wrong cause %s > %s!')}, code='bar', params=(2, 1))\n\n        def clean_legacy(self):\n            # We can't init ValidationError as one-liner, cause dict + params are not compatible\n            # We need to wrap a message in ValidationError and put that in dict indicating a field\n            msg = _('Bar legacy error %s > %s!')\n            error = ValidationError(msg, code='bar', params=(7, 5))\n            raise ValidationError({'bar': error})\n\nEach error handling and concatenation is no longer required:\n\n.. code-block:: python\n\n        # This is not longer required:\n        def clean(self):\n            errors = []\n            try:\n                self.clean_foo()\n            except ValidationError as ex:\n                errors.append(ex)\n            errors = []\n            try:\n                self.clean_bar()\n            except ValidationError as ex:\n                errors.append(ex)\n            errors = []\n            try:\n                self.clean_legacy()\n            except ValidationError as ex:\n                errors.append(ex)\n            if errors:\n                raise ValidationError(errors)\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n    $ pipenv install --dev\n    $ pipenv shell\n    $ tox\n\n\nWe recommend using pipenv_ but a legacy approach to creating virtualenv and installing requirements should also work.\nPlease install `requirements/development.txt` to setup virtual env for testing and development.\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `wooyek/cookiecutter-django-app`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`wooyek/cookiecutter-django-app`: https://github.com/wooyek/cookiecutter-django-app\n.. _`pipenv`: https://docs.pipenv.org/install.html#fancy-installation-of-pipenv\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-12-05)\n++++++++++++++++++\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wooyek/django-model-cleanup", "keywords": "django-model-cleanup", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "django-model-cleanup", "package_url": "https://pypi.org/project/django-model-cleanup/", "platform": "", "project_url": "https://pypi.org/project/django-model-cleanup/", "project_urls": {"Homepage": "https://github.com/wooyek/django-model-cleanup"}, "release_url": "https://pypi.org/project/django-model-cleanup/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Mixins for model cleanup methods and validation error concatenations", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/django-model-cleanup\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-model-cleanup.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/081fdb96394d082ada7081514f0565c99675c12e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d6d6f64656c2d636c65616e75702e737667\"></a>\n<a href=\"https://travis-ci.org/wooyek/django-model-cleanup\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/wooyek/django-model-cleanup.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75bd3d0854ee5176493f2a27f569142377b2a579/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f776f6f79656b2f646a616e676f2d6d6f64656c2d636c65616e75702e737667\"></a>\n<a href=\"https://django-model-cleanup.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83772e7cbee107c185d6a2186bd1db53be342a37/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646a616e676f2d6d6f64656c2d636c65616e75702f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/wooyek/django-model-cleanup?branch=develop\" rel=\"nofollow\"><img alt=\"Coveralls.io coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d90ef91f7ec2fd23bf60fd5b71a41bfd78f66fb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f776f6f79656b2f646a616e676f2d6d6f64656c2d636c65616e75702f62616467652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://codecov.io/gh/wooyek/django-model-cleanup\" rel=\"nofollow\"><img alt=\"CodeCov coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f13cc6a25a362b7655286785aaff5efb8912b585/68747470733a2f2f636f6465636f762e696f2f67682f776f6f79656b2f646a616e676f2d6d6f64656c2d636c65616e75702f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/wooyek/django-model-cleanup/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef4cfb2e73a6e947a1ead49115d4001fe12d9c78/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f30653739393266363235396263376664316131612f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://github.com/wooyek/django-model-cleanup/blob/develop/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6451a6d5c1cc09f704cb601269cafede445a2c25/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f776f6f79656b2f646a616e676f2d6d6f64656c2d636c65616e75702e737667\"></a>\n<a href=\"https://twitter.com/intent/tweet?text=Wow:&amp;url=https://github.com/wooyek/django-model-cleanup\" rel=\"nofollow\"><img alt=\"Tweet about this project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a81d89ccec1a94a47345a942d531e20a9883e29b/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f776f6f79656b2f646a616e676f2d6d6f64656c2d636c65616e75702e7376673f7374796c653d736f6369616c\"></a>\n<a href=\"https://saythanks.io/to/wooyek\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a>\n<p>Mixins for model cleanup methods and validation error concatenations</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://django-model-cleanup.readthedocs.io\" rel=\"nofollow\">https://django-model-cleanup.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features-of-cleanmixin\">\n<h2>Features of CleanMixin</h2>\n<ul>\n<li>Provides <cite>clean</cite> method implementation</li>\n<li>Call to <cite>full_clean</cite> will result in call to all <cite>clean_*</cite> methods</li>\n<li>All methods will get called regardless of validation errors - get all errors at once</li>\n<li>Auto mapping of errors to field names based on clean method names, if errors have no error_dict</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install Django Model Cleanup:</p>\n<pre>pip install django-model-cleanup\n</pre>\n<p>Add mixin in your models and enjoy <cite>clean_</cite> method collection and error concatenation when <cite>full_clean</cite> is called:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">ugettext_lazy</span> <span class=\"k\">as</span> <span class=\"n\">_</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_model_cleanup</span> <span class=\"kn\">import</span> <span class=\"n\">CleanMixin</span><span class=\"p\">,</span> <span class=\"n\">ExtensibleValidationError</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SomeModel</span><span class=\"p\">(</span><span class=\"n\">CleanMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">lorem</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean_foo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"s1\">'Foo is bad'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean_bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ExtensibleValidationError</span><span class=\"p\">({</span><span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Bar is wrong cause </span><span class=\"si\">%s</span><span class=\"s1\"> &gt; </span><span class=\"si\">%s</span><span class=\"s1\">!'</span><span class=\"p\">)},</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean_legacy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># We can't init ValidationError as one-liner, cause dict + params are not compatible</span>\n        <span class=\"c1\"># We need to wrap a message in ValidationError and put that in dict indicating a field</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Bar legacy error </span><span class=\"si\">%s</span><span class=\"s1\"> &gt; </span><span class=\"si\">%s</span><span class=\"s1\">!'</span><span class=\"p\">)</span>\n        <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">({</span><span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"n\">error</span><span class=\"p\">})</span>\n</pre>\n<p>Each error handling and concatenation is no longer required:</p>\n<pre><span class=\"c1\"># This is not longer required:</span>\n<span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clean_foo</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clean_bar</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clean_legacy</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n        <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"n\">errors</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Does the code actually work?</p>\n<dl>\n<dt>::</dt>\n<dd>$ pipenv install \u2013dev\n$ pipenv shell\n$ tox</dd>\n</dl>\n<p>We recommend using <a href=\"https://docs.pipenv.org/install.html#fancy-installation-of-pipenv\" rel=\"nofollow\">pipenv</a> but a legacy approach to creating virtualenv and installing requirements should also work.\nPlease install <cite>requirements/development.txt</cite> to setup virtual env for testing and development.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/wooyek/cookiecutter-django-app\" rel=\"nofollow\">wooyek/cookiecutter-django-app</a> project template.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2017-12-05)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3391848, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "aa313385bab9b96d42d498b575614050", "sha256": "788909682e4a572059f8b568eb3ddd1d4bababa18c750637d3cb8de8b1453166"}, "downloads": -1, "filename": "django_model_cleanup-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa313385bab9b96d42d498b575614050", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 8555, "upload_time": "2017-12-05T21:08:21", "upload_time_iso_8601": "2017-12-05T21:08:21.237983Z", "url": "https://files.pythonhosted.org/packages/f0/2b/44efc0669610cb3b5613075501dd587ee0f58ff044baeb00455cf8ce4062/django_model_cleanup-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19bb04e31708d431e514dcf5f6ecc0ea", "sha256": "0fd7a92543e69e1d6007c064855e5705220409f74582859332639f268eb55e2a"}, "downloads": -1, "filename": "django-model-cleanup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19bb04e31708d431e514dcf5f6ecc0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30142, "upload_time": "2017-12-05T21:08:19", "upload_time_iso_8601": "2017-12-05T21:08:19.003412Z", "url": "https://files.pythonhosted.org/packages/6b/13/b49e114de028082ee14db160e46f7db0ee52d0da1f730b0b9bd3c0d121a2/django-model-cleanup-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa313385bab9b96d42d498b575614050", "sha256": "788909682e4a572059f8b568eb3ddd1d4bababa18c750637d3cb8de8b1453166"}, "downloads": -1, "filename": "django_model_cleanup-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa313385bab9b96d42d498b575614050", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 8555, "upload_time": "2017-12-05T21:08:21", "upload_time_iso_8601": "2017-12-05T21:08:21.237983Z", "url": "https://files.pythonhosted.org/packages/f0/2b/44efc0669610cb3b5613075501dd587ee0f58ff044baeb00455cf8ce4062/django_model_cleanup-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19bb04e31708d431e514dcf5f6ecc0ea", "sha256": "0fd7a92543e69e1d6007c064855e5705220409f74582859332639f268eb55e2a"}, "downloads": -1, "filename": "django-model-cleanup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19bb04e31708d431e514dcf5f6ecc0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30142, "upload_time": "2017-12-05T21:08:19", "upload_time_iso_8601": "2017-12-05T21:08:19.003412Z", "url": "https://files.pythonhosted.org/packages/6b/13/b49e114de028082ee14db160e46f7db0ee52d0da1f730b0b9bd3c0d121a2/django-model-cleanup-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:02 2020"}