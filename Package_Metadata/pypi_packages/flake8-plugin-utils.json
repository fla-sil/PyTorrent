{"info": {"author": "Afonasev Evgeniy", "author_email": "ea.afonasev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# flake8-plugin-utils\n\n[![pypi](https://badge.fury.io/py/flake8-plugin-utils.svg)](https://pypi.org/project/flake8-plugin-utils)\n[![Python: 3.6+](https://img.shields.io/badge/Python-3.6+-blue.svg)](https://pypi.org/project/flake8-plugin-utils)\n[![Downloads](https://img.shields.io/pypi/dm/flake8-plugin-utils.svg)](https://pypistats.org/packages/flake8-plugin-utils)\n[![Build Status](https://travis-ci.org/Afonasev/flake8-plugin-utils.svg?branch=master)](https://travis-ci.org/Afonasev/flake8-plugin-utils)\n[![Code coverage](https://codecov.io/gh/afonasev/flake8-plugin-utils/branch/master/graph/badge.svg)](https://codecov.io/gh/afonasev/flake8-plugin-utils)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://en.wikipedia.org/wiki/MIT_License)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nThe package provides base classes and utils for flake8 plugin writing.\n\n## Installation\n\n```bash\npip install flake8-plugin-utils\n```\n\n## Example\n\nWrite simple plugin\n\n```python\nfrom flake8_plugin_utils import Error, Visitor, Plugin\n\nclass MyError(Error):\n    code = 'X100'\n    message = 'my error'\n\nclass MyVisitor(Visitor):\n    def visit_ClassDef(self, node):\n        self.error_from_node(MyError, node)\n\nclass MyPlugin(Plugin):\n    name = 'MyPlugin'\n    version = '0.1.0'\n    visitors = [MyVisitor]\n```\n\nand test it with pytest\n\n```python\nfrom flake8_plugin_utils import assert_error, assert_not_error\n\ndef test_code_with_error():\n    assert_error(MyVisitor, 'class Y: pass', MyError)\n\ndef test_code_without_error():\n    assert_not_error(MyVisitor, 'x = 1')\n```\n\n### Configuration\n\nTo add configuration to a plugin, do the following:\n\n1. Implement classmethod `add_options` in your plugin class, as per the\n[flake8 docs](https://flake8.pycqa.org/en/latest/plugin-development/plugin-parameters.html#registering-options).\n1. Override classmethod `parse_options_to_config` in your plugin class\nto return any object holding the options you need.\n1. If you need a custom `__init__` for your visitor, make sure it accepts\na keyword argument named `config` and pass it to `super().__init__`\n1. Use `self.config` in visitor code.\n\nExample:\n\n```python\nfrom flake8_plugin_utils import Error, Visitor, Plugin, assert_error\n\nclass MyError(Error):\n    code = 'X100'\n    message = 'my error with {thing}'\n\nclass MyConfig:\n    def __init__(self, config_option):\n        self.config_option = config_option\n\nclass MyVisitorWithConfig(Visitor):\n    def visit_ClassDef(self, node):\n        self.error_from_node(\n            MyError, node, thing=f'{node.name} {self.config.config_option}'\n        )\n\nclass MyPluginWithConfig(Plugin):\n    name = 'MyPluginWithConfig'\n    version = '0.0.1'\n    visitors = [MyVisitorWithConfig]\n\n    @classmethod\n    def add_options(cls, options_manager):\n        options_manager.add_option('--config_option', ...)\n\n    @classmethod\n    def parse_options_to_config(cls, option_manager, options, args):\n        return MyConfig(config_option=options.config_option)\n\n\ndef test_code_with_error():\n    assert_error(\n        MyVisitorWithConfig,\n        'class Y: pass',\n        MyError,\n        config=MyConfig(config_option='123'),\n        thing='Y 123',\n    )\n```\n\n### Formatting\n\nYour `Error`s can take formatting arguments in their `message`:\n\n```python\nfrom flake8_plugin_utils import Error, Visitor, assert_error\n\nclass MyFormattedError(Error):\n    code = 'X101'\n    message = 'my error with {thing}'\n\nclass MyFormattedVisitor(Visitor):\n    def visit_ClassDef(self, node):\n        self.error_from_node(MyFormattedError, node, thing=node.name)\n\ndef test_code_with_error():\n    assert_error(\n        MyFormattedVisitor,\n        'class Y: pass',\n        MyFormattedError,\n        thing='Y',\n    )\n```\n\n### Usage with typing/mypy\n\nThe `Plugin` and `Visitor` classes are generic with the config class as type\nparameter.  If your plugin does not have any config, inherit it from\n`Plugin[None]` and the visitors from `Visitor[None]`.  Otherwise, use the\nconfig class as the type parameter (e.g. `Plugin[MyConfig]` and\n`Visitor[MyConfig]` in the above example).\n\n### Utility functions\n\n* `assert_error`, `assert_not_error`  \nUtilities for testing visitors (see examples above).\n\n* `is_true`, `is_false`, `is_none`  \nConvenience functions to check if an AST node represents a\n`True`/`False`/`None` value.\n\n* `check_equivalent_nodes`  \nChecks if two given AST nodes are equivalent.\nThe nodes are considered equivalent in the following cases:\n  * dicts -- if they contain same key-value pairs, possibly in different order,\n  with duplicates and `**expansions` taken into account\n  * sets -- if they contain same elements, possibly in different order,\n  with duplicates taken into account\n  * anything else -- if they represent the same AST, regardless of formatting\n  (with any dicts in sets inside checked according to the rules above)\n\n## License\n\nMIT\n\n## Change Log\n\nUnreleased\n-----\n\n* ...\n\n1.3.0 - 2020-03-26\n-----\n\n* add `check_equivalent_nodes` utility function\n\n1.2.0 - 2020-03-06\n-----\n\n* add `config` argument to `assert_error` and `assert_not_error`\n\n1.1.1 - 2020-03-02\n-----\n\n* ignore encoding errors when reading strings for noqa validation\n\n1.1.0 - 2020-03-01\n-----\n\n* add ability for plugins to parse and use configuration  \n**NB: this change breaks type-checking if you use typing/mypy. Change your\ncode to inherit from `Plugin[None]` and `Visitor[None]` to fix.**\n\n1.0.0 - 2019-05-23\n-----\n\n* add message formatting to Error\n\n0.2.1 - 2019-04-01\n-----\n\n* don`t strip before src dedent in _error_from_src\n* add is_none, is_true, is_false util functions\n\n0.2.0 - 2019.02.21\n-----\n\n* add assert methods\n\n0.1.0 - 2019.02.09\n-----\n\n* initial\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/flake8-plugin-utils", "keywords": "flake8,plugin,utils", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-plugin-utils", "package_url": "https://pypi.org/project/flake8-plugin-utils/", "platform": "", "project_url": "https://pypi.org/project/flake8-plugin-utils/", "project_urls": {"Homepage": "https://pypi.org/project/flake8-plugin-utils", "Repository": "https://github.com/afonasev/flake8-plugin-utils"}, "release_url": "https://pypi.org/project/flake8-plugin-utils/1.3.0/", "requires_dist": null, "requires_python": ">=3.6,<4.0", "summary": "The package provides base classes and utils for flake8 plugin writing", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flake8-plugin-utils</h1>\n<p><a href=\"https://pypi.org/project/flake8-plugin-utils\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb50a3321283f457753b892cbc5bc58fb18c72df/68747470733a2f2f62616467652e667572792e696f2f70792f666c616b65382d706c7567696e2d7574696c732e737667\"></a>\n<a href=\"https://pypi.org/project/flake8-plugin-utils\" rel=\"nofollow\"><img alt=\"Python: 3.6+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27b9ffa6a30c02fbf99c079c370e052fa9190e49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e362b2d626c75652e737667\"></a>\n<a href=\"https://pypistats.org/packages/flake8-plugin-utils\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/079b9c240f27cfd421c45bc102dff93f1cabf387/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f666c616b65382d706c7567696e2d7574696c732e737667\"></a>\n<a href=\"https://travis-ci.org/Afonasev/flake8-plugin-utils\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac92fa28c00d25d89b8b84cedd09f2b854fff094/68747470733a2f2f7472617669732d63692e6f72672f41666f6e617365762f666c616b65382d706c7567696e2d7574696c732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/afonasev/flake8-plugin-utils\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/175b85a56b1d009127ce33f3443de9c016c71cbd/68747470733a2f2f636f6465636f762e696f2f67682f61666f6e617365762f666c616b65382d706c7567696e2d7574696c732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>The package provides base classes and utils for flake8 plugin writing.</p>\n<h2>Installation</h2>\n<pre>pip install flake8-plugin-utils\n</pre>\n<h2>Example</h2>\n<p>Write simple plugin</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flake8_plugin_utils</span> <span class=\"kn\">import</span> <span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">Visitor</span><span class=\"p\">,</span> <span class=\"n\">Plugin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyError</span><span class=\"p\">(</span><span class=\"n\">Error</span><span class=\"p\">):</span>\n    <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">'X100'</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">'my error'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVisitor</span><span class=\"p\">(</span><span class=\"n\">Visitor</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">visit_ClassDef</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_from_node</span><span class=\"p\">(</span><span class=\"n\">MyError</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyPlugin</span><span class=\"p\">(</span><span class=\"n\">Plugin</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'MyPlugin'</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n    <span class=\"n\">visitors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MyVisitor</span><span class=\"p\">]</span>\n</pre>\n<p>and test it with pytest</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flake8_plugin_utils</span> <span class=\"kn\">import</span> <span class=\"n\">assert_error</span><span class=\"p\">,</span> <span class=\"n\">assert_not_error</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_code_with_error</span><span class=\"p\">():</span>\n    <span class=\"n\">assert_error</span><span class=\"p\">(</span><span class=\"n\">MyVisitor</span><span class=\"p\">,</span> <span class=\"s1\">'class Y: pass'</span><span class=\"p\">,</span> <span class=\"n\">MyError</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_code_without_error</span><span class=\"p\">():</span>\n    <span class=\"n\">assert_not_error</span><span class=\"p\">(</span><span class=\"n\">MyVisitor</span><span class=\"p\">,</span> <span class=\"s1\">'x = 1'</span><span class=\"p\">)</span>\n</pre>\n<h3>Configuration</h3>\n<p>To add configuration to a plugin, do the following:</p>\n<ol>\n<li>Implement classmethod <code>add_options</code> in your plugin class, as per the\n<a href=\"https://flake8.pycqa.org/en/latest/plugin-development/plugin-parameters.html#registering-options\" rel=\"nofollow\">flake8 docs</a>.</li>\n<li>Override classmethod <code>parse_options_to_config</code> in your plugin class\nto return any object holding the options you need.</li>\n<li>If you need a custom <code>__init__</code> for your visitor, make sure it accepts\na keyword argument named <code>config</code> and pass it to <code>super().__init__</code></li>\n<li>Use <code>self.config</code> in visitor code.</li>\n</ol>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flake8_plugin_utils</span> <span class=\"kn\">import</span> <span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">Visitor</span><span class=\"p\">,</span> <span class=\"n\">Plugin</span><span class=\"p\">,</span> <span class=\"n\">assert_error</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyError</span><span class=\"p\">(</span><span class=\"n\">Error</span><span class=\"p\">):</span>\n    <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">'X100'</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">'my error with </span><span class=\"si\">{thing}</span><span class=\"s1\">'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyConfig</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config_option</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_option</span> <span class=\"o\">=</span> <span class=\"n\">config_option</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVisitorWithConfig</span><span class=\"p\">(</span><span class=\"n\">Visitor</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">visit_ClassDef</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_from_node</span><span class=\"p\">(</span>\n            <span class=\"n\">MyError</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">thing</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\"> </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config_option</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n        <span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyPluginWithConfig</span><span class=\"p\">(</span><span class=\"n\">Plugin</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'MyPluginWithConfig'</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s1\">'0.0.1'</span>\n    <span class=\"n\">visitors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MyVisitorWithConfig</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_options</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">options_manager</span><span class=\"p\">):</span>\n        <span class=\"n\">options_manager</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s1\">'--config_option'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_options_to_config</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">option_manager</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyConfig</span><span class=\"p\">(</span><span class=\"n\">config_option</span><span class=\"o\">=</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">config_option</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">test_code_with_error</span><span class=\"p\">():</span>\n    <span class=\"n\">assert_error</span><span class=\"p\">(</span>\n        <span class=\"n\">MyVisitorWithConfig</span><span class=\"p\">,</span>\n        <span class=\"s1\">'class Y: pass'</span><span class=\"p\">,</span>\n        <span class=\"n\">MyError</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">MyConfig</span><span class=\"p\">(</span><span class=\"n\">config_option</span><span class=\"o\">=</span><span class=\"s1\">'123'</span><span class=\"p\">),</span>\n        <span class=\"n\">thing</span><span class=\"o\">=</span><span class=\"s1\">'Y 123'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<h3>Formatting</h3>\n<p>Your <code>Error</code>s can take formatting arguments in their <code>message</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flake8_plugin_utils</span> <span class=\"kn\">import</span> <span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">Visitor</span><span class=\"p\">,</span> <span class=\"n\">assert_error</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyFormattedError</span><span class=\"p\">(</span><span class=\"n\">Error</span><span class=\"p\">):</span>\n    <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s1\">'X101'</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">'my error with </span><span class=\"si\">{thing}</span><span class=\"s1\">'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyFormattedVisitor</span><span class=\"p\">(</span><span class=\"n\">Visitor</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">visit_ClassDef</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_from_node</span><span class=\"p\">(</span><span class=\"n\">MyFormattedError</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">thing</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_code_with_error</span><span class=\"p\">():</span>\n    <span class=\"n\">assert_error</span><span class=\"p\">(</span>\n        <span class=\"n\">MyFormattedVisitor</span><span class=\"p\">,</span>\n        <span class=\"s1\">'class Y: pass'</span><span class=\"p\">,</span>\n        <span class=\"n\">MyFormattedError</span><span class=\"p\">,</span>\n        <span class=\"n\">thing</span><span class=\"o\">=</span><span class=\"s1\">'Y'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<h3>Usage with typing/mypy</h3>\n<p>The <code>Plugin</code> and <code>Visitor</code> classes are generic with the config class as type\nparameter.  If your plugin does not have any config, inherit it from\n<code>Plugin[None]</code> and the visitors from <code>Visitor[None]</code>.  Otherwise, use the\nconfig class as the type parameter (e.g. <code>Plugin[MyConfig]</code> and\n<code>Visitor[MyConfig]</code> in the above example).</p>\n<h3>Utility functions</h3>\n<ul>\n<li>\n<p><code>assert_error</code>, <code>assert_not_error</code><br>\nUtilities for testing visitors (see examples above).</p>\n</li>\n<li>\n<p><code>is_true</code>, <code>is_false</code>, <code>is_none</code><br>\nConvenience functions to check if an AST node represents a\n<code>True</code>/<code>False</code>/<code>None</code> value.</p>\n</li>\n<li>\n<p><code>check_equivalent_nodes</code><br>\nChecks if two given AST nodes are equivalent.\nThe nodes are considered equivalent in the following cases:</p>\n<ul>\n<li>dicts -- if they contain same key-value pairs, possibly in different order,\nwith duplicates and <code>**expansions</code> taken into account</li>\n<li>sets -- if they contain same elements, possibly in different order,\nwith duplicates taken into account</li>\n<li>anything else -- if they represent the same AST, regardless of formatting\n(with any dicts in sets inside checked according to the rules above)</li>\n</ul>\n</li>\n</ul>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Change Log</h2>\n<h2>Unreleased</h2>\n<ul>\n<li>...</li>\n</ul>\n<h2>1.3.0 - 2020-03-26</h2>\n<ul>\n<li>add <code>check_equivalent_nodes</code> utility function</li>\n</ul>\n<h2>1.2.0 - 2020-03-06</h2>\n<ul>\n<li>add <code>config</code> argument to <code>assert_error</code> and <code>assert_not_error</code></li>\n</ul>\n<h2>1.1.1 - 2020-03-02</h2>\n<ul>\n<li>ignore encoding errors when reading strings for noqa validation</li>\n</ul>\n<h2>1.1.0 - 2020-03-01</h2>\n<ul>\n<li>add ability for plugins to parse and use configuration<br>\n<strong>NB: this change breaks type-checking if you use typing/mypy. Change your\ncode to inherit from <code>Plugin[None]</code> and <code>Visitor[None]</code> to fix.</strong></li>\n</ul>\n<h2>1.0.0 - 2019-05-23</h2>\n<ul>\n<li>add message formatting to Error</li>\n</ul>\n<h2>0.2.1 - 2019-04-01</h2>\n<ul>\n<li>don`t strip before src dedent in _error_from_src</li>\n<li>add is_none, is_true, is_false util functions</li>\n</ul>\n<h2>0.2.0 - 2019.02.21</h2>\n<ul>\n<li>add assert methods</li>\n</ul>\n<h2>0.1.0 - 2019.02.09</h2>\n<ul>\n<li>initial</li>\n</ul>\n\n          </div>"}, "last_serial": 6891470, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0eee185ede4dd883715a1079cf9d3841", "sha256": "5b9bb83903b6e6b3344f400e12fc7f2a61498164dce8301ac19a42475b640eb1"}, "downloads": -1, "filename": "flake8_plugin_utils-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0eee185ede4dd883715a1079cf9d3841", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5608, "upload_time": "2019-02-09T07:24:10", "upload_time_iso_8601": "2019-02-09T07:24:10.646777Z", "url": "https://files.pythonhosted.org/packages/72/d4/f88e34233fe0ea8abff892034523a6b8ecfea7c5aab80390d376b07d7350/flake8_plugin_utils-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a11c77174857618b8ba18d810a3222a", "sha256": "4e6716c8c773e0803c41776d4eff1ef7653051a8aacbf8c7accd6969951ab7d0"}, "downloads": -1, "filename": "flake8-plugin-utils-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a11c77174857618b8ba18d810a3222a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3672, "upload_time": "2019-02-09T07:24:08", "upload_time_iso_8601": "2019-02-09T07:24:08.592475Z", "url": "https://files.pythonhosted.org/packages/a4/3a/e420ca89fbabb3f0f70e015317b928091cb1ef768c325e1074d30d539d7a/flake8-plugin-utils-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fee9af7132ecd52ddf11e24c0e0a28f4", "sha256": "432dfd1c69ad74a08f6863cb106addd51642c20b3b00bfeb9b7e8fa0680f4cf3"}, "downloads": -1, "filename": "flake8_plugin_utils-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fee9af7132ecd52ddf11e24c0e0a28f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6440, "upload_time": "2019-02-21T12:31:07", "upload_time_iso_8601": "2019-02-21T12:31:07.479026Z", "url": "https://files.pythonhosted.org/packages/ae/ad/a4af3cf726bd9360aed5a980b892ba42a5602eb59c9e921c97fc36c42fc7/flake8_plugin_utils-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5bb290edeea2ca3632f28f493d009d5", "sha256": "f8f07f2b2b941122f34090679bcfa0919cf89eabad2140d1d8e390b549197b51"}, "downloads": -1, "filename": "flake8-plugin-utils-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f5bb290edeea2ca3632f28f493d009d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3743, "upload_time": "2019-02-21T12:31:06", "upload_time_iso_8601": "2019-02-21T12:31:06.097673Z", "url": "https://files.pythonhosted.org/packages/6e/74/fe203701f4c27a0bb35ad6b7948213eb70b964c3cb697058b9bedf31b2d9/flake8-plugin-utils-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "944565e72c027542315432c6d75b83dc", "sha256": "a46e95fcb745b72fa7e7528f76a38045af569da1609d2fcf90c0970735dab624"}, "downloads": -1, "filename": "flake8_plugin_utils-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "944565e72c027542315432c6d75b83dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6981, "upload_time": "2019-04-01T18:18:22", "upload_time_iso_8601": "2019-04-01T18:18:22.571345Z", "url": "https://files.pythonhosted.org/packages/2a/11/3f9cd5150bc28a49991880259119946dc2ceb0c7f5908fe5fd41571fc4da/flake8_plugin_utils-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a084831e83d40b58bcc27912b526f5c8", "sha256": "e6f830555436f7ed34ec8fd6c1d3f2a0cc5765ca53d25e242a14b330655b68c8"}, "downloads": -1, "filename": "flake8-plugin-utils-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a084831e83d40b58bcc27912b526f5c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3847, "upload_time": "2019-04-01T18:18:21", "upload_time_iso_8601": "2019-04-01T18:18:21.443575Z", "url": "https://files.pythonhosted.org/packages/66/b1/932e19e561f0b94ff4ee1a5c6b94ae5cdaa672d82ce03b11e8e7202b41da/flake8-plugin-utils-0.2.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "d38e9e0d27802723a3dd9f9b6ab09096", "sha256": "24b4a3b216ad588951d3d7adef4645dcb3b32a33b878e03baa790b5a66bf3a73"}, "downloads": -1, "filename": "flake8_plugin_utils-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d38e9e0d27802723a3dd9f9b6ab09096", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7422, "upload_time": "2019-05-23T11:22:28", "upload_time_iso_8601": "2019-05-23T11:22:28.634574Z", "url": "https://files.pythonhosted.org/packages/f3/d5/709acf069f2c11551d4c39e1408f90500ba5c1e7f0333cd86a1e0ff3a24a/flake8_plugin_utils-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6846f6f956cd2cc6cd03c041adb3a0ad", "sha256": "1ac5eb19773d5c7fdde60b0d901ae86be9c751bf697c61fdb6609b86872f3c6e"}, "downloads": -1, "filename": "flake8-plugin-utils-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6846f6f956cd2cc6cd03c041adb3a0ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4193, "upload_time": "2019-05-23T11:22:27", "upload_time_iso_8601": "2019-05-23T11:22:27.212822Z", "url": "https://files.pythonhosted.org/packages/46/77/0f54088ab0dd5a46cae012079f8a6dae31c2c59c0060b62be497919c7523/flake8-plugin-utils-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "920c055a11f474e11951b9dbcb5b15b1", "sha256": "809b50396f1229acc043fe1fd805a7c2fc3dc254b814daeed3e45f2565f40c9b"}, "downloads": -1, "filename": "flake8_plugin_utils-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "920c055a11f474e11951b9dbcb5b15b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5978, "upload_time": "2020-03-01T13:55:08", "upload_time_iso_8601": "2020-03-01T13:55:08.776688Z", "url": "https://files.pythonhosted.org/packages/95/99/d80bcd313f80df41e745d96cd487358dc64a899f7ec5d8898b0cffafb067/flake8_plugin_utils-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0097e4a7331c76c83fc1f65dfb2d61db", "sha256": "385f3cf3ffed5fe38a61645951ca7783b71912361601fba81427684cc8183c5f"}, "downloads": -1, "filename": "flake8-plugin-utils-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0097e4a7331c76c83fc1f65dfb2d61db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5747, "upload_time": "2020-03-01T13:55:07", "upload_time_iso_8601": "2020-03-01T13:55:07.303775Z", "url": "https://files.pythonhosted.org/packages/92/cf/9631451b944c82079997cad82a5dc4f46343d3c65343e236643f847b3509/flake8-plugin-utils-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d6714f72d258b1d96a4e00027f3187b6", "sha256": "563caf4b8c505af8f930c25f3c7028b5ec458daa8c239bb3a27aaa636d050df6"}, "downloads": -1, "filename": "flake8_plugin_utils-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d6714f72d258b1d96a4e00027f3187b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6076, "upload_time": "2020-03-01T19:41:35", "upload_time_iso_8601": "2020-03-01T19:41:35.079057Z", "url": "https://files.pythonhosted.org/packages/b8/74/9947856b5859bd1cd2da0588c93f575223b7171d5257249ae20621813dcb/flake8_plugin_utils-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a073a5311df915da9c0c9f2d31cceb0e", "sha256": "15664d4c4a6c1d02279f6ffcac8999d76f5538d14c7f0d487fab3f681c56cd69"}, "downloads": -1, "filename": "flake8-plugin-utils-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a073a5311df915da9c0c9f2d31cceb0e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5836, "upload_time": "2020-03-01T19:41:33", "upload_time_iso_8601": "2020-03-01T19:41:33.881354Z", "url": "https://files.pythonhosted.org/packages/82/d4/d4d9ed61dc8ba52346a9924a57781ea86dde5430e0c10f68ed542eb5cfa5/flake8-plugin-utils-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "81127c29402e31fb5a30ba9d7cbc0860", "sha256": "94b04623082dd64e97b93177e53125d5d17657c9864a4d3a29ef31a9a6c39e15"}, "downloads": -1, "filename": "flake8_plugin_utils-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81127c29402e31fb5a30ba9d7cbc0860", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6159, "upload_time": "2020-03-06T15:24:58", "upload_time_iso_8601": "2020-03-06T15:24:58.430513Z", "url": "https://files.pythonhosted.org/packages/6a/7e/aca84258eb1ceb33235d3753ee50cf9f4a46c0078016e60103bb63faaa10/flake8_plugin_utils-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3c4d3671bad479a5a6377878c3811eb", "sha256": "0ec78b72e48b2bdaf0037e97105f0770a2b59b0e7b2519aaec35993f3538073f"}, "downloads": -1, "filename": "flake8-plugin-utils-1.2.0.tar.gz", "has_sig": false, "md5_digest": "b3c4d3671bad479a5a6377878c3811eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5945, "upload_time": "2020-03-06T15:24:56", "upload_time_iso_8601": "2020-03-06T15:24:56.946813Z", "url": "https://files.pythonhosted.org/packages/3c/94/bc9b4b399d7607f8be6ae67e9575645280169adfe37c87186d6274bab08f/flake8-plugin-utils-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "eb5c0af8f1835d28a9e9876db2c27a62", "sha256": "305461c4fbf94877bcc9ccf435771b135d72a40eefd92e70a4b5f761ca43b1c8"}, "downloads": -1, "filename": "flake8_plugin_utils-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb5c0af8f1835d28a9e9876db2c27a62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9587, "upload_time": "2020-03-26T20:13:30", "upload_time_iso_8601": "2020-03-26T20:13:30.009155Z", "url": "https://files.pythonhosted.org/packages/9c/14/18c70b9ef54fc81ee926a434af81ce831ebff99636c5004921f42a90939a/flake8_plugin_utils-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6e71ef1fde699a3b455102f676f26b7", "sha256": "965931e7c17a760915e38bb10dc60516b414ef8210e987252a8d73dcb196a5f5"}, "downloads": -1, "filename": "flake8-plugin-utils-1.3.0.tar.gz", "has_sig": false, "md5_digest": "e6e71ef1fde699a3b455102f676f26b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9955, "upload_time": "2020-03-26T20:13:28", "upload_time_iso_8601": "2020-03-26T20:13:28.901722Z", "url": "https://files.pythonhosted.org/packages/97/8e/8b183d3f72199b22e4fe1002a7aab183fec397cbb7208f1fbceabed728f0/flake8-plugin-utils-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb5c0af8f1835d28a9e9876db2c27a62", "sha256": "305461c4fbf94877bcc9ccf435771b135d72a40eefd92e70a4b5f761ca43b1c8"}, "downloads": -1, "filename": "flake8_plugin_utils-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb5c0af8f1835d28a9e9876db2c27a62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9587, "upload_time": "2020-03-26T20:13:30", "upload_time_iso_8601": "2020-03-26T20:13:30.009155Z", "url": "https://files.pythonhosted.org/packages/9c/14/18c70b9ef54fc81ee926a434af81ce831ebff99636c5004921f42a90939a/flake8_plugin_utils-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6e71ef1fde699a3b455102f676f26b7", "sha256": "965931e7c17a760915e38bb10dc60516b414ef8210e987252a8d73dcb196a5f5"}, "downloads": -1, "filename": "flake8-plugin-utils-1.3.0.tar.gz", "has_sig": false, "md5_digest": "e6e71ef1fde699a3b455102f676f26b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9955, "upload_time": "2020-03-26T20:13:28", "upload_time_iso_8601": "2020-03-26T20:13:28.901722Z", "url": "https://files.pythonhosted.org/packages/97/8e/8b183d3f72199b22e4fe1002a7aab183fec397cbb7208f1fbceabed728f0/flake8-plugin-utils-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:21 2020"}