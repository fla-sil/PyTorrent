{"info": {"author": "hirokiky", "author_email": "hirokiky@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI"], "description": "Django Yet Another Class Based View\n===================================\n\ndjango-yacbv (YetAnotherClassBasedView) is replacement of django's CBV\n(django.views.generic.View).\n\n* Django's View can only dispatch corresponds to request.method.\n  but in many cases, it should consider more things, such as request parameter.\n* Django's ClassBasedGenericView is inflexible, hard to remember it's API\n  and hard to understand succession inheritances.\n* Django's View can't remove decorators, this is necessary for testing.\n  it forces us to test views with decorators, always it obstructs to\n  pure unit testing.\n\nAs these solution, django-yacbv is released.\n\nYACBV is simple\n===============\n\ndjango-yacbv provide simple class based view, allowing user to create more flexible\ndispatching, like this:\n\n.. code-block:: python\n\n    from yacbv import View, view_config\n\n\n    class TopView(View):\n        @view_config(method='get',\n                     param='flip',\n                     template_name='top2.html')\n        def flipped(self, request):\n            return {'word': request.GET['flip']}\n\n        @view_config(method='get',\n                     template_name='top.html')\n        def get(self, request):\n            return {'word': 'world'}\n\nNotice about them:\n\n* The `flip` method will be dispatched only case that Request object contains `flip` parameter.\n* The template for each views can be specified as `template_name` argument of `view_config`.\n* These returned dictionary will be used as context for Template.\n\nNow, django-yacbv is just pre-alpha library, not for production.\nIf you like this package, check out it from `Github <https://github.com/hirokiky/django-yacbv/>`_!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hirokiky/django-yacbv", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-yacbv", "package_url": "https://pypi.org/project/django-yacbv/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-yacbv/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hirokiky/django-yacbv"}, "release_url": "https://pypi.org/project/django-yacbv/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Replacement for Django's ClassBasedView.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-yet-another-class-based-view\">\n<h2>Django Yet Another Class Based View</h2>\n<p>django-yacbv (YetAnotherClassBasedView) is replacement of django\u2019s CBV\n(django.views.generic.View).</p>\n<ul>\n<li>Django\u2019s View can only dispatch corresponds to request.method.\nbut in many cases, it should consider more things, such as request parameter.</li>\n<li>Django\u2019s ClassBasedGenericView is inflexible, hard to remember it\u2019s API\nand hard to understand succession inheritances.</li>\n<li>Django\u2019s View can\u2019t remove decorators, this is necessary for testing.\nit forces us to test views with decorators, always it obstructs to\npure unit testing.</li>\n</ul>\n<p>As these solution, django-yacbv is released.</p>\n</div>\n<div id=\"yacbv-is-simple\">\n<h2>YACBV is simple</h2>\n<p>django-yacbv provide simple class based view, allowing user to create more flexible\ndispatching, like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yacbv</span> <span class=\"kn\">import</span> <span class=\"n\">View</span><span class=\"p\">,</span> <span class=\"n\">view_config</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TopView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"nd\">@view_config</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'get'</span><span class=\"p\">,</span>\n                 <span class=\"n\">param</span><span class=\"o\">=</span><span class=\"s1\">'flip'</span><span class=\"p\">,</span>\n                 <span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s1\">'top2.html'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">flipped</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'word'</span><span class=\"p\">:</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"p\">[</span><span class=\"s1\">'flip'</span><span class=\"p\">]}</span>\n\n    <span class=\"nd\">@view_config</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'get'</span><span class=\"p\">,</span>\n                 <span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s1\">'top.html'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'word'</span><span class=\"p\">:</span> <span class=\"s1\">'world'</span><span class=\"p\">}</span>\n</pre>\n<p>Notice about them:</p>\n<ul>\n<li>The <cite>flip</cite> method will be dispatched only case that Request object contains <cite>flip</cite> parameter.</li>\n<li>The template for each views can be specified as <cite>template_name</cite> argument of <cite>view_config</cite>.</li>\n<li>These returned dictionary will be used as context for Template.</li>\n</ul>\n<p>Now, django-yacbv is just pre-alpha library, not for production.\nIf you like this package, check out it from <a href=\"https://github.com/hirokiky/django-yacbv/\" rel=\"nofollow\">Github</a>!</p>\n</div>\n\n          </div>"}, "last_serial": 912525, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7473ab8c63c8c061f055319eef2ea5d4", "sha256": "01a03f9a9a71330398d77dc6756a2776b77fcac1ca79d04177eb41c69cc23b0e"}, "downloads": -1, "filename": "django-yacbv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7473ab8c63c8c061f055319eef2ea5d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4053, "upload_time": "2013-11-06T13:25:04", "upload_time_iso_8601": "2013-11-06T13:25:04.257940Z", "url": "https://files.pythonhosted.org/packages/0a/b3/6cd5f5bb4150ba56b1c5883b6c0f6a3e835d42ad3b759b82f3f73a59e5e8/django-yacbv-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7473ab8c63c8c061f055319eef2ea5d4", "sha256": "01a03f9a9a71330398d77dc6756a2776b77fcac1ca79d04177eb41c69cc23b0e"}, "downloads": -1, "filename": "django-yacbv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7473ab8c63c8c061f055319eef2ea5d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4053, "upload_time": "2013-11-06T13:25:04", "upload_time_iso_8601": "2013-11-06T13:25:04.257940Z", "url": "https://files.pythonhosted.org/packages/0a/b3/6cd5f5bb4150ba56b1c5883b6c0f6a3e835d42ad3b759b82f3f73a59e5e8/django-yacbv-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:46 2020"}