{"info": {"author": "Uwe Jugel", "author_email": "uwe.jugel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "\n        **<span style=\"color:red\">\n        This is the backport version 0.0.26 of 'makepy' for Python 2.\n        Please upgrade to Python 3+ and use the current 'makepy' version 0.0.26.\n        </span>**\n\n[![pypi version](https://img.shields.io/pypi/v/makepy.svg)](https://pypi.python.org/pypi/makepy)\n[![stage](https://img.shields.io/pypi/status/makepy.svg)](https://pypi.python.org/pypi/makepy)\n[![python versions](https://img.shields.io/pypi/pyversions/makepy.svg)](https://pypi.python.org/pypi/makepy)\n[![build status](https://storage.googleapis.com/ubunatic-public/makepy/build-status.svg)](https://storage.googleapis.com/ubunatic-public/makepy/build-status.json)\n<!--[![license](https://img.shields.io/pypi/l/makepy.svg)](https://pypi.python.org/pypi/makepy)-->\n\nmakepy: Handsfree Python Module Programming\n===========================================\n\nThis project provides:\n\n[`makepy`](#makepy-command): A command line tool to simplify Python project setup,\ninstallation, and testing.<br>\n[`makepy.mainlog`](#mainlog-module): A module for making [`logging`][logging]\nand [`structlog`][structlog] setup less cumbersome and less error-prone.<br>\n[`makepy.argparse`](#argparse-module): A module providing a drop-in `ArgumentParser`\nfor writing better readable [`argparse`][argparse] code.\n\nInstall via `pip3 install --user makepy`.\n\nmainlog module\n--------------\n\nAs the name suggest, use [`makepy.mainlog`][mp_mainlog] only in your main module.\nDo not setup logging outside of main modules!\nThe module's main function is [`mainlog.setup_logging`][setup_logging]:\n\n```python\nimport logging\nfrom makepy import mainlog\n\nlog = logging.getLogger('app')\n\ndef main(argv=None):\n    level = logging.INFO\n    mainlog.setup_logging(level=level, mode='json')\n    log.info('Hello %s!', 'makepy', extra={'v':1})\n\nmain()\n# {\"message\": \"Hello makepy!\", \"v\": 1}\n```\n\nThe currently supported logging modes are `json` and `console` (default).\nUsing `mode='console'` or no mode will produce regular stdlib logs like:\n\n    INFO:app:Hello makepy!\n\nUse `mainlog.setup_logging(level=level, use_structlog=True)` to setup `structlog` logging.\nIf `struclog` is not installed, stdlib `logging` is used as fallback.\nThe predefined structlog settings will format stdlib logs as follows.\n\n    [info     ] info msg 1                     [stdlib]\n    [debug    ] debug msg 2                    [stdlib]\n    [error    ] error msg 3                    [stdlib]\n\nIf you use structlog loggers in your modules you also get `extra` key-value pairs.\n\n    [info     ] info msg                       [structlog] a=[1, 2, 3] v=1\n    [debug    ] debug msg                      [structlog] b=('a', 'b', 'c') v=2\n    [error    ] error msg                      [structlog] c={'x': 1} v=3\n\nIf [`colorama`][colorama] is installed, the logs will be nicely colored (structlog feature).\n\nargparse module\n---------------\n\nFor writing better command line apps, [`makepy.argparse`][mp_argparse] provides a compatible\n`ArgumentParser` that uses the 4-letter `opti` and `flag` methods, replacing the original\n`add_argument` method.\n\n```python\nfrom makepy import argparse\ndesc = 'My CLI Tool'\np = argparse.ArgumentParser(description=desc)\np.flag('--json',          help='use json output format')\np.flag('--dry_run',       help='perform dry run')\np.opti('--num',     '-n', help='number of iterations', metavar='N', type=int, default=1)\np.opti('--file',    '-f', help='input file',           required=True)\np.opti('command',         help='command to run',       choices=['upper','lower'])\n```\n\nUsing shorter names and nice alignment allows `argparse` code to be much more readable.\nYes I know, to allow for such multi-column-based coding, you need to disable some linter rules.\nBut it's worth it, not just for `argparse` code, but for better readable Python code in general.\nmakepy's `ArgumentParser` also provides a few shortcuts to setup other commonly used modules\ndirectly via the following flags:\n\n* `with_debug`:   adds `--debug` flag\n* `with_logging`: automatically sets up logging using `makepy.mainlog` after parsing args\n* `with_input`:   adds `--input` option, defaulting to `-` (aka. `stdin`)\n* `with_protected_spaces`: modifies the `argparse` formatter, to protect white space as defined\n  in your `help` statements. Otherwise `argparse` will strip any newline and repeated spaces,\n  etc., to create condense help paragraphs. Using this option you can now safely align help text\n  directly in your code. See `makep/cli.py` as an example.\n\nHere is an example to setup common debug and logging features:\n\n```python\np = argparse.ArgumentParser(description=desc).with_logging(use_structlog=True).with_debug()\n```\n\nIf you do not like one-liners, you can also break lines.\n\n```python\np = argparse.ArgumentParser(description=desc)\np.with_logging(use_structlog=True)\np.with_debug()\np.with_input()\n```\n\nUsing the `with_logging` and optionally using `with_debug` allows you to quickly\nsetup `logging` or `structlog` loggers with human-readable console output.\nTherefore, `with_logging` supports the same `mode` and `use_structlog` key-value args\nas used by `mainlog.setup_logging` described [above](#mainlog-module).\n\nmakepy command\n--------------\nThis project also provides a `makepy` command, used to automate project creation, incremental\nbuilding, testing via `tox`, and uploading to PyPi.\n\n![makepy cast](https://storage.googleapis.com/ubunatic-public/makepy/makepy-cli.gif)\n\nHere are some commands supported by `makepy`:\n\n    makepy init --trg ~/workspace/newproject # setup new project/package named \"newproject\"\n    cd ~/workspace/newproject                # enter new project\n\n    makepy backport     # backport project to python2\n    tox -e py3          # use `tox` to install and test the package in a Python 3 environment\n    tox                 # install and test in all testenvs defined in `tox.ini`\n    makepy              # install and test in the default testenv\n    makepy clean        # cleanup test environments and build files\n\n    makepy dist         # build python wheel for current project\n    makepy dist -P 2    # build python wheel for python2\n    makepy dists        # build both wheels for python2 and python3\n    makepy version      # read version string from main __init__.py\n    makepy bumpversion  # increase patch level in main __init__.py\n    makepy install      # pip install the wheel in the system (may require sudo)\n    makepy dev-install  # pip install the current editable source code in the system\n    makepy uninstall    # uninstall current project/package from all pips\n\nYou can also chain commands: `makepy clean bumpversion dists`, and `makepy` will reorder\nthem and add all required depending commands, e.g., `makepy install -P 2` is equivalent\nto `makepy backport dist install -P 2`.\n\nThe `makepy` command depends on and can initialize values in the Python config files\n[`tox.ini`][tox_ini] and [`setup.cfg`][setup_cfg]. It can also create a generic py2-py3+\ncompatible [`setup.py`][setup_py], as found in this project.\n\nRun `makepy init --trg PATH_TO_NEW_PROJECT` to setup all required files. Use `-f` to allow\noverwriting existing files. See `makepy --help` for more options.\n\nmakepy + make\n-------------\nSome makepy functionality is still only available via [`make`][make], using the\n[`make/project.mk`][make_project], [`make/vars.mk`][make_vars], etc. include files. You can\nuse these in your project. Just copy them to a `make` dir in your project and `include` them\nin your `Makefile`, as [done][Makefile] by this project. See each mk-file for details and help.\n\nGoals\n-----\nIn general the project aims to provide a few flexible tools and modules that should help with\ndaily Python programming tasks for developing Python modules, libaries, and command line tools.\nIt aims to capture best practices and make them reusable, allowing you to write less and more\nreadable code, without breaking flexibility or compatibility of the enhanced modules and tools.\n\nMotivation\n----------\nMost Python programmers know [`argparse`][argparse], [`logging`][logging] or\n[`structlog`][structlog], [`tox`][tox] and [`pip`][pip], and many also use [`twine`][twine],\n[`setuptools`][setuptools], and others. However, when using these tools you will write the\nsame or very similar boilerplate code again and again.\n\nNot wanting to repeat myself, I wanted to extract the most common practices from my projects\nand make them available for my next projects and for others to use.\n\nHistory\n-------\nThe utility modules to setup `logging` and `argparse`, were scattered in several private\nprojects (and reimplemented in corporate projects). Most of the `makepy` commands lived in a\nhuge `Makefile` that had to be copied and augmented from project to project, before I finally\nstarted porting features to `makepy`. A few `make` features still remain and can be found in\nthis project's `mk` files, such as the `make tag` and `make publish`.\n\nI will keep `makepy` updated, with future learnings and I am happy to welcome pull requests.\n\nHave fun!\n\nOpen Issues/Tasks\n-----------------\n* Add Python 2 support for namespaces.\n* Port doc strings + create readthedocs docs.\n* Port version management to use external `bumpversion` command.\n* Port integration tests from make.\n* Port docker tests from make.\n* Port wheel publishing from make.\n* Port remainder from make + remove make related code.\n\n\n[structlog]:     https://github.com/hynek/structlog\n[colorama]:      https://github.com/tartley/colorama\n[logging]:       https://docs.python.org/3/library/logging.html\n[argparse]:      https://docs.python.org/3/library/argparse.html\n[setuptools]:    https://pypi.org/project/setuptools\n[twine]:         https://github.com/pypa/twine\n[tox]:           https://pypi.org/project/tox\n[pip]:           https://pypi.org/project/pip\n[make]:          https://www.gnu.org/software/make\n\n[makefile]:      Makefile\n[project_cfg]:   project.cfg\n[setup_cfg]:     setup.cfg\n[tox_ini]:       tox.ini\n[setup_py]:      setup.py\n[make_project]:  make/project.mk\n[mp_argparse]:   makepy/argparse.py\n[mp_mainlog]:    makepy/mainlog.py\n[setup_logging]: https://github.com/ubunatic/makepy/search?q=setup_logging\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ubunatic/makepy", "keywords": "argparse,logging,structlog,cli,arguments,ArgumentParser,enhancement,automation,tox,testing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "makepy", "package_url": "https://pypi.org/project/makepy/", "platform": "", "project_url": "https://pypi.org/project/makepy/", "project_urls": {"Bug Reports": "https://github.com/ubunatic/makepy/issues", "Documentation": "https://github.com/ubunatic/makepy", "Funding": "https://github.com/ubunatic/makepy", "Homepage": "https://github.com/ubunatic/makepy", "Say Thanks!": "https://saythanks.io/to/ubunatic", "Source": "https://github.com/ubunatic/makepy"}, "release_url": "https://pypi.org/project/makepy/0.0.26/", "requires_dist": ["typing", "future", "argparse", "configparser", "pytest; extra == 'dev'", "flake8; extra == 'dev'", "twine; extra == 'dev'", "pasteurize; extra == 'dev'"], "requires_python": ">=2.5", "summary": "makepy: Handsfree Python Module Programming", "version": "0.0.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre><code>    **&lt;span style=\"color:red\"&gt;\n    This is the backport version 0.0.26 of 'makepy' for Python 2.\n    Please upgrade to Python 3+ and use the current 'makepy' version 0.0.26.\n    &lt;/span&gt;**\n</code></pre>\n<p><a href=\"https://pypi.python.org/pypi/makepy\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7bd323b000e86227358c7ad85e2b6cb3c088cbb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d616b6570792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/makepy\" rel=\"nofollow\"><img alt=\"stage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4090af677817ad5c9aacc7f58483adcc19ba0ff/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6d616b6570792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/makepy\" rel=\"nofollow\"><img alt=\"python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b66d24aa90ed6aaf72210fce3f5b46aa26486f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d616b6570792e737667\"></a>\n<a href=\"https://storage.googleapis.com/ubunatic-public/makepy/build-status.json\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c6c334c71edcc92e84b375e1256e75cde76dc7e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f7562756e617469632d7075626c69632f6d616b6570792f6275696c642d7374617475732e737667\"></a></p>\n\n<h1>makepy: Handsfree Python Module Programming</h1>\n<p>This project provides:</p>\n<p><a href=\"#makepy-command\" rel=\"nofollow\"><code>makepy</code></a>: A command line tool to simplify Python project setup,\ninstallation, and testing.<br>\n<a href=\"#mainlog-module\" rel=\"nofollow\"><code>makepy.mainlog</code></a>: A module for making <a href=\"https://docs.python.org/3/library/logging.html\" rel=\"nofollow\"><code>logging</code></a>\nand <a href=\"https://github.com/hynek/structlog\" rel=\"nofollow\"><code>structlog</code></a> setup less cumbersome and less error-prone.<br>\n<a href=\"#argparse-module\" rel=\"nofollow\"><code>makepy.argparse</code></a>: A module providing a drop-in <code>ArgumentParser</code>\nfor writing better readable <a href=\"https://docs.python.org/3/library/argparse.html\" rel=\"nofollow\"><code>argparse</code></a> code.</p>\n<p>Install via <code>pip3 install --user makepy</code>.</p>\n<h2>mainlog module</h2>\n<p>As the name suggest, use <a href=\"makepy/mainlog.py\" rel=\"nofollow\"><code>makepy.mainlog</code></a> only in your main module.\nDo not setup logging outside of main modules!\nThe module's main function is <a href=\"https://github.com/ubunatic/makepy/search?q=setup_logging\" rel=\"nofollow\"><code>mainlog.setup_logging</code></a>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">makepy</span> <span class=\"kn\">import</span> <span class=\"n\">mainlog</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span>\n    <span class=\"n\">mainlog</span><span class=\"o\">.</span><span class=\"n\">setup_logging</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Hello </span><span class=\"si\">%s</span><span class=\"s1\">!'</span><span class=\"p\">,</span> <span class=\"s1\">'makepy'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'v'</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">})</span>\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"c1\"># {\"message\": \"Hello makepy!\", \"v\": 1}</span>\n</pre>\n<p>The currently supported logging modes are <code>json</code> and <code>console</code> (default).\nUsing <code>mode='console'</code> or no mode will produce regular stdlib logs like:</p>\n<pre><code>INFO:app:Hello makepy!\n</code></pre>\n<p>Use <code>mainlog.setup_logging(level=level, use_structlog=True)</code> to setup <code>structlog</code> logging.\nIf <code>struclog</code> is not installed, stdlib <code>logging</code> is used as fallback.\nThe predefined structlog settings will format stdlib logs as follows.</p>\n<pre><code>[info     ] info msg 1                     [stdlib]\n[debug    ] debug msg 2                    [stdlib]\n[error    ] error msg 3                    [stdlib]\n</code></pre>\n<p>If you use structlog loggers in your modules you also get <code>extra</code> key-value pairs.</p>\n<pre><code>[info     ] info msg                       [structlog] a=[1, 2, 3] v=1\n[debug    ] debug msg                      [structlog] b=('a', 'b', 'c') v=2\n[error    ] error msg                      [structlog] c={'x': 1} v=3\n</code></pre>\n<p>If <a href=\"https://github.com/tartley/colorama\" rel=\"nofollow\"><code>colorama</code></a> is installed, the logs will be nicely colored (structlog feature).</p>\n<h2>argparse module</h2>\n<p>For writing better command line apps, <a href=\"makepy/argparse.py\" rel=\"nofollow\"><code>makepy.argparse</code></a> provides a compatible\n<code>ArgumentParser</code> that uses the 4-letter <code>opti</code> and <code>flag</code> methods, replacing the original\n<code>add_argument</code> method.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">makepy</span> <span class=\"kn\">import</span> <span class=\"n\">argparse</span>\n<span class=\"n\">desc</span> <span class=\"o\">=</span> <span class=\"s1\">'My CLI Tool'</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">desc</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">flag</span><span class=\"p\">(</span><span class=\"s1\">'--json'</span><span class=\"p\">,</span>          <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'use json output format'</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">flag</span><span class=\"p\">(</span><span class=\"s1\">'--dry_run'</span><span class=\"p\">,</span>       <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'perform dry run'</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">opti</span><span class=\"p\">(</span><span class=\"s1\">'--num'</span><span class=\"p\">,</span>     <span class=\"s1\">'-n'</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'number of iterations'</span><span class=\"p\">,</span> <span class=\"n\">metavar</span><span class=\"o\">=</span><span class=\"s1\">'N'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">opti</span><span class=\"p\">(</span><span class=\"s1\">'--file'</span><span class=\"p\">,</span>    <span class=\"s1\">'-f'</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'input file'</span><span class=\"p\">,</span>           <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">opti</span><span class=\"p\">(</span><span class=\"s1\">'command'</span><span class=\"p\">,</span>         <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'command to run'</span><span class=\"p\">,</span>       <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'upper'</span><span class=\"p\">,</span><span class=\"s1\">'lower'</span><span class=\"p\">])</span>\n</pre>\n<p>Using shorter names and nice alignment allows <code>argparse</code> code to be much more readable.\nYes I know, to allow for such multi-column-based coding, you need to disable some linter rules.\nBut it's worth it, not just for <code>argparse</code> code, but for better readable Python code in general.\nmakepy's <code>ArgumentParser</code> also provides a few shortcuts to setup other commonly used modules\ndirectly via the following flags:</p>\n<ul>\n<li><code>with_debug</code>:   adds <code>--debug</code> flag</li>\n<li><code>with_logging</code>: automatically sets up logging using <code>makepy.mainlog</code> after parsing args</li>\n<li><code>with_input</code>:   adds <code>--input</code> option, defaulting to <code>-</code> (aka. <code>stdin</code>)</li>\n<li><code>with_protected_spaces</code>: modifies the <code>argparse</code> formatter, to protect white space as defined\nin your <code>help</code> statements. Otherwise <code>argparse</code> will strip any newline and repeated spaces,\netc., to create condense help paragraphs. Using this option you can now safely align help text\ndirectly in your code. See <code>makep/cli.py</code> as an example.</li>\n</ul>\n<p>Here is an example to setup common debug and logging features:</p>\n<pre><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">desc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_logging</span><span class=\"p\">(</span><span class=\"n\">use_structlog</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_debug</span><span class=\"p\">()</span>\n</pre>\n<p>If you do not like one-liners, you can also break lines.</p>\n<pre><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">desc</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">with_logging</span><span class=\"p\">(</span><span class=\"n\">use_structlog</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">with_debug</span><span class=\"p\">()</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">with_input</span><span class=\"p\">()</span>\n</pre>\n<p>Using the <code>with_logging</code> and optionally using <code>with_debug</code> allows you to quickly\nsetup <code>logging</code> or <code>structlog</code> loggers with human-readable console output.\nTherefore, <code>with_logging</code> supports the same <code>mode</code> and <code>use_structlog</code> key-value args\nas used by <code>mainlog.setup_logging</code> described <a href=\"#mainlog-module\" rel=\"nofollow\">above</a>.</p>\n<h2>makepy command</h2>\n<p>This project also provides a <code>makepy</code> command, used to automate project creation, incremental\nbuilding, testing via <code>tox</code>, and uploading to PyPi.</p>\n<p><img alt=\"makepy cast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fc91ac6732f9e75b517c748f6aacd0aa4ce7ad3/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f7562756e617469632d7075626c69632f6d616b6570792f6d616b6570792d636c692e676966\"></p>\n<p>Here are some commands supported by <code>makepy</code>:</p>\n<pre><code>makepy init --trg ~/workspace/newproject # setup new project/package named \"newproject\"\ncd ~/workspace/newproject                # enter new project\n\nmakepy backport     # backport project to python2\ntox -e py3          # use `tox` to install and test the package in a Python 3 environment\ntox                 # install and test in all testenvs defined in `tox.ini`\nmakepy              # install and test in the default testenv\nmakepy clean        # cleanup test environments and build files\n\nmakepy dist         # build python wheel for current project\nmakepy dist -P 2    # build python wheel for python2\nmakepy dists        # build both wheels for python2 and python3\nmakepy version      # read version string from main __init__.py\nmakepy bumpversion  # increase patch level in main __init__.py\nmakepy install      # pip install the wheel in the system (may require sudo)\nmakepy dev-install  # pip install the current editable source code in the system\nmakepy uninstall    # uninstall current project/package from all pips\n</code></pre>\n<p>You can also chain commands: <code>makepy clean bumpversion dists</code>, and <code>makepy</code> will reorder\nthem and add all required depending commands, e.g., <code>makepy install -P 2</code> is equivalent\nto <code>makepy backport dist install -P 2</code>.</p>\n<p>The <code>makepy</code> command depends on and can initialize values in the Python config files\n<a href=\"tox.ini\" rel=\"nofollow\"><code>tox.ini</code></a> and <a href=\"setup.cfg\" rel=\"nofollow\"><code>setup.cfg</code></a>. It can also create a generic py2-py3+\ncompatible <a href=\"setup.py\" rel=\"nofollow\"><code>setup.py</code></a>, as found in this project.</p>\n<p>Run <code>makepy init --trg PATH_TO_NEW_PROJECT</code> to setup all required files. Use <code>-f</code> to allow\noverwriting existing files. See <code>makepy --help</code> for more options.</p>\n<h2>makepy + make</h2>\n<p>Some makepy functionality is still only available via <a href=\"https://www.gnu.org/software/make\" rel=\"nofollow\"><code>make</code></a>, using the\n<a href=\"make/project.mk\" rel=\"nofollow\"><code>make/project.mk</code></a>, [<code>make/vars.mk</code>][make_vars], etc. include files. You can\nuse these in your project. Just copy them to a <code>make</code> dir in your project and <code>include</code> them\nin your <code>Makefile</code>, as <a href=\"Makefile\" rel=\"nofollow\">done</a> by this project. See each mk-file for details and help.</p>\n<h2>Goals</h2>\n<p>In general the project aims to provide a few flexible tools and modules that should help with\ndaily Python programming tasks for developing Python modules, libaries, and command line tools.\nIt aims to capture best practices and make them reusable, allowing you to write less and more\nreadable code, without breaking flexibility or compatibility of the enhanced modules and tools.</p>\n<h2>Motivation</h2>\n<p>Most Python programmers know <a href=\"https://docs.python.org/3/library/argparse.html\" rel=\"nofollow\"><code>argparse</code></a>, <a href=\"https://docs.python.org/3/library/logging.html\" rel=\"nofollow\"><code>logging</code></a> or\n<a href=\"https://github.com/hynek/structlog\" rel=\"nofollow\"><code>structlog</code></a>, <a href=\"https://pypi.org/project/tox\" rel=\"nofollow\"><code>tox</code></a> and <a href=\"https://pypi.org/project/pip\" rel=\"nofollow\"><code>pip</code></a>, and many also use <a href=\"https://github.com/pypa/twine\" rel=\"nofollow\"><code>twine</code></a>,\n<a href=\"https://pypi.org/project/setuptools\" rel=\"nofollow\"><code>setuptools</code></a>, and others. However, when using these tools you will write the\nsame or very similar boilerplate code again and again.</p>\n<p>Not wanting to repeat myself, I wanted to extract the most common practices from my projects\nand make them available for my next projects and for others to use.</p>\n<h2>History</h2>\n<p>The utility modules to setup <code>logging</code> and <code>argparse</code>, were scattered in several private\nprojects (and reimplemented in corporate projects). Most of the <code>makepy</code> commands lived in a\nhuge <code>Makefile</code> that had to be copied and augmented from project to project, before I finally\nstarted porting features to <code>makepy</code>. A few <code>make</code> features still remain and can be found in\nthis project's <code>mk</code> files, such as the <code>make tag</code> and <code>make publish</code>.</p>\n<p>I will keep <code>makepy</code> updated, with future learnings and I am happy to welcome pull requests.</p>\n<p>Have fun!</p>\n<h2>Open Issues/Tasks</h2>\n<ul>\n<li>Add Python 2 support for namespaces.</li>\n<li>Port doc strings + create readthedocs docs.</li>\n<li>Port version management to use external <code>bumpversion</code> command.</li>\n<li>Port integration tests from make.</li>\n<li>Port docker tests from make.</li>\n<li>Port wheel publishing from make.</li>\n<li>Port remainder from make + remove make related code.</li>\n</ul>\n\n          </div>"}, "last_serial": 4147732, "releases": {"0.0.16": [{"comment_text": "", "digests": {"md5": "e3729783730827b9e8cdaf571884ae87", "sha256": "64b8d39a56e0ecd438e2bf3f42d948e6542c559fce6b353562a792c5f01a8600"}, "downloads": -1, "filename": "makepy-0.0.16-py2-none-any.whl", "has_sig": false, "md5_digest": "e3729783730827b9e8cdaf571884ae87", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 21890, "upload_time": "2018-05-02T20:22:17", "upload_time_iso_8601": "2018-05-02T20:22:17.018415Z", "url": "https://files.pythonhosted.org/packages/35/31/2edf76c2e9cbdb701dd7e92e99bb4703b34e82296d9eed729b1b927e690a/makepy-0.0.16-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f921055c28bf32534e436286c9db433b", "sha256": "d5193d4b42cd53c96a2884167c3ece3e999416c10fd7e481c44cab68bf2de8f7"}, "downloads": -1, "filename": "makepy-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "f921055c28bf32534e436286c9db433b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21092, "upload_time": "2018-05-02T20:22:15", "upload_time_iso_8601": "2018-05-02T20:22:15.407390Z", "url": "https://files.pythonhosted.org/packages/6b/68/a0476c63d3fc91ebe80fe7cbc7942a6fb5b2770eca2a6856cb485b2b6451/makepy-0.0.16-py3-none-any.whl", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "a53308cc5bca561241206011fdc42f6b", "sha256": "4aa9adae34eb2df0606bb65a8e471a957d18b5d96819cf8aa9699c5033c3fe82"}, "downloads": -1, "filename": "makepy-0.0.17-py2-none-any.whl", "has_sig": false, "md5_digest": "a53308cc5bca561241206011fdc42f6b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 21941, "upload_time": "2018-05-02T21:38:22", "upload_time_iso_8601": "2018-05-02T21:38:22.184641Z", "url": "https://files.pythonhosted.org/packages/36/59/367d632051be3ff0979918db674eddefede48ecb1d5e547e08babb6c37f9/makepy-0.0.17-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c24d75143ddd400a21cb25751e95b70c", "sha256": "3a1f3990a152deb143b6ebd2ad73151f54093e51a6beb7b64873dfa2a847cfa9"}, "downloads": -1, "filename": "makepy-0.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "c24d75143ddd400a21cb25751e95b70c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21138, "upload_time": "2018-05-02T21:38:20", "upload_time_iso_8601": "2018-05-02T21:38:20.567108Z", "url": "https://files.pythonhosted.org/packages/a0/d5/e920aa43c01d833419fbcfc7727baaaa5518935f1f3d365691048b25bca6/makepy-0.0.17-py3-none-any.whl", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "86dddb954b400ad49074249ceb22090b", "sha256": "23c142473e83b6c1b11637acdf5fe574151ba19f7743825567420bdd3c7c5cb6"}, "downloads": -1, "filename": "makepy-0.0.18-py2-none-any.whl", "has_sig": false, "md5_digest": "86dddb954b400ad49074249ceb22090b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 21958, "upload_time": "2018-05-02T22:26:32", "upload_time_iso_8601": "2018-05-02T22:26:32.826231Z", "url": "https://files.pythonhosted.org/packages/f5/ca/f14b36944b97fc4b32f4456968b92c6334a0d53a5afb7904d94acc7158b4/makepy-0.0.18-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30270be6557215fe7f56a34e0f9baf4e", "sha256": "e93259a53ed92634ee474fa7b2a802323948ebb754bff093f7fcb723b9eb0043"}, "downloads": -1, "filename": "makepy-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "30270be6557215fe7f56a34e0f9baf4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21160, "upload_time": "2018-05-02T22:26:31", "upload_time_iso_8601": "2018-05-02T22:26:31.262372Z", "url": "https://files.pythonhosted.org/packages/c2/52/b26a56f9e692a404cc95b9a06732c5f939f301b413749b10cc1e8bc3a730/makepy-0.0.18-py3-none-any.whl", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "8e0fc6986c2a43142fe1b7307d2c9cc6", "sha256": "66fea17e1b004a9f769809c38376098cba0a02d5a56f08e681ea8a2f89084cfe"}, "downloads": -1, "filename": "makepy-0.0.19-py2-none-any.whl", "has_sig": false, "md5_digest": "8e0fc6986c2a43142fe1b7307d2c9cc6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 22117, "upload_time": "2018-05-03T17:22:40", "upload_time_iso_8601": "2018-05-03T17:22:40.092784Z", "url": "https://files.pythonhosted.org/packages/2f/7b/3e990c4745298364786058750b84052b77a9ef5ed265a6d20d74ba001e4f/makepy-0.0.19-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1334645432787e1387d24c2cfcddca6", "sha256": "fdc7c853a1771011d6b272f280409311278c9b07034658ba9c7877618bfd4d72"}, "downloads": -1, "filename": "makepy-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "a1334645432787e1387d24c2cfcddca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21312, "upload_time": "2018-05-03T17:22:38", "upload_time_iso_8601": "2018-05-03T17:22:38.349128Z", "url": "https://files.pythonhosted.org/packages/d9/63/12f8bde4bba510c72fb44dc0e39e293b06e3dd80ad1eed705046adf706f8/makepy-0.0.19-py3-none-any.whl", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "27a8f322d134ff376e5ee2a3ba0eb671", "sha256": "329c7734528507aa21e94bb3c68087c6c89ce283f6f29ed96b18fd591122a591"}, "downloads": -1, "filename": "makepy-0.0.20-py2-none-any.whl", "has_sig": false, "md5_digest": "27a8f322d134ff376e5ee2a3ba0eb671", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 22541, "upload_time": "2018-05-04T06:58:28", "upload_time_iso_8601": "2018-05-04T06:58:28.265234Z", "url": "https://files.pythonhosted.org/packages/9a/42/df182636145b0720a536e22b643ba149f52f9688d60656dc9b888388cab5/makepy-0.0.20-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3d6cd56ebea939d1a48ed6ca4cc5955", "sha256": "52811302e1f4b5bc7b0c9b27e7a54c5a4b3cac12fd03e394221cd3ea95aecaf4"}, "downloads": -1, "filename": "makepy-0.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "c3d6cd56ebea939d1a48ed6ca4cc5955", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21743, "upload_time": "2018-05-04T06:58:26", "upload_time_iso_8601": "2018-05-04T06:58:26.762680Z", "url": "https://files.pythonhosted.org/packages/9b/df/8f42c1cb3447a55e45bad87bc56341e7850e136b12321c336d9741338bcd/makepy-0.0.20-py3-none-any.whl", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "35b5eb4554c6ddf5363eba89a2e55a8f", "sha256": "39b47645dfcbd6ba8258f5a63fca383002326ac25403f4af57e8785fec206902"}, "downloads": -1, "filename": "makepy-0.0.21-py2-none-any.whl", "has_sig": false, "md5_digest": "35b5eb4554c6ddf5363eba89a2e55a8f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 22600, "upload_time": "2018-05-05T20:05:52", "upload_time_iso_8601": "2018-05-05T20:05:52.117938Z", "url": "https://files.pythonhosted.org/packages/dd/3c/2b87086f4ad8a86c6f43efcd01a37a134e00c0d5c9b71ee9cb83ccbcf842/makepy-0.0.21-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45b2e8beab7b1000ba89a0dcb5846481", "sha256": "6ebe751c0435f225b7b255af333904d5d6061c348ba12940fd695901dcac647e"}, "downloads": -1, "filename": "makepy-0.0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "45b2e8beab7b1000ba89a0dcb5846481", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 21797, "upload_time": "2018-05-05T20:05:50", "upload_time_iso_8601": "2018-05-05T20:05:50.427206Z", "url": "https://files.pythonhosted.org/packages/87/59/837ee464a97176278598df86a51ccabc6d25b63cc5fd0c3fc0aa685d591f/makepy-0.0.21-py3-none-any.whl", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "dbd291641f84b0ac70d72f8a72447001", "sha256": "e648adcad63708de827579529c2180caed06f9a411a5673280393466ec13c246"}, "downloads": -1, "filename": "makepy-0.0.22-py2-none-any.whl", "has_sig": false, "md5_digest": "dbd291641f84b0ac70d72f8a72447001", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 26001, "upload_time": "2018-05-16T22:37:59", "upload_time_iso_8601": "2018-05-16T22:37:59.611164Z", "url": "https://files.pythonhosted.org/packages/0d/e1/244b5e4b4568fbcaa0f6f1d1b2de064411f8c2d43ba567c4a081b1ed0651/makepy-0.0.22-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "742ce5fbe5fde2c4f88f77b1aa519e68", "sha256": "f794d7404d08e244e6a5b1b40f0cc9c46fdfb5bd420090361a76ab10337db984"}, "downloads": -1, "filename": "makepy-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "742ce5fbe5fde2c4f88f77b1aa519e68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 25156, "upload_time": "2018-05-16T22:37:57", "upload_time_iso_8601": "2018-05-16T22:37:57.916634Z", "url": "https://files.pythonhosted.org/packages/b7/f9/d5a9655960b0fea5679128617b096fd89153414a3b71e7e8301880b6fe58/makepy-0.0.22-py3-none-any.whl", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "f03a3f47ff24d476dfd4f1cc8a25fbbf", "sha256": "822a3c487a9ce56e23d2a39de40265f4232aae35775c3a797969217742eb1e70"}, "downloads": -1, "filename": "makepy-0.0.23-py2-none-any.whl", "has_sig": false, "md5_digest": "f03a3f47ff24d476dfd4f1cc8a25fbbf", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 25980, "upload_time": "2018-05-19T15:06:05", "upload_time_iso_8601": "2018-05-19T15:06:05.718262Z", "url": "https://files.pythonhosted.org/packages/ec/86/91d5e440fae8867c415958c5602cbfa56896e54c41e3f7e452b35333343d/makepy-0.0.23-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee0d5b58c05c22988ecd3bcd5b8f2afd", "sha256": "c34b76bafa6feba8f387df56bc329b60261dfb4e60ac48ce1bd1769873554961"}, "downloads": -1, "filename": "makepy-0.0.23-py3-none-any.whl", "has_sig": false, "md5_digest": "ee0d5b58c05c22988ecd3bcd5b8f2afd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 25137, "upload_time": "2018-05-19T15:06:04", "upload_time_iso_8601": "2018-05-19T15:06:04.356265Z", "url": "https://files.pythonhosted.org/packages/e7/81/8a185dc60e5b8fb27137161560b331040be7f9922c86ca179e7389524f76/makepy-0.0.23-py3-none-any.whl", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "a61bbde22bfd6deaabf7654c80caecb4", "sha256": "4b68e8bf02f83f4ec367978b827055beac7c0a50bbcd6f9f54efc21ed42cd1c1"}, "downloads": -1, "filename": "makepy-0.0.24-py2-none-any.whl", "has_sig": false, "md5_digest": "a61bbde22bfd6deaabf7654c80caecb4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 28261, "upload_time": "2018-08-08T06:52:20", "upload_time_iso_8601": "2018-08-08T06:52:20.546057Z", "url": "https://files.pythonhosted.org/packages/c4/08/80aee7357e56e684615ab38b4b032d4041334a63f7c24ebf22d24539604e/makepy-0.0.24-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4cfba6313217df9512bee6e10d4ec0f", "sha256": "70eaf4b849cd26e8e7d9ca223efccff75fcf29379fc8160b57563c4e42e554bb"}, "downloads": -1, "filename": "makepy-0.0.24-py3-none-any.whl", "has_sig": false, "md5_digest": "b4cfba6313217df9512bee6e10d4ec0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 27453, "upload_time": "2018-08-08T06:52:18", "upload_time_iso_8601": "2018-08-08T06:52:18.628160Z", "url": "https://files.pythonhosted.org/packages/b8/12/e48849b523b4fed0ff2d08cd137d0474ed3c8be4c31bc531d013f91db954/makepy-0.0.24-py3-none-any.whl", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "1b7c92241cc1d6c21a5ef936a0f25d26", "sha256": "967c3652012ac4bbca4b21af92df0441b9410315e70a29eb563115c372199196"}, "downloads": -1, "filename": "makepy-0.0.25-py2-none-any.whl", "has_sig": false, "md5_digest": "1b7c92241cc1d6c21a5ef936a0f25d26", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 28272, "upload_time": "2018-08-08T07:12:03", "upload_time_iso_8601": "2018-08-08T07:12:03.633474Z", "url": "https://files.pythonhosted.org/packages/04/c1/c69aa43b0fa2519b12f476a8698f9162bdd9e85b3e699ca6e01342805c53/makepy-0.0.25-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d6d932dc7982eb5f766d912dade5fba", "sha256": "358f706d17bba23051d5175478e2eca28324c092510ab89650d4d92b2b07747c"}, "downloads": -1, "filename": "makepy-0.0.25-py3-none-any.whl", "has_sig": false, "md5_digest": "0d6d932dc7982eb5f766d912dade5fba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 27466, "upload_time": "2018-08-08T07:12:01", "upload_time_iso_8601": "2018-08-08T07:12:01.843793Z", "url": "https://files.pythonhosted.org/packages/1b/ee/bb3a600844ca7ed2bcbd632293285f87ed67f3c8fe6fa7c514238990cd13/makepy-0.0.25-py3-none-any.whl", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "2e8abf6b63688fcc1d492e6412186210", "sha256": "069045e5a63e98d61e26770db13b463d89c746d13cbee9ee020a7620c2424e9b"}, "downloads": -1, "filename": "makepy-0.0.26-py2-none-any.whl", "has_sig": false, "md5_digest": "2e8abf6b63688fcc1d492e6412186210", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 28279, "upload_time": "2018-08-08T07:16:15", "upload_time_iso_8601": "2018-08-08T07:16:15.201385Z", "url": "https://files.pythonhosted.org/packages/84/48/b3cb3992d5b10ee7fb820da49a92420032d70999aa528ab1f4b9364b82cd/makepy-0.0.26-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d2ae2d16e1ddda706af92218737e1f2", "sha256": "97f2a2bf1a2add2fa8dd4b32282e9895338f4633099f88cb1e0b3c12b7bd6498"}, "downloads": -1, "filename": "makepy-0.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "4d2ae2d16e1ddda706af92218737e1f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 27472, "upload_time": "2018-08-08T07:16:13", "upload_time_iso_8601": "2018-08-08T07:16:13.447744Z", "url": "https://files.pythonhosted.org/packages/7c/60/fc726d1e6ec4d8a9a96d46ec61a350f1ffcf4f3de559550383fb1efce8ca/makepy-0.0.26-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e8abf6b63688fcc1d492e6412186210", "sha256": "069045e5a63e98d61e26770db13b463d89c746d13cbee9ee020a7620c2424e9b"}, "downloads": -1, "filename": "makepy-0.0.26-py2-none-any.whl", "has_sig": false, "md5_digest": "2e8abf6b63688fcc1d492e6412186210", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.5", "size": 28279, "upload_time": "2018-08-08T07:16:15", "upload_time_iso_8601": "2018-08-08T07:16:15.201385Z", "url": "https://files.pythonhosted.org/packages/84/48/b3cb3992d5b10ee7fb820da49a92420032d70999aa528ab1f4b9364b82cd/makepy-0.0.26-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d2ae2d16e1ddda706af92218737e1f2", "sha256": "97f2a2bf1a2add2fa8dd4b32282e9895338f4633099f88cb1e0b3c12b7bd6498"}, "downloads": -1, "filename": "makepy-0.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "4d2ae2d16e1ddda706af92218737e1f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 27472, "upload_time": "2018-08-08T07:16:13", "upload_time_iso_8601": "2018-08-08T07:16:13.447744Z", "url": "https://files.pythonhosted.org/packages/7c/60/fc726d1e6ec4d8a9a96d46ec61a350f1ffcf4f3de559550383fb1efce8ca/makepy-0.0.26-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:41:47 2020"}