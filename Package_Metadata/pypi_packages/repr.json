{"info": {"author": "Alexander Artemenko", "author_email": "svetlyak.40wt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "========\nOverview\n========\n\n\n\nA magic shortcut to generate __repr__ methods for your classes.\n\n* Free software: BSD license\n\nInstallation\n============\n\n::\n\n    pip install repr\n\nThis package contains a single module ``magic_repr`` called so\nto not conflict with standart python's ``repr``.\n\nReasoning\n=========\n\nWhat do you think each time, writing such code?\n\n.. code:: python\n\n  def __repr__(self):\n      return \"\"\"\n  Issue(changelog={self.changelog},\n        type={self.type},\n        comment={self.comment},\n        created_at={self.created_at},\n        resolved_at={self.resolved_at})\"\"\".format(self=self).strip().encode('utf-8')\n\nIsn't this much better and readable?\n\n.. code:: python\n\n      __repr__ = make_repr('changelog', 'type', 'comment', 'created_at', 'resolved_at')\n\n\nAnd this produces much nicer output:\n\n.. code:: python\n\n  <Issue changelog=<Changelog namespace=u'python'\n                              name=u'geocoder'\n                              source=u'https://github.com/DenisCarriere/geocoder'>\n         type=u'wrong-version-content'\n         comment=u'AllMyChanges should take release notes from the web site.'\n         created_at=datetime.datetime(2016, 6, 17, 6, 44, 52, 16760, tzinfo=<UTC>)\n         resolved_at=None>\n\nAnother advantage of the magic_repr\n-----------------------------------\n\nIs it's recursiveness. If you use ``magic_repr`` for your objects and they\ninclude each other, then representation of the parent object will include\nchild objects properly nested:\n\n.. code:: python\n\n  <Foo bars={1: <Bar first=1\n                     second=2\n                     third=3>,\n             2: <Bar first=1\n                     second=2\n                     third=3>,\n             u'\u0442\u0440\u0438': <Bar first=1\n                          second=2\n                          third=3>}>\n\nAnd all this for free! Just do ``__repr__ = make_repr()``.\n\nUsage\n=====\n\nFor simple cases it is enough to call ``make_repr`` without arguments. It will figure out\nwhich attributes object has and will output them sorted alphabetically.\n\nYou can also specify which attributes you want to include in \"representaion\":\n\n.. code:: python\n\n  from magic_repr import make_repr\n\n  __repr__ = make_repr('foo', 'bar')\n\nAnd to specify a function to create a value for an attribute, using keywords:\n\n.. code:: python\n\n  from magic_repr import make_repr\n  \n  class Some(object):\n      def is_active(self):\n          return True\n\n  Some.__repr__ = make_repr(active=Some.is_active)\n\nPay attention, that in this case ``__repr__`` was created after the class definition.\nThis is because inside of the class it can't reference itself.\n\nDocumentation\n=============\n\nhttps://python-repr.readthedocs.io/\n\nDevelopment\n===========\n\nTo run the all tests run::\n\n    tox\n\nNote, to combine the coverage data from all the tox environments run:\n\n.. list-table::\n    :widths: 10 90\n    :stub-columns: 1\n\n    - - Windows\n      - ::\n\n            set PYTEST_ADDOPTS=--cov-append\n            tox\n\n    - - Other\n      - ::\n\n            PYTEST_ADDOPTS=--cov-append tox\n\nChangelog\n=========\n\n0.3.1 (2016-06-22)\n------------------\n\n* Fixed issue #1 prevented generated __repr__ methods to work in mutithreaded programs.\n\n0.3.0 (2016-06-20)\n------------------\n\n* Now ``make_repr`` can be used for recursive datastructures.\n\n0.2.1 (2016-06-19)\n------------------\n\n* Documentation improved.\n\n0.2.0 (2016-06-19)\n------------------\n\n* Better handling of nested datastructure.\n* Callables as source of the attribute's value.\n* Some documentation.\n\n0.1.0 (2016-06-09)\n------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": "https://pythonhosted.org/repr/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/svetlyak40wt/python-repr", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "repr", "package_url": "https://pypi.org/project/repr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repr/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/svetlyak40wt/python-repr"}, "release_url": "https://pypi.org/project/repr/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "A shortcut to generate __repr__ methods for python classes", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A magic shortcut to generate __repr__ methods for your classes.</p>\n<ul>\n<li>Free software: BSD license</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install repr\n</pre>\n<p>This package contains a single module <tt>magic_repr</tt> called so\nto not conflict with standart python\u2019s <tt>repr</tt>.</p>\n</div>\n<div id=\"reasoning\">\n<h2>Reasoning</h2>\n<p>What do you think each time, writing such code?</p>\n<pre><span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"\"\"\nIssue(changelog=</span><span class=\"si\">{self.changelog}</span><span class=\"s2\">,\n      type=</span><span class=\"si\">{self.type}</span><span class=\"s2\">,\n      comment=</span><span class=\"si\">{self.comment}</span><span class=\"s2\">,\n      created_at=</span><span class=\"si\">{self.created_at}</span><span class=\"s2\">,\n      resolved_at=</span><span class=\"si\">{self.resolved_at}</span><span class=\"s2\">)\"\"\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span>\n</pre>\n<p>Isn\u2019t this much better and readable?</p>\n<pre><span class=\"fm\">__repr__</span> <span class=\"o\">=</span> <span class=\"n\">make_repr</span><span class=\"p\">(</span><span class=\"s1\">'changelog'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">,</span> <span class=\"s1\">'comment'</span><span class=\"p\">,</span> <span class=\"s1\">'created_at'</span><span class=\"p\">,</span> <span class=\"s1\">'resolved_at'</span><span class=\"p\">)</span>\n</pre>\n<p>And this produces much nicer output:</p>\n<pre><span class=\"o\">&lt;</span><span class=\"n\">Issue</span> <span class=\"n\">changelog</span><span class=\"o\">=&lt;</span><span class=\"n\">Changelog</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'python'</span>\n                            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'geocoder'</span>\n                            <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'https://github.com/DenisCarriere/geocoder'</span><span class=\"o\">&gt;</span>\n       <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'wrong-version-content'</span>\n       <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'AllMyChanges should take release notes from the web site.'</span>\n       <span class=\"n\">created_at</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"mi\">16760</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=&lt;</span><span class=\"n\">UTC</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n       <span class=\"n\">resolved_at</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<div id=\"another-advantage-of-the-magic-repr\">\n<h3>Another advantage of the magic_repr</h3>\n<p>Is it\u2019s recursiveness. If you use <tt>magic_repr</tt> for your objects and they\ninclude each other, then representation of the parent object will include\nchild objects properly nested:</p>\n<pre><span class=\"o\">&lt;</span><span class=\"n\">Foo</span> <span class=\"n\">bars</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">Bar</span> <span class=\"n\">first</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                   <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n                   <span class=\"n\">third</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n           <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">Bar</span> <span class=\"n\">first</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                   <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n                   <span class=\"n\">third</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n           <span class=\"sa\">u</span><span class=\"s1\">'\u0442\u0440\u0438'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">Bar</span> <span class=\"n\">first</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                        <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n                        <span class=\"n\">third</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n</pre>\n<p>And all this for free! Just do <tt>__repr__ = make_repr()</tt>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For simple cases it is enough to call <tt>make_repr</tt> without arguments. It will figure out\nwhich attributes object has and will output them sorted alphabetically.</p>\n<p>You can also specify which attributes you want to include in \u201crepresentaion\u201d:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">magic_repr</span> <span class=\"kn\">import</span> <span class=\"n\">make_repr</span>\n\n<span class=\"fm\">__repr__</span> <span class=\"o\">=</span> <span class=\"n\">make_repr</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n</pre>\n<p>And to specify a function to create a value for an attribute, using keywords:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">magic_repr</span> <span class=\"kn\">import</span> <span class=\"n\">make_repr</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Some</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_active</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<span class=\"n\">Some</span><span class=\"o\">.</span><span class=\"fm\">__repr__</span> <span class=\"o\">=</span> <span class=\"n\">make_repr</span><span class=\"p\">(</span><span class=\"n\">active</span><span class=\"o\">=</span><span class=\"n\">Some</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">)</span>\n</pre>\n<p>Pay attention, that in this case <tt>__repr__</tt> was created after the class definition.\nThis is because inside of the class it can\u2019t reference itself.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://python-repr.readthedocs.io/\" rel=\"nofollow\">https://python-repr.readthedocs.io/</a></p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To run the all tests run:</p>\n<pre>tox\n</pre>\n<p>Note, to combine the coverage data from all the tox environments run:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><th>Windows</th>\n<td><pre>\nset PYTEST_ADDOPTS=--cov-append\ntox\n</pre>\n</td>\n</tr>\n<tr><th>Other</th>\n<td><pre>\nPYTEST_ADDOPTS=--cov-append tox\n</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3.1 (2016-06-22)</h3>\n<ul>\n<li>Fixed issue #1 prevented generated __repr__ methods to work in mutithreaded programs.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.0 (2016-06-20)</h3>\n<ul>\n<li>Now <tt>make_repr</tt> can be used for recursive datastructures.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.1 (2016-06-19)</h3>\n<ul>\n<li>Documentation improved.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.0 (2016-06-19)</h3>\n<ul>\n<li>Better handling of nested datastructure.</li>\n<li>Callables as source of the attribute\u2019s value.</li>\n<li>Some documentation.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2016-06-09)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2181227, "releases": {"0.1.0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "1595c7039839344eecbd551aed4bd8b3", "sha256": "00a4090e7a7385cae77eed838cce8a3ffd3f9c38c34db9211a62906f84be68b6"}, "downloads": -1, "filename": "repr-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1595c7039839344eecbd551aed4bd8b3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7388, "upload_time": "2016-06-19T08:27:43", "upload_time_iso_8601": "2016-06-19T08:27:43.862348Z", "url": "https://files.pythonhosted.org/packages/45/f1/4171b6845a2dbd95342a31fe66bc7dd6efc528fe04800bd874c28d622ed0/repr-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16c8053130e2280c70bbdcbb13987b68", "sha256": "e250fee2090abb41df12488beb925fb7f1532c50276abb7e0e83b6770b23ee58"}, "downloads": -1, "filename": "repr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "16c8053130e2280c70bbdcbb13987b68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16065, "upload_time": "2016-06-19T08:27:38", "upload_time_iso_8601": "2016-06-19T08:27:38.992136Z", "url": "https://files.pythonhosted.org/packages/65/ad/c6dd480616ab193bf0dc9898022f3e506ba478d6dc17c0adeb5e55b6718d/repr-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cdeb28ce6aa1f13d15c30e88625eba17", "sha256": "a8a9dc8a3a88e060c28a8c24ba57cb5d24cccc52ca36183d4f5e993f3f386e01"}, "downloads": -1, "filename": "repr-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cdeb28ce6aa1f13d15c30e88625eba17", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7436, "upload_time": "2016-06-19T08:51:51", "upload_time_iso_8601": "2016-06-19T08:51:51.253224Z", "url": "https://files.pythonhosted.org/packages/2b/bd/45ed119b6ddd91e63a426b1782c340d2ef51572ac1d2dd0e7fd97d994089/repr-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e1650c7ad230898bee3152345da88e3", "sha256": "0edf52372c6d81c8a1a28f7cab256b2b439c4254431e9992d39bb9328730633b"}, "downloads": -1, "filename": "repr-0.2.1.tar.gz", "has_sig": false, "md5_digest": "3e1650c7ad230898bee3152345da88e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16139, "upload_time": "2016-06-19T08:51:45", "upload_time_iso_8601": "2016-06-19T08:51:45.814097Z", "url": "https://files.pythonhosted.org/packages/bd/32/7691526cf8cb8845e425dbb9a706b4215cd7350141b49d410275dc121cd5/repr-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e06e959ea786f513e89bf8903b91d231", "sha256": "446510e21c4d28b59c0cd921f50d3d8ec6055bad0c58eaa5ac557cbe849b83f9"}, "downloads": -1, "filename": "repr-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e06e959ea786f513e89bf8903b91d231", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7602, "upload_time": "2016-06-20T06:11:25", "upload_time_iso_8601": "2016-06-20T06:11:25.014323Z", "url": "https://files.pythonhosted.org/packages/0e/d7/77b7bafee3481379ca52aab2b5767682030b4e866258eb3ea7dfbc9f5637/repr-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b767b53431abebdbeacd63df5455c11", "sha256": "8dd5b900b228c6ee5ae3771bd959d610a69306b7681fef9f48664fdf2e1a5c2f"}, "downloads": -1, "filename": "repr-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2b767b53431abebdbeacd63df5455c11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15883, "upload_time": "2016-06-20T06:11:20", "upload_time_iso_8601": "2016-06-20T06:11:20.512992Z", "url": "https://files.pythonhosted.org/packages/c3/b2/575363a9a4afe67e70de3c6e224251ade3a8b49429fad6ee195150d25db6/repr-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7b9702738cbba20451d2fd224f29a27b", "sha256": "29f4c3a73f3a6d98551fe47759dbccf8a4f5c188622914f0449dd7e455196e74"}, "downloads": -1, "filename": "repr-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b9702738cbba20451d2fd224f29a27b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7769, "upload_time": "2016-06-22T13:12:37", "upload_time_iso_8601": "2016-06-22T13:12:37.523589Z", "url": "https://files.pythonhosted.org/packages/e9/fe/6421e10e77d544079bda49cc06f481a1ef5950a51e638025bb6701bed6ba/repr-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c6c26cdd595d01502313b341a82deb9", "sha256": "0684f8cbf452d0b4f4f7eaba2eeb3ea3478bbf67153df3afbc796bd9f3914a87"}, "downloads": -1, "filename": "repr-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4c6c26cdd595d01502313b341a82deb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16236, "upload_time": "2016-06-22T13:12:33", "upload_time_iso_8601": "2016-06-22T13:12:33.051298Z", "url": "https://files.pythonhosted.org/packages/cf/d9/891955bf9e29cd6ab1000b9c66cee157070ac74e172a738d3388719fb49a/repr-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b9702738cbba20451d2fd224f29a27b", "sha256": "29f4c3a73f3a6d98551fe47759dbccf8a4f5c188622914f0449dd7e455196e74"}, "downloads": -1, "filename": "repr-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b9702738cbba20451d2fd224f29a27b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7769, "upload_time": "2016-06-22T13:12:37", "upload_time_iso_8601": "2016-06-22T13:12:37.523589Z", "url": "https://files.pythonhosted.org/packages/e9/fe/6421e10e77d544079bda49cc06f481a1ef5950a51e638025bb6701bed6ba/repr-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c6c26cdd595d01502313b341a82deb9", "sha256": "0684f8cbf452d0b4f4f7eaba2eeb3ea3478bbf67153df3afbc796bd9f3914a87"}, "downloads": -1, "filename": "repr-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4c6c26cdd595d01502313b341a82deb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16236, "upload_time": "2016-06-22T13:12:33", "upload_time_iso_8601": "2016-06-22T13:12:33.051298Z", "url": "https://files.pythonhosted.org/packages/cf/d9/891955bf9e29cd6ab1000b9c66cee157070ac74e172a738d3388719fb49a/repr-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:21 2020"}