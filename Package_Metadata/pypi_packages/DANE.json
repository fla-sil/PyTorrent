{"info": {"author": "Nanne van Noord", "author_email": "n.j.e.vannoord@uva.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Video", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# DANE\nThe Distributed Annotation 'n' Enrichment (DANE) system handles compute job assignment and file storage for the automatic annotation of content.\n\nThis repository contains contains the building blocks for with DANE, such as creating custom analysis workers or submitting new jobs..\n\n## Installation\n\nThis package can be installed through pip:\n\n    pip install DANE\n\n### Configuration\n\nDANE components are configured through the DANE.config module, which is described here: https://dane.readthedocs.io/en/latest/intro.html#configuration \nIt is however noteable that, because all DANE components are expected to rely on it, the some of the DANE-server and the RabbitMQ configuration \nare included in the default config. As such it is recommended that you create a `$HOME/.dane/config.yml` or `$DANE_HOME/config.yml` which contain machine-wide settings for how to connect to these services, which involves specifying the following settings:\n\n```\nDANE:\n    API_URL: 'http://localhost:5500/DANE/'\n    MANAGE_URL: 'http://localhost:5500/manage/'\nRABBITMQ:\n    HOST: 'localhost'\n    PORT: 5672\n    EXCHANGE: 'DANE-exchange'\n    RESPONSE_QUEUE: 'DANE-response-queue'\n    USER: 'guest'\n    PASSWORD: 'guest'\n```\n\nThe values given here are the default values.\n\n### Usage\n\nExamples of how to use DANE can be found in the `examples/` directory.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CLARIAH/DANE", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "DANE", "package_url": "https://pypi.org/project/DANE/", "platform": "", "project_url": "https://pypi.org/project/DANE/", "project_urls": {"Homepage": "https://github.com/CLARIAH/DANE"}, "release_url": "https://pypi.org/project/DANE/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Utils for working with the Distributed Annotation and Enrichment system.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DANE</h1>\n<p>The Distributed Annotation 'n' Enrichment (DANE) system handles compute job assignment and file storage for the automatic annotation of content.</p>\n<p>This repository contains contains the building blocks for with DANE, such as creating custom analysis workers or submitting new jobs..</p>\n<h2>Installation</h2>\n<p>This package can be installed through pip:</p>\n<pre><code>pip install DANE\n</code></pre>\n<h3>Configuration</h3>\n<p>DANE components are configured through the DANE.config module, which is described here: <a href=\"https://dane.readthedocs.io/en/latest/intro.html#configuration\" rel=\"nofollow\">https://dane.readthedocs.io/en/latest/intro.html#configuration</a>\nIt is however noteable that, because all DANE components are expected to rely on it, the some of the DANE-server and the RabbitMQ configuration\nare included in the default config. As such it is recommended that you create a <code>$HOME/.dane/config.yml</code> or <code>$DANE_HOME/config.yml</code> which contain machine-wide settings for how to connect to these services, which involves specifying the following settings:</p>\n<pre><code>DANE:\n    API_URL: 'http://localhost:5500/DANE/'\n    MANAGE_URL: 'http://localhost:5500/manage/'\nRABBITMQ:\n    HOST: 'localhost'\n    PORT: 5672\n    EXCHANGE: 'DANE-exchange'\n    RESPONSE_QUEUE: 'DANE-response-queue'\n    USER: 'guest'\n    PASSWORD: 'guest'\n</code></pre>\n<p>The values given here are the default values.</p>\n<h3>Usage</h3>\n<p>Examples of how to use DANE can be found in the <code>examples/</code> directory.</p>\n\n          </div>"}, "last_serial": 6935518, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1d152e88d3644a7f467d1560f025e225", "sha256": "2b586ec68b18089975c8cb2fd5b54cfb9c58227fb6a3ae75a67b11f72714eda3"}, "downloads": -1, "filename": "DANE-0.1.tar.gz", "has_sig": false, "md5_digest": "1d152e88d3644a7f467d1560f025e225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11172, "upload_time": "2020-04-01T14:46:32", "upload_time_iso_8601": "2020-04-01T14:46:32.128740Z", "url": "https://files.pythonhosted.org/packages/1b/21/bde9b9f0181a7f18ec021b77776a802cbd286be7f4c7aa4b50f350980f1e/DANE-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f3d37f94e188bae1b1687599708a65f2", "sha256": "f8a8ec5659a261f04f73d8491ae404c3620d6d2712287a7c22e8960a8461bb03"}, "downloads": -1, "filename": "DANE-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f3d37f94e188bae1b1687599708a65f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11921, "upload_time": "2020-04-02T13:08:17", "upload_time_iso_8601": "2020-04-02T13:08:17.282780Z", "url": "https://files.pythonhosted.org/packages/b9/04/46e893623b617e0d7303bb8884ed2368acc6fef54b4cc94507eacf49c9aa/DANE-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3d37f94e188bae1b1687599708a65f2", "sha256": "f8a8ec5659a261f04f73d8491ae404c3620d6d2712287a7c22e8960a8461bb03"}, "downloads": -1, "filename": "DANE-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f3d37f94e188bae1b1687599708a65f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11921, "upload_time": "2020-04-02T13:08:17", "upload_time_iso_8601": "2020-04-02T13:08:17.282780Z", "url": "https://files.pythonhosted.org/packages/b9/04/46e893623b617e0d7303bb8884ed2368acc6fef54b4cc94507eacf49c9aa/DANE-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:44 2020"}