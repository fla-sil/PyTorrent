{"info": {"author": "Ogun Acik", "author_email": "acikogun@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development"], "description": "python-dhcp-leases\n======================\n\n|Build Status| |PyPI version| |CodeFactor| |Coverage Status|\n\nSmall python module for reading /var/lib/dhcp/dhcpd.leases from\nisc-dhcp-server. This module works in Python 2.7 and 3.x\n\nThis module also supports reading lease files from the isc dhcp daemon\nrunning in IPv6 mode (Since version 0.4.0).\n\nInstallation\n------------\n\nThrough pypi\n~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ sudo pip install dhcp-leases\n\n\nThrough git\n~~~~~~~~~~~\n\n.. code:: bash\n\n    $ git clone git@github.com:acikogun/python-dhcp-leases.git\n    $ cd python-dhcp-leases\n    $ python setup.py build\n    $ sudo python setup.py install\n\nUsage\n-----\n\n.. code:: python\n\n    from dhcp_leases import DhcpLeases\n\n    leases = DhcpLeases('/path/to/dhcpd.leases')\n    leases.get()  # Returns the leases as a list of Lease objects\n    leases.get_current()  # Returns only the currently valid dhcp leases as dict\n                          # The key of the dict is the device mac address and the\n                          # Value is a Lease object\n\nOr read a gzip'ed file:\n\n.. code:: python\n\n    from dhcp_leases import DhcpLeases\n    # DhcpLeases(filename, gzip=False)\n    leases = DhcpLeases('/path/to/dhcpd.leases', True) # True param starts the gzip reader\n    leases.get()  # Returns the leases as a list of Lease objects\n    leases.get_current()  # Returns only the currently valid dhcp leases as dict\n                          # The key of the dict is the device mac address and the\n                          # Value is a Lease object\n\nThe Lease object has the following fields (only for IPv4 leases):\n\n.. code:: python\n\n    lease instanceof Lease\n    lease.ip             # The ip address assigned by this lease as string\n    lease.ethernet       # The mac address of the lease\n    lease.hardware       # The OSI physical layer used to request the lease (usually ethernet)\n    lease.start          # The start time of this lease as DateTime object\n    lease.end            # The time this lease expires as DateTime object or None if this is an infinite lease\n    lease.hostname       # The hostname for this lease if given by the client\n    lease.binding_state  # The binding state as string ('active', 'free', 'abandoned', 'backup')\n    lease.data           # Dict of all the info in the dhcpd.leases file for this lease\n    lease.valid          # True if the lease hasn't expired and is not in the future\n    lease.active         # True if the binding state is active\n    lease.options        # List of extra options in the lease file\n    lease.sets           # List of the 'set' items in the lease file\n\n\nThe Lease6 object has the following fields (only for IPv6):\n\n.. code:: python\n\n    lease instanceof Lease6\n    lease.ip                 # The ip address assigned by this lease as string\n    lease.type               # If this is a temporary or permanent address. I's one of the following:\n                             # Lease6.TEMPORARY: Temporary lease\n                             # Lease6.NON_TEMPORARY: Non-temporary lease\n                             # Lease6.PREFIX_DELEGATION: Delegated prefix lease\n    lease.host_identifier    # The unique host identifier (replaces mac addresses in IPv6) as bytes\n    lease.host_identifier_string # The host_identifier property formatted as an hexadecimal string\n    lease.duid               # The DHCP Unique Identifier (DUID) of the host as bytes\n    lease.iaid               # The Interface Association Identifier (IAID) of the host\n    lease.last_communication # The last communication time with the host\n    lease.end                # The time this lease expires as DateTime object or None if this is an infinite lease\n    lease.binding_state      # The binding state as string ('active', 'free', 'abandoned', 'backup')\n    lease.preferred_life     # The preferred lifetime in seconds\n    lease.max_life           # The valid lifetime for this address in seconds\n    lease.options            # List of extra options in the lease file\n    lease.sets               # List of the 'set' items in the lease file\n    lease.data               # Dict of all the info in the dhcpd6.leases file for this lease\n\nUnit tests\n----------\n\nThe unit tests can be run with ``setup.py``:\n\n.. code:: bash\n\n    $ python3 setup.py test\n    # With coverage report:\n    $ coverage run setup.py test\n\n.. |Build Status| image:: https://travis-ci.org/acikogun/python-dhcp-leases.svg?branch=master\n   :target: https://travis-ci.org/acikogun/python-dhcp-leases\n.. |PyPI version| image:: https://img.shields.io/pypi/v/dhcp-leases.svg\n   :target: https://pypi.org/project/dhcp-leases\n.. |CodeFactor| image:: https://www.codefactor.io/repository/github/acikogun/python-dhcp-leases/badge\n   :target: https://www.codefactor.io/repository/github/acikogun/python-dhcp-leases\n   :alt: CodeFactor\n.. |Coverage Status| image:: https://coveralls.io/repos/github/acikogun/python-dhcp-leases/badge.svg?branch=master\n   :target: https://coveralls.io/github/acikogun/python-dhcp-leases?branch=master\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/acikogun/python-dhcp-leases", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dhcp-leases", "package_url": "https://pypi.org/project/dhcp-leases/", "platform": "", "project_url": "https://pypi.org/project/dhcp-leases/", "project_urls": {"Homepage": "https://github.com/acikogun/python-dhcp-leases"}, "release_url": "https://pypi.org/project/dhcp-leases/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "Small python module for reading /var/lib/dhcp/dhcpd.leases from isc-dhcp-server", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/acikogun/python-dhcp-leases\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a8b0f9221f1b02ebef8e03f17de5e0e7334d235/68747470733a2f2f7472617669732d63692e6f72672f6163696b6f67756e2f707974686f6e2d646863702d6c65617365732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.org/project/dhcp-leases\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/548b7a3529d4f666c8f8cf26acdc44e17af53d82/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646863702d6c65617365732e737667\"></a> <a href=\"https://www.codefactor.io/repository/github/acikogun/python-dhcp-leases\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fbc65040349a304220dc9f36b931c5e5d620bbd/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6163696b6f67756e2f707974686f6e2d646863702d6c65617365732f6261646765\"></a> <a href=\"https://coveralls.io/github/acikogun/python-dhcp-leases?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a958aa1f07e38e12a76000ceca6a08fb45ea897f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6163696b6f67756e2f707974686f6e2d646863702d6c65617365732f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Small python module for reading /var/lib/dhcp/dhcpd.leases from\nisc-dhcp-server. This module works in Python 2.7 and 3.x</p>\n<p>This module also supports reading lease files from the isc dhcp daemon\nrunning in IPv6 mode (Since version 0.4.0).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"through-pypi\">\n<h3>Through pypi</h3>\n<pre>$ sudo pip install dhcp-leases\n</pre>\n</div>\n<div id=\"through-git\">\n<h3>Through git</h3>\n<pre>$ git clone git@github.com:acikogun/python-dhcp-leases.git\n$ <span class=\"nb\">cd</span> python-dhcp-leases\n$ python setup.py build\n$ sudo python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dhcp_leases</span> <span class=\"kn\">import</span> <span class=\"n\">DhcpLeases</span>\n\n<span class=\"n\">leases</span> <span class=\"o\">=</span> <span class=\"n\">DhcpLeases</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/dhcpd.leases'</span><span class=\"p\">)</span>\n<span class=\"n\">leases</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns the leases as a list of Lease objects</span>\n<span class=\"n\">leases</span><span class=\"o\">.</span><span class=\"n\">get_current</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns only the currently valid dhcp leases as dict</span>\n                      <span class=\"c1\"># The key of the dict is the device mac address and the</span>\n                      <span class=\"c1\"># Value is a Lease object</span>\n</pre>\n<p>Or read a gzip\u2019ed file:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dhcp_leases</span> <span class=\"kn\">import</span> <span class=\"n\">DhcpLeases</span>\n<span class=\"c1\"># DhcpLeases(filename, gzip=False)</span>\n<span class=\"n\">leases</span> <span class=\"o\">=</span> <span class=\"n\">DhcpLeases</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/dhcpd.leases'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># True param starts the gzip reader</span>\n<span class=\"n\">leases</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns the leases as a list of Lease objects</span>\n<span class=\"n\">leases</span><span class=\"o\">.</span><span class=\"n\">get_current</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns only the currently valid dhcp leases as dict</span>\n                      <span class=\"c1\"># The key of the dict is the device mac address and the</span>\n                      <span class=\"c1\"># Value is a Lease object</span>\n</pre>\n<p>The Lease object has the following fields (only for IPv4 leases):</p>\n<pre><span class=\"n\">lease</span> <span class=\"n\">instanceof</span> <span class=\"n\">Lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">ip</span>             <span class=\"c1\"># The ip address assigned by this lease as string</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">ethernet</span>       <span class=\"c1\"># The mac address of the lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">hardware</span>       <span class=\"c1\"># The OSI physical layer used to request the lease (usually ethernet)</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">start</span>          <span class=\"c1\"># The start time of this lease as DateTime object</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">end</span>            <span class=\"c1\"># The time this lease expires as DateTime object or None if this is an infinite lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">hostname</span>       <span class=\"c1\"># The hostname for this lease if given by the client</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">binding_state</span>  <span class=\"c1\"># The binding state as string ('active', 'free', 'abandoned', 'backup')</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">data</span>           <span class=\"c1\"># Dict of all the info in the dhcpd.leases file for this lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">valid</span>          <span class=\"c1\"># True if the lease hasn't expired and is not in the future</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">active</span>         <span class=\"c1\"># True if the binding state is active</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">options</span>        <span class=\"c1\"># List of extra options in the lease file</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">sets</span>           <span class=\"c1\"># List of the 'set' items in the lease file</span>\n</pre>\n<p>The Lease6 object has the following fields (only for IPv6):</p>\n<pre><span class=\"n\">lease</span> <span class=\"n\">instanceof</span> <span class=\"n\">Lease6</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">ip</span>                 <span class=\"c1\"># The ip address assigned by this lease as string</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">type</span>               <span class=\"c1\"># If this is a temporary or permanent address. I's one of the following:</span>\n                         <span class=\"c1\"># Lease6.TEMPORARY: Temporary lease</span>\n                         <span class=\"c1\"># Lease6.NON_TEMPORARY: Non-temporary lease</span>\n                         <span class=\"c1\"># Lease6.PREFIX_DELEGATION: Delegated prefix lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">host_identifier</span>    <span class=\"c1\"># The unique host identifier (replaces mac addresses in IPv6) as bytes</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">host_identifier_string</span> <span class=\"c1\"># The host_identifier property formatted as an hexadecimal string</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">duid</span>               <span class=\"c1\"># The DHCP Unique Identifier (DUID) of the host as bytes</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">iaid</span>               <span class=\"c1\"># The Interface Association Identifier (IAID) of the host</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">last_communication</span> <span class=\"c1\"># The last communication time with the host</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">end</span>                <span class=\"c1\"># The time this lease expires as DateTime object or None if this is an infinite lease</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">binding_state</span>      <span class=\"c1\"># The binding state as string ('active', 'free', 'abandoned', 'backup')</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">preferred_life</span>     <span class=\"c1\"># The preferred lifetime in seconds</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">max_life</span>           <span class=\"c1\"># The valid lifetime for this address in seconds</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">options</span>            <span class=\"c1\"># List of extra options in the lease file</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">sets</span>               <span class=\"c1\"># List of the 'set' items in the lease file</span>\n<span class=\"n\">lease</span><span class=\"o\">.</span><span class=\"n\">data</span>               <span class=\"c1\"># Dict of all the info in the dhcpd6.leases file for this lease</span>\n</pre>\n</div>\n<div id=\"unit-tests\">\n<h2>Unit tests</h2>\n<p>The unit tests can be run with <tt>setup.py</tt>:</p>\n<pre>$ python3 setup.py <span class=\"nb\">test</span>\n<span class=\"c1\"># With coverage report:\n</span>$ coverage run setup.py <span class=\"nb\">test</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7137021, "releases": {"0.1.5": [{"comment_text": "", "digests": {"md5": "7d4ceda3b4dfc279473550e731af8f7b", "sha256": "fd0033d7890a0817f2a1cd50a14a3bc6116e9ad7912718b4d76876d62b06fb81"}, "downloads": -1, "filename": "dhcp_leases-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7d4ceda3b4dfc279473550e731af8f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11688, "upload_time": "2020-04-21T01:35:33", "upload_time_iso_8601": "2020-04-21T01:35:33.535106Z", "url": "https://files.pythonhosted.org/packages/ae/9e/29e4cf092111657a4fd5753ff6860de743e4b5430a6a900a636890221106/dhcp_leases-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3ab51023c084eb78c76311d236beb88", "sha256": "80db5f28208540935f5b304b77db4dda4176d176585210151a650903e1601cf3"}, "downloads": -1, "filename": "dhcp-leases-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b3ab51023c084eb78c76311d236beb88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10963, "upload_time": "2020-04-21T01:35:34", "upload_time_iso_8601": "2020-04-21T01:35:34.440235Z", "url": "https://files.pythonhosted.org/packages/f7/3d/07fc0e0c357c285e83d96e431c9fd49f7f74e65b72a90e36e8314899b6d0/dhcp-leases-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "0954a1fa6afc1f9e0b9450de85ed1d9b", "sha256": "f099e6170313ce26ba0eb58203637c6c87ec7eea8a869eff93bffe58010ffa4d"}, "downloads": -1, "filename": "dhcp_leases-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0954a1fa6afc1f9e0b9450de85ed1d9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11695, "upload_time": "2020-04-30T12:38:31", "upload_time_iso_8601": "2020-04-30T12:38:31.836755Z", "url": "https://files.pythonhosted.org/packages/bf/d5/3f1c6f28925df7e91a58d8d9be6bbfc2d61cdc6e6d827f89443a7232266c/dhcp_leases-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a806c3220a8fb9b14e51d3efb36739", "sha256": "980d5151e09de1fb3ada9ac8aaaa33837b39988ad8d6d0cc5a3d14f358f8f9cf"}, "downloads": -1, "filename": "dhcp-leases-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c4a806c3220a8fb9b14e51d3efb36739", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10970, "upload_time": "2020-04-30T12:38:32", "upload_time_iso_8601": "2020-04-30T12:38:32.782511Z", "url": "https://files.pythonhosted.org/packages/6f/28/9db8682b541abc576a88e3acd7815207271bb5a6798d5c19880eae96ecf7/dhcp-leases-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0954a1fa6afc1f9e0b9450de85ed1d9b", "sha256": "f099e6170313ce26ba0eb58203637c6c87ec7eea8a869eff93bffe58010ffa4d"}, "downloads": -1, "filename": "dhcp_leases-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0954a1fa6afc1f9e0b9450de85ed1d9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11695, "upload_time": "2020-04-30T12:38:31", "upload_time_iso_8601": "2020-04-30T12:38:31.836755Z", "url": "https://files.pythonhosted.org/packages/bf/d5/3f1c6f28925df7e91a58d8d9be6bbfc2d61cdc6e6d827f89443a7232266c/dhcp_leases-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a806c3220a8fb9b14e51d3efb36739", "sha256": "980d5151e09de1fb3ada9ac8aaaa33837b39988ad8d6d0cc5a3d14f358f8f9cf"}, "downloads": -1, "filename": "dhcp-leases-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c4a806c3220a8fb9b14e51d3efb36739", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10970, "upload_time": "2020-04-30T12:38:32", "upload_time_iso_8601": "2020-04-30T12:38:32.782511Z", "url": "https://files.pythonhosted.org/packages/6f/28/9db8682b541abc576a88e3acd7815207271bb5a6798d5c19880eae96ecf7/dhcp-leases-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:40 2020"}