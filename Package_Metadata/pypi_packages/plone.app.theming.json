{"info": {"author": "Martin Aspeli and Laurence Rowe", "author_email": "optilude@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Plone :: 5.2", "Framework :: Plone :: Core", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "This package offers a simple way to develop and deploy Plone themes using\nthe Diazo theming engine. If you are not familiar with Diazo, check out the\n`Diazo documentation <http://diazo.org>`_.\n\nThis version of ``plone.app.theming`` (1.2.X) ships with Plone version 5.0 or later. For Plone 4.3 please use plone.app.theming 1.1.X.\n\nIt comes with a user guide, reproduced below, available through the theming\ncontrol panel.\n\n\nplone.app.theming manual\n========================\n\nThis guide provides an overview of Diazo theming in Plone versions 4.3 and higher.\n\n.. contents:: Contents\n    :local:\n\nIntroduction\n------------\n\nIn `Plone <http://plone.org>`_ versions 4.3 and higher you\ncan edit your website theme through web browser in Plone's site setup control panel.\nOnly HTML, CSS and little XML knowledge needed as the prerequisitements.\nThis guide explains how to use this feature of Plone.\n\nSee `introduction video to plone.app.theming <https://vimeo.com/42564510>`_.\n\nWhat is a Diazo theme?\n----------------------\n\nA \"theme\" makes a website (in this case, one powered by Plone) take on a\nparticular look and feel.\n\n*Diazo* (formerly known as XDV) is a technology that can be used to theme\nwebsites. It is not specific to Plone per se, but has been created by the Plone\ncommunity and, as of Plone 4.3, provides the default way to apply a theme to a\nPlone site. You can learn more about Diazo at http://diazo.org.\n\nDiazo themes may be a little different to themes you have created in other\nsystems, and indeed to themes you may have created for earlier versions of\nPlone. A Diazo theme is really about transforming some content - in this case\nthe output from \"vanilla\" Plone - into a different set of HTML markup by\napplying a set of rules to combine a static HTML mock-up of the end result you\nwant with the dynamic content coming from Plone.\n\nIn comparison, the previous way to theme a Plone site (like the way many other\ncontent management systems are themed) relies on selectively overriding the\ntemplates and scripts that Plone uses to build a page with custom versions\nthat produce different HTML markup. The latter approach can be more powerful,\ncertainly, but also requires much deeper knowledge of Plone's internals and\ncommand of server-side technologies such as Zope Page Templates and even Python.\nDiazo themes, by contrast, are easy to understand for web designers and non-\ndevelopers alike.\n\nA Diazo theme consists of three elements:\n\n1. One or more HTML mockups, also referred to as *theme* files, that represent\n   the desired look and feel.\n\n   These will contain placeholders for content that is to be provided by the\n   Plone content management system. Mockups usually reference CSS, JavaScript\n   and image files by relative path. The most common way to create a theme is to\n   use desktop software like Dreamweaver or a text editor to create the relevant\n   markup, styles and scripts, and test the theme locally in a web browser.\n2. The *content* that is being themed. In this case, that is the output from\n   Plone.\n3. A *rules file*, which defines how the placeholders in the theme (i.e. the\n   HTML mockup) should be replaced by relevant markup in the content.\n\n   The rules file uses XML syntax (similar to HTML). Here is a very simple\n   example::\n\n     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <rules\n         xmlns=\"http://namespaces.plone.org/diazo\"\n         xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n         xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">`\n\n         <theme href=\"theme.html\" />\n\n         <replace css:content-children=\"#content\" css:theme-children=\"#main\" />\n\n     </rules>\n\n   Here, we are replacing the contents (child nodes) of a placeholder element\n   with HTML id ``main`` in the theme file (``theme.html``, found in the same\n   directory as the ``rules.xml`` file, as referenced by the ``<theme />`` rule)\n   with the contents (children) of the element with the HTML id ``content`` in\n   the markup generated by Plone.\n\n   When this theme is applied, the result will look very much like the static\n   HTML file ``theme.html`` (and its referenced CSS, JavaScript and image\n   files), except the placeholder that is identified by the node in the theme\n   with id ``main`` will be filled by Plone's main content area.\n\nPlone ships with an example theme called, appropriately, *Example theme*, which\nuses the venerable `Twitter Bootstrap <http://twitter.github.com/bootstrap/>`_\nto build a simple yet functional theme exposing most of Plone's core\nfunctionality. You are advised to study it - in particular the ``rules.xml``\nfile - to learn more about how Diazo themes work.\n\nUsing the control panel\n-----------------------\n\nAfter installation of the *Diazo theme support* package in a Plone site, the\n*Theming* control panel will appear in Plone's *Site setup*.\n\nThe main tab of this control panel, *Themes*, will show all available themes,\nwith buttons to activate/deactivate, modify, copy or delete each, as well as\nbuttons to create new themes or bring up this help text.\n\nClick on a theme preview image to open a preview of that theme in a new tab\nor window. The preview is navigable, but form submissions and some advanced\nfeatures will not work.\n\nSelecting a theme\n~~~~~~~~~~~~~~~~~\n\nTo apply an existing theme, simply click the *Activate* button underneath the\ntheme preview. The currently active theme will be highlighted in yellow. If\nyou deactivate the currently active theme, no Diazo theme will be applied, i.e.\n\"vanilla\" Plone theming will apply.\n\n*Note*: The *Theming* control panel is never theemd, ensuring that you can\nalways deactivate an errant theme that could render the control panel unusable.\nThus, you may not see any difference immediately after enabling a theme. Simply\nnavigate to another page in the Plone site, though, and you should see the\ntheme applied.\n\nCreating a new theme\n~~~~~~~~~~~~~~~~~~~~\n\nNew themes can be created in one of two ways:\n\n* Click the *New theme* button at the top of the *Themes* tab in the *Theming*\n  control panel and enter a title and description in the form that appears.\n  A bare-bones theme will be created, and you will be taken to the *Modify\n  theme* screen (see below), where you can edit or create theme and rules files.\n* Click the *Copy* button underneath any existing theme and enter a title and\n  description in the form that appears. A new theme will be created as a copy\n  of the existing theme, and you will be taken to the *Modify theme* (see\n  below), where you can edit or create theme and rules files.\n\nUploading an existing theme\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThemes can be distributed as Zip files, containing the HTML mockup and rules\nfile. To download an existing theme, click the *Download* button underneath the\ntheme on the *Themes* tab of the *Theming* control panel.\n\nTo upload such a Zip file into another site, use the *Upload Zip file* button\non the *Themes* tab of the *Theming* control panel. You can choose whether or\nnot to replace any existing theme with the same name (based on the name of the\ntop-level directory contained within the Zip file).\n\nYou can also upload a Zip file of a static HTML mockup that does not contain a\nrules file, such as a design provided by a Plone-agnostic web designer.\n\nIn this case, a basic ``rules.xml`` file will be added for you to start building\nup a theme from using the *Modify theme* screen (see below). The\ngenerated rules file will assume the main HTML mockup file is called\n``index.html``, but you can change this in ``rules.xml``.\n\nOnce you have successfully uploaded a theme Zip file, you will be taken to the\n*Modify theme* screen (see below), where you can edit or create theme files.\n\n*Hint:* If you get an error message like \"The uploaded file does not contain\na valid theme archive\", this usually means that you have uploaded a Zip file\nthat contains multiple files and folders, rather than a single top level\nfolder with all the theme resources in it. This could happen if you compressed\na theme or HTML mockup by adding its files and folders directly a Zip archive,\nrather than compressing the directory in which they were found. To fix this,\nsimply unzip the archive on your computer into a new directory, move up a level,\nand compress this directory on its own into a new Zip file, which you can then\nupload.\n\nModifying the theme\n~~~~~~~~~~~~~~~~~~~\n\nYou can modify a theme by clicking *Modify theme* underneath a theme in the\n*Themes* tab of the *Theming* control panel. This screen is also launched\nautomatically when you create or upload a new theme.\n\n*Note:* Only themes created or uploaded through the *Theming* control panel can\nbe modified through Plone. Themes installed by third-party add-ons or\ndistributed on the filesystem cannot, although changes made on the filesystem\nwill be reflected immediately if Zope is running in debug mode. To modify a\nfilesystem theme, you can copy it to a new in-Plone theme by clicking the *Copy*\nbutton underneath the theme in the *Theming* control panel.\n\nThe *Modify theme* screen initially shows a file manager, with a file tree on\nthe left and an editor on the right. Click on a file in the file tree to open an\neditor or preview: HTML, CSS, JavaScript and other text files can be edited\ndirectly through the editor. Other files (e.g. images) will be rendered as a\npreview.\n\n*Note:* The advanced editor with syntax highlighting is not available in\nMicrosoft Internet Explorer.\n\nClick *New folder* to create a new folder. You can also right-click on a folder\nin the file tree to bring up this action.\n\nClick *New file* to create a new text file. You can also right-click on a folder\nin the file tree to bring up this action.\n\nClick *Upload file* to upload a file from your computer. You can also right-\nclick on a folder in the file tree to bring up this action.\n\nClick *Preview theme* to preview the theme as it will be applied with the mockup\nand rules as currently saved. The preview is navigable, but forms and certain\nadvanced features will not work.\n\nTo save the file currently being edited, click the *Save file* button, or use\nthe keyboard shortcut ``Ctrl+S`` (Windows/Linux) or ``Cmd+S`` (Mac).\n\nTo rename or delete a file or folder, right-click on it in the file tree and\nselect the appropriate action.\n\nThe theme inspector\n~~~~~~~~~~~~~~~~~~~\n\nThe theme inspector provides an advanced interface for discovering and building\nup the rules of a Diazo theme. It can be launched by clicking the *Show\ninspectors* button on the *Modify theme* screen for in-Plone themes, or by\nclicking the *Inspect theme* button underneath a filesystem theme on the\n*Themes* tab of the *Theming* control panel.\n\nThe theme inspector consists of two panels:\n\n* The *HTML mockup*. If there are several HTML files in the theme, you can switch\n  between them using the drop-down list underneath the *HTML mockup* panel.\n* The *Unthemed content*. This shows Plone without any theme applied.\n\nEither panel can be maximised by clicking the arrows icon at the top right of\neither.\n\nThe *HTML mockups* and *Unthemed content* panels can be switch to source view,\nshowing their underlying HTML markup, by clicking the tags icon at the top right\nof either.\n\nAs you hover over elements in the *HTML mockup* or *Unthemed content* panels,\nyou will see:\n\n* An outline showing the element under the cursor.\n* A CSS or XPath selector in the status bar at the bottom if the panel which\n  would uniquely identify this element in a Diazo rule.\n\nClick on an element or press ``Enter`` whilst hovering oveer an element to\nselect it. The most recently selected element in each panel is shown in the\nbottom right of the relevant status bar.\n\nPress ``Esc`` whilst hovering over an element to select its parent. This is\nuseful when trying to select \"invisible\" container elements. Press ``Enter``\nto save this selection.\n\nThe contents of the *HTML mockup* or (more commonly) *Unthemed content* panels\ncan be navigated, for example to get to a content page that requires specific\ntheme rules, by disabling the inspector. Use the toggle switches at the bottom\nright of the relevant panel to enable or disable the selector.\n\nThe rule builder\n~~~~~~~~~~~~~~~~\n\nClick the *Build rule* button near the top of the *Modify theme* or *Inspect\ntheme* screen to launch an interactive rule building wizard. You will be asked\nwhich type of rule to build, and then prompted to select the relevant elements\nin the *HTML mockup* and/or *Unthemed content* panels as required. By default,\nthis will use any saved selections, unless you untick the *Use selected\nelements* box on the first page if the wizard.\n\nOnce the wizard completes, you will be shown the generated rule. You can edit\nthis if you wish. If you click *Insert*, the newly generated rule will be\ninserted into the ``rules.xml`` editor at or near your current cursor position.\nYou can move it around or edit it further as you wish.\n\nClick *Preview theme* to preview the theme in a new tab or window. Don't forget\nto save the ``rules.xml`` file if you have made changes.\n\n*Note*: In readonly mode, you can build rules and inspect the HTML mockup and\ntheme, but not change the ``rules.xml`` file. In this case, the *Insert* button\nof the rule builder (see below) will not be available either.\n\n*Note:* The ability to insert rules from the *Build rule* wizard are not\navailable in Microsoft Internet Explorer, although you will be given the option\nto copy the rule to the clipboard when using this browser.\n\nAdvanced settings\n~~~~~~~~~~~~~~~~~\n\nThe *Theming* control panel also contains a tab named *Advanced settings*. Here\nbe dragons.\n\nThe *Advanced setings* tab is divided into two areas. The first, *Theme\ndetails*, contains the underlying settings that are modified when a theme is\napplied from the *Themes* control panel. These are:\n\n* Whether or not Diazo themes are enabled at all.\n* The path to the rules file, conventionally called ``rules.xml``, either\n  relative to the Plone site root or as an absolute path to an external\n  server.\n* The prefix to apply when turning relative paths in themes (e.g. references to\n  images in an ``<img />`` tag's ``src`` attribute) into absolute ones at\n  rendering time.\n* The HTML ``DOCTYPE`` to apply to the rendered output, if different to the default\n  ``XHTML 1.0 Transitional``.\n* Whether or not to allow theme resources (likes ``rules.xml``) to be read from\n  the network. Disabling this gives a modest performance boost.\n* A list of host names for which a theme is never applied. Most commonly, this\n  contains ``127.0.0.1``, allowing you to view an unthemed site through\n  ``http://127.0.0.1:8080`` and a themed one at ``http://localhost:8080`` during\n  development, say.\n* A list of theme parameters and the TALES expressions to generate them\n  (see below).\n\nThe second, *Theme base*, controls the presentation of the unthemed content, and\napply even if no Diazo theme is being applied. These are the settings that used\nto be found in the *Themes* control panel in previous versions of Plone.\n\nReference\n---------\n\nThe remainder of this guide contains reference materials useful for theme\nbuilders.\n\nDeploying and testing themes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo build and test a theme, you must first create a static HTML mockup of the\nlook and feel you want, and then build a rules file to describe how Plone's\ncontent maps to the placeholders in this mockup.\n\nThe mockup can be created anywhere using whatever tool you feel most comfortable\nbuilding web pages in. To simplify integration with Plone, you are recommended\nto make sure it uses relative links for resources like CSS, JavaScript and image\nfiles, so that it will render properly when opened in a web browser from a local\nfile. Plone will convert these relative links to the appropriate absolute paths\nautomatically, ensuring the theme works no matter which URL the user is viewing\nwhen the theme is applied to a Plone site.\n\nThere are several ways to get the theme into Plone:\n\n1. On the filesystem\n\n   If you used an installer or a standard \"buildout\" to set up your\n   Plone site, you should have a directory called ``resources`` in the\n   root of your Plone installation (this is created using the\n   ``resources`` option to the buildout recipe\n   ``plone.recipe.zope2instance``. See\n   http://pypi.python.org/pypi/plone.recipe.zope2instance for more\n   details.)\n\n   You can find (or create) a ``theme`` directory inside this\n   directory, which is used to contain themes. Each theme needs its\n   own directory with a unique name.  Create one\n   (e.g. ``resources/theme/mytheme``) and put your HTML files and any\n   references resources inside this directory. You can use\n   subdirectories if you wish, but you are recommended to keep the\n   basic theme HTML files at the top of the theme directory.\n\n   You will also need a rules file called ``rules.xml`` inside this\n   directory. If you haven't got one yet, start with an empty one::\n\n       <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n       <rules\n           xmlns=\"http://namespaces.plone.org/diazo\"\n           xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n           xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">`\n\n           <theme href=\"theme.html\" />\n           <replace css:content-children=\"#content\" css:theme-children=\"#main\" />\n\n       </rules>\n\n   Provided you are running Zope in debug mode (e.g. you start it up\n   with ``bin/instance fg``), changes to the theme and rules should\n   take effect immediately. You can preview or enable the theme\n   through the *Themes* control panel, and then iteratively modify the\n   ``rules.xml`` file or the theme mockup as you wish.\n\n2. Through the web\n\n   If you prefer (or do not have filesystem access), you can create\n   themes entirely through the Plone control panel, either by\n   duplicating an existing theme, or starting from scratch with a\n   near-empty theme.\n\n   See the instructions on using the control panel above for more\n   details.\n\n   Once a theme has been created, you can modify it through the\n   *Theming* control panel. See above for more details.\n\n3. As a zip file\n\n   Themes can be downloaded from Plone as Zip files, which can then be\n   uploaded into other sites.\n\n   See the instructions on using the control panel above for more\n   details.\n\n   In fact, you can create valid theme zip archives by compressing a\n   theme directory on the filesystem using a standard compression tool\n   such as *7-Zip* or *Winzip* (for Windows) or the built-in\n   *Compress* action in the Mac OS X Finder.  Just make sure you\n   compress exactly one folder that contains all the theme files and\n   the ``rules.xml`` file. (Do not compress the contents of the folder\n   directly: when unpacked, the zip file should produce exactly one\n   folder which in turn contains all the relevant files).\n\n4. In a Python package (programmers only)\n\n   If you are creating a Python package containing Plone\n   customisations that you intend to install into your site, you can\n   let it register a theme for installation into the site.\n\n   To do this, place a directory called e.g. ``theme`` at the top of\n   the package, next to the Zope ``configure.zcml`` file, and add a\n   ``<plone:static />`` declaration to the ``configure.zcml`` file::\n\n       <configure\n           xmlns:plone=\"http://namespaces.plone.org/plone\"\n           xmlns=\"http://namespaces.zope.org/zope\">\n\n           ...\n\n           <plone:static name=\"mytheme\" directory=\"theme\" type=\"theme\" />\n\n           ...\n\n       </configure>\n\n   Notice the declaration of the ``plone`` namespace at the root\n   ``<configure />`` element. Place the theme files and the\n   ``rules.xml`` file into the ``theme`` directory.\n\n   If your package has a GenericSetup profile, you can automatically\n   enable the theme upon installation of this profile by adding a\n   ``theme.xml`` file in the ``profiles/default`` directory,\n   containing e.g.::\n\n       <theme>\n           <name>mytheme</name>\n           <enabled>true</enabled>\n       </theme>\n\nThe manifest file\n~~~~~~~~~~~~~~~~~\n\nIt is possible to give additional information about a theme by placing a file\ncalled ``manifest.cfg`` next to the ``rules.xml`` file at the top of a theme\ndirectory.\n\nThis file may look like this::\n\n    [theme]\n    title = My theme\n    description = A test theme\n    rules = http://example.org/myrules.xml\n    prefix = /some/prefix\n    doctype = <!DOCTYPE html>\n    preview = preview.png\n    enabled-bundles = mybundle\n    disabled-bundles = plone\n    development-css = /++theme++barceloneta/less/barceloneta.plone.less\n    production-css = /++theme++barceloneta/less/barceloneta-compiled.css\n    development-js = /++theme++barceloneta/barceloneta.js\n    production-js = /++theme++barceloneta/barceloneta.min.js\n    tinymce-content-css = /++theme++barceloneta/tinymce-styles.css\n\n\nAs shown here, the manifest file can be used to provide a more user friendly\ntitle and a longer description for the theme, for use in the control panel.\nOnly the ``[theme]`` header is required - all other keys are optional.\n\n\nManifest settings:\n\nrules\n    to use a different rule file name than ``rules.xml`` (you should provide a URL\n    or relative path).\n\nprefix\n    To change the absolute path prefix (see *Advanced settings*),\n    use::\n\n      prefix = /some/prefix\n\ndoctype\n    To employ a ``DOCTYPE`` in the themed content other than ``XHTML 1.0\n    Transitional``, add e.g.::\n\n      doctype = <!DOCTYPE html>\n\npreview\n    To provide a user-friendly preview of your theme in the *Theming* control panel.\n    Here, ``preview.png`` is an image file relative to the location of the\n    ``manifest.cfg`` file::\n\n      preview = preview.png\n\nenabled-bundles\n    Bundles that will automatically be enabled when a theme is activated\n\ndisabled-bundles\n    Bundles that will automatically be disabled when a theme is activated\n\ndevelopment-css\n    CSS to automatically include when in development mode and theme is active\n\ndevelopment-js\n    JavaScript file to automatically include when in development mode when\n    theme is active\n\nproduction-css\n    CSS to automatically include when theme is active and in production mode\n\nproduction-js\n    JavaScript to automatically include when theme is active and in production mode\n\ntinymce-content-css\n    CSS file tinymce should load to apply styles to content inside the editor\n\ntinymce-styles-css\n    CSS file tinymce should load to provide additionally automatically detected\n    drop-down styles in the editor\n\n\nExtensions to the Diazo theming engine can add support for additional blocks of\nconfigurable parameters.\n\nRules syntax\n~~~~~~~~~~~~\n\nThe following is a short summary of the Diazo rules syntax. See\nhttp://diazo.org for more details and further examples.\n\nSelectors\n+++++++++\n\nEach rule is represented by an XML tag that operates on one or more HTML\nelements in the content and/or theme. The elements to operate on are indicated\nusing attributes of the rules known as *selectors*.\n\nThe easiest way to select elements is to use a CSS expression selector, such as\n``css:content=\"#content\"`` or ``css:theme=\"#main .content\"``. Any valid CSS 3\nexpression (including pseudo-selectors like ``:first-child`` may be used.\n\nThe standard selectors, ``css:theme`` and ``css:content``, operate on the\nelement(s) that are matched. If you want to operate on the children of the\nmatched element instead, use ``css:theme-children=\"...\"`` or\n``css:content-children=\"...\"`` instead.\n\nIf you cannot construct a suitable CSS 3 expression, you can use XPath\nexpressions such as ``content=\"/head/link\"`` or ``theme=\"//div[@id='main']\"``\n(note the lack of a ``css:`` prefix when using XPath expressions). The two\napproaches are equivalent, and you can mix and match freely, but you cannot\nhave e.g. both a ``css:theme`` and a ``theme`` attribute on a single rule. To\noperate on children of a node selected with an XPath expression, use\n``theme-children=\"...\"`` or ``content-children=\"...\"``.\n\nYou can learn more about XPath at http://www.w3schools.com/xpath/default.asp.\n\nConditions\n++++++++++\n\nBy default, every rule is executed, though rules that do not match any elements\nwill of course do nothing. You can make a rule, set of rules or theme reference\n(see below) conditional upon an element appearing in the content by adding an\nattribute to the rule like ``css:if-content=\"#some-element\"`` (to use an XPath\nexpression instead, drop the ``css:`` prefix). If no elements match the\nexpression, the rule is ignored.\n\n**Tip:** if a ``<replace />`` rule matches an element in the theme but not in\nthe content, the theme node will be dropped (replaced with nothing). If you do\nnot want this behavior and you are unsure if the content will contain the\nrelevant element(s), you can use ``css:if-content`` conditional rule. Since\nthis is a common scenario, there is a shortcut: ``css:if-content=\"\"`` means\n\"use the expression from the ``css:content`` attribute\".\n\nSimilarly, you can construct a condition based on the path of the current\nrequest by using an attribute like ``if-path=\"/news\"`` (note that there is no\n``css:if-path`` ). If the path starts with a slash, it will match from the root\nof the Plone site. If it ends with a slash, it will match to the end of the URL.\nYou can set an absolute path by using a leading and a trailing slash.\n\nFinally, you can use arbitrary XPath expressions against any defined variable\nusing an attribute like ``if=\"$host = 'localhost'\"`` . By default, the variables\n``url`` , ``scheme`` , ``host`` and ``base`` are available, representing the\ncurrent URL. Themes may define additional variables in their manifests.\n\nAvailable rules\n+++++++++++++++\n\nThe various rule types are summarized below.\n\n``rules``\n#########\n\n::\n\n    <rules>\n        ...\n    </rules>\n\nWraps a set of rules. Must be used as the root element of the rules file. Nested\n``<rules />`` can be used with a *condition* to apply a single condition to a\nset of rules.\n\nWhen used as the root element of the rules file, the various XML namespaces must\nbe declared::\n\n    <rules\n        xmlns=\"http://namespaces.plone.org/diazo\"\n        xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n        xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n        ...\n    </rules>\n\n``theme`` and ``notheme``\n#########################\n\n::\n\n    <theme href=\"theme.html\" />\n    <theme href=\"news.html\" if-path=\"/news\" />\n    <notheme if=\"$host = 'admin.example.org'\" />\n\nChoose the theme file to be used. The ``href`` is a path relative to the rules\nfile. If multiple ``<theme />`` elements are present, at most one may be given\nwithout a condition. The first theme with a condition that is true will be used,\nwith the unconditional theme, if any, used as a fallback.\n\n``<notheme />`` can be used to specify a condition under which no theme\nshould be used. ``<notheme />`` takes precedence over ``<theme />``.\n\n**Tip:**  To ensure you do not accidentally style non-Plone pages, add a\ncondition like ``css:if-content=\"#visual-portal-wrapper\"`` to the last theme\nlisted, and do not have any unconditional themes.\n\n``replace``\n###########\n\n::\n\n    <replace\n        css:content=\"#content\"\n        css:theme=\"#main\"\n        />\n\nReplaces the matched element(s) in the theme with the matched element(s) from\nthe content.\n\n``before`` and ``after``\n########################\n\n::\n\n    <before\n        css:content-children=\"#portal-column-one\"\n        css:theme-children=\"#portlets\"\n        />\n\n    <after\n        css:content-children=\"#portal-column-two\"\n        css:theme-children=\"#portlets\"\n        />\n\nInserts the matched element(s) from the content before or after the matched\nelement(s) in the theme. By using ``theme-children`` , you can insert the\nmatched content element(s) as the first (prepend) or last (append) element(s)\ninside the matched theme element(s).\n\n``drop`` and ``strip``\n######################\n\n::\n\n    <drop css:content=\".documentByLine\" />\n    <drop theme=\"/head/link\" />\n    <drop css:theme=\"#content *\" attributes=\"onclick onmouseup\" />\n\n    <strip css:content=\"#parent-fieldname-text\" />\n\nRemove element(s) from the theme or content. Note that unlike most other rules,\na ``<drop />`` or ``<strip />`` rule can operate on the ``theme`` or\n``content`` , but not both. ``<drop />`` removes the matched element(s) and\nany children, whereas ``<strip />`` removes the matched element(s), but leaves\nany children in place.\n\n``<drop />`` may be given a whitespace-separated list of ``attributes`` to\ndrop. In this case, the matched element(s) themselves will not be removed. Use\n``attributes=\"*\"`` to drop all attributes.\n\n``merge`` and ``copy``\n######################\n\n::\n\n    <merge\n        attributes=\"class\"\n        css:content=\"body\"\n        css:theme=\"body\"\n        />\n\n    <copy\n        attributes=\"class\"\n        css:content=\"#content\"\n        css:theme=\"#main\"\n        />\n\nThese rules operate on attributes. ``<merge />`` will add the contents of the\nnamed attribute(s) in the theme to the value(s) of any existing attributes with\nthe same name(s) in the content, separated by whitespace. It is mainly used to\nmerge CSS classes.\n\n``<copy />`` will copy attributes from the matched element(s) in the content\nto the matched element(s) in the theme, fully replacing any attributes with\nthe same name that may already be in the theme.\n\nThe ``attributes`` attribute can contain a whitespace-separated list of\nattributes, or the special value ``*`` to operate on all attributes of the\nmatched element.\n\nAdvanced modification\n++++++++++++++++++++++\n\nInstead of selecting markup to insert into the theme from the content, you can\nplace markup directly into the rules file, as child nodes of the relevant rule\nelement::\n\n    <after css:theme=\"head\">\n        <style type=\"text/css\">\n            body > h1 { color: red; }\n        </style>\n    </after>\n\nThis also works on the content, allowing you to modify it on the fly before any\nrules are applied::\n\n    <replace css:content=\"#portal-searchbox input.searchButton\">\n        <button type=\"submit\">\n            <img src=\"images/search.png\" alt=\"Search\" />\n        </button>\n    </replace>\n\nIn addition to including static HTML in this manner, you can use XSLT\ninstructions that operate on the content. You can even use ``css:`` selectors\ndirectly in the XSLT.::\n\n    <replace css:theme=\"#details\">\n        <dl id=\"details\">\n            <xsl:for-each css:select=\"table#details > tr\">\n                <dt><xsl:copy-of select=\"td[1]/text()\"/></dt>\n                <dd><xsl:copy-of select=\"td[2]/node()\"/></dd>\n            </xsl:for-each>\n        </dl>\n    </replace>\n\nRules may operate on content that is fetched from somewhere other than the\ncurrent page being rendered by Plone, by using the ``href`` attribute to specify\na path of a resource relative to the root of the Plone site::\n\n    <!-- Pull in extra navigation from a browser view on the Plone site root -->\n    <after\n        css:theme-children=\"#leftnav\"\n        css:content=\".navitem\"\n        href=\"/@@extra-nav\"\n        />\n\nTheme parameters\n~~~~~~~~~~~~~~~~\n\nIt is possible to pass arbitrary parameters to your theme, which can be\nreferenced as variables in XPath expressions. Parameters can be set in Plone's\ntheming control panel, and may be imported from a ``manifest.cfg`` file.\n\nFor example, you could have a parameter ``mode`` that could be set to the\nstring ``live`` or ``test``. In your rules, you could do something like this\nto insert a warning when you are on the test server::\n\n    <before css:theme-children=\"body\" if=\"$mode = 'test'\">\n        <span class=\"warning\">Warning: This is the test server</span>\n    </before>\n\nYou could even use the parameter value directly, e.g.::\n\n    <before css:theme-children=\"body\">\n        <span class=\"info\">This is the <xsl:value-of select=\"$mode\" /> server</span>\n    </before>\n\nThe following parameters are always available to Plone themes:\n\n``scheme``\n    The scheme portion of the inbound URL, usually ``http`` or ``https``.\n``host``\n    The hostname in the inbound URL.\n``path``\n    The path segment of the inbound URL. This will not include any virtual\n    hosting tokens, i.e. it is the path the end user sees.\n``base``\n    The Zope base url (the ``BASE1`` request variable).\n\nYou can add additional parameters through the control panel, using TALES\nexpressions. Parameters are listed on the *Advanced* tab, one per line, in\nthe form ``<name> = <expression>``.\n\nFor example, if you want to avoid theming any pages that are loaded by Plone's\noverlays, you can make use of the ``ajax_load`` request parameter that they\nset. Your rules file might include::\n\n    <notheme if=\"$ajax_load\" />\n\nTo add this parameter as well as the ``mode`` parameter outlined earlier, you\ncould add the following in the control panel::\n\n    ajax_load = python: request.form.get('ajax_load')\n    mode = string: test\n\nThe right hand side is a TALES expression. It *must* evaluate to a string,\ninteger, float, boolean or ``None``: lists, dicts and objects are not\nsupported. ``python:``, ``string:`` and path expressions work as they do\nin Zope Page Templates.\n\nThe following variables are available when constructing these TALES expressions:\n\n``context``\n    The context of the current request, usually a content object.\n``request``\n    The current request.\n``portal``\n    The portal root object.\n``context_state``\n    The ``@@plone_context_state`` view, from which you can look up additional\n    values such as the context's URL or default view.\n``portal_state``\n    The ``@@plone_portal_state`` view, form which you can look up additional\n    values such as the navigation root URL or whether or not the current\n    user is logged in.\n\nSee ``plone.app.layout`` for details about the ``@@plone_context_state`` and\n``@@plone_portal_state`` views.\n\nTheme parameters are usually integral to a theme, and will therefore be set\nbased on a theme's manifest when a theme is imported or enabled. This is done\nusing the ``[theme:parameters]`` section in the ``manifest.cfg`` file. For\nexample::\n\n    [theme]\n    title = My theme\n    description = A test theme\n\n    [theme:parameters]\n    ajax_load = python: request.form.get('ajax_load')\n    mode = string: test\n\nTheme debugging\n~~~~~~~~~~~~~~~\n\nWhen Zope is in development mode (e.g. running in the foreground in a console\nwith ``bin/instance fg``), the theme will be re-compiled on each request. In\nnon-development mode, it is compiled once when first accessed, and then only re-\ncompiled the control panel values are changed.\n\nAlso, in development mode, it is possible to temporarily disable the theme\nby appending a query string parameter ``diazo.off=1``. For example::\n\n    http://localhost:8080/Plone/some-page?diazo.off=1\n\nFinally, you can get an overlay containing your rules, annotated with how\nmany times the conditions matched both the theme and the document. Green\nmeans the condition matched, red means it didn't. The entire rule tag will\nbe green (i.e. it had an effect) so long as all conditions within are green.\n\nTo enable this, append ``diazo.debug=1``. For example::\n\n    http://localhost:8080/Plone/some-page?diazo.debug=1\n\nThe parameter is ignored in non-development mode.\n\nCommonly used rules\n~~~~~~~~~~~~~~~~~~~\n\nThe following recipes illustrate rules commonly used in building Plone themes:\n\nTo copy the page title::\n\n    <replace css:theme=\"title\" css:content=\"title\" />\n\nTo copy the ``<base />`` tag (necessary for Plone's links to work)::\n\n    <replace css:theme=\"base\" css:content=\"base\" />\n\nIf there is no ``<base />`` tag in the theme, you can do:\n\n    <before css:theme-children=\"head\" css:content=\"base\" />\n\nTo drop all styles and JavaScript resources from the theme and copy them\nfrom Plone's ``portal_css`` tool instead::\n\n    <!-- Drop styles in the head - these are added back by including them from Plone -->\n    <drop theme=\"/html/head/link\" />\n    <drop theme=\"/html/head/style\" />\n\n    <!-- Pull in Plone CSS -->\n    <after theme-children=\"/html/head\" content=\"/html/head/link | /html/head/style\" />\n\nTo copy Plone's JavaScript resources::\n\n    <!-- Pull in Plone CSS -->\n    <after theme-children=\"/html/head\" content=\"/html/head/script\" />\n\nTo copy the class of the ``<body />`` tag (necessary for certain Plone\nJavaScript functions and styles to work properly)::\n\n    <!-- Body -->\n    <merge attributes=\"class\" css:theme=\"body\" css:content=\"body\" />\n\nAdvanced: Using portal_css to manage your CSS\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPlone's \"resource registries\", including the ``portal_css`` tool, can be used\nto manage CSS stylesheets. This offers several advantages over simply linking\nto your stylesheets in the template, such as:\n\n* Detailed control over the ordering of stylesheets\n* Merging of stylesheets to reduce the number of downloads required to render\n  your page\n* On-the-fly stylesheet compression (e.g. whitespace removal)\n* The ability to include or exclude a stylesheet based on an expression\n\nIt is usually desirable (and sometimes completely necessary) to leave the\ntheme file untouched, but you can still use ``portal_css`` to manage your\nstylesheets. The trick is to:\n\n* Register your theme's styles with Plone's ``portal_css`` tool (this is\n  normally best done when you ship a theme in a Python package - there is\n  currently no way to automate this for a theme imported from a Zip file or\n  created through the web)\n* Drop the theme's styles with a rule, and then\n* Include all styles from Plone\n\nFor example, you could add the following rules::\n\n    <drop theme=\"/html/head/link\" />\n    <drop theme=\"/html/head/style\" />\n\n    <!-- Pull in Plone CSS -->\n    <after theme-children=\"/html/head\" content=\"/html/head/link | /html/head/style\" />\n\nThe use of an \"or\" expression for the content in the ``after />`` rule means\nthat the relative ordering of link and style elements is maintained.\n\nTo register stylesheets upon product installation using GenericSetup, use the\n``cssregistry.xml`` import step in your GenericSetup ``profiles/default``\ndirectory::\n\n    <?xml version=\"1.0\"?>\n    <object name=\"portal_css\">\n\n     <!-- Set conditions on stylesheets we don't want to pull in -->\n     <stylesheet\n         expression=\"not:request/HTTP_X_THEME_ENABLED | nothing\"\n         id=\"public.css\"\n         />\n\n     <!-- Add new stylesheets -->\n     <stylesheet title=\"\" authenticated=\"False\" cacheable=\"True\"\n        compression=\"safe\" conditionalcomment=\"\" cookable=\"True\" enabled=\"on\"\n        expression=\"request/HTTP_X_THEME_ENABLED | nothing\"\n        id=\"++theme++my.theme/css/styles.css\" media=\"\" rel=\"stylesheet\"\n        rendering=\"link\"\n        applyPrefix=\"True\"\n        />\n\n    </object>\n\nThere is one important caveat, however. Your stylesheet may include relative\nURL references of the following form:\n\n    background-image: url(../images/bg.jpg);\n\nIf your stylesheet lives in a resource directory (e.g. it is registered in\n``portal_css`` with the id ``++theme++my.theme/css/styles.css``), this\nwill work fine so long as the registry (and Zope) is in debug mode. The\nrelative URL will be resolved by the browser to\n``++theme++my.theme/images/bg.jpg``.\n\nHowever, you may find that the relative URL breaks when the registry is put\ninto production mode. This is because resource merging also changes the URL\nof the stylesheet to be something like::\n\n    /plone-site/portal_css/Suburst+Theme/merged-cachekey-1234.css\n\nTo correct for this, you must set the ``applyPrefix`` flag to ``true`` when\ninstalling your CSS resource using ``cssregistry.xml``. There is a\ncorresponding flag in the ``portal_css`` user interface.\n\nIt is sometimes useful to show some of Plone's CSS in the styled site. You\ncan achieve this by using an Diazo ``<after />`` rule or similar to copy the\nCSS from Plone's generated ``<head />`` into the theme. You can use the\n``portal_css`` tool to turn off the style sheets you do not want.\n\nHowever, if you also want the site to be usable in non-themed mode (e.g. on a\nseparate URL), you may want to have a larger set of styles enabled when Diazo\nis not used. To make this easier, you can use the following expressions as\nconditions in the ``portal_css`` tool (and ``portal_javascripts`` if relevant),\nin ``portal_actions``, in page templates, and other places that use TAL\nexpression syntax::\n\n    request/HTTP_X_THEME_ENABLED | nothing\n\nThis expression will return True if Diazo is currently enabled, in which case\nan HTTP header \"X-Theme-Enabled\" will be set.\n\nIf you later deploy the theme to a fronting web server such as nginx, you can\nset the same request header there to get the same effect, even if\n``plone.app.theming`` is uninstalled.\n\nUse::\n\n    not: request/HTTP_X_THEME_ENABLED | nothing\n\nto 'hide' a style sheet from the themed site.\n\nAdvanced: Disable diazo transformation by setting the ``X-Theme-Disabled`` header\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe diazo transformation is not applied\nif a response header ``X-Theme-Disabled`` is set.\n\nIn a browser view, the header can be set by using this instruction::\n\n    self.request.response.setHeader('X-Theme-Disabled', '1')\n\nThis is a complete example::\n\n    class NoDiazoView(BrowserView):\n\n        def __call__(self):\n            self.request.response.setHeader('X-Theme-Disabled', '1')\n            return super(NoDiazoView).__call__()\n\n\nChangelog\n=========\n\n\n.. You should *NOT* be adding new change log entries to this file.\n   You should create a file in the news directory instead.\n   For helpful instructions, please see:\n   https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n\n.. towncrier release notes start\n\n4.0.6 (2020-04-20)\n------------------\n\nBug fixes:\n\n\n- Minor packaging updates. (#1)\n\n\n4.0.5 (2020-03-13)\n------------------\n\nBug fixes:\n\n\n- Do not call ``processInputs``.\n  It is not needed since Zope 4, and not existing in Zope 5.\n  [maurits] (#171)\n\n\n4.0.4 (2019-12-11)\n------------------\n\nBug fixes:\n\n\n- Fix creating a new theme ttw in py2 with Zope 4.1.3.\n  [pbauer] (#166)\n\n\n4.0.3 (2019-10-12)\n------------------\n\nBug fixes:\n\n\n- Load zcml of ``plone.resource`` for our use of the ``plone:static`` directive.\n  [maurits] (#2952)\n\n\n4.0.2 (2019-09-13)\n------------------\n\nBug fixes:\n\n\n- Fixed Python3 TypeError: 'filter' object is not subscriptable.\n  This happened when overriding a filesystem theme with a TTW version\n  [fredvd] (#160)\n\n\n4.0.1 (2019-02-14)\n------------------\n\nBug fixes:\n\n\n- Fix skinname-encoding in py3 (fixes\n  https://github.com/plone/Products.CMFPlone/issues/2748) [pbauer] (#2748)\n\n\n4.0.0 (2019-02-13)\n------------------\n\nBreaking changes:\n\n\n- Factor out all static resources into plone.staticresources as part of PLIP\n  1653. [thet, sunew] (#149)\n\n\nBug fixes:\n\n\n- a11y: Added role attribute for portalMessage [nzambello] (#151)\n- Fixed DeprecationWarning about SafeConfigParser class on Python 3. [maurits]\n  (#152)\n- Fixed ResourceWarnings for unclosed files in tests. [maurits] (#154)\n- Fixed \"RuntimeError: dictionary changed size during iteration\" [jensens]\n  (#156)\n\n\n3.0.1 (2018-12-11)\n------------------\n\nBreaking changes:\n\n- Remove five.globalrequest dependency.\n  It has been deprecated upstream (Zope 4).\n  [gforcada]\n\n\n3.0.0 (2018-11-02)\n------------------\n\nNew features:\n\n- Recompiled resource bundles with latest mockup.\n  [sunew]\n\nBug fixes:\n\n- Explizit load permissions for controlpanel.\n  [jensens]\n\n- Fix tests for merged plone.login.\n  [jensens]\n\n- More Python 3 fixes\n  [ale-rt, pbauer, davisagli]\n\n\n2.0.3 (2018-04-04)\n------------------\n\nBug fixes:\n\n- Added a failing (5.1) test for fileuploads in the theme editor that breaks when plone.rest is installed. Fix is in https://github.com/plone/plone.rest/issues/59\n  [djay]\n\n\n2.0.2 (2018-02-04)\n------------------\n\nBug fixes:\n\n- remove mention of non-existent Example theme\n  [tkimnguyen]\n\n- Prepare for Python 2 / 3 compatibility\n  [pbauer, ale-rt]\n\n\n2.0.1 (2017-07-03)\n------------------\n\nBug fixes:\n\n- Remove unittest2 dependency\n  [kakshay21]\n\n\n2.0 (2017-05-24)\n----------------\n\nBreaking changes:\n\n- Let the pattern configuration of the thememapper be in JSON format.\n  Fixes problems of thememapper working together with latest patternslib (2.1.0).\n  [thet]\n\nBug fixes:\n\n- Fix thememapper pattern handling of buttons (via mockup update).\n  Update thememapper bundle.\n  [thet]\n\n\n1.3.6 (2017-03-28)\n------------------\n\nBug fixes:\n\n- Reduce log level of ThemingPolicy cache to 'debug'.\n  [jensens]\n\n\n1.3.5 (2017-02-12)\n------------------\n\nBug fixes:\n\n- Fix imports from Globals that was removed in Zope4\n  [pbauer]\n\n- No longer patch Control Panel internals, as it was removed in Zope4\n  [MatthewWilkes]\n\n- reST syntax, styleguide, wording and line length of the docs\n  [svx]\n\n1.3.4 (2016-12-30)\n------------------\n\nBug fixes:\n\n- Make diazo.debug work again when DIAZO_ALWAYS_CACHE_RULES is set.\n  [ale-rt]\n\n\n1.3.3 (2016-12-02)\n------------------\n\nBug fixes:\n\n- Remove roman monkey patch.\n  [gforcada]\n\n1.3.2 (2016-09-23)\n------------------\n\nNew features:\n\n- Add Update -button for theming control panel making it possible to\n  reload modified theme manifest without deactivating theme at first.\n  [datakurre]\n\n\n1.3.1 (2016-09-07)\n------------------\n\nFixes:\n\n- Enable unload protection by using pattern class ``pat-formunloadalert`` instead ``enableUnloadProtection``.\n  [thet]\n\n- Small fix in documentation\n  [staeff]\n\n- Fix issue where theming control panel errored when a packaged\n  theme was overidden with a global resource directory theme\n  [datakurre]\n\n1.3.0 (2016-06-07)\n------------------\n\nNew:\n\n- Control theme compilation in development mode\n  through the environment variable ``DIAZO_ALWAYS_CACHE_RULES``\n  [ale-rt]\n\nFixes:\n\n- Small fixes to documentaion\n  [ale-rt]\n\n1.2.19 (2016-03-31)\n-------------------\n\nNew:\n\n- For the theming controlpanel, change base URLs from portal URL to what getSite returns, but don't change the controlpanels context binding.\n  This allows for more flexibility when configuring it to be allowed on a sub site with a local registry.\n  [thet]\n\n\n1.2.18 (2016-03-03)\n-------------------\n\nFixes:\n\n- Fixed html validation: element nav does not need a role attribute.\n  [maurits]\n\n- Handle potential scenarios where wrong theme would show selected in the theming\n  control panel\n  [vangheem]\n\n\n1.2.17 (2016-02-11)\n-------------------\n\nNew:\n\n- Documented how to disable diazo transform by setting the\n  ``X-Theme-Disabled`` header.  [ale-rt]\n\nFixes:\n\n- Rebuild resources so they work with latest mockup/patternslib\n  integration changes.  [vangheem]\n\n- Removed github dependancies in thememapper.  [Gagaro]\n\n\n1.2.16 (2015-11-26)\n-------------------\n\nFixes:\n\n- Updated Site Setup link in all control panels.\n  Fixes https://github.com/plone/Products.CMFPlone/issues/1255\n  [davilima6]\n\n\n1.2.15 (2015-10-28)\n-------------------\n\nFixes:\n\n- Do not fail in ``isThemeEnabled`` when we have no settings, for\n  example when migrating from Plone 3 to Plone 5, but maybe also in\n  other cases.\n  [maurits]\n\n- Fixed Unicode Encode Error when to copy into multi-byte title / description\n  [terapyon]\n\n\n1.2.14 (2015-09-27)\n-------------------\n\n- Fix i18n in mapper.pt\n  [vincentfretin]\n\n\n1.2.13 (2015-09-20)\n-------------------\n\n- Pull mark_special_links, external_links_open_new_window values\n  from configuration registry.\n  [esteele]\n\n- Fix visual glitch on Safari\n  [davilima6]\n\n- Show active theme at the top of the theme list.\n  Fixes https://github.com/plone/plone.app.theming/issues/70\n  [tmassman]\n\n\n1.2.12 (2015-09-15)\n-------------------\n\n- Remove bundled twitter bootstrap theme 'example'.\n  Fixes https://github.com/plone/Products.CMFPlone/issues/877\n  [pbauer]\n\n- Remove duplicate type attribute for theming control panel delete modal.\n  [esteele]\n\n\n1.2.11 (2015-09-11)\n-------------------\n\n- rewrite manifest from copied theme with relative paths also\n  [vangheem]\n\n\n1.2.10 (2015-09-08)\n-------------------\n\n- theme mapper fixes for odd behavior in save files at times\n  [swartz]\n\n\n1.2.9 (2015-08-22)\n------------------\n\n- Build thememapper resources.\n  [vangheem]\n\n- Added cache invalidation option.\n  [swartz]\n\n\n1.2.8 (2015-08-20)\n------------------\n\n- change link from plone.org to plone.com.\n  [tkimnguyen]\n\n- fix toolbar on control panel\n  [vangheem]\n\n- fix less building\n  [obct537]\n\n- Fixed copy modal for themes with a dot in the name.\n  [Gagaro]\n\n\n1.2.7 (2015-07-18)\n------------------\n\n- Provide better styling to themeing control panel, less build, finish implementation\n  [obct537]\n\n- make sure when copying themes that you try to modify the base urls\n  to match the new theme are all the manifest.cfg settings\n  [vangheem]\n\n- implement switchable theming policy API, re-implement theme caching\n  [gyst]\n\n- fixed configuration of copied theme\n  [vmaksymiv]\n\n- implemented upload for theme manager\n  [schwartz]\n\n- Change the category of the configlet to 'plone-general'.\n  [sneridagh]\n\n\n1.2.6 (2015-06-05)\n------------------\n\n- removed irrelevant theme renaming code\n  [schwartz]\n\n- Filesystem themes are now correctly overridden. TTW themes can no longer be overriden\n  [schwartz]\n\n- re-added manifest check\n  [schwartz]\n\n- Fixed broken getTheme method\n  [schwartz]\n\n- Minor ReStructuredText fixes for documentation.\n  [maurits]\n\n\n1.2.5 (2015-05-13)\n------------------\n\n- Fix RestructuredText representation on PyPI by bringing back a few\n  example lines in the manifest.\n  [maurits]\n\n\n1.2.4 (2015-05-12)\n------------------\n\n- Add setting for tinymce automatically detected styles\n  [vangheem]\n\n1.2.3 (2015-05-04)\n------------------\n\n- fix AttributeError: 'NoneType' object has no attribute 'getroottree' when the result is not\n  html / is empty.\n  [sunew]\n\n- make control panel usable again. Fixed problem where skins\n  control panel is no longer present.\n  [vangheem]\n\n- unified different getTheme functions.\n  [jensens]\n\n- pep8ified, housekeeping, cleanup\n  [jensens]\n\n- Specify i18n:domain in controlpanel.pt.\n  [vincentfretin]\n\n- pat-modal pattern has been renamed to pat-plone-modal\n  [jcbrand]\n\n- Fix load pluginSettings for the enabled theme before calling plugins for\n  onEnabled and call onEnabled plugins with correct parameters\n  [datakurre]\n\n\n1.2.2 (2015-03-22)\n------------------\n\n- Patch the ZMI only for available ZMI pages.\n  [thet]\n\n- Change deprecated import of ``zope.site.hooks.getSite`` to\n  ``zope.component.hooks.getSite``.\n  [thet]\n\n- Add an error log if the subrequest failed (probably a relative xi:include)\n  instead of silently returning None (and so having a xi:include returning\n  nothing).\n  [vincentfretin]\n\n- Fix transform to not affect the result when theming is disabled\n  [datakurre]\n\n- Integrate thememapper mockup pattern and fix theming control panel\n  to be more usable\n  [ebrehault]\n\n\n1.2.1 (2014-10-23)\n------------------\n\n- Remove DL's from portal message in templates.\n  https://github.com/plone/Products.CMFPlone/issues/153\n  [khink]\n\n- Fix \"Insufficient Privileges\" for \"Site Administrators\" on the control panel.\n  [@rpatterson]\n\n- Add IThemeAppliedEvent\n  [vangheem]\n\n- Put themes in a separate zcml file to be able to exclude them\n  [laulaz]\n\n- #14107 bot requests like /widget/oauth_login/info.txt causes\n  problems finding correct context with plone.app.theming\n  [anthonygerrard]\n\n- Added support for ++theme++ to traverse to the contents of the\n  current activated theme.\n  [bosim]\n\n\n1.2.0 (2014-03-02)\n------------------\n\n- Disable theming for manage_shutdown view.\n  [davisagli]\n\n- Fix reference to theme error template\n  [afrepues]\n\n- Add \"Test Styles\" button in control panel to expose, test_rendering template.\n  [runyaga]\n\n1.1.1 (2013-05-23)\n------------------\n\n- Fixed i18n issues.\n  [thomasdesvenain]\n\n- Fixed i18n issues.\n  [jianaijun]\n\n- This fixed UnicodeDecodeError when Theme Title is Non-ASCII\n  in the manifest.cfg file.\n  [jianaijun]\n\n\n1.1 (2013-04-06)\n----------------\n\n- Fixed i18n issues.\n  [vincentfretin]\n\n- Make the template theme do what it claims to do: copy styles as\n  well as scripts.\n  [smcmahon]\n\n- Change the label and description for the example theme to supply useful\n  information.\n  [smcmahon]\n\n- Upgrades from 1.0 get the combined \"Theming\" control panel that was added in\n  1.1a1.\n  [danjacka]\n\n\n1.1b2 (2013-01-01)\n------------------\n\n- Ensure host blacklist utilises SERVER_URL to correctly determine hostname\n  for sites hosted as sub-folders at any depth.\n  [davidjb]\n\n- Add test about plone.app.theming / plone.app.caching integration when\n  using GZIP compression for anonymous\n  (see ticket `12038 <https://dev.plone.org/ticket/12038>`_). [ebrehault]\n\n\n1.1b1 (2012-10-16)\n------------------\n\n- Add diazo.debug option, route all error_log output through\n  this so debugging can be displayed\n  [lentinj]\n\n- Make example Bootstrap-based theme use the HTML5 DOCTYPE.\n  [danjacka]\n\n- Demote ZMI patch log message to debug level.\n  [hannosch]\n\n- Upgrade to ACE 1.0 via plone.resourceeditor\n  [optilude]\n\n- Put quotes around jQuery attribute selector values to appease\n  jQuery 1.7.2.\n  [danjacka]\n\n1.1a2 (2012-08-30)\n------------------\n\n- Protect the control panel with a specific permission so it can be\n  delegated.\n  [davisagli]\n\n- Advise defining ajax_load as ``request.form.get('ajax_load')`` in\n  manifest.cfg.  For instance, the login_form has an hidden empty\n  ajax_load input, which would give an unthemed page after submitting\n  the form.\n  [maurits]\n\n- Change theme editor page templates to use main_template rather than\n  prefs_main_template to avoid inserting CSS and JavaScript too early\n  under plonetheme.classic.\n  [danjacka]\n\n1.1a1 (2012-08-08)\n------------------\n\n- Replace the stock \"Themes\" control panel with a renamed \"Theming\" control\n  panel, which incorporates the former's settings under its \"Advanced\" tab.\n  [optilude]\n\n- Add a full in-Plone theme authoring environment\n  [optilude, vangheem]\n\n- Update IBeforeTraverseEvent import to zope.traversing.\n  [hannosch]\n\n- On tab \"Manage themes\", change table header to\n  better describe what's actually listed.\n  [kleist]\n\n1.0 (2012-04-15)\n----------------\n\n* Prevent AttributeError when getRequest returns None.\n  [maurits]\n\n* Calculate subrequests against navigation root rather than portal.\n  [elro]\n\n* Supply closest context found for 404 pages.\n  [elro]\n\n* Lookup portal state with correct context.\n  [elro]\n\n1.0b9 - 2011-11-02\n------------------\n\n* Patch App.Management.Navigation to disable theming of ZMI pages.\n  [elro]\n\n1.0b8 - 2011-07-04\n------------------\n\n* Evaluate theme parameters regardless of whether there is a valid context or\n  not (e.g. when templating a 404 page).\n  [lentinj]\n\n1.0b7 - 2011-06-12\n------------------\n\n* Moved the *views* and *overrides* plugins out into a separate package\n  ``plone.app.themingplugins``. If you want to use those features, you need\n  to install that package in your buildout. Themes attempting to register\n  views or overrides in environments where ``plone.app.themingplugins`` is not\n  installed will install, but views and overrides will not take effect.\n  [optilude]\n\n1.0b6 - 2011-06-08\n------------------\n\n* Support for setting arbitrary Doctypes.\n  [elro]\n\n* Upgrade step to update plone.app.registry configuration.\n  [elro]\n\n* Fixed plugin initialization when applying a theme.\n  [maurits]\n\n* Query the resource directory using the 'currentTheme' name instead\n  of the Theme object (updating the control panel was broken).\n  [maurits]\n\n* Fix zip import (plugin initialization was broken.)\n  [elro]\n\n1.0b5 - 2011-05-29\n------------------\n\n* Make sure the control panel is never themed, by setting the X-Theme-Disabled\n  response header.\n  [optilude]\n\n* Add support for registering new views from Zope Page Templates and\n  overriding existing templates. See README for more details.\n  [optilude]\n\n1.0b4 - 2011-05-24\n------------------\n\n* Add support for ``X-Theme-Disabled`` response header.\n  [elro]\n\n* Make \"Replace existing theme\" checkbox default to off.\n  [elro]\n\n* Fix control panel to correctly display a newly uploaded theme.\n  [elro]\n\n* Fix zip import to work correctly when no manifest is supplied.\n  [elro]\n\n1.0b3 - 2011-05-23\n------------------\n\n* Show theme name along with title in control panel.\n  [elro]\n\n1.0b2 - 2011-05-16\n------------------\n\n* Encode internally resolved documents to support non-ascii characters\n  correctly.\n  [elro]\n\n* Fix control panel to use theme name not id.\n  [optilude]\n\n1.0b1 - 2011-04-22\n------------------\n\n* Wrap internal subrequests for css or js in style or script tags to\n  facilitate inline includes.\n  [elro]\n\n* Add ``theme.xml`` import step (see README).\n  [optilude]\n\n* Add support for ``[theme:parameters]`` section in ``manifest.cfg``, which\n  can be used to set parameters and the corresponding TALES expressions to\n  calculate them.\n  [optilude]\n\n* Add support for parameter expressions based on TALES expressions\n  [optilude]\n\n* Use plone.subrequest 1.6 features to work with IStreamIterator from\n  plone.resource.\n  [elro]\n\n* Depend on ``Products.CMFPlone`` instead of ``Plone``.\n  [elro]\n\n* Added support for uploading themes as Zip archives.\n  [optilude]\n\n* Added theme off switch: Add a query string parameter ``diazo.off=1`` to a\n  request whilst Zope is in development mode to turn off the theme.\n  [optilude]\n\n* Removed 'theme' and alternative themes support: Themes should be referenced\n  using the ``<theme />`` directive in the Diazo rules file.\n  [optilude]\n\n* Removed 'domains' support: This can be handled with the rules file syntax\n  by using the ``host`` parameter.\n  [optilude]\n\n* Removed 'notheme' support: This can be handled within the rules file syntax\n  by using the ``path`` parameter.\n  [optilude]\n\n* Added ``path`` and ``host`` as parameters to the Diazo rules file. These\n  can now be used as conditional expressions.\n  [optilude]\n\n* Removed dependency on XDV in favour of dependency on Diazo (which is the\n  new name for XDV).\n  [optilude]\n\n* Forked from collective.xdv 1.0rc11.\n  [optilude]\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/plone.app.theming", "keywords": "plone diazo xdv deliverance theme transform xslt", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "plone.app.theming", "package_url": "https://pypi.org/project/plone.app.theming/", "platform": "", "project_url": "https://pypi.org/project/plone.app.theming/", "project_urls": {"Homepage": "https://pypi.org/project/plone.app.theming"}, "release_url": "https://pypi.org/project/plone.app.theming/4.0.6/", "requires_dist": ["Products.CMFPlone", "diazo (>=1.0.3)", "docutils", "lxml (>=2.2.4)", "plone.app.registry (>=1.0a2)", "plone.resourceeditor (>=2.0.0.dev)", "plone.staticresources", "plone.subrequest", "plone.transformchain", "repoze.xmliter (>=0.3)", "roman", "setuptools", "six", "zope.traversing", "plone.app.testing ; extra == 'test'"], "requires_python": "", "summary": "Integrates the Diazo theming engine with Plone", "version": "4.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package offers a simple way to develop and deploy Plone themes using\nthe Diazo theming engine. If you are not familiar with Diazo, check out the\n<a href=\"http://diazo.org\" rel=\"nofollow\">Diazo documentation</a>.</p>\n<p>This version of <tt>plone.app.theming</tt> (1.2.X) ships with Plone version 5.0 or later. For Plone 4.3 please use plone.app.theming 1.1.X.</p>\n<p>It comes with a user guide, reproduced below, available through the theming\ncontrol panel.</p>\n<div id=\"plone-app-theming-manual\">\n<h2>plone.app.theming manual</h2>\n<p>This guide provides an overview of Diazo theming in Plone versions 4.3 and higher.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id45\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#what-is-a-diazo-theme\" id=\"id46\" rel=\"nofollow\">What is a Diazo theme?</a></li>\n<li><a href=\"#using-the-control-panel\" id=\"id47\" rel=\"nofollow\">Using the control panel</a><ul>\n<li><a href=\"#selecting-a-theme\" id=\"id48\" rel=\"nofollow\">Selecting a theme</a></li>\n<li><a href=\"#creating-a-new-theme\" id=\"id49\" rel=\"nofollow\">Creating a new theme</a></li>\n<li><a href=\"#uploading-an-existing-theme\" id=\"id50\" rel=\"nofollow\">Uploading an existing theme</a></li>\n<li><a href=\"#modifying-the-theme\" id=\"id51\" rel=\"nofollow\">Modifying the theme</a></li>\n<li><a href=\"#the-theme-inspector\" id=\"id52\" rel=\"nofollow\">The theme inspector</a></li>\n<li><a href=\"#the-rule-builder\" id=\"id53\" rel=\"nofollow\">The rule builder</a></li>\n<li><a href=\"#advanced-settings\" id=\"id54\" rel=\"nofollow\">Advanced settings</a></li>\n</ul>\n</li>\n<li><a href=\"#reference\" id=\"id55\" rel=\"nofollow\">Reference</a><ul>\n<li><a href=\"#deploying-and-testing-themes\" id=\"id56\" rel=\"nofollow\">Deploying and testing themes</a></li>\n<li><a href=\"#the-manifest-file\" id=\"id57\" rel=\"nofollow\">The manifest file</a></li>\n<li><a href=\"#rules-syntax\" id=\"id58\" rel=\"nofollow\">Rules syntax</a><ul>\n<li><a href=\"#selectors\" id=\"id59\" rel=\"nofollow\">Selectors</a></li>\n<li><a href=\"#conditions\" id=\"id60\" rel=\"nofollow\">Conditions</a></li>\n<li><a href=\"#available-rules\" id=\"id61\" rel=\"nofollow\">Available rules</a><ul>\n<li><a href=\"#rules\" id=\"id62\" rel=\"nofollow\"><tt>rules</tt></a></li>\n<li><a href=\"#theme-and-notheme\" id=\"id63\" rel=\"nofollow\"><tt>theme</tt> and <tt>notheme</tt></a></li>\n<li><a href=\"#replace\" id=\"id64\" rel=\"nofollow\"><tt>replace</tt></a></li>\n<li><a href=\"#before-and-after\" id=\"id65\" rel=\"nofollow\"><tt>before</tt> and <tt>after</tt></a></li>\n<li><a href=\"#drop-and-strip\" id=\"id66\" rel=\"nofollow\"><tt>drop</tt> and <tt>strip</tt></a></li>\n<li><a href=\"#merge-and-copy\" id=\"id67\" rel=\"nofollow\"><tt>merge</tt> and <tt>copy</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-modification\" id=\"id68\" rel=\"nofollow\">Advanced modification</a></li>\n</ul>\n</li>\n<li><a href=\"#theme-parameters\" id=\"id69\" rel=\"nofollow\">Theme parameters</a></li>\n<li><a href=\"#theme-debugging\" id=\"id70\" rel=\"nofollow\">Theme debugging</a></li>\n<li><a href=\"#commonly-used-rules\" id=\"id71\" rel=\"nofollow\">Commonly used rules</a></li>\n<li><a href=\"#advanced-using-portal-css-to-manage-your-css\" id=\"id72\" rel=\"nofollow\">Advanced: Using portal_css to manage your CSS</a></li>\n<li><a href=\"#advanced-disable-diazo-transformation-by-setting-the-x-theme-disabled-header\" id=\"id73\" rel=\"nofollow\">Advanced: Disable diazo transformation by setting the <tt><span class=\"pre\">X-Theme-Disabled</span></tt> header</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h3><a href=\"#id45\" rel=\"nofollow\">Introduction</a></h3>\n<p>In <a href=\"http://plone.org\" rel=\"nofollow\">Plone</a> versions 4.3 and higher you\ncan edit your website theme through web browser in Plone\u2019s site setup control panel.\nOnly HTML, CSS and little XML knowledge needed as the prerequisitements.\nThis guide explains how to use this feature of Plone.</p>\n<p>See <a href=\"https://vimeo.com/42564510\" rel=\"nofollow\">introduction video to plone.app.theming</a>.</p>\n</div>\n<div id=\"what-is-a-diazo-theme\">\n<h3><a href=\"#id46\" rel=\"nofollow\">What is a Diazo theme?</a></h3>\n<p>A \u201ctheme\u201d makes a website (in this case, one powered by Plone) take on a\nparticular look and feel.</p>\n<p><em>Diazo</em> (formerly known as XDV) is a technology that can be used to theme\nwebsites. It is not specific to Plone per se, but has been created by the Plone\ncommunity and, as of Plone 4.3, provides the default way to apply a theme to a\nPlone site. You can learn more about Diazo at <a href=\"http://diazo.org\" rel=\"nofollow\">http://diazo.org</a>.</p>\n<p>Diazo themes may be a little different to themes you have created in other\nsystems, and indeed to themes you may have created for earlier versions of\nPlone. A Diazo theme is really about transforming some content - in this case\nthe output from \u201cvanilla\u201d Plone - into a different set of HTML markup by\napplying a set of rules to combine a static HTML mock-up of the end result you\nwant with the dynamic content coming from Plone.</p>\n<p>In comparison, the previous way to theme a Plone site (like the way many other\ncontent management systems are themed) relies on selectively overriding the\ntemplates and scripts that Plone uses to build a page with custom versions\nthat produce different HTML markup. The latter approach can be more powerful,\ncertainly, but also requires much deeper knowledge of Plone\u2019s internals and\ncommand of server-side technologies such as Zope Page Templates and even Python.\nDiazo themes, by contrast, are easy to understand for web designers and non-\ndevelopers alike.</p>\n<p>A Diazo theme consists of three elements:</p>\n<ol>\n<li><p>One or more HTML mockups, also referred to as <em>theme</em> files, that represent\nthe desired look and feel.</p>\n<p>These will contain placeholders for content that is to be provided by the\nPlone content management system. Mockups usually reference CSS, JavaScript\nand image files by relative path. The most common way to create a theme is to\nuse desktop software like Dreamweaver or a text editor to create the relevant\nmarkup, styles and scripts, and test the theme locally in a web browser.</p>\n</li>\n<li><p>The <em>content</em> that is being themed. In this case, that is the output from\nPlone.</p>\n</li>\n<li><p>A <em>rules file</em>, which defines how the placeholders in the theme (i.e. the\nHTML mockup) should be replaced by relevant markup in the content.</p>\n<p>The rules file uses XML syntax (similar to HTML). Here is a very simple\nexample:</p>\n<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rules\n    xmlns=\"http://namespaces.plone.org/diazo\"\n    xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;`\n\n    &lt;theme href=\"theme.html\" /&gt;\n\n    &lt;replace css:content-children=\"#content\" css:theme-children=\"#main\" /&gt;\n\n&lt;/rules&gt;\n</pre>\n<p>Here, we are replacing the contents (child nodes) of a placeholder element\nwith HTML id <tt>main</tt> in the theme file (<tt>theme.html</tt>, found in the same\ndirectory as the <tt>rules.xml</tt> file, as referenced by the <tt>&lt;theme /&gt;</tt> rule)\nwith the contents (children) of the element with the HTML id <tt>content</tt> in\nthe markup generated by Plone.</p>\n<p>When this theme is applied, the result will look very much like the static\nHTML file <tt>theme.html</tt> (and its referenced CSS, JavaScript and image\nfiles), except the placeholder that is identified by the node in the theme\nwith id <tt>main</tt> will be filled by Plone\u2019s main content area.</p>\n</li>\n</ol>\n<p>Plone ships with an example theme called, appropriately, <em>Example theme</em>, which\nuses the venerable <a href=\"http://twitter.github.com/bootstrap/\" rel=\"nofollow\">Twitter Bootstrap</a>\nto build a simple yet functional theme exposing most of Plone\u2019s core\nfunctionality. You are advised to study it - in particular the <tt>rules.xml</tt>\nfile - to learn more about how Diazo themes work.</p>\n</div>\n<div id=\"using-the-control-panel\">\n<h3><a href=\"#id47\" rel=\"nofollow\">Using the control panel</a></h3>\n<p>After installation of the <em>Diazo theme support</em> package in a Plone site, the\n<em>Theming</em> control panel will appear in Plone\u2019s <em>Site setup</em>.</p>\n<p>The main tab of this control panel, <em>Themes</em>, will show all available themes,\nwith buttons to activate/deactivate, modify, copy or delete each, as well as\nbuttons to create new themes or bring up this help text.</p>\n<p>Click on a theme preview image to open a preview of that theme in a new tab\nor window. The preview is navigable, but form submissions and some advanced\nfeatures will not work.</p>\n<div id=\"selecting-a-theme\">\n<h4><a href=\"#id48\" rel=\"nofollow\">Selecting a theme</a></h4>\n<p>To apply an existing theme, simply click the <em>Activate</em> button underneath the\ntheme preview. The currently active theme will be highlighted in yellow. If\nyou deactivate the currently active theme, no Diazo theme will be applied, i.e.\n\u201cvanilla\u201d Plone theming will apply.</p>\n<p><em>Note</em>: The <em>Theming</em> control panel is never theemd, ensuring that you can\nalways deactivate an errant theme that could render the control panel unusable.\nThus, you may not see any difference immediately after enabling a theme. Simply\nnavigate to another page in the Plone site, though, and you should see the\ntheme applied.</p>\n</div>\n<div id=\"creating-a-new-theme\">\n<h4><a href=\"#id49\" rel=\"nofollow\">Creating a new theme</a></h4>\n<p>New themes can be created in one of two ways:</p>\n<ul>\n<li>Click the <em>New theme</em> button at the top of the <em>Themes</em> tab in the <em>Theming</em>\ncontrol panel and enter a title and description in the form that appears.\nA bare-bones theme will be created, and you will be taken to the <em>Modify\ntheme</em> screen (see below), where you can edit or create theme and rules files.</li>\n<li>Click the <em>Copy</em> button underneath any existing theme and enter a title and\ndescription in the form that appears. A new theme will be created as a copy\nof the existing theme, and you will be taken to the <em>Modify theme</em> (see\nbelow), where you can edit or create theme and rules files.</li>\n</ul>\n</div>\n<div id=\"uploading-an-existing-theme\">\n<h4><a href=\"#id50\" rel=\"nofollow\">Uploading an existing theme</a></h4>\n<p>Themes can be distributed as Zip files, containing the HTML mockup and rules\nfile. To download an existing theme, click the <em>Download</em> button underneath the\ntheme on the <em>Themes</em> tab of the <em>Theming</em> control panel.</p>\n<p>To upload such a Zip file into another site, use the <em>Upload Zip file</em> button\non the <em>Themes</em> tab of the <em>Theming</em> control panel. You can choose whether or\nnot to replace any existing theme with the same name (based on the name of the\ntop-level directory contained within the Zip file).</p>\n<p>You can also upload a Zip file of a static HTML mockup that does not contain a\nrules file, such as a design provided by a Plone-agnostic web designer.</p>\n<p>In this case, a basic <tt>rules.xml</tt> file will be added for you to start building\nup a theme from using the <em>Modify theme</em> screen (see below). The\ngenerated rules file will assume the main HTML mockup file is called\n<tt>index.html</tt>, but you can change this in <tt>rules.xml</tt>.</p>\n<p>Once you have successfully uploaded a theme Zip file, you will be taken to the\n<em>Modify theme</em> screen (see below), where you can edit or create theme files.</p>\n<p><em>Hint:</em> If you get an error message like \u201cThe uploaded file does not contain\na valid theme archive\u201d, this usually means that you have uploaded a Zip file\nthat contains multiple files and folders, rather than a single top level\nfolder with all the theme resources in it. This could happen if you compressed\na theme or HTML mockup by adding its files and folders directly a Zip archive,\nrather than compressing the directory in which they were found. To fix this,\nsimply unzip the archive on your computer into a new directory, move up a level,\nand compress this directory on its own into a new Zip file, which you can then\nupload.</p>\n</div>\n<div id=\"modifying-the-theme\">\n<h4><a href=\"#id51\" rel=\"nofollow\">Modifying the theme</a></h4>\n<p>You can modify a theme by clicking <em>Modify theme</em> underneath a theme in the\n<em>Themes</em> tab of the <em>Theming</em> control panel. This screen is also launched\nautomatically when you create or upload a new theme.</p>\n<p><em>Note:</em> Only themes created or uploaded through the <em>Theming</em> control panel can\nbe modified through Plone. Themes installed by third-party add-ons or\ndistributed on the filesystem cannot, although changes made on the filesystem\nwill be reflected immediately if Zope is running in debug mode. To modify a\nfilesystem theme, you can copy it to a new in-Plone theme by clicking the <em>Copy</em>\nbutton underneath the theme in the <em>Theming</em> control panel.</p>\n<p>The <em>Modify theme</em> screen initially shows a file manager, with a file tree on\nthe left and an editor on the right. Click on a file in the file tree to open an\neditor or preview: HTML, CSS, JavaScript and other text files can be edited\ndirectly through the editor. Other files (e.g. images) will be rendered as a\npreview.</p>\n<p><em>Note:</em> The advanced editor with syntax highlighting is not available in\nMicrosoft Internet Explorer.</p>\n<p>Click <em>New folder</em> to create a new folder. You can also right-click on a folder\nin the file tree to bring up this action.</p>\n<p>Click <em>New file</em> to create a new text file. You can also right-click on a folder\nin the file tree to bring up this action.</p>\n<p>Click <em>Upload file</em> to upload a file from your computer. You can also right-\nclick on a folder in the file tree to bring up this action.</p>\n<p>Click <em>Preview theme</em> to preview the theme as it will be applied with the mockup\nand rules as currently saved. The preview is navigable, but forms and certain\nadvanced features will not work.</p>\n<p>To save the file currently being edited, click the <em>Save file</em> button, or use\nthe keyboard shortcut <tt>Ctrl+S</tt> (Windows/Linux) or <tt>Cmd+S</tt> (Mac).</p>\n<p>To rename or delete a file or folder, right-click on it in the file tree and\nselect the appropriate action.</p>\n</div>\n<div id=\"the-theme-inspector\">\n<h4><a href=\"#id52\" rel=\"nofollow\">The theme inspector</a></h4>\n<p>The theme inspector provides an advanced interface for discovering and building\nup the rules of a Diazo theme. It can be launched by clicking the <em>Show\ninspectors</em> button on the <em>Modify theme</em> screen for in-Plone themes, or by\nclicking the <em>Inspect theme</em> button underneath a filesystem theme on the\n<em>Themes</em> tab of the <em>Theming</em> control panel.</p>\n<p>The theme inspector consists of two panels:</p>\n<ul>\n<li>The <em>HTML mockup</em>. If there are several HTML files in the theme, you can switch\nbetween them using the drop-down list underneath the <em>HTML mockup</em> panel.</li>\n<li>The <em>Unthemed content</em>. This shows Plone without any theme applied.</li>\n</ul>\n<p>Either panel can be maximised by clicking the arrows icon at the top right of\neither.</p>\n<p>The <em>HTML mockups</em> and <em>Unthemed content</em> panels can be switch to source view,\nshowing their underlying HTML markup, by clicking the tags icon at the top right\nof either.</p>\n<p>As you hover over elements in the <em>HTML mockup</em> or <em>Unthemed content</em> panels,\nyou will see:</p>\n<ul>\n<li>An outline showing the element under the cursor.</li>\n<li>A CSS or XPath selector in the status bar at the bottom if the panel which\nwould uniquely identify this element in a Diazo rule.</li>\n</ul>\n<p>Click on an element or press <tt>Enter</tt> whilst hovering oveer an element to\nselect it. The most recently selected element in each panel is shown in the\nbottom right of the relevant status bar.</p>\n<p>Press <tt>Esc</tt> whilst hovering over an element to select its parent. This is\nuseful when trying to select \u201cinvisible\u201d container elements. Press <tt>Enter</tt>\nto save this selection.</p>\n<p>The contents of the <em>HTML mockup</em> or (more commonly) <em>Unthemed content</em> panels\ncan be navigated, for example to get to a content page that requires specific\ntheme rules, by disabling the inspector. Use the toggle switches at the bottom\nright of the relevant panel to enable or disable the selector.</p>\n</div>\n<div id=\"the-rule-builder\">\n<h4><a href=\"#id53\" rel=\"nofollow\">The rule builder</a></h4>\n<p>Click the <em>Build rule</em> button near the top of the <em>Modify theme</em> or <em>Inspect\ntheme</em> screen to launch an interactive rule building wizard. You will be asked\nwhich type of rule to build, and then prompted to select the relevant elements\nin the <em>HTML mockup</em> and/or <em>Unthemed content</em> panels as required. By default,\nthis will use any saved selections, unless you untick the <em>Use selected\nelements</em> box on the first page if the wizard.</p>\n<p>Once the wizard completes, you will be shown the generated rule. You can edit\nthis if you wish. If you click <em>Insert</em>, the newly generated rule will be\ninserted into the <tt>rules.xml</tt> editor at or near your current cursor position.\nYou can move it around or edit it further as you wish.</p>\n<p>Click <em>Preview theme</em> to preview the theme in a new tab or window. Don\u2019t forget\nto save the <tt>rules.xml</tt> file if you have made changes.</p>\n<p><em>Note</em>: In readonly mode, you can build rules and inspect the HTML mockup and\ntheme, but not change the <tt>rules.xml</tt> file. In this case, the <em>Insert</em> button\nof the rule builder (see below) will not be available either.</p>\n<p><em>Note:</em> The ability to insert rules from the <em>Build rule</em> wizard are not\navailable in Microsoft Internet Explorer, although you will be given the option\nto copy the rule to the clipboard when using this browser.</p>\n</div>\n<div id=\"advanced-settings\">\n<h4><a href=\"#id54\" rel=\"nofollow\">Advanced settings</a></h4>\n<p>The <em>Theming</em> control panel also contains a tab named <em>Advanced settings</em>. Here\nbe dragons.</p>\n<p>The <em>Advanced setings</em> tab is divided into two areas. The first, <em>Theme\ndetails</em>, contains the underlying settings that are modified when a theme is\napplied from the <em>Themes</em> control panel. These are:</p>\n<ul>\n<li>Whether or not Diazo themes are enabled at all.</li>\n<li>The path to the rules file, conventionally called <tt>rules.xml</tt>, either\nrelative to the Plone site root or as an absolute path to an external\nserver.</li>\n<li>The prefix to apply when turning relative paths in themes (e.g. references to\nimages in an <tt>&lt;img /&gt;</tt> tag\u2019s <tt>src</tt> attribute) into absolute ones at\nrendering time.</li>\n<li>The HTML <tt>DOCTYPE</tt> to apply to the rendered output, if different to the default\n<tt>XHTML 1.0 Transitional</tt>.</li>\n<li>Whether or not to allow theme resources (likes <tt>rules.xml</tt>) to be read from\nthe network. Disabling this gives a modest performance boost.</li>\n<li>A list of host names for which a theme is never applied. Most commonly, this\ncontains <tt>127.0.0.1</tt>, allowing you to view an unthemed site through\n<tt><span class=\"pre\">http://127.0.0.1:8080</span></tt> and a themed one at <tt><span class=\"pre\">http://localhost:8080</span></tt> during\ndevelopment, say.</li>\n<li>A list of theme parameters and the TALES expressions to generate them\n(see below).</li>\n</ul>\n<p>The second, <em>Theme base</em>, controls the presentation of the unthemed content, and\napply even if no Diazo theme is being applied. These are the settings that used\nto be found in the <em>Themes</em> control panel in previous versions of Plone.</p>\n</div>\n</div>\n<div id=\"reference\">\n<h3><a href=\"#id55\" rel=\"nofollow\">Reference</a></h3>\n<p>The remainder of this guide contains reference materials useful for theme\nbuilders.</p>\n<div id=\"deploying-and-testing-themes\">\n<h4><a href=\"#id56\" rel=\"nofollow\">Deploying and testing themes</a></h4>\n<p>To build and test a theme, you must first create a static HTML mockup of the\nlook and feel you want, and then build a rules file to describe how Plone\u2019s\ncontent maps to the placeholders in this mockup.</p>\n<p>The mockup can be created anywhere using whatever tool you feel most comfortable\nbuilding web pages in. To simplify integration with Plone, you are recommended\nto make sure it uses relative links for resources like CSS, JavaScript and image\nfiles, so that it will render properly when opened in a web browser from a local\nfile. Plone will convert these relative links to the appropriate absolute paths\nautomatically, ensuring the theme works no matter which URL the user is viewing\nwhen the theme is applied to a Plone site.</p>\n<p>There are several ways to get the theme into Plone:</p>\n<ol>\n<li><p>On the filesystem</p>\n<p>If you used an installer or a standard \u201cbuildout\u201d to set up your\nPlone site, you should have a directory called <tt>resources</tt> in the\nroot of your Plone installation (this is created using the\n<tt>resources</tt> option to the buildout recipe\n<tt>plone.recipe.zope2instance</tt>. See\n<a href=\"http://pypi.python.org/pypi/plone.recipe.zope2instance\" rel=\"nofollow\">http://pypi.python.org/pypi/plone.recipe.zope2instance</a> for more\ndetails.)</p>\n<p>You can find (or create) a <tt>theme</tt> directory inside this\ndirectory, which is used to contain themes. Each theme needs its\nown directory with a unique name.  Create one\n(e.g. <tt>resources/theme/mytheme</tt>) and put your HTML files and any\nreferences resources inside this directory. You can use\nsubdirectories if you wish, but you are recommended to keep the\nbasic theme HTML files at the top of the theme directory.</p>\n<p>You will also need a rules file called <tt>rules.xml</tt> inside this\ndirectory. If you haven\u2019t got one yet, start with an empty one:</p>\n<pre>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rules\n    xmlns=\"http://namespaces.plone.org/diazo\"\n    xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;`\n\n    &lt;theme href=\"theme.html\" /&gt;\n    &lt;replace css:content-children=\"#content\" css:theme-children=\"#main\" /&gt;\n\n&lt;/rules&gt;\n</pre>\n<p>Provided you are running Zope in debug mode (e.g. you start it up\nwith <tt>bin/instance fg</tt>), changes to the theme and rules should\ntake effect immediately. You can preview or enable the theme\nthrough the <em>Themes</em> control panel, and then iteratively modify the\n<tt>rules.xml</tt> file or the theme mockup as you wish.</p>\n</li>\n<li><p>Through the web</p>\n<p>If you prefer (or do not have filesystem access), you can create\nthemes entirely through the Plone control panel, either by\nduplicating an existing theme, or starting from scratch with a\nnear-empty theme.</p>\n<p>See the instructions on using the control panel above for more\ndetails.</p>\n<p>Once a theme has been created, you can modify it through the\n<em>Theming</em> control panel. See above for more details.</p>\n</li>\n<li><p>As a zip file</p>\n<p>Themes can be downloaded from Plone as Zip files, which can then be\nuploaded into other sites.</p>\n<p>See the instructions on using the control panel above for more\ndetails.</p>\n<p>In fact, you can create valid theme zip archives by compressing a\ntheme directory on the filesystem using a standard compression tool\nsuch as <em>7-Zip</em> or <em>Winzip</em> (for Windows) or the built-in\n<em>Compress</em> action in the Mac OS X Finder.  Just make sure you\ncompress exactly one folder that contains all the theme files and\nthe <tt>rules.xml</tt> file. (Do not compress the contents of the folder\ndirectly: when unpacked, the zip file should produce exactly one\nfolder which in turn contains all the relevant files).</p>\n</li>\n<li><p>In a Python package (programmers only)</p>\n<p>If you are creating a Python package containing Plone\ncustomisations that you intend to install into your site, you can\nlet it register a theme for installation into the site.</p>\n<p>To do this, place a directory called e.g. <tt>theme</tt> at the top of\nthe package, next to the Zope <tt>configure.zcml</tt> file, and add a\n<tt>&lt;plone:static /&gt;</tt> declaration to the <tt>configure.zcml</tt> file:</p>\n<pre>&lt;configure\n    xmlns:plone=\"http://namespaces.plone.org/plone\"\n    xmlns=\"http://namespaces.zope.org/zope\"&gt;\n\n    ...\n\n    &lt;plone:static name=\"mytheme\" directory=\"theme\" type=\"theme\" /&gt;\n\n    ...\n\n&lt;/configure&gt;\n</pre>\n<p>Notice the declaration of the <tt>plone</tt> namespace at the root\n<tt>&lt;configure /&gt;</tt> element. Place the theme files and the\n<tt>rules.xml</tt> file into the <tt>theme</tt> directory.</p>\n<p>If your package has a GenericSetup profile, you can automatically\nenable the theme upon installation of this profile by adding a\n<tt>theme.xml</tt> file in the <tt>profiles/default</tt> directory,\ncontaining e.g.:</p>\n<pre>&lt;theme&gt;\n    &lt;name&gt;mytheme&lt;/name&gt;\n    &lt;enabled&gt;true&lt;/enabled&gt;\n&lt;/theme&gt;\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"the-manifest-file\">\n<h4><a href=\"#id57\" rel=\"nofollow\">The manifest file</a></h4>\n<p>It is possible to give additional information about a theme by placing a file\ncalled <tt>manifest.cfg</tt> next to the <tt>rules.xml</tt> file at the top of a theme\ndirectory.</p>\n<p>This file may look like this:</p>\n<pre>[theme]\ntitle = My theme\ndescription = A test theme\nrules = http://example.org/myrules.xml\nprefix = /some/prefix\ndoctype = &lt;!DOCTYPE html&gt;\npreview = preview.png\nenabled-bundles = mybundle\ndisabled-bundles = plone\ndevelopment-css = /++theme++barceloneta/less/barceloneta.plone.less\nproduction-css = /++theme++barceloneta/less/barceloneta-compiled.css\ndevelopment-js = /++theme++barceloneta/barceloneta.js\nproduction-js = /++theme++barceloneta/barceloneta.min.js\ntinymce-content-css = /++theme++barceloneta/tinymce-styles.css\n</pre>\n<p>As shown here, the manifest file can be used to provide a more user friendly\ntitle and a longer description for the theme, for use in the control panel.\nOnly the <tt>[theme]</tt> header is required - all other keys are optional.</p>\n<p>Manifest settings:</p>\n<dl>\n<dt>rules</dt>\n<dd>to use a different rule file name than <tt>rules.xml</tt> (you should provide a URL\nor relative path).</dd>\n<dt>prefix</dt>\n<dd><p>To change the absolute path prefix (see <em>Advanced settings</em>),\nuse:</p>\n<pre>prefix = /some/prefix\n</pre>\n</dd>\n<dt>doctype</dt>\n<dd><p>To employ a <tt>DOCTYPE</tt> in the themed content other than <tt>XHTML 1.0\nTransitional</tt>, add e.g.:</p>\n<pre>doctype = &lt;!DOCTYPE html&gt;\n</pre>\n</dd>\n<dt>preview</dt>\n<dd><p>To provide a user-friendly preview of your theme in the <em>Theming</em> control panel.\nHere, <tt>preview.png</tt> is an image file relative to the location of the\n<tt>manifest.cfg</tt> file:</p>\n<pre>preview = preview.png\n</pre>\n</dd>\n<dt>enabled-bundles</dt>\n<dd>Bundles that will automatically be enabled when a theme is activated</dd>\n<dt>disabled-bundles</dt>\n<dd>Bundles that will automatically be disabled when a theme is activated</dd>\n<dt>development-css</dt>\n<dd>CSS to automatically include when in development mode and theme is active</dd>\n<dt>development-js</dt>\n<dd>JavaScript file to automatically include when in development mode when\ntheme is active</dd>\n<dt>production-css</dt>\n<dd>CSS to automatically include when theme is active and in production mode</dd>\n<dt>production-js</dt>\n<dd>JavaScript to automatically include when theme is active and in production mode</dd>\n<dt>tinymce-content-css</dt>\n<dd>CSS file tinymce should load to apply styles to content inside the editor</dd>\n<dt>tinymce-styles-css</dt>\n<dd>CSS file tinymce should load to provide additionally automatically detected\ndrop-down styles in the editor</dd>\n</dl>\n<p>Extensions to the Diazo theming engine can add support for additional blocks of\nconfigurable parameters.</p>\n</div>\n<div id=\"rules-syntax\">\n<h4><a href=\"#id58\" rel=\"nofollow\">Rules syntax</a></h4>\n<p>The following is a short summary of the Diazo rules syntax. See\n<a href=\"http://diazo.org\" rel=\"nofollow\">http://diazo.org</a> for more details and further examples.</p>\n<div id=\"selectors\">\n<h5><a href=\"#id59\" rel=\"nofollow\">Selectors</a></h5>\n<p>Each rule is represented by an XML tag that operates on one or more HTML\nelements in the content and/or theme. The elements to operate on are indicated\nusing attributes of the rules known as <em>selectors</em>.</p>\n<p>The easiest way to select elements is to use a CSS expression selector, such as\n<tt><span class=\"pre\">css:content=\"#content\"</span></tt> or <tt><span class=\"pre\">css:theme=\"#main</span> .content\"</tt>. Any valid CSS 3\nexpression (including pseudo-selectors like <tt><span class=\"pre\">:first-child</span></tt> may be used.</p>\n<p>The standard selectors, <tt>css:theme</tt> and <tt>css:content</tt>, operate on the\nelement(s) that are matched. If you want to operate on the children of the\nmatched element instead, use <tt><span class=\"pre\">css:theme-children=\"...\"</span></tt> or\n<tt><span class=\"pre\">css:content-children=\"...\"</span></tt> instead.</p>\n<p>If you cannot construct a suitable CSS 3 expression, you can use XPath\nexpressions such as <tt><span class=\"pre\">content=\"/head/link\"</span></tt> or <tt><span class=\"pre\">theme=\"//div[@id='main']\"</span></tt>\n(note the lack of a <tt>css:</tt> prefix when using XPath expressions). The two\napproaches are equivalent, and you can mix and match freely, but you cannot\nhave e.g. both a <tt>css:theme</tt> and a <tt>theme</tt> attribute on a single rule. To\noperate on children of a node selected with an XPath expression, use\n<tt><span class=\"pre\">theme-children=\"...\"</span></tt> or <tt><span class=\"pre\">content-children=\"...\"</span></tt>.</p>\n<p>You can learn more about XPath at <a href=\"http://www.w3schools.com/xpath/default.asp\" rel=\"nofollow\">http://www.w3schools.com/xpath/default.asp</a>.</p>\n</div>\n<div id=\"conditions\">\n<h5><a href=\"#id60\" rel=\"nofollow\">Conditions</a></h5>\n<p>By default, every rule is executed, though rules that do not match any elements\nwill of course do nothing. You can make a rule, set of rules or theme reference\n(see below) conditional upon an element appearing in the content by adding an\nattribute to the rule like <tt><span class=\"pre\">css:if-content=\"#some-element\"</span></tt> (to use an XPath\nexpression instead, drop the <tt>css:</tt> prefix). If no elements match the\nexpression, the rule is ignored.</p>\n<p><strong>Tip:</strong> if a <tt>&lt;replace /&gt;</tt> rule matches an element in the theme but not in\nthe content, the theme node will be dropped (replaced with nothing). If you do\nnot want this behavior and you are unsure if the content will contain the\nrelevant element(s), you can use <tt><span class=\"pre\">css:if-content</span></tt> conditional rule. Since\nthis is a common scenario, there is a shortcut: <tt><span class=\"pre\">css:if-content=\"\"</span></tt> means\n\u201cuse the expression from the <tt>css:content</tt> attribute\u201d.</p>\n<p>Similarly, you can construct a condition based on the path of the current\nrequest by using an attribute like <tt><span class=\"pre\">if-path=\"/news\"</span></tt> (note that there is no\n<tt><span class=\"pre\">css:if-path</span></tt> ). If the path starts with a slash, it will match from the root\nof the Plone site. If it ends with a slash, it will match to the end of the URL.\nYou can set an absolute path by using a leading and a trailing slash.</p>\n<p>Finally, you can use arbitrary XPath expressions against any defined variable\nusing an attribute like <tt><span class=\"pre\">if=\"$host</span> = 'localhost'\"</tt> . By default, the variables\n<tt>url</tt> , <tt>scheme</tt> , <tt>host</tt> and <tt>base</tt> are available, representing the\ncurrent URL. Themes may define additional variables in their manifests.</p>\n</div>\n<div id=\"available-rules\">\n<h5><a href=\"#id61\" rel=\"nofollow\">Available rules</a></h5>\n<p>The various rule types are summarized below.</p>\n<div id=\"rules\">\n<h6><a href=\"#id62\" rel=\"nofollow\"><tt>rules</tt></a></h6>\n<pre>&lt;rules&gt;\n    ...\n&lt;/rules&gt;\n</pre>\n<p>Wraps a set of rules. Must be used as the root element of the rules file. Nested\n<tt>&lt;rules /&gt;</tt> can be used with a <em>condition</em> to apply a single condition to a\nset of rules.</p>\n<p>When used as the root element of the rules file, the various XML namespaces must\nbe declared:</p>\n<pre>&lt;rules\n    xmlns=\"http://namespaces.plone.org/diazo\"\n    xmlns:css=\"http://namespaces.plone.org/diazo/css\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n    ...\n&lt;/rules&gt;\n</pre>\n</div>\n<div id=\"theme-and-notheme\">\n<h6><a href=\"#id63\" rel=\"nofollow\"><tt>theme</tt> and <tt>notheme</tt></a></h6>\n<pre>&lt;theme href=\"theme.html\" /&gt;\n&lt;theme href=\"news.html\" if-path=\"/news\" /&gt;\n&lt;notheme if=\"$host = 'admin.example.org'\" /&gt;\n</pre>\n<p>Choose the theme file to be used. The <tt>href</tt> is a path relative to the rules\nfile. If multiple <tt>&lt;theme /&gt;</tt> elements are present, at most one may be given\nwithout a condition. The first theme with a condition that is true will be used,\nwith the unconditional theme, if any, used as a fallback.</p>\n<p><tt>&lt;notheme /&gt;</tt> can be used to specify a condition under which no theme\nshould be used. <tt>&lt;notheme /&gt;</tt> takes precedence over <tt>&lt;theme /&gt;</tt>.</p>\n<p><strong>Tip:</strong>  To ensure you do not accidentally style non-Plone pages, add a\ncondition like <tt><span class=\"pre\">css:if-content=\"#visual-portal-wrapper\"</span></tt> to the last theme\nlisted, and do not have any unconditional themes.</p>\n</div>\n<div id=\"replace\">\n<h6><a href=\"#id64\" rel=\"nofollow\"><tt>replace</tt></a></h6>\n<pre>&lt;replace\n    css:content=\"#content\"\n    css:theme=\"#main\"\n    /&gt;\n</pre>\n<p>Replaces the matched element(s) in the theme with the matched element(s) from\nthe content.</p>\n</div>\n<div id=\"before-and-after\">\n<h6><a href=\"#id65\" rel=\"nofollow\"><tt>before</tt> and <tt>after</tt></a></h6>\n<pre>&lt;before\n    css:content-children=\"#portal-column-one\"\n    css:theme-children=\"#portlets\"\n    /&gt;\n\n&lt;after\n    css:content-children=\"#portal-column-two\"\n    css:theme-children=\"#portlets\"\n    /&gt;\n</pre>\n<p>Inserts the matched element(s) from the content before or after the matched\nelement(s) in the theme. By using <tt><span class=\"pre\">theme-children</span></tt> , you can insert the\nmatched content element(s) as the first (prepend) or last (append) element(s)\ninside the matched theme element(s).</p>\n</div>\n<div id=\"drop-and-strip\">\n<h6><a href=\"#id66\" rel=\"nofollow\"><tt>drop</tt> and <tt>strip</tt></a></h6>\n<pre>&lt;drop css:content=\".documentByLine\" /&gt;\n&lt;drop theme=\"/head/link\" /&gt;\n&lt;drop css:theme=\"#content *\" attributes=\"onclick onmouseup\" /&gt;\n\n&lt;strip css:content=\"#parent-fieldname-text\" /&gt;\n</pre>\n<p>Remove element(s) from the theme or content. Note that unlike most other rules,\na <tt>&lt;drop /&gt;</tt> or <tt>&lt;strip /&gt;</tt> rule can operate on the <tt>theme</tt> or\n<tt>content</tt> , but not both. <tt>&lt;drop /&gt;</tt> removes the matched element(s) and\nany children, whereas <tt>&lt;strip /&gt;</tt> removes the matched element(s), but leaves\nany children in place.</p>\n<p><tt>&lt;drop /&gt;</tt> may be given a whitespace-separated list of <tt>attributes</tt> to\ndrop. In this case, the matched element(s) themselves will not be removed. Use\n<tt><span class=\"pre\">attributes=\"*\"</span></tt> to drop all attributes.</p>\n</div>\n<div id=\"merge-and-copy\">\n<h6><a href=\"#id67\" rel=\"nofollow\"><tt>merge</tt> and <tt>copy</tt></a></h6>\n<pre>&lt;merge\n    attributes=\"class\"\n    css:content=\"body\"\n    css:theme=\"body\"\n    /&gt;\n\n&lt;copy\n    attributes=\"class\"\n    css:content=\"#content\"\n    css:theme=\"#main\"\n    /&gt;\n</pre>\n<p>These rules operate on attributes. <tt>&lt;merge /&gt;</tt> will add the contents of the\nnamed attribute(s) in the theme to the value(s) of any existing attributes with\nthe same name(s) in the content, separated by whitespace. It is mainly used to\nmerge CSS classes.</p>\n<p><tt>&lt;copy /&gt;</tt> will copy attributes from the matched element(s) in the content\nto the matched element(s) in the theme, fully replacing any attributes with\nthe same name that may already be in the theme.</p>\n<p>The <tt>attributes</tt> attribute can contain a whitespace-separated list of\nattributes, or the special value <tt>*</tt> to operate on all attributes of the\nmatched element.</p>\n</div>\n</div>\n<div id=\"advanced-modification\">\n<h5><a href=\"#id68\" rel=\"nofollow\">Advanced modification</a></h5>\n<p>Instead of selecting markup to insert into the theme from the content, you can\nplace markup directly into the rules file, as child nodes of the relevant rule\nelement:</p>\n<pre>&lt;after css:theme=\"head\"&gt;\n    &lt;style type=\"text/css\"&gt;\n        body &gt; h1 { color: red; }\n    &lt;/style&gt;\n&lt;/after&gt;\n</pre>\n<p>This also works on the content, allowing you to modify it on the fly before any\nrules are applied:</p>\n<pre>&lt;replace css:content=\"#portal-searchbox input.searchButton\"&gt;\n    &lt;button type=\"submit\"&gt;\n        &lt;img src=\"images/search.png\" alt=\"Search\" /&gt;\n    &lt;/button&gt;\n&lt;/replace&gt;\n</pre>\n<p>In addition to including static HTML in this manner, you can use XSLT\ninstructions that operate on the content. You can even use <tt>css:</tt> selectors\ndirectly in the XSLT.:</p>\n<pre>&lt;replace css:theme=\"#details\"&gt;\n    &lt;dl id=\"details\"&gt;\n        &lt;xsl:for-each css:select=\"table#details &gt; tr\"&gt;\n            &lt;dt&gt;&lt;xsl:copy-of select=\"td[1]/text()\"/&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;xsl:copy-of select=\"td[2]/node()\"/&gt;&lt;/dd&gt;\n        &lt;/xsl:for-each&gt;\n    &lt;/dl&gt;\n&lt;/replace&gt;\n</pre>\n<p>Rules may operate on content that is fetched from somewhere other than the\ncurrent page being rendered by Plone, by using the <tt>href</tt> attribute to specify\na path of a resource relative to the root of the Plone site:</p>\n<pre>&lt;!-- Pull in extra navigation from a browser view on the Plone site root --&gt;\n&lt;after\n    css:theme-children=\"#leftnav\"\n    css:content=\".navitem\"\n    href=\"/@@extra-nav\"\n    /&gt;\n</pre>\n</div>\n</div>\n<div id=\"theme-parameters\">\n<h4><a href=\"#id69\" rel=\"nofollow\">Theme parameters</a></h4>\n<p>It is possible to pass arbitrary parameters to your theme, which can be\nreferenced as variables in XPath expressions. Parameters can be set in Plone\u2019s\ntheming control panel, and may be imported from a <tt>manifest.cfg</tt> file.</p>\n<p>For example, you could have a parameter <tt>mode</tt> that could be set to the\nstring <tt>live</tt> or <tt>test</tt>. In your rules, you could do something like this\nto insert a warning when you are on the test server:</p>\n<pre>&lt;before css:theme-children=\"body\" if=\"$mode = 'test'\"&gt;\n    &lt;span class=\"warning\"&gt;Warning: This is the test server&lt;/span&gt;\n&lt;/before&gt;\n</pre>\n<p>You could even use the parameter value directly, e.g.:</p>\n<pre>&lt;before css:theme-children=\"body\"&gt;\n    &lt;span class=\"info\"&gt;This is the &lt;xsl:value-of select=\"$mode\" /&gt; server&lt;/span&gt;\n&lt;/before&gt;\n</pre>\n<p>The following parameters are always available to Plone themes:</p>\n<dl>\n<dt><tt>scheme</tt></dt>\n<dd>The scheme portion of the inbound URL, usually <tt>http</tt> or <tt>https</tt>.</dd>\n<dt><tt>host</tt></dt>\n<dd>The hostname in the inbound URL.</dd>\n<dt><tt>path</tt></dt>\n<dd>The path segment of the inbound URL. This will not include any virtual\nhosting tokens, i.e. it is the path the end user sees.</dd>\n<dt><tt>base</tt></dt>\n<dd>The Zope base url (the <tt>BASE1</tt> request variable).</dd>\n</dl>\n<p>You can add additional parameters through the control panel, using TALES\nexpressions. Parameters are listed on the <em>Advanced</em> tab, one per line, in\nthe form <tt>&lt;name&gt; = &lt;expression&gt;</tt>.</p>\n<p>For example, if you want to avoid theming any pages that are loaded by Plone\u2019s\noverlays, you can make use of the <tt>ajax_load</tt> request parameter that they\nset. Your rules file might include:</p>\n<pre>&lt;notheme if=\"$ajax_load\" /&gt;\n</pre>\n<p>To add this parameter as well as the <tt>mode</tt> parameter outlined earlier, you\ncould add the following in the control panel:</p>\n<pre>ajax_load = python: request.form.get('ajax_load')\nmode = string: test\n</pre>\n<p>The right hand side is a TALES expression. It <em>must</em> evaluate to a string,\ninteger, float, boolean or <tt>None</tt>: lists, dicts and objects are not\nsupported. <tt>python:</tt>, <tt>string:</tt> and path expressions work as they do\nin Zope Page Templates.</p>\n<p>The following variables are available when constructing these TALES expressions:</p>\n<dl>\n<dt><tt>context</tt></dt>\n<dd>The context of the current request, usually a content object.</dd>\n<dt><tt>request</tt></dt>\n<dd>The current request.</dd>\n<dt><tt>portal</tt></dt>\n<dd>The portal root object.</dd>\n<dt><tt>context_state</tt></dt>\n<dd>The <tt>@@plone_context_state</tt> view, from which you can look up additional\nvalues such as the context\u2019s URL or default view.</dd>\n<dt><tt>portal_state</tt></dt>\n<dd>The <tt>@@plone_portal_state</tt> view, form which you can look up additional\nvalues such as the navigation root URL or whether or not the current\nuser is logged in.</dd>\n</dl>\n<p>See <tt>plone.app.layout</tt> for details about the <tt>@@plone_context_state</tt> and\n<tt>@@plone_portal_state</tt> views.</p>\n<p>Theme parameters are usually integral to a theme, and will therefore be set\nbased on a theme\u2019s manifest when a theme is imported or enabled. This is done\nusing the <tt>[theme:parameters]</tt> section in the <tt>manifest.cfg</tt> file. For\nexample:</p>\n<pre>[theme]\ntitle = My theme\ndescription = A test theme\n\n[theme:parameters]\najax_load = python: request.form.get('ajax_load')\nmode = string: test\n</pre>\n</div>\n<div id=\"theme-debugging\">\n<h4><a href=\"#id70\" rel=\"nofollow\">Theme debugging</a></h4>\n<p>When Zope is in development mode (e.g. running in the foreground in a console\nwith <tt>bin/instance fg</tt>), the theme will be re-compiled on each request. In\nnon-development mode, it is compiled once when first accessed, and then only re-\ncompiled the control panel values are changed.</p>\n<p>Also, in development mode, it is possible to temporarily disable the theme\nby appending a query string parameter <tt>diazo.off=1</tt>. For example:</p>\n<pre>http://localhost:8080/Plone/some-page?diazo.off=1\n</pre>\n<p>Finally, you can get an overlay containing your rules, annotated with how\nmany times the conditions matched both the theme and the document. Green\nmeans the condition matched, red means it didn\u2019t. The entire rule tag will\nbe green (i.e. it had an effect) so long as all conditions within are green.</p>\n<p>To enable this, append <tt>diazo.debug=1</tt>. For example:</p>\n<pre>http://localhost:8080/Plone/some-page?diazo.debug=1\n</pre>\n<p>The parameter is ignored in non-development mode.</p>\n</div>\n<div id=\"commonly-used-rules\">\n<h4><a href=\"#id71\" rel=\"nofollow\">Commonly used rules</a></h4>\n<p>The following recipes illustrate rules commonly used in building Plone themes:</p>\n<p>To copy the page title:</p>\n<pre>&lt;replace css:theme=\"title\" css:content=\"title\" /&gt;\n</pre>\n<p>To copy the <tt>&lt;base /&gt;</tt> tag (necessary for Plone\u2019s links to work):</p>\n<pre>&lt;replace css:theme=\"base\" css:content=\"base\" /&gt;\n</pre>\n<p>If there is no <tt>&lt;base /&gt;</tt> tag in the theme, you can do:</p>\n<blockquote>\n&lt;before css:theme-children=\u201dhead\u201d css:content=\u201dbase\u201d /&gt;</blockquote>\n<p>To drop all styles and JavaScript resources from the theme and copy them\nfrom Plone\u2019s <tt>portal_css</tt> tool instead:</p>\n<pre>&lt;!-- Drop styles in the head - these are added back by including them from Plone --&gt;\n&lt;drop theme=\"/html/head/link\" /&gt;\n&lt;drop theme=\"/html/head/style\" /&gt;\n\n&lt;!-- Pull in Plone CSS --&gt;\n&lt;after theme-children=\"/html/head\" content=\"/html/head/link | /html/head/style\" /&gt;\n</pre>\n<p>To copy Plone\u2019s JavaScript resources:</p>\n<pre>&lt;!-- Pull in Plone CSS --&gt;\n&lt;after theme-children=\"/html/head\" content=\"/html/head/script\" /&gt;\n</pre>\n<p>To copy the class of the <tt>&lt;body /&gt;</tt> tag (necessary for certain Plone\nJavaScript functions and styles to work properly):</p>\n<pre>&lt;!-- Body --&gt;\n&lt;merge attributes=\"class\" css:theme=\"body\" css:content=\"body\" /&gt;\n</pre>\n</div>\n<div id=\"advanced-using-portal-css-to-manage-your-css\">\n<h4><a href=\"#id72\" rel=\"nofollow\">Advanced: Using portal_css to manage your CSS</a></h4>\n<p>Plone\u2019s \u201cresource registries\u201d, including the <tt>portal_css</tt> tool, can be used\nto manage CSS stylesheets. This offers several advantages over simply linking\nto your stylesheets in the template, such as:</p>\n<ul>\n<li>Detailed control over the ordering of stylesheets</li>\n<li>Merging of stylesheets to reduce the number of downloads required to render\nyour page</li>\n<li>On-the-fly stylesheet compression (e.g. whitespace removal)</li>\n<li>The ability to include or exclude a stylesheet based on an expression</li>\n</ul>\n<p>It is usually desirable (and sometimes completely necessary) to leave the\ntheme file untouched, but you can still use <tt>portal_css</tt> to manage your\nstylesheets. The trick is to:</p>\n<ul>\n<li>Register your theme\u2019s styles with Plone\u2019s <tt>portal_css</tt> tool (this is\nnormally best done when you ship a theme in a Python package - there is\ncurrently no way to automate this for a theme imported from a Zip file or\ncreated through the web)</li>\n<li>Drop the theme\u2019s styles with a rule, and then</li>\n<li>Include all styles from Plone</li>\n</ul>\n<p>For example, you could add the following rules:</p>\n<pre>&lt;drop theme=\"/html/head/link\" /&gt;\n&lt;drop theme=\"/html/head/style\" /&gt;\n\n&lt;!-- Pull in Plone CSS --&gt;\n&lt;after theme-children=\"/html/head\" content=\"/html/head/link | /html/head/style\" /&gt;\n</pre>\n<p>The use of an \u201cor\u201d expression for the content in the <tt>after /&gt;</tt> rule means\nthat the relative ordering of link and style elements is maintained.</p>\n<p>To register stylesheets upon product installation using GenericSetup, use the\n<tt>cssregistry.xml</tt> import step in your GenericSetup <tt>profiles/default</tt>\ndirectory:</p>\n<pre>&lt;?xml version=\"1.0\"?&gt;\n&lt;object name=\"portal_css\"&gt;\n\n &lt;!-- Set conditions on stylesheets we don't want to pull in --&gt;\n &lt;stylesheet\n     expression=\"not:request/HTTP_X_THEME_ENABLED | nothing\"\n     id=\"public.css\"\n     /&gt;\n\n &lt;!-- Add new stylesheets --&gt;\n &lt;stylesheet title=\"\" authenticated=\"False\" cacheable=\"True\"\n    compression=\"safe\" conditionalcomment=\"\" cookable=\"True\" enabled=\"on\"\n    expression=\"request/HTTP_X_THEME_ENABLED | nothing\"\n    id=\"++theme++my.theme/css/styles.css\" media=\"\" rel=\"stylesheet\"\n    rendering=\"link\"\n    applyPrefix=\"True\"\n    /&gt;\n\n&lt;/object&gt;\n</pre>\n<p>There is one important caveat, however. Your stylesheet may include relative\nURL references of the following form:</p>\n<blockquote>\nbackground-image: url(../images/bg.jpg);</blockquote>\n<p>If your stylesheet lives in a resource directory (e.g. it is registered in\n<tt>portal_css</tt> with the id <tt><span class=\"pre\">++theme++my.theme/css/styles.css</span></tt>), this\nwill work fine so long as the registry (and Zope) is in debug mode. The\nrelative URL will be resolved by the browser to\n<tt><span class=\"pre\">++theme++my.theme/images/bg.jpg</span></tt>.</p>\n<p>However, you may find that the relative URL breaks when the registry is put\ninto production mode. This is because resource merging also changes the URL\nof the stylesheet to be something like:</p>\n<pre>/plone-site/portal_css/Suburst+Theme/merged-cachekey-1234.css\n</pre>\n<p>To correct for this, you must set the <tt>applyPrefix</tt> flag to <tt>true</tt> when\ninstalling your CSS resource using <tt>cssregistry.xml</tt>. There is a\ncorresponding flag in the <tt>portal_css</tt> user interface.</p>\n<p>It is sometimes useful to show some of Plone\u2019s CSS in the styled site. You\ncan achieve this by using an Diazo <tt>&lt;after /&gt;</tt> rule or similar to copy the\nCSS from Plone\u2019s generated <tt>&lt;head /&gt;</tt> into the theme. You can use the\n<tt>portal_css</tt> tool to turn off the style sheets you do not want.</p>\n<p>However, if you also want the site to be usable in non-themed mode (e.g. on a\nseparate URL), you may want to have a larger set of styles enabled when Diazo\nis not used. To make this easier, you can use the following expressions as\nconditions in the <tt>portal_css</tt> tool (and <tt>portal_javascripts</tt> if relevant),\nin <tt>portal_actions</tt>, in page templates, and other places that use TAL\nexpression syntax:</p>\n<pre>request/HTTP_X_THEME_ENABLED | nothing\n</pre>\n<p>This expression will return True if Diazo is currently enabled, in which case\nan HTTP header \u201cX-Theme-Enabled\u201d will be set.</p>\n<p>If you later deploy the theme to a fronting web server such as nginx, you can\nset the same request header there to get the same effect, even if\n<tt>plone.app.theming</tt> is uninstalled.</p>\n<p>Use:</p>\n<pre>not: request/HTTP_X_THEME_ENABLED | nothing\n</pre>\n<p>to \u2018hide\u2019 a style sheet from the themed site.</p>\n</div>\n<div id=\"advanced-disable-diazo-transformation-by-setting-the-x-theme-disabled-header\">\n<h4><a href=\"#id73\" rel=\"nofollow\">Advanced: Disable diazo transformation by setting the <tt><span class=\"pre\">X-Theme-Disabled</span></tt> header</a></h4>\n<p>The diazo transformation is not applied\nif a response header <tt><span class=\"pre\">X-Theme-Disabled</span></tt> is set.</p>\n<p>In a browser view, the header can be set by using this instruction:</p>\n<pre>self.request.response.setHeader('X-Theme-Disabled', '1')\n</pre>\n<p>This is a complete example:</p>\n<pre>class NoDiazoView(BrowserView):\n\n    def __call__(self):\n        self.request.response.setHeader('X-Theme-Disabled', '1')\n        return super(NoDiazoView).__call__()\n</pre>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>4.0.6 (2020-04-20)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Minor packaging updates. (#1)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>4.0.5 (2020-03-13)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Do not call <tt>processInputs</tt>.\nIt is not needed since Zope 4, and not existing in Zope 5.\n[maurits] (#171)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>4.0.4 (2019-12-11)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix creating a new theme ttw in py2 with Zope 4.1.3.\n[pbauer] (#166)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>4.0.3 (2019-10-12)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Load zcml of <tt>plone.resource</tt> for our use of the <tt>plone:static</tt> directive.\n[maurits] (#2952)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>4.0.2 (2019-09-13)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fixed Python3 TypeError: \u2018filter\u2019 object is not subscriptable.\nThis happened when overriding a filesystem theme with a TTW version\n[fredvd] (#160)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>4.0.1 (2019-02-14)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix skinname-encoding in py3 (fixes\n<a href=\"https://github.com/plone/Products.CMFPlone/issues/2748\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/2748</a>) [pbauer] (#2748)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>4.0.0 (2019-02-13)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Factor out all static resources into plone.staticresources as part of PLIP\n1653. [thet, sunew] (#149)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>a11y: Added role attribute for portalMessage [nzambello] (#151)</li>\n<li>Fixed DeprecationWarning about SafeConfigParser class on Python 3. [maurits]\n(#152)</li>\n<li>Fixed ResourceWarnings for unclosed files in tests. [maurits] (#154)</li>\n<li>Fixed \u201cRuntimeError: dictionary changed size during iteration\u201d [jensens]\n(#156)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>3.0.1 (2018-12-11)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Remove five.globalrequest dependency.\nIt has been deprecated upstream (Zope 4).\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>3.0.0 (2018-11-02)</h3>\n<p>New features:</p>\n<ul>\n<li>Recompiled resource bundles with latest mockup.\n[sunew]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Explizit load permissions for controlpanel.\n[jensens]</li>\n<li>Fix tests for merged plone.login.\n[jensens]</li>\n<li>More Python 3 fixes\n[ale-rt, pbauer, davisagli]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>2.0.3 (2018-04-04)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Added a failing (5.1) test for fileuploads in the theme editor that breaks when plone.rest is installed. Fix is in <a href=\"https://github.com/plone/plone.rest/issues/59\" rel=\"nofollow\">https://github.com/plone/plone.rest/issues/59</a>\n[djay]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>2.0.2 (2018-02-04)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>remove mention of non-existent Example theme\n[tkimnguyen]</li>\n<li>Prepare for Python 2 / 3 compatibility\n[pbauer, ale-rt]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>2.0.1 (2017-07-03)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Remove unittest2 dependency\n[kakshay21]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>2.0 (2017-05-24)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Let the pattern configuration of the thememapper be in JSON format.\nFixes problems of thememapper working together with latest patternslib (2.1.0).\n[thet]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix thememapper pattern handling of buttons (via mockup update).\nUpdate thememapper bundle.\n[thet]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.3.6 (2017-03-28)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Reduce log level of ThemingPolicy cache to \u2018debug\u2019.\n[jensens]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.3.5 (2017-02-12)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix imports from Globals that was removed in Zope4\n[pbauer]</li>\n<li>No longer patch Control Panel internals, as it was removed in Zope4\n[MatthewWilkes]</li>\n<li>reST syntax, styleguide, wording and line length of the docs\n[svx]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.3.4 (2016-12-30)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Make diazo.debug work again when DIAZO_ALWAYS_CACHE_RULES is set.\n[ale-rt]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.3.3 (2016-12-02)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Remove roman monkey patch.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.3.2 (2016-09-23)</h3>\n<p>New features:</p>\n<ul>\n<li>Add Update -button for theming control panel making it possible to\nreload modified theme manifest without deactivating theme at first.\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.3.1 (2016-09-07)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Enable unload protection by using pattern class <tt><span class=\"pre\">pat-formunloadalert</span></tt> instead <tt>enableUnloadProtection</tt>.\n[thet]</li>\n<li>Small fix in documentation\n[staeff]</li>\n<li>Fix issue where theming control panel errored when a packaged\ntheme was overidden with a global resource directory theme\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>1.3.0 (2016-06-07)</h3>\n<p>New:</p>\n<ul>\n<li>Control theme compilation in development mode\nthrough the environment variable <tt>DIAZO_ALWAYS_CACHE_RULES</tt>\n[ale-rt]</li>\n</ul>\n<p>Fixes:</p>\n<ul>\n<li>Small fixes to documentaion\n[ale-rt]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>1.2.19 (2016-03-31)</h3>\n<p>New:</p>\n<ul>\n<li>For the theming controlpanel, change base URLs from portal URL to what getSite returns, but don\u2019t change the controlpanels context binding.\nThis allows for more flexibility when configuring it to be allowed on a sub site with a local registry.\n[thet]</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>1.2.18 (2016-03-03)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fixed html validation: element nav does not need a role attribute.\n[maurits]</li>\n<li>Handle potential scenarios where wrong theme would show selected in the theming\ncontrol panel\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>1.2.17 (2016-02-11)</h3>\n<p>New:</p>\n<ul>\n<li>Documented how to disable diazo transform by setting the\n<tt><span class=\"pre\">X-Theme-Disabled</span></tt> header.  [ale-rt]</li>\n</ul>\n<p>Fixes:</p>\n<ul>\n<li>Rebuild resources so they work with latest mockup/patternslib\nintegration changes.  [vangheem]</li>\n<li>Removed github dependancies in thememapper.  [Gagaro]</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>1.2.16 (2015-11-26)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Updated Site Setup link in all control panels.\nFixes <a href=\"https://github.com/plone/Products.CMFPlone/issues/1255\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/1255</a>\n[davilima6]</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>1.2.15 (2015-10-28)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Do not fail in <tt>isThemeEnabled</tt> when we have no settings, for\nexample when migrating from Plone 3 to Plone 5, but maybe also in\nother cases.\n[maurits]</li>\n<li>Fixed Unicode Encode Error when to copy into multi-byte title / description\n[terapyon]</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>1.2.14 (2015-09-27)</h3>\n<ul>\n<li>Fix i18n in mapper.pt\n[vincentfretin]</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>1.2.13 (2015-09-20)</h3>\n<ul>\n<li>Pull mark_special_links, external_links_open_new_window values\nfrom configuration registry.\n[esteele]</li>\n<li>Fix visual glitch on Safari\n[davilima6]</li>\n<li>Show active theme at the top of the theme list.\nFixes <a href=\"https://github.com/plone/plone.app.theming/issues/70\" rel=\"nofollow\">https://github.com/plone/plone.app.theming/issues/70</a>\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>1.2.12 (2015-09-15)</h3>\n<ul>\n<li>Remove bundled twitter bootstrap theme \u2018example\u2019.\nFixes <a href=\"https://github.com/plone/Products.CMFPlone/issues/877\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/877</a>\n[pbauer]</li>\n<li>Remove duplicate type attribute for theming control panel delete modal.\n[esteele]</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>1.2.11 (2015-09-11)</h3>\n<ul>\n<li>rewrite manifest from copied theme with relative paths also\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>1.2.10 (2015-09-08)</h3>\n<ul>\n<li>theme mapper fixes for odd behavior in save files at times\n[swartz]</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>1.2.9 (2015-08-22)</h3>\n<ul>\n<li>Build thememapper resources.\n[vangheem]</li>\n<li>Added cache invalidation option.\n[swartz]</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>1.2.8 (2015-08-20)</h3>\n<ul>\n<li>change link from plone.org to plone.com.\n[tkimnguyen]</li>\n<li>fix toolbar on control panel\n[vangheem]</li>\n<li>fix less building\n[obct537]</li>\n<li>Fixed copy modal for themes with a dot in the name.\n[Gagaro]</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>1.2.7 (2015-07-18)</h3>\n<ul>\n<li>Provide better styling to themeing control panel, less build, finish implementation\n[obct537]</li>\n<li>make sure when copying themes that you try to modify the base urls\nto match the new theme are all the manifest.cfg settings\n[vangheem]</li>\n<li>implement switchable theming policy API, re-implement theme caching\n[gyst]</li>\n<li>fixed configuration of copied theme\n[vmaksymiv]</li>\n<li>implemented upload for theme manager\n[schwartz]</li>\n<li>Change the category of the configlet to \u2018plone-general\u2019.\n[sneridagh]</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>1.2.6 (2015-06-05)</h3>\n<ul>\n<li>removed irrelevant theme renaming code\n[schwartz]</li>\n<li>Filesystem themes are now correctly overridden. TTW themes can no longer be overriden\n[schwartz]</li>\n<li>re-added manifest check\n[schwartz]</li>\n<li>Fixed broken getTheme method\n[schwartz]</li>\n<li>Minor ReStructuredText fixes for documentation.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>1.2.5 (2015-05-13)</h3>\n<ul>\n<li>Fix RestructuredText representation on PyPI by bringing back a few\nexample lines in the manifest.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3>1.2.4 (2015-05-12)</h3>\n<ul>\n<li>Add setting for tinymce automatically detected styles\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3>1.2.3 (2015-05-04)</h3>\n<ul>\n<li>fix AttributeError: \u2018NoneType\u2019 object has no attribute \u2018getroottree\u2019 when the result is not\nhtml / is empty.\n[sunew]</li>\n<li>make control panel usable again. Fixed problem where skins\ncontrol panel is no longer present.\n[vangheem]</li>\n<li>unified different getTheme functions.\n[jensens]</li>\n<li>pep8ified, housekeeping, cleanup\n[jensens]</li>\n<li>Specify i18n:domain in controlpanel.pt.\n[vincentfretin]</li>\n<li>pat-modal pattern has been renamed to pat-plone-modal\n[jcbrand]</li>\n<li>Fix load pluginSettings for the enabled theme before calling plugins for\nonEnabled and call onEnabled plugins with correct parameters\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3>1.2.2 (2015-03-22)</h3>\n<ul>\n<li>Patch the ZMI only for available ZMI pages.\n[thet]</li>\n<li>Change deprecated import of <tt>zope.site.hooks.getSite</tt> to\n<tt>zope.component.hooks.getSite</tt>.\n[thet]</li>\n<li>Add an error log if the subrequest failed (probably a relative xi:include)\ninstead of silently returning None (and so having a xi:include returning\nnothing).\n[vincentfretin]</li>\n<li>Fix transform to not affect the result when theming is disabled\n[datakurre]</li>\n<li>Integrate thememapper mockup pattern and fix theming control panel\nto be more usable\n[ebrehault]</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3>1.2.1 (2014-10-23)</h3>\n<ul>\n<li>Remove DL\u2019s from portal message in templates.\n<a href=\"https://github.com/plone/Products.CMFPlone/issues/153\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/153</a>\n[khink]</li>\n<li>Fix \u201cInsufficient Privileges\u201d for \u201cSite Administrators\u201d on the control panel.\n[@rpatterson]</li>\n<li>Add IThemeAppliedEvent\n[vangheem]</li>\n<li>Put themes in a separate zcml file to be able to exclude them\n[laulaz]</li>\n<li>#14107 bot requests like /widget/oauth_login/info.txt causes\nproblems finding correct context with plone.app.theming\n[anthonygerrard]</li>\n<li>Added support for ++theme++ to traverse to the contents of the\ncurrent activated theme.\n[bosim]</li>\n</ul>\n</div>\n<div id=\"id40\">\n<h3>1.2.0 (2014-03-02)</h3>\n<ul>\n<li>Disable theming for manage_shutdown view.\n[davisagli]</li>\n<li>Fix reference to theme error template\n[afrepues]</li>\n<li>Add \u201cTest Styles\u201d button in control panel to expose, test_rendering template.\n[runyaga]</li>\n</ul>\n</div>\n<div id=\"id41\">\n<h3>1.1.1 (2013-05-23)</h3>\n<ul>\n<li>Fixed i18n issues.\n[thomasdesvenain]</li>\n<li>Fixed i18n issues.\n[jianaijun]</li>\n<li>This fixed UnicodeDecodeError when Theme Title is Non-ASCII\nin the manifest.cfg file.\n[jianaijun]</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h3>1.1 (2013-04-06)</h3>\n<ul>\n<li>Fixed i18n issues.\n[vincentfretin]</li>\n<li>Make the template theme do what it claims to do: copy styles as\nwell as scripts.\n[smcmahon]</li>\n<li>Change the label and description for the example theme to supply useful\ninformation.\n[smcmahon]</li>\n<li>Upgrades from 1.0 get the combined \u201cTheming\u201d control panel that was added in\n1.1a1.\n[danjacka]</li>\n</ul>\n</div>\n<div id=\"b2-2013-01-01\">\n<h3>1.1b2 (2013-01-01)</h3>\n<ul>\n<li>Ensure host blacklist utilises SERVER_URL to correctly determine hostname\nfor sites hosted as sub-folders at any depth.\n[davidjb]</li>\n<li>Add test about plone.app.theming / plone.app.caching integration when\nusing GZIP compression for anonymous\n(see ticket <a href=\"https://dev.plone.org/ticket/12038\" rel=\"nofollow\">12038</a>). [ebrehault]</li>\n</ul>\n</div>\n<div id=\"b1-2012-10-16\">\n<h3>1.1b1 (2012-10-16)</h3>\n<ul>\n<li>Add diazo.debug option, route all error_log output through\nthis so debugging can be displayed\n[lentinj]</li>\n<li>Make example Bootstrap-based theme use the HTML5 DOCTYPE.\n[danjacka]</li>\n<li>Demote ZMI patch log message to debug level.\n[hannosch]</li>\n<li>Upgrade to ACE 1.0 via plone.resourceeditor\n[optilude]</li>\n<li>Put quotes around jQuery attribute selector values to appease\njQuery 1.7.2.\n[danjacka]</li>\n</ul>\n</div>\n<div id=\"a2-2012-08-30\">\n<h3>1.1a2 (2012-08-30)</h3>\n<ul>\n<li>Protect the control panel with a specific permission so it can be\ndelegated.\n[davisagli]</li>\n<li>Advise defining ajax_load as <tt><span class=\"pre\">request.form.get('ajax_load')</span></tt> in\nmanifest.cfg.  For instance, the login_form has an hidden empty\najax_load input, which would give an unthemed page after submitting\nthe form.\n[maurits]</li>\n<li>Change theme editor page templates to use main_template rather than\nprefs_main_template to avoid inserting CSS and JavaScript too early\nunder plonetheme.classic.\n[danjacka]</li>\n</ul>\n</div>\n<div id=\"a1-2012-08-08\">\n<h3>1.1a1 (2012-08-08)</h3>\n<ul>\n<li>Replace the stock \u201cThemes\u201d control panel with a renamed \u201cTheming\u201d control\npanel, which incorporates the former\u2019s settings under its \u201cAdvanced\u201d tab.\n[optilude]</li>\n<li>Add a full in-Plone theme authoring environment\n[optilude, vangheem]</li>\n<li>Update IBeforeTraverseEvent import to zope.traversing.\n[hannosch]</li>\n<li>On tab \u201cManage themes\u201d, change table header to\nbetter describe what\u2019s actually listed.\n[kleist]</li>\n</ul>\n</div>\n<div id=\"id44\">\n<h3>1.0 (2012-04-15)</h3>\n<ul>\n<li>Prevent AttributeError when getRequest returns None.\n[maurits]</li>\n<li>Calculate subrequests against navigation root rather than portal.\n[elro]</li>\n<li>Supply closest context found for 404 pages.\n[elro]</li>\n<li>Lookup portal state with correct context.\n[elro]</li>\n</ul>\n</div>\n<div id=\"b9-2011-11-02\">\n<h3>1.0b9 - 2011-11-02</h3>\n<ul>\n<li>Patch App.Management.Navigation to disable theming of ZMI pages.\n[elro]</li>\n</ul>\n</div>\n<div id=\"b8-2011-07-04\">\n<h3>1.0b8 - 2011-07-04</h3>\n<ul>\n<li>Evaluate theme parameters regardless of whether there is a valid context or\nnot (e.g. when templating a 404 page).\n[lentinj]</li>\n</ul>\n</div>\n<div id=\"b7-2011-06-12\">\n<h3>1.0b7 - 2011-06-12</h3>\n<ul>\n<li>Moved the <em>views</em> and <em>overrides</em> plugins out into a separate package\n<tt>plone.app.themingplugins</tt>. If you want to use those features, you need\nto install that package in your buildout. Themes attempting to register\nviews or overrides in environments where <tt>plone.app.themingplugins</tt> is not\ninstalled will install, but views and overrides will not take effect.\n[optilude]</li>\n</ul>\n</div>\n<div id=\"b6-2011-06-08\">\n<h3>1.0b6 - 2011-06-08</h3>\n<ul>\n<li>Support for setting arbitrary Doctypes.\n[elro]</li>\n<li>Upgrade step to update plone.app.registry configuration.\n[elro]</li>\n<li>Fixed plugin initialization when applying a theme.\n[maurits]</li>\n<li>Query the resource directory using the \u2018currentTheme\u2019 name instead\nof the Theme object (updating the control panel was broken).\n[maurits]</li>\n<li>Fix zip import (plugin initialization was broken.)\n[elro]</li>\n</ul>\n</div>\n<div id=\"b5-2011-05-29\">\n<h3>1.0b5 - 2011-05-29</h3>\n<ul>\n<li>Make sure the control panel is never themed, by setting the X-Theme-Disabled\nresponse header.\n[optilude]</li>\n<li>Add support for registering new views from Zope Page Templates and\noverriding existing templates. See README for more details.\n[optilude]</li>\n</ul>\n</div>\n<div id=\"b4-2011-05-24\">\n<h3>1.0b4 - 2011-05-24</h3>\n<ul>\n<li>Add support for <tt><span class=\"pre\">X-Theme-Disabled</span></tt> response header.\n[elro]</li>\n<li>Make \u201cReplace existing theme\u201d checkbox default to off.\n[elro]</li>\n<li>Fix control panel to correctly display a newly uploaded theme.\n[elro]</li>\n<li>Fix zip import to work correctly when no manifest is supplied.\n[elro]</li>\n</ul>\n</div>\n<div id=\"b3-2011-05-23\">\n<h3>1.0b3 - 2011-05-23</h3>\n<ul>\n<li>Show theme name along with title in control panel.\n[elro]</li>\n</ul>\n</div>\n<div id=\"b2-2011-05-16\">\n<h3>1.0b2 - 2011-05-16</h3>\n<ul>\n<li>Encode internally resolved documents to support non-ascii characters\ncorrectly.\n[elro]</li>\n<li>Fix control panel to use theme name not id.\n[optilude]</li>\n</ul>\n</div>\n<div id=\"b1-2011-04-22\">\n<h3>1.0b1 - 2011-04-22</h3>\n<ul>\n<li>Wrap internal subrequests for css or js in style or script tags to\nfacilitate inline includes.\n[elro]</li>\n<li>Add <tt>theme.xml</tt> import step (see README).\n[optilude]</li>\n<li>Add support for <tt>[theme:parameters]</tt> section in <tt>manifest.cfg</tt>, which\ncan be used to set parameters and the corresponding TALES expressions to\ncalculate them.\n[optilude]</li>\n<li>Add support for parameter expressions based on TALES expressions\n[optilude]</li>\n<li>Use plone.subrequest 1.6 features to work with IStreamIterator from\nplone.resource.\n[elro]</li>\n<li>Depend on <tt>Products.CMFPlone</tt> instead of <tt>Plone</tt>.\n[elro]</li>\n<li>Added support for uploading themes as Zip archives.\n[optilude]</li>\n<li>Added theme off switch: Add a query string parameter <tt>diazo.off=1</tt> to a\nrequest whilst Zope is in development mode to turn off the theme.\n[optilude]</li>\n<li>Removed \u2018theme\u2019 and alternative themes support: Themes should be referenced\nusing the <tt>&lt;theme /&gt;</tt> directive in the Diazo rules file.\n[optilude]</li>\n<li>Removed \u2018domains\u2019 support: This can be handled with the rules file syntax\nby using the <tt>host</tt> parameter.\n[optilude]</li>\n<li>Removed \u2018notheme\u2019 support: This can be handled within the rules file syntax\nby using the <tt>path</tt> parameter.\n[optilude]</li>\n<li>Added <tt>path</tt> and <tt>host</tt> as parameters to the Diazo rules file. These\ncan now be used as conditional expressions.\n[optilude]</li>\n<li>Removed dependency on XDV in favour of dependency on Diazo (which is the\nnew name for XDV).\n[optilude]</li>\n<li>Forked from collective.xdv 1.0rc11.\n[optilude]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7059259, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "06458ee1ca8c49e888453fffb744483f", "sha256": "148331ec1fd8028363b48fb6550605f38304bfbe5e3179c38c397721b4ffcfd1"}, "downloads": -1, "filename": "plone.app.theming-1.0.zip", "has_sig": false, "md5_digest": "06458ee1ca8c49e888453fffb744483f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106635, "upload_time": "2012-04-15T21:41:31", "upload_time_iso_8601": "2012-04-15T21:41:31.077559Z", "url": "https://files.pythonhosted.org/packages/36/e4/95b2843d174c5ed0ea1fc98fd094f3eb7567b324a19bf1df0ee62a283033/plone.app.theming-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "32cd19fd728b059a02ea156beab82f8c", "sha256": "86251b54705edb8737e56d8ba179b70f8b911724ac1cea43342753d9c5601745"}, "downloads": -1, "filename": "plone.app.theming-1.0.1.zip", "has_sig": false, "md5_digest": "32cd19fd728b059a02ea156beab82f8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200542, "upload_time": "2012-08-18T13:00:32", "upload_time_iso_8601": "2012-08-18T13:00:32.906788Z", "url": "https://files.pythonhosted.org/packages/41/71/2593e9d0009c94365c22420908086b535dc6b8d9a90e79ca548813c0d4bb/plone.app.theming-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7e71e7834d6f46932f7b86f7683bdd5a", "sha256": "4005ce4f1911bd7cd1668f47901c2f7ba37cd066a2e5dfb479398c916cb3b289"}, "downloads": -1, "filename": "plone.app.theming-1.0.2.zip", "has_sig": false, "md5_digest": "7e71e7834d6f46932f7b86f7683bdd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200620, "upload_time": "2012-08-18T14:25:49", "upload_time_iso_8601": "2012-08-18T14:25:49.673260Z", "url": "https://files.pythonhosted.org/packages/1f/2a/a3b722ec08db9f02d7ad7e6ea5ad3fdb2b1bdbded0badca6c105e4bd646a/plone.app.theming-1.0.2.zip", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2a769309e95dc2b641713459c9ab5db1", "sha256": "730dc7a441e8b2814026f8bc125be1422e6281047f5dcaff016e81810ca8aa68"}, "downloads": -1, "filename": "plone.app.theming-1.0.3.zip", "has_sig": false, "md5_digest": "2a769309e95dc2b641713459c9ab5db1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108159, "upload_time": "2012-08-18T14:57:15", "upload_time_iso_8601": "2012-08-18T14:57:15.814458Z", "url": "https://files.pythonhosted.org/packages/e4/a7/3ba64d19ce07df6a62b975addd8a5a11de90358f62b2820ce64cecccf426/plone.app.theming-1.0.3.zip", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2da6d810e0d5f295dd0daa2b60731a1b", "sha256": "bb59a1a55604534a3fa0a9a567d9d68536a4a60a1b81862575ac994110dd90e5"}, "downloads": -1, "filename": "plone.app.theming-1.0.4.zip", "has_sig": false, "md5_digest": "2da6d810e0d5f295dd0daa2b60731a1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109058, "upload_time": "2012-12-15T03:45:51", "upload_time_iso_8601": "2012-12-15T03:45:51.069729Z", "url": "https://files.pythonhosted.org/packages/94/6b/ed04930469ce5b60f963e0fff75d43516868d4f01e7cb1ed157256302eab/plone.app.theming-1.0.4.zip", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "672bc80cb90b6aff3cbaa5cdce005acc", "sha256": "1439cac5dbd72595937554346430ec8248fb910435fcf44428b45c066f644fd0"}, "downloads": -1, "filename": "plone.app.theming-1.0b1.zip", "has_sig": false, "md5_digest": "672bc80cb90b6aff3cbaa5cdce005acc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89916, "upload_time": "2011-04-22T22:58:18", "upload_time_iso_8601": "2011-04-22T22:58:18.468778Z", "url": "https://files.pythonhosted.org/packages/a0/09/6a13b17bb85d21c1c8e38df65c687bd01b2834cd8fdd5eb29ae7f8a73c24/plone.app.theming-1.0b1.zip", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "f4b5a92ef312b9842dc209bc2f37e66c", "sha256": "e7dc19cc677eac90c5af5810e4cd4920126906fc5d63666152379e1c2f04ebf8"}, "downloads": -1, "filename": "plone.app.theming-1.0b2.zip", "has_sig": false, "md5_digest": "f4b5a92ef312b9842dc209bc2f37e66c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90868, "upload_time": "2011-05-16T15:06:51", "upload_time_iso_8601": "2011-05-16T15:06:51.857453Z", "url": "https://files.pythonhosted.org/packages/16/dc/b5e725cde687940c6ab420658792985f3fa397a7f6f7e56b9ae5d9fd3545/plone.app.theming-1.0b2.zip", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "8c3a121c64b6efde1021240c2bc470bf", "sha256": "49d636ecd2a08c93e80b7592c70cae365ffc4d4024a0c50e073787632c380609"}, "downloads": -1, "filename": "plone.app.theming-1.0b3.zip", "has_sig": false, "md5_digest": "8c3a121c64b6efde1021240c2bc470bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90980, "upload_time": "2011-05-23T19:42:50", "upload_time_iso_8601": "2011-05-23T19:42:50.490207Z", "url": "https://files.pythonhosted.org/packages/e2/8e/f3efddd2fe87a01e93f680d9f9d6d265bec8e8eaa7dc3506aa5c0c82aaa0/plone.app.theming-1.0b3.zip", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "1392ac86feb834d4dfd3e35bb8ac23b3", "sha256": "5bd0cdabe98c80006f14a3004eb4aa7a732492e2f581e3ecfc6131bef3718a8a"}, "downloads": -1, "filename": "plone.app.theming-1.0b4.zip", "has_sig": false, "md5_digest": "1392ac86feb834d4dfd3e35bb8ac23b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92373, "upload_time": "2011-05-24T19:47:38", "upload_time_iso_8601": "2011-05-24T19:47:38.182659Z", "url": "https://files.pythonhosted.org/packages/c7/78/666044703d39f8ca051f215030f28bd81ecb6a590199f060040ea083ac8b/plone.app.theming-1.0b4.zip", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "2a99c9ff473f7e091cd8bd385c636096", "sha256": "e2c7fc71a76a30c92836f0702894f7047e23dd9591fd5a4c25b865924779f9c4"}, "downloads": -1, "filename": "plone.app.theming-1.0b5.tar.gz", "has_sig": false, "md5_digest": "2a99c9ff473f7e091cd8bd385c636096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85890, "upload_time": "2011-05-29T18:38:35", "upload_time_iso_8601": "2011-05-29T18:38:35.636357Z", "url": "https://files.pythonhosted.org/packages/76/c9/345f4bf37a053737964aa2ce6c9e508636c69cd93c0a6ba7d954aa961430/plone.app.theming-1.0b5.tar.gz", "yanked": false}], "1.0b6": [{"comment_text": "", "digests": {"md5": "4153c30ac332a3bd1756c73e5ede2f68", "sha256": "7a91ba87e7c9dae6c318bd0ab2a27cb0aacaf280fefb3b7029f6822e99f86cca"}, "downloads": -1, "filename": "plone.app.theming-1.0b6.zip", "has_sig": false, "md5_digest": "4153c30ac332a3bd1756c73e5ede2f68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118522, "upload_time": "2011-06-08T18:34:58", "upload_time_iso_8601": "2011-06-08T18:34:58.030660Z", "url": "https://files.pythonhosted.org/packages/d9/85/391280b16848c804a260d99b09d145be5ef628ae744f9c51fad7bd16121d/plone.app.theming-1.0b6.zip", "yanked": false}], "1.0b7": [{"comment_text": "", "digests": {"md5": "9e28343e8efbe6b3e24438d10c92b145", "sha256": "05e7f44a9f44ad49c7d628f48cbb3a7abe845fe502d6a33448e67c313326a825"}, "downloads": -1, "filename": "plone.app.theming-1.0b7.tar.gz", "has_sig": false, "md5_digest": "9e28343e8efbe6b3e24438d10c92b145", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78990, "upload_time": "2011-06-12T13:49:34", "upload_time_iso_8601": "2011-06-12T13:49:34.204010Z", "url": "https://files.pythonhosted.org/packages/ab/90/e184191d824f5e04b6909f0d066b4673547175de7f9f4dc7d089e494bb51/plone.app.theming-1.0b7.tar.gz", "yanked": false}], "1.0b8": [{"comment_text": "", "digests": {"md5": "259a4282b25b5cbbf91c46363e522c94", "sha256": "406e2ad9e4ed4d7c56269369eb80d89a9821689b74846e8a9eff1765879d5288"}, "downloads": -1, "filename": "plone.app.theming-1.0b8.zip", "has_sig": false, "md5_digest": "259a4282b25b5cbbf91c46363e522c94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105634, "upload_time": "2011-07-04T17:38:56", "upload_time_iso_8601": "2011-07-04T17:38:56.348393Z", "url": "https://files.pythonhosted.org/packages/f6/ca/a03b1e9a715c0c2b69a86303700691241923d14ae2e320efbf249c1e28cb/plone.app.theming-1.0b8.zip", "yanked": false}], "1.0b9": [{"comment_text": "", "digests": {"md5": "5ee8d4c64f52c490773aea7849141782", "sha256": "fc48829241e667c9376e3141ac0dad669ff0134e30475f4993fe6b7a2ddbaa4c"}, "downloads": -1, "filename": "plone.app.theming-1.0b9.zip", "has_sig": false, "md5_digest": "5ee8d4c64f52c490773aea7849141782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106682, "upload_time": "2011-11-03T06:31:01", "upload_time_iso_8601": "2011-11-03T06:31:01.271719Z", "url": "https://files.pythonhosted.org/packages/4e/14/8b2e74800eac36814ff140ff1ea9da9666c4eca5b9864c9341971ae8166b/plone.app.theming-1.0b9.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "be281b5b740f8e35c73ba15adcd0f98d", "sha256": "5d65c0a5627027150498654de01a248d756dcaa531f61dd32c67e0ca5b9bbda6"}, "downloads": -1, "filename": "plone.app.theming-1.1.zip", "has_sig": false, "md5_digest": "be281b5b740f8e35c73ba15adcd0f98d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345906, "upload_time": "2013-04-06T16:08:51", "upload_time_iso_8601": "2013-04-06T16:08:51.813864Z", "url": "https://files.pythonhosted.org/packages/9e/e8/60f47febb89b2b4cc3c4716d7f6495d1148f058ee4f7e54ae9cd6bfcf2df/plone.app.theming-1.1.zip", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a694b7a050b6e7c25d720d1e99bb73fa", "sha256": "1339a2e39a7b33412815e2a1338c4f513ab38c7ed76492761f392500b86cfa29"}, "downloads": -1, "filename": "plone.app.theming-1.1.1.zip", "has_sig": false, "md5_digest": "a694b7a050b6e7c25d720d1e99bb73fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347190, "upload_time": "2013-05-24T01:44:22", "upload_time_iso_8601": "2013-05-24T01:44:22.634271Z", "url": "https://files.pythonhosted.org/packages/2f/bd/0713ac54c77afaffc10d894782ae6e63e833ec5359363242d563a1b4ad43/plone.app.theming-1.1.1.zip", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "1a40eb5339b6da3a28bdb0d910f5d996", "sha256": "d2cc958b083380023170ea37e83ced647c1a62f12ddd8d87a8e2ada46590f5fd"}, "downloads": -1, "filename": "plone.app.theming-1.1.2.zip", "has_sig": false, "md5_digest": "1a40eb5339b6da3a28bdb0d910f5d996", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347838, "upload_time": "2014-09-07T15:27:00", "upload_time_iso_8601": "2014-09-07T15:27:00.774821Z", "url": "https://files.pythonhosted.org/packages/e5/3b/4309da85080ffc1f26e846b42caba4717eb30bef3c8259d0c9213737e3ef/plone.app.theming-1.1.2.zip", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "3f1dfba79aaa31760010eb178be0aab2", "sha256": "7c18b74fbaf13179b40f2c482ae10a67ea86fbfe0d7b1628020c81266edb50aa"}, "downloads": -1, "filename": "plone.app.theming-1.1.3.zip", "has_sig": false, "md5_digest": "3f1dfba79aaa31760010eb178be0aab2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348018, "upload_time": "2014-10-20T18:23:13", "upload_time_iso_8601": "2014-10-20T18:23:13.885956Z", "url": "https://files.pythonhosted.org/packages/d0/72/8743c7edbba1f73023afc40c487d8a07bffa187254cc0f3270a8520f0b2a/plone.app.theming-1.1.3.zip", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "0ec9c662482af6ad09549472b4c0ebac", "sha256": "3fa1de45a8d0f77c178fb7e5d005a3bdd16f50de23a5cc7201910eff663fb558"}, "downloads": -1, "filename": "plone.app.theming-1.1.4.zip", "has_sig": false, "md5_digest": "0ec9c662482af6ad09549472b4c0ebac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348184, "upload_time": "2015-02-24T15:35:55", "upload_time_iso_8601": "2015-02-24T15:35:55.470842Z", "url": "https://files.pythonhosted.org/packages/09/53/d4649a4ce2890a95f4fd6604b0f4165872f0f25ceec955c199bc61f40cc6/plone.app.theming-1.1.4.zip", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "c0b9c2451874d0800a2b24a65b664cb4", "sha256": "1348ee6a8e08773a4c58e748fa5e5958098a06beb7429acde2d2c64c889e2793"}, "downloads": -1, "filename": "plone.app.theming-1.1.5.zip", "has_sig": false, "md5_digest": "c0b9c2451874d0800a2b24a65b664cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348489, "upload_time": "2015-04-28T21:14:23", "upload_time_iso_8601": "2015-04-28T21:14:23.557591Z", "url": "https://files.pythonhosted.org/packages/2a/2a/a7858b1620003d7f225b6fe41622931c46911099686fd54411d00032e371/plone.app.theming-1.1.5.zip", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "7d2d3dabc56690d5d625a25429f2a20c", "sha256": "308f49cc8de953360e21e3549dc3a1a7efdc781d905b747fad6b869ffa531678"}, "downloads": -1, "filename": "plone.app.theming-1.1.6.zip", "has_sig": false, "md5_digest": "7d2d3dabc56690d5d625a25429f2a20c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348733, "upload_time": "2015-05-04T12:11:25", "upload_time_iso_8601": "2015-05-04T12:11:25.216140Z", "url": "https://files.pythonhosted.org/packages/a3/6d/8d3c3aa935b55ddfba1d54a1212f5c7244dc9ae8cdc52de68320028db805/plone.app.theming-1.1.6.zip", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "56c67d671a38b4f467aa5c9ba9f47c3e", "sha256": "aae70a3b3fecb47086294435ccdab700cc4d5f85f1a4f08fdcde8de71fc008db"}, "downloads": -1, "filename": "plone.app.theming-1.1.7.zip", "has_sig": false, "md5_digest": "56c67d671a38b4f467aa5c9ba9f47c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348937, "upload_time": "2015-07-14T22:19:06", "upload_time_iso_8601": "2015-07-14T22:19:06.956089Z", "url": "https://files.pythonhosted.org/packages/d1/12/f6a8020fe130529ac7948041d15e9de03dd82954738a4764b63d8779f924/plone.app.theming-1.1.7.zip", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "9311868a7eb0e0cb40af48aea939db6b", "sha256": "b5512437a01a81654413026a6c37351d279fdded179607f65ee1fdde8d4f1659"}, "downloads": -1, "filename": "plone.app.theming-1.1.8.tar.gz", "has_sig": false, "md5_digest": "9311868a7eb0e0cb40af48aea939db6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 299635, "upload_time": "2016-08-11T21:57:26", "upload_time_iso_8601": "2016-08-11T21:57:26.645095Z", "url": "https://files.pythonhosted.org/packages/18/ee/1f477a7b619c96ad4dded533bad760b78196374c9c0bc70de58a574e0f34/plone.app.theming-1.1.8.tar.gz", "yanked": false}], "1.1a1": [{"comment_text": "", "digests": {"md5": "a5a7d537654ddb874e334bd4e7f75f30", "sha256": "a4a80503cdd00c32d9381c9e85d42801003ae1af67a3ce65e93a1d3c67fb20a8"}, "downloads": -1, "filename": "plone.app.theming-1.1a1.zip", "has_sig": false, "md5_digest": "a5a7d537654ddb874e334bd4e7f75f30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1087791, "upload_time": "2012-08-08T16:32:55", "upload_time_iso_8601": "2012-08-08T16:32:55.183941Z", "url": "https://files.pythonhosted.org/packages/fc/8b/bf2162a0e255cba8b8b203f719cb6f016170972890614e3fd9aa9b2a5ffd/plone.app.theming-1.1a1.zip", "yanked": false}], "1.1a2": [{"comment_text": "", "digests": {"md5": "7842737cb4373a0539e980be0ea5d02e", "sha256": "e9a40077e2150b9e665b7e2830ea431146a9c5902dcd62da5e72e20d1a6443dc"}, "downloads": -1, "filename": "plone.app.theming-1.1a2.zip", "has_sig": false, "md5_digest": "7842737cb4373a0539e980be0ea5d02e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342204, "upload_time": "2012-08-30T15:31:00", "upload_time_iso_8601": "2012-08-30T15:31:00.329493Z", "url": "https://files.pythonhosted.org/packages/ae/93/67704d080afb1ac06c4b1e499c5a21caedcb4cba47775002a16b4ad30c1f/plone.app.theming-1.1a2.zip", "yanked": false}], "1.1b1": [{"comment_text": "", "digests": {"md5": "f26406514bad21d370c231c0c05a7af3", "sha256": "a2d6a69614a185125cbcdd6e7406a9217959b5420ccf55e80a0aff68d65045da"}, "downloads": -1, "filename": "plone.app.theming-1.1b1.zip", "has_sig": false, "md5_digest": "f26406514bad21d370c231c0c05a7af3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342643, "upload_time": "2012-10-16T11:52:29", "upload_time_iso_8601": "2012-10-16T11:52:29.110487Z", "url": "https://files.pythonhosted.org/packages/c0/8c/9ad7ed36927e40b41898ee8b374ec6e4938763b9df111ac8f19a9f12ffb5/plone.app.theming-1.1b1.zip", "yanked": false}], "1.1b2": [{"comment_text": "", "digests": {"md5": "0cefd88b1c810833c03762cba7bd194d", "sha256": "a5abfa51a7fe1ffa3e41df9a356164df0f2c8c6f0667180e46de6b7c2356675b"}, "downloads": -1, "filename": "plone.app.theming-1.1b2.zip", "has_sig": false, "md5_digest": "0cefd88b1c810833c03762cba7bd194d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 345906, "upload_time": "2013-01-02T01:18:57", "upload_time_iso_8601": "2013-01-02T01:18:57.085427Z", "url": "https://files.pythonhosted.org/packages/12/1a/c75deb2b4fcfb1d9d8179ecfd6f94956331866b60a21624800086775aa8a/plone.app.theming-1.1b2.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "adedf87a037cad63adf41fd93b9285d7", "sha256": "4550a6c35a74084a8f4851260c489cfaa89511fa8f033369e2cb68b3be81e61e"}, "downloads": -1, "filename": "plone.app.theming-1.2.0.zip", "has_sig": false, "md5_digest": "adedf87a037cad63adf41fd93b9285d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347793, "upload_time": "2014-03-02T05:52:03", "upload_time_iso_8601": "2014-03-02T05:52:03.434683Z", "url": "https://files.pythonhosted.org/packages/9d/15/5f20903470afaa2e514d57b94fbdef40e4ab5bbb3aeec83c6f08f1b49c04/plone.app.theming-1.2.0.zip", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "4cd0642205126ab8ac1c330e113a22a9", "sha256": "d29693fbb76a4870912355ba0fe1f6341be261359b040bd21da3d869e6f6153c"}, "downloads": -1, "filename": "plone.app.theming-1.2.1.zip", "has_sig": false, "md5_digest": "4cd0642205126ab8ac1c330e113a22a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 363144, "upload_time": "2014-10-24T01:53:23", "upload_time_iso_8601": "2014-10-24T01:53:23.800652Z", "url": "https://files.pythonhosted.org/packages/05/67/843171cc27dbe35c3b4b2180e5f6f0272b2f3c32b0ffc1e9a57e8d526876/plone.app.theming-1.2.1.zip", "yanked": false}], "1.2.10": [{"comment_text": "", "digests": {"md5": "6d67295ae9313389e80b25f36e891bae", "sha256": "b43aeef782ddeecdc61f9cb979aa65848c9e3a3e811d1d5243f1b61a9246ca3e"}, "downloads": -1, "filename": "plone.app.theming-1.2.10.tar.gz", "has_sig": false, "md5_digest": "6d67295ae9313389e80b25f36e891bae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1198307, "upload_time": "2015-09-08T18:25:18", "upload_time_iso_8601": "2015-09-08T18:25:18.713272Z", "url": "https://files.pythonhosted.org/packages/5d/33/e44d7291b7a43ea32b7f88fddaa45f6e46f4b79de1dbf5a423316c2340ce/plone.app.theming-1.2.10.tar.gz", "yanked": false}], "1.2.11": [{"comment_text": "", "digests": {"md5": "dd57724a0effee2cd892525583896950", "sha256": "4a832e0d8d44bddf92fc6e281b5cd0aacd7703b59d1be7812bedb958e34712bb"}, "downloads": -1, "filename": "plone.app.theming-1.2.11.tar.gz", "has_sig": false, "md5_digest": "dd57724a0effee2cd892525583896950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1198574, "upload_time": "2015-09-11T20:38:43", "upload_time_iso_8601": "2015-09-11T20:38:43.053286Z", "url": "https://files.pythonhosted.org/packages/6e/2c/ff8820537fff8ccc48d7061669d91517d8e670b6ce18ed59c6c1a0b6c69d/plone.app.theming-1.2.11.tar.gz", "yanked": false}], "1.2.12": [{"comment_text": "", "digests": {"md5": "d251052cdfc6036658d264d1afd69a17", "sha256": "e4422c33d88ddc2bce5e2ab52a450cc933c555549735a68b8fa5233d34cfcfd9"}, "downloads": -1, "filename": "plone.app.theming-1.2.12.tar.gz", "has_sig": false, "md5_digest": "d251052cdfc6036658d264d1afd69a17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1028798, "upload_time": "2015-09-15T21:47:46", "upload_time_iso_8601": "2015-09-15T21:47:46.220951Z", "url": "https://files.pythonhosted.org/packages/02/77/8a4e0cf71e6ef0163feca1da3ff8114735a8b454303741df37abac14d3d1/plone.app.theming-1.2.12.tar.gz", "yanked": false}], "1.2.13": [{"comment_text": "", "digests": {"md5": "9a9d35f9466d86a0bb609122d07d9eff", "sha256": "76089d17e4935aabc5985c4e6cc0847c7cb65d6aba84f23c5e0f4c930388f291"}, "downloads": -1, "filename": "plone.app.theming-1.2.13.tar.gz", "has_sig": false, "md5_digest": "9a9d35f9466d86a0bb609122d07d9eff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029124, "upload_time": "2015-09-20T19:16:15", "upload_time_iso_8601": "2015-09-20T19:16:15.732861Z", "url": "https://files.pythonhosted.org/packages/34/2d/6c4a3734ec9714a4cafc9b605f0efd532353482b8ddd58d404935ea0e0a1/plone.app.theming-1.2.13.tar.gz", "yanked": false}], "1.2.14": [{"comment_text": "", "digests": {"md5": "2a6042b62af96abdf8738a42a5722f38", "sha256": "0e17d05165c840161fd8d6622707815e16e00b3d83597a615236d293fdac3200"}, "downloads": -1, "filename": "plone.app.theming-1.2.14.tar.gz", "has_sig": false, "md5_digest": "2a6042b62af96abdf8738a42a5722f38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029121, "upload_time": "2015-09-27T10:05:51", "upload_time_iso_8601": "2015-09-27T10:05:51.929258Z", "url": "https://files.pythonhosted.org/packages/6f/9a/97ca2ed0a25576ad4a491cff5c89d9e8ec8df1d9b685bd1156a79fbe0ec0/plone.app.theming-1.2.14.tar.gz", "yanked": false}], "1.2.15": [{"comment_text": "", "digests": {"md5": "f56429858aad732f8d4831415831c122", "sha256": "04d4a24f9dd09125fe7fbaa5fd3a0ab62426401ac81fe59536905fe89a01a6d0"}, "downloads": -1, "filename": "plone.app.theming-1.2.15.tar.gz", "has_sig": false, "md5_digest": "f56429858aad732f8d4831415831c122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029698, "upload_time": "2015-10-27T23:37:46", "upload_time_iso_8601": "2015-10-27T23:37:46.647376Z", "url": "https://files.pythonhosted.org/packages/ba/d0/a686cf8b98d2c5ac47327e9797233b96357ba546b95ca71e5da909e1b64b/plone.app.theming-1.2.15.tar.gz", "yanked": false}], "1.2.16": [{"comment_text": "", "digests": {"md5": "752ab46c29a32a28df863cb5434a857f", "sha256": "21678015acde598c548d32232b1564e3ea0636e6567c23d35fb9b3f7f4af939e"}, "downloads": -1, "filename": "plone.app.theming-1.2.16.tar.gz", "has_sig": false, "md5_digest": "752ab46c29a32a28df863cb5434a857f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1030019, "upload_time": "2015-11-26T02:27:56", "upload_time_iso_8601": "2015-11-26T02:27:56.581253Z", "url": "https://files.pythonhosted.org/packages/7a/f6/327a2e078cd73286182377cc83bed01e9011bd56d731fa65119b7b39bcc3/plone.app.theming-1.2.16.tar.gz", "yanked": false}], "1.2.17": [{"comment_text": "", "digests": {"md5": "e5de8ebda722567e5cb401bcb3defbae", "sha256": "110c41be0af3c70d6fb53c6f6c69cbd1a1bc06e71b49314254edf7faebc9090c"}, "downloads": -1, "filename": "plone.app.theming-1.2.17.tar.gz", "has_sig": false, "md5_digest": "e5de8ebda722567e5cb401bcb3defbae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1015728, "upload_time": "2016-02-11T18:31:32", "upload_time_iso_8601": "2016-02-11T18:31:32.957347Z", "url": "https://files.pythonhosted.org/packages/f3/de/99051ed8037ca35e97243ec6b04552bdfb2f440502d1f4c546e2a573c478/plone.app.theming-1.2.17.tar.gz", "yanked": false}], "1.2.18": [{"comment_text": "", "digests": {"md5": "0c5e1af690d94fb2f790bb88077efaf6", "sha256": "72d6448348597edcb4dd26a904456eaaa0fb77a08182ed2a6d2d989dcca3a6b0"}, "downloads": -1, "filename": "plone.app.theming-1.2.18.zip", "has_sig": false, "md5_digest": "0c5e1af690d94fb2f790bb88077efaf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1063227, "upload_time": "2016-03-04T02:55:10", "upload_time_iso_8601": "2016-03-04T02:55:10.683579Z", "url": "https://files.pythonhosted.org/packages/80/2a/2c97b0f8e4da259143c40c06cc568c06b4e4ac0110c8c0c0a3f210e71001/plone.app.theming-1.2.18.zip", "yanked": false}], "1.2.19": [{"comment_text": "", "digests": {"md5": "e845939fa1ac614ca2cb252867d8b21a", "sha256": "bdf44835dca5c1699deed61244698d5eed145752153b138053ba347388e0596b"}, "downloads": -1, "filename": "plone.app.theming-1.2.19.tar.gz", "has_sig": false, "md5_digest": "e845939fa1ac614ca2cb252867d8b21a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1016501, "upload_time": "2016-03-31T10:25:36", "upload_time_iso_8601": "2016-03-31T10:25:36.098553Z", "url": "https://files.pythonhosted.org/packages/c5/62/3b269f3d754c4dafb8fb6e59995374100ecf1f4ac99378db163ea41ffe96/plone.app.theming-1.2.19.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "7e8721ef8cc2d9fddd2a19b6d229c54c", "sha256": "6fefff7030972f2a018e1121db390cc5b950a3e7dd6fb0d0ec56151966d4d107"}, "downloads": -1, "filename": "plone.app.theming-1.2.2.zip", "has_sig": false, "md5_digest": "7e8721ef8cc2d9fddd2a19b6d229c54c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1201866, "upload_time": "2015-03-22T08:07:40", "upload_time_iso_8601": "2015-03-22T08:07:40.374471Z", "url": "https://files.pythonhosted.org/packages/83/fc/645de852e4c47d1165940085e7490fe70f1949d1c0257b09c38e2e8c0b97/plone.app.theming-1.2.2.zip", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "9346507ee4b2204c62e2643b00a954fe", "sha256": "8587c18d8b5c94326f0aece7e43bf2507a3f9ef2050f77f6b73880a8a4b3d975"}, "downloads": -1, "filename": "plone.app.theming-1.2.3.tar.gz", "has_sig": false, "md5_digest": "9346507ee4b2204c62e2643b00a954fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1152143, "upload_time": "2015-05-04T17:56:17", "upload_time_iso_8601": "2015-05-04T17:56:17.112248Z", "url": "https://files.pythonhosted.org/packages/46/e9/6f121290ba20a80ad9777d059607b27db5e3690606f45a89be6d1e7c0d6a/plone.app.theming-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "91dc2d34b156675cc108915d5acc40a4", "sha256": "0e2b20aaeb0e11f0cb274a68fde9feb1e879a90719fc34734bce05b616d97433"}, "downloads": -1, "filename": "plone.app.theming-1.2.4.tar.gz", "has_sig": false, "md5_digest": "91dc2d34b156675cc108915d5acc40a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1153110, "upload_time": "2015-05-12T15:45:50", "upload_time_iso_8601": "2015-05-12T15:45:50.018995Z", "url": "https://files.pythonhosted.org/packages/c3/71/bcc6e88e1ff1878c2e6ead7c7349ff2f8088c884d21a133f1abd203313d7/plone.app.theming-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "75c7a8c54d3cb59a5b4958017b68bfb4", "sha256": "82eb863974638e267a231bd4758a20e27e2997d465dc5d4ea5804dcac88c538d"}, "downloads": -1, "filename": "plone.app.theming-1.2.5.tar.gz", "has_sig": false, "md5_digest": "75c7a8c54d3cb59a5b4958017b68bfb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1153519, "upload_time": "2015-05-13T10:05:53", "upload_time_iso_8601": "2015-05-13T10:05:53.102899Z", "url": "https://files.pythonhosted.org/packages/cf/95/491e92e9e5ad40117065a9be007c466a5e6feb05006afc4f6379dd32a9e8/plone.app.theming-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "83ff925f98d73a9067161cedeafbe2b6", "sha256": "7f319e9ae494427d77268a0c137d2b7976c3644f7b53a9f74c8cd52be23d9d23"}, "downloads": -1, "filename": "plone.app.theming-1.2.6.tar.gz", "has_sig": false, "md5_digest": "83ff925f98d73a9067161cedeafbe2b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1156164, "upload_time": "2015-06-05T10:18:57", "upload_time_iso_8601": "2015-06-05T10:18:57.210084Z", "url": "https://files.pythonhosted.org/packages/5c/f5/fb8c7de61d228d8dd5ffef35f7c5439487ff101ec8b37862230193327681/plone.app.theming-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "952a42551508100f68e734168b9ae30b", "sha256": "f4fb70e05b1c70e7c30b4bc3e01902709d07cb8a78851720e3c47f1613b02be0"}, "downloads": -1, "filename": "plone.app.theming-1.2.7.tar.gz", "has_sig": false, "md5_digest": "952a42551508100f68e734168b9ae30b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1192199, "upload_time": "2015-07-18T06:42:47", "upload_time_iso_8601": "2015-07-18T06:42:47.306035Z", "url": "https://files.pythonhosted.org/packages/a4/85/e937649821a38c2e99c38dbeb621ec1c1c00b5b0ed4d6c0ce631841cf327/plone.app.theming-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "20495c6109d2191d7f019e2336af0bfd", "sha256": "04874a3d49d917b681be66c3d748dbd70f9fd5e5b8b35209c021411abff22731"}, "downloads": -1, "filename": "plone.app.theming-1.2.8.tar.gz", "has_sig": false, "md5_digest": "20495c6109d2191d7f019e2336af0bfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1195208, "upload_time": "2015-08-20T13:18:51", "upload_time_iso_8601": "2015-08-20T13:18:51.787047Z", "url": "https://files.pythonhosted.org/packages/ac/2c/e75edbada43b9ead1f5c794d7df2df48b4dfd51393536cdf2516e1795c3e/plone.app.theming-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "d95a618d8b78ce23596ede95f70ac9e6", "sha256": "e267176518beee5549bf99e4fce7253c63a304d4df2d57c23bd195b5217433ae"}, "downloads": -1, "filename": "plone.app.theming-1.2.9.tar.gz", "has_sig": false, "md5_digest": "d95a618d8b78ce23596ede95f70ac9e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1196778, "upload_time": "2015-08-22T04:57:11", "upload_time_iso_8601": "2015-08-22T04:57:11.986186Z", "url": "https://files.pythonhosted.org/packages/32/31/b904137af0208ace0fa8b0d316ece9d8cf4f27055e1c2686f758e94ed135/plone.app.theming-1.2.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "9bd4fea140b7d088c624fea6cc486aaf", "sha256": "41eaa3c00919ad29f3ee3922815528b55a5693c822b2068f9dfc693b709735c1"}, "downloads": -1, "filename": "plone.app.theming-1.3.0.tar.gz", "has_sig": false, "md5_digest": "9bd4fea140b7d088c624fea6cc486aaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017144, "upload_time": "2016-06-07T16:31:01", "upload_time_iso_8601": "2016-06-07T16:31:01.962548Z", "url": "https://files.pythonhosted.org/packages/60/4c/7684b21ad19f15c6d5bb10978930e926046f87f28c4e6815a148c6ebdae6/plone.app.theming-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "c1adde9d115539a719ae83903dbd9083", "sha256": "b44adb0568042591b57d0195222641495cc1d07b987de485fd0397105187b575"}, "downloads": -1, "filename": "plone.app.theming-1.3.1.tar.gz", "has_sig": false, "md5_digest": "c1adde9d115539a719ae83903dbd9083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017281, "upload_time": "2016-09-06T23:44:17", "upload_time_iso_8601": "2016-09-06T23:44:17.081061Z", "url": "https://files.pythonhosted.org/packages/a1/d8/f019d279a314e46b5f83228e6d1530e1e27784c5e8082b2da76a6ffad962/plone.app.theming-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "8546a72b1ffee89d428b6a9e19455e1e", "sha256": "1ffe971d170b2d5c403d0ae36c176054b2bd42be51ca634c6a3cd84b083f70e8"}, "downloads": -1, "filename": "plone.app.theming-1.3.2.tar.gz", "has_sig": false, "md5_digest": "8546a72b1ffee89d428b6a9e19455e1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017553, "upload_time": "2016-09-23T19:06:22", "upload_time_iso_8601": "2016-09-23T19:06:22.230631Z", "url": "https://files.pythonhosted.org/packages/f9/85/1632ac1fd896218df9aad6e00e17f6c611c22f3a296d4043f37f9c3d44db/plone.app.theming-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "8871cd929a6b3b34674e68ff3c1c4480", "sha256": "d6bb228a249bfe0826f8af6f40786b7cea0dd6fdfa322adac7835fcd0a620c0b"}, "downloads": -1, "filename": "plone.app.theming-1.3.3.tar.gz", "has_sig": false, "md5_digest": "8871cd929a6b3b34674e68ff3c1c4480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017003, "upload_time": "2016-12-02T18:59:09", "upload_time_iso_8601": "2016-12-02T18:59:09.799688Z", "url": "https://files.pythonhosted.org/packages/e4/a5/e283dc77d5417cc1d1b11f0fd8f443cd9b173b9ea7d5514012562e37b5ba/plone.app.theming-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "f2156f59611db1b9c73e51bf4c20482f", "sha256": "60fce103f6a7a7b03142789cab0bc2411c17ba718e4970d6a522f913bde0aef0"}, "downloads": -1, "filename": "plone.app.theming-1.3.4.tar.gz", "has_sig": false, "md5_digest": "f2156f59611db1b9c73e51bf4c20482f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017163, "upload_time": "2016-12-30T17:01:00", "upload_time_iso_8601": "2016-12-30T17:01:00.526795Z", "url": "https://files.pythonhosted.org/packages/f4/ea/bd733da9e13fd01e021b62e041ee9a9ec326867450d460e3dba60bd24e0b/plone.app.theming-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "7b8e187311760fd3a2abe4ab11d533a4", "sha256": "76886ca4cc03ac7059fdd52025a254cadff749867104e375e8922f05e857a779"}, "downloads": -1, "filename": "plone.app.theming-1.3.5.tar.gz", "has_sig": false, "md5_digest": "7b8e187311760fd3a2abe4ab11d533a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1012789, "upload_time": "2017-02-12T21:09:50", "upload_time_iso_8601": "2017-02-12T21:09:50.540436Z", "url": "https://files.pythonhosted.org/packages/3e/21/2753a877a093bc7b4fb1083e21fdc24bb79a18d8cbfe15170e2c8f19ee60/plone.app.theming-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "a561e0a40e492e92cd7bc4599e877a1c", "sha256": "a76e0ec0b407accb182e5dd04319723f3d2a071568fac705821e9493df50340a"}, "downloads": -1, "filename": "plone.app.theming-1.3.6.tar.gz", "has_sig": false, "md5_digest": "a561e0a40e492e92cd7bc4599e877a1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1014071, "upload_time": "2017-03-28T09:59:39", "upload_time_iso_8601": "2017-03-28T09:59:39.747307Z", "url": "https://files.pythonhosted.org/packages/9f/79/6d73cd9d2c79d59ae73045890ce62abf82b84e3baf0b839c333f7303a9b3/plone.app.theming-1.3.6.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "8b3f8517f6b22594c8f97d791f167910", "sha256": "55326e8963f1b86fa225b62889c05f186a2a78249fddba78d092d177a0b16477"}, "downloads": -1, "filename": "plone.app.theming-2.0.tar.gz", "has_sig": false, "md5_digest": "8b3f8517f6b22594c8f97d791f167910", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1044280, "upload_time": "2017-05-24T15:32:10", "upload_time_iso_8601": "2017-05-24T15:32:10.002313Z", "url": "https://files.pythonhosted.org/packages/4c/77/741919b9fa3d685145981001c2ae58eb2abe03b4ea99dff9609e098155f1/plone.app.theming-2.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "b5121bf7dad3da4ea2bbe02c927b9107", "sha256": "3609e450e48bb76bcd1d06e74ee93fb11e83d9cab43d3620b69189ae20fe54bc"}, "downloads": -1, "filename": "plone.app.theming-2.0.1.tar.gz", "has_sig": false, "md5_digest": "b5121bf7dad3da4ea2bbe02c927b9107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1044360, "upload_time": "2017-07-03T08:55:34", "upload_time_iso_8601": "2017-07-03T08:55:34.983517Z", "url": "https://files.pythonhosted.org/packages/94/c2/f3003772da5d22a16ebf2aa4ffcf384230a879014861c37f668e4c8fe50c/plone.app.theming-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "c1d9c835e459831036d7b30a7b74e475", "sha256": "dc83c0bba28dc69e35c59c606ca43a808db18f0d64d52df8b584619eb66b5aaf"}, "downloads": -1, "filename": "plone.app.theming-2.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "c1d9c835e459831036d7b30a7b74e475", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1056169, "upload_time": "2018-02-04T18:29:59", "upload_time_iso_8601": "2018-02-04T18:29:59.984924Z", "url": "https://files.pythonhosted.org/packages/09/ad/6df3aa5b8e91322c7921964c6d27abf2db10c162c9d7f04d5e17656270b9/plone.app.theming-2.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "332561a97cdbb9d003124525210a8a8a", "sha256": "21394cff222d2d83cb6d481866912be33a95fb3040ccecf9aeb6716baacddccd"}, "downloads": -1, "filename": "plone.app.theming-2.0.2.tar.gz", "has_sig": false, "md5_digest": "332561a97cdbb9d003124525210a8a8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1043423, "upload_time": "2018-02-04T18:30:03", "upload_time_iso_8601": "2018-02-04T18:30:03.189119Z", "url": "https://files.pythonhosted.org/packages/c2/0a/bf1d8ae61f51f8247322a0c40f2e31a9f2179b9147a4a1f2f1c580ee85b2/plone.app.theming-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "ab947cbc65cb0849e67459844eabcc63", "sha256": "1910d29daa6efdb204567b4d83953e2dfddb13d8a7c5193420bceee7e8926f16"}, "downloads": -1, "filename": "plone.app.theming-2.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "ab947cbc65cb0849e67459844eabcc63", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1056630, "upload_time": "2018-04-04T20:51:39", "upload_time_iso_8601": "2018-04-04T20:51:39.587383Z", "url": "https://files.pythonhosted.org/packages/d1/e5/58ebc7aca3d35a88e8bd44e643ea3822bc4ccc01eaefcc1e0835347af893/plone.app.theming-2.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4f6482eeef3fc6f7591640d2d5f46bd", "sha256": "7d2dded0f44fe68d295b0d19c8506cb40d9c271137f227aa2b7d6c007211fe04"}, "downloads": -1, "filename": "plone.app.theming-2.0.3.tar.gz", "has_sig": false, "md5_digest": "d4f6482eeef3fc6f7591640d2d5f46bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1048555, "upload_time": "2018-04-04T20:51:42", "upload_time_iso_8601": "2018-04-04T20:51:42.765332Z", "url": "https://files.pythonhosted.org/packages/af/36/598c4d87b0c2209ffac7b1246a791c91e38b2d9948644ac551aec8c330b0/plone.app.theming-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "3460b800da461686015fe271dfba0d45", "sha256": "2abb7e8250c4998b903360c31eb3b5dc9b49f5a8986654f88a86195ecd81aed1"}, "downloads": -1, "filename": "plone.app.theming-2.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "3460b800da461686015fe271dfba0d45", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1037145, "upload_time": "2018-06-19T14:09:49", "upload_time_iso_8601": "2018-06-19T14:09:49.150340Z", "url": "https://files.pythonhosted.org/packages/d5/1c/b663c0c514bfdc2f50b9adb40ea74400214978226b1465a8043d4ef528f7/plone.app.theming-2.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463de49d36e77728d29283db6b844b3d", "sha256": "6904bcd37a4ac778019da1b779266246280e13886b414b38402b8da7c0d0bc41"}, "downloads": -1, "filename": "plone.app.theming-2.0.4.tar.gz", "has_sig": false, "md5_digest": "463de49d36e77728d29283db6b844b3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1048934, "upload_time": "2018-06-19T14:09:51", "upload_time_iso_8601": "2018-06-19T14:09:51.961565Z", "url": "https://files.pythonhosted.org/packages/a0/2d/2b0f8689b30d26f0f6b2aba7213ce096946b3a5267358fc0335939d64873/plone.app.theming-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "ff85d2c830fd13e02b97d010aa518f94", "sha256": "ac540a2c564c9f9ae00220e0bd63f006bd83521555dca39ad37fc55744fb2717"}, "downloads": -1, "filename": "plone.app.theming-2.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "ff85d2c830fd13e02b97d010aa518f94", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1058056, "upload_time": "2018-09-29T01:45:43", "upload_time_iso_8601": "2018-09-29T01:45:43.106921Z", "url": "https://files.pythonhosted.org/packages/c4/65/44de58138e8701f94d8dbbf6e3cc22573ed8cf272b19f101b8ddbaf0475f/plone.app.theming-2.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f56f59f74c77a68ec592f55e3a7bb37b", "sha256": "d9af06d4bf864207259b49f37aea7beb7ac9365d215cf3bccb80294c1646e9d9"}, "downloads": -1, "filename": "plone.app.theming-2.0.5.tar.gz", "has_sig": false, "md5_digest": "f56f59f74c77a68ec592f55e3a7bb37b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1068264, "upload_time": "2018-09-29T01:45:46", "upload_time_iso_8601": "2018-09-29T01:45:46.715734Z", "url": "https://files.pythonhosted.org/packages/a6/a1/d7ecd2c2ab49ddaf51191f4b4fd116b7c888e352b0d53a881f2e412e9da3/plone.app.theming-2.0.5.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "9baa95d49d487f1cd454f0faab1b8666", "sha256": "d5f6ab9cd9590935ba41c07fbc34bde79e258718c35115cd8a8c92cd3f5fbd64"}, "downloads": -1, "filename": "plone.app.theming-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9baa95d49d487f1cd454f0faab1b8666", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1058355, "upload_time": "2018-11-02T10:39:24", "upload_time_iso_8601": "2018-11-02T10:39:24.386183Z", "url": "https://files.pythonhosted.org/packages/d1/dd/2b29aa15efc215a948f509c0bf6782ab33a3ece73708e68a58142eb32283/plone.app.theming-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c27011dca65b275c500f18f46e5af73a", "sha256": "3d7aa56e2aa5e9015ee8c0df1fa49f94d9243e1a5c82f5d05d18eb1a91a55792"}, "downloads": -1, "filename": "plone.app.theming-3.0.0.tar.gz", "has_sig": false, "md5_digest": "c27011dca65b275c500f18f46e5af73a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1068631, "upload_time": "2018-11-02T10:39:27", "upload_time_iso_8601": "2018-11-02T10:39:27.954561Z", "url": "https://files.pythonhosted.org/packages/f3/35/e8e7016d95d1d36b1af27ed2a22ea8e0fc55c4fa392a656f972b27d9befd/plone.app.theming-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "53be0d0049f1c6a92c10d90b1713e2d4", "sha256": "4b9f1aa0e40202a738889021b49e6084277e37e883903509ddd602e99e18a803"}, "downloads": -1, "filename": "plone.app.theming-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53be0d0049f1c6a92c10d90b1713e2d4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1058975, "upload_time": "2018-12-11T13:34:12", "upload_time_iso_8601": "2018-12-11T13:34:12.802627Z", "url": "https://files.pythonhosted.org/packages/2c/1c/1198c31259ae8b10a1bd122db6c822d10df5f0b26a0e736299a1aa3da7e3/plone.app.theming-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15ebebf4e253535dc7e49f4912b4c4e5", "sha256": "f87f31d2405122a4ea1e98291c2b8cd4310e65ebdea561ea1d1a43018a431c48"}, "downloads": -1, "filename": "plone.app.theming-3.0.1.tar.gz", "has_sig": false, "md5_digest": "15ebebf4e253535dc7e49f4912b4c4e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1068774, "upload_time": "2018-12-11T13:34:16", "upload_time_iso_8601": "2018-12-11T13:34:16.309743Z", "url": "https://files.pythonhosted.org/packages/5f/6a/5192a78303f215fb4d383ddb48e0a634e7eb1f07f561ee7895f4756bada3/plone.app.theming-3.0.1.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "bf0438cbae7415ed2a71870d65df64f2", "sha256": "8199c2259fff6e32e10605258f46604a1f1870e19b4ad8e5a16dfe88566c5296"}, "downloads": -1, "filename": "plone.app.theming-4.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf0438cbae7415ed2a71870d65df64f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123083, "upload_time": "2019-02-12T23:04:37", "upload_time_iso_8601": "2019-02-12T23:04:37.604370Z", "url": "https://files.pythonhosted.org/packages/54/f3/2dc51e1898e5c31e93ad5a0c736ccf821342f1870104c585f07c0bb769f2/plone.app.theming-4.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ac514bb52148550f3b9ccd39f20acdf", "sha256": "1260c82ab3c26408d77365ca936d5399be8b29aef572bc4bd8ed71a23a60e6e5"}, "downloads": -1, "filename": "plone.app.theming-4.0.0.tar.gz", "has_sig": false, "md5_digest": "9ac514bb52148550f3b9ccd39f20acdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140603, "upload_time": "2019-02-12T23:04:40", "upload_time_iso_8601": "2019-02-12T23:04:40.059553Z", "url": "https://files.pythonhosted.org/packages/e9/0f/b7b9f365173c804e599112b272febbcaedb268e794ca6217436c352ece76/plone.app.theming-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "961a35f7845d8a7d49c5b006a6bb852f", "sha256": "94643a1188c338c8beeb998a558fec1e8e6ece1909d99910f4455ecf995d5bd7"}, "downloads": -1, "filename": "plone.app.theming-4.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "961a35f7845d8a7d49c5b006a6bb852f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123151, "upload_time": "2019-02-14T13:39:19", "upload_time_iso_8601": "2019-02-14T13:39:19.607654Z", "url": "https://files.pythonhosted.org/packages/c2/89/e0570d9c4c5a7d01f9348ee5ff84e9514bec19840fd199ccf267a870f245/plone.app.theming-4.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a883293d36f9cf41cf7cf56217781fa3", "sha256": "db47e35b27843fd67d24fab806c3d8b181d68c9eba6d113c21eb6473233b2d10"}, "downloads": -1, "filename": "plone.app.theming-4.0.1.tar.gz", "has_sig": false, "md5_digest": "a883293d36f9cf41cf7cf56217781fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141882, "upload_time": "2019-02-14T13:39:21", "upload_time_iso_8601": "2019-02-14T13:39:21.941193Z", "url": "https://files.pythonhosted.org/packages/cc/52/63ccbe4946a902f00295604af3dff412da3fbac120d8e9d25b6a7ff1b7e6/plone.app.theming-4.0.1.tar.gz", "yanked": false}], "4.0.2": [{"comment_text": "", "digests": {"md5": "24428314f0ec68e49489e95983611c84", "sha256": "cbac05928bb256e12468b5ad76ed3162f39508f9442c4a288f6d892ecd83adc4"}, "downloads": -1, "filename": "plone.app.theming-4.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "24428314f0ec68e49489e95983611c84", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123242, "upload_time": "2019-09-13T19:29:36", "upload_time_iso_8601": "2019-09-13T19:29:36.321813Z", "url": "https://files.pythonhosted.org/packages/f8/40/407bc7288f55f1de1c2616a1f1687986bd1d49a73261be61368caae30c7a/plone.app.theming-4.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16b2f2f9d708c2c3daf0afc287e2e058", "sha256": "42f4ec7bea1257e8e629c9755141b63ef6e6ed1589dad7372f6b5dd61c33bf49"}, "downloads": -1, "filename": "plone.app.theming-4.0.2.tar.gz", "has_sig": false, "md5_digest": "16b2f2f9d708c2c3daf0afc287e2e058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142496, "upload_time": "2019-09-13T19:29:39", "upload_time_iso_8601": "2019-09-13T19:29:39.735191Z", "url": "https://files.pythonhosted.org/packages/7e/ae/9312882590ccd9e2957e112f7c84e4b9cb828b786a17d102afd19132ceab/plone.app.theming-4.0.2.tar.gz", "yanked": false}], "4.0.3": [{"comment_text": "", "digests": {"md5": "50d7777290f15fbd31e02a71f82a64e6", "sha256": "a062acfc1ffdf0147c857bb19fe97ca710d318c5ca4d80c2f137159eaa1dab02"}, "downloads": -1, "filename": "plone.app.theming-4.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "50d7777290f15fbd31e02a71f82a64e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123290, "upload_time": "2019-10-12T12:54:59", "upload_time_iso_8601": "2019-10-12T12:54:59.978432Z", "url": "https://files.pythonhosted.org/packages/89/72/397c1afbd0f6bd974b415924e45f6f5017887a278d1fda796b739a4289c6/plone.app.theming-4.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e386e3125f5be1957f4942545fcbf74", "sha256": "6222149f38a58abc1252e5269fc1c6a714377dcfc049f93c3c6f5fd304f35990"}, "downloads": -1, "filename": "plone.app.theming-4.0.3.tar.gz", "has_sig": false, "md5_digest": "0e386e3125f5be1957f4942545fcbf74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142324, "upload_time": "2019-10-12T12:55:03", "upload_time_iso_8601": "2019-10-12T12:55:03.039991Z", "url": "https://files.pythonhosted.org/packages/da/fd/8f19a8668fd86e767fc4c9c26dd56c004caa25122d624b31eb8be4145758/plone.app.theming-4.0.3.tar.gz", "yanked": false}], "4.0.4": [{"comment_text": "", "digests": {"md5": "c6521d3a6ad85d30905637b7a06656b7", "sha256": "37e31a4b3a995c70f77e5c00cc3c7f17c4e406bc2a85ec906de857dba77ecfd8"}, "downloads": -1, "filename": "plone.app.theming-4.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6521d3a6ad85d30905637b7a06656b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123321, "upload_time": "2019-12-10T23:09:09", "upload_time_iso_8601": "2019-12-10T23:09:09.179631Z", "url": "https://files.pythonhosted.org/packages/86/61/053d4b060cbbd1ea231c6bd32f6c7948b5223c53ca18eeefc1896f1acb35/plone.app.theming-4.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3a6f99bc0604574673d4ac9770d85c7", "sha256": "f8b562c82dc0d0a1037a3089452e6013273a22652a140860538b26e8a007547e"}, "downloads": -1, "filename": "plone.app.theming-4.0.4.tar.gz", "has_sig": false, "md5_digest": "b3a6f99bc0604574673d4ac9770d85c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142363, "upload_time": "2019-12-10T23:09:12", "upload_time_iso_8601": "2019-12-10T23:09:12.175885Z", "url": "https://files.pythonhosted.org/packages/41/6e/e081afe553c1f84500fc3fccd562272895b560b7990b7bd617728d7114ab/plone.app.theming-4.0.4.tar.gz", "yanked": false}], "4.0.5": [{"comment_text": "", "digests": {"md5": "35ae8e4660bb12ec6ab66ddd649c5ccc", "sha256": "3792bb8abfdbe153fbee96b99d680c661391fd8ac20477179a00dd16093f1c3c"}, "downloads": -1, "filename": "plone.app.theming-4.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35ae8e4660bb12ec6ab66ddd649c5ccc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123324, "upload_time": "2020-03-13T16:10:48", "upload_time_iso_8601": "2020-03-13T16:10:48.672535Z", "url": "https://files.pythonhosted.org/packages/f3/dd/5318b8bf6f1ff3882f01f3277f67cfd1ed4ca34fb647e97113e9da61d555/plone.app.theming-4.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4700df895374b8d7a875dfd5ed862f5c", "sha256": "55d62fe26cb3056ed938a988b12893863d8cf170655628c6a9af21b55899112c"}, "downloads": -1, "filename": "plone.app.theming-4.0.5.tar.gz", "has_sig": false, "md5_digest": "4700df895374b8d7a875dfd5ed862f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142519, "upload_time": "2020-03-13T16:11:05", "upload_time_iso_8601": "2020-03-13T16:11:05.521905Z", "url": "https://files.pythonhosted.org/packages/05/b0/68851c9ada46c6c5589bc664e6b121a5d8ed0498d32c5a5a7f32cdbfc6ed/plone.app.theming-4.0.5.tar.gz", "yanked": false}], "4.0.6": [{"comment_text": "", "digests": {"md5": "124667dea22f1be89d6268826f868ead", "sha256": "f89ef30b5c8fea2b3bddf4849c3fa153547f642d2e5453eca8f731f3a0f5f408"}, "downloads": -1, "filename": "plone.app.theming-4.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "124667dea22f1be89d6268826f868ead", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123355, "upload_time": "2020-04-20T10:53:24", "upload_time_iso_8601": "2020-04-20T10:53:24.179037Z", "url": "https://files.pythonhosted.org/packages/ae/58/e8ccc8e194aa4c723b19f5830c7f86bcc068d9cd36816ce322166a93aeea/plone.app.theming-4.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29c327b70d450dc0814fc8cc8471ca0a", "sha256": "4eff4631518e52396a863e4c0513bf8a758615511db04fb3852cbef15a6e4f97"}, "downloads": -1, "filename": "plone.app.theming-4.0.6.tar.gz", "has_sig": false, "md5_digest": "29c327b70d450dc0814fc8cc8471ca0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139758, "upload_time": "2020-04-20T10:53:26", "upload_time_iso_8601": "2020-04-20T10:53:26.688128Z", "url": "https://files.pythonhosted.org/packages/9b/32/b7e1ab07c036c9edb017effb41d19a259910b58946fc9a96627c830ca373/plone.app.theming-4.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "124667dea22f1be89d6268826f868ead", "sha256": "f89ef30b5c8fea2b3bddf4849c3fa153547f642d2e5453eca8f731f3a0f5f408"}, "downloads": -1, "filename": "plone.app.theming-4.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "124667dea22f1be89d6268826f868ead", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 123355, "upload_time": "2020-04-20T10:53:24", "upload_time_iso_8601": "2020-04-20T10:53:24.179037Z", "url": "https://files.pythonhosted.org/packages/ae/58/e8ccc8e194aa4c723b19f5830c7f86bcc068d9cd36816ce322166a93aeea/plone.app.theming-4.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29c327b70d450dc0814fc8cc8471ca0a", "sha256": "4eff4631518e52396a863e4c0513bf8a758615511db04fb3852cbef15a6e4f97"}, "downloads": -1, "filename": "plone.app.theming-4.0.6.tar.gz", "has_sig": false, "md5_digest": "29c327b70d450dc0814fc8cc8471ca0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139758, "upload_time": "2020-04-20T10:53:26", "upload_time_iso_8601": "2020-04-20T10:53:26.688128Z", "url": "https://files.pythonhosted.org/packages/9b/32/b7e1ab07c036c9edb017effb41d19a259910b58946fc9a96627c830ca373/plone.app.theming-4.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:07 2020"}