{"info": {"author": "Strata Tech Ltd. ( http://stratatech.ru )", "author_email": "info@stratatech.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Natural Language :: Russian", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==================\nPYTHON VDX PACKAGE\n==================\n\n1. Install\n----------\n\n::\n\n    pip install python_vdx\n\n2. Workspace creation\n---------------------\n\n::\n\n    from vdx.diagramm import Diagramm\n    from vdx.shapes import Point\n\n    dia = Diagramm(top=Point(1, 11))\n\n\nNote: Point (1, 11) is default point. It points to the upper left corner\nof visio page. Also, you should remember that all objects craeted on the\ndiagramm placed in accordance with the point. So, Shape(startPoint=Point(2, 0))\nwill be places at Point(3, 11).   \n\n3. Adding element on the diagramm\n---------------------------------\n\n::\n\n    ...\n    from vdx.shapes import EPCFunction  # EPCFunction is function object in ECP diagramm\n\n\n    ## Add several \"EPCFunction\" objects with the same coordinates\n    dia.append_shape(EPCFunction())\n    dia.append_shape(EPCFunction())\n    dia.append_shape(EPCFunction())\n    dia.append_shape(EPCFunction())\n\n4. Save the diagramm to a file.\n-------------------------------\n\n::\n\n    ....\n\n    dia.save('some_path_to_save.vdx')\n\n\nSupported objects (at the moment only EPC objects are supported)\n----------------------------------------------------------------\n\n- Function (EPC)\n- Event (EPC)\n-  Organization Unit (EPC)\n-  Information Material (EPC)\n-  Main process (EPC)\n-  Component (EPC)\n-  Enterprise area (EPC)\n-  Process group\n-  XOR (EPC)\n-  OR (EPC)\n-  AND (EPC)\n-  Dynamic connector (EPC)\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gitlab.stratatech.ru/public/projects/python_vdx/python_vdx", "keywords": "VDX, Visio", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "python_vdx", "package_url": "https://pypi.org/project/python_vdx/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python_vdx/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://gitlab.stratatech.ru/public/projects/python_vdx/python_vdx"}, "release_url": "https://pypi.org/project/python_vdx/0.1/", "requires_dist": null, "requires_python": null, "summary": "Package for work with MS Visio VDX files", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install\">\n<h2>1. Install</h2>\n<pre>pip install python_vdx\n</pre>\n</div>\n<div id=\"workspace-creation\">\n<h2>2. Workspace creation</h2>\n<pre>from vdx.diagramm import Diagramm\nfrom vdx.shapes import Point\n\ndia = Diagramm(top=Point(1, 11))\n</pre>\n<p>Note: Point (1, 11) is default point. It points to the upper left corner\nof visio page. Also, you should remember that all objects craeted on the\ndiagramm placed in accordance with the point. So, Shape(startPoint=Point(2, 0))\nwill be places at Point(3, 11).</p>\n</div>\n<div id=\"adding-element-on-the-diagramm\">\n<h2>3. Adding element on the diagramm</h2>\n<pre>...\nfrom vdx.shapes import EPCFunction  # EPCFunction is function object in ECP diagramm\n\n\n## Add several \"EPCFunction\" objects with the same coordinates\ndia.append_shape(EPCFunction())\ndia.append_shape(EPCFunction())\ndia.append_shape(EPCFunction())\ndia.append_shape(EPCFunction())\n</pre>\n</div>\n<div id=\"save-the-diagramm-to-a-file\">\n<h2>4. Save the diagramm to a file.</h2>\n<pre>....\n\ndia.save('some_path_to_save.vdx')\n</pre>\n</div>\n<div id=\"supported-objects-at-the-moment-only-epc-objects-are-supported\">\n<h2>Supported objects (at the moment only EPC objects are supported)</h2>\n<ul>\n<li>Function (EPC)</li>\n<li>Event (EPC)</li>\n<li>Organization Unit (EPC)</li>\n<li>Information Material (EPC)</li>\n<li>Main process (EPC)</li>\n<li>Component (EPC)</li>\n<li>Enterprise area (EPC)</li>\n<li>Process group</li>\n<li>XOR (EPC)</li>\n<li>OR (EPC)</li>\n<li>AND (EPC)</li>\n<li>Dynamic connector (EPC)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 877800, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1228ab970d134b77edae49ca889311f6", "sha256": "574e9987a7e0913aa49f44c13e3be2db572529d8a1e902e02c825500881b2336"}, "downloads": -1, "filename": "python_vdx-0.1.tar.gz", "has_sig": false, "md5_digest": "1228ab970d134b77edae49ca889311f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31622, "upload_time": "2013-10-01T12:37:06", "upload_time_iso_8601": "2013-10-01T12:37:06.299749Z", "url": "https://files.pythonhosted.org/packages/a9/fa/a68376db183f71c99b358c1e57eaf5a2cc95f1f941f829094539e0921275/python_vdx-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1228ab970d134b77edae49ca889311f6", "sha256": "574e9987a7e0913aa49f44c13e3be2db572529d8a1e902e02c825500881b2336"}, "downloads": -1, "filename": "python_vdx-0.1.tar.gz", "has_sig": false, "md5_digest": "1228ab970d134b77edae49ca889311f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31622, "upload_time": "2013-10-01T12:37:06", "upload_time_iso_8601": "2013-10-01T12:37:06.299749Z", "url": "https://files.pythonhosted.org/packages/a9/fa/a68376db183f71c99b358c1e57eaf5a2cc95f1f941f829094539e0921275/python_vdx-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:44 2020"}