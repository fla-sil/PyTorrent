{"info": {"author": "Christos Lytras", "author_email": "christos.lytras@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Greek TIN/AFM Validator and Generator\n\n[![Linux Build Status](https://img.shields.io/travis/clytras/afm-python.svg?style=flat)](https://travis-ci.org/clytras/afm-python.svg?branch=master)\n\n\nValidate and generate Greek TIN (*Tax Identification Number*) / AFM (*\u0391\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03a6\u03bf\u03c1\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u039c\u03b7\u03c4\u03c1\u03ce\u03bf\u03c5*). Generation function can create valid or invalid numbers including parameters for old format, individuals, legal entities and repet tolerance digits control.\n\n## Online demo and presentation\n\nhttps://lytrax.io/blog/projects/greek-tin-validator-generator\n\n## Installation\n\n```\npip install lytrax-afm\n```\n\n## Usage\n\nImport functions:\n\n```python\nfrom lytrax_afm import validateAFM, \\\n    generateAFM, \\\n    generateValidAFM, \\\n    generateInvalidAFM\n```\n\nValidate a number:\n\n```python\n>>> validate_afm(\"090000045\")\nTrue\n\n>>> validate_afm(\"123456789\")\nFalse\n```\n\nGenerate a valid number:\n\n```python\n>>> generate_valid_afm()\n'731385437'\n```\n\nGenerate an invalid number:\n\n```python\n>>> generate_invalid_afm()\n'853003357'\n```\n\n## API\n\n**validate_afm**\n* `afm: str` - A string to be check if it's a valid AFM\n* `extended_result: bool, optional` - Return extended object result if True, single boolean otherwise (default is False)\n* **Returns**: `str` or `dict` (Dictionary with `'valid': boolean` and `'error': str ('length' or 'nan' or 'zero' or 'invalid')`)\n\nExample:\n```python\n>>> validate_afm(\"ab1234\", extended_result=True)\n{'valid': False, 'error': 'length'}\n```\n\n**generate_afm**\n* `force_first_digit: int, optional` - If specified, overrides all pre99, legalEntity and individual (default is None)\n* `pre99: bool, optional` - \u0393\u03b9\u03b1 \u0391\u03a6\u039c \u03c0\u03c1\u03b9\u03bd \u03b1\u03c0\u03cc 1/1/1999 (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 0),\n  (if True, overrides both legal_entity and individual)\n  (default is False)\n* `individual: bool, optional` - \u03a6\u03c5\u03c3\u03b9\u03ba\u03ac \u03c0\u03c1\u03cc\u03c3\u03c9\u03c0\u03b1, (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 1-4) (default is False)\n* `legal_entity: bool, optional` - \u039d\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 7-9) (default is False)\n* `repeat_tolerance : int, optional` - Number for max repeat tolerance\n  (0 for no repeats, unspecified for no check)\n  (default is None)\n* `valid: bool, optional` - Generate valid or invalid AFM (default is True)\n* **Returns**: `str` - A valid or invalid 9 digit AFM number\n\nExample:\n```python\n>>> generate_afm(force_first_digit=3, repeat_tolerance=1, valid=True)\n'335151580'\n```\n\n**generate_valid_afm** - Same as `generate_afm` with `valid` parameter force and override to `True`\n* **Returns**: `str` - A valid 9 digit AFM number\n\nExample:\n```python\n>>> generate_valid_afm(pre99=True)\n'013583460'\n```\n\n**generate_invalid_afm** - Same as `generate_afm` with `valid` parameter force and override to `False`\n* **Returns**: `str` - An invalid 9 digit AFM number\n\nExample:\n```python\n>>> generate_invalid_afm(legal_entity=True)\n'780300643'\n```\n\n## Test\n\nClone this repository, run test:\n\n```\ngit clone https://github.com/clytras/afm-python.git && cd afm-python\npython -m unittest discover -s './test' -v\n```\n\n## Changelog\n\nSee [CHANGELOG](https://github.com/clytras/afm-python/blob/master/CHANGELOG.md)\n\n\n## License\n\nMIT License - see the [LICENSE](https://github.com/clytras/afm-python/blob/master/LICENSE) file for details\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/clytras/afm-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lytrax-afm", "package_url": "https://pypi.org/project/lytrax-afm/", "platform": "", "project_url": "https://pypi.org/project/lytrax-afm/", "project_urls": {"Homepage": "https://github.com/clytras/afm-python"}, "release_url": "https://pypi.org/project/lytrax-afm/1.0.1/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Greek AFM (TIN) Validator and Generator", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Greek TIN/AFM Validator and Generator</h1>\n<p><a href=\"https://travis-ci.org/clytras/afm-python.svg?branch=master\" rel=\"nofollow\"><img alt=\"Linux Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebd818c5737ca19d168cd52ef3dd8246fcb18958/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636c79747261732f61666d2d707974686f6e2e7376673f7374796c653d666c6174\"></a></p>\n<p>Validate and generate Greek TIN (<em>Tax Identification Number</em>) / AFM (<em>\u0391\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03a6\u03bf\u03c1\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u039c\u03b7\u03c4\u03c1\u03ce\u03bf\u03c5</em>). Generation function can create valid or invalid numbers including parameters for old format, individuals, legal entities and repet tolerance digits control.</p>\n<h2>Online demo and presentation</h2>\n<p><a href=\"https://lytrax.io/blog/projects/greek-tin-validator-generator\" rel=\"nofollow\">https://lytrax.io/blog/projects/greek-tin-validator-generator</a></p>\n<h2>Installation</h2>\n<pre><code>pip install lytrax-afm\n</code></pre>\n<h2>Usage</h2>\n<p>Import functions:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lytrax_afm</span> <span class=\"kn\">import</span> <span class=\"n\">validateAFM</span><span class=\"p\">,</span> \\\n    <span class=\"n\">generateAFM</span><span class=\"p\">,</span> \\\n    <span class=\"n\">generateValidAFM</span><span class=\"p\">,</span> \\\n    <span class=\"n\">generateInvalidAFM</span>\n</pre>\n<p>Validate a number:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate_afm</span><span class=\"p\">(</span><span class=\"s2\">\"090000045\"</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate_afm</span><span class=\"p\">(</span><span class=\"s2\">\"123456789\"</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n</pre>\n<p>Generate a valid number:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">generate_valid_afm</span><span class=\"p\">()</span>\n<span class=\"s1\">'731385437'</span>\n</pre>\n<p>Generate an invalid number:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">generate_invalid_afm</span><span class=\"p\">()</span>\n<span class=\"s1\">'853003357'</span>\n</pre>\n<h2>API</h2>\n<p><strong>validate_afm</strong></p>\n<ul>\n<li><code>afm: str</code> - A string to be check if it's a valid AFM</li>\n<li><code>extended_result: bool, optional</code> - Return extended object result if True, single boolean otherwise (default is False)</li>\n<li><strong>Returns</strong>: <code>str</code> or <code>dict</code> (Dictionary with <code>'valid': boolean</code> and <code>'error': str ('length' or 'nan' or 'zero' or 'invalid')</code>)</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate_afm</span><span class=\"p\">(</span><span class=\"s2\">\"ab1234\"</span><span class=\"p\">,</span> <span class=\"n\">extended_result</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'valid'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'error'</span><span class=\"p\">:</span> <span class=\"s1\">'length'</span><span class=\"p\">}</span>\n</pre>\n<p><strong>generate_afm</strong></p>\n<ul>\n<li><code>force_first_digit: int, optional</code> - If specified, overrides all pre99, legalEntity and individual (default is None)</li>\n<li><code>pre99: bool, optional</code> - \u0393\u03b9\u03b1 \u0391\u03a6\u039c \u03c0\u03c1\u03b9\u03bd \u03b1\u03c0\u03cc 1/1/1999 (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 0),\n(if True, overrides both legal_entity and individual)\n(default is False)</li>\n<li><code>individual: bool, optional</code> - \u03a6\u03c5\u03c3\u03b9\u03ba\u03ac \u03c0\u03c1\u03cc\u03c3\u03c9\u03c0\u03b1, (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 1-4) (default is False)</li>\n<li><code>legal_entity: bool, optional</code> - \u039d\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 (\u03be\u03b5\u03ba\u03b9\u03bd\u03ac\u03b5\u03b9 \u03bc\u03b5 7-9) (default is False)</li>\n<li><code>repeat_tolerance : int, optional</code> - Number for max repeat tolerance\n(0 for no repeats, unspecified for no check)\n(default is None)</li>\n<li><code>valid: bool, optional</code> - Generate valid or invalid AFM (default is True)</li>\n<li><strong>Returns</strong>: <code>str</code> - A valid or invalid 9 digit AFM number</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">generate_afm</span><span class=\"p\">(</span><span class=\"n\">force_first_digit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">repeat_tolerance</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">valid</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"s1\">'335151580'</span>\n</pre>\n<p><strong>generate_valid_afm</strong> - Same as <code>generate_afm</code> with <code>valid</code> parameter force and override to <code>True</code></p>\n<ul>\n<li><strong>Returns</strong>: <code>str</code> - A valid 9 digit AFM number</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">generate_valid_afm</span><span class=\"p\">(</span><span class=\"n\">pre99</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"s1\">'013583460'</span>\n</pre>\n<p><strong>generate_invalid_afm</strong> - Same as <code>generate_afm</code> with <code>valid</code> parameter force and override to <code>False</code></p>\n<ul>\n<li><strong>Returns</strong>: <code>str</code> - An invalid 9 digit AFM number</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">generate_invalid_afm</span><span class=\"p\">(</span><span class=\"n\">legal_entity</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"s1\">'780300643'</span>\n</pre>\n<h2>Test</h2>\n<p>Clone this repository, run test:</p>\n<pre><code>git clone https://github.com/clytras/afm-python.git &amp;&amp; cd afm-python\npython -m unittest discover -s './test' -v\n</code></pre>\n<h2>Changelog</h2>\n<p>See <a href=\"https://github.com/clytras/afm-python/blob/master/CHANGELOG.md\" rel=\"nofollow\">CHANGELOG</a></p>\n<h2>License</h2>\n<p>MIT License - see the <a href=\"https://github.com/clytras/afm-python/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n\n          </div>"}, "last_serial": 6388618, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0a904b25d3cf9b38dc195f6456818a0e", "sha256": "7006d206d9401629982df73c1d50da01e58f13e18609fbb5feded12bbcfc0db5"}, "downloads": -1, "filename": "lytrax_afm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a904b25d3cf9b38dc195f6456818a0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6173, "upload_time": "2020-01-02T22:45:35", "upload_time_iso_8601": "2020-01-02T22:45:35.045534Z", "url": "https://files.pythonhosted.org/packages/09/d9/de9e929eec3741fa36c7142e76926e5753c5b3cd4d1eb124c498dc2c126c/lytrax_afm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6acbd5e24cd8a19404631d59dde29a53", "sha256": "e0e27ca409573f5a12b07dc2f82c7fed4ba909a1c331d66f3543c5e2ca8e8ad2"}, "downloads": -1, "filename": "lytrax_afm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6acbd5e24cd8a19404631d59dde29a53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4578, "upload_time": "2020-01-02T22:45:37", "upload_time_iso_8601": "2020-01-02T22:45:37.466067Z", "url": "https://files.pythonhosted.org/packages/16/8c/7473abee9e7f4b830e2403dd7fe568791aa629be1a60704afe1606ccc498/lytrax_afm-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "33fbd539a60d7d39e5c257011156aea7", "sha256": "875d022edaacf2ade094837bc69321621a4b8cd4af5abf02ede940f4e49807e1"}, "downloads": -1, "filename": "lytrax_afm-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33fbd539a60d7d39e5c257011156aea7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6175, "upload_time": "2020-01-02T22:53:07", "upload_time_iso_8601": "2020-01-02T22:53:07.541428Z", "url": "https://files.pythonhosted.org/packages/78/a6/c70cf81eabf61328df00b2fbb76e17863a653c6634d8f60c6d6181e5532b/lytrax_afm-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3d5d1012b2199a5ade7220a71dd7ef7", "sha256": "221239e6cf4809a4304e2da0726069fbc42dd6dea170e9c1b61c37c061f6d7e4"}, "downloads": -1, "filename": "lytrax_afm-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f3d5d1012b2199a5ade7220a71dd7ef7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4584, "upload_time": "2020-01-02T22:53:09", "upload_time_iso_8601": "2020-01-02T22:53:09.433449Z", "url": "https://files.pythonhosted.org/packages/ed/8a/0c9c7b285ea324656e3dd756c0600fc75c00bb54f9fb3aa5ee0c1bbd8a79/lytrax_afm-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "33fbd539a60d7d39e5c257011156aea7", "sha256": "875d022edaacf2ade094837bc69321621a4b8cd4af5abf02ede940f4e49807e1"}, "downloads": -1, "filename": "lytrax_afm-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33fbd539a60d7d39e5c257011156aea7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6175, "upload_time": "2020-01-02T22:53:07", "upload_time_iso_8601": "2020-01-02T22:53:07.541428Z", "url": "https://files.pythonhosted.org/packages/78/a6/c70cf81eabf61328df00b2fbb76e17863a653c6634d8f60c6d6181e5532b/lytrax_afm-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3d5d1012b2199a5ade7220a71dd7ef7", "sha256": "221239e6cf4809a4304e2da0726069fbc42dd6dea170e9c1b61c37c061f6d7e4"}, "downloads": -1, "filename": "lytrax_afm-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f3d5d1012b2199a5ade7220a71dd7ef7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4584, "upload_time": "2020-01-02T22:53:09", "upload_time_iso_8601": "2020-01-02T22:53:09.433449Z", "url": "https://files.pythonhosted.org/packages/ed/8a/0c9c7b285ea324656e3dd756c0600fc75c00bb54f9fb3aa5ee0c1bbd8a79/lytrax_afm-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:41 2020"}