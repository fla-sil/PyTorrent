{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "# Django Version Viewer\n[![Build Status](https://travis-ci.org/ImaginaryLandscape/django-version-viewer.svg?branch=master)](https://travis-ci.org/ImaginaryLandscape/django-version-viewer)\n\n\nVersion Viewer provides Django Admins (with appropriate permission)\nthe ability to view the Python packages and versions used within the project.\n\nThis tool can be used in several ways. It provides:\n\n - a template tag which inserts a link onto a template.\n   Clicking that link opens up a pop up modal displaying installed\n   Python packages.\n - a DjangoCMS toolbar entry. When clicked, a popup will display installed\n   Python packages.\n - a CSV export of installed Python packages.\n - a queryable endpoint that displays installed Python packages.\n\nYou may also configure which users have access to the link and endpoint.\n\nSee .travis.yml for supported versions of Python and Django.\n\n---------------------------------------\n## Installation\n---------------------------------------\n\nTo install the Django Version Viewer, simply:\n\n    pip install django_version_viewer\n\nAdd the following to `INSTALLED_APPS` in `settings.py`\n\n    INSTALLED_APPS = [\n        'django_version_viewer'\n    ]\n\n## Add django_version_viewer urls and extend `admin/index.html`\n\n\nDjango Version Viewer needs to extend the `admin/index.html` and append it's urls to your `urls.py`. In your `urls.py` add:\n\n    admin.site.index_template = 'admin/custom_index.html'\n    admin.autodiscover()\n\n    urlpatterns = [\n        ...\n        url(r'^django_version_viewer/', include('django_version_viewer.urls')),\n        ...\n    ]\n\n    # Note that you can now make a GET request to the route `r'^django_version_viewer/'` to see\n    # a list of your app's installed pip dependencies returned in JSON.\n\nIn your `templates/admin/` dir, create a `custom_index.html`.\n\n    <!-- custom_index.html -->\n    {% extends \"admin/index.html\" %}\n\n    {% load i18n admin_static pip_version_viewer_tags %}\n\n    {% block content %}\n    {% show_pip_package_versions %}\n    {{ block.super }}\n    {% endblock %}\n\n![Admin Integration](/images/version-viewer-admin-integration.jpg \"Admin Integration\")\n\n\n## Django CMS integration\n\nIf Django CMS is installed, a new menu item will be added to the CMS Toolbar\nPage Menu that will allow opening the version viewer popup.\n\n\n![CMS Integration](/images/version-viewer-cms-integration.jpg \"CMS Integration\")\n\n## Permissions\n\nYou can set your own access permissions on the template tag and route by\ndefining your own `Accessor` class. This class must have a `allow_access`\nmethod that returns a `boolean`. By defualt, django_version_viewer only\nallows superusers access to the route and template tag.\n\n    # Django Version Viewer settings:\n    ACCESSOR_CLASS_PATH = 'mypathto.my.AccessorClass'\n\n    # the default class only allows superusers access\n    django_version_viewer.mixins.SuperuserAccessor\n\n\n## Running Tests\n\n    # in a virtualenv\n    pip install -e .[testing]\n    pip install django==1.8\n    flake8 .\n    ENABLE_DJANGOCMS=False coverage run ./example18/manage.py test django_version_viewer\n\n\n## Using the Example Project\n\nAn example project is provided to demonstrate the project.\n\n    # in a virtualenv\n    cd example18/\n    pip install -r requirements.txt\n    ./manage.py migrate\n    ./manage.py createsuperuser\n    ./manage.py runserver\n\n    # Run without DjangoCMS\n    ENABLE_DJANGOCMS=False ./manage.py runserver", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ImaginaryLandscape/django-version-viewer", "keywords": "django python version pip", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django_version_viewer", "package_url": "https://pypi.org/project/django_version_viewer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_version_viewer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ImaginaryLandscape/django-version-viewer"}, "release_url": "https://pypi.org/project/django_version_viewer/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Django app for viewing pip packages and their versions", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Django Version Viewer<br>[![Build Status](https://travis-ci.org/ImaginaryLandscape/django-version-viewer.svg?branch=master)](https://travis-ci.org/ImaginaryLandscape/django-version-viewer)<br><br><br>Version Viewer provides Django Admins (with appropriate permission)<br>the ability to view the Python packages and versions used within the project.<br><br>This tool can be used in several ways. It provides:<br><br> - a template tag which inserts a link onto a template.<br>   Clicking that link opens up a pop up modal displaying installed<br>   Python packages.<br> - a DjangoCMS toolbar entry. When clicked, a popup will display installed<br>   Python packages.<br> - a CSV export of installed Python packages.<br> - a queryable endpoint that displays installed Python packages.<br><br>You may also configure which users have access to the link and endpoint.<br><br>See .travis.yml for supported versions of Python and Django.<br><br>---------------------------------------<br>## Installation<br>---------------------------------------<br><br>To install the Django Version Viewer, simply:<br><br>    pip install django_version_viewer<br><br>Add the following to `INSTALLED_APPS` in `settings.py`<br><br>    INSTALLED_APPS = [<br>        'django_version_viewer'<br>    ]<br><br>## Add django_version_viewer urls and extend `admin/index.html`<br><br><br>Django Version Viewer needs to extend the `admin/index.html` and append it's urls to your `urls.py`. In your `urls.py` add:<br><br>    admin.site.index_template = 'admin/custom_index.html'<br>    admin.autodiscover()<br><br>    urlpatterns = [<br>        ...<br>        url(r'^django_version_viewer/', include('django_version_viewer.urls')),<br>        ...<br>    ]<br><br>    # Note that you can now make a GET request to the route `r'^django_version_viewer/'` to see<br>    # a list of your app's installed pip dependencies returned in JSON.<br><br>In your `templates/admin/` dir, create a `custom_index.html`.<br><br>    &lt;!-- custom_index.html --&gt;<br>    {% extends \"admin/index.html\" %}<br><br>    {% load i18n admin_static pip_version_viewer_tags %}<br><br>    {% block content %}<br>    {% show_pip_package_versions %}<br>    {{ block.super }}<br>    {% endblock %}<br><br>![Admin Integration](/images/version-viewer-admin-integration.jpg \"Admin Integration\")<br><br><br>## Django CMS integration<br><br>If Django CMS is installed, a new menu item will be added to the CMS Toolbar<br>Page Menu that will allow opening the version viewer popup.<br><br><br>![CMS Integration](/images/version-viewer-cms-integration.jpg \"CMS Integration\")<br><br>## Permissions<br><br>You can set your own access permissions on the template tag and route by<br>defining your own `Accessor` class. This class must have a `allow_access`<br>method that returns a `boolean`. By defualt, django_version_viewer only<br>allows superusers access to the route and template tag.<br><br>    # Django Version Viewer settings:<br>    ACCESSOR_CLASS_PATH = 'mypathto.my.AccessorClass'<br><br>    # the default class only allows superusers access<br>    django_version_viewer.mixins.SuperuserAccessor<br><br><br>## Running Tests<br><br>    # in a virtualenv<br>    pip install -e .[testing]<br>    pip install django==1.8<br>    flake8 .<br>    ENABLE_DJANGOCMS=False coverage run ./example18/manage.py test django_version_viewer<br><br><br>## Using the Example Project<br><br>An example project is provided to demonstrate the project.<br><br>    # in a virtualenv<br>    cd example18/<br>    pip install -r requirements.txt<br>    ./manage.py migrate<br>    ./manage.py createsuperuser<br>    ./manage.py runserver<br><br>    # Run without DjangoCMS<br>    ENABLE_DJANGOCMS=False ./manage.py runserver\n          </div>"}, "last_serial": 2875893, "releases": {"0.0.1a10": [{"comment_text": "", "digests": {"md5": "c72084a1ee21d981028de4cfe0600c57", "sha256": "c9b88fcd83d17e43b617f6ba82e7f0d4fb9484f9cdf8713fbfdfda24a954fced"}, "downloads": -1, "filename": "django_version_viewer-0.0.1a10.tar.gz", "has_sig": false, "md5_digest": "c72084a1ee21d981028de4cfe0600c57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8145, "upload_time": "2017-05-11T18:36:01", "upload_time_iso_8601": "2017-05-11T18:36:01.534845Z", "url": "https://files.pythonhosted.org/packages/59/c6/2c331f9f96d470b7b67ceae2db40dff0106e44d6386d79e5cf61ce493e02/django_version_viewer-0.0.1a10.tar.gz", "yanked": false}], "0.0.1a9": [{"comment_text": "", "digests": {"md5": "27877e84afe2300901498f9407294039", "sha256": "2bcfd15b949fc661ea86735560ad82a2b1a7d7e958ccd271832d9541e165522f"}, "downloads": -1, "filename": "django_version_viewer-0.0.1a9.tar.gz", "has_sig": false, "md5_digest": "27877e84afe2300901498f9407294039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8121, "upload_time": "2017-05-11T18:26:52", "upload_time_iso_8601": "2017-05-11T18:26:52.281262Z", "url": "https://files.pythonhosted.org/packages/75/38/205986a710f3a009759c7a17b89bb23cf06643efee5254d7decc5e5823ff/django_version_viewer-0.0.1a9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "2e6c6dc1f5a8fe5330c292a916fc87da", "sha256": "9c7b4771219654902a44a81533e8b181e55ac3eef127d5b030904b38b19a949d"}, "downloads": -1, "filename": "django_version_viewer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2e6c6dc1f5a8fe5330c292a916fc87da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8141, "upload_time": "2017-05-11T18:48:02", "upload_time_iso_8601": "2017-05-11T18:48:02.406058Z", "url": "https://files.pythonhosted.org/packages/2a/34/0265a6047a22f35a4c2171923926ac6d021bb6702bdd1d15c714e28d7adf/django_version_viewer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "712f5dcb6c0a883b7463a9a7955d0097", "sha256": "9d74b2c35f4a1553a1fb9d931f6ad4ec0d2f71e057eb3cf3e3575fe867e8eb0b"}, "downloads": -1, "filename": "django_version_viewer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "712f5dcb6c0a883b7463a9a7955d0097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8153, "upload_time": "2017-05-15T16:32:05", "upload_time_iso_8601": "2017-05-15T16:32:05.529096Z", "url": "https://files.pythonhosted.org/packages/60/ac/dd8d04b3dd532d4d57de74ccc15296a3d2c4fa79095c00c19bdfa77aa17d/django_version_viewer-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "712f5dcb6c0a883b7463a9a7955d0097", "sha256": "9d74b2c35f4a1553a1fb9d931f6ad4ec0d2f71e057eb3cf3e3575fe867e8eb0b"}, "downloads": -1, "filename": "django_version_viewer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "712f5dcb6c0a883b7463a9a7955d0097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8153, "upload_time": "2017-05-15T16:32:05", "upload_time_iso_8601": "2017-05-15T16:32:05.529096Z", "url": "https://files.pythonhosted.org/packages/60/ac/dd8d04b3dd532d4d57de74ccc15296a3d2c4fa79095c00c19bdfa77aa17d/django_version_viewer-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:02 2020"}