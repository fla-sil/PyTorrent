{"info": {"author": "Marcell Vazquez-Chanlatte", "author_email": "mvc@linux.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "Past MTL Monitors\n=================\nA library for creating past metric temporal logic monitors.\n\n[![Build Status](https://cloud.drone.io/api/badges/mvcisback/past-mtl-monitors/status.svg)](https://cloud.drone.io/mvcisback/past-mtl-monitors)\n[![Documentation Status](https://readthedocs.org/projects/past-mtl-monitors/badge/?version=latest)](https://past-mtl-monitors.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/mvcisback/past-mtl-monitors/branch/master/graph/badge.svg)](https://codecov.io/gh/mvcisback/past-mtl-monitors)\n[![PyPI version](https://badge.fury.io/py/past-mtl-monitors.svg)](https://badge.fury.io/py/past-mtl-monitors)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n- [Past MTL Monitors](#past-mtl-monitors)\n- [Installation](#installation)\n- [Usage](#usage)\n\n<!-- markdown-toc end -->\n\n\n# Installation\n\nIf you just need to use `past-mtl-monitors`, you can just run:\n\n`$ pip install past-mtl-monitors`\n\nFor developers, note that this project uses the\n[poetry](https://poetry.eustace.io/) python package/dependency\nmanagement tool. Please familarize yourself with it and then\nrun:\n\n`$ poetry install`\n\n# Usage\n\nThe primary entry point to the `past-mtl-monitors` package is the\n`atom` function. This exposes a monitor factory which can be combined\nwith other monitor factories to create complex property monitors.\n\nUnder the hood, these monitor factories are just wrappers around\npython coroutines that expect a `(time, val)` pair, where time is a\n`float` and `val` is a mapping from strings to robustness values\n(`float`).\n\n**Note** `past-mtl-monitors` only implements a quantitative semantics\nwhere a value greater than 0 implies sat and a value less than 0\nimplies unsat.\n\nThus if one would like to use Boolean semantics, use `1` for `True` and\n`-1` for `False`.\n\n```python\nfrom past_mtl_monitors import atom\n\nx, y, z = atom('x'), atom('y'), atom('z')\n\n# Monitor that historically, x has been equal to y.\nmonitor = (x == y).hist().monitor()\n\n#                    time         values\nassert monitor.send((0    , {'x': 1, 'y': 1}))  ==  1   # sat\nassert monitor.send((1.1  , {'x': 1, 'y': -1})) == -1   # unsat\nassert monitor.send((1.5  , {'x': 1, 'y': 1}))  == -1   # unsat\n\nmonitor2 = x.once().monitor()  # Monitor's x's maximum value.\nassert monitor2.send((0 , {'x': -10, 'y': 1})) == -10\nassert monitor2.send((0 , {'x': 100, 'y': 2})) == 100\nassert monitor2.send((0 , {'x': -100, 'y': -1})) == 100\n\n# Monitor that x & y have been true since the last\n# time that z held for 3 time units.\nmonitor3 = (x & y).since(z.hist(0, 3)).monitor()\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mvcisback/past-mtl-monitors", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "past-mtl-monitors", "package_url": "https://pypi.org/project/past-mtl-monitors/", "platform": "", "project_url": "https://pypi.org/project/past-mtl-monitors/", "project_urls": {"Homepage": "https://github.com/mvcisback/past-mtl-monitors", "Repository": "https://github.com/mvcisback/past-mtl-monitors"}, "release_url": "https://pypi.org/project/past-mtl-monitors/0.1.0/", "requires_dist": ["attrs (>=19.3.0,<20.0.0)", "intervaltree (>=3.0.2,<4.0.0)"], "requires_python": ">=3.8,<4.0", "summary": "A library for creating past metric temporal logic monitors.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Past MTL Monitors</h1>\n<p>A library for creating past metric temporal logic monitors.</p>\n<p><a href=\"https://cloud.drone.io/mvcisback/past-mtl-monitors\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60b1172c29cde9f677c4de4f05180368c9ce0719/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f6d766369736261636b2f706173742d6d746c2d6d6f6e69746f72732f7374617475732e737667\"></a>\n<a href=\"https://past-mtl-monitors.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be2e1cac2393bdc8ced4f8ab01ce6362cb4ddfe0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706173742d6d746c2d6d6f6e69746f72732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/mvcisback/past-mtl-monitors\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8072f43b30a0a1a2c8fd75239a8e90c555e9cf74/68747470733a2f2f636f6465636f762e696f2f67682f6d766369736261636b2f706173742d6d746c2d6d6f6e69746f72732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/past-mtl-monitors\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff1ed36729351505c47d60c7d442c34a55cb7fea/68747470733a2f2f62616467652e667572792e696f2f70792f706173742d6d746c2d6d6f6e69746f72732e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><a href=\"#past-mtl-monitors\" rel=\"nofollow\">Past MTL Monitors</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n</ul>\n\n<h1>Installation</h1>\n<p>If you just need to use <code>past-mtl-monitors</code>, you can just run:</p>\n<p><code>$ pip install past-mtl-monitors</code></p>\n<p>For developers, note that this project uses the\n<a href=\"https://poetry.eustace.io/\" rel=\"nofollow\">poetry</a> python package/dependency\nmanagement tool. Please familarize yourself with it and then\nrun:</p>\n<p><code>$ poetry install</code></p>\n<h1>Usage</h1>\n<p>The primary entry point to the <code>past-mtl-monitors</code> package is the\n<code>atom</code> function. This exposes a monitor factory which can be combined\nwith other monitor factories to create complex property monitors.</p>\n<p>Under the hood, these monitor factories are just wrappers around\npython coroutines that expect a <code>(time, val)</code> pair, where time is a\n<code>float</code> and <code>val</code> is a mapping from strings to robustness values\n(<code>float</code>).</p>\n<p><strong>Note</strong> <code>past-mtl-monitors</code> only implements a quantitative semantics\nwhere a value greater than 0 implies sat and a value less than 0\nimplies unsat.</p>\n<p>Thus if one would like to use Boolean semantics, use <code>1</code> for <code>True</code> and\n<code>-1</code> for <code>False</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">past_mtl_monitors</span> <span class=\"kn\">import</span> <span class=\"n\">atom</span>\n\n<span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">atom</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">),</span> <span class=\"n\">atom</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">),</span> <span class=\"n\">atom</span><span class=\"p\">(</span><span class=\"s1\">'z'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Monitor that historically, x has been equal to y.</span>\n<span class=\"n\">monitor</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">monitor</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#                    time         values</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mi\">0</span>    <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}))</span>  <span class=\"o\">==</span>  <span class=\"mi\">1</span>   <span class=\"c1\"># sat</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mf\">1.1</span>  <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">}))</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span>   <span class=\"c1\"># unsat</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mf\">1.5</span>  <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}))</span>  <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span>   <span class=\"c1\"># unsat</span>\n\n<span class=\"n\">monitor2</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">once</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">monitor</span><span class=\"p\">()</span>  <span class=\"c1\"># Monitor's x's maximum value.</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor2</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mi\">0</span> <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}))</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">10</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor2</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mi\">0</span> <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}))</span> <span class=\"o\">==</span> <span class=\"mi\">100</span>\n<span class=\"k\">assert</span> <span class=\"n\">monitor2</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">((</span><span class=\"mi\">0</span> <span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">}))</span> <span class=\"o\">==</span> <span class=\"mi\">100</span>\n\n<span class=\"c1\"># Monitor that x &amp; y have been true since the last</span>\n<span class=\"c1\"># time that z held for 3 time units.</span>\n<span class=\"n\">monitor3</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">&amp;</span> <span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">monitor</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6655879, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "db599a82dc1e1dda88a2ebe9567edf22", "sha256": "11b5061cb21b2862a18ea82f616b52ce32bf293555dd10ab86d27a47ba3f6c25"}, "downloads": -1, "filename": "past_mtl_monitors-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "db599a82dc1e1dda88a2ebe9567edf22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5153, "upload_time": "2020-02-18T20:37:12", "upload_time_iso_8601": "2020-02-18T20:37:12.360761Z", "url": "https://files.pythonhosted.org/packages/c4/62/18ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9/past_mtl_monitors-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4720eb07325851ebfd268a6a98f2bba9", "sha256": "dbe655037361903f2d963e81d20caab5ff1e61a345a0bf9a488004d01909abb7"}, "downloads": -1, "filename": "past-mtl-monitors-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4720eb07325851ebfd268a6a98f2bba9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5045, "upload_time": "2020-02-18T20:37:09", "upload_time_iso_8601": "2020-02-18T20:37:09.866195Z", "url": "https://files.pythonhosted.org/packages/83/4b/0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df/past-mtl-monitors-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db599a82dc1e1dda88a2ebe9567edf22", "sha256": "11b5061cb21b2862a18ea82f616b52ce32bf293555dd10ab86d27a47ba3f6c25"}, "downloads": -1, "filename": "past_mtl_monitors-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "db599a82dc1e1dda88a2ebe9567edf22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5153, "upload_time": "2020-02-18T20:37:12", "upload_time_iso_8601": "2020-02-18T20:37:12.360761Z", "url": "https://files.pythonhosted.org/packages/c4/62/18ea3acb5eba0009e482c0eb53114a3b25a351f97d78fc21b1f68cadf6f9/past_mtl_monitors-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4720eb07325851ebfd268a6a98f2bba9", "sha256": "dbe655037361903f2d963e81d20caab5ff1e61a345a0bf9a488004d01909abb7"}, "downloads": -1, "filename": "past-mtl-monitors-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4720eb07325851ebfd268a6a98f2bba9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5045, "upload_time": "2020-02-18T20:37:09", "upload_time_iso_8601": "2020-02-18T20:37:09.866195Z", "url": "https://files.pythonhosted.org/packages/83/4b/0cef4a6dc41559f60416bb4e3c6a7c1dee2174fc397b0d6e92545141b9df/past-mtl-monitors-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:59 2020"}