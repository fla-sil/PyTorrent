{"info": {"author": "Alain Barthe", "author_email": "barthe@albar.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: System :: Networking", "Topic :: Utilities"], "description": "This module gives some utilities for IPV4 addresses.\r\nIt defines the IP, Mask and Subnet classes. Objects of these classes should not\r\nbe created directly, but rather through the function IPV4. It defines also some\r\nuseful conversion functions.\r\n\r\n>>> from IPV4 import IPV4\r\n>>> a = IPV4('192.168.1.3')\r\n>>> a                   # a is a string\r\n'192.168.1.3'\r\n>>> a.set_mask(23) # same as a = IPV4('192.168.1.3/23')\r\n>>> a.mask         # or a = IPV4('192.168.1.3', '255.255.254.0')\r\n'255.255.254.0'\r\n>>> a.subnet.start\r\n'192.168.0.0'\r\n>>> a.subnet.end\r\n'192.168.1.255'\r\n>>> a.same_subnet('192.168.2.1')\r\nFalse\r\n>>> a.bitstr\r\n'11000000101010000000000100000011'\r\n>>> a.subnet.bitmask\r\n'11000000101010000000000'\r\n>>> a.hexaval  \r\n'c0a80103'\r\n>>> a.intval\r\n3232235779L\r\n>>> a.IPclass\r\n'C'", "description_content_type": null, "docs_url": null, "download_url": "http://www.albar.fr/downloads/IPV4.py", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.albar.fr/IPV4_html/index.html", "keywords": "IP network address", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "IPV4", "package_url": "https://pypi.org/project/IPV4/", "platform": "Any platform", "project_url": "https://pypi.org/project/IPV4/", "project_urls": {"Download": "http://www.albar.fr/downloads/IPV4.py", "Homepage": "http://www.albar.fr/IPV4_html/index.html"}, "release_url": "https://pypi.org/project/IPV4/0.2/", "requires_dist": null, "requires_python": null, "summary": "This module allows an easy manipulation of IPV4 addresses.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module gives some utilities for IPV4 addresses.\nIt defines the IP, Mask and Subnet classes. Objects of these classes should not\nbe created directly, but rather through the function IPV4. It defines also some\nuseful conversion functions.</p>\n<pre>&gt;&gt;&gt; from IPV4 import IPV4\n&gt;&gt;&gt; a = IPV4('192.168.1.3')\n&gt;&gt;&gt; a                   # a is a string\n'192.168.1.3'\n&gt;&gt;&gt; a.set_mask(23) # same as a = IPV4('192.168.1.3/23')\n&gt;&gt;&gt; a.mask         # or a = IPV4('192.168.1.3', '255.255.254.0')\n'255.255.254.0'\n&gt;&gt;&gt; a.subnet.start\n'192.168.0.0'\n&gt;&gt;&gt; a.subnet.end\n'192.168.1.255'\n&gt;&gt;&gt; a.same_subnet('192.168.2.1')\nFalse\n&gt;&gt;&gt; a.bitstr\n'11000000101010000000000100000011'\n&gt;&gt;&gt; a.subnet.bitmask\n'11000000101010000000000'\n&gt;&gt;&gt; a.hexaval\n'c0a80103'\n&gt;&gt;&gt; a.intval\n3232235779L\n&gt;&gt;&gt; a.IPclass\n'C'\n</pre>\n\n          </div>"}, "last_serial": 134795, "releases": {"0.2": []}, "urls": [], "timestamp": "Fri May  8 00:54:32 2020"}