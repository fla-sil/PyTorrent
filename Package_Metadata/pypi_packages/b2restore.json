{"info": {"author": "Mark Blakeney", "author_email": "mark@irsaere.net", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "## B2RESTORE\n\n[b2restore](http://github.com/bulletmark/b2restore) is a command line\nutility which can be used with [rclone](https://rclone.org/) to\nmanually restore a [Backblaze B2](https://www.backblaze.com/b2/) archive\nfor any given date and time. Alternatively, you can create a git\nrepository of all date and time snapshots.\n\n### INSTALLATION\n\nArch users can install [b2restore from the\nAUR](https://aur.archlinux.org/packages/b2restore/).\n\nRequires python 3.5 or later. Note [b2restore is on\nPyPI](https://pypi.org/project/b2restore/) so you can `sudo pip3 install\nb2restore` or:\n\n```\n$ git clone http://github.com/bulletmark/b2restore\n$ cd b2restore\n$ sudo pip3 install .\n```\n\n### CREATION OF INITIAL RCLONE COPY\n\nThis utility is typically used with [rclone](https://rclone.org/).\nSimply `rclone sync` or `rclone copy` the B2 bucket or sub-paths from\nthe bucket which you want to restore. You **MUST** specify\n`--b2-versions` to include all file versions, e.g:\n\n```\nmkdir b2files\nrclone sync --b2-versions --fast-list --transfers=4 $* B2:mybucket b2files\n```\n\nThe above command will copy all files and available versions to the\n`b2files` directory. You only need to do this once.\n\n### CREATION OF SNAPSHOT AT GIVEN TIME\n\nGiven the above `rclone` initial copy, you run this utility to\ncreate a snapshot of the directory tree for the time you are interested\nin.\n\nE.g. to recreate the tree of latest files, in `outdir`:\n\n```\nb2restore b2files outdir\n```\n\nE.g. to recreate the tree of files at a specified time:\n\n```\nb2restore -t 2018-01-01T09:10:00 b2files outdir\n```\n\nJust keep selecting different times to incrementally recreate `outdir`\nas it existed at that time. The utility prints a line for each file\nupdated, created, or deleted in `outdir` compared to the previous\ncontents. The date and time of each updated/created/deleted file is also\nlisted. The target files are all hard-linked from the files in the\nsource directory so the `outdir` tree is created very quickly since\nfiles do not need to be actually copied. Thus you can conveniently\nexperiment with the time string to quickly see file differences.\n\nRather than specifying an explicit time string using `-t/--time`, you\ncan instead choose to use `-f/--filetime` to specify any one specific\nfile's modification time at which to recreate the target tree of files.\n\nYou may wish to manually `git commit` each snapshot you create in the\noutdir tree between your manually time-selected runs. If so, you will\nneed to add the `-g` switch to prevent `b2restore` from deleting your\ntop level `.git/` repo on each run.\n\nNote that this utility does not recreate empty directory hierarchies.\nAll empty directories in the target tree are deleted.\n\n#### B2RESTORE COMMAND LINE OPTIONS\n\n```\nusage: b2restore [-h] [-t TIME | -f FILETIME] [-s] [-g] [-p PATH]\n                 indir [outdir]\n\nProgram to recreate Backblaze B2 file archive at specified date and time.\n\npositional arguments:\n  indir                 input B2 archive containing all file versions (from\n                        --b2-versions)\n  outdir                output directory to recreate for given time\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TIME, --time TIME  set time YYYY-MM-DDTHH:MM.SS, default=latest\n  -f FILETIME, --filetime FILETIME\n                        set time based on specified file\n  -s, --summary         just print a summary of files and versions\n  -g, --gitkeep         preserve any top level git dir in outdir\n  -p PATH, --path PATH  only process files under given path\n```\n\n### CREATION OF GIT REPOSITORY OF ALL SNAPSHOTS\n\nRather than run `b2restore` for the given date + times you are\ninterested in, you can instead choose to run the provided\n`b2restore-create-git` utility to automatically create a git repository\nof snapshots of files for all the dates + times inherent in the `rclone`\ninitial copy.\n\nSo after performing the `rclone` initial copy above, run the following\ncommand to create a complete git repository:\n\n```\nb2restore-create-git b2files outdir\n```\n\nThen `cd outdir` and run `git log` etc to view the history.\n\n#### B2RESTORE-CREATE-GIT COMMAND LINE OPTIONS\n\n```\nUsage: b2restore-create-git [-options] indir outdir\nCreate git repository from given B2 rclone copy.\nOptions:\n-t YYYY-MM-DDTHH:MM.SS (start git repo from given time)\n-e YYYY-MM-DDTHH:MM.SS (end git repo before given time)\n-p (only process files under given path)\n```\n\n### TEST RUN UTILITY\n\nA command line utility `b2restore-create-dummy-files` is included to\nfacilitate testing `b2restore` on your restored file tree without\nactually downloading any files from your B2 archive(!). This utility\nparses `rclone lsl` output to recreate your B2 bucket directory and\nhierarchy of file versions. Only the file names are recreated of course,\nthe file contents are set to their actual byte size but with random byte\ncontents (or zero filled if you specify `-z`, or to zero length if you\nspecify `-s`).\n\nThis utility requires almost nothing to download from your B2 archive\nand runs extremely quickly. You can then run `b2restore` against this\ndummy archive to simulate what files are changed between versions, etc.\nIt is also good to get a feel for how `b2restore` works, what it does,\nand whether it suits your needs without requiring you to first perform\nan onerous huge download of your entire B2 archive.\n\nHere is an example usage:\n\n```\nrclone lsl --b2-versions B2:mybucket | b2restore-create-dummy-files allfiles\nb2restore allfiles b2\ndu -shl b2 # (see how much storage tree of latest versions uses)\nb2restore -t 2018-05-10T12:00.00 allfiles b2\ndu -shl b2 # (see how much storage tree of yesterdays versions uses)\n```\n\n#### B2RESTORE-CREATE-DUMMY-FILES COMMAND LINE OPTIONS\n\n```\nUsage: b2restore-create-dummy-files [-options] outdir\nReads B2 file list (from lsl output) from standard input to create\ndummy tree of files.\nOptions:\n-z (zero fill files, not with random content which is default)\n-s (set files to zero length, not their actual size)\n-p (only process files under given path)\n```\n\n### LICENSE\n\nCopyright (C) 2018 Mark Blakeney. This program is distributed under the\nterms of the GNU General Public License.\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or any later\nversion.\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License at <http://www.gnu.org/licenses/> for more details.\n\n<!-- vim: se ai syn=markdown: -->", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bulletmark/b2restore", "keywords": "backblaze b2", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "b2restore", "package_url": "https://pypi.org/project/b2restore/", "platform": "", "project_url": "https://pypi.org/project/b2restore/", "project_urls": {"Homepage": "https://github.com/bulletmark/b2restore"}, "release_url": "https://pypi.org/project/b2restore/1.9.4/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Program to recreate Backblaze B2 file archive atspecified date+time", "version": "1.9.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>B2RESTORE</h2>\n<p><a href=\"http://github.com/bulletmark/b2restore\" rel=\"nofollow\">b2restore</a> is a command line\nutility which can be used with <a href=\"https://rclone.org/\" rel=\"nofollow\">rclone</a> to\nmanually restore a <a href=\"https://www.backblaze.com/b2/\" rel=\"nofollow\">Backblaze B2</a> archive\nfor any given date and time. Alternatively, you can create a git\nrepository of all date and time snapshots.</p>\n<h3>INSTALLATION</h3>\n<p>Arch users can install <a href=\"https://aur.archlinux.org/packages/b2restore/\" rel=\"nofollow\">b2restore from the\nAUR</a>.</p>\n<p>Requires python 3.5 or later. Note <a href=\"https://pypi.org/project/b2restore/\" rel=\"nofollow\">b2restore is on\nPyPI</a> so you can <code>sudo pip3 install b2restore</code> or:</p>\n<pre><code>$ git clone http://github.com/bulletmark/b2restore\n$ cd b2restore\n$ sudo pip3 install .\n</code></pre>\n<h3>CREATION OF INITIAL RCLONE COPY</h3>\n<p>This utility is typically used with <a href=\"https://rclone.org/\" rel=\"nofollow\">rclone</a>.\nSimply <code>rclone sync</code> or <code>rclone copy</code> the B2 bucket or sub-paths from\nthe bucket which you want to restore. You <strong>MUST</strong> specify\n<code>--b2-versions</code> to include all file versions, e.g:</p>\n<pre><code>mkdir b2files\nrclone sync --b2-versions --fast-list --transfers=4 $* B2:mybucket b2files\n</code></pre>\n<p>The above command will copy all files and available versions to the\n<code>b2files</code> directory. You only need to do this once.</p>\n<h3>CREATION OF SNAPSHOT AT GIVEN TIME</h3>\n<p>Given the above <code>rclone</code> initial copy, you run this utility to\ncreate a snapshot of the directory tree for the time you are interested\nin.</p>\n<p>E.g. to recreate the tree of latest files, in <code>outdir</code>:</p>\n<pre><code>b2restore b2files outdir\n</code></pre>\n<p>E.g. to recreate the tree of files at a specified time:</p>\n<pre><code>b2restore -t 2018-01-01T09:10:00 b2files outdir\n</code></pre>\n<p>Just keep selecting different times to incrementally recreate <code>outdir</code>\nas it existed at that time. The utility prints a line for each file\nupdated, created, or deleted in <code>outdir</code> compared to the previous\ncontents. The date and time of each updated/created/deleted file is also\nlisted. The target files are all hard-linked from the files in the\nsource directory so the <code>outdir</code> tree is created very quickly since\nfiles do not need to be actually copied. Thus you can conveniently\nexperiment with the time string to quickly see file differences.</p>\n<p>Rather than specifying an explicit time string using <code>-t/--time</code>, you\ncan instead choose to use <code>-f/--filetime</code> to specify any one specific\nfile's modification time at which to recreate the target tree of files.</p>\n<p>You may wish to manually <code>git commit</code> each snapshot you create in the\noutdir tree between your manually time-selected runs. If so, you will\nneed to add the <code>-g</code> switch to prevent <code>b2restore</code> from deleting your\ntop level <code>.git/</code> repo on each run.</p>\n<p>Note that this utility does not recreate empty directory hierarchies.\nAll empty directories in the target tree are deleted.</p>\n<h4>B2RESTORE COMMAND LINE OPTIONS</h4>\n<pre><code>usage: b2restore [-h] [-t TIME | -f FILETIME] [-s] [-g] [-p PATH]\n                 indir [outdir]\n\nProgram to recreate Backblaze B2 file archive at specified date and time.\n\npositional arguments:\n  indir                 input B2 archive containing all file versions (from\n                        --b2-versions)\n  outdir                output directory to recreate for given time\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TIME, --time TIME  set time YYYY-MM-DDTHH:MM.SS, default=latest\n  -f FILETIME, --filetime FILETIME\n                        set time based on specified file\n  -s, --summary         just print a summary of files and versions\n  -g, --gitkeep         preserve any top level git dir in outdir\n  -p PATH, --path PATH  only process files under given path\n</code></pre>\n<h3>CREATION OF GIT REPOSITORY OF ALL SNAPSHOTS</h3>\n<p>Rather than run <code>b2restore</code> for the given date + times you are\ninterested in, you can instead choose to run the provided\n<code>b2restore-create-git</code> utility to automatically create a git repository\nof snapshots of files for all the dates + times inherent in the <code>rclone</code>\ninitial copy.</p>\n<p>So after performing the <code>rclone</code> initial copy above, run the following\ncommand to create a complete git repository:</p>\n<pre><code>b2restore-create-git b2files outdir\n</code></pre>\n<p>Then <code>cd outdir</code> and run <code>git log</code> etc to view the history.</p>\n<h4>B2RESTORE-CREATE-GIT COMMAND LINE OPTIONS</h4>\n<pre><code>Usage: b2restore-create-git [-options] indir outdir\nCreate git repository from given B2 rclone copy.\nOptions:\n-t YYYY-MM-DDTHH:MM.SS (start git repo from given time)\n-e YYYY-MM-DDTHH:MM.SS (end git repo before given time)\n-p (only process files under given path)\n</code></pre>\n<h3>TEST RUN UTILITY</h3>\n<p>A command line utility <code>b2restore-create-dummy-files</code> is included to\nfacilitate testing <code>b2restore</code> on your restored file tree without\nactually downloading any files from your B2 archive(!). This utility\nparses <code>rclone lsl</code> output to recreate your B2 bucket directory and\nhierarchy of file versions. Only the file names are recreated of course,\nthe file contents are set to their actual byte size but with random byte\ncontents (or zero filled if you specify <code>-z</code>, or to zero length if you\nspecify <code>-s</code>).</p>\n<p>This utility requires almost nothing to download from your B2 archive\nand runs extremely quickly. You can then run <code>b2restore</code> against this\ndummy archive to simulate what files are changed between versions, etc.\nIt is also good to get a feel for how <code>b2restore</code> works, what it does,\nand whether it suits your needs without requiring you to first perform\nan onerous huge download of your entire B2 archive.</p>\n<p>Here is an example usage:</p>\n<pre><code>rclone lsl --b2-versions B2:mybucket | b2restore-create-dummy-files allfiles\nb2restore allfiles b2\ndu -shl b2 # (see how much storage tree of latest versions uses)\nb2restore -t 2018-05-10T12:00.00 allfiles b2\ndu -shl b2 # (see how much storage tree of yesterdays versions uses)\n</code></pre>\n<h4>B2RESTORE-CREATE-DUMMY-FILES COMMAND LINE OPTIONS</h4>\n<pre><code>Usage: b2restore-create-dummy-files [-options] outdir\nReads B2 file list (from lsl output) from standard input to create\ndummy tree of files.\nOptions:\n-z (zero fill files, not with random content which is default)\n-s (set files to zero length, not their actual size)\n-p (only process files under given path)\n</code></pre>\n<h3>LICENSE</h3>\n<p>Copyright (C) 2018 Mark Blakeney. This program is distributed under the\nterms of the GNU General Public License.\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or any later\nversion.\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License at <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a> for more details.</p>\n\n\n          </div>"}, "last_serial": 6114023, "releases": {"1.9.2": [{"comment_text": "", "digests": {"md5": "2c5e819b08d4330392bf83571d65e2c0", "sha256": "e2945d5aa2592ada85cd47423ad85440c1b7ff6bc8b21cfb6885469b85c71cb1"}, "downloads": -1, "filename": "b2restore-1.9.2.tar.gz", "has_sig": false, "md5_digest": "2c5e819b08d4330392bf83571d65e2c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7736, "upload_time": "2018-09-02T02:20:49", "upload_time_iso_8601": "2018-09-02T02:20:49.359545Z", "url": "https://files.pythonhosted.org/packages/83/bd/2d8a7de0cf7dedb82834195b9b681369dcde5258378819c6fd22138c5ab5/b2restore-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "377f1c514b37c033d5a642334a77ea4e", "sha256": "9a3e43907437ea3f355fb1bf77acc228b2501f54c78b6a2b2e9e8a0701138200"}, "downloads": -1, "filename": "b2restore-1.9.3.tar.gz", "has_sig": false, "md5_digest": "377f1c514b37c033d5a642334a77ea4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8247, "upload_time": "2019-11-09T03:20:39", "upload_time_iso_8601": "2019-11-09T03:20:39.536790Z", "url": "https://files.pythonhosted.org/packages/dd/e4/5b9826ed211c752642dc0e1a384e0126ff543a79a0b19c8767109e73babd/b2restore-1.9.3.tar.gz", "yanked": false}], "1.9.4": [{"comment_text": "", "digests": {"md5": "0be51730a45d746e1a1d0be449fb8138", "sha256": "4cb7325a09c2c7529558643f57fff08e59077a1f0d0e341d677d7ca342969795"}, "downloads": -1, "filename": "b2restore-1.9.4.tar.gz", "has_sig": false, "md5_digest": "0be51730a45d746e1a1d0be449fb8138", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7876, "upload_time": "2019-11-11T06:01:55", "upload_time_iso_8601": "2019-11-11T06:01:55.534467Z", "url": "https://files.pythonhosted.org/packages/6b/15/936e66b1be16b44c3845232cc8957101dc58fa775dfe97330b9105b6daab/b2restore-1.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0be51730a45d746e1a1d0be449fb8138", "sha256": "4cb7325a09c2c7529558643f57fff08e59077a1f0d0e341d677d7ca342969795"}, "downloads": -1, "filename": "b2restore-1.9.4.tar.gz", "has_sig": false, "md5_digest": "0be51730a45d746e1a1d0be449fb8138", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7876, "upload_time": "2019-11-11T06:01:55", "upload_time_iso_8601": "2019-11-11T06:01:55.534467Z", "url": "https://files.pythonhosted.org/packages/6b/15/936e66b1be16b44c3845232cc8957101dc58fa775dfe97330b9105b6daab/b2restore-1.9.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:12 2020"}