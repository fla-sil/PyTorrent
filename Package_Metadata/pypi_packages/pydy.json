{"info": {"author": "PyDy Authors", "author_email": "pydy@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Physics"], "description": "====\nPyDy\n====\n\n|pypi| |anaconda| |rtd-docs| |travis-build| |appveyor| |gitter|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pydy.svg\n   :target: https://pypi.python.org/pypi/pydy\n   :alt: Latest Released Version\n\n.. |anaconda| image:: https://anaconda.org/pydy/pydy/badges/version.svg\n   :target: https://anaconda.org/pydy/pydy\n\n.. |rtd-docs| image:: https://readthedocs.org/projects/pydy/badge/?version=stable\n   :target: https://pydy.readthedocs.io/en/stable/?badge=stable\n   :alt: Documentation Status\n\n.. |travis-build| image:: https://travis-ci.org/pydy/pydy.png?branch=master\n   :target: https://travis-ci.org/pydy/pydy\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/orj87gyb0c1wqc6j/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/moorepants/pydy/branch/master\n\n.. |gitter| image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/pydy/pydy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nPyDy_, short for Python Dynamics, is a tool kit written in the Python\nprogramming language that utilizes an array of scientific programs to enable\nthe study of multibody dynamics. The goal is to have a modular framework and\neventually a physics abstraction layer which utilizes a variety of backends\nthat can provide the user with their desired workflow, including:\n\n.. _PyDy: http://pydy.org\n\n- Model specification\n- Equation of motion generation\n- Simulation\n- Visualization\n- Publication\n\nWe started by building the SymPy_ `mechanics package`_ which provides an API\nfor building models and generating the symbolic equations of motion for complex\nmultibody systems. More recently we developed two packages, `pydy.codegen` and\n`pydy.viz`, for simulation and visualization of the models, respectively.  This\nPython package contains these two packages and other tools for working with\nmathematical models generated from SymPy mechanics. The remaining tools\ncurrently used in the PyDy workflow are popular scientific Python packages such\nas NumPy_, SciPy_, IPython_, Jupyter_, ipywidgets_, and matplotlib_ (i.e. the\nSciPy stack) which provide additional code for numerical analyses, simulation,\nand visualization.\n\n.. _SymPy: http://sympy.org\n.. _mechanics package: http://docs.sympy.org/latest/modules/physics/mechanics/index.html\n.. _NumPy: http://numpy.scipy.org\n.. _SciPy: http://www.scipy.org/scipylib/index.html\n.. _IPython: http://ipython.org\n.. _Jupyter: http://jupyter.org\n.. _ipywidgets: https://pypi.python.org/pypi/ipywidgets\n.. _matplotlib: http://matplotlib.org\n\nInstallation\n============\n\nPyDy has hard dependencies on the following software\\ [#]_:\n\n.. [#] We only test PyDy with these minimum dependencies; these module versions\n       are provided in the Ubuntu 16.04 packages. Previous versions may work.\n\n- 2.7 <= Python < 3.0 or Python >= 3.5\n- setuptools >= 20.7.0\n- NumPy_ >= 1.11.0\n- SciPy_ >= 0.17.1\n- SymPy_ >= 0.7.6.1\n- PyWin32 >= 219 (Windows Only)\n\nPyDy has optional dependencies on these packages:\n\n- 4.0.0 <= `Jupyter Notebook`_ < 5.0.0\n- 4.0.0 <= ipywidgets_ < 5.0.0\n- Theano_ >= 0.8.0\n- Cython_ >= 0.23.4\n\n.. _Theano: http://deeplearning.net/software/theano/\n.. _Cython: http://cython.org/\n.. _Jupyter Notebook: https://pypi.python.org/pypi/notebook\n\nThe examples may require these dependencies:\n\n- matplotlib_ >= 1.5.1\n- version_information_\n\n.. _version_information: https://pypi.python.org/pypi/version_information\n\nIt's best to install the SciPy Stack dependencies using the instructions_\nprovided on the SciPy website first. We recommend the conda_ package manager\nand the Anaconda_ distribution for easy cross platform installation.\n\n.. _instructions: http://www.scipy.org/install.html\n.. _conda: http://conda.pydata.org/\n.. _Anaconda: http://docs.continuum.io/anaconda/\n\nOnce the dependencies are installed, the latest stable version of the package\ncan be downloaded from PyPi\\ [#]_::\n\n   $ wget https://pypi.python.org/packages/source/p/pydy/pydy-X.X.X.tar.gz\n\n.. [#] Change ``X.X.X`` to the latest version number.\n\nand extracted and installed\\ [#]_::\n\n   $ tar -zxvf pydy-X.X.X.tar.gz\n   $ cd pydy-X.X.X\n   $ python setup.py install\n\n.. [#] For system wide installs you may need root permissions (perhaps prepend\n   commands with ``sudo``).\n\nOr if you have the pip package manager installed you can simply type::\n\n   $ pip install pydy\n\nOr if you have conda you can type::\n\n   $ conda install -c conda-forge pydy\n\nAlso, a simple way to install all of the optional dependencies is to install\nthe ``pydy-examples`` metapackage using conda::\n\n   $ conda install -c pydy pydy-examples\n\nUsage\n=====\n\nThis is an example of a simple one degree of freedom system: a mass under the\ninfluence of a spring, damper, gravity and an external force::\n\n\n   / / / / / / / / /\n   -----------------\n     |    |     |   | g\n     \\   | |    |   V\n   k /   --- c  |\n     |    |     | x, v\n    --------    V\n    |  m   | -----\n    --------\n       | F\n       V\n\nDerive the system:\n\n.. code:: python\n\n   from sympy import symbols\n   import sympy.physics.mechanics as me\n\n   mass, stiffness, damping, gravity = symbols('m, k, c, g')\n\n   position, speed = me.dynamicsymbols('x v')\n   positiond = me.dynamicsymbols('x', 1)\n   force = me.dynamicsymbols('F')\n\n   ceiling = me.ReferenceFrame('N')\n\n   origin = me.Point('origin')\n   origin.set_vel(ceiling, 0)\n\n   center = origin.locatenew('center', position * ceiling.x)\n   center.set_vel(ceiling, speed * ceiling.x)\n\n   block = me.Particle('block', center, mass)\n\n   kinematic_equations = [speed - positiond]\n\n   force_magnitude = mass * gravity - stiffness * position - damping * speed + force\n   forces = [(center, force_magnitude * ceiling.x)]\n\n   particles = [block]\n\n   kane = me.KanesMethod(ceiling, q_ind=[position], u_ind=[speed],\n                         kd_eqs=kinematic_equations)\n   kane.kanes_equations(forces, particles)\n\nCreate a system to manage integration and specify numerical values for the\nconstants and specified quantities. Here, we specify sinusoidal forcing:\n\n.. code:: python\n\n   from numpy import array, linspace, sin\n   from pydy.system import System\n\n   sys = System(kane,\n                constants={mass: 1.0, stiffness: 1.0,\n                           damping: 0.2, gravity: 9.8},\n                specifieds={force: lambda x, t: sin(t)},\n                initial_conditions={position: 0.1, speed: -1.0},\n                times=linspace(0.0, 10.0, 1000))\n\nIntegrate the equations of motion to get the state trajectories:\n\n.. code:: python\n\n   y = sys.integrate()\n\nPlot the results:\n\n.. code:: python\n\n   import matplotlib.pyplot as plt\n\n   plt.plot(sys.times, y)\n   plt.legend((str(position), str(speed)))\n   plt.show()\n\nDocumentation\n=============\n\nThe documentation is hosted at http://pydy.readthedocs.org but you can also\nbuild them from source using the following instructions.\n\nTo build the documentation you must install the dependencies:\n\n- Sphinx_\n- numpydoc_\n\n.. _Sphinx: http://sphinx-doc.org/\n.. _numpydoc: https://pypi.python.org/pypi/numpydoc\n\nTo build the HTML docs, run Make from within the ``docs`` directory::\n\n   $ cd docs\n   $ make html\n\nYou can then view the documentation from your preferred web browser, for\nexample::\n\n   $ firefox _build/html/index.html\n\nModules and Packages\n====================\n\nCode Generation (codegen)\n-------------------------\n\nThis package provides code generation facilities. It generates functions that\ncan numerically evaluate the right hand side of the ordinary differential\nequations generated with sympy.physics.mechanics_ with three different\nbackends: SymPy's lambdify_, Theano, and Cython.\n\n.. _sympy.physics.mechanics: http://docs.sympy.org/latest/modules/physics/mechanics\n.. _lambdify: http://docs.sympy.org/latest/modules/utilities/lambdify.html#sympy.utilities.lambdify.lambdify\n\nModels (models.py)\n------------------\n\nThe models module provides some canned models of classic systems.\n\nSystems (system.py)\n-------------------\n\nThe System module provides a ``System`` class to manage simulation of a single\nsystem.\n\nVisualization (viz)\n-------------------\n\nThis package provides tools to create 3D animated visualizations of the\nsystems. The visualizations utilize WebGL and run in a web browser. They can\nalso be embedded into an IPython notebook for added interactivity.\n\nDevelopment Environment\n=======================\n\nThe source code is managed with the Git version control system. To get the\nlatest development version and access to the full repository, clone the\nrepository from Github with::\n\n   $ git clone https://github.com/pydy/pydy.git\n\nYou should then install the dependencies for running the tests:\n\n- nose_: 1.3.7\n- phantomjs_: 1.9.0\n\n.. _nose: https://nose.readthedocs.org\n.. _phantomjs: http://phantomjs.org\n\nIsolated Environments\n---------------------\n\nIt is typically advantageous to setup a virtual environment to isolate the\ndevelopment code from other versions on your system. There are two popular\nenvironment managers that work well with Python packages: virtualenv and\nconda_.\n\nThe following installation assumes you have virtualenvwrapper_ in addition to\nvirtualenv and all the dependencies needed to build the various packages::\n\n   $ mkvirtualenv pydy-dev\n   (pydy-dev)$ pip install numpy scipy cython nose theano sympy ipython \"notebook<5.0\" \"ipywidgets<5.0\" version_information\n   (pydy-dev)$ pip install matplotlib # make sure to do this after numpy\n   (pydy-dev)$ git clone git@github.com:pydy/pydy.git\n   (pydy-dev)$ cd pydy\n   (pydy-dev)$ python setup.py develop\n\n.. _virtualenvwrapper: https://pypi.python.org/pypi/virtualenvwrappe://pypi.python.org/pypi/virtualenvwrapper\n\nOr with conda_::\n\n   $ conda create -c pydy -n pydy-dev setuptools numpy scipy ipython \"notebook<5.0\" \"ipywidgets<5.0\" cython nose theano sympy matplotlib version_information\n   $ source activate pydy-dev\n   (pydy-dev)$ git clone git@github.com:pydy/pydy.git\n   (pydy-dev)$ cd pydy\n   (pydy-dev)$ conda develop .\n\nThe full Python test suite can be run with::\n\n   (pydy-dev)$ nosetests\n\nFor the JavaScript tests the Jasmine and blanket.js libraries are used. Both\nof these libraries are included in pydy.viz with the source. To run the\nJavaScript tests::\n\n   cd pydy/viz/static/js/tests && phantomjs run-jasmine.js SpecRunner.html && cd ../../../../../\n\nBenchmark\n=========\n\nRun the benchmark to test the n-link pendulum problem with the various backends::\n\n   $ python bin/benchmark_pydy_code_gen.py <max # of links> <# of time steps>\n\nRelated Packages\n================\n\nThese are various related and similar Python packages:\n\n- https://github.com/cdsousa/sympybotics\n- https://pypi.python.org/pypi/Hamilton\n- https://pypi.python.org/pypi/arboris\n- https://pypi.python.org/pypi/PyODE\n- https://pypi.python.org/pypi/odeViz\n- https://pypi.python.org/pypi/ARS\n- https://pypi.python.org/pypi/pymunk\n\nCitation\n========\n\nIf you make use of PyDy in your work or research, please cite us in your\npublications or on the web. This citation can be used:\n\n   Gilbert Gede, Dale L Peterson, Angadh S Nanjangud, Jason K Moore, and Mont\n   Hubbard, \"Constrained Multibody Dynamics With Python: From Symbolic Equation\n   Generation to Publication\", ASME 2013 International Design Engineering\n   Technical Conferences and Computers and Information in Engineering\n   Conference, 2013, `10.1115/DETC2013-13470\n   <http://dx.doi.org/10.1115/DETC2013-13470>`_.\n\nQuestions, Bugs, Feature Requests\n=================================\n\nIf you have any question about installation, usage, etc, feel free send a\nmessage to our public `mailing list`_ or visit our `Gitter chatroom`_.\n\n.. _mailing list: http://groups.google.com/group/pydy\n.. _Gitter chatroom: https://gitter.im/pydy/pydy\n\nIf you think there\u2019s a bug or you would like to request a feature, please open\nan `issue`_ on Github.\n\n.. _issue: https://github.com/pydy/pydy/issues\n\nRelease Notes\n=============\n\n0.5.0\n-----\n\n- SymPy introduced a backward incompatibility to differentiation Matrices in\n  SymPy 1.2, which remained in SymPy 1.3, see:\n  https://github.com/sympy/sympy/issues/14958. This breaks PyDy's System class,\n  see: https://github.com/pydy/pydy/issues/395. A fix is introduced to handle\n  all support versions of SymPy. [PR `#408`_]\n- Added a new example for anthropomorphic arm. [PR `#406`_]\n- Fixed errors in the differential drive example. [PR `#405`_]\n- Added a new example for a scara arm. [PR `#402`_]\n- Fixed errors due to backwards incompatible changes with various dependencies. [PR `#397`_]\n- ODEFunctionGenerator now works with no constants symbols. [PR `#391`_]\n\n.. _#408: https://github.com/pydy/pydy/pull/408\n.. _#406: https://github.com/pydy/pydy/pull/406\n.. _#405: https://github.com/pydy/pydy/pull/405\n.. _#402: https://github.com/pydy/pydy/pull/402\n.. _#397: https://github.com/pydy/pydy/pull/397\n.. _#391: https://github.com/pydy/pydy/pull/391\n\n0.4.0\n-----\n\n- Bumped minimum Jupyter notebook to 4.0 and restricted to < 5.0. [PR `#381`_]\n- Removed several deprecated functions. [PR `#375`_]\n- Bumped minimum required hard dependencies to Ubuntu 16.04 LTS package\n  versions. [PR `#372`_]\n- Implemented ThreeJS Tube Geometry. [PR `#368`_]\n- Improved circle rendering. [PR `#357`_]\n- kwargs can be passed from System.generate_ode_function to the matrix\n  generator. [PR `#356`_]\n- Lagrangian simple pendulum example added. [PR `#351`_]\n- Derivatives can now be used as specifies in System. [PR `#340`_]\n- The initial conditions can now be adjusted in the notebook GUI. [PR `#333`_]\n- The width of the viz canvas is now properly bounded in the notebook. [PR `#332`_]\n- Planes now render both sides in the visualization GUI. [PR `#330`_]\n- Adds in more type checks for System.times. [PR `#322`_]\n- Added an OctaveMatrixGenerator for basic Octave/Matlab printing. [PR `#323`_]\n- Simplified the right hand side evaluation code in the ODEFunctionGenerator.\n  Note that this change comes with some performance hits. [PR `#301`_]\n\n.. _#381: https://github.com/pydy/pydy/pull/381\n.. _#375: https://github.com/pydy/pydy/pull/375\n.. _#372: https://github.com/pydy/pydy/pull/372\n.. _#368: https://github.com/pydy/pydy/pull/368\n.. _#357: https://github.com/pydy/pydy/pull/357\n.. _#356: https://github.com/pydy/pydy/pull/356\n.. _#351: https://github.com/pydy/pydy/pull/351\n.. _#340: https://github.com/pydy/pydy/pull/340\n.. _#333: https://github.com/pydy/pydy/pull/333\n.. _#332: https://github.com/pydy/pydy/pull/332\n.. _#330: https://github.com/pydy/pydy/pull/330\n.. _#322: https://github.com/pydy/pydy/pull/322\n.. _#323: https://github.com/pydy/pydy/pull/323\n.. _#301: https://github.com/pydy/pydy/pull/301\n\n0.3.1\n-----\n\n- Removed the general deprecation warning from System. [PR `#262`_]\n- Don't assume user enters input in server shutdown. [PR `#264`_]\n- Use vectorized operations to compute transformations. [PR `#266`_]\n- Speedup theano generators. [PR `#267`_]\n- Correct time is displayed on the animation slider. [PR `#272`_]\n- Test optional dependencies only if installed. [PR `#276`_]\n- Require benchmark to run in Travis. [PR `#277`_]\n- Fix dependency minimum versions in setup.py [PR `#279`_]\n- Make CSE optional in CMatrixGenerator. [PR `#284`_]\n- Fix codegen line break. [PR `#292`_]\n- Don't assume Scene always has a System. [PR `#295`_]\n- Python 3.5 support and testing against Python 3.5 on Travis. [PR `#305`_]\n- Set minimum dependency versions to match Ubuntu Trusty 14.04 LTS. [PR `#306`_]\n- Replace sympy.phyics.mechanics deprecated methods. [PR `#309`_]\n- Updated installation details to work with IPython/Jupyter 4.0. [PR `#311`_]\n- Avoid the IPython widget deprecation warning if possible. [PR `#311`_]\n- Updated the mass-spring-damper example to IPy4 and added version_information. [PR `#312`_]\n- The Cython backend now compiles on Windows. [PR `#313`_]\n- CI testing is now run on appveyor with Windows VMs. [PR `#315`_]\n- Added a verbose option to the Cython compilation. [PR `#315`_]\n- Fixed the RHS autogeneration. [PR `#318`_]\n- Improved the camera code through inheritance [PR `#319`_]\n\n.. _#262: https://github.com/pydy/pydy/pull/262\n.. _#264: https://github.com/pydy/pydy/pull/264\n.. _#266: https://github.com/pydy/pydy/pull/266\n.. _#267: https://github.com/pydy/pydy/pull/267\n.. _#272: https://github.com/pydy/pydy/pull/272\n.. _#276: https://github.com/pydy/pydy/pull/276\n.. _#277: https://github.com/pydy/pydy/pull/277\n.. _#279: https://github.com/pydy/pydy/pull/279\n.. _#284: https://github.com/pydy/pydy/pull/284\n.. _#292: https://github.com/pydy/pydy/pull/292\n.. _#295: https://github.com/pydy/pydy/pull/295\n.. _#305: https://github.com/pydy/pydy/pull/305\n.. _#306: https://github.com/pydy/pydy/pull/306\n.. _#309: https://github.com/pydy/pydy/pull/309\n.. _#311: https://github.com/pydy/pydy/pull/311\n.. _#312: https://github.com/pydy/pydy/pull/312\n.. _#313: https://github.com/pydy/pydy/pull/313\n.. _#315: https://github.com/pydy/pydy/pull/315\n.. _#318: https://github.com/pydy/pydy/pull/318\n.. _#319: https://github.com/pydy/pydy/pull/319\n\n0.3.0\n-----\n\nUser Facing\n~~~~~~~~~~~\n\n- Introduced conda builds and binstar support. [PR `#219`_]\n- Dropped support for IPython < 3.0. [PR `#237`_]\n- Added support Python 3.3 and 3.4. [PR `#229`_]\n- Bumped up the minimum dependencies for NumPy, SciPy, and Cython [PR `#233`_].\n- Removed the partial implementation of the Mesh shape. [PR `#172`_]\n- Overhauled the code generation package to make the generators more easily\n  extensible and to improve simulation speed. [PR `#113`_]\n- The visualizer has been overhauled as part of Tarun Gaba's 2014 GSoC\n  internship [PR `#82`_]. Here are some of the changes:\n\n  - The JavaScript is now handled by AJAX and requires a simple server.\n  - The JavaScript has been overhauled and now uses prototype.js for object\n    oriented design.\n  - The visualizer can now be loaded in an IPython notebook via IPython's\n    widgets using ``Scene.display_ipython()``.\n  - A slider was added to manually control the frame playback.\n  - The visualization shapes' attributes can be manipulated via the GUI.\n  - The scene json file can be edited and downloaded from the GUI.\n  - pydy.viz generates two JSONs now (instead of one in earlier versions). The\n    JSON generated from earlier versions will **not** work in the new version.\n  - Shapes can now have a material attribute.\n  - Model constants can be modified and the simulations can be rerun all via\n    the GUI.\n  - Switched from socket based server to python's core SimpleHTTPServer.\n  - The server has a proper shutdown response [PR `#241`_]\n\n- Added a new experimental System class and module to more seamlessly manage\n  integrating the equations of motion. [PR `#81`_]\n\n.. _#241: https://github.com/pydy/pydy/pull/241\n.. _#237: https://github.com/pydy/pydy/pull/237\n.. _#229: https://github.com/pydy/pydy/pull/229\n.. _#233: https://github.com/pydy/pydy/pull/233\n.. _#219: https://github.com/pydy/pydy/pull/219\n.. _#172: https://github.com/pydy/pydy/pull/172\n.. _#113: https://github.com/pydy/pydy/pull/113\n.. _#82: https://github.com/pydy/pydy/pull/82\n.. _#81: https://github.com/pydy/pydy/pull/81\n\nDevelopment\n~~~~~~~~~~~\n\n- Switched to a conda based Travis testing setup. [PR `#231`_]\n- When using older SymPy development versions with non-PEP440 compliant version\n  identifiers, setuptools < 8 is required. [PR `#166`_]\n- Development version numbers are now PEP 440 compliant. [PR `#141`_]\n- Introduced pull request checklists and CONTRIBUTING file. [PR `#146`_]\n- Introduced light code linting into Travis. [PR `#148`_]\n\n.. _#231: https://github.com/pydy/pydy/pull/231\n.. _#166: https://github.com/pydy/pydy/pull/166\n.. _#141: https://github.com/pydy/pydy/pull/141\n.. _#146: https://github.com/pydy/pydy/pull/146\n.. _#148: https://github.com/pydy/pydy/pull/148\n\n0.2.1\n-----\n\n- Unbundled unnecessary files from tar ball.\n\n0.2.0\n-----\n\n- Merged pydy_viz, pydy_code_gen, and pydy_examples into the source tree.\n- Added a method to output \"static\" visualizations from a Scene object.\n- Dropped the matplotlib dependency and now only three.js colors are valid.\n- Added joint torques to the n_pendulum model.\n- Added basic examples for codegen and viz.\n- Graceful fail if theano or cython are not present.\n- Shapes can now use sympy symbols for geometric dimensions.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pydy.org", "keywords": "multibody dynamics", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "pydy", "package_url": "https://pypi.org/project/pydy/", "platform": "", "project_url": "https://pypi.org/project/pydy/", "project_urls": {"Homepage": "http://pydy.org"}, "release_url": "https://pypi.org/project/pydy/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "Python tool kit for multi-body dynamics.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/pydy\" rel=\"nofollow\"><img alt=\"Latest Released Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7af171bab2855aee2c5db54a2c230fa85f53ce82/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707964792e737667\"></a> <a href=\"https://anaconda.org/pydy/pydy\" rel=\"nofollow\"><img alt=\"anaconda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d98bbd122bba67a3d8c7488dbc3d4f40aca7031b/68747470733a2f2f616e61636f6e64612e6f72672f707964792f707964792f6261646765732f76657273696f6e2e737667\"></a> <a href=\"https://pydy.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af09512f3bb474cd09680d44e961338525ccae37/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707964792f62616467652f3f76657273696f6e3d737461626c65\"></a> <a href=\"https://travis-ci.org/pydy/pydy\" rel=\"nofollow\"><img alt=\"travis-build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b20ce53faa0b7aa4387d010f79aeeec6f6122dfc/68747470733a2f2f7472617669732d63692e6f72672f707964792f707964792e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/moorepants/pydy/branch/master\" rel=\"nofollow\"><img alt=\"appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ab53335fd23951f41d395f835b774282a54a52a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6f726a3837677962306331777163366a2f6272616e63682f6d61737465723f7376673d74727565\"></a> <a href=\"https://gitter.im/pydy/pydy?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></p>\n<p><a href=\"http://pydy.org\" rel=\"nofollow\">PyDy</a>, short for Python Dynamics, is a tool kit written in the Python\nprogramming language that utilizes an array of scientific programs to enable\nthe study of multibody dynamics. The goal is to have a modular framework and\neventually a physics abstraction layer which utilizes a variety of backends\nthat can provide the user with their desired workflow, including:</p>\n<ul>\n<li>Model specification</li>\n<li>Equation of motion generation</li>\n<li>Simulation</li>\n<li>Visualization</li>\n<li>Publication</li>\n</ul>\n<p>We started by building the <a href=\"http://sympy.org\" rel=\"nofollow\">SymPy</a> <a href=\"http://docs.sympy.org/latest/modules/physics/mechanics/index.html\" rel=\"nofollow\">mechanics package</a> which provides an API\nfor building models and generating the symbolic equations of motion for complex\nmultibody systems. More recently we developed two packages, <cite>pydy.codegen</cite> and\n<cite>pydy.viz</cite>, for simulation and visualization of the models, respectively.  This\nPython package contains these two packages and other tools for working with\nmathematical models generated from SymPy mechanics. The remaining tools\ncurrently used in the PyDy workflow are popular scientific Python packages such\nas <a href=\"http://numpy.scipy.org\" rel=\"nofollow\">NumPy</a>, <a href=\"http://www.scipy.org/scipylib/index.html\" rel=\"nofollow\">SciPy</a>, <a href=\"http://ipython.org\" rel=\"nofollow\">IPython</a>, <a href=\"http://jupyter.org\" rel=\"nofollow\">Jupyter</a>, <a href=\"https://pypi.python.org/pypi/ipywidgets\" rel=\"nofollow\">ipywidgets</a>, and <a href=\"http://matplotlib.org\" rel=\"nofollow\">matplotlib</a> (i.e. the\nSciPy stack) which provide additional code for numerical analyses, simulation,\nand visualization.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>PyDy has hard dependencies on the following software<a href=\"#id3\" id=\"id2\" rel=\"nofollow\">[1]</a>:</p>\n<table id=\"id3\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[1]</a></td><td>We only test PyDy with these minimum dependencies; these module versions\nare provided in the Ubuntu 16.04 packages. Previous versions may work.</td></tr>\n</tbody>\n</table>\n<ul>\n<li>2.7 &lt;= Python &lt; 3.0 or Python &gt;= 3.5</li>\n<li>setuptools &gt;= 20.7.0</li>\n<li><a href=\"http://numpy.scipy.org\" rel=\"nofollow\">NumPy</a> &gt;= 1.11.0</li>\n<li><a href=\"http://www.scipy.org/scipylib/index.html\" rel=\"nofollow\">SciPy</a> &gt;= 0.17.1</li>\n<li><a href=\"http://sympy.org\" rel=\"nofollow\">SymPy</a> &gt;= 0.7.6.1</li>\n<li>PyWin32 &gt;= 219 (Windows Only)</li>\n</ul>\n<p>PyDy has optional dependencies on these packages:</p>\n<ul>\n<li>4.0.0 &lt;= <a href=\"https://pypi.python.org/pypi/notebook\" rel=\"nofollow\">Jupyter Notebook</a> &lt; 5.0.0</li>\n<li>4.0.0 &lt;= <a href=\"https://pypi.python.org/pypi/ipywidgets\" rel=\"nofollow\">ipywidgets</a> &lt; 5.0.0</li>\n<li><a href=\"http://deeplearning.net/software/theano/\" rel=\"nofollow\">Theano</a> &gt;= 0.8.0</li>\n<li><a href=\"http://cython.org/\" rel=\"nofollow\">Cython</a> &gt;= 0.23.4</li>\n</ul>\n<p>The examples may require these dependencies:</p>\n<ul>\n<li><a href=\"http://matplotlib.org\" rel=\"nofollow\">matplotlib</a> &gt;= 1.5.1</li>\n<li><a href=\"https://pypi.python.org/pypi/version_information\" rel=\"nofollow\">version_information</a></li>\n</ul>\n<p>It\u2019s best to install the SciPy Stack dependencies using the <a href=\"http://www.scipy.org/install.html\" rel=\"nofollow\">instructions</a>\nprovided on the SciPy website first. We recommend the <a href=\"http://conda.pydata.org/\" rel=\"nofollow\">conda</a> package manager\nand the <a href=\"http://docs.continuum.io/anaconda/\" rel=\"nofollow\">Anaconda</a> distribution for easy cross platform installation.</p>\n<p>Once the dependencies are installed, the latest stable version of the package\ncan be downloaded from PyPi<a href=\"#id5\" id=\"id4\" rel=\"nofollow\">[2]</a>:</p>\n<pre>$ wget https://pypi.python.org/packages/source/p/pydy/pydy-X.X.X.tar.gz\n</pre>\n<table id=\"id5\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id4\" rel=\"nofollow\">[2]</a></td><td>Change <tt>X.X.X</tt> to the latest version number.</td></tr>\n</tbody>\n</table>\n<p>and extracted and installed<a href=\"#id7\" id=\"id6\" rel=\"nofollow\">[3]</a>:</p>\n<pre>$ tar -zxvf pydy-X.X.X.tar.gz\n$ cd pydy-X.X.X\n$ python setup.py install\n</pre>\n<table id=\"id7\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id6\" rel=\"nofollow\">[3]</a></td><td>For system wide installs you may need root permissions (perhaps prepend\ncommands with <tt>sudo</tt>).</td></tr>\n</tbody>\n</table>\n<p>Or if you have the pip package manager installed you can simply type:</p>\n<pre>$ pip install pydy\n</pre>\n<p>Or if you have conda you can type:</p>\n<pre>$ conda install -c conda-forge pydy\n</pre>\n<p>Also, a simple way to install all of the optional dependencies is to install\nthe <tt><span class=\"pre\">pydy-examples</span></tt> metapackage using conda:</p>\n<pre>$ conda install -c pydy pydy-examples\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This is an example of a simple one degree of freedom system: a mass under the\ninfluence of a spring, damper, gravity and an external force:</p>\n<pre>/ / / / / / / / /\n-----------------\n  |    |     |   | g\n  \\   | |    |   V\nk /   --- c  |\n  |    |     | x, v\n --------    V\n |  m   | -----\n --------\n    | F\n    V\n</pre>\n<p>Derive the system:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sympy</span> <span class=\"kn\">import</span> <span class=\"n\">symbols</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sympy.physics.mechanics</span> <span class=\"k\">as</span> <span class=\"nn\">me</span>\n\n<span class=\"n\">mass</span><span class=\"p\">,</span> <span class=\"n\">stiffness</span><span class=\"p\">,</span> <span class=\"n\">damping</span><span class=\"p\">,</span> <span class=\"n\">gravity</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s1\">'m, k, c, g'</span><span class=\"p\">)</span>\n\n<span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">dynamicsymbols</span><span class=\"p\">(</span><span class=\"s1\">'x v'</span><span class=\"p\">)</span>\n<span class=\"n\">positiond</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">dynamicsymbols</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">force</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">dynamicsymbols</span><span class=\"p\">(</span><span class=\"s1\">'F'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ceiling</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">ReferenceFrame</span><span class=\"p\">(</span><span class=\"s1\">'N'</span><span class=\"p\">)</span>\n\n<span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"s1\">'origin'</span><span class=\"p\">)</span>\n<span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">set_vel</span><span class=\"p\">(</span><span class=\"n\">ceiling</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">center</span> <span class=\"o\">=</span> <span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">locatenew</span><span class=\"p\">(</span><span class=\"s1\">'center'</span><span class=\"p\">,</span> <span class=\"n\">position</span> <span class=\"o\">*</span> <span class=\"n\">ceiling</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">center</span><span class=\"o\">.</span><span class=\"n\">set_vel</span><span class=\"p\">(</span><span class=\"n\">ceiling</span><span class=\"p\">,</span> <span class=\"n\">speed</span> <span class=\"o\">*</span> <span class=\"n\">ceiling</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">Particle</span><span class=\"p\">(</span><span class=\"s1\">'block'</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">mass</span><span class=\"p\">)</span>\n\n<span class=\"n\">kinematic_equations</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">speed</span> <span class=\"o\">-</span> <span class=\"n\">positiond</span><span class=\"p\">]</span>\n\n<span class=\"n\">force_magnitude</span> <span class=\"o\">=</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"n\">gravity</span> <span class=\"o\">-</span> <span class=\"n\">stiffness</span> <span class=\"o\">*</span> <span class=\"n\">position</span> <span class=\"o\">-</span> <span class=\"n\">damping</span> <span class=\"o\">*</span> <span class=\"n\">speed</span> <span class=\"o\">+</span> <span class=\"n\">force</span>\n<span class=\"n\">forces</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">force_magnitude</span> <span class=\"o\">*</span> <span class=\"n\">ceiling</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)]</span>\n\n<span class=\"n\">particles</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">block</span><span class=\"p\">]</span>\n\n<span class=\"n\">kane</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"n\">KanesMethod</span><span class=\"p\">(</span><span class=\"n\">ceiling</span><span class=\"p\">,</span> <span class=\"n\">q_ind</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">position</span><span class=\"p\">],</span> <span class=\"n\">u_ind</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">speed</span><span class=\"p\">],</span>\n                      <span class=\"n\">kd_eqs</span><span class=\"o\">=</span><span class=\"n\">kinematic_equations</span><span class=\"p\">)</span>\n<span class=\"n\">kane</span><span class=\"o\">.</span><span class=\"n\">kanes_equations</span><span class=\"p\">(</span><span class=\"n\">forces</span><span class=\"p\">,</span> <span class=\"n\">particles</span><span class=\"p\">)</span>\n</pre>\n<p>Create a system to manage integration and specify numerical values for the\nconstants and specified quantities. Here, we specify sinusoidal forcing:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">numpy</span> <span class=\"kn\">import</span> <span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">linspace</span><span class=\"p\">,</span> <span class=\"n\">sin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydy.system</span> <span class=\"kn\">import</span> <span class=\"n\">System</span>\n\n<span class=\"n\">sys</span> <span class=\"o\">=</span> <span class=\"n\">System</span><span class=\"p\">(</span><span class=\"n\">kane</span><span class=\"p\">,</span>\n             <span class=\"n\">constants</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">mass</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">stiffness</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                        <span class=\"n\">damping</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">gravity</span><span class=\"p\">:</span> <span class=\"mf\">9.8</span><span class=\"p\">},</span>\n             <span class=\"n\">specifieds</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)},</span>\n             <span class=\"n\">initial_conditions</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">},</span>\n             <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">))</span>\n</pre>\n<p>Integrate the equations of motion to get the state trajectories:</p>\n<pre><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">integrate</span><span class=\"p\">()</span>\n</pre>\n<p>Plot the results:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">((</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">speed</span><span class=\"p\">)))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The documentation is hosted at <a href=\"http://pydy.readthedocs.org\" rel=\"nofollow\">http://pydy.readthedocs.org</a> but you can also\nbuild them from source using the following instructions.</p>\n<p>To build the documentation you must install the dependencies:</p>\n<ul>\n<li><a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a></li>\n<li><a href=\"https://pypi.python.org/pypi/numpydoc\" rel=\"nofollow\">numpydoc</a></li>\n</ul>\n<p>To build the HTML docs, run Make from within the <tt>docs</tt> directory:</p>\n<pre>$ cd docs\n$ make html\n</pre>\n<p>You can then view the documentation from your preferred web browser, for\nexample:</p>\n<pre>$ firefox _build/html/index.html\n</pre>\n</div>\n<div id=\"modules-and-packages\">\n<h2>Modules and Packages</h2>\n<div id=\"code-generation-codegen\">\n<h3>Code Generation (codegen)</h3>\n<p>This package provides code generation facilities. It generates functions that\ncan numerically evaluate the right hand side of the ordinary differential\nequations generated with <a href=\"http://docs.sympy.org/latest/modules/physics/mechanics\" rel=\"nofollow\">sympy.physics.mechanics</a> with three different\nbackends: SymPy\u2019s <a href=\"http://docs.sympy.org/latest/modules/utilities/lambdify.html#sympy.utilities.lambdify.lambdify\" rel=\"nofollow\">lambdify</a>, Theano, and Cython.</p>\n</div>\n<div id=\"models-models-py\">\n<h3>Models (models.py)</h3>\n<p>The models module provides some canned models of classic systems.</p>\n</div>\n<div id=\"systems-system-py\">\n<h3>Systems (system.py)</h3>\n<p>The System module provides a <tt>System</tt> class to manage simulation of a single\nsystem.</p>\n</div>\n<div id=\"visualization-viz\">\n<h3>Visualization (viz)</h3>\n<p>This package provides tools to create 3D animated visualizations of the\nsystems. The visualizations utilize WebGL and run in a web browser. They can\nalso be embedded into an IPython notebook for added interactivity.</p>\n</div>\n</div>\n<div id=\"development-environment\">\n<h2>Development Environment</h2>\n<p>The source code is managed with the Git version control system. To get the\nlatest development version and access to the full repository, clone the\nrepository from Github with:</p>\n<pre>$ git clone https://github.com/pydy/pydy.git\n</pre>\n<p>You should then install the dependencies for running the tests:</p>\n<ul>\n<li><a href=\"https://nose.readthedocs.org\" rel=\"nofollow\">nose</a>: 1.3.7</li>\n<li><a href=\"http://phantomjs.org\" rel=\"nofollow\">phantomjs</a>: 1.9.0</li>\n</ul>\n<div id=\"isolated-environments\">\n<h3>Isolated Environments</h3>\n<p>It is typically advantageous to setup a virtual environment to isolate the\ndevelopment code from other versions on your system. There are two popular\nenvironment managers that work well with Python packages: virtualenv and\n<a href=\"http://conda.pydata.org/\" rel=\"nofollow\">conda</a>.</p>\n<p>The following installation assumes you have <a href=\"https://pypi.python.org/pypi/virtualenvwrappe://pypi.python.org/pypi/virtualenvwrapper\" rel=\"nofollow\">virtualenvwrapper</a> in addition to\nvirtualenv and all the dependencies needed to build the various packages:</p>\n<pre>$ mkvirtualenv pydy-dev\n(pydy-dev)$ pip install numpy scipy cython nose theano sympy ipython \"notebook&lt;5.0\" \"ipywidgets&lt;5.0\" version_information\n(pydy-dev)$ pip install matplotlib # make sure to do this after numpy\n(pydy-dev)$ git clone git@github.com:pydy/pydy.git\n(pydy-dev)$ cd pydy\n(pydy-dev)$ python setup.py develop\n</pre>\n<p>Or with <a href=\"http://conda.pydata.org/\" rel=\"nofollow\">conda</a>:</p>\n<pre>$ conda create -c pydy -n pydy-dev setuptools numpy scipy ipython \"notebook&lt;5.0\" \"ipywidgets&lt;5.0\" cython nose theano sympy matplotlib version_information\n$ source activate pydy-dev\n(pydy-dev)$ git clone git@github.com:pydy/pydy.git\n(pydy-dev)$ cd pydy\n(pydy-dev)$ conda develop .\n</pre>\n<p>The full Python test suite can be run with:</p>\n<pre>(pydy-dev)$ nosetests\n</pre>\n<p>For the JavaScript tests the Jasmine and blanket.js libraries are used. Both\nof these libraries are included in pydy.viz with the source. To run the\nJavaScript tests:</p>\n<pre>cd pydy/viz/static/js/tests &amp;&amp; phantomjs run-jasmine.js SpecRunner.html &amp;&amp; cd ../../../../../\n</pre>\n</div>\n</div>\n<div id=\"benchmark\">\n<h2>Benchmark</h2>\n<p>Run the benchmark to test the n-link pendulum problem with the various backends:</p>\n<pre>$ python bin/benchmark_pydy_code_gen.py &lt;max # of links&gt; &lt;# of time steps&gt;\n</pre>\n</div>\n<div id=\"related-packages\">\n<h2>Related Packages</h2>\n<p>These are various related and similar Python packages:</p>\n<ul>\n<li><a href=\"https://github.com/cdsousa/sympybotics\" rel=\"nofollow\">https://github.com/cdsousa/sympybotics</a></li>\n<li><a href=\"https://pypi.python.org/pypi/Hamilton\" rel=\"nofollow\">https://pypi.python.org/pypi/Hamilton</a></li>\n<li><a href=\"https://pypi.python.org/pypi/arboris\" rel=\"nofollow\">https://pypi.python.org/pypi/arboris</a></li>\n<li><a href=\"https://pypi.python.org/pypi/PyODE\" rel=\"nofollow\">https://pypi.python.org/pypi/PyODE</a></li>\n<li><a href=\"https://pypi.python.org/pypi/odeViz\" rel=\"nofollow\">https://pypi.python.org/pypi/odeViz</a></li>\n<li><a href=\"https://pypi.python.org/pypi/ARS\" rel=\"nofollow\">https://pypi.python.org/pypi/ARS</a></li>\n<li><a href=\"https://pypi.python.org/pypi/pymunk\" rel=\"nofollow\">https://pypi.python.org/pypi/pymunk</a></li>\n</ul>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you make use of PyDy in your work or research, please cite us in your\npublications or on the web. This citation can be used:</p>\n<blockquote>\nGilbert Gede, Dale L Peterson, Angadh S Nanjangud, Jason K Moore, and Mont\nHubbard, \u201cConstrained Multibody Dynamics With Python: From Symbolic Equation\nGeneration to Publication\u201d, ASME 2013 International Design Engineering\nTechnical Conferences and Computers and Information in Engineering\nConference, 2013, <a href=\"http://dx.doi.org/10.1115/DETC2013-13470\" rel=\"nofollow\">10.1115/DETC2013-13470</a>.</blockquote>\n</div>\n<div id=\"questions-bugs-feature-requests\">\n<h2>Questions, Bugs, Feature Requests</h2>\n<p>If you have any question about installation, usage, etc, feel free send a\nmessage to our public <a href=\"http://groups.google.com/group/pydy\" rel=\"nofollow\">mailing list</a> or visit our <a href=\"https://gitter.im/pydy/pydy\" rel=\"nofollow\">Gitter chatroom</a>.</p>\n<p>If you think there\u2019s a bug or you would like to request a feature, please open\nan <a href=\"https://github.com/pydy/pydy/issues\" rel=\"nofollow\">issue</a> on Github.</p>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<div id=\"id8\">\n<h3>0.5.0</h3>\n<ul>\n<li>SymPy introduced a backward incompatibility to differentiation Matrices in\nSymPy 1.2, which remained in SymPy 1.3, see:\n<a href=\"https://github.com/sympy/sympy/issues/14958\" rel=\"nofollow\">https://github.com/sympy/sympy/issues/14958</a>. This breaks PyDy\u2019s System class,\nsee: <a href=\"https://github.com/pydy/pydy/issues/395\" rel=\"nofollow\">https://github.com/pydy/pydy/issues/395</a>. A fix is introduced to handle\nall support versions of SymPy. [PR <a href=\"https://github.com/pydy/pydy/pull/408\" rel=\"nofollow\">#408</a>]</li>\n<li>Added a new example for anthropomorphic arm. [PR <a href=\"https://github.com/pydy/pydy/pull/406\" rel=\"nofollow\">#406</a>]</li>\n<li>Fixed errors in the differential drive example. [PR <a href=\"https://github.com/pydy/pydy/pull/405\" rel=\"nofollow\">#405</a>]</li>\n<li>Added a new example for a scara arm. [PR <a href=\"https://github.com/pydy/pydy/pull/402\" rel=\"nofollow\">#402</a>]</li>\n<li>Fixed errors due to backwards incompatible changes with various dependencies. [PR <a href=\"https://github.com/pydy/pydy/pull/397\" rel=\"nofollow\">#397</a>]</li>\n<li>ODEFunctionGenerator now works with no constants symbols. [PR <a href=\"https://github.com/pydy/pydy/pull/391\" rel=\"nofollow\">#391</a>]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.4.0</h3>\n<ul>\n<li>Bumped minimum Jupyter notebook to 4.0 and restricted to &lt; 5.0. [PR <a href=\"https://github.com/pydy/pydy/pull/381\" rel=\"nofollow\">#381</a>]</li>\n<li>Removed several deprecated functions. [PR <a href=\"https://github.com/pydy/pydy/pull/375\" rel=\"nofollow\">#375</a>]</li>\n<li>Bumped minimum required hard dependencies to Ubuntu 16.04 LTS package\nversions. [PR <a href=\"https://github.com/pydy/pydy/pull/372\" rel=\"nofollow\">#372</a>]</li>\n<li>Implemented ThreeJS Tube Geometry. [PR <a href=\"https://github.com/pydy/pydy/pull/368\" rel=\"nofollow\">#368</a>]</li>\n<li>Improved circle rendering. [PR <a href=\"https://github.com/pydy/pydy/pull/357\" rel=\"nofollow\">#357</a>]</li>\n<li>kwargs can be passed from System.generate_ode_function to the matrix\ngenerator. [PR <a href=\"https://github.com/pydy/pydy/pull/356\" rel=\"nofollow\">#356</a>]</li>\n<li>Lagrangian simple pendulum example added. [PR <a href=\"https://github.com/pydy/pydy/pull/351\" rel=\"nofollow\">#351</a>]</li>\n<li>Derivatives can now be used as specifies in System. [PR <a href=\"https://github.com/pydy/pydy/pull/340\" rel=\"nofollow\">#340</a>]</li>\n<li>The initial conditions can now be adjusted in the notebook GUI. [PR <a href=\"https://github.com/pydy/pydy/pull/333\" rel=\"nofollow\">#333</a>]</li>\n<li>The width of the viz canvas is now properly bounded in the notebook. [PR <a href=\"https://github.com/pydy/pydy/pull/332\" rel=\"nofollow\">#332</a>]</li>\n<li>Planes now render both sides in the visualization GUI. [PR <a href=\"https://github.com/pydy/pydy/pull/330\" rel=\"nofollow\">#330</a>]</li>\n<li>Adds in more type checks for System.times. [PR <a href=\"https://github.com/pydy/pydy/pull/322\" rel=\"nofollow\">#322</a>]</li>\n<li>Added an OctaveMatrixGenerator for basic Octave/Matlab printing. [PR <a href=\"https://github.com/pydy/pydy/pull/323\" rel=\"nofollow\">#323</a>]</li>\n<li>Simplified the right hand side evaluation code in the ODEFunctionGenerator.\nNote that this change comes with some performance hits. [PR <a href=\"https://github.com/pydy/pydy/pull/301\" rel=\"nofollow\">#301</a>]</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>0.3.1</h3>\n<ul>\n<li>Removed the general deprecation warning from System. [PR <a href=\"https://github.com/pydy/pydy/pull/262\" rel=\"nofollow\">#262</a>]</li>\n<li>Don\u2019t assume user enters input in server shutdown. [PR <a href=\"https://github.com/pydy/pydy/pull/264\" rel=\"nofollow\">#264</a>]</li>\n<li>Use vectorized operations to compute transformations. [PR <a href=\"https://github.com/pydy/pydy/pull/266\" rel=\"nofollow\">#266</a>]</li>\n<li>Speedup theano generators. [PR <a href=\"https://github.com/pydy/pydy/pull/267\" rel=\"nofollow\">#267</a>]</li>\n<li>Correct time is displayed on the animation slider. [PR <a href=\"https://github.com/pydy/pydy/pull/272\" rel=\"nofollow\">#272</a>]</li>\n<li>Test optional dependencies only if installed. [PR <a href=\"https://github.com/pydy/pydy/pull/276\" rel=\"nofollow\">#276</a>]</li>\n<li>Require benchmark to run in Travis. [PR <a href=\"https://github.com/pydy/pydy/pull/277\" rel=\"nofollow\">#277</a>]</li>\n<li>Fix dependency minimum versions in setup.py [PR <a href=\"https://github.com/pydy/pydy/pull/279\" rel=\"nofollow\">#279</a>]</li>\n<li>Make CSE optional in CMatrixGenerator. [PR <a href=\"https://github.com/pydy/pydy/pull/284\" rel=\"nofollow\">#284</a>]</li>\n<li>Fix codegen line break. [PR <a href=\"https://github.com/pydy/pydy/pull/292\" rel=\"nofollow\">#292</a>]</li>\n<li>Don\u2019t assume Scene always has a System. [PR <a href=\"https://github.com/pydy/pydy/pull/295\" rel=\"nofollow\">#295</a>]</li>\n<li>Python 3.5 support and testing against Python 3.5 on Travis. [PR <a href=\"https://github.com/pydy/pydy/pull/305\" rel=\"nofollow\">#305</a>]</li>\n<li>Set minimum dependency versions to match Ubuntu Trusty 14.04 LTS. [PR <a href=\"https://github.com/pydy/pydy/pull/306\" rel=\"nofollow\">#306</a>]</li>\n<li>Replace sympy.phyics.mechanics deprecated methods. [PR <a href=\"https://github.com/pydy/pydy/pull/309\" rel=\"nofollow\">#309</a>]</li>\n<li>Updated installation details to work with IPython/Jupyter 4.0. [PR <a href=\"https://github.com/pydy/pydy/pull/311\" rel=\"nofollow\">#311</a>]</li>\n<li>Avoid the IPython widget deprecation warning if possible. [PR <a href=\"https://github.com/pydy/pydy/pull/311\" rel=\"nofollow\">#311</a>]</li>\n<li>Updated the mass-spring-damper example to IPy4 and added version_information. [PR <a href=\"https://github.com/pydy/pydy/pull/312\" rel=\"nofollow\">#312</a>]</li>\n<li>The Cython backend now compiles on Windows. [PR <a href=\"https://github.com/pydy/pydy/pull/313\" rel=\"nofollow\">#313</a>]</li>\n<li>CI testing is now run on appveyor with Windows VMs. [PR <a href=\"https://github.com/pydy/pydy/pull/315\" rel=\"nofollow\">#315</a>]</li>\n<li>Added a verbose option to the Cython compilation. [PR <a href=\"https://github.com/pydy/pydy/pull/315\" rel=\"nofollow\">#315</a>]</li>\n<li>Fixed the RHS autogeneration. [PR <a href=\"https://github.com/pydy/pydy/pull/318\" rel=\"nofollow\">#318</a>]</li>\n<li>Improved the camera code through inheritance [PR <a href=\"https://github.com/pydy/pydy/pull/319\" rel=\"nofollow\">#319</a>]</li>\n</ul>\n</div>\n<div id=\"id51\">\n<h3>0.3.0</h3>\n<div id=\"user-facing\">\n<h4>User Facing</h4>\n<ul>\n<li>Introduced conda builds and binstar support. [PR <a href=\"https://github.com/pydy/pydy/pull/219\" rel=\"nofollow\">#219</a>]</li>\n<li>Dropped support for IPython &lt; 3.0. [PR <a href=\"https://github.com/pydy/pydy/pull/237\" rel=\"nofollow\">#237</a>]</li>\n<li>Added support Python 3.3 and 3.4. [PR <a href=\"https://github.com/pydy/pydy/pull/229\" rel=\"nofollow\">#229</a>]</li>\n<li>Bumped up the minimum dependencies for NumPy, SciPy, and Cython [PR <a href=\"https://github.com/pydy/pydy/pull/233\" rel=\"nofollow\">#233</a>].</li>\n<li>Removed the partial implementation of the Mesh shape. [PR <a href=\"https://github.com/pydy/pydy/pull/172\" rel=\"nofollow\">#172</a>]</li>\n<li>Overhauled the code generation package to make the generators more easily\nextensible and to improve simulation speed. [PR <a href=\"https://github.com/pydy/pydy/pull/113\" rel=\"nofollow\">#113</a>]</li>\n<li>The visualizer has been overhauled as part of Tarun Gaba\u2019s 2014 GSoC\ninternship [PR <a href=\"https://github.com/pydy/pydy/pull/82\" rel=\"nofollow\">#82</a>]. Here are some of the changes:<ul>\n<li>The JavaScript is now handled by AJAX and requires a simple server.</li>\n<li>The JavaScript has been overhauled and now uses prototype.js for object\noriented design.</li>\n<li>The visualizer can now be loaded in an IPython notebook via IPython\u2019s\nwidgets using <tt>Scene.display_ipython()</tt>.</li>\n<li>A slider was added to manually control the frame playback.</li>\n<li>The visualization shapes\u2019 attributes can be manipulated via the GUI.</li>\n<li>The scene json file can be edited and downloaded from the GUI.</li>\n<li>pydy.viz generates two JSONs now (instead of one in earlier versions). The\nJSON generated from earlier versions will <strong>not</strong> work in the new version.</li>\n<li>Shapes can now have a material attribute.</li>\n<li>Model constants can be modified and the simulations can be rerun all via\nthe GUI.</li>\n<li>Switched from socket based server to python\u2019s core SimpleHTTPServer.</li>\n<li>The server has a proper shutdown response [PR <a href=\"https://github.com/pydy/pydy/pull/241\" rel=\"nofollow\">#241</a>]</li>\n</ul>\n</li>\n<li>Added a new experimental System class and module to more seamlessly manage\nintegrating the equations of motion. [PR <a href=\"https://github.com/pydy/pydy/pull/81\" rel=\"nofollow\">#81</a>]</li>\n</ul>\n</div>\n<div id=\"development\">\n<h4>Development</h4>\n<ul>\n<li>Switched to a conda based Travis testing setup. [PR <a href=\"https://github.com/pydy/pydy/pull/231\" rel=\"nofollow\">#231</a>]</li>\n<li>When using older SymPy development versions with non-PEP440 compliant version\nidentifiers, setuptools &lt; 8 is required. [PR <a href=\"https://github.com/pydy/pydy/pull/166\" rel=\"nofollow\">#166</a>]</li>\n<li>Development version numbers are now PEP 440 compliant. [PR <a href=\"https://github.com/pydy/pydy/pull/141\" rel=\"nofollow\">#141</a>]</li>\n<li>Introduced pull request checklists and CONTRIBUTING file. [PR <a href=\"https://github.com/pydy/pydy/pull/146\" rel=\"nofollow\">#146</a>]</li>\n<li>Introduced light code linting into Travis. [PR <a href=\"https://github.com/pydy/pydy/pull/148\" rel=\"nofollow\">#148</a>]</li>\n</ul>\n</div>\n</div>\n<div id=\"id66\">\n<h3>0.2.1</h3>\n<ul>\n<li>Unbundled unnecessary files from tar ball.</li>\n</ul>\n</div>\n<div id=\"id67\">\n<h3>0.2.0</h3>\n<ul>\n<li>Merged pydy_viz, pydy_code_gen, and pydy_examples into the source tree.</li>\n<li>Added a method to output \u201cstatic\u201d visualizations from a Scene object.</li>\n<li>Dropped the matplotlib dependency and now only three.js colors are valid.</li>\n<li>Added joint torques to the n_pendulum model.</li>\n<li>Added basic examples for codegen and viz.</li>\n<li>Graceful fail if theano or cython are not present.</li>\n<li>Shapes can now use sympy symbols for geometric dimensions.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4678337, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "76a0c3fac1227259e8e185beb0b05cfa", "sha256": "fde0223e881e6bc09fee6bdf78c368d501b41d27ca917fd16a64a6c7e557f1d9"}, "downloads": -1, "filename": "pydy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "76a0c3fac1227259e8e185beb0b05cfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2822, "upload_time": "2014-02-22T22:16:41", "upload_time_iso_8601": "2014-02-22T22:16:41.194703Z", "url": "https://files.pythonhosted.org/packages/7b/8f/448b02e8f0a2dcb80bed216485e53fd2b555b8b9b99741ad1e360bf96e65/pydy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "21b5b8c93dc462313da3905d3208ed52", "sha256": "dc2119eab96a87d96842ee5633a7bd722d69f3e0867864a76537b56f3df1d8e9"}, "downloads": -1, "filename": "pydy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "21b5b8c93dc462313da3905d3208ed52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 370355, "upload_time": "2014-06-19T03:48:31", "upload_time_iso_8601": "2014-06-19T03:48:31.397890Z", "url": "https://files.pythonhosted.org/packages/ba/72/a78b2fbdcc708ffaab4adea5f699f13bc1651bed23798d2ab98447c14942/pydy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "013b41ec1f46b50a484cd1f42c0f55fb", "sha256": "0076eebed9303b7c061850ab169c0c42e333d6fe96a80b663c1f19a3f960e9b9"}, "downloads": -1, "filename": "pydy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "013b41ec1f46b50a484cd1f42c0f55fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368257, "upload_time": "2014-06-19T16:28:25", "upload_time_iso_8601": "2014-06-19T16:28:25.908599Z", "url": "https://files.pythonhosted.org/packages/3d/37/99bcb6e4cf1a6d1181a1aeefa37e62c1dc79ce6c0c5638156a7248629562/pydy-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4f4812a4e989519149298e475561a7e9", "sha256": "04e13564a17b1d2fb0325daa327c69eb77a4acefa43323f16a440e9ebb29fe29"}, "downloads": -1, "filename": "pydy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4f4812a4e989519149298e475561a7e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5290022, "upload_time": "2015-06-19T00:26:16", "upload_time_iso_8601": "2015-06-19T00:26:16.873038Z", "url": "https://files.pythonhosted.org/packages/6b/b7/d6107d4458bdd219890a325a0f049c3eab1ed52ccba920d3b6e649b5da9c/pydy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2c859ef49b09d075cec88f011bba1cef", "sha256": "00032887391bf65e0bab5bb40f4ded4cc1a54efc6d25b11dbd645867aa5900ef"}, "downloads": -1, "filename": "pydy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "2c859ef49b09d075cec88f011bba1cef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5302726, "upload_time": "2016-01-07T19:40:43", "upload_time_iso_8601": "2016-01-07T19:40:43.816667Z", "url": "https://files.pythonhosted.org/packages/d0/c6/17073075f65ee3dc7148d8e269764c45fb0149e426a137f586ba7fc13030/pydy-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f95d189fb28d1eba10e4abfa2a08d790", "sha256": "2c309d17cd9059a98f47c2fd25521b009eacb9e4538e9b1a7cfaf3cd450103b1"}, "downloads": -1, "filename": "pydy-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f95d189fb28d1eba10e4abfa2a08d790", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5305626, "upload_time": "2017-05-29T23:26:23", "upload_time_iso_8601": "2017-05-29T23:26:23.626215Z", "url": "https://files.pythonhosted.org/packages/e8/b0/cae58edf0c540497c6d4f698655eddc4f61d17fdbfa9b08b05f4cf146e48/pydy-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "97ba3e70acc8b9121c7f70ff06c70e37", "sha256": "1b487a62b55a8c8664009b09bf789254b2c942cd704a380bedb1057418c94fa2"}, "downloads": -1, "filename": "pydy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "97ba3e70acc8b9121c7f70ff06c70e37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5307893, "upload_time": "2019-01-09T20:29:48", "upload_time_iso_8601": "2019-01-09T20:29:48.233309Z", "url": "https://files.pythonhosted.org/packages/68/61/c55f9a56297f4301aa01a2ff88208f6c603d11e4b2284162089ad96b1f43/pydy-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97ba3e70acc8b9121c7f70ff06c70e37", "sha256": "1b487a62b55a8c8664009b09bf789254b2c942cd704a380bedb1057418c94fa2"}, "downloads": -1, "filename": "pydy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "97ba3e70acc8b9121c7f70ff06c70e37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5307893, "upload_time": "2019-01-09T20:29:48", "upload_time_iso_8601": "2019-01-09T20:29:48.233309Z", "url": "https://files.pythonhosted.org/packages/68/61/c55f9a56297f4301aa01a2ff88208f6c603d11e4b2284162089ad96b1f43/pydy-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:38 2020"}