{"info": {"author": "Oleg Bulkin", "author_email": "o.bulkin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: C", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Programming Language :: Python :: Implementation :: Stackless", "Topic :: Software Development :: Libraries"], "description": "==========\nStringDist\n==========\n\nThis package provides the ``stringdist`` module, which includes functions for \ncalculating raw and normalized versions of the following string distance \nmeasurements:\n\n* Levenshtein distance\n* Restricted Damerau-Levenshtein distance (a.k.a. optimal string alignment \n  distance)\n\nFor optimal performance, the package compiles and uses a C extension module \nunder the hood, but a Python implementation is included as well and will \nautomatically be used if C extensions are not supported by the system \n(e.g. when the selected interpreter is PyPy).\n\nInstallation\n============\n\nTo install this package, just use pip::\n\n    pip install StringDist\n\nAll Python versions ``>=3.3`` should be supported.\n\nUsage\n=====\n\nTo use the package, simply import the ``stringdist`` module and call the \ndesired function, passing in two strings::\n\n    import stringdist\n    stringdist.levenshtein('test', 'testing')\n\nThe available functions are as follows:\n\n* ``levenshtein``\n* ``levenshtein_norm``\n* ``rdlevenshtein``\n* ``rdlevenshtein_norm``\n\nRaw distances assume that every allowed operation has a cost of ``1``. \nNormalized distances are floats in the range ``[0.0, 1.0]``, where ``0.0`` \nalways corresponds to a raw value of ``0`` and ``1.0`` always corresponds to \nthe length of the longer string, i.e. the biggest possible raw value.\n\n**Note**: The restricted Damerau-Levenshtein distance is not a true distance \nmetric because it does not satisfy the \n`triangle inequality <https://en.wikipedia.org/wiki/Triangle_inequality>`_. \nThis makes it a poor choice for applications that involve evaluating the \nsimilarity of more than two strings, such as clustering.\n\nBugs and Requests\n=================\n\nPlease use `GitHub Issues <https://github.com/obulkin/string-dist/issues>`_ \nfor bugs and feature requests, checking first to make sure you're not creating \na duplicate issue.\n\nContributing\n============\n\nPull requests are welcome. Please discuss your plans first by creating a \nGitHub issue and use good coding style. For Python, this means following the \nrules laid out in PEP 8 and other relevant PEPs. If in doubt, use a linter \nlike `Pylint <https://www.pylint.org>`_.\n\nTo run unit tests::\n\n    git clone https://github.com/obulkin/string-dist.git {directory}\n    cd {directory}\n    python setup.py install\n    python -m unittest -v test_stringdist\n\nYou can run tests without installing the package, but this will always cause \nthe Python implementation to be used as the C variant has to be compiled \nfirst. By the same token, any changes to the C code will require recompilation \nbefore showing up in the tests, which can be handled by running \n``python setup.py install`` again.\n\nContributors\n============\n\n* Oleg Bulkin <o.bulkin@gmail.com>\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/obulkin/string-dist", "keywords": "string metric string distance edit distance levenshtein damerau-levenshtein optimal string alignment distance", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "StringDist", "package_url": "https://pypi.org/project/StringDist/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/StringDist/", "project_urls": {"Homepage": "https://github.com/obulkin/string-dist"}, "release_url": "https://pypi.org/project/StringDist/1.0.9/", "requires_dist": null, "requires_python": "", "summary": "This package provides the stringdist module, which includes several functions for calculating string distances. Under the hood, a C extension module is preferentially used for optimal performance, with an automatic fallback to a Python implementation.", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides the <tt>stringdist</tt> module, which includes functions for\ncalculating raw and normalized versions of the following string distance\nmeasurements:</p>\n<ul>\n<li>Levenshtein distance</li>\n<li>Restricted Damerau-Levenshtein distance (a.k.a. optimal string alignment\ndistance)</li>\n</ul>\n<p>For optimal performance, the package compiles and uses a C extension module\nunder the hood, but a Python implementation is included as well and will\nautomatically be used if C extensions are not supported by the system\n(e.g. when the selected interpreter is PyPy).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install this package, just use pip:</p>\n<pre>pip install StringDist\n</pre>\n<p>All Python versions <tt>&gt;=3.3</tt> should be supported.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use the package, simply import the <tt>stringdist</tt> module and call the\ndesired function, passing in two strings:</p>\n<pre>import stringdist\nstringdist.levenshtein('test', 'testing')\n</pre>\n<p>The available functions are as follows:</p>\n<ul>\n<li><tt>levenshtein</tt></li>\n<li><tt>levenshtein_norm</tt></li>\n<li><tt>rdlevenshtein</tt></li>\n<li><tt>rdlevenshtein_norm</tt></li>\n</ul>\n<p>Raw distances assume that every allowed operation has a cost of <tt>1</tt>.\nNormalized distances are floats in the range <tt>[0.0, 1.0]</tt>, where <tt>0.0</tt>\nalways corresponds to a raw value of <tt>0</tt> and <tt>1.0</tt> always corresponds to\nthe length of the longer string, i.e. the biggest possible raw value.</p>\n<p><strong>Note</strong>: The restricted Damerau-Levenshtein distance is not a true distance\nmetric because it does not satisfy the\n<a href=\"https://en.wikipedia.org/wiki/Triangle_inequality\" rel=\"nofollow\">triangle inequality</a>.\nThis makes it a poor choice for applications that involve evaluating the\nsimilarity of more than two strings, such as clustering.</p>\n</div>\n<div id=\"bugs-and-requests\">\n<h2>Bugs and Requests</h2>\n<p>Please use <a href=\"https://github.com/obulkin/string-dist/issues\" rel=\"nofollow\">GitHub Issues</a>\nfor bugs and feature requests, checking first to make sure you\u2019re not creating\na duplicate issue.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Pull requests are welcome. Please discuss your plans first by creating a\nGitHub issue and use good coding style. For Python, this means following the\nrules laid out in PEP 8 and other relevant PEPs. If in doubt, use a linter\nlike <a href=\"https://www.pylint.org\" rel=\"nofollow\">Pylint</a>.</p>\n<p>To run unit tests:</p>\n<pre>git clone https://github.com/obulkin/string-dist.git {directory}\ncd {directory}\npython setup.py install\npython -m unittest -v test_stringdist\n</pre>\n<p>You can run tests without installing the package, but this will always cause\nthe Python implementation to be used as the C variant has to be compiled\nfirst. By the same token, any changes to the C code will require recompilation\nbefore showing up in the tests, which can be handled by running\n<tt>python setup.py install</tt> again.</p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Oleg Bulkin &lt;<a href=\"mailto:o.bulkin%40gmail.com\">o<span>.</span>bulkin<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2866376, "releases": {"1.0.6": [{"comment_text": "", "digests": {"md5": "e19e4fef88ca04d33569ad44393ab7e0", "sha256": "f5c80132148a756b51a24ca141b36939b9a470750f8176789833f736ea99dd36"}, "downloads": -1, "filename": "StringDist-1.0.6.tar.gz", "has_sig": false, "md5_digest": "e19e4fef88ca04d33569ad44393ab7e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7266, "upload_time": "2017-05-11T07:37:05", "upload_time_iso_8601": "2017-05-11T07:37:05.689607Z", "url": "https://files.pythonhosted.org/packages/b9/d7/c79164116089609cfc29904cd1887ff2ae89f51bf628b1fda307b2b89ad7/StringDist-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "9df747e3e349dfdd53d5aa299824f1e9", "sha256": "b57b0f2400aa19193f410bec5f544da16f245fd1a1256324b8d992bae969d2d2"}, "downloads": -1, "filename": "StringDist-1.0.7.tar.gz", "has_sig": false, "md5_digest": "9df747e3e349dfdd53d5aa299824f1e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7267, "upload_time": "2017-05-11T07:48:27", "upload_time_iso_8601": "2017-05-11T07:48:27.602445Z", "url": "https://files.pythonhosted.org/packages/89/97/52a35bc741d7fa5c8643c55a6edce2366ceb0a57594c48a63b907378b7cd/StringDist-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "c7a2ef5880d59896d011ecd231d177bd", "sha256": "17789eaabd84025c200af45986cef9acd4a464b01f8404938defcb99b16173cf"}, "downloads": -1, "filename": "StringDist-1.0.8.tar.gz", "has_sig": false, "md5_digest": "c7a2ef5880d59896d011ecd231d177bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7377, "upload_time": "2017-05-11T07:50:13", "upload_time_iso_8601": "2017-05-11T07:50:13.721365Z", "url": "https://files.pythonhosted.org/packages/db/39/7c0ce6f126ad7ec61194b8dd2633fd8953ac0fc8073d6a4c05a383dc5c88/StringDist-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "7491a2a39dcb0d84253cf58902d9ec41", "sha256": "91e6d4a348223db094d029e7e3de9ce89c561738047555dfad60ff5ccb7a5b74"}, "downloads": -1, "filename": "StringDist-1.0.9.tar.gz", "has_sig": false, "md5_digest": "7491a2a39dcb0d84253cf58902d9ec41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7400, "upload_time": "2017-05-11T07:54:54", "upload_time_iso_8601": "2017-05-11T07:54:54.261901Z", "url": "https://files.pythonhosted.org/packages/85/f0/c56cbe92b4b06fbc7adaa81917ad34d7027834e166fff2d2db73961c67fa/StringDist-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7491a2a39dcb0d84253cf58902d9ec41", "sha256": "91e6d4a348223db094d029e7e3de9ce89c561738047555dfad60ff5ccb7a5b74"}, "downloads": -1, "filename": "StringDist-1.0.9.tar.gz", "has_sig": false, "md5_digest": "7491a2a39dcb0d84253cf58902d9ec41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7400, "upload_time": "2017-05-11T07:54:54", "upload_time_iso_8601": "2017-05-11T07:54:54.261901Z", "url": "https://files.pythonhosted.org/packages/85/f0/c56cbe92b4b06fbc7adaa81917ad34d7027834e166fff2d2db73961c67fa/StringDist-1.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:12 2020"}