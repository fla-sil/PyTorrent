{"info": {"author": "Stefan Endres, Carl Sandrock", "author_email": "stefan.c.endres@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": ".. image:: https://travis-ci.org/Stefan-Endres/tgo.svg?branch=master\n    :target: https://travis-ci.org/Stefan-Endres/tgo\n.. image:: https://coveralls.io/repos/github/Stefan-Endres/tgo/badge.png?branch=master\n    :target: https://coveralls.io/github/Stefan-Endres/tgo?branch=master\n\n\nDescription\n-----------\n\nFinds the global minimum of a function using topographical global\noptimisation (tgo_). Appropriate for solving general purpose NLP and blackbox\noptimisation problems to global optimality (low dimensional problems).\nThe general form of an optimisation problem is given by:\n\n.. _tgo: https://stefan-endres.github.io/tgo/\n\n::\n\n    minimize f(x) subject to\n\n    g_i(x) >= 0,  i = 1,...,m\n    h_j(x)  = 0,  j = 1,...,p\n\nwhere x is a vector of one or more variables. ``f(x)`` is the objective\nfunction ``R^n -> R``, ``g_i(x)`` are the inequality constraints.\n``h_j(x)`` are the equality constrains.\n\n\nInstallation\n------------\nStable:\n\n.. code::\n\n    $ pip install tgo\n\nLatest:\n\n.. code::\n\n    $ git clone https://bitbucket.org/upiamcompthermo/tgo\n    $ cd tgo\n    $ python setup.py install\n    $ python setup.py test\n\nDocumentation\n-------------\nThe docstrings and project website https://stefan-endres.github.io/tgo/ contains more detailed examples, notes and performance profiles.\n\nQuick example\n-------------\n\nConsider the problem of minimizing the Rosenbrock function. This function is implemented in ``rosen`` in ``scipy.optimize``\n\n.. code:: python\n\n    >>> from scipy.optimize import rosen\n    >>> from tgo import tgo\n    >>> bounds = [(0,2), (0, 2), (0, 2), (0, 2), (0, 2)]\n    >>> result = shgo(rosen, bounds)\n    >>> result.x, result.fun\n    (array([ 1.,  1.,  1.,  1.,  1.]), 2.9203923741900809e-18)\n\nNote that bounds determine the dimensionality of the objective function and is therefore a required input, however you can specify empty bounds using ``None`` or objects like numpy.inf which will be converted to large float numbers.\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stefan-endres/tgo", "keywords": "optimization", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tgo", "package_url": "https://pypi.org/project/tgo/", "platform": "", "project_url": "https://pypi.org/project/tgo/", "project_urls": {"Homepage": "https://github.com/stefan-endres/tgo"}, "release_url": "https://pypi.org/project/tgo/0.1/", "requires_dist": ["scipy", "numpy", "pytest", "pytest-cov", "multiprocessing-on-dill; extra == 'dill support'"], "requires_python": "", "summary": "Topographical global optimisation", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Stefan-Endres/tgo\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Stefan-Endres/tgo.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4a4b0db74fcde963cb5c7e3bb9521b642b5fabf/68747470733a2f2f7472617669732d63692e6f72672f53746566616e2d456e647265732f74676f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Stefan-Endres/tgo?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/Stefan-Endres/tgo/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41d0cbd90da0c41b163a2f2d62dd3efc530f1bf5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f53746566616e2d456e647265732f74676f2f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Finds the global minimum of a function using topographical global\noptimisation (<a href=\"https://stefan-endres.github.io/tgo/\" rel=\"nofollow\">tgo</a>). Appropriate for solving general purpose NLP and blackbox\noptimisation problems to global optimality (low dimensional problems).\nThe general form of an optimisation problem is given by:</p>\n<pre>minimize f(x) subject to\n\ng_i(x) &gt;= 0,  i = 1,...,m\nh_j(x)  = 0,  j = 1,...,p\n</pre>\n<p>where x is a vector of one or more variables. <tt>f(x)</tt> is the objective\nfunction <tt>R^n <span class=\"pre\">-&gt;</span> R</tt>, <tt>g_i(x)</tt> are the inequality constraints.\n<tt>h_j(x)</tt> are the equality constrains.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Stable:</p>\n<pre>$ pip install tgo\n</pre>\n<p>Latest:</p>\n<pre>$ git clone https://bitbucket.org/upiamcompthermo/tgo\n$ cd tgo\n$ python setup.py install\n$ python setup.py test\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The docstrings and project website <a href=\"https://stefan-endres.github.io/tgo/\" rel=\"nofollow\">https://stefan-endres.github.io/tgo/</a> contains more detailed examples, notes and performance profiles.</p>\n</div>\n<div id=\"quick-example\">\n<h2>Quick example</h2>\n<p>Consider the problem of minimizing the Rosenbrock function. This function is implemented in <tt>rosen</tt> in <tt>scipy.optimize</tt></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">rosen</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">tgo</span> <span class=\"kn\">import</span> <span class=\"n\">tgo</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bounds</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">shgo</span><span class=\"p\">(</span><span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">fun</span>\n<span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">1.</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span><span class=\"p\">,</span>  <span class=\"mf\">1.</span><span class=\"p\">]),</span> <span class=\"mf\">2.9203923741900809e-18</span><span class=\"p\">)</span>\n</pre>\n<p>Note that bounds determine the dimensionality of the objective function and is therefore a required input, however you can specify empty bounds using <tt>None</tt> or objects like numpy.inf which will be converted to large float numbers.</p>\n</div>\n\n          </div>"}, "last_serial": 3316813, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cca531f2c763017798152a10bb93b678", "sha256": "1e2c6161db5e633f6498f96e52619cfaca815fbda678032f74af340de080533e"}, "downloads": -1, "filename": "tgo-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cca531f2c763017798152a10bb93b678", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 710412, "upload_time": "2017-11-08T16:55:34", "upload_time_iso_8601": "2017-11-08T16:55:34.669977Z", "url": "https://files.pythonhosted.org/packages/c2/57/b4124f82aec1171d468519d5f049486404da08cdb9f8df84fd3be9bb0966/tgo-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a805925fd59eaa652bc7bb5fb40073d", "sha256": "1ce614eaf86c0d58d866ff84dcd244cc4c1b7625cf1fefe1174d05b932632cdb"}, "downloads": -1, "filename": "tgo-0.1.tar.gz", "has_sig": false, "md5_digest": "8a805925fd59eaa652bc7bb5fb40073d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 710829, "upload_time": "2017-11-08T16:55:37", "upload_time_iso_8601": "2017-11-08T16:55:37.370766Z", "url": "https://files.pythonhosted.org/packages/fc/cd/d34007777b0b79513de27e5324c99df44342505e7fa251e05c44300cdc5e/tgo-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cca531f2c763017798152a10bb93b678", "sha256": "1e2c6161db5e633f6498f96e52619cfaca815fbda678032f74af340de080533e"}, "downloads": -1, "filename": "tgo-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cca531f2c763017798152a10bb93b678", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 710412, "upload_time": "2017-11-08T16:55:34", "upload_time_iso_8601": "2017-11-08T16:55:34.669977Z", "url": "https://files.pythonhosted.org/packages/c2/57/b4124f82aec1171d468519d5f049486404da08cdb9f8df84fd3be9bb0966/tgo-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a805925fd59eaa652bc7bb5fb40073d", "sha256": "1ce614eaf86c0d58d866ff84dcd244cc4c1b7625cf1fefe1174d05b932632cdb"}, "downloads": -1, "filename": "tgo-0.1.tar.gz", "has_sig": false, "md5_digest": "8a805925fd59eaa652bc7bb5fb40073d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 710829, "upload_time": "2017-11-08T16:55:37", "upload_time_iso_8601": "2017-11-08T16:55:37.370766Z", "url": "https://files.pythonhosted.org/packages/fc/cd/d34007777b0b79513de27e5324c99df44342505e7fa251e05c44300cdc5e/tgo-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:12 2020"}