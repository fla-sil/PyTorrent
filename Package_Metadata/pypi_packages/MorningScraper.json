{"info": {"author": "Toby Dacre", "author_email": "toby.junk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "MorningScraper:  Simple scraper for morningstar.co.uk\n=====================================================\n\nA quick and dirty web page scraper for `morningstar.co.uk <http://morningstar.co.uk>`_.\n\nSome stocks are updated via javascript and so the information is not available by just scraping the html.\n\n\n**funds** are best referenced by ISIN e.g.\n\n``'GB00B54RK123'`` - CF Odey Opus I Acc\n\n``'LU1023728089'`` - Moorea Fd Euro Fixed Income IE\n\n**stocks** are best referenced by name and exchange e.g.\n\n``'LLOY LSE'`` - Lloyds Banking Group PLC\n\n``'GOOG NASDAQ'`` - Google Inc Class C Capital Stock\n\n\n\n\nfunctions\n^^^^^^^^^\n\nmorningscraper.\\ **search(ref, verbose=False)**\n\nSearch morningstar.co.uk for ref\n\nIf ref is found and is a fund or stock return details\n\n*Args*:\n    ref (str): search term can be ISIN or search term\n\n    verbose (bool): provide output\n\n*Returns*:\n    list of dicts: containing info\n\n    .. code ::\n\n        dict for stock:\n            {\n                'name': (str) name of stock\n                'url': (str) url for stock info\n                'type': (str) 'Stock'\n                'ticker': (str) ticker name\n                'currency': (str) currency code of stock\n            }\n\n        dict for fund:\n            {\n                'name': (str) name of fund\n                'url': (str) url for fund info\n                'type': (str) 'Fund'\n                'ISIN': (str) ISIN of fund\n            }\n\n\n\nmorningscraper.\\ **get_data(ref, verbose=False)**\n\nSearch morningstar.co.uk for ref\n\nIf ref is found return details for each fund/stock\n\n*Args*:\n    ref (str): search term can be ISIN or search term\n\n    verbose (bool): provide output\n\n*Returns*:\n    list of dicts: containing info:\n\n    .. code::\n\n        [{\n            'name': (str) name of the fund/stock\n            'ISIN': (str) ISIN reference for the fund/stock\n            'date': (Date) date of valuation\n            'value': (Decimal) value of the fund/stock\n            'currency': (str) currency e.g. GBP USD\n            'change': (str) percent change, including %\n            'type': (str) e.g. Fund Stock\n            'url': (str) fully qualified url info gathered from\n        }, ...]\n\n\n\nmorningscraper.\\ **get_url(url, verbose=False)**\n\nopen morningstar.co.uk url and return details\n\n*Args*:\n    url (str): url to parse\n\n    verbose (bool): provide output\n\n*Returns*:\n    dict: containing info:\n\n    .. code::\n\n        {\n            'name': (str) name of the fund/stock\n            'ISIN': (str) ISIN reference for the fund/stock\n            'date': (Date) date of valuation\n            'value': (Decimal) value of the fund/stock\n            'currency': (str) currency e.g. GBP USD\n            'change': (str) percent change, including %\n            'type': (str) e.g. Fund Stock\n            'url': (str) fully qualified url info gathered from\n        }", "description_content_type": null, "docs_url": "https://pythonhosted.org/MorningScraper/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tobes/MorningScraper", "keywords": "morningstar", "license": "LGPLv2", "maintainer": null, "maintainer_email": null, "name": "MorningScraper", "package_url": "https://pypi.org/project/MorningScraper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/MorningScraper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tobes/MorningScraper"}, "release_url": "https://pypi.org/project/MorningScraper/0.1/", "requires_dist": null, "requires_python": null, "summary": "Simple scraper for morningstar.co.uk", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A quick and dirty web page scraper for <a href=\"http://morningstar.co.uk\" rel=\"nofollow\">morningstar.co.uk</a>.</p>\n<p>Some stocks are updated via javascript and so the information is not available by just scraping the html.</p>\n<p><strong>funds</strong> are best referenced by ISIN e.g.</p>\n<p><tt>'GB00B54RK123'</tt> - CF Odey Opus I Acc</p>\n<p><tt>'LU1023728089'</tt> - Moorea Fd Euro Fixed Income IE</p>\n<p><strong>stocks</strong> are best referenced by name and exchange e.g.</p>\n<p><tt>'LLOY LSE'</tt> - Lloyds Banking Group PLC</p>\n<p><tt>'GOOG NASDAQ'</tt> - Google Inc Class C Capital Stock</p>\n<div id=\"functions\">\n<h2>functions</h2>\n<p>morningscraper.<strong>search(ref, verbose=False)</strong></p>\n<p>Search morningstar.co.uk for ref</p>\n<p>If ref is found and is a fund or stock return details</p>\n<dl>\n<dt><em>Args</em>:</dt>\n<dd><p>ref (str): search term can be ISIN or search term</p>\n<p>verbose (bool): provide output</p>\n</dd>\n<dt><em>Returns</em>:</dt>\n<dd><p>list of dicts: containing info</p>\n<pre>dict for stock:\n    {\n        'name': (str) name of stock\n        'url': (str) url for stock info\n        'type': (str) 'Stock'\n        'ticker': (str) ticker name\n        'currency': (str) currency code of stock\n    }\n\ndict for fund:\n    {\n        'name': (str) name of fund\n        'url': (str) url for fund info\n        'type': (str) 'Fund'\n        'ISIN': (str) ISIN of fund\n    }\n</pre>\n</dd>\n</dl>\n<p>morningscraper.<strong>get_data(ref, verbose=False)</strong></p>\n<p>Search morningstar.co.uk for ref</p>\n<p>If ref is found return details for each fund/stock</p>\n<dl>\n<dt><em>Args</em>:</dt>\n<dd><p>ref (str): search term can be ISIN or search term</p>\n<p>verbose (bool): provide output</p>\n</dd>\n<dt><em>Returns</em>:</dt>\n<dd><p>list of dicts: containing info:</p>\n<pre>[{\n    'name': (str) name of the fund/stock\n    'ISIN': (str) ISIN reference for the fund/stock\n    'date': (Date) date of valuation\n    'value': (Decimal) value of the fund/stock\n    'currency': (str) currency e.g. GBP USD\n    'change': (str) percent change, including %\n    'type': (str) e.g. Fund Stock\n    'url': (str) fully qualified url info gathered from\n}, ...]\n</pre>\n</dd>\n</dl>\n<p>morningscraper.<strong>get_url(url, verbose=False)</strong></p>\n<p>open morningstar.co.uk url and return details</p>\n<dl>\n<dt><em>Args</em>:</dt>\n<dd><p>url (str): url to parse</p>\n<p>verbose (bool): provide output</p>\n</dd>\n<dt><em>Returns</em>:</dt>\n<dd><p>dict: containing info:</p>\n<pre>{\n    'name': (str) name of the fund/stock\n    'ISIN': (str) ISIN reference for the fund/stock\n    'date': (Date) date of valuation\n    'value': (Decimal) value of the fund/stock\n    'currency': (str) currency e.g. GBP USD\n    'change': (str) percent change, including %\n    'type': (str) e.g. Fund Stock\n    'url': (str) fully qualified url info gathered from\n}\n</pre>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 1589790, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2d7dfdd34a473ae95f9b7a695ce8bef3", "sha256": "32e3a2abde9b7ad5ad129aba4c6fdcc43e46e2c404f4e7079f6671620131dacc"}, "downloads": -1, "filename": "MorningScraper-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d7dfdd34a473ae95f9b7a695ce8bef3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8014, "upload_time": "2015-06-12T10:12:06", "upload_time_iso_8601": "2015-06-12T10:12:06.956172Z", "url": "https://files.pythonhosted.org/packages/52/c1/b7267ae68eda66931b06c8bb218b0b4f153096a5002c1e8fc4199c0efd3a/MorningScraper-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b6ba854b51eee086ab00de65dddc446", "sha256": "4d4fade4a3baed2729b08d9eec226d26df00a417787f87dfc456a0495eef7922"}, "downloads": -1, "filename": "MorningScraper-0.1.tar.gz", "has_sig": false, "md5_digest": "6b6ba854b51eee086ab00de65dddc446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4869, "upload_time": "2015-06-12T02:28:48", "upload_time_iso_8601": "2015-06-12T02:28:48.931258Z", "url": "https://files.pythonhosted.org/packages/79/c8/4844b5057fb881397d787c523985bebe7c20248ef415674357754918b6ea/MorningScraper-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d7dfdd34a473ae95f9b7a695ce8bef3", "sha256": "32e3a2abde9b7ad5ad129aba4c6fdcc43e46e2c404f4e7079f6671620131dacc"}, "downloads": -1, "filename": "MorningScraper-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d7dfdd34a473ae95f9b7a695ce8bef3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8014, "upload_time": "2015-06-12T10:12:06", "upload_time_iso_8601": "2015-06-12T10:12:06.956172Z", "url": "https://files.pythonhosted.org/packages/52/c1/b7267ae68eda66931b06c8bb218b0b4f153096a5002c1e8fc4199c0efd3a/MorningScraper-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b6ba854b51eee086ab00de65dddc446", "sha256": "4d4fade4a3baed2729b08d9eec226d26df00a417787f87dfc456a0495eef7922"}, "downloads": -1, "filename": "MorningScraper-0.1.tar.gz", "has_sig": false, "md5_digest": "6b6ba854b51eee086ab00de65dddc446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4869, "upload_time": "2015-06-12T02:28:48", "upload_time_iso_8601": "2015-06-12T02:28:48.931258Z", "url": "https://files.pythonhosted.org/packages/79/c8/4844b5057fb881397d787c523985bebe7c20248ef415674357754918b6ea/MorningScraper-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:47 2020"}