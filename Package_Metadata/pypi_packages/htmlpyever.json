{"info": {"author": "Theodore Dubois", "author_email": "tblodt@icloud.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML"], "description": "htmlpyever\n==========\n\nhtmlpyever is a very single-minded binding to html5ever. You can:\n\n* Feed the parser:\n\n  .. code-block:: python\n\n    parser.feed(b'hOI wURLD!')\n\n* Get a callback when the parser encounters a closing script tag:\n\n  .. code-block:: python\n  \n    def script_callback(script):\n        # handle script\n    parser = htmlpyever.Parser(script_callback)\n\n    # or\n\n    class MyParser(htmlpyever.Parser):\n        def run_script(self, script)\n            # handle script\n    parser = MyParser()\n\n* Obtain the result as an LXML ``Element`` or ``ElementTree``:\n\n  .. code-block:: python\n  \n    from lxml import etree\n    etree.tostring(parser.root)\n    # >>> '<html><head/><body>hOI! wURLD!</body></html>'\n    etree.tostring(parser.root)\n    # >>> '<html><head/><body>hOI! wURLD!</body></html>'\n    # not sure why the doctype doesn't show up in the serialized ElementTree\n    \nThat's it.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tbodt/htmlpyever", "keywords": "html,html5,parser,parsing,html5ever", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "htmlpyever", "package_url": "https://pypi.org/project/htmlpyever/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/htmlpyever/", "project_urls": {"Homepage": "https://github.com/tbodt/htmlpyever"}, "release_url": "https://pypi.org/project/htmlpyever/0.1.0.post3/", "requires_dist": null, "requires_python": "", "summary": "Python bindings to html5ever", "version": "0.1.0.post3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>htmlpyever is a very single-minded binding to html5ever. You can:</p>\n<ul>\n<li><p>Feed the parser:</p>\n<pre><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">feed</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'hOI wURLD!'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Get a callback when the parser encounters a closing script tag:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">script_callback</span><span class=\"p\">(</span><span class=\"n\">script</span><span class=\"p\">):</span>\n    <span class=\"c1\"># handle script</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">htmlpyever</span><span class=\"o\">.</span><span class=\"n\">Parser</span><span class=\"p\">(</span><span class=\"n\">script_callback</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyParser</span><span class=\"p\">(</span><span class=\"n\">htmlpyever</span><span class=\"o\">.</span><span class=\"n\">Parser</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run_script</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">script</span><span class=\"p\">)</span>\n        <span class=\"c1\"># handle script</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">MyParser</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li><p>Obtain the result as an LXML <tt>Element</tt> or <tt>ElementTree</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lxml</span> <span class=\"kn\">import</span> <span class=\"n\">etree</span>\n<span class=\"n\">etree</span><span class=\"o\">.</span><span class=\"n\">tostring</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; '&lt;html&gt;&lt;head/&gt;&lt;body&gt;hOI! wURLD!&lt;/body&gt;&lt;/html&gt;'</span>\n<span class=\"n\">etree</span><span class=\"o\">.</span><span class=\"n\">tostring</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; '&lt;html&gt;&lt;head/&gt;&lt;body&gt;hOI! wURLD!&lt;/body&gt;&lt;/html&gt;'</span>\n<span class=\"c1\"># not sure why the doctype doesn't show up in the serialized ElementTree</span>\n</pre>\n</li>\n</ul>\n<p>That\u2019s it.</p>\n\n          </div>"}, "last_serial": 2681683, "releases": {"0.1.0": [], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "544bc385229fd4fe001c37ad761b3b60", "sha256": "6274a134f239b6e2d11e9cea90519a1d03310c3d6a06332d088cdb4b4062556e"}, "downloads": -1, "filename": "htmlpyever-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "544bc385229fd4fe001c37ad761b3b60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41800, "upload_time": "2017-03-04T00:15:53", "upload_time_iso_8601": "2017-03-04T00:15:53.489123Z", "url": "https://files.pythonhosted.org/packages/8a/70/2a89a2a94898a31ca6329415411ab290abf79a2ea2927152c59dd68f6e5e/htmlpyever-0.1.0.post1.tar.gz", "yanked": false}], "0.1.0.post2": [{"comment_text": "", "digests": {"md5": "a2defaf5e39ea6540129866ee9795608", "sha256": "e3c0844a6c1d078adc05fb68719ec036d864246b785923bfa05df040eca54188"}, "downloads": -1, "filename": "htmlpyever-0.1.0.post2.tar.gz", "has_sig": false, "md5_digest": "a2defaf5e39ea6540129866ee9795608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49243, "upload_time": "2017-03-04T00:49:55", "upload_time_iso_8601": "2017-03-04T00:49:55.426296Z", "url": "https://files.pythonhosted.org/packages/ec/53/fbf7b9729fbecec446483d9189a7f7d5742d2539c42a96956c6febdcba77/htmlpyever-0.1.0.post2.tar.gz", "yanked": false}], "0.1.0.post3": [{"comment_text": "", "digests": {"md5": "eef44e328d018215e890ca3437c38d1c", "sha256": "d09e54287be121c87abf238425aaeedb307e6f78b1c0daf6236047b4c375b943"}, "downloads": -1, "filename": "htmlpyever-0.1.0.post3.tar.gz", "has_sig": false, "md5_digest": "eef44e328d018215e890ca3437c38d1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49326, "upload_time": "2017-03-04T01:17:40", "upload_time_iso_8601": "2017-03-04T01:17:40.755084Z", "url": "https://files.pythonhosted.org/packages/1a/9c/de8e025029299fa7e9c4ba55860673826e645a16dfa692d5fa86c998e977/htmlpyever-0.1.0.post3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eef44e328d018215e890ca3437c38d1c", "sha256": "d09e54287be121c87abf238425aaeedb307e6f78b1c0daf6236047b4c375b943"}, "downloads": -1, "filename": "htmlpyever-0.1.0.post3.tar.gz", "has_sig": false, "md5_digest": "eef44e328d018215e890ca3437c38d1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49326, "upload_time": "2017-03-04T01:17:40", "upload_time_iso_8601": "2017-03-04T01:17:40.755084Z", "url": "https://files.pythonhosted.org/packages/1a/9c/de8e025029299fa7e9c4ba55860673826e645a16dfa692d5fa86c998e977/htmlpyever-0.1.0.post3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:14 2020"}