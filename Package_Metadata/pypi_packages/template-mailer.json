{"info": {"author": "Pavlo Lysytsya", "author_email": "pavlo.lysytsya@outfittery.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "![GitHub Actions status | sdras/awesome-actions](https://github.com/plysytsya/template-mailer/workflows/CI/badge.svg)\n[![codecov](https://codecov.io/gh/plysytsya/template-mailer/branch/master/graph/badge.svg)]\n\n# template-mailer\n\nA simple python client for sending mass emails from html templates.\n\n\n## Description\n\nThe template-mailer lets you fill variables in html-templates and send the populated content via email.\nIt makes use of the jinja2 templating langauge ([Reference](https://jinja.palletsprojects.com/en/2.10.x/)).\n\n## Usage\n\nProvide your html-template as a string to the render_template-method:\n\n    >>> from template_mailer import render_template\n    >>> template = \"<html> foo: {{ variable }} </html>\"\n    >>> data = {\"variable\": \"bar\"}\n    >>> render_template(template, data)\n    '<html> foo: bar </html>'\n\n\nUse the SMTPClient to send the rendered template as html-email with the SMTPClient:\n\n\n    >>> from template_mailer import SMTPClient\n    >>> smtp_client = SMTPClient()\n    >>> smtp_client.send(\"targetemailalldress@test.test\", \"subject\", \"message\")\n\nBy default the client will look for the following environment variables:\n\n`SMTP_HOST`,\n`SMTP_PORT` (starttls),\n`EMAIL_USER` (your email address),\n`EMAIL_PASSWORD`\n\nYou can provide the SMTP configurations in plain form as well:\n\n    >>> smtp_client = SMTPClient(\"smtp.gmail.com\", 587, \"your_email@gmail.coim\", \"your_password\")\n\n\n## Options\n\n### Encryption\nThe default email encryption is TLS. An SSL option is not yet provided and will be part of a future release.\n\n### Missing data\nThe render_template method will throw an error if you don't provide enough data to populate all template-variables:\n\n    >>> from template_mailer import render_template\n    >>> template = \"<html> foo: {{ variable }} ham: {{ second_variable }} </html>\"\n    >>> data = {\"variable\": \"bar\"}\n    >>> render_template(template, data)\n    Traceback (most recent call last):\n    ...\n    jinja2.exceptions.UndefinedError: 'second_variable' is undefined\n\nTo change this policy you can provide the option undefined=\"allow\" to the render_template-method:\n\n    >>> from template_mailer import render_template\n    >>> template = \"<html> foo: {{ variable }} ham: {{ second_variable }} </html>\"\n    >>> data = {\"variable\": \"bar\"}\n    >>> render_template(template, data, undefined=\"allow\")\n    '<html> foo: bar ham:  </html>'\n\n### Logging\nBy default the SMTPClient uses the root-logger with log-level INFO. You can inject your own logger into the client:\n\n    >>> from template_mailer import SMTPClient\n    >>> import logging\n    >>> some_logger = logging.getLogger(\"demo\")\n    >>> smtp_client = SMTPClient(logger=some_logger)\n\n## Note\n\nThis project has been set up using PyScaffold 3.2.3. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.", "description_content_type": "text/markdown; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plysytsya/template-mailer", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "template-mailer", "package_url": "https://pypi.org/project/template-mailer/", "platform": "any", "project_url": "https://pypi.org/project/template-mailer/", "project_urls": {"Documentation": "https://github.com/plysytsya/template-mailer", "Homepage": "https://github.com/plysytsya/template-mailer"}, "release_url": "https://pypi.org/project/template-mailer/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Add a short description here!", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"GitHub Actions status | sdras/awesome-actions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8f869f1cc67e60b4b3cc6dd6f971064eccbaa7c/68747470733a2f2f6769746875622e636f6d2f706c797379747379612f74656d706c6174652d6d61696c65722f776f726b666c6f77732f43492f62616467652e737667\">\n[<img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18714c0183413b9f5805413a46e0c2cf7d84d932/68747470733a2f2f636f6465636f762e696f2f67682f706c797379747379612f74656d706c6174652d6d61696c65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\">]</p>\n<h1>template-mailer</h1>\n<p>A simple python client for sending mass emails from html templates.</p>\n<h2>Description</h2>\n<p>The template-mailer lets you fill variables in html-templates and send the populated content via email.\nIt makes use of the jinja2 templating langauge (<a href=\"https://jinja.palletsprojects.com/en/2.10.x/\" rel=\"nofollow\">Reference</a>).</p>\n<h2>Usage</h2>\n<p>Provide your html-template as a string to the render_template-method:</p>\n<pre><code>&gt;&gt;&gt; from template_mailer import render_template\n&gt;&gt;&gt; template = \"&lt;html&gt; foo: {{ variable }} &lt;/html&gt;\"\n&gt;&gt;&gt; data = {\"variable\": \"bar\"}\n&gt;&gt;&gt; render_template(template, data)\n'&lt;html&gt; foo: bar &lt;/html&gt;'\n</code></pre>\n<p>Use the SMTPClient to send the rendered template as html-email with the SMTPClient:</p>\n<pre><code>&gt;&gt;&gt; from template_mailer import SMTPClient\n&gt;&gt;&gt; smtp_client = SMTPClient()\n&gt;&gt;&gt; smtp_client.send(\"targetemailalldress@test.test\", \"subject\", \"message\")\n</code></pre>\n<p>By default the client will look for the following environment variables:</p>\n<p><code>SMTP_HOST</code>,\n<code>SMTP_PORT</code> (starttls),\n<code>EMAIL_USER</code> (your email address),\n<code>EMAIL_PASSWORD</code></p>\n<p>You can provide the SMTP configurations in plain form as well:</p>\n<pre><code>&gt;&gt;&gt; smtp_client = SMTPClient(\"smtp.gmail.com\", 587, \"your_email@gmail.coim\", \"your_password\")\n</code></pre>\n<h2>Options</h2>\n<h3>Encryption</h3>\n<p>The default email encryption is TLS. An SSL option is not yet provided and will be part of a future release.</p>\n<h3>Missing data</h3>\n<p>The render_template method will throw an error if you don't provide enough data to populate all template-variables:</p>\n<pre><code>&gt;&gt;&gt; from template_mailer import render_template\n&gt;&gt;&gt; template = \"&lt;html&gt; foo: {{ variable }} ham: {{ second_variable }} &lt;/html&gt;\"\n&gt;&gt;&gt; data = {\"variable\": \"bar\"}\n&gt;&gt;&gt; render_template(template, data)\nTraceback (most recent call last):\n...\njinja2.exceptions.UndefinedError: 'second_variable' is undefined\n</code></pre>\n<p>To change this policy you can provide the option undefined=\"allow\" to the render_template-method:</p>\n<pre><code>&gt;&gt;&gt; from template_mailer import render_template\n&gt;&gt;&gt; template = \"&lt;html&gt; foo: {{ variable }} ham: {{ second_variable }} &lt;/html&gt;\"\n&gt;&gt;&gt; data = {\"variable\": \"bar\"}\n&gt;&gt;&gt; render_template(template, data, undefined=\"allow\")\n'&lt;html&gt; foo: bar ham:  &lt;/html&gt;'\n</code></pre>\n<h3>Logging</h3>\n<p>By default the SMTPClient uses the root-logger with log-level INFO. You can inject your own logger into the client:</p>\n<pre><code>&gt;&gt;&gt; from template_mailer import SMTPClient\n&gt;&gt;&gt; import logging\n&gt;&gt;&gt; some_logger = logging.getLogger(\"demo\")\n&gt;&gt;&gt; smtp_client = SMTPClient(logger=some_logger)\n</code></pre>\n<h2>Note</h2>\n<p>This project has been set up using PyScaffold 3.2.3. For details and usage\ninformation on PyScaffold see <a href=\"https://pyscaffold.org/\" rel=\"nofollow\">https://pyscaffold.org/</a>.</p>\n\n          </div>"}, "last_serial": 6297518, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "314b5fd4b68202db17856161eb384098", "sha256": "f23dab9ad983cf5cdc599a368ab6110f285a880bf0aa7f44799b073f7c16b7c8"}, "downloads": -1, "filename": "template_mailer-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "314b5fd4b68202db17856161eb384098", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5151, "upload_time": "2019-12-08T03:39:40", "upload_time_iso_8601": "2019-12-08T03:39:40.209232Z", "url": "https://files.pythonhosted.org/packages/75/2e/23eb6ea5a35a252bea84427b55194ede2e3e026772de7fddf38044cb5e2e/template_mailer-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "04f13201a0c8c08d634c8ca46ffbca38", "sha256": "cb74ae7cb1515faf475ab371f1f823456a432ce6e95980e4893a41e0d630194e"}, "downloads": -1, "filename": "template_mailer-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "04f13201a0c8c08d634c8ca46ffbca38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5146, "upload_time": "2019-12-08T04:45:10", "upload_time_iso_8601": "2019-12-08T04:45:10.628730Z", "url": "https://files.pythonhosted.org/packages/43/28/2e3dcac68887d20b2f444818f2df53f3444987454575b3dc2de5e707a8a0/template_mailer-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ab558ae8e237dc86c94027a9fad7592c", "sha256": "f41ff32c1ef2ce369ea88aa77a8a29e557a709d8552c8bf7c27b44b6505bceec"}, "downloads": -1, "filename": "template-mailer-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ab558ae8e237dc86c94027a9fad7592c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14801, "upload_time": "2019-12-14T03:18:32", "upload_time_iso_8601": "2019-12-14T03:18:32.166509Z", "url": "https://files.pythonhosted.org/packages/d7/14/64e6743493a2ec695d50c02bc85928580efdaf9cafc700a8e2f1fb3f248b/template-mailer-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab558ae8e237dc86c94027a9fad7592c", "sha256": "f41ff32c1ef2ce369ea88aa77a8a29e557a709d8552c8bf7c27b44b6505bceec"}, "downloads": -1, "filename": "template-mailer-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ab558ae8e237dc86c94027a9fad7592c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14801, "upload_time": "2019-12-14T03:18:32", "upload_time_iso_8601": "2019-12-14T03:18:32.166509Z", "url": "https://files.pythonhosted.org/packages/d7/14/64e6743493a2ec695d50c02bc85928580efdaf9cafc700a8e2f1fb3f248b/template-mailer-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:43 2020"}