{"info": {"author": "Jes\u00fas Espino", "author_email": "jespinog@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Transparent Image Neat Transformer\n-----------------------------------------\n\n.. image:: http://kaleidos.net/static/img/badge.png\n    :target: http://www.kaleidos.net/community/django-tint/\n\n.. image:: https://travis-ci.org/jespino/django-tint.png?branch=master\n    :target: https://travis-ci.org/jespino/django-tint\n\n.. image:: https://coveralls.io/repos/jespino/django-tint/badge.png?branch=master\n    :target: https://coveralls.io/r/jespino/django-tint?branch=master\n\n.. image:: https://pypip.in/v/django-tint/badge.png\n    :target: https://crate.io/packages/django-tint\n\n.. image:: https://pypip.in/d/django-tint/badge.png\n    :target: https://crate.io/packages/django-tint\n\nUsage\n~~~~~\n\nYou must define your transformation in your :code:`TINT_TRANSFORMATIONS` settings\nvariable.\n\nYou set your images on your models puting a :code:`ForeignKey` to\n:code:`tint.models.Image`.\n\nThen you put your images in your templates using the :code:`at_transformation` filter. Example::\n\n  {% load tint %}\n\n  <img src=\"{{ mymodel.my_image_field|at_transformation:\"my-transformation-definition\" }}\" />\n\nIf you use django-jinja you only have to use the :code:`image_at_transformation` function. Example::\n\n  <img src=\"{{ image_at_transformation(mymodel.my_image_field, \"my-transformation-definition\") }}\" />\n\n\nDefault ImageProc Actions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDjango-tint default Image Processor comes with some actions, here you have the\nlist:\n\n+-----------------+-------------------------------+--------------------------+\n| Action          | Description                   | Params                   |\n+=================+===============================+==========================+\n| crop            | Crop an image to a width and  | height, width, align,    |\n|                 | height.                       | valign                   |\n+-----------------+-------------------------------+--------------------------+\n| scale           | Scale an image to a width and | height, width            |\n|                 | height (deforming it).        |                          |\n+-----------------+-------------------------------+--------------------------+\n| fit             | Scale an image to a width and | height, width, align,    |\n|                 | height and crop the overflow. | valign                   |\n+-----------------+-------------------------------+--------------------------+\n| watermark       | Paste a watermark on a image. | watermark_image, opacity |\n+-----------------+-------------------------------+--------------------------+\n| grayscale       | Convert the image to          |                          |\n|                 | grayscale.                    |                          |\n+-----------------+-------------------------------+--------------------------+\n| flip            | Flip the image vertically.    |                          |\n+-----------------+-------------------------------+--------------------------+\n| mirror          | Flip the image horizontally.  |                          |\n+-----------------+-------------------------------+--------------------------+\n| equalize        | Equalize the image histogram. |                          |\n+-----------------+-------------------------------+--------------------------+\n| autocontrast    | Maximize (normalize) image    | cutoff                   |\n|                 | contrast.                     |                          |\n+-----------------+-------------------------------+--------------------------+\n| invert          | Invert the image colors.      |                          |\n+-----------------+-------------------------------+--------------------------+\n| convert         | Convert image mode (L, RGB or | mode                     |\n|                 | CYMK).                        |                          |\n+-----------------+-------------------------------+--------------------------+\n\nConfiguration\n~~~~~~~~~~~~~\n\nIn Django-tint you can define your :code:`ImageProc` class (normally will be a subclass\nof the :code:`DefaultImageProc`) to add your own image transformations. You can use it\nconfiguring the :code:`TINT_IMAGE_PROCESSOR` settings variable. Example::\n\n  TINT_IMAGE_PROCESSOR = 'myapp.my_image_processor_module.MyImageProcessorClass'\n\nIf the variable is not defined the :code:`DefaultImageProc` is used.\n\nThen you can configure your transformations as a dictionary. The name of the\ntransformation is the key, and the value is a list of \"actions\". An action is a\ndictionary with one key 'action' with the name of the action, and the other\nkeys the parameters to use in this action. Example::\n\n  TINT_TRANSFORMATIONS = {\n    'example1': [\n        {\n            \"action\": 'fit',\n            \"width\": 1024,\n            \"height\": 768,\n            \"align\": 'center',\n            \"valign\": 'middle',\n        },\n        {\n            \"action\": 'watermark',\n            \"image\": 'example.watermark.png',\n            \"opacity\": 0.5,\n        },\n    ],\n    'example2': [\n        {\n            \"action\": 'fit',\n            \"width\": 800,\n            \"height\": 600,\n            \"align\": 'center',\n            \"valign\": 'middle',\n        },\n        {\n            \"action\": 'watermark',\n            \"image\": 'example.watermark.png',\n            \"opacity\": 0.5,\n        },\n    ]\n  }\n\nYou can define the the removing of deleted images or thumnails model instances,\nremove the image file with the settings ``TINT_KEEP_THUMBNAILS`` and\n``TINT_KEEP_IMAGES``, the default value is True to both settings.\n\nYou can define your file output format and your file output extension with the\nsettings ``TINT_IMAGE_OUTPUT_FORMAT`` and ``TINT_IMAGE_OUTPUT_EXTENSION``. The\ndefault value is None this means use the same format and extension of the\norigin file. Example::\n\n  TINT_IMAGE_OUTPUT_FORMAT = \"png\"\n  TINT_IMAGE_OUTPUT_EXTENSION = \".png\"\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-tint", "package_url": "https://pypi.org/project/django-tint/", "platform": "any", "project_url": "https://pypi.org/project/django-tint/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-tint/0.1/", "requires_dist": null, "requires_python": null, "summary": "Transparent image transformation system", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://www.kaleidos.net/community/django-tint/\" rel=\"nofollow\"><img alt=\"http://kaleidos.net/static/img/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/078185b4442dda4777f817dc3c452f9a53c80725/687474703a2f2f6b616c6569646f732e6e65742f7374617469632f696d672f62616467652e706e67\"></a>\n<a href=\"https://travis-ci.org/jespino/django-tint\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jespino/django-tint.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddef5bb92add36f19754ff2d923e71a27a136505/68747470733a2f2f7472617669732d63692e6f72672f6a657370696e6f2f646a616e676f2d74696e742e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/jespino/django-tint?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jespino/django-tint/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9235d29fe2941dd9af52bfcd724c3dc34255f2c5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a657370696e6f2f646a616e676f2d74696e742f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://crate.io/packages/django-tint\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/django-tint/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a25f58d3864f5d3725ebe03de08fd8429d888874/68747470733a2f2f70797069702e696e2f762f646a616e676f2d74696e742f62616467652e706e67\"></a>\n<a href=\"https://crate.io/packages/django-tint\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django-tint/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50dcdf1ecb1cc11572ab85982eb665e35c9651fd/68747470733a2f2f70797069702e696e2f642f646a616e676f2d74696e742f62616467652e706e67\"></a>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You must define your transformation in your <code>TINT_TRANSFORMATIONS</code> settings\nvariable.</p>\n<p>You set your images on your models puting a <code>ForeignKey</code> to\n<code>tint.models.Image</code>.</p>\n<p>Then you put your images in your templates using the <code>at_transformation</code> filter. Example:</p>\n<pre>{% load tint %}\n\n&lt;img src=\"{{ mymodel.my_image_field|at_transformation:\"my-transformation-definition\" }}\" /&gt;\n</pre>\n<p>If you use django-jinja you only have to use the <code>image_at_transformation</code> function. Example:</p>\n<pre>&lt;img src=\"{{ image_at_transformation(mymodel.my_image_field, \"my-transformation-definition\") }}\" /&gt;\n</pre>\n</div>\n<div id=\"default-imageproc-actions\">\n<h2>Default ImageProc Actions</h2>\n<p>Django-tint default Image Processor comes with some actions, here you have the\nlist:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Action</th>\n<th>Description</th>\n<th>Params</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>crop</td>\n<td>Crop an image to a width and\nheight.</td>\n<td>height, width, align,\nvalign</td>\n</tr>\n<tr><td>scale</td>\n<td>Scale an image to a width and\nheight (deforming it).</td>\n<td>height, width</td>\n</tr>\n<tr><td>fit</td>\n<td>Scale an image to a width and\nheight and crop the overflow.</td>\n<td>height, width, align,\nvalign</td>\n</tr>\n<tr><td>watermark</td>\n<td>Paste a watermark on a image.</td>\n<td>watermark_image, opacity</td>\n</tr>\n<tr><td>grayscale</td>\n<td>Convert the image to\ngrayscale.</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>flip</td>\n<td>Flip the image vertically.</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>mirror</td>\n<td>Flip the image horizontally.</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>equalize</td>\n<td>Equalize the image histogram.</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>autocontrast</td>\n<td>Maximize (normalize) image\ncontrast.</td>\n<td>cutoff</td>\n</tr>\n<tr><td>invert</td>\n<td>Invert the image colors.</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>convert</td>\n<td>Convert image mode (L, RGB or\nCYMK).</td>\n<td>mode</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>In Django-tint you can define your <code>ImageProc</code> class (normally will be a subclass\nof the <code>DefaultImageProc</code>) to add your own image transformations. You can use it\nconfiguring the <code>TINT_IMAGE_PROCESSOR</code> settings variable. Example:</p>\n<pre>TINT_IMAGE_PROCESSOR = 'myapp.my_image_processor_module.MyImageProcessorClass'\n</pre>\n<p>If the variable is not defined the <code>DefaultImageProc</code> is used.</p>\n<p>Then you can configure your transformations as a dictionary. The name of the\ntransformation is the key, and the value is a list of \u201cactions\u201d. An action is a\ndictionary with one key \u2018action\u2019 with the name of the action, and the other\nkeys the parameters to use in this action. Example:</p>\n<pre>TINT_TRANSFORMATIONS = {\n  'example1': [\n      {\n          \"action\": 'fit',\n          \"width\": 1024,\n          \"height\": 768,\n          \"align\": 'center',\n          \"valign\": 'middle',\n      },\n      {\n          \"action\": 'watermark',\n          \"image\": 'example.watermark.png',\n          \"opacity\": 0.5,\n      },\n  ],\n  'example2': [\n      {\n          \"action\": 'fit',\n          \"width\": 800,\n          \"height\": 600,\n          \"align\": 'center',\n          \"valign\": 'middle',\n      },\n      {\n          \"action\": 'watermark',\n          \"image\": 'example.watermark.png',\n          \"opacity\": 0.5,\n      },\n  ]\n}\n</pre>\n<p>You can define the the removing of deleted images or thumnails model instances,\nremove the image file with the settings <tt>TINT_KEEP_THUMBNAILS</tt> and\n<tt>TINT_KEEP_IMAGES</tt>, the default value is True to both settings.</p>\n<p>You can define your file output format and your file output extension with the\nsettings <tt>TINT_IMAGE_OUTPUT_FORMAT</tt> and <tt>TINT_IMAGE_OUTPUT_EXTENSION</tt>. The\ndefault value is None this means use the same format and extension of the\norigin file. Example:</p>\n<pre>TINT_IMAGE_OUTPUT_FORMAT = \"png\"\nTINT_IMAGE_OUTPUT_EXTENSION = \".png\"\n</pre>\n</div>\n\n          </div>"}, "last_serial": 887126, "releases": {"0.0.3": [], "0.0.4": [{"comment_text": "", "digests": {"md5": "e1cc496e8b1cd8319ca54d5036a657e8", "sha256": "4392439b6bb3805e2e69556094bad5ac750225f8596a16ede5d0f653c507aa07"}, "downloads": -1, "filename": "django-tint-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e1cc496e8b1cd8319ca54d5036a657e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8485, "upload_time": "2013-06-09T11:43:21", "upload_time_iso_8601": "2013-06-09T11:43:21.325003Z", "url": "https://files.pythonhosted.org/packages/f0/e2/3c81843e459a4ee35e677ac5bd88d7e574f88ee5741af356e3a3f99579ba/django-tint-0.0.4.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "0400a35f6550c2f07ef7af222de0d0be", "sha256": "9372d437e2ab0e74acf6041530969da68fabfdfbe9ec09597e0c691fae576519"}, "downloads": -1, "filename": "django-tint-0.1.tar.gz", "has_sig": false, "md5_digest": "0400a35f6550c2f07ef7af222de0d0be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8996, "upload_time": "2013-10-11T10:54:31", "upload_time_iso_8601": "2013-10-11T10:54:31.878049Z", "url": "https://files.pythonhosted.org/packages/63/61/b59bd04c88ce92cb8a0a42f2141ba3dac86bc9d196c5972662d4f09d4f82/django-tint-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0400a35f6550c2f07ef7af222de0d0be", "sha256": "9372d437e2ab0e74acf6041530969da68fabfdfbe9ec09597e0c691fae576519"}, "downloads": -1, "filename": "django-tint-0.1.tar.gz", "has_sig": false, "md5_digest": "0400a35f6550c2f07ef7af222de0d0be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8996, "upload_time": "2013-10-11T10:54:31", "upload_time_iso_8601": "2013-10-11T10:54:31.878049Z", "url": "https://files.pythonhosted.org/packages/63/61/b59bd04c88ce92cb8a0a42f2141ba3dac86bc9d196c5972662d4f09d4f82/django-tint-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:27 2020"}