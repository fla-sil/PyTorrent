{"info": {"author": "Marcelo Salhab Brogliato", "author_email": "msbrogli@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# santander-cobranca-xml\n\nConsumes the API given by Santander in order to register a *boleto banc\u00e1rio*.\n\nIn Brazil, Santander requires the use of a client ssl certificate.\n\n## Example\n\nNotice that one may not use the same ticket twice. Thus, in this examples, it is necessary to request two tickets, one to register the *boleto banc\u00e1rio* and the other to retrieve the status.\n\n```\nnosso_numero = '1'\ndata = {\n\t'cod_convenio': 'CONVENIO',\n\t'tp_doc': '01', # 01=CPF, 02=CNPJ\n\t'num_doc': '11111111111',\n\t'pagador_nome': '',\n\t'pagador_endereco': '',\n\t'pagador_bairro': '',\n\t'pagador_cidade': '',\n\t'pagador_uf': '',\n\t'pagador_cep': '',\n\t'nosso_numero': nosso_numero,\n\t'seu_numero': nosso_numero,\n\t'data_vencimento': '30062017',\n\t'data_emissao': '27062017',\n\t'especie': '02', # Duplicada mercantil\n\t'valor_nominal': '102', # R$ 1,02\n\t'multa': '0',\n\t'qt_dias_multa': '0',\n\t'juros': '0',\n\t'tipo_desconto': '0', # Isento\n\t'valor_desconto': '0',\n\t'data_limite_desconto': '00000000',\n\t'valor_abatimento': '0',\n\t'tipo_protesto': '0', # N\u00e3o protestar\n\t'qt_dias_protesto': '0',\n\t'qt_dias_baixa': '15',\n\t'mensagem': 'Teste',\n}\nestacao = 'SUA_ESTACAO'\nnsu = '1'\ndata_nsu = '28062017'\ncert = ('path to certificate', 'path to private key')\nret1 = get_ticket(data, cert=cert)\nprint '-- solicita ticket --'\nprint 'retCode', ret1.return_code\nprint 'ticket', ret1.ticket\nprint ''\nret2 = incluir_titulo(ret1.ticket, estacao=estacao, nsu=nsu, data_nsu=data_nsu, cert=cert, teste=False)\nprint '-- incluir titulo --'\nprint 'nsu', nsu\nprint 'data nsu', data_nsu\nprint 'situacao', ret2.situacao\nprint 'descricao', ret2.descricao\nprint ''\nret3 = get_ticket(data, cert=cert)\nprint '-- solicita ticket --'\nprint 'retCode', ret3.return_code\nprint 'ticket', ret3.ticket\nprint ''\nret4 = consultar_titulo(ret3.ticket, estacao=estacao, nsu=nsu, data_nsu=data_nsu, cert=cert, teste=False)\nprint '-- consulta titulo --'\nprint 'situacao', ret4.situacao\nprint 'descricao', ret4.descricao\nprint ''\n```\n\n## Testing\n\nI have tested using my company's client ssl certificate and it worked fine.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msbrogli/santander-cobranca-xml", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "santander-cobranca-xml", "package_url": "https://pypi.org/project/santander-cobranca-xml/", "platform": "any", "project_url": "https://pypi.org/project/santander-cobranca-xml/", "project_urls": {"Homepage": "https://github.com/msbrogli/santander-cobranca-xml"}, "release_url": "https://pypi.org/project/santander-cobranca-xml/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Consumes the API given by Santander in order to register a *boleto banc\u00e1rio*.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # santander-cobranca-xml<br><br>Consumes the API given by Santander in order to register a *boleto banc\u00e1rio*.<br><br>In Brazil, Santander requires the use of a client ssl certificate.<br><br>## Example<br><br>Notice that one may not use the same ticket twice. Thus, in this examples, it is necessary to request two tickets, one to register the *boleto banc\u00e1rio* and the other to retrieve the status.<br><br>```<br>nosso_numero = '1'<br>data = {<br>\t'cod_convenio': 'CONVENIO',<br>\t'tp_doc': '01', # 01=CPF, 02=CNPJ<br>\t'num_doc': '11111111111',<br>\t'pagador_nome': '',<br>\t'pagador_endereco': '',<br>\t'pagador_bairro': '',<br>\t'pagador_cidade': '',<br>\t'pagador_uf': '',<br>\t'pagador_cep': '',<br>\t'nosso_numero': nosso_numero,<br>\t'seu_numero': nosso_numero,<br>\t'data_vencimento': '30062017',<br>\t'data_emissao': '27062017',<br>\t'especie': '02', # Duplicada mercantil<br>\t'valor_nominal': '102', # R$ 1,02<br>\t'multa': '0',<br>\t'qt_dias_multa': '0',<br>\t'juros': '0',<br>\t'tipo_desconto': '0', # Isento<br>\t'valor_desconto': '0',<br>\t'data_limite_desconto': '00000000',<br>\t'valor_abatimento': '0',<br>\t'tipo_protesto': '0', # N\u00e3o protestar<br>\t'qt_dias_protesto': '0',<br>\t'qt_dias_baixa': '15',<br>\t'mensagem': 'Teste',<br>}<br>estacao = 'SUA_ESTACAO'<br>nsu = '1'<br>data_nsu = '28062017'<br>cert = ('path to certificate', 'path to private key')<br>ret1 = get_ticket(data, cert=cert)<br>print '-- solicita ticket --'<br>print 'retCode', ret1.return_code<br>print 'ticket', ret1.ticket<br>print ''<br>ret2 = incluir_titulo(ret1.ticket, estacao=estacao, nsu=nsu, data_nsu=data_nsu, cert=cert, teste=False)<br>print '-- incluir titulo --'<br>print 'nsu', nsu<br>print 'data nsu', data_nsu<br>print 'situacao', ret2.situacao<br>print 'descricao', ret2.descricao<br>print ''<br>ret3 = get_ticket(data, cert=cert)<br>print '-- solicita ticket --'<br>print 'retCode', ret3.return_code<br>print 'ticket', ret3.ticket<br>print ''<br>ret4 = consultar_titulo(ret3.ticket, estacao=estacao, nsu=nsu, data_nsu=data_nsu, cert=cert, teste=False)<br>print '-- consulta titulo --'<br>print 'situacao', ret4.situacao<br>print 'descricao', ret4.descricao<br>print ''<br>```<br><br>## Testing<br><br>I have tested using my company's client ssl certificate and it worked fine.<br>\n          </div>"}, "last_serial": 2997771, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "733910f20d74de9dcb842affde294180", "sha256": "0bcc3bf03068f14010e0e1447e7e354303cad6779bde2b33911c9dd3987fbf7c"}, "downloads": -1, "filename": "santander-cobranca-xml-1.0.1.tar.gz", "has_sig": false, "md5_digest": "733910f20d74de9dcb842affde294180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3772, "upload_time": "2017-07-03T20:59:28", "upload_time_iso_8601": "2017-07-03T20:59:28.608050Z", "url": "https://files.pythonhosted.org/packages/c5/7d/1da3a0ae6f8b7ac1de9b8dbb09e5b852a1fbd81a1a7e72e390c3714a4ea9/santander-cobranca-xml-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "733910f20d74de9dcb842affde294180", "sha256": "0bcc3bf03068f14010e0e1447e7e354303cad6779bde2b33911c9dd3987fbf7c"}, "downloads": -1, "filename": "santander-cobranca-xml-1.0.1.tar.gz", "has_sig": false, "md5_digest": "733910f20d74de9dcb842affde294180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3772, "upload_time": "2017-07-03T20:59:28", "upload_time_iso_8601": "2017-07-03T20:59:28.608050Z", "url": "https://files.pythonhosted.org/packages/c5/7d/1da3a0ae6f8b7ac1de9b8dbb09e5b852a1fbd81a1a7e72e390c3714a4ea9/santander-cobranca-xml-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:38 2020"}