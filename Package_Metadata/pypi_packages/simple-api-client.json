{"info": {"author": "ScholarPack", "author_email": "dev@scholarpack.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Simple Api Client\n\nA simple API client for connecting to remote services.\n\n## Features\n\nAlong with common methods for creating and performing Json based API\nrequests, this library supports the following extra features.\n\n* Convenience methods for adding Basic and Bearer auth headers.\n* A convenience method for adding signed cookies.\n* A timeout limit for all requests.\n* A global or per-request retry limit to retry an API request if it fails.\n* Uses a best effort approach to deal with malformed Json returned from an API endpoint.\n* Each response is guaranteed to contain a status code and well formed parsed Json data.\n    * If something goes wrong, an error message will always be included in the data.\n* Fully supports returning binary data (as bytes) from an API request.\n* handles rate limiting when performing an API request. These requests can be configured to be retried before raising an error.\n\n## Installation\n\nInstall and update using `pipenv`\n\n```bash\npip install -U simple-api-client\n```\n\n## Usage\n\n### Simple use-case\n\n```python\nfrom simple_api_client import ApiClient\nfrom logging import Logger\n\n\nlogger = Logger(\"simple-logger\", level=\"DEBUG\")\nclient = ApiClient(\"http://www.example.com\", logger)\n\nresponse = client.get(\"/example/endpoint\")\n\nif response.status_code == 200:\n    print(response.data)\n```\n\n### Creating more specific clients\n\nThis client has been created to be as flexible as possible to be used as a\nbase class for more specific clients. All you uneed to do is extend the\n`ApiClient` class and add any suitable methods.\n\n```python\nfrom flask import g\nfrom flask import current_app as app\nfrom simple_api_client import ApiClient\n\n\nclass MyServiceClient(ApiClient):\n\n    def use_cookie_auth(self, data):\n        name = app.config.get(\"COOKIE_NAME\")\n        signing_key = app.config.get(\"COOKIE_SIGNING_KEY\")\n        signing_key_id = \"trusted-service\"\n        payload = {\"data\": data}\n        self.add_signed_cookie(name, payload, signing_key_id, signing_key)\n\n    def get_remote_resource():\n        return self.get(\"/example/endpoint\")\n```\n\n### A note on security\n\nIt's import to understand that when a client is initialised with headers and\ncookies, these will remain set for the lifetime of the client or until\nmanually unset. If you don't want this state to remain in-between requests,\nit's important to take action to reset the client. In a\n[Flask](https://flask.palletsprojects.com/) application this is easily\nachieved by assigning the client to the special ['g'\nobject](https://flask.palletsprojects.com/en/1.1.x/api/#flask.g).\n\n```python\nfrom flask import g\nfrom flask import current_app as app\nfrom simple_api_client import ApiClient\n\n\n@app.before_request\ndef setup_api_client():\n    g.client = ApiClient(\"http://www.example.com\", app.logger)\n```\n\nThen in order to use it, import ['g'](https://flask.palletsprojects.com/en/1.1.x/api/#flask.g)\n\n```python\nfrom flask import g\n\n\nresponse = g.client.get(\"/example/endpoint\")\n```\n\nThe benefit of this pattern is that the client is reset for every flask request so you don't need to worry about stale data in the client.\n\n## Development\n\n__The build pipeline require your tests to pass and code to be formatted__\n\nMake sure you have Python 3.x installed on your machine (use [pyenv](https://github.com/pyenv/pyenv)).\n\nInstall the dependencies with [pipenv](https://github.com/pypa/pipenv) (making sure to include dev and pre-release packages):\n\n```bash\npipenv install --dev --pre\n```\n\nConfigure your environment:\n\n```bash\npipenv shell && export PYTHONPATH=\"$PWD\"\n```\n\nRun the tests:\n\n```bash\npytest\n```\n\nOr with logging:\n\n```bash\npytest -s\n```\n\nOr tests with coverage:\n\n```bash\npytest --cov=./\n```\n\nFormat the code with [Black](https://github.com/psf/black):\n\n```bash\nblack $PWD\n```\n\n## Releases\n\nCleanup the (.gitignored) `dist` folder (if you have one):\n\n```bash\nrm -rf dist\n```\n\nNotch up the version number in `setup.py` and build:\n\n```bash\npython3 setup.py sdist bdist_wheel\n```\n\nPush to PyPi (using the ScholarPack credentials when prompted)\n\n```bash\npython3 -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n```\n\n# Links\n* Releases: https://pypi.org/project/simple-api-client/\n* Code: https://github.com/ScholarPack/simple-api-client/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ScholarPack/api-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simple-api-client", "package_url": "https://pypi.org/project/simple-api-client/", "platform": "", "project_url": "https://pypi.org/project/simple-api-client/", "project_urls": {"Homepage": "https://github.com/ScholarPack/api-client"}, "release_url": "https://pypi.org/project/simple-api-client/1.0.3/", "requires_dist": ["cookie-manager", "requests", "werkzeug"], "requires_python": ">=3.6", "summary": "A simple API client for connecting to remote services.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simple Api Client</h1>\n<p>A simple API client for connecting to remote services.</p>\n<h2>Features</h2>\n<p>Along with common methods for creating and performing Json based API\nrequests, this library supports the following extra features.</p>\n<ul>\n<li>Convenience methods for adding Basic and Bearer auth headers.</li>\n<li>A convenience method for adding signed cookies.</li>\n<li>A timeout limit for all requests.</li>\n<li>A global or per-request retry limit to retry an API request if it fails.</li>\n<li>Uses a best effort approach to deal with malformed Json returned from an API endpoint.</li>\n<li>Each response is guaranteed to contain a status code and well formed parsed Json data.\n<ul>\n<li>If something goes wrong, an error message will always be included in the data.</li>\n</ul>\n</li>\n<li>Fully supports returning binary data (as bytes) from an API request.</li>\n<li>handles rate limiting when performing an API request. These requests can be configured to be retried before raising an error.</li>\n</ul>\n<h2>Installation</h2>\n<p>Install and update using <code>pipenv</code></p>\n<pre>pip install -U simple-api-client\n</pre>\n<h2>Usage</h2>\n<h3>Simple use-case</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_api_client</span> <span class=\"kn\">import</span> <span class=\"n\">ApiClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">logging</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"s2\">\"simple-logger\"</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"s2\">\"DEBUG\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.example.com\"</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/example/endpoint\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h3>Creating more specific clients</h3>\n<p>This client has been created to be as flexible as possible to be used as a\nbase class for more specific clients. All you uneed to do is extend the\n<code>ApiClient</code> class and add any suitable methods.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">g</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">current_app</span> <span class=\"k\">as</span> <span class=\"n\">app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">simple_api_client</span> <span class=\"kn\">import</span> <span class=\"n\">ApiClient</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyServiceClient</span><span class=\"p\">(</span><span class=\"n\">ApiClient</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">use_cookie_auth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"COOKIE_NAME\"</span><span class=\"p\">)</span>\n        <span class=\"n\">signing_key</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"COOKIE_SIGNING_KEY\"</span><span class=\"p\">)</span>\n        <span class=\"n\">signing_key_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"trusted-service\"</span>\n        <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"n\">data</span><span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_signed_cookie</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"n\">signing_key_id</span><span class=\"p\">,</span> <span class=\"n\">signing_key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_remote_resource</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/example/endpoint\"</span><span class=\"p\">)</span>\n</pre>\n<h3>A note on security</h3>\n<p>It's import to understand that when a client is initialised with headers and\ncookies, these will remain set for the lifetime of the client or until\nmanually unset. If you don't want this state to remain in-between requests,\nit's important to take action to reset the client. In a\n<a href=\"https://flask.palletsprojects.com/\" rel=\"nofollow\">Flask</a> application this is easily\nachieved by assigning the client to the special <a href=\"https://flask.palletsprojects.com/en/1.1.x/api/#flask.g\" rel=\"nofollow\">'g'\nobject</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">g</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">current_app</span> <span class=\"k\">as</span> <span class=\"n\">app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">simple_api_client</span> <span class=\"kn\">import</span> <span class=\"n\">ApiClient</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">before_request</span>\n<span class=\"k\">def</span> <span class=\"nf\">setup_api_client</span><span class=\"p\">():</span>\n    <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.example.com\"</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n</pre>\n<p>Then in order to use it, import <a href=\"https://flask.palletsprojects.com/en/1.1.x/api/#flask.g\" rel=\"nofollow\">'g'</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">g</span>\n\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/example/endpoint\"</span><span class=\"p\">)</span>\n</pre>\n<p>The benefit of this pattern is that the client is reset for every flask request so you don't need to worry about stale data in the client.</p>\n<h2>Development</h2>\n<p><strong>The build pipeline require your tests to pass and code to be formatted</strong></p>\n<p>Make sure you have Python 3.x installed on your machine (use <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>).</p>\n<p>Install the dependencies with <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">pipenv</a> (making sure to include dev and pre-release packages):</p>\n<pre>pipenv install --dev --pre\n</pre>\n<p>Configure your environment:</p>\n<pre>pipenv shell <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$PWD</span><span class=\"s2\">\"</span>\n</pre>\n<p>Run the tests:</p>\n<pre>pytest\n</pre>\n<p>Or with logging:</p>\n<pre>pytest -s\n</pre>\n<p>Or tests with coverage:</p>\n<pre>pytest --cov<span class=\"o\">=</span>./\n</pre>\n<p>Format the code with <a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a>:</p>\n<pre>black <span class=\"nv\">$PWD</span>\n</pre>\n<h2>Releases</h2>\n<p>Cleanup the (.gitignored) <code>dist</code> folder (if you have one):</p>\n<pre>rm -rf dist\n</pre>\n<p>Notch up the version number in <code>setup.py</code> and build:</p>\n<pre>python3 setup.py sdist bdist_wheel\n</pre>\n<p>Push to PyPi (using the ScholarPack credentials when prompted)</p>\n<pre>python3 -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n</pre>\n<h1>Links</h1>\n<ul>\n<li>Releases: <a href=\"https://pypi.org/project/simple-api-client/\" rel=\"nofollow\">https://pypi.org/project/simple-api-client/</a></li>\n<li>Code: <a href=\"https://github.com/ScholarPack/simple-api-client/\" rel=\"nofollow\">https://github.com/ScholarPack/simple-api-client/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7187233, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "300806771a1aa7b8ac22431dad2cc136", "sha256": "3de34f205fdc0d5d101b72cfd1c46c6b556912605e3112f2130fb1ca116871a1"}, "downloads": -1, "filename": "simple_api_client-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "300806771a1aa7b8ac22431dad2cc136", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5600, "upload_time": "2020-05-05T14:02:39", "upload_time_iso_8601": "2020-05-05T14:02:39.888935Z", "url": "https://files.pythonhosted.org/packages/57/56/1f8327b1a44036557b9bcd2e65b5af82e22804a75e19ed9249ca13817172/simple_api_client-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a11fc6240a83c1abd8e9293803cafa9", "sha256": "23d29c5d3df1d733042af3e6c9524b45d2a0874b00976b6de6601f25b2826709"}, "downloads": -1, "filename": "simple-api-client-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2a11fc6240a83c1abd8e9293803cafa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4434, "upload_time": "2020-05-05T14:02:42", "upload_time_iso_8601": "2020-05-05T14:02:42.209758Z", "url": "https://files.pythonhosted.org/packages/84/34/ec86c619ffc7072ceb2600915c16d3d7181b79f43015f58125ac8c62359a/simple-api-client-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "39e7ce39140f0d845af4fad42eccef17", "sha256": "e94e9c35eb7f8b09595004767870abe5efcee54164478a12915e4d2de8a74ae3"}, "downloads": -1, "filename": "simple_api_client-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39e7ce39140f0d845af4fad42eccef17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5656, "upload_time": "2020-05-05T14:25:12", "upload_time_iso_8601": "2020-05-05T14:25:12.231201Z", "url": "https://files.pythonhosted.org/packages/bc/4f/5b6ca867a66625aaf758f2743824c57418c7de2344d16531c7175a8ff421/simple_api_client-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e806f1c795fecfba3617f1ceb30e4f77", "sha256": "145a9cda50d126a31335ffe84b17fc5d26872680744f9622bdb6a0eb2cf2c15d"}, "downloads": -1, "filename": "simple-api-client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e806f1c795fecfba3617f1ceb30e4f77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4416, "upload_time": "2020-05-05T14:25:13", "upload_time_iso_8601": "2020-05-05T14:25:13.671305Z", "url": "https://files.pythonhosted.org/packages/12/18/133aeacc5bd696bc7cdc4777eb84bd0fc3b750b802aaf12514c7b57b3605/simple-api-client-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3df3662a7b078a97a5da6c62fd1a59eb", "sha256": "06c22843c4100b5b02704464bc70ae38f50f67c4476c88b0d071d152fa788340"}, "downloads": -1, "filename": "simple_api_client-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3df3662a7b078a97a5da6c62fd1a59eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6337, "upload_time": "2020-05-06T14:55:59", "upload_time_iso_8601": "2020-05-06T14:55:59.630782Z", "url": "https://files.pythonhosted.org/packages/82/c0/210d88551f07c1dbf919c03e9aed04a042a505d06e4afb7d119abd5d6b24/simple_api_client-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26f067a27bd93bacc4e3227ddd73cc62", "sha256": "5291f1979e02bbfc3974b6d724197b70c3e8bf8a0d48b230e1b74b93bb77889d"}, "downloads": -1, "filename": "simple-api-client-1.0.2.tar.gz", "has_sig": false, "md5_digest": "26f067a27bd93bacc4e3227ddd73cc62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5199, "upload_time": "2020-05-06T14:56:01", "upload_time_iso_8601": "2020-05-06T14:56:01.173213Z", "url": "https://files.pythonhosted.org/packages/6c/d0/d20fbacfd940b49a6fcd2c050183fc2f1ed2d53d6bc15d5df286cb8095db/simple-api-client-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "79f699f3af05f2b080080d6b59e99d59", "sha256": "40d39a79a30c06a6089900bdf3e448cac56f2230f591fc104c012b5dfa812bfa"}, "downloads": -1, "filename": "simple_api_client-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "79f699f3af05f2b080080d6b59e99d59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6710, "upload_time": "2020-05-07T10:18:50", "upload_time_iso_8601": "2020-05-07T10:18:50.710789Z", "url": "https://files.pythonhosted.org/packages/da/c6/6b141e9b50dbb93066ca79b765af7a73155613f4b776c14840c061a7cb14/simple_api_client-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "605a19c008fb30d3b9fd321f070e31e5", "sha256": "970cd75facc169c4adc7899b88ef203b75ba427642fa2abc2f105625ee40e33d"}, "downloads": -1, "filename": "simple-api-client-1.0.3.tar.gz", "has_sig": false, "md5_digest": "605a19c008fb30d3b9fd321f070e31e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5605, "upload_time": "2020-05-07T10:18:51", "upload_time_iso_8601": "2020-05-07T10:18:51.991779Z", "url": "https://files.pythonhosted.org/packages/60/93/eca2c65a23dc5106fbc91fd7815c353b492fe37ce24212776f5c0a7f7d32/simple-api-client-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79f699f3af05f2b080080d6b59e99d59", "sha256": "40d39a79a30c06a6089900bdf3e448cac56f2230f591fc104c012b5dfa812bfa"}, "downloads": -1, "filename": "simple_api_client-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "79f699f3af05f2b080080d6b59e99d59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6710, "upload_time": "2020-05-07T10:18:50", "upload_time_iso_8601": "2020-05-07T10:18:50.710789Z", "url": "https://files.pythonhosted.org/packages/da/c6/6b141e9b50dbb93066ca79b765af7a73155613f4b776c14840c061a7cb14/simple_api_client-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "605a19c008fb30d3b9fd321f070e31e5", "sha256": "970cd75facc169c4adc7899b88ef203b75ba427642fa2abc2f105625ee40e33d"}, "downloads": -1, "filename": "simple-api-client-1.0.3.tar.gz", "has_sig": false, "md5_digest": "605a19c008fb30d3b9fd321f070e31e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5605, "upload_time": "2020-05-07T10:18:51", "upload_time_iso_8601": "2020-05-07T10:18:51.991779Z", "url": "https://files.pythonhosted.org/packages/60/93/eca2c65a23dc5106fbc91fd7815c353b492fe37ce24212776f5c0a7f7d32/simple-api-client-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:02 2020"}