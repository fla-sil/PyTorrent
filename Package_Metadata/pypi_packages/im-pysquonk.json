{"info": {"author": "Malcolm Peacock", "author_email": "malcolm@popmalc.org.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pysquonk\nPySquonk\n========\n\nPysquonk is a python API wrapper round the Informatics Matters Squonk Rest\n Services. It can be used to submit jobs, check their status and retreive\nthe jobs results. It can be used in two ways:\n- from the command line\n- writing python scripts using the API\n\n\nInstallation\n------------\n\nFrom github https://github.com/InformaticsMatters/pysquonk\n\nFrom pip:\n  pip install im-pysquonk\n\nRunning from the command line\n-----------------------------\n\nCopy the file config.ini from github and save it into the directory you are going to run the command from. Edit your username and password into the file, or\npass them via the command line (see below). The job to run is specified using\nyaml files. Examples of yaml files for various jobs are available in the yaml\ndirectory. For example, if you installed with pip, the command;\n\n  pysquonk -r yaml/pipelines.rdkit.sucos.o3da.yaml -o outdir\n\nwill run the job defined by the file pipelines.rdkit.sucos.o3da.yaml and write its output to the directory outdir. To get help run.\n\n  pysquonk -h\n\nIf you did install pysquonk via pip, but you have a directory SQUONKDIR containing the contents of the repository then the command would be:\n\n  python SQUONKDIR/squonk -h\n\nIf you want to run a job that does not have an example in the yaml directory,\nthen the command:\n\n  pysquonk -s pipelines.rdkit.sucos.o3da -o outdir\n\nwill write out an example yaml file that you can amend to directory outdir\n\nUsing the Python API\n--------------------\n\nThe API documentation is in [doc/squonk.md](doc/squonk.md). There is an example program in test_harness.py\n\n\nDevelopment and Testing\n-----------------------\n\nTo run all the test jobs in the yaml sub directory, from the top level of the repo run:\n\n  python test_jobs.py\n\n(will prompt for username and password). -r option will run one of the jobs.\n\nTo run the script that executes the API functions:\n\n  python test_harness.py\n(will prompt for username and password).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/InformaticsMatters/pysquonk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "im-pysquonk", "package_url": "https://pypi.org/project/im-pysquonk/", "platform": "", "project_url": "https://pypi.org/project/im-pysquonk/", "project_urls": {"Homepage": "https://github.com/InformaticsMatters/pysquonk"}, "release_url": "https://pypi.org/project/im-pysquonk/1.0.1/", "requires_dist": ["PyYAML (==5.1.2)", "requests-toolbelt (==0.9.1)"], "requires_python": ">=3.6", "summary": "Pysquonk rest server API", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pysquonk</h1>\n<h1>PySquonk</h1>\n<p>Pysquonk is a python API wrapper round the Informatics Matters Squonk Rest\nServices. It can be used to submit jobs, check their status and retreive\nthe jobs results. It can be used in two ways:</p>\n<ul>\n<li>from the command line</li>\n<li>writing python scripts using the API</li>\n</ul>\n<h2>Installation</h2>\n<p>From github <a href=\"https://github.com/InformaticsMatters/pysquonk\" rel=\"nofollow\">https://github.com/InformaticsMatters/pysquonk</a></p>\n<p>From pip:\npip install im-pysquonk</p>\n<h2>Running from the command line</h2>\n<p>Copy the file config.ini from github and save it into the directory you are going to run the command from. Edit your username and password into the file, or\npass them via the command line (see below). The job to run is specified using\nyaml files. Examples of yaml files for various jobs are available in the yaml\ndirectory. For example, if you installed with pip, the command;</p>\n<p>pysquonk -r yaml/pipelines.rdkit.sucos.o3da.yaml -o outdir</p>\n<p>will run the job defined by the file pipelines.rdkit.sucos.o3da.yaml and write its output to the directory outdir. To get help run.</p>\n<p>pysquonk -h</p>\n<p>If you did install pysquonk via pip, but you have a directory SQUONKDIR containing the contents of the repository then the command would be:</p>\n<p>python SQUONKDIR/squonk -h</p>\n<p>If you want to run a job that does not have an example in the yaml directory,\nthen the command:</p>\n<p>pysquonk -s pipelines.rdkit.sucos.o3da -o outdir</p>\n<p>will write out an example yaml file that you can amend to directory outdir</p>\n<h2>Using the Python API</h2>\n<p>The API documentation is in <a href=\"doc/squonk.md\" rel=\"nofollow\">doc/squonk.md</a>. There is an example program in test_harness.py</p>\n<h2>Development and Testing</h2>\n<p>To run all the test jobs in the yaml sub directory, from the top level of the repo run:</p>\n<p>python test_jobs.py</p>\n<p>(will prompt for username and password). -r option will run one of the jobs.</p>\n<p>To run the script that executes the API functions:</p>\n<p>python test_harness.py\n(will prompt for username and password).</p>\n\n          </div>"}, "last_serial": 6168059, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2ec655d1223153513da43b9818680a8a", "sha256": "02c0738ff7f1a37b8cc2d10bd62f05a093aaccc5f0fb8816e081a3ec69b74b0b"}, "downloads": -1, "filename": "im_pysquonk-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ec655d1223153513da43b9818680a8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19173, "upload_time": "2019-11-05T12:05:10", "upload_time_iso_8601": "2019-11-05T12:05:10.580610Z", "url": "https://files.pythonhosted.org/packages/c1/f9/f308037fe1c34413261fc5e021a7cddbcf2e12da21d51ff6b96d70688606/im_pysquonk-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "23f80a8599940568db1de0da142c0553", "sha256": "3c9199e6fd2e5c8b99ee44757cc263ff46b5c014a381c08f4abf0a57efa4742f"}, "downloads": -1, "filename": "im_pysquonk-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23f80a8599940568db1de0da142c0553", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20707, "upload_time": "2019-11-20T10:37:43", "upload_time_iso_8601": "2019-11-20T10:37:43.107325Z", "url": "https://files.pythonhosted.org/packages/ad/37/561baf359aefa0d115c4034403a27aaa9111be6b2f5000f2fa5aa0fd682c/im_pysquonk-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23f80a8599940568db1de0da142c0553", "sha256": "3c9199e6fd2e5c8b99ee44757cc263ff46b5c014a381c08f4abf0a57efa4742f"}, "downloads": -1, "filename": "im_pysquonk-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23f80a8599940568db1de0da142c0553", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20707, "upload_time": "2019-11-20T10:37:43", "upload_time_iso_8601": "2019-11-20T10:37:43.107325Z", "url": "https://files.pythonhosted.org/packages/ad/37/561baf359aefa0d115c4034403a27aaa9111be6b2f5000f2fa5aa0fd682c/im_pysquonk-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:56:29 2020"}