{"info": {"author": "thu-coai", "author_email": "thu-coai-developer@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "\n# Conversational Toolkits\n\n[![CodeFactor](https://www.codefactor.io/repository/github/thu-coai/cotk/badge)](https://www.codefactor.io/repository/github/thu-coai/cotk)\n[![Coverage Status](https://coveralls.io/repos/github/thu-coai/cotk/badge.svg?branch=master)](https://coveralls.io/github/thu-coai/cotk?branch=master)\n[![Build Status](https://travis-ci.com/thu-coai/cotk.svg?branch=master)](https://travis-ci.com/thu-coai/cotk)\n[![codebeat badge](https://codebeat.co/badges/dc64db27-7e25-4fea-a231-3c9baac916f8)](https://codebeat.co/projects/github-com-thu-coai-cotk-master)\n\n``cotk`` is an open-source lightweight framework for model building and evaluation.\nWe provides standard dataset and evaluation suites in the domain of general language generation.\nIt easy to use and make you focus on designing your models!\n\nFeatures included:\n\n* Light-weight, easy to start. Don't bother your way to construct models.\n* Predefined standard datasets, in the domain of language modeling, dialog generation and more.\n* Predefined evaluation suites, test your model with multiple metrics in several lines.\n* A dashboard to show experiments, compare your and others' models fairly.\n* Long-term maintenance and consistent development.\n\nThis project is a part of ``dialtk`` (Toolkits for Dialog System by Tsinghua University), you can follow [dialtk](http://coai.cs.tsinghua.edu.cn/dialtk/) or [cotk](http://coai.cs.tsinghua.edu.cn/dialtk/cotk/) on our home page.\n\n**Quick links**\n\n* [Tutorial & Documents](https://thu-coai.github.io/cotk_docs/)\n* [Dashboard](http://coai.cs.tsinghua.edu.cn/dashboard/)\n\n**Index**\n\n- [Installation](#installation)\n  - [Requirements](#requirements)\n  - [Install from pip](#install-from-pip)\n  - [Install from source](#install-from-source)\n- [Quick Start](#quick-start)\n  - [Dataloader](#Dataloader)\n  - [Metrics](#metrics)\n  - [Publish Experiments](#publish-experiments)\n  - [Reproduce Experiments](#reproduce-experiments)\n  - [Predefined Models](#predefined-models)\n- [Issues](#issues)\n- [Contributions](#Contributions)\n- [Team](#team)\n- [License](#license)\n\n\n\n## Installation\n\n### Requirements\n\n-  python 3\n-  numpy >= 1.13\n-  nltk >= 3.4\n-  tqdm >= 4.30\n-  checksumdir >= 1.1\n-  pytorch >= 1.0.0 (optional)\n-  pytorch-pretrained-bert (optional)\n\n### Install from pip\n\nYou can simply get the latest stable version from pip using\n\n```bash\n    pip install cotk\n```\n\n### Install from source code\n\n* Clone the cotk repository\n\n```bash\n    git clone https://github.com/thu-coai/cotk.git\n```\n\n* Install cotk via pip\n\n```bash\n    cd cotk\n    pip install -e .\n```\n\n* If you want to run the models in ``./models``, you have to additionally install [TensorFlow](https://www.tensorflow.org) or [PyTorch](https://pytorch.org/).\n\n\n\n## Quick Start\n\nLet us skim through the whole package to find what you want. \n\n### Dataloader\n\nLoad common used dataset and preprocess for you:\n\n* Download online resources or import from local\n* Split training set, development set and test set\n* Construct vocabulary list\n\n```python\n    >>> # automatically download online resources\n    >>> dataloader = cotk.dataloader.MSCOCO(\"resources://MSCOCO_small\")\n    >>> # or download from a url\n    >>> dl_url = cotk.dataloader.MSCOCO(\"http://cotk-data.s3-ap-northeast-1.amazonaws.com/mscoco_small.zip#MSCOCO\")\n    >>> # or import from local file\n    >>> dl_zip = cotk.dataloader.MSCOCO(\"./MSCOCO.zip#MSCOCO\")\n\n    >>> print(\"Dataset is split into:\", dataloader.key_name)\n    [\"train\", \"dev\", \"test\"]\n```\n\nInspect vocabulary list\n\n```python\n    >>> print(\"Vocabulary size:\", dataloader.vocab_size)\n    Vocabulary size: 2588\n    >>> print(\"Frist 10 tokens in vocabulary:\", dataloader.vocab_list[:10])\n    Frist 10 tokens in vocabulary: ['<pad>', '<unk>', '<go>', '<eos>', '.', 'a', 'A', 'on', 'of', 'in']\n```\n\nConvert between ids and strings\n\n```python\n    >>> print(\"Convert string to ids\", \\\n    ...           dataloader.convert_tokens_to_ids([\"<go>\", \"hello\", \"world\", \"<eos>\"]))\n    Convert string to string [2, 1379, 1897, 3]\n    >>> print(\"Convert ids to string\", \\\n    ...           dataloader.convert_ids_to_tokens([2, 1379, 1897, 3]))\n```\n\nIterate over batches\n\n```python\n    >>> for data in dataloader.get_batch(\"train\", batch_size=1):\n    ...     print(data)\n    {'sent':\n        array([[ 2, 181, 13, 26, 145, 177, 8, 22, 12, 5, 1, 1099, 4, 3]]),\n        # <go> This is an old photo of people and a <unk> wagon.\n     'sent_allvocabs':\n        array([[ 2, 181, 13, 26, 145, 177, 8, 22, 12, 5, 3755, 1099, 4, 3]]),\n        # <go> This is an old photo of people and a horse-drawn wagon.\n     'sent_length': array([14])}\n    ......\n```\n\nor using ``while`` if you like\n\n```python\n    >>> dataloader.restart(\"train\", batch_size=1):\n    >>> while True:\n    ...    data = dataloader.get_next_batch(\"train\")\n    ...    if data is None: break\n    ...    print(data)\n```\n\n\n**note**: If you want to know more about data loader, please refer to [docs](https://thu-coai.github.io/cotk_docs/index.html#model-zoo).\n\n### Metrics\n\nWe found there are different versions of the same metric in released codes on Github,\nwhich leads to unfair compare between models. For example, whether considering\n``unk``, calculating the mean of NLL across sentences or tokens in\n``perplexity`` may introduce **an error of several times** and **extremely** harm the evaluation.\n\nWe provide unified metrics implementation for all models. The metric object\nreceives data in batch.\n\n```python\n    >>> metric = cotk.metric.SelfBleuCorpusMetric(dataloader, gen_key=\"gen\")\n    >>> metric.forward({\n    ...    \"gen\":\n    ...        [[2, 181, 13, 26, 145, 177, 8, 22, 12, 5, 3755, 1099, 4, 3],\n    ...         [2, 46, 145, 500, 1764, 207, 11, 5, 93, 7, 31, 4, 3]]\n    ... })\n    >>> print(metric.close())\n    {'self-bleu': 0.02206768072402293,\n     'self-bleu hashvalue': 'c206893c2272af489147b80df306ee703e71d9eb178f6bb06c73cb935f474452'}\n```\n\nWe also provide standard metrics for selected dataloader.\n\n```python\n    >>> metric = dataloader.get_inference_metric(gen_key=\"gen\")\n    >>> metric.forward({\n    ...    \"gen\":\n    ...        [[2, 181, 13, 26, 145, 177, 8, 22, 12, 5, 3755, 1099, 4, 3],\n    ...         [2, 46, 145, 500, 1764, 207, 11, 5, 93, 7, 31, 4, 3]]\n    ... })\n    >>> print(metric.close())\n    {'self-bleu': 0.02206768072402293,\n     'self-bleu hashvalue': 'c206893c2272af489147b80df306ee703e71d9eb178f6bb06c73cb935f474452',\n     'fw-bleu': 0.3831004349785445, 'bw-bleu': 0.025958979254273006, 'fw-bw-bleu': 0.04862323612604027,\n     'fw-bw-bleu hashvalue': '530d449a096671d13705e514be13c7ecffafd80deb7519aa7792950a5468549e',\n     'gen': [\n         ['<go>', 'This', 'is', 'an', 'old', 'photo', 'of', 'people', 'and', 'a', 'horse-drawn', 'wagon', '.'],\n         ['<go>', 'An', 'old', 'stone', 'castle', 'tower', 'with', 'a', 'clock', 'on', 'it', '.']\n     ]}\n```\n\n``Hash value`` is provided for checking whether the same dataset is used.\n\n\n**note**: If you want to know more about metrics, please refer to [docs](https://thu-coai.github.io/cotk_docs/metric.html).\n\n### Publish Experiments\n\nWe provide an online dashboard to manage your experiments.\n\nHere we give an simple example for you.\n\nFirst initialize a git repo in your command line.\n\n```bash\n    git init\n```\n\nThen write your model with an entry function in ``main.py``.\n\n```python\n    import cotk.dataloader\n    import json\n\n    def run():\n        dataloader = cotk.dataloader.MSCOCO(\"resources://MSCOCO_small\")\n        metric = dataloader.get_inference_metric()\n        metric.forward({\n            \"gen\":\n                [[2, 181, 13, 26, 145, 177, 8, 22, 12, 5, 3755, 1099, 4, 3],\n                [2, 46, 145, 500, 1764, 207, 11, 5, 93, 7, 31, 4, 3]]\n        })\n        json.dump(metric.close(), open(\"result.json\", 'w'))\n```\n\n\n**note**: The only requirement of your model is to output a file named ``result.json``,\nyou can do whatever you want (even don't load data using ``cotk``).\n\n\nNext, commit your changes and set upstream branch in your command line.\n\n```bash\n    git add -A\n    git commit -a -m \"init\"\n    git remote add origin master https://github.com/USERNAME/REPONAME.git\n    git push origin -u master\n```\n\nFinally, type ``cotk run`` to run your model and upload to cotk dashboard.\n\n``cotk`` will automatically collect your git repo, username, commit and ``result.json``\nto the cotk dashboard (TO BE ONLINE).The dashboard is a website where you can manage\nyour experiments or share results with others.\n\nFILL AN IMAGE HERE\n\nIf you don't want to use cotk's dashboard, you can also choose to directly upload your model\nto github.\n\nUse ``cotk run --only-run`` instead of ``cotk run``, you will find a ``.model_config.json``\nis generated. Commit the file and push it to github, the other can automatically download\nyour model as the way described in next section.\n\n\n**note**: The reproducibility should be maintained by the author. We only make sure all the input\nis the same, but difference can be introduced by different random seed, device or other\naffects. Before you upload, run ``cotk run --only-run`` twice and find whether the results\nis the same.\n\n### Reproduce Experiments\n\nYou can download others' model in dashboard\nand try to reproduce their results.\n\n```bash\n    cotk download ID\n```\n\nThe ``ID`` comes from dashboard id.\n``cotk`` will download the codes from dashboard and tell you how to run the models.\n\n```none\nINFO: Fetching USERNAME/REPO/COMMIT\n13386B [00:00, 54414.25B/s]\nINFO: Codes from USERNAME/REPO/COMMIT fetched.\nINFO: Model running cmd written in run_model.sh\nModel running cmd:  cd ./PATH && cotk run --only-run --entry main\n```\n\nType ``cotk run --only-run --entry main`` will reproduce the same experiments.\n\nYou can also download directly from github if the maintainer has set the ``.model_config.json``.\n\n```bash\n    cotk download USER/REPO/COMMIT\n```\n\n``cotk`` will download the codes from github and generate commands by the config file.\n\n### Predefined Models\n\n\nWe have provided some baselines for the classical tasks, see [Model Zoo](https://thu-coai.github.io/cotk_docs/index.html#model-zoo) in docs for details.\n\nYou can also use ``cotk download thu-coai/MODEL_NAME/master`` to get the codes.\n\n## Issues\n\nYou are welcome to create an issue if you want to request a feature, report a bug or ask a general question.\n\n## Contributions\n\nWe welcome contributions from community. \n\n* If you want to make a big change, we recommend first creating an issue with your design.\n* Small contributions can be directly made by a pull request.\n* If you like make contributions for our library, see issues to find what we need.\n\n## Team\n\n`cotk` is maintained and developed by Tsinghua university conversational AI group (THU-coai). Check our [main pages](http://coai.cs.tsinghua.edu.cn/) (In Chinese).\n\n## License\n\nApache License 2.0\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thu-coai/cotk", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "cotk", "package_url": "https://pypi.org/project/cotk/", "platform": "", "project_url": "https://pypi.org/project/cotk/", "project_urls": {"Homepage": "https://github.com/thu-coai/cotk"}, "release_url": "https://pypi.org/project/cotk/0.0.1/", "requires_dist": ["numpy (>=1.13)", "nltk (>=3.4)", "tqdm (>=4.30)", "checksumdir (>=1.1)", "requests", "torch (>=1.0.0) ; extra == 'develop'", "python-coveralls ; extra == 'develop'", "pytest-dependency ; extra == 'develop'", "pytest-mock ; extra == 'develop'", "requests-mock ; extra == 'develop'", "pytest (>=3.6.0) ; extra == 'develop'", "pytest-cov (==2.4.0) ; extra == 'develop'", "checksumdir ; extra == 'develop'", "pytorch-transformers (>=1.1.0) ; extra == 'develop'"], "requires_python": ">=3.5", "summary": "Conversational Toolkits", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Conversational Toolkits</h1>\n<p><a href=\"https://www.codefactor.io/repository/github/thu-coai/cotk\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc0f16913c80c2d59ce51bec0c13a2423fb2f577/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7468752d636f61692f636f746b2f6261646765\"></a>\n<a href=\"https://coveralls.io/github/thu-coai/cotk?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec468cfa05579d6f5d0ce4a57fd914f1e1584003/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7468752d636f61692f636f746b2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.com/thu-coai/cotk\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b71e7c96699a7f4814ccbcca09cda1904aaf78f0/68747470733a2f2f7472617669732d63692e636f6d2f7468752d636f61692f636f746b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codebeat.co/projects/github-com-thu-coai-cotk-master\" rel=\"nofollow\"><img alt=\"codebeat badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5f5da40000e4d0e8717fc6a02e625892fc825d6/68747470733a2f2f636f6465626561742e636f2f6261646765732f64633634646232372d376532352d346665612d613233312d336339626161633931366638\"></a></p>\n<p><code>cotk</code> is an open-source lightweight framework for model building and evaluation.\nWe provides standard dataset and evaluation suites in the domain of general language generation.\nIt easy to use and make you focus on designing your models!</p>\n<p>Features included:</p>\n<ul>\n<li>Light-weight, easy to start. Don't bother your way to construct models.</li>\n<li>Predefined standard datasets, in the domain of language modeling, dialog generation and more.</li>\n<li>Predefined evaluation suites, test your model with multiple metrics in several lines.</li>\n<li>A dashboard to show experiments, compare your and others' models fairly.</li>\n<li>Long-term maintenance and consistent development.</li>\n</ul>\n<p>This project is a part of <code>dialtk</code> (Toolkits for Dialog System by Tsinghua University), you can follow <a href=\"http://coai.cs.tsinghua.edu.cn/dialtk/\" rel=\"nofollow\">dialtk</a> or <a href=\"http://coai.cs.tsinghua.edu.cn/dialtk/cotk/\" rel=\"nofollow\">cotk</a> on our home page.</p>\n<p><strong>Quick links</strong></p>\n<ul>\n<li><a href=\"https://thu-coai.github.io/cotk_docs/\" rel=\"nofollow\">Tutorial &amp; Documents</a></li>\n<li><a href=\"http://coai.cs.tsinghua.edu.cn/dashboard/\" rel=\"nofollow\">Dashboard</a></li>\n</ul>\n<p><strong>Index</strong></p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#install-from-pip\" rel=\"nofollow\">Install from pip</a></li>\n<li><a href=\"#install-from-source\" rel=\"nofollow\">Install from source</a></li>\n</ul>\n</li>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick Start</a>\n<ul>\n<li><a href=\"#Dataloader\" rel=\"nofollow\">Dataloader</a></li>\n<li><a href=\"#metrics\" rel=\"nofollow\">Metrics</a></li>\n<li><a href=\"#publish-experiments\" rel=\"nofollow\">Publish Experiments</a></li>\n<li><a href=\"#reproduce-experiments\" rel=\"nofollow\">Reproduce Experiments</a></li>\n<li><a href=\"#predefined-models\" rel=\"nofollow\">Predefined Models</a></li>\n</ul>\n</li>\n<li><a href=\"#issues\" rel=\"nofollow\">Issues</a></li>\n<li><a href=\"#Contributions\" rel=\"nofollow\">Contributions</a></li>\n<li><a href=\"#team\" rel=\"nofollow\">Team</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<ul>\n<li>python 3</li>\n<li>numpy &gt;= 1.13</li>\n<li>nltk &gt;= 3.4</li>\n<li>tqdm &gt;= 4.30</li>\n<li>checksumdir &gt;= 1.1</li>\n<li>pytorch &gt;= 1.0.0 (optional)</li>\n<li>pytorch-pretrained-bert (optional)</li>\n</ul>\n<h3>Install from pip</h3>\n<p>You can simply get the latest stable version from pip using</p>\n<pre>    pip install cotk\n</pre>\n<h3>Install from source code</h3>\n<ul>\n<li>Clone the cotk repository</li>\n</ul>\n<pre>    git clone https://github.com/thu-coai/cotk.git\n</pre>\n<ul>\n<li>Install cotk via pip</li>\n</ul>\n<pre>    <span class=\"nb\">cd</span> cotk\n    pip install -e .\n</pre>\n<ul>\n<li>If you want to run the models in <code>./models</code>, you have to additionally install <a href=\"https://www.tensorflow.org\" rel=\"nofollow\">TensorFlow</a> or <a href=\"https://pytorch.org/\" rel=\"nofollow\">PyTorch</a>.</li>\n</ul>\n<h2>Quick Start</h2>\n<p>Let us skim through the whole package to find what you want.</p>\n<h3>Dataloader</h3>\n<p>Load common used dataset and preprocess for you:</p>\n<ul>\n<li>Download online resources or import from local</li>\n<li>Split training set, development set and test set</li>\n<li>Construct vocabulary list</li>\n</ul>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># automatically download online resources</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dataloader</span> <span class=\"o\">=</span> <span class=\"n\">cotk</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">MSCOCO</span><span class=\"p\">(</span><span class=\"s2\">\"resources://MSCOCO_small\"</span><span class=\"p\">)</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># or download from a url</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dl_url</span> <span class=\"o\">=</span> <span class=\"n\">cotk</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">MSCOCO</span><span class=\"p\">(</span><span class=\"s2\">\"http://cotk-data.s3-ap-northeast-1.amazonaws.com/mscoco_small.zip#MSCOCO\"</span><span class=\"p\">)</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># or import from local file</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dl_zip</span> <span class=\"o\">=</span> <span class=\"n\">cotk</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">MSCOCO</span><span class=\"p\">(</span><span class=\"s2\">\"./MSCOCO.zip#MSCOCO\"</span><span class=\"p\">)</span>\n\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Dataset is split into:\"</span><span class=\"p\">,</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">)</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"train\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dev\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">]</span>\n</pre>\n<p>Inspect vocabulary list</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Vocabulary size:\"</span><span class=\"p\">,</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">vocab_size</span><span class=\"p\">)</span>\n    <span class=\"n\">Vocabulary</span> <span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"mi\">2588</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Frist 10 tokens in vocabulary:\"</span><span class=\"p\">,</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">vocab_list</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n    <span class=\"n\">Frist</span> <span class=\"mi\">10</span> <span class=\"n\">tokens</span> <span class=\"ow\">in</span> <span class=\"n\">vocabulary</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'&lt;pad&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;unk&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;go&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;eos&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'of'</span><span class=\"p\">,</span> <span class=\"s1\">'in'</span><span class=\"p\">]</span>\n</pre>\n<p>Convert between ids and strings</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Convert string to ids\"</span><span class=\"p\">,</span> \\\n    <span class=\"o\">...</span>           <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">convert_tokens_to_ids</span><span class=\"p\">([</span><span class=\"s2\">\"&lt;go&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"s2\">\"world\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;eos&gt;\"</span><span class=\"p\">]))</span>\n    <span class=\"n\">Convert</span> <span class=\"n\">string</span> <span class=\"n\">to</span> <span class=\"n\">string</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1379</span><span class=\"p\">,</span> <span class=\"mi\">1897</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Convert ids to string\"</span><span class=\"p\">,</span> \\\n    <span class=\"o\">...</span>           <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">convert_ids_to_tokens</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1379</span><span class=\"p\">,</span> <span class=\"mi\">1897</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n</pre>\n<p>Iterate over batches</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">get_batch</span><span class=\"p\">(</span><span class=\"s2\">\"train\"</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span><span class=\"s1\">'sent'</span><span class=\"p\">:</span>\n        <span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">181</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">177</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1099</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]),</span>\n        <span class=\"c1\"># &lt;go&gt; This is an old photo of people and a &lt;unk&gt; wagon.</span>\n     <span class=\"s1\">'sent_allvocabs'</span><span class=\"p\">:</span>\n        <span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">181</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">177</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3755</span><span class=\"p\">,</span> <span class=\"mi\">1099</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]),</span>\n        <span class=\"c1\"># &lt;go&gt; This is an old photo of people and a horse-drawn wagon.</span>\n     <span class=\"s1\">'sent_length'</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">14</span><span class=\"p\">])}</span>\n    <span class=\"o\">......</span>\n</pre>\n<p>or using <code>while</code> if you like</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">(</span><span class=\"s2\">\"train\"</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">get_next_batch</span><span class=\"p\">(</span><span class=\"s2\">\"train\"</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span>    <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n    <span class=\"o\">...</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p><strong>note</strong>: If you want to know more about data loader, please refer to <a href=\"https://thu-coai.github.io/cotk_docs/index.html#model-zoo\" rel=\"nofollow\">docs</a>.</p>\n<h3>Metrics</h3>\n<p>We found there are different versions of the same metric in released codes on Github,\nwhich leads to unfair compare between models. For example, whether considering\n<code>unk</code>, calculating the mean of NLL across sentences or tokens in\n<code>perplexity</code> may introduce <strong>an error of several times</strong> and <strong>extremely</strong> harm the evaluation.</p>\n<p>We provide unified metrics implementation for all models. The metric object\nreceives data in batch.</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">cotk</span><span class=\"o\">.</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">SelfBleuCorpusMetric</span><span class=\"p\">(</span><span class=\"n\">dataloader</span><span class=\"p\">,</span> <span class=\"n\">gen_key</span><span class=\"o\">=</span><span class=\"s2\">\"gen\"</span><span class=\"p\">)</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">({</span>\n    <span class=\"o\">...</span>    <span class=\"s2\">\"gen\"</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>        <span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">181</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">177</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3755</span><span class=\"p\">,</span> <span class=\"mi\">1099</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"o\">...</span>         <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">1764</span><span class=\"p\">,</span> <span class=\"mi\">207</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">93</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]</span>\n    <span class=\"o\">...</span> <span class=\"p\">})</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>\n    <span class=\"p\">{</span><span class=\"s1\">'self-bleu'</span><span class=\"p\">:</span> <span class=\"mf\">0.02206768072402293</span><span class=\"p\">,</span>\n     <span class=\"s1\">'self-bleu hashvalue'</span><span class=\"p\">:</span> <span class=\"s1\">'c206893c2272af489147b80df306ee703e71d9eb178f6bb06c73cb935f474452'</span><span class=\"p\">}</span>\n</pre>\n<p>We also provide standard metrics for selected dataloader.</p>\n<pre>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">get_inference_metric</span><span class=\"p\">(</span><span class=\"n\">gen_key</span><span class=\"o\">=</span><span class=\"s2\">\"gen\"</span><span class=\"p\">)</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">({</span>\n    <span class=\"o\">...</span>    <span class=\"s2\">\"gen\"</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>        <span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">181</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">177</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3755</span><span class=\"p\">,</span> <span class=\"mi\">1099</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"o\">...</span>         <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">1764</span><span class=\"p\">,</span> <span class=\"mi\">207</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">93</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]</span>\n    <span class=\"o\">...</span> <span class=\"p\">})</span>\n    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>\n    <span class=\"p\">{</span><span class=\"s1\">'self-bleu'</span><span class=\"p\">:</span> <span class=\"mf\">0.02206768072402293</span><span class=\"p\">,</span>\n     <span class=\"s1\">'self-bleu hashvalue'</span><span class=\"p\">:</span> <span class=\"s1\">'c206893c2272af489147b80df306ee703e71d9eb178f6bb06c73cb935f474452'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'fw-bleu'</span><span class=\"p\">:</span> <span class=\"mf\">0.3831004349785445</span><span class=\"p\">,</span> <span class=\"s1\">'bw-bleu'</span><span class=\"p\">:</span> <span class=\"mf\">0.025958979254273006</span><span class=\"p\">,</span> <span class=\"s1\">'fw-bw-bleu'</span><span class=\"p\">:</span> <span class=\"mf\">0.04862323612604027</span><span class=\"p\">,</span>\n     <span class=\"s1\">'fw-bw-bleu hashvalue'</span><span class=\"p\">:</span> <span class=\"s1\">'530d449a096671d13705e514be13c7ecffafd80deb7519aa7792950a5468549e'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'gen'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"p\">[</span><span class=\"s1\">'&lt;go&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'This'</span><span class=\"p\">,</span> <span class=\"s1\">'is'</span><span class=\"p\">,</span> <span class=\"s1\">'an'</span><span class=\"p\">,</span> <span class=\"s1\">'old'</span><span class=\"p\">,</span> <span class=\"s1\">'photo'</span><span class=\"p\">,</span> <span class=\"s1\">'of'</span><span class=\"p\">,</span> <span class=\"s1\">'people'</span><span class=\"p\">,</span> <span class=\"s1\">'and'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'horse-drawn'</span><span class=\"p\">,</span> <span class=\"s1\">'wagon'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"s1\">'&lt;go&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'An'</span><span class=\"p\">,</span> <span class=\"s1\">'old'</span><span class=\"p\">,</span> <span class=\"s1\">'stone'</span><span class=\"p\">,</span> <span class=\"s1\">'castle'</span><span class=\"p\">,</span> <span class=\"s1\">'tower'</span><span class=\"p\">,</span> <span class=\"s1\">'with'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'clock'</span><span class=\"p\">,</span> <span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'it'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">]</span>\n     <span class=\"p\">]}</span>\n</pre>\n<p><code>Hash value</code> is provided for checking whether the same dataset is used.</p>\n<p><strong>note</strong>: If you want to know more about metrics, please refer to <a href=\"https://thu-coai.github.io/cotk_docs/metric.html\" rel=\"nofollow\">docs</a>.</p>\n<h3>Publish Experiments</h3>\n<p>We provide an online dashboard to manage your experiments.</p>\n<p>Here we give an simple example for you.</p>\n<p>First initialize a git repo in your command line.</p>\n<pre>    git init\n</pre>\n<p>Then write your model with an entry function in <code>main.py</code>.</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">cotk.dataloader</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">():</span>\n        <span class=\"n\">dataloader</span> <span class=\"o\">=</span> <span class=\"n\">cotk</span><span class=\"o\">.</span><span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">MSCOCO</span><span class=\"p\">(</span><span class=\"s2\">\"resources://MSCOCO_small\"</span><span class=\"p\">)</span>\n        <span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">dataloader</span><span class=\"o\">.</span><span class=\"n\">get_inference_metric</span><span class=\"p\">()</span>\n        <span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">({</span>\n            <span class=\"s2\">\"gen\"</span><span class=\"p\">:</span>\n                <span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">181</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">177</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3755</span><span class=\"p\">,</span> <span class=\"mi\">1099</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">1764</span><span class=\"p\">,</span> <span class=\"mi\">207</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">93</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]</span>\n        <span class=\"p\">})</span>\n        <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"result.json\"</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">))</span>\n</pre>\n<p><strong>note</strong>: The only requirement of your model is to output a file named <code>result.json</code>,\nyou can do whatever you want (even don't load data using <code>cotk</code>).</p>\n<p>Next, commit your changes and set upstream branch in your command line.</p>\n<pre>    git add -A\n    git commit -a -m <span class=\"s2\">\"init\"</span>\n    git remote add origin master https://github.com/USERNAME/REPONAME.git\n    git push origin -u master\n</pre>\n<p>Finally, type <code>cotk run</code> to run your model and upload to cotk dashboard.</p>\n<p><code>cotk</code> will automatically collect your git repo, username, commit and <code>result.json</code>\nto the cotk dashboard (TO BE ONLINE).The dashboard is a website where you can manage\nyour experiments or share results with others.</p>\n<p>FILL AN IMAGE HERE</p>\n<p>If you don't want to use cotk's dashboard, you can also choose to directly upload your model\nto github.</p>\n<p>Use <code>cotk run --only-run</code> instead of <code>cotk run</code>, you will find a <code>.model_config.json</code>\nis generated. Commit the file and push it to github, the other can automatically download\nyour model as the way described in next section.</p>\n<p><strong>note</strong>: The reproducibility should be maintained by the author. We only make sure all the input\nis the same, but difference can be introduced by different random seed, device or other\naffects. Before you upload, run <code>cotk run --only-run</code> twice and find whether the results\nis the same.</p>\n<h3>Reproduce Experiments</h3>\n<p>You can download others' model in dashboard\nand try to reproduce their results.</p>\n<pre>    cotk download ID\n</pre>\n<p>The <code>ID</code> comes from dashboard id.\n<code>cotk</code> will download the codes from dashboard and tell you how to run the models.</p>\n<pre>INFO: Fetching USERNAME/REPO/COMMIT\n13386B [00:00, 54414.25B/s]\nINFO: Codes from USERNAME/REPO/COMMIT fetched.\nINFO: Model running cmd written in run_model.sh\nModel running cmd:  cd ./PATH &amp;&amp; cotk run --only-run --entry main\n</pre>\n<p>Type <code>cotk run --only-run --entry main</code> will reproduce the same experiments.</p>\n<p>You can also download directly from github if the maintainer has set the <code>.model_config.json</code>.</p>\n<pre>    cotk download USER/REPO/COMMIT\n</pre>\n<p><code>cotk</code> will download the codes from github and generate commands by the config file.</p>\n<h3>Predefined Models</h3>\n<p>We have provided some baselines for the classical tasks, see <a href=\"https://thu-coai.github.io/cotk_docs/index.html#model-zoo\" rel=\"nofollow\">Model Zoo</a> in docs for details.</p>\n<p>You can also use <code>cotk download thu-coai/MODEL_NAME/master</code> to get the codes.</p>\n<h2>Issues</h2>\n<p>You are welcome to create an issue if you want to request a feature, report a bug or ask a general question.</p>\n<h2>Contributions</h2>\n<p>We welcome contributions from community.</p>\n<ul>\n<li>If you want to make a big change, we recommend first creating an issue with your design.</li>\n<li>Small contributions can be directly made by a pull request.</li>\n<li>If you like make contributions for our library, see issues to find what we need.</li>\n</ul>\n<h2>Team</h2>\n<p><code>cotk</code> is maintained and developed by Tsinghua university conversational AI group (THU-coai). Check our <a href=\"http://coai.cs.tsinghua.edu.cn/\" rel=\"nofollow\">main pages</a> (In Chinese).</p>\n<h2>License</h2>\n<p>Apache License 2.0</p>\n\n          </div>"}, "last_serial": 5730393, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9b437310f8dcd539bf223e9ea39b7957", "sha256": "73ff5227b6d3e49a1b0ad4ec780e69f33c410e785da18b3955f904f9e8be7d0d"}, "downloads": -1, "filename": "cotk-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b437310f8dcd539bf223e9ea39b7957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 81037, "upload_time": "2019-08-26T12:03:12", "upload_time_iso_8601": "2019-08-26T12:03:12.876222Z", "url": "https://files.pythonhosted.org/packages/d1/70/ee2fc09d9d50f243a77ece22090ea2bfe0857a09acf8bb260c0723246f58/cotk-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce006f220c5bdbf5968ce9b3371998e3", "sha256": "a55eab79a82b28d8ffb0c3ad3958662ccd21559e9c89e364160efcc43cb80635"}, "downloads": -1, "filename": "cotk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ce006f220c5bdbf5968ce9b3371998e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 60426, "upload_time": "2019-08-26T12:03:16", "upload_time_iso_8601": "2019-08-26T12:03:16.826785Z", "url": "https://files.pythonhosted.org/packages/e7/33/76163f50654fdf6b579110b0ed1d449ec3e832b6f036b2eda1164ff783e3/cotk-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b437310f8dcd539bf223e9ea39b7957", "sha256": "73ff5227b6d3e49a1b0ad4ec780e69f33c410e785da18b3955f904f9e8be7d0d"}, "downloads": -1, "filename": "cotk-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b437310f8dcd539bf223e9ea39b7957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 81037, "upload_time": "2019-08-26T12:03:12", "upload_time_iso_8601": "2019-08-26T12:03:12.876222Z", "url": "https://files.pythonhosted.org/packages/d1/70/ee2fc09d9d50f243a77ece22090ea2bfe0857a09acf8bb260c0723246f58/cotk-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce006f220c5bdbf5968ce9b3371998e3", "sha256": "a55eab79a82b28d8ffb0c3ad3958662ccd21559e9c89e364160efcc43cb80635"}, "downloads": -1, "filename": "cotk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ce006f220c5bdbf5968ce9b3371998e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 60426, "upload_time": "2019-08-26T12:03:16", "upload_time_iso_8601": "2019-08-26T12:03:16.826785Z", "url": "https://files.pythonhosted.org/packages/e7/33/76163f50654fdf6b579110b0ed1d449ec3e832b6f036b2eda1164ff783e3/cotk-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:56 2020"}