{"info": {"author": "Michael Ludvig", "author_email": "mludvig@logix.net.nz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Simple MessageMedia API wrapper\n\n[![PyPI](https://img.shields.io/pypi/v/messagemedia-simple?color=4fc921&label=pypi&logo=pypi&logoColor=eeeeee)](https://pypi.org/project/messagemedia-simple/)\n[![CircleCI](https://img.shields.io/circleci/build/github/mludvig/messagemedia-simple?label=circleci&logo=circleci&logoColor=eeeeee)](https://circleci.com/gh/mludvig/messagemedia-simple)\n[![Python Versions](https://img.shields.io/pypi/pyversions/messagemedia-simple.svg?logo=python&logoColor=eeeeee)](https://pypi.org/project/messagemedia-simple/)\n\nSimple and easy to use module for sending SMS and MMS messages through [MessageMedia API](https://developers.messagemedia.com/code/messages-api-documentation/).\n\n## Installation\n\nThe easiest way is to install the package from [Python Package Index](https://pypi.org/project/messagemedia-simple/):\n\n```\npip3 install messagemedia-simple\n```\n\nNote that `messagemedia-simple` is *only available* for **Python 3.6 and newer**. Installation for older Python versions will fail.\n\n## Usage - sending a SMS message\n\nThe module interface pretty much mirrors the [MessageMedia *Mesages* API](https://developers.messagemedia.com/code/messages-api-documentation/).\nRefer to the API documentation for details about all the possible settings.\n\n```python\nfrom messagemedia_simple import MessagesAPI\n\nAPI_KEY = \"ABCDEFGH1234567890XX\"\nAPI_SECRET = \"1234567890asdfghjkl1234567890x\"\n\n# MessageMedia API object\nmm = MessagesAPI(API_KEY, API_SECRET, hmac_auth=True)\n\n# Send a SMS message and print `message_id`\nsend_response = mm.send_message(\"Some content\", \"+1234567890\")\nprint(f\"message_id: {send_response['message_id']})\n```\n\nNow we can check the message delivery status as it progresses from *enroute* through *submitted* to *delivered*:\n\n```python\nstatus_response = mm.get_message_status(send_response[\"message_id\"])\nprint(f\"status: {status_response['status']})\n```\n\nAnd finally we can retrieve *Message Replies*. Unfortunately through the API we can only\nretrieve *all* queued, unconfirmed replies rather than just those for a given `message_id`.\nThe filtering has to be done locally after all the replies are retrieved.\n\n```python\n# Retrieve all replies from MessageMedia\nreplies_response = mm.get_replies()\n\n# Filter only the relevant replies\nmy_replies = [r for r in replies_response[\"replies\"] if r[\"message_id\"]==send_response[\"message_id\"]]\n\n# Process the replies\nfor reply in my_replies:\n  print(f\"{reply['content']}\")\n```\n\nMessageMedia API has a concept of *confirming a reply* - as soon as a reply is confirmed it is no longer\nreturned from `get_replies()` call. That means only confirm a reply after it's successfully processed,\nfor example written to a local database. Multiple replies can be confirmed at once if needed.\n\n```python\nfor reply in my_replies:\n  print(f\"{reply['content']}\")\n  mm.confirm_replies(reply[\"reply_id\"])\n```\n\nLikewise we can retrieve and confirm the delivery reports using `get_delivery_reports()` and\n`confirm_delivery_reports()`. The logic of the operation is the same as with replies.\n\n## Sending a MMS and specifying additional parameters\n\nFor MMS messages we can specify a few more options, for example Subject, embedded images, links, etc.\n\nThe `send_message()` function doesn't have named parameters for all the possible options. However we can\npass any valid option as documented in the [Send Message API](https://jsapi.apiary.io/apis/messages32/reference/messages/v1messages.html).\nThe extra parameters are not validated in any way and it's the caller responsibility to ensure that they\nare valid for the API.\n\n```python\nresponse = mm.send_message(\n    format = \"MMS\",\n    subject = \"Happy new year!\",\n    content = \"All the best in 2020\",\n    media = [\n        \"https://images.pexels.com/photos/2526105/pexels-photo-2526105.jpeg?cs=srgb&dl=fireworks-display-2526105.jpg&h=853&w=1280\"\n    ],\n    destination_number = \"+123456789\",\n    scheduled = \"2020-01-01T00:00:00.000Z\",\n    message_expiry_timestamp = \"2020-01-01T01:23:45.678Z\",\n    metadata = { \"new_year\": 2020 },\n)\n```\n\nNote that MMS sending has to be enabled first by MessageMedia support.\n\n## Author\n\nMichael Ludvig @ [enterprise IT](https://enterpriseit.co.nz/)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mludvig/messagemedia-simple", "keywords": "messagemedia,sms", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "messagemedia-simple", "package_url": "https://pypi.org/project/messagemedia-simple/", "platform": "", "project_url": "https://pypi.org/project/messagemedia-simple/", "project_urls": {"Homepage": "https://github.com/mludvig/messagemedia-simple", "Repository": "https://github.com/mludvig/messagemedia-simple"}, "release_url": "https://pypi.org/project/messagemedia-simple/1.0.1/", "requires_dist": ["requests (>=2.22.0,<3.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Simple MessageMedia module for sending SMS messages.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simple MessageMedia API wrapper</h1>\n<p><a href=\"https://pypi.org/project/messagemedia-simple/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb0a8dcfb0856f2106724f90f94512fe6b83e0fe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6573736167656d656469612d73696d706c653f636f6c6f723d346663393231266c6162656c3d70797069266c6f676f3d70797069266c6f676f436f6c6f723d656565656565\"></a>\n<a href=\"https://circleci.com/gh/mludvig/messagemedia-simple\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b223ec108c4c82922ed145209c0762e1a546ee19/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f6769746875622f6d6c75647669672f6d6573736167656d656469612d73696d706c653f6c6162656c3d636972636c656369266c6f676f3d636972636c656369266c6f676f436f6c6f723d656565656565\"></a>\n<a href=\"https://pypi.org/project/messagemedia-simple/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71833d304ea403f23d546ec1d427325d7e5e90f1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6573736167656d656469612d73696d706c652e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d656565656565\"></a></p>\n<p>Simple and easy to use module for sending SMS and MMS messages through <a href=\"https://developers.messagemedia.com/code/messages-api-documentation/\" rel=\"nofollow\">MessageMedia API</a>.</p>\n<h2>Installation</h2>\n<p>The easiest way is to install the package from <a href=\"https://pypi.org/project/messagemedia-simple/\" rel=\"nofollow\">Python Package Index</a>:</p>\n<pre><code>pip3 install messagemedia-simple\n</code></pre>\n<p>Note that <code>messagemedia-simple</code> is <em>only available</em> for <strong>Python 3.6 and newer</strong>. Installation for older Python versions will fail.</p>\n<h2>Usage - sending a SMS message</h2>\n<p>The module interface pretty much mirrors the <a href=\"https://developers.messagemedia.com/code/messages-api-documentation/\" rel=\"nofollow\">MessageMedia <em>Mesages</em> API</a>.\nRefer to the API documentation for details about all the possible settings.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">messagemedia_simple</span> <span class=\"kn\">import</span> <span class=\"n\">MessagesAPI</span>\n\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"ABCDEFGH1234567890XX\"</span>\n<span class=\"n\">API_SECRET</span> <span class=\"o\">=</span> <span class=\"s2\">\"1234567890asdfghjkl1234567890x\"</span>\n\n<span class=\"c1\"># MessageMedia API object</span>\n<span class=\"n\">mm</span> <span class=\"o\">=</span> <span class=\"n\">MessagesAPI</span><span class=\"p\">(</span><span class=\"n\">API_KEY</span><span class=\"p\">,</span> <span class=\"n\">API_SECRET</span><span class=\"p\">,</span> <span class=\"n\">hmac_auth</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Send a SMS message and print `message_id`</span>\n<span class=\"n\">send_response</span> <span class=\"o\">=</span> <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"s2\">\"Some content\"</span><span class=\"p\">,</span> <span class=\"s2\">\"+1234567890\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"message_id: </span><span class=\"si\">{</span><span class=\"n\">send_response</span><span class=\"p\">[</span><span class=\"s1\">'message_id'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">)</span>\n</pre>\n<p>Now we can check the message delivery status as it progresses from <em>enroute</em> through <em>submitted</em> to <em>delivered</em>:</p>\n<pre><span class=\"n\">status_response</span> <span class=\"o\">=</span> <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">get_message_status</span><span class=\"p\">(</span><span class=\"n\">send_response</span><span class=\"p\">[</span><span class=\"s2\">\"message_id\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"status: </span><span class=\"si\">{</span><span class=\"n\">status_response</span><span class=\"p\">[</span><span class=\"s1\">'status'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">)</span>\n</pre>\n<p>And finally we can retrieve <em>Message Replies</em>. Unfortunately through the API we can only\nretrieve <em>all</em> queued, unconfirmed replies rather than just those for a given <code>message_id</code>.\nThe filtering has to be done locally after all the replies are retrieved.</p>\n<pre><span class=\"c1\"># Retrieve all replies from MessageMedia</span>\n<span class=\"n\">replies_response</span> <span class=\"o\">=</span> <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">get_replies</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Filter only the relevant replies</span>\n<span class=\"n\">my_replies</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">r</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">replies_response</span><span class=\"p\">[</span><span class=\"s2\">\"replies\"</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s2\">\"message_id\"</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"n\">send_response</span><span class=\"p\">[</span><span class=\"s2\">\"message_id\"</span><span class=\"p\">]]</span>\n\n<span class=\"c1\"># Process the replies</span>\n<span class=\"k\">for</span> <span class=\"n\">reply</span> <span class=\"ow\">in</span> <span class=\"n\">my_replies</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">reply</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>MessageMedia API has a concept of <em>confirming a reply</em> - as soon as a reply is confirmed it is no longer\nreturned from <code>get_replies()</code> call. That means only confirm a reply after it's successfully processed,\nfor example written to a local database. Multiple replies can be confirmed at once if needed.</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">reply</span> <span class=\"ow\">in</span> <span class=\"n\">my_replies</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">reply</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n  <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">confirm_replies</span><span class=\"p\">(</span><span class=\"n\">reply</span><span class=\"p\">[</span><span class=\"s2\">\"reply_id\"</span><span class=\"p\">])</span>\n</pre>\n<p>Likewise we can retrieve and confirm the delivery reports using <code>get_delivery_reports()</code> and\n<code>confirm_delivery_reports()</code>. The logic of the operation is the same as with replies.</p>\n<h2>Sending a MMS and specifying additional parameters</h2>\n<p>For MMS messages we can specify a few more options, for example Subject, embedded images, links, etc.</p>\n<p>The <code>send_message()</code> function doesn't have named parameters for all the possible options. However we can\npass any valid option as documented in the <a href=\"https://jsapi.apiary.io/apis/messages32/reference/messages/v1messages.html\" rel=\"nofollow\">Send Message API</a>.\nThe extra parameters are not validated in any way and it's the caller responsibility to ensure that they\nare valid for the API.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">mm</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span>\n    <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s2\">\"MMS\"</span><span class=\"p\">,</span>\n    <span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"s2\">\"Happy new year!\"</span><span class=\"p\">,</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"s2\">\"All the best in 2020\"</span><span class=\"p\">,</span>\n    <span class=\"n\">media</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"https://images.pexels.com/photos/2526105/pexels-photo-2526105.jpeg?cs=srgb&amp;dl=fireworks-display-2526105.jpg&amp;h=853&amp;w=1280\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">destination_number</span> <span class=\"o\">=</span> <span class=\"s2\">\"+123456789\"</span><span class=\"p\">,</span>\n    <span class=\"n\">scheduled</span> <span class=\"o\">=</span> <span class=\"s2\">\"2020-01-01T00:00:00.000Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">message_expiry_timestamp</span> <span class=\"o\">=</span> <span class=\"s2\">\"2020-01-01T01:23:45.678Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"new_year\"</span><span class=\"p\">:</span> <span class=\"mi\">2020</span> <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Note that MMS sending has to be enabled first by MessageMedia support.</p>\n<h2>Author</h2>\n<p>Michael Ludvig @ <a href=\"https://enterpriseit.co.nz/\" rel=\"nofollow\">enterprise IT</a></p>\n\n          </div>"}, "last_serial": 6381226, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "747caaab3bbb5e2cf34934a4c4bb3555", "sha256": "5c094a4eff72319f5d52b9fbf9f9c2b57e994784e0919328e0d9f58809035ae3"}, "downloads": -1, "filename": "messagemedia_simple-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "747caaab3bbb5e2cf34934a4c4bb3555", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 3000, "upload_time": "2019-12-28T09:42:11", "upload_time_iso_8601": "2019-12-28T09:42:11.450437Z", "url": "https://files.pythonhosted.org/packages/3d/5d/8319512dd33253c46c024f40368aa618c312cc21af08e23aa796191443bd/messagemedia_simple-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13f4459c82845b1ab63c5b33c9758a20", "sha256": "b3285ed6de5c072750c38c74b1cbca9f77e334efe7b7b497d923012177c2b91c"}, "downloads": -1, "filename": "messagemedia-simple-0.1.1.tar.gz", "has_sig": false, "md5_digest": "13f4459c82845b1ab63c5b33c9758a20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 2824, "upload_time": "2019-12-28T09:42:09", "upload_time_iso_8601": "2019-12-28T09:42:09.662131Z", "url": "https://files.pythonhosted.org/packages/0e/12/72fde0da58466133c1ae22c83a69a952e28cc7bf58096ef72510501659fc/messagemedia-simple-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "9b438ab9c43cb727d2f5231f02df1add", "sha256": "d7f6c62f972b60bcbdad16f661a4cc5208dcc67d7ef9cf89de2ca1531f91e176"}, "downloads": -1, "filename": "messagemedia_simple-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b438ab9c43cb727d2f5231f02df1add", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4085, "upload_time": "2019-12-29T09:31:33", "upload_time_iso_8601": "2019-12-29T09:31:33.260498Z", "url": "https://files.pythonhosted.org/packages/b1/7a/73e534caeb9b3f644630c3e9b4c21576a09703b049f41904df13abfd8aba/messagemedia_simple-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f793101d25ecb8a0b17993b8f7cf42e", "sha256": "64129c8ac23117e4f05e4385a3c48f2c27f70edc7929f7dbb07b92ebf62fa16b"}, "downloads": -1, "filename": "messagemedia-simple-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2f793101d25ecb8a0b17993b8f7cf42e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4172, "upload_time": "2019-12-29T09:31:32", "upload_time_iso_8601": "2019-12-29T09:31:32.346188Z", "url": "https://files.pythonhosted.org/packages/00/dc/eefaaffb018a8c0b61757a3b89ec6bd0d9b25c3ec1d6c62492fd3bb7e07d/messagemedia-simple-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "bba7af06da11de6ae95f01a3d07ac510", "sha256": "65007153036c31dc358e728dd4d360b563014c9e0af2adce09542b16c098fc04"}, "downloads": -1, "filename": "messagemedia_simple-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bba7af06da11de6ae95f01a3d07ac510", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4640, "upload_time": "2020-01-01T02:33:51", "upload_time_iso_8601": "2020-01-01T02:33:51.001533Z", "url": "https://files.pythonhosted.org/packages/d6/59/2a492f0eed4d4bf61f01af5c2dc6882c6485a66510c3e0107f21f5d19dc4/messagemedia_simple-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43af9dd41897b6b714a198675850a469", "sha256": "ab2420d5272f7109ff992c078016f81a16d9e9107ef43e589f0e30c7a7248041"}, "downloads": -1, "filename": "messagemedia-simple-1.0.1.tar.gz", "has_sig": false, "md5_digest": "43af9dd41897b6b714a198675850a469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4893, "upload_time": "2020-01-01T02:33:49", "upload_time_iso_8601": "2020-01-01T02:33:49.802079Z", "url": "https://files.pythonhosted.org/packages/3b/66/4c0d0781b236b82f269434ac7e25ff48319bda3b2cd8f7319962548af0da/messagemedia-simple-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bba7af06da11de6ae95f01a3d07ac510", "sha256": "65007153036c31dc358e728dd4d360b563014c9e0af2adce09542b16c098fc04"}, "downloads": -1, "filename": "messagemedia_simple-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bba7af06da11de6ae95f01a3d07ac510", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4640, "upload_time": "2020-01-01T02:33:51", "upload_time_iso_8601": "2020-01-01T02:33:51.001533Z", "url": "https://files.pythonhosted.org/packages/d6/59/2a492f0eed4d4bf61f01af5c2dc6882c6485a66510c3e0107f21f5d19dc4/messagemedia_simple-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43af9dd41897b6b714a198675850a469", "sha256": "ab2420d5272f7109ff992c078016f81a16d9e9107ef43e589f0e30c7a7248041"}, "downloads": -1, "filename": "messagemedia-simple-1.0.1.tar.gz", "has_sig": false, "md5_digest": "43af9dd41897b6b714a198675850a469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4893, "upload_time": "2020-01-01T02:33:49", "upload_time_iso_8601": "2020-01-01T02:33:49.802079Z", "url": "https://files.pythonhosted.org/packages/3b/66/4c0d0781b236b82f269434ac7e25ff48319bda3b2cd8f7319962548af0da/messagemedia-simple-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:02 2020"}