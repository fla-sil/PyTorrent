{"info": {"author": "AmirMohammad Dehghan", "author_email": "amirmd76@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# fanumbers\nA Library to work with Farsi(Persian) numbers\n\n## Usages\n### to_fa_number\nUse this method to convert an integer into a Persian number. You can select encoding, Persian, Arabic or All possibilities (all combinations of Arabic and Persian digits).\n\n```python\nfrom fanumbers import to_fa_number\nprint(to_fa_number(85))  # returns a str, in Persian digits\nprint(to_fa_number(75, 'arabic'))  # returns a str, in Arabic digits\nprint(to_fa_number(2018, 'all'))  # returns a list of strings, all possibilities\n```\n\n### from_fa_number\nUse this method to convert a number in Persian and Arabic digits to an integer.\n\n```python\nfrom fanumbers import from_fa_number\nprint(from_fa_number(\"\u06f8\u06f5\u06f8\u06f5\"))  # returns an int, 8585\n```\n\n### number_to_words\nUse this method to convert int or Arabic/Persian numbers into Persian words.\n\nThis method two optional arguments, `ordinal` which is set to False by default and if set to True will return ordinal numbers instead of cardinal. And \n`all_possibilities` which is set to False by default and if set to True, will return a list of all possible writings of the number instead of a single string.\n\n```python\nfrom fanumbers import number_to_words\nprint(number_to_words(85))  # \u0647\u0634\u062a\u0627\u062f \u0648 \u067e\u0646\u062c \nprint(number_to_words(7, ordinal=True))  # \u0647\u0641\u062a\u0645\nfor res in number_to_words(111111111, all_possibilities=True):  # wil return multiple strings\n    print(res)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amirmd76/fanumbers", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fanumbers", "package_url": "https://pypi.org/project/fanumbers/", "platform": "", "project_url": "https://pypi.org/project/fanumbers/", "project_urls": {"Homepage": "https://github.com/amirmd76/fanumbers"}, "release_url": "https://pypi.org/project/fanumbers/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Library to work with Farsi (Persian) numbers", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fanumbers</h1>\n<p>A Library to work with Farsi(Persian) numbers</p>\n<h2>Usages</h2>\n<h3>to_fa_number</h3>\n<p>Use this method to convert an integer into a Persian number. You can select encoding, Persian, Arabic or All possibilities (all combinations of Arabic and Persian digits).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fanumbers</span> <span class=\"kn\">import</span> <span class=\"n\">to_fa_number</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">to_fa_number</span><span class=\"p\">(</span><span class=\"mi\">85</span><span class=\"p\">))</span>  <span class=\"c1\"># returns a str, in Persian digits</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">to_fa_number</span><span class=\"p\">(</span><span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"s1\">'arabic'</span><span class=\"p\">))</span>  <span class=\"c1\"># returns a str, in Arabic digits</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">to_fa_number</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"s1\">'all'</span><span class=\"p\">))</span>  <span class=\"c1\"># returns a list of strings, all possibilities</span>\n</pre>\n<h3>from_fa_number</h3>\n<p>Use this method to convert a number in Persian and Arabic digits to an integer.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fanumbers</span> <span class=\"kn\">import</span> <span class=\"n\">from_fa_number</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">from_fa_number</span><span class=\"p\">(</span><span class=\"s2\">\"\u06f8\u06f5\u06f8\u06f5\"</span><span class=\"p\">))</span>  <span class=\"c1\"># returns an int, 8585</span>\n</pre>\n<h3>number_to_words</h3>\n<p>Use this method to convert int or Arabic/Persian numbers into Persian words.</p>\n<p>This method two optional arguments, <code>ordinal</code> which is set to False by default and if set to True will return ordinal numbers instead of cardinal. And\n<code>all_possibilities</code> which is set to False by default and if set to True, will return a list of all possible writings of the number instead of a single string.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fanumbers</span> <span class=\"kn\">import</span> <span class=\"n\">number_to_words</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">number_to_words</span><span class=\"p\">(</span><span class=\"mi\">85</span><span class=\"p\">))</span>  <span class=\"c1\"># \u0647\u0634\u062a\u0627\u062f \u0648 \u067e\u0646\u062c </span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">number_to_words</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">ordinal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>  <span class=\"c1\"># \u0647\u0641\u062a\u0645</span>\n<span class=\"k\">for</span> <span class=\"n\">res</span> <span class=\"ow\">in</span> <span class=\"n\">number_to_words</span><span class=\"p\">(</span><span class=\"mi\">111111111</span><span class=\"p\">,</span> <span class=\"n\">all_possibilities</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>  <span class=\"c1\"># wil return multiple strings</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4367596, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b8795084c9bbe446e981cff7dbaa13a6", "sha256": "e5f4da88c408daf5131a30e6e2331a10b4685fb8d526c9598c00fb8290ecc29e"}, "downloads": -1, "filename": "fanumbers-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b8795084c9bbe446e981cff7dbaa13a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4476, "upload_time": "2018-10-11T20:49:02", "upload_time_iso_8601": "2018-10-11T20:49:02.907929Z", "url": "https://files.pythonhosted.org/packages/e9/dc/eaa56e35c183f00bbb4c31f59be2d39be0a78ed270c54d7ad7bdb631c80f/fanumbers-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0582d2f64adde4f4860e0e6c3983efbc", "sha256": "223149725a149c1115fef4b1eaea2d7a967adbbacde8ad4839d786f5956a2a29"}, "downloads": -1, "filename": "fanumbers-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0582d2f64adde4f4860e0e6c3983efbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3356, "upload_time": "2018-10-11T20:49:05", "upload_time_iso_8601": "2018-10-11T20:49:05.648751Z", "url": "https://files.pythonhosted.org/packages/a8/2e/7cd7e56e92b44b62b6f4ae0b005768a1c2b64d4ae3a206517bcc8e572577/fanumbers-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "79c3d2d81e4aee68ab7fa9b16bd4c5c5", "sha256": "7fbad4c2cc8228f8d0cb11208c2c2d9de154730d21db47af623a181d2340745a"}, "downloads": -1, "filename": "fanumbers-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79c3d2d81e4aee68ab7fa9b16bd4c5c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4474, "upload_time": "2018-10-12T08:03:06", "upload_time_iso_8601": "2018-10-12T08:03:06.149810Z", "url": "https://files.pythonhosted.org/packages/f7/f3/ae384ce29e605ab217524add04c00dd7e601846e28cfb4fe7ade1875e47b/fanumbers-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a360d058741e5400e0d8361f0a93439", "sha256": "f56a61fd0f863ba91f6edff3f7629da3489e70c670408b97124ca35598080378"}, "downloads": -1, "filename": "fanumbers-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0a360d058741e5400e0d8361f0a93439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3367, "upload_time": "2018-10-12T08:03:07", "upload_time_iso_8601": "2018-10-12T08:03:07.611359Z", "url": "https://files.pythonhosted.org/packages/7d/3b/3a41ad9427ad540f8e877af1fdc624c8316d368f920b453dfc0337c60490/fanumbers-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79c3d2d81e4aee68ab7fa9b16bd4c5c5", "sha256": "7fbad4c2cc8228f8d0cb11208c2c2d9de154730d21db47af623a181d2340745a"}, "downloads": -1, "filename": "fanumbers-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79c3d2d81e4aee68ab7fa9b16bd4c5c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4474, "upload_time": "2018-10-12T08:03:06", "upload_time_iso_8601": "2018-10-12T08:03:06.149810Z", "url": "https://files.pythonhosted.org/packages/f7/f3/ae384ce29e605ab217524add04c00dd7e601846e28cfb4fe7ade1875e47b/fanumbers-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a360d058741e5400e0d8361f0a93439", "sha256": "f56a61fd0f863ba91f6edff3f7629da3489e70c670408b97124ca35598080378"}, "downloads": -1, "filename": "fanumbers-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0a360d058741e5400e0d8361f0a93439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3367, "upload_time": "2018-10-12T08:03:07", "upload_time_iso_8601": "2018-10-12T08:03:07.611359Z", "url": "https://files.pythonhosted.org/packages/7d/3b/3a41ad9427ad540f8e877af1fdc624c8316d368f920b453dfc0337c60490/fanumbers-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:45 2020"}