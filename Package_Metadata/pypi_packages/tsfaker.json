{"info": {"author": "Pierre-Alain Jachiet - DREES", "author_email": "ld-lab-github@sante.gouv.fr", "bugtrack_url": null, "classifiers": [], "description": "==================\nTable Schema Faker\n==================\n\nGenerate tabular fake data conforming to a `Table Schema <https://frictionlessdata.io/specs/table-schema/>`_\n\nUsage\n=====\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip3 install tsfaker\n\n\nSimple usage\n------------\nGenerate 3 rows of fake data from a single table schema file.\n\n.. code:: bash\n\n    $ tsfaker https://gitlab.com/healthdatahub/tsfaker/raw/master/tests/schemas/implemented_types.json  --nrows 3 --pretty\n      boolean         string            number      integer        date              datetime  year yearmonth\n    0       1  haHoKysholbSI    9780230269.512  -7061309068  1914-10-03  1902-04-11T11:21:11Z  1939    196405\n    1       0      rLugGhNek    990894536.8945   2529879443  2026-09-08  2015-11-27T16:21:54Z  1932    192909\n    2       1         ipqVXm  -4371053960.8987   -529880373  1994-09-27  1937-01-12T18:40:15Z  2021    193303\n\n\nAdvanced usage\n--------------\n\nShow help message.\n\n.. code:: bash\n\n    $ tsfaker --help\n    Usage: tsfaker [OPTIONS] [SCHEMA_DESCRIPTORS]...\n    ...\n\n\nDownload examples schemas from project **schema-snds**.\n\n.. code:: bash\n\n    $ git clone  https://gitlab.com/healthdatahub/schema-snds && cd schema-snds\n\n\nGenerate fake data for all schemas in a **schemas** folder using csv files in **nomenclatures** folder, and write them to **fake_data** folder.\n\n.. code:: bash\n\n    $ mkdir fake_data\n    $ tsfaker schemas -o fake_data -r nomenclatures\n    2019-01-01 00:00:00 :: INFO :: Data generated from descriptor 'schemas/PMSI/PMSI MCO/T_MCOaa_nnE.json' will be written on 'fake_data/PMSI/PMSI MCO/T_MCOaa_nnE.csv'\n    2019-01-01 00:00:00 :: INFO :: Data generated from descriptor 'schemas/PMSI/PMSI MCO/T_MCOaa_nnFASTC.json' will be written on 'fake_data/PMSI/PMSI MCO/T_MCOaa_nnFASTC.csv'\n    2019-01-01 00:00:00 :: INFO :: Data generated from descriptor 'schemas/PMSI/PMSI SSR/T_SSRaa_nnE.json' will be written on 'fake_data/PMSI/PMSI SSR/T_SSRaa_nnE.csv'\n    ...\n\n\nGoals\n=====\n\nWe aim to generate fake data conforming to a *schema*.\n\nWe do not aim to generate realistic data with statistical information (see related work).\n\nImplementation steps\n--------------------\n\n- Generate data conforming to types\n- Generate data conforming to formats and constraints, such as min/max, enum, missing values, unique, length, and regex\n- Generate multiple tables conforming to foreign key references, with optional tables' data provided through csv\n\nAPI\n---\n\n- We want to provide both a Python API and a command line API\n\nDevelopment methodology\n-----------------------\n\nWe will conform to Test Driven Development methodology, hence writing test before writing implementation.\n\nWe want generated data to be valid when using `goodtables <https://pypi.org/project/goodtables/>`_.\n\nWe could go by conforming to more and more `content checks <https://github.com/frictionlessdata/goodtables-py#content-checks>`_, which are included in table-schema specification.\n\nRelated Python libraries\n========================\n\nWe may use directly or get inspiration from the following libraries\n\nSimple data Generators\n----------------------\n\n- `numpy <https://github.com/numpy/numpy>`_ comes with many functions to generate random data.\n\n- `rstr <https://pypi.org/project/rstr/>`_ and `exrex <https://github.com/asciimoo/exrex>`_ generate random string following regular expressions.\n\n- `Faker <https://github.com/joke2k/faker>`_ and `Mimesis <https://mimesis.readthedocs.io/index.html>`_ allow to generate fake data. They both focus on generating high level data, such as names, email or addresses, which does not seem necessary for us.\n\n- `DataScienceFaker <https://github.com/EDS-APHP/dsfaker>`_ generate synthetic data conforming to statistical distributions. It is based on numpy and rstr.\n\nTable generator\n---------------\n\n- `pydbgen <https://github.com/tirthajyoti/pydbgen>`_ is a shallow wrapper around Faker to generate tables as pandas dataframe, sqlite table or Excel files.\n\n- `pySyntheticDatasetGenerator <https://github.com/EDS-APHP/pySyntheticDatasetGenerator>`_ is a wrapper around dsfaker, that generate tables with their relations as described in yaml configuration files.\n\n- `datafiller <https://github.com/memsql/datafiller>`_ generate random data from database schema. API could be interesting.\n\n- `plaitpy <https://github.com/plaitpy/plaitpy>`_ is a fake table generator from a yaml configuration file.\n\n\nRealistic data\n--------------\n\nGenerating realistic data - ie data carrying statistical information -  could mean different things in different contexts :\n\n- realistic statistical distribution on single columns,\n- realistic temporal dynamics,\n- realistic correlations between pairs of columns,\n- realistic correlations between pairs of columns from different (joinable) tables,\n- etc.\n\nHence there is no universal way to generate realistic data. Most approaches follow two steps :\n\n1. learn a statistical model from the real data,\n2. generate data using this model.\n\nThe statistical model depends of the context, and is usually not expressed in the form of a generic schema, such as table-schema.\nHowever, a schema of your data will be often be necessary to *configure* this kind of libraries.\n\nThis topic is an active research area, with many articles but few production implementations :\n\n- `DataSynthesizer <https://github.com/DataResponsibly/DataSynthesizer>`_ (`article <https://arxiv.org/abs/1710.08874>`__) learn a diferentially private Bayesian network capturing the correlation structure between attributes\n- `dpgan <https://github.com/alps-lab/dpgan>`_ (`article <https://arxiv.org/pdf/1801.01594.pdf>`__) Differentially Private Releasing via Deep Generative Model.\n- `SDV <https://github.com/HDI-Project/SDV>`_ (`article <https://dai.lids.mit.edu/wp-content/uploads/2018/03/SDV.pdf>`__) Generative modeling for relational databases.\n- `medGAN <https://github.com/mp2893/medgan>`_ (`article <https://arxiv.org/abs/1703.06490>`__) Generative adversarial network for generating electronic health records.\n- `CTGAN <https://github.com/sdv-dev/CTGAN>`_ (`article <https://arxiv.org/abs/1907.00503>`__) Modeling Tabular data using Conditional GAN\n\nThe statistical model may convey sensitive information and personnal data. \nIt is important fact to bear in mind, as protecting sensitive information is a common reason to generate fake data in the first place.\n\nSome tools offer ways to mitigate the risk from personal data leakage, with no formal guarantees.\nOther tools offer formal privacy guarantees through `differential privacy <https://en.wikipedia.org/wiki/Differential_privacy>`_.\n\nAn active line of work is to use Generative Adversial Network to generate realistic data, for example dpgan (see above) or `Privacy-Preserving Generative Deep Neural Networks Support Clinical Data Sharing <https://www.ahajournals.org/doi/10.1161/CIRCOUTCOMES.118.005122>`__.\n\nWhen using Neural Network, one can use TensorFlow's `specific library <https://medium.com/tensorflow/introducing-tensorflow-privacy-learning-with-differential-privacy-for-training-data-b143c5e801b6>`_.\n`PySyft project <https://github.com/OpenMined/PySyft>`_ aims to provide a generic implementation for PyTorch.\n\nRelease notes\n=============\n\nSince version 0.10\n\n- boolean type is implemented, default values for this type are 0 for False and 1 for True\n\nSince version 0.11\n\n- yearmonth type does not follow ISO 8601 format 'YYYY-MM' and is now generated without a dash 'YYYYMM'\n\nSince version 0.12\n\n- It is possible to specify trueValues and falseValues for boolean type (according to TableSchema standard)\n- Only one item is accepted in trueValues and falseValues arrays\n- It is possible to specify a format for types : date and datetime\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/healthdatahub/tsfaker/", "keywords": "", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "tsfaker", "package_url": "https://pypi.org/project/tsfaker/", "platform": "", "project_url": "https://pypi.org/project/tsfaker/", "project_urls": {"Homepage": "https://gitlab.com/healthdatahub/tsfaker/"}, "release_url": "https://pypi.org/project/tsfaker/0.12/", "requires_dist": ["click", "numpy", "pandas", "rstr", "tableschema", "dsfaker", "sphinx ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-timeout ; extra == 'dev'", "goodtables ; extra == 'dev'", "tableschema (>=1.5.4) ; extra == 'dev'"], "requires_python": "~=3.5", "summary": "Generate fake data conforming to a Table Schema", "version": "0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generate tabular fake data conforming to a <a href=\"https://frictionlessdata.io/specs/table-schema/\" rel=\"nofollow\">Table Schema</a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip3 install tsfaker\n</pre>\n</div>\n<div id=\"simple-usage\">\n<h3>Simple usage</h3>\n<p>Generate 3 rows of fake data from a single table schema file.</p>\n<pre>$ tsfaker https://gitlab.com/healthdatahub/tsfaker/raw/master/tests/schemas/implemented_types.json  --nrows <span class=\"m\">3</span> --pretty\n  boolean         string            number      integer        date              datetime  year yearmonth\n<span class=\"m\">0</span>       <span class=\"m\">1</span>  haHoKysholbSI    <span class=\"m\">9780230269</span>.512  -7061309068  <span class=\"m\">1914</span>-10-03  <span class=\"m\">1902</span>-04-11T11:21:11Z  <span class=\"m\">1939</span>    <span class=\"m\">196405</span>\n<span class=\"m\">1</span>       <span class=\"m\">0</span>      rLugGhNek    <span class=\"m\">990894536</span>.8945   <span class=\"m\">2529879443</span>  <span class=\"m\">2026</span>-09-08  <span class=\"m\">2015</span>-11-27T16:21:54Z  <span class=\"m\">1932</span>    <span class=\"m\">192909</span>\n<span class=\"m\">2</span>       <span class=\"m\">1</span>         ipqVXm  -4371053960.8987   -529880373  <span class=\"m\">1994</span>-09-27  <span class=\"m\">1937</span>-01-12T18:40:15Z  <span class=\"m\">2021</span>    <span class=\"m\">193303</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h3>Advanced usage</h3>\n<p>Show help message.</p>\n<pre>$ tsfaker --help\nUsage: tsfaker <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>SCHEMA_DESCRIPTORS<span class=\"o\">]</span>...\n...\n</pre>\n<p>Download examples schemas from project <strong>schema-snds</strong>.</p>\n<pre>$ git clone  https://gitlab.com/healthdatahub/schema-snds <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> schema-snds\n</pre>\n<p>Generate fake data for all schemas in a <strong>schemas</strong> folder using csv files in <strong>nomenclatures</strong> folder, and write them to <strong>fake_data</strong> folder.</p>\n<pre>$ mkdir fake_data\n$ tsfaker schemas -o fake_data -r nomenclatures\n<span class=\"m\">2019</span>-01-01 <span class=\"m\">00</span>:00:00 :: INFO :: Data generated from descriptor <span class=\"s1\">'schemas/PMSI/PMSI MCO/T_MCOaa_nnE.json'</span> will be written on <span class=\"s1\">'fake_data/PMSI/PMSI MCO/T_MCOaa_nnE.csv'</span>\n<span class=\"m\">2019</span>-01-01 <span class=\"m\">00</span>:00:00 :: INFO :: Data generated from descriptor <span class=\"s1\">'schemas/PMSI/PMSI MCO/T_MCOaa_nnFASTC.json'</span> will be written on <span class=\"s1\">'fake_data/PMSI/PMSI MCO/T_MCOaa_nnFASTC.csv'</span>\n<span class=\"m\">2019</span>-01-01 <span class=\"m\">00</span>:00:00 :: INFO :: Data generated from descriptor <span class=\"s1\">'schemas/PMSI/PMSI SSR/T_SSRaa_nnE.json'</span> will be written on <span class=\"s1\">'fake_data/PMSI/PMSI SSR/T_SSRaa_nnE.csv'</span>\n...\n</pre>\n</div>\n</div>\n<div id=\"goals\">\n<h2>Goals</h2>\n<p>We aim to generate fake data conforming to a <em>schema</em>.</p>\n<p>We do not aim to generate realistic data with statistical information (see related work).</p>\n<div id=\"implementation-steps\">\n<h3>Implementation steps</h3>\n<ul>\n<li>Generate data conforming to types</li>\n<li>Generate data conforming to formats and constraints, such as min/max, enum, missing values, unique, length, and regex</li>\n<li>Generate multiple tables conforming to foreign key references, with optional tables\u2019 data provided through csv</li>\n</ul>\n</div>\n<div id=\"api\">\n<h3>API</h3>\n<ul>\n<li>We want to provide both a Python API and a command line API</li>\n</ul>\n</div>\n<div id=\"development-methodology\">\n<h3>Development methodology</h3>\n<p>We will conform to Test Driven Development methodology, hence writing test before writing implementation.</p>\n<p>We want generated data to be valid when using <a href=\"https://pypi.org/project/goodtables/\" rel=\"nofollow\">goodtables</a>.</p>\n<p>We could go by conforming to more and more <a href=\"https://github.com/frictionlessdata/goodtables-py#content-checks\" rel=\"nofollow\">content checks</a>, which are included in table-schema specification.</p>\n</div>\n</div>\n<div id=\"related-python-libraries\">\n<h2>Related Python libraries</h2>\n<p>We may use directly or get inspiration from the following libraries</p>\n<div id=\"simple-data-generators\">\n<h3>Simple data Generators</h3>\n<ul>\n<li><a href=\"https://github.com/numpy/numpy\" rel=\"nofollow\">numpy</a> comes with many functions to generate random data.</li>\n<li><a href=\"https://pypi.org/project/rstr/\" rel=\"nofollow\">rstr</a> and <a href=\"https://github.com/asciimoo/exrex\" rel=\"nofollow\">exrex</a> generate random string following regular expressions.</li>\n<li><a href=\"https://github.com/joke2k/faker\" rel=\"nofollow\">Faker</a> and <a href=\"https://mimesis.readthedocs.io/index.html\" rel=\"nofollow\">Mimesis</a> allow to generate fake data. They both focus on generating high level data, such as names, email or addresses, which does not seem necessary for us.</li>\n<li><a href=\"https://github.com/EDS-APHP/dsfaker\" rel=\"nofollow\">DataScienceFaker</a> generate synthetic data conforming to statistical distributions. It is based on numpy and rstr.</li>\n</ul>\n</div>\n<div id=\"table-generator\">\n<h3>Table generator</h3>\n<ul>\n<li><a href=\"https://github.com/tirthajyoti/pydbgen\" rel=\"nofollow\">pydbgen</a> is a shallow wrapper around Faker to generate tables as pandas dataframe, sqlite table or Excel files.</li>\n<li><a href=\"https://github.com/EDS-APHP/pySyntheticDatasetGenerator\" rel=\"nofollow\">pySyntheticDatasetGenerator</a> is a wrapper around dsfaker, that generate tables with their relations as described in yaml configuration files.</li>\n<li><a href=\"https://github.com/memsql/datafiller\" rel=\"nofollow\">datafiller</a> generate random data from database schema. API could be interesting.</li>\n<li><a href=\"https://github.com/plaitpy/plaitpy\" rel=\"nofollow\">plaitpy</a> is a fake table generator from a yaml configuration file.</li>\n</ul>\n</div>\n<div id=\"realistic-data\">\n<h3>Realistic data</h3>\n<p>Generating realistic data - ie data carrying statistical information -  could mean different things in different contexts :</p>\n<ul>\n<li>realistic statistical distribution on single columns,</li>\n<li>realistic temporal dynamics,</li>\n<li>realistic correlations between pairs of columns,</li>\n<li>realistic correlations between pairs of columns from different (joinable) tables,</li>\n<li>etc.</li>\n</ul>\n<p>Hence there is no universal way to generate realistic data. Most approaches follow two steps :</p>\n<ol>\n<li>learn a statistical model from the real data,</li>\n<li>generate data using this model.</li>\n</ol>\n<p>The statistical model depends of the context, and is usually not expressed in the form of a generic schema, such as table-schema.\nHowever, a schema of your data will be often be necessary to <em>configure</em> this kind of libraries.</p>\n<p>This topic is an active research area, with many articles but few production implementations :</p>\n<ul>\n<li><a href=\"https://github.com/DataResponsibly/DataSynthesizer\" rel=\"nofollow\">DataSynthesizer</a> (<a href=\"https://arxiv.org/abs/1710.08874\" rel=\"nofollow\">article</a>) learn a diferentially private Bayesian network capturing the correlation structure between attributes</li>\n<li><a href=\"https://github.com/alps-lab/dpgan\" rel=\"nofollow\">dpgan</a> (<a href=\"https://arxiv.org/pdf/1801.01594.pdf\" rel=\"nofollow\">article</a>) Differentially Private Releasing via Deep Generative Model.</li>\n<li><a href=\"https://github.com/HDI-Project/SDV\" rel=\"nofollow\">SDV</a> (<a href=\"https://dai.lids.mit.edu/wp-content/uploads/2018/03/SDV.pdf\" rel=\"nofollow\">article</a>) Generative modeling for relational databases.</li>\n<li><a href=\"https://github.com/mp2893/medgan\" rel=\"nofollow\">medGAN</a> (<a href=\"https://arxiv.org/abs/1703.06490\" rel=\"nofollow\">article</a>) Generative adversarial network for generating electronic health records.</li>\n<li><a href=\"https://github.com/sdv-dev/CTGAN\" rel=\"nofollow\">CTGAN</a> (<a href=\"https://arxiv.org/abs/1907.00503\" rel=\"nofollow\">article</a>) Modeling Tabular data using Conditional GAN</li>\n</ul>\n<p>The statistical model may convey sensitive information and personnal data.\nIt is important fact to bear in mind, as protecting sensitive information is a common reason to generate fake data in the first place.</p>\n<p>Some tools offer ways to mitigate the risk from personal data leakage, with no formal guarantees.\nOther tools offer formal privacy guarantees through <a href=\"https://en.wikipedia.org/wiki/Differential_privacy\" rel=\"nofollow\">differential privacy</a>.</p>\n<p>An active line of work is to use Generative Adversial Network to generate realistic data, for example dpgan (see above) or <a href=\"https://www.ahajournals.org/doi/10.1161/CIRCOUTCOMES.118.005122\" rel=\"nofollow\">Privacy-Preserving Generative Deep Neural Networks Support Clinical Data Sharing</a>.</p>\n<p>When using Neural Network, one can use TensorFlow\u2019s <a href=\"https://medium.com/tensorflow/introducing-tensorflow-privacy-learning-with-differential-privacy-for-training-data-b143c5e801b6\" rel=\"nofollow\">specific library</a>.\n<a href=\"https://github.com/OpenMined/PySyft\" rel=\"nofollow\">PySyft project</a> aims to provide a generic implementation for PyTorch.</p>\n</div>\n</div>\n<div id=\"release-notes\">\n<h2>Release notes</h2>\n<p>Since version 0.10</p>\n<ul>\n<li>boolean type is implemented, default values for this type are 0 for False and 1 for True</li>\n</ul>\n<p>Since version 0.11</p>\n<ul>\n<li>yearmonth type does not follow ISO 8601 format \u2018YYYY-MM\u2019 and is now generated without a dash \u2018YYYYMM\u2019</li>\n</ul>\n<p>Since version 0.12</p>\n<ul>\n<li>It is possible to specify trueValues and falseValues for boolean type (according to TableSchema standard)</li>\n<li>Only one item is accepted in trueValues and falseValues arrays</li>\n<li>It is possible to specify a format for types : date and datetime</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6549731, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bf40a147e89e1f4ef5a954c9fcc86050", "sha256": "78e4cec51227450d6117c554e163877716f8a77e5611a3058bad37ad4d64ba3a"}, "downloads": -1, "filename": "tsfaker-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bf40a147e89e1f4ef5a954c9fcc86050", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 10181, "upload_time": "2019-06-06T17:51:49", "upload_time_iso_8601": "2019-06-06T17:51:49.058171Z", "url": "https://files.pythonhosted.org/packages/c4/6d/fae4a6905ef0d0b4310c4a0be6c76bbb7749446da8e7537282b76c0461fc/tsfaker-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb4d1cd789b22aee1d60e40b2db6c4cd", "sha256": "554c2003cba6a86a75ee3b27c8502d3438e454bcc12394e5584527372a10f9f5"}, "downloads": -1, "filename": "tsfaker-0.1.tar.gz", "has_sig": false, "md5_digest": "eb4d1cd789b22aee1d60e40b2db6c4cd", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 6880, "upload_time": "2019-06-06T17:51:51", "upload_time_iso_8601": "2019-06-06T17:51:51.637908Z", "url": "https://files.pythonhosted.org/packages/2f/55/22753f8614e5fe335b6d17b43367ec34565dc18df4179ae94545867901f9/tsfaker-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dc8627347d146a1aeb20be811d541291", "sha256": "ab08d888fbfd516b8b85a34179ec47b8028d48f8e6e8ba8d1a0885dce7dd3c8c"}, "downloads": -1, "filename": "tsfaker-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dc8627347d146a1aeb20be811d541291", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 12163, "upload_time": "2019-06-06T18:03:38", "upload_time_iso_8601": "2019-06-06T18:03:38.860093Z", "url": "https://files.pythonhosted.org/packages/65/4f/ea22cf585fe2e508556db01b4759b7dd7b625887b3800503370461b1d5c7/tsfaker-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "426627b2da7a56cbdf9a75a03bf8e40c", "sha256": "268baf1543893064f0aa336ef8cbf03312a3a74ec8aa81dc3d3bcc4ecfb5d86c"}, "downloads": -1, "filename": "tsfaker-0.1.2.tar.gz", "has_sig": false, "md5_digest": "426627b2da7a56cbdf9a75a03bf8e40c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 6912, "upload_time": "2019-06-06T18:03:40", "upload_time_iso_8601": "2019-06-06T18:03:40.602086Z", "url": "https://files.pythonhosted.org/packages/2b/60/a3c17f73233dc9850be71ba62e2323d2439994a16840b7abbea9ee96e489/tsfaker-0.1.2.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "92b3bf5ad57cb1510834a9f1bbf575b1", "sha256": "09554942d2dbefbf465078ab1ab641099d750a2c786101e5683d892db9468982"}, "downloads": -1, "filename": "tsfaker-0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "92b3bf5ad57cb1510834a9f1bbf575b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22991, "upload_time": "2020-01-14T16:13:02", "upload_time_iso_8601": "2020-01-14T16:13:02.694274Z", "url": "https://files.pythonhosted.org/packages/61/be/4b451c04974fbe74040289b87d7aceae325214a1ac65f7b7b70c79cc821d/tsfaker-0.10-py3-none-any.whl", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "45612eabf2ee9e0371892867c80a91e3", "sha256": "1f333cf41b995692172a52127b095baf2a7830330d308e761443376526a9a9b1"}, "downloads": -1, "filename": "tsfaker-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "45612eabf2ee9e0371892867c80a91e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 21991, "upload_time": "2020-01-29T16:26:59", "upload_time_iso_8601": "2020-01-29T16:26:59.732479Z", "url": "https://files.pythonhosted.org/packages/a7/51/de984d8b3dd29515501132bc57cea039a2a17b5bfae6a14927abfea0a59d/tsfaker-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb7018a8aa78f4a5f759713726a9209a", "sha256": "11cb9b464bc940e617164bea8857025810b52f94814bbc4f18fbec6d9e757f71"}, "downloads": -1, "filename": "tsfaker-0.11.tar.gz", "has_sig": false, "md5_digest": "fb7018a8aa78f4a5f759713726a9209a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 15897, "upload_time": "2020-01-29T16:27:04", "upload_time_iso_8601": "2020-01-29T16:27:04.691172Z", "url": "https://files.pythonhosted.org/packages/7f/ea/8e6ee21e94e4617f5c94e660b34a49570c7e5d9f2c3005b100c38fe77557/tsfaker-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "593057047a121401e599b4e24c1640e4", "sha256": "2f70bf1e6ba23bb94a8cdea1944acdb7e13cc50ad205ba57886fc67997a44dbd"}, "downloads": -1, "filename": "tsfaker-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "593057047a121401e599b4e24c1640e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22312, "upload_time": "2020-01-31T14:31:50", "upload_time_iso_8601": "2020-01-31T14:31:50.202980Z", "url": "https://files.pythonhosted.org/packages/ca/e4/fc79e187f9c361c6c39f89712cd85cdbad20d674898b6a654cec72305230/tsfaker-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49a1e3cbe8207048d1fc88cf351708be", "sha256": "126559266cfa6489265e63cf8ef06bf33e1d1ed46b8bfd0ee39d8e421c443816"}, "downloads": -1, "filename": "tsfaker-0.12.tar.gz", "has_sig": false, "md5_digest": "49a1e3cbe8207048d1fc88cf351708be", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 16481, "upload_time": "2020-01-31T14:31:51", "upload_time_iso_8601": "2020-01-31T14:31:51.840209Z", "url": "https://files.pythonhosted.org/packages/78/2e/3a0e38d085b9ecf44d39ca9e8e18a80df7fe97b44690797130b608275952/tsfaker-0.12.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "438bdb230518d28ea1e6eaaccbc37668", "sha256": "ecf58178a1f3f565cb6ecf55d7a77a824194a649256ab91bc626a6f9b60302d5"}, "downloads": -1, "filename": "tsfaker-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "438bdb230518d28ea1e6eaaccbc37668", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 14411, "upload_time": "2019-06-13T17:11:33", "upload_time_iso_8601": "2019-06-13T17:11:33.618972Z", "url": "https://files.pythonhosted.org/packages/ea/1c/06b27139ea392b5e097a1cb349e7b0bf0b81f71faf46e703468bb8af6921/tsfaker-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13d82212edd23af1b3faf7de0e84b811", "sha256": "52e0b1d01de38665bbdeb255a7f3523495e7d4024ded9f340eb4fcf53bade923"}, "downloads": -1, "filename": "tsfaker-0.2.tar.gz", "has_sig": false, "md5_digest": "13d82212edd23af1b3faf7de0e84b811", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 10463, "upload_time": "2019-06-13T17:11:36", "upload_time_iso_8601": "2019-06-13T17:11:36.033389Z", "url": "https://files.pythonhosted.org/packages/68/60/d1c80b1689a2af6ef52f1e86a6207d9f647d9abff7f011ee7e6e5bb6401e/tsfaker-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9dae107e75ab0f4d024dcc9829b7ceca", "sha256": "57df0099189cac3c67b6833dc5b7e11764df1433b07b57bd59cb909ed477fbd6"}, "downloads": -1, "filename": "tsfaker-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9dae107e75ab0f4d024dcc9829b7ceca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 20559, "upload_time": "2019-07-05T16:46:34", "upload_time_iso_8601": "2019-07-05T16:46:34.312756Z", "url": "https://files.pythonhosted.org/packages/6a/29/b890ab707c4e4471da18040f0a91946a1eed709aaf906cbbe14ef1b89a72/tsfaker-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbb01e86d134731e0ca6a8a849286798", "sha256": "a8d190667ee013f2e1fe559d382a728d184a0ac197d9dc8b92c35d051337269e"}, "downloads": -1, "filename": "tsfaker-0.3.tar.gz", "has_sig": false, "md5_digest": "fbb01e86d134731e0ca6a8a849286798", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 13843, "upload_time": "2019-07-05T16:46:36", "upload_time_iso_8601": "2019-07-05T16:46:36.022773Z", "url": "https://files.pythonhosted.org/packages/61/32/9cbcec585522a1e967e1cdbf374e93ac096524fd2a9c5d56fe06f4fc33b2/tsfaker-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ee685cdddc8bc8aa74e9328d2ac48abb", "sha256": "15eb0188127b0d6d0a84cb5f858148ab886cbd1e7923055d5329afcff8d184eb"}, "downloads": -1, "filename": "tsfaker-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ee685cdddc8bc8aa74e9328d2ac48abb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 21396, "upload_time": "2019-07-18T16:56:06", "upload_time_iso_8601": "2019-07-18T16:56:06.501249Z", "url": "https://files.pythonhosted.org/packages/59/75/b4391bb8b07774a7d1fa7fb5963db407e11a68710587df23a0e954f4afbc/tsfaker-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8fbc22def303871e77e09e29acc0eb8", "sha256": "15021bebec2f326fb3ff5b96c5f8b29f6570091ee24473670c6b129367096196"}, "downloads": -1, "filename": "tsfaker-0.4.tar.gz", "has_sig": false, "md5_digest": "b8fbc22def303871e77e09e29acc0eb8", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 14557, "upload_time": "2019-07-18T16:56:09", "upload_time_iso_8601": "2019-07-18T16:56:09.418926Z", "url": "https://files.pythonhosted.org/packages/79/95/ed3a5610c52e0407bd6fd23aba692011ecdd5431aacf29778c72b47ccaa8/tsfaker-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "82e828d78efda79aaaf9c01abad820e3", "sha256": "3eebc71f1df02c473c18e8f9c3e4e22de8fd0700f5bf0098047fe68ea1dc887a"}, "downloads": -1, "filename": "tsfaker-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "82e828d78efda79aaaf9c01abad820e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22003, "upload_time": "2019-09-16T09:40:00", "upload_time_iso_8601": "2019-09-16T09:40:00.456991Z", "url": "https://files.pythonhosted.org/packages/7f/73/2c131b1f0e221a7a62b5f074a6dd1c4b6fe54b158cf7c581f6236a7fc0ea/tsfaker-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "358cb67d63ce8a660351c7a1f8e546fe", "sha256": "3568c51d5ea2ca2670ea374f3b1ce31595fd694ed87e3edc460f533e582c7d42"}, "downloads": -1, "filename": "tsfaker-0.5.tar.gz", "has_sig": false, "md5_digest": "358cb67d63ce8a660351c7a1f8e546fe", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 15601, "upload_time": "2019-09-16T09:40:04", "upload_time_iso_8601": "2019-09-16T09:40:04.798877Z", "url": "https://files.pythonhosted.org/packages/f7/61/e988c694d2e976bc42c8e6623c2bf48ceee395abd29d38dc20158763e7cc/tsfaker-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "f53fb7412e51d513371d185224a80a49", "sha256": "013bbfec87a2dc515185d80eb0ace2f0543daa0e07939b340dc2e117ed0c09b1"}, "downloads": -1, "filename": "tsfaker-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f53fb7412e51d513371d185224a80a49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22417, "upload_time": "2019-09-18T15:41:28", "upload_time_iso_8601": "2019-09-18T15:41:28.801516Z", "url": "https://files.pythonhosted.org/packages/19/b7/9d52433b80eae2a09de2ea7d6f323378918f79fde3155fb9ff6c282afd32/tsfaker-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd606df14d4f62e34e338823a9a22881", "sha256": "ddbb6d240f9c419ecfb7ea5279d4ee34555f151f3a0cf780d164ebbec3a7c702"}, "downloads": -1, "filename": "tsfaker-0.6.tar.gz", "has_sig": false, "md5_digest": "bd606df14d4f62e34e338823a9a22881", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 15976, "upload_time": "2019-09-18T15:41:37", "upload_time_iso_8601": "2019-09-18T15:41:37.976827Z", "url": "https://files.pythonhosted.org/packages/7e/f5/69b13507a7d39bdb5988fe4e2a6bda4ce4163db394e3b3600f540d63f6de/tsfaker-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "258b2757675715daa9513e0daa27db99", "sha256": "9645d43f9ac4f72601b29cbf24ad7b002787de01a66e879d85c0c24913b87647"}, "downloads": -1, "filename": "tsfaker-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "258b2757675715daa9513e0daa27db99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22573, "upload_time": "2019-10-01T14:54:07", "upload_time_iso_8601": "2019-10-01T14:54:07.402554Z", "url": "https://files.pythonhosted.org/packages/24/69/808a94eccf5028b844d70dcfa952f0174dc93ff7eb456933681e02c75a1a/tsfaker-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "010e84c60c7f7b7ce2ddd5627738cae0", "sha256": "3aecce00ce964d5624ef2b89981b2ff6b8fd3dea924dca370bbb2b9b0e34caeb"}, "downloads": -1, "filename": "tsfaker-0.7.tar.gz", "has_sig": false, "md5_digest": "010e84c60c7f7b7ce2ddd5627738cae0", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 16108, "upload_time": "2019-10-01T14:54:15", "upload_time_iso_8601": "2019-10-01T14:54:15.402998Z", "url": "https://files.pythonhosted.org/packages/c0/f8/9807e05832cc90041ef7c7264c2ad93af739461b28e896e67ca2bb40341c/tsfaker-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "2ed76ac027c6d23832150f9679aed595", "sha256": "3d97096a111022da973431fcd5ded2e34a37c281dbac117f099660430ec869ac"}, "downloads": -1, "filename": "tsfaker-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "2ed76ac027c6d23832150f9679aed595", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22625, "upload_time": "2019-10-01T15:31:49", "upload_time_iso_8601": "2019-10-01T15:31:49.658776Z", "url": "https://files.pythonhosted.org/packages/ff/43/1121b451a4319e44afa0b9823164d8cbe67c5c4f48deed52e1707a97b2ca/tsfaker-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3ae587d2819dcf3f06feb6eb5e8b538", "sha256": "aac94c5f55a6ea95ec5b9d3a5c411901cbb6c8b949ee147fa05a2ca11ee9041b"}, "downloads": -1, "filename": "tsfaker-0.8.tar.gz", "has_sig": false, "md5_digest": "c3ae587d2819dcf3f06feb6eb5e8b538", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 16151, "upload_time": "2019-10-01T15:32:26", "upload_time_iso_8601": "2019-10-01T15:32:26.466791Z", "url": "https://files.pythonhosted.org/packages/95/c1/67b842de725ec695336b393d60ac03ffdb08bbbbe2b5b695431c4af26c92/tsfaker-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "eaf2c2f8978eaba8bf5d674eb3e59941", "sha256": "cee29ec9e7f885177f77d9df28b06b94a79d94ed982d4ac65b6fbd7cfd84fea9"}, "downloads": -1, "filename": "tsfaker-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "eaf2c2f8978eaba8bf5d674eb3e59941", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 21432, "upload_time": "2020-01-14T16:06:05", "upload_time_iso_8601": "2020-01-14T16:06:05.578310Z", "url": "https://files.pythonhosted.org/packages/29/fb/178d03db3259424ec46ac42a0ff8eba9ce63e237c995dc1a4ccabfb6894d/tsfaker-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6e8624c3341781ad55ce4ea2fcd7d2b", "sha256": "d99b11cb4c4c76e4a42242f4b87dbf02399f18df95a1b4a9d0bab16bae3ea1e9"}, "downloads": -1, "filename": "tsfaker-0.9.tar.gz", "has_sig": false, "md5_digest": "a6e8624c3341781ad55ce4ea2fcd7d2b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 15198, "upload_time": "2020-01-14T16:06:07", "upload_time_iso_8601": "2020-01-14T16:06:07.462081Z", "url": "https://files.pythonhosted.org/packages/98/e7/80d69e58f2dd62c398e99f9d8feddf6fb70b5559bc611175e9f6d4f03b7a/tsfaker-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "593057047a121401e599b4e24c1640e4", "sha256": "2f70bf1e6ba23bb94a8cdea1944acdb7e13cc50ad205ba57886fc67997a44dbd"}, "downloads": -1, "filename": "tsfaker-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "593057047a121401e599b4e24c1640e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 22312, "upload_time": "2020-01-31T14:31:50", "upload_time_iso_8601": "2020-01-31T14:31:50.202980Z", "url": "https://files.pythonhosted.org/packages/ca/e4/fc79e187f9c361c6c39f89712cd85cdbad20d674898b6a654cec72305230/tsfaker-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49a1e3cbe8207048d1fc88cf351708be", "sha256": "126559266cfa6489265e63cf8ef06bf33e1d1ed46b8bfd0ee39d8e421c443816"}, "downloads": -1, "filename": "tsfaker-0.12.tar.gz", "has_sig": false, "md5_digest": "49a1e3cbe8207048d1fc88cf351708be", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 16481, "upload_time": "2020-01-31T14:31:51", "upload_time_iso_8601": "2020-01-31T14:31:51.840209Z", "url": "https://files.pythonhosted.org/packages/78/2e/3a0e38d085b9ecf44d39ca9e8e18a80df7fe97b44690797130b608275952/tsfaker-0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:21 2020"}