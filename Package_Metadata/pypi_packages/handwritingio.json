{"info": {"author": "Handwriting.io", "author_email": "support@handwriting.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Handwriting.io Python Client\n============================\n\n.. image:: https://img.shields.io/circleci/project/handwritingio/python-client.svg\n    :target: https://circleci.com/gh/handwritingio/python-client\n\n.. image:: https://img.shields.io/pypi/v/handwritingio.svg\n    :target: https://pypi.python.org/pypi/handwritingio\n\n.. image:: https://img.shields.io/pypi/pyversions/handwritingio.svg\n\n.. image:: https://img.shields.io/pypi/l/handwritingio.svg\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install handwritingio\n\n\nBasic Example\n-------------\n\nSet up the client, render an image, and write it to a file:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    png = hwio.render_png({\n      'handwriting_id': '2D5S46A80003', # found in our catalog or by listing handwritings\n      'text': 'Handwriting with Python!',\n      'height': 'auto',\n    })\n    with open('handwriting.png', 'wb') as f:\n      f.write(png)\n\nIf all goes well, this should create an image similar to the following:\n\n.. image:: https://d2igm8ue20pook.cloudfront.net/python-client/handwriting.png\n\n\nAdvanced Examples\n-----------------\n\nList all handwritings, paging through the results as necessary:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    all_handwritings = [] # we'll add all of the results to this list\n    limit = 100 # number of handwritings to get per page\n    offset = 0 # starting index\n    while True:\n      page_of_handwritings = hwio.list_handwritings({\n        'limit': limit,\n        'offset': offset,\n      })\n      if not page_of_handwritings:\n        # We've exhausted the listing, so we're done\n        break\n      all_handwritings.extend(page_of_handwritings)\n      offset += limit\n    # all_handwritings now contains every handwriting available\n\n\nIf you don't need all of the (currently 200+) handwritings for your application,\nyou could simply fetch the five \"most cursive\" handwritings, for example:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    handwritings = hwio.list_handwritings({\n      'order_by': 'rating_cursivity',\n      'order_dir': 'desc',\n      'limit': 5,\n    })\n\nRender a PNG and manipulate it with `PIL <http://pillow.readthedocs.org/en/latest/>`_:\n\n.. code-block:: python\n\n    from cStringIO import StringIO\n\n    import handwritingio\n    from PIL import Image\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    png = hwio.render_png({\n      'handwriting_id': '2D5S46A80003', # found in our catalog or by listing handwritings\n      'text': 'Handwriting with Python!',\n      'height': 'auto',\n    })\n    # Image expects a file-like object, so wrap the image in StringIO:\n    im = Image.open(StringIO(png))\n    # Rotate the image by 180 degrees:\n    im = im.rotate(180, expand=True)\n    # Save it to a file:\n    im.save('handwriting_upside_down.png')\n\nWhich should create the file:\n\n.. image:: https://d2igm8ue20pook.cloudfront.net/python-client/handwriting_upside_down.png\n\nRender a PDF, with a CMYK color for the text:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    pdf = hwio.render_pdf({\n      'handwriting_id': '2D5S46A80003', # found in our catalog or by listing handwritings\n      'text': 'Handwriting with Python!',\n      'height': 'auto',\n      'handwriting_color': '(1, 0.5, 0, 0.2)',\n    })\n    with open('handwriting.pdf', 'wb') as f:\n      f.write(pdf)\n\nIf something goes wrong with a request, an exception will be raised:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    pdf = hwio.render_pdf({\n      'handwriting_id': '2D5S46A80003',\n      'text': 'Handwriting with Python!',\n      'height': 'auto',\n      'handwriting_color': 'cheesecake',\n      'width': 'double wide',\n    })\n\n::\n\n    Traceback (most recent call last):\n      File \"tester.py\", line 9, in <module>\n        'width': 'double wide',\n      File \"build/bdist.linux-x86_64/egg/handwritingio/__init__.py\", line 145, in render_pdf\n      File \"build/bdist.linux-x86_64/egg/handwritingio/__init__.py\", line 109, in _hit\n    handwritingio.ValidationError: field: width, width unable to parse: \"double wide\"\n\nBut, there's more than one thing wrong with that request. We can see all of the\nerrors by catching the exception and inspecting the ``errors`` attribute:\n\n.. code-block:: python\n\n    import handwritingio\n\n    hwio = handwritingio.Client('KEY', 'SECRET')\n    try:\n      pdf = hwio.render_pdf({\n        'handwriting_id': '2D5S46A80003',\n        'text': 'Handwriting with Python!',\n        'height': 'auto',\n        'handwriting_color': 'cheesecake',\n        'width': 'double wide',\n      })\n    except handwritingio.ValidationError as e:\n      print e.errors\n\n::\n\n    [{u'field': u'width', u'error': u'width unable to parse: \"double wide\"'},\n     {u'field': u'handwriting_color', u'error': u'handwriting_color must be valid CMYK'}]\n\n\nReference\n---------\n\nSee the `API Documentation <https://handwriting.io/docs/>`_ for details on\nall endpoints and parameters. For the most part, the ``Client`` passes the\nparameters through to the API directly.\n\nThe endpoints map to client methods as follows:\n\n- `GET /handwritings <https://handwriting.io/docs/#get-handwritings>`_ -> ``Client.list_handwritings([params])``\n- `GET /handwritings/{id} <https://handwriting.io/docs/#get-handwritings--id->`_ -> ``Client.get_handwriting(handwriting_id)``\n- `GET /render/png <https://handwriting.io/docs/#get-render-png>`_ -> ``Client.render_png(params)``\n- `GET /render/pdf <https://handwriting.io/docs/#get-render-pdf>`_ -> ``Client.render_pdf(params)``\n\nVersion Numbers\n---------------\n\nVersion numbers for this package work slightly differently than standard\n`semantic versioning <http://semver.org/>`_. For this package, the ``major``\nversion number will match the Handwriting.io API version number, and the\n``minor`` version will be  incremented for any breaking changes to this package.\nThe ``patch`` version will be incremented for bug fixes and changes that add\nfunctionality only.\n\nFor this reason, we recommend that you pin this dependency to the\n**minor version**, for example, in your ``requirements.txt`` or ``setup.py``,\nuse::\n\n    handwritingio>=1.0<1.1\n\n\nIssues\n------\n\nPlease open an issue on `Github <https://github.com/handwritingio/python-client>`_\nor `contact us <https://handwriting.io/contact>`_ directly for help with any\nproblems you find.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/handwritingio/python-client", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "handwritingio", "package_url": "https://pypi.org/project/handwritingio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/handwritingio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/handwritingio/python-client"}, "release_url": "https://pypi.org/project/handwritingio/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Handwriting.io API client.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/handwritingio/python-client\" rel=\"nofollow\"><img alt=\"https://img.shields.io/circleci/project/handwritingio/python-client.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/871eb87251f9fc64f431d1e87acb0a6f9cba1b7a/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f68616e6477726974696e67696f2f707974686f6e2d636c69656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/handwritingio\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/handwritingio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1301059c8bb935295e360d3452a293cea9cb9df6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f68616e6477726974696e67696f2e737667\"></a>\n<img alt=\"https://img.shields.io/pypi/pyversions/handwritingio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/807948372a7ee66d395c3de405839460a91b9a2c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f68616e6477726974696e67696f2e737667\">\n<img alt=\"https://img.shields.io/pypi/l/handwritingio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb9266197498017d3100305df4f041161803f6a4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f68616e6477726974696e67696f2e737667\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install handwritingio\n</pre>\n</div>\n<div id=\"basic-example\">\n<h2>Basic Example</h2>\n<p>Set up the client, render an image, and write it to a file:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">png</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">render_png</span><span class=\"p\">({</span>\n  <span class=\"s1\">'handwriting_id'</span><span class=\"p\">:</span> <span class=\"s1\">'2D5S46A80003'</span><span class=\"p\">,</span> <span class=\"c1\"># found in our catalog or by listing handwritings</span>\n  <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Handwriting with Python!'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'handwriting.png'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n  <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">png</span><span class=\"p\">)</span>\n</pre>\n<p>If all goes well, this should create an image similar to the following:</p>\n<img alt=\"https://d2igm8ue20pook.cloudfront.net/python-client/handwriting.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44d5b31e9f5a5790428c89adc6b7186885c3f04a/68747470733a2f2f643269676d3875653230706f6f6b2e636c6f756466726f6e742e6e65742f707974686f6e2d636c69656e742f68616e6477726974696e672e706e67\">\n</div>\n<div id=\"advanced-examples\">\n<h2>Advanced Examples</h2>\n<p>List all handwritings, paging through the results as necessary:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">all_handwritings</span> <span class=\"o\">=</span> <span class=\"p\">[]</span> <span class=\"c1\"># we'll add all of the results to this list</span>\n<span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">100</span> <span class=\"c1\"># number of handwritings to get per page</span>\n<span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> <span class=\"c1\"># starting index</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n  <span class=\"n\">page_of_handwritings</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">list_handwritings</span><span class=\"p\">({</span>\n    <span class=\"s1\">'limit'</span><span class=\"p\">:</span> <span class=\"n\">limit</span><span class=\"p\">,</span>\n    <span class=\"s1\">'offset'</span><span class=\"p\">:</span> <span class=\"n\">offset</span><span class=\"p\">,</span>\n  <span class=\"p\">})</span>\n  <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">page_of_handwritings</span><span class=\"p\">:</span>\n    <span class=\"c1\"># We've exhausted the listing, so we're done</span>\n    <span class=\"k\">break</span>\n  <span class=\"n\">all_handwritings</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">page_of_handwritings</span><span class=\"p\">)</span>\n  <span class=\"n\">offset</span> <span class=\"o\">+=</span> <span class=\"n\">limit</span>\n<span class=\"c1\"># all_handwritings now contains every handwriting available</span>\n</pre>\n<p>If you don\u2019t need all of the (currently 200+) handwritings for your application,\nyou could simply fetch the five \u201cmost cursive\u201d handwritings, for example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">handwritings</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">list_handwritings</span><span class=\"p\">({</span>\n  <span class=\"s1\">'order_by'</span><span class=\"p\">:</span> <span class=\"s1\">'rating_cursivity'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'order_dir'</span><span class=\"p\">:</span> <span class=\"s1\">'desc'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'limit'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n<p>Render a PNG and manipulate it with <a href=\"http://pillow.readthedocs.org/en/latest/\" rel=\"nofollow\">PIL</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cStringIO</span> <span class=\"kn\">import</span> <span class=\"n\">StringIO</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">png</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">render_png</span><span class=\"p\">({</span>\n  <span class=\"s1\">'handwriting_id'</span><span class=\"p\">:</span> <span class=\"s1\">'2D5S46A80003'</span><span class=\"p\">,</span> <span class=\"c1\"># found in our catalog or by listing handwritings</span>\n  <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Handwriting with Python!'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"c1\"># Image expects a file-like object, so wrap the image in StringIO:</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">StringIO</span><span class=\"p\">(</span><span class=\"n\">png</span><span class=\"p\">))</span>\n<span class=\"c1\"># Rotate the image by 180 degrees:</span>\n<span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save it to a file:</span>\n<span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'handwriting_upside_down.png'</span><span class=\"p\">)</span>\n</pre>\n<p>Which should create the file:</p>\n<img alt=\"https://d2igm8ue20pook.cloudfront.net/python-client/handwriting_upside_down.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2d917e6b5376c537e96ec1b652d8d40d4804f07/68747470733a2f2f643269676d3875653230706f6f6b2e636c6f756466726f6e742e6e65742f707974686f6e2d636c69656e742f68616e6477726974696e675f7570736964655f646f776e2e706e67\">\n<p>Render a PDF, with a CMYK color for the text:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">pdf</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">render_pdf</span><span class=\"p\">({</span>\n  <span class=\"s1\">'handwriting_id'</span><span class=\"p\">:</span> <span class=\"s1\">'2D5S46A80003'</span><span class=\"p\">,</span> <span class=\"c1\"># found in our catalog or by listing handwritings</span>\n  <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Handwriting with Python!'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'handwriting_color'</span><span class=\"p\">:</span> <span class=\"s1\">'(1, 0.5, 0, 0.2)'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'handwriting.pdf'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n  <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">pdf</span><span class=\"p\">)</span>\n</pre>\n<p>If something goes wrong with a request, an exception will be raised:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"n\">pdf</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">render_pdf</span><span class=\"p\">({</span>\n  <span class=\"s1\">'handwriting_id'</span><span class=\"p\">:</span> <span class=\"s1\">'2D5S46A80003'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Handwriting with Python!'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'handwriting_color'</span><span class=\"p\">:</span> <span class=\"s1\">'cheesecake'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"s1\">'double wide'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n<pre>Traceback (most recent call last):\n  File \"tester.py\", line 9, in &lt;module&gt;\n    'width': 'double wide',\n  File \"build/bdist.linux-x86_64/egg/handwritingio/__init__.py\", line 145, in render_pdf\n  File \"build/bdist.linux-x86_64/egg/handwritingio/__init__.py\", line 109, in _hit\nhandwritingio.ValidationError: field: width, width unable to parse: \"double wide\"\n</pre>\n<p>But, there\u2019s more than one thing wrong with that request. We can see all of the\nerrors by catching the exception and inspecting the <tt>errors</tt> attribute:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">handwritingio</span>\n\n<span class=\"n\">hwio</span> <span class=\"o\">=</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'SECRET'</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"n\">pdf</span> <span class=\"o\">=</span> <span class=\"n\">hwio</span><span class=\"o\">.</span><span class=\"n\">render_pdf</span><span class=\"p\">({</span>\n    <span class=\"s1\">'handwriting_id'</span><span class=\"p\">:</span> <span class=\"s1\">'2D5S46A80003'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Handwriting with Python!'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'handwriting_color'</span><span class=\"p\">:</span> <span class=\"s1\">'cheesecake'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"s1\">'double wide'</span><span class=\"p\">,</span>\n  <span class=\"p\">})</span>\n<span class=\"k\">except</span> <span class=\"n\">handwritingio</span><span class=\"o\">.</span><span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n</pre>\n<pre>[{u'field': u'width', u'error': u'width unable to parse: \"double wide\"'},\n {u'field': u'handwriting_color', u'error': u'handwriting_color must be valid CMYK'}]\n</pre>\n</div>\n<div id=\"reference\">\n<h2>Reference</h2>\n<p>See the <a href=\"https://handwriting.io/docs/\" rel=\"nofollow\">API Documentation</a> for details on\nall endpoints and parameters. For the most part, the <tt>Client</tt> passes the\nparameters through to the API directly.</p>\n<p>The endpoints map to client methods as follows:</p>\n<ul>\n<li><a href=\"https://handwriting.io/docs/#get-handwritings\" rel=\"nofollow\">GET /handwritings</a> -&gt; <tt><span class=\"pre\">Client.list_handwritings([params])</span></tt></li>\n<li><a href=\"https://handwriting.io/docs/#get-handwritings--id-\" rel=\"nofollow\">GET /handwritings/{id}</a> -&gt; <tt>Client.get_handwriting(handwriting_id)</tt></li>\n<li><a href=\"https://handwriting.io/docs/#get-render-png\" rel=\"nofollow\">GET /render/png</a> -&gt; <tt>Client.render_png(params)</tt></li>\n<li><a href=\"https://handwriting.io/docs/#get-render-pdf\" rel=\"nofollow\">GET /render/pdf</a> -&gt; <tt>Client.render_pdf(params)</tt></li>\n</ul>\n</div>\n<div id=\"version-numbers\">\n<h2>Version Numbers</h2>\n<p>Version numbers for this package work slightly differently than standard\n<a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a>. For this package, the <tt>major</tt>\nversion number will match the Handwriting.io API version number, and the\n<tt>minor</tt> version will be  incremented for any breaking changes to this package.\nThe <tt>patch</tt> version will be incremented for bug fixes and changes that add\nfunctionality only.</p>\n<p>For this reason, we recommend that you pin this dependency to the\n<strong>minor version</strong>, for example, in your <tt>requirements.txt</tt> or <tt>setup.py</tt>,\nuse:</p>\n<pre>handwritingio&gt;=1.0&lt;1.1\n</pre>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>Please open an issue on <a href=\"https://github.com/handwritingio/python-client\" rel=\"nofollow\">Github</a>\nor <a href=\"https://handwriting.io/contact\" rel=\"nofollow\">contact us</a> directly for help with any\nproblems you find.</p>\n</div>\n\n          </div>"}, "last_serial": 2064349, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6527cca7b52b5c8b836190c0084924b8", "sha256": "17ea991e5df19c4923feaee8b51be6bada6b08409f23ca84ffb978bd9655adbe"}, "downloads": -1, "filename": "handwritingio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6527cca7b52b5c8b836190c0084924b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7284, "upload_time": "2016-04-14T18:56:13", "upload_time_iso_8601": "2016-04-14T18:56:13.127984Z", "url": "https://files.pythonhosted.org/packages/6e/09/ef9b4c94032ece947a9549a09cf1c3afea637701cc37863c38cc446d068f/handwritingio-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6527cca7b52b5c8b836190c0084924b8", "sha256": "17ea991e5df19c4923feaee8b51be6bada6b08409f23ca84ffb978bd9655adbe"}, "downloads": -1, "filename": "handwritingio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6527cca7b52b5c8b836190c0084924b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7284, "upload_time": "2016-04-14T18:56:13", "upload_time_iso_8601": "2016-04-14T18:56:13.127984Z", "url": "https://files.pythonhosted.org/packages/6e/09/ef9b4c94032ece947a9549a09cf1c3afea637701cc37863c38cc446d068f/handwritingio-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:36 2020"}