{"info": {"author": "Jeroen F.J. Laros", "author_email": "jlaros@fixedpoint.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering"], "description": "Command line playlist bookkeeping\n=================================\n\nWhen following multiple series, keeping track of which episodes were\nwatched can become a tedious task. This project aims to offload this\ntask to a database.\n\nInstallation\n------------\n\nVia `PyPI <https://pypi.python.org/pypi/playlistdb>`__:\n\n::\n\n   pip install playlistdb\n\nFrom source:\n\n::\n\n   git clone https://github.com/jfjlaros/playlist.git\n   cd playlist\n   pip install .\n\nUsage\n-----\n\nThe program ``playlist`` is used to add and remove files and to set\nconfiguration options per directory, i.e., for every directory a new\nentry is added to the database.\n\nThe ``add`` command can be used to add files, any configuration specific\nfor these files can be added with the ``config`` subcommand.\n\n::\n\n   playlist add *.mkv\n   playlist config '-sid 1'\n\nThis adds all files with extension ``.mkv`` to the database. The\nconfiguration ``-sid 1``, a command line option for\n`mplayer <http://www.mplayerhq.hu>`__, is added for the current\ndirectory.\n\nAn overview of the database contents for the current directory can be\nseen with the ``show`` subcommand.\n\n::\n\n   $ playlist show\n   Playlist:\n   * 00 - Credits.mkv\n     00 - Intro.mkv\n     01 - Episode 1.mkv\n     02 - Episode 2.mkv\n     03 - Episode 3.mkv\n\n   Config: -sid 1\n\nThe ``*`` marks the current file, this file is next in line to be\nplayed.\n\nEntries can be removed by using the ``remove`` subcommand:\n\n::\n\n   playlist remove '00 - Credits.mkv'\n\nThe current file can be retrieved with the ``current`` subcommand and\nset to a specific file with the ``set`` subcommand. The configuration\ncan be retrieved with ``show_config``:\n\n::\n\n   $ playlist current\n   00 - Intro.mkv\n   $ playlist set '01 - Episode 1.mkv'\n   $ playlist current\n   01 - Episode 1.mkv\n   $ playlist show_config\n   -sid 1\n\nFinally, the ``next`` subcommand will show the current file and will set\nthe current file to the next entry.\n\n::\n\n   $ playlist next\n   01 - Episode 1.mkv\n   $ playlist next\n   02 - Episode 2.mkv\n\nThe output of these commands can be passed to any program. It may be\nconvenient to make an alias for particular application, for example:\n\n::\n\n   alias playnext='mplayer $(playlist show_config) \"$(playlist next)\"'\n\nDatabase\n--------\n\nThe database is stored in ``$HOME/.cache/playlist/db.yml``. Since it is\nstored in `YAML <https://en.wikipedia.org/wiki/Yaml>`__ format, it can\neasily be modified using any text editor.\n\nThe database entry for our example looks as follows:\n\n.. code:: yaml\n\n   /media/Show:\n     config: -sid 1\n     files:\n     - 00 - Intro.mkv\n     - 01 - Episode 1.mkv\n     - 02 - Episode 2.mkv\n     - 03 - Episode 3.mkv\n     offset: 3\n\nThe top-level key ``/media/Show`` is also the name of the directory that\ncontains the files to be played, the configuration for this directory is\nstored in the ``config`` variable, the file list is stored in ``files``.\nThe ``offset`` variable contains the index of the current file. If this\nindex is larger or equal to the length of the list, then the playlist is\nfinished.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jfjlaros/playlist", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "playlistdb", "package_url": "https://pypi.org/project/playlistdb/", "platform": "any", "project_url": "https://pypi.org/project/playlistdb/", "project_urls": {"Homepage": "https://github.com/jfjlaros/playlist"}, "release_url": "https://pypi.org/project/playlistdb/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "playlistdb: Keep track of on disk playlists.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>When following multiple series, keeping track of which episodes were\nwatched can become a tedious task. This project aims to offload this\ntask to a database.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Via <a href=\"https://pypi.python.org/pypi/playlistdb\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install playlistdb\n</pre>\n<p>From source:</p>\n<pre>git clone https://github.com/jfjlaros/playlist.git\ncd playlist\npip install .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The program <tt>playlist</tt> is used to add and remove files and to set\nconfiguration options per directory, i.e., for every directory a new\nentry is added to the database.</p>\n<p>The <tt>add</tt> command can be used to add files, any configuration specific\nfor these files can be added with the <tt>config</tt> subcommand.</p>\n<pre>playlist add *.mkv\nplaylist config '-sid 1'\n</pre>\n<p>This adds all files with extension <tt>.mkv</tt> to the database. The\nconfiguration <tt><span class=\"pre\">-sid</span> 1</tt>, a command line option for\n<a href=\"http://www.mplayerhq.hu\" rel=\"nofollow\">mplayer</a>, is added for the current\ndirectory.</p>\n<p>An overview of the database contents for the current directory can be\nseen with the <tt>show</tt> subcommand.</p>\n<pre>$ playlist show\nPlaylist:\n* 00 - Credits.mkv\n  00 - Intro.mkv\n  01 - Episode 1.mkv\n  02 - Episode 2.mkv\n  03 - Episode 3.mkv\n\nConfig: -sid 1\n</pre>\n<p>The <tt>*</tt> marks the current file, this file is next in line to be\nplayed.</p>\n<p>Entries can be removed by using the <tt>remove</tt> subcommand:</p>\n<pre>playlist remove '00 - Credits.mkv'\n</pre>\n<p>The current file can be retrieved with the <tt>current</tt> subcommand and\nset to a specific file with the <tt>set</tt> subcommand. The configuration\ncan be retrieved with <tt>show_config</tt>:</p>\n<pre>$ playlist current\n00 - Intro.mkv\n$ playlist set '01 - Episode 1.mkv'\n$ playlist current\n01 - Episode 1.mkv\n$ playlist show_config\n-sid 1\n</pre>\n<p>Finally, the <tt>next</tt> subcommand will show the current file and will set\nthe current file to the next entry.</p>\n<pre>$ playlist next\n01 - Episode 1.mkv\n$ playlist next\n02 - Episode 2.mkv\n</pre>\n<p>The output of these commands can be passed to any program. It may be\nconvenient to make an alias for particular application, for example:</p>\n<pre>alias playnext='mplayer $(playlist show_config) \"$(playlist next)\"'\n</pre>\n</div>\n<div id=\"database\">\n<h2>Database</h2>\n<p>The database is stored in <tt><span class=\"pre\">$HOME/.cache/playlist/db.yml</span></tt>. Since it is\nstored in <a href=\"https://en.wikipedia.org/wiki/Yaml\" rel=\"nofollow\">YAML</a> format, it can\neasily be modified using any text editor.</p>\n<p>The database entry for our example looks as follows:</p>\n<pre><span class=\"nt\">/media/Show</span><span class=\"p\">:</span>\n  <span class=\"nt\">config</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">-sid 1</span>\n  <span class=\"nt\">files</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">00 - Intro.mkv</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">01 - Episode 1.mkv</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">02 - Episode 2.mkv</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">03 - Episode 3.mkv</span>\n  <span class=\"nt\">offset</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">3</span>\n</pre>\n<p>The top-level key <tt>/media/Show</tt> is also the name of the directory that\ncontains the files to be played, the configuration for this directory is\nstored in the <tt>config</tt> variable, the file list is stored in <tt>files</tt>.\nThe <tt>offset</tt> variable contains the index of the current file. If this\nindex is larger or equal to the length of the list, then the playlist is\nfinished.</p>\n</div>\n\n          </div>"}, "last_serial": 6849024, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "784f5efc013d7f7e57174e8de7e71b4c", "sha256": "7096b329514feda1088346f422278bd53d48ee78eb3a6e59dffbd8a20de4e5fa"}, "downloads": -1, "filename": "playlistdb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "784f5efc013d7f7e57174e8de7e71b4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3701, "upload_time": "2018-03-25T09:16:51", "upload_time_iso_8601": "2018-03-25T09:16:51.337372Z", "url": "https://files.pythonhosted.org/packages/53/7e/33a9926efac16b61f6deadd32572dd1ad903bf074b4086ac1788b6403da0/playlistdb-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ef8eaeade9648fd3be2fa8793820aa55", "sha256": "b084c782d74e67e7b2991d3dcacfd93bd91496302faf933ad85eac85d100cbb2"}, "downloads": -1, "filename": "playlistdb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ef8eaeade9648fd3be2fa8793820aa55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4581, "upload_time": "2018-03-25T13:27:21", "upload_time_iso_8601": "2018-03-25T13:27:21.257040Z", "url": "https://files.pythonhosted.org/packages/fe/79/572f2a6bca8e4380787c9539e1b850eb64a43646fc27f032dd4221a2e432/playlistdb-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "969064c07022d0a7c3c74507840bcfde", "sha256": "caf371508c3f4d0737acc8843d39c4008492b39c6454bfa2cab97292fcd509fc"}, "downloads": -1, "filename": "playlistdb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "969064c07022d0a7c3c74507840bcfde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4958, "upload_time": "2020-03-20T10:48:40", "upload_time_iso_8601": "2020-03-20T10:48:40.017344Z", "url": "https://files.pythonhosted.org/packages/d7/4f/e50c9b9733d4e3c70a5632f65ba8dff5797b1eaf299f3f3a0da61605954c/playlistdb-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "969064c07022d0a7c3c74507840bcfde", "sha256": "caf371508c3f4d0737acc8843d39c4008492b39c6454bfa2cab97292fcd509fc"}, "downloads": -1, "filename": "playlistdb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "969064c07022d0a7c3c74507840bcfde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4958, "upload_time": "2020-03-20T10:48:40", "upload_time_iso_8601": "2020-03-20T10:48:40.017344Z", "url": "https://files.pythonhosted.org/packages/d7/4f/e50c9b9733d4e3c70a5632f65ba8dff5797b1eaf299f3f3a0da61605954c/playlistdb-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:34 2020"}