{"info": {"author": "Ross Miller", "author_email": "ross.miller@digita.trade.gov.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "========================\nDjango ECS log formatter\n========================\n\nThe library formats Django logs in ECS format.\n\nhttps://www.elastic.co/guide/en/ecs/current/index.html\n\nMapping to the format is incomplete and best effort has been made to create logical field mappings between Django and ECS.\n\nIf you need to amend the mapping you can implement a custom formatter (see below).\n\nInstallation\n------------\n\n.. code-block:: python\n\n    pip install django-log-formatter-ecs\n\nUsage\n-----\n\nUsing in a Django logging configuration:\n\n.. code-block:: python\n\n    from django_log_formatter_ecs import ECSFormatter\n\n    LOGGING = {\n        ...\n        \"formatters\": {\n            \"ecs_formatter\": {\n                \"()\": ECSFormatter,\n            },\n        },\n        'handlers': {\n            'ecs': {\n                'formatter': 'ecs_formatter',\n                 ...\n            },\n        },\n        \"loggers\": {\n            \"django\": {\n                \"handlers\": [\"ecs\"],\n                ...\n            },\n        },\n    }\n\nDependencies\n------------\n\nThis package uses for kubi_ecs_logger https://github.com/kumina/kubi_ecs_logger for base ECS formatting\n\nThis package is compatible with django-user_agents https://pypi.org/project/django-user-agents/ which, when used, will enhance logged user agent information.\n\nSettings\n--------\nThe formatter checks the setting LOG_SENSITIVE_USER_DATA to see if user information should be logged. If this is not set to true, only the user's id is logged.\n\nThe Django configuration file logged is determined by running:\n\n.. code-block:: python\n\n     os.getenv('DJANGO_SETTINGS_MODULE')\n\n\nYou can set which formatter maps to which Django log by setting the ECS_FORMATTERS settings variable.\n\nThis defaults to:\n\n.. code-block:: python\n\n    ECS_FORMATTERS = {\n        \"root\": ECSSystemFormatter,\n        \"django.request\": ECSRequestFormatter,\n        \"django.db.backends\": ECSSystemFormatter,\n    }\n\nAnd can be used to wire up custom formatters (see next section).\n\nCreating a custom formatter\n---------------------------\n\nIf you wish to create your own ECS formatter, you can inherit from ECSSystemFormatter and call _get_event_base to get the base level logging data for use in augmentation:\n\n.. code-block:: python\n\n    class ECSSystemFormatter(ECSFormatterBase):\n        def get_event(self):\n            logger_event = self._get_event_base()\n\n            #\u00a0Customise logger event\n\n            return logger_event\n\nThis can then be wired up to the list of ECS formatters used (see documentation of ECS_FORMATTERS for more information).\n\nTests\n-----\n\n.. code-block:: console\n\n    $ pip install -r requirements.txt\n    $ tox\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uktrade/django-log-formatter-ecs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-log-formatter-ecs", "package_url": "https://pypi.org/project/django-log-formatter-ecs/", "platform": "", "project_url": "https://pypi.org/project/django-log-formatter-ecs/", "project_urls": {"Homepage": "https://github.com/uktrade/django-log-formatter-ecs"}, "release_url": "https://pypi.org/project/django-log-formatter-ecs/0.0.2/", "requires_dist": ["django-ipware (>=2.1.0)", "kubi-ecs-logger (>=0.0.6)"], "requires_python": ">=3.6", "summary": "ECS log formatter for Django", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The library formats Django logs in ECS format.</p>\n<p><a href=\"https://www.elastic.co/guide/en/ecs/current/index.html\" rel=\"nofollow\">https://www.elastic.co/guide/en/ecs/current/index.html</a></p>\n<p>Mapping to the format is incomplete and best effort has been made to create logical field mappings between Django and ECS.</p>\n<p>If you need to amend the mapping you can implement a custom formatter (see below).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">django</span><span class=\"o\">-</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">formatter</span><span class=\"o\">-</span><span class=\"n\">ecs</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using in a Django logging configuration:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_log_formatter_ecs</span> <span class=\"kn\">import</span> <span class=\"n\">ECSFormatter</span>\n\n<span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s2\">\"formatters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ecs_formatter\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"()\"</span><span class=\"p\">:</span> <span class=\"n\">ECSFormatter</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ecs'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'ecs_formatter'</span><span class=\"p\">,</span>\n             <span class=\"o\">...</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"loggers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"django\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"handlers\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"ecs\"</span><span class=\"p\">],</span>\n            <span class=\"o\">...</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This package uses for kubi_ecs_logger <a href=\"https://github.com/kumina/kubi_ecs_logger\" rel=\"nofollow\">https://github.com/kumina/kubi_ecs_logger</a> for base ECS formatting</p>\n<p>This package is compatible with django-user_agents <a href=\"https://pypi.org/project/django-user-agents/\" rel=\"nofollow\">https://pypi.org/project/django-user-agents/</a> which, when used, will enhance logged user agent information.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>The formatter checks the setting LOG_SENSITIVE_USER_DATA to see if user information should be logged. If this is not set to true, only the user\u2019s id is logged.</p>\n<p>The Django configuration file logged is determined by running:</p>\n<pre><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_SETTINGS_MODULE'</span><span class=\"p\">)</span>\n</pre>\n<p>You can set which formatter maps to which Django log by setting the ECS_FORMATTERS settings variable.</p>\n<p>This defaults to:</p>\n<pre><span class=\"n\">ECS_FORMATTERS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"root\"</span><span class=\"p\">:</span> <span class=\"n\">ECSSystemFormatter</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"django.request\"</span><span class=\"p\">:</span> <span class=\"n\">ECSRequestFormatter</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"django.db.backends\"</span><span class=\"p\">:</span> <span class=\"n\">ECSSystemFormatter</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p>And can be used to wire up custom formatters (see next section).</p>\n</div>\n<div id=\"creating-a-custom-formatter\">\n<h2>Creating a custom formatter</h2>\n<p>If you wish to create your own ECS formatter, you can inherit from ECSSystemFormatter and call _get_event_base to get the base level logging data for use in augmentation:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ECSSystemFormatter</span><span class=\"p\">(</span><span class=\"n\">ECSFormatterBase</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">logger_event</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_event_base</span><span class=\"p\">()</span>\n\n        <span class=\"c1\">#\u00a0Customise logger event</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">logger_event</span>\n</pre>\n<p>This can then be wired up to the list of ECS formatters used (see documentation of ECS_FORMATTERS for more information).</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<pre><span class=\"gp\">$</span> pip install -r requirements.txt\n<span class=\"gp\">$</span> tox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7174175, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "ad0dc45695629cba9cc894ba144ac651", "sha256": "4052d492c4972a97ccc18aa832cc84e0514fde6560de422b21d8b0c99fe01c5f"}, "downloads": -1, "filename": "django_log_formatter_ecs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ad0dc45695629cba9cc894ba144ac651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5779, "upload_time": "2020-05-05T16:55:44", "upload_time_iso_8601": "2020-05-05T16:55:44.893383Z", "url": "https://files.pythonhosted.org/packages/ee/59/39278a405fd40e00929f3926607de4b5d5a37b677f0f8b3d4d7e0537dc3a/django_log_formatter_ecs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e81eca785f2a53b85109213eb20b24a", "sha256": "22cbc12fbb0aa8b5be99b18b732601c6fa26e9c28edb14c62e1b35fb2dbc0730"}, "downloads": -1, "filename": "django_log_formatter_ecs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8e81eca785f2a53b85109213eb20b24a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3999, "upload_time": "2020-05-05T16:55:46", "upload_time_iso_8601": "2020-05-05T16:55:46.927028Z", "url": "https://files.pythonhosted.org/packages/d8/50/e83c04e38db4978271a3409b38030a53db960275610ffac9f7ad81fd9daf/django_log_formatter_ecs-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad0dc45695629cba9cc894ba144ac651", "sha256": "4052d492c4972a97ccc18aa832cc84e0514fde6560de422b21d8b0c99fe01c5f"}, "downloads": -1, "filename": "django_log_formatter_ecs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ad0dc45695629cba9cc894ba144ac651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5779, "upload_time": "2020-05-05T16:55:44", "upload_time_iso_8601": "2020-05-05T16:55:44.893383Z", "url": "https://files.pythonhosted.org/packages/ee/59/39278a405fd40e00929f3926607de4b5d5a37b677f0f8b3d4d7e0537dc3a/django_log_formatter_ecs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e81eca785f2a53b85109213eb20b24a", "sha256": "22cbc12fbb0aa8b5be99b18b732601c6fa26e9c28edb14c62e1b35fb2dbc0730"}, "downloads": -1, "filename": "django_log_formatter_ecs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8e81eca785f2a53b85109213eb20b24a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3999, "upload_time": "2020-05-05T16:55:46", "upload_time_iso_8601": "2020-05-05T16:55:46.927028Z", "url": "https://files.pythonhosted.org/packages/d8/50/e83c04e38db4978271a3409b38030a53db960275610ffac9f7ad81fd9daf/django_log_formatter_ecs-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:17 2020"}