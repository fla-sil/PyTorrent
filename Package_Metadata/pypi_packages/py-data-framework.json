{"info": {"author": "Made.com", "author_email": "analytics@made.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "#  py-analytics \n\nThis repo contains a python framework with Data Enginner, Data Scientist and 3rd party integration tools capabilities\n\n## Installation\npy-test-utility can be installed via pip\n\n```python \npip install py-analytics\n```\n\n## tdd_utility - module\n\n### class load_csv(csv,schema) \nContains methods to extract the equivalent json from csv with nested and repeated records structures\n\n\n#### Args\n\n- csv\n    - path and file name of the csv\n    - mandatory\n    - nested fields shall be separated by a dot \".\"  (i.e. item.id, item.quantity)\n\n|order | item.id | item.quantity | delivery.address | delivey.postcode |\n|---|---|---|---|---|\n| A0001 | item1 | 5 | address1 | e13bp |\n| | item2 | 1 | | |\n| | item3 | 3 | | |\n| A0002 | item4 | 4  | address4 | e13bp |\n| | item1 | 4 | | |\n| | item3 | 2 | | |\n\n- schema \n    - path and schema file name of the table schema\n    - required if the CSV contain nested and repeated records\n    - json format i.e. \n```json\n[  \n    {\n      \"mode\": \"NULLABLE\", \n      \"name\": \"order\", \n      \"type\": \"STRING\"\n    },  \n    {\n      \"fields\": [\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"id\", \n          \"type\": \"STRING\"\n        },\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"quantity\", \n          \"type\": \"STRING\"\n        }\n      ], \n      \"mode\": \"REPEATED\", \n      \"name\": \"item\", \n      \"type\": \"RECORD\"\n    }, \n    {\n      \"fields\": [\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"address\", \n          \"type\": \"STRING\"\n        }, \n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"postcode\", \n          \"type\": \"STRING\"\n        }\n      ], \n      \"mode\": \"NULLABLE\", \n      \"name\": \"delivery\", \n      \"type\": \"RECORD\"\n    }\n  ]\n```\n\n#### Methods\n- to_json()\n    - if successfuls return the json extracted from the csv\n\n- to_new_line_delimiter_file(output_file_name)\n    - return 0 if successfuls \n    - create new line delimiter \"output_file_name\" file\n\n\n#### Usage\n\n```python \n>>> from data_prep import tdd_utility as  tu\n>>> mockdata_csv = tu.load_csv(\n...     csv=\"path/to/filename/file.csv\", \n...     schema=\"path/to/schema/schema.json\") # initialise the object\n>>> mockdata_json = mockdata_csv.to_json() # return the equivalent json\n>>> mockdata_json = mockdata_csv.to_new_line_delimiter_file(output=\"path/output_file_name.json\") # return output_file_name\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madedotcom/py-analytics", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-data-framework", "package_url": "https://pypi.org/project/py-data-framework/", "platform": "", "project_url": "https://pypi.org/project/py-data-framework/", "project_urls": {"Homepage": "https://github.com/madedotcom/py-analytics"}, "release_url": "https://pypi.org/project/py-data-framework/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Data engineering & Data science Framework", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-analytics</h1>\n<p>This repo contains a python framework with Data Enginner, Data Scientist and 3rd party integration tools capabilities</p>\n<h2>Installation</h2>\n<p>py-test-utility can be installed via pip</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">py</span><span class=\"o\">-</span><span class=\"n\">analytics</span>\n</pre>\n<h2>tdd_utility - module</h2>\n<h3>class load_csv(csv,schema)</h3>\n<p>Contains methods to extract the equivalent json from csv with nested and repeated records structures</p>\n<h4>Args</h4>\n<ul>\n<li>csv\n<ul>\n<li>path and file name of the csv</li>\n<li>mandatory</li>\n<li>nested fields shall be separated by a dot \".\"  (i.e. item.id, item.quantity)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>order</th>\n<th>item.id</th>\n<th>item.quantity</th>\n<th>delivery.address</th>\n<th>delivey.postcode</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A0001</td>\n<td>item1</td>\n<td>5</td>\n<td>address1</td>\n<td>e13bp</td>\n</tr>\n<tr>\n<td></td>\n<td>item2</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>item3</td>\n<td>3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>A0002</td>\n<td>item4</td>\n<td>4</td>\n<td>address4</td>\n<td>e13bp</td>\n</tr>\n<tr>\n<td></td>\n<td>item1</td>\n<td>4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>item3</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<ul>\n<li>schema\n<ul>\n<li>path and schema file name of the table schema</li>\n<li>required if the CSV contain nested and repeated records</li>\n<li>json format i.e.</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"p\">[</span>  \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"order\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n    <span class=\"p\">},</span>  \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"quantity\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">],</span> \n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"REPEATED\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"item\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"address\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">},</span> \n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"postcode\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">],</span> \n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"delivery\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre>\n<h4>Methods</h4>\n<ul>\n<li>\n<p>to_json()</p>\n<ul>\n<li>if successfuls return the json extracted from the csv</li>\n</ul>\n</li>\n<li>\n<p>to_new_line_delimiter_file(output_file_name)</p>\n<ul>\n<li>return 0 if successfuls</li>\n<li>create new line delimiter \"output_file_name\" file</li>\n</ul>\n</li>\n</ul>\n<h4>Usage</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">data_prep</span> <span class=\"kn\">import</span> <span class=\"n\">tdd_utility</span> <span class=\"k\">as</span>  <span class=\"n\">tu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mockdata_csv</span> <span class=\"o\">=</span> <span class=\"n\">tu</span><span class=\"o\">.</span><span class=\"n\">load_csv</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">csv</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/filename/file.csv\"</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>     <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/schema/schema.json\"</span><span class=\"p\">)</span> <span class=\"c1\"># initialise the object</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mockdata_json</span> <span class=\"o\">=</span> <span class=\"n\">mockdata_csv</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span> <span class=\"c1\"># return the equivalent json</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mockdata_json</span> <span class=\"o\">=</span> <span class=\"n\">mockdata_csv</span><span class=\"o\">.</span><span class=\"n\">to_new_line_delimiter_file</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s2\">\"path/output_file_name.json\"</span><span class=\"p\">)</span> <span class=\"c1\"># return output_file_name</span>\n</pre>\n\n          </div>"}, "last_serial": 6216047, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5295a8746ea082cf0918b903e2bd043c", "sha256": "28ff1568a3e9a432e5328aeb54ced028b30c702afda6d66f596ed090d8ad3a44"}, "downloads": -1, "filename": "py_data_framework-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5295a8746ea082cf0918b903e2bd043c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3687, "upload_time": "2019-11-28T22:14:02", "upload_time_iso_8601": "2019-11-28T22:14:02.019067Z", "url": "https://files.pythonhosted.org/packages/4f/08/de97105a47a00ef77300c903c648dca0861fe9416cf27a6ae4616d1e1cee/py_data_framework-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f2bd6808083eae0f2c1c98ba7596ccc", "sha256": "746712c63127986b7b3f3792c7e880e729a17e59ec38d0f876343b873bf2ea05"}, "downloads": -1, "filename": "py-data-framework-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5f2bd6808083eae0f2c1c98ba7596ccc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2467, "upload_time": "2019-11-28T22:14:04", "upload_time_iso_8601": "2019-11-28T22:14:04.601199Z", "url": "https://files.pythonhosted.org/packages/ff/f2/82a3ba390f1bf138f9e14c6570470bdb683dd732611fb41aca9c4707435a/py-data-framework-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5295a8746ea082cf0918b903e2bd043c", "sha256": "28ff1568a3e9a432e5328aeb54ced028b30c702afda6d66f596ed090d8ad3a44"}, "downloads": -1, "filename": "py_data_framework-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5295a8746ea082cf0918b903e2bd043c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3687, "upload_time": "2019-11-28T22:14:02", "upload_time_iso_8601": "2019-11-28T22:14:02.019067Z", "url": "https://files.pythonhosted.org/packages/4f/08/de97105a47a00ef77300c903c648dca0861fe9416cf27a6ae4616d1e1cee/py_data_framework-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f2bd6808083eae0f2c1c98ba7596ccc", "sha256": "746712c63127986b7b3f3792c7e880e729a17e59ec38d0f876343b873bf2ea05"}, "downloads": -1, "filename": "py-data-framework-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5f2bd6808083eae0f2c1c98ba7596ccc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2467, "upload_time": "2019-11-28T22:14:04", "upload_time_iso_8601": "2019-11-28T22:14:04.601199Z", "url": "https://files.pythonhosted.org/packages/ff/f2/82a3ba390f1bf138f9e14c6570470bdb683dd732611fb41aca9c4707435a/py-data-framework-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:23 2020"}