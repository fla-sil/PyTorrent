{"info": {"author": "Jonas Windhager", "author_email": "jonas.windhager@uzh.ch", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# xtiff\n\nA tiny Python 3 library for writing multi-channel TIFF stacks.\n\nThe aim of this library is to provide an easy way to write multi-channel image stacks for external visualization and\nanalysis. It acts as an interface to the popular [tifffile](https://www.lfd.uci.edu/~gohlke/) package and supports\n[xarray](http://xarray.pydata.org) DataArrays as well as [numpy](https://www.numpy.org)-compatible data structures.\n\nTo maximize compatibility with third-party software, the images are written in standard-compliant fashion, with minimal\nmetadata and in TZCYX channel order. In particular, a minimal (but customizable) subset of the OME-TIFF standard is\nsupported, enabling the naming of channels.\n\n## Installation\n\nInstall from pypi:\n\n`pip install xtiff`\n\n\n## Usage\n\nThe package provides the following main function for writing TIFF files:\n\n```python3\nto_tiff(img, file, image_name=None, image_date=None, channel_names=None, description=None,\n        profile=TiffProfile.OME_TIFF, big_endian=None, big_tiff=None, big_tiff_threshold=4261412864,\n        compression_type=None, compression_level=0, pixel_size=None, pixel_depth=None,\n        ome_xml_fun=get_ome_xml, **ome_xml_kwargs):\n```\n\nDocumentation of the function parameters is available via Python's internal help system: `help(xtiff.to_tiff)`\n\nIn addition, `get_ome_xml()` is provided as the default OME-XML-generating function.\n\n## FAQ\n\n_What metadata is included in the written images?_\n\nIn general, written metadata is kept at a minimum and only information that can be inferred from the raw image data is\nincluded (image dimensions, data type, number of channels, channel names). Additional metadata natively supported by the\ntifffile package can be specified using function parameters. For OME-TIFF files, the OME-XML \"Description\" tag contents\ncan be further refined by specifying custom OME-XML-generating functions.\n\n_Why should I care about TIFF? I use Zarr/NetCDF/whatever._\n\nThat's good! TIFF is an old and complex file format, has many disadvantages and is impractical for storing large images.\nHowever, it also remains one of the most widely used scientific image formats and is (at least partially) supported by\nmany popular tools, such as ImageJ. With xtiff, you can continue to store your images in your favorite file format,\nwhile having the opportunity to easily convert them to a format that can be read by (almost) any tool.\n\n_Why can't I use the tifffile package directly?_\n\nOf course you can! Christoph Gohlke's [tifffile](https://www.lfd.uci.edu/~gohlke/) package provides a very powerful and\nfeature-complete interface for writing TIFF files and is the backend for xtiff. Essentially, the xtiff package is just a\nwrapper for tifffile. While you can in principle write any image directly with tifffile, in many cases, the flexibility\nof the TIFF format can be daunting. The xtiff package reduces the configuration burden and metadata to an essential\nminimum.\n\n## Change log\n\n2019-12-12 v0.1.2 - Initial release  \n2019-12-12 v0.2.1 - Expose OME-XML to user  \n2019-12-12 v0.2.2 - Support for ome_xml_kwargs  \n2019-12-13 v0.3.0 - Simplified to_tiff interface  \n2019-12-15 v0.4.0 - Added description parameter  \n2020-01-13 v0.4.1 - Fixed XML encoding and XSD compliance  \n2020-01-13 v0.4.2 - Fixed package installation problems  \n2020-01-15 v0.5.0 - Simplified interface for OME-XML generation  \n2020-01-23 v0.6.0 - Switched to full XML tree for OME-XML generation  \n2020-01-23 v0.6.1 - Small bug fix in dimension checking  \n\n## License\n\nThis project is licensed under the [MIT license](https://github.com/BodenmillerGroup/xtiff/blob/master/LICENSE.txt).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BodenmillerGroup/xtiff", "keywords": "xarray ome tiff", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xtiff", "package_url": "https://pypi.org/project/xtiff/", "platform": "", "project_url": "https://pypi.org/project/xtiff/", "project_urls": {"Homepage": "https://github.com/BodenmillerGroup/xtiff", "Source": "https://github.com/BodenmillerGroup/xtiff", "Tracker": "https://github.com/BodenmillerGroup/xtiff/issues"}, "release_url": "https://pypi.org/project/xtiff/0.6.1/", "requires_dist": ["numpy", "tifffile"], "requires_python": ">=3.7", "summary": "A tiny Python 3 library for writing multi-channel TIFF stacks", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>xtiff</h1>\n<p>A tiny Python 3 library for writing multi-channel TIFF stacks.</p>\n<p>The aim of this library is to provide an easy way to write multi-channel image stacks for external visualization and\nanalysis. It acts as an interface to the popular <a href=\"https://www.lfd.uci.edu/%7Egohlke/\" rel=\"nofollow\">tifffile</a> package and supports\n<a href=\"http://xarray.pydata.org\" rel=\"nofollow\">xarray</a> DataArrays as well as <a href=\"https://www.numpy.org\" rel=\"nofollow\">numpy</a>-compatible data structures.</p>\n<p>To maximize compatibility with third-party software, the images are written in standard-compliant fashion, with minimal\nmetadata and in TZCYX channel order. In particular, a minimal (but customizable) subset of the OME-TIFF standard is\nsupported, enabling the naming of channels.</p>\n<h2>Installation</h2>\n<p>Install from pypi:</p>\n<p><code>pip install xtiff</code></p>\n<h2>Usage</h2>\n<p>The package provides the following main function for writing TIFF files:</p>\n<pre><span class=\"n\">to_tiff</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">image_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">image_date</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">channel_names</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">TiffProfile</span><span class=\"o\">.</span><span class=\"n\">OME_TIFF</span><span class=\"p\">,</span> <span class=\"n\">big_endian</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">big_tiff</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">big_tiff_threshold</span><span class=\"o\">=</span><span class=\"mi\">4261412864</span><span class=\"p\">,</span>\n        <span class=\"n\">compression_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">compression_level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pixel_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pixel_depth</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">ome_xml_fun</span><span class=\"o\">=</span><span class=\"n\">get_ome_xml</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">ome_xml_kwargs</span><span class=\"p\">):</span>\n</pre>\n<p>Documentation of the function parameters is available via Python's internal help system: <code>help(xtiff.to_tiff)</code></p>\n<p>In addition, <code>get_ome_xml()</code> is provided as the default OME-XML-generating function.</p>\n<h2>FAQ</h2>\n<p><em>What metadata is included in the written images?</em></p>\n<p>In general, written metadata is kept at a minimum and only information that can be inferred from the raw image data is\nincluded (image dimensions, data type, number of channels, channel names). Additional metadata natively supported by the\ntifffile package can be specified using function parameters. For OME-TIFF files, the OME-XML \"Description\" tag contents\ncan be further refined by specifying custom OME-XML-generating functions.</p>\n<p><em>Why should I care about TIFF? I use Zarr/NetCDF/whatever.</em></p>\n<p>That's good! TIFF is an old and complex file format, has many disadvantages and is impractical for storing large images.\nHowever, it also remains one of the most widely used scientific image formats and is (at least partially) supported by\nmany popular tools, such as ImageJ. With xtiff, you can continue to store your images in your favorite file format,\nwhile having the opportunity to easily convert them to a format that can be read by (almost) any tool.</p>\n<p><em>Why can't I use the tifffile package directly?</em></p>\n<p>Of course you can! Christoph Gohlke's <a href=\"https://www.lfd.uci.edu/%7Egohlke/\" rel=\"nofollow\">tifffile</a> package provides a very powerful and\nfeature-complete interface for writing TIFF files and is the backend for xtiff. Essentially, the xtiff package is just a\nwrapper for tifffile. While you can in principle write any image directly with tifffile, in many cases, the flexibility\nof the TIFF format can be daunting. The xtiff package reduces the configuration burden and metadata to an essential\nminimum.</p>\n<h2>Change log</h2>\n<p>2019-12-12 v0.1.2 - Initial release<br>\n2019-12-12 v0.2.1 - Expose OME-XML to user<br>\n2019-12-12 v0.2.2 - Support for ome_xml_kwargs<br>\n2019-12-13 v0.3.0 - Simplified to_tiff interface<br>\n2019-12-15 v0.4.0 - Added description parameter<br>\n2020-01-13 v0.4.1 - Fixed XML encoding and XSD compliance<br>\n2020-01-13 v0.4.2 - Fixed package installation problems<br>\n2020-01-15 v0.5.0 - Simplified interface for OME-XML generation<br>\n2020-01-23 v0.6.0 - Switched to full XML tree for OME-XML generation<br>\n2020-01-23 v0.6.1 - Small bug fix in dimension checking</p>\n<h2>License</h2>\n<p>This project is licensed under the <a href=\"https://github.com/BodenmillerGroup/xtiff/blob/master/LICENSE.txt\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 7165481, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "9da1b34efa0ee41bf64a6ed32a261621", "sha256": "2891c4f22c90aa7f6209096b156a001d757aa76cf44683edf50aea1f487ea449"}, "downloads": -1, "filename": "xtiff-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9da1b34efa0ee41bf64a6ed32a261621", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7136, "upload_time": "2019-12-12T02:43:35", "upload_time_iso_8601": "2019-12-12T02:43:35.775524Z", "url": "https://files.pythonhosted.org/packages/99/3f/9102cd7cdf7cf3e44fbbed5e1bfb6870fef876c70f6f1c4c26d73071b3a7/xtiff-0.1.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f6bdc6fd6d343b60a72663addb1bd3e3", "sha256": "ee65911a174cad465d2e8d8dde16ddafbc2503292dc086ffe5ebd9f15a376fb0"}, "downloads": -1, "filename": "xtiff-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f6bdc6fd6d343b60a72663addb1bd3e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7788, "upload_time": "2019-12-12T11:32:31", "upload_time_iso_8601": "2019-12-12T11:32:31.191208Z", "url": "https://files.pythonhosted.org/packages/40/a8/6a0ece4a15a20eeef720b29c46057ba34a2bf826aaf9e4da9fd48ff65895/xtiff-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ef4bf7c4b28c07061c56ffaac7dd1e1b", "sha256": "d17f86df9396378734fc661fd06d7d06794300c75bca65b2a090696cc02980dd"}, "downloads": -1, "filename": "xtiff-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ef4bf7c4b28c07061c56ffaac7dd1e1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7825, "upload_time": "2019-12-12T12:37:39", "upload_time_iso_8601": "2019-12-12T12:37:39.990459Z", "url": "https://files.pythonhosted.org/packages/86/f6/e8d48958e95a2276165e052beb0bcf4d7768d535541c6d6f1549d0cfd1ec/xtiff-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "46fb261395e969e82d1ea8fdaf7bbfa8", "sha256": "13f98ce06628a15882dda26e91da76fac50729c9ff5cccdb4bb759fc205caa51"}, "downloads": -1, "filename": "xtiff-0.3.0.tar.gz", "has_sig": false, "md5_digest": "46fb261395e969e82d1ea8fdaf7bbfa8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8150, "upload_time": "2019-12-13T12:25:08", "upload_time_iso_8601": "2019-12-13T12:25:08.706830Z", "url": "https://files.pythonhosted.org/packages/ac/53/0bd09b30ca2ce51f4083a896cf1b46aceed9e7a7f381f19fe59d54137499/xtiff-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ed59bf012c0ce4f47510be89762e8f18", "sha256": "d074e77efc3d9041f0f9ee65d92fc592b1f12131530b50e9c6ce64062472bfd0"}, "downloads": -1, "filename": "xtiff-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ed59bf012c0ce4f47510be89762e8f18", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8266, "upload_time": "2019-12-15T11:43:15", "upload_time_iso_8601": "2019-12-15T11:43:15.882841Z", "url": "https://files.pythonhosted.org/packages/19/ab/6f4d6a8fe7a4d37f6ebabd4ff8a35dbd02b26486253c11af68e69dd3459c/xtiff-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7ba69563f50c903c90256f2c47572ef4", "sha256": "577978f3ca2f9fb5049c010a8a9a796f652715b93b5e8f66bf7c42d47f7580a8"}, "downloads": -1, "filename": "xtiff-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7ba69563f50c903c90256f2c47572ef4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8544, "upload_time": "2020-01-13T10:08:00", "upload_time_iso_8601": "2020-01-13T10:08:00.418990Z", "url": "https://files.pythonhosted.org/packages/0f/3f/cb51f14c4b64dc480c0bdae6ae994c8832a3ddf95e7adae8c60034daa9c7/xtiff-0.4.1-py3-none-any.whl", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "8d12288a49e41edcc4eb7d7d24f103d5", "sha256": "5e163dce67fbfdab055e215ad345d58f8f11199429d75c0591d8072835467f97"}, "downloads": -1, "filename": "xtiff-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d12288a49e41edcc4eb7d7d24f103d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8915, "upload_time": "2020-01-13T11:37:56", "upload_time_iso_8601": "2020-01-13T11:37:56.530106Z", "url": "https://files.pythonhosted.org/packages/1b/33/8aeea4f383cc0013ff01af3e9c94cf2f6be3ed033644b3f0556fdfd5ac44/xtiff-0.4.2-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d4bbfa7a8cfe4612420007df35e63411", "sha256": "982756b11ca2e3de83a3244af752735576f84fd286cc7b9d106331e73ee8b19e"}, "downloads": -1, "filename": "xtiff-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4bbfa7a8cfe4612420007df35e63411", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8695, "upload_time": "2020-01-15T13:56:48", "upload_time_iso_8601": "2020-01-15T13:56:48.778573Z", "url": "https://files.pythonhosted.org/packages/69/a7/12eee0dc57a62e3ebf2b4ae87cae1a75ccf4106b4504a77f3a670f6587a0/xtiff-0.5.0-py3-none-any.whl", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "b7e3a88fb0df61f04c781a183a62e92a", "sha256": "605b5cf540523d26dec6fa4fff090818619eb9563d65c266aff9af85b41bd3d5"}, "downloads": -1, "filename": "xtiff-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b7e3a88fb0df61f04c781a183a62e92a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8339, "upload_time": "2020-01-23T17:51:20", "upload_time_iso_8601": "2020-01-23T17:51:20.931267Z", "url": "https://files.pythonhosted.org/packages/0b/8a/33dd1102f6245a930d8957e3817bc68088aee3f174acbac375553354f841/xtiff-0.6.0-py3-none-any.whl", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "5a46c64d584368292349c98e7b87b0fa", "sha256": "4cfe4cdea895528d0907b738c911e7ccd4b604775430311db575e8dfeaa4c03b"}, "downloads": -1, "filename": "xtiff-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a46c64d584368292349c98e7b87b0fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8356, "upload_time": "2020-05-04T16:04:39", "upload_time_iso_8601": "2020-05-04T16:04:39.810459Z", "url": "https://files.pythonhosted.org/packages/5f/08/f84b7f7e71f9d6c798f28831cda9af4c120e12c266d84f71cddd6623d6a6/xtiff-0.6.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a46c64d584368292349c98e7b87b0fa", "sha256": "4cfe4cdea895528d0907b738c911e7ccd4b604775430311db575e8dfeaa4c03b"}, "downloads": -1, "filename": "xtiff-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a46c64d584368292349c98e7b87b0fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8356, "upload_time": "2020-05-04T16:04:39", "upload_time_iso_8601": "2020-05-04T16:04:39.810459Z", "url": "https://files.pythonhosted.org/packages/5f/08/f84b7f7e71f9d6c798f28831cda9af4c120e12c266d84f71cddd6623d6a6/xtiff-0.6.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:24:13 2020"}