{"info": {"author": "Fr\u00c3\u00a9d\u00c3\u00a9ric Aoustin", "author_email": "fraoustin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: French", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Terminals"], "description": "Module myterm\n=============\n\nInstallation\n------------\n\n::\n\n    pip install myterm\n\nOr\n\n::\n\n    git clone https://github.com/fraoustin/myterm.git\n    cd myterm\n    python setup.py install\n\n\nUsage\n-----\n\nIf you want add color in python command, add you pythonstartup env\n\n::\n\n    import myterm.startup\n\nOr\n\n::\n\n    export PYTHONSTARTUP=/usr/local/lib/python2.7/dist-packages/myterm/startup.py\n\nIf you want color in console program\n\n::\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n    import os\n    import logging\n    import logging.handlers\n    import myterm\n\n    VERSION=\"0.1\"\n    PROG=\"test1\"\n    DESCRIPTION=\"\"\"test of myterm.StreamHandler\"\"\"\n    AUTHOR=\"Author\"\n\n    if __name__ == '__main__':\n        usage = \"usage: %prog [options]\"\n        parser = myterm.OptionParser(version=\"%s %s\" % (PROG,VERSION), usage=usage)\n        parser.description= DESCRIPTION\n        parser.epilog = AUTHOR\n        try:\n            (options, args) = parser.parse_args()\n            # create logger\n            logger = logging.getLogger(\"simple_example\")\n            logger.setLevel(logging.DEBUG)\n            # create console handler and set level to debug\n            ch = myterm.StreamHandler()\n            ch.setLevel(logging.DEBUG)\n            # create formatter\n            formatter = logging.Formatter(\"%(icon)s %(asctime)s - %(name)s - %(levelname)s - %(message)s\")\n            # add formatter to ch\n            ch.setFormatter(formatter)\n            # add ch to logger\n            logger.addHandler(ch)\n\n            # \"application\" code\n            logger.debug(\"debug message\")\n            logger.info(\"info message\")\n            logger.warn(\"warn message\")\n            logger.error(\"error message\")\n            logger.critical(\"critical message\")\n\n        except Exception as e:\n            parser.error(e)\n            sys.exit(1)\n\n\n0.3.0\n=====\n\n* support of virtualenv in startup\n* manage color\n\n0.2.9\n=====\n\n* hotfix for color default on unix\n\n\n0.2.8\n=====\n\n* add util\n* add in parser -v\n\n0.2.7\n=====\n\n* add config\n\n0.2.6\n=====\n\n* add table\n\n0.2.5\n=====\n\n* manage log\n\n0.2.4\n=====\n\n* manage log\n\n0.2.3\n=====\n\n* manage log\n\n0.2.2\n=====\n\n* correction color default\n\n0.2.1\n=====\n\n* correction stdinfo\n\n0.2.0\n=====\n\n* rebuild all functionality\n* del pipadd, ...\n\n0.1.4\n=====\n\n* add multi template\n\n0.1.3\n=====\n\n* add .gitignore in template\n* add argument --create-directory\n\n0.1.2\n=====\n\n* add piptest\n* correction of pipclean\n\n0.1.0\n=====\n\n* version majeur\n\n0.0.10\n=======\n\n* add pipclean\n* correction pylint (note > 8/10)\n* add in template tests and test pylint\n\n0.0.9\n=====\n\n* in pipadd del parameter project, use argument, add module et project in template\n\n0.0.8\n=====\n\n* bug singleton log\n* add exception ConfError\n\n0.0.7\n=====\n\n* manage no Terminal()\n\n0.0.6\n=====\n\n* Change parameter for myterm.log.Logger.add_rotating_file\n* add myterm.log.Logger.LEVELLOG\n\n0.0.5\n=====\n\nAdd:\n\n* manage template file python (*.py_t) in pipadd\n* color of prompt is YELLOW\n* conf_dir return path, file and conf\n\n0.0.4\n=====\n\nAdd:\n\n* pipadd\n* correction of requirements with colorconsole\n\n\n0.0.3\n=====\n\nchange README.rst\n\nAdd:\n\n* Logger\n* find_confdir\n\n0.0.2\n=====\n\nInitialize project\n\nAdd:\n\n* startup with color\n* StreamHandler with color\n* OptionParser with color", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fraoustin/myterm", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "myterm", "package_url": "https://pypi.org/project/myterm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/myterm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fraoustin/myterm"}, "release_url": "https://pypi.org/project/myterm/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "module for add function in terminal", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Module myterm<br>=============<br><br>Installation<br>------------<br><br>::<br><br>    pip install myterm<br><br>Or<br><br>::<br><br>    git clone https://github.com/fraoustin/myterm.git<br>    cd myterm<br>    python setup.py install<br><br><br>Usage<br>-----<br><br>If you want add color in python command, add you pythonstartup env<br><br>::<br><br>    import myterm.startup<br><br>Or<br><br>::<br><br>    export PYTHONSTARTUP=/usr/local/lib/python2.7/dist-packages/myterm/startup.py<br><br>If you want color in console program<br><br>::<br><br>    #!/usr/bin/env python<br>    # -*- coding: utf-8 -*-<br><br>    import os<br>    import logging<br>    import logging.handlers<br>    import myterm<br><br>    VERSION=\"0.1\"<br>    PROG=\"test1\"<br>    DESCRIPTION=\"\"\"test of myterm.StreamHandler\"\"\"<br>    AUTHOR=\"Author\"<br><br>    if __name__ == '__main__':<br>        usage = \"usage: %prog [options]\"<br>        parser = myterm.OptionParser(version=\"%s %s\" % (PROG,VERSION), usage=usage)<br>        parser.description= DESCRIPTION<br>        parser.epilog = AUTHOR<br>        try:<br>            (options, args) = parser.parse_args()<br>            # create logger<br>            logger = logging.getLogger(\"simple_example\")<br>            logger.setLevel(logging.DEBUG)<br>            # create console handler and set level to debug<br>            ch = myterm.StreamHandler()<br>            ch.setLevel(logging.DEBUG)<br>            # create formatter<br>            formatter = logging.Formatter(\"%(icon)s %(asctime)s - %(name)s - %(levelname)s - %(message)s\")<br>            # add formatter to ch<br>            ch.setFormatter(formatter)<br>            # add ch to logger<br>            logger.addHandler(ch)<br><br>            # \"application\" code<br>            logger.debug(\"debug message\")<br>            logger.info(\"info message\")<br>            logger.warn(\"warn message\")<br>            logger.error(\"error message\")<br>            logger.critical(\"critical message\")<br><br>        except Exception as e:<br>            parser.error(e)<br>            sys.exit(1)<br><br><br>0.3.0<br>=====<br><br>* support of virtualenv in startup<br>* manage color<br><br>0.2.9<br>=====<br><br>* hotfix for color default on unix<br><br><br>0.2.8<br>=====<br><br>* add util<br>* add in parser -v<br><br>0.2.7<br>=====<br><br>* add config<br><br>0.2.6<br>=====<br><br>* add table<br><br>0.2.5<br>=====<br><br>* manage log<br><br>0.2.4<br>=====<br><br>* manage log<br><br>0.2.3<br>=====<br><br>* manage log<br><br>0.2.2<br>=====<br><br>* correction color default<br><br>0.2.1<br>=====<br><br>* correction stdinfo<br><br>0.2.0<br>=====<br><br>* rebuild all functionality<br>* del pipadd, ...<br><br>0.1.4<br>=====<br><br>* add multi template<br><br>0.1.3<br>=====<br><br>* add .gitignore in template<br>* add argument --create-directory<br><br>0.1.2<br>=====<br><br>* add piptest<br>* correction of pipclean<br><br>0.1.0<br>=====<br><br>* version majeur<br><br>0.0.10<br>=======<br><br>* add pipclean<br>* correction pylint (note &gt; 8/10)<br>* add in template tests and test pylint<br><br>0.0.9<br>=====<br><br>* in pipadd del parameter project, use argument, add module et project in template<br><br>0.0.8<br>=====<br><br>* bug singleton log<br>* add exception ConfError<br><br>0.0.7<br>=====<br><br>* manage no Terminal()<br><br>0.0.6<br>=====<br><br>* Change parameter for myterm.log.Logger.add_rotating_file<br>* add myterm.log.Logger.LEVELLOG<br><br>0.0.5<br>=====<br><br>Add:<br><br>* manage template file python (*.py_t) in pipadd<br>* color of prompt is YELLOW<br>* conf_dir return path, file and conf<br><br>0.0.4<br>=====<br><br>Add:<br><br>* pipadd<br>* correction of requirements with colorconsole<br><br><br>0.0.3<br>=====<br><br>change README.rst<br><br>Add:<br><br>* Logger<br>* find_confdir<br><br>0.0.2<br>=====<br><br>Initialize project<br><br>Add:<br><br>* startup with color<br>* StreamHandler with color<br>* OptionParser with color\n          </div>"}, "last_serial": 2381966, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "05c4b59ac68bb95aa5a0c98c8d01ed89", "sha256": "dcf68adda95508fe804c272850d02fd107e941fab3798c4d38bed44060be090e"}, "downloads": -1, "filename": "myterm-0.2.5.tar.gz", "has_sig": false, "md5_digest": "05c4b59ac68bb95aa5a0c98c8d01ed89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16020, "upload_time": "2016-09-10T10:49:24", "upload_time_iso_8601": "2016-09-10T10:49:24.800534Z", "url": "https://files.pythonhosted.org/packages/76/4f/4a9f56df2654fa9a29eb5e5128488235441ed63cba8c436fe46cb24e75ef/myterm-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "40ac23254de0d0b732256911c5419c9a", "sha256": "55ee6fdf3ace7d1defafac28bbf8f034e1f1ce569f3f69b01434736eaadf817f"}, "downloads": -1, "filename": "myterm-0.2.6.tar.gz", "has_sig": false, "md5_digest": "40ac23254de0d0b732256911c5419c9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17292, "upload_time": "2016-09-11T05:45:41", "upload_time_iso_8601": "2016-09-11T05:45:41.176331Z", "url": "https://files.pythonhosted.org/packages/5b/ee/571285e82f189d2eb2151bcdaa129723adf5a5cf8c973bed6b53a26ed791/myterm-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "b22251fa415db5f46f075a2e4bc7a2f4", "sha256": "11742d5114c74edd58f7b84ff9857b10013be4b45e83e84bf8905e58089bb945"}, "downloads": -1, "filename": "myterm-0.2.7.tar.gz", "has_sig": false, "md5_digest": "b22251fa415db5f46f075a2e4bc7a2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17848, "upload_time": "2016-09-11T06:02:28", "upload_time_iso_8601": "2016-09-11T06:02:28.429044Z", "url": "https://files.pythonhosted.org/packages/17/57/b25a716c16180a7956dee1758142601cb92593c1df904813acb11ed78dbb/myterm-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "b45d8a501fd855979dcdbe005c1351c1", "sha256": "d7f292ce4e1b911d6acff1fe93c8ee85a43e0183f75dab23b3c172b826fda188"}, "downloads": -1, "filename": "myterm-0.2.8.tar.gz", "has_sig": false, "md5_digest": "b45d8a501fd855979dcdbe005c1351c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24615, "upload_time": "2016-09-25T11:44:44", "upload_time_iso_8601": "2016-09-25T11:44:44.450651Z", "url": "https://files.pythonhosted.org/packages/2a/3e/65159ff76b273d31f7555c6f103f62a68f7db0c0c4f11b8c4fd2354f3bbf/myterm-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "23624638e31bcb3e698448c37940ab91", "sha256": "3215efbd891cd6413c3c01e963f6cdeeffd01bf48784e3a0100a780daf5fe549"}, "downloads": -1, "filename": "myterm-0.2.9.tar.gz", "has_sig": false, "md5_digest": "23624638e31bcb3e698448c37940ab91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24612, "upload_time": "2016-10-01T12:18:19", "upload_time_iso_8601": "2016-10-01T12:18:19.099014Z", "url": "https://files.pythonhosted.org/packages/dc/ca/c581aa0d10a56cb935192e4691d16c74b8f287ade67077c27a15849373b5/myterm-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ad39b04f4fe4352f163eabc266228090", "sha256": "80937800f03d6a8556968ce6658c1a992e8d49d09003e1fc4403139da774e463"}, "downloads": -1, "filename": "myterm-0.3.0.zip", "has_sig": false, "md5_digest": "ad39b04f4fe4352f163eabc266228090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28147, "upload_time": "2016-10-05T13:03:04", "upload_time_iso_8601": "2016-10-05T13:03:04.171680Z", "url": "https://files.pythonhosted.org/packages/3b/cd/1e824956220c44c10e61565f7042a647c1bf16803f8c23f56906848ce02b/myterm-0.3.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad39b04f4fe4352f163eabc266228090", "sha256": "80937800f03d6a8556968ce6658c1a992e8d49d09003e1fc4403139da774e463"}, "downloads": -1, "filename": "myterm-0.3.0.zip", "has_sig": false, "md5_digest": "ad39b04f4fe4352f163eabc266228090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28147, "upload_time": "2016-10-05T13:03:04", "upload_time_iso_8601": "2016-10-05T13:03:04.171680Z", "url": "https://files.pythonhosted.org/packages/3b/cd/1e824956220c44c10e61565f7042a647c1bf16803f8c23f56906848ce02b/myterm-0.3.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:47:59 2020"}