{"info": {"author": "Suvarchal", "author_email": "suvarchal.kumar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# RAMADDA_publish\nAllows automated ways of publishing content to a RAMADDA server.\nhttps://suvarchal.github.io/RAMADDA_publish/\n\n    Usage: \n\n       ramadda_publish [-h] [-groupas {plain,casestudy}] [-a ATTACHMENT]\n                       [-ramadda RAMADDA] [-user USER] [-password PASSWORD]\n                       publish_file entryid\n\n\n       positional arguments:\n\n       publish_file          Publish a file or directory or multiple files (with a\n                             unix pattern) to a RAMADDA server;Currently supports\n                             publishing IDV bundles, Jupyter notebooks, gridded\n                             data files(netcdf,grib...), csv files, other formats\n                             are published as plain files\n\n       entryid               Parent entryid string on a RAMADDA server.It should\n                             contain just the string NOT entire url path.NOTE:\n                             RAMADDA_USER needs to have permissions for publishing\n                             the file on the RAMADDA server\n\n       optional arguments:\n       -h, --help            show this help message and exit\n       -groupas {plain,casestudy}\n                             when the published file is a directory, it can be\n                             either a plain directory or a casestudy type of\n                             directory. (default: plain)\n       -a ATTACHMENT, --attachment ATTACHMENT\n                             Publish this file or file pattern as an\n                             attachment.NOTE: Number of files and attachments\n                             should be the same.Currently only image files are\n                             supported (default: None)\n       -ramadda RAMADDA, --ramadda RAMADDA\n                             The RAMADDA server.By default RAMADDA environment\n                             variable is used, if it is absent the url\n                             https://weather.rsmas.miami.edu/repositoryis used.\n                             (default: None)\n       -user USER, --user USER\n                             User for RAMADDA, by default, if exists, the\n                             environment variable RAMADDA_USER is used as a user.\n                             (default: None)\n       -password PASSWORD, --password PASSWORD\n                             Password for -user or RAMADDA_USER, by default, if\n                             exists, the environment variable RAMADDA_PASSWORD is\n                             used as a user password. (default: None)\n\n    Some examples: \n    To publish a file at an entryid of a ramadda server\n        ramadda_publish file_to_publish publish_at_entryid\n\n    To publish files with pattern say '*.zidv'  at an entryid of a ramadda server\n        ramadda_publish '*.zidc' publish_at_entryid\n    note the quotes while using a pattern\n\n    To publish a file at an entryid of a ramadda server with an attachment\n        ramadda_publish file_to_publish publish_at_entryid -a attachment_file\n\n    To publish a files with a pattern say '*.zidv' with corresponding attachment pattern '*.gif'  \n    at an entryid of a ramadda server\n        ramadda_publish '*.zidv' publish_at_entryid -a '*.gif'\n    note the number of files for pattern should be same for attachments\n\n    To publish a directory at an entryid of a ramadda server as a simple directory with all files within.\n        ramadda_publish directory_to_publish publish_at_entryid  \n\n    To publish a directory at an entryid of a ramadda server as a case study directory with all files within.\n        ramadda_publish directory_to_publish publish_at_entryid -groupas casestudy`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/suvarchal/RAMADDA_publish", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ramadda-publish", "package_url": "https://pypi.org/project/ramadda-publish/", "platform": "", "project_url": "https://pypi.org/project/ramadda-publish/", "project_urls": {"Homepage": "https://github.com/suvarchal/RAMADDA_publish"}, "release_url": "https://pypi.org/project/ramadda-publish/1.5/", "requires_dist": null, "requires_python": "", "summary": "python script to make automated entries to ramadda", "version": "1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RAMADDA_publish</h1>\n<p>Allows automated ways of publishing content to a RAMADDA server.\n<a href=\"https://suvarchal.github.io/RAMADDA_publish/\" rel=\"nofollow\">https://suvarchal.github.io/RAMADDA_publish/</a></p>\n<pre><code>Usage: \n\n   ramadda_publish [-h] [-groupas {plain,casestudy}] [-a ATTACHMENT]\n                   [-ramadda RAMADDA] [-user USER] [-password PASSWORD]\n                   publish_file entryid\n\n\n   positional arguments:\n\n   publish_file          Publish a file or directory or multiple files (with a\n                         unix pattern) to a RAMADDA server;Currently supports\n                         publishing IDV bundles, Jupyter notebooks, gridded\n                         data files(netcdf,grib...), csv files, other formats\n                         are published as plain files\n\n   entryid               Parent entryid string on a RAMADDA server.It should\n                         contain just the string NOT entire url path.NOTE:\n                         RAMADDA_USER needs to have permissions for publishing\n                         the file on the RAMADDA server\n\n   optional arguments:\n   -h, --help            show this help message and exit\n   -groupas {plain,casestudy}\n                         when the published file is a directory, it can be\n                         either a plain directory or a casestudy type of\n                         directory. (default: plain)\n   -a ATTACHMENT, --attachment ATTACHMENT\n                         Publish this file or file pattern as an\n                         attachment.NOTE: Number of files and attachments\n                         should be the same.Currently only image files are\n                         supported (default: None)\n   -ramadda RAMADDA, --ramadda RAMADDA\n                         The RAMADDA server.By default RAMADDA environment\n                         variable is used, if it is absent the url\n                         https://weather.rsmas.miami.edu/repositoryis used.\n                         (default: None)\n   -user USER, --user USER\n                         User for RAMADDA, by default, if exists, the\n                         environment variable RAMADDA_USER is used as a user.\n                         (default: None)\n   -password PASSWORD, --password PASSWORD\n                         Password for -user or RAMADDA_USER, by default, if\n                         exists, the environment variable RAMADDA_PASSWORD is\n                         used as a user password. (default: None)\n\nSome examples: \nTo publish a file at an entryid of a ramadda server\n    ramadda_publish file_to_publish publish_at_entryid\n\nTo publish files with pattern say '*.zidv'  at an entryid of a ramadda server\n    ramadda_publish '*.zidc' publish_at_entryid\nnote the quotes while using a pattern\n\nTo publish a file at an entryid of a ramadda server with an attachment\n    ramadda_publish file_to_publish publish_at_entryid -a attachment_file\n\nTo publish a files with a pattern say '*.zidv' with corresponding attachment pattern '*.gif'  \nat an entryid of a ramadda server\n    ramadda_publish '*.zidv' publish_at_entryid -a '*.gif'\nnote the number of files for pattern should be same for attachments\n\nTo publish a directory at an entryid of a ramadda server as a simple directory with all files within.\n    ramadda_publish directory_to_publish publish_at_entryid  \n\nTo publish a directory at an entryid of a ramadda server as a case study directory with all files within.\n    ramadda_publish directory_to_publish publish_at_entryid -groupas casestudy`\n</code></pre>\n\n          </div>"}, "last_serial": 6036754, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ce31079db1836fa63267423c825ecae4", "sha256": "e9a5a4c7d17a8e97d23e09ea398060c959ae9f7499be701a8f85ff9c0d62d59e"}, "downloads": -1, "filename": "ramadda_publish-1.0.tar.gz", "has_sig": false, "md5_digest": "ce31079db1836fa63267423c825ecae4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4837, "upload_time": "2018-05-18T14:24:43", "upload_time_iso_8601": "2018-05-18T14:24:43.459800Z", "url": "https://files.pythonhosted.org/packages/68/ef/499cff85320d5428366dd1e11ed03f0e4acd46601b79786a0bc7b4dd20de/ramadda_publish-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "fae1d76ac11146edd380c2058a3774c2", "sha256": "4dd2e41cc93f1c8eef2b39c08d94886f93c1c136eeeb2fa54e066dd061e87cfc"}, "downloads": -1, "filename": "ramadda_publish-1.1.tar.gz", "has_sig": false, "md5_digest": "fae1d76ac11146edd380c2058a3774c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4839, "upload_time": "2018-05-18T14:40:01", "upload_time_iso_8601": "2018-05-18T14:40:01.017196Z", "url": "https://files.pythonhosted.org/packages/21/a9/59f7954c3d34209c77c5dcd9caf96ead1480ae754367c408e0af400cdbcb/ramadda_publish-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "81586f94bdea0dc6389de05a38d92141", "sha256": "4b893d72438b06fcd9d657d73c25f17043d1f0bc8947f96837b118fda154f0a0"}, "downloads": -1, "filename": "ramadda_publish-1.2.tar.gz", "has_sig": false, "md5_digest": "81586f94bdea0dc6389de05a38d92141", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4830, "upload_time": "2018-05-18T14:46:29", "upload_time_iso_8601": "2018-05-18T14:46:29.604074Z", "url": "https://files.pythonhosted.org/packages/bc/4d/0116e23640fc5ac794385e6587e93b994cfa423b28bf816c90646bcb252b/ramadda_publish-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "788ca8c38c79ebd8492c74f7695428f2", "sha256": "2b20781bfcb9ec617bc0114a2417b5398435156826051c69907d0ceaa62f348a"}, "downloads": -1, "filename": "ramadda_publish-1.3.tar.gz", "has_sig": false, "md5_digest": "788ca8c38c79ebd8492c74f7695428f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4833, "upload_time": "2018-05-18T14:58:35", "upload_time_iso_8601": "2018-05-18T14:58:35.428656Z", "url": "https://files.pythonhosted.org/packages/5d/a0/8d25874122505eef66c7b24830b0ba739508b06a1b508a04f922c30dbf3b/ramadda_publish-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "7487e6871b5fdfb1cee613dccc4f18e3", "sha256": "08c30a427d95894fa0d03fe72b765bc43c43d39b01a4d72681da9c549a3a38c6"}, "downloads": -1, "filename": "ramadda_publish-1.4.tar.gz", "has_sig": false, "md5_digest": "7487e6871b5fdfb1cee613dccc4f18e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4992, "upload_time": "2018-08-31T15:03:06", "upload_time_iso_8601": "2018-08-31T15:03:06.358831Z", "url": "https://files.pythonhosted.org/packages/c5/98/a0138f86c9a8d9254a3f4ab08e6d3c6cf6c6ee17ec2103b92524520561f4/ramadda_publish-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "9ecda0d6ffe66e88ff182d9b543cf775", "sha256": "f9275c867b9fdf15d0464f36aa8af13f208831971bf28256321224ea277eeae3"}, "downloads": -1, "filename": "ramadda_publish-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9ecda0d6ffe66e88ff182d9b543cf775", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6766, "upload_time": "2019-10-27T12:12:31", "upload_time_iso_8601": "2019-10-27T12:12:31.914618Z", "url": "https://files.pythonhosted.org/packages/2c/e5/f66be3d79d1a45a46c695972c45cc143ca5803ae88a25c9dd2954c85372d/ramadda_publish-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bb1be0031dd8cbe234a0d637fbae23d", "sha256": "90393e5aa6f38252060d69ccbd6d7dfee48f14a26150713a0ade5698e77deaef"}, "downloads": -1, "filename": "ramadda_publish-1.5.tar.gz", "has_sig": false, "md5_digest": "9bb1be0031dd8cbe234a0d637fbae23d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5259, "upload_time": "2019-10-27T12:12:33", "upload_time_iso_8601": "2019-10-27T12:12:33.583791Z", "url": "https://files.pythonhosted.org/packages/99/09/791646a84a129b08b3761e2c2aeb090e1bc78c452a2b3c14dba63b3243f1/ramadda_publish-1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ecda0d6ffe66e88ff182d9b543cf775", "sha256": "f9275c867b9fdf15d0464f36aa8af13f208831971bf28256321224ea277eeae3"}, "downloads": -1, "filename": "ramadda_publish-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9ecda0d6ffe66e88ff182d9b543cf775", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6766, "upload_time": "2019-10-27T12:12:31", "upload_time_iso_8601": "2019-10-27T12:12:31.914618Z", "url": "https://files.pythonhosted.org/packages/2c/e5/f66be3d79d1a45a46c695972c45cc143ca5803ae88a25c9dd2954c85372d/ramadda_publish-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bb1be0031dd8cbe234a0d637fbae23d", "sha256": "90393e5aa6f38252060d69ccbd6d7dfee48f14a26150713a0ade5698e77deaef"}, "downloads": -1, "filename": "ramadda_publish-1.5.tar.gz", "has_sig": false, "md5_digest": "9bb1be0031dd8cbe234a0d637fbae23d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5259, "upload_time": "2019-10-27T12:12:33", "upload_time_iso_8601": "2019-10-27T12:12:33.583791Z", "url": "https://files.pythonhosted.org/packages/99/09/791646a84a129b08b3761e2c2aeb090e1bc78c452a2b3c14dba63b3243f1/ramadda_publish-1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:45 2020"}