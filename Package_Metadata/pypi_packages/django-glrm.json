{"info": {"author": "M.A. Heshmatkhah", "author_email": "maheshmatkhah.prg@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "====================================================\nDjango Global Login Required Middleware |Doc_Badge|_\n====================================================\n\nDjango Global Login Required Middleware (django-glrm) is a Django middleware that make all views and URLs login required.\n\nIt's common in Django that most of the site's pages are protected, with just a few exceptions of pages that remain public (e.g. login page, etc.).\nIt can be quite tedious to decorate all of the views with ``@login_required``, and it can be easy to forget to decorate some of them.\n\nSo, you can use **Django Global Login Required Middleware** to make all page login required excep some of them.\n\nDocumentation_ is avalible at `Read The Docs <http://django-glrm.readthedocs.io/>`_.\n\nQuick start\n-----------\n\n1. Install Django Global Login Required Middleware::\n\n    $ pip install django-glrm\n\n2. Add \"global_login_required.GlobalLoginRequiredMiddleware\" to your MIDDLEWARE setting like this::\n\n    MIDDLEWARE = [\n        ...\n        'global_login_required.GlobalLoginRequiredMiddleware',\n    ]\n\n3. Start the development server and visit http://127.0.0.1:8000/, \nnow all your pages are login required and you will see the login page.\n\n.. |Doc_Badge| image:: https://readthedocs.org/projects/django-glrm/badge/?version=latest\n.. _Doc_Badge: http://django-glrm.readthedocs.io/\n.. _Documentation: http://django-glrm.readthedocs.io/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "django-glrm", "package_url": "https://pypi.org/project/django-glrm/", "platform": "", "project_url": "https://pypi.org/project/django-glrm/", "project_urls": null, "release_url": "https://pypi.org/project/django-glrm/1.1.3/", "requires_dist": null, "requires_python": "", "summary": "A Django middleware that make all views and URLs login required.", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django Global Login Required Middleware (django-glrm) is a Django middleware that make all views and URLs login required.</p>\n<p>It\u2019s common in Django that most of the site\u2019s pages are protected, with just a few exceptions of pages that remain public (e.g. login page, etc.).\nIt can be quite tedious to decorate all of the views with <tt>@login_required</tt>, and it can be easy to forget to decorate some of them.</p>\n<p>So, you can use <strong>Django Global Login Required Middleware</strong> to make all page login required excep some of them.</p>\n<p><a href=\"http://django-glrm.readthedocs.io/\" rel=\"nofollow\">Documentation</a> is avalible at <a href=\"http://django-glrm.readthedocs.io/\" rel=\"nofollow\">Read The Docs</a>.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Install Django Global Login Required Middleware:</p>\n<pre>$ pip install django-glrm\n</pre>\n</li>\n<li><p>Add \u201cglobal_login_required.GlobalLoginRequiredMiddleware\u201d to your MIDDLEWARE setting like this:</p>\n<pre>MIDDLEWARE = [\n    ...\n    'global_login_required.GlobalLoginRequiredMiddleware',\n]\n</pre>\n</li>\n</ol>\n<p>3. Start the development server and visit <a href=\"http://127.0.0.1:8000/\" rel=\"nofollow\">http://127.0.0.1:8000/</a>,\nnow all your pages are login required and you will see the login page.</p>\n</div>\n\n          </div>"}, "last_serial": 3856980, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "c3203bc3d7d0aab242650872276987c7", "sha256": "aca399e8792cef4f3cb87dbd39e7425a93a82ebc9d0b5f72e0e5cd89b60de73e"}, "downloads": -1, "filename": "django-glrm-1.1.2.tar.gz", "has_sig": false, "md5_digest": "c3203bc3d7d0aab242650872276987c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16297, "upload_time": "2018-04-04T14:43:30", "upload_time_iso_8601": "2018-04-04T14:43:30.015186Z", "url": "https://files.pythonhosted.org/packages/a1/fa/623209130a408a2e1f1df5631d46042a97450a92ee333e711574c8949035/django-glrm-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "fa98de462002237c8a6bf9ae4bccf375", "sha256": "e35831a74d0248a8eb4d5f9d5821d556c28c68cd6de9afc0527ea073c58a8bc5"}, "downloads": -1, "filename": "django-glrm-1.1.3.tar.gz", "has_sig": false, "md5_digest": "fa98de462002237c8a6bf9ae4bccf375", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13356, "upload_time": "2018-05-12T17:14:07", "upload_time_iso_8601": "2018-05-12T17:14:07.156032Z", "url": "https://files.pythonhosted.org/packages/53/01/3864e91c4a45d8393ca11061588fb755c351cc9510f3a4bd07ca304d4c77/django-glrm-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa98de462002237c8a6bf9ae4bccf375", "sha256": "e35831a74d0248a8eb4d5f9d5821d556c28c68cd6de9afc0527ea073c58a8bc5"}, "downloads": -1, "filename": "django-glrm-1.1.3.tar.gz", "has_sig": false, "md5_digest": "fa98de462002237c8a6bf9ae4bccf375", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13356, "upload_time": "2018-05-12T17:14:07", "upload_time_iso_8601": "2018-05-12T17:14:07.156032Z", "url": "https://files.pythonhosted.org/packages/53/01/3864e91c4a45d8393ca11061588fb755c351cc9510f3a4bd07ca304d4c77/django-glrm-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:51 2020"}