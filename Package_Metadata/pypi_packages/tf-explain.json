{"info": {"author": "Rapha\u00ebl Meudec", "author_email": "raphaelm@sicara.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# tf-explain\n\n[![Pypi Version](https://img.shields.io/pypi/v/tf-explain.svg)](https://pypi.org/project/tf-explain/)\n[![Build Status](https://api.travis-ci.org/sicara/tf-explain.svg?branch=master)](https://travis-ci.org/sicara/tf-explain)\n[![Documentation Status](https://readthedocs.org/projects/tf-explain/badge/?version=latest)](https://tf-explain.readthedocs.io/en/latest/?badge=latest)\n![Python Versions](https://img.shields.io/badge/python-3.6%20|%203.7-%23EBBD68.svg)\n![Tensorflow Versions](https://img.shields.io/badge/tensorflow-2.0.0%20|%202.1.0-blue.svg)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\n__tf-explain__ implements interpretability methods as Tensorflow 2.0 callbacks to __ease neural network's understanding__.  \nSee [Introducing tf-explain, Interpretability for Tensorflow 2.0](https://blog.sicara.com/tf-explain-interpretability-tensorflow-2-9438b5846e35)\n\n__Documentation__: https://tf-explain.readthedocs.io\n\n## Installation\n\n__tf-explain__ is available on PyPi as an alpha release. To install it:\n\n```bash\nvirtualenv venv -p python3.6\npip install tf-explain\n```\n\ntf-explain is compatible with Tensorflow 2. It is not declared as a dependency\nto let you choose between CPU and GPU versions. Additionally to the previous install, run:\n\n```bash\n# For CPU or GPU\npip install tensorflow==2.1.0\n```\n\n## Available Methods\n\n1. [Activations Visualization](#activations-visualization)\n1. [Vanilla Gradients](#vanilla-gradients)\n1. [Gradients*Inputs](#gradients-inputs)\n1. [Occlusion Sensitivity](#occlusion-sensitivity)\n1. [Grad CAM (Class Activation Maps)](#grad-cam)\n1. [SmoothGrad](#smoothgrad)\n1. [Integrated Gradients](#integrated-gradients)\n\n### Activations Visualization\n\n> Visualize how a given input comes out of a specific activation layer\n\n```python\nfrom tf_explain.callbacks.activations_visualization import ActivationsVisualizationCallback\n\nmodel = [...]\n\ncallbacks = [\n    ActivationsVisualizationCallback(\n        validation_data=(x_val, y_val),\n        layers_name=[\"activation_1\"],\n        output_dir=output_dir,\n    ),\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<p align=\"center\">\n    <img src=\"./docs/assets/activations_visualisation.png\" width=\"400\" />\n</p>\n\n\n### Vanilla Gradients\n\n> Visualize gradients importance on input image\n\n```python\nfrom tf_explain.callbacks.vanilla_gradients import VanillaGradientsCallback\n\nmodel = [...]\n\ncallbacks = [\n    VanillaGradientsCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        output_dir=output_dir,\n    ),\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<p align=\"center\">\n    <img src=\"./docs/assets/vanilla_gradients.png\" width=\"200\" />\n</p>\n\n\n### Gradients*Inputs\n\n> Variant of [Vanilla Gradients](#vanilla-gradients) ponderating gradients with input values\n\n```python\nfrom tf_explain.callbacks.gradients_inputs import GradientsInputsCallback\n\nmodel = [...]\n\ncallbacks = [\n    GradientsInputsCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        output_dir=output_dir,\n    ),\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<p align=\"center\">\n    <img src=\"./docs/assets/gradients_inputs.png\" width=\"200\" />\n</p>\n\n\n### Occlusion Sensitivity\n\n> Visualize how parts of the image affects neural network's confidence by occluding parts iteratively\n\n```python\nfrom tf_explain.callbacks.occlusion_sensitivity import OcclusionSensitivityCallback\n\nmodel = [...]\n\ncallbacks = [\n    OcclusionSensitivityCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        patch_size=4,\n        output_dir=output_dir,\n    ),\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<div align=\"center\">\n    <img src=\"./docs/assets/occlusion_sensitivity.png\" width=\"200\" />\n    <p style=\"color: grey; font-size:small; width:350px;\">Occlusion Sensitivity for Tabby class (stripes differentiate tabby cat from other ImageNet cat classes)</p>\n</div>\n\n### Grad CAM\n\n> Visualize how parts of the image affects neural network's output by looking into the activation maps\n\nFrom [Grad-CAM: Visual Explanations from Deep Networks\nvia Gradient-based Localization](https://arxiv.org/abs/1610.02391)\n\n```python\nfrom tf_explain.callbacks.grad_cam import GradCAMCallback\n\nmodel = [...]\n\ncallbacks = [\n    GradCAMCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        output_dir=output_dir,\n    )\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n\n<p align=\"center\">\n    <img src=\"./docs/assets/grad_cam.png\" width=\"200\" />\n</p>\n\n### SmoothGrad\n\n> Visualize stabilized gradients on the inputs towards the decision\n\nFrom [SmoothGrad: removing noise by adding noise](https://arxiv.org/abs/1706.03825)\n\n```python\nfrom tf_explain.callbacks.smoothgrad import SmoothGradCallback\n\nmodel = [...]\n\ncallbacks = [\n    SmoothGradCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        num_samples=20,\n        noise=1.,\n        output_dir=output_dir,\n    )\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<p align=\"center\">\n    <img src=\"./docs/assets/smoothgrad.png\" width=\"200\" />\n</p>\n\n### Integrated Gradients\n\n> Visualize an average of the gradients along the construction of the input towards the decision\n\nFrom [Axiomatic Attribution for Deep Networks](https://arxiv.org/pdf/1703.01365.pdf)\n\n```python\nfrom tf_explain.callbacks.integrated_gradients import IntegratedGradientsCallback\n\nmodel = [...]\n\ncallbacks = [\n    IntegratedGradientsCallback(\n        validation_data=(x_val, y_val),\n        class_index=0,\n        n_steps=20,\n        output_dir=output_dir,\n    )\n]\n\nmodel.fit(x_train, y_train, batch_size=2, epochs=2, callbacks=callbacks)\n```\n\n<p align=\"center\">\n    <img src=\"./docs/assets/integrated_gradients.png\" width=\"200\" />\n</p>\n\n\n## Visualizing the results\n\nWhen you use the callbacks, the output files are created in the `logs` directory.\n\nYou can see them in Tensorboard with the following command: `tensorboard --logdir logs`\n\n\n## Roadmap\n\n- [ ] Subclassing API Support\n- [ ] Additional Methods\n  - [ ] [GradCAM++](https://arxiv.org/abs/1710.11063)\n  - [x] [Integrated Gradients](https://arxiv.org/abs/1703.01365)\n  - [ ] [Guided SmoothGrad](https://arxiv.org/abs/1706.03825)\n  - [ ] [LRP](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0130140)\n- [ ] Auto-generated API Documentation & Documentation Testing\n\n## Contributing\n\nTo contribute to the project, please read the [dedicated section](./CONTRIBUTING.md).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sicara/tf-explain", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tf-explain", "package_url": "https://pypi.org/project/tf-explain/", "platform": "", "project_url": "https://pypi.org/project/tf-explain/", "project_urls": {"Homepage": "https://github.com/sicara/tf-explain"}, "release_url": "https://pypi.org/project/tf-explain/0.2.1/", "requires_dist": ["opencv-python (>=4.1.0.25)", "sphinx (>=2.1.2) ; extra == 'docs'", "sphinx-rtd-theme (>=0.4.3) ; extra == 'docs'", "bumpversion (>=0.5.3) ; extra == 'publish'", "twine (>=1.13.0) ; extra == 'publish'", "black (>=19.3b0) ; extra == 'tests'", "pylint (>=2.3.1) ; extra == 'tests'", "pytest (>=5.0.1) ; extra == 'tests'", "pytest-timeout (>=1.3.3) ; extra == 'tests'", "pytest-mock (>=1.10.4) ; extra == 'tests'", "pytest-cov (>=2.7.1) ; extra == 'tests'", "tox (>=3.13.2) ; extra == 'tests'"], "requires_python": ">=3.6", "summary": "Interpretability Callbacks for Tensorflow 2.0", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tf-explain</h1>\n<p><a href=\"https://pypi.org/project/tf-explain/\" rel=\"nofollow\"><img alt=\"Pypi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd07a21a447297784868c4ffae7333aeb139b55b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74662d6578706c61696e2e737667\"></a>\n<a href=\"https://travis-ci.org/sicara/tf-explain\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ac849290cd07954a7a1ac8647f45c5bdc05f1fa/68747470733a2f2f6170692e7472617669732d63692e6f72672f7369636172612f74662d6578706c61696e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://tf-explain.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d41c05f0e5f49665281d2052bc3db00755361a21/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74662d6578706c61696e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a8b2643c809961f0b828e1cbe31b67171762157/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e372d2532334542424436382e737667\">\n<img alt=\"Tensorflow Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd11e9432412d8d30f81fba2b78c127acf305196/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74656e736f72666c6f772d322e302e30253230253743253230322e312e302d626c75652e737667\">\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><strong>tf-explain</strong> implements interpretability methods as Tensorflow 2.0 callbacks to <strong>ease neural network's understanding</strong>.<br>\nSee <a href=\"https://blog.sicara.com/tf-explain-interpretability-tensorflow-2-9438b5846e35\" rel=\"nofollow\">Introducing tf-explain, Interpretability for Tensorflow 2.0</a></p>\n<p><strong>Documentation</strong>: <a href=\"https://tf-explain.readthedocs.io\" rel=\"nofollow\">https://tf-explain.readthedocs.io</a></p>\n<h2>Installation</h2>\n<p><strong>tf-explain</strong> is available on PyPi as an alpha release. To install it:</p>\n<pre>virtualenv venv -p python3.6\npip install tf-explain\n</pre>\n<p>tf-explain is compatible with Tensorflow 2. It is not declared as a dependency\nto let you choose between CPU and GPU versions. Additionally to the previous install, run:</p>\n<pre><span class=\"c1\"># For CPU or GPU</span>\npip install <span class=\"nv\">tensorflow</span><span class=\"o\">==</span><span class=\"m\">2</span>.1.0\n</pre>\n<h2>Available Methods</h2>\n<ol>\n<li><a href=\"#activations-visualization\" rel=\"nofollow\">Activations Visualization</a></li>\n<li><a href=\"#vanilla-gradients\" rel=\"nofollow\">Vanilla Gradients</a></li>\n<li><a href=\"#gradients-inputs\" rel=\"nofollow\">Gradients*Inputs</a></li>\n<li><a href=\"#occlusion-sensitivity\" rel=\"nofollow\">Occlusion Sensitivity</a></li>\n<li><a href=\"#grad-cam\" rel=\"nofollow\">Grad CAM (Class Activation Maps)</a></li>\n<li><a href=\"#smoothgrad\" rel=\"nofollow\">SmoothGrad</a></li>\n<li><a href=\"#integrated-gradients\" rel=\"nofollow\">Integrated Gradients</a></li>\n</ol>\n<h3>Activations Visualization</h3>\n<blockquote>\n<p>Visualize how a given input comes out of a specific activation layer</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.activations_visualization</span> <span class=\"kn\">import</span> <span class=\"n\">ActivationsVisualizationCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">ActivationsVisualizationCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"activation_1\"</span><span class=\"p\">],</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bf1c9ced895296d7a70a52af5ba889104d1d8f4/2e2f646f63732f6173736574732f61637469766174696f6e735f76697375616c69736174696f6e2e706e67\" width=\"400\">\n</p>\n<h3>Vanilla Gradients</h3>\n<blockquote>\n<p>Visualize gradients importance on input image</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.vanilla_gradients</span> <span class=\"kn\">import</span> <span class=\"n\">VanillaGradientsCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">VanillaGradientsCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dc85e24f71a6cfbae5f208f173e97cb765428c8/2e2f646f63732f6173736574732f76616e696c6c615f6772616469656e74732e706e67\" width=\"200\">\n</p>\n<h3>Gradients*Inputs</h3>\n<blockquote>\n<p>Variant of <a href=\"#vanilla-gradients\" rel=\"nofollow\">Vanilla Gradients</a> ponderating gradients with input values</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.gradients_inputs</span> <span class=\"kn\">import</span> <span class=\"n\">GradientsInputsCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">GradientsInputsCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd47db285044d8e8d4f4d4329e670ce8881079aa/2e2f646f63732f6173736574732f6772616469656e74735f696e707574732e706e67\" width=\"200\">\n</p>\n<h3>Occlusion Sensitivity</h3>\n<blockquote>\n<p>Visualize how parts of the image affects neural network's confidence by occluding parts iteratively</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.occlusion_sensitivity</span> <span class=\"kn\">import</span> <span class=\"n\">OcclusionSensitivityCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">OcclusionSensitivityCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">patch_size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<div>\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd34fd82af5fcfd1e9a46fa7d279b808c049048c/2e2f646f63732f6173736574732f6f63636c7573696f6e5f73656e73697469766974792e706e67\" width=\"200\">\n    <p>Occlusion Sensitivity for Tabby class (stripes differentiate tabby cat from other ImageNet cat classes)</p>\n</div>\n<h3>Grad CAM</h3>\n<blockquote>\n<p>Visualize how parts of the image affects neural network's output by looking into the activation maps</p>\n</blockquote>\n<p>From <a href=\"https://arxiv.org/abs/1610.02391\" rel=\"nofollow\">Grad-CAM: Visual Explanations from Deep Networks\nvia Gradient-based Localization</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.grad_cam</span> <span class=\"kn\">import</span> <span class=\"n\">GradCAMCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">GradCAMCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f200ffc1ea7915a70871f6a16931a3a9267edb62/2e2f646f63732f6173736574732f677261645f63616d2e706e67\" width=\"200\">\n</p>\n<h3>SmoothGrad</h3>\n<blockquote>\n<p>Visualize stabilized gradients on the inputs towards the decision</p>\n</blockquote>\n<p>From <a href=\"https://arxiv.org/abs/1706.03825\" rel=\"nofollow\">SmoothGrad: removing noise by adding noise</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.smoothgrad</span> <span class=\"kn\">import</span> <span class=\"n\">SmoothGradCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">SmoothGradCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">num_samples</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7e849a341ee4e95cde5f7a606078714c3be0581/2e2f646f63732f6173736574732f736d6f6f7468677261642e706e67\" width=\"200\">\n</p>\n<h3>Integrated Gradients</h3>\n<blockquote>\n<p>Visualize an average of the gradients along the construction of the input towards the decision</p>\n</blockquote>\n<p>From <a href=\"https://arxiv.org/pdf/1703.01365.pdf\" rel=\"nofollow\">Axiomatic Attribution for Deep Networks</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tf_explain.callbacks.integrated_gradients</span> <span class=\"kn\">import</span> <span class=\"n\">IntegratedGradientsCallback</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">IntegratedGradientsCallback</span><span class=\"p\">(</span>\n        <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_val</span><span class=\"p\">,</span> <span class=\"n\">y_val</span><span class=\"p\">),</span>\n        <span class=\"n\">class_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">n_steps</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"n\">callbacks</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea275172c417f5d56f26aee3665731dd936cd7d5/2e2f646f63732f6173736574732f696e74656772617465645f6772616469656e74732e706e67\" width=\"200\">\n</p>\n<h2>Visualizing the results</h2>\n<p>When you use the callbacks, the output files are created in the <code>logs</code> directory.</p>\n<p>You can see them in Tensorboard with the following command: <code>tensorboard --logdir logs</code></p>\n<h2>Roadmap</h2>\n<ul>\n<li>[ ] Subclassing API Support</li>\n<li>[ ] Additional Methods\n<ul>\n<li>[ ] <a href=\"https://arxiv.org/abs/1710.11063\" rel=\"nofollow\">GradCAM++</a></li>\n<li>[x] <a href=\"https://arxiv.org/abs/1703.01365\" rel=\"nofollow\">Integrated Gradients</a></li>\n<li>[ ] <a href=\"https://arxiv.org/abs/1706.03825\" rel=\"nofollow\">Guided SmoothGrad</a></li>\n<li>[ ] <a href=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0130140\" rel=\"nofollow\">LRP</a></li>\n</ul>\n</li>\n<li>[ ] Auto-generated API Documentation &amp; Documentation Testing</li>\n</ul>\n<h2>Contributing</h2>\n<p>To contribute to the project, please read the <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">dedicated section</a>.</p>\n\n          </div>"}, "last_serial": 6629229, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "7161612ce1595138fbf92aafd3869dd8", "sha256": "e8d86ee2f70d09aa8660d079c715ab7fd3d1808e6fb66f2b81443db719285607"}, "downloads": -1, "filename": "tf_explain-0.0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "7161612ce1595138fbf92aafd3869dd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19568, "upload_time": "2019-07-26T12:30:11", "upload_time_iso_8601": "2019-07-26T12:30:11.457773Z", "url": "https://files.pythonhosted.org/packages/26/8f/3005fc0a7dc1ffbe29ef794e09cf86e60158142c955f9ee9cdc4193a6aeb/tf_explain-0.0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66acba3cbf9f6095fac1294df5ae371d", "sha256": "15a46bfa5ac15fc7670238bd8d5aeadbe99822215610fd87a0b99e8022262307"}, "downloads": -1, "filename": "tf-explain-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "66acba3cbf9f6095fac1294df5ae371d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10276, "upload_time": "2019-07-26T12:30:12", "upload_time_iso_8601": "2019-07-26T12:30:12.844010Z", "url": "https://files.pythonhosted.org/packages/0a/6f/7753104e8db45355ae91fa1dd764e6c479590c8c989101d652e6a71e0f93/tf-explain-0.0.1a0.tar.gz", "yanked": false}], "0.0.2a0": [{"comment_text": "", "digests": {"md5": "731568d430d3a4856b85f3f02035bafb", "sha256": "8dcefe762ab9ed70e6999953bdc3a6181540de549cec871b45231849d7319f36"}, "downloads": -1, "filename": "tf_explain-0.0.2a0-py3-none-any.whl", "has_sig": false, "md5_digest": "731568d430d3a4856b85f3f02035bafb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28202, "upload_time": "2019-07-31T09:54:00", "upload_time_iso_8601": "2019-07-31T09:54:00.478985Z", "url": "https://files.pythonhosted.org/packages/af/54/cb2869ba0da4cf282af546441bab3e1d7a611bfc8811acd2345b41295038/tf_explain-0.0.2a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88d5a531e221239dc1371de16147a667", "sha256": "582a5b00fe00bae653c33be363b909c9d6a49ac79d4fb4476718823d8c684e37"}, "downloads": -1, "filename": "tf-explain-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "88d5a531e221239dc1371de16147a667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14444, "upload_time": "2019-07-31T09:54:02", "upload_time_iso_8601": "2019-07-31T09:54:02.491210Z", "url": "https://files.pythonhosted.org/packages/a3/3f/22186426aa9c8c6d0580211550a1014c4727e33d7d3a067e2323ecea0cbf/tf-explain-0.0.2a0.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f74a51ed4ebe38b11d8bb2180360ae97", "sha256": "df0ae3fa8bc98a615a703b091bc88ac00b934055bfdc4b7d489383e9f9af2ac7"}, "downloads": -1, "filename": "tf_explain-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f74a51ed4ebe38b11d8bb2180360ae97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38302, "upload_time": "2019-10-02T16:37:04", "upload_time_iso_8601": "2019-10-02T16:37:04.345736Z", "url": "https://files.pythonhosted.org/packages/1e/1e/556ec1e91b100de61941a7c91589ce29be1afdc53d52658d2045ba84a7ab/tf_explain-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13103be47f0b69651584092ee78bae56", "sha256": "3efb5542d6d2be91edbafab946027ee77bdf5aca0b42e004c6975095055de988"}, "downloads": -1, "filename": "tf-explain-0.1.0.tar.gz", "has_sig": false, "md5_digest": "13103be47f0b69651584092ee78bae56", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18379, "upload_time": "2019-10-02T16:37:07", "upload_time_iso_8601": "2019-10-02T16:37:07.142964Z", "url": "https://files.pythonhosted.org/packages/f2/5b/4af109d75830a56ba091cd6245039ed986d835b0568e8e15a523cb687ea1/tf-explain-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c228dd3861a7d8004b2791d7047517e3", "sha256": "2e2efeae1b4da17bc9028c28d81089a5212f630c8a89b29b2ca5483b6b08e60f"}, "downloads": -1, "filename": "tf_explain-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c228dd3861a7d8004b2791d7047517e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 41370, "upload_time": "2019-12-27T10:12:06", "upload_time_iso_8601": "2019-12-27T10:12:06.100312Z", "url": "https://files.pythonhosted.org/packages/20/ce/993daad6523c5dfe250e55746eb137677b66ac085670180d9fa17783170f/tf_explain-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "814aaa70bb92c2b3db8f18f13375785e", "sha256": "f85e25082684e049757569eb31d77f95c14f2762ca21f7ae7f4dfd69d996d264"}, "downloads": -1, "filename": "tf-explain-0.2.0.tar.gz", "has_sig": false, "md5_digest": "814aaa70bb92c2b3db8f18f13375785e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19747, "upload_time": "2019-12-27T10:12:07", "upload_time_iso_8601": "2019-12-27T10:12:07.787064Z", "url": "https://files.pythonhosted.org/packages/67/b8/0ec0f308457bda9133d91a745385d0b3000e8fff6b1e4d22d9174f31e4dd/tf-explain-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "232ae1f3282ece9549239c1086ea450e", "sha256": "627890132d6d484b1e4a056b539661f6a0b7220ea08ddb0e686cf4ba1f698c05"}, "downloads": -1, "filename": "tf_explain-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "232ae1f3282ece9549239c1086ea450e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 41655, "upload_time": "2020-02-14T09:04:51", "upload_time_iso_8601": "2020-02-14T09:04:51.329053Z", "url": "https://files.pythonhosted.org/packages/1d/08/f77da1c8d29ba5b125e72b61b105e7514663562adac2bbbce04e424a37bc/tf_explain-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c3d710ed746757548e4a744f9e47792", "sha256": "2d658aa7275f4f7b0c956bc367709b281cf9e4ed71b0f43be073161cf04c7e0f"}, "downloads": -1, "filename": "tf-explain-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1c3d710ed746757548e4a744f9e47792", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19871, "upload_time": "2020-02-14T09:04:54", "upload_time_iso_8601": "2020-02-14T09:04:54.328563Z", "url": "https://files.pythonhosted.org/packages/1e/d4/20d9f199136f84c6042973217417e71829ebd0dec8409c83218c2d94500a/tf-explain-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "232ae1f3282ece9549239c1086ea450e", "sha256": "627890132d6d484b1e4a056b539661f6a0b7220ea08ddb0e686cf4ba1f698c05"}, "downloads": -1, "filename": "tf_explain-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "232ae1f3282ece9549239c1086ea450e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 41655, "upload_time": "2020-02-14T09:04:51", "upload_time_iso_8601": "2020-02-14T09:04:51.329053Z", "url": "https://files.pythonhosted.org/packages/1d/08/f77da1c8d29ba5b125e72b61b105e7514663562adac2bbbce04e424a37bc/tf_explain-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c3d710ed746757548e4a744f9e47792", "sha256": "2d658aa7275f4f7b0c956bc367709b281cf9e4ed71b0f43be073161cf04c7e0f"}, "downloads": -1, "filename": "tf-explain-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1c3d710ed746757548e4a744f9e47792", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19871, "upload_time": "2020-02-14T09:04:54", "upload_time_iso_8601": "2020-02-14T09:04:54.328563Z", "url": "https://files.pythonhosted.org/packages/1e/d4/20d9f199136f84c6042973217417e71829ebd0dec8409c83218c2d94500a/tf-explain-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:36 2020"}