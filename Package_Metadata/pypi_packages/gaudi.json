{"info": {"author": "Leonardo Giordani", "author_email": "giordani.leonardo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3"], "description": "Gaudi\n=====\n\n`Build Status <https://travis-ci.org/lgiordani/gaudi>`__\n`Version <https://github.com/lgiordani/gaudi>`__\n\nA helper library for Clean Architectures in Python\n\nFull documentation available at\nhttp://gaudilib.readthedocs.io/en/latest/\n\nAbout Gaudi\n-----------\n\nGaudi (pronounced /\u02c8\u0261a\u028adi/) is a library that provides some helper\nstructures to build projects based on a clean architecture in Python.\nThe very nature of a clean architecture is the opposite of a framework,\nso Gaudi provides the minimum amount of classes and methods to avoid\nboring repetition in your code.\n\nGaudi is opinionated, as some of the structures provided enforce minimum\nconventions, like requests being dictionary-like objects and responses\nhaving a category and a content. It is also extensible, however, as you\nare free to change the behaviour of the components at any time.\n\nAs you are following the clean architecture model you are free to build\nthe internal protocols and objects like you prefer. Using Gaudi saves\nyou some typing and enforces a minimum of conventions in your project.\nYou are free to use just some of the components of Gaudi without\nbreaking the clean architecture model.\n\nOrigin\n------\n\nIn 2016 I wrote `Clean architectures in Python: a step-by-step\nexample <http://blog.thedigitalcatonline.com/blog/2016/11/14/clean-architectures-in-python-a-step-by-step-example/>`__,\na detailed analysis of a clean architecture written in Python from\nscratch following a pure TDD methodology. Since then I created many\nsuccessful projects following this model, but I quickly realised that\nthere was a core of code that I copied from project to project (the\n``shared`` module in the original article). So I decided to try to clean\nit up and to publish it as a library.\n\nThe name is an homage to `Antoni\nGaud\u00ed <https://en.wikipedia.org/wiki/Antoni_Gaud%C3%AD>`__ a genius that\ngave the world some of the most beautiful architectural works ever\nconceived by men.\n\nDevelopment\n-----------\n\nGaudi is an helper library for clean architectures, so it provides the\nvery minimum amount of code to avoid repetitions among projects. This\nmeans that the library shouldn\u2019t grow too much in the future. There will\nbe bug fixes and maybe some new helpers if there are good use cases (no\npun intended) for them. I\u2019m however ready to be surprised, so it might\nbe that there are many other aspects of the clean architecture that can\nbe automated while keeping the nature of the whole methodology: clean\nseparation between layers.\n\nFeel free to submit issues or pull requests or to get in touch if you\nhave ideas about Gaudi. Maybe you can see what I can\u2019t! And thanks for\nusing Gaudi and the Clean Architecture model!\n\nInstallation\n------------\n\nGaudi is available for Python 3 through pip. Just create a virtual\nenvironment and run\n\n.. code:: sh\n\n   pip install gaudi\n\nContributing\n------------\n\nSee the CONTRIBUTING file for detailed information. Please remember that\nthis project is actively developed in the ``develop`` branch, so be sure\nto work there if you try to implement new feature of fix bugs.\n\n\n=======\nHistory\n=======\n\n1.0.1 (2019-06-26)\n------------------\n\n* Minor review of README and Python packaging\n\n1.0.0 (2018-08-01)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lgiordani/gaudi", "keywords": "gaudi", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "gaudi", "package_url": "https://pypi.org/project/gaudi/", "platform": "", "project_url": "https://pypi.org/project/gaudi/", "project_urls": {"Homepage": "https://github.com/lgiordani/gaudi"}, "release_url": "https://pypi.org/project/gaudi/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "A helper library for Clean Architectures in Python", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/lgiordani/gaudi\" rel=\"nofollow\">Build Status</a>\n<a href=\"https://github.com/lgiordani/gaudi\" rel=\"nofollow\">Version</a></p>\n<p>A helper library for Clean Architectures in Python</p>\n<p>Full documentation available at\n<a href=\"http://gaudilib.readthedocs.io/en/latest/\" rel=\"nofollow\">http://gaudilib.readthedocs.io/en/latest/</a></p>\n<div id=\"about-gaudi\">\n<h2>About Gaudi</h2>\n<p>Gaudi (pronounced /\u02c8\u0261a\u028adi/) is a library that provides some helper\nstructures to build projects based on a clean architecture in Python.\nThe very nature of a clean architecture is the opposite of a framework,\nso Gaudi provides the minimum amount of classes and methods to avoid\nboring repetition in your code.</p>\n<p>Gaudi is opinionated, as some of the structures provided enforce minimum\nconventions, like requests being dictionary-like objects and responses\nhaving a category and a content. It is also extensible, however, as you\nare free to change the behaviour of the components at any time.</p>\n<p>As you are following the clean architecture model you are free to build\nthe internal protocols and objects like you prefer. Using Gaudi saves\nyou some typing and enforces a minimum of conventions in your project.\nYou are free to use just some of the components of Gaudi without\nbreaking the clean architecture model.</p>\n</div>\n<div id=\"origin\">\n<h2>Origin</h2>\n<p>In 2016 I wrote <a href=\"http://blog.thedigitalcatonline.com/blog/2016/11/14/clean-architectures-in-python-a-step-by-step-example/\" rel=\"nofollow\">Clean architectures in Python: a step-by-step\nexample</a>,\na detailed analysis of a clean architecture written in Python from\nscratch following a pure TDD methodology. Since then I created many\nsuccessful projects following this model, but I quickly realised that\nthere was a core of code that I copied from project to project (the\n<tt>shared</tt> module in the original article). So I decided to try to clean\nit up and to publish it as a library.</p>\n<p>The name is an homage to <a href=\"https://en.wikipedia.org/wiki/Antoni_Gaud%C3%AD\" rel=\"nofollow\">Antoni\nGaud\u00ed</a> a genius that\ngave the world some of the most beautiful architectural works ever\nconceived by men.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Gaudi is an helper library for clean architectures, so it provides the\nvery minimum amount of code to avoid repetitions among projects. This\nmeans that the library shouldn\u2019t grow too much in the future. There will\nbe bug fixes and maybe some new helpers if there are good use cases (no\npun intended) for them. I\u2019m however ready to be surprised, so it might\nbe that there are many other aspects of the clean architecture that can\nbe automated while keeping the nature of the whole methodology: clean\nseparation between layers.</p>\n<p>Feel free to submit issues or pull requests or to get in touch if you\nhave ideas about Gaudi. Maybe you can see what I can\u2019t! And thanks for\nusing Gaudi and the Clean Architecture model!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Gaudi is available for Python 3 through pip. Just create a virtual\nenvironment and run</p>\n<pre>pip install gaudi\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>See the CONTRIBUTING file for detailed information. Please remember that\nthis project is actively developed in the <tt>develop</tt> branch, so be sure\nto work there if you try to implement new feature of fix bugs.</p>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>1.0.1 (2019-06-26)</h2>\n<ul>\n<li>Minor review of README and Python packaging</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>1.0.0 (2018-08-01)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5448755, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ef840d67ecde07f69047a22c055b4ad1", "sha256": "6f52c8366f620fd89240bdcc5c212e58ee81554177f56a074e7096281ab87188"}, "downloads": -1, "filename": "gaudi-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ef840d67ecde07f69047a22c055b4ad1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3618, "upload_time": "2018-08-03T16:37:03", "upload_time_iso_8601": "2018-08-03T16:37:03.900277Z", "url": "https://files.pythonhosted.org/packages/01/63/650e4ee99e6a2fd270c66fc85710689fd74881636355bac64c4e275f9ae2/gaudi-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ab8e5898acbdcc1a8db771151654fb7", "sha256": "abb27e3a1c867146b5924ef9c5a17e6a140e948fc54f5df9c258d213ed11d7a8"}, "downloads": -1, "filename": "gaudi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2ab8e5898acbdcc1a8db771151654fb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6668, "upload_time": "2018-08-03T16:37:05", "upload_time_iso_8601": "2018-08-03T16:37:05.848629Z", "url": "https://files.pythonhosted.org/packages/aa/7f/79ea82887d3d3affda5db106f0e76ec0b5b52c2a4a5eea80e205bafee0a0/gaudi-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4c5a96a90a1a38d1363aa432b9cee187", "sha256": "5acb6459c8a95a3db97a056cd6a20b4d7af561a8d30508aff27b43327bb6d461"}, "downloads": -1, "filename": "gaudi-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c5a96a90a1a38d1363aa432b9cee187", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7196, "upload_time": "2019-06-25T22:13:23", "upload_time_iso_8601": "2019-06-25T22:13:23.342198Z", "url": "https://files.pythonhosted.org/packages/55/c4/782c827818a2fa1d25a0db3df87e56743ddb24c3f1d7a73a53d00d6580a7/gaudi-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e4a5cd56dd2de13479356116b0aac0d", "sha256": "d8ce92858a63e385f86b286cb471c8d5d7cba2eb6d931fa9a3f543f05006a81d"}, "downloads": -1, "filename": "gaudi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1e4a5cd56dd2de13479356116b0aac0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7953, "upload_time": "2019-06-25T22:13:25", "upload_time_iso_8601": "2019-06-25T22:13:25.044634Z", "url": "https://files.pythonhosted.org/packages/a6/d9/13f5ce5e9f5e2d836f87865cb390503b7ab47ae20cc2ed50eb58104effb5/gaudi-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c5a96a90a1a38d1363aa432b9cee187", "sha256": "5acb6459c8a95a3db97a056cd6a20b4d7af561a8d30508aff27b43327bb6d461"}, "downloads": -1, "filename": "gaudi-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c5a96a90a1a38d1363aa432b9cee187", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7196, "upload_time": "2019-06-25T22:13:23", "upload_time_iso_8601": "2019-06-25T22:13:23.342198Z", "url": "https://files.pythonhosted.org/packages/55/c4/782c827818a2fa1d25a0db3df87e56743ddb24c3f1d7a73a53d00d6580a7/gaudi-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e4a5cd56dd2de13479356116b0aac0d", "sha256": "d8ce92858a63e385f86b286cb471c8d5d7cba2eb6d931fa9a3f543f05006a81d"}, "downloads": -1, "filename": "gaudi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1e4a5cd56dd2de13479356116b0aac0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7953, "upload_time": "2019-06-25T22:13:25", "upload_time_iso_8601": "2019-06-25T22:13:25.044634Z", "url": "https://files.pythonhosted.org/packages/a6/d9/13f5ce5e9f5e2d836f87865cb390503b7ab47ae20cc2ed50eb58104effb5/gaudi-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:00 2020"}