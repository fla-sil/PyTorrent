{"info": {"author": "Robert Niederreiter", "author_email": "rnix@squarewave.at", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Tiles for use in pyramid framework\n==================================\n\nThis package provides rendering snippets of markup organized as tiles for the\npyramid framework.\n\nA tile is a piece of web application, i.e. a form, a navigation, etc.\n\nSplitting your application in such small and logic application parts makes it\neasy to re-use this application, simplifies application AJAXification and\nthe use of same application parts in different manners.\n\n.. image:: https://img.shields.io/pypi/v/cone.tile.svg\n    :target: https://pypi.python.org/pypi/cone.tile\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/dm/cone.tile.svg\n    :target: https://pypi.python.org/pypi/cone.tile\n    :alt: Number of PyPI downloads\n\n.. image:: https://travis-ci.org/bluedynamics/cone.tile.svg?branch=master\n    :target: https://travis-ci.org/bluedynamics/cone.tile\n\n.. image:: https://coveralls.io/repos/github/bluedynamics/cone.tile/badge.svg?branch=master\n    :target: https://coveralls.io/github/bluedynamics/cone.tile?branch=master\n\n\nUsage\n=====\n\n\nRegister tiles\n--------------\n\nA tile is registered similar to a pyramid view. Registration is done with the\nthe ``cone.tile.tile`` decorator on classes.\n\n.. code-block:: python\n\n    from cone.tile import tile\n    from cone.tile import Tile\n\n    @tile(\n        name='b_tile',\n        path='package:browser/templates/b_tile.pt',\n        permission='view',\n        strict=False)\n    class BTile(Tile):\n        pass\n\nThere also exists a ``cone.tile.register_tile`` function. It should not be used\ndirectly any more. ``tile`` decorator attaches this function to venusian for\ndeferred tile registration.\n\n.. code-block:: python\n\n    from cone.tile import register_tile\n\n    register_tile(\n        name='a_tile',\n        path='package:browser/templates/a_tile.pt',\n        permission='view')\n\n``tile`` decorator accepts the following arguments:\n\n**name**\n    Identifier of the tile (for later lookup).\n\n**path**\n    Either relative path to the template or absolute path or path prefixed\n    by the absolute package name delimeted by ':'. If ``path`` is used\n    ``attribute`` is ignored.\n\n**attribute**\n    Attribute on the given _class to be used to render the tile. Defaults to\n    ``render``.\n\n**interface**\n    Interface or class of the pyramid model the tile is registered for.\n\n**class_**\n    Class to be used to render the tile. usally ``cone.tile.Tile`` or a\n    subclass of. Promises to implement ``cone.tile.ITile``. When the ``tile``\n    decorator is used, the decorated class is expected as tile implementation.\n\n**permission**\n    Enables security checking for this tile. Defaults to ``view``. If set to\n    ``None`` security checks are disabled.\n\n**strict**\n    Wether to raise ``Forbidden`` or not if rendering is not permitted.\n    Defaults to ``True``. If set to ``False`` the exception is consumed and an\n    empty unicode string is returned.\n\nTiles can be overwritten later while application initialization by just\nregistering it again. This is useful for application theming and customization.\n\n\nRendering tiles\n---------------\n\nTile rendering with the ``render_tile`` function\n\n.. code-block:: python\n\n    from cone.tile import render_tile\n    rendered = render_tile(model, request, name)\n\nInside templates which are bound to the tile, more tiles can be rendered on\ncurrent model and request via ``tile``\n\n.. code-block:: html\n\n    <tal:sometile replace=\"structure tile('tilename')\" />\n\n\nThe Tile\n--------\n\nA tile is similar to what's known in the zope world as content provider.\n\nBefore rendering of the tile is done, the ``prepare`` function is called which\ncan be used to load data or whatever.\n\nFurther, the ``show`` flag is considered (which might have been set in the\n``prepare`` function) and rendering is skipped if it evaluates to ``False``.\n\n\nMore on rendering\n-----------------\n\nThere are helper functions for rendering which pass the tile renderer to\ntemplates for invoking child tiles and consider redirections.\n\nThe tile class provides a redirect function, which expects either a string\ncontaining a URL or a ``webob.exc.HTTPFound`` instance. This causes rendering\nof remaining tiles to be skipped and ``request.environ['redirect']`` to be set.\n\n**cone.tile.render_template**\n    Render template. Passes tile renderer to template. Considers redirection.\n    Returns empty string if redirection found.\n\n**cone.tile.render_template_to_response**\n    Render template to response. Passes tile renderer to template. Considers\n    redirection. Returns HTTPFound instance if redirection found, otherwise\n    rendered response.\n\n**cone.tile.render_to_response**\n    Renders some result to the response considering redirection. Returns\n    HTTPFound instance if redirection found, otherwise rendered response.\n\n\nContributors\n============\n\n- Robert Niederreiter <rnix [at] squarewave [dot] at>\n\n- Jens Klein <jens [at] bluedynamics [dot] com>\n\n- Attila Olah\n\n\n\nChangelog\n=========\n\n1.0 (2019-11-07)\n----------------\n\n- Drop pyramid support < 1.5.\n  [rnix, 2019-03-24]\n\n- Python 3 compatibility.\n  [rnix, 2019-03-24]\n\n- Do not use ``cgi`` module if replacement module ``html`` available.\n  [rnix, 2019-03-24]\n\n- Convert doctests to unittests.\n  [rnix, 2019-03-21]\n\n- ``tile`` decorator uses ``venusian`` to defer tile registration now.\n  [rnix, 2015-11-06]\n\n- Accept ``name`` as keyword instead of positional argument in\n  ``register_tile`` and ``tile`` decorator.\n  [rnix, 2015-11-06]\n\n- ``registerTile`` has been renamed to ``register_tile``.\n  [rnix, 2015-11-06]\n\n- Update to pyramid 1.5\n  [rnix, 2015-11-02]\n\n- Remove useless test case due to this change.\n  https://github.com/Pylons/pyramid/commit/4b552e539a1725356b9982261b73fd88de7d59a1#diff-bcda6948340ab38542fe18fd2365ac70R144\n  [rnix, 2015-11-02]\n\n\n0.9.6\n-----\n\n- Use ``traceback`` module instead of ``zope.exceptions`` to format\n  exceptions in ``render_template``.\n  [rnix, 2017-10-06]\n\n\n0.9.5\n-----\n\n- Remove ``log_exception`` utility and use registered ``IDebugLogger`` in\n  ``cone.tile._api.render_template`` for exception logging.\n  [rnix, 2017-03-24]\n\n\n0.9.4\n-----\n\n- Tile registration ``name`` is taken from ``Tile`` subclass if not given\n  in ``registerTile`` function and ``tile`` decorator.\n  [rnix, 2017-02-17]\n\n- ``name`` is now optional in ``registerTile`` function and ``tile`` decorator.\n  [rnix, 2017-02-17]\n\n- Default ``attribute`` is now ``None`` in ``registerTile`` function and\n  ``tile`` decorator to ensure considering ``attribute`` from ``Tile`` subclass\n  if set.\n  [rnix, 2017-02-17]\n\n- ``Tile.name``, ``Tile.path`` and ``Tile.attribute`` can be set on ``Tile``\n  subclass directly without being overwritten at tile registration if not\n  given.\n  [rnix, 2017-02-17]\n\n\n0.9.3\n-----\n\n- Errors caught in ``render_tile`` may contain umlaute. Properly decode error\n  string.\n  [rnix, 2017-02-13]\n\n\n0.9.2\n-----\n\n- Using and depending now on zope.exceptions to format tracebacks with\n  supplements.\n  [jensens, 2012-06-06]\n\n- Improved visibility of tracebacks, they appear now in the error log.\n  even if an expression like ```tal:replace=\"structure tile('editform')\"```\n  ate it, the traceback is logged. traceback supplements are rendered.\n  [jensens, 2012-06-05]\n\n- Removed superfluos try except\n  [jensens, 2012-06-05]\n\n- Fixed dependencies for integrated tests\n  [jensens, 2012-06-05]\n\n\n0.9.1\n-----\n\n- Tiles can be overwritten.\n  [rnix, 2012-05-22]\n\n- Use ``zope.interface.implementer`` instead of ``zope.interface.implements``.\n  [rnix, 2012-05-18]\n\n\n0.9\n---\n\n- Fit for pyramid 1.1 + 1.2\n  [rnix, 2011-09-08]\n\n- Documentation\n  [rnix, 2011-09-08]\n\n- Make it work\n  [jensens, rnix, et. al]\n\n\n\nLicense\n=======\n\nCopyright (c) 2009-2019, BlueDynamics Alliance, Austria\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this \n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this \n  list of conditions and the following disclaimer in the documentation and/or \n  other materials provided with the distribution.\n* Neither the name of the BlueDynamics Alliance nor the names of its \n  contributors may be used to endorse or promote products derived from this \n  software without specific prior written permission.\n      \nTHIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance ``AS IS`` AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bluedynamics/cone.tile", "keywords": "", "license": "Simplified BSD", "maintainer": "", "maintainer_email": "", "name": "cone.tile", "package_url": "https://pypi.org/project/cone.tile/", "platform": "", "project_url": "https://pypi.org/project/cone.tile/", "project_urls": {"Homepage": "https://github.com/bluedynamics/cone.tile"}, "release_url": "https://pypi.org/project/cone.tile/1.0/", "requires_dist": null, "requires_python": "", "summary": "Provide parts of a web application as tiles.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tiles-for-use-in-pyramid-framework\">\n<h2>Tiles for use in pyramid framework</h2>\n<p>This package provides rendering snippets of markup organized as tiles for the\npyramid framework.</p>\n<p>A tile is a piece of web application, i.e. a form, a navigation, etc.</p>\n<p>Splitting your application in such small and logic application parts makes it\neasy to re-use this application, simplifies application AJAXification and\nthe use of same application parts in different manners.</p>\n<a href=\"https://pypi.python.org/pypi/cone.tile\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d978db34e50947e18475c4a8f917329dad80c074/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6e652e74696c652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cone.tile\" rel=\"nofollow\"><img alt=\"Number of PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db9aa0673aaa711f3e489132a3d24289a090da43/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f636f6e652e74696c652e737667\"></a>\n<a href=\"https://travis-ci.org/bluedynamics/cone.tile\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bluedynamics/cone.tile.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b310c808c5eece8f171356701010d191b303643/68747470733a2f2f7472617669732d63692e6f72672f626c756564796e616d6963732f636f6e652e74696c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/bluedynamics/cone.tile?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/bluedynamics/cone.tile/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/525dd3bf69e95d629b4e6791adf9b0e932701735/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626c756564796e616d6963732f636f6e652e74696c652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"register-tiles\">\n<h3>Register tiles</h3>\n<p>A tile is registered similar to a pyramid view. Registration is done with the\nthe <tt>cone.tile.tile</tt> decorator on classes.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cone.tile</span> <span class=\"kn\">import</span> <span class=\"n\">tile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cone.tile</span> <span class=\"kn\">import</span> <span class=\"n\">Tile</span>\n\n<span class=\"nd\">@tile</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'b_tile'</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'package:browser/templates/b_tile.pt'</span><span class=\"p\">,</span>\n    <span class=\"n\">permission</span><span class=\"o\">=</span><span class=\"s1\">'view'</span><span class=\"p\">,</span>\n    <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">BTile</span><span class=\"p\">(</span><span class=\"n\">Tile</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>There also exists a <tt>cone.tile.register_tile</tt> function. It should not be used\ndirectly any more. <tt>tile</tt> decorator attaches this function to venusian for\ndeferred tile registration.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cone.tile</span> <span class=\"kn\">import</span> <span class=\"n\">register_tile</span>\n\n<span class=\"n\">register_tile</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'a_tile'</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'package:browser/templates/a_tile.pt'</span><span class=\"p\">,</span>\n    <span class=\"n\">permission</span><span class=\"o\">=</span><span class=\"s1\">'view'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>tile</tt> decorator accepts the following arguments:</p>\n<dl>\n<dt><strong>name</strong></dt>\n<dd>Identifier of the tile (for later lookup).</dd>\n<dt><strong>path</strong></dt>\n<dd>Either relative path to the template or absolute path or path prefixed\nby the absolute package name delimeted by \u2018:\u2019. If <tt>path</tt> is used\n<tt>attribute</tt> is ignored.</dd>\n<dt><strong>attribute</strong></dt>\n<dd>Attribute on the given _class to be used to render the tile. Defaults to\n<tt>render</tt>.</dd>\n<dt><strong>interface</strong></dt>\n<dd>Interface or class of the pyramid model the tile is registered for.</dd>\n<dt><strong>class_</strong></dt>\n<dd>Class to be used to render the tile. usally <tt>cone.tile.Tile</tt> or a\nsubclass of. Promises to implement <tt>cone.tile.ITile</tt>. When the <tt>tile</tt>\ndecorator is used, the decorated class is expected as tile implementation.</dd>\n<dt><strong>permission</strong></dt>\n<dd>Enables security checking for this tile. Defaults to <tt>view</tt>. If set to\n<tt>None</tt> security checks are disabled.</dd>\n<dt><strong>strict</strong></dt>\n<dd>Wether to raise <tt>Forbidden</tt> or not if rendering is not permitted.\nDefaults to <tt>True</tt>. If set to <tt>False</tt> the exception is consumed and an\nempty unicode string is returned.</dd>\n</dl>\n<p>Tiles can be overwritten later while application initialization by just\nregistering it again. This is useful for application theming and customization.</p>\n</div>\n<div id=\"rendering-tiles\">\n<h3>Rendering tiles</h3>\n<p>Tile rendering with the <tt>render_tile</tt> function</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cone.tile</span> <span class=\"kn\">import</span> <span class=\"n\">render_tile</span>\n<span class=\"n\">rendered</span> <span class=\"o\">=</span> <span class=\"n\">render_tile</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p>Inside templates which are bound to the tile, more tiles can be rendered on\ncurrent model and request via <tt>tile</tt></p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">tal:sometile</span> <span class=\"na\">replace</span><span class=\"o\">=</span><span class=\"s\">\"structure tile('tilename')\"</span> <span class=\"p\">/&gt;</span>\n</pre>\n</div>\n<div id=\"the-tile\">\n<h3>The Tile</h3>\n<p>A tile is similar to what\u2019s known in the zope world as content provider.</p>\n<p>Before rendering of the tile is done, the <tt>prepare</tt> function is called which\ncan be used to load data or whatever.</p>\n<p>Further, the <tt>show</tt> flag is considered (which might have been set in the\n<tt>prepare</tt> function) and rendering is skipped if it evaluates to <tt>False</tt>.</p>\n</div>\n<div id=\"more-on-rendering\">\n<h3>More on rendering</h3>\n<p>There are helper functions for rendering which pass the tile renderer to\ntemplates for invoking child tiles and consider redirections.</p>\n<p>The tile class provides a redirect function, which expects either a string\ncontaining a URL or a <tt>webob.exc.HTTPFound</tt> instance. This causes rendering\nof remaining tiles to be skipped and <tt><span class=\"pre\">request.environ['redirect']</span></tt> to be set.</p>\n<dl>\n<dt><strong>cone.tile.render_template</strong></dt>\n<dd>Render template. Passes tile renderer to template. Considers redirection.\nReturns empty string if redirection found.</dd>\n<dt><strong>cone.tile.render_template_to_response</strong></dt>\n<dd>Render template to response. Passes tile renderer to template. Considers\nredirection. Returns HTTPFound instance if redirection found, otherwise\nrendered response.</dd>\n<dt><strong>cone.tile.render_to_response</strong></dt>\n<dd>Renders some result to the response considering redirection. Returns\nHTTPFound instance if redirection found, otherwise rendered response.</dd>\n</dl>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Robert Niederreiter &lt;rnix [at] squarewave [dot] at&gt;</li>\n<li>Jens Klein &lt;jens [at] bluedynamics [dot] com&gt;</li>\n<li>Attila Olah</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0 (2019-11-07)</h3>\n<ul>\n<li>Drop pyramid support &lt; 1.5.\n[rnix, 2019-03-24]</li>\n<li>Python 3 compatibility.\n[rnix, 2019-03-24]</li>\n<li>Do not use <tt>cgi</tt> module if replacement module <tt>html</tt> available.\n[rnix, 2019-03-24]</li>\n<li>Convert doctests to unittests.\n[rnix, 2019-03-21]</li>\n<li><tt>tile</tt> decorator uses <tt>venusian</tt> to defer tile registration now.\n[rnix, 2015-11-06]</li>\n<li>Accept <tt>name</tt> as keyword instead of positional argument in\n<tt>register_tile</tt> and <tt>tile</tt> decorator.\n[rnix, 2015-11-06]</li>\n<li><tt>registerTile</tt> has been renamed to <tt>register_tile</tt>.\n[rnix, 2015-11-06]</li>\n<li>Update to pyramid 1.5\n[rnix, 2015-11-02]</li>\n<li>Remove useless test case due to this change.\n<a href=\"https://github.com/Pylons/pyramid/commit/4b552e539a1725356b9982261b73fd88de7d59a1#diff-bcda6948340ab38542fe18fd2365ac70R144\" rel=\"nofollow\">https://github.com/Pylons/pyramid/commit/4b552e539a1725356b9982261b73fd88de7d59a1#diff-bcda6948340ab38542fe18fd2365ac70R144</a>\n[rnix, 2015-11-02]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9.6</h3>\n<ul>\n<li>Use <tt>traceback</tt> module instead of <tt>zope.exceptions</tt> to format\nexceptions in <tt>render_template</tt>.\n[rnix, 2017-10-06]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9.5</h3>\n<ul>\n<li>Remove <tt>log_exception</tt> utility and use registered <tt>IDebugLogger</tt> in\n<tt>cone.tile._api.render_template</tt> for exception logging.\n[rnix, 2017-03-24]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.9.4</h3>\n<ul>\n<li>Tile registration <tt>name</tt> is taken from <tt>Tile</tt> subclass if not given\nin <tt>registerTile</tt> function and <tt>tile</tt> decorator.\n[rnix, 2017-02-17]</li>\n<li><tt>name</tt> is now optional in <tt>registerTile</tt> function and <tt>tile</tt> decorator.\n[rnix, 2017-02-17]</li>\n<li>Default <tt>attribute</tt> is now <tt>None</tt> in <tt>registerTile</tt> function and\n<tt>tile</tt> decorator to ensure considering <tt>attribute</tt> from <tt>Tile</tt> subclass\nif set.\n[rnix, 2017-02-17]</li>\n<li><tt>Tile.name</tt>, <tt>Tile.path</tt> and <tt>Tile.attribute</tt> can be set on <tt>Tile</tt>\nsubclass directly without being overwritten at tile registration if not\ngiven.\n[rnix, 2017-02-17]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.3</h3>\n<ul>\n<li>Errors caught in <tt>render_tile</tt> may contain umlaute. Properly decode error\nstring.\n[rnix, 2017-02-13]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.2</h3>\n<ul>\n<li>Using and depending now on zope.exceptions to format tracebacks with\nsupplements.\n[jensens, 2012-06-06]</li>\n<li>Improved visibility of tracebacks, they appear now in the error log.\neven if an expression like <tt><span class=\"pre\">`tal:replace=\"structure</span> <span class=\"pre\">tile('editform')\"`</span></tt>\nate it, the traceback is logged. traceback supplements are rendered.\n[jensens, 2012-06-05]</li>\n<li>Removed superfluos try except\n[jensens, 2012-06-05]</li>\n<li>Fixed dependencies for integrated tests\n[jensens, 2012-06-05]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9.1</h3>\n<ul>\n<li>Tiles can be overwritten.\n[rnix, 2012-05-22]</li>\n<li>Use <tt>zope.interface.implementer</tt> instead of <tt>zope.interface.implements</tt>.\n[rnix, 2012-05-18]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9</h3>\n<ul>\n<li>Fit for pyramid 1.1 + 1.2\n[rnix, 2011-09-08]</li>\n<li>Documentation\n[rnix, 2011-09-08]</li>\n<li>Make it work\n[jensens, rnix, et. al]</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2009-2019, BlueDynamics Alliance, Austria\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<ul>\n<li>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.</li>\n<li>Neither the name of the BlueDynamics Alliance nor the names of its\ncontributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance <tt>AS IS</tt> AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 6091674, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "6dfd0ca9e44cd44dc929a6a3740c5440", "sha256": "217cfb85b669560230cc626dfbe2f9969b2d9e1364f258e936dac92b0ebe5ed9"}, "downloads": -1, "filename": "cone.tile-0.9.tar.gz", "has_sig": false, "md5_digest": "6dfd0ca9e44cd44dc929a6a3740c5440", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13094, "upload_time": "2011-09-20T14:38:27", "upload_time_iso_8601": "2011-09-20T14:38:27.643156Z", "url": "https://files.pythonhosted.org/packages/b2/28/38aba6aacc4d39338cd18b9fa5bf478539d5d3b689c0fa01f2a42c79e4c1/cone.tile-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "77850197f2e3756b37f4272653f26aef", "sha256": "9e52b067ceda192f131b0c8dd2d717db26b80650f6a7eb842ebc1f1c77563e77"}, "downloads": -1, "filename": "cone.tile-0.9.1.tar.gz", "has_sig": false, "md5_digest": "77850197f2e3756b37f4272653f26aef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13377, "upload_time": "2012-05-30T11:22:01", "upload_time_iso_8601": "2012-05-30T11:22:01.019061Z", "url": "https://files.pythonhosted.org/packages/ee/44/74bf784f27dbd15138dfaa02f00ddfa0b5a9614b80bd13a483fdfd69cfc7/cone.tile-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "3964ba0e86ed9a0c4c979052867b8108", "sha256": "b6faae8c793b3d76e9cae51b5d212e4f2a55e491fb48243b5fbd379776443e1d"}, "downloads": -1, "filename": "cone.tile-0.9.2.tar.gz", "has_sig": false, "md5_digest": "3964ba0e86ed9a0c4c979052867b8108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13821, "upload_time": "2012-11-01T22:06:00", "upload_time_iso_8601": "2012-11-01T22:06:00.031799Z", "url": "https://files.pythonhosted.org/packages/ac/8e/09af7038398e4f656d07880431836bd5081c355063c2aa91d82f9d6718c5/cone.tile-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "2eaa5a8e710b14c835610bd01a686cbd", "sha256": "20888103dd22ffcbfb4c725f9c6221d6b5e73c8410eb1cc203de34121accd747"}, "downloads": -1, "filename": "cone.tile-0.9.3.tar.gz", "has_sig": false, "md5_digest": "2eaa5a8e710b14c835610bd01a686cbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13172, "upload_time": "2017-02-14T09:35:12", "upload_time_iso_8601": "2017-02-14T09:35:12.512835Z", "url": "https://files.pythonhosted.org/packages/8b/c7/26547604f138ec988f8d696d7993062605dd5a924435b224b66e332701f0/cone.tile-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "72db9ea6e8adf25237da78623d9f286a", "sha256": "49d7034979a31ed8208873b2d46526d3da1980a9aaa57648b4b78acae63ce993"}, "downloads": -1, "filename": "cone.tile-0.9.4.tar.gz", "has_sig": false, "md5_digest": "72db9ea6e8adf25237da78623d9f286a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14228, "upload_time": "2017-03-01T09:41:20", "upload_time_iso_8601": "2017-03-01T09:41:20.394597Z", "url": "https://files.pythonhosted.org/packages/4f/9c/cc601f2446b14828a97a6f4d81c9085d924f539cb20bfc0748c4c4d7dd53/cone.tile-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "9f62497bee148f83eebe70df2ff5ccd2", "sha256": "6658f6cc84e4e338780e06db463e70c5a66779748f320c42ea57855ed05e6f29"}, "downloads": -1, "filename": "cone.tile-0.9.5.tar.gz", "has_sig": false, "md5_digest": "9f62497bee148f83eebe70df2ff5ccd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14292, "upload_time": "2017-03-28T16:08:27", "upload_time_iso_8601": "2017-03-28T16:08:27.266621Z", "url": "https://files.pythonhosted.org/packages/c2/df/ff9570fded21cc9994ca4c94f05338ac29cf9549bc405695d3a10d0bebbc/cone.tile-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "1730776acc97a8ea600e988a5c543012", "sha256": "2f67161400fb125f0ceac2c0690982efe91e748406df285b769f4b23620dc432"}, "downloads": -1, "filename": "cone.tile-0.9.6.tar.gz", "has_sig": false, "md5_digest": "1730776acc97a8ea600e988a5c543012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15757, "upload_time": "2017-10-10T10:31:13", "upload_time_iso_8601": "2017-10-10T10:31:13.527168Z", "url": "https://files.pythonhosted.org/packages/58/68/218c07eecd211b725f5bd277f736c19c596508fd81dc687798c377744c2b/cone.tile-0.9.6.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "7410726eba83257a5e4f4b39f8a07a3e", "sha256": "b001fb1a34b7188c92f5a7f13bbe2898a9bbfde4bdc735911f223b2a138bee38"}, "downloads": -1, "filename": "cone.tile-1.0.tar.gz", "has_sig": false, "md5_digest": "7410726eba83257a5e4f4b39f8a07a3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18458, "upload_time": "2019-11-07T06:28:15", "upload_time_iso_8601": "2019-11-07T06:28:15.018779Z", "url": "https://files.pythonhosted.org/packages/27/f2/3308d6145d0701a46b3d64f8e2cc2d4ce3450c424fdf7c25fb17c6eae816/cone.tile-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7410726eba83257a5e4f4b39f8a07a3e", "sha256": "b001fb1a34b7188c92f5a7f13bbe2898a9bbfde4bdc735911f223b2a138bee38"}, "downloads": -1, "filename": "cone.tile-1.0.tar.gz", "has_sig": false, "md5_digest": "7410726eba83257a5e4f4b39f8a07a3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18458, "upload_time": "2019-11-07T06:28:15", "upload_time_iso_8601": "2019-11-07T06:28:15.018779Z", "url": "https://files.pythonhosted.org/packages/27/f2/3308d6145d0701a46b3d64f8e2cc2d4ce3450c424fdf7c25fb17c6eae816/cone.tile-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:01 2020"}