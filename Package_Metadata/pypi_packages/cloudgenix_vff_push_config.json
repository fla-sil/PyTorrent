{"info": {"author": "Aaron Edwards", "author_email": "cloudgenix_vff_push_config@ebob9.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "cloudgenix_vff_push_config\n----------------\n#### Synopsis\nHelper script to PUSH a Virtual Form Factor (VFF) config to a newly booted virtual ION waiting for config.\n\nAvailable methods:\n * Serial (requires knowledge of tty/pty path of serial port)\n   * Serial also requires PySerial module, which may need an additional install.\n * Telnet (KVM serial redirect to TCP port/telnet style)\n * virsh console (KVM/QEMU without serial)\n * SSH (for AWS/GCE/Azure - Can use password or private key.)\n\n#### Requirements\n* Active CloudGenix Account\n* Python >= 2.7 or >=3.6\n* Python modules:\n    * pyserial >= 3.0 - <https://pythonhosted.org/pyserial/>\n    * pexpect >= 4.0 - <https://pexpect.readthedocs.io/en/stable/>\n\n#### Installation\nAvailable via PIP - `pip install cloudgenix_vff_push_config`. \nPIP should add a `vff_push_config` or `vff_push_config.exe` command to the path.\n\n#### Examples\nExample configuration files for CloudGenix Virtual Form Factors (VFF) are in ./example_configs subdirectory.\nFor more info on the CloudGenix VFF config file options, see <https://support.cloudgenix.com>\n\n\nSerial example usage:\n```\naaron@partner-lab-traf:~/vff_push_config$ sudo vff_push_config serial --file ./example_configs/example.cfg --pty /dev/pts/2\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 373 chars from ./example_configs/example.cfg.\n[VFF_PUSH_SERIAL] Opening /dev/pts/2\n[VFF_PUSH_SERIAL] 1 Got config prompt. Continuing.\n[VFF_PUSH_SERIAL] Setting up config push.\n[VFF_PUSH_SERIAL] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n```\n\nTelnet example usage:\n```\naaron@partner-lab-traf:~/vff_push_config$ vff_push_config telnet --file ./example_configs/example.cfg --host 127.0.0.1 --port 4000\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 373 chars from ./example_configs/example.cfg.\n[VFF_PUSH_TELNET] Opening 127.0.0.1:4000\n[VFF_PUSH_TELNET] 127.0.0.1:4000 Opened\n[VFF_PUSH_TELNET] 1 Got config prompt. Continuing.\n[VFF_PUSH_TELNET] Setting up config push.\n[VFF_PUSH_TELNET] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n```\n\nVirsh console example usage:\n```\naaron@partner-lab-traf:~/vff_push_config$ vff_push_config virsh --domain  Test_script_kvm4_ion_1 --file example_configs/example.yaml\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 380 chars from example_configs/example.yaml.\n[VFF_PUSH_VIRSH] Launched '/usr/bin/virsh console Test_script_kvm4_ion_1', waiting for prompt.\n[VFF_PUSH_VIRSH] 1 Got config prompt. Continuing.\n[VFF_PUSH_VIRSH] Setting up config push.\n[VFF_PUSH_VIRSH] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n```\n\nSSH console example usage:\n```\naaron@partner-lab-traf:~/vff_push_config$ vff_push_config ssh --file example_configs/example.yaml --host 172.22.5.244 --user virtualsetup --privkey ../TME-LAB-CONTROLLER.pem\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 380 chars from example_configs/example.yaml.\n[VFF_PUSH_SSH] Connecting to virtualsetup@172.22.5.244:22, Password: No, Private Key: Yes. Waiting for prompt.\n[VFF_PUSH_SSH] 1 Got config prompt. Continuing.\n[VFF_PUSH_SSH] Setting up config push.\n[VFF_PUSH_SSH] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n```\n\nKVM/QEMU specific notes:\n * To set up serial port pty - add `--serial=pty` to virt-install command.\n   * To determine pty filename, do `virsh dumpxml \"VMNAME\" | grep console | grep pty`. Example Output: `<console type='pty' tty='/dev/pts/2'>`\n * To set up serial port telnet listener - add `--serial tcp,host=<IF IP or 0.0.0.0>:<TCP PORT>,mode=bind,protocol=telnet` to virt-install command.\n\n#### License\nMIT\n\n#### Version\nVersion | Changes\n------- | --------\n**1.1.1**| Fix parser_type and global config file data\n**1.1.0**| Updated with Dynamic menu item support, and minor fixes.\n**1.0.0**| Initial Release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ebob9/vff_push_config", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cloudgenix_vff_push_config", "package_url": "https://pypi.org/project/cloudgenix_vff_push_config/", "platform": "", "project_url": "https://pypi.org/project/cloudgenix_vff_push_config/", "project_urls": {"Homepage": "https://github.com/ebob9/vff_push_config"}, "release_url": "https://pypi.org/project/cloudgenix_vff_push_config/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Virtual Form Factor Config Push for CloudGenix", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>cloudgenix_vff_push_config</h2>\n<h4>Synopsis</h4>\n<p>Helper script to PUSH a Virtual Form Factor (VFF) config to a newly booted virtual ION waiting for config.</p>\n<p>Available methods:</p>\n<ul>\n<li>Serial (requires knowledge of tty/pty path of serial port)\n<ul>\n<li>Serial also requires PySerial module, which may need an additional install.</li>\n</ul>\n</li>\n<li>Telnet (KVM serial redirect to TCP port/telnet style)</li>\n<li>virsh console (KVM/QEMU without serial)</li>\n<li>SSH (for AWS/GCE/Azure - Can use password or private key.)</li>\n</ul>\n<h4>Requirements</h4>\n<ul>\n<li>Active CloudGenix Account</li>\n<li>Python &gt;= 2.7 or &gt;=3.6</li>\n<li>Python modules:\n<ul>\n<li>pyserial &gt;= 3.0 - <a href=\"https://pythonhosted.org/pyserial/\" rel=\"nofollow\">https://pythonhosted.org/pyserial/</a></li>\n<li>pexpect &gt;= 4.0 - <a href=\"https://pexpect.readthedocs.io/en/stable/\" rel=\"nofollow\">https://pexpect.readthedocs.io/en/stable/</a></li>\n</ul>\n</li>\n</ul>\n<h4>Installation</h4>\n<p>Available via PIP - <code>pip install cloudgenix_vff_push_config</code>.\nPIP should add a <code>vff_push_config</code> or <code>vff_push_config.exe</code> command to the path.</p>\n<h4>Examples</h4>\n<p>Example configuration files for CloudGenix Virtual Form Factors (VFF) are in ./example_configs subdirectory.\nFor more info on the CloudGenix VFF config file options, see <a href=\"https://support.cloudgenix.com\" rel=\"nofollow\">https://support.cloudgenix.com</a></p>\n<p>Serial example usage:</p>\n<pre><code>aaron@partner-lab-traf:~/vff_push_config$ sudo vff_push_config serial --file ./example_configs/example.cfg --pty /dev/pts/2\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 373 chars from ./example_configs/example.cfg.\n[VFF_PUSH_SERIAL] Opening /dev/pts/2\n[VFF_PUSH_SERIAL] 1 Got config prompt. Continuing.\n[VFF_PUSH_SERIAL] Setting up config push.\n[VFF_PUSH_SERIAL] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n</code></pre>\n<p>Telnet example usage:</p>\n<pre><code>aaron@partner-lab-traf:~/vff_push_config$ vff_push_config telnet --file ./example_configs/example.cfg --host 127.0.0.1 --port 4000\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 373 chars from ./example_configs/example.cfg.\n[VFF_PUSH_TELNET] Opening 127.0.0.1:4000\n[VFF_PUSH_TELNET] 127.0.0.1:4000 Opened\n[VFF_PUSH_TELNET] 1 Got config prompt. Continuing.\n[VFF_PUSH_TELNET] Setting up config push.\n[VFF_PUSH_TELNET] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n</code></pre>\n<p>Virsh console example usage:</p>\n<pre><code>aaron@partner-lab-traf:~/vff_push_config$ vff_push_config virsh --domain  Test_script_kvm4_ion_1 --file example_configs/example.yaml\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 380 chars from example_configs/example.yaml.\n[VFF_PUSH_VIRSH] Launched '/usr/bin/virsh console Test_script_kvm4_ion_1', waiting for prompt.\n[VFF_PUSH_VIRSH] 1 Got config prompt. Continuing.\n[VFF_PUSH_VIRSH] Setting up config push.\n[VFF_PUSH_VIRSH] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n</code></pre>\n<p>SSH console example usage:</p>\n<pre><code>aaron@partner-lab-traf:~/vff_push_config$ vff_push_config ssh --file example_configs/example.yaml --host 172.22.5.244 --user virtualsetup --privkey ../TME-LAB-CONTROLLER.pem\n[VFF_PUSH] Starting VFF Config Push script.\n[VFF_PUSH] Current directory is /home/aaron/vff_push_config\n[VFF_PUSH]   Successfully loaded 380 chars from example_configs/example.yaml.\n[VFF_PUSH_SSH] Connecting to virtualsetup@172.22.5.244:22, Password: No, Private Key: Yes. Waiting for prompt.\n[VFF_PUSH_SSH] 1 Got config prompt. Continuing.\n[VFF_PUSH_SSH] Setting up config push.\n[VFF_PUSH_SSH] Config successfully sent! Exiting.\naaron@partner-lab-traf:~/vff_push_config$\n</code></pre>\n<p>KVM/QEMU specific notes:</p>\n<ul>\n<li>To set up serial port pty - add <code>--serial=pty</code> to virt-install command.\n<ul>\n<li>To determine pty filename, do <code>virsh dumpxml \"VMNAME\" | grep console | grep pty</code>. Example Output: <code>&lt;console type='pty' tty='/dev/pts/2'&gt;</code></li>\n</ul>\n</li>\n<li>To set up serial port telnet listener - add <code>--serial tcp,host=&lt;IF IP or 0.0.0.0&gt;:&lt;TCP PORT&gt;,mode=bind,protocol=telnet</code> to virt-install command.</li>\n</ul>\n<h4>License</h4>\n<p>MIT</p>\n<h4>Version</h4>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Changes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>1.1.1</strong></td>\n<td>Fix parser_type and global config file data</td>\n</tr>\n<tr>\n<td><strong>1.1.0</strong></td>\n<td>Updated with Dynamic menu item support, and minor fixes.</td>\n</tr>\n<tr>\n<td><strong>1.0.0</strong></td>\n<td>Initial Release.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 4055280, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "24975361baf2341e4e3c6a2ea18e963b", "sha256": "556021b9396a1226cb0be2c0eb64b74372a2d5b9fd263282444ee32ac7fef82e"}, "downloads": -1, "filename": "cloudgenix_vff_push_config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "24975361baf2341e4e3c6a2ea18e963b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5927, "upload_time": "2018-04-11T22:54:16", "upload_time_iso_8601": "2018-04-11T22:54:16.019648Z", "url": "https://files.pythonhosted.org/packages/12/d8/33d290c0f35a35196c9553df40dc38488328cdb8579772b7e5f1ae5e207a/cloudgenix_vff_push_config-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "32a8eff200dab97e85438538357bf087", "sha256": "9ae982f5137e35881d02c4a8c2ff13a52aec9405ae2dabfd91aba17cd669d1fd"}, "downloads": -1, "filename": "cloudgenix_vff_push_config-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32a8eff200dab97e85438538357bf087", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7162, "upload_time": "2018-07-03T21:06:21", "upload_time_iso_8601": "2018-07-03T21:06:21.831594Z", "url": "https://files.pythonhosted.org/packages/c6/5e/881df65484eb59c8e1880a6d0b968aecc01b35e908f560e1ca1efb4b4eea/cloudgenix_vff_push_config-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8170890b7b34d1c34d38b7319b5f9ea", "sha256": "efde93f02879a262451095762e49bdaf760447272c696205990363120be5f826"}, "downloads": -1, "filename": "cloudgenix_vff_push_config-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e8170890b7b34d1c34d38b7319b5f9ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6681, "upload_time": "2018-07-03T21:06:22", "upload_time_iso_8601": "2018-07-03T21:06:22.992593Z", "url": "https://files.pythonhosted.org/packages/06/3d/f32b247c654e6d85a5f467fafa37c7e04219b29e07c1f4d9dba1e684c76b/cloudgenix_vff_push_config-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "db9c76bf283b54f26bb7398ad16b38cc", "sha256": "45c73bddbdf66a4513ccece04dc9528c6c4ccdf7ff3f5f05596536b08eebea62"}, "downloads": -1, "filename": "cloudgenix_vff_push_config-1.1.1.tar.gz", "has_sig": false, "md5_digest": "db9c76bf283b54f26bb7398ad16b38cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6695, "upload_time": "2018-07-09T16:57:11", "upload_time_iso_8601": "2018-07-09T16:57:11.335609Z", "url": "https://files.pythonhosted.org/packages/ca/d9/fe9291f0dea58a87fa0fbd1fe8d0d0bc19acfeab874c2ac6693a7ecbb7f0/cloudgenix_vff_push_config-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db9c76bf283b54f26bb7398ad16b38cc", "sha256": "45c73bddbdf66a4513ccece04dc9528c6c4ccdf7ff3f5f05596536b08eebea62"}, "downloads": -1, "filename": "cloudgenix_vff_push_config-1.1.1.tar.gz", "has_sig": false, "md5_digest": "db9c76bf283b54f26bb7398ad16b38cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6695, "upload_time": "2018-07-09T16:57:11", "upload_time_iso_8601": "2018-07-09T16:57:11.335609Z", "url": "https://files.pythonhosted.org/packages/ca/d9/fe9291f0dea58a87fa0fbd1fe8d0d0bc19acfeab874c2ac6693a7ecbb7f0/cloudgenix_vff_push_config-1.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:50 2020"}