{"info": {"author": "Cory Benfield", "author_email": "cory@lukasa.co.uk", "bugtrack_url": null, "classifiers": [], "description": "Requests-FTP\n============\n\nRequests-FTP is an implementation of a very stupid FTP transport adapter for\nuse with the awesome `Requests`_ Python library.\n\nThis library is *not* intended to be an example of Transport Adapters best\npractices. This library was cowboyed together in about 4 hours of total work,\nhas no tests, and relies on a few ugly hacks. Instead, it is intended as both\na starting point for future development and a useful example for how to\nimplement transport adapters.\n\nHere's how you use it:\n\n.. code-block:: pycon\n\n    >>> import requests\n    >>> import requests_ftp\n    >>> requests_ftp.monkeypatch_session()\n    >>> s = requests.Session()\n    >>> resp = s.list('ftp://127.0.0.1/', auth=('Lukasa', 'notmypass'))\n    >>> resp.status_code\n    '226'\n    >>> print resp.content\n    ...snip...\n    >>> resp = s.stor('ftp://127.0.0.1/test.txt', auth=('Lukasa', 'notmypass'),\n                       files={'file': open('report.txt', 'rb')})\n\n\nFeatures\n--------\n\nAlmost none!\n\n- Adds the FTP LIST, STOR, RETR and NLST verbs via a new FTP transport adapter.\n- Provides a function that monkeypatches the Requests Session object, exposing\n  helper methods much like the current ``Session.get()`` and ``Session.post()``\n  methods.\n- Piggybacks on standard Requests idioms: uses normal Requests models and\n  access methods, including the tuple form of authentication.\n\nDoes not provide:\n\n- Connection pooling! One new connection and multiple commands for each\n  request, including authentication. **Super** inefficient.\n- SFTP. Security is for the weak.\n- Less common commands.\n\nImportant Notes\n---------------\n\nMany corners have been cut in my rush to get this code finished. The most\nobvious problem is that this code does not have *any* tests. This is my highest\npriority for fixing.\n\nMore notably, we have the following important caveats:\n\n- The design of the Requests Transport Adapater means that the STOR method\n  has to un-encode a multipart form-data encoded body to get the file. This is\n  painful, and I haven't tested this thoroughly, so it might not work.\n- **Massive** assumptions have been made in the use of the STOR method. This\n  code assumes that there will only be one file included in the files argument.\n  It also requires that you provide the filename to save as as part of the URL.\n  This is single-handedly the most brittle part of this adapter.\n- This code is not optimised for performance AT ALL. There is some low-hanging\n  fruit here: we should be able to connection pool relatively easily, and we\n  can probably avoid making some of the requests we do.\n\nContributing\n------------\n\nPlease do! I would love for this to be developed further by anyone who is\ninterested. Wherever possible, please provide unit tests for your work (yes,\nthis is very much a 'do as I say, not as I do' kind of moment). Don't forget\nto add your name to AUTHORS.\n\nLicense\n-------\n\nTo maximise compatibility with Requests, this code is licensed under the Apache\nlicense. See LICENSE for more details.\n\n.. _`Requests`: https://github.com/kennethreitz/requests", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Lukasa/requests-ftp", "keywords": null, "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "requests-ftp", "package_url": "https://pypi.org/project/requests-ftp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/requests-ftp/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/Lukasa/requests-ftp"}, "release_url": "https://pypi.org/project/requests-ftp/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "FTP Transport Adapter for Requests.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Requests-FTP is an implementation of a very stupid FTP transport adapter for\nuse with the awesome <a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">Requests</a> Python library.</p>\n<p>This library is <em>not</em> intended to be an example of Transport Adapters best\npractices. This library was cowboyed together in about 4 hours of total work,\nhas no tests, and relies on a few ugly hacks. Instead, it is intended as both\na starting point for future development and a useful example for how to\nimplement transport adapters.</p>\n<p>Here\u2019s how you use it:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">requests_ftp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests_ftp</span><span class=\"o\">.</span><span class=\"n\">monkeypatch_session</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s1\">'ftp://127.0.0.1/'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'Lukasa'</span><span class=\"p\">,</span> <span class=\"s1\">'notmypass'</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n<span class=\"go\">'226'\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">content</span>\n<span class=\"go\">...snip...\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">stor</span><span class=\"p\">(</span><span class=\"s1\">'ftp://127.0.0.1/test.txt'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'Lukasa'</span><span class=\"p\">,</span> <span class=\"s1\">'notmypass'</span><span class=\"p\">),</span>\n<span class=\"go\">                   files={'file': open('report.txt', 'rb')})</span>\n</pre>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Almost none!</p>\n<ul>\n<li>Adds the FTP LIST, STOR, RETR and NLST verbs via a new FTP transport adapter.</li>\n<li>Provides a function that monkeypatches the Requests Session object, exposing\nhelper methods much like the current <tt>Session.get()</tt> and <tt>Session.post()</tt>\nmethods.</li>\n<li>Piggybacks on standard Requests idioms: uses normal Requests models and\naccess methods, including the tuple form of authentication.</li>\n</ul>\n<p>Does not provide:</p>\n<ul>\n<li>Connection pooling! One new connection and multiple commands for each\nrequest, including authentication. <strong>Super</strong> inefficient.</li>\n<li>SFTP. Security is for the weak.</li>\n<li>Less common commands.</li>\n</ul>\n</div>\n<div id=\"important-notes\">\n<h2>Important Notes</h2>\n<p>Many corners have been cut in my rush to get this code finished. The most\nobvious problem is that this code does not have <em>any</em> tests. This is my highest\npriority for fixing.</p>\n<p>More notably, we have the following important caveats:</p>\n<ul>\n<li>The design of the Requests Transport Adapater means that the STOR method\nhas to un-encode a multipart form-data encoded body to get the file. This is\npainful, and I haven\u2019t tested this thoroughly, so it might not work.</li>\n<li><strong>Massive</strong> assumptions have been made in the use of the STOR method. This\ncode assumes that there will only be one file included in the files argument.\nIt also requires that you provide the filename to save as as part of the URL.\nThis is single-handedly the most brittle part of this adapter.</li>\n<li>This code is not optimised for performance AT ALL. There is some low-hanging\nfruit here: we should be able to connection pool relatively easily, and we\ncan probably avoid making some of the requests we do.</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please do! I would love for this to be developed further by anyone who is\ninterested. Wherever possible, please provide unit tests for your work (yes,\nthis is very much a \u2018do as I say, not as I do\u2019 kind of moment). Don\u2019t forget\nto add your name to AUTHORS.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>To maximise compatibility with Requests, this code is licensed under the Apache\nlicense. See LICENSE for more details.</p>\n</div>\n\n          </div>"}, "last_serial": 1676659, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ffd1b1f27169c48fbdfac04e79af174b", "sha256": "723d1bdd2a9bba2a4f5f40b093561b99663cc16cab4aff5b0d131a9b7d63f11d"}, "downloads": -1, "filename": "requests-ftp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ffd1b1f27169c48fbdfac04e79af174b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5961, "upload_time": "2012-12-28T23:33:31", "upload_time_iso_8601": "2012-12-28T23:33:31.915104Z", "url": "https://files.pythonhosted.org/packages/3f/2e/7fad62bad38c6ad26562138cc390c0b11b7237ec45edbee087559835e19a/requests-ftp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cdbc3c993fb20f56c721c99446b2f346", "sha256": "693c89570a253cce94813a413b5c480565533f6c48106bb319a5114394a5a978"}, "downloads": -1, "filename": "requests-ftp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cdbc3c993fb20f56c721c99446b2f346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5975, "upload_time": "2012-12-28T23:42:00", "upload_time_iso_8601": "2012-12-28T23:42:00.131488Z", "url": "https://files.pythonhosted.org/packages/8c/98/bf96477e21d015df053685e35ca269fc28f4af537e83b08c1e2be33f940d/requests-ftp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "02ae0140e96c164bdd723580b16d47ee", "sha256": "39c956efa1ef11a1463eadc8cf0b01e1f95b4f7b1905cedb59848ea89e8f3428"}, "downloads": -1, "filename": "requests-ftp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "02ae0140e96c164bdd723580b16d47ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5975, "upload_time": "2012-12-28T23:44:56", "upload_time_iso_8601": "2012-12-28T23:44:56.123228Z", "url": "https://files.pythonhosted.org/packages/b7/a7/113e7214c9e65159c916b984bec1b4c27645b29862b0e5ac6e15be5511a2/requests-ftp-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a5eb7a540f796e8f94042d4c6d7d844a", "sha256": "2c0fb7290d882984fa53430c665e947d24c96892b9cd744838665c38fe3f2713"}, "downloads": -1, "filename": "requests-ftp-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a5eb7a540f796e8f94042d4c6d7d844a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6003, "upload_time": "2012-12-28T23:48:02", "upload_time_iso_8601": "2012-12-28T23:48:02.872711Z", "url": "https://files.pythonhosted.org/packages/ae/30/d77c44da61c09c42149040e81ba79a36c3d625a8b44489dd5cf46b386012/requests-ftp-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "69b74d13191f8dd02441e2852a25fe13", "sha256": "d2bfbe17d4751f55ccd7ea584f3d303bffebfca3ce2678f98a12970b912db824"}, "downloads": -1, "filename": "requests-ftp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "69b74d13191f8dd02441e2852a25fe13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6244, "upload_time": "2014-05-07T17:00:22", "upload_time_iso_8601": "2014-05-07T17:00:22.133627Z", "url": "https://files.pythonhosted.org/packages/90/b4/8288d01c104343da281ac84f7e19e18f1d60885d2673608965fdd18b52d9/requests-ftp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "16b87b45b69cb486ed91e8def6ce278c", "sha256": "7d48ae652f619081c2b48d2616d4994c358c4712416fb6ca4d1866460b3e2573"}, "downloads": -1, "filename": "requests-ftp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "16b87b45b69cb486ed91e8def6ce278c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7836, "upload_time": "2015-04-04T07:38:01", "upload_time_iso_8601": "2015-04-04T07:38:01.731109Z", "url": "https://files.pythonhosted.org/packages/09/94/9cd40231f585ba68ee40c1904388502fe6986dbb9f08533981dd57739170/requests-ftp-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1a52ad1219e696b5abd5449d1ccc0294", "sha256": "7504ceb5cba8a5c0135ed738596820a78c5f2be92d79b29f96ba99b183d8057a"}, "downloads": -1, "filename": "requests-ftp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1a52ad1219e696b5abd5449d1ccc0294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7850, "upload_time": "2015-08-13T21:02:08", "upload_time_iso_8601": "2015-08-13T21:02:08.294466Z", "url": "https://files.pythonhosted.org/packages/3d/ca/14b2ad1e93b5195eeaf56b86b7ecfd5ea2d5754a68d17aeb1e5b9f95b3cf/requests-ftp-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a52ad1219e696b5abd5449d1ccc0294", "sha256": "7504ceb5cba8a5c0135ed738596820a78c5f2be92d79b29f96ba99b183d8057a"}, "downloads": -1, "filename": "requests-ftp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1a52ad1219e696b5abd5449d1ccc0294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7850, "upload_time": "2015-08-13T21:02:08", "upload_time_iso_8601": "2015-08-13T21:02:08.294466Z", "url": "https://files.pythonhosted.org/packages/3d/ca/14b2ad1e93b5195eeaf56b86b7ecfd5ea2d5754a68d17aeb1e5b9f95b3cf/requests-ftp-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:06 2020"}