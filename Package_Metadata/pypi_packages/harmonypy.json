{"info": {"author": "Kamil Slowikowski", "author_email": "kslowikowski@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "harmonypy\n=========\n\n[![Latest PyPI Version][pb]][pypi] [![PyPI Downloads][db]][pypi]\n\n[pb]: https://img.shields.io/pypi/v/harmonypy.svg\n[pypi]: https://pypi.org/project/harmonypy/\n\n[db]: https://img.shields.io/pypi/dm/harmonypy?label=pypi%20downloads\n\nHarmony is an algorithm for integrating multiple high-dimensional datasets.\n\nharmonypy is a port of the [harmony] R package by [Ilya Korsunsky].\n\nExample\n-------\n\n<p align=\"center\">\n  <img src=\"https://i.imgur.com/lqReopf.gif\">\n</p>\n\nThis animation shows the Harmony alignment of three single-cell RNA-seq datasets from different donors.\n\n[\u2192 How to make this animation.](https://slowkow.com/notes/harmony-animation/)\n\nInstallation\n------------\n\nThis package has been tested with Python 3.7.\n\nUse [pip] to install:\n\n```bash\npip install harmonypy\n```\n\nUsage\n-----\n\nHere is a brief example using the data that comes with the R package:\n\n```python\n# Load data\nimport pandas as pd\n\nmeta_data = pd.read_csv(\"data/meta.tsv.gz\", sep = \"\\t\")\nvars_use = ['dataset']\n\n# meta_data\n#\n#                  cell_id dataset  nGene  percent_mito cell_type\n# 0    half_TGAAATTGGTCTAG    half   3664      0.017722    jurkat\n# 1    half_GCGATATGCTGATG    half   3858      0.029228      t293\n# 2    half_ATTTCTCTCACTAG    half   4049      0.015966    jurkat\n# 3    half_CGTAACGACGAGAG    half   3443      0.020379    jurkat\n# 4    half_ACGCCTTGTTTACC    half   2813      0.024774      t293\n# ..                   ...     ...    ...           ...       ...\n# 295  t293_TTACGTACGACACT    t293   4152      0.033997      t293\n# 296  t293_TAGAATTGTTGGTG    t293   3097      0.021769      t293\n# 297  t293_CGGATAACACCACA    t293   3157      0.020411      t293\n# 298  t293_GGTACTGAGTCGAT    t293   2685      0.027846      t293\n# 299  t293_ACGCTGCTTCTTAC    t293   3513      0.021240      t293\n\ndata_mat = pd.read_csv(\"data/pcs.tsv.gz\", sep = \"\\t\")\ndata_mat = np.array(data_mat)\n\n# data_mat[:5,:5]\n#\n# array([[ 0.0071695 , -0.00552724, -0.0036281 , -0.00798025,  0.00028931],\n#        [-0.011333  ,  0.00022233, -0.00073589, -0.00192452,  0.0032624 ],\n#        [ 0.0091214 , -0.00940727, -0.00106816, -0.0042749 , -0.00029096],\n#        [ 0.00866286, -0.00514987, -0.0008989 , -0.00821785, -0.00126997],\n#        [-0.00953977,  0.00222714, -0.00374373, -0.00028554,  0.00063737]])\n\n# meta_data.shape # 300 cells, 5 variables\n# (300, 5)\n#\n# data_mat.shape  # 300 cells, 20 PCs\n# (300, 20)\n\n# Run Harmony\nimport harmonypy as hm\nho = hm.run_harmony(data_mat, meta_data, vars_use)\n\n# Write the adjusted PCs to a new file.\nres = pd.DataFrame(ho.Z_corr)\nres.columns = ['X{}'.format(i + 1) for i in range(res.shape[1])]\nres.to_csv(\"data/adj.tsv.gz\", sep = \"\\t\", index = False)\n```\n\n[harmony]: https://github.com/immunogenomics/harmony\n[Ilya Korsunsky]: https://github.com/ilyakorsunsky\n[pip]: https://pip.readthedocs.io/\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/slowkow/harmonypy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "harmonypy", "package_url": "https://pypi.org/project/harmonypy/", "platform": "", "project_url": "https://pypi.org/project/harmonypy/", "project_urls": {"Homepage": "https://github.com/slowkow/harmonypy"}, "release_url": "https://pypi.org/project/harmonypy/0.0.4/", "requires_dist": ["pandas", "numpy", "scipy"], "requires_python": ">=3.6", "summary": "A data integration algorithm.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>harmonypy</h1>\n<p><a href=\"https://pypi.org/project/harmonypy/\" rel=\"nofollow\"><img alt=\"Latest PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62c3b7a0029880fee6f718ded23fc150a36d58ee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6861726d6f6e7970792e737667\"></a> <a href=\"https://pypi.org/project/harmonypy/\" rel=\"nofollow\"><img alt=\"PyPI Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d86d2247dc627e515d2db9fbdc96c64d1817789f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6861726d6f6e7970793f6c6162656c3d70797069253230646f776e6c6f616473\"></a></p>\n<p>Harmony is an algorithm for integrating multiple high-dimensional datasets.</p>\n<p>harmonypy is a port of the <a href=\"https://github.com/immunogenomics/harmony\" rel=\"nofollow\">harmony</a> R package by <a href=\"https://github.com/ilyakorsunsky\" rel=\"nofollow\">Ilya Korsunsky</a>.</p>\n<h2>Example</h2>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d74c9f120bfb3fc6d8ebc29bd6d1fb5079050772/68747470733a2f2f692e696d6775722e636f6d2f6c7152656f70662e676966\">\n</p>\n<p>This animation shows the Harmony alignment of three single-cell RNA-seq datasets from different donors.</p>\n<p><a href=\"https://slowkow.com/notes/harmony-animation/\" rel=\"nofollow\">\u2192 How to make this animation.</a></p>\n<h2>Installation</h2>\n<p>This package has been tested with Python 3.7.</p>\n<p>Use <a href=\"https://pip.readthedocs.io/\" rel=\"nofollow\">pip</a> to install:</p>\n<pre>pip install harmonypy\n</pre>\n<h2>Usage</h2>\n<p>Here is a brief example using the data that comes with the R package:</p>\n<pre><span class=\"c1\"># Load data</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">meta_data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"data/meta.tsv.gz\"</span><span class=\"p\">,</span> <span class=\"n\">sep</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"n\">vars_use</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'dataset'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># meta_data</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#                  cell_id dataset  nGene  percent_mito cell_type</span>\n<span class=\"c1\"># 0    half_TGAAATTGGTCTAG    half   3664      0.017722    jurkat</span>\n<span class=\"c1\"># 1    half_GCGATATGCTGATG    half   3858      0.029228      t293</span>\n<span class=\"c1\"># 2    half_ATTTCTCTCACTAG    half   4049      0.015966    jurkat</span>\n<span class=\"c1\"># 3    half_CGTAACGACGAGAG    half   3443      0.020379    jurkat</span>\n<span class=\"c1\"># 4    half_ACGCCTTGTTTACC    half   2813      0.024774      t293</span>\n<span class=\"c1\"># ..                   ...     ...    ...           ...       ...</span>\n<span class=\"c1\"># 295  t293_TTACGTACGACACT    t293   4152      0.033997      t293</span>\n<span class=\"c1\"># 296  t293_TAGAATTGTTGGTG    t293   3097      0.021769      t293</span>\n<span class=\"c1\"># 297  t293_CGGATAACACCACA    t293   3157      0.020411      t293</span>\n<span class=\"c1\"># 298  t293_GGTACTGAGTCGAT    t293   2685      0.027846      t293</span>\n<span class=\"c1\"># 299  t293_ACGCTGCTTCTTAC    t293   3513      0.021240      t293</span>\n\n<span class=\"n\">data_mat</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"data/pcs.tsv.gz\"</span><span class=\"p\">,</span> <span class=\"n\">sep</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"n\">data_mat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">data_mat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># data_mat[:5,:5]</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># array([[ 0.0071695 , -0.00552724, -0.0036281 , -0.00798025,  0.00028931],</span>\n<span class=\"c1\">#        [-0.011333  ,  0.00022233, -0.00073589, -0.00192452,  0.0032624 ],</span>\n<span class=\"c1\">#        [ 0.0091214 , -0.00940727, -0.00106816, -0.0042749 , -0.00029096],</span>\n<span class=\"c1\">#        [ 0.00866286, -0.00514987, -0.0008989 , -0.00821785, -0.00126997],</span>\n<span class=\"c1\">#        [-0.00953977,  0.00222714, -0.00374373, -0.00028554,  0.00063737]])</span>\n\n<span class=\"c1\"># meta_data.shape # 300 cells, 5 variables</span>\n<span class=\"c1\"># (300, 5)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># data_mat.shape  # 300 cells, 20 PCs</span>\n<span class=\"c1\"># (300, 20)</span>\n\n<span class=\"c1\"># Run Harmony</span>\n<span class=\"kn\">import</span> <span class=\"nn\">harmonypy</span> <span class=\"k\">as</span> <span class=\"nn\">hm</span>\n<span class=\"n\">ho</span> <span class=\"o\">=</span> <span class=\"n\">hm</span><span class=\"o\">.</span><span class=\"n\">run_harmony</span><span class=\"p\">(</span><span class=\"n\">data_mat</span><span class=\"p\">,</span> <span class=\"n\">meta_data</span><span class=\"p\">,</span> <span class=\"n\">vars_use</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Write the adjusted PCs to a new file.</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">ho</span><span class=\"o\">.</span><span class=\"n\">Z_corr</span><span class=\"p\">)</span>\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'X</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])]</span>\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"s2\">\"data/adj.tsv.gz\"</span><span class=\"p\">,</span> <span class=\"n\">sep</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6737774, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bf49315fb5429d97a929209a24da34df", "sha256": "80250a7f53db067188a62adf5f5fac419705845a712de2c72302431ab11d17f3"}, "downloads": -1, "filename": "harmonypy-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "bf49315fb5429d97a929209a24da34df", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 6840, "upload_time": "2019-12-19T18:05:30", "upload_time_iso_8601": "2019-12-19T18:05:30.233743Z", "url": "https://files.pythonhosted.org/packages/28/1d/cca8cfa6d78a6091977f3f45c97a6900933828013810d410a00689e8a8e7/harmonypy-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fb6cbb4f2103160fbe462ed6276ccfc", "sha256": "9a5dd485bb28c38de7ee723a1535309675e5fec56ade2f3f9df4e67cd8c28471"}, "downloads": -1, "filename": "harmonypy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fb6cbb4f2103160fbe462ed6276ccfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16001, "upload_time": "2019-12-19T18:05:27", "upload_time_iso_8601": "2019-12-19T18:05:27.753032Z", "url": "https://files.pythonhosted.org/packages/3b/b0/49c66c6c8abb74246010bb9b041f37ea656653d8e038f3d0c544d44e1d7d/harmonypy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "863240f84c2b8d17384fd41a722ec6d9", "sha256": "573d99beadf291095e7560976487f8498a5f85b7a53337030d4bafed4b4e8406"}, "downloads": -1, "filename": "harmonypy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "863240f84c2b8d17384fd41a722ec6d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3248, "upload_time": "2019-12-19T18:05:31", "upload_time_iso_8601": "2019-12-19T18:05:31.448390Z", "url": "https://files.pythonhosted.org/packages/40/75/27b027531f0a4af398e310a1a0561d1a35d97acc68acda0a9fd9ce995f91/harmonypy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "574ad72770fde18a980d13ab73daa46b", "sha256": "64b8b59dd2a6b840c09bfa2a5e5b8ccbcfd6d4d9e43d1a2d8c6843015b4d1caf"}, "downloads": -1, "filename": "harmonypy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "574ad72770fde18a980d13ab73daa46b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18222, "upload_time": "2019-12-20T21:02:19", "upload_time_iso_8601": "2019-12-20T21:02:19.906349Z", "url": "https://files.pythonhosted.org/packages/a4/6a/a8f64f6ee71c701c6ed24811b122962f60b250d1be360841720c4ca635de/harmonypy-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0d09a88f44b0e57690b9ce48164d66fe", "sha256": "83ac8e3ec49028a7016cf38d2d81cd4e0e021fe5ab1ef55ea6fe1ab34f303448"}, "downloads": -1, "filename": "harmonypy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0d09a88f44b0e57690b9ce48164d66fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19063, "upload_time": "2019-12-26T14:51:14", "upload_time_iso_8601": "2019-12-26T14:51:14.500324Z", "url": "https://files.pythonhosted.org/packages/f1/c1/9eb45ef8ad506e9c7d70db2f963dbd2b9a79c244c40fa3b22725a47981a5/harmonypy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bf527b11211c3236d3ee5a4eff6ac2d", "sha256": "98b9940c2ef9e3912888c5a0dc3c66015f36b36b0a60efc5118f2ea1dc4fdf2d"}, "downloads": -1, "filename": "harmonypy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9bf527b11211c3236d3ee5a4eff6ac2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6166, "upload_time": "2019-12-26T14:51:16", "upload_time_iso_8601": "2019-12-26T14:51:16.263632Z", "url": "https://files.pythonhosted.org/packages/12/96/972b835e4ceb9087e5f0cb586c04398ff6aa1d8348c30347068d2bde2499/harmonypy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "cc137345c91a5ec2259464fddc842fbd", "sha256": "bfa85561e638ac52ad344054a34c17285d70190c6f34d33212726906d4552433"}, "downloads": -1, "filename": "harmonypy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cc137345c91a5ec2259464fddc842fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20829, "upload_time": "2020-03-03T02:43:13", "upload_time_iso_8601": "2020-03-03T02:43:13.374026Z", "url": "https://files.pythonhosted.org/packages/64/cd/b133f34d3c888940b0f9cd869c98af4556755dffaf5803f2fc27907a7bd3/harmonypy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72f1a478a4cf5c8f323c90e6f6031f1e", "sha256": "4915dae8e83259a8dcda416ca1b0c611cdc8b1a8567d83258ce821250f15283c"}, "downloads": -1, "filename": "harmonypy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "72f1a478a4cf5c8f323c90e6f6031f1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22338, "upload_time": "2020-03-03T02:43:15", "upload_time_iso_8601": "2020-03-03T02:43:15.062600Z", "url": "https://files.pythonhosted.org/packages/42/f3/8d4e8fea378695c4620aadfed52251397b0bc6a6f7851ab98b200875bf77/harmonypy-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc137345c91a5ec2259464fddc842fbd", "sha256": "bfa85561e638ac52ad344054a34c17285d70190c6f34d33212726906d4552433"}, "downloads": -1, "filename": "harmonypy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cc137345c91a5ec2259464fddc842fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20829, "upload_time": "2020-03-03T02:43:13", "upload_time_iso_8601": "2020-03-03T02:43:13.374026Z", "url": "https://files.pythonhosted.org/packages/64/cd/b133f34d3c888940b0f9cd869c98af4556755dffaf5803f2fc27907a7bd3/harmonypy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72f1a478a4cf5c8f323c90e6f6031f1e", "sha256": "4915dae8e83259a8dcda416ca1b0c611cdc8b1a8567d83258ce821250f15283c"}, "downloads": -1, "filename": "harmonypy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "72f1a478a4cf5c8f323c90e6f6031f1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22338, "upload_time": "2020-03-03T02:43:15", "upload_time_iso_8601": "2020-03-03T02:43:15.062600Z", "url": "https://files.pythonhosted.org/packages/42/f3/8d4e8fea378695c4620aadfed52251397b0bc6a6f7851ab98b200875bf77/harmonypy-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:26 2020"}