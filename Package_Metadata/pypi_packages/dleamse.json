{"info": {"author": "BigBio Team", "author_email": "qinchunyuan1995@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# DLEAMSE\nA Deep LEArning-based Mass Spectra Embedder for spectral similarity scoring. \n\nDLEAMSE (based on Siamese Network) is trained and tested with a larger dataset from PRIDE Cluster. The repository stores the encoder and embedder scripts of DLEAMSE to encode and embed spectra.\n\n# Training data set\n\nA larger spectral set from PRIDE Cluster is used to construct the training and test data, which use high confidence spectra retrieved from high consistency clusters. We chose PRIDE Cluster data to train and test DLEAMSE, for two reasons: 1. The spectra in high consistency clusters are high confidence spectra. 2. The spectral set from PRIDE Cluster covers more species and instrument types. Two filters were used for retrieving high confidence spectra. The first filter controls the quality of collected clusters. We customized clustering-file-converter (https://github.com/spectra-cluster/clustering-file-converter) to retain the high-quality spectral clusters (cluster size >= 30, cluster ratio >= 0.8, and the total ions current (TIC) >= 0.2). The second filter eliminates duplicate clusters assigned with same peptide sequence, only one in the dupli-cates has been chosen, to ensure that the retained clusters are from different peptides. Then 113,362 clusters have been retrained from PRIDE Cluster release 201504. The needed spectra in clusters are acquired from the PRIDE Archive.\n\n# Model and Training\n\nIn DLEAMSE, Siamese network (Figure 1a) trains two same embedding models (Figure 1c) with shared weights, and spectra are encoded by the same encoder (Figure 1b) before the embedding. Based on the Euclidean distance between the pair of embedded spectra, the weights of embedding model is learned by contrastive loss function adapted from Hadsell et. al. that penalizes far-apart same-label spectra (label=1) and nearby different-label spectra (label=0). Back propagation from the loss function is used to update the weights in the network. The net-work is trained by stochastic gradient descent with the Adam update rule with a learning rate of 0.005. The codes are implemented in Python3 with the PyTorch framework.\n![model](https://github.com/bigbio/DLEAMSE/tree/master/src/dleamse/dleamse_model_references/model.png)\n\n# Testing\n![loss and test](https://github.com/bigbio/DLEAMSE/tree/master/src/dleamse/dleamse_model_references/loss_and_test.png)\n\n# Requirements\n\n- Python3.7 (or Anaconda3)\n- torch==1.0.0 (python -m pip install torch===1.0.0 torchvision===0.2.1 -f https://download.pytorch.org/whl/torch_stable.html)\n- pyteomics>=3.5.1\n- numpy>=1.13.3\n- numba>=0.45.0\n- faiss-gpu==1.5.3 (if you want to use faiss index making and searching function)\n- more_itertools==7.1.0\n\n# Installation\n\nDLEAMSE\u9225\u6a9a encoder and embedder have been packaged and uploaded to pypi library, the package\u9225\u6a9a name is [dleamse](https://pypi.org/project/dleamse/).\n\n`python -m pip install dleamse`\n\n# Usage\n\nThe model file of DLEAMSE: [080802_20_1000_NM500R_model.pkl](https://github.com/bigbio/DLEAMSE/tree/master/src/DLEAMSE/siamese_modle_reference)\nThe 500 reference spectra used in our project: [500_rfs_spectra.mgf](https://github.com/bigbio/DLEAMSE/tree/master/src/DLEAMSE/siamese_modle_reference)\n\n## Encode and Embed spectra, then write faiss index\n\n```python\n# -*- coding:utf8 -*-\nfrom dleamse.dleamse_encode_and_embed import encode_and_embed_spectra\nfrom dleamse.dleamse_encode_and_embed import SiameseNetwork2\nfrom dleamse.dleamse_faiss_index_writer import FaissWriteIndex\n\nif __name__ == '__main__':\n    # encode and embedded spectra\n     model = \"./dleamse_model_references/080802_20_1000_NM500R_model.pkl\"\n    prj = \"test\"\n    input_file = \"PXD003552_61576_ArchiveSpectrum.json\"\n    reference_spectra = \"./dleamse_model_references/0722_500_rf_spectra.mgf\"\n\n    encode_and_embed_spectra(model, prj, input_file, reference_spectra) # generate ids_usi, encoded_spectra and embedded_spectra data file\n\n    # faiss index writer\n    index_writer = FaissWriteIndex()\n\n    # create index from one or more embedded_spectra file\n    embedded_spectra_files_path = \"./IDMap_Index\"  # Path of embedded_spectra files, which is end with \"_embedded.txt\"\n    index_save_file = \"test_01_create_index.index\"\n    index_ids_save_file = \"test_01_create_ids_save.npy\"\n    index_writer.create_index_for_embedded_spectra(embedded_spectra_files_path, index_ids_save_file, index_save_file)\n\n    # add new embedded_spectra data to a raw index\n    raw_index = \"test_01_create_index.index\"\n    raw_ids_file = \"test_01_create_ids_save.npy\"\n    new_embedded_spectra_path = \"./IDMap_Index_2\"\n    output_index_ids_file = \"test_02_add_ids_save.npy\"\n    output_index_file = \"test_02_add_index.npy\"\n    index_writer.add_embedded_spectra_to_index(raw_index, raw_ids_file, new_embedded_spectra_path, output_index_ids_file, output_index_file)\n```\n\n\n# DLEAMSE's Scripts\n\n## **dleamse_encode_and_embed.py**:\n\nEncode and embed the spectra to vectors. This script support the spectra file with .mgf, .mzML and .json. By default, two or three files would be generated from this script, the spectra embedding vectors file , spectra usi file and the record file of spectra with missing charge. By default, GPU is used; the default directory of DLEASME model and 500 reference spectra file are in dleamse_model_references directory which is under current directory.<br>\nIn this example, the input spectra file is *PXD003552_61576_ArchiveSpectrum.json*, and the three generated files are: *PXD003552_61576_ArchiveSpectrum_embedded.txt*; *PXD003552_61576_ArchiveSpectrum_spectrum_usi.txt*; *PXD003552_61576_ArchiveSpectrum_miss_record.txt* (if exist the charge missing spectra) <br>\n```python\nfrom dleamse.dleamse_encode_and_embed import encode_and_embed_spectra\nfrom dleamse.dleamse_encode_and_embed import SiameseNetwork2\ndef test_encode_and_embeder():\n    # encode and embedded spectra\n    model = \"./dleamse_model_references/080802_20_1000_NM500R_model.pkl\"\n    prj = \"test\"\n    input_file = \"PXD003552_61576_ArchiveSpectrum.json\"\n    reference_spectra = \"./dleamse_model_references/0722_500_rf_spectra.mgf\"\n    embedded_vstack_data = encode_and_embed_spectra(model, prj, input_file, reference_spectra)\n\n```\n\n## **dleamse_index_writer.py**:\n\n```python\nfrom dleamse.dleamse_faiss_index_writer import FaissWriteIndex\n\ndef test_index_write():\n    # faiss index writer\n    index_writer = FaissWriteIndex()\n\n    # create index from one or more embedded_spectra file\n    embedded_spectra_files_path = \"./IDMap_Index\"  # Path of embedded_spectra files, which is end with \"_embedded.txt\"\n    index_save_file = \"test_01_create_index.index\"\n    index_ids_save_file = \"test_01_create_ids_save.npy\"\n    index_writer.create_index_for_embedded_spectra(embedded_spectra_files_path, index_ids_save_file, index_save_file)\n\n    # add new embedded_spectra data to a raw index\n    raw_index = \"test_01_create_index.index\"\n    raw_ids_file = \"test_01_create_ids_save.npy\"\n    new_embedded_spectra_path = \"./IDMap_Index_2\"\n    output_index_ids_file = \"test_02_add_ids_save.npy\"\n    output_index_file = \"test_02_add_index.npy\"\n    index_writer.add_embedded_spectra_to_index(raw_index, raw_ids_file, new_embedded_spectra_path, output_index_ids_file, output_index_file)\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bigbio/DLEAMSE", "keywords": "", "license": "'Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "dleamse", "package_url": "https://pypi.org/project/dleamse/", "platform": "any", "project_url": "https://pypi.org/project/dleamse/", "project_urls": {"Homepage": "https://github.com/bigbio/DLEAMSE"}, "release_url": "https://pypi.org/project/dleamse/0.3.3/", "requires_dist": ["numba (>=0.45)", "numpy (>=1.13.3)", "pyteomics (>=3.5.1)", "torch (==1.0.0)", "faiss-gpu (>=1.5.3)", "more-itertools (==7.1.0)"], "requires_python": ">=3.5", "summary": "dleamse's encoding and embedding methods, and dleamse's faiss index (IndexIDMap type) write.", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DLEAMSE</h1>\n<p>A Deep LEArning-based Mass Spectra Embedder for spectral similarity scoring.</p>\n<p>DLEAMSE (based on Siamese Network) is trained and tested with a larger dataset from PRIDE Cluster. The repository stores the encoder and embedder scripts of DLEAMSE to encode and embed spectra.</p>\n<h1>Training data set</h1>\n<p>A larger spectral set from PRIDE Cluster is used to construct the training and test data, which use high confidence spectra retrieved from high consistency clusters. We chose PRIDE Cluster data to train and test DLEAMSE, for two reasons: 1. The spectra in high consistency clusters are high confidence spectra. 2. The spectral set from PRIDE Cluster covers more species and instrument types. Two filters were used for retrieving high confidence spectra. The first filter controls the quality of collected clusters. We customized clustering-file-converter (<a href=\"https://github.com/spectra-cluster/clustering-file-converter\" rel=\"nofollow\">https://github.com/spectra-cluster/clustering-file-converter</a>) to retain the high-quality spectral clusters (cluster size &gt;= 30, cluster ratio &gt;= 0.8, and the total ions current (TIC) &gt;= 0.2). The second filter eliminates duplicate clusters assigned with same peptide sequence, only one in the dupli-cates has been chosen, to ensure that the retained clusters are from different peptides. Then 113,362 clusters have been retrained from PRIDE Cluster release 201504. The needed spectra in clusters are acquired from the PRIDE Archive.</p>\n<h1>Model and Training</h1>\n<p>In DLEAMSE, Siamese network (Figure 1a) trains two same embedding models (Figure 1c) with shared weights, and spectra are encoded by the same encoder (Figure 1b) before the embedding. Based on the Euclidean distance between the pair of embedded spectra, the weights of embedding model is learned by contrastive loss function adapted from Hadsell et. al. that penalizes far-apart same-label spectra (label=1) and nearby different-label spectra (label=0). Back propagation from the loss function is used to update the weights in the network. The net-work is trained by stochastic gradient descent with the Adam update rule with a learning rate of 0.005. The codes are implemented in Python3 with the PyTorch framework.\n<img alt=\"model\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cdc6bc4297abac689319d79d9fac7a64ab7e0b3/68747470733a2f2f6769746875622e636f6d2f62696762696f2f444c45414d53452f747265652f6d61737465722f7372632f646c65616d73652f646c65616d73655f6d6f64656c5f7265666572656e6365732f6d6f64656c2e706e67\"></p>\n<h1>Testing</h1>\n<p><img alt=\"loss and test\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d17aa50805006112148742c6a74b093b968cf1b/68747470733a2f2f6769746875622e636f6d2f62696762696f2f444c45414d53452f747265652f6d61737465722f7372632f646c65616d73652f646c65616d73655f6d6f64656c5f7265666572656e6365732f6c6f73735f616e645f746573742e706e67\"></p>\n<h1>Requirements</h1>\n<ul>\n<li>Python3.7 (or Anaconda3)</li>\n<li>torch==1.0.0 (python -m pip install torch===1.0.0 torchvision===0.2.1 -f <a href=\"https://download.pytorch.org/whl/torch_stable.html\" rel=\"nofollow\">https://download.pytorch.org/whl/torch_stable.html</a>)</li>\n<li>pyteomics&gt;=3.5.1</li>\n<li>numpy&gt;=1.13.3</li>\n<li>numba&gt;=0.45.0</li>\n<li>faiss-gpu==1.5.3 (if you want to use faiss index making and searching function)</li>\n<li>more_itertools==7.1.0</li>\n</ul>\n<h1>Installation</h1>\n<p>DLEAMSE\u9225\u6a9a encoder and embedder have been packaged and uploaded to pypi library, the package\u9225\u6a9a name is <a href=\"https://pypi.org/project/dleamse/\" rel=\"nofollow\">dleamse</a>.</p>\n<p><code>python -m pip install dleamse</code></p>\n<h1>Usage</h1>\n<p>The model file of DLEAMSE: <a href=\"https://github.com/bigbio/DLEAMSE/tree/master/src/DLEAMSE/siamese_modle_reference\" rel=\"nofollow\">080802_20_1000_NM500R_model.pkl</a>\nThe 500 reference spectra used in our project: <a href=\"https://github.com/bigbio/DLEAMSE/tree/master/src/DLEAMSE/siamese_modle_reference\" rel=\"nofollow\">500_rfs_spectra.mgf</a></p>\n<h2>Encode and Embed spectra, then write faiss index</h2>\n<pre><span class=\"c1\"># -*- coding:utf8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_encode_and_embed</span> <span class=\"kn\">import</span> <span class=\"n\">encode_and_embed_spectra</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_encode_and_embed</span> <span class=\"kn\">import</span> <span class=\"n\">SiameseNetwork2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_faiss_index_writer</span> <span class=\"kn\">import</span> <span class=\"n\">FaissWriteIndex</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"c1\"># encode and embedded spectra</span>\n     <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">\"./dleamse_model_references/080802_20_1000_NM500R_model.pkl\"</span>\n    <span class=\"n\">prj</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span>\n    <span class=\"n\">input_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"PXD003552_61576_ArchiveSpectrum.json\"</span>\n    <span class=\"n\">reference_spectra</span> <span class=\"o\">=</span> <span class=\"s2\">\"./dleamse_model_references/0722_500_rf_spectra.mgf\"</span>\n\n    <span class=\"n\">encode_and_embed_spectra</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">prj</span><span class=\"p\">,</span> <span class=\"n\">input_file</span><span class=\"p\">,</span> <span class=\"n\">reference_spectra</span><span class=\"p\">)</span> <span class=\"c1\"># generate ids_usi, encoded_spectra and embedded_spectra data file</span>\n\n    <span class=\"c1\"># faiss index writer</span>\n    <span class=\"n\">index_writer</span> <span class=\"o\">=</span> <span class=\"n\">FaissWriteIndex</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># create index from one or more embedded_spectra file</span>\n    <span class=\"n\">embedded_spectra_files_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"./IDMap_Index\"</span>  <span class=\"c1\"># Path of embedded_spectra files, which is end with \"_embedded.txt\"</span>\n    <span class=\"n\">index_save_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_index.index\"</span>\n    <span class=\"n\">index_ids_save_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_ids_save.npy\"</span>\n    <span class=\"n\">index_writer</span><span class=\"o\">.</span><span class=\"n\">create_index_for_embedded_spectra</span><span class=\"p\">(</span><span class=\"n\">embedded_spectra_files_path</span><span class=\"p\">,</span> <span class=\"n\">index_ids_save_file</span><span class=\"p\">,</span> <span class=\"n\">index_save_file</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># add new embedded_spectra data to a raw index</span>\n    <span class=\"n\">raw_index</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_index.index\"</span>\n    <span class=\"n\">raw_ids_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_ids_save.npy\"</span>\n    <span class=\"n\">new_embedded_spectra_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"./IDMap_Index_2\"</span>\n    <span class=\"n\">output_index_ids_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_02_add_ids_save.npy\"</span>\n    <span class=\"n\">output_index_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_02_add_index.npy\"</span>\n    <span class=\"n\">index_writer</span><span class=\"o\">.</span><span class=\"n\">add_embedded_spectra_to_index</span><span class=\"p\">(</span><span class=\"n\">raw_index</span><span class=\"p\">,</span> <span class=\"n\">raw_ids_file</span><span class=\"p\">,</span> <span class=\"n\">new_embedded_spectra_path</span><span class=\"p\">,</span> <span class=\"n\">output_index_ids_file</span><span class=\"p\">,</span> <span class=\"n\">output_index_file</span><span class=\"p\">)</span>\n</pre>\n<h1>DLEAMSE's Scripts</h1>\n<h2><strong>dleamse_encode_and_embed.py</strong>:</h2>\n<p>Encode and embed the spectra to vectors. This script support the spectra file with .mgf, .mzML and .json. By default, two or three files would be generated from this script, the spectra embedding vectors file , spectra usi file and the record file of spectra with missing charge. By default, GPU is used; the default directory of DLEASME model and 500 reference spectra file are in dleamse_model_references directory which is under current directory.<br>\nIn this example, the input spectra file is <em>PXD003552_61576_ArchiveSpectrum.json</em>, and the three generated files are: <em>PXD003552_61576_ArchiveSpectrum_embedded.txt</em>; <em>PXD003552_61576_ArchiveSpectrum_spectrum_usi.txt</em>; <em>PXD003552_61576_ArchiveSpectrum_miss_record.txt</em> (if exist the charge missing spectra) <br></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_encode_and_embed</span> <span class=\"kn\">import</span> <span class=\"n\">encode_and_embed_spectra</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_encode_and_embed</span> <span class=\"kn\">import</span> <span class=\"n\">SiameseNetwork2</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_encode_and_embeder</span><span class=\"p\">():</span>\n    <span class=\"c1\"># encode and embedded spectra</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">\"./dleamse_model_references/080802_20_1000_NM500R_model.pkl\"</span>\n    <span class=\"n\">prj</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span>\n    <span class=\"n\">input_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"PXD003552_61576_ArchiveSpectrum.json\"</span>\n    <span class=\"n\">reference_spectra</span> <span class=\"o\">=</span> <span class=\"s2\">\"./dleamse_model_references/0722_500_rf_spectra.mgf\"</span>\n    <span class=\"n\">embedded_vstack_data</span> <span class=\"o\">=</span> <span class=\"n\">encode_and_embed_spectra</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">prj</span><span class=\"p\">,</span> <span class=\"n\">input_file</span><span class=\"p\">,</span> <span class=\"n\">reference_spectra</span><span class=\"p\">)</span>\n</pre>\n<h2><strong>dleamse_index_writer.py</strong>:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dleamse.dleamse_faiss_index_writer</span> <span class=\"kn\">import</span> <span class=\"n\">FaissWriteIndex</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_index_write</span><span class=\"p\">():</span>\n    <span class=\"c1\"># faiss index writer</span>\n    <span class=\"n\">index_writer</span> <span class=\"o\">=</span> <span class=\"n\">FaissWriteIndex</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># create index from one or more embedded_spectra file</span>\n    <span class=\"n\">embedded_spectra_files_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"./IDMap_Index\"</span>  <span class=\"c1\"># Path of embedded_spectra files, which is end with \"_embedded.txt\"</span>\n    <span class=\"n\">index_save_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_index.index\"</span>\n    <span class=\"n\">index_ids_save_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_ids_save.npy\"</span>\n    <span class=\"n\">index_writer</span><span class=\"o\">.</span><span class=\"n\">create_index_for_embedded_spectra</span><span class=\"p\">(</span><span class=\"n\">embedded_spectra_files_path</span><span class=\"p\">,</span> <span class=\"n\">index_ids_save_file</span><span class=\"p\">,</span> <span class=\"n\">index_save_file</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># add new embedded_spectra data to a raw index</span>\n    <span class=\"n\">raw_index</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_index.index\"</span>\n    <span class=\"n\">raw_ids_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_01_create_ids_save.npy\"</span>\n    <span class=\"n\">new_embedded_spectra_path</span> <span class=\"o\">=</span> <span class=\"s2\">\"./IDMap_Index_2\"</span>\n    <span class=\"n\">output_index_ids_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_02_add_ids_save.npy\"</span>\n    <span class=\"n\">output_index_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_02_add_index.npy\"</span>\n    <span class=\"n\">index_writer</span><span class=\"o\">.</span><span class=\"n\">add_embedded_spectra_to_index</span><span class=\"p\">(</span><span class=\"n\">raw_index</span><span class=\"p\">,</span> <span class=\"n\">raw_ids_file</span><span class=\"p\">,</span> <span class=\"n\">new_embedded_spectra_path</span><span class=\"p\">,</span> <span class=\"n\">output_index_ids_file</span><span class=\"p\">,</span> <span class=\"n\">output_index_file</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7180164, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "2c697169cdcac6b4e8137399870d5319", "sha256": "2fd9fed7d1e1223c1e47eef67c34529ffe0095dce30d3d4c45fdb483c7c643d0"}, "downloads": -1, "filename": "dleamse-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2c697169cdcac6b4e8137399870d5319", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13113, "upload_time": "2020-03-25T12:10:12", "upload_time_iso_8601": "2020-03-25T12:10:12.442568Z", "url": "https://files.pythonhosted.org/packages/64/7f/d972e3e806561e0941befa9170577ce63872031c39d2c0bccafa541843e4/dleamse-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab109fa7fe176a4c58a3a24e11550e1a", "sha256": "f51f5b8cf489088f0b7182d785a7ae54851518d968b3c207c7c1e7a73fdfb533"}, "downloads": -1, "filename": "dleamse-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ab109fa7fe176a4c58a3a24e11550e1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8437, "upload_time": "2020-03-25T12:10:14", "upload_time_iso_8601": "2020-03-25T12:10:14.487728Z", "url": "https://files.pythonhosted.org/packages/82/05/66e1d51cceb7ee2a92b93dc022e6a6221b37dedf47de72b7b9614c897764/dleamse-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c752e1d644eb30a6dd77b33223a13030", "sha256": "7d8cffd51bd8d5ca6261c5014ed0f7315b95b55cec841b79ac8da19ee92865f2"}, "downloads": -1, "filename": "dleamse-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c752e1d644eb30a6dd77b33223a13030", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18228, "upload_time": "2020-03-25T12:19:20", "upload_time_iso_8601": "2020-03-25T12:19:20.226782Z", "url": "https://files.pythonhosted.org/packages/bc/0f/6483f87e5c3a4e0ba5aa8b186766a2521c0810539d6834d4ab3a87039ec5/dleamse-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6d272856d340af83dee396c80cd0016", "sha256": "9b6d5f0c2381ddbf20a5d55eeaf6447212405e090fededf0571d7c3920aa7730"}, "downloads": -1, "filename": "dleamse-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a6d272856d340af83dee396c80cd0016", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10736, "upload_time": "2020-03-25T12:19:21", "upload_time_iso_8601": "2020-03-25T12:19:21.608401Z", "url": "https://files.pythonhosted.org/packages/2c/0c/3c96a39f3026604bf9b6277798737bf1da44d503edca596631883ae16ca7/dleamse-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f31584f20adc5d9dcfcc8d57250f575f", "sha256": "76c4b106d0a830d2c2b0e573cc015fcab41ef67646bd89d553633121df0582ad"}, "downloads": -1, "filename": "dleamse-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f31584f20adc5d9dcfcc8d57250f575f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19967, "upload_time": "2020-03-25T12:42:02", "upload_time_iso_8601": "2020-03-25T12:42:02.297031Z", "url": "https://files.pythonhosted.org/packages/a2/b6/e5f41343c337d4847eafdaf18f78179446fc87b2c81057828a37d9f18c9c/dleamse-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bec901c8ad2bc015e630d53e0911d39d", "sha256": "4b7d12ffea0a7d3c72b196a91cf609fc522eddf572f3a8cb4b0f5bbbcbe403ff"}, "downloads": -1, "filename": "dleamse-0.2.3.tar.gz", "has_sig": false, "md5_digest": "bec901c8ad2bc015e630d53e0911d39d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12126, "upload_time": "2020-03-25T12:42:14", "upload_time_iso_8601": "2020-03-25T12:42:14.993862Z", "url": "https://files.pythonhosted.org/packages/55/59/c3c929828db683b2f7e0d564edce6298a9386abca6120eb9baf46c3ec35c/dleamse-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "8bda125481579036e91f0ae7dff86152", "sha256": "e03455ee597e197b875feee84225b92908b9d9bb901f3952577c24fb04d339bb"}, "downloads": -1, "filename": "dleamse-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8bda125481579036e91f0ae7dff86152", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15152, "upload_time": "2020-03-30T08:55:39", "upload_time_iso_8601": "2020-03-30T08:55:39.781832Z", "url": "https://files.pythonhosted.org/packages/6f/a6/8c60e793260ca8e27b1013997573704a847b0d9c2de63dbbfb2ebb556629/dleamse-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "134499c3304fae40908a732e9eba7254", "sha256": "97b51c9beb75f8c099db1dd36a12625dc4540dccb7849d4d5b947247be2ec3fe"}, "downloads": -1, "filename": "dleamse-0.2.4.tar.gz", "has_sig": false, "md5_digest": "134499c3304fae40908a732e9eba7254", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10356, "upload_time": "2020-03-30T08:55:44", "upload_time_iso_8601": "2020-03-30T08:55:44.872195Z", "url": "https://files.pythonhosted.org/packages/00/e9/eb7e824e27836c38e42dff692ad377eda315f8f9ce764a546db72d0e3193/dleamse-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "782469bfa954cf8f7eef1b54ef1058a2", "sha256": "6055f05bc2b74ca92461dcbe7c4c82e0d338aa33fc3e41f33808b27a20e83038"}, "downloads": -1, "filename": "dleamse-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "782469bfa954cf8f7eef1b54ef1058a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15090, "upload_time": "2020-03-30T09:07:32", "upload_time_iso_8601": "2020-03-30T09:07:32.662192Z", "url": "https://files.pythonhosted.org/packages/ee/47/1a05308e6f6ab98f5e32fb0957feee1d61dbb601a981001605765358c0e6/dleamse-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f298a35b6f43feb74f23926156288f13", "sha256": "a643acb8e32511d734380fbdce294b6e404aee4405d6a03029ca891f70cda771"}, "downloads": -1, "filename": "dleamse-0.2.5.tar.gz", "has_sig": false, "md5_digest": "f298a35b6f43feb74f23926156288f13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10312, "upload_time": "2020-03-30T12:36:29", "upload_time_iso_8601": "2020-03-30T12:36:29.542741Z", "url": "https://files.pythonhosted.org/packages/f7/9b/83944dbd1cc8c3b6539336428e080963bc0f5fbec9a66903187b8821bf2f/dleamse-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "8a8bdd3be21788f8a226376e4d388a1c", "sha256": "994bb2c1db0bbea13916172a1512b637d64644ad3cfe32d4a9e614eaae7c7ca0"}, "downloads": -1, "filename": "dleamse-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8a8bdd3be21788f8a226376e4d388a1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15227, "upload_time": "2020-03-30T13:23:10", "upload_time_iso_8601": "2020-03-30T13:23:10.552900Z", "url": "https://files.pythonhosted.org/packages/07/65/abb32f2c98c9b6f66c916d8ef496f84384a500c075ec3b684a1e0bc49852/dleamse-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec78fc038601721f91d322a6c7391a0a", "sha256": "d105995e797e1aeec35a6a8f6f8bfa7bd9145e4054891050e1288716acf2f3e6"}, "downloads": -1, "filename": "dleamse-0.2.6.tar.gz", "has_sig": false, "md5_digest": "ec78fc038601721f91d322a6c7391a0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10527, "upload_time": "2020-03-30T13:23:12", "upload_time_iso_8601": "2020-03-30T13:23:12.659931Z", "url": "https://files.pythonhosted.org/packages/f2/69/adb334fef45268f9bfd8e6beb3c07cf46996b34674950c5bfcbe4d3a346f/dleamse-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "7a866b61476bebbb89343fdc21f58223", "sha256": "6fd0f3fdca117bad4aea8fe8af8747adc6d71e3486ec3cb24dc090c7135cccf7"}, "downloads": -1, "filename": "dleamse-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7a866b61476bebbb89343fdc21f58223", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15126, "upload_time": "2020-03-30T16:20:05", "upload_time_iso_8601": "2020-03-30T16:20:05.104053Z", "url": "https://files.pythonhosted.org/packages/ab/f7/cf07171c42d7d93306249639be8bd635e3be2c5c02edcad03a0647f75731/dleamse-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df18382cb464f99b2bf938f64413a55f", "sha256": "9182ec807f302ab70c189a85df072b30d7b70add5710162faa932bd5c72315f7"}, "downloads": -1, "filename": "dleamse-0.2.7.tar.gz", "has_sig": false, "md5_digest": "df18382cb464f99b2bf938f64413a55f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10428, "upload_time": "2020-03-30T16:20:09", "upload_time_iso_8601": "2020-03-30T16:20:09.722174Z", "url": "https://files.pythonhosted.org/packages/2d/a3/68f38ba0a190cbf86479b575ee19a22c69bc63ab01ef369167f67c6b80f0/dleamse-0.2.7.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "32488687f22b92a34821e5c09129f4c3", "sha256": "69f7fdb161b1bba3f09ce03158f3e91781e83996b7fb851c19d0e7604ee01628"}, "downloads": -1, "filename": "dleamse-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "32488687f22b92a34821e5c09129f4c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17522, "upload_time": "2020-04-12T10:04:27", "upload_time_iso_8601": "2020-04-12T10:04:27.858993Z", "url": "https://files.pythonhosted.org/packages/b9/e8/e174e7451299782eaa968fe39f3f8b1898ca9e3d0a1bfa2b1339436dce98/dleamse-0.2.9-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "51fa61670a260a914a1dc643ee50394e", "sha256": "1ed624ce365aa4abdd431c8f37ceb1b06695d5f0c6e96a037007b33a69190edc"}, "downloads": -1, "filename": "dleamse-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51fa61670a260a914a1dc643ee50394e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17525, "upload_time": "2020-04-12T10:06:39", "upload_time_iso_8601": "2020-04-12T10:06:39.728484Z", "url": "https://files.pythonhosted.org/packages/23/1d/4cef9a7e09e2bd5f8a1df017e852f0ff74e46699dc21289c7aa78ea86f7e/dleamse-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe422700ddbea5bca6d664f05f9468dc", "sha256": "434c415bc39e560217242151b54a3e69427689451dbc22e59d3680c2c3ee1362"}, "downloads": -1, "filename": "dleamse-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fe422700ddbea5bca6d664f05f9468dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12062, "upload_time": "2020-04-12T10:06:41", "upload_time_iso_8601": "2020-04-12T10:06:41.089934Z", "url": "https://files.pythonhosted.org/packages/33/ae/761b86a7072a9a571163b6f6fb2d30c07493f818ae19474f6014945cfd6b/dleamse-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3fb17be9accae2cfca72575bdc1256dc", "sha256": "35014d5b45e8f3bd9d57b5bcbfcd07b8160dbce4d2c4a0147be2eb526e294a2e"}, "downloads": -1, "filename": "dleamse-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3fb17be9accae2cfca72575bdc1256dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17361, "upload_time": "2020-04-12T10:34:09", "upload_time_iso_8601": "2020-04-12T10:34:09.725033Z", "url": "https://files.pythonhosted.org/packages/68/c6/62b1c091c4afcf95392e02d465954dde8cea864ea370153b1258e2a0f54c/dleamse-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5eea3540b6efaebf5135e6f9298d6f3", "sha256": "96646c86ffa4bb19b7837e82f91361e207631f294ea4e62f97a4af72e197a751"}, "downloads": -1, "filename": "dleamse-0.3.1.tar.gz", "has_sig": false, "md5_digest": "b5eea3540b6efaebf5135e6f9298d6f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11944, "upload_time": "2020-04-12T10:34:12", "upload_time_iso_8601": "2020-04-12T10:34:12.176373Z", "url": "https://files.pythonhosted.org/packages/ac/11/e58d0e7054806b264a70339e52db96272bd21f94e8de176eb9cbbe6f5fd8/dleamse-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "a33a76d35de0e6663f55f29751b89969", "sha256": "7476d736b0488926a5d4d76770cee9cd0420cf5b1711d584eb2afe3573835192"}, "downloads": -1, "filename": "dleamse-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a33a76d35de0e6663f55f29751b89969", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18782, "upload_time": "2020-04-14T12:30:06", "upload_time_iso_8601": "2020-04-14T12:30:06.461260Z", "url": "https://files.pythonhosted.org/packages/39/e9/fe880c3889ae0c07de3d7f36bb2a1e455b50351d12c03d75c1c819135b35/dleamse-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b33f04b3e3a25d7a836cc42b5612bccf", "sha256": "8133911a19e77b264d286f3ab9f7993cce29493fc98aeffa5a9e7ab5d09f5f10"}, "downloads": -1, "filename": "dleamse-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b33f04b3e3a25d7a836cc42b5612bccf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15871, "upload_time": "2020-04-14T12:30:07", "upload_time_iso_8601": "2020-04-14T12:30:07.559217Z", "url": "https://files.pythonhosted.org/packages/e3/c4/66df0e1f598dc468bbddfbf85ae82d39866e523cee22c8426db3f6f7140a/dleamse-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "c004f3ba0c487d495a777d8eacba87a4", "sha256": "5179b7b7102b88758d963bca3c8ff9eb6998ae9a684eb11b60f4091ae14c4974"}, "downloads": -1, "filename": "dleamse-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c004f3ba0c487d495a777d8eacba87a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17356, "upload_time": "2020-04-23T02:25:44", "upload_time_iso_8601": "2020-04-23T02:25:44.290861Z", "url": "https://files.pythonhosted.org/packages/68/63/629957f425075786c19d1d3a7f27381658fb94e76236b02b5c8198243fe5/dleamse-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ff183eadf49656e4c624eb3a5a62ee", "sha256": "f6e04202c7c0b9805029ec4e081960da6ce225a658a691d71a2b0fe4a16cbbd0"}, "downloads": -1, "filename": "dleamse-0.3.3.tar.gz", "has_sig": false, "md5_digest": "59ff183eadf49656e4c624eb3a5a62ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11941, "upload_time": "2020-04-23T02:25:45", "upload_time_iso_8601": "2020-04-23T02:25:45.826985Z", "url": "https://files.pythonhosted.org/packages/bc/f3/0208e4273e8865cc782194742a137e570f63b4bc023aff2ae712fec0c4f7/dleamse-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c004f3ba0c487d495a777d8eacba87a4", "sha256": "5179b7b7102b88758d963bca3c8ff9eb6998ae9a684eb11b60f4091ae14c4974"}, "downloads": -1, "filename": "dleamse-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c004f3ba0c487d495a777d8eacba87a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17356, "upload_time": "2020-04-23T02:25:44", "upload_time_iso_8601": "2020-04-23T02:25:44.290861Z", "url": "https://files.pythonhosted.org/packages/68/63/629957f425075786c19d1d3a7f27381658fb94e76236b02b5c8198243fe5/dleamse-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ff183eadf49656e4c624eb3a5a62ee", "sha256": "f6e04202c7c0b9805029ec4e081960da6ce225a658a691d71a2b0fe4a16cbbd0"}, "downloads": -1, "filename": "dleamse-0.3.3.tar.gz", "has_sig": false, "md5_digest": "59ff183eadf49656e4c624eb3a5a62ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11941, "upload_time": "2020-04-23T02:25:45", "upload_time_iso_8601": "2020-04-23T02:25:45.826985Z", "url": "https://files.pythonhosted.org/packages/bc/f3/0208e4273e8865cc782194742a137e570f63b4bc023aff2ae712fec0c4f7/dleamse-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:21 2020"}