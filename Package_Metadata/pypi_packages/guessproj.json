{"info": {"author": "Alexei Ardyakov", "author_email": "ardjakov@rambler.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: GIS", "Topic :: Utilities"], "description": "guessproj:  Guessing parameters of cartographic projection\n==========================================================\n\n``guessproj`` is a Python script that calculates unknown parameters\nof cartographic projection or coordinate system from coordinates\nof identical points in some known coordinate system and in unknown one.\nYou should know projection type, though.\nThe script can also determine parameters of transformation between two datums.\n\nThe script uses ``pyproj`` and ``scipy`` internally.\nThe method of least squares is used, so the more points you have,\nthe better accuracy will be achieved.\n\nSupported Python versions\n-------------------------\n\nPython 2.6+ and 3.3+ are supported. The script is written in pure Python\nitself but depends on some packages that are not.\n\nInstallation\n------------\n\nThe best way to install ``guessproj`` is using\n`pip <https://pip.pypa.io/en/latest/quickstart.html>`_::\n\n    pip install guessproj\n\nBe aware that ``guessproj`` has some binary dependencies that you need\nto install before trying to install ``guessproj``.\nThese are `GDAL`_ and `PROJ.4`_.\nIf you are a GIS specialist you probably already have these libraries.\nYou also need Python bindings for them (`GDAL bindings`_ and `pyproj`_)\nas well as `NumPy`_ and `SciPy`_ packages.\nThe ``pip`` tool will try to install these packages automatically\nbut on most systems you'll need to install them in a platform-specific way.\n\nNote that GDAL is an optional dependency but may become required in future\nversions of ``guessproj``.\n\nInstead of using ``pip``, you can download the source archive,\nunpack it and run ::\n\n    python setup.py install\n\nin the unpacked directory. You need `setuptools`_ to do this.\n\nAlso, you can use ``guessproj`` without installation. Just download\nthe file `guessproj.py`_ and run it like any Python script::\n\n    python guessproj.py --help\n\nYou still need dependencies to be installed, of course.\n\nInput data format\n-----------------\n\nThe input data for the script is a text file that contains lines\nof space separated values, each line representing a point.\n\nInput data format for 2D points is as follows::\n\n    x1 y1 x2 y2 point name\n\nInput data format for 3D points is as follows::\n\n    x1 y1 z1 x2 y2 z2 point name\n\nPoint name may contain spaces but should not start with a number.\nIf the line starts with ``#``, it will be ignored.\n\nThe coordinates in known coordinate system go first, followed by coordinates\nin unknown one. 3D points are mostly useful if there exists\na datum transformation between coordinate systems.\n\nObviously, the number of point coordinate values must be not less\nthan the number of unknown parameters to determine.\n\nBoth decimal format and degrees, minutes and seconds format\n(``XXXdXX'XX.XXX\"``) are supported for coordinate values.\nYou can use comma as well as period to separate fractional part.\n\nCommand line  syntax\n--------------------\n\nCommand line syntax used to run the script is similar to that of ``cs2cs``\nutility which comes with ``PROJ.4`` library. You should specify parameters\nof known coordinate system in ``PROJ.4`` format (referred as projstring here),\nknown and unknown parameters of the unknown system, and a path to input file.\nExact parameters of various coordinate systems you can find\nin `PROJ.4 documentation`_.\n\nThe unknown parameters are specified among all others in the projstring,\nthe only difference is using ``~`` symbol instead of ``=``. The numeric value\nthat follows the ``~`` symbol is an initial approximation of the parameter value.\nFor ``+towgs84`` parameter, you can specify ``~`` before any (or all) of comma-separated\nvalues. The combination ``=~`` is the same as ``~``.\n\nExample::\n\n    guessproj +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +to \\\n      +proj=tmerc +ellps=krass +lat_0=0 +lon_0~44 +x_0=300000 +y_0~-4.7e6 \\\n      +towgs84=23.57,-140.95,-79.8,0,0.35,0.79,-0.22 points.txt\n\nAll that goes before ``+to`` argument is a projstring for the known system\n(if omitted, WGS84 longitude/latitude is used by default). All the rest\nparameters starting with ``+`` are the projstring for the unknown system,\nwhere initial approximations of the unknown parameters are marked with ``~``.\nIn this example, parameters ``+lon_0`` and ``+y_0`` are unknown. The last argument\nis a name of input text file containing point coordinates.\n\nThe script can evaluate numeric parameters only, so you should specify\nat least ``+proj`` and ``+ellps``. It's worth mentioning, also, that some\nparameters have the same (or nearly the same) effect, so it's a bad idea,\nfor example, to specify both ``+lat_0`` and ``+y_0`` as unknown\nfor Transverse Mercator projection. The system of equations will be\nill-determined in that case.\n\nOptions\n-------\n\nAny additional program options (which are not part of projstring syntax)\nstart with ``-`` or ``--``.\n\nOption ``-h`` or ``--help`` prints a short command line reference and exits\nthe program.\n\nOption ``--encoding=ENCODING_NAME`` specifies the encoding of input file\n(``--encoding=utf-8`` by default).\n\nOption ``--proj`` or ``--proj4`` forces output of resulting projstring only,\nsuppressing table of residual errors.\n\nOption ``--wkt`` forces output of projection parameters in OGC WKT format\n(GDAL Python bindings required).\n\nOption ``--esri`` forces output of projection parameters in Esri WKT format\n(experimental, GDAL Python bindings required).\n\nOption ``--pretty`` forces pretty WKT formatting when used with ``--wkt``\nor ``--esri``.\n\nOutput\n------\n\nThe default output of the program is a projstring in which approximated values\nof parameters are replaced with the exact values found by the script,\nand a list of residual errors for each point. Other forms of output\ncan be specified using program options.\n\nIf GDAL bindings are installed, the projstring will be formatted\nso as to be represented in a normalized form.\n\nTesting\n-------\n\nTo run unit tests with Python 2.7 or 3.3+, execute in source directory::\n\n    python -m unittest discover test\n\nIn Python 2.6, you should install unittest2 package and use::\n\n    PYTHONPATH=. unit2 discover test\n\nYou can also run scripts from ``test/`` directory directly.\n\n\n.. _GDAL: http://www.gdal.org/\n.. _PROJ.4: http://trac.osgeo.org/proj/\n.. _GDAL bindings: https://pypi.python.org/pypi/GDAL/\n.. _pyproj: https://pypi.python.org/pypi/pyproj/\n.. _NumPy: https://pypi.python.org/pypi/numpy/\n.. _SciPy: https://pypi.python.org/pypi/scipy/\n.. _setuptools: https://pypi.python.org/pypi/setuptools/\n.. _guessproj.py: https://raw.githubusercontent.com/Ariki/guessproj/master/guessproj.py\n.. _PROJ.4 documentation: https://trac.osgeo.org/proj/wiki/GenParms", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ariki/guessproj", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "guessproj", "package_url": "https://pypi.org/project/guessproj/", "platform": "a,n,y", "project_url": "https://pypi.org/project/guessproj/", "project_urls": {"Homepage": "https://github.com/Ariki/guessproj"}, "release_url": "https://pypi.org/project/guessproj/0.5/", "requires_dist": ["numpy", "pyproj", "scipy", "GDAL; extra == 'WKT'"], "requires_python": "", "summary": "Script for guessing parameters of cartographic projection", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>guessproj</tt> is a Python script that calculates unknown parameters\nof cartographic projection or coordinate system from coordinates\nof identical points in some known coordinate system and in unknown one.\nYou should know projection type, though.\nThe script can also determine parameters of transformation between two datums.</p>\n<p>The script uses <tt>pyproj</tt> and <tt>scipy</tt> internally.\nThe method of least squares is used, so the more points you have,\nthe better accuracy will be achieved.</p>\n<div id=\"supported-python-versions\">\n<h2>Supported Python versions</h2>\n<p>Python 2.6+ and 3.3+ are supported. The script is written in pure Python\nitself but depends on some packages that are not.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The best way to install <tt>guessproj</tt> is using\n<a href=\"https://pip.pypa.io/en/latest/quickstart.html\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install guessproj\n</pre>\n<p>Be aware that <tt>guessproj</tt> has some binary dependencies that you need\nto install before trying to install <tt>guessproj</tt>.\nThese are <a href=\"http://www.gdal.org/\" rel=\"nofollow\">GDAL</a> and <a href=\"http://trac.osgeo.org/proj/\" rel=\"nofollow\">PROJ.4</a>.\nIf you are a GIS specialist you probably already have these libraries.\nYou also need Python bindings for them (<a href=\"https://pypi.python.org/pypi/GDAL/\" rel=\"nofollow\">GDAL bindings</a> and <a href=\"https://pypi.python.org/pypi/pyproj/\" rel=\"nofollow\">pyproj</a>)\nas well as <a href=\"https://pypi.python.org/pypi/numpy/\" rel=\"nofollow\">NumPy</a> and <a href=\"https://pypi.python.org/pypi/scipy/\" rel=\"nofollow\">SciPy</a> packages.\nThe <tt>pip</tt> tool will try to install these packages automatically\nbut on most systems you\u2019ll need to install them in a platform-specific way.</p>\n<p>Note that GDAL is an optional dependency but may become required in future\nversions of <tt>guessproj</tt>.</p>\n<p>Instead of using <tt>pip</tt>, you can download the source archive,\nunpack it and run</p>\n<pre>python setup.py install\n</pre>\n<p>in the unpacked directory. You need <a href=\"https://pypi.python.org/pypi/setuptools/\" rel=\"nofollow\">setuptools</a> to do this.</p>\n<p>Also, you can use <tt>guessproj</tt> without installation. Just download\nthe file <a href=\"https://raw.githubusercontent.com/Ariki/guessproj/master/guessproj.py\" rel=\"nofollow\">guessproj.py</a> and run it like any Python script:</p>\n<pre>python guessproj.py --help\n</pre>\n<p>You still need dependencies to be installed, of course.</p>\n</div>\n<div id=\"input-data-format\">\n<h2>Input data format</h2>\n<p>The input data for the script is a text file that contains lines\nof space separated values, each line representing a point.</p>\n<p>Input data format for 2D points is as follows:</p>\n<pre>x1 y1 x2 y2 point name\n</pre>\n<p>Input data format for 3D points is as follows:</p>\n<pre>x1 y1 z1 x2 y2 z2 point name\n</pre>\n<p>Point name may contain spaces but should not start with a number.\nIf the line starts with <tt>#</tt>, it will be ignored.</p>\n<p>The coordinates in known coordinate system go first, followed by coordinates\nin unknown one. 3D points are mostly useful if there exists\na datum transformation between coordinate systems.</p>\n<p>Obviously, the number of point coordinate values must be not less\nthan the number of unknown parameters to determine.</p>\n<p>Both decimal format and degrees, minutes and seconds format\n(<tt>XXXdXX'XX.XXX\"</tt>) are supported for coordinate values.\nYou can use comma as well as period to separate fractional part.</p>\n</div>\n<div id=\"command-line-syntax\">\n<h2>Command line  syntax</h2>\n<p>Command line syntax used to run the script is similar to that of <tt>cs2cs</tt>\nutility which comes with <tt>PROJ.4</tt> library. You should specify parameters\nof known coordinate system in <tt>PROJ.4</tt> format (referred as projstring here),\nknown and unknown parameters of the unknown system, and a path to input file.\nExact parameters of various coordinate systems you can find\nin <a href=\"https://trac.osgeo.org/proj/wiki/GenParms\" rel=\"nofollow\">PROJ.4 documentation</a>.</p>\n<p>The unknown parameters are specified among all others in the projstring,\nthe only difference is using <tt>~</tt> symbol instead of <tt>=</tt>. The numeric value\nthat follows the <tt>~</tt> symbol is an initial approximation of the parameter value.\nFor <tt>+towgs84</tt> parameter, you can specify <tt>~</tt> before any (or all) of comma-separated\nvalues. The combination <tt>=~</tt> is the same as <tt>~</tt>.</p>\n<p>Example:</p>\n<pre>guessproj +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +to \\\n  +proj=tmerc +ellps=krass +lat_0=0 +lon_0~44 +x_0=300000 +y_0~-4.7e6 \\\n  +towgs84=23.57,-140.95,-79.8,0,0.35,0.79,-0.22 points.txt\n</pre>\n<p>All that goes before <tt>+to</tt> argument is a projstring for the known system\n(if omitted, WGS84 longitude/latitude is used by default). All the rest\nparameters starting with <tt>+</tt> are the projstring for the unknown system,\nwhere initial approximations of the unknown parameters are marked with <tt>~</tt>.\nIn this example, parameters <tt>+lon_0</tt> and <tt>+y_0</tt> are unknown. The last argument\nis a name of input text file containing point coordinates.</p>\n<p>The script can evaluate numeric parameters only, so you should specify\nat least <tt>+proj</tt> and <tt>+ellps</tt>. It\u2019s worth mentioning, also, that some\nparameters have the same (or nearly the same) effect, so it\u2019s a bad idea,\nfor example, to specify both <tt>+lat_0</tt> and <tt>+y_0</tt> as unknown\nfor Transverse Mercator projection. The system of equations will be\nill-determined in that case.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>Any additional program options (which are not part of projstring syntax)\nstart with <tt>-</tt> or <tt><span class=\"pre\">--</span></tt>.</p>\n<p>Option <tt><span class=\"pre\">-h</span></tt> or <tt><span class=\"pre\">--help</span></tt> prints a short command line reference and exits\nthe program.</p>\n<p>Option <tt><span class=\"pre\">--encoding=ENCODING_NAME</span></tt> specifies the encoding of input file\n(<tt><span class=\"pre\">--encoding=utf-8</span></tt> by default).</p>\n<p>Option <tt><span class=\"pre\">--proj</span></tt> or <tt><span class=\"pre\">--proj4</span></tt> forces output of resulting projstring only,\nsuppressing table of residual errors.</p>\n<p>Option <tt><span class=\"pre\">--wkt</span></tt> forces output of projection parameters in OGC WKT format\n(GDAL Python bindings required).</p>\n<p>Option <tt><span class=\"pre\">--esri</span></tt> forces output of projection parameters in Esri WKT format\n(experimental, GDAL Python bindings required).</p>\n<p>Option <tt><span class=\"pre\">--pretty</span></tt> forces pretty WKT formatting when used with <tt><span class=\"pre\">--wkt</span></tt>\nor <tt><span class=\"pre\">--esri</span></tt>.</p>\n</div>\n<div id=\"output\">\n<h2>Output</h2>\n<p>The default output of the program is a projstring in which approximated values\nof parameters are replaced with the exact values found by the script,\nand a list of residual errors for each point. Other forms of output\ncan be specified using program options.</p>\n<p>If GDAL bindings are installed, the projstring will be formatted\nso as to be represented in a normalized form.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run unit tests with Python 2.7 or 3.3+, execute in source directory:</p>\n<pre>python -m unittest discover test\n</pre>\n<p>In Python 2.6, you should install unittest2 package and use:</p>\n<pre>PYTHONPATH=. unit2 discover test\n</pre>\n<p>You can also run scripts from <tt>test/</tt> directory directly.</p>\n</div>\n\n          </div>"}, "last_serial": 2248928, "releases": {"0.02": [{"comment_text": "", "digests": {"md5": "9b45bb9c38511b1d44f5f55d1bdd648e", "sha256": "6b0b0b3a2446f5ec57d6871169b09b3a6f559544a7a267851e5c20d483e8d482"}, "downloads": -1, "filename": "guessproj-0.02-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b45bb9c38511b1d44f5f55d1bdd648e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9004, "upload_time": "2014-11-16T19:46:54", "upload_time_iso_8601": "2014-11-16T19:46:54.780919Z", "url": "https://files.pythonhosted.org/packages/f2/b8/f73260b1730a07c69ce13bd2a2746a10091cb4c7d01f1ae648450ee68aea/guessproj-0.02-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33f71d451e28d557f5b82dbd5c360820", "sha256": "0ea313957143ac30cdb8d0a6663de2249a55e8ae96f3588d45d2dee38c429f50"}, "downloads": -1, "filename": "guessproj-0.02.tar.gz", "has_sig": false, "md5_digest": "33f71d451e28d557f5b82dbd5c360820", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8331, "upload_time": "2014-11-16T19:46:52", "upload_time_iso_8601": "2014-11-16T19:46:52.100339Z", "url": "https://files.pythonhosted.org/packages/97/83/e400bf7373849361567644f22aa1ffa9b16df1aa1749dc34008b2fce144d/guessproj-0.02.tar.gz", "yanked": false}], "0.03": [{"comment_text": "", "digests": {"md5": "a6bf0642b1afc93f964b6db153c0dfc6", "sha256": "57654c8356b4fd4ae402ea86f94e18d32c2773e3b785562daafc1b1f7ebee654"}, "downloads": -1, "filename": "guessproj-0.03-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6bf0642b1afc93f964b6db153c0dfc6", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 5944, "upload_time": "2014-11-16T21:16:38", "upload_time_iso_8601": "2014-11-16T21:16:38.745246Z", "url": "https://files.pythonhosted.org/packages/b2/8b/1c601ccfe132f053a7abcdb23b1fbb4baef83c501003358fabe0e6c98a31/guessproj-0.03-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37b6f0a683455ab0fcb3b536a3d4b531", "sha256": "70efebb9905b3b4d843f58ea00b8698ac352a4b1745a832a0f8cd0c308798ad1"}, "downloads": -1, "filename": "guessproj-0.03.tar.gz", "has_sig": false, "md5_digest": "37b6f0a683455ab0fcb3b536a3d4b531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8493, "upload_time": "2014-11-16T21:16:36", "upload_time_iso_8601": "2014-11-16T21:16:36.775698Z", "url": "https://files.pythonhosted.org/packages/79/07/1435bb4b6536d5af09988e5dffc714bf0cd6c5ab265cb79e1262aa829f45/guessproj-0.03.tar.gz", "yanked": false}], "0.04": [{"comment_text": "", "digests": {"md5": "b28f245f7e712da62ab9a116f5e41c8d", "sha256": "d138242c34632712734a8bb378c6499af78b627882ec5cef8d37b6bdd6402cfb"}, "downloads": -1, "filename": "guessproj-0.04-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b28f245f7e712da62ab9a116f5e41c8d", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 5943, "upload_time": "2014-12-05T18:58:42", "upload_time_iso_8601": "2014-12-05T18:58:42.948531Z", "url": "https://files.pythonhosted.org/packages/25/e2/55b574fd6e0a0ce1cf3e83dd64e40003dbc8d3b90a1d98d1c036a4c6f344/guessproj-0.04-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "079767dfb6bcb6a53f775ec0566426c7", "sha256": "6c63002f0dae72fc88b3e35c6f229f24ec16e728b71b83ca86ad0fe4414ce713"}, "downloads": -1, "filename": "guessproj-0.04.tar.gz", "has_sig": false, "md5_digest": "079767dfb6bcb6a53f775ec0566426c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8496, "upload_time": "2014-12-05T18:58:40", "upload_time_iso_8601": "2014-12-05T18:58:40.877971Z", "url": "https://files.pythonhosted.org/packages/41/52/7ee0631173819c328787b002e0f2ec0060c126e393019e45f75d188f30cc/guessproj-0.04.tar.gz", "yanked": false}], "0.05": [{"comment_text": "", "digests": {"md5": "0790ef537af04a256a72e858396b1cc1", "sha256": "3cbaf425b966d3c29c2f3282c67b5b07c548ac1c3a9913d9b8badfa639059b9d"}, "downloads": -1, "filename": "guessproj-0.05-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0790ef537af04a256a72e858396b1cc1", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 11403, "upload_time": "2015-01-04T18:48:11", "upload_time_iso_8601": "2015-01-04T18:48:11.705217Z", "url": "https://files.pythonhosted.org/packages/fb/b8/e99681e285493b94db771be23c4d68d5fa1a26dc4ecebaf843fa107c20fa/guessproj-0.05-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0308fc0f898001e8be036d92d97f73b3", "sha256": "40eac55a9eb80205fee3ace007bf8b81c6e10391e17cc0deda91ad7b94b31b96"}, "downloads": -1, "filename": "guessproj-0.05.tar.gz", "has_sig": false, "md5_digest": "0308fc0f898001e8be036d92d97f73b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10222, "upload_time": "2015-01-04T18:48:09", "upload_time_iso_8601": "2015-01-04T18:48:09.410169Z", "url": "https://files.pythonhosted.org/packages/24/9f/3dd532fc4252997cfe26fc64cf8efe3b76122862e385876349d77952c24b/guessproj-0.05.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "b59875944112f9f6dcb9700d551d943d", "sha256": "36c5a3da38706b9c9f48c6fb289ffd04432bc785869118fe3e6cc4296513e1a4"}, "downloads": -1, "filename": "guessproj-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b59875944112f9f6dcb9700d551d943d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11393, "upload_time": "2016-07-28T12:19:14", "upload_time_iso_8601": "2016-07-28T12:19:14.931590Z", "url": "https://files.pythonhosted.org/packages/f1/10/32f2151adf9747df9491234ba67d9b14865bf4c6e3b5e0c334d5f86bf2cd/guessproj-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3492a0d414558a6575049aada25c2020", "sha256": "c8b670c88bec7a8123b85439d4e4c2c3820690911a8093bbcc392759f21ce776"}, "downloads": -1, "filename": "guessproj-0.5.tar.gz", "has_sig": false, "md5_digest": "3492a0d414558a6575049aada25c2020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10201, "upload_time": "2016-07-28T12:19:17", "upload_time_iso_8601": "2016-07-28T12:19:17.331354Z", "url": "https://files.pythonhosted.org/packages/bd/9d/d5f7920660b75535c0c059da0b38587ea22d222190b86dd4602c828bdaaf/guessproj-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b59875944112f9f6dcb9700d551d943d", "sha256": "36c5a3da38706b9c9f48c6fb289ffd04432bc785869118fe3e6cc4296513e1a4"}, "downloads": -1, "filename": "guessproj-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b59875944112f9f6dcb9700d551d943d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11393, "upload_time": "2016-07-28T12:19:14", "upload_time_iso_8601": "2016-07-28T12:19:14.931590Z", "url": "https://files.pythonhosted.org/packages/f1/10/32f2151adf9747df9491234ba67d9b14865bf4c6e3b5e0c334d5f86bf2cd/guessproj-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3492a0d414558a6575049aada25c2020", "sha256": "c8b670c88bec7a8123b85439d4e4c2c3820690911a8093bbcc392759f21ce776"}, "downloads": -1, "filename": "guessproj-0.5.tar.gz", "has_sig": false, "md5_digest": "3492a0d414558a6575049aada25c2020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10201, "upload_time": "2016-07-28T12:19:17", "upload_time_iso_8601": "2016-07-28T12:19:17.331354Z", "url": "https://files.pythonhosted.org/packages/bd/9d/d5f7920660b75535c0c059da0b38587ea22d222190b86dd4602c828bdaaf/guessproj-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:25 2020"}