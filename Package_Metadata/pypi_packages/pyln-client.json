{"info": {"author": "Christian Decker", "author_email": "decker.christian@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pyln-client: A python client library for lightningd\n\nThis package implements the Unix socket based JSON-RPC protocol that\n`lightningd` exposes to the rest of the world. It can be used to call\narbitrary functions on the RPC interface, and serves as a basis for plugins\nwritten in python.\n\n\n## Installation\n\n`pyln-client` is available on `pip`:\n\n```\npip install pyln-client\n```\n\nAlternatively you can also install the development version to get access to\ncurrently unreleased features by checking out the c-lightning source code and\ninstalling into your python3 environment:\n\n```bash\ngit clone https://github.com/ElementsProject/lightning.git\ncd lightning/contrib/pyln-client\npython3 setup.py develop\n```\n\nThis will add links to the library into your environment so changing the\nchecked out source code will also result in the environment picking up these\nchanges. Notice however that unreleased versions may change API without\nwarning, so test thoroughly with the released version.\n\n## Examples\n\n\n### Using the JSON-RPC client\n```py\n\"\"\"\nGenerate invoice on one daemon and pay it on the other\n\"\"\"\nfrom pyln.client import LightningRpc\nimport random\n\n# Create two instances of the LightningRpc object using two different c-lightning daemons on your computer\nl1 = LightningRpc(\"/tmp/lightning1/lightning-rpc\")\nl5 = LightningRpc(\"/tmp/lightning5/lightning-rpc\")\n\ninfo5 = l5.getinfo()\nprint(info5)\n\n# Create invoice for test payment\ninvoice = l5.invoice(100, \"lbl{}\".format(random.random()), \"testpayment\")\nprint(invoice)\n\n# Get route to l1\nroute = l1.getroute(info5['id'], 100, 1)\nprint(route)\n\n# Pay invoice\nprint(l1.sendpay(route['route'], invoice['payment_hash']))\n```\n\n### Writing a plugin\n\nPlugins are programs that `lightningd` can be configured to execute alongside\nthe main daemon. They allow advanced interactions with and customizations to\nthe daemon.\n\n```python\n#!/usr/bin/env python3\nfrom pyln.client import Plugin\n\nplugin = Plugin()\n\n@plugin.method(\"hello\")\ndef hello(plugin, name=\"world\"):\n    \"\"\"This is the documentation string for the hello-function.\n\n    It gets reported as the description when registering the function\n    as a method with `lightningd`.\n\n    \"\"\"\n    greeting = plugin.get_option('greeting')\n    s = '{} {}'.format(greeting, name)\n    plugin.log(s)\n    return s\n\n\n@plugin.init()\ndef init(options, configuration, plugin):\n    plugin.log(\"Plugin helloworld.py initialized\")\n\n\n@plugin.subscribe(\"connect\")\ndef on_connect(plugin, id, address):\n    plugin.log(\"Received connect event for peer {}\".format(id))\n\n\nplugin.add_option('greeting', 'Hello', 'The greeting I should use.')\nplugin.run()\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ElementsProject/lightning", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyln-client", "package_url": "https://pypi.org/project/pyln-client/", "platform": "", "project_url": "https://pypi.org/project/pyln-client/", "project_urls": {"Homepage": "http://github.com/ElementsProject/lightning"}, "release_url": "https://pypi.org/project/pyln-client/0.8.0/", "requires_dist": null, "requires_python": "", "summary": "Client library for lightningd", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyln-client: A python client library for lightningd</h1>\n<p>This package implements the Unix socket based JSON-RPC protocol that\n<code>lightningd</code> exposes to the rest of the world. It can be used to call\narbitrary functions on the RPC interface, and serves as a basis for plugins\nwritten in python.</p>\n<h2>Installation</h2>\n<p><code>pyln-client</code> is available on <code>pip</code>:</p>\n<pre><code>pip install pyln-client\n</code></pre>\n<p>Alternatively you can also install the development version to get access to\ncurrently unreleased features by checking out the c-lightning source code and\ninstalling into your python3 environment:</p>\n<pre>git clone https://github.com/ElementsProject/lightning.git\n<span class=\"nb\">cd</span> lightning/contrib/pyln-client\npython3 setup.py develop\n</pre>\n<p>This will add links to the library into your environment so changing the\nchecked out source code will also result in the environment picking up these\nchanges. Notice however that unreleased versions may change API without\nwarning, so test thoroughly with the released version.</p>\n<h2>Examples</h2>\n<h3>Using the JSON-RPC client</h3>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Generate invoice on one daemon and pay it on the other</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyln.client</span> <span class=\"kn\">import</span> <span class=\"n\">LightningRpc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n<span class=\"c1\"># Create two instances of the LightningRpc object using two different c-lightning daemons on your computer</span>\n<span class=\"n\">l1</span> <span class=\"o\">=</span> <span class=\"n\">LightningRpc</span><span class=\"p\">(</span><span class=\"s2\">\"/tmp/lightning1/lightning-rpc\"</span><span class=\"p\">)</span>\n<span class=\"n\">l5</span> <span class=\"o\">=</span> <span class=\"n\">LightningRpc</span><span class=\"p\">(</span><span class=\"s2\">\"/tmp/lightning5/lightning-rpc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">info5</span> <span class=\"o\">=</span> <span class=\"n\">l5</span><span class=\"o\">.</span><span class=\"n\">getinfo</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">info5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create invoice for test payment</span>\n<span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">l5</span><span class=\"o\">.</span><span class=\"n\">invoice</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s2\">\"lbl</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()),</span> <span class=\"s2\">\"testpayment\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">invoice</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get route to l1</span>\n<span class=\"n\">route</span> <span class=\"o\">=</span> <span class=\"n\">l1</span><span class=\"o\">.</span><span class=\"n\">getroute</span><span class=\"p\">(</span><span class=\"n\">info5</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pay invoice</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"o\">.</span><span class=\"n\">sendpay</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"p\">[</span><span class=\"s1\">'route'</span><span class=\"p\">],</span> <span class=\"n\">invoice</span><span class=\"p\">[</span><span class=\"s1\">'payment_hash'</span><span class=\"p\">]))</span>\n</pre>\n<h3>Writing a plugin</h3>\n<p>Plugins are programs that <code>lightningd</code> can be configured to execute alongside\nthe main daemon. They allow advanced interactions with and customizations to\nthe daemon.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyln.client</span> <span class=\"kn\">import</span> <span class=\"n\">Plugin</span>\n\n<span class=\"n\">plugin</span> <span class=\"o\">=</span> <span class=\"n\">Plugin</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@plugin</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">(</span><span class=\"s2\">\"hello\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">plugin</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"world\"</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"This is the documentation string for the hello-function.</span>\n\n<span class=\"sd\">    It gets reported as the description when registering the function</span>\n<span class=\"sd\">    as a method with `lightningd`.</span>\n\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">greeting</span> <span class=\"o\">=</span> <span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">get_option</span><span class=\"p\">(</span><span class=\"s1\">'greeting'</span><span class=\"p\">)</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span>\n\n\n<span class=\"nd\">@plugin</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">configuration</span><span class=\"p\">,</span> <span class=\"n\">plugin</span><span class=\"p\">):</span>\n    <span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Plugin helloworld.py initialized\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@plugin</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"connect\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_connect</span><span class=\"p\">(</span><span class=\"n\">plugin</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">):</span>\n    <span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Received connect event for peer </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s1\">'greeting'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello'</span><span class=\"p\">,</span> <span class=\"s1\">'The greeting I should use.'</span><span class=\"p\">)</span>\n<span class=\"n\">plugin</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6379941, "releases": {"0.0.7.3": [{"comment_text": "", "digests": {"md5": "4b96e1b8f5a86e3e03088fcb778ef638", "sha256": "7ba09b634b8594bdae76b54621da0858ae9d454a46a5ee7c10ad95043f6037a6"}, "downloads": -1, "filename": "pyln_client-0.0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4b96e1b8f5a86e3e03088fcb778ef638", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2817, "upload_time": "2019-09-03T21:40:11", "upload_time_iso_8601": "2019-09-03T21:40:11.874374Z", "url": "https://files.pythonhosted.org/packages/aa/99/c443ddd0e94b4e0daaea8aeb5a53ef9f5133190e1292bf713a39deaa4b05/pyln_client-0.0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fab95d2afb6118abf50721dad214ab87", "sha256": "b5a2122a98457cff42620b2292fc1c1fb7adc91b0c28116a522a580bbb76abd8"}, "downloads": -1, "filename": "pyln-client-0.0.7.3.tar.gz", "has_sig": false, "md5_digest": "fab95d2afb6118abf50721dad214ab87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2692, "upload_time": "2019-09-03T21:40:14", "upload_time_iso_8601": "2019-09-03T21:40:14.259100Z", "url": "https://files.pythonhosted.org/packages/78/fe/814c469492a8c06dd001e4e1c770ce4b43141e01d8f2d590d4d69e23dc31/pyln-client-0.0.7.3.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "ff7b59d1961757159977d9b66f8c0704", "sha256": "d306cc8282d4217e4590d78848ec3f520ad4410511f2f9cdbe8387efedf1d0b8"}, "downloads": -1, "filename": "pyln_client-0.7.3-py3.6.egg", "has_sig": false, "md5_digest": "ff7b59d1961757159977d9b66f8c0704", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 37078, "upload_time": "2019-11-22T14:36:01", "upload_time_iso_8601": "2019-11-22T14:36:01.270945Z", "url": "https://files.pythonhosted.org/packages/90/42/f26dbbf4e46641d2ec1f4d22690d5a818aba205c6c73e210e8417b28a472/pyln_client-0.7.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1370a7acc0fefcf7593a5d43bac71c3", "sha256": "36b40631a82456348fdcc141b61cae48e991d14649c620ec06d252ca3591d4fb"}, "downloads": -1, "filename": "pyln_client-0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a1370a7acc0fefcf7593a5d43bac71c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16851, "upload_time": "2019-11-22T14:35:59", "upload_time_iso_8601": "2019-11-22T14:35:59.320821Z", "url": "https://files.pythonhosted.org/packages/2b/57/ce54ef2a279836529320a5a50b20fa619b4c45c05fd7c3d0642738c89aa8/pyln_client-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6b01e2005ed9d3cbdb9f3ef530eb235", "sha256": "8d426c086a1045f1a986d21376cdc6526ce38371fd73f6572d1eeaa84ec75188"}, "downloads": -1, "filename": "pyln-client-0.7.3.tar.gz", "has_sig": false, "md5_digest": "b6b01e2005ed9d3cbdb9f3ef530eb235", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17258, "upload_time": "2019-11-22T14:36:02", "upload_time_iso_8601": "2019-11-22T14:36:02.932481Z", "url": "https://files.pythonhosted.org/packages/c2/f3/7a2b766b4acd2295b18d4c8aa31418427cc554ea69d0e9a194bb443d44a9/pyln-client-0.7.3.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "3cd7dfd3e7aadc61a7bda1da27772dfe", "sha256": "3a7e833faaad83b3683ad0022902a2d339e8759bf61b009036073fb85a5c94fb"}, "downloads": -1, "filename": "pyln_client-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3cd7dfd3e7aadc61a7bda1da27772dfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16908, "upload_time": "2019-12-31T15:55:43", "upload_time_iso_8601": "2019-12-31T15:55:43.445069Z", "url": "https://files.pythonhosted.org/packages/ea/8b/980021ee3a81625ce69541377ab6344a5784218516a02dbc0ed637f5f6b2/pyln_client-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "128ed5e40015330ee95cb3e613a12263", "sha256": "83264ac64dcd5734c7cbac261e7b059468997e1814f16a8d59055be45d6a889a"}, "downloads": -1, "filename": "pyln-client-0.8.0.tar.gz", "has_sig": false, "md5_digest": "128ed5e40015330ee95cb3e613a12263", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17315, "upload_time": "2019-12-31T15:55:45", "upload_time_iso_8601": "2019-12-31T15:55:45.200197Z", "url": "https://files.pythonhosted.org/packages/be/4a/57a43ba3197cafafac9c75a64f6a11bb8a8bf023ae05ef15dd589ea03e26/pyln-client-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cd7dfd3e7aadc61a7bda1da27772dfe", "sha256": "3a7e833faaad83b3683ad0022902a2d339e8759bf61b009036073fb85a5c94fb"}, "downloads": -1, "filename": "pyln_client-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3cd7dfd3e7aadc61a7bda1da27772dfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16908, "upload_time": "2019-12-31T15:55:43", "upload_time_iso_8601": "2019-12-31T15:55:43.445069Z", "url": "https://files.pythonhosted.org/packages/ea/8b/980021ee3a81625ce69541377ab6344a5784218516a02dbc0ed637f5f6b2/pyln_client-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "128ed5e40015330ee95cb3e613a12263", "sha256": "83264ac64dcd5734c7cbac261e7b059468997e1814f16a8d59055be45d6a889a"}, "downloads": -1, "filename": "pyln-client-0.8.0.tar.gz", "has_sig": false, "md5_digest": "128ed5e40015330ee95cb3e613a12263", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17315, "upload_time": "2019-12-31T15:55:45", "upload_time_iso_8601": "2019-12-31T15:55:45.200197Z", "url": "https://files.pythonhosted.org/packages/be/4a/57a43ba3197cafafac9c75a64f6a11bb8a8bf023ae05ef15dd589ea03e26/pyln-client-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:55 2020"}