{"info": {"author": "Fernando Lopez Aguilar, Guillermo Jimenez Prieto", "author_email": "fernando.lopezaguilar@telefonica.com, e.fiware.tid@telefonica.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License"], "description": ".. _Top:\n\n===============================\nFIWARE Policy Manager GE: Cloto\n===============================\n\n|License Badge| |Documentation Badge| |StackOverflow| |Build Status| |Coverage Status| |Docker badge| |Pypi Version|\n\n.. contents:: :local:\n\nIntroduction\n============\n\nThis is the code repository for **FIWARE Policy Manager GE - Cloto**, a server\nthat provides a REST API to create rules associated to servers, subscribe\nservers to Context Broker to get information about resources consumption of\nthose servers and launch actions described in rules when conditions are met.\n\nThis project is part of FIWARE_.\nCheck also the `FIWARE Catalogue entry for Policy Manager`__\n\n__ `FIWARE Policy Manager - Catalogue`_\n\nAny feedback on this documentation is highly welcome, including bugs, typos or\nthings you think should be included but aren't. You can use `github issues`__\nto provide feedback.\n\n__ `FIWARE Cloto - GitHub issues`_\n\nTop_.\n\n\nGEi overall description\n=======================\n\nBosun GEri is the reference implementation of Policy Manager GE.\n\nBosun offers decision-making ability, independently of the type of resource\n(physical/virtual resources, network, service, etc.) being able to solve\ncomplex problems within the Cloud field by reasoning about the knowledge\nbase, represented by facts and rules. Bosun GEri provides the basic management\nof cloud resources based on rules, as well as management of the corresponding\nresources within FIWARE Cloud instances based on infrastructure physical\nmonitoring, resources and services security monitoring or whatever that\ncould be defined by facts, actions and rules.\n\nThe baseline for the Bosun GEri is PyCLIPS, which is a module to interact with\nCLIPS expert system implemented in Python language. The reason to take PyCLIPS\nis to extend the OpenStack ecosystem with an expert system, written in the same\nlanguage as the rest of the OpenStack services. Besides, It provides\nnotification service to your own HTTP server where you can define your\nown actions based on the notifications launched by Policy Manager.\nLast but not least, Bosun is integrated with the Monitoring GEri in order\nto recover the information of the (virtual) system and calculate any possible\nchange on it based on the knowledge database defined for it.\n\nTop_.\n\n\nComponents\n----------\n\nFiware-Cloto\n    Fiware-Cloto is part of FIWARE Policy Manager. It provides a REST API to\n    create rules associated to servers, subscribe servers to Context Broker to\n    get information about resources consumption of that servers and launch\n    actions described in rules when conditions are met.\n\nFiware-Facts\n    Server to process the incoming facts from `Orion Context Broker`_ and\n    publish the result into a RabbitMQ queue to be analysed by Fiware-Cloto.\n    The facts are the result of the server resources consumption.\n\nFor more information, please refer to the `documentation <doc/index.rst>`_.\n\n\nTop_.\n\n\nBuild and Install\n=================\n\nRequirements\n------------\n\nOperating systems:\n\n- CentOS (RedHat) and Ubuntu (Debian), being CentOS 7 the reference\n  operating system.\n\nSoftware dependencies:\n\n- Python 2.7\n- PyClips 1.0 (http://sourceforge.net/projects/pyclips/files/)\n- RabbitMQ Server 3.3.0 or above (http://www.rabbitmq.com/download.html)\n- MySQL 5.6.14 or above (http://dev.mysql.com/downloads/mysql/)\n- pip 7.0.0 or above (https://pip.pypa.io/en/stable/installing/)\n- gcc-c++ and gcc libraries\n\nThis module also needs the installation of these other components:\n\n- Fiware-facts module installed (https://github.com/telefonicaid/fiware-facts)\n- A running instance of Orion Context Broker v0.28\n  (https://github.com/telefonicaid/fiware-orion/releases/tag/0.28.0)\n- Fiware-monitoring connected to the Orion instance to provide information\n  about servers (https://github.com/telefonicaid/fiware-monitoring).\n\nTop_.\n\n\nPre-Installation\n----------------\n\nYou must create a database named ``cloto`` in your MySQL server before\ninstalling this component.\n\nIn addition, be sure you have installed MySQL development libraries and tools\n(using package managers such as yum or apt-get):\n\n.. code::\n\n    centos$ sudo yum install mysql-devel\n    ubuntu$ sudo apt-get install mysql-client libmysqlclient-dev\n\nTop_.\n\n\nConfiguration file\n------------------\n\nThe configuration used by this component is read from the file located at\n``/etc/fiware.d/fiware-cloto.cfg``, unless otherwise specified by environment\nvariable ``CLOTO_SETTINGS_FILE``.\n\nMySQL settings of this configuration must be adjusted before starting the\nfiware-facts component (for instance, user and password are empty by default):\nplease check section ``[mysql]``.\n\nA sample configuration file may include the following (see default `here\n<fiware_cloto/cloto_settings/fiware-cloto.cfg>`_):\n\n::\n\n    [openstack]\n    # OPENSTACK information about KEYSTONE to validate tokens received\n    OPENSTACK_URL: http://cloud.lab.fi-ware.org:4731/v2.0\n    ADM_USER:\n    ADM_PASS:\n    ADM_TENANT_ID:\n    ADM_TENANT_NAME:\n    USER_DOMAIN_NAME: Default\n    AUTH_API: v2.0\n\n    [policy_manager]\n    SECURITY_LEVEL: LOW\n    SETTINGS_TYPE: production\n    DEFAULT_WINDOW_SIZE: 5\n    MAX_WINDOW_SIZE: 10\n    LOGGING_PATH: /var/log/fiware-cloto\n\n    [context_broker]\n    CONTEXT_BROKER_URL: http://130.206.115.92:1026/v1\n    # Public IP of fiware-facts module\n    NOTIFICATION_URL: http://127.0.0.1:5000/v1.0\n    NOTIFICATION_TYPE: ONTIMEINTERVAL\n    NOTIFICATION_TIME: PT5S\n\n    [rabbitmq]\n    # URL Where RabbitMQ is listening (no port needed, it uses default port)\n    RABBITMQ_URL: localhost\n\n    [mysql]\n    DB_CHARSET: utf8\n    DB_HOST: localhost\n    DB_NAME: cloto\n    DB_USER:\n    DB_PASSWD:\n\n    [django]\n    DEBUG: False\n    DATABASE_ENGINE: django.db.backends.mysql\n    ALLOWED_HOSTS: ['127.0.0.1', 'localhost']\n    ### Must be a unique generated value. keep that key safe.\n    SECRET_KEY: TestingKey+faeogfjksrjgpjaspigjiopsjgvopjsopgvj\n\n    [logging]\n    level: INFO\n\nTop_.\n\n\nInstallation\n------------\n\nOnce pre-installation requirements are satisfied, please install fiware-cloto\npackage from PyPI repository:\n\n.. code::\n\n    $ sudo pip install fiware-cloto\n\n\nRunning\n=======\n\nTo run fiware-cloto, just execute:\n\n.. code::\n\n    $ gunicorn fiware_cloto.cloto.wsgi -b BIND_ADDRESS\n\nTo stop fiware-cloto, you can stop gunicorn server, or kill it\n\nNOTE: to enable writing gunicorn log messages to console, please add the option\n``--log-file=-``; otherwise, if you prefer to write them into a file, just add\n``--log-file=<log file name>``. By default, logs will be written in the folder\n``/var/log/fiware-cloto/``: please ensure its permissions and owner are valid.\n\n\nRunning with supervisor\n-----------------------\n\nOptionally you can add a new layer to manage gunicorn process with a supervisor.\nJust install supervisor on your system:\n\n.. code::\n\n    centos$ sudo yum install supervisor\n    ubuntu$ sudo apt-get install supervisor\n\nCopy the file `utils/cloto_start <utils/cloto_start>`_ to ``/etc/fiware.d`` and\nensure it has execution permissions:\n\n.. code::\n\n    $ sudo chmod a+x /etc/fiware.d/cloto_start\n\nThen copy the file `utils/fiware-cloto.conf <utils/fiware-cloto.conf>`_ to\n``/etc/supervisor/conf.d`` and start fiware-cloto using supervisor:\n\n.. code::\n\n    $ sudo supervisorctl reread\n    $ sudo supervisorctl update\n    $ sudo supervisorctl start fiware-cloto\n\nTo stop fiware-cloto just execute:\n\n.. code::\n\n    $ sudo supervisorctl stop fiware-cloto\n\nNOTE: Supervisor provides an \"event listener\" to subscribe to the so-called\n\"event notifications\". The purpose of the event notification/subscription\nsystem is to provide a mechanism for arbitrary code to be run (e.g. send an\nemail, make an HTTP request, etc) when some condition is satisfied. That\ncondition usually has to do with subprocess state. For instance, you may\nwant to notify someone via email when a process crashes and is restarted\nby Supervisor. For more information check also the `Supervisor Documentation`_.\n\nTop_.\n\n\nAPI Overview\n============\n\nTo create a new rule for a server, user should send the rule as body of a POST\nrequest to the Cloto server, with the condition and action that should be\nperformed.\n\nFor example, this operation allows to create a specific rule associate to a\nserver:\n\n.. code::\n\n    $ curl -v -H 'X-Auth-Token: 86e096cd4de5490296fd647e21b7f0b4' -X POST\n    http://130.206.81.71:8000/v1.0/6571e3422ad84f7d828ce2f30373b3d4/servers\n    /32c23ac4-230d-42b6-81f2-db9bd7e5b790/rules/\n    -d '{\"action\": {\"actionName\": \"notify-scale\", \"operation\": \"scaleUp\"},\n    \"name\": \"ScaleUpRule\", \"condition\": { \"cpu\": { \"value\": 98, \"operand\": \"greater\" },\n    \"mem\": { \"value\": 95, \"operand\": \"greater equal\"}}}'\n\n\nThe result of this operation is a JSON with the Id of the server affected and\nthe ruleId of the created rule:\n\n::\n\n    {\n        \"serverId\": \"32c23ac4-230d-42b6-81f2-db9bd7e5b790\",\n        \"ruleId\": \"68edb416-bfc6-11e3-a8b9-fa163e202949\"\n    }\n\nThen user could perform a subscription to that rule with a new operation.\n\nPlease have a look at the `API Reference Documentation`_ section below and\nat the `user and programmer guide <doc/user_guide.rst>`_ for more description\nof the possibilities and operations.\n\nNote: Please keep in mind that the server (whose serverId in the previous example is\n32c23ac4-230d-42b6-81f2-db9bd7e5b790 and tenantID is 6571e3422ad84f7d828ce2f30373b3d4)\nhas to be created in FIWARE Lab. Policy Manager does not take care about this instance\ncreation.\n\nTop_.\n\n\nAPI Reference Documentation\n---------------------------\n\n- `FIWARE Policy Manager v1 (Apiary)`__\n\n__ `FIWARE Policy Manager - Apiary`_\n\nTop_.\n\n\nTesting\n=======\n\nUnit tests\n----------\n\nDownload source code from github\n\n.. code::\n\n    $ git clone https://github.com/telefonicaid/fiware-cloto.git\n\nTo execute the unit tests, you must set the environment variable pointing to the\nsettings_test file. Then you can use coverage to execute the tests and obtain\nthe percentage of lines coveved by the tests. You must execute the tests from\nproject folder ``fiware-cloto``. Once you were inside the right location,\nexecute the required commands:\n\n.. code::\n\n    $ export DJANGO_SETTINGS_MODULE=fiware_cloto.cloto_settings.settings_tests\n    $ export CLOTO_SETTINGS_FILE=$PWD/fiware_cloto/cloto_settings/fiware-cloto.cfg\n    $ python fiware_cloto/manage.py test\n\n\nTop_.\n\n\nEnd-to-end tests\n----------------\n\nThere are two ways to check that fiware-cloto is up and running:\n\nThe first one does not need authentication and you will get the server details:\n\n.. code::\n\n    $ curl -v -H 'X-Auth-Token: $AUTH_TOKEN' http://$HOST:8000/v1.0/$TENANT_ID/\n\nResponse should be similar to:\n\n::\n\n    {\n        \"owner\": \"Telefonica I+D\",\n        \"doc\": \"http://docs.policymanager.apiary.io\",\n        \"runningfrom\": \"16/02/03 16:16:27\",\n        \"version\": \"2.3.0\"\n    }\n\nThe second one need authentication. You can execute a GET request similar to:\n\n.. code::\n\n    $ curl -v -H 'X-Auth-Token: $AUTH_TOKEN' http://$HOST:8000/v1.0/$TENANT_ID/\n\nWhere:\n\n- **$AUTH_TOKEN**: is a valid token owned by the user. You can request this\n  token from keystone.\n- **$HOST**: is the url/IP of the machine where fiware facts is installed,\n  for example: (policymanager-host.org, 127.0.0.1, etc)\n- **$TENANT_ID**: is a tenantId of the user, for example:\n  6571e3422ad84f7d828ce2f30373b3d4\n\nThe response should be similar to:\n\n::\n\n    {\n        \"owner\": \"Telefonica I+D\",\n        \"doc\": \"http://docs.policymanager.apiary.io\",\n        \"runningfrom\": \"16/02/03 16:16:27\",\n        \"version\": \"2.3.0\"\n        \"windowsize\": 10\n    }\n\nPlease refer to the `Installation and administration guide <doc/admin_guide.rst>`_\nfor details.\n\nTop_.\n\n\nAcceptance tests\n----------------\n\nRequirements\n\n- Python 2.7\n- pip 7.0.0 or above (https://pip.pypa.io/en/stable/installing/)\n- virtualenv installed (pip install virtalenv)\n- Git installed (yum install git-core / apt-get install git)\n\nEnvironment preparation:\n\n- Create a virtual environment somewhere, e.g. in ENV (virtualenv ENV)\n- Activate the virtual environment (source ENV/bin/activate)\n- Change to the test/acceptance folder of the project\n- Install the requirements for the acceptance tests in the virtual environment\n  (pip install -r requirements.txt --allow-all-external).\n- Configure file in fiware_cloto/cloto/tests/acceptance/commons/configuration.py\n  adding the keystone url, and a valid, user, password and tenant ID.\n\nTests execution\n\nChange to the fiware_cloto/cloto/tests/acceptance folder of the project if not\nalready on it and execute:\n\n.. code::\n\n    $ behave\n\nIn the following document you will find the steps to execute automated\ntests for the Policy Manager GE:\n\n- `Policy Manager acceptance tests\n  <fiware_cloto/cloto/tests/acceptance/README.rst>`_\n\nTop_.\n\n\nAdvanced topics\n===============\n\n- `Installation and administration <doc/admin_guide.rst>`_\n- `User and programmers guide <doc/user_guide.rst>`_\n- `Open RESTful API Specification <doc/open_spec.rst>`_\n- `Architecture Description <doc/architecture.rst>`_\n\nTop_.\n\n\nSupport\n=======\n\nAsk your thorough programming questions using stackoverflow_ and your general\nquestions on `FIWARE Q&A`_. In both cases please use the tag *fiware-bosun*.\n\nTop_.\n\n\nLicense\n=======\n\n\\(c) 2013-2016 Telef\u00f3nica I+D, Apache License 2.0\n\n\n.. IMAGES\n\n.. |Build Status| image:: https://travis-ci.org/telefonicaid/fiware-cloto.svg?branch=develop\n   :target: https://travis-ci.org/telefonicaid/fiware-cloto\n   :alt: Build Status\n.. |Coverage Status| image:: https://img.shields.io/coveralls/telefonicaid/fiware-cloto/develop.svg\n   :target: https://coveralls.io/r/telefonicaid/fiware-cloto\n   :alt: Coverage Status\n.. |Pypi Version| image:: https://badge.fury.io/py/fiware-cloto.svg\n   :target: https://pypi.python.org/pypi/fiware-cloto/\n   :alt: Version\n.. |StackOverflow| image:: https://img.shields.io/badge/support-sof-yellowgreen.svg\n   :target: https://stackoverflow.com/questions/tagged/fiware-bosun\n   :alt: Help, ask questions\n.. |License Badge| image:: https://img.shields.io/badge/license-Apache_2.0-blue.svg\n   :target: LICENSE.txt\n.. |Documentation Badge| image:: https://readthedocs.org/projects/fiware-cloto/badge/?version=latest\n   :target: http://fiware-cloto.readthedocs.org/en/latest/?badge=latest\n   :alt: License\n.. |Docker badge| image:: https://img.shields.io/docker/pulls/fiware/bosun-cloto.svg\n   :target: https://hub.docker.com/r/fiware/bosun-cloto\n   :alt: Docker Pulls\n\n.. REFERENCES\n\n.. _FIWARE: https://www.fiware.org/\n.. _FIWARE Q&A: https://ask.fiware.org\n.. _FIWARE Ops: https://www.fiware.org/fiware-operations/\n.. _FIWARE Cloto - GitHub issues: https://github.com/telefonicaid/fiware-cloto/issues/new\n.. _FIWARE Policy Manager - Apiary: https://jsapi.apiary.io/apis/policymanager/reference.html\n.. _FIWARE Policy Manager - Catalogue: http://catalogue.fiware.org/enablers/policy-manager-bosun\n.. _Orion Context Broker: http://catalogue.fiware.org/enablers/publishsubscribe-context-broker-orion-context-broker\n.. _stackoverflow: http://stackoverflow.com/questions/ask\n.. _Supervisor Documentation: http://supervisord.org/events.html\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/telefonicaid/fiware-cloto/tarball/v2.8.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/telefonicaid/fiware-cloto", "keywords": "fiware,policy,manager,cloud", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "fiware-cloto", "package_url": "https://pypi.org/project/fiware-cloto/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fiware-cloto/", "project_urls": {"Download": "https://github.com/telefonicaid/fiware-cloto/tarball/v2.8.0", "Homepage": "https://github.com/telefonicaid/fiware-cloto"}, "release_url": "https://pypi.org/project/fiware-cloto/2.8.0/", "requires_dist": null, "requires_python": null, "summary": "This module is part of FIWARE Policy Manager. It provides a REST API to create rules associated to servers, subscribe servers to Context Broker to get information about their resources consumption and launch actions described in rules when conditions are met.", "version": "2.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"LICENSE.txt\" rel=\"nofollow\"><img alt=\"License Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc92aa2fab83723dc2b377ddd647b57ea400cc72/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368655f322e302d626c75652e737667\"></a> <a href=\"http://fiware-cloto.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/169aed13427a5e7c1da9f47d9f0b2116f0603f82/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6669776172652d636c6f746f2f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://stackoverflow.com/questions/tagged/fiware-bosun\" rel=\"nofollow\"><img alt=\"Help, ask questions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f77fb55c94804043d2833f46800245ea3470862/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d736f662d79656c6c6f77677265656e2e737667\"></a> <a href=\"https://travis-ci.org/telefonicaid/fiware-cloto\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef4dca4eb9bb6f1e2c19939e73a3b134080dbd4e/68747470733a2f2f7472617669732d63692e6f72672f74656c65666f6e69636169642f6669776172652d636c6f746f2e7376673f6272616e63683d646576656c6f70\"></a> <a href=\"https://coveralls.io/r/telefonicaid/fiware-cloto\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d12c7703ae0d462218977e9f7e1433503d5181ac/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f74656c65666f6e69636169642f6669776172652d636c6f746f2f646576656c6f702e737667\"></a> <a href=\"https://hub.docker.com/r/fiware/bosun-cloto\" rel=\"nofollow\"><img alt=\"Docker Pulls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdcff989adcacf78f752ee334481bea676a2044e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6669776172652f626f73756e2d636c6f746f2e737667\"></a> <a href=\"https://pypi.python.org/pypi/fiware-cloto/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/551dbd37e1eaed0f190e8bc086384dfcf97f8a60/68747470733a2f2f62616467652e667572792e696f2f70792f6669776172652d636c6f746f2e737667\"></a></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#introduction\" id=\"id4\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#gei-overall-description\" id=\"id5\" rel=\"nofollow\">GEi overall description</a><ul>\n<li><a href=\"#components\" id=\"id6\" rel=\"nofollow\">Components</a></li>\n</ul>\n</li>\n<li><a href=\"#build-and-install\" id=\"id7\" rel=\"nofollow\">Build and Install</a><ul>\n<li><a href=\"#requirements\" id=\"id8\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#pre-installation\" id=\"id9\" rel=\"nofollow\">Pre-Installation</a></li>\n<li><a href=\"#configuration-file\" id=\"id10\" rel=\"nofollow\">Configuration file</a></li>\n<li><a href=\"#installation\" id=\"id11\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#running\" id=\"id12\" rel=\"nofollow\">Running</a><ul>\n<li><a href=\"#running-with-supervisor\" id=\"id13\" rel=\"nofollow\">Running with supervisor</a></li>\n</ul>\n</li>\n<li><a href=\"#api-overview\" id=\"id14\" rel=\"nofollow\">API Overview</a><ul>\n<li><a href=\"#api-reference-documentation\" id=\"id15\" rel=\"nofollow\">API Reference Documentation</a></li>\n</ul>\n</li>\n<li><a href=\"#testing\" id=\"id16\" rel=\"nofollow\">Testing</a><ul>\n<li><a href=\"#unit-tests\" id=\"id17\" rel=\"nofollow\">Unit tests</a></li>\n<li><a href=\"#end-to-end-tests\" id=\"id18\" rel=\"nofollow\">End-to-end tests</a></li>\n<li><a href=\"#acceptance-tests\" id=\"id19\" rel=\"nofollow\">Acceptance tests</a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-topics\" id=\"id20\" rel=\"nofollow\">Advanced topics</a></li>\n<li><a href=\"#support\" id=\"id21\" rel=\"nofollow\">Support</a></li>\n<li><a href=\"#license\" id=\"id22\" rel=\"nofollow\">License</a></li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Introduction</a></h2>\n<p>This is the code repository for <strong>FIWARE Policy Manager GE - Cloto</strong>, a server\nthat provides a REST API to create rules associated to servers, subscribe\nservers to Context Broker to get information about resources consumption of\nthose servers and launch actions described in rules when conditions are met.</p>\n<p>This project is part of <a href=\"https://www.fiware.org/\" rel=\"nofollow\">FIWARE</a>.\nCheck also the <a href=\"http://catalogue.fiware.org/enablers/policy-manager-bosun\" rel=\"nofollow\">FIWARE Catalogue entry for Policy Manager</a></p>\n<p>Any feedback on this documentation is highly welcome, including bugs, typos or\nthings you think should be included but aren\u2019t. You can use <a href=\"https://github.com/telefonicaid/fiware-cloto/issues/new\" rel=\"nofollow\">github issues</a>\nto provide feedback.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"gei-overall-description\">\n<h2><a href=\"#id5\" rel=\"nofollow\">GEi overall description</a></h2>\n<p>Bosun GEri is the reference implementation of Policy Manager GE.</p>\n<p>Bosun offers decision-making ability, independently of the type of resource\n(physical/virtual resources, network, service, etc.) being able to solve\ncomplex problems within the Cloud field by reasoning about the knowledge\nbase, represented by facts and rules. Bosun GEri provides the basic management\nof cloud resources based on rules, as well as management of the corresponding\nresources within FIWARE Cloud instances based on infrastructure physical\nmonitoring, resources and services security monitoring or whatever that\ncould be defined by facts, actions and rules.</p>\n<p>The baseline for the Bosun GEri is PyCLIPS, which is a module to interact with\nCLIPS expert system implemented in Python language. The reason to take PyCLIPS\nis to extend the OpenStack ecosystem with an expert system, written in the same\nlanguage as the rest of the OpenStack services. Besides, It provides\nnotification service to your own HTTP server where you can define your\nown actions based on the notifications launched by Policy Manager.\nLast but not least, Bosun is integrated with the Monitoring GEri in order\nto recover the information of the (virtual) system and calculate any possible\nchange on it based on the knowledge database defined for it.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n<div id=\"components\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Components</a></h3>\n<dl>\n<dt>Fiware-Cloto</dt>\n<dd>Fiware-Cloto is part of FIWARE Policy Manager. It provides a REST API to\ncreate rules associated to servers, subscribe servers to Context Broker to\nget information about resources consumption of that servers and launch\nactions described in rules when conditions are met.</dd>\n<dt>Fiware-Facts</dt>\n<dd>Server to process the incoming facts from <a href=\"http://catalogue.fiware.org/enablers/publishsubscribe-context-broker-orion-context-broker\" rel=\"nofollow\">Orion Context Broker</a> and\npublish the result into a RabbitMQ queue to be analysed by Fiware-Cloto.\nThe facts are the result of the server resources consumption.</dd>\n</dl>\n<p>For more information, please refer to the <a href=\"doc/index.rst\" rel=\"nofollow\">documentation</a>.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n</div>\n<div id=\"build-and-install\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Build and Install</a></h2>\n<div id=\"requirements\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Requirements</a></h3>\n<p>Operating systems:</p>\n<ul>\n<li>CentOS (RedHat) and Ubuntu (Debian), being CentOS 7 the reference\noperating system.</li>\n</ul>\n<p>Software dependencies:</p>\n<ul>\n<li>Python 2.7</li>\n<li>PyClips 1.0 (<a href=\"http://sourceforge.net/projects/pyclips/files/\" rel=\"nofollow\">http://sourceforge.net/projects/pyclips/files/</a>)</li>\n<li>RabbitMQ Server 3.3.0 or above (<a href=\"http://www.rabbitmq.com/download.html\" rel=\"nofollow\">http://www.rabbitmq.com/download.html</a>)</li>\n<li>MySQL 5.6.14 or above (<a href=\"http://dev.mysql.com/downloads/mysql/\" rel=\"nofollow\">http://dev.mysql.com/downloads/mysql/</a>)</li>\n<li>pip 7.0.0 or above (<a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">https://pip.pypa.io/en/stable/installing/</a>)</li>\n<li>gcc-c++ and gcc libraries</li>\n</ul>\n<p>This module also needs the installation of these other components:</p>\n<ul>\n<li>Fiware-facts module installed (<a href=\"https://github.com/telefonicaid/fiware-facts\" rel=\"nofollow\">https://github.com/telefonicaid/fiware-facts</a>)</li>\n<li>A running instance of Orion Context Broker v0.28\n(<a href=\"https://github.com/telefonicaid/fiware-orion/releases/tag/0.28.0\" rel=\"nofollow\">https://github.com/telefonicaid/fiware-orion/releases/tag/0.28.0</a>)</li>\n<li>Fiware-monitoring connected to the Orion instance to provide information\nabout servers (<a href=\"https://github.com/telefonicaid/fiware-monitoring\" rel=\"nofollow\">https://github.com/telefonicaid/fiware-monitoring</a>).</li>\n</ul>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"pre-installation\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Pre-Installation</a></h3>\n<p>You must create a database named <tt>cloto</tt> in your MySQL server before\ninstalling this component.</p>\n<p>In addition, be sure you have installed MySQL development libraries and tools\n(using package managers such as yum or apt-get):</p>\n<pre>centos$ sudo yum install mysql-devel\nubuntu$ sudo apt-get install mysql-client libmysqlclient-dev\n</pre>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"configuration-file\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Configuration file</a></h3>\n<p>The configuration used by this component is read from the file located at\n<tt><span class=\"pre\">/etc/fiware.d/fiware-cloto.cfg</span></tt>, unless otherwise specified by environment\nvariable <tt>CLOTO_SETTINGS_FILE</tt>.</p>\n<p>MySQL settings of this configuration must be adjusted before starting the\nfiware-facts component (for instance, user and password are empty by default):\nplease check section <tt>[mysql]</tt>.</p>\n<p>A sample configuration file may include the following (see default <a href=\"fiware_cloto/cloto_settings/fiware-cloto.cfg\" rel=\"nofollow\">here</a>):</p>\n<pre>[openstack]\n# OPENSTACK information about KEYSTONE to validate tokens received\nOPENSTACK_URL: http://cloud.lab.fi-ware.org:4731/v2.0\nADM_USER:\nADM_PASS:\nADM_TENANT_ID:\nADM_TENANT_NAME:\nUSER_DOMAIN_NAME: Default\nAUTH_API: v2.0\n\n[policy_manager]\nSECURITY_LEVEL: LOW\nSETTINGS_TYPE: production\nDEFAULT_WINDOW_SIZE: 5\nMAX_WINDOW_SIZE: 10\nLOGGING_PATH: /var/log/fiware-cloto\n\n[context_broker]\nCONTEXT_BROKER_URL: http://130.206.115.92:1026/v1\n# Public IP of fiware-facts module\nNOTIFICATION_URL: http://127.0.0.1:5000/v1.0\nNOTIFICATION_TYPE: ONTIMEINTERVAL\nNOTIFICATION_TIME: PT5S\n\n[rabbitmq]\n# URL Where RabbitMQ is listening (no port needed, it uses default port)\nRABBITMQ_URL: localhost\n\n[mysql]\nDB_CHARSET: utf8\nDB_HOST: localhost\nDB_NAME: cloto\nDB_USER:\nDB_PASSWD:\n\n[django]\nDEBUG: False\nDATABASE_ENGINE: django.db.backends.mysql\nALLOWED_HOSTS: ['127.0.0.1', 'localhost']\n### Must be a unique generated value. keep that key safe.\nSECRET_KEY: TestingKey+faeogfjksrjgpjaspigjiopsjgvopjsopgvj\n\n[logging]\nlevel: INFO\n</pre>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Installation</a></h3>\n<p>Once pre-installation requirements are satisfied, please install fiware-cloto\npackage from PyPI repository:</p>\n<pre>$ sudo pip install fiware-cloto\n</pre>\n</div>\n</div>\n<div id=\"running\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Running</a></h2>\n<p>To run fiware-cloto, just execute:</p>\n<pre>$ gunicorn fiware_cloto.cloto.wsgi -b BIND_ADDRESS\n</pre>\n<p>To stop fiware-cloto, you can stop gunicorn server, or kill it</p>\n<p>NOTE: to enable writing gunicorn log messages to console, please add the option\n<tt><span class=\"pre\">--log-file=-</span></tt>; otherwise, if you prefer to write them into a file, just add\n<tt><span class=\"pre\">--log-file=&lt;log</span> file name&gt;</tt>. By default, logs will be written in the folder\n<tt><span class=\"pre\">/var/log/fiware-cloto/</span></tt>: please ensure its permissions and owner are valid.</p>\n<div id=\"running-with-supervisor\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Running with supervisor</a></h3>\n<p>Optionally you can add a new layer to manage gunicorn process with a supervisor.\nJust install supervisor on your system:</p>\n<pre>centos$ sudo yum install supervisor\nubuntu$ sudo apt-get install supervisor\n</pre>\n<p>Copy the file <a href=\"utils/cloto_start\" rel=\"nofollow\">utils/cloto_start</a> to <tt>/etc/fiware.d</tt> and\nensure it has execution permissions:</p>\n<pre>$ sudo chmod a+x /etc/fiware.d/cloto_start\n</pre>\n<p>Then copy the file <a href=\"utils/fiware-cloto.conf\" rel=\"nofollow\">utils/fiware-cloto.conf</a> to\n<tt>/etc/supervisor/conf.d</tt> and start fiware-cloto using supervisor:</p>\n<pre>$ sudo supervisorctl reread\n$ sudo supervisorctl update\n$ sudo supervisorctl start fiware-cloto\n</pre>\n<p>To stop fiware-cloto just execute:</p>\n<pre>$ sudo supervisorctl stop fiware-cloto\n</pre>\n<p>NOTE: Supervisor provides an \u201cevent listener\u201d to subscribe to the so-called\n\u201cevent notifications\u201d. The purpose of the event notification/subscription\nsystem is to provide a mechanism for arbitrary code to be run (e.g. send an\nemail, make an HTTP request, etc) when some condition is satisfied. That\ncondition usually has to do with subprocess state. For instance, you may\nwant to notify someone via email when a process crashes and is restarted\nby Supervisor. For more information check also the <a href=\"http://supervisord.org/events.html\" rel=\"nofollow\">Supervisor Documentation</a>.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n</div>\n<div id=\"api-overview\">\n<h2><a href=\"#id14\" rel=\"nofollow\">API Overview</a></h2>\n<p>To create a new rule for a server, user should send the rule as body of a POST\nrequest to the Cloto server, with the condition and action that should be\nperformed.</p>\n<p>For example, this operation allows to create a specific rule associate to a\nserver:</p>\n<pre>$ curl -v -H 'X-Auth-Token: 86e096cd4de5490296fd647e21b7f0b4' -X POST\nhttp://130.206.81.71:8000/v1.0/6571e3422ad84f7d828ce2f30373b3d4/servers\n/32c23ac4-230d-42b6-81f2-db9bd7e5b790/rules/\n-d '{\"action\": {\"actionName\": \"notify-scale\", \"operation\": \"scaleUp\"},\n\"name\": \"ScaleUpRule\", \"condition\": { \"cpu\": { \"value\": 98, \"operand\": \"greater\" },\n\"mem\": { \"value\": 95, \"operand\": \"greater equal\"}}}'\n</pre>\n<p>The result of this operation is a JSON with the Id of the server affected and\nthe ruleId of the created rule:</p>\n<pre>{\n    \"serverId\": \"32c23ac4-230d-42b6-81f2-db9bd7e5b790\",\n    \"ruleId\": \"68edb416-bfc6-11e3-a8b9-fa163e202949\"\n}\n</pre>\n<p>Then user could perform a subscription to that rule with a new operation.</p>\n<p>Please have a look at the <a href=\"#api-reference-documentation\" rel=\"nofollow\">API Reference Documentation</a> section below and\nat the <a href=\"doc/user_guide.rst\" rel=\"nofollow\">user and programmer guide</a> for more description\nof the possibilities and operations.</p>\n<p>Note: Please keep in mind that the server (whose serverId in the previous example is\n32c23ac4-230d-42b6-81f2-db9bd7e5b790 and tenantID is 6571e3422ad84f7d828ce2f30373b3d4)\nhas to be created in FIWARE Lab. Policy Manager does not take care about this instance\ncreation.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n<div id=\"api-reference-documentation\">\n<h3><a href=\"#id15\" rel=\"nofollow\">API Reference Documentation</a></h3>\n<ul>\n<li><a href=\"https://jsapi.apiary.io/apis/policymanager/reference.html\" rel=\"nofollow\">FIWARE Policy Manager v1 (Apiary)</a></li>\n</ul>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n</div>\n<div id=\"testing\">\n<h2><a href=\"#id16\" rel=\"nofollow\">Testing</a></h2>\n<div id=\"unit-tests\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Unit tests</a></h3>\n<p>Download source code from github</p>\n<pre>$ git clone https://github.com/telefonicaid/fiware-cloto.git\n</pre>\n<p>To execute the unit tests, you must set the environment variable pointing to the\nsettings_test file. Then you can use coverage to execute the tests and obtain\nthe percentage of lines coveved by the tests. You must execute the tests from\nproject folder <tt><span class=\"pre\">fiware-cloto</span></tt>. Once you were inside the right location,\nexecute the required commands:</p>\n<pre>$ export DJANGO_SETTINGS_MODULE=fiware_cloto.cloto_settings.settings_tests\n$ export CLOTO_SETTINGS_FILE=$PWD/fiware_cloto/cloto_settings/fiware-cloto.cfg\n$ python fiware_cloto/manage.py test\n</pre>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"end-to-end-tests\">\n<h3><a href=\"#id18\" rel=\"nofollow\">End-to-end tests</a></h3>\n<p>There are two ways to check that fiware-cloto is up and running:</p>\n<p>The first one does not need authentication and you will get the server details:</p>\n<pre>$ curl -v -H 'X-Auth-Token: $AUTH_TOKEN' http://$HOST:8000/v1.0/$TENANT_ID/\n</pre>\n<p>Response should be similar to:</p>\n<pre>{\n    \"owner\": \"Telefonica I+D\",\n    \"doc\": \"http://docs.policymanager.apiary.io\",\n    \"runningfrom\": \"16/02/03 16:16:27\",\n    \"version\": \"2.3.0\"\n}\n</pre>\n<p>The second one need authentication. You can execute a GET request similar to:</p>\n<pre>$ curl -v -H 'X-Auth-Token: $AUTH_TOKEN' http://$HOST:8000/v1.0/$TENANT_ID/\n</pre>\n<p>Where:</p>\n<ul>\n<li><strong>$AUTH_TOKEN</strong>: is a valid token owned by the user. You can request this\ntoken from keystone.</li>\n<li><strong>$HOST</strong>: is the url/IP of the machine where fiware facts is installed,\nfor example: (policymanager-host.org, 127.0.0.1, etc)</li>\n<li><strong>$TENANT_ID</strong>: is a tenantId of the user, for example:\n6571e3422ad84f7d828ce2f30373b3d4</li>\n</ul>\n<p>The response should be similar to:</p>\n<pre>{\n    \"owner\": \"Telefonica I+D\",\n    \"doc\": \"http://docs.policymanager.apiary.io\",\n    \"runningfrom\": \"16/02/03 16:16:27\",\n    \"version\": \"2.3.0\"\n    \"windowsize\": 10\n}\n</pre>\n<p>Please refer to the <a href=\"doc/admin_guide.rst\" rel=\"nofollow\">Installation and administration guide</a>\nfor details.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"acceptance-tests\">\n<h3><a href=\"#id19\" rel=\"nofollow\">Acceptance tests</a></h3>\n<p>Requirements</p>\n<ul>\n<li>Python 2.7</li>\n<li>pip 7.0.0 or above (<a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">https://pip.pypa.io/en/stable/installing/</a>)</li>\n<li>virtualenv installed (pip install virtalenv)</li>\n<li>Git installed (yum install git-core / apt-get install git)</li>\n</ul>\n<p>Environment preparation:</p>\n<ul>\n<li>Create a virtual environment somewhere, e.g. in ENV (virtualenv ENV)</li>\n<li>Activate the virtual environment (source ENV/bin/activate)</li>\n<li>Change to the test/acceptance folder of the project</li>\n<li>Install the requirements for the acceptance tests in the virtual environment\n(pip install -r requirements.txt \u2013allow-all-external).</li>\n<li>Configure file in fiware_cloto/cloto/tests/acceptance/commons/configuration.py\nadding the keystone url, and a valid, user, password and tenant ID.</li>\n</ul>\n<p>Tests execution</p>\n<p>Change to the fiware_cloto/cloto/tests/acceptance folder of the project if not\nalready on it and execute:</p>\n<pre>$ behave\n</pre>\n<p>In the following document you will find the steps to execute automated\ntests for the Policy Manager GE:</p>\n<ul>\n<li><a href=\"fiware_cloto/cloto/tests/acceptance/README.rst\" rel=\"nofollow\">Policy Manager acceptance tests</a></li>\n</ul>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n</div>\n<div id=\"advanced-topics\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Advanced topics</a></h2>\n<ul>\n<li><a href=\"doc/admin_guide.rst\" rel=\"nofollow\">Installation and administration</a></li>\n<li><a href=\"doc/user_guide.rst\" rel=\"nofollow\">User and programmers guide</a></li>\n<li><a href=\"doc/open_spec.rst\" rel=\"nofollow\">Open RESTful API Specification</a></li>\n<li><a href=\"doc/architecture.rst\" rel=\"nofollow\">Architecture Description</a></li>\n</ul>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"support\">\n<h2><a href=\"#id21\" rel=\"nofollow\">Support</a></h2>\n<p>Ask your thorough programming questions using <a href=\"http://stackoverflow.com/questions/ask\" rel=\"nofollow\">stackoverflow</a> and your general\nquestions on <a href=\"https://ask.fiware.org\" rel=\"nofollow\">FIWARE Q&amp;A</a>. In both cases please use the tag <em>fiware-bosun</em>.</p>\n<p><a href=\"#top\" rel=\"nofollow\">Top</a>.</p>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id22\" rel=\"nofollow\">License</a></h2>\n<p>(c) 2013-2016 Telef\u00f3nica I+D, Apache License 2.0</p>\n</div>\n\n          </div>"}, "last_serial": 2396956, "releases": {"1.1.0": [], "1.2.0": [{"comment_text": "", "digests": {"md5": "6fada026cf6b99a5b4ceccb97786de96", "sha256": "53847abca22cec8b90501d9a4892246c305e407e566105665fe096ad35bc7a8f"}, "downloads": -1, "filename": "fiware-cloto-1.2.0.tar.gz", "has_sig": false, "md5_digest": "6fada026cf6b99a5b4ceccb97786de96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 397465, "upload_time": "2014-11-05T09:43:10", "upload_time_iso_8601": "2014-11-05T09:43:10.021961Z", "url": "https://files.pythonhosted.org/packages/0a/f0/47f3b4211bb6002313df4c1257fe04fe018c350ec7fab8183ec1e7f3144d/fiware-cloto-1.2.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "c72b470453b5af9f1c5d68b72e886989", "sha256": "a94a89ccb8331a08decd85fdedfe4bb030640c116e7ca8e3e68366e1ebab6505"}, "downloads": -1, "filename": "fiware-cloto-1.4.0.tar.gz", "has_sig": false, "md5_digest": "c72b470453b5af9f1c5d68b72e886989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 401969, "upload_time": "2015-03-05T10:01:10", "upload_time_iso_8601": "2015-03-05T10:01:10.451181Z", "url": "https://files.pythonhosted.org/packages/51/5b/fc1fe3142493e8d5662ccae1bd0c4cb4b53e5d56bee9280b9c57c9d156b0/fiware-cloto-1.4.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "c812590215632197a25909be15c0aa05", "sha256": "e29cae13c5f7935538917f9a5cd40f3558623c442cdb34c5e2916dfb0621f749"}, "downloads": -1, "filename": "fiware-cloto-1.6.0.tar.gz", "has_sig": false, "md5_digest": "c812590215632197a25909be15c0aa05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 404137, "upload_time": "2015-07-31T09:25:28", "upload_time_iso_8601": "2015-07-31T09:25:28.220233Z", "url": "https://files.pythonhosted.org/packages/45/94/0c5a3c6c950461891c6352e9c60931bb79ddd82207966b0bfb7240012aa2/fiware-cloto-1.6.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "0b599a5dd406855395642d6649b821f7", "sha256": "91037bbcdaa58ba1dcf65c83fcddaa4077f03699feaf149d867a125ef4544fb9"}, "downloads": -1, "filename": "fiware-cloto-1.8.0.tar.gz", "has_sig": false, "md5_digest": "0b599a5dd406855395642d6649b821f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55686, "upload_time": "2015-09-29T11:06:22", "upload_time_iso_8601": "2015-09-29T11:06:22.571541Z", "url": "https://files.pythonhosted.org/packages/d5/b1/116f03ade78c4db1929c22a18cd33d9581f401250423f90fbef3c20ab9f3/fiware-cloto-1.8.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "3645506072c7da0e5319b68fa4a2ceec", "sha256": "087c4e33b4e483a141573f80e23c0c24faba7dd7098b177d7624b58510e83b77"}, "downloads": -1, "filename": "fiware-cloto-2.0.1.tar.gz", "has_sig": false, "md5_digest": "3645506072c7da0e5319b68fa4a2ceec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56673, "upload_time": "2015-10-23T09:41:17", "upload_time_iso_8601": "2015-10-23T09:41:17.086232Z", "url": "https://files.pythonhosted.org/packages/90/db/ec5d443296921e05d9383a261143fc856ec66771387c32892f08b011a28f/fiware-cloto-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "578ce53fb1354c61308b312555a5fbd5", "sha256": "bb8050842d551315dcf6d839c519aa654a8d7b5fd4595dc14c53aa991906bc0b"}, "downloads": -1, "filename": "fiware-cloto-2.1.0.tar.gz", "has_sig": false, "md5_digest": "578ce53fb1354c61308b312555a5fbd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57002, "upload_time": "2015-12-01T09:56:33", "upload_time_iso_8601": "2015-12-01T09:56:33.120449Z", "url": "https://files.pythonhosted.org/packages/4b/af/65a7a723b810650d1a9428b15836aa003cbbc1e007abce3278016c5b1fc6/fiware-cloto-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "4d0865df63f6e946101c95547667b63b", "sha256": "521b014e4cd9d0851834513de83b6b45d4c86db7b596f4ad5d432839828ea9fa"}, "downloads": -1, "filename": "fiware-cloto-2.2.0.tar.gz", "has_sig": false, "md5_digest": "4d0865df63f6e946101c95547667b63b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57500, "upload_time": "2015-12-29T17:09:16", "upload_time_iso_8601": "2015-12-29T17:09:16.835190Z", "url": "https://files.pythonhosted.org/packages/67/3c/6d3a8c271aa523cb5836f3b14ceaa9a48985e7fe47f986aed3d28a3519cb/fiware-cloto-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "14530dca63c8db974d3a9030c996802c", "sha256": "a4e78c51b9b692699a72b87aa43440c4447d5cbe5a5fe32e11e9987b531af13e"}, "downloads": -1, "filename": "fiware-cloto-2.3.0.tar.gz", "has_sig": false, "md5_digest": "14530dca63c8db974d3a9030c996802c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57703, "upload_time": "2016-02-01T14:03:37", "upload_time_iso_8601": "2016-02-01T14:03:37.105451Z", "url": "https://files.pythonhosted.org/packages/be/6f/87f371f1cac6e318b20f1d07a5c2d1311cfc3c0227ba196a026eec185b9d/fiware-cloto-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "869244300401cf719b9bc6e765740ad8", "sha256": "8b7e7fdea5d88318bd7841d3ea5587fb057d4b706609bb47b96a7808020f3b19"}, "downloads": -1, "filename": "fiware-cloto-2.4.0.tar.gz", "has_sig": false, "md5_digest": "869244300401cf719b9bc6e765740ad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58244, "upload_time": "2016-03-04T09:43:07", "upload_time_iso_8601": "2016-03-04T09:43:07.136569Z", "url": "https://files.pythonhosted.org/packages/4f/2a/ae105c5436147a618fcbae4c41e30d4ed1b31ab66a6f2b87488d59858fe9/fiware-cloto-2.4.0.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "83aa14577333850288a2caafeb38ac2f", "sha256": "dfafed36064f7ec1329e8908d782d1bbc79c9a27d40d65fc7fd1696bb215a664"}, "downloads": -1, "filename": "fiware-cloto-2.5.0.tar.gz", "has_sig": false, "md5_digest": "83aa14577333850288a2caafeb38ac2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59541, "upload_time": "2016-04-01T11:05:03", "upload_time_iso_8601": "2016-04-01T11:05:03.250187Z", "url": "https://files.pythonhosted.org/packages/07/f0/963183c2723ebe2f951f355cf627ddcdcbf1c6c518387925db2c690fcc96/fiware-cloto-2.5.0.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "750629a0374abaeffafd461d522ffb4d", "sha256": "ac96426984aeb5151eac6d6b820da8742f00722201184c91c62f3aac20b94491"}, "downloads": -1, "filename": "fiware-cloto-2.6.0.tar.gz", "has_sig": false, "md5_digest": "750629a0374abaeffafd461d522ffb4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59745, "upload_time": "2016-06-27T14:43:24", "upload_time_iso_8601": "2016-06-27T14:43:24.468819Z", "url": "https://files.pythonhosted.org/packages/3b/03/ced8f8d534424ad70d76baa92fd528f6fb7a55bae09fbeb016a73267ea00/fiware-cloto-2.6.0.tar.gz", "yanked": false}], "2.8.0": [{"comment_text": "", "digests": {"md5": "814bf1a41f9fe2bf91a9702fecf2dcbb", "sha256": "58cdb6074c00e9526269b150bc42fb13424602f3d24dde5b9454a7677e9e0d55"}, "downloads": -1, "filename": "fiware-cloto-2.8.0.tar.gz", "has_sig": false, "md5_digest": "814bf1a41f9fe2bf91a9702fecf2dcbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60325, "upload_time": "2016-10-13T10:59:19", "upload_time_iso_8601": "2016-10-13T10:59:19.534947Z", "url": "https://files.pythonhosted.org/packages/9d/9f/909083c0c9482fd3e697dbf04ddb74bfb380383881bb13db3757308cc3b5/fiware-cloto-2.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "814bf1a41f9fe2bf91a9702fecf2dcbb", "sha256": "58cdb6074c00e9526269b150bc42fb13424602f3d24dde5b9454a7677e9e0d55"}, "downloads": -1, "filename": "fiware-cloto-2.8.0.tar.gz", "has_sig": false, "md5_digest": "814bf1a41f9fe2bf91a9702fecf2dcbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60325, "upload_time": "2016-10-13T10:59:19", "upload_time_iso_8601": "2016-10-13T10:59:19.534947Z", "url": "https://files.pythonhosted.org/packages/9d/9f/909083c0c9482fd3e697dbf04ddb74bfb380383881bb13db3757308cc3b5/fiware-cloto-2.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:04 2020"}