{"info": {"author": "Tabulate", "author_email": "tabulatejarl8@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Update_Check is a Python module to implement in distributed programs. The functions as of now are checking for updates and updating a users Python file. It works by comparing the users Python file to the newest version of the file that's stored on a website like [GitHub](https://github.com).\n\n# Usage\n## Checking if File is Up to Date\n----\nOne feature of this module is checking if the users file is up to date with the latest version. \n### Syntax:\n```python\nisUpToDate(pathToProgram, programURL)\n```\nHeres an example of the ``isUpToDate()`` function:\n\n\n```python\nfrom update_check import isUpToDate\n\nif isUpToDate(__file__, \"https://github.com/username/repo/myProgram.py\") == False:\n   doSomething()\n```\n\n\nThis function will return True if the program is up to date with the web version and will return False if it's not. Note: ``__file__`` can be replaced with a path to a separate file.\n\n&nbsp;\n\n## Updating a File\n----\nTo update a file using this module, you will need to use the ``update()`` function.\n### Syntax:\n```python\nupdate(pathToProgram, programURL)\n```\n\nHere's an example of the ``update()`` function:\n\n\n```python\nfrom update_check import update\n\nupdate(__file__, \"https://github.com/username/repo/myProgram.py\")\n```\n\n\nThat block of code would grab the file from the URL and update the local file to that file. Note: ``__file__`` can be replaced with a path to a separate file.\n\n&nbsp;\n\n## Updating a File if it's not up to date\n----\nIf you want a combination of the previous 2 functions, where it will check if a file isn't up to date, and if so, then it will update the file, then you want to use the ``checkForUpdates()`` function.\n### Syntax:\n```python\ncheckForUpdates(pathToProgram, URL)\n```\nHere's an example of the ``checkForUpdates()`` function:\n\n\n```python\nfrom update_check import checkForUpdates\n\ncheckForUpdates(__file__, \"https://github.com/username/repo/myProgram.py\")\n```\n\n\nThe above block of code will test if the file specified, is not up to date, and if it isn't, it will update the file from the URL and return True. If it *is* up to date, then it will return False and do nothing. Note: ``__file__`` can be replaced with a path to a separate file.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TabulateJarl8/update_check", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "update-check", "package_url": "https://pypi.org/project/update-check/", "platform": "", "project_url": "https://pypi.org/project/update-check/", "project_urls": {"Homepage": "https://github.com/TabulateJarl8/update_check"}, "release_url": "https://pypi.org/project/update-check/0.0.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Package to update the end-users copy of your file to the latest version", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Update_Check is a Python module to implement in distributed programs. The functions as of now are checking for updates and updating a users Python file. It works by comparing the users Python file to the newest version of the file that's stored on a website like <a href=\"https://github.com\" rel=\"nofollow\">GitHub</a>.</p>\n<h1>Usage</h1>\n<h2>Checking if File is Up to Date</h2>\n<hr>\n<p>One feature of this module is checking if the users file is up to date with the latest version.</p>\n<h3>Syntax:</h3>\n<pre><span class=\"n\">isUpToDate</span><span class=\"p\">(</span><span class=\"n\">pathToProgram</span><span class=\"p\">,</span> <span class=\"n\">programURL</span><span class=\"p\">)</span>\n</pre>\n<p>Heres an example of the <code>isUpToDate()</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">update_check</span> <span class=\"kn\">import</span> <span class=\"n\">isUpToDate</span>\n\n<span class=\"k\">if</span> <span class=\"n\">isUpToDate</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">\"https://github.com/username/repo/myProgram.py\"</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n   <span class=\"n\">doSomething</span><span class=\"p\">()</span>\n</pre>\n<p>This function will return True if the program is up to date with the web version and will return False if it's not. Note: <code>__file__</code> can be replaced with a path to a separate file.</p>\n<p>\u00a0</p>\n<h2>Updating a File</h2>\n<hr>\n<p>To update a file using this module, you will need to use the <code>update()</code> function.</p>\n<h3>Syntax:</h3>\n<pre><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">pathToProgram</span><span class=\"p\">,</span> <span class=\"n\">programURL</span><span class=\"p\">)</span>\n</pre>\n<p>Here's an example of the <code>update()</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">update_check</span> <span class=\"kn\">import</span> <span class=\"n\">update</span>\n\n<span class=\"n\">update</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">\"https://github.com/username/repo/myProgram.py\"</span><span class=\"p\">)</span>\n</pre>\n<p>That block of code would grab the file from the URL and update the local file to that file. Note: <code>__file__</code> can be replaced with a path to a separate file.</p>\n<p>\u00a0</p>\n<h2>Updating a File if it's not up to date</h2>\n<hr>\n<p>If you want a combination of the previous 2 functions, where it will check if a file isn't up to date, and if so, then it will update the file, then you want to use the <code>checkForUpdates()</code> function.</p>\n<h3>Syntax:</h3>\n<pre><span class=\"n\">checkForUpdates</span><span class=\"p\">(</span><span class=\"n\">pathToProgram</span><span class=\"p\">,</span> <span class=\"n\">URL</span><span class=\"p\">)</span>\n</pre>\n<p>Here's an example of the <code>checkForUpdates()</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">update_check</span> <span class=\"kn\">import</span> <span class=\"n\">checkForUpdates</span>\n\n<span class=\"n\">checkForUpdates</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">\"https://github.com/username/repo/myProgram.py\"</span><span class=\"p\">)</span>\n</pre>\n<p>The above block of code will test if the file specified, is not up to date, and if it isn't, it will update the file from the URL and return True. If it <em>is</em> up to date, then it will return False and do nothing. Note: <code>__file__</code> can be replaced with a path to a separate file.</p>\n\n          </div>"}, "last_serial": 7094958, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a243426d6d1f7e5fce52607bdd1285f", "sha256": "be6dd3c1967aa5aeeda41c1d1f995ddfcdeb2db9e47c7a80b82a923f3df16a2d"}, "downloads": -1, "filename": "update_check-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4a243426d6d1f7e5fce52607bdd1285f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2078, "upload_time": "2020-04-19T17:01:50", "upload_time_iso_8601": "2020-04-19T17:01:50.090123Z", "url": "https://files.pythonhosted.org/packages/68/f0/8608d3b3b34eb9f2fb79dbd42491968f09e77019351f818ba9803c10b5ce/update_check-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6477f75a68ea4b6cd98cae044802e8ab", "sha256": "4269d4b1e2646962c4162f74051a9d89b84a1a381e77a2d30143ff142aa12b99"}, "downloads": -1, "filename": "update_check-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6477f75a68ea4b6cd98cae044802e8ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2071, "upload_time": "2020-04-19T17:06:47", "upload_time_iso_8601": "2020-04-19T17:06:47.126985Z", "url": "https://files.pythonhosted.org/packages/fc/32/c4c3c3f1af876b9ed976af5f1d135d737b2b93038ee458c2858f1e9d2050/update_check-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3d96daf858c82f8c114e80519bb7d702", "sha256": "0c5e7eb24d4465d6a9053f2c1e307af834215c60a1defa24079263a74ce362d3"}, "downloads": -1, "filename": "update_check-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3d96daf858c82f8c114e80519bb7d702", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2075, "upload_time": "2020-04-19T17:11:56", "upload_time_iso_8601": "2020-04-19T17:11:56.542126Z", "url": "https://files.pythonhosted.org/packages/99/6e/4cb4450a8e2bf1ba6cd41b49384f686117af6fbc52863818e4eed21b004f/update_check-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b9ffb4ec250e2f108b80c8bd6c576d73", "sha256": "47fbc5cb32894f1ad4361453551b8d53dd719d72f13ec38d59bea2fd97e80a99"}, "downloads": -1, "filename": "update_check-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b9ffb4ec250e2f108b80c8bd6c576d73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2140, "upload_time": "2020-04-20T02:33:45", "upload_time_iso_8601": "2020-04-20T02:33:45.126565Z", "url": "https://files.pythonhosted.org/packages/1a/ee/6acf1822c9bb6854925453440492de4c13c4af22a284b05faaf0de5a6792/update_check-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1f98b701705e3f0d3c87beda69f7d38d", "sha256": "6c09ae6d75539bab3dd623d739806ae2f80f63ab63afe0d25c2699e2b1fad842"}, "downloads": -1, "filename": "update_check-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1f98b701705e3f0d3c87beda69f7d38d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2132, "upload_time": "2020-04-20T05:06:33", "upload_time_iso_8601": "2020-04-20T05:06:33.695017Z", "url": "https://files.pythonhosted.org/packages/94/ca/4955c7271b3feb39c954615f702087e4f3cb0c0d61ecd3224c0ad6e95d7e/update_check-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "2685be73d396dad6f6894e02d74f8d02", "sha256": "5cfb6ca02085c7cf6a9109b06c470c3f96c404e33be719ceb2872701e56b5117"}, "downloads": -1, "filename": "update_check-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2685be73d396dad6f6894e02d74f8d02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2373, "upload_time": "2020-04-21T17:24:26", "upload_time_iso_8601": "2020-04-21T17:24:26.876766Z", "url": "https://files.pythonhosted.org/packages/b8/fd/b4b94aaabc852c3701a9704740de6990a03a1895080e3303004a8d4e435e/update_check-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ad2e6dd036ae6c2968cdf98e05d001dc", "sha256": "d0590f1943b0116e48d88217bdc3a8df3f48eed08ac6806f3aeabd8963cb7874"}, "downloads": -1, "filename": "update_check-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ad2e6dd036ae6c2968cdf98e05d001dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2572, "upload_time": "2020-04-24T18:10:25", "upload_time_iso_8601": "2020-04-24T18:10:25.083854Z", "url": "https://files.pythonhosted.org/packages/d1/ee/435fbc6eb5eb6e7eec1dca51ec82d46be6fc6077e84661b995af3c5339c3/update_check-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad2e6dd036ae6c2968cdf98e05d001dc", "sha256": "d0590f1943b0116e48d88217bdc3a8df3f48eed08ac6806f3aeabd8963cb7874"}, "downloads": -1, "filename": "update_check-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ad2e6dd036ae6c2968cdf98e05d001dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2572, "upload_time": "2020-04-24T18:10:25", "upload_time_iso_8601": "2020-04-24T18:10:25.083854Z", "url": "https://files.pythonhosted.org/packages/d1/ee/435fbc6eb5eb6e7eec1dca51ec82d46be6fc6077e84661b995af3c5339c3/update_check-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:55 2020"}