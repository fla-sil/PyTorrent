{"info": {"author": "Bogdan Mustiata", "author_email": "bogdan.mustiata@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "``docker-optimizer`` allows collapsing multiple ``RUN`` layers into a\nsingle one. This way, you can use the docker caching for development,\nyet get fewer layers for the final container.\n\nInstallation\n============\n\n.. code:: sh\n\n    pip install docker-optimizer\n\nUsage\n=====\n\nInput ``Dockerfile.dev``:\n\n.. code:: docker\n\n    FROM python:3.8-slim-buster\n\n    #============================================================================\n    # Install requirements\n    #============================================================================\n    COPY requirements.txt /requirements.txt\n    RUN pip install -r /requirements.txt\n\n    #============================================================================\n    # Update the package list\n    #============================================================================\n    RUN apt-get update -y\n\n    #============================================================================\n    # Install certbot\n    #============================================================================\n    RUN apt-get install -y curl && \\\n        curl -LO https://dl.eff.org/certbot-auto && \\\n        mv certbot-auto /usr/local/bin && \\\n        chown root /usr/local/bin/certbot-auto && \\\n        chmod 755 /usr/local/bin/certbot-auto && \\\n        certbot-auto --install-only -n\n\n    #============================================================================\n    # cleanup package list\n    #============================================================================\n    RUN rm -rf /var/lib/apt/lists/*\n\n    COPY new-certificate* /usr/local/bin/\n\n    USER 1000\n    ENV LE_AUTO_SUDO=\n    WORKDIR /usr/local/bin\n    ENTRYPOINT [\"python\", \"new-certificate.py\"]\n\n.. code:: sh\n\n    docker-optimizer Dockerfile.dev Dockerfile\n\n.. code:: docker\n\n    # compiled by docker-optimizer\n    # https://github.com/bmustiata/docker-optimizer\n    from python:3.8-slim-buster\n    copy requirements.txt /requirements.txt\n    run pip install -r /requirements.txt && apt-get update -y && apt-get install -y curl &&     curl -LO https://dl.eff.org/certbot-auto &&     mv certbot-auto /usr/local/bin &&     chown root /usr/local/bin/certbot-auto &&     chmod 755 /usr/local/bin/certbot-auto &&     certbot-auto --install-only -n && rm -rf /var/lib/apt/lists/*\n    copy new-certificate* /usr/local/bin/\n    user 1000\n    env 'LE_AUTO_SUDO' ''\n    workdir /usr/local/bin\n    entrypoint ['python', 'new-certificate.py']\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "docker-optimizer", "package_url": "https://pypi.org/project/docker-optimizer/", "platform": "", "project_url": "https://pypi.org/project/docker-optimizer/", "project_urls": null, "release_url": "https://pypi.org/project/docker-optimizer/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "A small program to optimize Dockerfiles", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">docker-optimizer</span></tt> allows collapsing multiple <tt>RUN</tt> layers into a\nsingle one. This way, you can use the docker caching for development,\nyet get fewer layers for the final container.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install docker-optimizer\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Input <tt>Dockerfile.dev</tt>:</p>\n<pre><span class=\"k\">FROM</span> <span class=\"s\">python:3.8-slim-buster</span>\n\n<span class=\"c\">#============================================================================</span>\n<span class=\"c\"># Install requirements</span>\n<span class=\"c\">#============================================================================</span>\n<span class=\"k\">COPY</span> requirements.txt /requirements.txt\n<span class=\"k\">RUN</span> pip install -r /requirements.txt\n\n<span class=\"c\">#============================================================================</span>\n<span class=\"c\"># Update the package list</span>\n<span class=\"c\">#============================================================================</span>\n<span class=\"k\">RUN</span> apt-get update -y\n\n<span class=\"c\">#============================================================================</span>\n<span class=\"c\"># Install certbot</span>\n<span class=\"c\">#============================================================================</span>\n<span class=\"k\">RUN</span> apt-get install -y curl <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>    curl -LO https://dl.eff.org/certbot-auto <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>    mv certbot-auto /usr/local/bin <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>    chown root /usr/local/bin/certbot-auto <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>    chmod <span class=\"m\">755</span> /usr/local/bin/certbot-auto <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>    certbot-auto --install-only -n\n\n<span class=\"c\">#============================================================================</span>\n<span class=\"c\"># cleanup package list</span>\n<span class=\"c\">#============================================================================</span>\n<span class=\"k\">RUN</span> rm -rf /var/lib/apt/lists/*\n\n<span class=\"k\">COPY</span> new-certificate* /usr/local/bin/\n\n<span class=\"k\">USER</span><span class=\"s\"> 1000</span>\n<span class=\"k\">ENV</span> <span class=\"nv\">LE_AUTO_SUDO</span><span class=\"o\">=</span>\n<span class=\"k\">WORKDIR</span><span class=\"s\"> /usr/local/bin</span>\n<span class=\"k\">ENTRYPOINT</span> <span class=\"p\">[</span><span class=\"s2\">\"python\"</span><span class=\"p\">,</span> <span class=\"s2\">\"new-certificate.py\"</span><span class=\"p\">]</span>\n</pre>\n<pre>docker-optimizer Dockerfile.dev Dockerfile\n</pre>\n<pre><span class=\"c\"># compiled by docker-optimizer</span>\n<span class=\"c\"># https://github.com/bmustiata/docker-optimizer</span>\n<span class=\"k\">from</span> <span class=\"s\">python:3.8-slim-buster</span>\n<span class=\"k\">copy</span> requirements.txt /requirements.txt\n<span class=\"k\">run</span> pip install -r /requirements.txt <span class=\"o\">&amp;&amp;</span> apt-get update -y <span class=\"o\">&amp;&amp;</span> apt-get install -y curl <span class=\"o\">&amp;&amp;</span>     curl -LO https://dl.eff.org/certbot-auto <span class=\"o\">&amp;&amp;</span>     mv certbot-auto /usr/local/bin <span class=\"o\">&amp;&amp;</span>     chown root /usr/local/bin/certbot-auto <span class=\"o\">&amp;&amp;</span>     chmod <span class=\"m\">755</span> /usr/local/bin/certbot-auto <span class=\"o\">&amp;&amp;</span>     certbot-auto --install-only -n <span class=\"o\">&amp;&amp;</span> rm -rf /var/lib/apt/lists/*\n<span class=\"k\">copy</span> new-certificate* /usr/local/bin/\n<span class=\"k\">user</span><span class=\"s\"> 1000</span>\n<span class=\"k\">env</span> <span class=\"s1\">'LE_AUTO_SUDO'</span> <span class=\"s1\">''</span>\n<span class=\"k\">workdir</span><span class=\"s\"> /usr/local/bin</span>\n<span class=\"k\">entrypoint</span> <span class=\"p\">[</span><span class=\"err\">'python'</span><span class=\"p\">,</span> <span class=\"err\">'new-certificate.py'</span><span class=\"p\">]</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6389644, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "dd67539679792fd2c2ebda1ed04fd4de", "sha256": "0066e6e05b753abb62ccc05d8db422f997d580f973726d08601cc2cf880c58da"}, "downloads": -1, "filename": "docker-optimizer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "dd67539679792fd2c2ebda1ed04fd4de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1632, "upload_time": "2019-12-17T03:07:26", "upload_time_iso_8601": "2019-12-17T03:07:26.630650Z", "url": "https://files.pythonhosted.org/packages/e3/a6/4f0c586b1e5b5ff77d107f608f5a1a750c10df2972348a31584b8608a862/docker-optimizer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "58fc535e169cd701f23ce2d3ceee35dc", "sha256": "e8426fe143e71d205d4f202a77b7d1525600fce7500d16bbc32d02ba78c8c991"}, "downloads": -1, "filename": "docker-optimizer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "58fc535e169cd701f23ce2d3ceee35dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2568, "upload_time": "2019-12-17T03:35:59", "upload_time_iso_8601": "2019-12-17T03:35:59.422218Z", "url": "https://files.pythonhosted.org/packages/6f/98/90c217f5c249beda242d73d507fcd3ad886515cf5ebdec4d2e4725485bb9/docker-optimizer-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "344fba809f1c6876a816d569e33a5717", "sha256": "dfff5b9f3e60669faeced3fda0bd5960a40eb8017caa95b571b7641f6b72a78c"}, "downloads": -1, "filename": "docker-optimizer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "344fba809f1c6876a816d569e33a5717", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3231, "upload_time": "2019-12-19T03:55:46", "upload_time_iso_8601": "2019-12-19T03:55:46.738787Z", "url": "https://files.pythonhosted.org/packages/e5/1f/c8bbcdc2a04fcc190ded33ec923686033ea38a9daec73e4ecaf454054c7a/docker-optimizer-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "fca5fe3d99aaaa45c8e0fc18ea8c2ed0", "sha256": "2818b16d46377b700fe37f531c869d432f99e0618f6fab303043149a36617590"}, "downloads": -1, "filename": "docker-optimizer-1.2.0.tar.gz", "has_sig": false, "md5_digest": "fca5fe3d99aaaa45c8e0fc18ea8c2ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3494, "upload_time": "2019-12-19T04:32:26", "upload_time_iso_8601": "2019-12-19T04:32:26.766996Z", "url": "https://files.pythonhosted.org/packages/bf/93/1fc4bf25050340ed4c2f2f085338f6633b854478a9429c496d2748881dfe/docker-optimizer-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "198097dd1780c61705f7eb5d4be6cbb9", "sha256": "41fa13633ca118906aaaa1f3b105d13315f90ea96ed66daa634f1d3c71294570"}, "downloads": -1, "filename": "docker-optimizer-1.2.1.tar.gz", "has_sig": false, "md5_digest": "198097dd1780c61705f7eb5d4be6cbb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2020-01-03T06:22:08", "upload_time_iso_8601": "2020-01-03T06:22:08.851065Z", "url": "https://files.pythonhosted.org/packages/b0/d4/d92b139015cfc985335562dfbe79f902eeaed2432234ca4e7e954f866646/docker-optimizer-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "198097dd1780c61705f7eb5d4be6cbb9", "sha256": "41fa13633ca118906aaaa1f3b105d13315f90ea96ed66daa634f1d3c71294570"}, "downloads": -1, "filename": "docker-optimizer-1.2.1.tar.gz", "has_sig": false, "md5_digest": "198097dd1780c61705f7eb5d4be6cbb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2020-01-03T06:22:08", "upload_time_iso_8601": "2020-01-03T06:22:08.851065Z", "url": "https://files.pythonhosted.org/packages/b0/d4/d92b139015cfc985335562dfbe79f902eeaed2432234ca4e7e954f866646/docker-optimizer-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:50 2020"}