{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Simpl Modelservice\n\nPython Library to implement Simulations, built on Crossbar.io and Django.\n\n[![Build Status](https://travis-ci.com/simplworld/simpl-modelservice.svg?token=cyqpBgqLC1o8qUptfcpE&branch=master)](https://travis-ci.com/simplworld/simpl-modelservice)\n\n## Installation\n\n### Django 2.2\n\n```bash\n$ pip install simpl-modelservice\n```\n\n### Django 1.11\n\n```bash\n$ pip install \"simpl-modelservice<0.8.0\"\n```\n\n## Setup development environment\n\n    $ git clone git@github.com:simplworld/simpl-modelservice.git\n    $ cd simpl-modelservice\n    $ mkvirtualenv simpl-modelservice\n    $ pip install -r dev-requirements.txt\n    $ pip install -e .\n\n## Run tests\n\n    $ python runtests.py\n\n## Development versioning\n\nInstall `bumpversion`:\n\n    $ pip install bumpversion\n\nThen, to release a new version, increment the version number with:\n\n    $ bumpversion patch\n\nThen push to the repo:\n\n    $ git push && git push --tags\n\n## View current WAMP subscriptions and registrations\n\nPoint your browser to http://localhost:8080/monitor and open your javascript console\n\n## How to run a modelservice as two separate processes\n\nIt's sometimes useful to run [crossbar](https://github.com/crossbario/crossbar/) and your own model code as separate processes. By default, `run_modelservice` runs crossbar configured to kick off the sub-process `run_guest`.  You can change this by doing these 3 simple steps:\n\n1. Get a copy of the currently in use crossbar configuration by running `./manage.py run_modelservice --print-config`.  This will print the generated configuration file and then run normally.  Simply cut-n-paste the configuration which will be a large JSON blob just before the usual Crossbar log messages.\n\n2. Edit the configuration to remove the entire `{\"type\": \"guest\", ...}` stanza, saved to a file.\n\n3. Run each piece separately.  If we saved our configuration into `config.json` in the current directly this would look like:\n\n        ./manage.py run_modelservice --config=./config.json --loglevel info --settings=simpl-calc.settings\n\n    for the crossbar service and then:\n\n        HOSTNAME=localhost PORT=8080 ./manage.py run_guest --settings=simpl-calc.settings\n\n    for the modelservice itself. \n\n## Profiling\n\n### Writing tasks\n\nProfiling tasks are defined in `modelservice/profiles`.\n\nThe profiler will run any method that starts with `profile_` one or more times against a different number of workers.\n\nKeep in mind that, unlike unit tests, profile tasks are not isolated.\n\n#### Profile users\n\nYou can have workers that publish and call on WAMP as specific users. By using the `.call()` or `.publish()` method, it will call or publish as the user associated to that worker. To learn how to run workers associated to users, see [Running profile users](#running-profile-users).\n\n#### Measuring\n\nThe `modelservice.utils.instruments` contains classes for measuring execution times. Check the module's docstrings for details.\n\n#### Collecting results\n\nYou can collect the result of task by calling the `.publish_stat()` method:\n\n```\n    async def profile_random(self):\n        with Timer() as timer:\n            some_value = random.random()\n        self.publish_stat('<unique stat name>', timer.elapsed, fmt='Average result was {stats.mean:.3f}')\n```\n\nThe `fmt` string will receive an `instruments.StatAggregator` instance called `stats`. This object will collect the value from all workers that ran the task and will provide the following properties:\n\n* `.min`: The lowest collected value\n* `.max`: The highest collected value\n* `.total`: The sum of the collected values\n* `.count`: The number of collected values\n\nAdditionally, functions from the [`statistics` module](https://docs.python.org/3/library/statistics.html) are aliased as properties (ie: `.mean`, `.stdev`, etc.).\n\n### Running the profiler anonymously\n\n1. Run `simpl-games-api` and its modelservice\n1. From any model, run its modelservice via `run_modelservice` or `run_guest`\n1. From the same model directory, call `profile.sh`. You can use `profile.sh -h` for a list of options.\n\nTo run any model directory when logged into an AWS instance, call `aws_profile.sh`. You can use `aws_profile.sh -h` for a list of options.\n\n#### Running profile users\n\nYou can have the profiler spawn workers as specific users by passing a file with their emails using the `-u` option.\n\nAssuming you have a file called `myusers.txt` with the following content:\n\n```text\ns1@mysim.edu\ns2@mysim.edu\ns3@mysim.edu\n```\n\nYou can then call:\n\n```bash\n$ profile.sh -u myusers.txt\n```\n\nAnd it will spawn 3 workers, each of one set up to `.call` and `.publish` as that one of those users.\n\nTo run from any model directory when logged into an AWS instance, call:\n ```bash\n$ aws_profile.sh -u myusers.txt\n```\n\nBoth `profile.sh` and `aws_profile.sh` invoke the `profile` management command.\n\n#### Managing the Modelservice AWS Profiler instance\n\n##### Django settings\n\n  * `PROFILER_AWS_KEY`: the AWS IAM access key\n  * `PROFILER_AWS_SEC`: the associated IAM secret key\n\n##### Management commands\n\nManagement of the AWS profiler instance is performed by way of the `aws_profiler` management command.\n\n###### status\n\n```\n\n:# ./manage.py aws_profiler --status\n\ni-0733d74785931f857: stopped -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n```\n\n\n###### start\n\n```\n\n:# ./manage.py aws_profiler --start\n\ni-0733d74785931f857: pending -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n```\n\n\n###### stop\n\n```\n\n:# ./manage.py aws_profiler --stop\n\ni-0733d74785931f857: stopping -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n```\n\nCopyright \u00a9 2018 The Wharton School,\u00a0\u00a0The University of Pennsylvania\u00a0\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simplworld/simpl-modelservice", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simpl-modelservice", "package_url": "https://pypi.org/project/simpl-modelservice/", "platform": "", "project_url": "https://pypi.org/project/simpl-modelservice/", "project_urls": {"Homepage": "https://github.com/simplworld/simpl-modelservice"}, "release_url": "https://pypi.org/project/simpl-modelservice/0.9.0/", "requires_dist": ["simpl-authenticator (==0.7.3)", "simpl-client (~=0.8.0)", "django (~=2.2.0)", "djangorestframework (~=3.9.0)", "aiorwlock", "aiojobs (==0.2.1)", "attrs (>=17.4.0)", "autobahn (==17.10.1)", "click (==6.7)", "crossbar (==17.10.1)", "django-markup (==1.2)", "django-click (==2.1.0)", "boto3 (==1.5.28)", "botocore (==1.8.42)", "thorn"], "requires_python": "", "summary": "Python Library to implement Simulations, built on Crossbar.io and Django.", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simpl Modelservice</h1>\n<p>Python Library to implement Simulations, built on Crossbar.io and Django.</p>\n<p><a href=\"https://travis-ci.com/simplworld/simpl-modelservice\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92e450792789884d08987ba81000e73593da6f71/68747470733a2f2f7472617669732d63692e636f6d2f73696d706c776f726c642f73696d706c2d6d6f64656c736572766963652e7376673f746f6b656e3d637971704267714c43316f387155707466637045266272616e63683d6d6173746572\"></a></p>\n<h2>Installation</h2>\n<h3>Django 2.2</h3>\n<pre>$ pip install simpl-modelservice\n</pre>\n<h3>Django 1.11</h3>\n<pre>$ pip install <span class=\"s2\">\"simpl-modelservice&lt;0.8.0\"</span>\n</pre>\n<h2>Setup development environment</h2>\n<pre><code>$ git clone git@github.com:simplworld/simpl-modelservice.git\n$ cd simpl-modelservice\n$ mkvirtualenv simpl-modelservice\n$ pip install -r dev-requirements.txt\n$ pip install -e .\n</code></pre>\n<h2>Run tests</h2>\n<pre><code>$ python runtests.py\n</code></pre>\n<h2>Development versioning</h2>\n<p>Install <code>bumpversion</code>:</p>\n<pre><code>$ pip install bumpversion\n</code></pre>\n<p>Then, to release a new version, increment the version number with:</p>\n<pre><code>$ bumpversion patch\n</code></pre>\n<p>Then push to the repo:</p>\n<pre><code>$ git push &amp;&amp; git push --tags\n</code></pre>\n<h2>View current WAMP subscriptions and registrations</h2>\n<p>Point your browser to <a href=\"http://localhost:8080/monitor\" rel=\"nofollow\">http://localhost:8080/monitor</a> and open your javascript console</p>\n<h2>How to run a modelservice as two separate processes</h2>\n<p>It's sometimes useful to run <a href=\"https://github.com/crossbario/crossbar/\" rel=\"nofollow\">crossbar</a> and your own model code as separate processes. By default, <code>run_modelservice</code> runs crossbar configured to kick off the sub-process <code>run_guest</code>.  You can change this by doing these 3 simple steps:</p>\n<ol>\n<li>\n<p>Get a copy of the currently in use crossbar configuration by running <code>./manage.py run_modelservice --print-config</code>.  This will print the generated configuration file and then run normally.  Simply cut-n-paste the configuration which will be a large JSON blob just before the usual Crossbar log messages.</p>\n</li>\n<li>\n<p>Edit the configuration to remove the entire <code>{\"type\": \"guest\", ...}</code> stanza, saved to a file.</p>\n</li>\n<li>\n<p>Run each piece separately.  If we saved our configuration into <code>config.json</code> in the current directly this would look like:</p>\n<pre><code> ./manage.py run_modelservice --config=./config.json --loglevel info --settings=simpl-calc.settings\n</code></pre>\n<p>for the crossbar service and then:</p>\n<pre><code> HOSTNAME=localhost PORT=8080 ./manage.py run_guest --settings=simpl-calc.settings\n</code></pre>\n<p>for the modelservice itself.</p>\n</li>\n</ol>\n<h2>Profiling</h2>\n<h3>Writing tasks</h3>\n<p>Profiling tasks are defined in <code>modelservice/profiles</code>.</p>\n<p>The profiler will run any method that starts with <code>profile_</code> one or more times against a different number of workers.</p>\n<p>Keep in mind that, unlike unit tests, profile tasks are not isolated.</p>\n<h4>Profile users</h4>\n<p>You can have workers that publish and call on WAMP as specific users. By using the <code>.call()</code> or <code>.publish()</code> method, it will call or publish as the user associated to that worker. To learn how to run workers associated to users, see <a href=\"#running-profile-users\" rel=\"nofollow\">Running profile users</a>.</p>\n<h4>Measuring</h4>\n<p>The <code>modelservice.utils.instruments</code> contains classes for measuring execution times. Check the module's docstrings for details.</p>\n<h4>Collecting results</h4>\n<p>You can collect the result of task by calling the <code>.publish_stat()</code> method:</p>\n<pre><code>    async def profile_random(self):\n        with Timer() as timer:\n            some_value = random.random()\n        self.publish_stat('&lt;unique stat name&gt;', timer.elapsed, fmt='Average result was {stats.mean:.3f}')\n</code></pre>\n<p>The <code>fmt</code> string will receive an <code>instruments.StatAggregator</code> instance called <code>stats</code>. This object will collect the value from all workers that ran the task and will provide the following properties:</p>\n<ul>\n<li><code>.min</code>: The lowest collected value</li>\n<li><code>.max</code>: The highest collected value</li>\n<li><code>.total</code>: The sum of the collected values</li>\n<li><code>.count</code>: The number of collected values</li>\n</ul>\n<p>Additionally, functions from the <a href=\"https://docs.python.org/3/library/statistics.html\" rel=\"nofollow\"><code>statistics</code> module</a> are aliased as properties (ie: <code>.mean</code>, <code>.stdev</code>, etc.).</p>\n<h3>Running the profiler anonymously</h3>\n<ol>\n<li>Run <code>simpl-games-api</code> and its modelservice</li>\n<li>From any model, run its modelservice via <code>run_modelservice</code> or <code>run_guest</code></li>\n<li>From the same model directory, call <code>profile.sh</code>. You can use <code>profile.sh -h</code> for a list of options.</li>\n</ol>\n<p>To run any model directory when logged into an AWS instance, call <code>aws_profile.sh</code>. You can use <code>aws_profile.sh -h</code> for a list of options.</p>\n<h4>Running profile users</h4>\n<p>You can have the profiler spawn workers as specific users by passing a file with their emails using the <code>-u</code> option.</p>\n<p>Assuming you have a file called <code>myusers.txt</code> with the following content:</p>\n<pre>s1@mysim.edu\ns2@mysim.edu\ns3@mysim.edu\n</pre>\n<p>You can then call:</p>\n<pre>$ profile.sh -u myusers.txt\n</pre>\n<p>And it will spawn 3 workers, each of one set up to <code>.call</code> and <code>.publish</code> as that one of those users.</p>\n<p>To run from any model directory when logged into an AWS instance, call:</p>\n<pre>$ aws_profile.sh -u myusers.txt\n</pre>\n<p>Both <code>profile.sh</code> and <code>aws_profile.sh</code> invoke the <code>profile</code> management command.</p>\n<h4>Managing the Modelservice AWS Profiler instance</h4>\n<h5>Django settings</h5>\n<ul>\n<li><code>PROFILER_AWS_KEY</code>: the AWS IAM access key</li>\n<li><code>PROFILER_AWS_SEC</code>: the associated IAM secret key</li>\n</ul>\n<h5>Management commands</h5>\n<p>Management of the AWS profiler instance is performed by way of the <code>aws_profiler</code> management command.</p>\n<h6>status</h6>\n<pre><code>\n:# ./manage.py aws_profiler --status\n\ni-0733d74785931f857: stopped -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n</code></pre>\n<h6>start</h6>\n<pre><code>\n:# ./manage.py aws_profiler --start\n\ni-0733d74785931f857: pending -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n</code></pre>\n<h6>stop</h6>\n<pre><code>\n:# ./manage.py aws_profiler --stop\n\ni-0733d74785931f857: stopping -- type: c5.18xlarge -- ip address: 18.216.171.181\n\n</code></pre>\n<p>Copyright \u00a9 2018 The Wharton School,\u00a0\u00a0The University of Pennsylvania\u00a0</p>\n<p>This program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.</p>\n\n          </div>"}, "last_serial": 6884141, "releases": {"0.7.10": [{"comment_text": "", "digests": {"md5": "e647bb179abe45b7dab4a696fd4fd4aa", "sha256": "2c95bfecf6d683a3357918165482170f2d0ac37ce0e6ec8dd4065f560d385262"}, "downloads": -1, "filename": "simpl_modelservice-0.7.10-py3-none-any.whl", "has_sig": false, "md5_digest": "e647bb179abe45b7dab4a696fd4fd4aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 157569, "upload_time": "2018-11-29T12:22:48", "upload_time_iso_8601": "2018-11-29T12:22:48.771291Z", "url": "https://files.pythonhosted.org/packages/69/57/12c39b24fba713d82437be5916a601fd4adfaf531bc32d094e34ad3a5268/simpl_modelservice-0.7.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c510455773b9f754fdbea7ff653ef8ba", "sha256": "1f91b1ec00d31997e822e929ab5150885008b48350eb682303fc94750069c739"}, "downloads": -1, "filename": "simpl-modelservice-0.7.10.tar.gz", "has_sig": false, "md5_digest": "c510455773b9f754fdbea7ff653ef8ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138359, "upload_time": "2018-11-29T12:22:51", "upload_time_iso_8601": "2018-11-29T12:22:51.210784Z", "url": "https://files.pythonhosted.org/packages/47/58/979aa37beec3876418c37fb9e095c401ddcf026c29ca641fd15880cbc5d4/simpl-modelservice-0.7.10.tar.gz", "yanked": false}], "0.7.12": [{"comment_text": "", "digests": {"md5": "79410beb0a673e7679d7ad2164651492", "sha256": "06936afc893c0820de91b46ffd50d283674460cbd3a92acb6cb8bc7167cf3064"}, "downloads": -1, "filename": "simpl_modelservice-0.7.12-py3-none-any.whl", "has_sig": false, "md5_digest": "79410beb0a673e7679d7ad2164651492", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 160886, "upload_time": "2018-12-20T18:00:58", "upload_time_iso_8601": "2018-12-20T18:00:58.577270Z", "url": "https://files.pythonhosted.org/packages/6a/80/142e29f2188c27cb3ce9d6a0cfbfde3336fba34ac9398b79ce13d905edca/simpl_modelservice-0.7.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e65a4dca31457c494ec995db4b27befa", "sha256": "b7aa672653127e9eb9d4c3195410e8794051165bf735de4e54ae98a63080c684"}, "downloads": -1, "filename": "simpl-modelservice-0.7.12.tar.gz", "has_sig": false, "md5_digest": "e65a4dca31457c494ec995db4b27befa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138573, "upload_time": "2018-12-20T18:01:01", "upload_time_iso_8601": "2018-12-20T18:01:01.334650Z", "url": "https://files.pythonhosted.org/packages/e4/45/101ecf01a385ca2b93ed81659519d4164afc20038514e3dd94bbec33fcc7/simpl-modelservice-0.7.12.tar.gz", "yanked": false}], "0.7.13": [{"comment_text": "", "digests": {"md5": "383bd8ef93651c548e29a2ad5d2df2ac", "sha256": "fcc6123530e114ee4ddd9b27d508b5d58bb4a29dca047019b706a21825ed8f8f"}, "downloads": -1, "filename": "simpl_modelservice-0.7.13-py3-none-any.whl", "has_sig": false, "md5_digest": "383bd8ef93651c548e29a2ad5d2df2ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159480, "upload_time": "2019-02-14T17:24:22", "upload_time_iso_8601": "2019-02-14T17:24:22.473777Z", "url": "https://files.pythonhosted.org/packages/f9/a8/716264259505d783b2efc4aa2b66c6ecc0e0e3acd39aee3e59bdd926b201/simpl_modelservice-0.7.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c25d55dd75677bb6dab7d99c9a0bf7ec", "sha256": "4c7a502143ee9ded127b06f3048e10bdb1c73ece305410a2b287e1d0688f1d5c"}, "downloads": -1, "filename": "simpl-modelservice-0.7.13.tar.gz", "has_sig": false, "md5_digest": "c25d55dd75677bb6dab7d99c9a0bf7ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138646, "upload_time": "2019-02-14T17:24:24", "upload_time_iso_8601": "2019-02-14T17:24:24.429322Z", "url": "https://files.pythonhosted.org/packages/f4/18/2b387a7af36dc408208cb0b1e1adef92796d7ba1cb143833382c8c00b827/simpl-modelservice-0.7.13.tar.gz", "yanked": false}], "0.7.15": [{"comment_text": "", "digests": {"md5": "1e56c79e8e4f1c2a270a44b06923d722", "sha256": "c64c4b70ba14362065d5fc6513b48af37d5f8697789bd20b51cd61f2a6db6648"}, "downloads": -1, "filename": "simpl_modelservice-0.7.15-py3-none-any.whl", "has_sig": false, "md5_digest": "1e56c79e8e4f1c2a270a44b06923d722", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159495, "upload_time": "2019-07-31T16:23:12", "upload_time_iso_8601": "2019-07-31T16:23:12.478286Z", "url": "https://files.pythonhosted.org/packages/28/9c/704ca1dcd9a9a60512f0061874764ecb4657b67dd91e3a69b426ac386f9d/simpl_modelservice-0.7.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1f624c6a5184f97b20e75e79e66e950", "sha256": "2aec836d40b44ae568d16d93cc30895068b00a8fab9b3f1ac93d5faae9c47092"}, "downloads": -1, "filename": "simpl-modelservice-0.7.15.tar.gz", "has_sig": false, "md5_digest": "c1f624c6a5184f97b20e75e79e66e950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138710, "upload_time": "2019-07-31T16:23:13", "upload_time_iso_8601": "2019-07-31T16:23:13.981398Z", "url": "https://files.pythonhosted.org/packages/cb/5a/7c8cfcfc59161d082bdeef3b8d9efda908baf7869b9897acad6e958d0f4b/simpl-modelservice-0.7.15.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "f513497db7378bd787b29a6bf51412ba", "sha256": "398eb0655a613a12ec9030f52cb494e2a46a8462e02e7b2deaef02314fb5a8e7"}, "downloads": -1, "filename": "simpl_modelservice-0.7.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f513497db7378bd787b29a6bf51412ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150573, "upload_time": "2018-09-14T17:47:35", "upload_time_iso_8601": "2018-09-14T17:47:35.459753Z", "url": "https://files.pythonhosted.org/packages/32/54/95db7d303d802cf4cf9be90ae93abdfb998c6a2c1c627f0178b40361195f/simpl_modelservice-0.7.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac097cf4c6eca6c9191f054502a48a4b", "sha256": "c67dae2c8e6ed21ec4f189a38588df6c6d80ee4245aedc6725b09b5b8634759a"}, "downloads": -1, "filename": "simpl-modelservice-0.7.7.tar.gz", "has_sig": false, "md5_digest": "ac097cf4c6eca6c9191f054502a48a4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138319, "upload_time": "2018-09-14T17:47:36", "upload_time_iso_8601": "2018-09-14T17:47:36.740657Z", "url": "https://files.pythonhosted.org/packages/33/40/bb905fb0c89fee91bd8c4022d33112a2fd586f90ccca5444d2e585f0a6ae/simpl-modelservice-0.7.7.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "efbdbf10230aeb332145327cbf2d303b", "sha256": "eb772440b370edae52816fc099177b2330790433479ca892a801fdd40bb41f64"}, "downloads": -1, "filename": "simpl_modelservice-0.7.9-py3-none-any.whl", "has_sig": false, "md5_digest": "efbdbf10230aeb332145327cbf2d303b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150571, "upload_time": "2018-09-21T13:00:44", "upload_time_iso_8601": "2018-09-21T13:00:44.351449Z", "url": "https://files.pythonhosted.org/packages/d5/66/4590021529959041dbe6d77711e583b264ff4e39ebedd078ef0f36414da3/simpl_modelservice-0.7.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bae60baa4a939e165cdcbd6431b30bf", "sha256": "d0e46ea1039c9b70a7ca7cd7f22a891d7e61b31bc2ea49f764fc86ed8f29227e"}, "downloads": -1, "filename": "simpl-modelservice-0.7.9.tar.gz", "has_sig": false, "md5_digest": "6bae60baa4a939e165cdcbd6431b30bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138332, "upload_time": "2018-09-21T13:00:45", "upload_time_iso_8601": "2018-09-21T13:00:45.864462Z", "url": "https://files.pythonhosted.org/packages/77/88/b6f768c5bdc741205afe3bcdbf1cff2809bbaffa342925e1c9a0f14885cc/simpl-modelservice-0.7.9.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "50f0cf13f62310ed3e990c6195d6d97f", "sha256": "3646165f31fdc1145617b1b1df12586d4138456d0bf6ff016d7081f9f65892e5"}, "downloads": -1, "filename": "simpl_modelservice-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50f0cf13f62310ed3e990c6195d6d97f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161296, "upload_time": "2019-08-10T16:54:27", "upload_time_iso_8601": "2019-08-10T16:54:27.463186Z", "url": "https://files.pythonhosted.org/packages/c0/79/41eb907c096084c753956b74035017616997596726957ee6640457498749/simpl_modelservice-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ae9b3a7b1f8929d6965cefad349e24a", "sha256": "91f8fa965f1cf58f2e20f20270474733e6f96c0bd6176ae9d7f8bfe9ce589740"}, "downloads": -1, "filename": "simpl-modelservice-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2ae9b3a7b1f8929d6965cefad349e24a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138889, "upload_time": "2019-08-10T16:54:29", "upload_time_iso_8601": "2019-08-10T16:54:29.173045Z", "url": "https://files.pythonhosted.org/packages/1c/5b/331edc134912aa4e6720929620b7634712d105e5804b5063d417e2f1e65a/simpl-modelservice-0.8.0.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "c7f2013bddb0dd89bee76005c37b3afb", "sha256": "4179f916c4633a0f5747ec19e1c44f20507c5facb8e1cba8d247aad49391fc99"}, "downloads": -1, "filename": "simpl_modelservice-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c7f2013bddb0dd89bee76005c37b3afb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159812, "upload_time": "2019-10-30T16:54:47", "upload_time_iso_8601": "2019-10-30T16:54:47.509481Z", "url": "https://files.pythonhosted.org/packages/8c/ce/62bb85080d41edb660baeab067f689c1dcd03f6196e5ae1518ca61f2d4b7/simpl_modelservice-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce189bb7012a242e8ca2fad9fa53fab6", "sha256": "134476909e9f028382fccf8da80f380913b2913e939e144bd3e52f820aa757e0"}, "downloads": -1, "filename": "simpl-modelservice-0.8.2.tar.gz", "has_sig": false, "md5_digest": "ce189bb7012a242e8ca2fad9fa53fab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138938, "upload_time": "2019-10-30T16:54:49", "upload_time_iso_8601": "2019-10-30T16:54:49.294783Z", "url": "https://files.pythonhosted.org/packages/33/7e/26485fc37963047603f0828e2eb649e519761dbede1212dd4f87e9b68ba1/simpl-modelservice-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "2b34fea8b109d607c3f5f6cb8d1df49d", "sha256": "26e74550281e76e54249b8b742a898bf7ba298feffc641b5ff91a104256658f7"}, "downloads": -1, "filename": "simpl_modelservice-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2b34fea8b109d607c3f5f6cb8d1df49d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161341, "upload_time": "2020-01-23T15:21:17", "upload_time_iso_8601": "2020-01-23T15:21:17.171630Z", "url": "https://files.pythonhosted.org/packages/7d/b8/59c3930d0d6376ac571720330ecb335a0a1e0e9df9a641aa6453f93fba4b/simpl_modelservice-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f6a08c90d9e813f96249f6f695938c5", "sha256": "2632494dc6ee23ac8b1e1fd93975ada34e1c0b0b2543bb04de8b1d1e4d9b6b12"}, "downloads": -1, "filename": "simpl-modelservice-0.8.3.tar.gz", "has_sig": false, "md5_digest": "9f6a08c90d9e813f96249f6f695938c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138967, "upload_time": "2020-01-23T15:21:19", "upload_time_iso_8601": "2020-01-23T15:21:19.271844Z", "url": "https://files.pythonhosted.org/packages/4d/58/f5e51868fc11ff2ac59d569fc9fb482544a237979b2ef2794092c75e4830/simpl-modelservice-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "20a723cebc4ded9c666ff640dd5d392f", "sha256": "a374ba4e000f37d2ddc828f1d31c006a87ca08334db457cc44debba44358e002"}, "downloads": -1, "filename": "simpl_modelservice-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "20a723cebc4ded9c666ff640dd5d392f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159856, "upload_time": "2020-02-05T18:48:44", "upload_time_iso_8601": "2020-02-05T18:48:44.527462Z", "url": "https://files.pythonhosted.org/packages/41/e7/d52b1df8c865b4ab9a4a4f82c405d6f7f1ada45c5aacb249ca5b7e61c496/simpl_modelservice-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9678acf98f949f32c8cdb206e8be0d75", "sha256": "fad351d3332a975a4eea0d1dd524cf9685edf6c4c37b2f024f5de5307574c207"}, "downloads": -1, "filename": "simpl-modelservice-0.8.4.tar.gz", "has_sig": false, "md5_digest": "9678acf98f949f32c8cdb206e8be0d75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138984, "upload_time": "2020-02-05T18:48:46", "upload_time_iso_8601": "2020-02-05T18:48:46.890124Z", "url": "https://files.pythonhosted.org/packages/7b/ac/ddaaf8cb14f12ae0cbd103a2cf0db8058fc7542ab9e885f08dcd642418e3/simpl-modelservice-0.8.4.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "6b53812b1ddc810d27a26df98c1c5b6d", "sha256": "4e861d897f1a00282db5bae25cb9f5335dc1bc9fd37c77f5d384f018d7d8c11c"}, "downloads": -1, "filename": "simpl_modelservice-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b53812b1ddc810d27a26df98c1c5b6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159852, "upload_time": "2020-03-25T19:40:26", "upload_time_iso_8601": "2020-03-25T19:40:26.454112Z", "url": "https://files.pythonhosted.org/packages/d3/96/4b538909212e1428d4ecce0147fc9f5793c6b815a6bb8e6a140fc5610995/simpl_modelservice-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "988a0570e88357713c637df626dbd631", "sha256": "e8479afeb0c201449c76ab9b5402daffc9bd6d82bc95264eee908705e14f374e"}, "downloads": -1, "filename": "simpl-modelservice-0.9.0.tar.gz", "has_sig": false, "md5_digest": "988a0570e88357713c637df626dbd631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138960, "upload_time": "2020-03-25T19:40:28", "upload_time_iso_8601": "2020-03-25T19:40:28.040139Z", "url": "https://files.pythonhosted.org/packages/f3/9d/3c2f87aabfca82585110b6d2d129cc79bfd03f6d455063895131673e7dbf/simpl-modelservice-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b53812b1ddc810d27a26df98c1c5b6d", "sha256": "4e861d897f1a00282db5bae25cb9f5335dc1bc9fd37c77f5d384f018d7d8c11c"}, "downloads": -1, "filename": "simpl_modelservice-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b53812b1ddc810d27a26df98c1c5b6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159852, "upload_time": "2020-03-25T19:40:26", "upload_time_iso_8601": "2020-03-25T19:40:26.454112Z", "url": "https://files.pythonhosted.org/packages/d3/96/4b538909212e1428d4ecce0147fc9f5793c6b815a6bb8e6a140fc5610995/simpl_modelservice-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "988a0570e88357713c637df626dbd631", "sha256": "e8479afeb0c201449c76ab9b5402daffc9bd6d82bc95264eee908705e14f374e"}, "downloads": -1, "filename": "simpl-modelservice-0.9.0.tar.gz", "has_sig": false, "md5_digest": "988a0570e88357713c637df626dbd631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138960, "upload_time": "2020-03-25T19:40:28", "upload_time_iso_8601": "2020-03-25T19:40:28.040139Z", "url": "https://files.pythonhosted.org/packages/f3/9d/3c2f87aabfca82585110b6d2d129cc79bfd03f6d455063895131673e7dbf/simpl-modelservice-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:44 2020"}