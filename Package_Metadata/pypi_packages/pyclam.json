{"info": {"author": "Tom Howard <info@tomhoward.codes>; Najib Ishaq <nishaq@my.uri.edu>; Noah Daniels <noah_daniels@uri.edu>", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# URI-ABD: Clustered Learning of Approximate Manifolds\n\n<!-- [![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/nishaq503/CHESS.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/nishaq503/CHESS/context:python)\n[![codecov](https://codecov.io/gh/thoward27/chess/branch/master/graph/badge.svg)](https://codecov.io/gh/thoward27/pyclam)\n[![Documentation Status](https://readthedocs.org/projects/clustered-hierarchical-entropy-scaling-search/badge/?version=latest)](https://clustered-hierarchical-entropy-scaling-search.readthedocs.io/en/latest/?badge=latest) -->\n\n## Installation\n\n```bash\npython3 -m pip install pyclam\n```\n\n## Usage\n\n```python\nimport numpy as np\n\nfrom pyclam.datasets import bullseye\nfrom pyclam.manifold import Manifold\nfrom pyclam import criterion\n\n# Get the data.\ndata, _ = bullseye()\n# data is a numpy.ndarray in this case but it could just as easily be a numpy.memmap if your data cannot fit in RAM.\n# We used memmaps for the research, though it does impose file-io costs.\n\nmanifold = Manifold(data=data, metric='euclidean')\n# Any metric allowed by scipy's cdist function is allowed in Manifold.\n# You can also define your own distance function. It will work so long as scipy allows it.\n\nmanifold.build(criterion.MaxDepth(20), criterion.MinRadius(0.25))\n# Manifold.build can optionally take any number of early stopping criteria.\n# pyclam.criterion defines some criteria that we have used in research.\n# You are free to define your own.\n# Take a look at pyclam/criterion.py for hints of how to define custom criteria.\n\n# A sample rho-nearest neighbors search query\nquery, radius = data[0], 0.05\nresults = manifold.find_points(point=query, radius=radius)\n# results is a dictionary of indexes of hits in data and the distance to those hits.\n\n# A sample k-nearest neighbors search query\nresults = manifold.find_knn(point=query, k=25)\n```\n\npyclam.Manifold relies on the Graph and Cluster classes.\nYou can import these and work with them directly if you so choose.\nWe have written good docs for each class and method.\nGo crazy.\n\n## Contributing\n\nPull requests and bug reports are welcome.\nFor major changes, please first open an issue to discuss what you would like to change.\n\n## License\n\n[MIT](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/URI-ABD/clam", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyclam", "package_url": "https://pypi.org/project/pyclam/", "platform": "", "project_url": "https://pypi.org/project/pyclam/", "project_urls": {"Homepage": "https://github.com/URI-ABD/clam"}, "release_url": "https://pypi.org/project/pyclam/0.2.1/", "requires_dist": ["numpy", "scipy", "toml"], "requires_python": ">=3.6", "summary": "Clustered Learning of Approximate Manifolds", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>URI-ABD: Clustered Learning of Approximate Manifolds</h1>\n\n<h2>Installation</h2>\n<pre>python3 -m pip install pyclam\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyclam.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">bullseye</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyclam.manifold</span> <span class=\"kn\">import</span> <span class=\"n\">Manifold</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyclam</span> <span class=\"kn\">import</span> <span class=\"n\">criterion</span>\n\n<span class=\"c1\"># Get the data.</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">bullseye</span><span class=\"p\">()</span>\n<span class=\"c1\"># data is a numpy.ndarray in this case but it could just as easily be a numpy.memmap if your data cannot fit in RAM.</span>\n<span class=\"c1\"># We used memmaps for the research, though it does impose file-io costs.</span>\n\n<span class=\"n\">manifold</span> <span class=\"o\">=</span> <span class=\"n\">Manifold</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">'euclidean'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Any metric allowed by scipy's cdist function is allowed in Manifold.</span>\n<span class=\"c1\"># You can also define your own distance function. It will work so long as scipy allows it.</span>\n\n<span class=\"n\">manifold</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">criterion</span><span class=\"o\">.</span><span class=\"n\">MaxDepth</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">criterion</span><span class=\"o\">.</span><span class=\"n\">MinRadius</span><span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">))</span>\n<span class=\"c1\"># Manifold.build can optionally take any number of early stopping criteria.</span>\n<span class=\"c1\"># pyclam.criterion defines some criteria that we have used in research.</span>\n<span class=\"c1\"># You are free to define your own.</span>\n<span class=\"c1\"># Take a look at pyclam/criterion.py for hints of how to define custom criteria.</span>\n\n<span class=\"c1\"># A sample rho-nearest neighbors search query</span>\n<span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mf\">0.05</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">manifold</span><span class=\"o\">.</span><span class=\"n\">find_points</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"o\">=</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n<span class=\"c1\"># results is a dictionary of indexes of hits in data and the distance to those hits.</span>\n\n<span class=\"c1\"># A sample k-nearest neighbors search query</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">manifold</span><span class=\"o\">.</span><span class=\"n\">find_knn</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"o\">=</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n</pre>\n<p>pyclam.Manifold relies on the Graph and Cluster classes.\nYou can import these and work with them directly if you so choose.\nWe have written good docs for each class and method.\nGo crazy.</p>\n<h2>Contributing</h2>\n<p>Pull requests and bug reports are welcome.\nFor major changes, please first open an issue to discuss what you would like to change.</p>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6654875, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "03b936cdbf19a07e707001a80a7780ba", "sha256": "11036882fe3a6cf55233b375c93071af054efa22d9433a96e7d4da8ed7524fd7"}, "downloads": -1, "filename": "pyclam-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "03b936cdbf19a07e707001a80a7780ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14222, "upload_time": "2020-02-03T04:22:25", "upload_time_iso_8601": "2020-02-03T04:22:25.469484Z", "url": "https://files.pythonhosted.org/packages/83/39/fe49c8d64672b8acd856944936278080a1d25e25d78074b34f1b29d8676c/pyclam-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6eed94068142b2f22124c0276ee41e7", "sha256": "ab0b42d127b7bb5581db18d34f9d6228a34722090ae85eed7268cfa252ead179"}, "downloads": -1, "filename": "pyclam-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e6eed94068142b2f22124c0276ee41e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13530, "upload_time": "2020-02-03T04:22:29", "upload_time_iso_8601": "2020-02-03T04:22:29.328936Z", "url": "https://files.pythonhosted.org/packages/32/ce/203e78b4799d0b8cc542b704f54790ee5e35ef8e09653509d9137d1af1a3/pyclam-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7839025d7f0e97ff6f93630030f1addc", "sha256": "07d0b5e926daa751b8561cf31046dff6405509201bc927e5cfb3cc3c39a3b81e"}, "downloads": -1, "filename": "pyclam-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7839025d7f0e97ff6f93630030f1addc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14377, "upload_time": "2020-02-07T21:42:42", "upload_time_iso_8601": "2020-02-07T21:42:42.327798Z", "url": "https://files.pythonhosted.org/packages/6a/74/32cfb69ed1a8f24231846b7bbe8918f907ba05038dbfdefeea1d4b1f0210/pyclam-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e04cc051eaac24ecca591eab59667e3b", "sha256": "5339b1fa81c19a227e9c0810d5e1c2b8b4b95ef2efd7d476a08aa48165ceac43"}, "downloads": -1, "filename": "pyclam-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e04cc051eaac24ecca591eab59667e3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13689, "upload_time": "2020-02-07T21:42:43", "upload_time_iso_8601": "2020-02-07T21:42:43.591262Z", "url": "https://files.pythonhosted.org/packages/71/39/c04e3f24fb4fb0dd2ca4ff3846fbeea2b7f3e6cb63599ae30bd0c9dfb9c7/pyclam-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6a6637392bc4b63dfc8c914d61a4c37d", "sha256": "3e50ab3f7a8aa58a1925741872454757cd4943df74c15924bb2b5b2b3b7c9313"}, "downloads": -1, "filename": "pyclam-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a6637392bc4b63dfc8c914d61a4c37d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14517, "upload_time": "2020-02-09T19:53:20", "upload_time_iso_8601": "2020-02-09T19:53:20.687743Z", "url": "https://files.pythonhosted.org/packages/49/ec/42defde3fce9b61cf9641ab527981ff610230aeb590e8ad1627de37766f6/pyclam-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bacf7b1f3729c246f62d0324cb83e6f", "sha256": "c34b4288a2486346d7f0f9ede0378f90bf8c9c231758287ec6674e0f5a8096a4"}, "downloads": -1, "filename": "pyclam-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5bacf7b1f3729c246f62d0324cb83e6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13874, "upload_time": "2020-02-09T19:53:22", "upload_time_iso_8601": "2020-02-09T19:53:22.448001Z", "url": "https://files.pythonhosted.org/packages/31/8c/55357cd0b219627889d8d2d9499f148983df3c26f2786f908213a5f04149/pyclam-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3a6a79241e78123e7d0367b04785c7ab", "sha256": "a3ebbdc8f9c3412f23bf2edb86133a55b2e35b764bcd7c8300055e67a69e1f06"}, "downloads": -1, "filename": "pyclam-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a6a79241e78123e7d0367b04785c7ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14590, "upload_time": "2020-02-18T17:45:42", "upload_time_iso_8601": "2020-02-18T17:45:42.011158Z", "url": "https://files.pythonhosted.org/packages/1b/b6/08410e4c3e73fdb78f20c0603bae63bd62c3c2b43462d1f1da179b70e3d0/pyclam-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c401edd69491cb67598780029381030", "sha256": "7d3d3ec8abd747853fac05520c266f6fdfa01c6643cf5fdc613b96d2ac35e577"}, "downloads": -1, "filename": "pyclam-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9c401edd69491cb67598780029381030", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13955, "upload_time": "2020-02-18T17:45:43", "upload_time_iso_8601": "2020-02-18T17:45:43.551593Z", "url": "https://files.pythonhosted.org/packages/0f/71/39fa4d8fb8baa888babef099c6779203ac1d42e97f0d8a790408ec86df0b/pyclam-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a6a79241e78123e7d0367b04785c7ab", "sha256": "a3ebbdc8f9c3412f23bf2edb86133a55b2e35b764bcd7c8300055e67a69e1f06"}, "downloads": -1, "filename": "pyclam-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a6a79241e78123e7d0367b04785c7ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14590, "upload_time": "2020-02-18T17:45:42", "upload_time_iso_8601": "2020-02-18T17:45:42.011158Z", "url": "https://files.pythonhosted.org/packages/1b/b6/08410e4c3e73fdb78f20c0603bae63bd62c3c2b43462d1f1da179b70e3d0/pyclam-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c401edd69491cb67598780029381030", "sha256": "7d3d3ec8abd747853fac05520c266f6fdfa01c6643cf5fdc613b96d2ac35e577"}, "downloads": -1, "filename": "pyclam-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9c401edd69491cb67598780029381030", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13955, "upload_time": "2020-02-18T17:45:43", "upload_time_iso_8601": "2020-02-18T17:45:43.551593Z", "url": "https://files.pythonhosted.org/packages/0f/71/39fa4d8fb8baa888babef099c6779203ac1d42e97f0d8a790408ec86df0b/pyclam-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:26 2020"}