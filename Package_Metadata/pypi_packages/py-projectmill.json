{"info": {"author": "James Rutherford", "author_email": "jim@jimr.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Scientific/Engineering :: GIS"], "description": "==============\nPy-ProjectMill\n==============\n\n.. image:: https://travis-ci.org/jimr/py-projectmill.png\n    :target: http://travis-ci.org/jimr/py-projectmill\n\nPython port of https://github.com/mapbox/projectmill for Python 2.5+ (including 3.X).\n\nCurrently only support ``--mill`` and ``--render``.\n\nThere are no requirements for Python 2.7, 3.2+, and pypy-1.9 unless you want to run the tests.\nTo run tests, simply ``python setup.py test``.\n\nThe remainder of the documentation is adapted from the original project.\n\n----\n\nNeed to generate a bunch of TileMill projects that are nearly identical and\nthen render them all out? What to script that? We gotcha covered.\n\nUsage: ``projectmill <command> [options]``\n\nExample: ``projectmill --mill -c config.example.json -t ../tilemill/``\n\nInstallation\n============\n\nThe easiest route is to just ``pip install py-projectmill``.\n\nTo install from source: ``pip install -e .`` or ``python setup.py install``.\nIf you're using Python 2.5, 2.6, 3.0, or 3.1, you will also need to ``pip install -r requirements-X.Y.txt`` (they don't include ``argparse``, which is required, and 2.5 needs ``simplejson``).\n\nTests pass with all versions from 2.5 - 3.3 and pypy-1.9, so it ought to work for just about everyone.\n\nConfiguration\n=============\n\nConfiguration is expected as a json file which contains an array as the root\nobject. See ``config.example.json`` for an example. Each element in the array\nshould be an object which can have the following keys::\n\n    source        REQUIRED The source project, generally the name of folder it\n                  lives in.\n\n    destination   REQUIRED The destination project name.\n\n    mml           A json snippet which will be merged on top of the project's mml\n                  file. To clear out an option set it to 'null'\n\n    cartoVars     A json object containing key value pairs which can be use to\n                  override variables in in carto stylesheets.\n\n    MBmeta        MBTiles: A json object containing key value pairs which will be added to\n                  a rendered MBtiles export.\n\n    Additionally, the following options will be passed to TileMill's export commnd\n\n    format        Export format (png|pdf|svg|mbtiles). (Default: undefined)\n\n    bbox          Array containing coordinates of bounding box to export. (Default: undefined)\n\n    minzoom       MBTiles: minimum zoom level to export. (Default: undefined)\n\n    maxzoom       MBTiles: maximum zoom level to export. (Default: undefined)\n\n    width         Image: image width in pixels. (Default: 400)\n\n    height        Image: image height in pixels. (Default: 400)\n\n    bufferSize    Mapnik render buffer size. (Default: 128)\n\n\nCommands\n========\n\nProjectMill accepts the following commands. They can be issued either\nindividually or together::\n\n    --mill      Generates new tilemill projects based on configuration.\n\n    --render    Renders projects that are present in configuration and have been milled.\n\n    --upload    Uploads projects that are present in configuration and have been rendered.\n\n\nOptions\n=======\n\nWe also accept the following options::\n\n    -t      Path to the TileMill install\n\n    -c      specify a configuration file. (Defaults: ./config.json)\n\n    -p      Path to TileMill project folder. (Defaults: ~/Documents/Mapbox)\n\n    -f      Replace existing projects (together with mill) or existing projects and exports (together with render).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jimr/py-projectmill", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "py-projectmill", "package_url": "https://pypi.org/project/py-projectmill/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/py-projectmill/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jimr/py-projectmill"}, "release_url": "https://pypi.org/project/py-projectmill/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Python port of https://github.com/mapbox/projectmill", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/jimr/py-projectmill\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jimr/py-projectmill.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ccd3c1b6b1574d81c84f1f1778b592d05590be3/68747470733a2f2f7472617669732d63692e6f72672f6a696d722f70792d70726f6a6563746d696c6c2e706e67\"></a>\n<p>Python port of <a href=\"https://github.com/mapbox/projectmill\" rel=\"nofollow\">https://github.com/mapbox/projectmill</a> for Python 2.5+ (including 3.X).</p>\n<p>Currently only support <tt><span class=\"pre\">--mill</span></tt> and <tt><span class=\"pre\">--render</span></tt>.</p>\n<p>There are no requirements for Python 2.7, 3.2+, and pypy-1.9 unless you want to run the tests.\nTo run tests, simply <tt>python setup.py test</tt>.</p>\n<p>The remainder of the documentation is adapted from the original project.</p>\n<hr class=\"docutils\">\n<p>Need to generate a bunch of TileMill projects that are nearly identical and\nthen render them all out? What to script that? We gotcha covered.</p>\n<p>Usage: <tt>projectmill &lt;command&gt; [options]</tt></p>\n<p>Example: <tt>projectmill <span class=\"pre\">--mill</span> <span class=\"pre\">-c</span> config.example.json <span class=\"pre\">-t</span> <span class=\"pre\">../tilemill/</span></tt></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest route is to just <tt>pip install <span class=\"pre\">py-projectmill</span></tt>.</p>\n<p>To install from source: <tt>pip install <span class=\"pre\">-e</span> .</tt> or <tt>python setup.py install</tt>.\nIf you\u2019re using Python 2.5, 2.6, 3.0, or 3.1, you will also need to <tt>pip install <span class=\"pre\">-r</span> <span class=\"pre\">requirements-X.Y.txt</span></tt> (they don\u2019t include <tt>argparse</tt>, which is required, and 2.5 needs <tt>simplejson</tt>).</p>\n<p>Tests pass with all versions from 2.5 - 3.3 and pypy-1.9, so it ought to work for just about everyone.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration is expected as a json file which contains an array as the root\nobject. See <tt>config.example.json</tt> for an example. Each element in the array\nshould be an object which can have the following keys:</p>\n<pre>source        REQUIRED The source project, generally the name of folder it\n              lives in.\n\ndestination   REQUIRED The destination project name.\n\nmml           A json snippet which will be merged on top of the project's mml\n              file. To clear out an option set it to 'null'\n\ncartoVars     A json object containing key value pairs which can be use to\n              override variables in in carto stylesheets.\n\nMBmeta        MBTiles: A json object containing key value pairs which will be added to\n              a rendered MBtiles export.\n\nAdditionally, the following options will be passed to TileMill's export commnd\n\nformat        Export format (png|pdf|svg|mbtiles). (Default: undefined)\n\nbbox          Array containing coordinates of bounding box to export. (Default: undefined)\n\nminzoom       MBTiles: minimum zoom level to export. (Default: undefined)\n\nmaxzoom       MBTiles: maximum zoom level to export. (Default: undefined)\n\nwidth         Image: image width in pixels. (Default: 400)\n\nheight        Image: image height in pixels. (Default: 400)\n\nbufferSize    Mapnik render buffer size. (Default: 128)\n</pre>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<p>ProjectMill accepts the following commands. They can be issued either\nindividually or together:</p>\n<pre>--mill      Generates new tilemill projects based on configuration.\n\n--render    Renders projects that are present in configuration and have been milled.\n\n--upload    Uploads projects that are present in configuration and have been rendered.\n</pre>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>We also accept the following options:</p>\n<pre>-t      Path to the TileMill install\n\n-c      specify a configuration file. (Defaults: ./config.json)\n\n-p      Path to TileMill project folder. (Defaults: ~/Documents/Mapbox)\n\n-f      Replace existing projects (together with mill) or existing projects and exports (together with render).\n</pre>\n</div>\n\n          </div>"}, "last_serial": 796855, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "555571c7b3bb05ab46004aac4ad67017", "sha256": "21b4ff3d7055d4816a53a005c88147ff4dc1d85145612e32a8dce24f44ceae13"}, "downloads": -1, "filename": "py-projectmill-0.2.tar.gz", "has_sig": false, "md5_digest": "555571c7b3bb05ab46004aac4ad67017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6506, "upload_time": "2012-12-22T17:13:51", "upload_time_iso_8601": "2012-12-22T17:13:51.217070Z", "url": "https://files.pythonhosted.org/packages/e6/56/a0c5f8838981a48a9b69f9a44945f1b354365549b932a389d727d9ddbb1f/py-projectmill-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bede868dd03340e89df8e8ef24d6fef7", "sha256": "e969c8ea48dbcea9ba7a236f94db27ff2409f3695e9234e4ceda8036d1a86807"}, "downloads": -1, "filename": "py-projectmill-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bede868dd03340e89df8e8ef24d6fef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6722, "upload_time": "2012-12-22T19:45:05", "upload_time_iso_8601": "2012-12-22T19:45:05.310010Z", "url": "https://files.pythonhosted.org/packages/af/d0/00bfe75500881c7610ec8c88931958b02fc4af043fde205a38820308d15e/py-projectmill-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c2e1d109774b34f82751b36912b99999", "sha256": "cb9be04fc0b5a3722d411709bc87472384499c5c48d808fde050a36538496d37"}, "downloads": -1, "filename": "py-projectmill-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c2e1d109774b34f82751b36912b99999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6871, "upload_time": "2012-12-26T19:24:32", "upload_time_iso_8601": "2012-12-26T19:24:32.752714Z", "url": "https://files.pythonhosted.org/packages/c3/27/7d454dd1e7e104aeedf398bbe9481734c8b77348b81cf929948396f76024/py-projectmill-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2e1d109774b34f82751b36912b99999", "sha256": "cb9be04fc0b5a3722d411709bc87472384499c5c48d808fde050a36538496d37"}, "downloads": -1, "filename": "py-projectmill-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c2e1d109774b34f82751b36912b99999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6871, "upload_time": "2012-12-26T19:24:32", "upload_time_iso_8601": "2012-12-26T19:24:32.752714Z", "url": "https://files.pythonhosted.org/packages/c3/27/7d454dd1e7e104aeedf398bbe9481734c8b77348b81cf929948396f76024/py-projectmill-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:05 2020"}