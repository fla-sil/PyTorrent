{"info": {"author": "Rob Edwards", "author_email": "raedwards@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 3.0", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "[![DOI](https://www.zenodo.org/badge/60999054.svg)](https://www.zenodo.org/badge/latestdoi/60999054)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![GitHub language count](https://img.shields.io/github/languages/count/linsalrob/PhiSpy)\n[![Build Status](https://travis-ci.org/linsalrob/PhiSpy.svg?branch=master)](https://travis-ci.org/linsalrob/PhiSpy)\n\n\n#What is PhiSpy?\n\nPhiSpy identifies prophages in Bacterial (and probably Archaeal) genomes. Given an annotated genome it will use several approaches to identify the most likely prophage regions.\n\nInitial versions of PhiSpy were written by \n\nSajia Akhter (sajia@stanford.edu)\n[Edwards Bioinformatics Lab](http://edwards.sdsu.edu/research/)\n\nImprovements, bug fixes, and other changes were made by\n\nKatelyn McNair\n[Edwards Bioinformatics Lab](http://edwards.sdsu.edu/research/)\nand Przemyslaw Decewicz \n[University of Warsaw](http://en.uw.edu.pl/)\n\n\n# Software Requirements\n\nPhiSpy requires following programs to be installed in the system. Most of these are likely already on your system. \n\n1. `Python` - version 3.4 or later\n2. `Biopython` - version 1.58 or later \n3. `gcc` - GNU project C and C++ compiler - version 4.4.1 or later\n4. The `Python.h` header file. This is included in `python3-dev` that is available on most systems.\n\n# INSTALLATION\n\nFor a brand new `Ubuntu` installation (e.g. on [Google Cloud Platform](https://cloud.google.com/) you can install these dependencies with these commands:\n\n```bash\nsudo apt install -y build-essential python3-dev python3-pip\npython3 -m pip install --user PhiSpy\n```\nThis will install `PhiSpy.py` in `~/.local/bin` which should be in your `$PATH` but might not be (see [this](https://bugs.launchpad.net/ubuntu/+source/bash/+bug/1588562) detailed discussion). \n\nIf you try `PhiSpy.py -v` and get an error like this:\n\n```bash\n$ PhiSpy.py -v\n-bash: PhiSpy.py: command not found\n```\n\nThen you can either use the full path:\n\n```bash\n~/.local/bin/PhiSpy.py -v\n```\n\nor add that location to your `$PATH`:\n\n```bash\necho \"export PATH=\\$HOME/.local/bin:\\$PATH\" >> ~/.bashrc\nsource ~/.bashrc\nPhiSpy.py -v\n```\n\n## Advanced Users\n\nFor advanced users, you can clone the git repository and use that (though `pip` is the recommended install method).\n```bash\ngit clone https://github.com/linsalrob/PhiSpy.git\ncd PhiSpy`\npython3 setup.py install --user\n```\n\nIf you have root and you want to install globally, you can change the setup command.\n\n```bash\ngit clone https://github.com/linsalrob/PhiSpy.git\ncd PhiSpy`\npython3 setup.py install\n```\n\nFor ease of use, you may wish to add the location of PhiSpy.py to your $PATH.\n\n\n# Testing PhiSpy.py\n\nDownload the [Streptococcus pyogenes M1 genome](https://raw.githubusercontent.com/linsalrob/PhiSpy/master/tests/Streptococcus_pyogenes_M1_GAS.gb) \n\n```bash\ncurl -Lo Streptococcus_pyogenes_M1_GAS.gb https://bit.ly/37qFArb\nPhiSpy.py -o Streptococcus.phages Streptococcus_pyogenes_M1_GAS.gb\n```\n\nor to run it with the `Streptococcus` training set:\n\n```bash\nPhiSpy.py -o Streptococcus.phages -t data/trainSet_160490.61.txt Streptococcus_pyogenes_M1_GAS.gb\n```\n\nThis uses the `GenBank` format file for *Streptococcus pyogenes* M1 GAS that we provide in the [tests/](tests/) directory, and we use the training set for *S. pyogenes* M1 GAS that we have pre-calculated. This quickly identifies the four prophages in this genome, runs the repeat finder on all of them, and outputs the answers.\n\nYou will find the output files from this query in `output_directory`.\n\n\n# Running PhiSpy.py\n\nThe simplest command is:\n\n```bash\nPhiSpy.py -f genbank_file -o output_directory\n```\n\nwhere:\n- `genbank file`: The input DNA sequence file in GenBank format.\n- `output directory`: The output directory is the directory where the final output file will be created.\n\nIf you have new genome, we recommend annotating it using the [RAST server](http://rast.nmpdr.org/rast.cgi) or [PROKKA](https://github.com/tseemann/prokka).\n \nAfter annotation, you can download the genome directory from the server.\n\n\n# Help\n\nFor the help menu use the `-h` option:\n```bash\npython PhiSpy.py -h\n```\n\n# Output Files\n\nThere are 3 output files, located in output directory.\n\n1. prophage.tbl: This file has two columns separated by tabs [id, location]. \nThe id is in the format: pp_number, where number is a sequential number of the prophage (starting at 1). \nLocation is be in the format: contig_start_stop that encompasses the prophage.\n \n2. prophage_tbl.tsv: This is a tab seperated file. The file contains all the genes of the genome. The tenth colum represents the status of a gene. If this column is 1 then the gene is a phage like gene; otherwise it is a bacterial gene. \n\nThis file has 16 columns:(i) fig_no: the id of each gene; (ii) function: function of the gene;\t(iii) contig; (iv) start: start location of the gene; (v) stop: end location of the gene; (vi) position: a sequential number of the gene (starting at 1); (vii)\trank: rank of each gene provided by random forest; (viii) my_status: status of each gene based on random forest; (ix) pp: classification of each gene based on their function; (x) Final_status: the status of each gene. For prophages, this column has the number of the prophage as listed in prophage.tbl above; If the column contains a 0 we believe that it is a bacterial gene. If we can detect the _att_ sites, the additional columns will be: (xi) start of _attL_; (xii) end of _attL_; (xiii) start of _attR_; (xiv) end of _attR_; (xv) sequence of _attL_; (xvi) sequence of _attR_.\n\n3. prophage_coordinates.tsv: This file has the prophage ID, contig, start, stop, and potential _att_ sites identified for the phages.\n\n# Example Data\n\n* _Streptococcus pyogenes_ M1 GAS which has a single genome contig. The genome contains four prophages.\n\nTo analyze this data, you can use:\n\n```\nPhiSpy.py -o output_directory -t data/trainSet_160490.61.txt tests/Streptococcus_pyogenes_M1_GAS.gb\n```\n\nAnd you should get a prophage table that has this information (for example, take a look at `output_directory/prophage.tbl`).\n\n| Prophage number | Contig | Start | Stop |\n| --- | --- | --- | --- | \npp_1 | NC_002737 | 529631 | 569288\npp_2 | NC_002737 | 778642 | 820599\npp_3 | NC_002737 | 1192630 | 1222549\npp_4 | NC_002737 | 1775862 | 1782822", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/linsalrob/PhiSpy", "keywords": "phage prophage bioinformatics microbiology bacteria genome genomics", "license": "The MIT License (MIT)", "maintainer": "", "maintainer_email": "", "name": "PhiSpy", "package_url": "https://pypi.org/project/PhiSpy/", "platform": "any", "project_url": "https://pypi.org/project/PhiSpy/", "project_urls": {"Homepage": "https://github.com/linsalrob/PhiSpy"}, "release_url": "https://pypi.org/project/PhiSpy/3.7.8/", "requires_dist": null, "requires_python": "", "summary": "Prophage finder using multiple metrics", "version": "3.7.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.zenodo.org/badge/latestdoi/60999054\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06a2be1d7b2966e83d0498a27c010bf7a6fc84f6/68747470733a2f2f7777772e7a656e6f646f2e6f72672f62616467652f36303939393035342e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<img alt=\"GitHub language count\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f6f7ab5a4dd1e54fec4fb609502863bf37143dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f756e742f6c696e73616c726f622f506869537079\">\n<a href=\"https://travis-ci.org/linsalrob/PhiSpy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05258b923d970007391c4fe92e07faca23c012bb/68747470733a2f2f7472617669732d63692e6f72672f6c696e73616c726f622f5068695370792e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>#What is PhiSpy?</p>\n<p>PhiSpy identifies prophages in Bacterial (and probably Archaeal) genomes. Given an annotated genome it will use several approaches to identify the most likely prophage regions.</p>\n<p>Initial versions of PhiSpy were written by</p>\n<p>Sajia Akhter (<a href=\"mailto:sajia@stanford.edu\">sajia@stanford.edu</a>)\n<a href=\"http://edwards.sdsu.edu/research/\" rel=\"nofollow\">Edwards Bioinformatics Lab</a></p>\n<p>Improvements, bug fixes, and other changes were made by</p>\n<p>Katelyn McNair\n<a href=\"http://edwards.sdsu.edu/research/\" rel=\"nofollow\">Edwards Bioinformatics Lab</a>\nand Przemyslaw Decewicz\n<a href=\"http://en.uw.edu.pl/\" rel=\"nofollow\">University of Warsaw</a></p>\n<h1>Software Requirements</h1>\n<p>PhiSpy requires following programs to be installed in the system. Most of these are likely already on your system.</p>\n<ol>\n<li><code>Python</code> - version 3.4 or later</li>\n<li><code>Biopython</code> - version 1.58 or later</li>\n<li><code>gcc</code> - GNU project C and C++ compiler - version 4.4.1 or later</li>\n<li>The <code>Python.h</code> header file. This is included in <code>python3-dev</code> that is available on most systems.</li>\n</ol>\n<h1>INSTALLATION</h1>\n<p>For a brand new <code>Ubuntu</code> installation (e.g. on <a href=\"https://cloud.google.com/\" rel=\"nofollow\">Google Cloud Platform</a> you can install these dependencies with these commands:</p>\n<pre>sudo apt install -y build-essential python3-dev python3-pip\npython3 -m pip install --user PhiSpy\n</pre>\n<p>This will install <code>PhiSpy.py</code> in <code>~/.local/bin</code> which should be in your <code>$PATH</code> but might not be (see <a href=\"https://bugs.launchpad.net/ubuntu/+source/bash/+bug/1588562\" rel=\"nofollow\">this</a> detailed discussion).</p>\n<p>If you try <code>PhiSpy.py -v</code> and get an error like this:</p>\n<pre>$ PhiSpy.py -v\n-bash: PhiSpy.py: <span class=\"nb\">command</span> not found\n</pre>\n<p>Then you can either use the full path:</p>\n<pre>~/.local/bin/PhiSpy.py -v\n</pre>\n<p>or add that location to your <code>$PATH</code>:</p>\n<pre><span class=\"nb\">echo</span> <span class=\"s2\">\"export PATH=\\$HOME/.local/bin:\\$PATH\"</span> &gt;&gt; ~/.bashrc\n<span class=\"nb\">source</span> ~/.bashrc\nPhiSpy.py -v\n</pre>\n<h2>Advanced Users</h2>\n<p>For advanced users, you can clone the git repository and use that (though <code>pip</code> is the recommended install method).</p>\n<pre>git clone https://github.com/linsalrob/PhiSpy.git\n<span class=\"nb\">cd</span> PhiSpy<span class=\"sb\">`</span>\npython3 setup.py install --user\n</pre>\n<p>If you have root and you want to install globally, you can change the setup command.</p>\n<pre>git clone https://github.com/linsalrob/PhiSpy.git\n<span class=\"nb\">cd</span> PhiSpy<span class=\"sb\">`</span>\npython3 setup.py install\n</pre>\n<p>For ease of use, you may wish to add the location of PhiSpy.py to your $PATH.</p>\n<h1>Testing PhiSpy.py</h1>\n<p>Download the <a href=\"https://raw.githubusercontent.com/linsalrob/PhiSpy/master/tests/Streptococcus_pyogenes_M1_GAS.gb\" rel=\"nofollow\">Streptococcus pyogenes M1 genome</a></p>\n<pre>curl -Lo Streptococcus_pyogenes_M1_GAS.gb https://bit.ly/37qFArb\nPhiSpy.py -o Streptococcus.phages Streptococcus_pyogenes_M1_GAS.gb\n</pre>\n<p>or to run it with the <code>Streptococcus</code> training set:</p>\n<pre>PhiSpy.py -o Streptococcus.phages -t data/trainSet_160490.61.txt Streptococcus_pyogenes_M1_GAS.gb\n</pre>\n<p>This uses the <code>GenBank</code> format file for <em>Streptococcus pyogenes</em> M1 GAS that we provide in the <a href=\"tests/\" rel=\"nofollow\">tests/</a> directory, and we use the training set for <em>S. pyogenes</em> M1 GAS that we have pre-calculated. This quickly identifies the four prophages in this genome, runs the repeat finder on all of them, and outputs the answers.</p>\n<p>You will find the output files from this query in <code>output_directory</code>.</p>\n<h1>Running PhiSpy.py</h1>\n<p>The simplest command is:</p>\n<pre>PhiSpy.py -f genbank_file -o output_directory\n</pre>\n<p>where:</p>\n<ul>\n<li><code>genbank file</code>: The input DNA sequence file in GenBank format.</li>\n<li><code>output directory</code>: The output directory is the directory where the final output file will be created.</li>\n</ul>\n<p>If you have new genome, we recommend annotating it using the <a href=\"http://rast.nmpdr.org/rast.cgi\" rel=\"nofollow\">RAST server</a> or <a href=\"https://github.com/tseemann/prokka\" rel=\"nofollow\">PROKKA</a>.</p>\n<p>After annotation, you can download the genome directory from the server.</p>\n<h1>Help</h1>\n<p>For the help menu use the <code>-h</code> option:</p>\n<pre>python PhiSpy.py -h\n</pre>\n<h1>Output Files</h1>\n<p>There are 3 output files, located in output directory.</p>\n<ol>\n<li>\n<p>prophage.tbl: This file has two columns separated by tabs [id, location].\nThe id is in the format: pp_number, where number is a sequential number of the prophage (starting at 1).\nLocation is be in the format: contig_start_stop that encompasses the prophage.</p>\n</li>\n<li>\n<p>prophage_tbl.tsv: This is a tab seperated file. The file contains all the genes of the genome. The tenth colum represents the status of a gene. If this column is 1 then the gene is a phage like gene; otherwise it is a bacterial gene.</p>\n</li>\n</ol>\n<p>This file has 16 columns:(i) fig_no: the id of each gene; (ii) function: function of the gene;\t(iii) contig; (iv) start: start location of the gene; (v) stop: end location of the gene; (vi) position: a sequential number of the gene (starting at 1); (vii)\trank: rank of each gene provided by random forest; (viii) my_status: status of each gene based on random forest; (ix) pp: classification of each gene based on their function; (x) Final_status: the status of each gene. For prophages, this column has the number of the prophage as listed in prophage.tbl above; If the column contains a 0 we believe that it is a bacterial gene. If we can detect the <em>att</em> sites, the additional columns will be: (xi) start of <em>attL</em>; (xii) end of <em>attL</em>; (xiii) start of <em>attR</em>; (xiv) end of <em>attR</em>; (xv) sequence of <em>attL</em>; (xvi) sequence of <em>attR</em>.</p>\n<ol>\n<li>prophage_coordinates.tsv: This file has the prophage ID, contig, start, stop, and potential <em>att</em> sites identified for the phages.</li>\n</ol>\n<h1>Example Data</h1>\n<ul>\n<li><em>Streptococcus pyogenes</em> M1 GAS which has a single genome contig. The genome contains four prophages.</li>\n</ul>\n<p>To analyze this data, you can use:</p>\n<pre><code>PhiSpy.py -o output_directory -t data/trainSet_160490.61.txt tests/Streptococcus_pyogenes_M1_GAS.gb\n</code></pre>\n<p>And you should get a prophage table that has this information (for example, take a look at <code>output_directory/prophage.tbl</code>).</p>\n<table>\n<thead>\n<tr>\n<th>Prophage number</th>\n<th>Contig</th>\n<th>Start</th>\n<th>Stop</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pp_1</td>\n<td>NC_002737</td>\n<td>529631</td>\n<td>569288</td>\n</tr>\n<tr>\n<td>pp_2</td>\n<td>NC_002737</td>\n<td>778642</td>\n<td>820599</td>\n</tr>\n<tr>\n<td>pp_3</td>\n<td>NC_002737</td>\n<td>1192630</td>\n<td>1222549</td>\n</tr>\n<tr>\n<td>pp_4</td>\n<td>NC_002737</td>\n<td>1775862</td>\n<td>1782822</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6377640, "releases": {"3.7.5": [{"comment_text": "", "digests": {"md5": "9c9353325707dba3fbcc99228770617c", "sha256": "ed57cfe30dae9a32b2c19cad0343a99b52a698927f64f4f11dec6aae4fe60415"}, "downloads": -1, "filename": "PhiSpy-3.7.5.tar.gz", "has_sig": false, "md5_digest": "9c9353325707dba3fbcc99228770617c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8478, "upload_time": "2019-12-27T18:21:56", "upload_time_iso_8601": "2019-12-27T18:21:56.315385Z", "url": "https://files.pythonhosted.org/packages/f7/f2/782f1b0eba911a2ab439e89d442aa7010c437994ab0231363c24ff2df0bb/PhiSpy-3.7.5.tar.gz", "yanked": false}], "3.7.6": [{"comment_text": "", "digests": {"md5": "af13bf5b9fbd76f7cf30f74ad7ad13bb", "sha256": "a44561ccce162a3585044bb408dde4a738c305df9b399df99c4b754c5a81767e"}, "downloads": -1, "filename": "PhiSpy-3.7.6.tar.gz", "has_sig": false, "md5_digest": "af13bf5b9fbd76f7cf30f74ad7ad13bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12273493, "upload_time": "2019-12-28T06:08:20", "upload_time_iso_8601": "2019-12-28T06:08:20.032207Z", "url": "https://files.pythonhosted.org/packages/3b/72/462e8dfdf3e8df900b5a6df19b77bbf1a989b495e94e8d8e4a74c51163d0/PhiSpy-3.7.6.tar.gz", "yanked": false}], "3.7.7": [{"comment_text": "", "digests": {"md5": "f9be6038c4ef14c1b67d653d7cae4f47", "sha256": "8995f3dafb3bb53741799ae1a4ed6ca335b065fe9b6bf929318aba398dff3685"}, "downloads": -1, "filename": "PhiSpy-3.7.7.tar.gz", "has_sig": false, "md5_digest": "f9be6038c4ef14c1b67d653d7cae4f47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12273341, "upload_time": "2019-12-29T17:52:01", "upload_time_iso_8601": "2019-12-29T17:52:01.239539Z", "url": "https://files.pythonhosted.org/packages/4d/35/4276ce3b93425ec9c3d1626c87b9a43fe9689720e44f4601cb04e09985d3/PhiSpy-3.7.7.tar.gz", "yanked": false}], "3.7.8": [{"comment_text": "", "digests": {"md5": "4ca96827942afdf1c175cf0403235b22", "sha256": "81eedc6fe00bd68ed4e0fd257c9e800395e89a3f7461643872781c12def75052"}, "downloads": -1, "filename": "PhiSpy-3.7.8.tar.gz", "has_sig": false, "md5_digest": "4ca96827942afdf1c175cf0403235b22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12274366, "upload_time": "2019-12-31T02:11:14", "upload_time_iso_8601": "2019-12-31T02:11:14.297782Z", "url": "https://files.pythonhosted.org/packages/94/4e/b94962d068226323cf20373027308a9d4ac594128368818e85d5b907ad11/PhiSpy-3.7.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ca96827942afdf1c175cf0403235b22", "sha256": "81eedc6fe00bd68ed4e0fd257c9e800395e89a3f7461643872781c12def75052"}, "downloads": -1, "filename": "PhiSpy-3.7.8.tar.gz", "has_sig": false, "md5_digest": "4ca96827942afdf1c175cf0403235b22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12274366, "upload_time": "2019-12-31T02:11:14", "upload_time_iso_8601": "2019-12-31T02:11:14.297782Z", "url": "https://files.pythonhosted.org/packages/94/4e/b94962d068226323cf20373027308a9d4ac594128368818e85d5b907ad11/PhiSpy-3.7.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:29 2020"}