{"info": {"author": "Mike Thornton", "author_email": "six8@devdetails.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============\nlogging-levels\n==============\n\n.. image:: https://travis-ci.org/six8/logging-levels.png\n   :target: https://travis-ci.org/six8/logging-levels\n\nAs projects get bigger, ``logging.debug()`` becomes the dumping\nground for everything that your application is doing. This usually\nbecomes so noisy that you can't really make sense of what you're\ntrying to debug.\n\nAlthough it is usually disabled in production, sometimes you need to\nenable debug logging to -- you know -- actually debug something. But\nsince *everything* is dumped there, it's too much of a mess to wade\nthrough.\n\nTo help with this, you can add extra logging levels. However, rarely\nare they added to projects and when they are, they're often incomplete.\nThen sometimes you go to other projects and they're not there. So you\nhave to lookup how to add them but usually give up and just stick with\ndumping something in ``logging.debug()`` cause you'll remove it later\n-- right?\n\nWhat if it was as easy as 2 lines of code to add a new log level?\n\nBam!:\n\n.. code:: python\n\n    from logging_levels import add_log_level\n    add_log_level(VERBOSE=9)\n\nHow about a few new log levels?:\n\n.. code:: python\n\n    add_log_level(VERBOSE=9, TRACE=8, NOISE=5, IMPORTANT=100)\n\nNow log with them:\n\n.. code:: python\n\n    log.verbose(\"I've said too much\")\n    log.trace(\"But I haven't said enough\")\n    log.noise(\"That's me in the corner\")\n    log.important(\"That's me in the spotlight\")\n\nWant to implicitly log exceptions with your fancy new log level?:\n\n.. code:: python\n\n    add_log_level(DANG=90, exceptions=True)\n\n    try:\n        raise Exception('Oops')\n    except:\n        # Will include exception in log\n        log.dang('Something broke.')\n\n\nProject Loggers\n---------------\n\nBy defualt, logging_levels manipulates the global logging module.\nFor your projects -- especially if you're creating open source\nmodules -- you should isolate your logging module.\n\n.. code:: python\n\n    from logging_levels import isolated_logging, log_exceptions\n\n    logging = isolated_logging(\n        STUFF=8,\n        THINGS=22,\n        WTF=log_exceptions(1000),\n    )\n\n    logging.stuff('Log some stuff')\n    logging.wtf('Log some exceptions')\n\nIf you create this isolated logging module\nin ``mylib/__init__.py``, then you can use it throughout your\nproject easily.\n\n.. code:: python\n\n    from mylib import logging\n    logging.error('Oops, broke something.')\n\n\nStandards\n---------\n\nTo help everyone standardize on the same log levels, this library\nprovides a function to add some missing severity levels defined by the\nthe syslog protocol in `RFC-5424 <https://tools.ietf.org/html/rfc5424>`_.\n\nThis library also introduces some additional debugging levels and a\n``SUPPRESSED`` level which is intended to be used for logging suppressed\nexceptions that you may want to log, but otherwise consider handled.\n\nUse the function ``add_standards`` to add the standard levels provided\nby logging-levels:\n\n.. code:: python\n\n    from logging_levels.standards import add_standards\n    import logging\n    add_standards(logging)\n\n    log.emergency('This aggression will not stand, man.')\n    log.alert('Oh no! Something happened!')\n    log.notice('FYI this other thing happened.')\n    log.verbose('Debug, but so much more')\n    log.trace('Log every -- single -- detail')\n    log.suppressed('Warn a suppressed exception')\n\n\nAll levels after using ``add_standards`` will be (new levels are bolded):\n\n+---------------+---------------+\n| Level         | Numeric Value |\n+===============+===============+\n| **EMERGENCY** | **100**       |\n+---------------+---------------+\n| **ALERT**     | **70**        |\n+---------------+---------------+\n| CRITICAL      | 50            |\n+---------------+---------------+\n| ERROR         | 40            |\n+---------------+---------------+\n| **SUPPRESSED**| **31**        |\n+---------------+---------------+\n| WARNING       | 30            |\n+---------------+---------------+\n| **NOTICE**    | **25**        |\n+---------------+---------------+\n| INFO          | 20            |\n+---------------+---------------+\n| DEBUG         | 10            |\n+---------------+---------------+\n| **VERBOSE**   |  **7**        |\n+---------------+---------------+\n| **TRACE**     |  **5**        |\n+---------------+---------------+\n| NOTSET        |  0            |\n+---------------+---------------+\n\n\nInstalling\n----------\n\n.. code-block:: console\n\n    pip install logging_levels\n\nTesting\n-------\n\nInstall dev requirements:\n\n.. code-block:: console\n\n    pip install -r test.requirements.txt\n\nInstall project:\n\n.. code-block:: console\n\n    pip install -e .\n\nRun pytest:\n\n.. code-block:: console\n\n    py.test tests", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/six8/logging-levels", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/six8/logging-levels", "keywords": "logging", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "logging_levels", "package_url": "https://pypi.org/project/logging_levels/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/logging_levels/", "project_urls": {"Download": "https://github.com/six8/logging-levels", "Homepage": "https://github.com/six8/logging-levels"}, "release_url": "https://pypi.org/project/logging_levels/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Add convenient logging levels for when DEBUG just isn't enough.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/six8/logging-levels\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/six8/logging-levels.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8a6b11286d12991a676baee5288ec2e9b7f28f7/68747470733a2f2f7472617669732d63692e6f72672f736978382f6c6f6767696e672d6c6576656c732e706e67\"></a>\n<p>As projects get bigger, <tt>logging.debug()</tt> becomes the dumping\nground for everything that your application is doing. This usually\nbecomes so noisy that you can\u2019t really make sense of what you\u2019re\ntrying to debug.</p>\n<p>Although it is usually disabled in production, sometimes you need to\nenable debug logging to \u2013 you know \u2013 actually debug something. But\nsince <em>everything</em> is dumped there, it\u2019s too much of a mess to wade\nthrough.</p>\n<p>To help with this, you can add extra logging levels. However, rarely\nare they added to projects and when they are, they\u2019re often incomplete.\nThen sometimes you go to other projects and they\u2019re not there. So you\nhave to lookup how to add them but usually give up and just stick with\ndumping something in <tt>logging.debug()</tt> cause you\u2019ll remove it later\n\u2013 right?</p>\n<p>What if it was as easy as 2 lines of code to add a new log level?</p>\n<p>Bam!:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">logging_levels</span> <span class=\"kn\">import</span> <span class=\"n\">add_log_level</span>\n<span class=\"n\">add_log_level</span><span class=\"p\">(</span><span class=\"n\">VERBOSE</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">)</span>\n</pre>\n<p>How about a few new log levels?:</p>\n<pre><span class=\"n\">add_log_level</span><span class=\"p\">(</span><span class=\"n\">VERBOSE</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">TRACE</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">NOISE</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">IMPORTANT</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p>Now log with them:</p>\n<pre><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">(</span><span class=\"s2\">\"I've said too much\"</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"s2\">\"But I haven't said enough\"</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">noise</span><span class=\"p\">(</span><span class=\"s2\">\"That's me in the corner\"</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">important</span><span class=\"p\">(</span><span class=\"s2\">\"That's me in the spotlight\"</span><span class=\"p\">)</span>\n</pre>\n<p>Want to implicitly log exceptions with your fancy new log level?:</p>\n<pre><span class=\"n\">add_log_level</span><span class=\"p\">(</span><span class=\"n\">DANG</span><span class=\"o\">=</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">exceptions</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">'Oops'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Will include exception in log</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">dang</span><span class=\"p\">(</span><span class=\"s1\">'Something broke.'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"project-loggers\">\n<h2>Project Loggers</h2>\n<p>By defualt, logging_levels manipulates the global logging module.\nFor your projects \u2013 especially if you\u2019re creating open source\nmodules \u2013 you should isolate your logging module.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">logging_levels</span> <span class=\"kn\">import</span> <span class=\"n\">isolated_logging</span><span class=\"p\">,</span> <span class=\"n\">log_exceptions</span>\n\n<span class=\"n\">logging</span> <span class=\"o\">=</span> <span class=\"n\">isolated_logging</span><span class=\"p\">(</span>\n    <span class=\"n\">STUFF</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">THINGS</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">,</span>\n    <span class=\"n\">WTF</span><span class=\"o\">=</span><span class=\"n\">log_exceptions</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">stuff</span><span class=\"p\">(</span><span class=\"s1\">'Log some stuff'</span><span class=\"p\">)</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">wtf</span><span class=\"p\">(</span><span class=\"s1\">'Log some exceptions'</span><span class=\"p\">)</span>\n</pre>\n<p>If you create this isolated logging module\nin <tt>mylib/__init__.py</tt>, then you can use it throughout your\nproject easily.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mylib</span> <span class=\"kn\">import</span> <span class=\"n\">logging</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Oops, broke something.'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"standards\">\n<h2>Standards</h2>\n<p>To help everyone standardize on the same log levels, this library\nprovides a function to add some missing severity levels defined by the\nthe syslog protocol in <a href=\"https://tools.ietf.org/html/rfc5424\" rel=\"nofollow\">RFC-5424</a>.</p>\n<p>This library also introduces some additional debugging levels and a\n<tt>SUPPRESSED</tt> level which is intended to be used for logging suppressed\nexceptions that you may want to log, but otherwise consider handled.</p>\n<p>Use the function <tt>add_standards</tt> to add the standard levels provided\nby logging-levels:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">logging_levels.standards</span> <span class=\"kn\">import</span> <span class=\"n\">add_standards</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">add_standards</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">emergency</span><span class=\"p\">(</span><span class=\"s1\">'This aggression will not stand, man.'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s1\">'Oh no! Something happened!'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">notice</span><span class=\"p\">(</span><span class=\"s1\">'FYI this other thing happened.'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">verbose</span><span class=\"p\">(</span><span class=\"s1\">'Debug, but so much more'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"s1\">'Log every -- single -- detail'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">suppressed</span><span class=\"p\">(</span><span class=\"s1\">'Warn a suppressed exception'</span><span class=\"p\">)</span>\n</pre>\n<p>All levels after using <tt>add_standards</tt> will be (new levels are bolded):</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Level</th>\n<th>Numeric Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><strong>EMERGENCY</strong></td>\n<td><strong>100</strong></td>\n</tr>\n<tr><td><strong>ALERT</strong></td>\n<td><strong>70</strong></td>\n</tr>\n<tr><td>CRITICAL</td>\n<td>50</td>\n</tr>\n<tr><td>ERROR</td>\n<td>40</td>\n</tr>\n<tr><td><strong>SUPPRESSED</strong></td>\n<td><strong>31</strong></td>\n</tr>\n<tr><td>WARNING</td>\n<td>30</td>\n</tr>\n<tr><td><strong>NOTICE</strong></td>\n<td><strong>25</strong></td>\n</tr>\n<tr><td>INFO</td>\n<td>20</td>\n</tr>\n<tr><td>DEBUG</td>\n<td>10</td>\n</tr>\n<tr><td><strong>VERBOSE</strong></td>\n<td><strong>7</strong></td>\n</tr>\n<tr><td><strong>TRACE</strong></td>\n<td><strong>5</strong></td>\n</tr>\n<tr><td>NOTSET</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre><span class=\"go\">pip install logging_levels</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Install dev requirements:</p>\n<pre><span class=\"go\">pip install -r test.requirements.txt</span>\n</pre>\n<p>Install project:</p>\n<pre><span class=\"go\">pip install -e .</span>\n</pre>\n<p>Run pytest:</p>\n<pre><span class=\"go\">py.test tests</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2593237, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "dae79d4b552dbe456816435767af25db", "sha256": "d3afbe447abfca6a3e2307edbe13711541a2b13f09365cba01f240201c18ea2c"}, "downloads": -1, "filename": "logging_levels-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dae79d4b552dbe456816435767af25db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7769, "upload_time": "2017-01-23T16:59:24", "upload_time_iso_8601": "2017-01-23T16:59:24.866205Z", "url": "https://files.pythonhosted.org/packages/30/21/ee133e405b8cf646d1b73cad2d19962def1001acfac7d6a04a20b806a0fc/logging_levels-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dae79d4b552dbe456816435767af25db", "sha256": "d3afbe447abfca6a3e2307edbe13711541a2b13f09365cba01f240201c18ea2c"}, "downloads": -1, "filename": "logging_levels-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dae79d4b552dbe456816435767af25db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7769, "upload_time": "2017-01-23T16:59:24", "upload_time_iso_8601": "2017-01-23T16:59:24.866205Z", "url": "https://files.pythonhosted.org/packages/30/21/ee133e405b8cf646d1b73cad2d19962def1001acfac7d6a04a20b806a0fc/logging_levels-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:17 2020"}