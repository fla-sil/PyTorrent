{"info": {"author": "Victor Lin", "author_email": "bornstub@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "NowSync\n=======\n\nNowSync is a set of tool for synchronizing local modification to remote\nWSGI server, makes life of designer easier.\n\nHow it works\n------------\n\nThere is two part of NowSync, one is the server, it runs your WSGI application\nand its own WSGI application for file synchronizing.  And the other part of\nNowSync is the client, it monitors changes in local folders, if those files\nare changed, it will upload those modifications to remote server.\n\nWhich means, the designer doesn't have to run a local application, all they \nhave to do is get a copy of the application in his local computer, and run \nthe NowSync client.\n\nInstallation\n------------\n\nTo install NowSync, type::\n\n   easy_install nowsync\n   \nOr, if you perfer pip::\n\n   pip install nowsync\n\nConfiguration\n-------------\n\nTo run NowSync, you need to write a configuration file, it will be read both\nby the client and server, it is in YAML format, here is an example::\n\n    ---\n    \n    # show we turn on the debug mode of NowSync server?\n    debug: True\n    \n    # NowSync server\n    nowsync:\n        interface: 0.0.0.0\n        port: 5001\n        # can be accessed by users only\n        user_only: True\n        # are we under a proxy?\n        under_proxy: True\n       \n    # guest WSGI app server to run\n    app:\n        interface: 0.0.0.0\n        port: 5000\n        user_only: True\n        under_proxy: True\n        # the path of WSGI application to run\n        # wsgi here is the module, and application is the variable name in\n        # the module\n        app_path: wsgi:application\n    \n    client:\n        # url to NowSync API\n        url: http://develop.example.com:5001/api/\n        \n        # user name\n        username: alvin\n        password: password_goes_here\n    \n    # path to directory to sync\n    sync_path: .\n    \n    # files that we want to sync\n    sync_files: [\n        'myproject/static/**',\n        'myproject/templates/**',\n    ]\n    \n    # files that we don't want to sync\n    ignore_files: [\n        '*.pyc',\n        '.hg/*',\n        '.git/*',\n        '.*',\n        'nowsync.yaml',\n    ]\n    \n    # users who can access to NowSync server or guest application\n    users:\n        alvin: password_goes_here\n    \n    ...\n     \nPut the configuration file nowsync.yaml in the folder of your project.  The\nstructure may look like this::\n\n   myproject/\n       + wsgi.py\n       + nowsync.yaml\n       + setup.py\n       + myproject/\n           + static/\n           + templates/\n           + models/\n           + views/\n           \nHow to use\n----------\n           \nTo run nowsync server, here you type::\n\n   nowsync_server\n   \nAnd you should see::\n\n   running nowsync_server\n   INFO:nowsync.server:Start new process\n   INFO:werkzeug: * Running on http://0.0.0.0:5001\n    * Running on http://0.0.0.0:5000/\n    \nWith proper configuration in project folder, all designer has to do is get a\ncopy of your project, and run::\n\n   cd myproject\n   nowsync_client\n   \nFor now, it synchronizes files in myproject, your designer just modify the\ntemplate, CSS and images,  and all the modifications will reflect in the \nremote WSGI server.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/victorlin/nowsync", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "nowsync", "package_url": "https://pypi.org/project/nowsync/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nowsync/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/victorlin/nowsync"}, "release_url": "https://pypi.org/project/nowsync/0.3b3.dev30/", "requires_dist": null, "requires_python": null, "summary": "A set of tool for synchronizing local modification to remoteWSGI server, makes life of designer easier", "version": "0.3b3.dev30", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>NowSync is a set of tool for synchronizing local modification to remote\nWSGI server, makes life of designer easier.</p>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>There is two part of NowSync, one is the server, it runs your WSGI application\nand its own WSGI application for file synchronizing.  And the other part of\nNowSync is the client, it monitors changes in local folders, if those files\nare changed, it will upload those modifications to remote server.</p>\n<p>Which means, the designer doesn\u2019t have to run a local application, all they\nhave to do is get a copy of the application in his local computer, and run\nthe NowSync client.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install NowSync, type:</p>\n<pre>easy_install nowsync\n</pre>\n<p>Or, if you perfer pip:</p>\n<pre>pip install nowsync\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>To run NowSync, you need to write a configuration file, it will be read both\nby the client and server, it is in YAML format, here is an example:</p>\n<pre>---\n\n# show we turn on the debug mode of NowSync server?\ndebug: True\n\n# NowSync server\nnowsync:\n    interface: 0.0.0.0\n    port: 5001\n    # can be accessed by users only\n    user_only: True\n    # are we under a proxy?\n    under_proxy: True\n\n# guest WSGI app server to run\napp:\n    interface: 0.0.0.0\n    port: 5000\n    user_only: True\n    under_proxy: True\n    # the path of WSGI application to run\n    # wsgi here is the module, and application is the variable name in\n    # the module\n    app_path: wsgi:application\n\nclient:\n    # url to NowSync API\n    url: http://develop.example.com:5001/api/\n\n    # user name\n    username: alvin\n    password: password_goes_here\n\n# path to directory to sync\nsync_path: .\n\n# files that we want to sync\nsync_files: [\n    'myproject/static/**',\n    'myproject/templates/**',\n]\n\n# files that we don't want to sync\nignore_files: [\n    '*.pyc',\n    '.hg/*',\n    '.git/*',\n    '.*',\n    'nowsync.yaml',\n]\n\n# users who can access to NowSync server or guest application\nusers:\n    alvin: password_goes_here\n\n...\n</pre>\n<p>Put the configuration file nowsync.yaml in the folder of your project.  The\nstructure may look like this:</p>\n<pre>myproject/\n    + wsgi.py\n    + nowsync.yaml\n    + setup.py\n    + myproject/\n        + static/\n        + templates/\n        + models/\n        + views/\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>To run nowsync server, here you type:</p>\n<pre>nowsync_server\n</pre>\n<p>And you should see:</p>\n<pre>running nowsync_server\nINFO:nowsync.server:Start new process\nINFO:werkzeug: * Running on http://0.0.0.0:5001\n * Running on http://0.0.0.0:5000/\n</pre>\n<p>With proper configuration in project folder, all designer has to do is get a\ncopy of your project, and run:</p>\n<pre>cd myproject\nnowsync_client\n</pre>\n<p>For now, it synchronizes files in myproject, your designer just modify the\ntemplate, CSS and images,  and all the modifications will reflect in the\nremote WSGI server.</p>\n</div>\n\n          </div>"}, "last_serial": 795573, "releases": {"0.3b.dev26": [{"comment_text": "", "digests": {"md5": "c055bee8c46aa64fb297c5fb6c204ee6", "sha256": "4edc1c5586640a3b433980b6652324ec6ea9dce0b93949a9608a36e87ec0bfc8"}, "downloads": -1, "filename": "nowsync-0.3b.dev26.zip", "has_sig": false, "md5_digest": "c055bee8c46aa64fb297c5fb6c204ee6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48754, "upload_time": "2011-02-22T10:09:31", "upload_time_iso_8601": "2011-02-22T10:09:31.056657Z", "url": "https://files.pythonhosted.org/packages/70/e7/16bf8a3f6cfa8283290a3e8d528cffa7a4e1ab8a7693e409b26090ada82f/nowsync-0.3b.dev26.zip", "yanked": false}], "0.3b3.dev29": [{"comment_text": "", "digests": {"md5": "b3d9ac49e4a71d812e96f0938adf7609", "sha256": "08fe7f941989b127db504400c47730a1f41852008f9b5db543ad01c51d8da7da"}, "downloads": -1, "filename": "nowsync-0.3b3.dev29.zip", "has_sig": false, "md5_digest": "b3d9ac49e4a71d812e96f0938adf7609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49601, "upload_time": "2011-02-22T12:15:06", "upload_time_iso_8601": "2011-02-22T12:15:06.834653Z", "url": "https://files.pythonhosted.org/packages/42/41/6f6b38197515153ac7424bbf8af15d6629d4f9fbc565b508324d810ebf48/nowsync-0.3b3.dev29.zip", "yanked": false}], "0.3b3.dev30": [{"comment_text": "", "digests": {"md5": "788b5fdb273b175d6cf9a96ae0c4388f", "sha256": "f3b1679bc7ad325a05245a7c765554a97c129cd98967aa5d6f3119c22f3be01a"}, "downloads": -1, "filename": "nowsync-0.3b3.dev30.zip", "has_sig": false, "md5_digest": "788b5fdb273b175d6cf9a96ae0c4388f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49594, "upload_time": "2011-02-22T12:22:13", "upload_time_iso_8601": "2011-02-22T12:22:13.141747Z", "url": "https://files.pythonhosted.org/packages/28/53/a96e71f0683bfbbf7bbad3bf55c97553de050ae459ed3dddbcc6ed048968/nowsync-0.3b3.dev30.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "788b5fdb273b175d6cf9a96ae0c4388f", "sha256": "f3b1679bc7ad325a05245a7c765554a97c129cd98967aa5d6f3119c22f3be01a"}, "downloads": -1, "filename": "nowsync-0.3b3.dev30.zip", "has_sig": false, "md5_digest": "788b5fdb273b175d6cf9a96ae0c4388f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49594, "upload_time": "2011-02-22T12:22:13", "upload_time_iso_8601": "2011-02-22T12:22:13.141747Z", "url": "https://files.pythonhosted.org/packages/28/53/a96e71f0683bfbbf7bbad3bf55c97553de050ae459ed3dddbcc6ed048968/nowsync-0.3b3.dev30.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:34 2020"}