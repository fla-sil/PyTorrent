{"info": {"author": "Stefan Marr", "author_email": "rebench@stefan-marr.de", "bugtrack_url": null, "classifiers": [], "description": "# ReBench: Execute and Document Benchmarks Reproducibly\n\n[![Build Status](https://github.com/smarr/ReBench/workflows/CI/badge.svg)](https://github.com/smarr/ReBench/actions)\n[![PyPI version](https://badge.fury.io/py/ReBench.svg)](https://badge.fury.io/py/ReBench)\n[![Documentation](https://readthedocs.org/projects/rebench/badge/?version=latest)](https://rebench.readthedocs.io/)\n[![Downloads](https://pepy.tech/badge/rebench)](https://pepy.tech/project/rebench)\n[![Codacy Quality](https://api.codacy.com/project/badge/Grade/2f7210b65b414100be03f64fe6702d66)](https://www.codacy.com/app/smarr/ReBench)\n[![Coverage](https://coveralls.io/repos/github/smarr/ReBench/badge.svg?branch=master)](https://coveralls.io/github/smarr/ReBench?branch=master)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1311762.svg)](https://doi.org/10.5281/zenodo.1311762)\n\nReBench is a tool to run and document benchmark experiments.\nCurrently, it is mostly used for benchmarking language implementations,\nbut it can be used to monitor the performance of all\nkinds of other applications and programs, too.\n\nThe ReBench [configuration format][docs] is a text format based on [YAML](http://yaml.org/).\nA configuration file defines how to build and execute a set of *experiments*,\ni.e. benchmarks.\nIt describes which executable was used, which parameters were given\nto the benchmarks, and the number of iterations to be used to obtain \nstatistically reliable results.\n\nWith this approach, the configuration contains all benchmark-specific\ninformation to reproduce a benchmark run. However, it does not capture\nthe whole system.\n\nThe data of all benchmark runs is recorded in a data file for later analysis.\nImportant for long-running experiments, benchmarks can be aborted and\ncontinued at a later time.\n\nReBench focuses on the execution aspect and does not provide advanced\nanalysis facilities itself. Instead, the recorded results should be processed\nby dedicated tools such as scripts for statistical analysis in R, Python, etc,\nor [Codespeed][1], for continuous performance tracking.\n\nThe documentation for ReBench is hosted at [http://rebench.readthedocs.io/][docs].\n\n## Goals and Features\n\nReBench is designed to\n\n - enable reproduction of experiments;\n - document all benchmark parameters;\n - provide a flexible execution model,\n   with support for interrupting and continuing benchmarking;\n - enable the definition of complex sets of comparisons and their flexible execution;\n - report results to continuous performance monitoring systems, e.g., [Codespeed][1];\n - provide basic support for building/compiling benchmarks/experiments on demand;\n - be extensible to parse output of custom benchmark harnesses.\n\n## Non-Goals\n\nReBench isn't\n\n - a framework for (micro)benchmarks.\n   Instead, it relies on existing harnesses and can be extended to parse their\n   output.\n - a performance analysis tool. It is meant to execute experiments and\n   record the corresponding measurements.\n - a data analysis tool. It provides only a bare minimum of statistics,\n   but has an easily parseable data format that can be processed, e.g., with R.\n\n## Installation and Usage\n\n<a id=\"install\"></a>\n\nReBench is implemented in Python and can be installed via pip:\n\n```bash\npip install rebench\n```\n\nA minimal configuration file looks like this:\n\n```yaml\n# this run definition will be chosen if no parameters are given to rebench\ndefault_experiment: all\ndefault_data_file: 'example.data'\n\n# a set of suites with different benchmarks and possibly different settings\nbenchmark_suites:\n    ExampleSuite:\n        gauge_adapter: RebenchLog\n        command: Harness %(benchmark)s %(input)s %(variable)s\n        input_sizes: [2, 10]\n        variable_values:\n            - val1\n        benchmarks:\n            - Bench1\n            - Bench2\n\n# a set of executables for the benchmark execution\nexecutors:\n    MyBin1:\n        path: bin\n        executable: test-vm1.py %(cores)s\n        cores: [1]\n    MyBin2:\n        path: bin\n        executable: test-vm2.py\n\n# combining benchmark suites and executions\nexperiments:\n    Example:\n        suites:\n          - ExampleSuite\n        executions:\n            - MyBin1\n            - MyBin2\n```\n\nSaved as `test.conf`, this configuration could be executed with ReBench as follows:\n\n```bash\nrebench test.conf\n```\n\nSee the documentation for details: [http://rebench.readthedocs.io/][docs].\n\n## Support and Contributions\n\nIn case you encounter issues,\nplease feel free to [open an issue](https://github.com/smarr/rebench/issues/new)\nso that we can help.\n\nFor contributions, we use the [normal Github flow](https://guides.github.com/introduction/flow/)\nof pull requests, discussion, and revisions. For larger contributions,\nit is likely useful to discuss them upfront in an issue first.\n\n## Use in Academia\n\nIf you use ReBench for research and in academic publications, please consider\nciting it.\n\nThe preferred citation is:\n\n```bibtex\n@misc{ReBench:2018,\n  author = {Marr, Stefan},\n  doi = {10.5281/zenodo.1311762},\n  month = {August},\n  note = {Version 1.0},\n  publisher = {GitHub},\n  title = {ReBench: Execute and Document Benchmarks Reproducibly},\n  year = 2018\n}\n```\n\nSome publications that have been using ReBench include:\n\n - [Transient Typechecks are (Almost) Free](https://stefan-marr.de/downloads/ecoop19-roberts-et-al-transient-typechecks-are-almost-free.pdf), Roberts et al. 2019.\n - [Efficient and Deterministic Record & Replay for Actor Languages](https://stefan-marr.de/downloads/manlang18-aumayr-et-al-efficient-and-deterministic-record-and-replay-for-actor-languages.pdf), D. Aumayr et al. 2018.\n - [Fully Reflective Execution Environments: Virtual Machines for More Flexible Software](https://doi.org/10.1109%2fTSE.2018.2812715), G. Chari et al. 2018.\n - [Building efficient and highly run-time adaptable virtual machines](http://lafhis.dc.uba.ar/sites/default/files/papers/buildingEfficientReflectiveVMs.pdf), G. Chari et al. 2017.\n - [Improving live debugging of concurrent threads through thread histories](https://doi.org/10.1016/j.scico.2017.10.005), M. Leske et al. 2017.\n - [Adaptive Just-in-time Value Class Optimization for Lowering Memory Consumption and Improving Execution Time Performance](https://arxiv.org/pdf/1606.06726) T. Pape et al. 2016\n - [Cross-Language Compiler Benchmarking---Are We Fast Yet?](https://stefan-marr.de/papers/dls-marr-et-al-cross-language-compiler-benchmarking-are-we-fast-yet/), S. Marr et al. 2016.\n - [Tracing vs. Partial Evaluation: Comparing Meta-Compilation Approaches for Self-Optimizing Interpreters](https://stefan-marr.de/papers/oopsla-marr-ducasse-meta-tracing-vs-partial-evaluation/), S. Marr, S. Ducasse. 2015.\n - [Zero-Overhead Metaprogramming: Reflection and Metaobject Protocols Fast and without Compromises](https://stefan-marr.de/papers/pldi-marr-et-al-zero-overhead-metaprogramming/), S. Marr et al. 2015.\n - [Pycket: a tracing JIT for a functional language](https://www.hpi.uni-potsdam.de/hirschfeld/publications/media/BaumanBolzHirschfeldKirilichevPapeSiekTobinHochstadt_2015_PycketATracingJitForAFunctionalLanguage_AcmDL.pdf), S. Bauman et al. 2015.\n - [Adaptive just-in-time value class optimization: transparent data structure inlining for fast execution](http://hpi.uni-potsdam.de/hirschfeld/publications/media/PapeBolzHirschfeld_2015_AdaptiveJustInTimeValueClassOptimization_AcmDL.pdf), T. Pape et al. 2015. \n - [Meta-tracing makes a fast Racket](https://www.hpi.uni-potsdam.de/hirschfeld/publications/media/BolzPapeSiekTobinHochstadt_2014_MetaTracingMakesAFastRacket_AuthorsVersion.pdf), C. F. Bolz et al. 2014.\n - [Cloud PARTE: Elastic Complex Event Processing based on Mobile Actors](http://soft.vub.ac.be/~smarr/downloads/agere13-swalens-et-al-cloud-parte-elastic-complex-event-processing-based-on-mobile-actors.pdf), J. Swalens et al. 2013.\n - [Identifying A Unifying Mechanism for the Implementation of Concurrency Abstractions on Multi-Language Virtual Machines](https://www.stefan-marr.de/downloads/tools12-smarr-dhondt-identifying-a-unifying-mechanism-for-the-implementation-of-concurrency-abstractions-on-multi-language-virtual-machines.pdf), S. Marr, T. D'Hondt. 2012.\n - [Insertion Tree Phasers: Efficient and Scalable Barrier Synchronization for Fine-grained Parallelism](https://www.stefan-marr.de/downloads/hpcc2010-marr-etal-insertion-tree-phasers.pdf), S. Marr et al. 2011.\n\n[1]: https://github.com/tobami/codespeed/\n[docs]: http://rebench.readthedocs.io/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smarr/ReBench", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ReBench", "package_url": "https://pypi.org/project/ReBench/", "platform": "", "project_url": "https://pypi.org/project/ReBench/", "project_urls": {"Homepage": "https://github.com/smarr/ReBench"}, "release_url": "https://pypi.org/project/ReBench/1.0.0/", "requires_dist": ["PyYAML (>=3.12)", "pykwalify (>=1.6.1)", "humanfriendly (>=8.0)", "py-cpuinfo (>=5.0.0)", "psutil (>=5.6.7)"], "requires_python": "", "summary": "Execute and document benchmarks reproducibly.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ReBench: Execute and Document Benchmarks Reproducibly</h1>\n<p><a href=\"https://github.com/smarr/ReBench/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a886c552ffd51d82617b6540421f40bd703f1fb/68747470733a2f2f6769746875622e636f6d2f736d6172722f526542656e63682f776f726b666c6f77732f43492f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/ReBench\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64cff578bf634cfc36d18b0668e3d5a06a780b7a/68747470733a2f2f62616467652e667572792e696f2f70792f526542656e63682e737667\"></a>\n<a href=\"https://rebench.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2530745c9bf59d2dddf4c2a94d922c66f5983973/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f726562656e63682f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pepy.tech/project/rebench\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c67d8f82c242dc0f96252029714860eff874bddd/68747470733a2f2f706570792e746563682f62616467652f726562656e6368\"></a>\n<a href=\"https://www.codacy.com/app/smarr/ReBench\" rel=\"nofollow\"><img alt=\"Codacy Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04c4d8f8a5dec72b3e33c4a3e5af015ed53562da/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3266373231306236356234313431303062653033663634666536373032643636\"></a>\n<a href=\"https://coveralls.io/github/smarr/ReBench?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a91b2e578607ccd35d93d5ca2de985419026fc44/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f736d6172722f526542656e63682f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.1311762\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/101156c2a6bbbb9817d9f5c9017d4b5252903841/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e313331313736322e737667\"></a></p>\n<p>ReBench is a tool to run and document benchmark experiments.\nCurrently, it is mostly used for benchmarking language implementations,\nbut it can be used to monitor the performance of all\nkinds of other applications and programs, too.</p>\n<p>The ReBench <a href=\"http://rebench.readthedocs.io/\" rel=\"nofollow\">configuration format</a> is a text format based on <a href=\"http://yaml.org/\" rel=\"nofollow\">YAML</a>.\nA configuration file defines how to build and execute a set of <em>experiments</em>,\ni.e. benchmarks.\nIt describes which executable was used, which parameters were given\nto the benchmarks, and the number of iterations to be used to obtain\nstatistically reliable results.</p>\n<p>With this approach, the configuration contains all benchmark-specific\ninformation to reproduce a benchmark run. However, it does not capture\nthe whole system.</p>\n<p>The data of all benchmark runs is recorded in a data file for later analysis.\nImportant for long-running experiments, benchmarks can be aborted and\ncontinued at a later time.</p>\n<p>ReBench focuses on the execution aspect and does not provide advanced\nanalysis facilities itself. Instead, the recorded results should be processed\nby dedicated tools such as scripts for statistical analysis in R, Python, etc,\nor <a href=\"https://github.com/tobami/codespeed/\" rel=\"nofollow\">Codespeed</a>, for continuous performance tracking.</p>\n<p>The documentation for ReBench is hosted at <a href=\"http://rebench.readthedocs.io/\" rel=\"nofollow\">http://rebench.readthedocs.io/</a>.</p>\n<h2>Goals and Features</h2>\n<p>ReBench is designed to</p>\n<ul>\n<li>enable reproduction of experiments;</li>\n<li>document all benchmark parameters;</li>\n<li>provide a flexible execution model,\nwith support for interrupting and continuing benchmarking;</li>\n<li>enable the definition of complex sets of comparisons and their flexible execution;</li>\n<li>report results to continuous performance monitoring systems, e.g., <a href=\"https://github.com/tobami/codespeed/\" rel=\"nofollow\">Codespeed</a>;</li>\n<li>provide basic support for building/compiling benchmarks/experiments on demand;</li>\n<li>be extensible to parse output of custom benchmark harnesses.</li>\n</ul>\n<h2>Non-Goals</h2>\n<p>ReBench isn't</p>\n<ul>\n<li>a framework for (micro)benchmarks.\nInstead, it relies on existing harnesses and can be extended to parse their\noutput.</li>\n<li>a performance analysis tool. It is meant to execute experiments and\nrecord the corresponding measurements.</li>\n<li>a data analysis tool. It provides only a bare minimum of statistics,\nbut has an easily parseable data format that can be processed, e.g., with R.</li>\n</ul>\n<h2>Installation and Usage</h2>\n<p><a id=\"install\"></a></p>\n<p>ReBench is implemented in Python and can be installed via pip:</p>\n<pre>pip install rebench\n</pre>\n<p>A minimal configuration file looks like this:</p>\n<pre><span class=\"c1\"># this run definition will be chosen if no parameters are given to rebench</span>\n<span class=\"nt\">default_experiment</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">all</span>\n<span class=\"nt\">default_data_file</span><span class=\"p\">:</span> <span class=\"s\">'example.data'</span>\n\n<span class=\"c1\"># a set of suites with different benchmarks and possibly different settings</span>\n<span class=\"nt\">benchmark_suites</span><span class=\"p\">:</span>\n    <span class=\"nt\">ExampleSuite</span><span class=\"p\">:</span>\n        <span class=\"nt\">gauge_adapter</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">RebenchLog</span>\n        <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Harness %(benchmark)s %(input)s %(variable)s</span>\n        <span class=\"nt\">input_sizes</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">2</span><span class=\"p p-Indicator\">,</span> <span class=\"nv\">10</span><span class=\"p p-Indicator\">]</span>\n        <span class=\"nt\">variable_values</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">val1</span>\n        <span class=\"nt\">benchmarks</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Bench1</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Bench2</span>\n\n<span class=\"c1\"># a set of executables for the benchmark execution</span>\n<span class=\"nt\">executors</span><span class=\"p\">:</span>\n    <span class=\"nt\">MyBin1</span><span class=\"p\">:</span>\n        <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">bin</span>\n        <span class=\"nt\">executable</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test-vm1.py %(cores)s</span>\n        <span class=\"nt\">cores</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">1</span><span class=\"p p-Indicator\">]</span>\n    <span class=\"nt\">MyBin2</span><span class=\"p\">:</span>\n        <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">bin</span>\n        <span class=\"nt\">executable</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test-vm2.py</span>\n\n<span class=\"c1\"># combining benchmark suites and executions</span>\n<span class=\"nt\">experiments</span><span class=\"p\">:</span>\n    <span class=\"nt\">Example</span><span class=\"p\">:</span>\n        <span class=\"nt\">suites</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">ExampleSuite</span>\n        <span class=\"nt\">executions</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">MyBin1</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">MyBin2</span>\n</pre>\n<p>Saved as <code>test.conf</code>, this configuration could be executed with ReBench as follows:</p>\n<pre>rebench test.conf\n</pre>\n<p>See the documentation for details: <a href=\"http://rebench.readthedocs.io/\" rel=\"nofollow\">http://rebench.readthedocs.io/</a>.</p>\n<h2>Support and Contributions</h2>\n<p>In case you encounter issues,\nplease feel free to <a href=\"https://github.com/smarr/rebench/issues/new\" rel=\"nofollow\">open an issue</a>\nso that we can help.</p>\n<p>For contributions, we use the <a href=\"https://guides.github.com/introduction/flow/\" rel=\"nofollow\">normal Github flow</a>\nof pull requests, discussion, and revisions. For larger contributions,\nit is likely useful to discuss them upfront in an issue first.</p>\n<h2>Use in Academia</h2>\n<p>If you use ReBench for research and in academic publications, please consider\nciting it.</p>\n<p>The preferred citation is:</p>\n<pre><span class=\"nc\">@misc</span><span class=\"p\">{</span><span class=\"nl\">ReBench:2018</span><span class=\"p\">,</span>\n  <span class=\"na\">author</span> <span class=\"p\">=</span> <span class=\"s\">{Marr, Stefan}</span><span class=\"p\">,</span>\n  <span class=\"na\">doi</span> <span class=\"p\">=</span> <span class=\"s\">{10.5281/zenodo.1311762}</span><span class=\"p\">,</span>\n  <span class=\"na\">month</span> <span class=\"p\">=</span> <span class=\"s\">{August}</span><span class=\"p\">,</span>\n  <span class=\"na\">note</span> <span class=\"p\">=</span> <span class=\"s\">{Version 1.0}</span><span class=\"p\">,</span>\n  <span class=\"na\">publisher</span> <span class=\"p\">=</span> <span class=\"s\">{GitHub}</span><span class=\"p\">,</span>\n  <span class=\"na\">title</span> <span class=\"p\">=</span> <span class=\"s\">{ReBench: Execute and Document Benchmarks Reproducibly}</span><span class=\"p\">,</span>\n  <span class=\"na\">year</span> <span class=\"p\">=</span> <span class=\"m\">2018</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Some publications that have been using ReBench include:</p>\n<ul>\n<li><a href=\"https://stefan-marr.de/downloads/ecoop19-roberts-et-al-transient-typechecks-are-almost-free.pdf\" rel=\"nofollow\">Transient Typechecks are (Almost) Free</a>, Roberts et al. 2019.</li>\n<li><a href=\"https://stefan-marr.de/downloads/manlang18-aumayr-et-al-efficient-and-deterministic-record-and-replay-for-actor-languages.pdf\" rel=\"nofollow\">Efficient and Deterministic Record &amp; Replay for Actor Languages</a>, D. Aumayr et al. 2018.</li>\n<li><a href=\"https://doi.org/10.1109%2fTSE.2018.2812715\" rel=\"nofollow\">Fully Reflective Execution Environments: Virtual Machines for More Flexible Software</a>, G. Chari et al. 2018.</li>\n<li><a href=\"http://lafhis.dc.uba.ar/sites/default/files/papers/buildingEfficientReflectiveVMs.pdf\" rel=\"nofollow\">Building efficient and highly run-time adaptable virtual machines</a>, G. Chari et al. 2017.</li>\n<li><a href=\"https://doi.org/10.1016/j.scico.2017.10.005\" rel=\"nofollow\">Improving live debugging of concurrent threads through thread histories</a>, M. Leske et al. 2017.</li>\n<li><a href=\"https://arxiv.org/pdf/1606.06726\" rel=\"nofollow\">Adaptive Just-in-time Value Class Optimization for Lowering Memory Consumption and Improving Execution Time Performance</a> T. Pape et al. 2016</li>\n<li><a href=\"https://stefan-marr.de/papers/dls-marr-et-al-cross-language-compiler-benchmarking-are-we-fast-yet/\" rel=\"nofollow\">Cross-Language Compiler Benchmarking---Are We Fast Yet?</a>, S. Marr et al. 2016.</li>\n<li><a href=\"https://stefan-marr.de/papers/oopsla-marr-ducasse-meta-tracing-vs-partial-evaluation/\" rel=\"nofollow\">Tracing vs. Partial Evaluation: Comparing Meta-Compilation Approaches for Self-Optimizing Interpreters</a>, S. Marr, S. Ducasse. 2015.</li>\n<li><a href=\"https://stefan-marr.de/papers/pldi-marr-et-al-zero-overhead-metaprogramming/\" rel=\"nofollow\">Zero-Overhead Metaprogramming: Reflection and Metaobject Protocols Fast and without Compromises</a>, S. Marr et al. 2015.</li>\n<li><a href=\"https://www.hpi.uni-potsdam.de/hirschfeld/publications/media/BaumanBolzHirschfeldKirilichevPapeSiekTobinHochstadt_2015_PycketATracingJitForAFunctionalLanguage_AcmDL.pdf\" rel=\"nofollow\">Pycket: a tracing JIT for a functional language</a>, S. Bauman et al. 2015.</li>\n<li><a href=\"http://hpi.uni-potsdam.de/hirschfeld/publications/media/PapeBolzHirschfeld_2015_AdaptiveJustInTimeValueClassOptimization_AcmDL.pdf\" rel=\"nofollow\">Adaptive just-in-time value class optimization: transparent data structure inlining for fast execution</a>, T. Pape et al. 2015.</li>\n<li><a href=\"https://www.hpi.uni-potsdam.de/hirschfeld/publications/media/BolzPapeSiekTobinHochstadt_2014_MetaTracingMakesAFastRacket_AuthorsVersion.pdf\" rel=\"nofollow\">Meta-tracing makes a fast Racket</a>, C. F. Bolz et al. 2014.</li>\n<li><a href=\"http://soft.vub.ac.be/%7Esmarr/downloads/agere13-swalens-et-al-cloud-parte-elastic-complex-event-processing-based-on-mobile-actors.pdf\" rel=\"nofollow\">Cloud PARTE: Elastic Complex Event Processing based on Mobile Actors</a>, J. Swalens et al. 2013.</li>\n<li><a href=\"https://www.stefan-marr.de/downloads/tools12-smarr-dhondt-identifying-a-unifying-mechanism-for-the-implementation-of-concurrency-abstractions-on-multi-language-virtual-machines.pdf\" rel=\"nofollow\">Identifying A Unifying Mechanism for the Implementation of Concurrency Abstractions on Multi-Language Virtual Machines</a>, S. Marr, T. D'Hondt. 2012.</li>\n<li><a href=\"https://www.stefan-marr.de/downloads/hpcc2010-marr-etal-insertion-tree-phasers.pdf\" rel=\"nofollow\">Insertion Tree Phasers: Efficient and Scalable Barrier Synchronization for Fine-grained Parallelism</a>, S. Marr et al. 2011.</li>\n</ul>\n\n          </div>"}, "last_serial": 7153977, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "c849553a254d54929ed7d9a38969d5c5", "sha256": "0d763374ba4d05fc159f1ac9b093501e1386da31c60a55dfa0cb3431e826fee3"}, "downloads": -1, "filename": "ReBench-0.10.0.tar.gz", "has_sig": false, "md5_digest": "c849553a254d54929ed7d9a38969d5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48354, "upload_time": "2018-06-08T14:59:37", "upload_time_iso_8601": "2018-06-08T14:59:37.868696Z", "url": "https://files.pythonhosted.org/packages/c1/7e/34d71d23f400db9c61011999ee4a9496d0b4bbcf3021ef239d8cbb4dad6f/ReBench-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "8d3b9a65a2217e720e77237d954dbfb2", "sha256": "f87d81005059552062643482d7f668fdaf071acf2269aca0441f76f10d19b0c3"}, "downloads": -1, "filename": "ReBench-0.10.1.tar.gz", "has_sig": false, "md5_digest": "8d3b9a65a2217e720e77237d954dbfb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48439, "upload_time": "2018-06-08T16:09:13", "upload_time_iso_8601": "2018-06-08T16:09:13.126219Z", "url": "https://files.pythonhosted.org/packages/0c/bb/05fdbb37fb9c43a01ac814929aa8c89cc98f08c8b087f24111984b8daebc/ReBench-0.10.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "f9361b15ba961137614fbc8adf4010ad", "sha256": "210e4435b22ab1609692893ee99d7ded32586da9edbcf431d6cdf5971861b636"}, "downloads": -1, "filename": "ReBench-0.5.0.tar.gz", "has_sig": false, "md5_digest": "f9361b15ba961137614fbc8adf4010ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23524, "upload_time": "2014-03-05T17:28:34", "upload_time_iso_8601": "2014-03-05T17:28:34.844898Z", "url": "https://files.pythonhosted.org/packages/cc/25/d06cf3ed626c09c0b719fa3e9c6e6b29fc5c21bd739ba50da4eb69896337/ReBench-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "5c2c9969b3d6696759886ec7f710063f", "sha256": "a4dcf32d67b685d0475274b756c305eb267b3466eca4db07248e934bffe4cd1a"}, "downloads": -1, "filename": "ReBench-0.6.0.tar.gz", "has_sig": false, "md5_digest": "5c2c9969b3d6696759886ec7f710063f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22830, "upload_time": "2014-05-19T12:32:27", "upload_time_iso_8601": "2014-05-19T12:32:27.597557Z", "url": "https://files.pythonhosted.org/packages/73/14/d4e4d4b7658ed50bd8e173a28ad7043a705871df599b3453854af0c873d5/ReBench-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "521a0a70f49817409b80fdde054682d9", "sha256": "750b9bec12b40ece839e649f835865a45c6b4c6f62f1341f14e16aa71e9e4823"}, "downloads": -1, "filename": "ReBench-0.6.1.tar.gz", "has_sig": false, "md5_digest": "521a0a70f49817409b80fdde054682d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22839, "upload_time": "2014-05-19T13:22:08", "upload_time_iso_8601": "2014-05-19T13:22:08.325523Z", "url": "https://files.pythonhosted.org/packages/8c/f2/ab21043ceb8e0e84cb2e7e6b569d21ef55958a917212f800b2a2c962c06c/ReBench-0.6.1.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "744479fcfd97d58c7aa24df223898009", "sha256": "7f6998182b2b8de463c0ac7aa1dc5c224c1ba4cd1e51a5a649cedc3dc7b21c45"}, "downloads": -1, "filename": "ReBench-0.7.1.tar.gz", "has_sig": false, "md5_digest": "744479fcfd97d58c7aa24df223898009", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28154, "upload_time": "2015-02-05T12:01:19", "upload_time_iso_8601": "2015-02-05T12:01:19.611992Z", "url": "https://files.pythonhosted.org/packages/19/32/074535f62b8fee1895601a2220ba5186962f8b647b5fd182df2c96fd7f2d/ReBench-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "5133f6304e6f92d149e7a729b023d3d3", "sha256": "167372bc21f44a7724ac6ac657182859066428ffaa0d899eeac62904dfcbc82a"}, "downloads": -1, "filename": "ReBench-0.7.2.tar.gz", "has_sig": false, "md5_digest": "5133f6304e6f92d149e7a729b023d3d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28214, "upload_time": "2015-02-11T10:07:44", "upload_time_iso_8601": "2015-02-11T10:07:44.555693Z", "url": "https://files.pythonhosted.org/packages/e2/fe/f7911855d71c48bf27752b878d5444d94284f3a9285ecf9b9ef53ea5af55/ReBench-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "464f57684be74cedcdf2ffec8181ffff", "sha256": "d9690f6d34be0a8818eb93f640d9711f2ec3c3550e673e319892230afa0fdad9"}, "downloads": -1, "filename": "ReBench-0.7.3.tar.gz", "has_sig": false, "md5_digest": "464f57684be74cedcdf2ffec8181ffff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30105, "upload_time": "2016-03-21T22:03:53", "upload_time_iso_8601": "2016-03-21T22:03:53.275333Z", "url": "https://files.pythonhosted.org/packages/cb/91/b3b15c799026fb3df1f6b927fd51f533e57e80ce9d09c96b8d3767cc2794/ReBench-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "e242dab633bfdb37745c7cf20cd64d00", "sha256": "cd8ced691cbb80a4a8e174f18d60f9ec0a01e85fbece9e4387bf20244f6dddfe"}, "downloads": -1, "filename": "ReBench-0.7.4.tar.gz", "has_sig": false, "md5_digest": "e242dab633bfdb37745c7cf20cd64d00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30148, "upload_time": "2016-05-20T08:12:35", "upload_time_iso_8601": "2016-05-20T08:12:35.315918Z", "url": "https://files.pythonhosted.org/packages/2e/9e/afa341a4a735f6141808b8d312db105ad6ae67ce4d51215e39696881c0da/ReBench-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "ac513b7c35288aa6a6f60adafc51c42e", "sha256": "d655b6a9f5af4ddd2a97348e8caaa29cf7f8df2cf4865b50b7e7f4b53fe7a192"}, "downloads": -1, "filename": "ReBench-0.7.5.tar.gz", "has_sig": false, "md5_digest": "ac513b7c35288aa6a6f60adafc51c42e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30445, "upload_time": "2016-06-11T16:34:41", "upload_time_iso_8601": "2016-06-11T16:34:41.968894Z", "url": "https://files.pythonhosted.org/packages/cf/2c/61f81346316f1a5ee375bb426e2567554f3cbaa2222de5cdc885bf1704ed/ReBench-0.7.5.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "6e64a14756ef450ac100340052fe54c5", "sha256": "27cf081d4e17b772761b0c429fb34388e0282ee25255b457313d19ec1b9e64c1"}, "downloads": -1, "filename": "ReBench-0.8.0.tar.gz", "has_sig": false, "md5_digest": "6e64a14756ef450ac100340052fe54c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28489, "upload_time": "2016-06-25T09:00:47", "upload_time_iso_8601": "2016-06-25T09:00:47.069974Z", "url": "https://files.pythonhosted.org/packages/e7/45/e66b05d2232d2df0e5a4b7f8a33f841e59025c37b6592cc761230b656244/ReBench-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "588057b163a14b6409afb6dc43c78181", "sha256": "d97dca3cbf11662269d795fa36960090d5871d320afcb1546b1ce2beb6aa5a4b"}, "downloads": -1, "filename": "ReBench-0.9.0.tar.gz", "has_sig": false, "md5_digest": "588057b163a14b6409afb6dc43c78181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46688, "upload_time": "2017-04-23T19:54:46", "upload_time_iso_8601": "2017-04-23T19:54:46.824404Z", "url": "https://files.pythonhosted.org/packages/3e/29/26c77ca4c82c80351b2e90d23fcb5d4d3a7c4b1b0c27d8f093439abb31a6/ReBench-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "893cabc036c242c6218c8f24c1a67aad", "sha256": "0713bbb5b715b1c2db36551f40780a91e16b9ee0bbed11d6b0c9edd26eaefe0e"}, "downloads": -1, "filename": "ReBench-0.9.1.tar.gz", "has_sig": false, "md5_digest": "893cabc036c242c6218c8f24c1a67aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46905, "upload_time": "2017-12-21T18:39:12", "upload_time_iso_8601": "2017-12-21T18:39:12.760766Z", "url": "https://files.pythonhosted.org/packages/eb/7f/359ee765689227a5280aff71aba8727eef2f763b4afdd2892f189502d07e/ReBench-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "17a8c2ecbf28f85fde46d706dc8b2b58", "sha256": "6ac52fdcd408f7a28f999807644e9347427441d4e4ee4e5fa68d125108dfb065"}, "downloads": -1, "filename": "ReBench-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17a8c2ecbf28f85fde46d706dc8b2b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 110284, "upload_time": "2020-05-02T23:28:03", "upload_time_iso_8601": "2020-05-02T23:28:03.719186Z", "url": "https://files.pythonhosted.org/packages/4a/80/24904cfac3d6539ff0b6aaf08a01d50502c60e3b2dff837e143258e23b18/ReBench-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ceb37434fa0de2a0510e9b1d09d0dc6", "sha256": "6506eaba8036670851d4bba91e732b74a3599ade861ed84c699c0bb31aa51bb8"}, "downloads": -1, "filename": "ReBench-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9ceb37434fa0de2a0510e9b1d09d0dc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52165, "upload_time": "2020-05-02T23:28:04", "upload_time_iso_8601": "2020-05-02T23:28:04.931462Z", "url": "https://files.pythonhosted.org/packages/c3/0a/6a445163662e46d6852a0d4103697da882f456860347e28aa1442123237e/ReBench-1.0.0.tar.gz", "yanked": false}], "1.0rc1": [{"comment_text": "", "digests": {"md5": "6e8be25fecf35081815b3c6aea2c9309", "sha256": "aef989c36eae0de77278dcba8d88e904df545a49139d0481e75a59c4e8b3b04d"}, "downloads": -1, "filename": "ReBench-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "6e8be25fecf35081815b3c6aea2c9309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52438, "upload_time": "2018-08-02T22:29:05", "upload_time_iso_8601": "2018-08-02T22:29:05.090445Z", "url": "https://files.pythonhosted.org/packages/97/52/ecf4393a0f503e9e09d6abefe7fcab6d6465475bdb2a881001a4bb09cfed/ReBench-1.0rc1.tar.gz", "yanked": false}], "1.0rc2": [{"comment_text": "", "digests": {"md5": "f885e446cc286c1ea378ce5e6b0af97a", "sha256": "42d2b671754597a10a2bc077557eccd6361faab1cef11b8093316e6800eb9c27"}, "downloads": -1, "filename": "ReBench-1.0rc2.tar.gz", "has_sig": false, "md5_digest": "f885e446cc286c1ea378ce5e6b0af97a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44462, "upload_time": "2019-06-09T15:15:34", "upload_time_iso_8601": "2019-06-09T15:15:34.226096Z", "url": "https://files.pythonhosted.org/packages/9d/01/450080e57bbc8abf69d3e4de6cea4a6ce791627f8745160e4ea0eb4c3e06/ReBench-1.0rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "17a8c2ecbf28f85fde46d706dc8b2b58", "sha256": "6ac52fdcd408f7a28f999807644e9347427441d4e4ee4e5fa68d125108dfb065"}, "downloads": -1, "filename": "ReBench-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17a8c2ecbf28f85fde46d706dc8b2b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 110284, "upload_time": "2020-05-02T23:28:03", "upload_time_iso_8601": "2020-05-02T23:28:03.719186Z", "url": "https://files.pythonhosted.org/packages/4a/80/24904cfac3d6539ff0b6aaf08a01d50502c60e3b2dff837e143258e23b18/ReBench-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ceb37434fa0de2a0510e9b1d09d0dc6", "sha256": "6506eaba8036670851d4bba91e732b74a3599ade861ed84c699c0bb31aa51bb8"}, "downloads": -1, "filename": "ReBench-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9ceb37434fa0de2a0510e9b1d09d0dc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52165, "upload_time": "2020-05-02T23:28:04", "upload_time_iso_8601": "2020-05-02T23:28:04.931462Z", "url": "https://files.pythonhosted.org/packages/c3/0a/6a445163662e46d6852a0d4103697da882f456860347e28aa1442123237e/ReBench-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:17 2020"}