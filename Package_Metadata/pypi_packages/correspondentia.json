{"info": {"author": "Chris Mutel", "author_email": "cmutel@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Visualization"], "description": "# Correspondentia\n\n[![Build Status](https://travis-ci.org/BONSAMURAIS/correspondentia.svg?branch=master)](https://travis-ci.org/BONSAMURAIS/correspondentia) [![Build status](https://ci.appveyor.com/api/projects/status/2ktjyy6bn8vao95k?svg=true)](https://ci.appveyor.com/project/cmutel/correspondentia)\n\nPython library to map correspondence tables in different formats to data structures.\n\nA quick example:\n\n```python\n\nfrom correspondentia import match_fields\n\nnumbers_to_names = {\n    1: [{\"value\": \"one\", \"type\": \"exact\"}],\n    2: [{\"value\": \"two\", \"weight\": 0.5, \"type\": \"disaggregation\"},\n        {\"value\": \"deux\", \"weight\": 0.5, \"type\": \"disaggregation\"}],\n}\n\nmy_data = [{\n    'count': 1,\n    'name': 'foo'\n}, {\n    'count': 2,\n    'name': 'bar'\n}]\n\nlist(match_fields(my_data, numbers_to_names, \"count\"))\n> [{'count': 'one', 'name': 'foo'},\n   {'count': 'two', 'name': 'bar', 'correspondentia_allocation': 0.5},\n   {'count': 'deux', 'name': 'bar', 'correspondentia_allocation': 0.5}]\n\n```\n\n`match_fields` return a generator.\n\n## Input data\n\nInput data should be an iterable of objects supporting the dictionary interface.\n\n## Input tables\n\n`correspondentia` currently can import the following formats:\n\n* CSVs following the simple schema\n\nWe plan to also eventually support the following:\n\n* RDF (Turtle) correspondence tables following the BONSAI spec\n* CSVs with BONSAI ontology predicates\n\nYou can also write custom importers, or define correspondence tables manually. In either case, the correspondence table data should include at least the following fields (additional fields are also allowed):\n\n```python\n\n{\n    \"label in origin schema (usually str, but can be int or float)\": {\n        \"value\": \"label in destination schema (usually str, but can be int or float)\",\n        \"type\": one of [\"exact\", \"disaggregation\"],\n        \"weight\": float, # optional\n    }\n}\n\n```\n\n## Simple CSV schema for input tables\n\nA CSV with two required and one optional columns.\n\n* First column: Label in origin schema\n* Second column: Label in destination schema\n* Third column (optional): Weight used for disaggregation.\n\nIf matching is 1-N or N-1, just use multiple rows with redundant labels.\n\nCSVs should follow the Open Knowledge CSV spec. Do not use column headers.\n\n## Installation\n\nInstallation via normal pathways; currently has no dependencies.\n\n## Contributing\n\nFollow standard fork/pull-request procedure.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BONSAMURAIS/correspondentia", "keywords": "", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "correspondentia", "package_url": "https://pypi.org/project/correspondentia/", "platform": "", "project_url": "https://pypi.org/project/correspondentia/", "project_urls": {"Homepage": "https://github.com/BONSAMURAIS/correspondentia"}, "release_url": "https://pypi.org/project/correspondentia/0.1/", "requires_dist": null, "requires_python": "", "summary": "your_name_here", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Correspondentia</h1>\n<p><a href=\"https://travis-ci.org/BONSAMURAIS/correspondentia\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25b1c9431d4477687d52bad4ea4486271cae3666/68747470733a2f2f7472617669732d63692e6f72672f424f4e53414d55524149532f636f72726573706f6e64656e7469612e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/cmutel/correspondentia\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2eb92ebbcbe214a0e2faff442dd75f6c7cdc0035/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f326b746a797936626e3876616f39356b3f7376673d74727565\"></a></p>\n<p>Python library to map correspondence tables in different formats to data structures.</p>\n<p>A quick example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">correspondentia</span> <span class=\"kn\">import</span> <span class=\"n\">match_fields</span>\n\n<span class=\"n\">numbers_to_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"one\"</span><span class=\"p\">,</span> <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"exact\"</span><span class=\"p\">}],</span>\n    <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"two\"</span><span class=\"p\">,</span> <span class=\"s2\">\"weight\"</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"disaggregation\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"deux\"</span><span class=\"p\">,</span> <span class=\"s2\">\"weight\"</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"disaggregation\"</span><span class=\"p\">}],</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">my_data</span> <span class=\"o\">=</span> <span class=\"p\">[{</span>\n    <span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span>\n<span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span>\n<span class=\"p\">}]</span>\n\n<span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">match_fields</span><span class=\"p\">(</span><span class=\"n\">my_data</span><span class=\"p\">,</span> <span class=\"n\">numbers_to_names</span><span class=\"p\">,</span> <span class=\"s2\">\"count\"</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;</span> <span class=\"p\">[{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"s1\">'one'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">},</span>\n   <span class=\"p\">{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"s1\">'two'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'correspondentia_allocation'</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">},</span>\n   <span class=\"p\">{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"s1\">'deux'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'correspondentia_allocation'</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">}]</span>\n</pre>\n<p><code>match_fields</code> return a generator.</p>\n<h2>Input data</h2>\n<p>Input data should be an iterable of objects supporting the dictionary interface.</p>\n<h2>Input tables</h2>\n<p><code>correspondentia</code> currently can import the following formats:</p>\n<ul>\n<li>CSVs following the simple schema</li>\n</ul>\n<p>We plan to also eventually support the following:</p>\n<ul>\n<li>RDF (Turtle) correspondence tables following the BONSAI spec</li>\n<li>CSVs with BONSAI ontology predicates</li>\n</ul>\n<p>You can also write custom importers, or define correspondence tables manually. In either case, the correspondence table data should include at least the following fields (additional fields are also allowed):</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"label in origin schema (usually str, but can be int or float)\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"label in destination schema (usually str, but can be int or float)\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"n\">one</span> <span class=\"n\">of</span> <span class=\"p\">[</span><span class=\"s2\">\"exact\"</span><span class=\"p\">,</span> <span class=\"s2\">\"disaggregation\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"weight\"</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"c1\"># optional</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Simple CSV schema for input tables</h2>\n<p>A CSV with two required and one optional columns.</p>\n<ul>\n<li>First column: Label in origin schema</li>\n<li>Second column: Label in destination schema</li>\n<li>Third column (optional): Weight used for disaggregation.</li>\n</ul>\n<p>If matching is 1-N or N-1, just use multiple rows with redundant labels.</p>\n<p>CSVs should follow the Open Knowledge CSV spec. Do not use column headers.</p>\n<h2>Installation</h2>\n<p>Installation via normal pathways; currently has no dependencies.</p>\n<h2>Contributing</h2>\n<p>Follow standard fork/pull-request procedure.</p>\n\n          </div>"}, "last_serial": 5342475, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a9c83d57381bd150d18141ddd707321b", "sha256": "8ade2677f1724fc64fc7d1590aa9bb95aa7c95624a90b70e88373eacc39a1d7c"}, "downloads": -1, "filename": "correspondentia-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a9c83d57381bd150d18141ddd707321b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3582, "upload_time": "2019-05-08T07:29:54", "upload_time_iso_8601": "2019-05-08T07:29:54.433153Z", "url": "https://files.pythonhosted.org/packages/48/77/16c3f945dbeb21cfc8beee7a384e4045a7e36fa600ec52988d6c4305e3f6/correspondentia-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "0af754738d9352ffd49086f779e4d1d7", "sha256": "8c83ba0dda802b7203f5a10b413ed06759f1316d9c6170ee46c7a9dadbe760b3"}, "downloads": -1, "filename": "correspondentia-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0af754738d9352ffd49086f779e4d1d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5399, "upload_time": "2019-05-31T12:04:05", "upload_time_iso_8601": "2019-05-31T12:04:05.290776Z", "url": "https://files.pythonhosted.org/packages/b5/50/001a45927b2ff6ec3fba7e90bd491c1f36054bf85eee1f4cf3ef52668f5b/correspondentia-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3353a066ce0492e747694c3bf87dbc5", "sha256": "86a2163b1108c3a59312b7d0f99eac4dd4a6137b73aa400d607667bf1e40ec21"}, "downloads": -1, "filename": "correspondentia-0.1.tar.gz", "has_sig": false, "md5_digest": "e3353a066ce0492e747694c3bf87dbc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4985, "upload_time": "2019-05-31T12:04:06", "upload_time_iso_8601": "2019-05-31T12:04:06.822349Z", "url": "https://files.pythonhosted.org/packages/a5/b5/4b3a385c92c791522283157537527feb00652fc48807a427a5cd9253fc21/correspondentia-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0af754738d9352ffd49086f779e4d1d7", "sha256": "8c83ba0dda802b7203f5a10b413ed06759f1316d9c6170ee46c7a9dadbe760b3"}, "downloads": -1, "filename": "correspondentia-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0af754738d9352ffd49086f779e4d1d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5399, "upload_time": "2019-05-31T12:04:05", "upload_time_iso_8601": "2019-05-31T12:04:05.290776Z", "url": "https://files.pythonhosted.org/packages/b5/50/001a45927b2ff6ec3fba7e90bd491c1f36054bf85eee1f4cf3ef52668f5b/correspondentia-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3353a066ce0492e747694c3bf87dbc5", "sha256": "86a2163b1108c3a59312b7d0f99eac4dd4a6137b73aa400d607667bf1e40ec21"}, "downloads": -1, "filename": "correspondentia-0.1.tar.gz", "has_sig": false, "md5_digest": "e3353a066ce0492e747694c3bf87dbc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4985, "upload_time": "2019-05-31T12:04:06", "upload_time_iso_8601": "2019-05-31T12:04:06.822349Z", "url": "https://files.pythonhosted.org/packages/a5/b5/4b3a385c92c791522283157537527feb00652fc48807a427a5cd9253fc21/correspondentia-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:04 2020"}