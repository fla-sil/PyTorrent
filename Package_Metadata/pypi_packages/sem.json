{"info": {"author": "Davide Magrin", "author_email": "magrinda@dei.unipd.it", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only"], "description": "# A Simulation Execution Manager for ns-3 #\n\n[![Build Status](https://travis-ci.org/signetlabdei/sem.svg?branch=master)](https://travis-ci.org/signetlabdei/sem)\n[![codecov](https://codecov.io/gh/DvdMgr/sem/branch/develop/graph/badge.svg)](https://codecov.io/gh/signetlabdei/sem)\n[![Join the chat at https://gitter.im/ns-3-sem/Lobby](https://badges.gitter.im/ns-3-sem/Lobby.svg)](https://gitter.im/ns-3-sem/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis is a Python library to perform multiple ns-3 script executions, manage the\nresults and collect them in processing-friendly data structures. For complete\nstep-by-step usage and installation instructions, check out [readthedocs][rtd].\n\n# Contributing #\n\nIf you want to contribute to sem development, first of all you'll need an\ninstallation that allows you to modify the code, immediately see the results and\nrun tests.\n\n## Building the module from scratch ##\n\nThis module is developed using\n[`pipenv`](https://pipenv.readthedocs.io/en/latest/): in order to correctly\nmanage virtual environments and install dependencies, make sure it is installed.\nTypically, the following is enough:\n\n```bash\npip install -U pipenv\n```\n\nNote that, depending on the specifics of your python installation, you may need to add\n`~/.local/bin` to your path. In case this is needed, `pip` should warn you\nduring installation.\n\nThen, clone the repo (or your fork, by changing the url in the following\ncommand), also getting the `ns-3` installations that are used for running\nexamples and tests:\n\n```bash\ngit clone https://github.com/DvdMgr/sem\ncd sem\ngit submodule update --init --recursive\n```\n\nFrom the project root, you can then install the package and the\nrequirements with the following:\n\n```bash\npipenv install --dev\n```\n\nThis will also get you a set of tools such as `sphinx`, `pygments` and `pytest`\nthat handle documentation and tests.\n\nFinally, you can spawn a sub-shell using the new virtual environment by calling:\n\n```bash\npipenv shell\n```\n\nNow, you can start a python REPL to use the library interactively, issue the\nbash `sem` program, run tests and compile the documentation of your local copy\nof sem.\n\n## Running tests ##\n\nThis project uses the [`pytest`](https://docs.pytest.org/en/latest/) framework\nfor running tests. Tests can be run, from the project root, using:\n\n```bash\npython -m pytest --doctest-glob='*.rst' docs/\npython -m pytest -x -n 3 --doctest-modules --cov-report term --cov=sem/ ./tests\n```\n\nThese two commands will run, respectively, all code contained in the `docs/`\nfolder and all tests, also measuring coverage and outputting it to the terminal.\n\nSince we are mainly testing integration with ns-3, tests require frequent\ncopying and pasting of folders, ns-3 compilations and simulation running.\nFurthermore, documentation tests run all the examples in the documentation to\nmake sure the output is as expected. Because of this, full tests are far from\ninstantaneous. Single test files can be targeted, to achieve faster execution\ntimes, by substituting `./tests` in the second command with the path to the test\nfile that needs to be run.\n\n## Building the documentation ##\n\nDocumentation can be built locally using the makefile's `docs` target:\n\n```bash\nmake docs\n```\n\nThe documentation of the current version of the package is also available on\n[readthedocs][rtd].\n\n## Running examples ##\n\nThe scripts in `examples/` can be directly run:\n\n```bash\npython examples/wifi_plotting_xarray.py\npython examples/lorawan_parsing_xarray.py\n```\n\n## Troubleshooting ##\n\nIn case there are problems with the `pandas` installation (this will happen in\nmacOS, for which no binaries are provided), use the following command for\ninstallation (and see [this pandas\nissue](https://github.com/pandas-dev/pandas/issues/20775) as a reference):\n\n```bash\nPIP_NO_BUILD_ISOLATION=false pipenv install\n```\n\n## Authors ##\n\nDavide Magrin\n\n[rtd]: https://simulationexecutionmanager.readthedocs.io\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DvdMgr/sem", "keywords": "ns-3 simulation execution", "license": "GNU GPL v2", "maintainer": "", "maintainer_email": "", "name": "sem", "package_url": "https://pypi.org/project/sem/", "platform": "", "project_url": "https://pypi.org/project/sem/", "project_urls": {"Homepage": "https://github.com/DvdMgr/sem"}, "release_url": "https://pypi.org/project/sem/0.2.3/", "requires_dist": ["tinydb", "tqdm", "numpy", "xarray", "drmaa", "gitpython", "click", "scipy", "check-manifest ; extra == 'dev'", "pytest ; extra == 'test'"], "requires_python": ">=3.5", "summary": "A simulation execution manager for ns-3", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A Simulation Execution Manager for ns-3</h1>\n<p><a href=\"https://travis-ci.org/signetlabdei/sem\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a758385a8f70584d63325d569e6a9247d513e9cc/68747470733a2f2f7472617669732d63692e6f72672f7369676e65746c61626465692f73656d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/signetlabdei/sem\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/908417061d4b7edb548ea5af256e7f445e0af889/68747470733a2f2f636f6465636f762e696f2f67682f4476644d67722f73656d2f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a>\n<a href=\"https://gitter.im/ns-3-sem/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/ns-3-sem/Lobby\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93072b1d84ac740396b1b5891872706742e18aa1/68747470733a2f2f6261646765732e6769747465722e696d2f6e732d332d73656d2f4c6f6262792e737667\"></a></p>\n<p>This is a Python library to perform multiple ns-3 script executions, manage the\nresults and collect them in processing-friendly data structures. For complete\nstep-by-step usage and installation instructions, check out <a href=\"https://simulationexecutionmanager.readthedocs.io\" rel=\"nofollow\">readthedocs</a>.</p>\n<h1>Contributing</h1>\n<p>If you want to contribute to sem development, first of all you'll need an\ninstallation that allows you to modify the code, immediately see the results and\nrun tests.</p>\n<h2>Building the module from scratch</h2>\n<p>This module is developed using\n<a href=\"https://pipenv.readthedocs.io/en/latest/\" rel=\"nofollow\"><code>pipenv</code></a>: in order to correctly\nmanage virtual environments and install dependencies, make sure it is installed.\nTypically, the following is enough:</p>\n<pre>pip install -U pipenv\n</pre>\n<p>Note that, depending on the specifics of your python installation, you may need to add\n<code>~/.local/bin</code> to your path. In case this is needed, <code>pip</code> should warn you\nduring installation.</p>\n<p>Then, clone the repo (or your fork, by changing the url in the following\ncommand), also getting the <code>ns-3</code> installations that are used for running\nexamples and tests:</p>\n<pre>git clone https://github.com/DvdMgr/sem\n<span class=\"nb\">cd</span> sem\ngit submodule update --init --recursive\n</pre>\n<p>From the project root, you can then install the package and the\nrequirements with the following:</p>\n<pre>pipenv install --dev\n</pre>\n<p>This will also get you a set of tools such as <code>sphinx</code>, <code>pygments</code> and <code>pytest</code>\nthat handle documentation and tests.</p>\n<p>Finally, you can spawn a sub-shell using the new virtual environment by calling:</p>\n<pre>pipenv shell\n</pre>\n<p>Now, you can start a python REPL to use the library interactively, issue the\nbash <code>sem</code> program, run tests and compile the documentation of your local copy\nof sem.</p>\n<h2>Running tests</h2>\n<p>This project uses the <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\"><code>pytest</code></a> framework\nfor running tests. Tests can be run, from the project root, using:</p>\n<pre>python -m pytest --doctest-glob<span class=\"o\">=</span><span class=\"s1\">'*.rst'</span> docs/\npython -m pytest -x -n <span class=\"m\">3</span> --doctest-modules --cov-report term --cov<span class=\"o\">=</span>sem/ ./tests\n</pre>\n<p>These two commands will run, respectively, all code contained in the <code>docs/</code>\nfolder and all tests, also measuring coverage and outputting it to the terminal.</p>\n<p>Since we are mainly testing integration with ns-3, tests require frequent\ncopying and pasting of folders, ns-3 compilations and simulation running.\nFurthermore, documentation tests run all the examples in the documentation to\nmake sure the output is as expected. Because of this, full tests are far from\ninstantaneous. Single test files can be targeted, to achieve faster execution\ntimes, by substituting <code>./tests</code> in the second command with the path to the test\nfile that needs to be run.</p>\n<h2>Building the documentation</h2>\n<p>Documentation can be built locally using the makefile's <code>docs</code> target:</p>\n<pre>make docs\n</pre>\n<p>The documentation of the current version of the package is also available on\n<a href=\"https://simulationexecutionmanager.readthedocs.io\" rel=\"nofollow\">readthedocs</a>.</p>\n<h2>Running examples</h2>\n<p>The scripts in <code>examples/</code> can be directly run:</p>\n<pre>python examples/wifi_plotting_xarray.py\npython examples/lorawan_parsing_xarray.py\n</pre>\n<h2>Troubleshooting</h2>\n<p>In case there are problems with the <code>pandas</code> installation (this will happen in\nmacOS, for which no binaries are provided), use the following command for\ninstallation (and see <a href=\"https://github.com/pandas-dev/pandas/issues/20775\" rel=\"nofollow\">this pandas\nissue</a> as a reference):</p>\n<pre><span class=\"nv\">PIP_NO_BUILD_ISOLATION</span><span class=\"o\">=</span><span class=\"nb\">false</span> pipenv install\n</pre>\n<h2>Authors</h2>\n<p>Davide Magrin</p>\n\n          </div>"}, "last_serial": 5342497, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "c9417185cbe4aecd6d342879e9dde5ea", "sha256": "001d28346bcdd3ee9d4d97581d5e441a7adfd1bed507186f035642df9672d3ee"}, "downloads": -1, "filename": "sem-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9417185cbe4aecd6d342879e9dde5ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31712, "upload_time": "2018-09-11T06:12:13", "upload_time_iso_8601": "2018-09-11T06:12:13.802496Z", "url": "https://files.pythonhosted.org/packages/66/06/3c1eb2b4aba292745708fc510829829bcd1a855130f60c51307c434bd66f/sem-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f84fba63c1cda8360fc495706bbefbd5", "sha256": "fbab2978d0bc43f181c0b91b8abc5dc2fbbd1c9c3bcbc678e3690369340ef286"}, "downloads": -1, "filename": "sem-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f84fba63c1cda8360fc495706bbefbd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36430, "upload_time": "2018-09-11T06:12:16", "upload_time_iso_8601": "2018-09-11T06:12:16.929706Z", "url": "https://files.pythonhosted.org/packages/42/56/f022cc8874a4756510a5290a21c00736cba35d47b410b3cba0e34d0ee511/sem-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4c49a6f4fed5abb225278112a58ed77f", "sha256": "59af12ec05af92069b0b7bcddb5703709d7b08536281af991b85008f5973a075"}, "downloads": -1, "filename": "sem-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4c49a6f4fed5abb225278112a58ed77f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40405, "upload_time": "2018-11-14T14:33:06", "upload_time_iso_8601": "2018-11-14T14:33:06.876640Z", "url": "https://files.pythonhosted.org/packages/16/e0/cf396b4ed7eb528d6c82873aa6e3d22d977999580a62d61d947cd8feeab6/sem-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1271cc7db85eed2e0a6104b26bddb95b", "sha256": "031970ee5f96bac6fd1b3093111fd0e3f4823c80d12c6339387b5e5a37150221"}, "downloads": -1, "filename": "sem-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1271cc7db85eed2e0a6104b26bddb95b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38391, "upload_time": "2018-11-14T14:33:08", "upload_time_iso_8601": "2018-11-14T14:33:08.507103Z", "url": "https://files.pythonhosted.org/packages/83/e1/e1fe3819417bd5ac8ac2f911d242c5103766fe0000d82d95b7bcafe97b89/sem-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f45aaf9c45f8f2e45422be391ade272b", "sha256": "92a5d29cef2dce761dea6c9e089a068490a22401fac05aca12c3b47c85d39845"}, "downloads": -1, "filename": "sem-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f45aaf9c45f8f2e45422be391ade272b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34251, "upload_time": "2019-05-31T12:09:34", "upload_time_iso_8601": "2019-05-31T12:09:34.698875Z", "url": "https://files.pythonhosted.org/packages/47/9d/02c28ff1e2fa672e567315ea671cf9aca65af0f6aaab70476f0325cc0007/sem-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bdbd7dad1f525fe94bd23ab141ce018", "sha256": "68dc9511b59d8ca7694c0a9efcb7b1c309eefbe7739dba81c976d8372f1115fe"}, "downloads": -1, "filename": "sem-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1bdbd7dad1f525fe94bd23ab141ce018", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25579, "upload_time": "2019-05-31T12:09:36", "upload_time_iso_8601": "2019-05-31T12:09:36.164274Z", "url": "https://files.pythonhosted.org/packages/6f/26/5bb9c77daa0d82c50289a87c4e4c9dbf42962e48b4abbfbe9ffd149f6a6e/sem-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f45aaf9c45f8f2e45422be391ade272b", "sha256": "92a5d29cef2dce761dea6c9e089a068490a22401fac05aca12c3b47c85d39845"}, "downloads": -1, "filename": "sem-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f45aaf9c45f8f2e45422be391ade272b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34251, "upload_time": "2019-05-31T12:09:34", "upload_time_iso_8601": "2019-05-31T12:09:34.698875Z", "url": "https://files.pythonhosted.org/packages/47/9d/02c28ff1e2fa672e567315ea671cf9aca65af0f6aaab70476f0325cc0007/sem-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bdbd7dad1f525fe94bd23ab141ce018", "sha256": "68dc9511b59d8ca7694c0a9efcb7b1c309eefbe7739dba81c976d8372f1115fe"}, "downloads": -1, "filename": "sem-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1bdbd7dad1f525fe94bd23ab141ce018", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25579, "upload_time": "2019-05-31T12:09:36", "upload_time_iso_8601": "2019-05-31T12:09:36.164274Z", "url": "https://files.pythonhosted.org/packages/6f/26/5bb9c77daa0d82c50289a87c4e4c9dbf42962e48b4abbfbe9ffd149f6a6e/sem-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:25 2020"}