{"info": {"author": "Sebastian Kreft", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: Unix", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Version Control"], "description": "Git-Lint\n========\n\n.. image:: https://badge.fury.io/py/git-lint.svg\n    :target: http://badge.fury.io/py/git-lint\n\n.. image:: https://travis-ci.org/sk-/git-lint.svg?branch=master\n    :target: https://travis-ci.org/sk-/git-lint\n\n.. image:: https://coveralls.io/repos/sk-/git-lint/badge.svg?branch=master\n    :target: https://coveralls.io/r/sk-/git-lint?branch=master\n\nGit-lint is a tool for improving source code one step at a time.\n\nMotivation\n----------\n\nOften times enforcing coding styles to an existing project can be a nightmare.\nSome reasons may include:\n\n* the codebase is already a mess and the output of the tools is overwhelming.\n* developers don't feel confident changing lines they do not own.\n* or they just don't know what tool to use.\n\nFeatures\n--------\n\nThis tool tackles all the 3 problems mentioned above by providing just a single\ntool that lints all the modified files. For each filetype it may use even more\nthan one linter or tool. Furthermore by default it only report problems of lines\nthat were added or modified.\n\nCurrent linters:\n\n- CSS\n\n  * `Csslint <https://github.com/stubbornella/csslint>`_\n\n- SCSS\n\n  * `scss-lint <https://github.com/causes/scss-lint>`_\n\n- Python\n\n  * `Pylint <http://www.pylint.org/>`_\n  * `pycodestyle <https://github.com/PyCQA/pycodestyle>`_\n\n- PHP\n\n  * `Php Code Sniffer <http://pear.php.net/package/PHP_CodeSniffer/>`_\n\n- Javascript\n\n  * `Jshint <http://www.jshint.com/>`_\n  * `Gjslint <https://developers.google.com/closure/utilities/>`_\n\n- JPEG\n\n  * Custom via `Jpegtran <http://manpages.ubuntu.com/manpages/raring/man1/jpegtran.1.html>`_\n\n- PNG\n\n  * Custom via `Pngcrush <http://manpages.ubuntu.com/manpages/raring/man1/pngcrush.1.html>`_\n  * Custom via `Optipng <http://manpages.ubuntu.com/manpages/raring/man1/optipng.1.html>`_\n\n- RST\n\n  * Via `rst2html.py (docutils) <http://docs.python.org/2/library/json.html>`_\n\n- JSON\n\n  * Via python `json.tool module <http://docs.python.org/2/library/json.html>`_\n\n- YAML\n\n  * `yamllint <https://github.com/adrienverge/yamllint>`_\n\n- INI\n\n  * Custom via `ConfigParser module <http://docs.python.org/2/library/configparser.html>`_\n\n- HTML\n\n  * `HTML-Linter <https://github.com/deezer/html-linter>`_\n  * `Tidy <https://w3c.github.io/tidy-html5/>`_ with preprocessing from `template-remover <https://github.com/deezer/html-linter>`_\n\n- Ruby\n\n  * `ruby-lint <https://github.com/yorickpeterse/ruby-lint>`_\n  * `rubocop <https://github.com/bbatsov/rubocop>`_\n\n- Java\n\n  * `PMD <http://pmd.sourceforge.net/>`_ (it requires to put the script run.sh in your PATH)\n  * `Checkstyle <http://checkstyle.sourceforge.net/>`_\n\n- Coffeescript\n\n  * `coffeelint <http://www.coffeelint.org/>`_\n\n- C++\n\n  * `cpplint <https://github.com/google/styleguide/tree/gh-pages/cpplint>`_\n\nExample use\n-----------\n\nBelow is the simplest call, for a detailed list, see the help::\n\n  $ git lint\n  Linting file: src/html/main.js\n  Line 13, E:0110: Line too long (328 characters).\n  Line 31, E:0001: Extra space at end of line\n  src/html/main.js: line 75, col 11, ['location'] is better written in dot notation.\n\n  Linting file: src/html/main.css\n  src/html/main.css: line 1, col 135, Warning - Duplicate property 'margin' found.\n\n  Linting file: api.py\n  api.py:6: [C0301(line-too-long), ] Line too long (87/80)\n  api.py:6: [R0913(too-many-arguments), callMethod] Too many arguments (6/5)\n  api.py:6: [C0103(invalid-name), callMethod] Invalid function name \"callMethod\"\n\n\nBy default git lint only reports problems with the modified lines\n(with the exception of some linters that check that the whole file is sound).\nTo force displaying all the output from the linters use the -f option.\n\nInstallation\n------------\n\nYou can install, upgrade or uninstall git-lint with these commands::\n\n  $ pip install git-lint\n  $ pip install --upgrade git-lint\n  $ pip uninstall git-lint\n\nConfiguration\n-------------\n\nGit-lint comes with a default configuration that includes all the linters listed\nabove. If you don't like that list you can write your own configuration and put\nit in a file called `.gitlint.yaml` in the root of your repository. You can copy\nthe file https://github.com/sk-/git-lint/blob/master/gitlint/configs/config.yaml\nto your repo and modify it.\n\nIf you add a new linter or add a new flag to any of the commands, please\nshare that with us, so we can integrate those changes.\n\nThe configuration support two variables for the command, requirements and\narguments:\n\n* {REPO_HOME}: the root of your repo.\n* {DEFAULT_CONFIGS}: the location of the default config files.\n\nIf you need to include strings like `{}` or `{foo}` in your command, you need to\ndouble the braces as in `{{}}` or `{{foo}}`.\n\nGit Configuration\n-----------------\n\ngit-lint comes with a pre-commit hook for git. To install it for your repo\nexecute::\n\n  $ ln -s `which pre-commit.git-lint.sh` $PATH_TO_YOUR_REPO/.git/hooks/pre-commit\n\nor if you want to install it globally execute instead::\n\n  $ ln -s `which pre-commit.git-lint.sh` /usr/share/git-core/templates/hooks/pre-commit\n\n\nMercurial Configuration\n-----------------------\n\nTo make available git-lint with a better name in mercurial you have to add the following\nto your .hgrc configuration::\n\n  [alias]\n  lint = !git-lint $@\n\nTo add a pre-commit hook add the following::\n\n  [hooks]\n  pretxncommit.hglint = pre-commit.hg-lint.sh > `tty`\n\n\nThe hook above has a hack to display the output of the command. Additionally,\nas mercurial does not provide (AFAIK) any way to skip a hook, if you want to force a commit\nwith linter warnings execute the commit command as follow::\n\n  $ NO_VERIFY=1 hg commit ...\n\nNote though that mercurial heavily uses commit to leverage all of their commands/extensions.\nI've found that setting any sort of precommit hook will get on your way when using common\nactions as ``rebase`` or ``shelve``.\n\nLimitations\n-----------\n\nIn some cases a change will trigger a warning in another line. Those cases are\nunfortunately not handled by git-lint, as it only reports those lines that were\nmodified. Fully supporting this use case would require running the linters twice\nand reporting only the new lines. The most common case in which this occurs is with\nunused imports or variables. Let's say we have the following piece of code::\n\n  import foo\n  foo.bar()\n\nIf you remove the second line, git-lint will not complain as the warning is for line\n1, which was not modified.\n\nPython Versions\n---------------\n\nPython 2.7 is supported, and it should also work for Python 3.2, 3.3 and 3.4.\nPython 2.6 is not supported because of the lack of subprocess.check_output.\n\nDevelopment\n-----------\n\nHelp for this project is more than welcomed, so feel free to create an issue or\nto send a pull request via http://github.com/sk-/git-lint.\n\nTests are run using nose, either with::\n\n  $ python setup.py nosetests\n  $ nosetests\n\nThis same tool is run for every commit, so errors and style problems are caught\nearly.\n\nAdding a linter\n---------------\nJust need to configure the file gitlint/config.yaml. I hope the syntax is self\nexplanatory. (Note to myself: don't be so lazy and write a proper doc for this.)\n\nTODOS and Possible Features\n---------------------------\n\n* Support directories as arguments\n* Provide a man page so 'git help lint' and 'git lint --help' work. I already\n  have a script for converting the Usage to a man page, but I still need to\n  figure out how to install it on the system.\n* Allow to run a command or function when setting up the linter? These can be\n  achieved now by running a bash script wrapping the linter. The rationale for\n  this is that some linters, like jshint, only allow options to be in a\n  configuration file. This is done at the moment via scripts present in the\n  folder linters.\n* Decide what linter to use based on the whole filename or even in the filetype,\n  as returned by the command file.\n* Provide better options for colorizing the output, and maybe a way to disable\n  it. Also detect if colors are supported or if it is a tty.\n* Add support for more version control systems (svn, perforce). This should be\n  easy, it's just a matter of implementing the functions defined in\n  gitlint/git.py or gitlint/hg.py.\n* Support windows.\n\nContributors\n============\n\n* `Rovanion Luckey <https://github.com/Rovanion>`_\n* `Radek Simko <https://github.com/radeksimko>`_\n* `Adrien Verg\u00e9 <https://github.com/adrienverge>`_\n* `Rob Rodrigues <https://github.com/irialad>`_\n* `Alex LordThorsen <https://github.com/rawrgulmuffins>`_\n\nChangelog\n=========\n\nv0.1.2 (2018-05-24)\n-------------------\n\n* Fixed race condition when creating cache directories.\n\nv0.1.1 (2018-05-15)\n-------------------\n\n* Fixed futures dependency not working corectly in Python 3.\n\nv0.1.0 (2018-02-26)\n-------------------\n\n* Fixed setup in some systems due to default encodings.\n* Changed version to use semantic versioning. If the version would have been semantic, this release would have been just a patch.\n\nv0.0.9 (2018-01-22)\n-------------------\n\n* Fixed versioning to match in both pip install and package\n* Added multithreading support\n\nv0.0.8 (2015-10-14)\n-------------------\n\n* Fixed git pre commit hook (thanks to Rovanion Luckey)\n* Fixed issues #64, #67\n\nv0.0.7 (2015-06-28)\n-------------------\n\n* Better support in python 3\n* Removed support for Python 3.2\n* Output is sorted by line and column number\n* Bugfixes: issues #49, #50, #54, #62\n* Added coffelint support\n* Improved defaults\n\nv0.0.6 (2014-09-08)\n-------------------\n\n* Added mercurial support\n* Run e2e tests on Travis\n\nv0.0.5 (2014-05-09)\n-------------------\n\n* Added linters: ruby-lint, rubocop, checkstyle, pmd\n* Variables %(REPO_HOME)s and %(DEFAULT_CONFIGS)s can be specified in configuration\n* Added default pylintrc configuration\n\nv0.0.4 (2014-05-08)\n-------------------\n\n* Added linters: html, tidy, scss\n* Added way to override default configuration\n* Improvements for Python3\n\nv0.0.3 (2014-02-02)\n-------------------\n\n* Fixes to the filter syntax\n* Fixes to the git parser\n* Added linters (YAML, Ini, PHP) and improved linter for PNG and JPEG.\n* Improved pylint configuration.\n* Improved phpcs configuration.\n* Check if program is available and if not display info to install it.\n* Cache the output of linters, so subsequent calls are much faster.\n\nv0.0.2 (2013-10-20)\n-------------------\n\n* Fixes to the installer\n\nv0.0.1 (2013-10-20)\n-------------------\n\n* Initial commit with the basic functionalities. Released mainly to collect\n  feedback about the features and the planned ideas.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sk-/git-lint", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "git-lint", "package_url": "https://pypi.org/project/git-lint/", "platform": "", "project_url": "https://pypi.org/project/git-lint/", "project_urls": {"Homepage": "http://github.com/sk-/git-lint"}, "release_url": "https://pypi.org/project/git-lint/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Git Lint", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"git-lint\">\n<h2>Git-Lint</h2>\n<a href=\"http://badge.fury.io/py/git-lint\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/git-lint.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c78d0bd14ac1f23837157bf968f5db482266908/68747470733a2f2f62616467652e667572792e696f2f70792f6769742d6c696e742e737667\"></a>\n<a href=\"https://travis-ci.org/sk-/git-lint\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/sk-/git-lint.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd626be6ff3d46b370214ad22e52b26988816cd6/68747470733a2f2f7472617669732d63692e6f72672f736b2d2f6769742d6c696e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/sk-/git-lint?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/sk-/git-lint/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88a372651e270bc986c4b66b7e62e39b9b0ecaef/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f736b2d2f6769742d6c696e742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Git-lint is a tool for improving source code one step at a time.</p>\n<div id=\"motivation\">\n<h3>Motivation</h3>\n<p>Often times enforcing coding styles to an existing project can be a nightmare.\nSome reasons may include:</p>\n<ul>\n<li>the codebase is already a mess and the output of the tools is overwhelming.</li>\n<li>developers don\u2019t feel confident changing lines they do not own.</li>\n<li>or they just don\u2019t know what tool to use.</li>\n</ul>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<p>This tool tackles all the 3 problems mentioned above by providing just a single\ntool that lints all the modified files. For each filetype it may use even more\nthan one linter or tool. Furthermore by default it only report problems of lines\nthat were added or modified.</p>\n<p>Current linters:</p>\n<ul>\n<li>CSS<ul>\n<li><a href=\"https://github.com/stubbornella/csslint\" rel=\"nofollow\">Csslint</a></li>\n</ul>\n</li>\n<li>SCSS<ul>\n<li><a href=\"https://github.com/causes/scss-lint\" rel=\"nofollow\">scss-lint</a></li>\n</ul>\n</li>\n<li>Python<ul>\n<li><a href=\"http://www.pylint.org/\" rel=\"nofollow\">Pylint</a></li>\n<li><a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a></li>\n</ul>\n</li>\n<li>PHP<ul>\n<li><a href=\"http://pear.php.net/package/PHP_CodeSniffer/\" rel=\"nofollow\">Php Code Sniffer</a></li>\n</ul>\n</li>\n<li>Javascript<ul>\n<li><a href=\"http://www.jshint.com/\" rel=\"nofollow\">Jshint</a></li>\n<li><a href=\"https://developers.google.com/closure/utilities/\" rel=\"nofollow\">Gjslint</a></li>\n</ul>\n</li>\n<li>JPEG<ul>\n<li>Custom via <a href=\"http://manpages.ubuntu.com/manpages/raring/man1/jpegtran.1.html\" rel=\"nofollow\">Jpegtran</a></li>\n</ul>\n</li>\n<li>PNG<ul>\n<li>Custom via <a href=\"http://manpages.ubuntu.com/manpages/raring/man1/pngcrush.1.html\" rel=\"nofollow\">Pngcrush</a></li>\n<li>Custom via <a href=\"http://manpages.ubuntu.com/manpages/raring/man1/optipng.1.html\" rel=\"nofollow\">Optipng</a></li>\n</ul>\n</li>\n<li>RST<ul>\n<li>Via <a href=\"http://docs.python.org/2/library/json.html\" rel=\"nofollow\">rst2html.py (docutils)</a></li>\n</ul>\n</li>\n<li>JSON<ul>\n<li>Via python <a href=\"http://docs.python.org/2/library/json.html\" rel=\"nofollow\">json.tool module</a></li>\n</ul>\n</li>\n<li>YAML<ul>\n<li><a href=\"https://github.com/adrienverge/yamllint\" rel=\"nofollow\">yamllint</a></li>\n</ul>\n</li>\n<li>INI<ul>\n<li>Custom via <a href=\"http://docs.python.org/2/library/configparser.html\" rel=\"nofollow\">ConfigParser module</a></li>\n</ul>\n</li>\n<li>HTML<ul>\n<li><a href=\"https://github.com/deezer/html-linter\" rel=\"nofollow\">HTML-Linter</a></li>\n<li><a href=\"https://w3c.github.io/tidy-html5/\" rel=\"nofollow\">Tidy</a> with preprocessing from <a href=\"https://github.com/deezer/html-linter\" rel=\"nofollow\">template-remover</a></li>\n</ul>\n</li>\n<li>Ruby<ul>\n<li><a href=\"https://github.com/yorickpeterse/ruby-lint\" rel=\"nofollow\">ruby-lint</a></li>\n<li><a href=\"https://github.com/bbatsov/rubocop\" rel=\"nofollow\">rubocop</a></li>\n</ul>\n</li>\n<li>Java<ul>\n<li><a href=\"http://pmd.sourceforge.net/\" rel=\"nofollow\">PMD</a> (it requires to put the script run.sh in your PATH)</li>\n<li><a href=\"http://checkstyle.sourceforge.net/\" rel=\"nofollow\">Checkstyle</a></li>\n</ul>\n</li>\n<li>Coffeescript<ul>\n<li><a href=\"http://www.coffeelint.org/\" rel=\"nofollow\">coffeelint</a></li>\n</ul>\n</li>\n<li>C++<ul>\n<li><a href=\"https://github.com/google/styleguide/tree/gh-pages/cpplint\" rel=\"nofollow\">cpplint</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"example-use\">\n<h3>Example use</h3>\n<p>Below is the simplest call, for a detailed list, see the help:</p>\n<pre>$ git lint\nLinting file: src/html/main.js\nLine 13, E:0110: Line too long (328 characters).\nLine 31, E:0001: Extra space at end of line\nsrc/html/main.js: line 75, col 11, ['location'] is better written in dot notation.\n\nLinting file: src/html/main.css\nsrc/html/main.css: line 1, col 135, Warning - Duplicate property 'margin' found.\n\nLinting file: api.py\napi.py:6: [C0301(line-too-long), ] Line too long (87/80)\napi.py:6: [R0913(too-many-arguments), callMethod] Too many arguments (6/5)\napi.py:6: [C0103(invalid-name), callMethod] Invalid function name \"callMethod\"\n</pre>\n<p>By default git lint only reports problems with the modified lines\n(with the exception of some linters that check that the whole file is sound).\nTo force displaying all the output from the linters use the -f option.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You can install, upgrade or uninstall git-lint with these commands:</p>\n<pre>$ pip install git-lint\n$ pip install --upgrade git-lint\n$ pip uninstall git-lint\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Git-lint comes with a default configuration that includes all the linters listed\nabove. If you don\u2019t like that list you can write your own configuration and put\nit in a file called <cite>.gitlint.yaml</cite> in the root of your repository. You can copy\nthe file <a href=\"https://github.com/sk-/git-lint/blob/master/gitlint/configs/config.yaml\" rel=\"nofollow\">https://github.com/sk-/git-lint/blob/master/gitlint/configs/config.yaml</a>\nto your repo and modify it.</p>\n<p>If you add a new linter or add a new flag to any of the commands, please\nshare that with us, so we can integrate those changes.</p>\n<p>The configuration support two variables for the command, requirements and\narguments:</p>\n<ul>\n<li>{REPO_HOME}: the root of your repo.</li>\n<li>{DEFAULT_CONFIGS}: the location of the default config files.</li>\n</ul>\n<p>If you need to include strings like <cite>{}</cite> or <cite>{foo}</cite> in your command, you need to\ndouble the braces as in <cite>{{}}</cite> or <cite>{{foo}}</cite>.</p>\n</div>\n<div id=\"git-configuration\">\n<h3>Git Configuration</h3>\n<p>git-lint comes with a pre-commit hook for git. To install it for your repo\nexecute:</p>\n<pre>$ ln -s `which pre-commit.git-lint.sh` $PATH_TO_YOUR_REPO/.git/hooks/pre-commit\n</pre>\n<p>or if you want to install it globally execute instead:</p>\n<pre>$ ln -s `which pre-commit.git-lint.sh` /usr/share/git-core/templates/hooks/pre-commit\n</pre>\n</div>\n<div id=\"mercurial-configuration\">\n<h3>Mercurial Configuration</h3>\n<p>To make available git-lint with a better name in mercurial you have to add the following\nto your .hgrc configuration:</p>\n<pre>[alias]\nlint = !git-lint $@\n</pre>\n<p>To add a pre-commit hook add the following:</p>\n<pre>[hooks]\npretxncommit.hglint = pre-commit.hg-lint.sh &gt; `tty`\n</pre>\n<p>The hook above has a hack to display the output of the command. Additionally,\nas mercurial does not provide (AFAIK) any way to skip a hook, if you want to force a commit\nwith linter warnings execute the commit command as follow:</p>\n<pre>$ NO_VERIFY=1 hg commit ...\n</pre>\n<p>Note though that mercurial heavily uses commit to leverage all of their commands/extensions.\nI\u2019ve found that setting any sort of precommit hook will get on your way when using common\nactions as <tt>rebase</tt> or <tt>shelve</tt>.</p>\n</div>\n<div id=\"limitations\">\n<h3>Limitations</h3>\n<p>In some cases a change will trigger a warning in another line. Those cases are\nunfortunately not handled by git-lint, as it only reports those lines that were\nmodified. Fully supporting this use case would require running the linters twice\nand reporting only the new lines. The most common case in which this occurs is with\nunused imports or variables. Let\u2019s say we have the following piece of code:</p>\n<pre>import foo\nfoo.bar()\n</pre>\n<p>If you remove the second line, git-lint will not complain as the warning is for line\n1, which was not modified.</p>\n</div>\n<div id=\"python-versions\">\n<h3>Python Versions</h3>\n<p>Python 2.7 is supported, and it should also work for Python 3.2, 3.3 and 3.4.\nPython 2.6 is not supported because of the lack of subprocess.check_output.</p>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Help for this project is more than welcomed, so feel free to create an issue or\nto send a pull request via <a href=\"http://github.com/sk-/git-lint\" rel=\"nofollow\">http://github.com/sk-/git-lint</a>.</p>\n<p>Tests are run using nose, either with:</p>\n<pre>$ python setup.py nosetests\n$ nosetests\n</pre>\n<p>This same tool is run for every commit, so errors and style problems are caught\nearly.</p>\n</div>\n<div id=\"adding-a-linter\">\n<h3>Adding a linter</h3>\n<p>Just need to configure the file gitlint/config.yaml. I hope the syntax is self\nexplanatory. (Note to myself: don\u2019t be so lazy and write a proper doc for this.)</p>\n</div>\n<div id=\"todos-and-possible-features\">\n<h3>TODOS and Possible Features</h3>\n<ul>\n<li>Support directories as arguments</li>\n<li>Provide a man page so \u2018git help lint\u2019 and \u2018git lint \u2013help\u2019 work. I already\nhave a script for converting the Usage to a man page, but I still need to\nfigure out how to install it on the system.</li>\n<li>Allow to run a command or function when setting up the linter? These can be\nachieved now by running a bash script wrapping the linter. The rationale for\nthis is that some linters, like jshint, only allow options to be in a\nconfiguration file. This is done at the moment via scripts present in the\nfolder linters.</li>\n<li>Decide what linter to use based on the whole filename or even in the filetype,\nas returned by the command file.</li>\n<li>Provide better options for colorizing the output, and maybe a way to disable\nit. Also detect if colors are supported or if it is a tty.</li>\n<li>Add support for more version control systems (svn, perforce). This should be\neasy, it\u2019s just a matter of implementing the functions defined in\ngitlint/git.py or gitlint/hg.py.</li>\n<li>Support windows.</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Rovanion\" rel=\"nofollow\">Rovanion Luckey</a></li>\n<li><a href=\"https://github.com/radeksimko\" rel=\"nofollow\">Radek Simko</a></li>\n<li><a href=\"https://github.com/adrienverge\" rel=\"nofollow\">Adrien Verg\u00e9</a></li>\n<li><a href=\"https://github.com/irialad\" rel=\"nofollow\">Rob Rodrigues</a></li>\n<li><a href=\"https://github.com/rawrgulmuffins\" rel=\"nofollow\">Alex LordThorsen</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-1-2-2018-05-24\">\n<h3>v0.1.2 (2018-05-24)</h3>\n<ul>\n<li>Fixed race condition when creating cache directories.</li>\n</ul>\n</div>\n<div id=\"v0-1-1-2018-05-15\">\n<h3>v0.1.1 (2018-05-15)</h3>\n<ul>\n<li>Fixed futures dependency not working corectly in Python 3.</li>\n</ul>\n</div>\n<div id=\"v0-1-0-2018-02-26\">\n<h3>v0.1.0 (2018-02-26)</h3>\n<ul>\n<li>Fixed setup in some systems due to default encodings.</li>\n<li>Changed version to use semantic versioning. If the version would have been semantic, this release would have been just a patch.</li>\n</ul>\n</div>\n<div id=\"v0-0-9-2018-01-22\">\n<h3>v0.0.9 (2018-01-22)</h3>\n<ul>\n<li>Fixed versioning to match in both pip install and package</li>\n<li>Added multithreading support</li>\n</ul>\n</div>\n<div id=\"v0-0-8-2015-10-14\">\n<h3>v0.0.8 (2015-10-14)</h3>\n<ul>\n<li>Fixed git pre commit hook (thanks to Rovanion Luckey)</li>\n<li>Fixed issues #64, #67</li>\n</ul>\n</div>\n<div id=\"v0-0-7-2015-06-28\">\n<h3>v0.0.7 (2015-06-28)</h3>\n<ul>\n<li>Better support in python 3</li>\n<li>Removed support for Python 3.2</li>\n<li>Output is sorted by line and column number</li>\n<li>Bugfixes: issues #49, #50, #54, #62</li>\n<li>Added coffelint support</li>\n<li>Improved defaults</li>\n</ul>\n</div>\n<div id=\"v0-0-6-2014-09-08\">\n<h3>v0.0.6 (2014-09-08)</h3>\n<ul>\n<li>Added mercurial support</li>\n<li>Run e2e tests on Travis</li>\n</ul>\n</div>\n<div id=\"v0-0-5-2014-05-09\">\n<h3>v0.0.5 (2014-05-09)</h3>\n<ul>\n<li>Added linters: ruby-lint, rubocop, checkstyle, pmd</li>\n<li>Variables %(REPO_HOME)s and %(DEFAULT_CONFIGS)s can be specified in configuration</li>\n<li>Added default pylintrc configuration</li>\n</ul>\n</div>\n<div id=\"v0-0-4-2014-05-08\">\n<h3>v0.0.4 (2014-05-08)</h3>\n<ul>\n<li>Added linters: html, tidy, scss</li>\n<li>Added way to override default configuration</li>\n<li>Improvements for Python3</li>\n</ul>\n</div>\n<div id=\"v0-0-3-2014-02-02\">\n<h3>v0.0.3 (2014-02-02)</h3>\n<ul>\n<li>Fixes to the filter syntax</li>\n<li>Fixes to the git parser</li>\n<li>Added linters (YAML, Ini, PHP) and improved linter for PNG and JPEG.</li>\n<li>Improved pylint configuration.</li>\n<li>Improved phpcs configuration.</li>\n<li>Check if program is available and if not display info to install it.</li>\n<li>Cache the output of linters, so subsequent calls are much faster.</li>\n</ul>\n</div>\n<div id=\"v0-0-2-2013-10-20\">\n<h3>v0.0.2 (2013-10-20)</h3>\n<ul>\n<li>Fixes to the installer</li>\n</ul>\n</div>\n<div id=\"v0-0-1-2013-10-20\">\n<h3>v0.0.1 (2013-10-20)</h3>\n<ul>\n<li>Initial commit with the basic functionalities. Released mainly to collect\nfeedback about the features and the planned ideas.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3896152, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9faf96477ae8bf31827edba3eb1d160f", "sha256": "82edc76807192a2a25902a9de4b048ff69ce109760db1fa2c9e60a1a6a5a9303"}, "downloads": -1, "filename": "git-lint-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9faf96477ae8bf31827edba3eb1d160f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8942, "upload_time": "2013-10-20T22:32:05", "upload_time_iso_8601": "2013-10-20T22:32:05.888450Z", "url": "https://files.pythonhosted.org/packages/55/25/98330a40a14d4981c1074e445137f77bedfc5801a3b772aaf00c29b957e4/git-lint-0.0.1.tar.gz", "yanked": false}], "0.0.1b": [{"comment_text": "", "digests": {"md5": "8c3415a7eece9ef86904542cb0694d3f", "sha256": "703f1261cfd66d9968a93e4ca5db07c9aae643807ab13952c165f8773dc0d5e3"}, "downloads": -1, "filename": "git-lint-0.0.1b.tar.gz", "has_sig": false, "md5_digest": "8c3415a7eece9ef86904542cb0694d3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8950, "upload_time": "2013-10-20T22:40:14", "upload_time_iso_8601": "2013-10-20T22:40:14.944230Z", "url": "https://files.pythonhosted.org/packages/ce/da/98659fba2df7b731bd323fefc60d44578eff22bc6978c1b57b284dfbaae0/git-lint-0.0.1b.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6c58b7e3f00ae3245518018a1cebc930", "sha256": "11c91d937f5d489457b02f5fbea41c23d9a72a9231615901c10136dbfd396a03"}, "downloads": -1, "filename": "git-lint-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6c58b7e3f00ae3245518018a1cebc930", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8956, "upload_time": "2013-10-20T22:48:52", "upload_time_iso_8601": "2013-10-20T22:48:52.588811Z", "url": "https://files.pythonhosted.org/packages/a9/78/db3d07083413a1b89d0fbdf6c338cc143c99404b2ac68ae6b2fb46104d79/git-lint-0.0.2.tar.gz", "yanked": false}], "0.0.2.1": [{"comment_text": "", "digests": {"md5": "896f058acd627bd11e94f80ea89516f1", "sha256": "63264527083d8a998ba7106c12b20f2483a52098986492f0be95bd050c90002e"}, "downloads": -1, "filename": "git-lint-0.0.2.1.tar.gz", "has_sig": false, "md5_digest": "896f058acd627bd11e94f80ea89516f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8968, "upload_time": "2013-10-20T22:53:32", "upload_time_iso_8601": "2013-10-20T22:53:32.864420Z", "url": "https://files.pythonhosted.org/packages/b9/26/72db5f4e576624f3194d562e873bca2705456d1b0df84d725e91b63d11a9/git-lint-0.0.2.1.tar.gz", "yanked": false}], "0.0.2.2": [{"comment_text": "", "digests": {"md5": "f7bf3f7a48c91f80a987f6a733d53159", "sha256": "e9b594af383fdce8c028c461d9e0b4d30ad792558e9cc13cc7fbba17df0ecadd"}, "downloads": -1, "filename": "git-lint-0.0.2.2.tar.gz", "has_sig": false, "md5_digest": "f7bf3f7a48c91f80a987f6a733d53159", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8946, "upload_time": "2013-10-20T23:01:44", "upload_time_iso_8601": "2013-10-20T23:01:44.048021Z", "url": "https://files.pythonhosted.org/packages/ba/e6/6ed7da940d7da0c4c1514114631a4a1c2228ffe83ce838afae0ab6e3a444/git-lint-0.0.2.2.tar.gz", "yanked": false}], "0.0.2.3": [{"comment_text": "", "digests": {"md5": "6429ae156c0f46c2823d9c902a8ff80e", "sha256": "caff34f339650dbc5cb09bda5271b18d800eb7bd6c19f0e8004a226660b4a204"}, "downloads": -1, "filename": "git-lint-0.0.2.3.tar.gz", "has_sig": false, "md5_digest": "6429ae156c0f46c2823d9c902a8ff80e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9830, "upload_time": "2013-10-20T23:02:39", "upload_time_iso_8601": "2013-10-20T23:02:39.782749Z", "url": "https://files.pythonhosted.org/packages/c8/84/9a8315e4af4b4581e8855365de356ce1501e3ba869a361934e28681e6aac/git-lint-0.0.2.3.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "cbb0499f16d6834ed5edda7af510a19e", "sha256": "515f262b455b5aa90509c854ff7ecb676f9d560b482655acb88ce6b0e49fe290"}, "downloads": -1, "filename": "git-lint-0.0.3.tar.gz", "has_sig": false, "md5_digest": "cbb0499f16d6834ed5edda7af510a19e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17496, "upload_time": "2014-02-01T11:14:37", "upload_time_iso_8601": "2014-02-01T11:14:37.342848Z", "url": "https://files.pythonhosted.org/packages/5a/df/af209fa6fdb3ab9f89efbf2229deeb2e2f36134dd060f650567e55f4cd25/git-lint-0.0.3.tar.gz", "yanked": false}], "0.0.3.1": [{"comment_text": "", "digests": {"md5": "c03ba4c03a11c7a926d133d84a766f0b", "sha256": "f561ce9484e10fdb43554e55339ad5be5a9c778472eac64832d7c4ae4aea95cf"}, "downloads": -1, "filename": "git-lint-0.0.3.1.tar.gz", "has_sig": false, "md5_digest": "c03ba4c03a11c7a926d133d84a766f0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17716, "upload_time": "2014-02-01T11:55:58", "upload_time_iso_8601": "2014-02-01T11:55:58.221082Z", "url": "https://files.pythonhosted.org/packages/df/af/e7c46e9461c11c04fbeffe501e653cdd28ea0d77ba56f35ba29be58b7ed3/git-lint-0.0.3.1.tar.gz", "yanked": false}], "0.0.3.2": [{"comment_text": "", "digests": {"md5": "ab44ae848732f47ba78dccf83bd17dc9", "sha256": "d80e069fe58ae6447653e575446e8e6c28e736504578fe687214e5d9931b179a"}, "downloads": -1, "filename": "git-lint-0.0.3.2.tar.gz", "has_sig": false, "md5_digest": "ab44ae848732f47ba78dccf83bd17dc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22251, "upload_time": "2014-02-07T19:07:02", "upload_time_iso_8601": "2014-02-07T19:07:02.481707Z", "url": "https://files.pythonhosted.org/packages/47/ca/bbd476adf08fe62e0a44a07155635a1330e6ab4a8cb47f4a8da0d0541f06/git-lint-0.0.3.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fe665b9dfedbb965e3a60a887ccc0644", "sha256": "6c6876e838827dc51c8b235aa0afec2e9dbb43b0c8666a5be3573d58a45f397c"}, "downloads": -1, "filename": "git-lint-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fe665b9dfedbb965e3a60a887ccc0644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21909, "upload_time": "2014-05-08T14:58:59", "upload_time_iso_8601": "2014-05-08T14:58:59.307663Z", "url": "https://files.pythonhosted.org/packages/60/3e/50dda53debb6c50a066e850de65ac6f86b9ce974984b1cced74a3f36c8c5/git-lint-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d25146cea91acf7e5c0839e5b488df3c", "sha256": "a70116c1193c9e14c872deb3d31051526f4fe6f7e0c9c5820e2f5f56fca0e76d"}, "downloads": -1, "filename": "git-lint-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d25146cea91acf7e5c0839e5b488df3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31013, "upload_time": "2014-05-09T10:05:13", "upload_time_iso_8601": "2014-05-09T10:05:13.975675Z", "url": "https://files.pythonhosted.org/packages/d7/62/a6b9a55b9384297134ac5b4409c8f421f5184c4c885928fb2d3d815305f2/git-lint-0.0.5.tar.gz", "yanked": false}], "0.0.5.1": [{"comment_text": "", "digests": {"md5": "f0ae0ca352eabb47ea3329cb0720626d", "sha256": "81ddcb92ca87a11f22d948dc2fd7989a2060b38c57cc6c24e0f06c8313867cf8"}, "downloads": -1, "filename": "git-lint-0.0.5.1.tar.gz", "has_sig": false, "md5_digest": "f0ae0ca352eabb47ea3329cb0720626d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31077, "upload_time": "2014-05-09T13:21:29", "upload_time_iso_8601": "2014-05-09T13:21:29.504486Z", "url": "https://files.pythonhosted.org/packages/29/20/c7a2cc08e7c2007485283b6a918ff11e58a1df5f93e510b3012816b3d312/git-lint-0.0.5.1.tar.gz", "yanked": false}], "0.0.5.2": [{"comment_text": "", "digests": {"md5": "c3487e585c3c8031f580500ca8908ea4", "sha256": "96b44781eb39c71631e3589e5d9de521ada0731ac022d39a1ded1fd8bf913900"}, "downloads": -1, "filename": "git-lint-0.0.5.2.tar.gz", "has_sig": false, "md5_digest": "c3487e585c3c8031f580500ca8908ea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31095, "upload_time": "2014-05-09T14:13:52", "upload_time_iso_8601": "2014-05-09T14:13:52.123804Z", "url": "https://files.pythonhosted.org/packages/bb/91/d3bbbd44188641c5feb5bfaa855a5647d3f75cdfd46fe25534d217291839/git-lint-0.0.5.2.tar.gz", "yanked": false}], "0.0.5.3": [{"comment_text": "", "digests": {"md5": "e63acc34fb55ca73c1bf39f3baabcd67", "sha256": "d30cc6e1934f6bc4200a25b1c6059152c8c83a4ebf72e025cfd8e25231dc74ef"}, "downloads": -1, "filename": "git-lint-0.0.5.3.tar.gz", "has_sig": false, "md5_digest": "e63acc34fb55ca73c1bf39f3baabcd67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31174, "upload_time": "2014-05-09T15:06:03", "upload_time_iso_8601": "2014-05-09T15:06:03.653008Z", "url": "https://files.pythonhosted.org/packages/12/1c/2aba338cedfe8f4cd34a8ccb6d1d770b6e7c9127343bdea425c933d46842/git-lint-0.0.5.3.tar.gz", "yanked": false}], "0.0.5.4": [{"comment_text": "", "digests": {"md5": "401a6ec9e1e5f4a4b07cebf0f3247450", "sha256": "17314ee47eb9d3bdf8023dd9d8be1ab3654fb028be8cb530b0f6a65a5b1c15eb"}, "downloads": -1, "filename": "git-lint-0.0.5.4.tar.gz", "has_sig": false, "md5_digest": "401a6ec9e1e5f4a4b07cebf0f3247450", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31797, "upload_time": "2014-05-14T12:15:50", "upload_time_iso_8601": "2014-05-14T12:15:50.543303Z", "url": "https://files.pythonhosted.org/packages/78/82/4d3916982b7cf02a192f92c2ced575ade16800e9b661f8db3ec62067aa27/git-lint-0.0.5.4.tar.gz", "yanked": false}], "0.0.5.5": [{"comment_text": "", "digests": {"md5": "0e382f3953bd74636de69ae5552f0231", "sha256": "7a49c089edd5244904204d4cb3c7dbefe65aa1b844135dea3235e2f9d481d1f5"}, "downloads": -1, "filename": "git-lint-0.0.5.5.tar.gz", "has_sig": false, "md5_digest": "0e382f3953bd74636de69ae5552f0231", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35130, "upload_time": "2014-05-20T14:57:18", "upload_time_iso_8601": "2014-05-20T14:57:18.864215Z", "url": "https://files.pythonhosted.org/packages/52/e4/4136ea4a7d922677d2d244ce9085e0f96ad6996314246597302f0abe3b52/git-lint-0.0.5.5.tar.gz", "yanked": false}], "0.0.5.6": [{"comment_text": "", "digests": {"md5": "a0105278f87e5ab68d4576434da28e86", "sha256": "a2740cc7a9d0ef08ea11a9e65d0e2d284ffac9178c94692c52770f55e3d7512e"}, "downloads": -1, "filename": "git-lint-0.0.5.6.tar.gz", "has_sig": false, "md5_digest": "a0105278f87e5ab68d4576434da28e86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35351, "upload_time": "2014-05-21T10:30:37", "upload_time_iso_8601": "2014-05-21T10:30:37.722876Z", "url": "https://files.pythonhosted.org/packages/5f/5f/3d6a182181459422eb94e66670149510f7ecef0cc512e66008739a29d37a/git-lint-0.0.5.6.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "ed62acfa60b308ab5282d115f03c5c1d", "sha256": "02d77687cd2d3e022f32332f902921c52239e4bd6362f32f3289a5d43526d07f"}, "downloads": -1, "filename": "git-lint-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ed62acfa60b308ab5282d115f03c5c1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41822, "upload_time": "2014-09-08T18:48:43", "upload_time_iso_8601": "2014-09-08T18:48:43.357272Z", "url": "https://files.pythonhosted.org/packages/22/3b/42860080cb7b6068a012de5b1fa7321ecdf5a3da7e5fe62ee557eb6e163a/git-lint-0.0.6.tar.gz", "yanked": false}], "0.0.6.1": [{"comment_text": "", "digests": {"md5": "6c33a46f602d22924b887d89d28e45d7", "sha256": "76efb4f79a7df683a3f7389963b156a5382739fb8e19ec397b6da903f4f67e16"}, "downloads": -1, "filename": "git-lint-0.0.6.1.tar.gz", "has_sig": false, "md5_digest": "6c33a46f602d22924b887d89d28e45d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39339, "upload_time": "2014-09-28T18:03:13", "upload_time_iso_8601": "2014-09-28T18:03:13.861709Z", "url": "https://files.pythonhosted.org/packages/6c/eb/e6c6a1a939dc388d13669d8e943c4899602dacd83db83bcebfcd115fe672/git-lint-0.0.6.1.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6dbc69bd8fe23adbca33707257d56021", "sha256": "2926be7c29cd780a6534c6ccb845b099ac91d09d165f054ce7eea64dbe639769"}, "downloads": -1, "filename": "git-lint-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6dbc69bd8fe23adbca33707257d56021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40587, "upload_time": "2015-06-28T20:14:33", "upload_time_iso_8601": "2015-06-28T20:14:33.067454Z", "url": "https://files.pythonhosted.org/packages/ba/0d/994b9eee9fcb90ca50f921a592ddb5d68c1275bbec42ffeb2706ee2f0f78/git-lint-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "91f3685188a37efc6a9df2223d2e75bb", "sha256": "f430a9c716d144f1d0bcfee470175f79a7bec9f6c9f88c47fe70f3b2d2d178e8"}, "downloads": -1, "filename": "git-lint-0.0.8.tar.gz", "has_sig": false, "md5_digest": "91f3685188a37efc6a9df2223d2e75bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41029, "upload_time": "2015-10-15T02:16:54", "upload_time_iso_8601": "2015-10-15T02:16:54.364085Z", "url": "https://files.pythonhosted.org/packages/a4/8b/e0c1235e65c11c9d501a68740a30e8f2952b08b2d6d3aebfbc4a05d6a260/git-lint-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "cbad0ea4e3f2cf6a04c36695722de76c", "sha256": "42c74b7a82118abe94fddb7e4a38ad884f90253132f49a9b47b80bae7c2786f4"}, "downloads": -1, "filename": "git-lint-0.0.9.tar.gz", "has_sig": false, "md5_digest": "cbad0ea4e3f2cf6a04c36695722de76c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41604, "upload_time": "2018-01-27T12:25:09", "upload_time_iso_8601": "2018-01-27T12:25:09.293006Z", "url": "https://files.pythonhosted.org/packages/3d/9d/80c0d5e41c7d41f14cdedc0ffa0f8d73b3223c405148f6d39fabce6e0ff2/git-lint-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c08d7cfa141768166bd96c2c6fa8e14b", "sha256": "4f81c05a13f75a4594af8f0a6239c1a3c1de6f49911f4aebde16e9d89d54634b"}, "downloads": -1, "filename": "git-lint-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c08d7cfa141768166bd96c2c6fa8e14b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41788, "upload_time": "2018-02-25T23:21:35", "upload_time_iso_8601": "2018-02-25T23:21:35.892676Z", "url": "https://files.pythonhosted.org/packages/32/7c/0f5fa48ffe9cb551a8fa29ad6c3674f165e58185cbb03984507bca5a8858/git-lint-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e1ae548fc6d9b12b11ab8daf8977091e", "sha256": "bd84c655f36c75d3240262e265f25c64b46682f0990eb0f3129f929e3efdf589"}, "downloads": -1, "filename": "git-lint-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1ae548fc6d9b12b11ab8daf8977091e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41783, "upload_time": "2018-05-15T07:53:20", "upload_time_iso_8601": "2018-05-15T07:53:20.314985Z", "url": "https://files.pythonhosted.org/packages/6c/77/a203a3c2ed8caf61f6e2b9f07db556c9c5b83f3b58eea3ccc0c37c36005b/git-lint-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "acae28d12f998dddbc4372f7c7af753d", "sha256": "160e72abf6db26590092656d279595d884cfea5d855da943f69a68165d0a287a"}, "downloads": -1, "filename": "git-lint-0.1.2.tar.gz", "has_sig": false, "md5_digest": "acae28d12f998dddbc4372f7c7af753d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42068, "upload_time": "2018-05-24T18:10:15", "upload_time_iso_8601": "2018-05-24T18:10:15.788939Z", "url": "https://files.pythonhosted.org/packages/61/23/1e9fed26ac33f317a70eab526ce25191f59bde031259e3e35e7da387b020/git-lint-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acae28d12f998dddbc4372f7c7af753d", "sha256": "160e72abf6db26590092656d279595d884cfea5d855da943f69a68165d0a287a"}, "downloads": -1, "filename": "git-lint-0.1.2.tar.gz", "has_sig": false, "md5_digest": "acae28d12f998dddbc4372f7c7af753d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42068, "upload_time": "2018-05-24T18:10:15", "upload_time_iso_8601": "2018-05-24T18:10:15.788939Z", "url": "https://files.pythonhosted.org/packages/61/23/1e9fed26ac33f317a70eab526ce25191f59bde031259e3e35e7da387b020/git-lint-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:53 2020"}