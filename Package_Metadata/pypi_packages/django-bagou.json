{"info": {"author": "Geoffrey Leh\u00e9e", "author_email": "hello@socketubs.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Bagou\n=====\n\nTornado WebSocket server backed with PikaClient connected on RabbitMQ.\n\nThe goal of this architecture is to provide a way to integrate full duplex websockets in\nsynchronous application with RabbitMQ as message bus.\n\nServer is Tornado WebSocketHandler with a PikaClient consumer.\n\nTake a look at the simple demo chat_.\n\nInstallation\n------------\n\n::\n\n    git clone https://github.com/socketubs/django-bagou.git\n    cd django-bagou/example\n    virtualenv virtenv\n    source virtenv/source/activate\n    pip install django\n    pip install -e ..\n    python manage.py runserver\n    # In another terminal\n    python manage.py runwebsocket\n    # Go to http://localhost:8000\n\n\nIncoming\n--------\nFor example, incoming websocket messages from Tornado are pushed to a queue (Celery for example)\nor just computed.\n\n * Browser send websocket message\n * Tornado received it\n   * Sending AMQP message\n   * Run Celery task (from Django?)\n * Torndo reply to websocket\n * Browser received websocket message\n\nSending\n-------\nDjango application can publish messages on RabbitMQ, which will be consumed by Pika and\npushed to websockets.\n\n * Running arbitary Python code\n * Send AMQP message to websocket queue\n * PikaClient wich run with Tornado consumed it\n * PikaClient tell Tornado to send websocket message to browser\n * Browser received websocket message\n\n\nTodo\n----\n\n * Channel permission\n * User authentification based on sessionid\n * Integrated with Celery ?\n * Helpers for getting channels\n\n\n.. _chat: http://chat.socketubs.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/socketubs/bagou", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-bagou", "package_url": "https://pypi.org/project/django-bagou/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-bagou/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/socketubs/bagou"}, "release_url": "https://pypi.org/project/django-bagou/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Django Websocket for Django", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tornado WebSocket server backed with PikaClient connected on RabbitMQ.</p>\n<p>The goal of this architecture is to provide a way to integrate full duplex websockets in\nsynchronous application with RabbitMQ as message bus.</p>\n<p>Server is Tornado WebSocketHandler with a PikaClient consumer.</p>\n<p>Take a look at the simple demo <a href=\"http://chat.socketubs.org/\" rel=\"nofollow\">chat</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>git clone https://github.com/socketubs/django-bagou.git\ncd django-bagou/example\nvirtualenv virtenv\nsource virtenv/source/activate\npip install django\npip install -e ..\npython manage.py runserver\n# In another terminal\npython manage.py runwebsocket\n# Go to http://localhost:8000\n</pre>\n</div>\n<div id=\"incoming\">\n<h2>Incoming</h2>\n<p>For example, incoming websocket messages from Tornado are pushed to a queue (Celery for example)\nor just computed.</p>\n<blockquote>\n<ul>\n<li>Browser send websocket message</li>\n<li>Tornado received it\n* Sending AMQP message\n* Run Celery task (from Django?)</li>\n<li>Torndo reply to websocket</li>\n<li>Browser received websocket message</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"sending\">\n<h2>Sending</h2>\n<p>Django application can publish messages on RabbitMQ, which will be consumed by Pika and\npushed to websockets.</p>\n<blockquote>\n<ul>\n<li>Running arbitary Python code</li>\n<li>Send AMQP message to websocket queue</li>\n<li>PikaClient wich run with Tornado consumed it</li>\n<li>PikaClient tell Tornado to send websocket message to browser</li>\n<li>Browser received websocket message</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<blockquote>\n<ul>\n<li>Channel permission</li>\n<li>User authentification based on sessionid</li>\n<li>Integrated with Celery ?</li>\n<li>Helpers for getting channels</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 2246775, "releases": {"0.0.1": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "1747fbaebabc450bc93f04b68efa7fcd", "sha256": "0d017af605a1470f1583eb59ecdffefb87be1a3b80eb9f6eabeb274d4df0e174"}, "downloads": -1, "filename": "django-bagou-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1747fbaebabc450bc93f04b68efa7fcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29698, "upload_time": "2016-07-27T12:04:39", "upload_time_iso_8601": "2016-07-27T12:04:39.220413Z", "url": "https://files.pythonhosted.org/packages/d1/39/1c35b6d88fd4b85b0f747364c0ffd04a226507091ac3f41546cd6a3a6b3f/django-bagou-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1747fbaebabc450bc93f04b68efa7fcd", "sha256": "0d017af605a1470f1583eb59ecdffefb87be1a3b80eb9f6eabeb274d4df0e174"}, "downloads": -1, "filename": "django-bagou-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1747fbaebabc450bc93f04b68efa7fcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29698, "upload_time": "2016-07-27T12:04:39", "upload_time_iso_8601": "2016-07-27T12:04:39.220413Z", "url": "https://files.pythonhosted.org/packages/d1/39/1c35b6d88fd4b85b0f747364c0ffd04a226507091ac3f41546cd6a3a6b3f/django-bagou-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:29 2020"}