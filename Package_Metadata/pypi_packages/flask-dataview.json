{"info": {"author": "Matthias Wutte", "author_email": "matthias.wutte@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# flask-dataview\n\n[![Build Status](https://travis-ci.org/wuttem/flask-dataview.svg?branch=master)](https://travis-ci.org/wuttem/flask-dataview)\n\nDynamic data visualizations for flask.\nThis Extension makes it easy to show large data in a flask application.\nAt the moment it only supports timeseries data and shows it in a line graph that can be dynamically zoomed and created.\nPerformance is really good because only the data that the user has selected is send and rendered.\n\nWarning: This is a very (limited) premature version!\n\nUsed Libs:\n- jquery\n- bootstrap (for styling)\n- echarts\n\n## Installation\n\n```bash\npip install flask-dataview\n```\n\n## Example Charts\n\nApp:\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport pendulum\nimport random\n\nfrom flask import Flask, render_template\nfrom flask_dataview import FlaskDataViews, RangeTimeSeries\n\n\ne = FlaskDataViews()\napp = Flask(__name__, template_folder=\".\")\ne.init_app(app)\n\n\nclass MySeries(RangeTimeSeries):\n    def get_range(self):\n        d1 = pendulum.now(\"utc\").subtract(days=300)\n        d2 = pendulum.now(\"utc\")\n        return (d1, d2)\n\n    def get_data_range(self, dt_from, dt_to):\n        out = []\n        cur = dt_from.replace(microsecond=0)\n        while cur < dt_to:\n            val = ((cur.int_timestamp / 3600) % 24) + random.random() * 10\n            out.append((cur.isoformat(), val))\n            cur = cur.add(minutes=10)\n        return out\n\n@app.route('/', methods=['POST', 'GET'])\ndef home():\n    data = [MySeries(\"temp\"), MySeries(\"act\"), MySeries(\"ph\", active=False)]\n\n    mychart = e.basechart(\"myid1\", \"My Chart\", series=data)\n    if mychart.is_post_request():\n        return mychart.data()\n    return render_template(\"template.html\", chart=mychart)\n```\n\nTemplate HTML\n\n```html\n{{ jquery_cdn }}\n{{ echarts_cdn }}\n{{ dataview_javascript }}\n{{ bootstrap_cdn }}\n\n<h1>Demo Charts</h1>\n\n<div id=\"mydivid\" style=\"height: 400px;\"></div>\n{{ chart.render(\"mydivid\") }}\n\n```\nThe subclass of `RangeTimeSeries` should implement `get_range` to return the full range of the data (minimum timestamp to maximum timestamp).\nThe method `get_data_range` should return the data in the selected timerange in tuples of isoformat timestamps and float values.\n\n\n## Development Build / Upload\n```\npython setup.py sdist\ntwine upload dist/*\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/wuttem", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wuttem/flask-dataview", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-dataview", "package_url": "https://pypi.org/project/flask-dataview/", "platform": "", "project_url": "https://pypi.org/project/flask-dataview/", "project_urls": {"Download": "https://github.com/wuttem", "Homepage": "https://github.com/wuttem/flask-dataview"}, "release_url": "https://pypi.org/project/flask-dataview/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Flask Data Visualization Helpers", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flask-dataview</h1>\n<p><a href=\"https://travis-ci.org/wuttem/flask-dataview\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc2f04621d52d86be3c109fcb6a2b7e8d47654eb/68747470733a2f2f7472617669732d63692e6f72672f77757474656d2f666c61736b2d64617461766965772e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Dynamic data visualizations for flask.\nThis Extension makes it easy to show large data in a flask application.\nAt the moment it only supports timeseries data and shows it in a line graph that can be dynamically zoomed and created.\nPerformance is really good because only the data that the user has selected is send and rendered.</p>\n<p>Warning: This is a very (limited) premature version!</p>\n<p>Used Libs:</p>\n<ul>\n<li>jquery</li>\n<li>bootstrap (for styling)</li>\n<li>echarts</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install flask-dataview\n</pre>\n<h2>Example Charts</h2>\n<p>App:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pendulum</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">render_template</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_dataview</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskDataViews</span><span class=\"p\">,</span> <span class=\"n\">RangeTimeSeries</span>\n\n\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">FlaskDataViews</span><span class=\"p\">()</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">template_folder</span><span class=\"o\">=</span><span class=\"s2\">\".\"</span><span class=\"p\">)</span>\n<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MySeries</span><span class=\"p\">(</span><span class=\"n\">RangeTimeSeries</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">pendulum</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"s2\">\"utc\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n        <span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">pendulum</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"s2\">\"utc\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_data_range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt_from</span><span class=\"p\">,</span> <span class=\"n\">dt_to</span><span class=\"p\">):</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">dt_from</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">microsecond</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"n\">cur</span> <span class=\"o\">&lt;</span> <span class=\"n\">dt_to</span><span class=\"p\">:</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">int_timestamp</span> <span class=\"o\">/</span> <span class=\"mi\">3600</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">24</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">10</span>\n            <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span> <span class=\"n\">val</span><span class=\"p\">))</span>\n            <span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">out</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MySeries</span><span class=\"p\">(</span><span class=\"s2\">\"temp\"</span><span class=\"p\">),</span> <span class=\"n\">MySeries</span><span class=\"p\">(</span><span class=\"s2\">\"act\"</span><span class=\"p\">),</span> <span class=\"n\">MySeries</span><span class=\"p\">(</span><span class=\"s2\">\"ph\"</span><span class=\"p\">,</span> <span class=\"n\">active</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">mychart</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">basechart</span><span class=\"p\">(</span><span class=\"s2\">\"myid1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"My Chart\"</span><span class=\"p\">,</span> <span class=\"n\">series</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">mychart</span><span class=\"o\">.</span><span class=\"n\">is_post_request</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">mychart</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">\"template.html\"</span><span class=\"p\">,</span> <span class=\"n\">chart</span><span class=\"o\">=</span><span class=\"n\">mychart</span><span class=\"p\">)</span>\n</pre>\n<p>Template HTML</p>\n<pre>{{ jquery_cdn }}\n{{ echarts_cdn }}\n{{ dataview_javascript }}\n{{ bootstrap_cdn }}\n\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Demo Charts<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"mydivid\"</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"height: 400px;\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n{{ chart.render(\"mydivid\") }}\n</pre>\n<p>The subclass of <code>RangeTimeSeries</code> should implement <code>get_range</code> to return the full range of the data (minimum timestamp to maximum timestamp).\nThe method <code>get_data_range</code> should return the data in the selected timerange in tuples of isoformat timestamps and float values.</p>\n<h2>Development Build / Upload</h2>\n<pre><code>python setup.py sdist\ntwine upload dist/*\n</code></pre>\n\n          </div>"}, "last_serial": 7074816, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4918c187dffae871c2cb961c58a615c4", "sha256": "f9d360d28bf3b64cdcc8de287895af8f2217671ba1c91c37a70b244e093b891c"}, "downloads": -1, "filename": "flask-dataview-0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "4918c187dffae871c2cb961c58a615c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13994, "upload_time": "2020-01-03T08:56:20", "upload_time_iso_8601": "2020-01-03T08:56:20.022291Z", "url": "https://files.pythonhosted.org/packages/10/c7/bb6ea3e869bfb8f27b617311ae08b426371759d13d79172722b7427e7bdd/flask-dataview-0.1.linux-x86_64.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bc1fdd0eb3265302832926343b232cc2", "sha256": "df3873f04c2d20d96325526eeb3b2c935792f94d43932f5aca7ace995a46a91a"}, "downloads": -1, "filename": "flask-dataview-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bc1fdd0eb3265302832926343b232cc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7222, "upload_time": "2020-01-26T17:37:51", "upload_time_iso_8601": "2020-01-26T17:37:51.377013Z", "url": "https://files.pythonhosted.org/packages/05/40/bd94618b267a77788f3cb0cc17e9baf8be89c0381bc842d90035b0da7217/flask-dataview-0.1.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7dc6362e0231de4c61e47d7f87fa355b", "sha256": "aa3de8b858882e24f666e593c34350c891821a2703b1128f5f7775b4a9ccc458"}, "downloads": -1, "filename": "flask-dataview-0.2.tar.gz", "has_sig": false, "md5_digest": "7dc6362e0231de4c61e47d7f87fa355b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6875, "upload_time": "2020-01-03T08:57:27", "upload_time_iso_8601": "2020-01-03T08:57:27.804181Z", "url": "https://files.pythonhosted.org/packages/53/f9/17580e62b77f314e59822df458770051c91c2288c9ee3ed2024429e7aca6/flask-dataview-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "35150c6208edd140d50ed31ff5ae4361", "sha256": "f252f07af1cb05f427d2e5881914d9ed05012a0edcf63a2ed8cec1375223ea9d"}, "downloads": -1, "filename": "flask-dataview-0.2.1.tar.gz", "has_sig": false, "md5_digest": "35150c6208edd140d50ed31ff5ae4361", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7219, "upload_time": "2020-01-26T17:44:49", "upload_time_iso_8601": "2020-01-26T17:44:49.901341Z", "url": "https://files.pythonhosted.org/packages/f8/6f/da143c5a3a6590ea5a7581c197918441a5d73d9f9b3c01d85b855c62aabf/flask-dataview-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ca4804822d4e65c84df0ca0870617b1e", "sha256": "40ca8d27f3ab1f881242a021169056c89de5cfe957389b33a393d36b734fb0e8"}, "downloads": -1, "filename": "flask-dataview-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ca4804822d4e65c84df0ca0870617b1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 278307, "upload_time": "2020-01-26T17:51:12", "upload_time_iso_8601": "2020-01-26T17:51:12.187650Z", "url": "https://files.pythonhosted.org/packages/89/fa/daa5b9352688184e04fa7fabdc035120a2e1a8699bb6dc6b08760ccfc22d/flask-dataview-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "55a0757926d8ce2708f6e116d37ba01a", "sha256": "205f840a415410b77d0c03da003a122fec381e419f496b75633c8d65d16b9051"}, "downloads": -1, "filename": "flask-dataview-0.2.3.tar.gz", "has_sig": false, "md5_digest": "55a0757926d8ce2708f6e116d37ba01a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 278310, "upload_time": "2020-01-26T17:55:36", "upload_time_iso_8601": "2020-01-26T17:55:36.000516Z", "url": "https://files.pythonhosted.org/packages/9c/c1/0507622f5e147249566b75fa7dd139a14716ef05f0928eac80b29f5a04a4/flask-dataview-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "24a100e2af707ac026e8f67fc1870cf5", "sha256": "c8dcf7436663be09e2474ce483227b588b2630ed6d219ff746124ad7e87a75d6"}, "downloads": -1, "filename": "flask-dataview-0.2.4.tar.gz", "has_sig": false, "md5_digest": "24a100e2af707ac026e8f67fc1870cf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 278978, "upload_time": "2020-02-02T09:53:58", "upload_time_iso_8601": "2020-02-02T09:53:58.333479Z", "url": "https://files.pythonhosted.org/packages/d7/8c/829e8170a036795c911079c897d9e068404ff4e0eefc0a5dfdfe7fca6a13/flask-dataview-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "cbc27076dfb408d95e3e7d374cd4ebfd", "sha256": "2e884911e72d5508c92dc3a6a65f405118bd6de00d709ffa7f9a6ab63f2407f3"}, "downloads": -1, "filename": "flask-dataview-0.2.5.tar.gz", "has_sig": false, "md5_digest": "cbc27076dfb408d95e3e7d374cd4ebfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 279299, "upload_time": "2020-02-02T10:20:27", "upload_time_iso_8601": "2020-02-02T10:20:27.770813Z", "url": "https://files.pythonhosted.org/packages/ee/a4/df9cd4f52e7ca1298c13d9e09eec61575837b24f2762f800140211ded902/flask-dataview-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b89d5c78cdb88b7ffbefeaf7b6cd25b0", "sha256": "8859c8db5e27775aa76819abfd5016dbb7a2343c8230874f1d168b11cda98428"}, "downloads": -1, "filename": "flask-dataview-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b89d5c78cdb88b7ffbefeaf7b6cd25b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280447, "upload_time": "2020-04-20T08:44:15", "upload_time_iso_8601": "2020-04-20T08:44:15.202753Z", "url": "https://files.pythonhosted.org/packages/40/0c/56f60b21e2f3771a495d1637103bed6adc6bd0d8001f69149a8dadca9411/flask-dataview-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0fc6664452da5dc024aaea3469ad2beb", "sha256": "34c99b14f3d3434cca81964d9e9782abc98af52bb295a2fc2669fbaada17746f"}, "downloads": -1, "filename": "flask-dataview-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0fc6664452da5dc024aaea3469ad2beb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280458, "upload_time": "2020-04-20T15:00:23", "upload_time_iso_8601": "2020-04-20T15:00:23.632797Z", "url": "https://files.pythonhosted.org/packages/cb/15/81c897578b4a79e4b86a5da9a240e136d44028b57f7b9eda027093275175/flask-dataview-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "731bac4d679f216b3807b5e54c3e4eef", "sha256": "061e56474c1b259217bf2cd5a9e43dc48dcaf6d54cdfd7a5858f7f115b87682b"}, "downloads": -1, "filename": "flask-dataview-0.3.2.tar.gz", "has_sig": false, "md5_digest": "731bac4d679f216b3807b5e54c3e4eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280487, "upload_time": "2020-04-22T08:20:02", "upload_time_iso_8601": "2020-04-22T08:20:02.349819Z", "url": "https://files.pythonhosted.org/packages/02/0d/c992c5381b4e7be1a017a7f6da3e3dfdee39e0a3d7bd11f55ad56fb1b91c/flask-dataview-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "731bac4d679f216b3807b5e54c3e4eef", "sha256": "061e56474c1b259217bf2cd5a9e43dc48dcaf6d54cdfd7a5858f7f115b87682b"}, "downloads": -1, "filename": "flask-dataview-0.3.2.tar.gz", "has_sig": false, "md5_digest": "731bac4d679f216b3807b5e54c3e4eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280487, "upload_time": "2020-04-22T08:20:02", "upload_time_iso_8601": "2020-04-22T08:20:02.349819Z", "url": "https://files.pythonhosted.org/packages/02/0d/c992c5381b4e7be1a017a7f6da3e3dfdee39e0a3d7bd11f55ad56fb1b91c/flask-dataview-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:58 2020"}