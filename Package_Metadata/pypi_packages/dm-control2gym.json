{"info": {"author": "Norio Kosaka", "author_email": "kosakaboat@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "## Introduction\nI simplified [martinseilair's](https://github.com/martinseilair/dm_control2gym) `dm_control2gym` as well as made it compatible with the latest `MuJoCo` library(e.g., 2.0.0). .... yeah,, I will upload the documents when I have time.\n\n\n\n## Installation\n\n```bash\n$ pip install dm_control2gym\n```\n\n\n\n## Dependencies\n\n- Please check the `requirements.txt` or just `pip install -r requirements.txt`\n\n\n\n## Usage\n\n- MDP tasks: `env` returns a state of a robot at each time-step\n\n  `````python\n  import itertools\n  from dm_control2gym.util import make_dm2gym_env_state\n\n  env = make_dm2gym_env_state(env_name=\"cheetah_run\")\n\n  state = env.reset()\n  print(\"State shape: \", state.shape)\n\n  total_reward = 0\n\n  for t in itertools.count():\n      action = env.action_space.sample()\n      state, reward, done, _ = env.step(action)\n      total_reward += reward\n\n      if done: break\n\n  env.close()\n  print(\"Total Reward: {}\".format(total_reward))\n  `````\n\n- POMDP tasks: `env` returns a raw image observation at each time-step\n\n  `````python\n  import itertools\n  from dm_control2gym.util import make_dm2gym_env_obs\n  from dm_control2gym.recorder import Monitor\n\n  env = make_dm2gym_env_obs(env_name=\"cheetah_run\", num_repeat_action=1)\n  env = Monitor(env=env, directory=\"./log\", force=True)\n\n  obs = env.reset()\n  print(\"Obs shape: \", obs.shape)\n\n  total_reward = 0\n\n  env.record_start()\n  env.reset()\n  for t in itertools.count():\n      action = env.action_space.sample()\n      obs, reward, done, _ = env.step(action)\n      total_reward += reward\n\n      if done: break\n\n  env.record_end()\n  env.close()\n  print(\"Total Reward: {}\".format(total_reward))\n  `````\n\n\n\n\n## Videos\n\n<img src=\"assets/cartpole_balance.gif\" width=30% height=30%> <img src=\"assets/cartpole_swingup.gif\" width=30% height=30%> <img src=\"assets/cheetah_run.gif\" width=30% height=30%>\n<img src=\"assets/cup_catch.gif\" width=30% height=30%> <img src=\"assets/finger_spin.gif\" width=30% height=30%> <img src=\"assets/reacher_easy.gif\" width=30% height=30%>\n<img src=\"assets/walker_walk.gif\" width=30% height=30%>\n\n\n## For more details\nPlease refer to [martinseilair's](https://github.com/martinseilair/dm_control2gym) `dm_control2gym`\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Rowing0914/dm_control2gym", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dm-control2gym", "package_url": "https://pypi.org/project/dm-control2gym/", "platform": "", "project_url": "https://pypi.org/project/dm-control2gym/", "project_urls": {"Homepage": "https://github.com/Rowing0914/dm_control2gym"}, "release_url": "https://pypi.org/project/dm-control2gym/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "dm_control suite for OpenAI Gym env", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<p>I simplified <a href=\"https://github.com/martinseilair/dm_control2gym\" rel=\"nofollow\">martinseilair's</a> <code>dm_control2gym</code> as well as made it compatible with the latest <code>MuJoCo</code> library(e.g., 2.0.0). .... yeah,, I will upload the documents when I have time.</p>\n<h2>Installation</h2>\n<pre>$ pip install dm_control2gym\n</pre>\n<h2>Dependencies</h2>\n<ul>\n<li>Please check the <code>requirements.txt</code> or just <code>pip install -r requirements.txt</code></li>\n</ul>\n<h2>Usage</h2>\n<ul>\n<li>\n<p>MDP tasks: <code>env</code> returns a state of a robot at each time-step</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">itertools</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dm_control2gym.util</span> <span class=\"kn\">import</span> <span class=\"n\">make_dm2gym_env_state</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">make_dm2gym_env_state</span><span class=\"p\">(</span><span class=\"n\">env_name</span><span class=\"o\">=</span><span class=\"s2\">\"cheetah_run\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"State shape: \"</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">total_reward</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">itertools</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">():</span>\n    <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">action_space</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n    <span class=\"n\">state</span><span class=\"p\">,</span> <span class=\"n\">reward</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"n\">total_reward</span> <span class=\"o\">+=</span> <span class=\"n\">reward</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">done</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Total Reward: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">total_reward</span><span class=\"p\">))</span>\n</pre>\n</li>\n<li>\n<p>POMDP tasks: <code>env</code> returns a raw image observation at each time-step</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">itertools</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dm_control2gym.util</span> <span class=\"kn\">import</span> <span class=\"n\">make_dm2gym_env_obs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dm_control2gym.recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Monitor</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">make_dm2gym_env_obs</span><span class=\"p\">(</span><span class=\"n\">env_name</span><span class=\"o\">=</span><span class=\"s2\">\"cheetah_run\"</span><span class=\"p\">,</span> <span class=\"n\">num_repeat_action</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">Monitor</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s2\">\"./log\"</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Obs shape: \"</span><span class=\"p\">,</span> <span class=\"n\">obs</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">total_reward</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">record_start</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">itertools</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">():</span>\n    <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">action_space</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n    <span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">reward</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"n\">total_reward</span> <span class=\"o\">+=</span> <span class=\"n\">reward</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">done</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">record_end</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Total Reward: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">total_reward</span><span class=\"p\">))</span>\n</pre>\n</li>\n</ul>\n<h2>Videos</h2>\n<p><img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b7c82135f0bfd4292337f957eb8d11f9828cf0a/6173736574732f63617274706f6c655f62616c616e63652e676966\" width=\"30%\"> <img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b72cfcd13229d7d73bd95b8f514afb0c4791be5/6173736574732f63617274706f6c655f7377696e6775702e676966\" width=\"30%\"> <img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6d3dbbcd69eec981021f611f7764160ef3dc5d7/6173736574732f636865657461685f72756e2e676966\" width=\"30%\">\n<img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b11b140bc3a356d0c0f16f82f65a3b120623f2f/6173736574732f6375705f63617463682e676966\" width=\"30%\"> <img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddbac5ac35fc2e047f06b41c532359b0fa7fb166/6173736574732f66696e6765725f7370696e2e676966\" width=\"30%\"> <img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e5118edff64a80803a60721b53b72d062df2d59/6173736574732f726561636865725f656173792e676966\" width=\"30%\">\n<img height=\"30%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d60433508a3742bde549898c71fedbb0453dd5db/6173736574732f77616c6b65725f77616c6b2e676966\" width=\"30%\"></p>\n<h2>For more details</h2>\n<p>Please refer to <a href=\"https://github.com/martinseilair/dm_control2gym\" rel=\"nofollow\">martinseilair's</a> <code>dm_control2gym</code></p>\n\n          </div>"}, "last_serial": 6497624, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1fe26e6c5a0a1588a95acd33657ca05c", "sha256": "49304fa62f533ff75a3c2ee20b2ae60c296a9b42e466b7dc5e619f59195f86bf"}, "downloads": -1, "filename": "dm_control2gym-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1fe26e6c5a0a1588a95acd33657ca05c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7326, "upload_time": "2020-01-07T15:17:52", "upload_time_iso_8601": "2020-01-07T15:17:52.707473Z", "url": "https://files.pythonhosted.org/packages/fe/bf/7481eef2bea3116679629181fc7df3113c10a7f2b457b02970f777603b79/dm_control2gym-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ac1fc13c908917396408bee06495e81", "sha256": "1b1a0da7c5f720c1e36754d5af9e4dfa404127500c9d176a22b08fd0835f51b4"}, "downloads": -1, "filename": "dm_control2gym-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9ac1fc13c908917396408bee06495e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5098, "upload_time": "2020-01-07T15:17:55", "upload_time_iso_8601": "2020-01-07T15:17:55.384664Z", "url": "https://files.pythonhosted.org/packages/1d/a9/a6fc9f70b1d44291a28ff9e6531af6ca728fe60a4ac2d4b371ce2b32b909/dm_control2gym-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e023a6dcb5bc786b6824304a7c06dd1e", "sha256": "660b2283ce7ac711e3e2cabedce6268ebe9b943a66f0992bc5e4a0a645bf780e"}, "downloads": -1, "filename": "dm_control2gym-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e023a6dcb5bc786b6824304a7c06dd1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12046, "upload_time": "2020-01-22T00:36:06", "upload_time_iso_8601": "2020-01-22T00:36:06.099909Z", "url": "https://files.pythonhosted.org/packages/d9/ec/011281a336be31f4f16f1a6f6311da306b2b3960ac05c103ca09b20f1f51/dm_control2gym-0.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e023a6dcb5bc786b6824304a7c06dd1e", "sha256": "660b2283ce7ac711e3e2cabedce6268ebe9b943a66f0992bc5e4a0a645bf780e"}, "downloads": -1, "filename": "dm_control2gym-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e023a6dcb5bc786b6824304a7c06dd1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12046, "upload_time": "2020-01-22T00:36:06", "upload_time_iso_8601": "2020-01-22T00:36:06.099909Z", "url": "https://files.pythonhosted.org/packages/d9/ec/011281a336be31f4f16f1a6f6311da306b2b3960ac05c103ca09b20f1f51/dm_control2gym-0.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:15 2020"}