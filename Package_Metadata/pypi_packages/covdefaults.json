{"info": {"author": "Anthony Sottile", "author_email": "asottile@umich.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "[![Build Status](https://dev.azure.com/asottile/asottile/_apis/build/status/asottile.covdefaults?branchName=master)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=62&branchName=master)\n[![Azure DevOps coverage](https://img.shields.io/azure-devops/coverage/asottile/asottile/62/master.svg)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=62&branchName=master)\n\ncovdefaults\n===========\n\nA coverage plugin to provide sensible default settings\n\n## installation\n\n```bash\npip install covdefaults\n```\n\n## usage\n\nto enable the plugin, add `covdefaults` to your coverage plugins\n\nin `.coveragerc`:\n\n```ini\n[run]\nplugins = covdefaults\n```\n\nin `setup.cfg` / `tox.ini`:\n\n```ini\n[coverage:run]\nplugins = covdefaults\n```\n\nin `pyproject.toml`:\n\n```ini\n[tool.coverage.run]\nplugins = [\"covdefaults\"]\n```\n\n## default settings\n\n### `[coverage:run]`\n\n```ini\nbranch = True\nsource = .\nomit =\n    */.tox/*\n    */__main__.py\n    */setup.py\n    */venv*/*\n```\n\n### `[coverage:report]`\n\n```ini\nshow_missing = True\nskip_covered = True\nfail_under = 100\nexclude =\n    # a more strict default pragma\n    \\# pragma: no cover\\b\n\n    # allow defensive code\n    ^\\s*raise AssertionError\\b\n    ^\\s*raise NotImplementedError\\b\n    ^\\s*return NotImplemented\\b\n    ^\\s*raise$\n\n    # typing-related code\n    ^if (False|TYPE_CHECKING):\n    : \\.\\.\\.$\n    ^ +\\.\\.\\.$\n    -> ['\"]?NoReturn['\"]?:\n\n    # non-runnable code\n    if __name__ == ['\"]__main__['\"]:$\n\n    # additional platform related pragmas (see below)\n```\n\n### platform specific `# pragma: no cover`\n\nseveral `# pragma: no cover` tags will be added automatically based on the\nplatform and implementation.\n\nthese will be in the form of:\n\n```python\n# pragma: TAG no cover\n```\n\nor\n\n```python\n# pragma: TAG cover\n```\n\nthese tags will be generated by the following values:\n\n- `os.name`\n    - `nt` (windows)\n    - `posix` (linux, macOs, cygwin, etc.)\n- `sys.platform`\n    - `cygwin`\n    - `darwin` (macOs)\n    - `linux`\n    - `msys`\n    - `win32`\n- `sys.implementation.name`\n    - `cpython`\n    - `pypy`\n\nfor every tag which does not match, you can use negation.  here's an example:\n\n```python\nif sys.platform == 'win32':  # pragma: win32 cover\n    bin_dir = 'Scripts'\nelse:  # pragma: win32 no cover\n    bin_dir = 'bin'\n```\n\nnote here that `# pragma: win32 cover` will become a \"no cover\" for everything\nwhich is not `win32` -- whereas the `# pragma: win32 no cover` will be a\n\"no cover\" only on `win32`.\n\n### overriding options\n\nseveral of the options can be overridden / extended in your coverage\nconfiguration.  the examples below assume `.coveragerc` however any of the\nfiles `coverage` supports work as well.\n\n#### `run:omit`\n\n```ini\n[run]\nomit =\n    pre_commit/resources/*\n```\n\nthis will result in the `pre_commit/resources/*` being `omit`ted in addition\nto the defaults provided by `covdefaults`.\n\n```ini\n[covdefaults]\nsubtract_omit = */.tox/*\n```\n\nthis will result in `*/.tox/*` not being `omit`ted (`*/.tox/*` is among the\ndefaults provided by `covdefaults`).\n\n#### `report:exclude_lines`\n\n```ini\n[report]\nexclude_lines =\n    ^if MYPY:$\n```\n\nthis will result in lines matching `^if MYPY:$` to additionally be excluded\nfrom coverage in addition to the defaults provided by `covdefaults`.\n\n#### `report:fail_under`\n\n```ini\n[report]\nfail_under = 90\n```\n\n`covdefaults` will not change the value if you provide one for `fail_under`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asottile/covdefaults", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "covdefaults", "package_url": "https://pypi.org/project/covdefaults/", "platform": "", "project_url": "https://pypi.org/project/covdefaults/", "project_urls": {"Homepage": "https://github.com/asottile/covdefaults"}, "release_url": "https://pypi.org/project/covdefaults/1.1.0/", "requires_dist": ["coverage (>=4.5)"], "requires_python": ">=3.6.1", "summary": "A coverage plugin to provide sensible default settings", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://dev.azure.com/asottile/asottile/_build/latest?definitionId=62&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66b4ce5b4f7b274b2bc7466454377678325e9007/68747470733a2f2f6465762e617a7572652e636f6d2f61736f7474696c652f61736f7474696c652f5f617069732f6275696c642f7374617475732f61736f7474696c652e636f7664656661756c74733f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://dev.azure.com/asottile/asottile/_build/latest?definitionId=62&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Azure DevOps coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/923c595602dc7166dff576381e486a36c472ddce/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f61736f7474696c652f61736f7474696c652f36322f6d61737465722e737667\"></a></p>\n<h1>covdefaults</h1>\n<p>A coverage plugin to provide sensible default settings</p>\n<h2>installation</h2>\n<pre>pip install covdefaults\n</pre>\n<h2>usage</h2>\n<p>to enable the plugin, add <code>covdefaults</code> to your coverage plugins</p>\n<p>in <code>.coveragerc</code>:</p>\n<pre><span class=\"k\">[run]</span>\n<span class=\"na\">plugins</span> <span class=\"o\">=</span> <span class=\"s\">covdefaults</span>\n</pre>\n<p>in <code>setup.cfg</code> / <code>tox.ini</code>:</p>\n<pre><span class=\"k\">[coverage:run]</span>\n<span class=\"na\">plugins</span> <span class=\"o\">=</span> <span class=\"s\">covdefaults</span>\n</pre>\n<p>in <code>pyproject.toml</code>:</p>\n<pre><span class=\"k\">[tool.coverage.run]</span>\n<span class=\"na\">plugins</span> <span class=\"o\">=</span> <span class=\"s\">[\"covdefaults\"]</span>\n</pre>\n<h2>default settings</h2>\n<h3><code>[coverage:run]</code></h3>\n<pre><span class=\"na\">branch</span> <span class=\"o\">=</span> <span class=\"s\">True</span>\n<span class=\"na\">source</span> <span class=\"o\">=</span> <span class=\"s\">.</span>\n<span class=\"na\">omit</span> <span class=\"o\">=</span><span class=\"s\"></span>\n<span class=\"s\">    */.tox/*</span>\n<span class=\"s\">    */__main__.py</span>\n<span class=\"s\">    */setup.py</span>\n<span class=\"s\">    */venv*/*</span>\n</pre>\n<h3><code>[coverage:report]</code></h3>\n<pre><span class=\"na\">show_missing</span> <span class=\"o\">=</span> <span class=\"s\">True</span>\n<span class=\"na\">skip_covered</span> <span class=\"o\">=</span> <span class=\"s\">True</span>\n<span class=\"na\">fail_under</span> <span class=\"o\">=</span> <span class=\"s\">100</span>\n<span class=\"na\">exclude</span> <span class=\"o\">=</span><span class=\"s\"></span>\n<span class=\"s\">    # a more strict default pragma</span>\n<span class=\"s\">    \\# pragma: no cover\\b</span>\n\n    <span class=\"c1\"># allow defensive code</span>\n    <span class=\"na\">^\\s*raise AssertionError\\b</span>\n    <span class=\"na\">^\\s*raise NotImplementedError\\b</span>\n    <span class=\"na\">^\\s*return NotImplemented\\b</span>\n    <span class=\"na\">^\\s*raise$</span>\n\n    <span class=\"c1\"># typing-related code</span>\n    <span class=\"na\">^if (False|TYPE_CHECKING):</span>\n    <span class=\"na\">: \\.\\.\\.$</span>\n    <span class=\"na\">^ +\\.\\.\\.$</span>\n    <span class=\"na\">-&gt; ['\"]?NoReturn['\"]?:</span>\n\n    <span class=\"c1\"># non-runnable code</span>\n    <span class=\"na\">if __name__</span> <span class=\"o\">=</span><span class=\"s\">= ['\"]__main__['\"]:$</span>\n\n    <span class=\"c1\"># additional platform related pragmas (see below)</span>\n</pre>\n<h3>platform specific <code># pragma: no cover</code></h3>\n<p>several <code># pragma: no cover</code> tags will be added automatically based on the\nplatform and implementation.</p>\n<p>these will be in the form of:</p>\n<pre><span class=\"c1\"># pragma: TAG no cover</span>\n</pre>\n<p>or</p>\n<pre><span class=\"c1\"># pragma: TAG cover</span>\n</pre>\n<p>these tags will be generated by the following values:</p>\n<ul>\n<li><code>os.name</code>\n<ul>\n<li><code>nt</code> (windows)</li>\n<li><code>posix</code> (linux, macOs, cygwin, etc.)</li>\n</ul>\n</li>\n<li><code>sys.platform</code>\n<ul>\n<li><code>cygwin</code></li>\n<li><code>darwin</code> (macOs)</li>\n<li><code>linux</code></li>\n<li><code>msys</code></li>\n<li><code>win32</code></li>\n</ul>\n</li>\n<li><code>sys.implementation.name</code>\n<ul>\n<li><code>cpython</code></li>\n<li><code>pypy</code></li>\n</ul>\n</li>\n</ul>\n<p>for every tag which does not match, you can use negation.  here's an example:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span> <span class=\"o\">==</span> <span class=\"s1\">'win32'</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: win32 cover</span>\n    <span class=\"n\">bin_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'Scripts'</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: win32 no cover</span>\n    <span class=\"n\">bin_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'bin'</span>\n</pre>\n<p>note here that <code># pragma: win32 cover</code> will become a \"no cover\" for everything\nwhich is not <code>win32</code> -- whereas the <code># pragma: win32 no cover</code> will be a\n\"no cover\" only on <code>win32</code>.</p>\n<h3>overriding options</h3>\n<p>several of the options can be overridden / extended in your coverage\nconfiguration.  the examples below assume <code>.coveragerc</code> however any of the\nfiles <code>coverage</code> supports work as well.</p>\n<h4><code>run:omit</code></h4>\n<pre><span class=\"k\">[run]</span>\n<span class=\"na\">omit</span> <span class=\"o\">=</span><span class=\"s\"></span>\n<span class=\"s\">    pre_commit/resources/*</span>\n</pre>\n<p>this will result in the <code>pre_commit/resources/*</code> being <code>omit</code>ted in addition\nto the defaults provided by <code>covdefaults</code>.</p>\n<pre><span class=\"k\">[covdefaults]</span>\n<span class=\"na\">subtract_omit</span> <span class=\"o\">=</span> <span class=\"s\">*/.tox/*</span>\n</pre>\n<p>this will result in <code>*/.tox/*</code> not being <code>omit</code>ted (<code>*/.tox/*</code> is among the\ndefaults provided by <code>covdefaults</code>).</p>\n<h4><code>report:exclude_lines</code></h4>\n<pre><span class=\"k\">[report]</span>\n<span class=\"na\">exclude_lines</span> <span class=\"o\">=</span><span class=\"s\"></span>\n<span class=\"s\">    ^if MYPY:$</span>\n</pre>\n<p>this will result in lines matching <code>^if MYPY:$</code> to additionally be excluded\nfrom coverage in addition to the defaults provided by <code>covdefaults</code>.</p>\n<h4><code>report:fail_under</code></h4>\n<pre><span class=\"k\">[report]</span>\n<span class=\"na\">fail_under</span> <span class=\"o\">=</span> <span class=\"s\">90</span>\n</pre>\n<p><code>covdefaults</code> will not change the value if you provide one for <code>fail_under</code></p>\n\n          </div>"}, "last_serial": 6787890, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "88000abc507490e545ddf47de0de74ef", "sha256": "00968ad8d8f4bdf309c06814a1c98590bdaaf376ab03f8bbc69918f217c5f0b4"}, "downloads": -1, "filename": "covdefaults-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "88000abc507490e545ddf47de0de74ef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 4680, "upload_time": "2020-02-29T21:31:31", "upload_time_iso_8601": "2020-02-29T21:31:31.104361Z", "url": "https://files.pythonhosted.org/packages/8f/c3/bc38ae520b442bd6653c6413e8bec6799895de18df60fa83882f2e93dd5a/covdefaults-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3e5112646cad2607b6d83190b469acb", "sha256": "d800b22e689ee07544d45af2ede03a11a586654ce133047304a1c313dc8b0bb2"}, "downloads": -1, "filename": "covdefaults-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f3e5112646cad2607b6d83190b469acb", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7", "size": 4706, "upload_time": "2020-02-29T21:31:33", "upload_time_iso_8601": "2020-02-29T21:31:33.049751Z", "url": "https://files.pythonhosted.org/packages/6d/27/c93ca54b8dcf31df6953afaaf49369086e1aa2e50e9cb06230df0656f1c6/covdefaults-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f85ac7f46ad4f2f047f885ddb26a9832", "sha256": "bb42252189b279ee74993d6c40a5222dc0acfe4e2b33d51b68363e8ddc3e01ee"}, "downloads": -1, "filename": "covdefaults-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f85ac7f46ad4f2f047f885ddb26a9832", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.1", "size": 4511, "upload_time": "2020-02-29T21:52:59", "upload_time_iso_8601": "2020-02-29T21:52:59.314889Z", "url": "https://files.pythonhosted.org/packages/05/b1/b58eed37026e07f162e15e7c170b14bc8033b5062081aa16f498b6d15398/covdefaults-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89a788b5a082a7fc309c56ec01614b0c", "sha256": "862011b4b71b01212c9a43092b0db8066560096e24ff49457fe214d4872a9271"}, "downloads": -1, "filename": "covdefaults-1.0.0.tar.gz", "has_sig": false, "md5_digest": "89a788b5a082a7fc309c56ec01614b0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 4514, "upload_time": "2020-02-29T21:53:00", "upload_time_iso_8601": "2020-02-29T21:53:00.388839Z", "url": "https://files.pythonhosted.org/packages/6c/02/f1a0a972a2c6c4d6d757be2c9bf6485bb51b4d0e0a4c879a672044766f32/covdefaults-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a1a54b77bb58c8600cd36470f8410177", "sha256": "e121b9516c269d1c385cfa90080088cac7231ed442c322e0729b5e5c7349c148"}, "downloads": -1, "filename": "covdefaults-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1a54b77bb58c8600cd36470f8410177", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.1", "size": 4517, "upload_time": "2020-03-10T20:38:58", "upload_time_iso_8601": "2020-03-10T20:38:58.135479Z", "url": "https://files.pythonhosted.org/packages/4e/9c/411d1d69a3c414d2149738640da9755dbc5e78bf059b1534a6eeeb581f7c/covdefaults-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b796f9458b58d6fb4467972112ae0c1", "sha256": "2d0684ee1dba204977ddb3968231c8b5cb6bb33e6d2600103d748be9ad9b67c1"}, "downloads": -1, "filename": "covdefaults-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8b796f9458b58d6fb4467972112ae0c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 4431, "upload_time": "2020-03-10T20:38:59", "upload_time_iso_8601": "2020-03-10T20:38:59.616477Z", "url": "https://files.pythonhosted.org/packages/1e/16/f64690d585efa99742d4b8a91624318e772093c213bb5b6aaf003c79119f/covdefaults-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1a54b77bb58c8600cd36470f8410177", "sha256": "e121b9516c269d1c385cfa90080088cac7231ed442c322e0729b5e5c7349c148"}, "downloads": -1, "filename": "covdefaults-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1a54b77bb58c8600cd36470f8410177", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.1", "size": 4517, "upload_time": "2020-03-10T20:38:58", "upload_time_iso_8601": "2020-03-10T20:38:58.135479Z", "url": "https://files.pythonhosted.org/packages/4e/9c/411d1d69a3c414d2149738640da9755dbc5e78bf059b1534a6eeeb581f7c/covdefaults-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b796f9458b58d6fb4467972112ae0c1", "sha256": "2d0684ee1dba204977ddb3968231c8b5cb6bb33e6d2600103d748be9ad9b67c1"}, "downloads": -1, "filename": "covdefaults-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8b796f9458b58d6fb4467972112ae0c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 4431, "upload_time": "2020-03-10T20:38:59", "upload_time_iso_8601": "2020-03-10T20:38:59.616477Z", "url": "https://files.pythonhosted.org/packages/1e/16/f64690d585efa99742d4b8a91624318e772093c213bb5b6aaf003c79119f/covdefaults-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:50 2020"}