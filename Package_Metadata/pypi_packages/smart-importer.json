{"info": {"author": "Johannes Harms", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Office/Business :: Financial :: Investment"], "description": "smart_importer\n==============\n\nAugment\n`Beancount <http://furius.ca/beancount/>`__ importers\nwith machine learning functionality.\n\n\nStatus\n------\n\nWorking protoype, development status: alpha\n\n.. image:: https://travis-ci.org/beancount/smart_importer.svg?branch=master\n    :target: https://travis-ci.org/beancount/smart_importer\n\n\nInstallation\n------------\n\nThe ``smart_importer`` package has not yet been published on PyPI\nand must therefore be installed from source:\n\n.. code:: bash\n\n    git clone https://github.com/beancount/smart_importer.git\n    pip install --editable smart_importer\n\n\nQuick Start\n-----------\n\nThis package provides import hooks that can modify the imported entries. When\nrunning the importer, the existing entries will be used as training data for a\nmachine learning model, which will then predict entry attributes.\n\nThe following example shows how to apply the ``PredictPostings`` hook to\nan existing CSV importer:\n\n.. code:: python\n\n    from beancount.ingest.importers import csv\n    from beancount.ingest.importers.csv import Col\n\n    from smart_importer import apply_hooks, PredictPostings\n\n\n    class MyBankImporter(csv.Importer):\n        '''Conventional importer for MyBank'''\n\n        def __init__(self, *, account):\n            super().__init__(\n                {Col.DATE: 'Date',\n                 Col.PAYEE: 'Transaction Details',\n                 Col.AMOUNT_DEBIT: 'Funds Out',\n                 Col.AMOUNT_CREDIT: 'Funds In'},\n                account,\n                'EUR',\n                [\n                    'Filename: .*MyBank.*\\.csv',\n                    'Contents:\\n.*Date, Transaction Details, Funds Out, Funds In'\n                ]\n            )\n\n\n    CONFIG = [\n        apply_hooks(MyBankImporter(account='Assets:MyBank:MyAccount'), [PredictPostings()])\n    ]\n\n\nDocumentation\n-------------\n\nThis section explains in detail the relevant concepts and artifacts\nneeded for enhancing Beancount importers with machine learning.\n\n\nBeancount Importers\n~~~~~~~~~~~~~~~~~~~~\n\nLet's assume you have created an importer for \"MyBank\" called\n``MyBankImporter``:\n\n.. code:: python\n\n    class MyBankImporter(importer.ImporterProtocol):\n        \"\"\"My existing importer\"\"\"\n        # the actual importer logic would be here...\n\nNote:\nThis documentation assumes you already know how to create Beancount importers.\nRelevant documentation can be found under `beancount ingest\n<http://furius.ca/beancount/doc/ingest>`__.  Using beancount.ingest, users can\nwrite their own importers and use them to convert downloaded bank statements\ninto lists of Beancount entries.\nAn example is provided as part of beancount's source code under\n`beancount/ingest/office\n<https://github.com/beancount/beancount/tree/master/examples/ingest/office>`__.\n\n\nApplying `smart_importer` hooks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAny Beancount importer can be converted into a smart importer by applying one\nof the following hooks:\n\n* ``PredictPostings`` - predict the list of postings.\n* ``PredictPayees``- predict the payee of the transaction.\n* ``DuplicateDetector`` - detect duplicates\n\nFor example, to convert an existing ``MyBankImporter`` into a smart importer:\n\n.. code:: python\n\n    from your_custom_importer import MyBankImporter\n    from smart_importer import apply_hooks, PredictPayees, PredictPostings\n\n    my_bank_importer =  MyBankImporter('whatever', 'config', 'is', 'needed')\n    apply_hooks(my_bank_importer, [PredictPostings(), PredictPayees()])\n\n    CONFIG = [\n        my_bank_importer,\n    ]\n\nNote that the importer hooks need to be applied to an importer instance, as\nshown above.\n\n\nSpecifying Training Data\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``smart_importer`` hooks need training data, i.e. an existing list of\ntransactions in order to be effective. Training data can be specified by\ncalling bean-extract with an argument that references existing Beancount\ntransactions, e.g., ``bean-extract -f existing_transactions.beancount``. When\nusing the importer in Fava, the existing entries are used as training data\nautomatically.\n\n\nUsage with Fava\n~~~~~~~~~~~~~~~\n\nSmart importers play nice with `Fava <https://github.com/beancount/fava>`__.\nThis means you can use smart importers together with Fava in the exact same way\nas you would do with a conventional importer. See `Fava's help on importers\n<https://github.com/beancount/fava/blob/master/fava/help/import.md>`__ for more\ninformation.\n\n\nDevelopment\n-----------\n\nPull requests welcome!\n\n\nExecuting the Unit Tests\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nSimply run (requires tox):\n\n.. code:: bash\n\n    make test\n\n\nConfiguring Logging\n~~~~~~~~~~~~~~~~~~~\n\nPython's `logging` module is used by the smart_importer module.\nThe according log level can be changed as follows:\n\n\n.. code:: python\n\n    import logging\n    logging.getLogger('smart_importer').setLevel(logging.DEBUG)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/beancount/smart_importer", "keywords": "fava beancount accounting machinelearning", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "smart-importer", "package_url": "https://pypi.org/project/smart-importer/", "platform": "", "project_url": "https://pypi.org/project/smart-importer/", "project_urls": {"Homepage": "https://github.com/beancount/smart_importer"}, "release_url": "https://pypi.org/project/smart-importer/0.1/", "requires_dist": ["beancount (>=2.0.0)", "scikit-learn (>=0.19)", "numpy (>=1.8.2)", "scipy (>=0.13.3)"], "requires_python": "", "summary": "Augment Beancount importers with machine learning functionality.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Augment\n<a href=\"http://furius.ca/beancount/\" rel=\"nofollow\">Beancount</a> importers\nwith machine learning functionality.</p>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Working protoype, development status: alpha</p>\n<a href=\"https://travis-ci.org/beancount/smart_importer\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/beancount/smart_importer.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bec7de38906ade7dc236e19ff7103668229accd8/68747470733a2f2f7472617669732d63692e6f72672f6265616e636f756e742f736d6172745f696d706f727465722e7376673f6272616e63683d6d6173746572\"></a>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The <tt>smart_importer</tt> package has not yet been published on PyPI\nand must therefore be installed from source:</p>\n<pre>git clone https://github.com/beancount/smart_importer.git\npip install --editable smart_importer\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>This package provides import hooks that can modify the imported entries. When\nrunning the importer, the existing entries will be used as training data for a\nmachine learning model, which will then predict entry attributes.</p>\n<p>The following example shows how to apply the <tt>PredictPostings</tt> hook to\nan existing CSV importer:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">beancount.ingest.importers</span> <span class=\"kn\">import</span> <span class=\"n\">csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">beancount.ingest.importers.csv</span> <span class=\"kn\">import</span> <span class=\"n\">Col</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">smart_importer</span> <span class=\"kn\">import</span> <span class=\"n\">apply_hooks</span><span class=\"p\">,</span> <span class=\"n\">PredictPostings</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyBankImporter</span><span class=\"p\">(</span><span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">Importer</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''Conventional importer for MyBank'''</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">account</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span><span class=\"n\">Col</span><span class=\"o\">.</span><span class=\"n\">DATE</span><span class=\"p\">:</span> <span class=\"s1\">'Date'</span><span class=\"p\">,</span>\n             <span class=\"n\">Col</span><span class=\"o\">.</span><span class=\"n\">PAYEE</span><span class=\"p\">:</span> <span class=\"s1\">'Transaction Details'</span><span class=\"p\">,</span>\n             <span class=\"n\">Col</span><span class=\"o\">.</span><span class=\"n\">AMOUNT_DEBIT</span><span class=\"p\">:</span> <span class=\"s1\">'Funds Out'</span><span class=\"p\">,</span>\n             <span class=\"n\">Col</span><span class=\"o\">.</span><span class=\"n\">AMOUNT_CREDIT</span><span class=\"p\">:</span> <span class=\"s1\">'Funds In'</span><span class=\"p\">},</span>\n            <span class=\"n\">account</span><span class=\"p\">,</span>\n            <span class=\"s1\">'EUR'</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s1\">'Filename: .*MyBank.*\\.csv'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'Contents:</span><span class=\"se\">\\n</span><span class=\"s1\">.*Date, Transaction Details, Funds Out, Funds In'</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">apply_hooks</span><span class=\"p\">(</span><span class=\"n\">MyBankImporter</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"o\">=</span><span class=\"s1\">'Assets:MyBank:MyAccount'</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">PredictPostings</span><span class=\"p\">()])</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>This section explains in detail the relevant concepts and artifacts\nneeded for enhancing Beancount importers with machine learning.</p>\n<div id=\"beancount-importers\">\n<h3>Beancount Importers</h3>\n<p>Let\u2019s assume you have created an importer for \u201cMyBank\u201d called\n<tt>MyBankImporter</tt>:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyBankImporter</span><span class=\"p\">(</span><span class=\"n\">importer</span><span class=\"o\">.</span><span class=\"n\">ImporterProtocol</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"My existing importer\"\"\"</span>\n    <span class=\"c1\"># the actual importer logic would be here...</span>\n</pre>\n<p>Note:\nThis documentation assumes you already know how to create Beancount importers.\nRelevant documentation can be found under <a href=\"http://furius.ca/beancount/doc/ingest\" rel=\"nofollow\">beancount ingest</a>.  Using beancount.ingest, users can\nwrite their own importers and use them to convert downloaded bank statements\ninto lists of Beancount entries.\nAn example is provided as part of beancount\u2019s source code under\n<a href=\"https://github.com/beancount/beancount/tree/master/examples/ingest/office\" rel=\"nofollow\">beancount/ingest/office</a>.</p>\n</div>\n<div id=\"applying-smart-importer-hooks\">\n<h3>Applying <cite>smart_importer</cite> hooks</h3>\n<p>Any Beancount importer can be converted into a smart importer by applying one\nof the following hooks:</p>\n<ul>\n<li><tt>PredictPostings</tt> - predict the list of postings.</li>\n<li><tt>PredictPayees</tt>- predict the payee of the transaction.</li>\n<li><tt>DuplicateDetector</tt> - detect duplicates</li>\n</ul>\n<p>For example, to convert an existing <tt>MyBankImporter</tt> into a smart importer:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">your_custom_importer</span> <span class=\"kn\">import</span> <span class=\"n\">MyBankImporter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">smart_importer</span> <span class=\"kn\">import</span> <span class=\"n\">apply_hooks</span><span class=\"p\">,</span> <span class=\"n\">PredictPayees</span><span class=\"p\">,</span> <span class=\"n\">PredictPostings</span>\n\n<span class=\"n\">my_bank_importer</span> <span class=\"o\">=</span>  <span class=\"n\">MyBankImporter</span><span class=\"p\">(</span><span class=\"s1\">'whatever'</span><span class=\"p\">,</span> <span class=\"s1\">'config'</span><span class=\"p\">,</span> <span class=\"s1\">'is'</span><span class=\"p\">,</span> <span class=\"s1\">'needed'</span><span class=\"p\">)</span>\n<span class=\"n\">apply_hooks</span><span class=\"p\">(</span><span class=\"n\">my_bank_importer</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PredictPostings</span><span class=\"p\">(),</span> <span class=\"n\">PredictPayees</span><span class=\"p\">()])</span>\n\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">my_bank_importer</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Note that the importer hooks need to be applied to an importer instance, as\nshown above.</p>\n</div>\n<div id=\"specifying-training-data\">\n<h3>Specifying Training Data</h3>\n<p>The <tt>smart_importer</tt> hooks need training data, i.e. an existing list of\ntransactions in order to be effective. Training data can be specified by\ncalling bean-extract with an argument that references existing Beancount\ntransactions, e.g., <tt><span class=\"pre\">bean-extract</span> <span class=\"pre\">-f</span> existing_transactions.beancount</tt>. When\nusing the importer in Fava, the existing entries are used as training data\nautomatically.</p>\n</div>\n<div id=\"usage-with-fava\">\n<h3>Usage with Fava</h3>\n<p>Smart importers play nice with <a href=\"https://github.com/beancount/fava\" rel=\"nofollow\">Fava</a>.\nThis means you can use smart importers together with Fava in the exact same way\nas you would do with a conventional importer. See <a href=\"https://github.com/beancount/fava/blob/master/fava/help/import.md\" rel=\"nofollow\">Fava\u2019s help on importers</a> for more\ninformation.</p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Pull requests welcome!</p>\n<div id=\"executing-the-unit-tests\">\n<h3>Executing the Unit Tests</h3>\n<p>Simply run (requires tox):</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"configuring-logging\">\n<h3>Configuring Logging</h3>\n<p>Python\u2019s <cite>logging</cite> module is used by the smart_importer module.\nThe according log level can be changed as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'smart_importer'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4633046, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ea95d04c7f6547f0d09d28f4a269ae66", "sha256": "71d649197101ab54fcb7c0a1ac3e51fc66cdbdd46a6ff542c9c1c83d725cf24c"}, "downloads": -1, "filename": "smart_importer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ea95d04c7f6547f0d09d28f4a269ae66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10051, "upload_time": "2018-12-25T08:50:07", "upload_time_iso_8601": "2018-12-25T08:50:07.148709Z", "url": "https://files.pythonhosted.org/packages/7d/f2/122dbbf45026124ac6e319fe7bc1b41338bf10b3bb95170e2a84b73466aa/smart_importer-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5615c1b0a996247027ddda106b7da3f6", "sha256": "10b65e3d50dcc6ef9a1dd4f78d2b1e5770ed5f92c233a42f80f7acc567b87129"}, "downloads": -1, "filename": "smart_importer-0.1.tar.gz", "has_sig": false, "md5_digest": "5615c1b0a996247027ddda106b7da3f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41615, "upload_time": "2018-12-25T08:50:09", "upload_time_iso_8601": "2018-12-25T08:50:09.479225Z", "url": "https://files.pythonhosted.org/packages/2d/77/0d73a4cca9f4a08d91c1a44669964f6c3bc8a9763a8f6051072e63da6794/smart_importer-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea95d04c7f6547f0d09d28f4a269ae66", "sha256": "71d649197101ab54fcb7c0a1ac3e51fc66cdbdd46a6ff542c9c1c83d725cf24c"}, "downloads": -1, "filename": "smart_importer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ea95d04c7f6547f0d09d28f4a269ae66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10051, "upload_time": "2018-12-25T08:50:07", "upload_time_iso_8601": "2018-12-25T08:50:07.148709Z", "url": "https://files.pythonhosted.org/packages/7d/f2/122dbbf45026124ac6e319fe7bc1b41338bf10b3bb95170e2a84b73466aa/smart_importer-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5615c1b0a996247027ddda106b7da3f6", "sha256": "10b65e3d50dcc6ef9a1dd4f78d2b1e5770ed5f92c233a42f80f7acc567b87129"}, "downloads": -1, "filename": "smart_importer-0.1.tar.gz", "has_sig": false, "md5_digest": "5615c1b0a996247027ddda106b7da3f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41615, "upload_time": "2018-12-25T08:50:09", "upload_time_iso_8601": "2018-12-25T08:50:09.479225Z", "url": "https://files.pythonhosted.org/packages/2d/77/0d73a4cca9f4a08d91c1a44669964f6c3bc8a9763a8f6051072e63da6794/smart_importer-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:03 2020"}