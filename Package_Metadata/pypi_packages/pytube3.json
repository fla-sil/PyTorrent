{"info": {"author": "Nick Ficano, Harold Martin", "author_email": "nficano@gmail.com, harold.martin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet", "Topic :: Multimedia :: Video", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Terminals", "Topic :: Utilities"], "description": "\n\n<div align=\"center\">\n  <p align=\"center\">\n\t  <a href=\"https://pypi.org/project/pytube3/\"><img src=\"https://img.shields.io/pypi/v/pytube3.svg\" alt=\"pypi\"></a>\n\t  <a href=\"https://pypi.python.org/pypi/pytube3/\"><img src=\"https://img.shields.io/pypi/pyversions/pytube3.svg\" /></a>\n\t  <a href=\"https://travis-ci.com/hbmartin/pytube3/\"><img src=\"https://travis-ci.org/hbmartin/pytube3.svg?branch=master\" /></a>\n\t  <a href='https://pytube3.readthedocs.io/en/latest/?badge=latest'><img src='https://readthedocs.org/projects/pytube3/badge/?version=latest' alt='Documentation Status' /></a>\n\t<a href=\"https://codecov.io/gh/hbmartin/pytube3\"><img src=\"https://codecov.io/gh/hbmartin/pytube3/branch/master/graph/badge.svg\" /></a>\n\t  <a href=\"https://www.codefactor.io/repository/github/hbmartin/pytube3/overview/master\"><img src=\"https://www.codefactor.io/repository/github/hbmartin/pytube3/badge/master\" alt=\"CodeFactor\" /></a>\n\t  <a href=\"https://github.com/ambv/black\"><img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" /></a>\n\t  <a href=\"https://twitter.com/hmartin\"><img src=\"https://img.shields.io/badge/twitter-@hmartin-blue.svg?style=flat\" /></a>\n  </p>\n</div>\n\n# pytube3\n\n## Table of Contents\n  * [Installation](#installation)\n  * [Quick start](#quick-start)\n  * [Features](#features)\n  * [Usage](#usage)\n  * [Command-line interface](#command-line-interface)\n  * [Development](#development)\n  * [GUIs and other libraries](#guis-and-other-libraries)\n\n## Installation\n\nDownload using pip via pypi.\n\n```bash\n$ pip install pytube3 --upgrade\n```\n(Mac/homebrew users may need to use ``pip3``)\n\n\n## Quick start\n```python\n >>> from pytube import YouTube\n >>> YouTube('https://youtu.be/9bZkp7q19f0').streams.get_highest_resolution().download()\n >>>\n >>> yt = YouTube('http://youtube.com/watch?v=9bZkp7q19f0')\n >>> yt.streams\n  ... .filter(progressive=True, file_extension='mp4')\n  ... .order_by('resolution')[-1]\n  ... .download()\n```\nA GUI frontend for pytube3 is available at [YouTubeDownload](https://github.com/YouTubeDownload/YouTubeDownload)\n\n## Features\n  * Support for Both Progressive & DASH Streams\n  * Support for downloading complete playlist\n  * Easily Register ``on_download_progress`` & ``on_download_complete`` callbacks\n  * Command-line Interfaced Included\n  * Caption Track Support\n  * Outputs Caption Tracks to .srt format (SubRip Subtitle)\n  * Ability to Capture Thumbnail URL.\n  * Extensively Documented Source Code\n  * No Third-Party Dependencies\n\n## Usage\n\nLet's begin with showing how easy it is to download a video with pytube:\n\n```python\n>>> from pytube import YouTube\n>>> YouTube('http://youtube.com/watch?v=9bZkp7q19f0').streams[0].download()\n```\nThis example will download the highest quality progressive download stream available.\n\nNext, let's explore how we would view what video streams are available:\n\n```python\n>>> yt = YouTube('http://youtube.com/watch?v=9bZkp7q19f0')\n>>> print(yt.streams)\n [<Stream: itag=\"22\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.64001F\" acodec=\"mp4a.40.2\">,\n <Stream: itag=\"43\" mime_type=\"video/webm\" res=\"360p\" fps=\"30fps\" vcodec=\"vp8.0\" acodec=\"vorbis\">,\n <Stream: itag=\"18\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.42001E\" acodec=\"mp4a.40.2\">,\n <Stream: itag=\"36\" mime_type=\"video/3gpp\" res=\"240p\" fps=\"30fps\" vcodec=\"mp4v.20.3\" acodec=\"mp4a.40.2\">,\n <Stream: itag=\"17\" mime_type=\"video/3gpp\" res=\"144p\" fps=\"30fps\" vcodec=\"mp4v.20.3\" acodec=\"mp4a.40.2\">,\n <Stream: itag=\"137\" mime_type=\"video/mp4\" res=\"1080p\" fps=\"30fps\" vcodec=\"avc1.640028\">,\n <Stream: itag=\"248\" mime_type=\"video/webm\" res=\"1080p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"136\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.4d401f\">,\n <Stream: itag=\"247\" mime_type=\"video/webm\" res=\"720p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"135\" mime_type=\"video/mp4\" res=\"480p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n <Stream: itag=\"244\" mime_type=\"video/webm\" res=\"480p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"134\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n <Stream: itag=\"243\" mime_type=\"video/webm\" res=\"360p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"133\" mime_type=\"video/mp4\" res=\"240p\" fps=\"30fps\" vcodec=\"avc1.4d4015\">,\n <Stream: itag=\"242\" mime_type=\"video/webm\" res=\"240p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"160\" mime_type=\"video/mp4\" res=\"144p\" fps=\"30fps\" vcodec=\"avc1.4d400c\">,\n <Stream: itag=\"278\" mime_type=\"video/webm\" res=\"144p\" fps=\"30fps\" vcodec=\"vp9\">,\n <Stream: itag=\"140\" mime_type=\"audio/mp4\" abr=\"128kbps\" acodec=\"mp4a.40.2\">,\n <Stream: itag=\"171\" mime_type=\"audio/webm\" abr=\"128kbps\" acodec=\"vorbis\">,\n <Stream: itag=\"249\" mime_type=\"audio/webm\" abr=\"50kbps\" acodec=\"opus\">,\n <Stream: itag=\"250\" mime_type=\"audio/webm\" abr=\"70kbps\" acodec=\"opus\">,\n <Stream: itag=\"251\" mime_type=\"audio/webm\" abr=\"160kbps\" acodec=\"opus\">]\n```\n\n### Selecting an itag\n\nYou may notice that some streams listed have both a video codec and audio codec, while others have just video or just audio, this is a result of YouTube supporting a streaming technique called Dynamic Adaptive Streaming over HTTP (DASH).\n\nIn the context of pytube, the implications are for the highest quality streams; you now need to download both the audio and video tracks and then post-process them with software like FFmpeg to merge them.\n\nThe legacy streams that contain the audio and video in a single file (referred to as \"progressive download\") are still available, but only for resolutions 720p and below.\n\nTo only view these progressive download streams:\n\n```python\n >>> yt.streams.filter(progressive=True)\n  [<Stream: itag=\"22\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.64001F\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"43\" mime_type=\"video/webm\" res=\"360p\" fps=\"30fps\" vcodec=\"vp8.0\" acodec=\"vorbis\">,\n  <Stream: itag=\"18\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.42001E\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"36\" mime_type=\"video/3gpp\" res=\"240p\" fps=\"30fps\" vcodec=\"mp4v.20.3\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"17\" mime_type=\"video/3gpp\" res=\"144p\" fps=\"30fps\" vcodec=\"mp4v.20.3\" acodec=\"mp4a.40.2\">]\n```\n\nConversely, if you only want to see the DASH streams (also referred to as \"adaptive\") you can do:\n\n```python\n>>> yt.streams.filter(adaptive=True)\n [<Stream: itag=\"137\" mime_type=\"video/mp4\" res=\"1080p\" fps=\"30fps\" vcodec=\"avc1.640028\">,\n  <Stream: itag=\"248\" mime_type=\"video/webm\" res=\"1080p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"136\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.4d401f\">,\n  <Stream: itag=\"247\" mime_type=\"video/webm\" res=\"720p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"135\" mime_type=\"video/mp4\" res=\"480p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n  <Stream: itag=\"244\" mime_type=\"video/webm\" res=\"480p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"134\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n  <Stream: itag=\"243\" mime_type=\"video/webm\" res=\"360p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"133\" mime_type=\"video/mp4\" res=\"240p\" fps=\"30fps\" vcodec=\"avc1.4d4015\">,\n  <Stream: itag=\"242\" mime_type=\"video/webm\" res=\"240p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"160\" mime_type=\"video/mp4\" res=\"144p\" fps=\"30fps\" vcodec=\"avc1.4d400c\">,\n  <Stream: itag=\"278\" mime_type=\"video/webm\" res=\"144p\" fps=\"30fps\" vcodec=\"vp9\">,\n  <Stream: itag=\"140\" mime_type=\"audio/mp4\" abr=\"128kbps\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"171\" mime_type=\"audio/webm\" abr=\"128kbps\" acodec=\"vorbis\">,\n  <Stream: itag=\"249\" mime_type=\"audio/webm\" abr=\"50kbps\" acodec=\"opus\">,\n  <Stream: itag=\"250\" mime_type=\"audio/webm\" abr=\"70kbps\" acodec=\"opus\">,\n  <Stream: itag=\"251\" mime_type=\"audio/webm\" abr=\"160kbps\" acodec=\"opus\">]\n```\n\n### Playlists\n\nYou can also download a complete Youtube playlist:\n\n```python\n>>> from pytube import Playlist\n>>> playlist = Playlist(\"https://www.youtube.com/playlist?list=PLynhp4cZEpTbRs_PYISQ8v_uwO0_mDg_X\")\n>>> for video in playlist:\n>>> \tvideo.streams.get_highest_resolution().download()\n```\nThis will download the highest progressive stream available (generally 720p) from the given playlist.\n\n### Filtering\n\nPytube allows you to filter on every property available (see the documentation for the complete list), let's take a look at some of the most useful ones.\n\nTo list the audio only streams:\n\n```python\n>>> yt.streams.filter(only_audio=True)\n  [<Stream: itag=\"140\" mime_type=\"audio/mp4\" abr=\"128kbps\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"171\" mime_type=\"audio/webm\" abr=\"128kbps\" acodec=\"vorbis\">,\n  <Stream: itag=\"249\" mime_type=\"audio/webm\" abr=\"50kbps\" acodec=\"opus\">,\n  <Stream: itag=\"250\" mime_type=\"audio/webm\" abr=\"70kbps\" acodec=\"opus\">,\n  <Stream: itag=\"251\" mime_type=\"audio/webm\" abr=\"160kbps\" acodec=\"opus\">]\n```\n\nTo list only ``mp4`` streams:\n\n```python\n>>> yt.streams.filter(subtype='mp4')\n [<Stream: itag=\"22\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.64001F\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"18\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.42001E\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"137\" mime_type=\"video/mp4\" res=\"1080p\" fps=\"30fps\" vcodec=\"avc1.640028\">,\n  <Stream: itag=\"136\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.4d401f\">,\n  <Stream: itag=\"135\" mime_type=\"video/mp4\" res=\"480p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n  <Stream: itag=\"134\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.4d401e\">,\n  <Stream: itag=\"133\" mime_type=\"video/mp4\" res=\"240p\" fps=\"30fps\" vcodec=\"avc1.4d4015\">,\n  <Stream: itag=\"160\" mime_type=\"video/mp4\" res=\"144p\" fps=\"30fps\" vcodec=\"avc1.4d400c\">,\n  <Stream: itag=\"140\" mime_type=\"audio/mp4\" abr=\"128kbps\" acodec=\"mp4a.40.2\">]\n```\n\nMultiple filters can also be specified:\n\n```python\n>>> yt.streams.filter(subtype='mp4', progressive=True)\n>>> # this can also be expressed as:\n>>> yt.streams.filter(subtype='mp4').filter(progressive=True)\n  [<Stream: itag=\"22\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.64001F\" acodec=\"mp4a.40.2\">,\n  <Stream: itag=\"18\" mime_type=\"video/mp4\" res=\"360p\" fps=\"30fps\" vcodec=\"avc1.42001E\" acodec=\"mp4a.40.2\">]\n```\nYou also have an interface to select streams by their itag, without needing to filter:\n\n```python\n>>> yt.streams.get_by_itag(22)\n  <Stream: itag=\"22\" mime_type=\"video/mp4\" res=\"720p\" fps=\"30fps\" vcodec=\"avc1.64001F\" acodec=\"mp4a.40.2\">\n```\n\nIf you need to optimize for a specific feature, such as the \"highest resolution\" or \"lowest average bitrate\":\n\n```python\n>>> yt.streams.filter(progressive=True).order_by('resolution').desc()\n```\nNote: Using ``order_by`` on a given attribute will filter out all streams missing that attribute.\n\n### Callbacks\n\nIf your application requires post-processing logic, pytube allows you to specify an \"on download complete\" callback function:\n\n```python\n >>> def convert_to_aac(stream, file_handler):\n         return  # do work\n\n >>> yt.register_on_complete_callback(convert_to_aac)\n```\n\nSimilarly, if your application requires on-download progress logic, pytube exposes a callback for this as well:\n\n```python\n >>> def show_progress_bar(stream, chunk, file_handler, bytes_remaining):\n         return  # do work\n\n >>> yt.register_on_progress_callback(show_progress_bar)\n```\n\n## Command-line interface\n\npytube3 ships with a simple CLI interface for downloading videos, playlists, and captions.\n\nLet's start with downloading:\n\n```bash\n$ pytube3 http://youtube.com/watch?v=9bZkp7q19f0 --itag=18\n```\nTo view available streams:\n\n```bash\n$ pytube3 http://youtube.com/watch?v=9bZkp7q19f0 --list\n```\n\nThe complete set of flags are:\n\n```\nusage: pytube3 [-h] [--version] [--itag ITAG] [-r RESOLUTION] [-l] [-v]\n               [--build-playback-report] [-c [CAPTION_CODE]] [-t TARGET]\n               [-a [AUDIO]] [-f [FFMPEG]]\n               [url]\n\nCommand line application to download youtube videos.\n\npositional arguments:\n  url                   The YouTube /watch or /playlist url\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --itag ITAG           The itag for the desired stream\n  -r RESOLUTION, --resolution RESOLUTION\n                        The resolution for the desired stream\n  -l, --list            The list option causes pytube cli to return a list of\n                        streams available to download\n  -v, --verbose         Verbosity level, use up to 4 to increase logging -vvvv\n  --build-playback-report\n                        Save the html and js to disk\n  -c [CAPTION_CODE], --caption-code [CAPTION_CODE]\n                        Download srt captions for given language code. Prints\n                        available language codes if no argument given\n  -t TARGET, --target TARGET\n                        The output directory for the downloaded stream.\n                        Default is current working directory\n  -a [AUDIO], --audio [AUDIO]\n                        Download the audio for a given URL at the highest\n                        bitrate availableDefaults to mp4 format if none is\n                        specified\n  -f [FFMPEG], --ffmpeg [FFMPEG]\n                        Downloads the audio and video stream for resolution\n                        providedIf no resolution is provided, downloads the\n                        best resolutionRuns the command line program ffmpeg to\n                        combine the audio and video\n```\n\n\n## Development\n\n<a href=\"https://deepsource.io/gh/hbmartin/pytube3/?ref=repository-badge\" target=\"_blank\"><img alt=\"DeepSource\" title=\"DeepSource\" src=\"https://static.deepsource.io/deepsource-badge-light-mini.svg\"></a>\n<a href=\"https://www.codacy.com/manual/hbmartin/pytube3?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=hbmartin/pytube3&amp;utm_campaign=Badge_Grade\"><img src=\"https://api.codacy.com/project/badge/Grade/53794f06983a46829620b3284c6a5596\"/></a>\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nTo run code checking before a PR use ``make test``\n\n#### Virtual environment\n\nVirtual environment is setup with [pipenv](https://pipenv-fork.readthedocs.io/en/latest/) and can be automatically activated with [direnv](https://direnv.net/docs/installation.html)\n\n#### Code Formatting\n\nThis project is linted with [pyflakes](https://github.com/PyCQA/pyflakes), formatted with [black](https://github.com/ambv/black), and typed with [mypy](https://mypy.readthedocs.io/en/latest/introduction.html)\n\n\n#### Code of Conduct\n\nTreat other people with helpfulness, gratitude, and consideration! See the [Python Community Code of Conduct](https://www.python.org/psf/codeofconduct/).\n\n## GUIs and other libraries\n* [YouTubeDownload](https://github.com/YouTubeDownload/YouTubeDownload) - Featured GUI frontend for pytube3\n* [Pytube-GUI](https://github.com/GAO23/Pytube-GUI) - Simple GUI frontend for pytube3\n* [StackOverflow questions](https://stackoverflow.com/questions/tagged/pytube)\n* [PySlackers](https://pyslackers.com/web) - Python Slack group\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hbmartin/pytube3", "keywords": "youtube,download,video,stream", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytube3", "package_url": "https://pypi.org/project/pytube3/", "platform": "", "project_url": "https://pypi.org/project/pytube3/", "project_urls": {"Bug Reports": "https://github.com/hbmartin/pytube3/issues", "Homepage": "https://github.com/hbmartin/pytube3", "Read the Docs": "https://pytube3.readthedocs.io/en/latest/?badge=latest"}, "release_url": "https://pypi.org/project/pytube3/9.6.4/", "requires_dist": ["typing-extensions"], "requires_python": ">=3.6", "summary": "Python 3 library for downloading YouTube Videos.", "version": "9.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n  <p align=\"center\">\n\t  <a href=\"https://pypi.org/project/pytube3/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5fb8a175344f3145c0aaa24c04d6ba1a8e106af7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707974756265332e737667\"></a>\n\t  <a href=\"https://pypi.python.org/pypi/pytube3/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77820b0854a85979fd54981ced8231053ea369a3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707974756265332e737667\"></a>\n\t  <a href=\"https://travis-ci.com/hbmartin/pytube3/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f150108eafbab37236d1e03ecc112fb7347eca7a/68747470733a2f2f7472617669732d63692e6f72672f68626d617274696e2f707974756265332e7376673f6272616e63683d6d6173746572\"></a>\n\t  <a href=\"https://pytube3.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48598b425574d7b84572b91aa3842cfc1ec69816/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974756265332f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n\t<a href=\"https://codecov.io/gh/hbmartin/pytube3\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/febdffb4f6b9241aa29226ebc7ec58440f977b54/68747470733a2f2f636f6465636f762e696f2f67682f68626d617274696e2f707974756265332f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n\t  <a href=\"https://www.codefactor.io/repository/github/hbmartin/pytube3/overview/master\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54c4d2073abf6cb83ec35b35dc8f391b712fa0e0/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f68626d617274696e2f707974756265332f62616467652f6d6173746572\"></a>\n\t  <a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n\t  <a href=\"https://twitter.com/hmartin\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5103d71098eac3c8d438cf44be1be70993b18fc7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40686d617274696e2d626c75652e7376673f7374796c653d666c6174\"></a>\n  </p>\n</div>\n<h1>pytube3</h1>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick start</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#command-line-interface\" rel=\"nofollow\">Command-line interface</a></li>\n<li><a href=\"#development\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#guis-and-other-libraries\" rel=\"nofollow\">GUIs and other libraries</a></li>\n</ul>\n<h2>Installation</h2>\n<p>Download using pip via pypi.</p>\n<pre>$ pip install pytube3 --upgrade\n</pre>\n<p>(Mac/homebrew users may need to use <code>pip3</code>)</p>\n<h2>Quick start</h2>\n<pre> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pytube</span> <span class=\"kn\">import</span> <span class=\"n\">YouTube</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">YouTube</span><span class=\"p\">(</span><span class=\"s1\">'https://youtu.be/9bZkp7q19f0'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">get_highest_resolution</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n <span class=\"o\">&gt;&gt;&gt;</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span> <span class=\"o\">=</span> <span class=\"n\">YouTube</span><span class=\"p\">(</span><span class=\"s1\">'http://youtube.com/watch?v=9bZkp7q19f0'</span><span class=\"p\">)</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span>\n  <span class=\"o\">...</span> <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">progressive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">file_extension</span><span class=\"o\">=</span><span class=\"s1\">'mp4'</span><span class=\"p\">)</span>\n  <span class=\"o\">...</span> <span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'resolution'</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"o\">...</span> <span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</pre>\n<p>A GUI frontend for pytube3 is available at <a href=\"https://github.com/YouTubeDownload/YouTubeDownload\" rel=\"nofollow\">YouTubeDownload</a></p>\n<h2>Features</h2>\n<ul>\n<li>Support for Both Progressive &amp; DASH Streams</li>\n<li>Support for downloading complete playlist</li>\n<li>Easily Register <code>on_download_progress</code> &amp; <code>on_download_complete</code> callbacks</li>\n<li>Command-line Interfaced Included</li>\n<li>Caption Track Support</li>\n<li>Outputs Caption Tracks to .srt format (SubRip Subtitle)</li>\n<li>Ability to Capture Thumbnail URL.</li>\n<li>Extensively Documented Source Code</li>\n<li>No Third-Party Dependencies</li>\n</ul>\n<h2>Usage</h2>\n<p>Let's begin with showing how easy it is to download a video with pytube:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pytube</span> <span class=\"kn\">import</span> <span class=\"n\">YouTube</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">YouTube</span><span class=\"p\">(</span><span class=\"s1\">'http://youtube.com/watch?v=9bZkp7q19f0'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</pre>\n<p>This example will download the highest quality progressive download stream available.</p>\n<p>Next, let's explore how we would view what video streams are available:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span> <span class=\"o\">=</span> <span class=\"n\">YouTube</span><span class=\"p\">(</span><span class=\"s1\">'http://youtube.com/watch?v=9bZkp7q19f0'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"p\">)</span>\n <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.64001F\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"43\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp8.0\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"vorbis\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.42001E\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"36\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/3gpp\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4v.20.3\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"17\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/3gpp\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4v.20.3\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"137\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"1080p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.640028\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"248\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"1080p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"136\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401f\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"247\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"135\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"480p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"244\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"480p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"134\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"243\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"133\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d4015\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"242\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"160\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d400c\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"278\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"140\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/mp4\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"171\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"vorbis\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"249\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"50kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"250\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"70kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"251\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"160kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<h3>Selecting an itag</h3>\n<p>You may notice that some streams listed have both a video codec and audio codec, while others have just video or just audio, this is a result of YouTube supporting a streaming technique called Dynamic Adaptive Streaming over HTTP (DASH).</p>\n<p>In the context of pytube, the implications are for the highest quality streams; you now need to download both the audio and video tracks and then post-process them with software like FFmpeg to merge them.</p>\n<p>The legacy streams that contain the audio and video in a single file (referred to as \"progressive download\") are still available, but only for resolutions 720p and below.</p>\n<p>To only view these progressive download streams:</p>\n<pre> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">progressive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n  <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.64001F\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"43\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp8.0\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"vorbis\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.42001E\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"36\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/3gpp\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4v.20.3\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"17\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/3gpp\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4v.20.3\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>Conversely, if you only want to see the DASH streams (also referred to as \"adaptive\") you can do:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">adaptive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"137\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"1080p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.640028\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"248\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"1080p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"136\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401f\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"247\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"135\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"480p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"244\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"480p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"134\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"243\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"133\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d4015\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"242\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"160\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d400c\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"278\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/webm\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"vp9\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"140\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/mp4\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"171\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"vorbis\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"249\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"50kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"250\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"70kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"251\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"160kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<h3>Playlists</h3>\n<p>You can also download a complete Youtube playlist:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pytube</span> <span class=\"kn\">import</span> <span class=\"n\">Playlist</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">playlist</span> <span class=\"o\">=</span> <span class=\"n\">Playlist</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.youtube.com/playlist?list=PLynhp4cZEpTbRs_PYISQ8v_uwO0_mDg_X\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">video</span> <span class=\"ow\">in</span> <span class=\"n\">playlist</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \t<span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">get_highest_resolution</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</pre>\n<p>This will download the highest progressive stream available (generally 720p) from the given playlist.</p>\n<h3>Filtering</h3>\n<p>Pytube allows you to filter on every property available (see the documentation for the complete list), let's take a look at some of the most useful ones.</p>\n<p>To list the audio only streams:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">only_audio</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n  <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"140\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/mp4\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"171\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"vorbis\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"249\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"50kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"250\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"70kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"251\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/webm\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"160kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"opus\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>To list only <code>mp4</code> streams:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">subtype</span><span class=\"o\">=</span><span class=\"s1\">'mp4'</span><span class=\"p\">)</span>\n <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.64001F\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.42001E\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"137\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"1080p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.640028\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"136\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401f\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"135\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"480p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"134\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d401e\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"133\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"240p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d4015\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"160\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"144p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.4d400c\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"140\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"audio/mp4\"</span> <span class=\"n\">abr</span><span class=\"o\">=</span><span class=\"s2\">\"128kbps\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>Multiple filters can also be specified:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">subtype</span><span class=\"o\">=</span><span class=\"s1\">'mp4'</span><span class=\"p\">,</span> <span class=\"n\">progressive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># this can also be expressed as:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">subtype</span><span class=\"o\">=</span><span class=\"s1\">'mp4'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">progressive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n  <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.64001F\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"360p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.42001E\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>You also have an interface to select streams by their itag, without needing to filter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">get_by_itag</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">)</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">Stream</span><span class=\"p\">:</span> <span class=\"n\">itag</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"s2\">\"video/mp4\"</span> <span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s2\">\"720p\"</span> <span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"s2\">\"30fps\"</span> <span class=\"n\">vcodec</span><span class=\"o\">=</span><span class=\"s2\">\"avc1.64001F\"</span> <span class=\"n\">acodec</span><span class=\"o\">=</span><span class=\"s2\">\"mp4a.40.2\"</span><span class=\"o\">&gt;</span>\n</pre>\n<p>If you need to optimize for a specific feature, such as the \"highest resolution\" or \"lowest average bitrate\":</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">streams</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">progressive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'resolution'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">desc</span><span class=\"p\">()</span>\n</pre>\n<p>Note: Using <code>order_by</code> on a given attribute will filter out all streams missing that attribute.</p>\n<h3>Callbacks</h3>\n<p>If your application requires post-processing logic, pytube allows you to specify an \"on download complete\" callback function:</p>\n<pre> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">convert_to_aac</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"n\">file_handler</span><span class=\"p\">):</span>\n         <span class=\"k\">return</span>  <span class=\"c1\"># do work</span>\n\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">register_on_complete_callback</span><span class=\"p\">(</span><span class=\"n\">convert_to_aac</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly, if your application requires on-download progress logic, pytube exposes a callback for this as well:</p>\n<pre> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">show_progress_bar</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"n\">chunk</span><span class=\"p\">,</span> <span class=\"n\">file_handler</span><span class=\"p\">,</span> <span class=\"n\">bytes_remaining</span><span class=\"p\">):</span>\n         <span class=\"k\">return</span>  <span class=\"c1\"># do work</span>\n\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">register_on_progress_callback</span><span class=\"p\">(</span><span class=\"n\">show_progress_bar</span><span class=\"p\">)</span>\n</pre>\n<h2>Command-line interface</h2>\n<p>pytube3 ships with a simple CLI interface for downloading videos, playlists, and captions.</p>\n<p>Let's start with downloading:</p>\n<pre>$ pytube3 http://youtube.com/watch?v<span class=\"o\">=</span>9bZkp7q19f0 --itag<span class=\"o\">=</span><span class=\"m\">18</span>\n</pre>\n<p>To view available streams:</p>\n<pre>$ pytube3 http://youtube.com/watch?v<span class=\"o\">=</span>9bZkp7q19f0 --list\n</pre>\n<p>The complete set of flags are:</p>\n<pre><code>usage: pytube3 [-h] [--version] [--itag ITAG] [-r RESOLUTION] [-l] [-v]\n               [--build-playback-report] [-c [CAPTION_CODE]] [-t TARGET]\n               [-a [AUDIO]] [-f [FFMPEG]]\n               [url]\n\nCommand line application to download youtube videos.\n\npositional arguments:\n  url                   The YouTube /watch or /playlist url\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --itag ITAG           The itag for the desired stream\n  -r RESOLUTION, --resolution RESOLUTION\n                        The resolution for the desired stream\n  -l, --list            The list option causes pytube cli to return a list of\n                        streams available to download\n  -v, --verbose         Verbosity level, use up to 4 to increase logging -vvvv\n  --build-playback-report\n                        Save the html and js to disk\n  -c [CAPTION_CODE], --caption-code [CAPTION_CODE]\n                        Download srt captions for given language code. Prints\n                        available language codes if no argument given\n  -t TARGET, --target TARGET\n                        The output directory for the downloaded stream.\n                        Default is current working directory\n  -a [AUDIO], --audio [AUDIO]\n                        Download the audio for a given URL at the highest\n                        bitrate availableDefaults to mp4 format if none is\n                        specified\n  -f [FFMPEG], --ffmpeg [FFMPEG]\n                        Downloads the audio and video stream for resolution\n                        providedIf no resolution is provided, downloads the\n                        best resolutionRuns the command line program ffmpeg to\n                        combine the audio and video\n</code></pre>\n<h2>Development</h2>\n<p><a href=\"https://deepsource.io/gh/hbmartin/pytube3/?ref=repository-badge\" rel=\"nofollow\"><img alt=\"DeepSource\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6837f002aa8f2f99f307c9febf81cee78d869751/68747470733a2f2f7374617469632e64656570736f757263652e696f2f64656570736f757263652d62616467652d6c696768742d6d696e692e737667\"></a>\n<a href=\"https://www.codacy.com/manual/hbmartin/pytube3?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=hbmartin/pytube3&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8887939ad5b094bd8e5c01c5f87158663574d0b3/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3533373934663036393833613436383239363230623332383463366135353936\"></a></p>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>To run code checking before a PR use <code>make test</code></p>\n<h4>Virtual environment</h4>\n<p>Virtual environment is setup with <a href=\"https://pipenv-fork.readthedocs.io/en/latest/\" rel=\"nofollow\">pipenv</a> and can be automatically activated with <a href=\"https://direnv.net/docs/installation.html\" rel=\"nofollow\">direnv</a></p>\n<h4>Code Formatting</h4>\n<p>This project is linted with <a href=\"https://github.com/PyCQA/pyflakes\" rel=\"nofollow\">pyflakes</a>, formatted with <a href=\"https://github.com/ambv/black\" rel=\"nofollow\">black</a>, and typed with <a href=\"https://mypy.readthedocs.io/en/latest/introduction.html\" rel=\"nofollow\">mypy</a></p>\n<h4>Code of Conduct</h4>\n<p>Treat other people with helpfulness, gratitude, and consideration! See the <a href=\"https://www.python.org/psf/codeofconduct/\" rel=\"nofollow\">Python Community Code of Conduct</a>.</p>\n<h2>GUIs and other libraries</h2>\n<ul>\n<li><a href=\"https://github.com/YouTubeDownload/YouTubeDownload\" rel=\"nofollow\">YouTubeDownload</a> - Featured GUI frontend for pytube3</li>\n<li><a href=\"https://github.com/GAO23/Pytube-GUI\" rel=\"nofollow\">Pytube-GUI</a> - Simple GUI frontend for pytube3</li>\n<li><a href=\"https://stackoverflow.com/questions/tagged/pytube\" rel=\"nofollow\">StackOverflow questions</a></li>\n<li><a href=\"https://pyslackers.com/web\" rel=\"nofollow\">PySlackers</a> - Python Slack group</li>\n</ul>\n\n          </div>"}, "last_serial": 6642148, "releases": {"9.5.10": [{"comment_text": "", "digests": {"md5": "7c65d3fd38f4e45474ac9ab66294effc", "sha256": "a56898767d6082e038ec6f312292a8467159942144a15d0cf8ea39eb3f8d4ef1"}, "downloads": -1, "filename": "pytube3-9.5.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7c65d3fd38f4e45474ac9ab66294effc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34592, "upload_time": "2020-01-25T18:13:30", "upload_time_iso_8601": "2020-01-25T18:13:30.006096Z", "url": "https://files.pythonhosted.org/packages/a8/55/ad64dcc00c24d1c3851ba45baed041e69c7f7cf5909b2f477c63732087ba/pytube3-9.5.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98891663056eee5f11cf7cdce11888b2", "sha256": "3c80aaed7524c2ddfb9930e33dbcb2f4838e22c910d40576e38a69c196050e43"}, "downloads": -1, "filename": "pytube3-9.5.10.tar.gz", "has_sig": false, "md5_digest": "98891663056eee5f11cf7cdce11888b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 39032, "upload_time": "2020-01-25T18:13:32", "upload_time_iso_8601": "2020-01-25T18:13:32.787380Z", "url": "https://files.pythonhosted.org/packages/93/37/13de55348185878e7b0767c56e2740b00b9b1ca03f9789fd636e4ddf975b/pytube3-9.5.10.tar.gz", "yanked": false}], "9.5.11": [{"comment_text": "", "digests": {"md5": "ad12f7963e0b483871c0f4ca06b66b64", "sha256": "67a1cd48e7398cc1cb1ef5d692962c497fe4bb517d79d7d76ecf5d6f249fc653"}, "downloads": -1, "filename": "pytube3-9.5.11-py3-none-any.whl", "has_sig": false, "md5_digest": "ad12f7963e0b483871c0f4ca06b66b64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35534, "upload_time": "2020-01-27T18:28:09", "upload_time_iso_8601": "2020-01-27T18:28:09.880532Z", "url": "https://files.pythonhosted.org/packages/a8/f4/17a0da40dae4a67b11c0e01fe00954180d9a1c63858a99cfdbcab02c963d/pytube3-9.5.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aef780ae8de8da204a67b91df81ddeb", "sha256": "ed399eb22b3508a20d6374e419ba55369a15d518fca943e7811b1cf749cad010"}, "downloads": -1, "filename": "pytube3-9.5.11.tar.gz", "has_sig": false, "md5_digest": "4aef780ae8de8da204a67b91df81ddeb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40845, "upload_time": "2020-01-27T18:28:11", "upload_time_iso_8601": "2020-01-27T18:28:11.850040Z", "url": "https://files.pythonhosted.org/packages/40/12/c1656fea742ee8477e9f86242d97d2741fb287c73500d1d957391e19a66b/pytube3-9.5.11.tar.gz", "yanked": false}], "9.5.12": [{"comment_text": "", "digests": {"md5": "b25e940bb2f1e1ae3c1b1d6aff3272b2", "sha256": "00c336d37f496f054aca8ba4bf31ee8d35ff50ef393271f7eb0e18d2584126cc"}, "downloads": -1, "filename": "pytube3-9.5.12-py3-none-any.whl", "has_sig": false, "md5_digest": "b25e940bb2f1e1ae3c1b1d6aff3272b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36437, "upload_time": "2020-01-29T20:56:46", "upload_time_iso_8601": "2020-01-29T20:56:46.154778Z", "url": "https://files.pythonhosted.org/packages/74/66/ff6b6d1184f3d875a099b924a0294b6194419849d359f09f864172e3b2f6/pytube3-9.5.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d36b6a7d4973463cb64b4f62640e77de", "sha256": "b94fa6ac56ab71cba1a712df0ce7d9f40e20757799b3b6c957dd920557cb6658"}, "downloads": -1, "filename": "pytube3-9.5.12.tar.gz", "has_sig": false, "md5_digest": "d36b6a7d4973463cb64b4f62640e77de", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42517, "upload_time": "2020-01-29T20:56:47", "upload_time_iso_8601": "2020-01-29T20:56:47.956120Z", "url": "https://files.pythonhosted.org/packages/c4/2a/f857cb833dabe9b0cac761778528beb19c3e02c39ab2ce2223fa21d080b9/pytube3-9.5.12.tar.gz", "yanked": false}], "9.5.13": [{"comment_text": "", "digests": {"md5": "93458f606126f272cd14987fea9945a7", "sha256": "555fb4ba8fc8f21f06b72cac7ff6a7e9713a9e5e8da8c90604d83f3de621b295"}, "downloads": -1, "filename": "pytube3-9.5.13-py3-none-any.whl", "has_sig": false, "md5_digest": "93458f606126f272cd14987fea9945a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36664, "upload_time": "2020-02-02T16:08:25", "upload_time_iso_8601": "2020-02-02T16:08:25.410557Z", "url": "https://files.pythonhosted.org/packages/59/d4/040c9d4e0479441b9e9de40b4f4004aaaa094663db3ba8f843e925b54f34/pytube3-9.5.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c649744e2e46f2471167e7eefbb6d26a", "sha256": "729ba7b7aaddc413769876859bd0d45f52703b2d7216d627c67a87e460fd4ed1"}, "downloads": -1, "filename": "pytube3-9.5.13.tar.gz", "has_sig": false, "md5_digest": "c649744e2e46f2471167e7eefbb6d26a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42912, "upload_time": "2020-02-02T16:08:27", "upload_time_iso_8601": "2020-02-02T16:08:27.466784Z", "url": "https://files.pythonhosted.org/packages/b2/13/1f9cd2d76a0e2247077d2a43586993e7b1fc31e0397905e6c50e5ccc57cc/pytube3-9.5.13.tar.gz", "yanked": false}], "9.5.4": [{"comment_text": "", "digests": {"md5": "3922898cd08c22dfda283eeea49bd331", "sha256": "98b32b446a568723a1a61c8aac5dd621ca3b426874402e61f6b40cfc9caa4347"}, "downloads": -1, "filename": "pytube3-9.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3922898cd08c22dfda283eeea49bd331", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31524, "upload_time": "2020-01-15T05:45:15", "upload_time_iso_8601": "2020-01-15T05:45:15.826681Z", "url": "https://files.pythonhosted.org/packages/9e/65/8253172b3cdaa29d5cccbab8008105358760a48932ab489719f2924fb61f/pytube3-9.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1594db6911864ed35213c9689c12ba9", "sha256": "5add044a57cb0972065f12d2e8792a190fc164516fc6856fd0068181e21e8d91"}, "downloads": -1, "filename": "pytube3-9.5.4.tar.gz", "has_sig": false, "md5_digest": "f1594db6911864ed35213c9689c12ba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33891, "upload_time": "2020-01-15T05:45:18", "upload_time_iso_8601": "2020-01-15T05:45:18.602943Z", "url": "https://files.pythonhosted.org/packages/71/b7/edf3a2e0a0a20304a352eabede1f03a1aaccd0e50479d67550f771ae77a6/pytube3-9.5.4.tar.gz", "yanked": false}], "9.5.5": [{"comment_text": "", "digests": {"md5": "7560e66ec6b00c90fa85b8f9daca48de", "sha256": "d6b1a2d7c86e6f34155746bada7898dc55a9588c28d0ff27cc37f13c20ad9bcc"}, "downloads": -1, "filename": "pytube3-9.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7560e66ec6b00c90fa85b8f9daca48de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31729, "upload_time": "2020-01-15T16:38:13", "upload_time_iso_8601": "2020-01-15T16:38:13.733412Z", "url": "https://files.pythonhosted.org/packages/9c/9b/3506ed3bf4c28d45c06cb3c7b72328d583c4620b9a1efe0fe5b46ca2deae/pytube3-9.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5774fc736dcc0b74c6cdd255de99d0a", "sha256": "fed76417ce311a12d1ccf00d378bf8f1c3f59a047af2c256cf43265a0f0d8dcd"}, "downloads": -1, "filename": "pytube3-9.5.5.tar.gz", "has_sig": false, "md5_digest": "a5774fc736dcc0b74c6cdd255de99d0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33999, "upload_time": "2020-01-15T16:38:16", "upload_time_iso_8601": "2020-01-15T16:38:16.739085Z", "url": "https://files.pythonhosted.org/packages/06/7c/e0eb0ad5f115d7cecffaa8926770d09aaef63340a8cb69d4821262be1e93/pytube3-9.5.5.tar.gz", "yanked": false}], "9.5.6": [{"comment_text": "", "digests": {"md5": "09b0d4ebd76eef5d98001dfd1e47b51f", "sha256": "978da09121b5414082f1a84d867cf44fde3d59e2ef9e9d834bf93812e2914532"}, "downloads": -1, "filename": "pytube3-9.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "09b0d4ebd76eef5d98001dfd1e47b51f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33446, "upload_time": "2020-01-17T01:57:01", "upload_time_iso_8601": "2020-01-17T01:57:01.868825Z", "url": "https://files.pythonhosted.org/packages/8d/04/b81597b13c3fc91935115e433aa63106815c322731d3de3c2a509d1600a4/pytube3-9.5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20c4b6791a791714f51e78f4b39e6a7e", "sha256": "67c476158736d832a799eb948734bab18af7678fb5d49b5cd778c88b9f61e99c"}, "downloads": -1, "filename": "pytube3-9.5.6.tar.gz", "has_sig": false, "md5_digest": "20c4b6791a791714f51e78f4b39e6a7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 36013, "upload_time": "2020-01-17T01:57:04", "upload_time_iso_8601": "2020-01-17T01:57:04.073945Z", "url": "https://files.pythonhosted.org/packages/1f/40/9ef746caebda7b81b3993647fcfde0ba9e294897b89b28d39321676375c1/pytube3-9.5.6.tar.gz", "yanked": false}], "9.5.7": [{"comment_text": "", "digests": {"md5": "32dad3d9b418e141a8f00f2a4b2fcbbd", "sha256": "2a7033d9249fe2b42c2a10b6d57f73a40fc75a9b75a3dc7e304034aa5333032c"}, "downloads": -1, "filename": "pytube3-9.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "32dad3d9b418e141a8f00f2a4b2fcbbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33405, "upload_time": "2020-01-21T02:08:06", "upload_time_iso_8601": "2020-01-21T02:08:06.800349Z", "url": "https://files.pythonhosted.org/packages/2e/08/6b2e7ee2b13bf7e937bf6236fc9b479e8228e8b2160dde2c808fc2ec76fb/pytube3-9.5.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a66dfa6409630a602b7856b32febf30", "sha256": "a1bb9a30a8669bba350e37544793e31a1dfacc90a74af3fb0e2993fe99ace2d5"}, "downloads": -1, "filename": "pytube3-9.5.7.tar.gz", "has_sig": false, "md5_digest": "7a66dfa6409630a602b7856b32febf30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35947, "upload_time": "2020-01-21T02:08:08", "upload_time_iso_8601": "2020-01-21T02:08:08.894850Z", "url": "https://files.pythonhosted.org/packages/71/21/bd3a488d3793084a74c5551f9fd32a972513e72b1d513d596c0452341f4b/pytube3-9.5.7.tar.gz", "yanked": false}], "9.5.8": [{"comment_text": "", "digests": {"md5": "1fa338097c7d7b49d61a2d07f0a336ad", "sha256": "d39fa8af475564f4a1cd62d5ee12997d1bdb396ec09bdadc016ce12a8274ddd8"}, "downloads": -1, "filename": "pytube3-9.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "1fa338097c7d7b49d61a2d07f0a336ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33327, "upload_time": "2020-01-21T19:30:19", "upload_time_iso_8601": "2020-01-21T19:30:19.859168Z", "url": "https://files.pythonhosted.org/packages/e5/58/07d08e710d49d0cd2185fac20f3c933cc6ec5146ab34ce20fedc0e9b1f54/pytube3-9.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83db56d99d56ae3ca6aae1b1d119910b", "sha256": "9c5539043115ed2fb578e2d4bb74d59a5bfa8ac75a8f4711bc6de3441854a71e"}, "downloads": -1, "filename": "pytube3-9.5.8.tar.gz", "has_sig": false, "md5_digest": "83db56d99d56ae3ca6aae1b1d119910b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 36031, "upload_time": "2020-01-21T19:30:22", "upload_time_iso_8601": "2020-01-21T19:30:22.046941Z", "url": "https://files.pythonhosted.org/packages/d4/bf/dfc95cbf472faa79c64dbc32f8bd465178942c5cd42878e2f8bbf2e60e84/pytube3-9.5.8.tar.gz", "yanked": false}], "9.5.9": [{"comment_text": "", "digests": {"md5": "120a9d6d710bdcd658c3ea3f7fd4c93d", "sha256": "33d557ebced4a7346590a128191850b0a208bc35281e3919e41b2ee1ba93b41c"}, "downloads": -1, "filename": "pytube3-9.5.9-py3-none-any.whl", "has_sig": false, "md5_digest": "120a9d6d710bdcd658c3ea3f7fd4c93d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34573, "upload_time": "2020-01-23T16:37:50", "upload_time_iso_8601": "2020-01-23T16:37:50.084183Z", "url": "https://files.pythonhosted.org/packages/61/85/b41ffaee9b1fef430540855b1145015f3f492cb7a601db96e7f72e773822/pytube3-9.5.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56d806839bf69dd0245e636fa4c9afb3", "sha256": "e6c048e5d160c6a213faf3c00606bdd3bcfd8be8cb2f1a770944fa58c02d5112"}, "downloads": -1, "filename": "pytube3-9.5.9.tar.gz", "has_sig": false, "md5_digest": "56d806839bf69dd0245e636fa4c9afb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38980, "upload_time": "2020-01-23T16:37:52", "upload_time_iso_8601": "2020-01-23T16:37:52.191564Z", "url": "https://files.pythonhosted.org/packages/3d/c9/aa9efa44498ea909ba6a0d6fd9db56e816170e67c5d88d448261c26a134d/pytube3-9.5.9.tar.gz", "yanked": false}], "9.6.0": [{"comment_text": "", "digests": {"md5": "ec8914de6951f32655e222c6889eb488", "sha256": "076a4f4662909df9fd1b3ed3f054e2db4388be80d4b8331f9b3b2382b8713fc8"}, "downloads": -1, "filename": "pytube3-9.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec8914de6951f32655e222c6889eb488", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36104, "upload_time": "2020-02-06T23:36:27", "upload_time_iso_8601": "2020-02-06T23:36:27.725961Z", "url": "https://files.pythonhosted.org/packages/a1/8a/a3889595e9a8ded6949b80a147cd0669e231aabe57bd73da6e86c930e684/pytube3-9.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19e4dad55fbc4fde0b8d0ad8a4dff38c", "sha256": "c4db81a61f068a7457c297efbf552200a7fd0254c724cb73db9c38394cd6c079"}, "downloads": -1, "filename": "pytube3-9.6.0.tar.gz", "has_sig": false, "md5_digest": "19e4dad55fbc4fde0b8d0ad8a4dff38c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43107, "upload_time": "2020-02-06T23:36:30", "upload_time_iso_8601": "2020-02-06T23:36:30.000792Z", "url": "https://files.pythonhosted.org/packages/80/4b/16c11d4723290902de7071aba5fd3303a94590644e3e8047b776c65d1f58/pytube3-9.6.0.tar.gz", "yanked": false}], "9.6.1": [{"comment_text": "", "digests": {"md5": "fd83cea69c850fa6a6c2ebfe91f2452c", "sha256": "e4dfe195e0606ba6900e0890aa645109e2cfcdde9dbcc529a0bdc5e209cecd1b"}, "downloads": -1, "filename": "pytube3-9.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd83cea69c850fa6a6c2ebfe91f2452c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36045, "upload_time": "2020-02-10T20:35:30", "upload_time_iso_8601": "2020-02-10T20:35:30.393160Z", "url": "https://files.pythonhosted.org/packages/1e/42/9d1231eedd8827ee8afa1f834506206227e97e0f5baba4bb6970901c3a33/pytube3-9.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d59d75d9fe61baacac0d69d28991051", "sha256": "c313dfb02447f671a181fe1578d6e2a8e1cd729abf41dc976fd95755a90a24de"}, "downloads": -1, "filename": "pytube3-9.6.1.tar.gz", "has_sig": false, "md5_digest": "9d59d75d9fe61baacac0d69d28991051", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43172, "upload_time": "2020-02-10T20:35:32", "upload_time_iso_8601": "2020-02-10T20:35:32.042782Z", "url": "https://files.pythonhosted.org/packages/04/87/911f4a1e85be674f21fdb0b8d067c5bdf58fa40f2642ba9d616f2cdffab1/pytube3-9.6.1.tar.gz", "yanked": false}], "9.6.2": [{"comment_text": "", "digests": {"md5": "9ef06ec931813e8f9b3a17b15ba68889", "sha256": "a5d1205db408464d5b7e5d6e0d1bac602b1d74bdcde5545b03cdf3d4ba902903"}, "downloads": -1, "filename": "pytube3-9.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9ef06ec931813e8f9b3a17b15ba68889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38223, "upload_time": "2020-02-14T18:06:14", "upload_time_iso_8601": "2020-02-14T18:06:14.971233Z", "url": "https://files.pythonhosted.org/packages/4f/24/42b3005df9240248b82e135e8c558056cdcf8a4463dd5c5666d889290765/pytube3-9.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "721db7da9e6bff52136fb59a3a3c68dc", "sha256": "90d1e5b0f2379b9412aa24c6733a8c827d60b6ec99fe376dcbd42af037f04e5e"}, "downloads": -1, "filename": "pytube3-9.6.2.tar.gz", "has_sig": false, "md5_digest": "721db7da9e6bff52136fb59a3a3c68dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47630, "upload_time": "2020-02-14T18:06:16", "upload_time_iso_8601": "2020-02-14T18:06:16.730898Z", "url": "https://files.pythonhosted.org/packages/6b/d2/0ab1e209167074f40b0714f3ff6a3d1979f28cac929d7b7b0bfb8d31fd4f/pytube3-9.6.2.tar.gz", "yanked": false}], "9.6.3": [{"comment_text": "", "digests": {"md5": "9346cbd65d1f7db75bfe406958a96948", "sha256": "c10d5b7d045d82245a5dae34eb42d65b677f55b32b14354fd4e7ac0f43ce641c"}, "downloads": -1, "filename": "pytube3-9.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9346cbd65d1f7db75bfe406958a96948", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38286, "upload_time": "2020-02-16T19:01:36", "upload_time_iso_8601": "2020-02-16T19:01:36.932720Z", "url": "https://files.pythonhosted.org/packages/a1/a9/3d02b6942cde5eeec69e3211a168e771a4e771bd20a4ff56ce9d3457cf0b/pytube3-9.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44e2b57f7b14f471ead3ef71d830e868", "sha256": "c2232e5f644e432dd2d063d0dfe03f8bef080625b7db95beeb6025d3c2ca2939"}, "downloads": -1, "filename": "pytube3-9.6.3.tar.gz", "has_sig": false, "md5_digest": "44e2b57f7b14f471ead3ef71d830e868", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 47796, "upload_time": "2020-02-16T19:01:38", "upload_time_iso_8601": "2020-02-16T19:01:38.902138Z", "url": "https://files.pythonhosted.org/packages/03/fb/90a0b6be64bce1653f9e0ad641f8d4fb73b42e92d51ccf2a7202df3bdb45/pytube3-9.6.3.tar.gz", "yanked": false}], "9.6.4": [{"comment_text": "", "digests": {"md5": "c002af91d2e7d291e2d7009284942799", "sha256": "a02694b097c897a2afc68777e142a3d5268046960d01d4e01ac0584fda4499b1"}, "downloads": -1, "filename": "pytube3-9.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c002af91d2e7d291e2d7009284942799", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38524, "upload_time": "2020-02-16T19:38:43", "upload_time_iso_8601": "2020-02-16T19:38:43.129129Z", "url": "https://files.pythonhosted.org/packages/de/86/198092763646eac7abd2063192ab44ea44ad8fd6d6f3ad8586b38afcd52a/pytube3-9.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f26c6cb03cd2f3db257b18fda2ab5d93", "sha256": "98ae480a2d637572582e5c8b2e90fb7495f6d3a56daaffa7b2055113380f7d61"}, "downloads": -1, "filename": "pytube3-9.6.4.tar.gz", "has_sig": false, "md5_digest": "f26c6cb03cd2f3db257b18fda2ab5d93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48061, "upload_time": "2020-02-16T19:38:44", "upload_time_iso_8601": "2020-02-16T19:38:44.767229Z", "url": "https://files.pythonhosted.org/packages/52/e6/e195069c72bbb71c53885cf41dc2b61c79b47a0e77da994ad220e3ed4766/pytube3-9.6.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c002af91d2e7d291e2d7009284942799", "sha256": "a02694b097c897a2afc68777e142a3d5268046960d01d4e01ac0584fda4499b1"}, "downloads": -1, "filename": "pytube3-9.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c002af91d2e7d291e2d7009284942799", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38524, "upload_time": "2020-02-16T19:38:43", "upload_time_iso_8601": "2020-02-16T19:38:43.129129Z", "url": "https://files.pythonhosted.org/packages/de/86/198092763646eac7abd2063192ab44ea44ad8fd6d6f3ad8586b38afcd52a/pytube3-9.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f26c6cb03cd2f3db257b18fda2ab5d93", "sha256": "98ae480a2d637572582e5c8b2e90fb7495f6d3a56daaffa7b2055113380f7d61"}, "downloads": -1, "filename": "pytube3-9.6.4.tar.gz", "has_sig": false, "md5_digest": "f26c6cb03cd2f3db257b18fda2ab5d93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48061, "upload_time": "2020-02-16T19:38:44", "upload_time_iso_8601": "2020-02-16T19:38:44.767229Z", "url": "https://files.pythonhosted.org/packages/52/e6/e195069c72bbb71c53885cf41dc2b61c79b47a0e77da994ad220e3ed4766/pytube3-9.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:57 2020"}