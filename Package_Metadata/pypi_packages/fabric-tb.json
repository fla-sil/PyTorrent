{"info": {"author": "Lethe", "author_email": "lethe30003000@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Clustering", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration"], "description": "----\n\nFabric is a Python (2.5-2.7) library and command-line tool for\nstreamlining the use of SSH for application deployment or systems\nadministration tasks.\n\nIt provides a basic suite of operations for executing local or remote shell\ncommands (normally or via ``sudo``) and uploading/downloading files, as well as\nauxiliary functionality such as prompting the running user for input, or\naborting execution.\n \nTypical use involves creating a Python module containing one or more functions,\nthen executing them via the ``fab`` command-line tool. Below is a small but\ncomplete \"fabfile\" containing a single task:\n\n.. code-block:: python\n\n    from fabric.api import run\n\n    def host_type():\n        run('uname -s')\n\nIf you save the above as ``fabfile.py`` (the default module that\n``fab`` loads), you can run the tasks defined in it on one or more\nservers, like so::\n\n    $ fab -H localhost,linuxbox host_type\n    [localhost] run: uname -s\n    [localhost] out: Darwin\n    [linuxbox] run: uname -s\n    [linuxbox] out: Linux\n\n    Done.\n    Disconnecting from localhost... done.\n    Disconnecting from linuxbox... done.\n\nIn addition to use via the ``fab`` tool, Fabric's components may be imported\ninto other Python code, providing a Pythonic interface to the SSH protocol\nsuite at a higher level than that provided by e.g. the ``Paramiko`` library\n(which Fabric itself uses.)\n\n\n----", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://testbird.com", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "fabric-tb", "package_url": "https://pypi.org/project/fabric-tb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fabric-tb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://testbird.com"}, "release_url": "https://pypi.org/project/fabric-tb/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Based on Fabric, use ansible-like config files.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ----<br><br>Fabric is a Python (2.5-2.7) library and command-line tool for<br>streamlining the use of SSH for application deployment or systems<br>administration tasks.<br><br>It provides a basic suite of operations for executing local or remote shell<br>commands (normally or via ``sudo``) and uploading/downloading files, as well as<br>auxiliary functionality such as prompting the running user for input, or<br>aborting execution.<br> <br>Typical use involves creating a Python module containing one or more functions,<br>then executing them via the ``fab`` command-line tool. Below is a small but<br>complete \"fabfile\" containing a single task:<br><br>.. code-block:: python<br><br>    from fabric.api import run<br><br>    def host_type():<br>        run('uname -s')<br><br>If you save the above as ``fabfile.py`` (the default module that<br>``fab`` loads), you can run the tasks defined in it on one or more<br>servers, like so::<br><br>    $ fab -H localhost,linuxbox host_type<br>    [localhost] run: uname -s<br>    [localhost] out: Darwin<br>    [linuxbox] run: uname -s<br>    [linuxbox] out: Linux<br><br>    Done.<br>    Disconnecting from localhost... done.<br>    Disconnecting from linuxbox... done.<br><br>In addition to use via the ``fab`` tool, Fabric's components may be imported<br>into other Python code, providing a Pythonic interface to the SSH protocol<br>suite at a higher level than that provided by e.g. the ``Paramiko`` library<br>(which Fabric itself uses.)<br><br><br>----\n          </div>"}, "last_serial": 1905893, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d140a77060f5b85b197a09b018a8dc6d", "sha256": "cc339f0ed04c944d428e290f96d2ac12f072457dbe401ed6940d4c7c26d0c6a6"}, "downloads": -1, "filename": "fabric-tb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d140a77060f5b85b197a09b018a8dc6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210450, "upload_time": "2016-01-15T10:19:38", "upload_time_iso_8601": "2016-01-15T10:19:38.994515Z", "url": "https://files.pythonhosted.org/packages/ed/b3/0da329ab199ce718e22873fec5429c3e85252b20d1c810d2470c98fdb42b/fabric-tb-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d140a77060f5b85b197a09b018a8dc6d", "sha256": "cc339f0ed04c944d428e290f96d2ac12f072457dbe401ed6940d4c7c26d0c6a6"}, "downloads": -1, "filename": "fabric-tb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d140a77060f5b85b197a09b018a8dc6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210450, "upload_time": "2016-01-15T10:19:38", "upload_time_iso_8601": "2016-01-15T10:19:38.994515Z", "url": "https://files.pythonhosted.org/packages/ed/b3/0da329ab199ce718e22873fec5429c3e85252b20d1c810d2470c98fdb42b/fabric-tb-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:11 2020"}