{"info": {"author": "Faculty", "author_email": "opensource@faculty.ai", "bugtrack_url": null, "classifiers": [], "description": "hiplot-mlflow\n=============\n\nA  `HiPlot <https://facebookresearch.github.io/hiplot/index.html>`_ experiment\nfetcher plugin for `MLflow <https://mlflow.org/>`_, to help visualise your\ntracked experiments.\n\nInstallation\n------------\n\nInstall this library with ``pip`` as:\n\n.. code-block:: sh\n\n   pip install hiplot_mlflow\n\nUsage\n-----\n\nYou can visualise experiments either in a Jupyter notebook or using HiPlot's\nbuilt in server.\n\nNotebook\n~~~~~~~~\n\nIn a Jupyter notebook, use ``hiplot_mlflow.fetch`` to retrieve an MLflow\nexperiment by name, and display it with HiPlot:\n\n.. code-block:: python\n\n   import hiplot_mlflow\n   experiments = hiplot_mlflow.fetch(\"my-lovely-experiment\")\n   experiments.display(force_full_width=True)\n\nYou can also retrieve experiments by their MLflow experiment ID:\n\n.. code-block:: python\n\n   experiment = hiplot_mlflow.fetch_by_id(0)\n\nBy default, MLflow tags are not shown (only MLflow metrics and parameters are\nshown). To display them, pass ``include_tag=True`` to either of the fetch\nfunctions, for example:\n\n.. code-block:: python\n\n   experiment = hiplot_mlflow.fetch(\"my-lovely-experiment\", include_tags=True)\n\n.. image:: images/notebook_name.png\n   :alt: Loading HiPlot in a notebook\n\nSee more about what you can do with the returned ``hiplot.Experiment`` values\nin the `HiPlot documentation\n<https://facebookresearch.github.io/hiplot/experiment_settings.html>`_.\n\nHiPlot Server\n~~~~~~~~~~~~~\n\nTo use `HiPlot's built in webserver\n<https://facebookresearch.github.io/hiplot/tuto_webserver.html>`_ with\n``hiplot-mlflow``, you can start it up with the custom `experiment fetcher\n<https://facebookresearch.github.io/hiplot/tuto_webserver.html#experiments-uri>`_\nimplemented by this package:\n\n.. code-block:: sh\n\n   hiplot hiplot_mlflow.fetch_by_uri\n\nYou can then use the ``mlflow://`` schema to access MLflow experiments in\nHiPlot by either experiment or name, for example::\n\n   mlflow://name/experiment-name\n   mlflow://id/0\n\n.. image:: images/server_name.png\n   :alt: Loading HiPlot server with experiment name\n\nYou can also add ``tags=yes`` as a query string parameter to include tags in\nthe output, for example::\n\n   mlflow://name/experiment-name?tags=yes\n\nYou can also use the `multiple experiments\n<https://facebookresearch.github.io/hiplot/tuto_webserver.html#compare-multiple-experiments>`_\nloading syntax. Either the dictionary format (to define your own labels)::\n\n   multi://{\n       \"first-experiment\": \"mlflow://id/1\",\n       \"another-experiment\": \"mlflow://name/another-experiment?tags=yes\"\n   }\n\nor list format::\n\n   multi://[\n       \"mlflow://id/1\",\n       \"mlflow://name/another-experiment?tags=yes\"\n   ]\n\n.. image:: images/server_multi.png\n   :alt: Multiple experiments in HiPlot server\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/facultyai/hiplot-mlflow", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "hiplot-mlflow", "package_url": "https://pypi.org/project/hiplot-mlflow/", "platform": "", "project_url": "https://pypi.org/project/hiplot-mlflow/", "project_urls": {"Homepage": "https://github.com/facultyai/hiplot-mlflow"}, "release_url": "https://pypi.org/project/hiplot-mlflow/0.1.0/", "requires_dist": ["hiplot", "mlflow", "numpy", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "flake8-black ; extra == 'dev'", "mypy ; extra == 'dev'", "pytest ; extra == 'dev'", "tox ; extra == 'dev'"], "requires_python": "", "summary": "HiPlot fetcher plugin for MLflow experiment tracking.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A  <a href=\"https://facebookresearch.github.io/hiplot/index.html\" rel=\"nofollow\">HiPlot</a> experiment\nfetcher plugin for <a href=\"https://mlflow.org/\" rel=\"nofollow\">MLflow</a>, to help visualise your\ntracked experiments.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install this library with <tt>pip</tt> as:</p>\n<pre>pip install hiplot_mlflow\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can visualise experiments either in a Jupyter notebook or using HiPlot\u2019s\nbuilt in server.</p>\n<div id=\"notebook\">\n<h3>Notebook</h3>\n<p>In a Jupyter notebook, use <tt>hiplot_mlflow.fetch</tt> to retrieve an MLflow\nexperiment by name, and display it with HiPlot:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hiplot_mlflow</span>\n<span class=\"n\">experiments</span> <span class=\"o\">=</span> <span class=\"n\">hiplot_mlflow</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"my-lovely-experiment\"</span><span class=\"p\">)</span>\n<span class=\"n\">experiments</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">force_full_width</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>You can also retrieve experiments by their MLflow experiment ID:</p>\n<pre><span class=\"n\">experiment</span> <span class=\"o\">=</span> <span class=\"n\">hiplot_mlflow</span><span class=\"o\">.</span><span class=\"n\">fetch_by_id</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>By default, MLflow tags are not shown (only MLflow metrics and parameters are\nshown). To display them, pass <tt>include_tag=True</tt> to either of the fetch\nfunctions, for example:</p>\n<pre><span class=\"n\">experiment</span> <span class=\"o\">=</span> <span class=\"n\">hiplot_mlflow</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"my-lovely-experiment\"</span><span class=\"p\">,</span> <span class=\"n\">include_tags</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"Loading HiPlot in a notebook\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5698a2d10ddee6dad1fd4efecde8a42f5acb9b9/696d616765732f6e6f7465626f6f6b5f6e616d652e706e67\">\n<p>See more about what you can do with the returned <tt>hiplot.Experiment</tt> values\nin the <a href=\"https://facebookresearch.github.io/hiplot/experiment_settings.html\" rel=\"nofollow\">HiPlot documentation</a>.</p>\n</div>\n<div id=\"hiplot-server\">\n<h3>HiPlot Server</h3>\n<p>To use <a href=\"https://facebookresearch.github.io/hiplot/tuto_webserver.html\" rel=\"nofollow\">HiPlot\u2019s built in webserver</a> with\n<tt><span class=\"pre\">hiplot-mlflow</span></tt>, you can start it up with the custom <a href=\"https://facebookresearch.github.io/hiplot/tuto_webserver.html#experiments-uri\" rel=\"nofollow\">experiment fetcher</a>\nimplemented by this package:</p>\n<pre>hiplot hiplot_mlflow.fetch_by_uri\n</pre>\n<p>You can then use the <tt><span class=\"pre\">mlflow://</span></tt> schema to access MLflow experiments in\nHiPlot by either experiment or name, for example:</p>\n<pre>mlflow://name/experiment-name\nmlflow://id/0\n</pre>\n<img alt=\"Loading HiPlot server with experiment name\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58c347eace3d63c9b6c2af229adec7bcef0396a0/696d616765732f7365727665725f6e616d652e706e67\">\n<p>You can also add <tt>tags=yes</tt> as a query string parameter to include tags in\nthe output, for example:</p>\n<pre>mlflow://name/experiment-name?tags=yes\n</pre>\n<p>You can also use the <a href=\"https://facebookresearch.github.io/hiplot/tuto_webserver.html#compare-multiple-experiments\" rel=\"nofollow\">multiple experiments</a>\nloading syntax. Either the dictionary format (to define your own labels):</p>\n<pre>multi://{\n    \"first-experiment\": \"mlflow://id/1\",\n    \"another-experiment\": \"mlflow://name/another-experiment?tags=yes\"\n}\n</pre>\n<p>or list format:</p>\n<pre>multi://[\n    \"mlflow://id/1\",\n    \"mlflow://name/another-experiment?tags=yes\"\n]\n</pre>\n<img alt=\"Multiple experiments in HiPlot server\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/752c6f25dbebe075a87ab338049c01e57ab19dfc/696d616765732f7365727665725f6d756c74692e706e67\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 7171647, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "115cef0af2dea7dd309a01d610c7a796", "sha256": "46a45ae9cf65391ec9f0f85e87e3b6ad1a87153a36c9275747ead94e61cb6fb7"}, "downloads": -1, "filename": "hiplot_mlflow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "115cef0af2dea7dd309a01d610c7a796", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8050, "upload_time": "2020-05-05T12:31:06", "upload_time_iso_8601": "2020-05-05T12:31:06.841841Z", "url": "https://files.pythonhosted.org/packages/b3/05/50dcaa938689a727c2a32f23069b91a1c66acd55dc04ecf4b359d425f7f9/hiplot_mlflow-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "689bf41344793d86f595c79b7883ce82", "sha256": "cd3af2659d2ea53978d02d364647c5b4120d3f3518273f5e31a2971c66b2db82"}, "downloads": -1, "filename": "hiplot-mlflow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "689bf41344793d86f595c79b7883ce82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1827897, "upload_time": "2020-05-05T12:31:09", "upload_time_iso_8601": "2020-05-05T12:31:09.658804Z", "url": "https://files.pythonhosted.org/packages/8e/2f/8feaff5e464db7e3769543843a4e3b48c9b145975b90252a12109e7b6ee7/hiplot-mlflow-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "115cef0af2dea7dd309a01d610c7a796", "sha256": "46a45ae9cf65391ec9f0f85e87e3b6ad1a87153a36c9275747ead94e61cb6fb7"}, "downloads": -1, "filename": "hiplot_mlflow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "115cef0af2dea7dd309a01d610c7a796", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8050, "upload_time": "2020-05-05T12:31:06", "upload_time_iso_8601": "2020-05-05T12:31:06.841841Z", "url": "https://files.pythonhosted.org/packages/b3/05/50dcaa938689a727c2a32f23069b91a1c66acd55dc04ecf4b359d425f7f9/hiplot_mlflow-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "689bf41344793d86f595c79b7883ce82", "sha256": "cd3af2659d2ea53978d02d364647c5b4120d3f3518273f5e31a2971c66b2db82"}, "downloads": -1, "filename": "hiplot-mlflow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "689bf41344793d86f595c79b7883ce82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1827897, "upload_time": "2020-05-05T12:31:09", "upload_time_iso_8601": "2020-05-05T12:31:09.658804Z", "url": "https://files.pythonhosted.org/packages/8e/2f/8feaff5e464db7e3769543843a4e3b48c9b145975b90252a12109e7b6ee7/hiplot-mlflow-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:09 2020"}