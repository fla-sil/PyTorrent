{"info": {"author": "David Winterbottom", "author_email": "david.winterbottom@tangentlabs.co.uk", "bugtrack_url": null, "classifiers": [], "description": "=========================\nTesting XML with unittest\n=========================\n\nThis library is a set of helper methods for testing XML with Python's unittest library.\nThe new assertion methods use `XPath`_ to select the XML elements that assertions are being\nmade about.\n\n.. _`XPath`: http://en.wikipedia.org/wiki/XPath\n\nSample usage\n------------\n\nTo use these additional assertions, simply mix the ``xmltest.XMLAssertions`` class\ninto your test class::\n\n    import unittest\n    from xmltest import XMLAssertions\n\n    class MyTestCase(unittest.TestCase, XMLAssertions):\n        pass\n\nNow suppose you have the following XML string that you wish to examine::\n\n    response_xml = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <Response>\n        <CardTxn>\n            <authcode>060642</authcode>\n            <card_scheme>Switch</card_scheme>\n            <issuer country=\"UK\">HSBC</issuer>\n        </CardTxn>\n        <reference>3000000088888888</reference>\n        <merchantreference>1000001</merchantreference>\n        <mode>LIVE</mode>\n        <reason>ACCEPTED</reason>\n        <status>1</status>\n        <time>1071567305</time>\n    </Response>\"\"\"\n\nAssert the number of elements matching an XPath query::\n\n    self.assertXPathNodeCount(response_xml, 1, 'CardTxn/issuer[@country=\"UK\"]')\n    self.assertXPathNodeCount(response_xml, 1, 'status')\n\nAssert the value of a particular element::\n\n    self.assertXPathNodeText(response_xml, 'ACCEPTED', 'reason')\n\nAssert the attribute values of an element::\n\n    self.assertXPathNodeAttributes(xml, {'country': 'UK'}, 'CardTxn/issuer'}\n\nInstallation\n------------\n\nFrom PyPi::\n\n    pip install unittest-xml\n\nContributing\n------------\n\nTo run the tests, install ``nose`` and ``mock``::\n\n    pip install nose mock\n\nand use::\n\n    nosetests", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/codeinthehole/unittest-xml", "keywords": "XML,testing", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "unittest-xml", "package_url": "https://pypi.org/project/unittest-xml/", "platform": "linux", "project_url": "https://pypi.org/project/unittest-xml/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/codeinthehole/unittest-xml"}, "release_url": "https://pypi.org/project/unittest-xml/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Additional assertion methods for testing XML", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library is a set of helper methods for testing XML with Python\u2019s unittest library.\nThe new assertion methods use <a href=\"http://en.wikipedia.org/wiki/XPath\" rel=\"nofollow\">XPath</a> to select the XML elements that assertions are being\nmade about.</p>\n<div id=\"sample-usage\">\n<h2>Sample usage</h2>\n<p>To use these additional assertions, simply mix the <tt>xmltest.XMLAssertions</tt> class\ninto your test class:</p>\n<pre>import unittest\nfrom xmltest import XMLAssertions\n\nclass MyTestCase(unittest.TestCase, XMLAssertions):\n    pass\n</pre>\n<p>Now suppose you have the following XML string that you wish to examine:</p>\n<pre>response_xml = \"\"\"&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;Response&gt;\n    &lt;CardTxn&gt;\n        &lt;authcode&gt;060642&lt;/authcode&gt;\n        &lt;card_scheme&gt;Switch&lt;/card_scheme&gt;\n        &lt;issuer country=\"UK\"&gt;HSBC&lt;/issuer&gt;\n    &lt;/CardTxn&gt;\n    &lt;reference&gt;3000000088888888&lt;/reference&gt;\n    &lt;merchantreference&gt;1000001&lt;/merchantreference&gt;\n    &lt;mode&gt;LIVE&lt;/mode&gt;\n    &lt;reason&gt;ACCEPTED&lt;/reason&gt;\n    &lt;status&gt;1&lt;/status&gt;\n    &lt;time&gt;1071567305&lt;/time&gt;\n&lt;/Response&gt;\"\"\"\n</pre>\n<p>Assert the number of elements matching an XPath query:</p>\n<pre>self.assertXPathNodeCount(response_xml, 1, 'CardTxn/issuer[@country=\"UK\"]')\nself.assertXPathNodeCount(response_xml, 1, 'status')\n</pre>\n<p>Assert the value of a particular element:</p>\n<pre>self.assertXPathNodeText(response_xml, 'ACCEPTED', 'reason')\n</pre>\n<p>Assert the attribute values of an element:</p>\n<pre>self.assertXPathNodeAttributes(xml, {'country': 'UK'}, 'CardTxn/issuer'}\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From PyPi:</p>\n<pre>pip install unittest-xml\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To run the tests, install <tt>nose</tt> and <tt>mock</tt>:</p>\n<pre>pip install nose mock\n</pre>\n<p>and use:</p>\n<pre>nosetests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 801237, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "313f6f24a378b94903f3532b26402c3d", "sha256": "9495108eb0adb26d6a3122d4f62042af595d432be88723bc6c97ec66739edac8"}, "downloads": -1, "filename": "unittest-xml-0.1.tar.gz", "has_sig": false, "md5_digest": "313f6f24a378b94903f3532b26402c3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2723, "upload_time": "2012-01-12T23:38:50", "upload_time_iso_8601": "2012-01-12T23:38:50.436833Z", "url": "https://files.pythonhosted.org/packages/ed/31/b2a10cbc2eac84fdb716109d66119531f81cf0ad2ad000c663fc6bd73d12/unittest-xml-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "605ce7d9a05dcfb5611fe18515b1f525", "sha256": "7987e316587cf8a9a2973b1edf95c5e7e22ca9a9a6362b3f44143796159c8dd6"}, "downloads": -1, "filename": "unittest-xml-0.2.tar.gz", "has_sig": false, "md5_digest": "605ce7d9a05dcfb5611fe18515b1f525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2501, "upload_time": "2012-01-13T22:52:46", "upload_time_iso_8601": "2012-01-13T22:52:46.705989Z", "url": "https://files.pythonhosted.org/packages/c7/04/e10643d066284458ed295816a308de5b40cfb8678134c29eaf8140537981/unittest-xml-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bf9b3eef335ecbda101ae85997a7bd59", "sha256": "7bce10a83b34ca2befa5800dfd6c8637ab58650bb15d8e1e230169c21e675182"}, "downloads": -1, "filename": "unittest-xml-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bf9b3eef335ecbda101ae85997a7bd59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2730, "upload_time": "2012-01-13T23:01:13", "upload_time_iso_8601": "2012-01-13T23:01:13.036651Z", "url": "https://files.pythonhosted.org/packages/3f/c4/16e609a8399588a7c5c162f2520debe50c0b4e347aae3879513341935f2f/unittest-xml-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "92c76540911f04a09cf8dc8e90538dbd", "sha256": "0da7019577f2c2ead72de54d29166fcdb00a130e3efa3afffcd398a656a67596"}, "downloads": -1, "filename": "unittest-xml-0.2.2.tar.gz", "has_sig": false, "md5_digest": "92c76540911f04a09cf8dc8e90538dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2692, "upload_time": "2012-01-13T23:15:59", "upload_time_iso_8601": "2012-01-13T23:15:59.791322Z", "url": "https://files.pythonhosted.org/packages/25/de/0a7e5151f444e051655a393da080f44acef403b94a5d2252d59d5c780cf0/unittest-xml-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92c76540911f04a09cf8dc8e90538dbd", "sha256": "0da7019577f2c2ead72de54d29166fcdb00a130e3efa3afffcd398a656a67596"}, "downloads": -1, "filename": "unittest-xml-0.2.2.tar.gz", "has_sig": false, "md5_digest": "92c76540911f04a09cf8dc8e90538dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2692, "upload_time": "2012-01-13T23:15:59", "upload_time_iso_8601": "2012-01-13T23:15:59.791322Z", "url": "https://files.pythonhosted.org/packages/25/de/0a7e5151f444e051655a393da080f44acef403b94a5d2252d59d5c780cf0/unittest-xml-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:19 2020"}