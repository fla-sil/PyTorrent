{"info": {"author": "Matthew Mitchell", "author_email": "pycryptax@thelibertyportal.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Accounting"], "description": "# PyCryptax\n\nPycryptax calculates income and capital gains using transactions and price\ndata from CSV files which can include cryptoassets such as Bitcoin. Capital\ngains are calculated according to section 104 holding; 30-day bed and\nbreakfasting; and same-day rules. Guidance is available through an [HMRC\npublication\nonline](https://www.gov.uk/government/publications/tax-on-cryptoassets/cryptoassets-for-individuals).\n\nTo install the program you must have Python 3. You can install using pip\n(remember to use `sudo` if needed):\n\n    pip3 install pycryptax\n\nAlternatively you can run the following command in the project's root directory:\n\n    python3 setup.py install\n\nAfter installation, the `pycryptax` command should be available and you may run\n`pycryptax --help` to view an overview of the usage. See below for more details\non how to use the software.\n\n## Disclaimer\n\n**Do not rely on this software for accuracy. Anything provided by this software\ndoes not constitute advice in any form. The software is provided \"as is\",\nwithout warranty of any kind. Use at your own risk. See the LICENSE file for\nmore details.**\n\n## Providing Data\n\nTransaction data for income and gains need to be provided in CSV files contained\nwithin particular directories. Prices are kept in `./prices`, capital gain/loss\ntrades in `./gains` and income transactions in `./income`. These directories\nshould be found within the present working directory or the directory provided\nby the `--dir` command line option.\n\nCSV files can be produced by any decent spreadsheet software. Spreadsheet\nsoftware can be used to manipulate exported price, exchange and wallet data into\nthe correct format.\n\nEmpty rows are allowed. Additional columns for comments etc. are allowed and\nignored.\n\nPlease see the `./examples` directory which contains an example of how data\nshould be provided.\n\n### Price data\n\nInside the `./prices` directory, CSV files containing price data for asset pairs\ncan be provided. This price data is used to convert asset amounts into the\nreporting/account currency for which the tax calculation is being done (`gbp` by\ndefault).\n\nEach file should be formatted as `XXX_YYY.csv` where `XXX` is the base currency,\nand `YYY` is the quote currency. For example `btc_gbp.csv` would contain the GBP\nprices of 1 bitcoin.\n\nThese files can be chained together to combine conversions. For example\n`btc_usd.csv` and `usd_gbp.csv` would allow conversion of bitcoin to GBP by\nconverting to USD first. The software only allows conversions to be done through\na single chain and they can only be done from the base currency to the quoted\ncurrency so `gbp_btc.csv` would allow conversions of GBP to bitcoin but not\nbitcoin to GBP.\n\nEach file should contain a list of daily prices for the asset pair. If a price\nis not available for a specifc date, then the soonest earlier date available is\nused instead.\n\nThe price csv files should use the following columns:\n\n| Column | Description                                                         |\n| ------ | ------------------------------------------------------------------- |\n| DATE   | The date of the price formatted as YYYY-MM-DD                       |\n| PRICE  | A decimal number of the price of the base asset in the quoted asset |\n\n### Income data\n\nTransactions for all revenues (positive amounts) and expenses (negative amounts)\ncan be provided under the `./income` directory in as many CSV files as desired.\nThe CSV files can be named anything as long as they end in `.csv`. Transactional\ndata should be provided with the following columns:\n\n| Column | Description                                                                  |\n| ------ | ---------------------------------------------------------------------------- |\n| DATE   | The date of the transaction formatted as YYYY-MM-DD                          |\n| ASSET  | The asset transacted, in the same format provided by the prices CSV filename |\n| AMOUNT | The amount of the asset received/debited (positive) or sent/credited (negative) |\n| NOTE   | A note to be provided when outputing transactions                            |\n\n### Capital Gain/Loss data\n\nTrades between assets, and other acquisitions or disposals can be provided in\nthe `./gains` directory in as many CSV files as desired. The CSV files can be\nnamed anything as long as they end in `.csv`.\n\nIf one asset is being traded for another, then they should be provided on the\nsame row. Sometimes assets are acquired or disposed without a counter asset. In\nthis case, only the single asset should be provided and the other cells should be\nempty.\n\nIf you are selling or buying an asset against the reporting currency (GBP by\ndefault), then the amount of the reporting currency should be provided as a\ncorresponding buy/sell asset like any other asset would. For example if you sold\n2 bitcoin for \u00a312,000, then put `btc` as the sell asset, `gbp` as the buy asset,\n`2` as the sell amount and `12000` as the buy amount.\n\nAsset names should be in the same format as in the price CSV filenames.\n\nTrades should be provided with the following columns:\n\n| Column      | Description                                                               |\n| ----------- | ------------------------------------------------------------------------- |\n| DATE        | The date of the trade, acquistion and/or disposal formatted as YYYY-MM-DD |\n| SELL ASSET  | The asset being sold/sent/disposed, or empty if none                      |\n| BUY ASSET   | The asset being bought/received/acquired or empty if none                 |\n| SELL AMOUNT | The amount of the SELL ASSET being disposed or empty if none              |\n| BUY ASSET   | The amount of the BUY ASSET being acquired or empty if none               |\n\n## Running Calculations\n\nPlease run `pycryptax -h` for usage details.\n\nWhen running a calculation you must either be in the directory containing the\n`prices`, `income` and/or `gains` directories, or provide it using the `--dir`\noption.\n\nCalcuations are done for a particular period of time. The start and end dates\nneed to be provided in the `YYYY-MM-DD` format. For example, to calculate income\nfor the 2009-2010 tax year in the `./examples` directory:\n\n    pycryptax income 2009-04-06 2010-04-05 -d ./examples\n\nThe following actions are allowed:\n\n- **income:** Produces the revenue and expenditure for each asset and in\n  total.\n- **gain:** Produces the gain and loss for each asset and in total. Also\n  displays the status of the section 104 holding at the end of the\ncalculation period.\n- **txs:** Outputs in CSV format each income tax transaction with revenue and\n  expenditure calculations shown in the reporting asset (GBP by default).\n- **disposals:** Outputs in CSV format each disposal, including the\n  calculated costs and proceeds which HMRC may ask for.\n\nIf you do not want to report calculations in GBP or have named GBP something\nother than `gbp`, then the `--reportingcurrency` option can be used to specify a\ndifferent asset.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MatthewLM/PyCryptax", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyCryptax", "package_url": "https://pypi.org/project/PyCryptax/", "platform": "", "project_url": "https://pypi.org/project/PyCryptax/", "project_urls": {"Homepage": "https://github.com/MatthewLM/PyCryptax"}, "release_url": "https://pypi.org/project/PyCryptax/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "UK Income and Capital Gains Tax Calculator for Cryptocurrencies", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyCryptax</h1>\n<p>Pycryptax calculates income and capital gains using transactions and price\ndata from CSV files which can include cryptoassets such as Bitcoin. Capital\ngains are calculated according to section 104 holding; 30-day bed and\nbreakfasting; and same-day rules. Guidance is available through an <a href=\"https://www.gov.uk/government/publications/tax-on-cryptoassets/cryptoassets-for-individuals\" rel=\"nofollow\">HMRC\npublication\nonline</a>.</p>\n<p>To install the program you must have Python 3. You can install using pip\n(remember to use <code>sudo</code> if needed):</p>\n<pre><code>pip3 install pycryptax\n</code></pre>\n<p>Alternatively you can run the following command in the project's root directory:</p>\n<pre><code>python3 setup.py install\n</code></pre>\n<p>After installation, the <code>pycryptax</code> command should be available and you may run\n<code>pycryptax --help</code> to view an overview of the usage. See below for more details\non how to use the software.</p>\n<h2>Disclaimer</h2>\n<p><strong>Do not rely on this software for accuracy. Anything provided by this software\ndoes not constitute advice in any form. The software is provided \"as is\",\nwithout warranty of any kind. Use at your own risk. See the LICENSE file for\nmore details.</strong></p>\n<h2>Providing Data</h2>\n<p>Transaction data for income and gains need to be provided in CSV files contained\nwithin particular directories. Prices are kept in <code>./prices</code>, capital gain/loss\ntrades in <code>./gains</code> and income transactions in <code>./income</code>. These directories\nshould be found within the present working directory or the directory provided\nby the <code>--dir</code> command line option.</p>\n<p>CSV files can be produced by any decent spreadsheet software. Spreadsheet\nsoftware can be used to manipulate exported price, exchange and wallet data into\nthe correct format.</p>\n<p>Empty rows are allowed. Additional columns for comments etc. are allowed and\nignored.</p>\n<p>Please see the <code>./examples</code> directory which contains an example of how data\nshould be provided.</p>\n<h3>Price data</h3>\n<p>Inside the <code>./prices</code> directory, CSV files containing price data for asset pairs\ncan be provided. This price data is used to convert asset amounts into the\nreporting/account currency for which the tax calculation is being done (<code>gbp</code> by\ndefault).</p>\n<p>Each file should be formatted as <code>XXX_YYY.csv</code> where <code>XXX</code> is the base currency,\nand <code>YYY</code> is the quote currency. For example <code>btc_gbp.csv</code> would contain the GBP\nprices of 1 bitcoin.</p>\n<p>These files can be chained together to combine conversions. For example\n<code>btc_usd.csv</code> and <code>usd_gbp.csv</code> would allow conversion of bitcoin to GBP by\nconverting to USD first. The software only allows conversions to be done through\na single chain and they can only be done from the base currency to the quoted\ncurrency so <code>gbp_btc.csv</code> would allow conversions of GBP to bitcoin but not\nbitcoin to GBP.</p>\n<p>Each file should contain a list of daily prices for the asset pair. If a price\nis not available for a specifc date, then the soonest earlier date available is\nused instead.</p>\n<p>The price csv files should use the following columns:</p>\n<table>\n<thead>\n<tr>\n<th>Column</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DATE</td>\n<td>The date of the price formatted as YYYY-MM-DD</td>\n</tr>\n<tr>\n<td>PRICE</td>\n<td>A decimal number of the price of the base asset in the quoted asset</td>\n</tr></tbody></table>\n<h3>Income data</h3>\n<p>Transactions for all revenues (positive amounts) and expenses (negative amounts)\ncan be provided under the <code>./income</code> directory in as many CSV files as desired.\nThe CSV files can be named anything as long as they end in <code>.csv</code>. Transactional\ndata should be provided with the following columns:</p>\n<table>\n<thead>\n<tr>\n<th>Column</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DATE</td>\n<td>The date of the transaction formatted as YYYY-MM-DD</td>\n</tr>\n<tr>\n<td>ASSET</td>\n<td>The asset transacted, in the same format provided by the prices CSV filename</td>\n</tr>\n<tr>\n<td>AMOUNT</td>\n<td>The amount of the asset received/debited (positive) or sent/credited (negative)</td>\n</tr>\n<tr>\n<td>NOTE</td>\n<td>A note to be provided when outputing transactions</td>\n</tr></tbody></table>\n<h3>Capital Gain/Loss data</h3>\n<p>Trades between assets, and other acquisitions or disposals can be provided in\nthe <code>./gains</code> directory in as many CSV files as desired. The CSV files can be\nnamed anything as long as they end in <code>.csv</code>.</p>\n<p>If one asset is being traded for another, then they should be provided on the\nsame row. Sometimes assets are acquired or disposed without a counter asset. In\nthis case, only the single asset should be provided and the other cells should be\nempty.</p>\n<p>If you are selling or buying an asset against the reporting currency (GBP by\ndefault), then the amount of the reporting currency should be provided as a\ncorresponding buy/sell asset like any other asset would. For example if you sold\n2 bitcoin for \u00a312,000, then put <code>btc</code> as the sell asset, <code>gbp</code> as the buy asset,\n<code>2</code> as the sell amount and <code>12000</code> as the buy amount.</p>\n<p>Asset names should be in the same format as in the price CSV filenames.</p>\n<p>Trades should be provided with the following columns:</p>\n<table>\n<thead>\n<tr>\n<th>Column</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DATE</td>\n<td>The date of the trade, acquistion and/or disposal formatted as YYYY-MM-DD</td>\n</tr>\n<tr>\n<td>SELL ASSET</td>\n<td>The asset being sold/sent/disposed, or empty if none</td>\n</tr>\n<tr>\n<td>BUY ASSET</td>\n<td>The asset being bought/received/acquired or empty if none</td>\n</tr>\n<tr>\n<td>SELL AMOUNT</td>\n<td>The amount of the SELL ASSET being disposed or empty if none</td>\n</tr>\n<tr>\n<td>BUY ASSET</td>\n<td>The amount of the BUY ASSET being acquired or empty if none</td>\n</tr></tbody></table>\n<h2>Running Calculations</h2>\n<p>Please run <code>pycryptax -h</code> for usage details.</p>\n<p>When running a calculation you must either be in the directory containing the\n<code>prices</code>, <code>income</code> and/or <code>gains</code> directories, or provide it using the <code>--dir</code>\noption.</p>\n<p>Calcuations are done for a particular period of time. The start and end dates\nneed to be provided in the <code>YYYY-MM-DD</code> format. For example, to calculate income\nfor the 2009-2010 tax year in the <code>./examples</code> directory:</p>\n<pre><code>pycryptax income 2009-04-06 2010-04-05 -d ./examples\n</code></pre>\n<p>The following actions are allowed:</p>\n<ul>\n<li><strong>income:</strong> Produces the revenue and expenditure for each asset and in\ntotal.</li>\n<li><strong>gain:</strong> Produces the gain and loss for each asset and in total. Also\ndisplays the status of the section 104 holding at the end of the\ncalculation period.</li>\n<li><strong>txs:</strong> Outputs in CSV format each income tax transaction with revenue and\nexpenditure calculations shown in the reporting asset (GBP by default).</li>\n<li><strong>disposals:</strong> Outputs in CSV format each disposal, including the\ncalculated costs and proceeds which HMRC may ask for.</li>\n</ul>\n<p>If you do not want to report calculations in GBP or have named GBP something\nother than <code>gbp</code>, then the <code>--reportingcurrency</code> option can be used to specify a\ndifferent asset.</p>\n\n          </div>"}, "last_serial": 6576228, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ab0db17669d9adb0fe0ffe1ed9dd5cb8", "sha256": "b1a80ac5569e45e93e3777a71817cb7d5f47604c7b75b6fa54d9157c91ce4365"}, "downloads": -1, "filename": "PyCryptax-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ab0db17669d9adb0fe0ffe1ed9dd5cb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14298, "upload_time": "2020-02-05T14:28:35", "upload_time_iso_8601": "2020-02-05T14:28:35.708798Z", "url": "https://files.pythonhosted.org/packages/21/74/d648b69673fa4b5cd502dee05d3905dc64fc91974b22d189b21854ffd855/PyCryptax-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee57ce0df6a4ab5ab776cbee32beb528", "sha256": "63b4429cd324271ad8a559462d684b782263f53a26d06e4dc93b8363c2f24aca"}, "downloads": -1, "filename": "PyCryptax-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ee57ce0df6a4ab5ab776cbee32beb528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13639, "upload_time": "2020-02-05T14:28:38", "upload_time_iso_8601": "2020-02-05T14:28:38.003506Z", "url": "https://files.pythonhosted.org/packages/4f/d0/0af338970e6518ddff135aad8d9cc4bfcc5d6ca24a069fac3cabaa62d37f/PyCryptax-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab0db17669d9adb0fe0ffe1ed9dd5cb8", "sha256": "b1a80ac5569e45e93e3777a71817cb7d5f47604c7b75b6fa54d9157c91ce4365"}, "downloads": -1, "filename": "PyCryptax-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ab0db17669d9adb0fe0ffe1ed9dd5cb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14298, "upload_time": "2020-02-05T14:28:35", "upload_time_iso_8601": "2020-02-05T14:28:35.708798Z", "url": "https://files.pythonhosted.org/packages/21/74/d648b69673fa4b5cd502dee05d3905dc64fc91974b22d189b21854ffd855/PyCryptax-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee57ce0df6a4ab5ab776cbee32beb528", "sha256": "63b4429cd324271ad8a559462d684b782263f53a26d06e4dc93b8363c2f24aca"}, "downloads": -1, "filename": "PyCryptax-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ee57ce0df6a4ab5ab776cbee32beb528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13639, "upload_time": "2020-02-05T14:28:38", "upload_time_iso_8601": "2020-02-05T14:28:38.003506Z", "url": "https://files.pythonhosted.org/packages/4f/d0/0af338970e6518ddff135aad8d9cc4bfcc5d6ca24a069fac3cabaa62d37f/PyCryptax-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:44 2020"}