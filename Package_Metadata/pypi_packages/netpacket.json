{"info": {"author": "Magnus Stieglitz", "author_email": "mstieglitz@protonmail.com", "bugtrack_url": null, "classifiers": [], "description": "netpacket, a Python module written in CPython\n=============================================\n\n|Build Status|\n\nnetpacket is a packet-creator module that supports ethernet, ARP, IPv4,\nIPv6, ICMPv4, TCP, UDP and DHCPv4. It also contains a packet-capturer\ncalled ppcap (Python pcap). The project contains the raw CPython\nbindings, and a wrapper library written in Python, which can be found in\nthe directory \"netpacket\".\n\nThe module tries to be as user-friendly as it can be, leaving tasks like\nbig-endian and little-endian fields to the module itself, the programmer\nonly has to fill in the fields without concerning himself about it.\n\nNote concerning IPv4 and IPv6\n=============================\n\nIPv4 and IPv6 is the same class, but the programmer will be jailed into\nIPv4 or IPv6 usage based on an argument passed to the IP class or\nprotocol classes above. IPv4: 0x0800, IPv6: 0x86dd. IPv4 is already\ndefault, and no argument needs to be passed.\n\nExample:\n\n.. code:: python\n\n    obj = _netpacket.udp()\n    print(obj)\n    obj = _netpacket.udp(0x86dd)\n    print(obj)\n\n<\\_netpacket.udpv4 object at 0x7fbff03e3510> <\\_netpacket.udpv6 object\nat 0x7fbff03e3570>\n\nInstallation\n============\n\n::\n\n    # Install libpcap dependency (using gentoo@portage-tree)\n    emerge --ask net-libs/libpcap --quiet-build\n    # Install libpcap dependency (using archlinux)\n    pacman --sync core/libpcap\n    # Build\n    python setup.py build\n    # Build and install\n    python setup.py install\n\nExamples\n========\n\nAll examples can be found in the directory \"examples\". Docstrings is\nalso available for very protocol class and the ppcap class.\n\nPlatforms supported\n===================\n\nnetpacket for now only supports Linux, but will support the Unix\nvariants and Mac OS X once the BPF (Berkeley Packet Filter) device\nimplementation is coded in.\n\nPython versions supported\n=========================\n\nnetpacket only supports Python3, and will never have any support for\nPython2.\n\nThings that will be present in later stages\n===========================================\n\n-  IPv4 options.\n-  IPv6 options.\n-  TCP options.\n-  Application-layer classes:\n\n   -  DNS.\n   -  HTTP.\n\n.. |Build Status| image:: https://travis-ci.org/Magnus9/netpacket.svg?branch=master\n   :target: https://travis-ci.org/Magnus9/netpacket", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/Magnus9/netpacket", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Magnus9/netpacket", "keywords": "", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "netpacket", "package_url": "https://pypi.org/project/netpacket/", "platform": "Linux", "project_url": "https://pypi.org/project/netpacket/", "project_urls": {"Download": "https://github.com/Magnus9/netpacket", "Homepage": "https://github.com/Magnus9/netpacket"}, "release_url": "https://pypi.org/project/netpacket/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Network packet-creator and packet-capturer module", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"netpacket-a-python-module-written-in-cpython\">\n<h2>netpacket, a Python module written in CPython</h2>\n<p><a href=\"https://travis-ci.org/Magnus9/netpacket\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6126c3db41b68670143f0d7aa5d77bfc9f70503b/68747470733a2f2f7472617669732d63692e6f72672f4d61676e7573392f6e65747061636b65742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>netpacket is a packet-creator module that supports ethernet, ARP, IPv4,\nIPv6, ICMPv4, TCP, UDP and DHCPv4. It also contains a packet-capturer\ncalled ppcap (Python pcap). The project contains the raw CPython\nbindings, and a wrapper library written in Python, which can be found in\nthe directory \u201cnetpacket\u201d.</p>\n<p>The module tries to be as user-friendly as it can be, leaving tasks like\nbig-endian and little-endian fields to the module itself, the programmer\nonly has to fill in the fields without concerning himself about it.</p>\n</div>\n<div id=\"note-concerning-ipv4-and-ipv6\">\n<h2>Note concerning IPv4 and IPv6</h2>\n<p>IPv4 and IPv6 is the same class, but the programmer will be jailed into\nIPv4 or IPv6 usage based on an argument passed to the IP class or\nprotocol classes above. IPv4: 0x0800, IPv6: 0x86dd. IPv4 is already\ndefault, and no argument needs to be passed.</p>\n<p>Example:</p>\n<pre><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">_netpacket</span><span class=\"o\">.</span><span class=\"n\">udp</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n<span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">_netpacket</span><span class=\"o\">.</span><span class=\"n\">udp</span><span class=\"p\">(</span><span class=\"mh\">0x86dd</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n</pre>\n<p>&lt;_netpacket.udpv4 object at 0x7fbff03e3510&gt; &lt;_netpacket.udpv6 object\nat 0x7fbff03e3570&gt;</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre># Install libpcap dependency (using gentoo@portage-tree)\nemerge --ask net-libs/libpcap --quiet-build\n# Install libpcap dependency (using archlinux)\npacman --sync core/libpcap\n# Build\npython setup.py build\n# Build and install\npython setup.py install\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>All examples can be found in the directory \u201cexamples\u201d. Docstrings is\nalso available for very protocol class and the ppcap class.</p>\n</div>\n<div id=\"platforms-supported\">\n<h2>Platforms supported</h2>\n<p>netpacket for now only supports Linux, but will support the Unix\nvariants and Mac OS X once the BPF (Berkeley Packet Filter) device\nimplementation is coded in.</p>\n</div>\n<div id=\"python-versions-supported\">\n<h2>Python versions supported</h2>\n<p>netpacket only supports Python3, and will never have any support for\nPython2.</p>\n</div>\n<div id=\"things-that-will-be-present-in-later-stages\">\n<h2>Things that will be present in later stages</h2>\n<ul>\n<li>IPv4 options.</li>\n<li>IPv6 options.</li>\n<li>TCP options.</li>\n<li>Application-layer classes:<ul>\n<li>DNS.</li>\n<li>HTTP.</li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3136340, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "fb9258ef7346354525fb3b5aba4a5fc4", "sha256": "679e54b745db27447a238c76594cf0ea6570095b3bcb3ae4bec3c65d97dc7138"}, "downloads": -1, "filename": "netpacket-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fb9258ef7346354525fb3b5aba4a5fc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35327, "upload_time": "2017-08-31T01:08:44", "upload_time_iso_8601": "2017-08-31T01:08:44.794684Z", "url": "https://files.pythonhosted.org/packages/c4/dd/8cbc6d6842a96ee52ab51cb7e98a73764d902d0e9c2061a08df07c383596/netpacket-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb9258ef7346354525fb3b5aba4a5fc4", "sha256": "679e54b745db27447a238c76594cf0ea6570095b3bcb3ae4bec3c65d97dc7138"}, "downloads": -1, "filename": "netpacket-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fb9258ef7346354525fb3b5aba4a5fc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35327, "upload_time": "2017-08-31T01:08:44", "upload_time_iso_8601": "2017-08-31T01:08:44.794684Z", "url": "https://files.pythonhosted.org/packages/c4/dd/8cbc6d6842a96ee52ab51cb7e98a73764d902d0e9c2061a08df07c383596/netpacket-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:56 2020"}