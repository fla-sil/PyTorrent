{"info": {"author": "Cleber J Santos", "author_email": "cleber@cleberjsantos.com.br", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python"], "description": "*************************\r\ncollective.js.charcount\r\n*************************\r\n\r\n.. contents:: Table of Contents\r\n\r\n\r\nOverview\r\n=========\r\n\r\njQuery plugin Simplest Twitterlike dynamic character count for textareas and\r\ninput fields.\r\n\r\n\r\nAbout charCount\r\n================\r\n\r\nThe first thing that this plugin do is create a sibling element (it adds is\r\nimmediately AFTER the form element), the \"counter\", where the remaining\r\ncharacter info is stored. On each key up event or text field value change the\r\ncounting function is triggered and the contents of this \"counter\" element is\r\nchanged accordingly. If the remaining character count reaches the \"warning\"\r\nzone (gets close to zero) the CSS class is added. We use this class to change\r\nthe color of the character count info. If the count reaches zero and goes beyond\r\nit another class is added so we can use another style for exceeding the limit.\r\n\r\nJust so you can find your way around it, this is the code that the plugin generates\r\nby default::\r\n\r\n    <span class=\"counter\">140</span>\r\n\r\n\r\nPlugin Options (and default values)\r\n=====================================\r\n\r\nlimit: 140\r\n------------\r\nThe character limit you wish to set for your text area or input field. It must be\r\na number.\r\n\r\nwarning: 25\r\n------------\r\nWhen remaining characters reach the number set with this option the \"warning\" css\r\nclass name will be applied to the counter element.\r\n\r\ncounterElement: 'span'\r\n----------------------- \r\nThe type of element you wish to choose as your \"counter\" element. By default it is\r\na SPAN element, but you can use paragraphs, divs, strongs, ems\u2026\r\n\r\ncss: 'counter'\r\n---------------\r\nClass name added to the counter element. Use this class name as a css selector to\r\ndescribe element\u2019s appearance.\r\n\r\ncssWarning: 'warning'\r\n----------------------\r\nClass name added to the counter element once the character count reaches the \"warning\"\r\nnumber.\r\n\r\ncssExceeded: 'exceeded'\r\n------------------------\r\nClass name added to the counter element once the character count reaches zero.\r\n\r\ncounterText: ''\r\n---------------\r\nIf you wish to add some text before the remaining character number, you can do so by\r\nusing this option. It is empty by default.\r\n\r\nHere\u2019s what default usage code looks like::\r\n\r\n    $(\"#message1\").charCount();\r\n\r\n\u2026and this is the plugin usage with some customized options::\r\n\r\n    $(\"#message2\").charCount({\r\n        allowed: 50,        \r\n        warning: 20,\r\n        counterText: 'Characters left: '    \r\n    });\r\n\r\n\r\nAlso take a look at the CSS I used for my demos::\r\n\r\n    form .counter{\r\n        position:absolute;\r\n        right:0;\r\n        top:0;\r\n        font-size:20px;\r\n        font-weight:bold;\r\n        color:#ccc;\r\n    }\r\n    form .warning{color:#600;}  \r\n    form .exceeded{color:#e00;}\r\n\r\nHow to install\r\n==============\r\n\r\nThis addon can be installed as any other Plone addon. Please follow official\r\ndocumentation_.\r\n\r\n\r\nAfter installing the package on your portal you can access the demo in:\r\nhttp://youportal.com/++resource++collective.js.charcount.demo.html\r\n\r\n\r\n.. _documentation: http://plone.org/documentation/kb/installing-add-ons-quick-how-to\r\n\r\nHave an idea? Found a bug? Let us know by `opening a support ticket`_.\r\n\r\n.. _`opening a support ticket`: https://github.com/collective/collective.js.charcount/issues\r\n\r\n\r\nMostly Harmless\r\n---------------\r\n\r\n.. image:: https://secure.travis-ci.org/collective/collective.js.charcount.png\r\n    :target: http://travis-ci.org/collective/collective.js.charcount\r\n\r\n\r\nInstallation\r\n=============\r\n\r\n * When you're reading this you have probably already run\r\n   ``easy_install collective.js.charcount``. Find out how to install setuptools\r\n   (and EasyInstall) here:\r\n   http://peak.telecommunity.com/DevCenter/EasyInstall\r\n\r\n * Get `pythonproducts`_ and install it via::\r\n\r\n       python setup.py install --home /path/to/instance\r\n\r\n   into your Zope instance.\r\n\r\n * Create a file called ``collective.js.charcount-configure.zcml`` in the\r\n   ``/path/to/instance/etc/package-includes`` directory.  The file\r\n   should only contain this::\r\n\r\n       <include package=\"collective.js.charcount\" />\r\n\r\n.. _pythonproducts: http://plone.org/products/pythonproducts\r\n\r\nAlternatively, if you are using zc.buildout and the plone.recipe.zope2instance\r\nrecipe to manage your project, you can do this:\r\n\r\n * Add ``collective.js.charcount`` to the list of eggs to install, e.g.\r\n   ::\r\n\r\n    [buildout]\r\n    ...\r\n    eggs = collective.js.charcount\r\n\r\n * Tell the plone.recipe.zope2instance recipe to install a ZCML slug:\r\n   ::\r\n\r\n    [instance]\r\n    recipe = plone.recipe.zope2instance\r\n    ...\r\n    zcml = collective.js.charcount\r\n\r\n * Re-run buildout, e.g. with:\r\n   ::\r\n\r\n    $ ./bin/buildout\r\n\r\nYou can skip the ZCML slug if you are going to explicitly include the package\r\nfrom another package's configure.zcml file.\r\n\r\nAfter updating the configuration you need to run ''bin/buildout'', which will\r\ntake care of updating your system.\r\n\r\nGo to the 'Site Setup' page in a Plone site and click on the 'Add-ons' link.\r\n\r\nCheck the box next to ``collective.js.charcount`` and click the 'Activate' button.\r\n\r\nNote: You may have to empty your browser cache and save your resource\r\nregistries in order to see the effects of the package installation.\r\n\r\nContributors\r\n------------\r\n\r\n- Cleber J. Santos\r\n\r\nChangelog\r\n=========\r\n\r\n1.0 (unreleased)\r\n----------------\r\n\r\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.js.charcount", "keywords": "count plone", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "collective.js.charcount", "package_url": "https://pypi.org/project/collective.js.charcount/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.js.charcount/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.js.charcount"}, "release_url": "https://pypi.org/project/collective.js.charcount/1.1/", "requires_dist": null, "requires_python": null, "summary": "jQuery plugin dynamic character count                     for textareas and input fields", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#overview\" id=\"id1\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#about-charcount\" id=\"id2\" rel=\"nofollow\">About charCount</a></li>\n<li><a href=\"#plugin-options-and-default-values\" id=\"id3\" rel=\"nofollow\">Plugin Options (and default values)</a><ul>\n<li><a href=\"#limit-140\" id=\"id4\" rel=\"nofollow\">limit: 140</a></li>\n<li><a href=\"#warning-25\" id=\"id5\" rel=\"nofollow\">warning: 25</a></li>\n<li><a href=\"#counterelement-span\" id=\"id6\" rel=\"nofollow\">counterElement: \u2018span\u2019</a></li>\n<li><a href=\"#css-counter\" id=\"id7\" rel=\"nofollow\">css: \u2018counter\u2019</a></li>\n<li><a href=\"#csswarning-warning\" id=\"id8\" rel=\"nofollow\">cssWarning: \u2018warning\u2019</a></li>\n<li><a href=\"#cssexceeded-exceeded\" id=\"id9\" rel=\"nofollow\">cssExceeded: \u2018exceeded\u2019</a></li>\n<li><a href=\"#countertext\" id=\"id10\" rel=\"nofollow\">counterText: \u2018\u2019</a></li>\n</ul>\n</li>\n<li><a href=\"#how-to-install\" id=\"id11\" rel=\"nofollow\">How to install</a><ul>\n<li><a href=\"#mostly-harmless\" id=\"id12\" rel=\"nofollow\">Mostly Harmless</a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" id=\"id13\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#contributors\" id=\"id14\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id15\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Overview</a></h2>\n<p>jQuery plugin Simplest Twitterlike dynamic character count for textareas and\ninput fields.</p>\n</div>\n<div id=\"about-charcount\">\n<h2><a href=\"#id2\" rel=\"nofollow\">About charCount</a></h2>\n<p>The first thing that this plugin do is create a sibling element (it adds is\nimmediately AFTER the form element), the \u201ccounter\u201d, where the remaining\ncharacter info is stored. On each key up event or text field value change the\ncounting function is triggered and the contents of this \u201ccounter\u201d element is\nchanged accordingly. If the remaining character count reaches the \u201cwarning\u201d\nzone (gets close to zero) the CSS class is added. We use this class to change\nthe color of the character count info. If the count reaches zero and goes beyond\nit another class is added so we can use another style for exceeding the limit.</p>\n<p>Just so you can find your way around it, this is the code that the plugin generates\nby default:</p>\n<pre>&lt;span class=\"counter\"&gt;140&lt;/span&gt;\n</pre>\n</div>\n<div id=\"plugin-options-and-default-values\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Plugin Options (and default values)</a></h2>\n<div id=\"limit-140\">\n<h3><a href=\"#id4\" rel=\"nofollow\">limit: 140</a></h3>\n<p>The character limit you wish to set for your text area or input field. It must be\na number.</p>\n</div>\n<div id=\"warning-25\">\n<h3><a href=\"#id5\" rel=\"nofollow\">warning: 25</a></h3>\n<p>When remaining characters reach the number set with this option the \u201cwarning\u201d css\nclass name will be applied to the counter element.</p>\n</div>\n<div id=\"counterelement-span\">\n<h3><a href=\"#id6\" rel=\"nofollow\">counterElement: \u2018span\u2019</a></h3>\n<p>The type of element you wish to choose as your \u201ccounter\u201d element. By default it is\na SPAN element, but you can use paragraphs, divs, strongs, ems\u2026</p>\n</div>\n<div id=\"css-counter\">\n<h3><a href=\"#id7\" rel=\"nofollow\">css: \u2018counter\u2019</a></h3>\n<p>Class name added to the counter element. Use this class name as a css selector to\ndescribe element\u2019s appearance.</p>\n</div>\n<div id=\"csswarning-warning\">\n<h3><a href=\"#id8\" rel=\"nofollow\">cssWarning: \u2018warning\u2019</a></h3>\n<p>Class name added to the counter element once the character count reaches the \u201cwarning\u201d\nnumber.</p>\n</div>\n<div id=\"cssexceeded-exceeded\">\n<h3><a href=\"#id9\" rel=\"nofollow\">cssExceeded: \u2018exceeded\u2019</a></h3>\n<p>Class name added to the counter element once the character count reaches zero.</p>\n</div>\n<div id=\"countertext\">\n<h3><a href=\"#id10\" rel=\"nofollow\">counterText: \u2018\u2019</a></h3>\n<p>If you wish to add some text before the remaining character number, you can do so by\nusing this option. It is empty by default.</p>\n<p>Here\u2019s what default usage code looks like:</p>\n<pre>$(\"#message1\").charCount();\n</pre>\n<p>\u2026and this is the plugin usage with some customized options:</p>\n<pre>$(\"#message2\").charCount({\n    allowed: 50,\n    warning: 20,\n    counterText: 'Characters left: '\n});\n</pre>\n<p>Also take a look at the CSS I used for my demos:</p>\n<pre>form .counter{\n    position:absolute;\n    right:0;\n    top:0;\n    font-size:20px;\n    font-weight:bold;\n    color:#ccc;\n}\nform .warning{color:#600;}\nform .exceeded{color:#e00;}\n</pre>\n</div>\n</div>\n<div id=\"how-to-install\">\n<h2><a href=\"#id11\" rel=\"nofollow\">How to install</a></h2>\n<p>This addon can be installed as any other Plone addon. Please follow official\n<a href=\"http://plone.org/documentation/kb/installing-add-ons-quick-how-to\" rel=\"nofollow\">documentation</a>.</p>\n<p>After installing the package on your portal you can access the demo in:\n<a href=\"http://youportal.com/++resource++collective.js.charcount.demo.html\" rel=\"nofollow\">http://youportal.com/++resource++collective.js.charcount.demo.html</a></p>\n<p>Have an idea? Found a bug? Let us know by <a href=\"https://github.com/collective/collective.js.charcount/issues\" rel=\"nofollow\">opening a support ticket</a>.</p>\n<div id=\"mostly-harmless\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Mostly Harmless</a></h3>\n<a href=\"http://travis-ci.org/collective/collective.js.charcount\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/collective/collective.js.charcount.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcbd54ca26de685383a609140cd294c5992eb423/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e6a732e63686172636f756e742e706e67\"></a>\n</div>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Installation</a></h2>\n<blockquote>\n<ul>\n<li><p>When you\u2019re reading this you have probably already run\n<tt>easy_install collective.js.charcount</tt>. Find out how to install setuptools\n(and EasyInstall) here:\n<a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">http://peak.telecommunity.com/DevCenter/EasyInstall</a></p>\n</li>\n<li><p>Get <a href=\"http://plone.org/products/pythonproducts\" rel=\"nofollow\">pythonproducts</a> and install it via:</p>\n<pre>python setup.py install --home /path/to/instance\n</pre>\n<p>into your Zope instance.</p>\n</li>\n<li><p>Create a file called <tt><span class=\"pre\">collective.js.charcount-configure.zcml</span></tt> in the\n<tt><span class=\"pre\">/path/to/instance/etc/package-includes</span></tt> directory.  The file\nshould only contain this:</p>\n<pre>&lt;include package=\"collective.js.charcount\" /&gt;\n</pre>\n</li>\n</ul>\n</blockquote>\n<p>Alternatively, if you are using zc.buildout and the plone.recipe.zope2instance\nrecipe to manage your project, you can do this:</p>\n<blockquote>\n<ul>\n<li><p>Add <tt>collective.js.charcount</tt> to the list of eggs to install, e.g.</p>\n<pre>[buildout]\n...\neggs = collective.js.charcount\n</pre>\n</li>\n<li><p>Tell the plone.recipe.zope2instance recipe to install a ZCML slug:</p>\n<pre>[instance]\nrecipe = plone.recipe.zope2instance\n...\nzcml = collective.js.charcount\n</pre>\n</li>\n<li><p>Re-run buildout, e.g. with:</p>\n<pre>$ ./bin/buildout\n</pre>\n</li>\n</ul>\n</blockquote>\n<p>You can skip the ZCML slug if you are going to explicitly include the package\nfrom another package\u2019s configure.zcml file.</p>\n<p>After updating the configuration you need to run \u2018\u2019bin/buildout\u2019\u2019, which will\ntake care of updating your system.</p>\n<p>Go to the \u2018Site Setup\u2019 page in a Plone site and click on the \u2018Add-ons\u2019 link.</p>\n<p>Check the box next to <tt>collective.js.charcount</tt> and click the \u2018Activate\u2019 button.</p>\n<p>Note: You may have to empty your browser cache and save your resource\nregistries in order to see the effects of the package installation.</p>\n<div id=\"contributors\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Contributors</a></h3>\n<ul>\n<li>Cleber J. Santos</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Changelog</a></h2>\n<h2 id=\"unreleased\"><span class=\"section-subtitle\">1.0 (unreleased)</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 787868, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "a4bf323ee3c877f02e2abd92d1993f66", "sha256": "adff5d0a960b0873d80db77315703410b69f13893054c7ba8324cafd1e22cbf1"}, "downloads": -1, "filename": "collective.js.charcount-1.1.zip", "has_sig": false, "md5_digest": "a4bf323ee3c877f02e2abd92d1993f66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27187, "upload_time": "2013-05-18T16:19:03", "upload_time_iso_8601": "2013-05-18T16:19:03.195934Z", "url": "https://files.pythonhosted.org/packages/79/83/796b3a9c9eb6eca8dda9f4fcba9f124c54ffb4201443e1932db924631801/collective.js.charcount-1.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4bf323ee3c877f02e2abd92d1993f66", "sha256": "adff5d0a960b0873d80db77315703410b69f13893054c7ba8324cafd1e22cbf1"}, "downloads": -1, "filename": "collective.js.charcount-1.1.zip", "has_sig": false, "md5_digest": "a4bf323ee3c877f02e2abd92d1993f66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27187, "upload_time": "2013-05-18T16:19:03", "upload_time_iso_8601": "2013-05-18T16:19:03.195934Z", "url": "https://files.pythonhosted.org/packages/79/83/796b3a9c9eb6eca8dda9f4fcba9f124c54ffb4201443e1932db924631801/collective.js.charcount-1.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:45:12 2020"}