{"info": {"author": "Sindre R\u00c3\u00b8kenes Myren", "author_email": "smyrman@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=====================\nDjango jQuery Widgets\n=====================\n\nThis is a pluggable app for Django that currently provide only one extra widget:\nForeignKeySeatchInput. This widget provide search functionallety for foreingkey\nfields in a form.\n\n*NOTE*: This django app was created to make it easier for myself to include\nextra functionality in some of my django projects. It contains a very small set\nof widgets (currently only one), and what widgets are included in the future\nare currently only determined by my own personal needs. Do not hesitate to come\nwith suggestions though.\n\nApplication content\n===================\n\nIncluded widgets\n----------------\n\n*ForeignKeySearchInput*: An ajax auto-complete widget that replaces the normal\nselect input.\n\nIncluded for the admin\n----------------------\n\n*ExtendedModelAdmin*: An extension of django.admin.ModelAdmin that make it easy\nto use the included widgets in the admin view.\n\nExample usage::\n\n from jquery_widgets.admin import ExtendedModelAdmin\n from myapp.models import MyModel\n\n class MyModelAdmin(ExtendedModelAdmin):\n      ...\n      # Use the ForeignKeySearchInput widget for the field 'user'. Let the\n      # search_fields be 'username' and 'email':\n      related_search_fields = {'user': ('username', 'email'),}\n\n\n\nInstallation\n============\n\nUsing pip (or easy_install):\n----------------------------\n\nStable::\n\n  $ sudo pip install django-jquery-widgets\n\nDevelopment::\n\n  $ sudo pip install -e git://github.com/smyrman/django-jquery-widgets.git#egg=django-jquery-widgets\n\n\nGetting the source repository:\n------------------------------\n\nIf you want to include the code with your django project, rather then\ninstalling it to your system, you can download a recent version and copy the\njquery_widgets folder into your django project.\n\nGit::\n\n  $ git clone git://github.com/smyrman/django-jquery-widgets.git\n\n\n\nProject configuration\n=====================\n\nQuick guide\n-----------\n\nIf you use a Unix-flavoured OS and Django >= 1.2, this is all the required\nsteps to get django-jqury-widgets working:\n\n1 Add 'jquery_widgets' to your settings.INSTALLED_APPS\n\n2 Add This line to your urlconf::\n\n   url(r'^jqw/', include('jquery_widgets.urls', namespace='jquery-widgets')),\n\n3 Symlink static media into your media-root by issuing:\n\n   $ python manage.py syncdb\n\nIf Django >= 1.2 and ADMIN_MEDIA_PREFIX is configured in settings, you are\ndone.\n\n\nExplained\n---------\n\n1 Add 'jquery_widgets' to your settings.INSTALLED_APPS.\n\n2 Add This line to your urlconf (replace 'jqw' with whatever you like)::\n\n   url(r'^jqw/', include('jquery_widgets.urls', namespace='jquery-widgets')),\n\n3 Include application static media:\n\n*Unix*:\nIssue 'python manage.py syncdb'. This will create a symlink to\n'<path>/jquery_widgets/media', in your MEDIA_ROOT.  The symlink will be named:\n'jquery_widgets'.\n\n*Windows*:\nYou will have to manually copy the media directory form jquery_widgets to your\nMEDIA_ROOT, and renamed it to jquery_widgets.\n\n4 Include jQuery:\n\n*Django <= 1.2*:\nYou can configure settings.JQUERY_URL to point to your jQuery library.\n\nIf the JQURY_URL setting is not given, the jquery_widgets app will default\nto think that jQuery is located at '<MEDIA_URL>js/jquery.min.js'.\n\n*Django >= 1.2*:\nif the JQURY_URL setting is not given and ADMIN_MEDIA_PREFIX is found in your\nsetings, the jqury_widgets will default to think that jQuery is located at\n'<ADMIN_MEDIA_PREFIX>js/jquery.min.js'. It will also take some steps to make\nsure that jquery is copied back into the global javascript namespace (Django\nadmin puts jQury in the 'django.jquery' namespace).", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/smyrman/django-jquery-widgets/tarball/0.1.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/smyrman/django-jquery-widgets", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-jquery-widgets", "package_url": "https://pypi.org/project/django-jquery-widgets/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-jquery-widgets/", "project_urls": {"Download": "http://github.com/smyrman/django-jquery-widgets/tarball/0.1.2", "Homepage": "http://github.com/smyrman/django-jquery-widgets"}, "release_url": "https://pypi.org/project/django-jquery-widgets/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "jQuery-powered widgets and fields for Django", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a pluggable app for Django that currently provide only one extra widget:\nForeignKeySeatchInput. This widget provide search functionallety for foreingkey\nfields in a form.</p>\n<p><em>NOTE</em>: This django app was created to make it easier for myself to include\nextra functionality in some of my django projects. It contains a very small set\nof widgets (currently only one), and what widgets are included in the future\nare currently only determined by my own personal needs. Do not hesitate to come\nwith suggestions though.</p>\n<div id=\"application-content\">\n<h2>Application content</h2>\n<div id=\"included-widgets\">\n<h3>Included widgets</h3>\n<p><em>ForeignKeySearchInput</em>: An ajax auto-complete widget that replaces the normal\nselect input.</p>\n</div>\n<div id=\"included-for-the-admin\">\n<h3>Included for the admin</h3>\n<p><em>ExtendedModelAdmin</em>: An extension of django.admin.ModelAdmin that make it easy\nto use the included widgets in the admin view.</p>\n<p>Example usage:</p>\n<pre>from jquery_widgets.admin import ExtendedModelAdmin\nfrom myapp.models import MyModel\n\nclass MyModelAdmin(ExtendedModelAdmin):\n     ...\n     # Use the ForeignKeySearchInput widget for the field 'user'. Let the\n     # search_fields be 'username' and 'email':\n     related_search_fields = {'user': ('username', 'email'),}\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"using-pip-or-easy-install\">\n<h3>Using pip (or easy_install):</h3>\n<p>Stable:</p>\n<pre>$ sudo pip install django-jquery-widgets\n</pre>\n<p>Development:</p>\n<pre>$ sudo pip install -e git://github.com/smyrman/django-jquery-widgets.git#egg=django-jquery-widgets\n</pre>\n</div>\n<div id=\"getting-the-source-repository\">\n<h3>Getting the source repository:</h3>\n<p>If you want to include the code with your django project, rather then\ninstalling it to your system, you can download a recent version and copy the\njquery_widgets folder into your django project.</p>\n<p>Git:</p>\n<pre>$ git clone git://github.com/smyrman/django-jquery-widgets.git\n</pre>\n</div>\n</div>\n<div id=\"project-configuration\">\n<h2>Project configuration</h2>\n<div id=\"quick-guide\">\n<h3>Quick guide</h3>\n<p>If you use a Unix-flavoured OS and Django &gt;= 1.2, this is all the required\nsteps to get django-jqury-widgets working:</p>\n<p>1 Add \u2018jquery_widgets\u2019 to your settings.INSTALLED_APPS</p>\n<p>2 Add This line to your urlconf:</p>\n<pre>url(r'^jqw/', include('jquery_widgets.urls', namespace='jquery-widgets')),\n</pre>\n<p>3 Symlink static media into your media-root by issuing:</p>\n<blockquote>\n$ python manage.py syncdb</blockquote>\n<p>If Django &gt;= 1.2 and ADMIN_MEDIA_PREFIX is configured in settings, you are\ndone.</p>\n</div>\n<div id=\"explained\">\n<h3>Explained</h3>\n<p>1 Add \u2018jquery_widgets\u2019 to your settings.INSTALLED_APPS.</p>\n<p>2 Add This line to your urlconf (replace \u2018jqw\u2019 with whatever you like):</p>\n<pre>url(r'^jqw/', include('jquery_widgets.urls', namespace='jquery-widgets')),\n</pre>\n<p>3 Include application static media:</p>\n<p><em>Unix</em>:\nIssue \u2018python manage.py syncdb\u2019. This will create a symlink to\n\u2018&lt;path&gt;/jquery_widgets/media\u2019, in your MEDIA_ROOT.  The symlink will be named:\n\u2018jquery_widgets\u2019.</p>\n<p><em>Windows</em>:\nYou will have to manually copy the media directory form jquery_widgets to your\nMEDIA_ROOT, and renamed it to jquery_widgets.</p>\n<p>4 Include jQuery:</p>\n<p><em>Django &lt;= 1.2</em>:\nYou can configure settings.JQUERY_URL to point to your jQuery library.</p>\n<p>If the JQURY_URL setting is not given, the jquery_widgets app will default\nto think that jQuery is located at \u2018&lt;MEDIA_URL&gt;js/jquery.min.js\u2019.</p>\n<p><em>Django &gt;= 1.2</em>:\nif the JQURY_URL setting is not given and ADMIN_MEDIA_PREFIX is found in your\nsetings, the jqury_widgets will default to think that jQuery is located at\n\u2018&lt;ADMIN_MEDIA_PREFIX&gt;js/jquery.min.js\u2019. It will also take some steps to make\nsure that jquery is copied back into the global javascript namespace (Django\nadmin puts jQury in the \u2018django.jquery\u2019 namespace).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 789915, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4a62b028ad591d5fe0057db551cf4e20", "sha256": "8dcc8902e3fa3cb2e914822206c9f99a3d778c26ccbae743ffc394c18f4fae27"}, "downloads": -1, "filename": "django-jquery-widgets-0.1.tar.gz", "has_sig": false, "md5_digest": "4a62b028ad591d5fe0057db551cf4e20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9602, "upload_time": "2010-06-04T22:46:46", "upload_time_iso_8601": "2010-06-04T22:46:46.778945Z", "url": "https://files.pythonhosted.org/packages/40/ef/89287a1db996769536122a5919276cc259d9914a796bf7b3e5e24e665ffb/django-jquery-widgets-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4c27483e078c563287942b84d6404040", "sha256": "c2a08ea6331a10377f8478ce5d32dde1a3ad5b32a130d8ea7300ff0aa4d2f07d"}, "downloads": -1, "filename": "django-jquery-widgets-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4c27483e078c563287942b84d6404040", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9919, "upload_time": "2010-06-06T02:06:46", "upload_time_iso_8601": "2010-06-06T02:06:46.471475Z", "url": "https://files.pythonhosted.org/packages/78/e7/ab9fa14441e928925c8c02299e64dafac3ddc4f052f8606ad62f6cfae372/django-jquery-widgets-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1cc90aa1feeb16cd4995383fb1613209", "sha256": "650258839e7e4fed16af238881e7540ebe91b69eda4020b3757e990282b647d9"}, "downloads": -1, "filename": "django-jquery-widgets-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1cc90aa1feeb16cd4995383fb1613209", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11022, "upload_time": "2010-10-17T12:53:53", "upload_time_iso_8601": "2010-10-17T12:53:53.760961Z", "url": "https://files.pythonhosted.org/packages/72/c5/411baa8d9a92b8ba9ee8efd7978a69446268418c7d9791ca36cff25a2601/django-jquery-widgets-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cc90aa1feeb16cd4995383fb1613209", "sha256": "650258839e7e4fed16af238881e7540ebe91b69eda4020b3757e990282b647d9"}, "downloads": -1, "filename": "django-jquery-widgets-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1cc90aa1feeb16cd4995383fb1613209", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11022, "upload_time": "2010-10-17T12:53:53", "upload_time_iso_8601": "2010-10-17T12:53:53.760961Z", "url": "https://files.pythonhosted.org/packages/72/c5/411baa8d9a92b8ba9ee8efd7978a69446268418c7d9791ca36cff25a2601/django-jquery-widgets-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:30 2020"}