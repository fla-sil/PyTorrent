{"info": {"author": "European XFEL GmbH", "author_email": "cas-support@xfel.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===========================\nEuropean XFEL Karabo Bridge\n===========================\n\n.. image:: https://travis-ci.org/European-XFEL/karabo-bridge-py.svg?branch=master\n  :target: https://travis-ci.org/European-XFEL/karabo-bridge-py\n\n.. image:: https://codecov.io/gh/European-XFEL/karabo-bridge-py/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/European-XFEL/karabo-bridge-py\n\n\n\n``karabo_bridge`` is a Python 3 client to receive pipeline data from the\nKarabo control system used at `European XFEL <https://www.xfel.eu/>`_.\nA simulated Karabo bridge server is included to allow testing code without\na connection to a real Karabo server.\n\nInstalling\n----------\n\nto install the package::\n\n    $ python3 -m pip install karabo-bridge\n\n    or\n\n    $ git clone https://github.com/European-XFEL/karabo-bridge-py.git\n    $ cd ./karabo-bridge-py\n    $ python3 -m pip install .\n\nHow to use\n----------\n\nRequest data from a karabo bridge server\n++++++++++++++++++++++++++++++++++++++++\n\nUse the ``Client`` class from karabo_brige to create a client and the\n``next`` method to request data from the server.\nThe function returns 2 dictionaries: the first one holds a train data and the\nsecond one holds the associated train metadata. Both dictionaries are keyed by\nsource name, and the values are dictionaries containing parameters name and\nvalues for data and metadata information (source name, timestamp, trainId)\nfor the metadata. Values are all built-in python types, or numpy arrays.\n\n.. code-block:: python\n\n    >>> from karabo_bridge import Client\n    >>> krb_client = Client('tcp://server-host-name:12345')\n    >>> data, metadata = krb_client.next()\n    >>> data.keys()\n    dict_keys(['source1', 'source2', 'source3'])\n    >>> data['source1'].keys()\n    dict_keys(['param1', 'param2'])\n    >>> metadata['source1']\n    {'source1': {'source': 'source1',\n      'timestamp': 1528476983.744877,\n      'timestamp.frac': '744877000000000000',\n      'timestamp.sec': '1528476983',\n      'timestamp.tid': 10000000073}}\n\nUse the Simulation server\n+++++++++++++++++++++++++\n\nTo start a simulation, call the ``start_gen`` function and provide a port to\nbind to. You can the use the ``Client`` class and connect to it to test the\nclient without the need to use Karabo.\n\n.. code-block:: python\n\n    >>> from karabo_bridge import start_gen\n    >>> start_gen(1234)\n    Server : emitted train: 10000000000\n    Server : emitted train: 10000000001\n    Server : emitted train: 10000000002\n    Server : emitted train: 10000000003\n    Server : emitted train: 10000000004\n    ...\n\n\nYou can also run the simulated server from the command line::\n\n    $ karabo-bridge-server-sim 1234", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/European-XFEL/karabo-bridge-py", "keywords": "", "license": "BSD-3-Clause", "maintainer": "Thomas Michelat", "maintainer_email": "", "name": "karabo-bridge", "package_url": "https://pypi.org/project/karabo-bridge/", "platform": "", "project_url": "https://pypi.org/project/karabo-bridge/", "project_urls": {"Homepage": "https://github.com/European-XFEL/karabo-bridge-py"}, "release_url": "https://pypi.org/project/karabo-bridge/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "Python 3 tools to request data from the Karabo controlsystem.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/European-XFEL/karabo-bridge-py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/European-XFEL/karabo-bridge-py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e54feebea49e31069a5b6d1f21234d67478ddb8/68747470733a2f2f7472617669732d63692e6f72672f4575726f7065616e2d5846454c2f6b617261626f2d6272696467652d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/European-XFEL/karabo-bridge-py\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/European-XFEL/karabo-bridge-py/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a7918a2771578c96ed71d3213a5d3e8c7bb1001/68747470733a2f2f636f6465636f762e696f2f67682f4575726f7065616e2d5846454c2f6b617261626f2d6272696467652d70792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p><tt>karabo_bridge</tt> is a Python 3 client to receive pipeline data from the\nKarabo control system used at <a href=\"https://www.xfel.eu/\" rel=\"nofollow\">European XFEL</a>.\nA simulated Karabo bridge server is included to allow testing code without\na connection to a real Karabo server.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>to install the package:</p>\n<pre>$ python3 -m pip install karabo-bridge\n\nor\n\n$ git clone https://github.com/European-XFEL/karabo-bridge-py.git\n$ cd ./karabo-bridge-py\n$ python3 -m pip install .\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div id=\"request-data-from-a-karabo-bridge-server\">\n<h3>Request data from a karabo bridge server</h3>\n<p>Use the <tt>Client</tt> class from karabo_brige to create a client and the\n<tt>next</tt> method to request data from the server.\nThe function returns 2 dictionaries: the first one holds a train data and the\nsecond one holds the associated train metadata. Both dictionaries are keyed by\nsource name, and the values are dictionaries containing parameters name and\nvalues for data and metadata information (source name, timestamp, trainId)\nfor the metadata. Values are all built-in python types, or numpy arrays.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">karabo_bridge</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">krb_client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'tcp://server-host-name:12345'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">krb_client</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'source1'</span><span class=\"p\">,</span> <span class=\"s1\">'source2'</span><span class=\"p\">,</span> <span class=\"s1\">'source3'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'source1'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'param1'</span><span class=\"p\">,</span> <span class=\"s1\">'param2'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s1\">'source1'</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'source1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'source'</span><span class=\"p\">:</span> <span class=\"s1\">'source1'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mf\">1528476983.744877</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timestamp.frac'</span><span class=\"p\">:</span> <span class=\"s1\">'744877000000000000'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timestamp.sec'</span><span class=\"p\">:</span> <span class=\"s1\">'1528476983'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timestamp.tid'</span><span class=\"p\">:</span> <span class=\"mi\">10000000073</span><span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"use-the-simulation-server\">\n<h3>Use the Simulation server</h3>\n<p>To start a simulation, call the <tt>start_gen</tt> function and provide a port to\nbind to. You can the use the <tt>Client</tt> class and connect to it to test the\nclient without the need to use Karabo.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">karabo_bridge</span> <span class=\"kn\">import</span> <span class=\"n\">start_gen</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">start_gen</span><span class=\"p\">(</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n<span class=\"n\">Server</span> <span class=\"p\">:</span> <span class=\"n\">emitted</span> <span class=\"n\">train</span><span class=\"p\">:</span> <span class=\"mi\">10000000000</span>\n<span class=\"n\">Server</span> <span class=\"p\">:</span> <span class=\"n\">emitted</span> <span class=\"n\">train</span><span class=\"p\">:</span> <span class=\"mi\">10000000001</span>\n<span class=\"n\">Server</span> <span class=\"p\">:</span> <span class=\"n\">emitted</span> <span class=\"n\">train</span><span class=\"p\">:</span> <span class=\"mi\">10000000002</span>\n<span class=\"n\">Server</span> <span class=\"p\">:</span> <span class=\"n\">emitted</span> <span class=\"n\">train</span><span class=\"p\">:</span> <span class=\"mi\">10000000003</span>\n<span class=\"n\">Server</span> <span class=\"p\">:</span> <span class=\"n\">emitted</span> <span class=\"n\">train</span><span class=\"p\">:</span> <span class=\"mi\">10000000004</span>\n<span class=\"o\">...</span>\n</pre>\n<p>You can also run the simulated server from the command line:</p>\n<pre>$ karabo-bridge-server-sim 1234\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7164435, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2d41ec121a06779e43b77a4dcdba7571", "sha256": "03564c8c2183ea2730d3addc1946f563e3afab7d79ab9b059240e17eb5976546"}, "downloads": -1, "filename": "karabo_bridge-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2d41ec121a06779e43b77a4dcdba7571", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14680, "upload_time": "2018-06-12T12:39:15", "upload_time_iso_8601": "2018-06-12T12:39:15.534960Z", "url": "https://files.pythonhosted.org/packages/2c/0e/08125bef70811434045f8c5b8e38f8bed64d147cdc45a352b7be7bbad991/karabo_bridge-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9e4452f93a6ae904725df59796e0443", "sha256": "8cc044a4f8c9fe7205a895c4ecf7e1527186198207ad1005caf15a87713a6398"}, "downloads": -1, "filename": "karabo_bridge-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a9e4452f93a6ae904725df59796e0443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11002, "upload_time": "2018-06-12T12:39:17", "upload_time_iso_8601": "2018-06-12T12:39:17.099479Z", "url": "https://files.pythonhosted.org/packages/a8/4b/88f03f8226aa7dca1b605193664df093ed4eaff3571e408b46540ca1b501/karabo_bridge-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "650eefb487de57b46a79500d6846809f", "sha256": "cadc6469c4b46a509869a88b0014016eb1cf8400552a35006b6a204d72c00151"}, "downloads": -1, "filename": "karabo_bridge-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "650eefb487de57b46a79500d6846809f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13546, "upload_time": "2018-08-09T07:42:02", "upload_time_iso_8601": "2018-08-09T07:42:02.428882Z", "url": "https://files.pythonhosted.org/packages/be/3a/63a361afe60eca0fea4b4b677818f0136332889730c8b5adca0ac72845db/karabo_bridge-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aec551f5efc24d197bf7f236fb0fc668", "sha256": "08a83cde07d94f354caad085b71cc23a81ee9fa2106eb9043fd8358e22dcaf38"}, "downloads": -1, "filename": "karabo_bridge-0.2.0.tar.gz", "has_sig": false, "md5_digest": "aec551f5efc24d197bf7f236fb0fc668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11810, "upload_time": "2018-08-09T07:42:03", "upload_time_iso_8601": "2018-08-09T07:42:03.654971Z", "url": "https://files.pythonhosted.org/packages/33/52/5cc9eed9bd2610c751d8135214743142f5d4246c99f203dc2b1029bee3d0/karabo_bridge-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9eb47e73f142346dfc219e15568a59c7", "sha256": "72cd8534b7c1987bab8266da247bd8fdb1e460eb434b59a8764aa5868834639a"}, "downloads": -1, "filename": "karabo_bridge-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9eb47e73f142346dfc219e15568a59c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13392, "upload_time": "2019-04-09T15:13:38", "upload_time_iso_8601": "2019-04-09T15:13:38.783889Z", "url": "https://files.pythonhosted.org/packages/da/d3/5f1707e0a4f73675bf99e9f898829b19066c715727b6850949ed7c7621bb/karabo_bridge-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a163ce76bc453a6a399f1bd52f3cb2df", "sha256": "8e485bad51250eedca7ac1bde07d960713403a65261b44da7c7746a6ce25512f"}, "downloads": -1, "filename": "karabo_bridge-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a163ce76bc453a6a399f1bd52f3cb2df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14414, "upload_time": "2019-10-08T14:43:42", "upload_time_iso_8601": "2019-10-08T14:43:42.362783Z", "url": "https://files.pythonhosted.org/packages/cb/7d/ca44f80a4d2ecaec01e19673424781265b90e416357b1e18cd57589f31b2/karabo_bridge-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d11881b901cbeeb54344b76a8ff4f37f", "sha256": "f8712d25496328428206ece86c8047972b0bd7d16ced010d09dae143428d2f45"}, "downloads": -1, "filename": "karabo_bridge-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d11881b901cbeeb54344b76a8ff4f37f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13118, "upload_time": "2019-10-08T14:43:44", "upload_time_iso_8601": "2019-10-08T14:43:44.706801Z", "url": "https://files.pythonhosted.org/packages/70/1e/f2cf003b4e60d9da394f95f8e259fa7bad87dbc59bec394c99e04652125a/karabo_bridge-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e89922815e93b1f6ce602ca4b028d31d", "sha256": "98131234efa8f35c15c89c173df4e5da78993e3b87f181acd8f2ff24ac7d1c97"}, "downloads": -1, "filename": "karabo_bridge-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e89922815e93b1f6ce602ca4b028d31d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14317, "upload_time": "2020-04-16T11:48:32", "upload_time_iso_8601": "2020-04-16T11:48:32.644286Z", "url": "https://files.pythonhosted.org/packages/cf/36/959a81396c22920b10f899b4934e3697003ccb14468454607862244fbfcb/karabo_bridge-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "6a38f10669aceed06230325fa7cdf702", "sha256": "6264e91d8d6f82dd428440ac0df76322febc6a24cf2db149c07e4131c8d47560"}, "downloads": -1, "filename": "karabo_bridge-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6a38f10669aceed06230325fa7cdf702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17945, "upload_time": "2020-05-04T13:36:00", "upload_time_iso_8601": "2020-05-04T13:36:00.917973Z", "url": "https://files.pythonhosted.org/packages/8c/63/92d6d2f092efae372c04076f0068ce9d7ef37cc6106db98f38423e9aa18b/karabo_bridge-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a38f10669aceed06230325fa7cdf702", "sha256": "6264e91d8d6f82dd428440ac0df76322febc6a24cf2db149c07e4131c8d47560"}, "downloads": -1, "filename": "karabo_bridge-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6a38f10669aceed06230325fa7cdf702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17945, "upload_time": "2020-05-04T13:36:00", "upload_time_iso_8601": "2020-05-04T13:36:00.917973Z", "url": "https://files.pythonhosted.org/packages/8c/63/92d6d2f092efae372c04076f0068ce9d7ef37cc6106db98f38423e9aa18b/karabo_bridge-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:39 2020"}