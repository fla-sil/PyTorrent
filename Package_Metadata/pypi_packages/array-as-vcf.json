{"info": {"author": "Sander Bollen, Redmar van den Berg", "author_email": "KG_bioinf@lumc.nl", "bugtrack_url": null, "classifiers": ["Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# Array As VCF\n\n`array-as-vcf` is a small library and tool to \nconvert common SNP array formats to VCF format.\n\nThere are four currently supported array formats:\n\n* Affymetrix (TSV export)\n* Cytoscan HD Array (TSV export)\n* Lumi 317k array (TSV export)\n* Lumi 370k array (TSV export)\n* Multi-sample OpenArray (TSV export)\n\nBinary formats are not (yet) supported.\n\n\n# Requirements\n\n* Python 3.6\n* requests\n\n# CLI usage\n\nThe `array-as-vcf` tool will convert array files to VCF format.\nIt will auto-detect the type of array file, and throw an error if it can't\ndetermine it. \n\nThe generated VCF file is printed to stdout.\n\nA sample name to be used in the VCF file _must_ be supplied.\n\nThe REF and ALT alleles will be queried from Ensembl if no `lookup-table` is\nsupplied. This requires a working internet connection, and can be quite slow\ndue the amount of HTTP requests that are necessary.\n\nWhen supplied with `lookup-table`, no requests are made for the rsIDs \nwhich exist within the lookup table. The lookup table is a JSON file,\ncontaining a single large object of shape:\n\n```json\n{\n  \"rs0\": \"{ref_allele}:{alt_alleles}:{ref_is_minor_allele}\"\n}\n``` \n\nE.g. \n\n```json\n{\n  \"rs1000003\": \"A:G:F\"\n}\n```\n\nIf you have never run `array-as-vcf` before , you can run `array-as-vcf` sans lookup table\nand `dump` the generated internal lookup table to a file for next iterations.\n\n```bash\nUsage: array-as-vcf [OPTIONS]\n\nOptions:\n  -p, --path PATH              Path to array file  [required]\n  -b, --build [GRCh37|GRCh38]\n  -s, --sample-name TEXT       Name of sample in VCF file\n  -c, --chr-prefix TEXT        Optional prefix to chromosome names\n  -l, --lookup-table PATH      Optional path to existing lookup table for\n                               rsIDs.\n  -d, --dump PATH              Optional path to write generated lookup table\n  --help                       Show this message and exit.\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LUMC/array-as-vcf", "keywords": "array vcf SNP convert OpenArray Cytoscan lumi370k lumi317k Affymetrix", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "array-as-vcf", "package_url": "https://pypi.org/project/array-as-vcf/", "platform": "", "project_url": "https://pypi.org/project/array-as-vcf/", "project_urls": {"Homepage": "https://github.com/LUMC/array-as-vcf"}, "release_url": "https://pypi.org/project/array-as-vcf/1.0.1/", "requires_dist": ["requests", "setuptools"], "requires_python": ">=3.6", "summary": "Convert SNP array to VCF", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Array As VCF</h1>\n<p><code>array-as-vcf</code> is a small library and tool to\nconvert common SNP array formats to VCF format.</p>\n<p>There are four currently supported array formats:</p>\n<ul>\n<li>Affymetrix (TSV export)</li>\n<li>Cytoscan HD Array (TSV export)</li>\n<li>Lumi 317k array (TSV export)</li>\n<li>Lumi 370k array (TSV export)</li>\n<li>Multi-sample OpenArray (TSV export)</li>\n</ul>\n<p>Binary formats are not (yet) supported.</p>\n<h1>Requirements</h1>\n<ul>\n<li>Python 3.6</li>\n<li>requests</li>\n</ul>\n<h1>CLI usage</h1>\n<p>The <code>array-as-vcf</code> tool will convert array files to VCF format.\nIt will auto-detect the type of array file, and throw an error if it can't\ndetermine it.</p>\n<p>The generated VCF file is printed to stdout.</p>\n<p>A sample name to be used in the VCF file <em>must</em> be supplied.</p>\n<p>The REF and ALT alleles will be queried from Ensembl if no <code>lookup-table</code> is\nsupplied. This requires a working internet connection, and can be quite slow\ndue the amount of HTTP requests that are necessary.</p>\n<p>When supplied with <code>lookup-table</code>, no requests are made for the rsIDs\nwhich exist within the lookup table. The lookup table is a JSON file,\ncontaining a single large object of shape:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"rs0\"</span><span class=\"p\">:</span> <span class=\"s2\">\"{ref_allele}:{alt_alleles}:{ref_is_minor_allele}\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>E.g.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"rs1000003\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A:G:F\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If you have never run <code>array-as-vcf</code> before , you can run <code>array-as-vcf</code> sans lookup table\nand <code>dump</code> the generated internal lookup table to a file for next iterations.</p>\n<pre>Usage: array-as-vcf <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n\nOptions:\n  -p, --path PATH              Path to array file  <span class=\"o\">[</span>required<span class=\"o\">]</span>\n  -b, --build <span class=\"o\">[</span>GRCh37<span class=\"p\">|</span>GRCh38<span class=\"o\">]</span>\n  -s, --sample-name TEXT       Name of sample in VCF file\n  -c, --chr-prefix TEXT        Optional prefix to chromosome names\n  -l, --lookup-table PATH      Optional path to existing lookup table <span class=\"k\">for</span>\n                               rsIDs.\n  -d, --dump PATH              Optional path to write generated lookup table\n  --help                       Show this message and exit.\n</pre>\n\n          </div>"}, "last_serial": 6272534, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "932ce9b8cdb478936399dcf44afd68f5", "sha256": "179add234c5f0f50fc344175002ad85cf45f4732854a69d135529d6f27979357"}, "downloads": -1, "filename": "array_as_vcf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "932ce9b8cdb478936399dcf44afd68f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13343, "upload_time": "2019-12-03T12:55:10", "upload_time_iso_8601": "2019-12-03T12:55:10.251183Z", "url": "https://files.pythonhosted.org/packages/8d/35/b932cd88cecdfb475464680cda684faf810e49004617e5d14c115ad94cf0/array_as_vcf-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "395e12e997021bf43940f330aaa7ea0e", "sha256": "31c158031b2ce4ae8ba79d4e38a2cc9252a535cdbb17ec8cf1a42409b49c0454"}, "downloads": -1, "filename": "array-as-vcf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "395e12e997021bf43940f330aaa7ea0e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12171, "upload_time": "2019-12-03T12:55:12", "upload_time_iso_8601": "2019-12-03T12:55:12.729819Z", "url": "https://files.pythonhosted.org/packages/a2/b5/9483cafad1e76081654d13002409dae9ad2d2fc3e83d95740967f1be585a/array-as-vcf-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0187402f5d68a656378561955aa56627", "sha256": "61548ee8d599a84fa9811c7592fbfeb56dd01660d8de7b72590a891ce3c426ba"}, "downloads": -1, "filename": "array_as_vcf-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0187402f5d68a656378561955aa56627", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13346, "upload_time": "2019-12-10T12:25:57", "upload_time_iso_8601": "2019-12-10T12:25:57.857786Z", "url": "https://files.pythonhosted.org/packages/a0/fd/10c62cef477039806558a6a238e7241d15745aba6ff54ca6f40583e3fc3a/array_as_vcf-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8c55bb86e6bfd97bfa7b4133bac037d", "sha256": "8e9dec42d7b8bec5d5c3305237166aecbc1f1ba78d00e3ce28614537bfdf07c6"}, "downloads": -1, "filename": "array-as-vcf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a8c55bb86e6bfd97bfa7b4133bac037d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12136, "upload_time": "2019-12-10T12:25:59", "upload_time_iso_8601": "2019-12-10T12:25:59.634807Z", "url": "https://files.pythonhosted.org/packages/58/cc/fb7801df2c5c6a427f240db0153ae176fb805bd2eee10f1506f367be6f9f/array-as-vcf-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0187402f5d68a656378561955aa56627", "sha256": "61548ee8d599a84fa9811c7592fbfeb56dd01660d8de7b72590a891ce3c426ba"}, "downloads": -1, "filename": "array_as_vcf-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0187402f5d68a656378561955aa56627", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13346, "upload_time": "2019-12-10T12:25:57", "upload_time_iso_8601": "2019-12-10T12:25:57.857786Z", "url": "https://files.pythonhosted.org/packages/a0/fd/10c62cef477039806558a6a238e7241d15745aba6ff54ca6f40583e3fc3a/array_as_vcf-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8c55bb86e6bfd97bfa7b4133bac037d", "sha256": "8e9dec42d7b8bec5d5c3305237166aecbc1f1ba78d00e3ce28614537bfdf07c6"}, "downloads": -1, "filename": "array-as-vcf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a8c55bb86e6bfd97bfa7b4133bac037d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12136, "upload_time": "2019-12-10T12:25:59", "upload_time_iso_8601": "2019-12-10T12:25:59.634807Z", "url": "https://files.pythonhosted.org/packages/58/cc/fb7801df2c5c6a427f240db0153ae176fb805bd2eee10f1506f367be6f9f/array-as-vcf-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:11 2020"}