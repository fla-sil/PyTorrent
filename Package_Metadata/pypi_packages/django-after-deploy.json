{"info": {"author": "Diogo Fernandes", "author_email": "dfop02@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "============\nAfter Deploy\n============\n\nAfter deploy helps you to create and manage automated deploy tasks in your Django application. Inspired by `Rails after_party`_\n\nQuick start\n-----------\n\n1. Install the package using pip by running::\n\n    pip install django-after-deploy\n\n2. Add \"after_deploy\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'after_deploy',\n    ]\n\n3. Now after_deploy commands are available, use install flag::\n\n    python manage.py after_deploy --install\n\n4. Run ``python manage.py -g my_first_task`` to create your first task, they'll stay at root project, on tasks folder::\n\n    my-project\n    |-- my-app\n    |   |-- __init__.py\n    |   |-- apps.py\n    |   |-- models.py\n    |   |-- settings.py\n    |-- tasks\n    |   |-- __init__.py\n    |   |-- _000001_my_first_task.py\n    |-- manage.py\n\n5. For execute all unapplied tasks you can run ``python manage.py --run``. If you need execute again a specfic task, you can run ``python manage.py -r my_first_task``.\n\nAuthors\n-------\n\n- `Diogo Fernandes`_\n\n.. _Rails after_party: https://github.com/theSteveMitchell/after_party.\n.. _Diogo Fernandes: https://github.com/dfop02", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dfop02/django-after-deploy", "keywords": "django,task,tasks", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-after-deploy", "package_url": "https://pypi.org/project/django-after-deploy/", "platform": "any", "project_url": "https://pypi.org/project/django-after-deploy/", "project_urls": {"Homepage": "https://github.com/dfop02/django-after-deploy", "Source": "https://github.com/dfop02/django-after-deploy"}, "release_url": "https://pypi.org/project/django-after-deploy/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Automated tasks after-deploy for Django.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>After deploy helps you to create and manage automated deploy tasks in your Django application. Inspired by <a href=\"https://github.com/theSteveMitchell/after_party.\" rel=\"nofollow\">Rails after_party</a></p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Install the package using pip by running:</p>\n<pre>pip install django-after-deploy\n</pre>\n</li>\n<li><p>Add \u201cafter_deploy\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'after_deploy',\n]\n</pre>\n</li>\n<li><p>Now after_deploy commands are available, use install flag:</p>\n<pre>python manage.py after_deploy --install\n</pre>\n</li>\n<li><p>Run <tt>python manage.py <span class=\"pre\">-g</span> my_first_task</tt> to create your first task, they\u2019ll stay at root project, on tasks folder:</p>\n<pre>my-project\n|-- my-app\n|   |-- __init__.py\n|   |-- apps.py\n|   |-- models.py\n|   |-- settings.py\n|-- tasks\n|   |-- __init__.py\n|   |-- _000001_my_first_task.py\n|-- manage.py\n</pre>\n</li>\n<li><p>For execute all unapplied tasks you can run <tt>python manage.py <span class=\"pre\">--run</span></tt>. If you need execute again a specfic task, you can run <tt>python manage.py <span class=\"pre\">-r</span> my_first_task</tt>.</p>\n</li>\n</ol>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li><a href=\"https://github.com/dfop02\" rel=\"nofollow\">Diogo Fernandes</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6672031, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a2ca6045e0b9ad49da2a9cf47e8f1718", "sha256": "29f9872f204e20a88bbdbef95a93a47963b890e387b210abf5c4a2449691bb52"}, "downloads": -1, "filename": "django-after-deploy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a2ca6045e0b9ad49da2a9cf47e8f1718", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4943, "upload_time": "2020-02-21T01:46:02", "upload_time_iso_8601": "2020-02-21T01:46:02.106394Z", "url": "https://files.pythonhosted.org/packages/a0/10/85afab6720ff7897db1ba0099e433839377bc3657f8de7f4ea4db390d970/django-after-deploy-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2ca6045e0b9ad49da2a9cf47e8f1718", "sha256": "29f9872f204e20a88bbdbef95a93a47963b890e387b210abf5c4a2449691bb52"}, "downloads": -1, "filename": "django-after-deploy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a2ca6045e0b9ad49da2a9cf47e8f1718", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4943, "upload_time": "2020-02-21T01:46:02", "upload_time_iso_8601": "2020-02-21T01:46:02.106394Z", "url": "https://files.pythonhosted.org/packages/a0/10/85afab6720ff7897db1ba0099e433839377bc3657f8de7f4ea4db390d970/django-after-deploy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:45 2020"}