{"info": {"author": "Santanu Mohapatro", "author_email": "mksantanu@me.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SanRabbit Library\n\n## Dependencies\n\n```bash\n1. Install python3 into your local computer\n    Please follow Python install instructions mentioned in\n    https://www.python.org/downloads/\n\n2. Install rabbit MQ into your local computer\n    Please follow the Rabbit MQ installation guide and documentation on how to\n    start Rabbit MQ from official webpage given below.\n    https://www.rabbitmq.com/download.html#installation-guides\n\n3. Install python module pika.\n    pip install python3-pika\n\n```\n\n## Installation\n\n```bash\n\npip install SanRabbit\n\n```\n\n## Source Code\n\n```bash\n\nClone the git repository to your local computer.\ngit clone https://github.ibm.com/santanu-lab/SanRabbit.git\n\n```\n\n## Description\n\n```bash\n1. Reding messages from RabbitMQ is often very cumbesome process in python. Devloper has to memorize the steps to deal with Rabbit MQ.\n\n2. SanRabbit library provides simple and easy to use APIs to make the developer life eassy.\n\n3. Within 3 lines of code data from message Queue can be reterived.\n\n4. It provides way to isolate the business logic from MQ access logic.\n\n5. Business logic can be encapsulated in a python function and the function can be passed as callback function to SanRabbit Library.\n\n7. SanRabbit Library takes care of auto configuring your messag Queue, exchange, MQ Channel etc. Hence Devloper or system administrator need to spend their precious time in configuring Rabbit MQ.\n\n```\n\n## Usage\n\n```bash\n\nStep :1: Create configuration JSON.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    Configuration file can be created manually with following JSON key.\n\n    {\n        \"host_name\": \"localhost\",\n        \"config_items\": {\n            \"exchange_name\": \"\",\n            \"exchange_type\": \"\",\n            \"route_key\": \"\",\n            \"queue_name\": \"\"\n        }\n    }\n\nAlternatively, the Library has auto create facitliy will try to build one for you, with file name \"san-rabbit-config.json\".\n\nStep :2: Steps to Use the Library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    i) Import Library to your code\n    from SanRabbit.SanRabbitController import SRController\n\n    ii) Create a controller object by passing config JSON\n    rabbit = SRController('san-rabbit-config.json')\n\n    iii) Call to connect method from controller class\n    rabbit.connectToSanRabbit(callToMyBusinessFunction)\n\n    here , callToMyBusinessFunction() is a Call Back function which should have \n    your business functionality to consume the data read from Rabbit MQ.\n\n    this function should have 4 parameters.\n\n    e.g:\n    def callToMyBusiness(ch, method, properties, body):\n        print(\"Message...\")\n        message = str(body)[1:]\n        print(message)\n\n    SanRabbit will create necessary Queue infrastructure for you and will host your \n    message receiver service for you.\n\n    iv) If you are not sure how to create config JSON then call the SRController \n    without any parameter.\n\n    e.g:\n    from SanRabbit.SanRabbitController import SRController\n    rabbit.SRController()\n\n    The above code will create a sample san-rabbit-config.json for you, and later \n    you can verify  the JSON and modify accordingly.\n\nStep :3: Sample Code\n~~~~~~~~~~~~~~~~~~~~~\nPlease refer SampleSend.py and SampleReceive.py for detailed code.\n\n```\n\n## Known Issues\n\n```bash\n\nException handling module need more refinement. I will provide the list ASAP.\n\n```\n\n## License\n\n```bash\n\nMIT License\n\nCopyright (c) 2020 Santanu Mohapatro\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n```\n\n## Author\n\n```bash\n\nSantanu Mohapatro\n(mksantanu@me.com)\nIBMers can contact me via.\nMail: shmohapa@in.ibm.com\nSLACK: @mksantanu\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.ibm.com/santanu-lab/SanRabbit.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "SanRabbit", "package_url": "https://pypi.org/project/SanRabbit/", "platform": "", "project_url": "https://pypi.org/project/SanRabbit/", "project_urls": {"Homepage": "https://github.ibm.com/santanu-lab/SanRabbit.git"}, "release_url": "https://pypi.org/project/SanRabbit/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Provides Easy To Use API, For Rabbit MQ.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SanRabbit Library</h1>\n<h2>Dependencies</h2>\n<pre><span class=\"m\">1</span>. Install python3 into your <span class=\"nb\">local</span> computer\n    Please follow Python install instructions mentioned in\n    https://www.python.org/downloads/\n\n<span class=\"m\">2</span>. Install rabbit MQ into your <span class=\"nb\">local</span> computer\n    Please follow the Rabbit MQ installation guide and documentation on how to\n    start Rabbit MQ from official webpage given below.\n    https://www.rabbitmq.com/download.html#installation-guides\n\n<span class=\"m\">3</span>. Install python module pika.\n    pip install python3-pika\n</pre>\n<h2>Installation</h2>\n<pre>pip install SanRabbit\n</pre>\n<h2>Source Code</h2>\n<pre>Clone the git repository to your <span class=\"nb\">local</span> computer.\ngit clone https://github.ibm.com/santanu-lab/SanRabbit.git\n</pre>\n<h2>Description</h2>\n<pre><span class=\"m\">1</span>. Reding messages from RabbitMQ is often very cumbesome process in python. Devloper has to memorize the steps to deal with Rabbit MQ.\n\n<span class=\"m\">2</span>. SanRabbit library provides simple and easy to use APIs to make the developer life eassy.\n\n<span class=\"m\">3</span>. Within <span class=\"m\">3</span> lines of code data from message Queue can be reterived.\n\n<span class=\"m\">4</span>. It provides way to isolate the business logic from MQ access logic.\n\n<span class=\"m\">5</span>. Business logic can be encapsulated in a python <span class=\"k\">function</span> and the <span class=\"k\">function</span> can be passed as callback <span class=\"k\">function</span> to SanRabbit Library.\n\n<span class=\"m\">7</span>. SanRabbit Library takes care of auto configuring your messag Queue, exchange, MQ Channel etc. Hence Devloper or system administrator need to spend their precious <span class=\"nb\">time</span> in configuring Rabbit MQ.\n</pre>\n<h2>Usage</h2>\n<pre>Step :1: Create configuration JSON.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    Configuration file can be created manually with following JSON key.\n\n    <span class=\"o\">{</span>\n        <span class=\"s2\">\"host_name\"</span>: <span class=\"s2\">\"localhost\"</span>,\n        <span class=\"s2\">\"config_items\"</span>: <span class=\"o\">{</span>\n            <span class=\"s2\">\"exchange_name\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"exchange_type\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"route_key\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"queue_name\"</span>: <span class=\"s2\">\"\"</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\nAlternatively, the Library has auto create facitliy will try to build one <span class=\"k\">for</span> you, with file name <span class=\"s2\">\"san-rabbit-config.json\"</span>.\n\nStep :2: Steps to Use the Library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    i<span class=\"o\">)</span> Import Library to your code\n    from SanRabbit.SanRabbitController import SRController\n\n    ii<span class=\"o\">)</span> Create a controller object by passing config JSON\n    <span class=\"nv\">rabbit</span> <span class=\"o\">=</span> SRController<span class=\"o\">(</span><span class=\"s1\">'san-rabbit-config.json'</span><span class=\"o\">)</span>\n\n    iii<span class=\"o\">)</span> Call to connect method from controller class\n    rabbit.connectToSanRabbit<span class=\"o\">(</span>callToMyBusinessFunction<span class=\"o\">)</span>\n\n    here , callToMyBusinessFunction<span class=\"o\">()</span> is a Call Back <span class=\"k\">function</span> which should have \n    your business functionality to consume the data <span class=\"nb\">read</span> from Rabbit MQ.\n\n    this <span class=\"k\">function</span> should have <span class=\"m\">4</span> parameters.\n\n    e.g:\n    def callToMyBusiness<span class=\"o\">(</span>ch, method, properties, body<span class=\"o\">)</span>:\n        print<span class=\"o\">(</span><span class=\"s2\">\"Message...\"</span><span class=\"o\">)</span>\n        <span class=\"nv\">message</span> <span class=\"o\">=</span> str<span class=\"o\">(</span>body<span class=\"o\">)[</span><span class=\"m\">1</span>:<span class=\"o\">]</span>\n        print<span class=\"o\">(</span>message<span class=\"o\">)</span>\n\n    SanRabbit will create necessary Queue infrastructure <span class=\"k\">for</span> you and will host your \n    message receiver service <span class=\"k\">for</span> you.\n\n    iv<span class=\"o\">)</span> If you are not sure how to create config JSON <span class=\"k\">then</span> call the SRController \n    without any parameter.\n\n    e.g:\n    from SanRabbit.SanRabbitController import SRController\n    rabbit.SRController<span class=\"o\">()</span>\n\n    The above code will create a sample san-rabbit-config.json <span class=\"k\">for</span> you, and later \n    you can verify  the JSON and modify accordingly.\n\nStep :3: Sample Code\n~~~~~~~~~~~~~~~~~~~~~\nPlease refer SampleSend.py and SampleReceive.py <span class=\"k\">for</span> detailed code.\n</pre>\n<h2>Known Issues</h2>\n<pre>Exception handling module need more refinement. I will provide the list ASAP.\n</pre>\n<h2>License</h2>\n<pre>MIT License\n\nCopyright <span class=\"o\">(</span>c<span class=\"o\">)</span> <span class=\"m\">2020</span> Santanu Mohapatro\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files <span class=\"o\">(</span>the <span class=\"s2\">\"Software\"</span><span class=\"o\">)</span>, to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to <span class=\"k\">do</span> so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED <span class=\"s2\">\"AS IS\"</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</pre>\n<h2>Author</h2>\n<pre>Santanu Mohapatro\n<span class=\"o\">(</span>mksantanu@me.com<span class=\"o\">)</span>\nIBMers can contact me via.\nMail: shmohapa@in.ibm.com\nSLACK: @mksantanu\n</pre>\n\n          </div>"}, "last_serial": 7099841, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "203f4c3c3d2868ea7586e142f25f42e2", "sha256": "45a897fdfe7132252e4628fa2a3aff7a1bd3512b88a41ec87ce901f091f5743c"}, "downloads": -1, "filename": "SanRabbit-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "203f4c3c3d2868ea7586e142f25f42e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7261, "upload_time": "2020-04-25T14:37:07", "upload_time_iso_8601": "2020-04-25T14:37:07.077444Z", "url": "https://files.pythonhosted.org/packages/fd/cc/d24b2726fcbaded7eb99fc08c51d52b334b09e5403fbc774a5bd2d0a4d41/SanRabbit-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3491bba6ac54688875316bedb29c895e", "sha256": "c07876f87e60b8a4025af392684a94e3c93e63216552864837f83acc724a6dd2"}, "downloads": -1, "filename": "SanRabbit-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3491bba6ac54688875316bedb29c895e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2020-04-25T14:37:09", "upload_time_iso_8601": "2020-04-25T14:37:09.352661Z", "url": "https://files.pythonhosted.org/packages/16/70/3aa22ec6ac46b4412c4f73324862a87e5705bd540e1025b8ea7500f3c654/SanRabbit-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "203f4c3c3d2868ea7586e142f25f42e2", "sha256": "45a897fdfe7132252e4628fa2a3aff7a1bd3512b88a41ec87ce901f091f5743c"}, "downloads": -1, "filename": "SanRabbit-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "203f4c3c3d2868ea7586e142f25f42e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7261, "upload_time": "2020-04-25T14:37:07", "upload_time_iso_8601": "2020-04-25T14:37:07.077444Z", "url": "https://files.pythonhosted.org/packages/fd/cc/d24b2726fcbaded7eb99fc08c51d52b334b09e5403fbc774a5bd2d0a4d41/SanRabbit-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3491bba6ac54688875316bedb29c895e", "sha256": "c07876f87e60b8a4025af392684a94e3c93e63216552864837f83acc724a6dd2"}, "downloads": -1, "filename": "SanRabbit-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3491bba6ac54688875316bedb29c895e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2020-04-25T14:37:09", "upload_time_iso_8601": "2020-04-25T14:37:09.352661Z", "url": "https://files.pythonhosted.org/packages/16/70/3aa22ec6ac46b4412c4f73324862a87e5705bd540e1025b8ea7500f3c654/SanRabbit-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:40 2020"}