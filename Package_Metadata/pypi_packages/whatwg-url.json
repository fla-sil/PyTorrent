{"info": {"author": "Seth Michael Larson", "author_email": "sethmichaellarson@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet"], "description": "# whatwg-url\n\n[![Travis](https://img.shields.io/travis/SethMichaelLarson/whatwg-url/master.svg)](https://travis-ci.org/SethMichaelLarson/whatwg-url)\n[![Codecov](https://img.shields.io/codecov/c/github/SethMichaelLarson/whatwg-url/master.svg)](https://codecov.io/gh/SethMichaelLarson/whatwg-url)\n[![PyPI](https://badge.fury.io/py/whatwg-url.svg)](https://pypi.org/project/whatwg-url)\n\nPython implementation of the [WHATWG URL Living Standard](https://url.spec.whatwg.org/).\n\nThe latest revision that this package implements of the standard is August 7th, 2018 ([`commit 49060c7`](https://github.com/whatwg/url/commit/49060c74d3047602a572f9e88a6a1101f4fd32f3))\n\n## Getting Started\n\nInstall the `whatwg-url` package using `pip`.\n\n`python -m pip install whatwg-url`\n\nAnd use the module like so:\n\n```python\nimport whatwg_url\n\nurl = whatwg_url.parse_url(\"https://www.google.com\")\nprint(url)\n# Url(scheme='https', hostname='www.google.com', port=None, path='', query='', fragment='')\n```\n\n## Features\n\n### Compatibility with `urllib.parse.urlparse()`\n\n```python\nimport whatwg_url\n\nparseresult = whatwg_url.urlparse(\"https://seth:larson@www.google.com:1234/maps?query=string#fragment\")\n\nprint(parseresult.scheme)  # 'https'\nprint(parseresult.netloc)  # 'www.google.com:1234'\nprint(parseresult.userinfo)  # 'seth:larson'\nprint(parseresult.path)  # '/maps'\nprint(parseresult.params)  # ''\nprint(parseresult.query)  # 'query=string'\nprint(parseresult.fragment)  # 'fragment'\nprint(parseresult.username)  # 'seth'\nprint(parseresult.password)  # 'larson'\nprint(parseresult.hostname)  # 'www.google.com'\nprint(parseresult.port)  # 1234\nprint(parseresult.geturl())  # 'https://seth:larson@www.google.com:1234/maps?query=string#fragment'\n```\n\n### URL Normalization\n\nThe WHATWG URL specification describes methods of normalizing URL inputs to usable URLs.\nIt handles percent-encodings, default ports, paths, IPv4 and IPv6 addresses, IDNA (2008 and 2003), multiple slashes after scheme, etc.\n\n```python\nimport whatwg_url\n\nprint(whatwg_url.normalize_url(\"https://////www.google.com\"))  # https://www.google.com\nprint(whatwg_url.normalize_url(\"https://www.google.com/dir1/../dir2\"))  # https://www.google.com/dir2\nprint(whatwg_url.normalize_url(\"https://\u4f60\u597d\u4f60\u597d\"))  # https://xn--6qqa088eba/\nprint(whatwg_url.normalize_url(\"https://\uff10\uff38\uff43\uff10\uff0e\uff10\uff12\uff15\uff10\uff0e\uff10\uff11\"))  # https://192.168.0.1/\n```\n\n### URL Validation\n\n```python\nprint(whatwg_url.is_valid_url(\"https://www.google.com\"))  # True\nprint(whatwg_url.is_valid_url(\"https://www .google.com\"))  # False\n```\n\n### Relative URLs\n\nHTTP redirects often contain relative URLs (via the `Location` header) that need to be applied to the current URL location.\nSpecifying the `base` parameter allows for giving relative URLs as input and the changes be applied to a new `URL` object.\n\n```python\nimport whatwg_url\n\nurl = whatwg_url.parse_url(\"../dev?a=1#f\", base=\"https://www.google.com/maps\")\nprint(url.href)  # https://www.google.com/dev?a=1#f\n```\n\n### URL Property Mutators\n\nModifying properties on a `URL` object use the parser and \"state overrides\" to properly mutate the `URL` object.\n\n```python\nurl = whatwg_url.parse_url(\"http://www.google.com:443\")\n\nprint(url.scheme)  # 'http'\nprint(url.port)  # 443\n\nurl.scheme = 'https'\n\nprint(url.scheme)  # 'https'\nprint(url.port)  # None\n```\n\n### \"Splatable\"\n\nThe module is a single file which allows for easy vendoring into projects.\n\n## License\n\n[Apache-2.0](https://github.com/SethMichaelLarson/whatwg-url/blob/master/LICENSE)\n\n\n# Changelog\n\n## 2018.8.26\n\n### Added\n\n- Added `UrlParser` and `Url`\n- Added `UrlParser.parse_host()`\n- Added `UrlParser.parse_ipv4_host()`\n- Added `Url.origin`\n- Added `Url.authority`\n- Added `urlparse` and `urljoin` to be compatible with\n  [`urllib3.parse.urlparse`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse)\n  and [`urllib.parse.urljoin`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin)\n- Added support for Python 2.7, 3.4, and 3.5", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SethMichaelLarson/whatwg-url", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "whatwg-url", "package_url": "https://pypi.org/project/whatwg-url/", "platform": "", "project_url": "https://pypi.org/project/whatwg-url/", "project_urls": {"Homepage": "https://github.com/SethMichaelLarson/whatwg-url"}, "release_url": "https://pypi.org/project/whatwg-url/2018.8.26/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of the WHATWG URL Living Standard", "version": "2018.8.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>whatwg-url</h1>\n<p><a href=\"https://travis-ci.org/SethMichaelLarson/whatwg-url\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e401615a1d8132811cfdd33480fe9f039c22e5d1/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f536574684d69636861656c4c6172736f6e2f7768617477672d75726c2f6d61737465722e737667\"></a>\n<a href=\"https://codecov.io/gh/SethMichaelLarson/whatwg-url\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cd0ed3dd93d0f5b546a08d7fb6dfb54778a327a/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f536574684d69636861656c4c6172736f6e2f7768617477672d75726c2f6d61737465722e737667\"></a>\n<a href=\"https://pypi.org/project/whatwg-url\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/526106c83e8f1c3581fbdad7b2044a05d855e48d/68747470733a2f2f62616467652e667572792e696f2f70792f7768617477672d75726c2e737667\"></a></p>\n<p>Python implementation of the <a href=\"https://url.spec.whatwg.org/\" rel=\"nofollow\">WHATWG URL Living Standard</a>.</p>\n<p>The latest revision that this package implements of the standard is August 7th, 2018 (<a href=\"https://github.com/whatwg/url/commit/49060c74d3047602a572f9e88a6a1101f4fd32f3\" rel=\"nofollow\"><code>commit 49060c7</code></a>)</p>\n<h2>Getting Started</h2>\n<p>Install the <code>whatwg-url</code> package using <code>pip</code>.</p>\n<p><code>python -m pip install whatwg-url</code></p>\n<p>And use the module like so:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">whatwg_url</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">parse_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n<span class=\"c1\"># Url(scheme='https', hostname='www.google.com', port=None, path='', query='', fragment='')</span>\n</pre>\n<h2>Features</h2>\n<h3>Compatibility with <code>urllib.parse.urlparse()</code></h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">whatwg_url</span>\n\n<span class=\"n\">parseresult</span> <span class=\"o\">=</span> <span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"s2\">\"https://seth:larson@www.google.com:1234/maps?query=string#fragment\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">scheme</span><span class=\"p\">)</span>  <span class=\"c1\"># 'https'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">netloc</span><span class=\"p\">)</span>  <span class=\"c1\"># 'www.google.com:1234'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">userinfo</span><span class=\"p\">)</span>  <span class=\"c1\"># 'seth:larson'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>  <span class=\"c1\"># '/maps'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">)</span>  <span class=\"c1\"># ''</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">)</span>  <span class=\"c1\"># 'query=string'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">fragment</span><span class=\"p\">)</span>  <span class=\"c1\"># 'fragment'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>  <span class=\"c1\"># 'seth'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">password</span><span class=\"p\">)</span>  <span class=\"c1\"># 'larson'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">hostname</span><span class=\"p\">)</span>  <span class=\"c1\"># 'www.google.com'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>  <span class=\"c1\"># 1234</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parseresult</span><span class=\"o\">.</span><span class=\"n\">geturl</span><span class=\"p\">())</span>  <span class=\"c1\"># 'https://seth:larson@www.google.com:1234/maps?query=string#fragment'</span>\n</pre>\n<h3>URL Normalization</h3>\n<p>The WHATWG URL specification describes methods of normalizing URL inputs to usable URLs.\nIt handles percent-encodings, default ports, paths, IPv4 and IPv6 addresses, IDNA (2008 and 2003), multiple slashes after scheme, etc.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">whatwg_url</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">normalize_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://////www.google.com\"</span><span class=\"p\">))</span>  <span class=\"c1\"># https://www.google.com</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">normalize_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com/dir1/../dir2\"</span><span class=\"p\">))</span>  <span class=\"c1\"># https://www.google.com/dir2</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">normalize_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://\u4f60\u597d\u4f60\u597d\"</span><span class=\"p\">))</span>  <span class=\"c1\"># https://xn--6qqa088eba/</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">normalize_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://\uff10\uff38\uff43\uff10\uff0e\uff10\uff12\uff15\uff10\uff0e\uff10\uff11\"</span><span class=\"p\">))</span>  <span class=\"c1\"># https://192.168.0.1/</span>\n</pre>\n<h3>URL Validation</h3>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">is_valid_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com\"</span><span class=\"p\">))</span>  <span class=\"c1\"># True</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">is_valid_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www .google.com\"</span><span class=\"p\">))</span>  <span class=\"c1\"># False</span>\n</pre>\n<h3>Relative URLs</h3>\n<p>HTTP redirects often contain relative URLs (via the <code>Location</code> header) that need to be applied to the current URL location.\nSpecifying the <code>base</code> parameter allows for giving relative URLs as input and the changes be applied to a new <code>URL</code> object.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">whatwg_url</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">parse_url</span><span class=\"p\">(</span><span class=\"s2\">\"../dev?a=1#f\"</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.google.com/maps\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">href</span><span class=\"p\">)</span>  <span class=\"c1\"># https://www.google.com/dev?a=1#f</span>\n</pre>\n<h3>URL Property Mutators</h3>\n<p>Modifying properties on a <code>URL</code> object use the parser and \"state overrides\" to properly mutate the <code>URL</code> object.</p>\n<pre><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">whatwg_url</span><span class=\"o\">.</span><span class=\"n\">parse_url</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.google.com:443\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">scheme</span><span class=\"p\">)</span>  <span class=\"c1\"># 'http'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>  <span class=\"c1\"># 443</span>\n\n<span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"o\">=</span> <span class=\"s1\">'https'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">scheme</span><span class=\"p\">)</span>  <span class=\"c1\"># 'https'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>  <span class=\"c1\"># None</span>\n</pre>\n<h3>\"Splatable\"</h3>\n<p>The module is a single file which allows for easy vendoring into projects.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/SethMichaelLarson/whatwg-url/blob/master/LICENSE\" rel=\"nofollow\">Apache-2.0</a></p>\n<h1>Changelog</h1>\n<h2>2018.8.26</h2>\n<h3>Added</h3>\n<ul>\n<li>Added <code>UrlParser</code> and <code>Url</code></li>\n<li>Added <code>UrlParser.parse_host()</code></li>\n<li>Added <code>UrlParser.parse_ipv4_host()</code></li>\n<li>Added <code>Url.origin</code></li>\n<li>Added <code>Url.authority</code></li>\n<li>Added <code>urlparse</code> and <code>urljoin</code> to be compatible with\n<a href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse\" rel=\"nofollow\"><code>urllib3.parse.urlparse</code></a>\nand <a href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin\" rel=\"nofollow\"><code>urllib.parse.urljoin</code></a></li>\n<li>Added support for Python 2.7, 3.4, and 3.5</li>\n</ul>\n\n          </div>"}, "last_serial": 4209352, "releases": {"2018.8.26": [{"comment_text": "", "digests": {"md5": "4850c9eed025f946bbfd19c3f618ea2f", "sha256": "a4d59cc99bf6ab5967f140316dd9bb4daf6cdb18581895ef423dd54f7b41f43b"}, "downloads": -1, "filename": "whatwg-url-2018.8.26.tar.gz", "has_sig": false, "md5_digest": "4850c9eed025f946bbfd19c3f618ea2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30373, "upload_time": "2018-08-26T22:39:57", "upload_time_iso_8601": "2018-08-26T22:39:57.516721Z", "url": "https://files.pythonhosted.org/packages/36/34/c001514dbe3cc0bf6022dde46a56dc21c3e3f8208036baf8ab995a3df7a3/whatwg-url-2018.8.26.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4850c9eed025f946bbfd19c3f618ea2f", "sha256": "a4d59cc99bf6ab5967f140316dd9bb4daf6cdb18581895ef423dd54f7b41f43b"}, "downloads": -1, "filename": "whatwg-url-2018.8.26.tar.gz", "has_sig": false, "md5_digest": "4850c9eed025f946bbfd19c3f618ea2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30373, "upload_time": "2018-08-26T22:39:57", "upload_time_iso_8601": "2018-08-26T22:39:57.516721Z", "url": "https://files.pythonhosted.org/packages/36/34/c001514dbe3cc0bf6022dde46a56dc21c3e3f8208036baf8ab995a3df7a3/whatwg-url-2018.8.26.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:53 2020"}