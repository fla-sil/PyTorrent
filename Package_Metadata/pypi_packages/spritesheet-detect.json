{"info": {"author": "Thu Hoai", "author_email": "hoai.le@f4.intek.edu.vn", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Sprites Detection\n\n## Introduction\n\nA [**sprite**](<https://en.wikipedia.org/wiki/Sprite_(computer_graphics)>) is a small [**raster graphic**](https://en.wikipedia.org/wiki/Raster_graphics) (a **bitmap**) that represents an object such as a [character, a vehicle, a projectile, etc.](https://www.youtube.com/watch?v=a1yBP5t-fSA)\n\n### Sprite Sheet\n\nIt is not uncommon for games to have tens to hundreds of sprites. Loading each of these as an individual image would consume a lot of memory and processing power. To help manage sprites and avoid using so many images, many games use [**sprite sheets**](https://www.youtube.com/watch?v=crrFUYabm6E) (also known as **image sprites**).\n\nA sprite sheet consists of multiple sprites in one image. In other words, sprite sheets pack multiple sprites into a single picture. Using sprite sheet, video game developers create sprite sheet animation representing one or several animation sequences while only loading a single file:\n\n\n### Sprite Bounding Box\n\nA frame (**bounding box**) can be used to delimit the sprite in the sprite sheet. This bounding box is defined with two 2D points `top_left` and the `bottom_right`, which their respective coordinates `x` and `y` are relative to the top-left corner of the sprite sheet's image.\n\n\n## What the project does\n- Detect sprites packed in an image (sheet) and draw their masks and bounding boxes into a new image with the same size of the original image. <br/>\n- Present a 2D map of all the the sprites with their labels. <br/>\n\n\n## Usage Information\n### Prerequisites\n- Python 3.7 is required. <br/>\n### Usage\n- Use git to clone the link `https://github.com/intek-training-jsc/sprite-sheet-hoaithu1.git` to your local directory. <br/>\n- Change the your current working directory to where you git the project. <br/>\n- Open terminal and type `pipenv install -e Pipfile` to install virtual environment. <br/>\n- For example: <br/>\n```python\n>>> from spritesheet_detect.spriteutil import SpriteSheet\n>>> sprite_sheet = SpriteSheet('Barbarian.gif')\n>>> sprites, labels = sprite_sheet.find_sprites()\n>>> len(sprites)\n39\n>>> # Create the mask image with bounding boxes.\n>>> image = sprite_sheet.create_sprite_labels_image()\n>>> image.save('barbarian_bounding_boxes.png')\n```\n\n## Contact Information\n- If you have any problems using this library, please use the contact below. <br/>\n`Email: hoai.le@f4.intek.edu.vn`\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spritesheet-detect", "package_url": "https://pypi.org/project/spritesheet-detect/", "platform": "", "project_url": "https://pypi.org/project/spritesheet-detect/", "project_urls": null, "release_url": "https://pypi.org/project/spritesheet-detect/0.0.1/", "requires_dist": ["bleach (==3.1.0)", "certifi (==2019.11.28)", "cffi (==1.13.2)", "chardet (==3.0.4)", "cryptography (==2.8)", "docutils (==0.16)", "idna (==2.8)", "keyring (==21.1.0)", "more-itertools (==8.1.0)", "numpy (==1.18.1)", "pillow (==7.0.0)", "pkginfo (==1.5.0.1)", "pycparser (==2.19)", "pygments (==2.5.2)", "readme-renderer (==24.0)", "requests (==2.22.0)", "requests-toolbelt (==0.9.1)", "six (==1.14.0)", "tqdm (==4.41.1)", "twine (==3.1.1)", "urllib3 (==1.25.7)", "webencodings (==0.5.1)", "wheel (==0.33.6)", "zipp (==2.0.0)", "importlib-metadata (==1.4.0) ; python_version < \"3.8\"", "jeepney (==0.4.2) ; sys_platform == \"linux\"", "secretstorage (==3.1.2) ; sys_platform == \"linux\""], "requires_python": ">=3.6", "summary": "SpriteSheet Detection package", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sprites Detection</h1>\n<h2>Introduction</h2>\n<p>A <a href=\"https://en.wikipedia.org/wiki/Sprite_(computer_graphics)\" rel=\"nofollow\"><strong>sprite</strong></a> is a small <a href=\"https://en.wikipedia.org/wiki/Raster_graphics\" rel=\"nofollow\"><strong>raster graphic</strong></a> (a <strong>bitmap</strong>) that represents an object such as a <a href=\"https://www.youtube.com/watch?v=a1yBP5t-fSA\" rel=\"nofollow\">character, a vehicle, a projectile, etc.</a></p>\n<h3>Sprite Sheet</h3>\n<p>It is not uncommon for games to have tens to hundreds of sprites. Loading each of these as an individual image would consume a lot of memory and processing power. To help manage sprites and avoid using so many images, many games use <a href=\"https://www.youtube.com/watch?v=crrFUYabm6E\" rel=\"nofollow\"><strong>sprite sheets</strong></a> (also known as <strong>image sprites</strong>).</p>\n<p>A sprite sheet consists of multiple sprites in one image. In other words, sprite sheets pack multiple sprites into a single picture. Using sprite sheet, video game developers create sprite sheet animation representing one or several animation sequences while only loading a single file:</p>\n<h3>Sprite Bounding Box</h3>\n<p>A frame (<strong>bounding box</strong>) can be used to delimit the sprite in the sprite sheet. This bounding box is defined with two 2D points <code>top_left</code> and the <code>bottom_right</code>, which their respective coordinates <code>x</code> and <code>y</code> are relative to the top-left corner of the sprite sheet's image.</p>\n<h2>What the project does</h2>\n<ul>\n<li>Detect sprites packed in an image (sheet) and draw their masks and bounding boxes into a new image with the same size of the original image. <br></li>\n<li>Present a 2D map of all the the sprites with their labels. <br></li>\n</ul>\n<h2>Usage Information</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>Python 3.7 is required. <br></li>\n</ul>\n<h3>Usage</h3>\n<ul>\n<li>Use git to clone the link <code>https://github.com/intek-training-jsc/sprite-sheet-hoaithu1.git</code> to your local directory. <br></li>\n<li>Change the your current working directory to where you git the project. <br></li>\n<li>Open terminal and type <code>pipenv install -e Pipfile</code> to install virtual environment. <br></li>\n<li>For example: <br></li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">spritesheet_detect.spriteutil</span> <span class=\"kn\">import</span> <span class=\"n\">SpriteSheet</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sprite_sheet</span> <span class=\"o\">=</span> <span class=\"n\">SpriteSheet</span><span class=\"p\">(</span><span class=\"s1\">'Barbarian.gif'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sprites</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">sprite_sheet</span><span class=\"o\">.</span><span class=\"n\">find_sprites</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sprites</span><span class=\"p\">)</span>\n<span class=\"mi\">39</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Create the mask image with bounding boxes.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">sprite_sheet</span><span class=\"o\">.</span><span class=\"n\">create_sprite_labels_image</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'barbarian_bounding_boxes.png'</span><span class=\"p\">)</span>\n</pre>\n<h2>Contact Information</h2>\n<ul>\n<li>If you have any problems using this library, please use the contact below. <br>\n<code>Email: hoai.le@f4.intek.edu.vn</code></li>\n</ul>\n\n          </div>"}, "last_serial": 6501081, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "3dd978dd9463b80228d2b6ce32deb334", "sha256": "4fefa493082e5eb729bfbe3da80a46eef0caac912d4c5315f060259e4d7748b3"}, "downloads": -1, "filename": "spritesheet_detect-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3dd978dd9463b80228d2b6ce32deb334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7706, "upload_time": "2020-01-22T03:22:15", "upload_time_iso_8601": "2020-01-22T03:22:15.699997Z", "url": "https://files.pythonhosted.org/packages/e0/2b/da8f63edb903d29586ea1d088a77e7b7bd54848ef600d12ee851d8123f05/spritesheet_detect-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cddd3f5d4e204e2bab7b1082cb3f37d", "sha256": "cd00d85526036ba3afc3d7a2966a740a9718b5d3cb4ce6c649b854d81d7b09d3"}, "downloads": -1, "filename": "spritesheet_detect-0.0.0.tar.gz", "has_sig": false, "md5_digest": "2cddd3f5d4e204e2bab7b1082cb3f37d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6555, "upload_time": "2020-01-22T03:22:18", "upload_time_iso_8601": "2020-01-22T03:22:18.134603Z", "url": "https://files.pythonhosted.org/packages/fb/af/55df75a6ead6c880a1e68af6f963256bfc618c5ff576858d26f52b499273/spritesheet_detect-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "21c0587999d784f837b7e83c0fe00043", "sha256": "c5a7bdf98d64fb416af21d59eb6d84846683690b0e058c16e89cbced177a9ae4"}, "downloads": -1, "filename": "spritesheet_detect-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21c0587999d784f837b7e83c0fe00043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7703, "upload_time": "2020-01-22T16:06:09", "upload_time_iso_8601": "2020-01-22T16:06:09.877725Z", "url": "https://files.pythonhosted.org/packages/bb/14/d4f1ddf990924f36edd226e1268c1daf7e7e3bb1f5562d559b801d70b7c8/spritesheet_detect-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c07edeac28063c4549928c83326c3130", "sha256": "929040a55e1bc80777ce8a9efd58b509ac0cba30b972cdc1d2c5931601a00391"}, "downloads": -1, "filename": "spritesheet_detect-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c07edeac28063c4549928c83326c3130", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6590, "upload_time": "2020-01-22T16:06:11", "upload_time_iso_8601": "2020-01-22T16:06:11.426064Z", "url": "https://files.pythonhosted.org/packages/8f/0e/fb71fe71aa6f1bc8537e7b6eea0ba16c002f65879ebb36cc28c3b82ebe30/spritesheet_detect-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21c0587999d784f837b7e83c0fe00043", "sha256": "c5a7bdf98d64fb416af21d59eb6d84846683690b0e058c16e89cbced177a9ae4"}, "downloads": -1, "filename": "spritesheet_detect-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21c0587999d784f837b7e83c0fe00043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7703, "upload_time": "2020-01-22T16:06:09", "upload_time_iso_8601": "2020-01-22T16:06:09.877725Z", "url": "https://files.pythonhosted.org/packages/bb/14/d4f1ddf990924f36edd226e1268c1daf7e7e3bb1f5562d559b801d70b7c8/spritesheet_detect-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c07edeac28063c4549928c83326c3130", "sha256": "929040a55e1bc80777ce8a9efd58b509ac0cba30b972cdc1d2c5931601a00391"}, "downloads": -1, "filename": "spritesheet_detect-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c07edeac28063c4549928c83326c3130", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6590, "upload_time": "2020-01-22T16:06:11", "upload_time_iso_8601": "2020-01-22T16:06:11.426064Z", "url": "https://files.pythonhosted.org/packages/8f/0e/fb71fe71aa6f1bc8537e7b6eea0ba16c002f65879ebb36cc28c3b82ebe30/spritesheet_detect-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:21 2020"}