{"info": {"author": "Mike Kazantsev", "author_email": "mk.fraggod@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Internet", "Topic :: Internet :: Log Analysis", "Topic :: System :: Monitoring", "Topic :: System :: Networking :: Monitoring", "Topic :: System :: Operating System Kernels :: Linux"], "description": "graphite-metrics: metric collectors for various stuff not (or poorly) handled by other monitoring daemons\n---------------------------------------------------------------------------------------------------------\n\nCore of the project is a simple daemon (harvestd), which collects metric\nvalues and sends them to graphite carbon daemon (and/or other configured\ndestinations) once per interval.\n\nIncludes separate data collection components (\"collectors\") for\nprocessing of:\n\n-  /proc/slabinfo for useful-to-watch values, not everything\n   (configurable).\n-  /proc/vmstat and /proc/meminfo in a consistent way.\n-  /proc/stat for irq, softirq, forks.\n-  /proc/buddyinfo and /proc/pagetypeinfo (memory fragmentation).\n-  /proc/interrupts and /proc/softirqs.\n-  Cron log to produce start/finish events and duration for each job\n   into a separate metrics, adapts jobs to metric names with regexes.\n-  Per-system-service accounting using\n   `systemd <http://www.freedesktop.org/wiki/Software/systemd>`__ and\n   it's cgroups (\"Default...Accounting=\" options in system.conf have to\n   be enabled for more recent versions).\n-  `sysstat <http://sebastien.godard.pagesperso-orange.fr/>`__ data from\n   sadc logs (use something like\n   ``sadc -F -L -S DISK -S XDISK -S POWER 60`` to have more stuff logged\n   there) via sadf binary and it's json export (``sadf -j``, supported\n   since sysstat-10.0.something, iirc).\n-  iptables rule \"hits\" packet and byte counters, taken from\n   ip{,6}tables-save, mapped via separate \"table chain\\_name rule\\_no\n   metric\\_name\" file, which should be generated along with firewall\n   rules (I use `this script <https://github.com/mk-fg/trilobite>`__ to\n   do that).\n\nAdditional metric collectors can be added via setuptools/distribute\ngraphite\\_metrics.collectors `entry\npoint <http://packages.python.org/distribute/setuptools.html?highlight=entry%20points#dynamic-discovery-of-services-and-plugins>`__\nand confgured via the common configuration mechanism.\n\nSame for the datapoint sinks (destinations - it doesn't have to be a\nsingle carbon host), datapoint processors (mangle/rename/filter\ndatapoints) and the main loop, which can be replaced with the async\n(simple case - threads or gevent) or buffering loop.\n\nCurrently supported backends (data destinations, sinks):\n\n-  `graphite carbon\n   daemon <http://graphite.readthedocs.org/en/latest/carbon-daemons.html>`__\n   (enabled/used by default)\n-  `librato metrics <https://metrics.librato.com/>`__\n\nLook at the shipped collectors, processors, sinks and loops and their\nbase classes (like\n`graphite\\_metrics.sinks.Sink <https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/sinks/__init__.py>`__\nor\n`loops.Basic <https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/loops/basic.py>`__)\nfor API examples.\n\nInstallation\n------------\n\nIt's a regular package for Python 2.7 (not 3.X).\n\nUsing `pip <http://pip-installer.org/>`__ is the best way:\n\n::\n\n    % pip install graphite-metrics\n\nIf you don't have it, use:\n\n::\n\n    % easy_install pip\n    % pip install graphite-metrics\n\nAlternatively (`see\nalso <http://www.pip-installer.org/en/latest/installing.html>`__):\n\n::\n\n    % curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n    % pip install graphite-metrics\n\nOr, if you absolutely must:\n\n::\n\n    % easy_install graphite-metrics\n\nBut, you really shouldn't do that.\n\nCurrent-git version can be installed like this:\n\n::\n\n    % pip install 'git+https://github.com/mk-fg/graphite-metrics.git#egg=graphite-metrics'\n\nRequirements\n~~~~~~~~~~~~\n\nBasic requirements are (pip or easy\\_install should handle these for\nyou):\n\n-  `setuptools /\n   distribute <https://pypi.python.org/pypi/distribute/>`__ (for entry\n   points)\n-  `layered-yaml-attrdict-config <https://pypi.python.org/pypi/layered-yaml-attrdict-config/>`__\n\nSome shipped modules require additional packages to function (which can\nbe installed automatically by specifying extras on install, example:\n``pip install 'graphite-metrics[collectors.cgacct]'``):\n\n-  collectors\n\n   -  cgacct\n\n      -  `dbus-python <https://pypi.python.org/pypi/dbus-python/>`__\n\n   -  cron\\_log\n\n      -  `xattr <http://pypi.python.org/pypi/xattr/>`__ (unless\n         --xattr-emulation is used)\n      -  `iso8601 <http://pypi.python.org/pypi/iso8601/>`__\n\n   -  sysstat\n\n      -  `xattr <http://pypi.python.org/pypi/xattr/>`__ (unless\n         --xattr-emulation is used)\n      -  (optional)\n         `simplejson <http://pypi.python.org/pypi/simplejson/>`__ - for\n         better performance than stdlib json module\n\n-  sinks\n\n   -  librato\\_metrics\n\n      -  `requests <http://pypi.python.org/pypi/requests/>`__\n      -  (optional)\n         `simplejson <http://pypi.python.org/pypi/simplejson/>`__ - for\n         better performance than stdlib json module\n      -  (optional) `gevent <http://pypi.python.org/pypi/gevent/>`__ -\n         to enable constant-time (more scalable) async submissions of\n         large data chunks via concurrent API requests\n\nAlso see\n`requirements.txt <https://github.com/mk-fg/graphite-metrics/blob/master/requirements.txt>`__\nfile or \"install\\_requires\" and \"extras\\_require\" in\n`setup.py <https://github.com/mk-fg/graphite-metrics/blob/master/setup.py>`__.\n\nRunning\n-------\n\nFirst run should probably look like this:\n\n::\n\n    % harvestd --debug -s dump -i10\n\nThat will use default configuration with all the collectors enabled,\ndumping data to stderr (only \"dump\" data-sink enabled) and using short\n(5s) interval between collected datapoints, dumpng additional info about\nwhat's being done.\n\nAfter that, see `default harvestd.yaml configuration\nfile <https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/harvestd.yaml>`__,\nwhich contains configuration for all loaded collectors and can/should be\noveridden using -c option.\n\nNote that you don't have to specify all the options in each\noverride-config, just the ones you need to update.\n\nFor example, simple configuration file (say, /etc/harvestd.yaml) just to\nspecify carbon host and log lines format (dropping timestamp, since it\nwill be piped to syslog or systemd-journal anyway) might look like this:\n\n::\n\n    sinks:\n      carbon_socket:\n        host: carbon.example.host\n\n    logging:\n      formatters:\n        basic:\n          format: '%(levelname)s :: %(name)s: %(message)s'\n\nAnd be started like this: ``harvestd -c /etc/harvestd.yaml``\n\nSee ``harvestd --help`` output for a full CLI reference.\n\nCaveats, Stern Warnings and Apocalyptic Prophecies\n--------------------------------------------------\n\nWhile most stock collectors here pull metrics from /proc once per some\ninterval, same as the other tools, be especially wary of the ones that\nprocess memory metrics, like /proc/slabinfo and cgroup value parsers.\n\nSo-called \"files\" in /proc are actually callbacks in the kernel code,\nand to get consistent reading for the whole slabinfo table, (at least\nsome versions) of the kernel have to lock some operations, causing\nunexpected lags and delays on the whole system under some workloads\n(e.g. memcache servers).\n\ncgroup data collector processes lots of files, potentially dozens,\nhundreds or even thoursands per collection cycle, which may also cause\nsimilar issues.\n\nSpecial thanks to Marcus Barczak for pointing that out.\n\nRationale\n---------\n\nMost other tools can (in theory) collect this data, and I've used\n`collectd <http://collectd.org>`__ for most of these, but it:\n\n-  Doesn't provide some of the most useful stuff - nfs stats, disk\n   utilization time percentage, etc.\n\n-  Fails to collect some other stats, producing strange values like\n   0'es, unrealistic or negative values (for io, network, sensors, ...).\n\n-  General-purpose plugins like \"tail\" add lot of complexity, making\n   configuration into a mess, while still lacking some basic\n   functionality which 10 lines of code (plugin) can easily provide\n   (support is there, but see below).\n\n-  Plugins change metric names from the ones provided by /proc,\n   referenced in kernel Documentation and on the internets, making\n   collected data unnecessary hard to interpret and raising questions\n   about it's meaning (which is increasingly important for low-level and\n   calculated metrics).\n\nInitially I've tried to address these issues (implement the same\ncollectors) with collectd plugins, but it's python plugin system turned\nout to be leaking RAM and collectd itself segfaults something like\nonce-a-day, even in the latest releases, although probably because of\nissues in C plugins.\n\nPlus, collectd data requires post-processing anyway - proper metric\nnamespaces, counter handling, etc.\n\nGiven that the alternative is to just get the data and echo it as \"name\nval timestamp\" to tcp socket, decided to avoid the extra complexity and\nproblems that collectd provides.\n\nOther than collectd, I've experimented with\n`ganglia <http://ganglia.sourceforge.net/>`__,\n`munin <http://munin-monitoring.org/>`__, and some other monitoring\ninfrastructures, but found little justification in re-using their\naggregation and/or collection infrastructure, if not outright\nlimitations (like static data schema in ganglia).\n\nDaemon binary is (weirdly) called \"harvestd\" because \"metricsd\" name is\nalready used to refer to `another related\ndaemon <https://github.com/kpumuk/metricsd>`__ (also, `there's a\n\"metrics\" w/o \"d\" <https://github.com/codahale/metrics>`__, probably\nothers), and is too generic to be used w/o extra confusion, I think.\nThat, and I seem to lack creativity to come up with a saner name\n(\"reaperd\" sounds too MassEffect'ish these days).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mk-fg/graphite-metrics", "keywords": "graphite sysstat systemd cgroups metrics proc", "license": "WTFPL", "maintainer": null, "maintainer_email": null, "name": "graphite-metrics", "package_url": "https://pypi.org/project/graphite-metrics/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/graphite-metrics/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mk-fg/graphite-metrics"}, "release_url": "https://pypi.org/project/graphite-metrics/15.03.0/", "requires_dist": null, "requires_python": null, "summary": "Standalone Graphite metric data collectors for various stuff thats not (or poorly) handled by other monitoring daemons", "version": "15.03.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"graphite-metrics-metric-collectors-for-various-stuff-not-or-poorly-handled-by-other-monitoring-daemons\">\n<h2>graphite-metrics: metric collectors for various stuff not (or poorly) handled by other monitoring daemons</h2>\n<p>Core of the project is a simple daemon (harvestd), which collects metric\nvalues and sends them to graphite carbon daemon (and/or other configured\ndestinations) once per interval.</p>\n<p>Includes separate data collection components (\u201ccollectors\u201d) for\nprocessing of:</p>\n<ul>\n<li>/proc/slabinfo for useful-to-watch values, not everything\n(configurable).</li>\n<li>/proc/vmstat and /proc/meminfo in a consistent way.</li>\n<li>/proc/stat for irq, softirq, forks.</li>\n<li>/proc/buddyinfo and /proc/pagetypeinfo (memory fragmentation).</li>\n<li>/proc/interrupts and /proc/softirqs.</li>\n<li>Cron log to produce start/finish events and duration for each job\ninto a separate metrics, adapts jobs to metric names with regexes.</li>\n<li>Per-system-service accounting using\n<a href=\"http://www.freedesktop.org/wiki/Software/systemd\" rel=\"nofollow\">systemd</a> and\nit\u2019s cgroups (\u201cDefault\u2026Accounting=\u201d options in system.conf have to\nbe enabled for more recent versions).</li>\n<li><a href=\"http://sebastien.godard.pagesperso-orange.fr/\" rel=\"nofollow\">sysstat</a> data from\nsadc logs (use something like\n<tt>sadc <span class=\"pre\">-F</span> <span class=\"pre\">-L</span> <span class=\"pre\">-S</span> DISK <span class=\"pre\">-S</span> XDISK <span class=\"pre\">-S</span> POWER 60</tt> to have more stuff logged\nthere) via sadf binary and it\u2019s json export (<tt>sadf <span class=\"pre\">-j</span></tt>, supported\nsince sysstat-10.0.something, iirc).</li>\n<li>iptables rule \u201chits\u201d packet and byte counters, taken from\nip{,6}tables-save, mapped via separate \u201ctable chain_name rule_no\nmetric_name\u201d file, which should be generated along with firewall\nrules (I use <a href=\"https://github.com/mk-fg/trilobite\" rel=\"nofollow\">this script</a> to\ndo that).</li>\n</ul>\n<p>Additional metric collectors can be added via setuptools/distribute\ngraphite_metrics.collectors <a href=\"http://packages.python.org/distribute/setuptools.html?highlight=entry%20points#dynamic-discovery-of-services-and-plugins\" rel=\"nofollow\">entry\npoint</a>\nand confgured via the common configuration mechanism.</p>\n<p>Same for the datapoint sinks (destinations - it doesn\u2019t have to be a\nsingle carbon host), datapoint processors (mangle/rename/filter\ndatapoints) and the main loop, which can be replaced with the async\n(simple case - threads or gevent) or buffering loop.</p>\n<p>Currently supported backends (data destinations, sinks):</p>\n<ul>\n<li><a href=\"http://graphite.readthedocs.org/en/latest/carbon-daemons.html\" rel=\"nofollow\">graphite carbon\ndaemon</a>\n(enabled/used by default)</li>\n<li><a href=\"https://metrics.librato.com/\" rel=\"nofollow\">librato metrics</a></li>\n</ul>\n<p>Look at the shipped collectors, processors, sinks and loops and their\nbase classes (like\n<a href=\"https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/sinks/__init__.py\" rel=\"nofollow\">graphite_metrics.sinks.Sink</a>\nor\n<a href=\"https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/loops/basic.py\" rel=\"nofollow\">loops.Basic</a>)\nfor API examples.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>It\u2019s a regular package for Python 2.7 (not 3.X).</p>\n<p>Using <a href=\"http://pip-installer.org/\" rel=\"nofollow\">pip</a> is the best way:</p>\n<pre>% pip install graphite-metrics\n</pre>\n<p>If you don\u2019t have it, use:</p>\n<pre>% easy_install pip\n% pip install graphite-metrics\n</pre>\n<p>Alternatively (<a href=\"http://www.pip-installer.org/en/latest/installing.html\" rel=\"nofollow\">see\nalso</a>):</p>\n<pre>% curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n% pip install graphite-metrics\n</pre>\n<p>Or, if you absolutely must:</p>\n<pre>% easy_install graphite-metrics\n</pre>\n<p>But, you really shouldn\u2019t do that.</p>\n<p>Current-git version can be installed like this:</p>\n<pre>% pip install 'git+https://github.com/mk-fg/graphite-metrics.git#egg=graphite-metrics'\n</pre>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Basic requirements are (pip or easy_install should handle these for\nyou):</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/distribute/\" rel=\"nofollow\">setuptools /\ndistribute</a> (for entry\npoints)</li>\n<li><a href=\"https://pypi.python.org/pypi/layered-yaml-attrdict-config/\" rel=\"nofollow\">layered-yaml-attrdict-config</a></li>\n</ul>\n<p>Some shipped modules require additional packages to function (which can\nbe installed automatically by specifying extras on install, example:\n<tt>pip install <span class=\"pre\">'graphite-metrics[collectors.cgacct]'</span></tt>):</p>\n<ul>\n<li>collectors<ul>\n<li>cgacct<ul>\n<li><a href=\"https://pypi.python.org/pypi/dbus-python/\" rel=\"nofollow\">dbus-python</a></li>\n</ul>\n</li>\n<li>cron_log<ul>\n<li><a href=\"http://pypi.python.org/pypi/xattr/\" rel=\"nofollow\">xattr</a> (unless\n\u2013xattr-emulation is used)</li>\n<li><a href=\"http://pypi.python.org/pypi/iso8601/\" rel=\"nofollow\">iso8601</a></li>\n</ul>\n</li>\n<li>sysstat<ul>\n<li><a href=\"http://pypi.python.org/pypi/xattr/\" rel=\"nofollow\">xattr</a> (unless\n\u2013xattr-emulation is used)</li>\n<li>(optional)\n<a href=\"http://pypi.python.org/pypi/simplejson/\" rel=\"nofollow\">simplejson</a> - for\nbetter performance than stdlib json module</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>sinks<ul>\n<li>librato_metrics<ul>\n<li><a href=\"http://pypi.python.org/pypi/requests/\" rel=\"nofollow\">requests</a></li>\n<li>(optional)\n<a href=\"http://pypi.python.org/pypi/simplejson/\" rel=\"nofollow\">simplejson</a> - for\nbetter performance than stdlib json module</li>\n<li>(optional) <a href=\"http://pypi.python.org/pypi/gevent/\" rel=\"nofollow\">gevent</a> -\nto enable constant-time (more scalable) async submissions of\nlarge data chunks via concurrent API requests</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Also see\n<a href=\"https://github.com/mk-fg/graphite-metrics/blob/master/requirements.txt\" rel=\"nofollow\">requirements.txt</a>\nfile or \u201cinstall_requires\u201d and \u201cextras_require\u201d in\n<a href=\"https://github.com/mk-fg/graphite-metrics/blob/master/setup.py\" rel=\"nofollow\">setup.py</a>.</p>\n</div>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>First run should probably look like this:</p>\n<pre>% harvestd --debug -s dump -i10\n</pre>\n<p>That will use default configuration with all the collectors enabled,\ndumping data to stderr (only \u201cdump\u201d data-sink enabled) and using short\n(5s) interval between collected datapoints, dumpng additional info about\nwhat\u2019s being done.</p>\n<p>After that, see <a href=\"https://github.com/mk-fg/graphite-metrics/blob/master/graphite_metrics/harvestd.yaml\" rel=\"nofollow\">default harvestd.yaml configuration\nfile</a>,\nwhich contains configuration for all loaded collectors and can/should be\noveridden using -c option.</p>\n<p>Note that you don\u2019t have to specify all the options in each\noverride-config, just the ones you need to update.</p>\n<p>For example, simple configuration file (say, /etc/harvestd.yaml) just to\nspecify carbon host and log lines format (dropping timestamp, since it\nwill be piped to syslog or systemd-journal anyway) might look like this:</p>\n<pre>sinks:\n  carbon_socket:\n    host: carbon.example.host\n\nlogging:\n  formatters:\n    basic:\n      format: '%(levelname)s :: %(name)s: %(message)s'\n</pre>\n<p>And be started like this: <tt>harvestd <span class=\"pre\">-c</span> /etc/harvestd.yaml</tt></p>\n<p>See <tt>harvestd <span class=\"pre\">--help</span></tt> output for a full CLI reference.</p>\n</div>\n<div id=\"caveats-stern-warnings-and-apocalyptic-prophecies\">\n<h2>Caveats, Stern Warnings and Apocalyptic Prophecies</h2>\n<p>While most stock collectors here pull metrics from /proc once per some\ninterval, same as the other tools, be especially wary of the ones that\nprocess memory metrics, like /proc/slabinfo and cgroup value parsers.</p>\n<p>So-called \u201cfiles\u201d in /proc are actually callbacks in the kernel code,\nand to get consistent reading for the whole slabinfo table, (at least\nsome versions) of the kernel have to lock some operations, causing\nunexpected lags and delays on the whole system under some workloads\n(e.g. memcache servers).</p>\n<p>cgroup data collector processes lots of files, potentially dozens,\nhundreds or even thoursands per collection cycle, which may also cause\nsimilar issues.</p>\n<p>Special thanks to Marcus Barczak for pointing that out.</p>\n</div>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p>Most other tools can (in theory) collect this data, and I\u2019ve used\n<a href=\"http://collectd.org\" rel=\"nofollow\">collectd</a> for most of these, but it:</p>\n<ul>\n<li>Doesn\u2019t provide some of the most useful stuff - nfs stats, disk\nutilization time percentage, etc.</li>\n<li>Fails to collect some other stats, producing strange values like\n0\u2019es, unrealistic or negative values (for io, network, sensors, \u2026).</li>\n<li>General-purpose plugins like \u201ctail\u201d add lot of complexity, making\nconfiguration into a mess, while still lacking some basic\nfunctionality which 10 lines of code (plugin) can easily provide\n(support is there, but see below).</li>\n<li>Plugins change metric names from the ones provided by /proc,\nreferenced in kernel Documentation and on the internets, making\ncollected data unnecessary hard to interpret and raising questions\nabout it\u2019s meaning (which is increasingly important for low-level and\ncalculated metrics).</li>\n</ul>\n<p>Initially I\u2019ve tried to address these issues (implement the same\ncollectors) with collectd plugins, but it\u2019s python plugin system turned\nout to be leaking RAM and collectd itself segfaults something like\nonce-a-day, even in the latest releases, although probably because of\nissues in C plugins.</p>\n<p>Plus, collectd data requires post-processing anyway - proper metric\nnamespaces, counter handling, etc.</p>\n<p>Given that the alternative is to just get the data and echo it as \u201cname\nval timestamp\u201d to tcp socket, decided to avoid the extra complexity and\nproblems that collectd provides.</p>\n<p>Other than collectd, I\u2019ve experimented with\n<a href=\"http://ganglia.sourceforge.net/\" rel=\"nofollow\">ganglia</a>,\n<a href=\"http://munin-monitoring.org/\" rel=\"nofollow\">munin</a>, and some other monitoring\ninfrastructures, but found little justification in re-using their\naggregation and/or collection infrastructure, if not outright\nlimitations (like static data schema in ganglia).</p>\n<p>Daemon binary is (weirdly) called \u201charvestd\u201d because \u201cmetricsd\u201d name is\nalready used to refer to <a href=\"https://github.com/kpumuk/metricsd\" rel=\"nofollow\">another related\ndaemon</a> (also, <a href=\"https://github.com/codahale/metrics\" rel=\"nofollow\">there\u2019s a\n\u201cmetrics\u201d w/o \u201cd\u201d</a>, probably\nothers), and is too generic to be used w/o extra confusion, I think.\nThat, and I seem to lack creativity to come up with a saner name\n(\u201creaperd\u201d sounds too MassEffect\u2019ish these days).</p>\n</div>\n\n          </div>"}, "last_serial": 1462353, "releases": {"12.04.20": [], "12.04.21": [{"comment_text": "", "digests": {"md5": "53a63a437d7cc9a5ac457a25538713e5", "sha256": "54c3f918fa9992455911a4666af0d34d6010d5fb10547311e5fbb6a381e27641"}, "downloads": -1, "filename": "graphite-metrics-12.04.21.tar.gz", "has_sig": true, "md5_digest": "53a63a437d7cc9a5ac457a25538713e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22976, "upload_time": "2012-04-12T18:59:45", "upload_time_iso_8601": "2012-04-12T18:59:45.445159Z", "url": "https://files.pythonhosted.org/packages/91/8f/77fffda7b13782b27e81a066ef53d6f26ce145c7fc86dc1c94c477e0af7d/graphite-metrics-12.04.21.tar.gz", "yanked": false}], "12.04.22": [{"comment_text": "", "digests": {"md5": "cdddb2a1e3b59f56e6f28e48cbedfe42", "sha256": "7dd21550b5481d61814ca6bc40362cf42557ea96f7bbd3e3ded0766d1e7613b3"}, "downloads": -1, "filename": "graphite-metrics-12.04.22.tar.gz", "has_sig": true, "md5_digest": "cdddb2a1e3b59f56e6f28e48cbedfe42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22987, "upload_time": "2012-04-13T13:21:30", "upload_time_iso_8601": "2012-04-13T13:21:30.131342Z", "url": "https://files.pythonhosted.org/packages/6b/13/7747f5f2d277f0cf957796ced565a082af281f63f725a209bfd3fb71a7c3/graphite-metrics-12.04.22.tar.gz", "yanked": false}], "12.04.26": [{"comment_text": "", "digests": {"md5": "5a48fe01a70dc41cba793b4240a52e0d", "sha256": "591a11e602a83abee7a5ec06c05c6f96d9850eeed4e5da775b9e8e614ed2a311"}, "downloads": -1, "filename": "graphite-metrics-12.04.26.tar.gz", "has_sig": true, "md5_digest": "5a48fe01a70dc41cba793b4240a52e0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23116, "upload_time": "2012-04-15T14:35:49", "upload_time_iso_8601": "2012-04-15T14:35:49.861824Z", "url": "https://files.pythonhosted.org/packages/a1/67/9dd84f67831fafc27a9cf7b657255aeca670c296eebf5961b6e108a806e2/graphite-metrics-12.04.26.tar.gz", "yanked": false}], "12.04.31": [{"comment_text": "", "digests": {"md5": "190ac8d5f76f68cc1552220561862bd0", "sha256": "b891d50a84c7eddc5f61806cea5b47d4b772228c5f9477c062370bbc5b8cf80f"}, "downloads": -1, "filename": "graphite-metrics-12.04.31.tar.gz", "has_sig": true, "md5_digest": "190ac8d5f76f68cc1552220561862bd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25323, "upload_time": "2012-04-20T21:28:24", "upload_time_iso_8601": "2012-04-20T21:28:24.074692Z", "url": "https://files.pythonhosted.org/packages/fe/0b/dfefe20a8b0bc702a646be75a730cd254423972c7d3b87eba211a210c690/graphite-metrics-12.04.31.tar.gz", "yanked": false}], "12.04.33": [{"comment_text": "", "digests": {"md5": "9e37abc812dfe0ac84e7f4367c27a354", "sha256": "037ec3e05fc57cfbac93e57f037c328faa880ca32a88676c6742b0a99ab79a5f"}, "downloads": -1, "filename": "graphite-metrics-12.04.33.tar.gz", "has_sig": true, "md5_digest": "9e37abc812dfe0ac84e7f4367c27a354", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25306, "upload_time": "2012-04-22T08:19:52", "upload_time_iso_8601": "2012-04-22T08:19:52.046621Z", "url": "https://files.pythonhosted.org/packages/62/68/213a0683a45fb542bd00abe63d13a3322884725178cbe80db5c2b81b6449/graphite-metrics-12.04.33.tar.gz", "yanked": false}], "12.04.35": [{"comment_text": "", "digests": {"md5": "ab30c33f72fb6d8b102fcc77bf6d024d", "sha256": "283277152bdf2a718e4348f5f97a0e8ad1466b3efe236b8982e28ade30d0627e"}, "downloads": -1, "filename": "graphite-metrics-12.04.35.tar.gz", "has_sig": true, "md5_digest": "ab30c33f72fb6d8b102fcc77bf6d024d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25412, "upload_time": "2012-04-22T09:57:47", "upload_time_iso_8601": "2012-04-22T09:57:47.970865Z", "url": "https://files.pythonhosted.org/packages/bb/05/465bcca8f5337055a2897d7008092b62d0976c2ac0641fb3faaa853d2418/graphite-metrics-12.04.35.tar.gz", "yanked": false}], "12.04.37": [{"comment_text": "", "digests": {"md5": "228cc90ab20446ff5e467c15e1581ae9", "sha256": "5febf36757f40b1ec9c1a58364bc16a5656aef436239d25f85cdcca4d82cebcd"}, "downloads": -1, "filename": "graphite-metrics-12.04.37.tar.gz", "has_sig": true, "md5_digest": "228cc90ab20446ff5e467c15e1581ae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26398, "upload_time": "2012-04-22T23:14:16", "upload_time_iso_8601": "2012-04-22T23:14:16.032985Z", "url": "https://files.pythonhosted.org/packages/08/c8/c2f4d3db44b98a48dbe18778ec7a17cc46a3c8fab476be2a139ccf038507/graphite-metrics-12.04.37.tar.gz", "yanked": false}], "12.04.42": [{"comment_text": "", "digests": {"md5": "f099552582abf3c4296f10f1a95715e2", "sha256": "ddc3007487d9f804d8ce6c8f65bc8588b8abb47cbc77bd6a8acfc456ca4a9135"}, "downloads": -1, "filename": "graphite-metrics-12.04.42.tar.gz", "has_sig": true, "md5_digest": "f099552582abf3c4296f10f1a95715e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28796, "upload_time": "2012-04-25T20:42:18", "upload_time_iso_8601": "2012-04-25T20:42:18.689411Z", "url": "https://files.pythonhosted.org/packages/2d/cc/63568f0d83b311726055d4524871b9e385dc0910c88a57a6cb9f2dcbf20a/graphite-metrics-12.04.42.tar.gz", "yanked": false}], "12.04.43": [{"comment_text": "", "digests": {"md5": "dbcd998ed9762d1fc4d1247d2aa3bbb9", "sha256": "aef984274ae90fc9cc57a9b9143aef8f4cef12e65700f4bac15853b10a6d4e0d"}, "downloads": -1, "filename": "graphite-metrics-12.04.43.tar.gz", "has_sig": true, "md5_digest": "dbcd998ed9762d1fc4d1247d2aa3bbb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28812, "upload_time": "2012-04-25T21:53:53", "upload_time_iso_8601": "2012-04-25T21:53:53.816591Z", "url": "https://files.pythonhosted.org/packages/45/e8/57481b4dad3659e60b54e11e2c41cfd64fad8ffe5ac3112a3baf25bb0547/graphite-metrics-12.04.43.tar.gz", "yanked": false}], "12.04.44": [{"comment_text": "", "digests": {"md5": "f5a37794425fc0f2485134b7ba43b2d7", "sha256": "091806a6d68871393b9d611085c7b7cb23adedcd5c13cddff5c478c1b493487a"}, "downloads": -1, "filename": "graphite-metrics-12.04.44.tar.gz", "has_sig": true, "md5_digest": "f5a37794425fc0f2485134b7ba43b2d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28820, "upload_time": "2012-04-26T07:54:18", "upload_time_iso_8601": "2012-04-26T07:54:18.386041Z", "url": "https://files.pythonhosted.org/packages/d1/9d/4d85b6b90d8d8ee44b244e99eb7afd02de13abd34215b0f00d59291d99a8/graphite-metrics-12.04.44.tar.gz", "yanked": false}], "12.04.46": [{"comment_text": "", "digests": {"md5": "2eb57258f6e677ce4904d96ef358e7e6", "sha256": "93a2b94c0ddd619f02a6e85605a706d4d39a57eb59ff7761880c18ceb57f2efe"}, "downloads": -1, "filename": "graphite-metrics-12.04.46.tar.gz", "has_sig": true, "md5_digest": "2eb57258f6e677ce4904d96ef358e7e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29420, "upload_time": "2012-04-26T11:56:51", "upload_time_iso_8601": "2012-04-26T11:56:51.615222Z", "url": "https://files.pythonhosted.org/packages/e4/f8/5f4584b01a86e2e48bbc199232f58e8d814602aa949eb231b24aece0992c/graphite-metrics-12.04.46.tar.gz", "yanked": false}], "12.05.0": [{"comment_text": "", "digests": {"md5": "66aac901360086272172ad17354dbe5c", "sha256": "5c91249be10e7c663cd8761bd2ad90731adf2eca6784b27fc5b6b2d70a37f3ef"}, "downloads": -1, "filename": "graphite-metrics-12.05.0.tar.gz", "has_sig": true, "md5_digest": "66aac901360086272172ad17354dbe5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29424, "upload_time": "2012-05-02T07:47:21", "upload_time_iso_8601": "2012-05-02T07:47:21.762064Z", "url": "https://files.pythonhosted.org/packages/fd/b0/05c2314e2a9ffebca3e0113951f9639093fdb73b93006a472667b8cfcc0d/graphite-metrics-12.05.0.tar.gz", "yanked": false}], "12.05.1": [{"comment_text": "", "digests": {"md5": "7ce9c4de07bd0e67b76cd362e6066da5", "sha256": "ef6f81c8e607e96bfcebaf9089cc8ff86b50bdcc7e779c779aebfa57b2a4b93b"}, "downloads": -1, "filename": "graphite-metrics-12.05.1.tar.gz", "has_sig": true, "md5_digest": "7ce9c4de07bd0e67b76cd362e6066da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29382, "upload_time": "2012-05-02T15:48:09", "upload_time_iso_8601": "2012-05-02T15:48:09.404226Z", "url": "https://files.pythonhosted.org/packages/d9/7f/179f22017ca9a76937f027979bf13295e97e7059b9f97831858453a23fc5/graphite-metrics-12.05.1.tar.gz", "yanked": false}], "12.05.7": [{"comment_text": "", "digests": {"md5": "4d38bb79ab072dca516b2988b70ec1f5", "sha256": "2a505c3bd6dff4695abe279312cef17dd5aea32711b78119395484a625a41416"}, "downloads": -1, "filename": "graphite-metrics-12.05.7.tar.gz", "has_sig": true, "md5_digest": "4d38bb79ab072dca516b2988b70ec1f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31458, "upload_time": "2012-05-21T12:20:20", "upload_time_iso_8601": "2012-05-21T12:20:20.020589Z", "url": "https://files.pythonhosted.org/packages/fc/29/07028dda9bfc1caa5f78cfe4917c0bac986225ac240b3c3d328a06f7964d/graphite-metrics-12.05.7.tar.gz", "yanked": false}], "12.05.8": [{"comment_text": "", "digests": {"md5": "0847ff440420710d8809e2f63ac7a546", "sha256": "e234046a7b9ff24aa43f145c64df7d3703a16466c3e63b51691c93661ed9b92b"}, "downloads": -1, "filename": "graphite-metrics-12.05.8.tar.gz", "has_sig": true, "md5_digest": "0847ff440420710d8809e2f63ac7a546", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31580, "upload_time": "2012-05-24T10:49:23", "upload_time_iso_8601": "2012-05-24T10:49:23.790519Z", "url": "https://files.pythonhosted.org/packages/1b/de/68582ea565724c32faedeb26a1f46fefde802997d15128abfe2da6949fb3/graphite-metrics-12.05.8.tar.gz", "yanked": false}], "12.06.12": [{"comment_text": "", "digests": {"md5": "c3c5ee993b4bda0f612fbde576f0d194", "sha256": "5fcb17d6583e911046802e2854d4b853fbd2806541a7517e9da14ebe86c50759"}, "downloads": -1, "filename": "graphite-metrics-12.06.12.tar.gz", "has_sig": true, "md5_digest": "c3c5ee993b4bda0f612fbde576f0d194", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31621, "upload_time": "2012-06-13T12:46:30", "upload_time_iso_8601": "2012-06-13T12:46:30.033091Z", "url": "https://files.pythonhosted.org/packages/d7/9d/7f5ed224614ece115e3c58a216d3cf2b92be300003761fe047b06a685aa6/graphite-metrics-12.06.12.tar.gz", "yanked": false}], "12.06.14": [{"comment_text": "", "digests": {"md5": "41e99bf5e38baab2c95d6514d9dcf5c2", "sha256": "62377c39d0a4ccbf975c7f54d52eed60a966e08e74b39b9d8cca6241b73a01cd"}, "downloads": -1, "filename": "graphite-metrics-12.06.14.tar.gz", "has_sig": true, "md5_digest": "41e99bf5e38baab2c95d6514d9dcf5c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32321, "upload_time": "2012-06-21T11:58:51", "upload_time_iso_8601": "2012-06-21T11:58:51.906464Z", "url": "https://files.pythonhosted.org/packages/0e/d1/f9107e2ca4efc630cc19c6aa725dd11b44a5472357cb1c86f208c3d9d195/graphite-metrics-12.06.14.tar.gz", "yanked": false}], "12.06.15": [{"comment_text": "", "digests": {"md5": "fa20b654384cf72b49a3aca14618da88", "sha256": "7d52bce7616070adb417e0238d8a11c5a893880de5baae2ad9070471d0ff68d2"}, "downloads": -1, "filename": "graphite-metrics-12.06.15.tar.gz", "has_sig": true, "md5_digest": "fa20b654384cf72b49a3aca14618da88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32332, "upload_time": "2012-06-29T03:28:52", "upload_time_iso_8601": "2012-06-29T03:28:52.277380Z", "url": "https://files.pythonhosted.org/packages/5f/5c/4d2a4ab7db327cd069e0107415fc97ca68485e5e16c22309cb3825fb304d/graphite-metrics-12.06.15.tar.gz", "yanked": false}], "12.06.9": [{"comment_text": "", "digests": {"md5": "5ea40d8a2427a22d3a361cede4876092", "sha256": "355998f8ee6c1e1b1b423bd19c1dcf9ace129c6886c637b04fe8ad741ab417e6"}, "downloads": -1, "filename": "graphite-metrics-12.06.9.tar.gz", "has_sig": true, "md5_digest": "5ea40d8a2427a22d3a361cede4876092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31112, "upload_time": "2012-06-05T16:20:32", "upload_time_iso_8601": "2012-06-05T16:20:32.270651Z", "url": "https://files.pythonhosted.org/packages/ee/a8/88921f158bff648d13222343079db968318b69d6fa824d598445d31037c5/graphite-metrics-12.06.9.tar.gz", "yanked": false}], "12.07.0": [{"comment_text": "", "digests": {"md5": "a226c0b9009c04a29c303603706873fe", "sha256": "632eaddbd045a66483776c55057d3f18ecd6be3ffadae2551fd22afcff2bbedc"}, "downloads": -1, "filename": "graphite-metrics-12.07.0.tar.gz", "has_sig": true, "md5_digest": "a226c0b9009c04a29c303603706873fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32327, "upload_time": "2012-07-02T07:21:43", "upload_time_iso_8601": "2012-07-02T07:21:43.115034Z", "url": "https://files.pythonhosted.org/packages/80/f1/55413648f6e581a15a6072142ffc631addc7f1a3388f75a1d7b61bd56cba/graphite-metrics-12.07.0.tar.gz", "yanked": false}], "12.07.2": [{"comment_text": "", "digests": {"md5": "7dae2d3ae7389ff11a22dfc32099d7db", "sha256": "69222333ed9baa5bb55697f9e08c0b83a85bdfa77ba7072c20e6a80ce6339bb1"}, "downloads": -1, "filename": "graphite-metrics-12.07.2.tar.gz", "has_sig": true, "md5_digest": "7dae2d3ae7389ff11a22dfc32099d7db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32375, "upload_time": "2012-07-02T08:33:41", "upload_time_iso_8601": "2012-07-02T08:33:41.997542Z", "url": "https://files.pythonhosted.org/packages/f8/ea/be0faa06fe1a4ff21ab80021c2cb7f279a088789b5c973bae89e1ca5e304/graphite-metrics-12.07.2.tar.gz", "yanked": false}], "12.07.3": [{"comment_text": "", "digests": {"md5": "e13a6a7b5536ae3a26c3ae3bb84b5663", "sha256": "0ebc2ff719c37df04f8b5f23941bde1bfeb5e97a0f93d03e2df752821c2b9b92"}, "downloads": -1, "filename": "graphite-metrics-12.07.3.tar.gz", "has_sig": true, "md5_digest": "e13a6a7b5536ae3a26c3ae3bb84b5663", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32418, "upload_time": "2012-07-28T08:26:35", "upload_time_iso_8601": "2012-07-28T08:26:35.137303Z", "url": "https://files.pythonhosted.org/packages/da/03/4f684a4e13cd0263b5cdcaf0fa8dc33b2e9c58a1382d0835b770984e7c9d/graphite-metrics-12.07.3.tar.gz", "yanked": false}], "12.07.4": [{"comment_text": "", "digests": {"md5": "fa1d147e8a725eea309d4c4fb656e725", "sha256": "3ce70aba102968b9bccefb1f9681e2fafe55caf6e1643ebfee9ba6d4bede637e"}, "downloads": -1, "filename": "graphite-metrics-12.07.4.tar.gz", "has_sig": true, "md5_digest": "fa1d147e8a725eea309d4c4fb656e725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32403, "upload_time": "2012-07-29T13:37:45", "upload_time_iso_8601": "2012-07-29T13:37:45.643637Z", "url": "https://files.pythonhosted.org/packages/58/ff/fc476aa9fe0431ab3ea4be09dd08d3f4ec4c0d2b61e5d71ee2519ce50d0a/graphite-metrics-12.07.4.tar.gz", "yanked": false}], "12.11.0": [{"comment_text": "", "digests": {"md5": "1afe65ad49477039486c5866f1acdbad", "sha256": "cf7affa4d0033226032a775e07d887be10bc1678f0f0503741947e626dc11529"}, "downloads": -1, "filename": "graphite-metrics-12.11.0.tar.gz", "has_sig": true, "md5_digest": "1afe65ad49477039486c5866f1acdbad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32046, "upload_time": "2012-11-19T16:39:55", "upload_time_iso_8601": "2012-11-19T16:39:55.892816Z", "url": "https://files.pythonhosted.org/packages/67/49/cff89fdf21666cb3d2873912bf5236db8b60e7761f2c4caa109e22e1408c/graphite-metrics-12.11.0.tar.gz", "yanked": false}], "13.07.4": [{"comment_text": "", "digests": {"md5": "1b908247092757532e899ca3eea56a2e", "sha256": "f0b35aff50f0e0dd2accb1e4ae0a3cede40fa21fcb88a553d012cb96fd1d18e3"}, "downloads": -1, "filename": "graphite-metrics-13.07.4.tar.gz", "has_sig": true, "md5_digest": "1b908247092757532e899ca3eea56a2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32625, "upload_time": "2013-07-29T17:24:02", "upload_time_iso_8601": "2013-07-29T17:24:02.213110Z", "url": "https://files.pythonhosted.org/packages/93/34/e44fc0fbf37bd676694afb8f1dac60e29f1550b086a1cb517ab804f46ae3/graphite-metrics-13.07.4.tar.gz", "yanked": false}], "13.07.5": [{"comment_text": "", "digests": {"md5": "3b47b7934545528718bd452c6a3043b6", "sha256": "3ead47f9b6392a409d9cbedce944f658a1ce6703dd16bc3fc14ce9ff4d7eda8e"}, "downloads": -1, "filename": "graphite-metrics-13.07.5.tar.gz", "has_sig": true, "md5_digest": "3b47b7934545528718bd452c6a3043b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32628, "upload_time": "2013-08-03T18:58:11", "upload_time_iso_8601": "2013-08-03T18:58:11.267409Z", "url": "https://files.pythonhosted.org/packages/fb/90/d844fdf90dd19ca8bb2d2a257fb9e10dd71f279d08008cdfb7cdb34d3b07/graphite-metrics-13.07.5.tar.gz", "yanked": false}], "13.08.0": [{"comment_text": "", "digests": {"md5": "23c0b73baca7fd15eca77ab02d301dfe", "sha256": "4333320bb18d6b0fa695d865f16da0c24d6901db4e7c457be85cbbac9aa2dd91"}, "downloads": -1, "filename": "graphite-metrics-13.08.0.tar.gz", "has_sig": true, "md5_digest": "23c0b73baca7fd15eca77ab02d301dfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36398, "upload_time": "2013-08-03T19:14:07", "upload_time_iso_8601": "2013-08-03T19:14:07.615407Z", "url": "https://files.pythonhosted.org/packages/42/95/c853fc475a3d04e7e0bb33f220fdb4913f0fa63fe63b3e3c44d6402404b9/graphite-metrics-13.08.0.tar.gz", "yanked": false}], "13.08.1": [{"comment_text": "", "digests": {"md5": "19e08b4e2702692ebbf2be6daf2f0aed", "sha256": "f8527401840d6410c39afbe88c077ec1c258a6c6a2684f10c93d0547904fad94"}, "downloads": -1, "filename": "graphite-metrics-13.08.1.tar.gz", "has_sig": true, "md5_digest": "19e08b4e2702692ebbf2be6daf2f0aed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36543, "upload_time": "2013-08-08T14:18:38", "upload_time_iso_8601": "2013-08-08T14:18:38.677181Z", "url": "https://files.pythonhosted.org/packages/b6/2f/1e83cf60e8772d9c74747439e9ac8a24845aeca24e5d940af3469ea463e0/graphite-metrics-13.08.1.tar.gz", "yanked": false}], "13.08.6": [{"comment_text": "", "digests": {"md5": "7913f9f407277eea7ae052378cac583b", "sha256": "7208da91767073b029757662829fff3b6da1caf024e22a8278b2bfa1d01bf23b"}, "downloads": -1, "filename": "graphite-metrics-13.08.6.tar.gz", "has_sig": true, "md5_digest": "7913f9f407277eea7ae052378cac583b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39102, "upload_time": "2013-08-29T20:21:47", "upload_time_iso_8601": "2013-08-29T20:21:47.210785Z", "url": "https://files.pythonhosted.org/packages/be/4d/d59249ee5c492d45dbb281130bfed7588ecb09f20bb99a26446a63b4f640/graphite-metrics-13.08.6.tar.gz", "yanked": false}], "14.01.0": [{"comment_text": "", "digests": {"md5": "6d0705aae719aea27c652e177103bd22", "sha256": "f94c67c9f33d6f5c7981708f73ee44f54e2655735174f6bc9fdbac74ec07ee41"}, "downloads": -1, "filename": "graphite-metrics-14.01.0.tar.gz", "has_sig": true, "md5_digest": "6d0705aae719aea27c652e177103bd22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37425, "upload_time": "2014-01-25T12:28:37", "upload_time_iso_8601": "2014-01-25T12:28:37.885294Z", "url": "https://files.pythonhosted.org/packages/43/1a/8d5e977b093d12fc5a4041e446ad9aa7cd96bb77160c1f8f1d8280280c83/graphite-metrics-14.01.0.tar.gz", "yanked": false}], "14.01.13": [{"comment_text": "", "digests": {"md5": "0a23ebcaa5c9fcd13c3fc66d0b08200a", "sha256": "e3cef3b840de77a09d7bd1e6ae4e7ac0b6542fbd6c68bf0fe7fec6f73e280c0a"}, "downloads": -1, "filename": "graphite-metrics-14.01.13.tar.gz", "has_sig": true, "md5_digest": "0a23ebcaa5c9fcd13c3fc66d0b08200a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38588, "upload_time": "2014-01-29T11:38:44", "upload_time_iso_8601": "2014-01-29T11:38:44.271795Z", "url": "https://files.pythonhosted.org/packages/60/05/ca1d271df852f770a7970c6146ed3f93f1375b38018ffccb2db6f27000eb/graphite-metrics-14.01.13.tar.gz", "yanked": false}], "14.01.9": [{"comment_text": "", "digests": {"md5": "acd8e17fa389aba3e19b6c61d262609b", "sha256": "34552322d14028d76094ebe6dba856c1efeca6970d79c8bfe0c22df8ecbef55e"}, "downloads": -1, "filename": "graphite-metrics-14.01.9.tar.gz", "has_sig": true, "md5_digest": "acd8e17fa389aba3e19b6c61d262609b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38450, "upload_time": "2014-01-28T12:01:12", "upload_time_iso_8601": "2014-01-28T12:01:12.574154Z", "url": "https://files.pythonhosted.org/packages/83/c6/cdc703e82c3ad8b0ff79d5e94f7489958d39a54c828174020869b368f91e/graphite-metrics-14.01.9.tar.gz", "yanked": false}], "14.06.2": [{"comment_text": "", "digests": {"md5": "68abb733016236be74343558642f455c", "sha256": "05b3dbccc3898b1d92a77554faa32e2eb062e9ae2fbee282284b4b9080503a8b"}, "downloads": -1, "filename": "graphite-metrics-14.06.2.tar.gz", "has_sig": true, "md5_digest": "68abb733016236be74343558642f455c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40838, "upload_time": "2014-06-01T10:05:33", "upload_time_iso_8601": "2014-06-01T10:05:33.723687Z", "url": "https://files.pythonhosted.org/packages/19/f0/3ee51c7fa2c926398e533b49b0eb18dc0b209bc226cb40fd755222b45c79/graphite-metrics-14.06.2.tar.gz", "yanked": false}], "14.09.0": [{"comment_text": "", "digests": {"md5": "ae36f64135f7d86e0008b2658e31e31e", "sha256": "0139675ced87264c90012e8f796d2114d06a0889bb97975fc1e509a77c3bebe5"}, "downloads": -1, "filename": "graphite-metrics-14.09.0.tar.gz", "has_sig": true, "md5_digest": "ae36f64135f7d86e0008b2658e31e31e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41686, "upload_time": "2014-09-21T18:10:34", "upload_time_iso_8601": "2014-09-21T18:10:34.156317Z", "url": "https://files.pythonhosted.org/packages/ec/dc/a80a70bc333d996fa5ee232895aa9b11bcb29b1b39e0336a072892bc523e/graphite-metrics-14.09.0.tar.gz", "yanked": false}], "15.03.0": [{"comment_text": "", "digests": {"md5": "4e9bf47dcc178128947de46727a81b13", "sha256": "bd85d0e9dad05e6b061ff02178d67cc6c332e38d9bdfd111c3ce8135509689ce"}, "downloads": -1, "filename": "graphite-metrics-15.03.0.tar.gz", "has_sig": true, "md5_digest": "4e9bf47dcc178128947de46727a81b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41889, "upload_time": "2015-03-16T06:21:32", "upload_time_iso_8601": "2015-03-16T06:21:32.465513Z", "url": "https://files.pythonhosted.org/packages/4d/0e/87cbd0d4fbe713d3dd702462d796f9ff1827c728760cdff9586eccc5e72d/graphite-metrics-15.03.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e9bf47dcc178128947de46727a81b13", "sha256": "bd85d0e9dad05e6b061ff02178d67cc6c332e38d9bdfd111c3ce8135509689ce"}, "downloads": -1, "filename": "graphite-metrics-15.03.0.tar.gz", "has_sig": true, "md5_digest": "4e9bf47dcc178128947de46727a81b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41889, "upload_time": "2015-03-16T06:21:32", "upload_time_iso_8601": "2015-03-16T06:21:32.465513Z", "url": "https://files.pythonhosted.org/packages/4d/0e/87cbd0d4fbe713d3dd702462d796f9ff1827c728760cdff9586eccc5e72d/graphite-metrics-15.03.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:37 2020"}