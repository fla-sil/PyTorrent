{"info": {"author": "Bay Citizen & Texas Tribune", "author_email": "dev@armstrongcms.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Armstrong\n=========\nArmstrong is an open-source publishing system designed for news organizations\nthat gives your team the technology edge it needs to report in a media-rich\nenvironment.\n\nThis package is a meta package that loads all of the various components of\nArmstrong.  Installing this package is the easiest way to get the full\ndistribution of Armstrong, but is not required to use the various components of\nArmstrong.\n\n\nGetting Started\n---------------\n\nInstallation\n\"\"\"\"\"\"\"\"\"\"\"\"\nFor the latest released version of Armstrong, use `pip`_ to install it from\n`PyPI`_ like this::\n\n    $ pip install armstrong\n\nThe latest release is ``11.09.0.alpha.1``.  This is *alpha* software, so please\nkeep that in mind while developing on it.  While we are making every effort to\nmaintain backwards compatibility between releases while in alpha, things may\nchange in ways that break your code.\n\nNote on ``virtualenv``\n''''''''''''''''''''''\nWe recommend that you use `virtualenv`_ to isolate Armstrong.  We highly\nrecommend that you use the ``--distribute`` flag when creating a virtual\nenvironment, as that's what we use for testing.  Your results with traditional\nsetuptools may vary.\n\n\nDevelopment Releases\n''''''''''''''''''''\nYou can track the latest development of Armstrong by installing the development\nversion from Git.  Obtain the latest version by visiting our `GitHub`_ page and\neither cloning or downloading a tarball.\n\nOnce obtained, switch into the directory of the repository (or snapshot if a\ntarball was downloaded) and tell pip to install it::\n\n    $ git clone git://github.com/armstrong/armstrong.git\n    ... a few lines of output from Git ...\n    $ cd armstrong\n    $ pip install .\n\n\nCreating an Armstrong project\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nTo help get started, the `armstrong.cli`_ component can create a basic project\nstructure for you.  Create a new project like this::\n\n    $ armstrong init mysite\n    armstrong initialized!\n\nYou can initialize a project using the ``--template=demo`` parameter to\ninitialize with a demo SQLite3 database already set up.  This provides a\nworking example of how you can use Armstrong.\n\n\nArmstrong Project Structure\n'''''''''''''''''''''''''''\n\nThe following files are created in the ``mysite`` directory::\n\n    |~fixtures/\n    | |-initial_data.json\n    |~requirements/\n    | |-development.txt\n    | `-project.txt\n    |~settings/\n    | |-__init__.py\n    | |-defaults.py\n    | |-development.py\n    | `-production.py\n    |~templates/\n    | `-index.html\n    |~urls/\n    | |-__init__.py\n    | |-defaults.py\n    | |-development.py\n    | `-production.py\n    |-wsgi.py\n\n\nThe ``settings`` directory contains your Django settings.  The\n``settings.defaults`` module contains all of the base settings that are common\nto your environment.  ``settings.development`` has settings specific to your\ndevelopment environment, while ``settings.production`` contains all of your\nproduction settings.  \n\nYou need to edit the ``settings.development`` and ``settings.production`` to\nconfigure the database engine you want to use.\n\nYou can also use the ``settings.local_development`` and\n``settings.local_production`` modules to store values that are specific to a\nparticular box.  You shouldn't include these files in your\nrepository---anything that should be shared should go in the appropriate\nsettings module.\n\n``settings.development`` and ``settings.production`` configure you\n``ROOT_URLCONF`` as either ``urls.development`` or ``urls.production``,\nrespectively.  Like their ``settings.*`` counterparts, you can use these for\nenvironment-specific settings while storing all of your default values in\n``urls.defaults``.\n\nAll of your requirements are specified inside the two text files in the\n``requirements`` directory: ``development.txt`` and ``project.txt``.  You can\nuse `pip`_ to install the dependencies of your project by providing either file\nas an argument to ``pip install -r``.  ``development.txt`` should contain all\nof requirements for your development environment and include ``project.txt``.\nThe ``project.txt`` file should contain all of requirements that you ``have``\nto have for your project.\n\nThe ``templates`` directory is configured as the base for your project's\ntemplates.  It contains a simple ``index.html`` that is loaded on a request to\n``/`` so you can verify that everything is setup correctly.\n\nThe ``wsgi.py`` file provides a basic WSGI module for running your project.  It\nis configured to run using the ``settings.development`` settings, so you must\nadjust it prior to running in production.\n\n*Note*: You do not have to use the Armstrong project layout.  You can utilize\nall of Armstrong's components inside an existing Django project.  These are\nhere simply to help get you started.\n\n\nNext Steps\n''''''''''\nOnce you have the project created and configured (remember, you need to setup\nyour database just like any other Django project), you've got two final steps.\nFirst, you need to install the requirements file as there are packages that\nArmstrong relies on that need to be installed from GitHub.\n\n::\n\n    $ cd mysite\n    $ pip install -r requirements/project.txt\n\nAfter you've configured the database engine and installed the base\nrequirements, you're last step is to create the database .  You run ``armstrong\nsyncdb`` which initial the database based on the apps listed in your\n``INSTALLED_APPS`` setting.  After this runs, you will have a database created\nby Django (for more information on ``syncdb``, see the `Django docs`_).\n\n.. _Django docs: https://docs.djangoproject.com/en/1.3/ref/django-admin/#django-admin-syncdb\n\nFinally, now that you have all of the dependencies installed and have a\ndatabase, you can test everything out by running ``armstrong runserver`` from\ninside your project.  By default, it listens to the ``localhost`` on port\n``8000``.  Loading that up should either give you the ``Welcome to Armstrong!``\npage or the demo site, depending on whether you used the ``--template=demo``\nflag when called ``armstrong init``.\n\nCongrats, you're now setup and ready to start developing on Armstrong.\n\n\nVersions\n--------\nArmstrong uses date-based versions for this main ``armstrong`` package.  The\ncurrent release is ``11.09.0.alpha.1``.  For more information about how\nversions are handled in Armstrong, see the `Versions`_ page on the wiki.\n\n.. _Versions: https://github.com/armstrong/armstrong/wiki/Versions\n\n\nChangelog\n---------\n\n``12.03.0``\n    This updates the various packages to their current stable releases.\n\n    *Django 1.4 Support*\n        Armstrong now supports Django 1.4 and has maintained backwards\n        compatibility with Django 1.3.1.\n\n    *Armstrong Wells*\n        Wells now support allow empty wells (you must explicitly opt-in to the\n        new styles), provides abstract models for creating custom well models\n        from and allows duplication in the admin.\n\n    *Armstrong Sections*\n        Sections have undergone numerous small enhancements.  They now have a\n        better admin, are more signal friendly, and have support for only\n        showing published items.\n\n    *Armstrong Layouts*\n        The ``utils.render_model`` function now boasts configurable backends so\n        you can customize how models are rendered.\n\n    *Related Content*\n        **Backwards Incompatible Changes**: The internal representation of\n        fields have been changed to better reflect what they should.  A full\n        explanation of all changes is available in the\n        `armstrong.apps.related_content README`_.  No database migrations are\n        required for this new code.\n\n        .. _armstrong.apps.related_content: https://github.com/armstrong/armstrong.apps.related_content/#readme\n\n\n``11.12.0``\n    This updates the various packages to their current release.\n\n    *Armstrong Hatband*\n        We've updated the wells interface inside Hatband to make it more\n        accessible.\n\n    *Armstrong Images*\n        We now include an ``ImageSet`` for dealing with, as you might have\n        guessed it, sets of ``Image`` models.  Thanks for @pizzapanther at\n        Mouth Watering Media for the contribution.\n\n    *Improved Related Content*\n        We've added better handling of Related Content, a new admin, and new\n        helper fields for dealing with both sides of a related content\n        relationship.\n\n    *Armstrong CLI*\n        We've removed the ``--demo`` flag in favor of ``--template=demo``\n        which provides more flexbility going forward.\n\n\n``11.09.0``\n    This updates the various packages to their current release.  In addition,\n    it adds ``armstrong.hatband`` and ``armstrong.core.arm_layout`` to the\n    mix.\n\n    *Armstrong Hatband*\n        Every good hat needs a hatband.  Armstrong's Hatband app is the\n        foundation for our enhancements to Django's built-in admin interface.\n        We've got lots planned for it, but there are a couple of things worth\n        calling out specifically.\n\n        *Integration with VisualSearch*\n            Wells now have a much better UI thanks `VisualSearch`_.  This new\n            UI allows you to quickly search through all of your models when\n            attaching a new ``Node`` to a ``Well``.\n\n        *Rich Text Editor*\n            We've added a new ``RichTextWidget`` that allows you to easily\n            configure the rich-text editor of your choice and have all of the\n            admin fields across Armstrong switch to using it.  We're shipping\n            with `CKEditor`_ support built-in.\n\n    *New Demo Data*\n        Now you can include the ``--demo`` parameter to ``armstrong init`` to\n        use our demo database.  This includes lorem ipsum articles and some\n        default sections.\n\n    *New Layout Code*\n        ``armstrong.core.arm_layout`` introduces the ``{% render_model %}``\n        template tag which handles switching the template used for rendering\n        models.\n\n    *Backwards Incompatible Changes*\n        * ``armstrong.core.arm_wells`` had all of its display logic moved to\n          the new ``armstrong.core.arm_layout`` app.\n        * We've removed ``primary_section`` from ``ContentBase``\n\n``11.06.0``\n    The first generally available release of Armstrong.  It is an unstable,\n    developer preview.\n\n\nComponents\n----------\nArmstrong is broken down into multiple components.  The main ``armstrong``\npackage installs these individually with each being pinned to a specific\npoint release.\n\nIncluded in the 11.09 release are the following components:\n\n``armstrong.cli``\n    A command line tool for creating and working with an Armstrong environment.\n    You can use this inside an Armstrong environment as a replacement for the\n    traditional ``manage.py`` in Django.\n\n    See the `armstrong.cli`_ repository for more information.\n\n``armstrong.core.arm_content``\n    Contains the basic elements for Armstrong-style content.  This does not\n    provide any concrete implementations of models, instead it includes lower\n    level functionality: fields, mixins, and a base ``ContentBase`` for\n    creating a shared content model.\n\n    See the `armstrong.core.arm_content`_ repository for more information.\n\n``armstrong.core.arm_layout``\n    Contains helpers for managing the display of data in the context of its\n    current layout.\n\n    See the `armstrong.core.arm_layout`_ repository for more information.\n\n``armstrong.core.arm_sections``\n    Provides a system for structuring models into \"sections\" to be used on the\n    site for organizational purposes.\n\n    See the `armstrong.core.arm_sections`_ repository for more information.\n\n``armstrong.core.arm_wells``\n    Functionality related to \"pinning\" content to a particular area.  Wells\n    give you the ability to specify any collection of models and their order to\n    display in various places throughout the site.\n\n    See the `armstrong.core.arm_wells`_ repository for more information.\n\n``armstrong.apps.articles``\n    Simple application for handling basic articles.  This provides a thin layer\n    on top of the article-specific features found in the ``arm_content``\n    component, but will meet the needs of many newsrooms with simple\n    requirements.\n\n    See the `armstrong.apps.articles`_ repository for more information.\n\n``armstrong.apps.content``\n    Simple application for providing a concrete ``Content`` model that other\n    Django apps can build off of.\n\n    See the `armstrong.apps.content`_ repository for more information.\n\n``armstrong.hatband``\n    Armstrong's enhanced version of Django's built-in ``django.contrib.admin``\n    application.\n\n    See the `armstrong.hatband`_ repository for more information.\n\n\nContributing\n------------\nStart by finding the component of Armstrong that you would like to change.  It\nis rare that you will need to start by modifying the main Armstrong repository\nto start.\n\n* Create something awesome -- make the code better, add some functionality,\n  whatever (this is the hardest part).\n* `Fork it`_\n* Create a topic branch to house your changes\n* Get all of your commits in the new topic branch\n* Submit a `pull request`_\n\n.. _Fork it: http://help.github.com/forking/\n.. _pull request: http://help.github.com/pull-requests/\n\n\nState of Project\n----------------\nArmstrong is an open-source news platform that is freely available to any\norganization.  It is the result of a collaboration between the `The Texas Tribune`_\nand `The Bay Citizen`_, and a grant from the `John S. and James L. Knight\nFoundation`_.\n\nTo follow development, be sure to join the `Google Group`_.\n\n.. _The Bay Citizen: http://www.baycitizen.org/\n.. _John S. and James L. Knight Foundation: http://www.knightfoundation.org/\n.. _The Texas Tribune: http://www.texastribune.org/\n.. _Google Group: http://groups.google.com/group/armstrongcms\n.. _pip: http://www.pip-installer.org/\n.. _PyPI: http://pypi.python.org/pypi\n.. _GitHub: http://github.com/armstrong/armstrong/\n.. _armstrong.cli: http://github.com/armstrong/armstrong.cli\n.. _armstrong.core.arm_content: http://github.com/armstrong/armstrong.core.arm_content\n.. _armstrong.core.arm_layout: http://github.com/armstrong/armstrong.core.arm_layout\n.. _armstrong.core.arm_sections: http://github.com/armstrong/armstrong.core.arm_sections\n.. _armstrong.core.arm_wells: http://github.com/armstrong/armstrong.core.arm_wells\n.. _armstrong.apps.articles: http://github.com/armstrong/armstrong.apps.articles\n.. _armstrong.apps.content: http://github.com/armstrong/armstrong.apps.content\n.. _armstrong.apps.events: http://github.com/armstrong/armstrong.apps.events\n.. _armstrong.hatband: http://github.com/armstrong/armstrong.hatband\n.. _CKEditor: http://ckeditor.com/\n.. _virtualenv: http://www.virtualenv.org/en/latest/index.html\n.. _VisualSearch: http://documentcloud.github.com/visualsearch/\n.. _distribute: http://pypi.python.org/pypi/distribute", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/armstrong/armstrong/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "armstrong", "package_url": "https://pypi.org/project/armstrong/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/armstrong/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/armstrong/armstrong/"}, "release_url": "https://pypi.org/project/armstrong/12.03.1/", "requires_dist": null, "requires_python": null, "summary": "Armstrong is an open-source publishing system designed for news organizations that gives your team the technology edge it needs to report in a media-rich environment.", "version": "12.03.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Armstrong<br>=========<br>Armstrong is an open-source publishing system designed for news organizations<br>that gives your team the technology edge it needs to report in a media-rich<br>environment.<br><br>This package is a meta package that loads all of the various components of<br>Armstrong.  Installing this package is the easiest way to get the full<br>distribution of Armstrong, but is not required to use the various components of<br>Armstrong.<br><br><br>Getting Started<br>---------------<br><br>Installation<br>\"\"\"\"\"\"\"\"\"\"\"\"<br>For the latest released version of Armstrong, use `pip`_ to install it from<br>`PyPI`_ like this::<br><br>    $ pip install armstrong<br><br>The latest release is ``11.09.0.alpha.1``.  This is *alpha* software, so please<br>keep that in mind while developing on it.  While we are making every effort to<br>maintain backwards compatibility between releases while in alpha, things may<br>change in ways that break your code.<br><br>Note on ``virtualenv``<br>''''''''''''''''''''''<br>We recommend that you use `virtualenv`_ to isolate Armstrong.  We highly<br>recommend that you use the ``--distribute`` flag when creating a virtual<br>environment, as that's what we use for testing.  Your results with traditional<br>setuptools may vary.<br><br><br>Development Releases<br>''''''''''''''''''''<br>You can track the latest development of Armstrong by installing the development<br>version from Git.  Obtain the latest version by visiting our `GitHub`_ page and<br>either cloning or downloading a tarball.<br><br>Once obtained, switch into the directory of the repository (or snapshot if a<br>tarball was downloaded) and tell pip to install it::<br><br>    $ git clone git://github.com/armstrong/armstrong.git<br>    ... a few lines of output from Git ...<br>    $ cd armstrong<br>    $ pip install .<br><br><br>Creating an Armstrong project<br>\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"<br>To help get started, the `armstrong.cli`_ component can create a basic project<br>structure for you.  Create a new project like this::<br><br>    $ armstrong init mysite<br>    armstrong initialized!<br><br>You can initialize a project using the ``--template=demo`` parameter to<br>initialize with a demo SQLite3 database already set up.  This provides a<br>working example of how you can use Armstrong.<br><br><br>Armstrong Project Structure<br>'''''''''''''''''''''''''''<br><br>The following files are created in the ``mysite`` directory::<br><br>    |~fixtures/<br>    | |-initial_data.json<br>    |~requirements/<br>    | |-development.txt<br>    | `-project.txt<br>    |~settings/<br>    | |-__init__.py<br>    | |-defaults.py<br>    | |-development.py<br>    | `-production.py<br>    |~templates/<br>    | `-index.html<br>    |~urls/<br>    | |-__init__.py<br>    | |-defaults.py<br>    | |-development.py<br>    | `-production.py<br>    |-wsgi.py<br><br><br>The ``settings`` directory contains your Django settings.  The<br>``settings.defaults`` module contains all of the base settings that are common<br>to your environment.  ``settings.development`` has settings specific to your<br>development environment, while ``settings.production`` contains all of your<br>production settings.  <br><br>You need to edit the ``settings.development`` and ``settings.production`` to<br>configure the database engine you want to use.<br><br>You can also use the ``settings.local_development`` and<br>``settings.local_production`` modules to store values that are specific to a<br>particular box.  You shouldn't include these files in your<br>repository---anything that should be shared should go in the appropriate<br>settings module.<br><br>``settings.development`` and ``settings.production`` configure you<br>``ROOT_URLCONF`` as either ``urls.development`` or ``urls.production``,<br>respectively.  Like their ``settings.*`` counterparts, you can use these for<br>environment-specific settings while storing all of your default values in<br>``urls.defaults``.<br><br>All of your requirements are specified inside the two text files in the<br>``requirements`` directory: ``development.txt`` and ``project.txt``.  You can<br>use `pip`_ to install the dependencies of your project by providing either file<br>as an argument to ``pip install -r``.  ``development.txt`` should contain all<br>of requirements for your development environment and include ``project.txt``.<br>The ``project.txt`` file should contain all of requirements that you ``have``<br>to have for your project.<br><br>The ``templates`` directory is configured as the base for your project's<br>templates.  It contains a simple ``index.html`` that is loaded on a request to<br>``/`` so you can verify that everything is setup correctly.<br><br>The ``wsgi.py`` file provides a basic WSGI module for running your project.  It<br>is configured to run using the ``settings.development`` settings, so you must<br>adjust it prior to running in production.<br><br>*Note*: You do not have to use the Armstrong project layout.  You can utilize<br>all of Armstrong's components inside an existing Django project.  These are<br>here simply to help get you started.<br><br><br>Next Steps<br>''''''''''<br>Once you have the project created and configured (remember, you need to setup<br>your database just like any other Django project), you've got two final steps.<br>First, you need to install the requirements file as there are packages that<br>Armstrong relies on that need to be installed from GitHub.<br><br>::<br><br>    $ cd mysite<br>    $ pip install -r requirements/project.txt<br><br>After you've configured the database engine and installed the base<br>requirements, you're last step is to create the database .  You run ``armstrong<br>syncdb`` which initial the database based on the apps listed in your<br>``INSTALLED_APPS`` setting.  After this runs, you will have a database created<br>by Django (for more information on ``syncdb``, see the `Django docs`_).<br><br>.. _Django docs: https://docs.djangoproject.com/en/1.3/ref/django-admin/#django-admin-syncdb<br><br>Finally, now that you have all of the dependencies installed and have a<br>database, you can test everything out by running ``armstrong runserver`` from<br>inside your project.  By default, it listens to the ``localhost`` on port<br>``8000``.  Loading that up should either give you the ``Welcome to Armstrong!``<br>page or the demo site, depending on whether you used the ``--template=demo``<br>flag when called ``armstrong init``.<br><br>Congrats, you're now setup and ready to start developing on Armstrong.<br><br><br>Versions<br>--------<br>Armstrong uses date-based versions for this main ``armstrong`` package.  The<br>current release is ``11.09.0.alpha.1``.  For more information about how<br>versions are handled in Armstrong, see the `Versions`_ page on the wiki.<br><br>.. _Versions: https://github.com/armstrong/armstrong/wiki/Versions<br><br><br>Changelog<br>---------<br><br>``12.03.0``<br>    This updates the various packages to their current stable releases.<br><br>    *Django 1.4 Support*<br>        Armstrong now supports Django 1.4 and has maintained backwards<br>        compatibility with Django 1.3.1.<br><br>    *Armstrong Wells*<br>        Wells now support allow empty wells (you must explicitly opt-in to the<br>        new styles), provides abstract models for creating custom well models<br>        from and allows duplication in the admin.<br><br>    *Armstrong Sections*<br>        Sections have undergone numerous small enhancements.  They now have a<br>        better admin, are more signal friendly, and have support for only<br>        showing published items.<br><br>    *Armstrong Layouts*<br>        The ``utils.render_model`` function now boasts configurable backends so<br>        you can customize how models are rendered.<br><br>    *Related Content*<br>        **Backwards Incompatible Changes**: The internal representation of<br>        fields have been changed to better reflect what they should.  A full<br>        explanation of all changes is available in the<br>        `armstrong.apps.related_content README`_.  No database migrations are<br>        required for this new code.<br><br>        .. _armstrong.apps.related_content: https://github.com/armstrong/armstrong.apps.related_content/#readme<br><br><br>``11.12.0``<br>    This updates the various packages to their current release.<br><br>    *Armstrong Hatband*<br>        We've updated the wells interface inside Hatband to make it more<br>        accessible.<br><br>    *Armstrong Images*<br>        We now include an ``ImageSet`` for dealing with, as you might have<br>        guessed it, sets of ``Image`` models.  Thanks for @pizzapanther at<br>        Mouth Watering Media for the contribution.<br><br>    *Improved Related Content*<br>        We've added better handling of Related Content, a new admin, and new<br>        helper fields for dealing with both sides of a related content<br>        relationship.<br><br>    *Armstrong CLI*<br>        We've removed the ``--demo`` flag in favor of ``--template=demo``<br>        which provides more flexbility going forward.<br><br><br>``11.09.0``<br>    This updates the various packages to their current release.  In addition,<br>    it adds ``armstrong.hatband`` and ``armstrong.core.arm_layout`` to the<br>    mix.<br><br>    *Armstrong Hatband*<br>        Every good hat needs a hatband.  Armstrong's Hatband app is the<br>        foundation for our enhancements to Django's built-in admin interface.<br>        We've got lots planned for it, but there are a couple of things worth<br>        calling out specifically.<br><br>        *Integration with VisualSearch*<br>            Wells now have a much better UI thanks `VisualSearch`_.  This new<br>            UI allows you to quickly search through all of your models when<br>            attaching a new ``Node`` to a ``Well``.<br><br>        *Rich Text Editor*<br>            We've added a new ``RichTextWidget`` that allows you to easily<br>            configure the rich-text editor of your choice and have all of the<br>            admin fields across Armstrong switch to using it.  We're shipping<br>            with `CKEditor`_ support built-in.<br><br>    *New Demo Data*<br>        Now you can include the ``--demo`` parameter to ``armstrong init`` to<br>        use our demo database.  This includes lorem ipsum articles and some<br>        default sections.<br><br>    *New Layout Code*<br>        ``armstrong.core.arm_layout`` introduces the ``{% render_model %}``<br>        template tag which handles switching the template used for rendering<br>        models.<br><br>    *Backwards Incompatible Changes*<br>        * ``armstrong.core.arm_wells`` had all of its display logic moved to<br>          the new ``armstrong.core.arm_layout`` app.<br>        * We've removed ``primary_section`` from ``ContentBase``<br><br>``11.06.0``<br>    The first generally available release of Armstrong.  It is an unstable,<br>    developer preview.<br><br><br>Components<br>----------<br>Armstrong is broken down into multiple components.  The main ``armstrong``<br>package installs these individually with each being pinned to a specific<br>point release.<br><br>Included in the 11.09 release are the following components:<br><br>``armstrong.cli``<br>    A command line tool for creating and working with an Armstrong environment.<br>    You can use this inside an Armstrong environment as a replacement for the<br>    traditional ``manage.py`` in Django.<br><br>    See the `armstrong.cli`_ repository for more information.<br><br>``armstrong.core.arm_content``<br>    Contains the basic elements for Armstrong-style content.  This does not<br>    provide any concrete implementations of models, instead it includes lower<br>    level functionality: fields, mixins, and a base ``ContentBase`` for<br>    creating a shared content model.<br><br>    See the `armstrong.core.arm_content`_ repository for more information.<br><br>``armstrong.core.arm_layout``<br>    Contains helpers for managing the display of data in the context of its<br>    current layout.<br><br>    See the `armstrong.core.arm_layout`_ repository for more information.<br><br>``armstrong.core.arm_sections``<br>    Provides a system for structuring models into \"sections\" to be used on the<br>    site for organizational purposes.<br><br>    See the `armstrong.core.arm_sections`_ repository for more information.<br><br>``armstrong.core.arm_wells``<br>    Functionality related to \"pinning\" content to a particular area.  Wells<br>    give you the ability to specify any collection of models and their order to<br>    display in various places throughout the site.<br><br>    See the `armstrong.core.arm_wells`_ repository for more information.<br><br>``armstrong.apps.articles``<br>    Simple application for handling basic articles.  This provides a thin layer<br>    on top of the article-specific features found in the ``arm_content``<br>    component, but will meet the needs of many newsrooms with simple<br>    requirements.<br><br>    See the `armstrong.apps.articles`_ repository for more information.<br><br>``armstrong.apps.content``<br>    Simple application for providing a concrete ``Content`` model that other<br>    Django apps can build off of.<br><br>    See the `armstrong.apps.content`_ repository for more information.<br><br>``armstrong.hatband``<br>    Armstrong's enhanced version of Django's built-in ``django.contrib.admin``<br>    application.<br><br>    See the `armstrong.hatband`_ repository for more information.<br><br><br>Contributing<br>------------<br>Start by finding the component of Armstrong that you would like to change.  It<br>is rare that you will need to start by modifying the main Armstrong repository<br>to start.<br><br>* Create something awesome -- make the code better, add some functionality,<br>  whatever (this is the hardest part).<br>* `Fork it`_<br>* Create a topic branch to house your changes<br>* Get all of your commits in the new topic branch<br>* Submit a `pull request`_<br><br>.. _Fork it: http://help.github.com/forking/<br>.. _pull request: http://help.github.com/pull-requests/<br><br><br>State of Project<br>----------------<br>Armstrong is an open-source news platform that is freely available to any<br>organization.  It is the result of a collaboration between the `The Texas Tribune`_<br>and `The Bay Citizen`_, and a grant from the `John S. and James L. Knight<br>Foundation`_.<br><br>To follow development, be sure to join the `Google Group`_.<br><br>.. _The Bay Citizen: http://www.baycitizen.org/<br>.. _John S. and James L. Knight Foundation: http://www.knightfoundation.org/<br>.. _The Texas Tribune: http://www.texastribune.org/<br>.. _Google Group: http://groups.google.com/group/armstrongcms<br>.. _pip: http://www.pip-installer.org/<br>.. _PyPI: http://pypi.python.org/pypi<br>.. _GitHub: http://github.com/armstrong/armstrong/<br>.. _armstrong.cli: http://github.com/armstrong/armstrong.cli<br>.. _armstrong.core.arm_content: http://github.com/armstrong/armstrong.core.arm_content<br>.. _armstrong.core.arm_layout: http://github.com/armstrong/armstrong.core.arm_layout<br>.. _armstrong.core.arm_sections: http://github.com/armstrong/armstrong.core.arm_sections<br>.. _armstrong.core.arm_wells: http://github.com/armstrong/armstrong.core.arm_wells<br>.. _armstrong.apps.articles: http://github.com/armstrong/armstrong.apps.articles<br>.. _armstrong.apps.content: http://github.com/armstrong/armstrong.apps.content<br>.. _armstrong.apps.events: http://github.com/armstrong/armstrong.apps.events<br>.. _armstrong.hatband: http://github.com/armstrong/armstrong.hatband<br>.. _CKEditor: http://ckeditor.com/<br>.. _virtualenv: http://www.virtualenv.org/en/latest/index.html<br>.. _VisualSearch: http://documentcloud.github.com/visualsearch/<br>.. _distribute: http://pypi.python.org/pypi/distribute\n          </div>"}, "last_serial": 825715, "releases": {"11.06.0.alpha.0": [], "11.06.0.beta.1": [{"comment_text": "", "digests": {"md5": "e7dafcf3d7fe1b904fa99828effca54a", "sha256": "db6d835d792cbac7972d90395ff2eb1438a7c2e0e6bf3601b7028090964f57ff"}, "downloads": -1, "filename": "armstrong-11.06.0.beta.1.tar.gz", "has_sig": false, "md5_digest": "e7dafcf3d7fe1b904fa99828effca54a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4617, "upload_time": "2011-06-02T01:04:18", "upload_time_iso_8601": "2011-06-02T01:04:18.262762Z", "url": "https://files.pythonhosted.org/packages/f7/28/3729f1e2b86680853009b8beb9418a21d5a55e8e92f678bca50a2b7aa00a/armstrong-11.06.0.beta.1.tar.gz", "yanked": false}], "11.06.0.beta.2": [{"comment_text": "", "digests": {"md5": "fa2d8a9ba77da4f5631c964dfaee0840", "sha256": "b46201fad70d157b6ec5c3929707fce02b56c8412b4b7e83dc9d2819ffbc2436"}, "downloads": -1, "filename": "armstrong-11.06.0.beta.2.tar.gz", "has_sig": false, "md5_digest": "fa2d8a9ba77da4f5631c964dfaee0840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4569, "upload_time": "2011-06-10T19:51:09", "upload_time_iso_8601": "2011-06-10T19:51:09.849328Z", "url": "https://files.pythonhosted.org/packages/f1/f0/0eff73626ea7c901dd34b7bd8f8acb41d9279ab52884ce1dc0b4d64669ef/armstrong-11.06.0.beta.2.tar.gz", "yanked": false}], "11.06.0.beta.2.1": [{"comment_text": "", "digests": {"md5": "4785dce6fed0f87b5c57cfb7af7e2225", "sha256": "7965e68e590326d0b206814b7e71032ecb9ba2065828cff9f1d400a673c9bd00"}, "downloads": -1, "filename": "armstrong-11.06.0.beta.2.1.tar.gz", "has_sig": false, "md5_digest": "4785dce6fed0f87b5c57cfb7af7e2225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4575, "upload_time": "2011-06-11T20:43:43", "upload_time_iso_8601": "2011-06-11T20:43:43.350857Z", "url": "https://files.pythonhosted.org/packages/bd/ad/8a13ac1e8c74f19eca10693dcaf8c1fda1a3360d5ccef9e69ce468373af7/armstrong-11.06.0.beta.2.1.tar.gz", "yanked": false}], "11.06.0.beta.2.2": [{"comment_text": "", "digests": {"md5": "d0ed96f69e1b43aca0960d3ec6651fb3", "sha256": "9c656bec2a7ea761f001d2c8947e43fe4089d6ba390967191e9b431e47bb2347"}, "downloads": -1, "filename": "armstrong-11.06.0.beta.2.2.tar.gz", "has_sig": false, "md5_digest": "d0ed96f69e1b43aca0960d3ec6651fb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4561, "upload_time": "2011-06-16T22:15:35", "upload_time_iso_8601": "2011-06-16T22:15:35.104277Z", "url": "https://files.pythonhosted.org/packages/e1/67/7e47c700a6a01581a50514fcb4375e31b48034edd791f6dd0f513a9ba552/armstrong-11.06.0.beta.2.2.tar.gz", "yanked": false}], "11.09.0": [{"comment_text": "", "digests": {"md5": "36808039c2d7639c08883ccc33d43494", "sha256": "189fc9b4b67189d390d66e8681d3e2c1fdbb168a94bde097c931bddfaa0907de"}, "downloads": -1, "filename": "armstrong-11.09.0.tar.gz", "has_sig": false, "md5_digest": "36808039c2d7639c08883ccc33d43494", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6542, "upload_time": "2011-10-01T02:51:10", "upload_time_iso_8601": "2011-10-01T02:51:10.051730Z", "url": "https://files.pythonhosted.org/packages/1c/91/333981b66b4ec4580fc01f7227d0799f7e06f10b2bc285e31238d5443585/armstrong-11.09.0.tar.gz", "yanked": false}], "11.09.0.alpha.1": [{"comment_text": "", "digests": {"md5": "2b7c83a6e1cb0a57e8988991016e297c", "sha256": "7dc8ff6852d2099d7067308ace6b422fcac1f88467ea7fab9cb5d9d71aaf8791"}, "downloads": -1, "filename": "armstrong-11.09.0.alpha.1.tar.gz", "has_sig": false, "md5_digest": "2b7c83a6e1cb0a57e8988991016e297c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6560, "upload_time": "2011-08-04T22:41:16", "upload_time_iso_8601": "2011-08-04T22:41:16.762748Z", "url": "https://files.pythonhosted.org/packages/72/84/cf948c6a7559122b4aa2dcafce6338f8c1052dc4e2c387683b5cda75b7d1/armstrong-11.09.0.alpha.1.tar.gz", "yanked": false}], "11.09.0.alpha.2": [{"comment_text": "", "digests": {"md5": "7418c07858e24e3b6572699b4e0d03fd", "sha256": "2b870c4cf26cca54f33b5b2fde6c885e2ec5a46b6cbb147c04f6786038235914"}, "downloads": -1, "filename": "armstrong-11.09.0.alpha.2.tar.gz", "has_sig": false, "md5_digest": "7418c07858e24e3b6572699b4e0d03fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6574, "upload_time": "2011-08-30T21:40:37", "upload_time_iso_8601": "2011-08-30T21:40:37.968938Z", "url": "https://files.pythonhosted.org/packages/69/e4/294dfc6af3ba7001711fbe6c3d1dca964e0fae5fc24712747e8847f69034/armstrong-11.09.0.alpha.2.tar.gz", "yanked": false}], "11.12.0": [{"comment_text": "", "digests": {"md5": "ee603a258c88e788706b0c82aef086ab", "sha256": "37b339b55d061c199a0b22d23e2df4f71b96ed89a3beeaab016d53271450295d"}, "downloads": -1, "filename": "armstrong-11.12.0.tar.gz", "has_sig": false, "md5_digest": "ee603a258c88e788706b0c82aef086ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6575, "upload_time": "2011-12-31T20:08:35", "upload_time_iso_8601": "2011-12-31T20:08:35.822328Z", "url": "https://files.pythonhosted.org/packages/e5/30/3b80308448e169e7317173a2f7a6520366056279bbeee67add2c218c05e0/armstrong-11.12.0.tar.gz", "yanked": false}], "11.12.0.1": [{"comment_text": "", "digests": {"md5": "6bba106e909fb14f47becb5f71ff0726", "sha256": "f975c9c3629b2a266193d2c835cbfd28b93cfe517c656d30d367db7a4522706c"}, "downloads": -1, "filename": "armstrong-11.12.0.1.tar.gz", "has_sig": false, "md5_digest": "6bba106e909fb14f47becb5f71ff0726", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6888, "upload_time": "2012-01-23T19:22:00", "upload_time_iso_8601": "2012-01-23T19:22:00.257963Z", "url": "https://files.pythonhosted.org/packages/b3/e7/3b74809c46f3a45eea144ae326d98f4c7ebdb14c5f22e5245d027edcd602/armstrong-11.12.0.1.tar.gz", "yanked": false}], "12.03.0": [{"comment_text": "", "digests": {"md5": "5bc8d2f65f6d1f3908b28a02723f3c80", "sha256": "5348bc4c1c7faace0ae8376cf34fd6f27e7b45f14d1d76d6afba547c9650cc8d"}, "downloads": -1, "filename": "armstrong-12.03.0.tar.gz", "has_sig": false, "md5_digest": "5bc8d2f65f6d1f3908b28a02723f3c80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11232, "upload_time": "2012-03-31T21:55:12", "upload_time_iso_8601": "2012-03-31T21:55:12.569884Z", "url": "https://files.pythonhosted.org/packages/50/42/aa0427e990c83a57f5291fb37d6ff46f7fb80a3daa06b31025a58511ec48/armstrong-12.03.0.tar.gz", "yanked": false}], "12.03.1": [{"comment_text": "", "digests": {"md5": "7fe3073534de851d92e6a53a52ad3e19", "sha256": "a47d739f1c6db238bdbb8a0b577efd74e9b7d4144d0b21f00f98ed08c341bf15"}, "downloads": -1, "filename": "armstrong-12.03.1.tar.gz", "has_sig": false, "md5_digest": "7fe3073534de851d92e6a53a52ad3e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11241, "upload_time": "2012-04-02T20:08:40", "upload_time_iso_8601": "2012-04-02T20:08:40.801061Z", "url": "https://files.pythonhosted.org/packages/67/15/7288ffe82373b990ea4805cfd5b9e774d951082314040fd916ed100c2531/armstrong-12.03.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fe3073534de851d92e6a53a52ad3e19", "sha256": "a47d739f1c6db238bdbb8a0b577efd74e9b7d4144d0b21f00f98ed08c341bf15"}, "downloads": -1, "filename": "armstrong-12.03.1.tar.gz", "has_sig": false, "md5_digest": "7fe3073534de851d92e6a53a52ad3e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11241, "upload_time": "2012-04-02T20:08:40", "upload_time_iso_8601": "2012-04-02T20:08:40.801061Z", "url": "https://files.pythonhosted.org/packages/67/15/7288ffe82373b990ea4805cfd5b9e774d951082314040fd916ed100c2531/armstrong-12.03.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:13 2020"}