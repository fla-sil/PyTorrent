{"info": {"author": "Open Targets dev team", "author_email": "ops@opentargets.org", "bugtrack_url": null, "classifiers": [], "description": "This software was developed as part of the Open Targets project. For more information please see:\n\nhttp://www.opentargets.org\nTarget Validation platform\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\nSee the License for the specific language governing permissions and\nlimitations under the License.\nDescription: OnToma is a python module that helps you map your disease/phenotype terms to the\n        ontology we use in the Open Targets platform.\n        \n        The ontology we use in the Open Targets platform is a subset (aka. _slim_) of\n        the EFO ontology _plus_ any HPO terms for which a valid EFO mapping could\n        not be found.\n        \n        \n        *features*\n        \n        * Wrap OLS, OXO, Zooma in a pythonic API\n        * Always tries to output full URI\n        * Tries to find mappings iteratively using the faster methods first\n        * Checks if mapping is in the subset of EFO that gets included in the\n        Open Targets platform\n        * *tries to* follow the procedure highlighted in [our wiki](https://github.com/opentargets/data_release/wiki/EFO-Ontology-Annotation-Process)\n        \n        \n        # Usage\n        \n        ## Installing\n        \n        `pip install ontoma`\n        \n        ## Quickstart\n        \n        Looking for a disease or phenotype string is simple:\n        \n        ```python\n        from ontoma import OnToma\n        \n        otmap = OnToma()\n        print(otmap.find_term('asthma'))\n        \n        #outputs:\n        'http://www.ebi.ac.uk/efo/EFO_0000270'\n        ```\n        \n        you can obtain more details using the `verbose` flag:\n        \n        ```python\n        print(otmap.find_term('asthma',verbose=True))\n        \n        #outputs something similar to:\n        {'term':'http://www.ebi.ac.uk/efo/EFO_0000270','label':'asthma',\n        'source':'EFO OBO','quality':'match' ...}\n        ```\n        **From the command line**\n        \n        The command line version can be invoked with `ontoma`\n        (type `ontoma --help` to find out about the usage):\n        \n        ```sh\n        ontoma <input_file> <output_file>\n        ```\n        where input file can be replaced with `-` to read from stdin and write to stdout.\n        \n        Which means that to read from a previous command, using pipes:\n        ```sh\n        echo 'asthma' | ontoma - <output_file>\n        ```\n        \n        will output a file `test.txt` containing the result, where it came from and the\n        degree of confidence of the match (one of {match, fuzzy, check}):\n        \n        ```\n        http://www.ebi.ac.uk/efo/EFO_0000270    asthma  EFO OBO     match\n        ```\n        \n        \n        \n        Piping also works for the output. If you want to find the string \"mymatch\" from\n        the results, you can:\n        ```sh\n        ontoma <input_file> - | grep \"mymatch\"\n        ```\n        \n        \n        \n        More detailed documentation is at [![Documentation Status](https://readthedocs.org/projects/ontoma/badge/?version=stable)](http://ontoma.readthedocs.io/en/stable/?badge=stable)\n        http://ontoma.readthedocs.io/en/stable/\n        \n        \n        # Developing\n        \n        ## set up your environment\n        First clone this repo\n        \n        ```\n        git clone https://github.com/opentargets/OnToma.git\n        ```\n        \n        [Install pipenv](https://pipenv.readthedocs.io/en/latest/install/#homebrew-installation-of-pipenv) and then run\n        ```sh\n        pipenv install --dev\n        ```\n        to get all development dependencies installed.\n        \n        Test everything is working:\n        ```sh\n        pipenv run pytest\n        ```\n        \n        **if you don't like pipenv** you can stick with the more traditional\n        setuptools/virtualenv setup:\n        \n        ```sh\n        git clone https://github.com/opentargets/OnToma.git\n        virtualenv -p python3 venv\n        source venv/bin/activate\n        pip install --editable .\n        ```\n        \n        ## How to add a dependency\n        \n        **Add to both pipenv AND setup.py**\n        \n        To add a dep for a library, add it by hand to `setup.py`, then add it separately\n        to `Pipfile`, so that it shows up both as a transitive dependency and in your\n        locked dev environment\n        \n        ## Release to PyPi\n        \n        Simply run `./bumpversion.sh`\n        \n        The script will tag, push and trigger a new CI run.\n        The package will be automatically uploaded to pypi.\n        \nKeywords: opentargets ontology efo mapper\nPlatform: UNKNOWN\nClassifier: Intended Audience :: Developers\nClassifier: Operating System :: OS Independent\nClassifier: Topic :: Software Development :: Libraries :: Python Modules\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3 :: Only\nRequires-Python: >=3.2\nDescription-Content-Type: text/markdown\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/opentargets/OnToma", "keywords": "", "license": "Copyright 2016 Biogen, GlaxoSmithKline, EMBL - European Bioinformatics Institute, Wellcome Trust Sanger Institute", "maintainer": "", "maintainer_email": "", "name": "ontoma", "package_url": "https://pypi.org/project/ontoma/", "platform": "", "project_url": "https://pypi.org/project/ontoma/", "project_urls": {"Homepage": "https://github.com/opentargets/OnToma"}, "release_url": "https://pypi.org/project/ontoma/0.0.13/", "requires_dist": ["requests", "obonet", "click"], "requires_python": "", "summary": "Ontology mapping for Open Targets", "version": "0.0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            This software was developed as part of the Open Targets project. For more information please see:<br><br>http://www.opentargets.org<br>Target Validation platform<br><br>Licensed under the Apache License, Version 2.0 (the \"License\");<br>you may not use this file except in compliance with the License.<br>You may obtain a copy of the License at<br><br>http://www.apache.org/licenses/LICENSE-2.0<br><br>Unless required by applicable law or agreed to in writing, software<br>distributed under the License is distributed on an \"AS IS\" BASIS,<br>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br><br>See the License for the specific language governing permissions and<br>limitations under the License.<br>Description: OnToma is a python module that helps you map your disease/phenotype terms to the<br>        ontology we use in the Open Targets platform.<br>        <br>        The ontology we use in the Open Targets platform is a subset (aka. _slim_) of<br>        the EFO ontology _plus_ any HPO terms for which a valid EFO mapping could<br>        not be found.<br>        <br>        <br>        *features*<br>        <br>        * Wrap OLS, OXO, Zooma in a pythonic API<br>        * Always tries to output full URI<br>        * Tries to find mappings iteratively using the faster methods first<br>        * Checks if mapping is in the subset of EFO that gets included in the<br>        Open Targets platform<br>        * *tries to* follow the procedure highlighted in [our wiki](https://github.com/opentargets/data_release/wiki/EFO-Ontology-Annotation-Process)<br>        <br>        <br>        # Usage<br>        <br>        ## Installing<br>        <br>        `pip install ontoma`<br>        <br>        ## Quickstart<br>        <br>        Looking for a disease or phenotype string is simple:<br>        <br>        ```python<br>        from ontoma import OnToma<br>        <br>        otmap = OnToma()<br>        print(otmap.find_term('asthma'))<br>        <br>        #outputs:<br>        'http://www.ebi.ac.uk/efo/EFO_0000270'<br>        ```<br>        <br>        you can obtain more details using the `verbose` flag:<br>        <br>        ```python<br>        print(otmap.find_term('asthma',verbose=True))<br>        <br>        #outputs something similar to:<br>        {'term':'http://www.ebi.ac.uk/efo/EFO_0000270','label':'asthma',<br>        'source':'EFO OBO','quality':'match' ...}<br>        ```<br>        **From the command line**<br>        <br>        The command line version can be invoked with `ontoma`<br>        (type `ontoma --help` to find out about the usage):<br>        <br>        ```sh<br>        ontoma &lt;input_file&gt; &lt;output_file&gt;<br>        ```<br>        where input file can be replaced with `-` to read from stdin and write to stdout.<br>        <br>        Which means that to read from a previous command, using pipes:<br>        ```sh<br>        echo 'asthma' | ontoma - &lt;output_file&gt;<br>        ```<br>        <br>        will output a file `test.txt` containing the result, where it came from and the<br>        degree of confidence of the match (one of {match, fuzzy, check}):<br>        <br>        ```<br>        http://www.ebi.ac.uk/efo/EFO_0000270    asthma  EFO OBO     match<br>        ```<br>        <br>        <br>        <br>        Piping also works for the output. If you want to find the string \"mymatch\" from<br>        the results, you can:<br>        ```sh<br>        ontoma &lt;input_file&gt; - | grep \"mymatch\"<br>        ```<br>        <br>        <br>        <br>        More detailed documentation is at [![Documentation Status](https://readthedocs.org/projects/ontoma/badge/?version=stable)](http://ontoma.readthedocs.io/en/stable/?badge=stable)<br>        http://ontoma.readthedocs.io/en/stable/<br>        <br>        <br>        # Developing<br>        <br>        ## set up your environment<br>        First clone this repo<br>        <br>        ```<br>        git clone https://github.com/opentargets/OnToma.git<br>        ```<br>        <br>        [Install pipenv](https://pipenv.readthedocs.io/en/latest/install/#homebrew-installation-of-pipenv) and then run<br>        ```sh<br>        pipenv install --dev<br>        ```<br>        to get all development dependencies installed.<br>        <br>        Test everything is working:<br>        ```sh<br>        pipenv run pytest<br>        ```<br>        <br>        **if you don't like pipenv** you can stick with the more traditional<br>        setuptools/virtualenv setup:<br>        <br>        ```sh<br>        git clone https://github.com/opentargets/OnToma.git<br>        virtualenv -p python3 venv<br>        source venv/bin/activate<br>        pip install --editable .<br>        ```<br>        <br>        ## How to add a dependency<br>        <br>        **Add to both pipenv AND setup.py**<br>        <br>        To add a dep for a library, add it by hand to `setup.py`, then add it separately<br>        to `Pipfile`, so that it shows up both as a transitive dependency and in your<br>        locked dev environment<br>        <br>        ## Release to PyPi<br>        <br>        Simply run `./bumpversion.sh`<br>        <br>        The script will tag, push and trigger a new CI run.<br>        The package will be automatically uploaded to pypi.<br>        <br>Keywords: opentargets ontology efo mapper<br>Platform: UNKNOWN<br>Classifier: Intended Audience :: Developers<br>Classifier: Operating System :: OS Independent<br>Classifier: Topic :: Software Development :: Libraries :: Python Modules<br>Classifier: Programming Language :: Python :: 3<br>Classifier: Programming Language :: Python :: 3.6<br>Classifier: Programming Language :: Python :: 3 :: Only<br>Requires-Python: &gt;=3.2<br>Description-Content-Type: text/markdown<br>\n          </div>"}, "last_serial": 3808202, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e0d2c8f631e2032f0291efaebb3d218a", "sha256": "03e0e481cd2189785be6c2f5404fa51fb233a30f9c2553aa4881912997bfc703"}, "downloads": -1, "filename": "ontoma-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e0d2c8f631e2032f0291efaebb3d218a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14734, "upload_time": "2018-03-15T23:19:07", "upload_time_iso_8601": "2018-03-15T23:19:07.796583Z", "url": "https://files.pythonhosted.org/packages/23/36/b6afc7f496a85f820901a7638453d323a27a07ca1fa7f398faf910534d55/ontoma-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cfef941de892c245b712af04d191ecf", "sha256": "d281da5ac47fe977d850717e3d2ac47cd5a365b09c4e17c28b163e0c44042937"}, "downloads": -1, "filename": "ontoma-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2cfef941de892c245b712af04d191ecf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10079, "upload_time": "2018-03-15T23:19:09", "upload_time_iso_8601": "2018-03-15T23:19:09.631348Z", "url": "https://files.pythonhosted.org/packages/9e/be/d8c644fbb3d6204500a4c00b434e81618ae08690893739fc2871baddc2f0/ontoma-0.0.1.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "133edaecd9f7e4030efea6964ef2afce", "sha256": "9d83fc03b7f2e87b5dbfa401048eea9fd0a3fee7a13a6e4ee6d0f5ad34a964eb"}, "downloads": -1, "filename": "ontoma-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "133edaecd9f7e4030efea6964ef2afce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17455, "upload_time": "2018-04-25T20:03:14", "upload_time_iso_8601": "2018-04-25T20:03:14.707269Z", "url": "https://files.pythonhosted.org/packages/ab/5c/7b66fcbde0038a7f496fb5acabefff8a1a5ddd9139b5f43885780e165ab4/ontoma-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "252e2063872f769868f4cf89f087b0d1", "sha256": "6cf51e663bf916cb418aa61a051a5e589b3588b8a0db637c1312788d4212f6ea"}, "downloads": -1, "filename": "ontoma-0.0.11.tar.gz", "has_sig": false, "md5_digest": "252e2063872f769868f4cf89f087b0d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14613, "upload_time": "2018-04-25T20:03:15", "upload_time_iso_8601": "2018-04-25T20:03:15.782886Z", "url": "https://files.pythonhosted.org/packages/41/c3/70419d1b349e6455dfda52bb149615089684a7c2438c242b8fddc8794540/ontoma-0.0.11.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "1361615940d30a9b20bf9e84dc0b8cc7", "sha256": "092714626d309ca48fc43cd6cc026d17ee126c4d20b2858700c102b18c607895"}, "downloads": -1, "filename": "ontoma-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "1361615940d30a9b20bf9e84dc0b8cc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17455, "upload_time": "2018-04-25T21:32:50", "upload_time_iso_8601": "2018-04-25T21:32:50.969223Z", "url": "https://files.pythonhosted.org/packages/16/a0/b50864e4a32d327899db56f5f9c0cb0e4301224b12c3b507ebb6225d0a7c/ontoma-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43842d96e1c84c62f2021262eb589d12", "sha256": "30071701acdee840852507ee39b133ad12617eca1a08d2a4b1e9df8e52b7c18c"}, "downloads": -1, "filename": "ontoma-0.0.13.tar.gz", "has_sig": false, "md5_digest": "43842d96e1c84c62f2021262eb589d12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16758, "upload_time": "2018-04-25T21:32:52", "upload_time_iso_8601": "2018-04-25T21:32:52.095836Z", "url": "https://files.pythonhosted.org/packages/50/cd/3324d6d3ace02fa8446e52a7bbbc97c16cf1ca6246d274b9761a0010b0a9/ontoma-0.0.13.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bd3f5069f59ef62ae1d28a87937cdba8", "sha256": "525297dfb76ee6406c9b6779591e8311687327c73b40090b54160b921b675087"}, "downloads": -1, "filename": "ontoma-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bd3f5069f59ef62ae1d28a87937cdba8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15146, "upload_time": "2018-03-21T10:14:53", "upload_time_iso_8601": "2018-03-21T10:14:53.649339Z", "url": "https://files.pythonhosted.org/packages/65/19/554d73fdd16a65b91e9ea727a1b0166472807d86536d89a161dc85c44dc1/ontoma-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb9aec9ea1992e8b31c2deece52b9f3a", "sha256": "1a0dc3295ccea82a0ede4fbd668605165f34b226e78be2da5d1b8ebd6f240b6f"}, "downloads": -1, "filename": "ontoma-0.0.2.tar.gz", "has_sig": false, "md5_digest": "cb9aec9ea1992e8b31c2deece52b9f3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11144, "upload_time": "2018-03-21T10:14:55", "upload_time_iso_8601": "2018-03-21T10:14:55.005515Z", "url": "https://files.pythonhosted.org/packages/bc/1c/9c742e8f46998a0e3ca3d866ba085c36d4546079be2e1428d05b003c609f/ontoma-0.0.2.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3411b57b6c4ea48fe9d65b6d53d8a5d3", "sha256": "eba7266b6d5e15427387a81d33efc882106856ae2eafae30275b2bcfd4d7e424"}, "downloads": -1, "filename": "ontoma-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3411b57b6c4ea48fe9d65b6d53d8a5d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18031, "upload_time": "2018-03-26T15:10:15", "upload_time_iso_8601": "2018-03-26T15:10:15.495325Z", "url": "https://files.pythonhosted.org/packages/db/f6/97eac509787fb1cad46fa0b92f23e722ed60a72528a19337fa3bfb95f5b4/ontoma-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72fc42725085c98e3adef2f62579b4a4", "sha256": "da4613530df829c00b9a627b0e02cd028fc5881dc457bd983525ec8397c2f87a"}, "downloads": -1, "filename": "ontoma-0.0.5.tar.gz", "has_sig": false, "md5_digest": "72fc42725085c98e3adef2f62579b4a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14016, "upload_time": "2018-03-26T15:10:16", "upload_time_iso_8601": "2018-03-26T15:10:16.438282Z", "url": "https://files.pythonhosted.org/packages/5a/c9/924ee20faef7cc05023a6abd8e39eab2ed5566980c2a3a80979d28a0aaee/ontoma-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "65eb1f3166a134f173592de214c8d8eb", "sha256": "fe269728f7c2f4527059823b020c5112cb93e7f467556c32e8ae76d629e993b4"}, "downloads": -1, "filename": "ontoma-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "65eb1f3166a134f173592de214c8d8eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18726, "upload_time": "2018-03-30T15:01:48", "upload_time_iso_8601": "2018-03-30T15:01:48.835314Z", "url": "https://files.pythonhosted.org/packages/df/54/35f4581802024d9d76b57ef5d34a2ed8f82c9965f54d0491c9b907c1b720/ontoma-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b6a41057eea3bcc1128761f15123429", "sha256": "b6eee5b65792f8ac99d1ae2e6b7fbdce0d2421130d798a312daef5c5d0a0005d"}, "downloads": -1, "filename": "ontoma-0.0.6.tar.gz", "has_sig": false, "md5_digest": "1b6a41057eea3bcc1128761f15123429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15329, "upload_time": "2018-03-30T15:01:49", "upload_time_iso_8601": "2018-03-30T15:01:49.659895Z", "url": "https://files.pythonhosted.org/packages/5f/2d/18fd2993353227b56079fa80229ab1eb84763d70c3b2bb8791ca678cb792/ontoma-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1361615940d30a9b20bf9e84dc0b8cc7", "sha256": "092714626d309ca48fc43cd6cc026d17ee126c4d20b2858700c102b18c607895"}, "downloads": -1, "filename": "ontoma-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "1361615940d30a9b20bf9e84dc0b8cc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17455, "upload_time": "2018-04-25T21:32:50", "upload_time_iso_8601": "2018-04-25T21:32:50.969223Z", "url": "https://files.pythonhosted.org/packages/16/a0/b50864e4a32d327899db56f5f9c0cb0e4301224b12c3b507ebb6225d0a7c/ontoma-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43842d96e1c84c62f2021262eb589d12", "sha256": "30071701acdee840852507ee39b133ad12617eca1a08d2a4b1e9df8e52b7c18c"}, "downloads": -1, "filename": "ontoma-0.0.13.tar.gz", "has_sig": false, "md5_digest": "43842d96e1c84c62f2021262eb589d12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16758, "upload_time": "2018-04-25T21:32:52", "upload_time_iso_8601": "2018-04-25T21:32:52.095836Z", "url": "https://files.pythonhosted.org/packages/50/cd/3324d6d3ace02fa8446e52a7bbbc97c16cf1ca6246d274b9761a0010b0a9/ontoma-0.0.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:46 2020"}