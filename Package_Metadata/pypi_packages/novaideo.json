{"info": {"author": "Amen Souissi", "author_email": "amensouissi@ecreall.com", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "Nova Ideo\n=========\n\nFeatures\n--------\n\nSee `nova-ideo.com <https://www.nova-ideo.com/>`__\n\n\nTranslations\n------------\n\nThis product has been translated into\n\n- English\n- French\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/ecreall/nova-ideo/issues\n- Source Code: https://github.com/ecreall/nova-ideo\n\n\nLicense\n-------\n\nThe project is licensed under the AGPLv3+.\n\n\nGetting Started for development\n-------------------------------\n\nwithout docker\n~~~~~~~~~~~~~~\n\nTo run in development mode without docker::\n\n    sudo apt-get install python3 python3-dev libxml2-dev libxslt1-dev \\\n      libjpeg-dev zlib1g-dev libfreetype6-dev libtiff5-dev libzmq3-dev \\\n      libyaml-dev git  # this is working on debian jessie and ubuntu xenial\n    python3 bootstrap.py\n    mkdir -p var/{filestorage,blobstorage,log}\n    bin/buildout  # It takes a long time...\n    bin/runzeo -C etc/zeo.conf  # It starts in foreground, there is no output.  Use Ctrl+C to stop it.\n    bin/pserve development.ini  # in another terminal\n\nThe application is on http://localhost:6543\n\nI'll use $DOMAIN for http://localhost:6543 in the rest of the documentation.\n\nTo send emails with gmail smtp, you need to uncomment some lines and configure\nthe mail and password in development.ini\n\n\nwith docker\n~~~~~~~~~~~\n\nYou first need to install the `docker engine\n<https://docs.docker.com/engine/installation/linux/>`__ and\n`docker-compose <https://docs.docker.com/compose/install/>`__.\n\nTo run in development mode with docker::\n\n    ./run.sh rebuild\n    ./run.sh\n\nThe app is deployed on https://local.ecreall.com:8443\n(local.ecreall.com resolves to 127.0.0.1 and is necessary for nginx)\n\nI'll use $DOMAIN for https://local.ecreall.com:8443 in the rest of the documentation.\n\nThe default configuration in **docker-compose-dev.yml** is used to connect\nwith a postfix via a ssh tunnel like this::\n\n    ssh -L 172.17.0.1:9025:localhost:25 myserver.example.com\n\nTo send emails with gmail smtp instead, you need to configure the MAILER\nvariables in **docker-compose.override.yml**, copy the file\n**docker-compose.override.yml.templ** to **docker-compose.override.yml** and\nedit it. This will overrides the configuration in **docker-compose-dev.yml**.\n\nTo stop the application, do a Ctrl-c, and to stop the other containers (nginx),\nrun::\n\n    ./run.sh down\n\n\nAllow your gmail account to be used to send emails\n--------------------------------------------------\n\nTo allow your gmail account to be used to send emails, you need to enable\n`less secure apps <https://support.google.com/accounts/answer/6010255>`__ and\ndo the `captcha <https://support.google.com/accounts/answer/6009563>`__.\nLook at the logs in the terminal if you have an error when sending a mail.\n\nBe careful to not commit your gmail password!\nThe ini file doesn't support the use of % character in your password.\nIt thinks it's the beginning of a variable.\nIf you use this character in your password, you will need to change it!\n\nHow to assign roles to a person\n-------------------------------\n\nIf you want to give a person some additional roles, you need to have the\n*Administrator* or *Site administrator* role. The first time, you will need to\ndo it with the special super administrator account.\nGo to $DOMAIN/manage (there is no accessible link from the home page)\nand authenticate with login admin and the password\nyou have in SECRET environment variable\n(It's substanced.initial_password key in development.ini if you use the\ninstall without docker).\nReturn to $DOMAIN and go the hamburger menu on the top left, select\nSee/Members, go to a person's profile, click on *Assign\nroles* button and give her the *Site administrator*, *Examiner* or *Moderator*\nrole.\n\n\nDeployment with docker\n----------------------\n\nClone a specific version::\n\n    git clone -b VERSION git@github.com:ecreall/nova-ideo.git\n    cd nova-ideo\n\n(replace VERSION with the latest release, 1.2 for example)\n\ndocker-compose runs a nginx container on port 80 and 443.\nYou need to edit the **nginx-app-prod.conf** file to replace mynovaideo.example.com\nby your domain and add certificates (**server.key** and **server.crt**) to the\n**tls** directory.\n\nBe sure that in **docker-compose.yml** it uses the correct version\necreall/novaideo:release-VERSION. Edit it if it's not the case.\n\nYou need to configure some environment variables, copy the file\n**docker-compose.override.yml.templ** to **docker-compose.override.yml** and edit it.\n\n- SECRET: the initial admin password\n- APPLICATION_URL: your domain, same as you put in nginx-app-prod.conf\n- MAIL_DEFAULT_SENDER: the sender of the mails that the application use\n- MAILER_HOST: SMTP host\n- MAILER_PORT: SMTP port\n- MAILER_USERNAME: SMTP username\n- MAILER_PASSWORD: SMTP password\n- MAILER_TLS: Use TLS\n- MAILER_SSL: Use SSL\n- LOGO_FILENAME: empty by default to use the Nova-Ideo logo. You can\n  set the variable to 'marianne.svg' or other images included in the\n  novaideo/static/images/ directory to configure the logo when the application\n  is created.\n\nIf you want to connect to a postfix container, there is a commented example\nin **docker-compose.override.yml.templ** that use an external postfix container\nconnected on a mybridge bridge network. You need to create a mybridge bridge\nnetwork and start a postfix container yourself. (not documented here)\n\nTo deploy::\n\n    sudo docker-compose up -d\n\nTo connect with the super administrator (for the evolve steps and to create\nan other admin account only), go to\nhttps://mynovaideo.example.com/manage\nand log in with \"admin\" and the password is the one you gave in the SECRET\nenvironment variable.\n\nAfter the initial connection, you can increase the number of workers that are\nused to handle the requests in **docker-compose.override.yml** and run again\n**sudo docker-compose up -d** (WORKERS=3 is a good default).\n\nTo see the logs::\n\n    docker-compose logs -f\n\n\nHow to upgrade your install\n---------------------------\n\nFor each release, a docker image is built and the **docker-compose.yml** is\nmodified accordingly.\n\nIf you previously cloned the repository with version 1.1, to upgrade to 1.2 for\nexample, do::\n\n    git checkout 1.2\n    sudo docker-compose up -d\n\nAfter that, be sure to execute the evolve steps by connecting with the super\nadministrator at https://mynovaideo.example.com/manage\nand going to *Database* tab, and click on *Evolve* red button. You can see\nthe evolve steps with the *Summarize* button.\n\n\nBackup and maintainance of your database\n----------------------------------------\n\nYour data is in the var folder, be sure to backup it.\n\nThe database is a ZODB filestorage, you should pack it regularly (every week)\nto reduce its size. Example of cron for user root run at 1am sunday:\n\n    0 1 * * 0 docker exec novaideo_novaideo_1 /app/bin/zeopack -d 1 -u /app/var/zeo.sock\n\nBe sure that the container name is novaideo_novaideo_1 in your case. You can\nverify it with **docker ps**.\n\n\n\nChangelog\n=========\n\n1.3 (2017-02-25)\n----------------\n\n- When anonymous, use the browser language for the language of the user\n  interface.\n\n- Add Challenges feature.\n\n- Add Questions feature.\n\n\n1.2 (2017-01-06)\n----------------\n\n- Remove runtime pyramid_robot dependency, this avoid a dependency on\n  robotsuite that depends on lxml. Add optional lxml dependency in\n  buildout:eggs\n\n\n1.1 (2016-09-15)\n----------------\n\n- Improved ergonomics and fix some issues.\n\n\n1.0 (2016-06-28)\n----------------\n\n-  Initial version", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://nova-ideo.com", "keywords": "web pyramid substanced", "license": "AGPLv3+", "maintainer": "", "maintainer_email": "", "name": "novaideo", "package_url": "https://pypi.org/project/novaideo/", "platform": "", "project_url": "https://pypi.org/project/novaideo/", "project_urls": {"Homepage": "https://nova-ideo.com"}, "release_url": "https://pypi.org/project/novaideo/1.3/", "requires_dist": null, "requires_python": "", "summary": "Nova-Ideo is a participatory innovation tool, the merger of the box ideas and collaborative portal.", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"nova-ideo\">\n<h2>Nova Ideo</h2>\n<div id=\"features\">\n<h3>Features</h3>\n<p>See <a href=\"https://www.nova-ideo.com/\" rel=\"nofollow\">nova-ideo.com</a></p>\n</div>\n<div id=\"translations\">\n<h3>Translations</h3>\n<p>This product has been translated into</p>\n<ul>\n<li>English</li>\n<li>French</li>\n</ul>\n</div>\n<div id=\"contribute\">\n<h3>Contribute</h3>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/ecreall/nova-ideo/issues\" rel=\"nofollow\">https://github.com/ecreall/nova-ideo/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/ecreall/nova-ideo\" rel=\"nofollow\">https://github.com/ecreall/nova-ideo</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the AGPLv3+.</p>\n</div>\n<div id=\"getting-started-for-development\">\n<h3>Getting Started for development</h3>\n<div id=\"without-docker\">\n<h4>without docker</h4>\n<p>To run in development mode without docker:</p>\n<pre>sudo apt-get install python3 python3-dev libxml2-dev libxslt1-dev \\\n  libjpeg-dev zlib1g-dev libfreetype6-dev libtiff5-dev libzmq3-dev \\\n  libyaml-dev git  # this is working on debian jessie and ubuntu xenial\npython3 bootstrap.py\nmkdir -p var/{filestorage,blobstorage,log}\nbin/buildout  # It takes a long time...\nbin/runzeo -C etc/zeo.conf  # It starts in foreground, there is no output.  Use Ctrl+C to stop it.\nbin/pserve development.ini  # in another terminal\n</pre>\n<p>The application is on <a href=\"http://localhost:6543\" rel=\"nofollow\">http://localhost:6543</a></p>\n<p>I\u2019ll use $DOMAIN for <a href=\"http://localhost:6543\" rel=\"nofollow\">http://localhost:6543</a> in the rest of the documentation.</p>\n<p>To send emails with gmail smtp, you need to uncomment some lines and configure\nthe mail and password in development.ini</p>\n</div>\n<div id=\"with-docker\">\n<h4>with docker</h4>\n<p>You first need to install the <a href=\"https://docs.docker.com/engine/installation/linux/\" rel=\"nofollow\">docker engine</a> and\n<a href=\"https://docs.docker.com/compose/install/\" rel=\"nofollow\">docker-compose</a>.</p>\n<p>To run in development mode with docker:</p>\n<pre>./run.sh rebuild\n./run.sh\n</pre>\n<p>The app is deployed on <a href=\"https://local.ecreall.com:8443\" rel=\"nofollow\">https://local.ecreall.com:8443</a>\n(local.ecreall.com resolves to 127.0.0.1 and is necessary for nginx)</p>\n<p>I\u2019ll use $DOMAIN for <a href=\"https://local.ecreall.com:8443\" rel=\"nofollow\">https://local.ecreall.com:8443</a> in the rest of the documentation.</p>\n<p>The default configuration in <strong>docker-compose-dev.yml</strong> is used to connect\nwith a postfix via a ssh tunnel like this:</p>\n<pre>ssh -L 172.17.0.1:9025:localhost:25 myserver.example.com\n</pre>\n<p>To send emails with gmail smtp instead, you need to configure the MAILER\nvariables in <strong>docker-compose.override.yml</strong>, copy the file\n<strong>docker-compose.override.yml.templ</strong> to <strong>docker-compose.override.yml</strong> and\nedit it. This will overrides the configuration in <strong>docker-compose-dev.yml</strong>.</p>\n<p>To stop the application, do a Ctrl-c, and to stop the other containers (nginx),\nrun:</p>\n<pre>./run.sh down\n</pre>\n</div>\n</div>\n<div id=\"allow-your-gmail-account-to-be-used-to-send-emails\">\n<h3>Allow your gmail account to be used to send emails</h3>\n<p>To allow your gmail account to be used to send emails, you need to enable\n<a href=\"https://support.google.com/accounts/answer/6010255\" rel=\"nofollow\">less secure apps</a> and\ndo the <a href=\"https://support.google.com/accounts/answer/6009563\" rel=\"nofollow\">captcha</a>.\nLook at the logs in the terminal if you have an error when sending a mail.</p>\n<p>Be careful to not commit your gmail password!\nThe ini file doesn\u2019t support the use of % character in your password.\nIt thinks it\u2019s the beginning of a variable.\nIf you use this character in your password, you will need to change it!</p>\n</div>\n<div id=\"how-to-assign-roles-to-a-person\">\n<h3>How to assign roles to a person</h3>\n<p>If you want to give a person some additional roles, you need to have the\n<em>Administrator</em> or <em>Site administrator</em> role. The first time, you will need to\ndo it with the special super administrator account.\nGo to $DOMAIN/manage (there is no accessible link from the home page)\nand authenticate with login admin and the password\nyou have in SECRET environment variable\n(It\u2019s substanced.initial_password key in development.ini if you use the\ninstall without docker).\nReturn to $DOMAIN and go the hamburger menu on the top left, select\nSee/Members, go to a person\u2019s profile, click on <em>Assign\nroles</em> button and give her the <em>Site administrator</em>, <em>Examiner</em> or <em>Moderator</em>\nrole.</p>\n</div>\n<div id=\"deployment-with-docker\">\n<h3>Deployment with docker</h3>\n<p>Clone a specific version:</p>\n<pre>git clone -b VERSION git@github.com:ecreall/nova-ideo.git\ncd nova-ideo\n</pre>\n<p>(replace VERSION with the latest release, 1.2 for example)</p>\n<p>docker-compose runs a nginx container on port 80 and 443.\nYou need to edit the <strong>nginx-app-prod.conf</strong> file to replace mynovaideo.example.com\nby your domain and add certificates (<strong>server.key</strong> and <strong>server.crt</strong>) to the\n<strong>tls</strong> directory.</p>\n<p>Be sure that in <strong>docker-compose.yml</strong> it uses the correct version\necreall/novaideo:release-VERSION. Edit it if it\u2019s not the case.</p>\n<p>You need to configure some environment variables, copy the file\n<strong>docker-compose.override.yml.templ</strong> to <strong>docker-compose.override.yml</strong> and edit it.</p>\n<ul>\n<li>SECRET: the initial admin password</li>\n<li>APPLICATION_URL: your domain, same as you put in nginx-app-prod.conf</li>\n<li>MAIL_DEFAULT_SENDER: the sender of the mails that the application use</li>\n<li>MAILER_HOST: SMTP host</li>\n<li>MAILER_PORT: SMTP port</li>\n<li>MAILER_USERNAME: SMTP username</li>\n<li>MAILER_PASSWORD: SMTP password</li>\n<li>MAILER_TLS: Use TLS</li>\n<li>MAILER_SSL: Use SSL</li>\n<li>LOGO_FILENAME: empty by default to use the Nova-Ideo logo. You can\nset the variable to \u2018marianne.svg\u2019 or other images included in the\nnovaideo/static/images/ directory to configure the logo when the application\nis created.</li>\n</ul>\n<p>If you want to connect to a postfix container, there is a commented example\nin <strong>docker-compose.override.yml.templ</strong> that use an external postfix container\nconnected on a mybridge bridge network. You need to create a mybridge bridge\nnetwork and start a postfix container yourself. (not documented here)</p>\n<p>To deploy:</p>\n<pre>sudo docker-compose up -d\n</pre>\n<p>To connect with the super administrator (for the evolve steps and to create\nan other admin account only), go to\n<a href=\"https://mynovaideo.example.com/manage\" rel=\"nofollow\">https://mynovaideo.example.com/manage</a>\nand log in with \u201cadmin\u201d and the password is the one you gave in the SECRET\nenvironment variable.</p>\n<p>After the initial connection, you can increase the number of workers that are\nused to handle the requests in <strong>docker-compose.override.yml</strong> and run again\n<strong>sudo docker-compose up -d</strong> (WORKERS=3 is a good default).</p>\n<p>To see the logs:</p>\n<pre>docker-compose logs -f\n</pre>\n</div>\n<div id=\"how-to-upgrade-your-install\">\n<h3>How to upgrade your install</h3>\n<p>For each release, a docker image is built and the <strong>docker-compose.yml</strong> is\nmodified accordingly.</p>\n<p>If you previously cloned the repository with version 1.1, to upgrade to 1.2 for\nexample, do:</p>\n<pre>git checkout 1.2\nsudo docker-compose up -d\n</pre>\n<p>After that, be sure to execute the evolve steps by connecting with the super\nadministrator at <a href=\"https://mynovaideo.example.com/manage\" rel=\"nofollow\">https://mynovaideo.example.com/manage</a>\nand going to <em>Database</em> tab, and click on <em>Evolve</em> red button. You can see\nthe evolve steps with the <em>Summarize</em> button.</p>\n</div>\n<div id=\"backup-and-maintainance-of-your-database\">\n<h3>Backup and maintainance of your database</h3>\n<p>Your data is in the var folder, be sure to backup it.</p>\n<p>The database is a ZODB filestorage, you should pack it regularly (every week)\nto reduce its size. Example of cron for user root run at 1am sunday:</p>\n<blockquote>\n0 1 * * 0 docker exec novaideo_novaideo_1 /app/bin/zeopack -d 1 -u /app/var/zeo.sock</blockquote>\n<p>Be sure that the container name is novaideo_novaideo_1 in your case. You can\nverify it with <strong>docker ps</strong>.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.3 (2017-02-25)</h3>\n<ul>\n<li>When anonymous, use the browser language for the language of the user\ninterface.</li>\n<li>Add Challenges feature.</li>\n<li>Add Questions feature.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.2 (2017-01-06)</h3>\n<ul>\n<li>Remove runtime pyramid_robot dependency, this avoid a dependency on\nrobotsuite that depends on lxml. Add optional lxml dependency in\nbuildout:eggs</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1 (2016-09-15)</h3>\n<ul>\n<li>Improved ergonomics and fix some issues.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0 (2016-06-28)</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2667476, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "947299bb5ce970b2b2f8596322be5a1d", "sha256": "a5db5f2502bd569c85a50c3e31ef905e62d5253e1eeb9dacfe462e6318308a0e"}, "downloads": -1, "filename": "novaideo-1.0.tar.gz", "has_sig": false, "md5_digest": "947299bb5ce970b2b2f8596322be5a1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5733530, "upload_time": "2016-06-28T16:09:22", "upload_time_iso_8601": "2016-06-28T16:09:22.833385Z", "url": "https://files.pythonhosted.org/packages/63/df/90d41c61a6dd904e98ce14632530294965c505cebf4eb1af4cdff3a01ab4/novaideo-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "3bd367dadb28d5655828b4f27fe9ac2c", "sha256": "8ceb9fbbda3376d409f33c5a5ec3d2043a592120df54b095cf6d90bbcbb86b2c"}, "downloads": -1, "filename": "novaideo-1.1.tar.gz", "has_sig": false, "md5_digest": "3bd367dadb28d5655828b4f27fe9ac2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7672916, "upload_time": "2016-09-15T15:34:21", "upload_time_iso_8601": "2016-09-15T15:34:21.623787Z", "url": "https://files.pythonhosted.org/packages/f7/d8/4f0b5f7a810a364ce1dfcd6b73828f32a92319c8ed780891756db4165910/novaideo-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "eebf3929fdfe7747f1a208a90e6caa4a", "sha256": "2ca740c3735cdf1dc5d20e06a7c87f97059b7ba17acc7d57bc8f792e721396e8"}, "downloads": -1, "filename": "novaideo-1.2.tar.gz", "has_sig": false, "md5_digest": "eebf3929fdfe7747f1a208a90e6caa4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8118832, "upload_time": "2017-01-06T13:30:42", "upload_time_iso_8601": "2017-01-06T13:30:42.314601Z", "url": "https://files.pythonhosted.org/packages/d8/b8/5acddfbf7e5670160660b304bb32e14a25a6f68c1efec322479a4b672ffc/novaideo-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "f7dc5cf5f7d118ada2d95bb649201633", "sha256": "3f19e31cd78222bbf2a4db5a6de5b65ff1b78a04094ecea10a1760cfd5f38251"}, "downloads": -1, "filename": "novaideo-1.3.tar.gz", "has_sig": false, "md5_digest": "f7dc5cf5f7d118ada2d95bb649201633", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8157780, "upload_time": "2017-02-25T10:19:45", "upload_time_iso_8601": "2017-02-25T10:19:45.639456Z", "url": "https://files.pythonhosted.org/packages/e8/b2/c4f73829a5cc0db5a5820b2daf1ffd48d88c667c3a9cc580622b11920deb/novaideo-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7dc5cf5f7d118ada2d95bb649201633", "sha256": "3f19e31cd78222bbf2a4db5a6de5b65ff1b78a04094ecea10a1760cfd5f38251"}, "downloads": -1, "filename": "novaideo-1.3.tar.gz", "has_sig": false, "md5_digest": "f7dc5cf5f7d118ada2d95bb649201633", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8157780, "upload_time": "2017-02-25T10:19:45", "upload_time_iso_8601": "2017-02-25T10:19:45.639456Z", "url": "https://files.pythonhosted.org/packages/e8/b2/c4f73829a5cc0db5a5820b2daf1ffd48d88c667c3a9cc580622b11920deb/novaideo-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:36 2020"}