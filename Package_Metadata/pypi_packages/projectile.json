{"info": {"author": "Thomas Gilgenast", "author_email": "thomasgilgenast@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Multimedia :: Graphics :: Viewers", "Topic :: Scientific/Engineering :: Visualization"], "description": "projectile\n==========\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/projectile.svg)\n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/projectile.svg)](https://pypi.org/project/projectile)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/projectile.svg)](https://pypi.org/project/projectile)\n![Tests](https://github.com/sclabs/projectile/workflows/Tests/badge.svg)\n\nA tile-on-demand tile server built with PIL and Tornado.\n\nMotivation\n----------\n\nWe want to store a high-resolution image in memory on the server as a numpy\narray. Then when a client requests a particular tile, we can make the PNG of the\nrequested tile by slicing the numpy array and using PIL to write the resulting\nPNG back to the client through a StringIO stream.\n\nThis is primarily intended for building interactive visualizations in research\nsettings where we might want to skip the time- and/or disk-intensive tile\ngeneration step required by typical tile servers.\n\nDemo\n----\n\nInstall projectile\n\n    $ pip install projectile\n\nServe a test image from the [USC-SIPI Image Database](http://sipi.usc.edu/database/):\n\n    $ projectile sanfran\n\nManually request a particular tile by navigating to <http://localhost:8000/2/1/2.png>.\n\nTry zooming and panning in the demo client by navigating to <http://localhost:8000/>.\n\nServe one of your own images (any format readable by PIL) with\n\n    $ projectile some_image.tiff\n\nor, if you have data in a numpy `.npy` file,\n\n    $ projectile some_image.npy\n\nLoad an image in grayscale mode and apply a colormap:\n\n    $ projectile --mode L --cmap viridis pentagon\n\nStress testing\n--------------\n\nTo test the performance limits of on-demand tiling, download this\n[high resolution map of Great Britain](https://commons.wikimedia.org/wiki/File:A_new_map_of_Great_Britain_according_to_the_newest_and_most_exact_observations_(8342715024).jpg)\n(8,150 \u00d7 13,086 pixels, file size: 102.74 MB) from Wikimedia Commons.\n\nGrayscale performance test:\n\n    $ projectile britain.jpg -m L\n\nReducing tile resolution when running in color:\n\n    $ projectile britain.jpg --tile_size 128\n\nDependencies\n------------\n\n - `numpy>=1.13.3`\n - `Pillow>=4.3.0`\n - `tornado>=4.5.2`\n - `matplotlib>=2.1.0`\n\nAPI\n---\n\n### URL scheme\n\nThe server will serve grayscale and RGB images in their original colors at\n\n    /<z>/<x>/<y>/<s>.png\n\nwhere `<z>` is the zoom level, `<x>` and `<y>` specify the coordinates of the\ntile at that zoom level (`0/0` is the top left tile), and `<s>` specifies the\nimage tile resolution in pixels (must be a power of 2).\n\nThe server will serve colormapped versions of a grayscale image at\n\n    /<z>/<x>/<y>/<s>/<cmap>/<vmin>/<vmax>.png\n\nwhere `<cmap>` is the name of a matplotlib colormap, and `<vmin>` and `<vmax>`\nspecify the range of image pixel values linearly interpolate against the\ncolormap (pixel values outside this range will be clipped).\n\n### Using a custom client\n\nIf you like the projectile backend but just want to use a simple custom client\ncontained in a single HTML file `custom_client.html`, you can run\n\n    $ projectile array.npy --client custom_client.html\n\nto make projectile serve your client instead of the included demo client.\n\n### Using projectile in your existing Tornado web application\n\nThe core functionality is exposed in the `TileHandler` class defined in\n[server.py](projectile/server.py), which you can use in your own Tornado web\napplications:\n\n```python\nfrom tornado import web\nfrom projectile.server import TileHandler\n\n...\n\napp = web.Application([\n    (r'/([0-9]+)/([0-9]+)/([0-9]+)/([0-9]+).png', TileHandler,\n     dict(array=array)),\n    ...\n])\n\n...\n```\n\n### Launching projectile from your own Python code\n\nYou can also launch a server from your own Python code with the `run()` function\ndefined in [server.py](projectile/server.py):\n\n```python\nfrom projectile.server import run\n\nrun(array)\n```\n\nCredits\n-------\n\nThe demo client is lifted from <http://bl.ocks.org/mbostock/5914438>, with the\naddition of a small filtering check to prevent the client from requesting tiles\nwhich lie beyond the image boundaries.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sclabs/projectile", "keywords": "tileserver tile server on-demand tiling", "license": "", "maintainer": "", "maintainer_email": "", "name": "projectile", "package_url": "https://pypi.org/project/projectile/", "platform": "", "project_url": "https://pypi.org/project/projectile/", "project_urls": {"Homepage": "https://github.com/sclabs/projectile"}, "release_url": "https://pypi.org/project/projectile/0.0.6/", "requires_dist": ["numpy (>=1.13.3)", "Pillow (>=4.3.0)", "tornado (>=4.5.2)", "six (>=1.11.0)", "matplotlib (>=2.1.1)"], "requires_python": "", "summary": "A tile-on-demand tile server built with PIL and Tornado", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>projectile</h1>\n<p><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66642798a00dddd1adec1eb346f9190e5849efc3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70726f6a656374696c652e737667\">\n<a href=\"https://pypi.org/project/projectile\" rel=\"nofollow\"><img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17c614b13504f55a2b85f0446d1189258a170cf2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f70726f6a656374696c652e737667\"></a>\n<a href=\"https://pypi.org/project/projectile\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/920613d2bf2d3145edb3e462c7782bb88b8a4215/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70726f6a656374696c652e737667\"></a>\n<img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c6e27d1f596783e838092f82fb151537cbaf978/68747470733a2f2f6769746875622e636f6d2f73636c6162732f70726f6a656374696c652f776f726b666c6f77732f54657374732f62616467652e737667\"></p>\n<p>A tile-on-demand tile server built with PIL and Tornado.</p>\n<h2>Motivation</h2>\n<p>We want to store a high-resolution image in memory on the server as a numpy\narray. Then when a client requests a particular tile, we can make the PNG of the\nrequested tile by slicing the numpy array and using PIL to write the resulting\nPNG back to the client through a StringIO stream.</p>\n<p>This is primarily intended for building interactive visualizations in research\nsettings where we might want to skip the time- and/or disk-intensive tile\ngeneration step required by typical tile servers.</p>\n<h2>Demo</h2>\n<p>Install projectile</p>\n<pre><code>$ pip install projectile\n</code></pre>\n<p>Serve a test image from the <a href=\"http://sipi.usc.edu/database/\" rel=\"nofollow\">USC-SIPI Image Database</a>:</p>\n<pre><code>$ projectile sanfran\n</code></pre>\n<p>Manually request a particular tile by navigating to <a href=\"http://localhost:8000/2/1/2.png\" rel=\"nofollow\">http://localhost:8000/2/1/2.png</a>.</p>\n<p>Try zooming and panning in the demo client by navigating to <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a>.</p>\n<p>Serve one of your own images (any format readable by PIL) with</p>\n<pre><code>$ projectile some_image.tiff\n</code></pre>\n<p>or, if you have data in a numpy <code>.npy</code> file,</p>\n<pre><code>$ projectile some_image.npy\n</code></pre>\n<p>Load an image in grayscale mode and apply a colormap:</p>\n<pre><code>$ projectile --mode L --cmap viridis pentagon\n</code></pre>\n<h2>Stress testing</h2>\n<p>To test the performance limits of on-demand tiling, download this\n<a href=\"https://commons.wikimedia.org/wiki/File:A_new_map_of_Great_Britain_according_to_the_newest_and_most_exact_observations_(8342715024).jpg\" rel=\"nofollow\">high resolution map of Great Britain</a>\n(8,150 \u00d7 13,086 pixels, file size: 102.74 MB) from Wikimedia Commons.</p>\n<p>Grayscale performance test:</p>\n<pre><code>$ projectile britain.jpg -m L\n</code></pre>\n<p>Reducing tile resolution when running in color:</p>\n<pre><code>$ projectile britain.jpg --tile_size 128\n</code></pre>\n<h2>Dependencies</h2>\n<ul>\n<li><code>numpy&gt;=1.13.3</code></li>\n<li><code>Pillow&gt;=4.3.0</code></li>\n<li><code>tornado&gt;=4.5.2</code></li>\n<li><code>matplotlib&gt;=2.1.0</code></li>\n</ul>\n<h2>API</h2>\n<h3>URL scheme</h3>\n<p>The server will serve grayscale and RGB images in their original colors at</p>\n<pre><code>/&lt;z&gt;/&lt;x&gt;/&lt;y&gt;/&lt;s&gt;.png\n</code></pre>\n<p>where <code>&lt;z&gt;</code> is the zoom level, <code>&lt;x&gt;</code> and <code>&lt;y&gt;</code> specify the coordinates of the\ntile at that zoom level (<code>0/0</code> is the top left tile), and <code>&lt;s&gt;</code> specifies the\nimage tile resolution in pixels (must be a power of 2).</p>\n<p>The server will serve colormapped versions of a grayscale image at</p>\n<pre><code>/&lt;z&gt;/&lt;x&gt;/&lt;y&gt;/&lt;s&gt;/&lt;cmap&gt;/&lt;vmin&gt;/&lt;vmax&gt;.png\n</code></pre>\n<p>where <code>&lt;cmap&gt;</code> is the name of a matplotlib colormap, and <code>&lt;vmin&gt;</code> and <code>&lt;vmax&gt;</code>\nspecify the range of image pixel values linearly interpolate against the\ncolormap (pixel values outside this range will be clipped).</p>\n<h3>Using a custom client</h3>\n<p>If you like the projectile backend but just want to use a simple custom client\ncontained in a single HTML file <code>custom_client.html</code>, you can run</p>\n<pre><code>$ projectile array.npy --client custom_client.html\n</code></pre>\n<p>to make projectile serve your client instead of the included demo client.</p>\n<h3>Using projectile in your existing Tornado web application</h3>\n<p>The core functionality is exposed in the <code>TileHandler</code> class defined in\n<a href=\"projectile/server.py\" rel=\"nofollow\">server.py</a>, which you can use in your own Tornado web\napplications:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">projectile.server</span> <span class=\"kn\">import</span> <span class=\"n\">TileHandler</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">([</span>\n    <span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'/([0-9]+)/([0-9]+)/([0-9]+)/([0-9]+).png'</span><span class=\"p\">,</span> <span class=\"n\">TileHandler</span><span class=\"p\">,</span>\n     <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"o\">=</span><span class=\"n\">array</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">])</span>\n\n<span class=\"o\">...</span>\n</pre>\n<h3>Launching projectile from your own Python code</h3>\n<p>You can also launch a server from your own Python code with the <code>run()</code> function\ndefined in <a href=\"projectile/server.py\" rel=\"nofollow\">server.py</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">projectile.server</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>\n\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">)</span>\n</pre>\n<h2>Credits</h2>\n<p>The demo client is lifted from <a href=\"http://bl.ocks.org/mbostock/5914438\" rel=\"nofollow\">http://bl.ocks.org/mbostock/5914438</a>, with the\naddition of a small filtering check to prevent the client from requesting tiles\nwhich lie beyond the image boundaries.</p>\n\n          </div>"}, "last_serial": 6644446, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ad40174327f701736ac0470349e7ed8d", "sha256": "7fd337af9b6b64f180132947e117c73fe64d19c898465617d4b71ebdcb9de633"}, "downloads": -1, "filename": "projectile-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ad40174327f701736ac0470349e7ed8d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8212, "upload_time": "2017-12-15T07:39:57", "upload_time_iso_8601": "2017-12-15T07:39:57.772998Z", "url": "https://files.pythonhosted.org/packages/a0/0e/3cb4717a9d82a19b27f773a479de64a2c50bddcadb63fb6d0a051c52fb8d/projectile-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51e44b7fbd8b2f2b50100934fcfac6e4", "sha256": "1e373f294829eaa4ffc3d60f3ae102828be3fe6935a061148ea0a3f973ab998d"}, "downloads": -1, "filename": "projectile-0.0.1.tar.gz", "has_sig": false, "md5_digest": "51e44b7fbd8b2f2b50100934fcfac6e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20717, "upload_time": "2017-12-15T07:39:59", "upload_time_iso_8601": "2017-12-15T07:39:59.356365Z", "url": "https://files.pythonhosted.org/packages/3a/68/efeb82e9db81f1f1d6b2589086ff98ea04c7c9a9960aae8715acfc3a8d3d/projectile-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ef298190b56665feb7a49804279bbac8", "sha256": "c6823778a91743c847ad59d1dc1c469f60451a44bccee8eacd959437fcfc35a8"}, "downloads": -1, "filename": "projectile-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ef298190b56665feb7a49804279bbac8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9149, "upload_time": "2017-12-15T07:53:52", "upload_time_iso_8601": "2017-12-15T07:53:52.495025Z", "url": "https://files.pythonhosted.org/packages/b1/37/9e71e751fb9535fb8bd8882f8dd16fdf9b5c0c562900a5fece1f168e08e0/projectile-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d86cbcbbdb4b5240f694c56e8e3895a", "sha256": "f2b27126971825c5dbf88268c4e99213fde22df87452fba9757482e15cbbd187"}, "downloads": -1, "filename": "projectile-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1d86cbcbbdb4b5240f694c56e8e3895a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21484, "upload_time": "2017-12-15T07:53:53", "upload_time_iso_8601": "2017-12-15T07:53:53.573066Z", "url": "https://files.pythonhosted.org/packages/b9/e4/26bfb3ac34f5a71629d5a79dd96368a5a2e3f3933f477044c456c2a9e714/projectile-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1641c7afce21b5e900febfa3a44101f1", "sha256": "9b533380eeaea6f4e648d59c63996a6aaf5a6fe9028000d9b4e515d5c7f14d70"}, "downloads": -1, "filename": "projectile-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "1641c7afce21b5e900febfa3a44101f1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10501, "upload_time": "2017-12-15T10:11:28", "upload_time_iso_8601": "2017-12-15T10:11:28.803246Z", "url": "https://files.pythonhosted.org/packages/c4/30/7ba302aedb1bba1619365020f32d8d122135e048b8498a3784813a3f03eb/projectile-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eb5cc0f62488409090d020c32f1b77c", "sha256": "9711d58bb91947f95da82c4a5c5a2f2da4ee95a54089928f2ebe19276861648a"}, "downloads": -1, "filename": "projectile-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5eb5cc0f62488409090d020c32f1b77c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10504, "upload_time": "2017-12-15T10:19:55", "upload_time_iso_8601": "2017-12-15T10:19:55.771481Z", "url": "https://files.pythonhosted.org/packages/98/80/bbeb092d4d8a7e8d2cee1c6fc71ce4a2ce59bdcb81eeee162a62e5a79356/projectile-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9299056323b7195f727c6a6fa5fde4a0", "sha256": "bcb6fe3ab57704a557e28f2a28262809de56a27ad0e450526e2232b4945235a5"}, "downloads": -1, "filename": "projectile-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9299056323b7195f727c6a6fa5fde4a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22587, "upload_time": "2017-12-15T10:11:30", "upload_time_iso_8601": "2017-12-15T10:11:30.941970Z", "url": "https://files.pythonhosted.org/packages/6d/c2/0661c1745ffdd102483b242a57fa77c8c15b75f0816f51c6aee26b630fad/projectile-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2f6a7120f5992e8c00158d0bb21d1249", "sha256": "0ab9c09c768b6d6fff80af1f00b2da04565a3aa19c9fc0834c562deac1c1821d"}, "downloads": -1, "filename": "projectile-0.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "2f6a7120f5992e8c00158d0bb21d1249", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12040, "upload_time": "2018-03-22T14:59:15", "upload_time_iso_8601": "2018-03-22T14:59:15.378564Z", "url": "https://files.pythonhosted.org/packages/9f/21/0f87d2f34e3e5bfdafa8582c39d2988d8789c804b5179b718a10d0598d7d/projectile-0.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e64be1b1326ac4403bd734684da8c88", "sha256": "03698eef6413a3b5176d1c6b8d802c12936b74384835ba4faceccc29b6107462"}, "downloads": -1, "filename": "projectile-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4e64be1b1326ac4403bd734684da8c88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23778, "upload_time": "2018-03-22T14:59:50", "upload_time_iso_8601": "2018-03-22T14:59:50.439978Z", "url": "https://files.pythonhosted.org/packages/fb/58/acf9a4dd4efcc227e71f8e98bb32ea06ae6aeb924ae6925e6b5d3a3ea8b3/projectile-0.0.4.tar.gz", "yanked": false}], "0.0.4a1": [{"comment_text": "", "digests": {"md5": "e94f1df3a1d8aac915d35795ecfbe916", "sha256": "935fdbe21cc6967267f38f603032b079d364c827b9c22d53f917aae013b49e16"}, "downloads": -1, "filename": "projectile-0.0.4a1-py2-none-any.whl", "has_sig": false, "md5_digest": "e94f1df3a1d8aac915d35795ecfbe916", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11091, "upload_time": "2018-01-29T05:47:37", "upload_time_iso_8601": "2018-01-29T05:47:37.142081Z", "url": "https://files.pythonhosted.org/packages/09/41/4a8272fe0aa1f5db49ffb413fd3d2e5a97a11d99b213a2916a599270f15f/projectile-0.0.4a1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ebf02f08bc42b02c1df218558a1971f", "sha256": "1068a2ef92f737a8f628410f56a785fa20d0348c32f26d38cb1c0c524bfacf2a"}, "downloads": -1, "filename": "projectile-0.0.4a1.tar.gz", "has_sig": false, "md5_digest": "5ebf02f08bc42b02c1df218558a1971f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23099, "upload_time": "2018-01-29T05:48:15", "upload_time_iso_8601": "2018-01-29T05:48:15.576684Z", "url": "https://files.pythonhosted.org/packages/a7/cb/45f689813a8736a3da0e59b11d1a3201d046be6af7988ba7b74316d25833/projectile-0.0.4a1.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "67a8487484d7308e8a59178ef073a31a", "sha256": "fb972d9c8cd0276d170ec3b3dfaf8e6c9144aa84f6dae702e6f3dd336d1f634d"}, "downloads": -1, "filename": "projectile-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "67a8487484d7308e8a59178ef073a31a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12048, "upload_time": "2018-03-22T18:51:18", "upload_time_iso_8601": "2018-03-22T18:51:18.039102Z", "url": "https://files.pythonhosted.org/packages/b5/ae/612d8f04a784f1f4d13d5e3ae67d2daf4ff4b417ee407c9399819bc543d1/projectile-0.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e40af3b8f737696ecb74f7d16cc259eb", "sha256": "b66fe76ba1b0920894d88c37e516bbcd48868846dd5c2e62127b0bf43cc63f00"}, "downloads": -1, "filename": "projectile-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e40af3b8f737696ecb74f7d16cc259eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12051, "upload_time": "2018-03-22T18:53:08", "upload_time_iso_8601": "2018-03-22T18:53:08.669880Z", "url": "https://files.pythonhosted.org/packages/9d/74/971c845bb939daa7fd3e5138ac1fcf8497cac4f5bc239196a81685cbb252/projectile-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9a9f6cb698934c8442e70c5c2e213e9", "sha256": "b41011fcca414d45d785df366b56812ada521c8f6dfe0cdec19d5396f557b0b4"}, "downloads": -1, "filename": "projectile-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d9a9f6cb698934c8442e70c5c2e213e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23783, "upload_time": "2018-03-22T18:51:19", "upload_time_iso_8601": "2018-03-22T18:51:19.364441Z", "url": "https://files.pythonhosted.org/packages/22/00/2426b8539e52b49634826fbd8fb303dd0634ef0631df12045df1c73cc365/projectile-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a0502937c2a52d1ca93834c17e328a07", "sha256": "5ca4d4f5adf00a60067897664c0df8ccf84f87ade248280c51d64bf13c8604e6"}, "downloads": -1, "filename": "projectile-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0502937c2a52d1ca93834c17e328a07", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9245, "upload_time": "2020-02-17T07:45:37", "upload_time_iso_8601": "2020-02-17T07:45:37.664718Z", "url": "https://files.pythonhosted.org/packages/3c/ff/965a46ef8085c6c050995ad64d0d7dd5e1469beeb2be478265e993501653/projectile-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c46e1d640ac7024b2697cef68f932257", "sha256": "c3b02ec78dec050b4b1e90ed88f06f3e7c5e422780dda9652602a7787f7ef12e"}, "downloads": -1, "filename": "projectile-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c46e1d640ac7024b2697cef68f932257", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26083, "upload_time": "2020-02-17T07:45:39", "upload_time_iso_8601": "2020-02-17T07:45:39.255036Z", "url": "https://files.pythonhosted.org/packages/b6/a7/5b44db5905657b7b37179e9fe99e9dca035dab2726da73e4dcfe59a306e9/projectile-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0502937c2a52d1ca93834c17e328a07", "sha256": "5ca4d4f5adf00a60067897664c0df8ccf84f87ade248280c51d64bf13c8604e6"}, "downloads": -1, "filename": "projectile-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0502937c2a52d1ca93834c17e328a07", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9245, "upload_time": "2020-02-17T07:45:37", "upload_time_iso_8601": "2020-02-17T07:45:37.664718Z", "url": "https://files.pythonhosted.org/packages/3c/ff/965a46ef8085c6c050995ad64d0d7dd5e1469beeb2be478265e993501653/projectile-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c46e1d640ac7024b2697cef68f932257", "sha256": "c3b02ec78dec050b4b1e90ed88f06f3e7c5e422780dda9652602a7787f7ef12e"}, "downloads": -1, "filename": "projectile-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c46e1d640ac7024b2697cef68f932257", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26083, "upload_time": "2020-02-17T07:45:39", "upload_time_iso_8601": "2020-02-17T07:45:39.255036Z", "url": "https://files.pythonhosted.org/packages/b6/a7/5b44db5905657b7b37179e9fe99e9dca035dab2726da73e4dcfe59a306e9/projectile-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:18 2020"}