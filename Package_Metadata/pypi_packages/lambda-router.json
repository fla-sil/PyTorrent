{"info": {"author": "Jason Paidoussi", "author_email": "jason@paidoussi.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# ``lambda_router``: Python Helpers for AWS Lambdas\n\n``lambda_router`` is a Python package that provides a few helpers for writing Python-based AWS Lambda functions.\n\nIts main goal is to reduce the boilerplate code when writing lambda functions that need to handle multiple routes.\n\n## Getting Started\n\nInstall with:\n\n```console\n    $ pip install lambda_router\n```\n\nCreating a basic, single-route app:\n\n```python\n    import lambda_router\n\n\n    config = lambda_router.Config()\n    # Load all environment variables prefix with JSR_.\n    config.load_from_environment(prefix=\"JSR_\")\n    app = lambda_router.App(name=\"example_lambda\", config=config)\n\n\n    app.route()\n    def main(event):\n        # This is the main route of your lambda\n        return {\"message\": \"success\"}\n```\n\nOr a multi-route app that uses the `type` field in the lambda event for routing:\n\n```python\n    import lambda_router\n\n\n    config = lambda_router.Config()\n    # Load all environment variables prefix with JSR_.\n    config.load_from_environment(prefix=\"JSR_\")\n    app = lambda_router.App(name=\"example_lambda\", config=config, route=lambda_router.routers.EventField(key=\"type\"))\n\n\n    app.route(\"route_one\")\n    def main(event):\n        return {\"message\": \"success from route_one\"}\n\n    app.route(\"route_two\")\n    def main(event):\n        return {\"message\": \"success from route_two\"}\n```\n\n## Contributing\n\nUse `poetry` to install the dev requirements:\n\n```console\n    $ poetry install\n```\n\nInstall the git pre-commit hooks:\n\n```console\n    $ poetry run pre-commit install\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jasureinc/lambda-router", "keywords": "", "license": "BSD 3 Clause", "maintainer": "", "maintainer_email": "", "name": "lambda-router", "package_url": "https://pypi.org/project/lambda-router/", "platform": "", "project_url": "https://pypi.org/project/lambda-router/", "project_urls": {"Homepage": "https://github.com/jasureinc/lambda-router"}, "release_url": "https://pypi.org/project/lambda-router/2020.3.25/", "requires_dist": ["attrs (>=19.1.0)", "sphinx ; extra == 'docs'", "coverage[toml] ; extra == 'tests'", "pytest ; extra == 'tests'"], "requires_python": "", "summary": "AWS Lambda Routing Utility", "version": "2020.3.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>lambda_router</code>: Python Helpers for AWS Lambdas</h1>\n<p><code>lambda_router</code> is a Python package that provides a few helpers for writing Python-based AWS Lambda functions.</p>\n<p>Its main goal is to reduce the boilerplate code when writing lambda functions that need to handle multiple routes.</p>\n<h2>Getting Started</h2>\n<p>Install with:</p>\n<pre><span class=\"gp\">    $</span> pip install lambda_router\n</pre>\n<p>Creating a basic, single-route app:</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">lambda_router</span>\n\n\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">lambda_router</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Load all environment variables prefix with JSR_.</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load_from_environment</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"JSR_\"</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">lambda_router</span><span class=\"o\">.</span><span class=\"n\">App</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"example_lambda\"</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n        <span class=\"c1\"># This is the main route of your lambda</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"success\"</span><span class=\"p\">}</span>\n</pre>\n<p>Or a multi-route app that uses the <code>type</code> field in the lambda event for routing:</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">lambda_router</span>\n\n\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">lambda_router</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Load all environment variables prefix with JSR_.</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load_from_environment</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"JSR_\"</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">lambda_router</span><span class=\"o\">.</span><span class=\"n\">App</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"example_lambda\"</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">route</span><span class=\"o\">=</span><span class=\"n\">lambda_router</span><span class=\"o\">.</span><span class=\"n\">routers</span><span class=\"o\">.</span><span class=\"n\">EventField</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"type\"</span><span class=\"p\">))</span>\n\n\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"route_one\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"success from route_one\"</span><span class=\"p\">}</span>\n\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"route_two\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"success from route_two\"</span><span class=\"p\">}</span>\n</pre>\n<h2>Contributing</h2>\n<p>Use <code>poetry</code> to install the dev requirements:</p>\n<pre><span class=\"gp\">    $</span> poetry install\n</pre>\n<p>Install the git pre-commit hooks:</p>\n<pre><span class=\"gp\">    $</span> poetry run pre-commit install\n</pre>\n\n          </div>"}, "last_serial": 6880581, "releases": {"2020.1.1": [{"comment_text": "", "digests": {"md5": "50db764d97bb4e54364dc35320f766a4", "sha256": "0d7c6a00a212310d9c006f382a624d3a022b82010fc0e247103bd3b2f5eab409"}, "downloads": -1, "filename": "lambda_router-2020.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "50db764d97bb4e54364dc35320f766a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8826, "upload_time": "2020-01-28T10:32:53", "upload_time_iso_8601": "2020-01-28T10:32:53.066303Z", "url": "https://files.pythonhosted.org/packages/65/06/235aefd4eb35289f2601def1c96d5a6bc6e4ed493f16d66c20111b986178/lambda_router-2020.1.1-py2.py3-none-any.whl", "yanked": false}], "2020.3.25": [{"comment_text": "", "digests": {"md5": "4f07e5cf5ccd61be2712aa07928cecae", "sha256": "d45f276d05dbe157bc63269cf19194825dff092cb4132c8b7c30faa468d1eed2"}, "downloads": -1, "filename": "lambda_router-2020.3.25-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f07e5cf5ccd61be2712aa07928cecae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9363, "upload_time": "2020-03-25T13:23:09", "upload_time_iso_8601": "2020-03-25T13:23:09.291364Z", "url": "https://files.pythonhosted.org/packages/35/b4/e8f0480f9dceb1f7f83359d7a238e480ea13e89de074bead3825845079b5/lambda_router-2020.3.25-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f07e5cf5ccd61be2712aa07928cecae", "sha256": "d45f276d05dbe157bc63269cf19194825dff092cb4132c8b7c30faa468d1eed2"}, "downloads": -1, "filename": "lambda_router-2020.3.25-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f07e5cf5ccd61be2712aa07928cecae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9363, "upload_time": "2020-03-25T13:23:09", "upload_time_iso_8601": "2020-03-25T13:23:09.291364Z", "url": "https://files.pythonhosted.org/packages/35/b4/e8f0480f9dceb1f7f83359d7a238e480ea13e89de074bead3825845079b5/lambda_router-2020.3.25-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:04 2020"}