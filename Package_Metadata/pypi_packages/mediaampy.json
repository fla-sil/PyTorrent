{"info": {"author": "Matt Cordial", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Video"], "description": "MediaAmp/MPX HTTP API Client\n============================\n\nThis is a fairly low-level wrapper around the MediaAmp/MPX `endpoints\n<http://help.theplatform.com/display/trc/Alphabetical+list+of+endpoints>`_\nprovided by theplatform.com. It primarily handles token authentication and\nprovides HTTP methods with configurable default parameters (e.g. schema) for the\nservice endpoints. Because of the multitude of available parameters available at\neach endpoint this package is intended to be used by your application to build\nyour own abstractions on top of the request and response data. Currently it only\nsupports the JSON (and cJSON) forms.\n\n.. image:: https://travis-ci.org/cordmata/mediaampy.svg?branch=master\n    :target: https://travis-ci.org/cordmata/mediaampy\n\nUsage\n-----\n\nTo get started, supply your credentials: username, password, account id (This is\na URL and can be found on the \"About\" screen in the MPX console). You can\noptionally supply an authentication token if you have one.\n\n.. code-block:: python\n\n    import mediaamp\n    session = mediaamp.Session(\n        'example@example.com',\n        'very_very_secret',\n        'http://access.auth.theplatform.com/data/Account/{{YOURID}}',\n        auth_token='YOUR_TOKEN',\n    )\n\n\nOnce initialized, you can obtain services by key lookup:\n\n.. code-block:: python\n\n    media_data = session['Media Data Service']\n\nThe endpoints on the service have get(), put(), post(), and delete()\nmethods you can use depending on the actions you are taking.\n\n.. code-block:: python\n\n    media_item = media_data.Media.get('{{MEDIA_ID}}')\n    media_item['description']\n\nYou can specify your own defaults per-endpoint by calling the endpoint\nobject.\n\n.. code-block:: python\n\n    media = media_data.Media(schema='1.8', form='cjson')\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install mediaampy\n\nOr you can clone the source and run:\n\n.. code-block:: bash\n\n    make init", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cordmata/mediaampy", "keywords": "MediaAmp,thePlatform", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "mediaampy", "package_url": "https://pypi.org/project/mediaampy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mediaampy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cordmata/mediaampy"}, "release_url": "https://pypi.org/project/mediaampy/0.2.8/", "requires_dist": null, "requires_python": null, "summary": "HTTP Client for the MediaAmp/MPX API", "version": "0.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a fairly low-level wrapper around the MediaAmp/MPX <a href=\"http://help.theplatform.com/display/trc/Alphabetical+list+of+endpoints\" rel=\"nofollow\">endpoints</a>\nprovided by theplatform.com. It primarily handles token authentication and\nprovides HTTP methods with configurable default parameters (e.g. schema) for the\nservice endpoints. Because of the multitude of available parameters available at\neach endpoint this package is intended to be used by your application to build\nyour own abstractions on top of the request and response data. Currently it only\nsupports the JSON (and cJSON) forms.</p>\n<a href=\"https://travis-ci.org/cordmata/mediaampy\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cordmata/mediaampy.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ba43221e0cda40d89c177398388711851df2a55/68747470733a2f2f7472617669732d63692e6f72672f636f72646d6174612f6d65646961616d70792e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To get started, supply your credentials: username, password, account id (This is\na URL and can be found on the \u201cAbout\u201d screen in the MPX console). You can\noptionally supply an authentication token if you have one.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mediaamp</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">mediaamp</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">(</span>\n    <span class=\"s1\">'example@example.com'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'very_very_secret'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'http://access.auth.theplatform.com/data/Account/{{YOURID}}'</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_token</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_TOKEN'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Once initialized, you can obtain services by key lookup:</p>\n<pre><span class=\"n\">media_data</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'Media Data Service'</span><span class=\"p\">]</span>\n</pre>\n<p>The endpoints on the service have get(), put(), post(), and delete()\nmethods you can use depending on the actions you are taking.</p>\n<pre><span class=\"n\">media_item</span> <span class=\"o\">=</span> <span class=\"n\">media_data</span><span class=\"o\">.</span><span class=\"n\">Media</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'{{MEDIA_ID}}'</span><span class=\"p\">)</span>\n<span class=\"n\">media_item</span><span class=\"p\">[</span><span class=\"s1\">'description'</span><span class=\"p\">]</span>\n</pre>\n<p>You can specify your own defaults per-endpoint by calling the endpoint\nobject.</p>\n<pre><span class=\"n\">media</span> <span class=\"o\">=</span> <span class=\"n\">media_data</span><span class=\"o\">.</span><span class=\"n\">Media</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s1\">'1.8'</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"o\">=</span><span class=\"s1\">'cjson'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install mediaampy\n</pre>\n<p>Or you can clone the source and run:</p>\n<pre>make init\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1607074, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "2a93491dfbe21a5a550545f4a9a63e7f", "sha256": "56b027f19d8aa70a9b6c08475bee6ac0a69f0a4585336e9345ecccf027d38459"}, "downloads": -1, "filename": "mediaampy-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a93491dfbe21a5a550545f4a9a63e7f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9824, "upload_time": "2015-06-05T00:05:41", "upload_time_iso_8601": "2015-06-05T00:05:41.504165Z", "url": "https://files.pythonhosted.org/packages/10/f2/de74bc138847299a95d70179cce320de57cd3f7af2d7b8944a88b0f5fc6a/mediaampy-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dc2673a65b31184adce2296250970ce", "sha256": "b0b41c1a4a669d866b88d4d752022e3f26e018602d88f42968221b1d9710ee2f"}, "downloads": -1, "filename": "mediaampy-0.2.5.tar.gz", "has_sig": false, "md5_digest": "8dc2673a65b31184adce2296250970ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7068, "upload_time": "2015-06-05T00:05:12", "upload_time_iso_8601": "2015-06-05T00:05:12.134250Z", "url": "https://files.pythonhosted.org/packages/51/0b/4ca1279c977c8224c06034c9e66d2bd1d6c71572694b10e71f923baf74bd/mediaampy-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "75cc72ee45f7c520c782459f87d20cd6", "sha256": "cd44ecb6cf4ebd3d1af8b58cf499b129449d528b9ad76a8b454d9c3d3ecb3980"}, "downloads": -1, "filename": "mediaampy-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75cc72ee45f7c520c782459f87d20cd6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9788, "upload_time": "2015-06-05T00:10:01", "upload_time_iso_8601": "2015-06-05T00:10:01.801612Z", "url": "https://files.pythonhosted.org/packages/77/4f/94f3ce8c8f997d836520c2f9538353ad64ecc78a01f336fd77077d9a1f7b/mediaampy-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "424282596fdc9e61ffd542fa4dcb311f", "sha256": "ca6bb61f679a5911f548b79e92bf4927954541d8f8bc6867104dd484711ad4c7"}, "downloads": -1, "filename": "mediaampy-0.2.6.tar.gz", "has_sig": false, "md5_digest": "424282596fdc9e61ffd542fa4dcb311f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7048, "upload_time": "2015-06-05T00:09:58", "upload_time_iso_8601": "2015-06-05T00:09:58.345650Z", "url": "https://files.pythonhosted.org/packages/28/e2/ed069affae61e00b8ea5cca0a2353e27a50711ebd41b1db962f6b3282cfb/mediaampy-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "6675f8d03f2272ddd8c55b11326cd9e7", "sha256": "93ec477e2e5e450d2b67e52fad0e91ed8aeac1b50f47f6045b0acd197e9e457d"}, "downloads": -1, "filename": "mediaampy-0.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6675f8d03f2272ddd8c55b11326cd9e7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9834, "upload_time": "2015-06-24T00:38:19", "upload_time_iso_8601": "2015-06-24T00:38:19.483018Z", "url": "https://files.pythonhosted.org/packages/17/36/8d87b023506b78faa2c150df0720ab66d2aaabdc513118e26e4758610a3a/mediaampy-0.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30d9cf307ee862dbb819add9b0a2b931", "sha256": "a0093eadefc0dea903347bf0268856d6e19e1b82386fc312ed2a90ff9eaa6893"}, "downloads": -1, "filename": "mediaampy-0.2.7.tar.gz", "has_sig": false, "md5_digest": "30d9cf307ee862dbb819add9b0a2b931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7157, "upload_time": "2015-06-24T00:38:16", "upload_time_iso_8601": "2015-06-24T00:38:16.064939Z", "url": "https://files.pythonhosted.org/packages/34/34/daa06f0442f3e001d7f853d5fd9a4ccf14e74453c302df6b443df70d8328/mediaampy-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "f0571ebdb0ecffc191bf1748d4449050", "sha256": "4a832957dc95309607f581d39d3d4a8d4c492e0a2e55eac5d8a10742ba086a7d"}, "downloads": -1, "filename": "mediaampy-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0571ebdb0ecffc191bf1748d4449050", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9828, "upload_time": "2015-06-25T22:54:09", "upload_time_iso_8601": "2015-06-25T22:54:09.315588Z", "url": "https://files.pythonhosted.org/packages/c0/85/2a50ec1d7cddc60c9e30743b781d9f5619886f5565fba06c500f1df05410/mediaampy-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15d2392e78ad38e317ec05353285269f", "sha256": "2bcbe64469d63a8ffd12a44aecb96ed75ee718a1d64a6e4d1d17f28268ba429e"}, "downloads": -1, "filename": "mediaampy-0.2.8.tar.gz", "has_sig": false, "md5_digest": "15d2392e78ad38e317ec05353285269f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7164, "upload_time": "2015-06-25T22:54:05", "upload_time_iso_8601": "2015-06-25T22:54:05.559489Z", "url": "https://files.pythonhosted.org/packages/c7/d6/2036df4c6736661343d43aa54416889615d131cfbcf5a2fb98d794672815/mediaampy-0.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0571ebdb0ecffc191bf1748d4449050", "sha256": "4a832957dc95309607f581d39d3d4a8d4c492e0a2e55eac5d8a10742ba086a7d"}, "downloads": -1, "filename": "mediaampy-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0571ebdb0ecffc191bf1748d4449050", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9828, "upload_time": "2015-06-25T22:54:09", "upload_time_iso_8601": "2015-06-25T22:54:09.315588Z", "url": "https://files.pythonhosted.org/packages/c0/85/2a50ec1d7cddc60c9e30743b781d9f5619886f5565fba06c500f1df05410/mediaampy-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15d2392e78ad38e317ec05353285269f", "sha256": "2bcbe64469d63a8ffd12a44aecb96ed75ee718a1d64a6e4d1d17f28268ba429e"}, "downloads": -1, "filename": "mediaampy-0.2.8.tar.gz", "has_sig": false, "md5_digest": "15d2392e78ad38e317ec05353285269f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7164, "upload_time": "2015-06-25T22:54:05", "upload_time_iso_8601": "2015-06-25T22:54:05.559489Z", "url": "https://files.pythonhosted.org/packages/c7/d6/2036df4c6736661343d43aa54416889615d131cfbcf5a2fb98d794672815/mediaampy-0.2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:38 2020"}