{"info": {"author": "Matt Trzcinski", "author_email": "excalamus@tutanota.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Scientific/Engineering :: Visualization"], "description": "siglent_parser\n==============\n\n![Image showing plotted analog data](./docs/analog.PNG \"Example:\nPlotting analog data\")\n\nAnalyze data obtained from your Siglent scope using the Python tools\nyou know and love!\n\n**siglent_parser** is a Python library for converting Siglent\n1000/2000X [binary data](#Binary) to a Numpy array.\n\nThe library is currently configured for analog data and 2000X models.\nHowever, parameters and logic are in place for expanding the library's\nfunctionality to handle digital data and 1000X models.  Steps on how\nto do this are provided in the [Todo](#Todo).  The interested party is\nencouraged to submit a pull request!\n\nThe **siglent_parser** library was tested using a Siglent SDS2304X and\nwas written using Python 3.6 on Windows 10.  Attempts have been made\nto make the library platform independent, although YMMV. The library\nwas created using the specifications provided by Siglent Technologies\nin the document [How to Extract Data from the Binary File of SDS2000X,\nSDS1000X, and\nSDS1000X-E](https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/\n\"Technical specifications\").\n\nHow to get it\n=============\n\nThere are three ways to get the library.\n\n## Clone\n\nPlease consider contributing to the project!  Your help *is* valuable!\n\nTo clone, the **siglent_parser** library, do\n\n```sh\nhg clone https://excalamus@bitbucket.org/excalamus/siglent_parser\n```\n\n## Download\n\nDownload a zip of the library from the main [downloads\npage](https://bitbucket.org/excalamus/siglent_parser/downloads/\n\"Downloads page\").\n\n## PyPi\n\nThe **siglent_parser** libary is available on\n[PyPi](https://pypi.org/project/siglent-parser/ \"python package\").\n\nTo install it in your Python envionment, do\n\n```sh\npip install siglent-parser\n```\n\nSetup\n=======\n\nIf the library was cloned or downloaded, you will need to install the\nlibrary and its dependencies:\n\n```sh\n\n# Make sure you're in the directory above siglent_parser\n# This will install the library as an editable package\npip install -e siglent_parser\n\n# Make sure you're in the same directory as requirements.txt\npip install -r requirements.txt\n```\n\nAt the time of this writing, the only dependency is Numpy.\n\nUsing the **siglent_parser** library\n====================================\n\nAt this time, the **siglent_parser** library only parses strictly\nanalog files ([See Todo](#Todo)).  The output is a Numpy array which\ncan then be plotted, etc.\n\n```python\nfrom pathlib import Path\nfrom siglent_paser import SiglentParser\n\nmy_analog        = Path(r\"tests\\resources\\analog_sample2\\SDS00001.BIN\")\nmy_digital       = Path(r\"tests\\resources\\digital_sample1\\SDS00002.BIN\")\nmy_digtal_analog = Path(r\"tests\\resources\\digital_analog_sample1\\SDS00003.BIN\")\n\nmy_data = my_analog\nparsy = SiglentParser()\n\nmy_df = parsy.parse_binary(my_data)\n\n# Plot the data\nimport matplotlib.pyplot as plt\n\nplt.plot(my_df['time'], my_df['volts'])\nplt.grid(True)\nplt.title(str(my_data) + '\\n')\nplt.xlabel('time')\nplt.ylabel('volts')\nplt.show()\n```\n\nTodo\n====\n\nAre you an aspiring coder?  Perhaps you're an engineer, looking to\nlearn Python and don't know [where to\nstart](https://docs.python.org/3.6/tutorial/index.html \"Learn\nPython\")?  Are you pining for a project to cut your teeth on, a \"real\nlife\" opportunity to improve your skills and decorate your resume?\nHave a Siglent oscilloscope laying around gathering dust? Look no\nfurther!\n\nThe following items would be helpful in fleshing out this library.\nOther contributions are also welcome!\n\n* Expand the functionality to work with 1000X models:\n    - Update `TABLE2` and `TABLE3` according to the [specification](https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/)\n    - Include an option for the user to select 1000X or 2000X model\n    - Update the constant values used in the \"calc\" methods to be\n      1000X compatable\n\n* Implement digital parsing:\n    - Values are already parsed from the binary file\n    - Whether data is digital or analog seems to be determined by the\n    `wave_length` variable.\n    - Understand how the `wave_length` segment of the binary data\n      differs between analog, digital, and analog-digital data\n    - Use this understanding to update `get_data_type` to discern\n      digital types\n    - Update the `parse_file` method to handle digital data\n    - Digital data is available in the `tests/` directory\n\n* Create explicit methods for \"Calculate the Time Delay\", \"Calculate\n  the Sample Rate\", and \"Calculate the Sample Rate\"\n    - These methods correspond to the calculations given at the end of\n      the [specification](https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/)\n    - The `calc_vertical_offset` and `calc_data_to_volt` methods have\n      already been implemented\n    - Implement the remaining calculations using the others as a guide\n\nBinary\n======\n\nIt does not appear that Siglent 1000X/2000X models can stream binary\ndata.  Binary data must be saved to USB:\n\n![Image showing how to save binary\ndata](./docs/how-to-save-binary-data.png \"How to save binary data\")\n\n\nLicense\n=======\n\nCopyright 2019 Matt Trzcinski\n\nThis file is part of siglent_parser.\n\nsiglent_parser is free software: you can redistribute it and/or\nmodify- it under the terms of the GNU General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nsiglent_parser is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with siglent_parser.  If not, see\n<https://www.gnu.org/licenses/>.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://bitbucket.org/excalamus/siglent_parser/archive/v0.0.4.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/excalamus/siglent_parser", "keywords": "parser siglent convert digital analog binary", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "siglent-parser", "package_url": "https://pypi.org/project/siglent-parser/", "platform": "any", "project_url": "https://pypi.org/project/siglent-parser/", "project_urls": {"Download": "https://bitbucket.org/excalamus/siglent_parser/archive/v0.0.4.zip", "Homepage": "https://bitbucket.org/excalamus/siglent_parser"}, "release_url": "https://pypi.org/project/siglent-parser/0.0.4/", "requires_dist": ["numpy (>=1.16.4)"], "requires_python": "", "summary": "Parser for Siglent 1000/2000X binary output files", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>siglent_parser</h1>\n<p><img alt=\"Image showing plotted analog data\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2d216f235f7074a714017e03fe755de9a0e69d2/2e2f646f63732f616e616c6f672e504e47\"></p>\n<p>Analyze data obtained from your Siglent scope using the Python tools\nyou know and love!</p>\n<p><strong>siglent_parser</strong> is a Python library for converting Siglent\n1000/2000X <a href=\"#Binary\" rel=\"nofollow\">binary data</a> to a Numpy array.</p>\n<p>The library is currently configured for analog data and 2000X models.\nHowever, parameters and logic are in place for expanding the library's\nfunctionality to handle digital data and 1000X models.  Steps on how\nto do this are provided in the <a href=\"#Todo\" rel=\"nofollow\">Todo</a>.  The interested party is\nencouraged to submit a pull request!</p>\n<p>The <strong>siglent_parser</strong> library was tested using a Siglent SDS2304X and\nwas written using Python 3.6 on Windows 10.  Attempts have been made\nto make the library platform independent, although YMMV. The library\nwas created using the specifications provided by Siglent Technologies\nin the document <a href=\"https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/\" rel=\"nofollow\" title=\"Technical specifications\">How to Extract Data from the Binary File of SDS2000X,\nSDS1000X, and\nSDS1000X-E</a>.</p>\n<h1>How to get it</h1>\n<p>There are three ways to get the library.</p>\n<h2>Clone</h2>\n<p>Please consider contributing to the project!  Your help <em>is</em> valuable!</p>\n<p>To clone, the <strong>siglent_parser</strong> library, do</p>\n<pre>hg clone https://excalamus@bitbucket.org/excalamus/siglent_parser\n</pre>\n<h2>Download</h2>\n<p>Download a zip of the library from the main <a href=\"https://bitbucket.org/excalamus/siglent_parser/downloads/\" rel=\"nofollow\" title=\"Downloads page\">downloads\npage</a>.</p>\n<h2>PyPi</h2>\n<p>The <strong>siglent_parser</strong> libary is available on\n<a href=\"https://pypi.org/project/siglent-parser/\" rel=\"nofollow\" title=\"python package\">PyPi</a>.</p>\n<p>To install it in your Python envionment, do</p>\n<pre>pip install siglent-parser\n</pre>\n<h1>Setup</h1>\n<p>If the library was cloned or downloaded, you will need to install the\nlibrary and its dependencies:</p>\n<pre><span class=\"c1\"># Make sure you're in the directory above siglent_parser</span>\n<span class=\"c1\"># This will install the library as an editable package</span>\npip install -e siglent_parser\n\n<span class=\"c1\"># Make sure you're in the same directory as requirements.txt</span>\npip install -r requirements.txt\n</pre>\n<p>At the time of this writing, the only dependency is Numpy.</p>\n<h1>Using the <strong>siglent_parser</strong> library</h1>\n<p>At this time, the <strong>siglent_parser</strong> library only parses strictly\nanalog files (<a href=\"#Todo\" rel=\"nofollow\">See Todo</a>).  The output is a Numpy array which\ncan then be plotted, etc.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">siglent_paser</span> <span class=\"kn\">import</span> <span class=\"n\">SiglentParser</span>\n\n<span class=\"n\">my_analog</span>        <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"tests\\resources\\analog_sample2\\SDS00001.BIN\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_digital</span>       <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"tests\\resources\\digital_sample1\\SDS00002.BIN\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_digtal_analog</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"tests\\resources\\digital_analog_sample1\\SDS00003.BIN\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_data</span> <span class=\"o\">=</span> <span class=\"n\">my_analog</span>\n<span class=\"n\">parsy</span> <span class=\"o\">=</span> <span class=\"n\">SiglentParser</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_df</span> <span class=\"o\">=</span> <span class=\"n\">parsy</span><span class=\"o\">.</span><span class=\"n\">parse_binary</span><span class=\"p\">(</span><span class=\"n\">my_data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot the data</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">my_df</span><span class=\"p\">[</span><span class=\"s1\">'time'</span><span class=\"p\">],</span> <span class=\"n\">my_df</span><span class=\"p\">[</span><span class=\"s1\">'volts'</span><span class=\"p\">])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">my_data</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'time'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'volts'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h1>Todo</h1>\n<p>Are you an aspiring coder?  Perhaps you're an engineer, looking to\nlearn Python and don't know <a href=\"https://docs.python.org/3.6/tutorial/index.html\" rel=\"nofollow\" title=\"Learn\nPython\">where to\nstart</a>?  Are you pining for a project to cut your teeth on, a \"real\nlife\" opportunity to improve your skills and decorate your resume?\nHave a Siglent oscilloscope laying around gathering dust? Look no\nfurther!</p>\n<p>The following items would be helpful in fleshing out this library.\nOther contributions are also welcome!</p>\n<ul>\n<li>\n<p>Expand the functionality to work with 1000X models:</p>\n<ul>\n<li>Update <code>TABLE2</code> and <code>TABLE3</code> according to the <a href=\"https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/\" rel=\"nofollow\">specification</a></li>\n<li>Include an option for the user to select 1000X or 2000X model</li>\n<li>Update the constant values used in the \"calc\" methods to be\n1000X compatable</li>\n</ul>\n</li>\n<li>\n<p>Implement digital parsing:</p>\n<ul>\n<li>Values are already parsed from the binary file</li>\n<li>Whether data is digital or analog seems to be determined by the\n<code>wave_length</code> variable.</li>\n<li>Understand how the <code>wave_length</code> segment of the binary data\ndiffers between analog, digital, and analog-digital data</li>\n<li>Use this understanding to update <code>get_data_type</code> to discern\ndigital types</li>\n<li>Update the <code>parse_file</code> method to handle digital data</li>\n<li>Digital data is available in the <code>tests/</code> directory</li>\n</ul>\n</li>\n<li>\n<p>Create explicit methods for \"Calculate the Time Delay\", \"Calculate\nthe Sample Rate\", and \"Calculate the Sample Rate\"</p>\n<ul>\n<li>These methods correspond to the calculations given at the end of\nthe <a href=\"https://web.archive.org/web/20190715210130/https://www.siglentamerica.com/operating-tip/extract-data-binary-file-sds2000x-sds1000x/\" rel=\"nofollow\">specification</a></li>\n<li>The <code>calc_vertical_offset</code> and <code>calc_data_to_volt</code> methods have\nalready been implemented</li>\n<li>Implement the remaining calculations using the others as a guide</li>\n</ul>\n</li>\n</ul>\n<h1>Binary</h1>\n<p>It does not appear that Siglent 1000X/2000X models can stream binary\ndata.  Binary data must be saved to USB:</p>\n<p><img alt=\"Image showing how to save binary data\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0251b1400e58f8d8db06c2d275de34e9385453f/2e2f646f63732f686f772d746f2d736176652d62696e6172792d646174612e706e67\"></p>\n<h1>License</h1>\n<p>Copyright 2019 Matt Trzcinski</p>\n<p>This file is part of siglent_parser.</p>\n<p>siglent_parser is free software: you can redistribute it and/or\nmodify- it under the terms of the GNU General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.</p>\n<p>siglent_parser is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with siglent_parser.  If not, see\n<a href=\"https://www.gnu.org/licenses/\" rel=\"nofollow\">https://www.gnu.org/licenses/</a>.</p>\n\n          </div>"}, "last_serial": 5645724, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4442ac02d9257d7fd3037d025a0d7c1f", "sha256": "0bf4fe71c6667c14ddb20dcd60d4d140938cc015ba931660751b30b504a78a6b"}, "downloads": -1, "filename": "siglent_parser-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4442ac02d9257d7fd3037d025a0d7c1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29929, "upload_time": "2019-08-02T16:00:56", "upload_time_iso_8601": "2019-08-02T16:00:56.833745Z", "url": "https://files.pythonhosted.org/packages/83/8b/6956e127753c2abd0f64cf5ac6030fc2b7824e9691e006118487f69d8382/siglent_parser-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f88310bb4d0f63858f2b7fb9a32cd7b5", "sha256": "944a41b6150370391801f4dce260d9ad53f90acd63f7eae9c38b05e13b012fb5"}, "downloads": -1, "filename": "siglent_parser-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f88310bb4d0f63858f2b7fb9a32cd7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 739095, "upload_time": "2019-08-02T16:00:59", "upload_time_iso_8601": "2019-08-02T16:00:59.481769Z", "url": "https://files.pythonhosted.org/packages/f8/c2/7f9ae42b400d3e23f52fe833f2383f8c42ac5bea6ca88f157d6747a00142/siglent_parser-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1ae9828a03f97b48ecc4de9762e1f73b", "sha256": "e5151dc9d40a38772799f8d0e36128458fab767ebadcd87b9f2fe8afbf9faacb"}, "downloads": -1, "filename": "siglent_parser-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1ae9828a03f97b48ecc4de9762e1f73b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30675, "upload_time": "2019-08-07T15:56:59", "upload_time_iso_8601": "2019-08-07T15:56:59.770779Z", "url": "https://files.pythonhosted.org/packages/ca/a2/ca555ab8f4b7b1ea67502d2c91a487ce6f3dc9fa372ebe6ac33bae11eb7c/siglent_parser-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "155bd6aa1e3f0f516af96b57d76d3797", "sha256": "cc9d96a14ef3a68e5955ba97540e9f3dac334591f1e71f6d80c0b06e560e74fc"}, "downloads": -1, "filename": "siglent_parser-0.0.2.tar.gz", "has_sig": false, "md5_digest": "155bd6aa1e3f0f516af96b57d76d3797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 822471, "upload_time": "2019-08-07T15:57:05", "upload_time_iso_8601": "2019-08-07T15:57:05.192609Z", "url": "https://files.pythonhosted.org/packages/eb/5e/b47c129dae97fcbb000d3f60d801d9072a2d62bf355b69e3a9bc78e3055d/siglent_parser-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4fcd1d068cfcb0a8feb625b92a73601f", "sha256": "78303739b5a65f007df814c07bdb9001d6153d2837eb05f5793b4705b74d2c32"}, "downloads": -1, "filename": "siglent_parser-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4fcd1d068cfcb0a8feb625b92a73601f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30673, "upload_time": "2019-08-07T15:57:01", "upload_time_iso_8601": "2019-08-07T15:57:01.271204Z", "url": "https://files.pythonhosted.org/packages/6a/88/fe04362825b0ff37d5a76e09334b217a54caba3652fd28e6a27a2e986933/siglent_parser-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76b909111247957010d693a7653ccf96", "sha256": "a552ca84bbca6375d05e156d00b3635e57905193fe1aa8663a73f3637e81f6d1"}, "downloads": -1, "filename": "siglent_parser-0.0.3.tar.gz", "has_sig": false, "md5_digest": "76b909111247957010d693a7653ccf96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 822476, "upload_time": "2019-08-07T15:57:08", "upload_time_iso_8601": "2019-08-07T15:57:08.201927Z", "url": "https://files.pythonhosted.org/packages/c9/3d/7c2b0b461c9c54a1aff2426bb116c7df3c03217dcfb9c47d7b5891036e2c/siglent_parser-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "746588efc92eaa4401e4749350c4a9a6", "sha256": "28c05178f944d63300390c5d3834bba769688a65d3f8c111698b78043f498969"}, "downloads": -1, "filename": "siglent_parser-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "746588efc92eaa4401e4749350c4a9a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30677, "upload_time": "2019-08-07T15:57:02", "upload_time_iso_8601": "2019-08-07T15:57:02.946173Z", "url": "https://files.pythonhosted.org/packages/ac/5a/bf770de961cda210d90ec93b1e31279d631d969d9bd4f900d5964aebed47/siglent_parser-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60628357826dd4963e345b9d872ce05e", "sha256": "62c47e1fd8a74461132c19358c5be76fca26c4f9ad7461dfb5d3c872ac568cf9"}, "downloads": -1, "filename": "siglent_parser-0.0.4.tar.gz", "has_sig": false, "md5_digest": "60628357826dd4963e345b9d872ce05e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 822453, "upload_time": "2019-08-07T15:57:10", "upload_time_iso_8601": "2019-08-07T15:57:10.899567Z", "url": "https://files.pythonhosted.org/packages/0b/7b/bc82b78eb7a683b1cb6899b684e559df70c105ab3e9af30d8b459fe03421/siglent_parser-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "746588efc92eaa4401e4749350c4a9a6", "sha256": "28c05178f944d63300390c5d3834bba769688a65d3f8c111698b78043f498969"}, "downloads": -1, "filename": "siglent_parser-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "746588efc92eaa4401e4749350c4a9a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30677, "upload_time": "2019-08-07T15:57:02", "upload_time_iso_8601": "2019-08-07T15:57:02.946173Z", "url": "https://files.pythonhosted.org/packages/ac/5a/bf770de961cda210d90ec93b1e31279d631d969d9bd4f900d5964aebed47/siglent_parser-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60628357826dd4963e345b9d872ce05e", "sha256": "62c47e1fd8a74461132c19358c5be76fca26c4f9ad7461dfb5d3c872ac568cf9"}, "downloads": -1, "filename": "siglent_parser-0.0.4.tar.gz", "has_sig": false, "md5_digest": "60628357826dd4963e345b9d872ce05e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 822453, "upload_time": "2019-08-07T15:57:10", "upload_time_iso_8601": "2019-08-07T15:57:10.899567Z", "url": "https://files.pythonhosted.org/packages/0b/7b/bc82b78eb7a683b1cb6899b684e559df70c105ab3e9af30d8b459fe03421/siglent_parser-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:52 2020"}