{"info": {"author": "David-Elias K\u00fcnstle", "author_email": "dmsclient@kuenstle.me", "bugtrack_url": null, "classifiers": [], "description": "=================================================\nReadme Drink Management System Client (dmsclient)\n=================================================\n\nPython3 library with command line interface to interact with the Drink Management System (DMS) of the `student council TF Uni Freiburg <https://fachschaft.tf.uni-freiburg.de>`_.\n\nExample use case: Order product from the command line.\n\n.. code:: bash\n\n    $ dms order spezi -u johann\n    (1) Johannes Mustermann\n    (2) Johanna  Musterfrau\n    (3) Johann   Mustermensch\n    Please enter a number between 1 and 3: 1\n    Order 1 NetteMarke Spezi (0.70\u20ac) for Johannes Mustermann? [YES/no] y \n    Order successful.\n\nGetting Started\n===============\n\nPrerequisites\n-------------\n\nYou need ``python 3.5`` or newer and ``pip``.\nFor development you also need git installed on your machine.\n\nInstallation\n------------\n\nInstall the dmsclient library and command line interface simply from *PyPi*:\n\n.. code:: bash\n\n    pip3 install dmsclient\n\nFor developers it's recommended to install from source vie *develop*.\nThen all changes in code are automatically available in the library and command line without reinstallation.\n\n.. code:: bash\n\n    git clone git@<git url>:<user>/dmsclient.git\n    cd dmsclient\n\n    python3 setup.py develop\n\nCommand Line\n------------\n\nThe installation of ``dmsclient`` provides a command line interface ``dms``.\nFor authentication you have to generate a token key in your dms profile settings.\nAdd your token to a ``.dmsrc`` file in your home folder.\n\n.. code::\n\n   [DEFAULT]\n   Token = XxxxxXXXxxxxxXXXXxxxxxxxXXX\n\nThen you can start using ``dms``. You'll find all available commands via\n\n.. code:: bash\n\n   dms --help\n\nUser and product names don't have to be added exactly, but are estimated from what you type. E.g.:\n\n.. code:: bash\n\n   $ dms buy apfel -u must\n   Buy Apfelschorle (0.70\u20ac) for Max Mustermann? [Y/n]\n\nLibrary\n-------\n\nFor communication with the DMS via REST you can use the ``DmsClient`` class provided by this library.\nAuthentication is provided via a token key which you can generate in the DMS profile settings.\nUsually the token is stored in an RC file readable with ``DmsConfig``.\n\n.. code:: python\n\n    import os\n    from random import sample\n\n    from dmsclient import DmsClient, DmsConfig\n\n\n    rcfile = os.path.expanduser('~/.dmsrc')\n    cfg = DmsConfig()\n    cfg.read(rcfile)\n\n\nAPI functions of ``DmsClient`` usually return coroutines for asynchronous access.\n\n.. code:: python\n\n    import asyncio\n\n\n    async def async_order_random_stuff_for_last_customer(loop, cfg):\n        async with DmsClient(cfg.token, cfg.api) as dms:\n           # register tasks which can run in parallel\n           products_task = loop.create_task(dms.products)\n           sales_task = loop.create_task(dms.sale_history(num_days=1))\n\n           # execute tasks to fetch data in parallel\n           available_products = [p for p in await products_task\n                                 if p.quantity > 0]\n           random_product = sample(available_products, 1)[0]\n           last_sale = (await sales_task)[0]\n\n           # order random product\n           await dms.add_order(random_product.id, last_sale['profile'])\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(async_order_random_stuff_for_last_customer(loop, cfg))\n\n\nStill, you can use the library also in a synchronous fashion\n\n.. code:: python\n\n   from syncer import sync\n\n\n   @sync\n   async def order_random_stuff_for_last_customer(cfg):\n       async with DmsClient(cfg.token, cfg.api) as dms:\n           # synchronous fetch data\n           products = await dms.products\n           sales = await dms.sale_history(num_days=1)\n\n           available_products = [p for p in products\n                                 if p.quantity > 0]\n           random_product = sample(available_products, 1)[0]\n           last_sale = sales[0]\n\n           # order random product\n           await dms.add_order(random_product.id, last_sale['profile'])\n\n\n   order_random_stuff_for_last_customer(cfg)\n\nAlternative:\n\n.. code:: python\n\n    loop = asyncio.get_event_loop()\n\n    # Connect synchronously\n    client = dms.DmsClient(cfg.token, cfg.api)\n    client.connect()\n\n    # Read products\n    products = loop.run_until_complete(client.products)\n\n\nAuthors\n=======\n\nInitiated by *David-Elias K\u00fcnstle* <kuenstld[at]tf.uni-freiburg> / `Github <https://github.com/dekuenstle>`_\nbut see `contributors <https://github.com/fachschaft/dmsclient/graphs/contributors>`_ for a full list of contributions.\n\nLicense\n=======\n\ndmsclient is available under the `MIT License <https://opensource.org/licenses/MIT>`_\n\nAcknowledgements\n================\n\nBig thanks to the DMS and DMS-API developers!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dmsclient", "package_url": "https://pypi.org/project/dmsclient/", "platform": "", "project_url": "https://pypi.org/project/dmsclient/", "project_urls": null, "release_url": "https://pypi.org/project/dmsclient/1.5.2/", "requires_dist": ["aiohttp (>=3.1.1)", "docopt (>=0.6.0)", "requests (>=2.18.0)", "tabulate (>=0.7.0)", "infi.docopt-completion (>=0.2.8)"], "requires_python": "", "summary": "Library and command line interface to interact with Drink Management System of Fachschaft TF Uni Freiburg.", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python3 library with command line interface to interact with the Drink Management System (DMS) of the <a href=\"https://fachschaft.tf.uni-freiburg.de\" rel=\"nofollow\">student council TF Uni Freiburg</a>.</p>\n<p>Example use case: Order product from the command line.</p>\n<pre>$ dms order spezi -u johann\n<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span> Johannes Mustermann\n<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span> Johanna  Musterfrau\n<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span> Johann   Mustermensch\nPlease enter a number between <span class=\"m\">1</span> and <span class=\"m\">3</span>: <span class=\"m\">1</span>\nOrder <span class=\"m\">1</span> NetteMarke Spezi <span class=\"o\">(</span><span class=\"m\">0</span>.70\u20ac<span class=\"o\">)</span> <span class=\"k\">for</span> Johannes Mustermann? <span class=\"o\">[</span>YES/no<span class=\"o\">]</span> y\nOrder successful.\n</pre>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<p>You need <tt>python 3.5</tt> or newer and <tt>pip</tt>.\nFor development you also need git installed on your machine.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the dmsclient library and command line interface simply from <em>PyPi</em>:</p>\n<pre>pip3 install dmsclient\n</pre>\n<p>For developers it\u2019s recommended to install from source vie <em>develop</em>.\nThen all changes in code are automatically available in the library and command line without reinstallation.</p>\n<pre>git clone git@&lt;git url&gt;:&lt;user&gt;/dmsclient.git\n<span class=\"nb\">cd</span> dmsclient\n\npython3 setup.py develop\n</pre>\n</div>\n<div id=\"command-line\">\n<h3>Command Line</h3>\n<p>The installation of <tt>dmsclient</tt> provides a command line interface <tt>dms</tt>.\nFor authentication you have to generate a token key in your dms profile settings.\nAdd your token to a <tt>.dmsrc</tt> file in your home folder.</p>\n<pre>[DEFAULT]\nToken = XxxxxXXXxxxxxXXXXxxxxxxxXXX\n</pre>\n<p>Then you can start using <tt>dms</tt>. You\u2019ll find all available commands via</p>\n<pre>dms --help\n</pre>\n<p>User and product names don\u2019t have to be added exactly, but are estimated from what you type. E.g.:</p>\n<pre>$ dms buy apfel -u must\nBuy Apfelschorle <span class=\"o\">(</span><span class=\"m\">0</span>.70\u20ac<span class=\"o\">)</span> <span class=\"k\">for</span> Max Mustermann? <span class=\"o\">[</span>Y/n<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"library\">\n<h3>Library</h3>\n<p>For communication with the DMS via REST you can use the <tt>DmsClient</tt> class provided by this library.\nAuthentication is provided via a token key which you can generate in the DMS profile settings.\nUsually the token is stored in an RC file readable with <tt>DmsConfig</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">sample</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dmsclient</span> <span class=\"kn\">import</span> <span class=\"n\">DmsClient</span><span class=\"p\">,</span> <span class=\"n\">DmsConfig</span>\n\n\n<span class=\"n\">rcfile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">'~/.dmsrc'</span><span class=\"p\">)</span>\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">DmsConfig</span><span class=\"p\">()</span>\n<span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">rcfile</span><span class=\"p\">)</span>\n</pre>\n<p>API functions of <tt>DmsClient</tt> usually return coroutines for asynchronous access.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">async_order_random_stuff_for_last_customer</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">cfg</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">DmsClient</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">dms</span><span class=\"p\">:</span>\n       <span class=\"c1\"># register tasks which can run in parallel</span>\n       <span class=\"n\">products_task</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">products</span><span class=\"p\">)</span>\n       <span class=\"n\">sales_task</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">sale_history</span><span class=\"p\">(</span><span class=\"n\">num_days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n       <span class=\"c1\"># execute tasks to fetch data in parallel</span>\n       <span class=\"n\">available_products</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">p</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"k\">await</span> <span class=\"n\">products_task</span>\n                             <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n       <span class=\"n\">random_product</span> <span class=\"o\">=</span> <span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">available_products</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n       <span class=\"n\">last_sale</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">sales_task</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n       <span class=\"c1\"># order random product</span>\n       <span class=\"k\">await</span> <span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">add_order</span><span class=\"p\">(</span><span class=\"n\">random_product</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">last_sale</span><span class=\"p\">[</span><span class=\"s1\">'profile'</span><span class=\"p\">])</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">async_order_random_stuff_for_last_customer</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">cfg</span><span class=\"p\">))</span>\n</pre>\n<p>Still, you can use the library also in a synchronous fashion</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">syncer</span> <span class=\"kn\">import</span> <span class=\"n\">sync</span>\n\n\n<span class=\"nd\">@sync</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">order_random_stuff_for_last_customer</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">DmsClient</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">dms</span><span class=\"p\">:</span>\n        <span class=\"c1\"># synchronous fetch data</span>\n        <span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">products</span>\n        <span class=\"n\">sales</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">sale_history</span><span class=\"p\">(</span><span class=\"n\">num_days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"n\">available_products</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">p</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">products</span>\n                              <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">random_product</span> <span class=\"o\">=</span> <span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">available_products</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">last_sale</span> <span class=\"o\">=</span> <span class=\"n\">sales</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># order random product</span>\n        <span class=\"k\">await</span> <span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">add_order</span><span class=\"p\">(</span><span class=\"n\">random_product</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">last_sale</span><span class=\"p\">[</span><span class=\"s1\">'profile'</span><span class=\"p\">])</span>\n\n\n<span class=\"n\">order_random_stuff_for_last_customer</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">)</span>\n</pre>\n<p>Alternative:</p>\n<pre><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Connect synchronously</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">dms</span><span class=\"o\">.</span><span class=\"n\">DmsClient</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Read products</span>\n<span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">products</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Initiated by <em>David-Elias K\u00fcnstle</em> &lt;kuenstld[at]tf.uni-freiburg&gt; / <a href=\"https://github.com/dekuenstle\" rel=\"nofollow\">Github</a>\nbut see <a href=\"https://github.com/fachschaft/dmsclient/graphs/contributors\" rel=\"nofollow\">contributors</a> for a full list of contributions.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>dmsclient is available under the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a></p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>Big thanks to the DMS and DMS-API developers!</p>\n</div>\n\n          </div>"}, "last_serial": 6659501, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bf761e81c7c640d7ba77e1059d514b6e", "sha256": "ffe24152459fd61ea6d623fd46f1cd58129182095b89964efd4dced05d3338c0"}, "downloads": -1, "filename": "dmsclient-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf761e81c7c640d7ba77e1059d514b6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6433, "upload_time": "2017-07-23T19:20:27", "upload_time_iso_8601": "2017-07-23T19:20:27.436391Z", "url": "https://files.pythonhosted.org/packages/f8/23/26d818b4b6e6cc439119a92616a4e02e1678df46b22777684479615f5560/dmsclient-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cd9716f85a0875506961e2ee19a17d68", "sha256": "4d94b2e27d0cb9e17bb1d2c90a1b50a85e72e7133711e595a8da99c69e15dd87"}, "downloads": -1, "filename": "dmsclient-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cd9716f85a0875506961e2ee19a17d68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6455, "upload_time": "2017-07-25T14:11:07", "upload_time_iso_8601": "2017-07-25T14:11:07.442058Z", "url": "https://files.pythonhosted.org/packages/9b/79/800143eb432ed9092126f3c29db30f088e96e76cf4e0a0fb501dc5081ed6/dmsclient-1.0.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e99d425fdd60fd4fc0628207ef22ee1f", "sha256": "d5164ca6e2a367712ff476b1260463b2298585829cadf3f35f4f68c8c1ec1e1e"}, "downloads": -1, "filename": "dmsclient-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e99d425fdd60fd4fc0628207ef22ee1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6570, "upload_time": "2017-07-27T09:35:32", "upload_time_iso_8601": "2017-07-27T09:35:32.333724Z", "url": "https://files.pythonhosted.org/packages/25/83/a0353c05d085e8d354670eb60169a53c609a42d265d4d77ded05ed0a9f99/dmsclient-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "679ce588a3aafbbb3f4757fe3f9dcb94", "sha256": "8c0dd8978e305b0fc96c7f433e7fdd8941c4a3b56565f6bd89babf0f842fc05c"}, "downloads": -1, "filename": "dmsclient-1.2.0.tar.gz", "has_sig": false, "md5_digest": "679ce588a3aafbbb3f4757fe3f9dcb94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6786, "upload_time": "2017-07-27T10:59:38", "upload_time_iso_8601": "2017-07-27T10:59:38.377330Z", "url": "https://files.pythonhosted.org/packages/40/e8/5879a21658f59ad994bbb9f5e276de0c6f91356a0c63cda3078da86af481/dmsclient-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "31cdfbcb187ba1e6f95a56e62de5745c", "sha256": "acf3017865c7a8cee2b51d6cee8c72962b553b9f675ad7a0b0508ee4dccb9dd0"}, "downloads": -1, "filename": "dmsclient-1.3.0.tar.gz", "has_sig": false, "md5_digest": "31cdfbcb187ba1e6f95a56e62de5745c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6927, "upload_time": "2017-09-26T15:59:53", "upload_time_iso_8601": "2017-09-26T15:59:53.692065Z", "url": "https://files.pythonhosted.org/packages/44/44/7988318223247694ffb457b03ac5c07f70a6d3c37bbc0c59ac303866b763/dmsclient-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "46447b6711097c1beee59632cfcd390a", "sha256": "04262540bb5f13ef1155491a15d786fd8009a90700b903bb99b7ab82397c97f2"}, "downloads": -1, "filename": "dmsclient-1.3.1.tar.gz", "has_sig": false, "md5_digest": "46447b6711097c1beee59632cfcd390a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7075, "upload_time": "2018-02-27T15:43:59", "upload_time_iso_8601": "2018-02-27T15:43:59.607056Z", "url": "https://files.pythonhosted.org/packages/1a/1c/1e3f028a4580bc7692ca19997dbe66a1624cee569dd499acc00fa00ac17c/dmsclient-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "ed37007e24cf318e737b3308712c8740", "sha256": "7fd2f1c11dbb809e43cb5cfd993185b0d54b88a0d29b4bdfbb8f2bc4555c1b34"}, "downloads": -1, "filename": "dmsclient-1.4.0.tar.gz", "has_sig": false, "md5_digest": "ed37007e24cf318e737b3308712c8740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8418, "upload_time": "2018-03-01T14:53:52", "upload_time_iso_8601": "2018-03-01T14:53:52.924870Z", "url": "https://files.pythonhosted.org/packages/97/2d/a0550debcb2c7bf26a110154f4357cf0360fcccb7f29fdb53243eb253b0e/dmsclient-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "13912998a68af67c32ad7c125978152a", "sha256": "22ff8176544fa85e4b983c84ca259e401cc05500d87debcbd8b26658f2c5934b"}, "downloads": -1, "filename": "dmsclient-1.4.1.tar.gz", "has_sig": false, "md5_digest": "13912998a68af67c32ad7c125978152a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8622, "upload_time": "2018-03-08T08:20:01", "upload_time_iso_8601": "2018-03-08T08:20:01.208243Z", "url": "https://files.pythonhosted.org/packages/57/80/fee994cd46165d96503eedce81669842bae85cf0e67b9fcd806eec64a8ba/dmsclient-1.4.1.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "8be7ab78a22fa55d1e5110bbea555cb9", "sha256": "6f245660a6d794958fd06342f7e2004bfae538c2ec5f5a0e069fd433ab34f6cd"}, "downloads": -1, "filename": "dmsclient-1.5.0.tar.gz", "has_sig": false, "md5_digest": "8be7ab78a22fa55d1e5110bbea555cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8827, "upload_time": "2018-04-04T12:50:09", "upload_time_iso_8601": "2018-04-04T12:50:09.777403Z", "url": "https://files.pythonhosted.org/packages/da/bb/c7b5404492ff2feef46b62ea95a24b092690945ab61bfcc0463bd87edf06/dmsclient-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "56479c7bb0d4c0b28e12bfe47b33c73e", "sha256": "1f2046348e9adc13017149c352fa90e72ab8983e8072e8fea57cf22c7ee78d9c"}, "downloads": -1, "filename": "dmsclient-1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56479c7bb0d4c0b28e12bfe47b33c73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11403, "upload_time": "2020-02-19T09:25:33", "upload_time_iso_8601": "2020-02-19T09:25:33.817863Z", "url": "https://files.pythonhosted.org/packages/0c/6f/6d4cde59f4295cdd0430b722adfb3d861552e96d6c1bb414df593b74c8f5/dmsclient-1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ef822c111cbd72b2b6bd606dded5824", "sha256": "99ce7c37e1a9b97dcdae64fb397904ae39fdb60afa8abdc4145eba9c6c8df439"}, "downloads": -1, "filename": "dmsclient-1.5.1.tar.gz", "has_sig": false, "md5_digest": "8ef822c111cbd72b2b6bd606dded5824", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8853, "upload_time": "2018-04-05T12:06:56", "upload_time_iso_8601": "2018-04-05T12:06:56.187201Z", "url": "https://files.pythonhosted.org/packages/c1/e7/07f37534b00d6eb17b00ea13daab4dd1c16bb541ab694ceb37caef079deb/dmsclient-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "5f52e05681ec507660dc49d44b794fb2", "sha256": "7a24105e683aea52f400c8517ba53dc8806e305a673def06074b4fb4682a2719"}, "downloads": -1, "filename": "dmsclient-1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5f52e05681ec507660dc49d44b794fb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11403, "upload_time": "2020-02-19T09:29:21", "upload_time_iso_8601": "2020-02-19T09:29:21.579547Z", "url": "https://files.pythonhosted.org/packages/f5/8e/7e5c695699ca18a74ee99a4f4ae889331aea61829d5eec28c94e888852e0/dmsclient-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d48828903a1ff6faabcf22facf49f885", "sha256": "c6589f792b797c345abb2695fc746ca3a6dcfb8405275fecd5501c0bc4f656e5"}, "downloads": -1, "filename": "dmsclient-1.5.2.tar.gz", "has_sig": false, "md5_digest": "d48828903a1ff6faabcf22facf49f885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10759, "upload_time": "2020-02-19T09:29:22", "upload_time_iso_8601": "2020-02-19T09:29:22.582969Z", "url": "https://files.pythonhosted.org/packages/3b/22/a65a62699a08498177f9ac223b1a4922bbd3dedede6527ea8a5bdf7e2d79/dmsclient-1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f52e05681ec507660dc49d44b794fb2", "sha256": "7a24105e683aea52f400c8517ba53dc8806e305a673def06074b4fb4682a2719"}, "downloads": -1, "filename": "dmsclient-1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5f52e05681ec507660dc49d44b794fb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11403, "upload_time": "2020-02-19T09:29:21", "upload_time_iso_8601": "2020-02-19T09:29:21.579547Z", "url": "https://files.pythonhosted.org/packages/f5/8e/7e5c695699ca18a74ee99a4f4ae889331aea61829d5eec28c94e888852e0/dmsclient-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d48828903a1ff6faabcf22facf49f885", "sha256": "c6589f792b797c345abb2695fc746ca3a6dcfb8405275fecd5501c0bc4f656e5"}, "downloads": -1, "filename": "dmsclient-1.5.2.tar.gz", "has_sig": false, "md5_digest": "d48828903a1ff6faabcf22facf49f885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10759, "upload_time": "2020-02-19T09:29:22", "upload_time_iso_8601": "2020-02-19T09:29:22.582969Z", "url": "https://files.pythonhosted.org/packages/3b/22/a65a62699a08498177f9ac223b1a4922bbd3dedede6527ea8a5bdf7e2d79/dmsclient-1.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:12 2020"}