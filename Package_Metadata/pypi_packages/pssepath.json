{"info": {"author": "Daniel Hillier", "author_email": "daniel.hillier@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "\npssepath - Easy PSSE Python coding\n====================================\n\n*author*: whit. (whit.com.au)\n\n`pssepath` simplifies the code required to setup the Python environment necessary\nto use the PSSE API. Using `pssepath` all you have to do is::\n\n```python\n    import pssepath\n    pssepath.add_pssepath()\n\n    import psspy\n```\n\nTested and works on:\n\n- PSSE 32\n- PSSE 33\n- PSSE 34\n\nSupports 32 and 64 bit windows (and provides warnings when using mismatched 64\nbit python when PSSE requires 32 bit python).\n\nUsing this module makes the PSSE system files available for use while avoiding\nmaking modifications to system paths or hardcoding the location of the PSSE\nsystem folders. This makes PSSE easy to use.\n\nWithout `pssepath`, you have to do something like this::\n\n```python\n    import os\n    import sys\n\n    PSSE_LOCATION = r\"C:\\Program Files\\PTI\\PSSE32\\PSSBIN\"\n    sys.path.append(PSSE_LOCATION)\n    os.environ['PATH'] = os.environ['PATH'] + ';' +  PSSE_LOCATION\n\n    import psspy\n```\n\nFurthermore, by including `pssepath` with any scripts you distribute, others will\nbe able to use your code without having to edit your code to suit their\nvarying install paths (such as different versions of PSSE).\n\nIt can also provide information about which version of Python to use with a\nparticular install of PSSE to avoid `ImportError: Bad magic number...`.\n\nInstallation\n-------------\n\n`pip install pssepath`\n\nor copy the `pssepath` code directory (the dir that contains `core.py`) to your\nproject's root directory.\n\n\nUsage\n------\n`pssepath` provides 3 methods for setting up the PSSE paths:\n\n\n- `pssepath.add_pssepath()`\n\n    Adds the most recent version of PSSE that works with the currently\n    running version of Python.\n\n- `pssepath.add_pssepath(<version>)`\n\n    Adds the requested version of PSSE. Remember that specifying a version\n    number may make your code less portable if you or your colleagues ever use a\n    different version.  `pssepath.add_pssepath(33)`\n\n- `pssepath.select_pssepath()`\n\n    Produces a menu of all the PSSE and Python installs on your system,\n    along with the required version of Python.\n\nIf you have set up your system to have the PSSE system files on the system path\nat all times, `pssepath` will only use these files.\n\nFor information about the PSSE versions installed on your system, either:\n\n- execute the pssepath.py file from windows; or\n- run `python -m pssepath.pssepathinfo` You may have to specify the python\n  install path: ie. `c:\\Python25\\python -m pssepath.pssepathinfo` or `py.exe\n  -2.5 -m pssepath.pssepathinfo`\n\nThis will provide you with a summary similar to the following::\n\n```\nFound the following versions of PSSE installed:\n\n    1. PSSE version 32\n        Requires Python 2.5-32bit (Current running Python)\n    2. PSSE version XX\n        Requires Python 2.X-32bit (Installed)\n    3. PSSE version XX\n        Requires Python 2.X-32bit\n\nFound the following Python installations:\n  2.5-32bit (currently running):\n    PythonCore: C:\\Python25\\\n  3.7-64bit:\n    PythonCore: C:\\Users\\dan\\AppData\\Local\\Programs\\Python\\Python37\\\n```\n\nThe status next to the Python version indicates the installation status of the\nrequired Python for the particular PSSE install.\n\n- `Current running Python`\n\n    indicates the Python version used to invoke the script\n    (`c:\\Python25\\python.exe` if invoked as `c:\\Python25\\python.exe -m pssepath`) is\n    appropriate for that version of PSSE.\n\n- `Installed`\n\n  indicates that a Python version different to the one used to invoke the\n  script is required for that PSSE version, but that it is already installed\n  on your system.\n\n`<nothing>`\n\n  The absence of a status means that a different version of Python is\n  required to run that version of PSSE and it is not installed on your\n  system. As Python comes bundled with PSSE, this status is unlikely.\n\nEnsuring you use the correct version of Python for the version of PSSE you are\nrunning will avoid seeing `ImportError: Bad magic number...` ever again.\n\nLicense\n--------\nThis program is released under the very permissive MIT license. You may freely\nuse it for commercial purposes, without needing to provide modified source.\n\nRead the LICENSE file for more information.\n\nTips on managing multiple Python versions\n-------------------------------------------\nI like to use batch files that point to a specific python version.  For\nexample::\n\n```shell\n$ more C:\\bin\\python25.bat\n@C:\\Python25\\python.exe %*\n```\n\nWhere the PATH includes `c:\\bin`.  Now you can run python scripts with the\ncommand::\n\n```shell\npython25 myscript.py args\n```\n\ninstead of:\n\n```shell\nc:\\Python25\\python.exe myscript.py args\n```\n\nContributers\n--------------\nDiscussion about this module was conducted at the [Python for PSSE Forum](https://psspy.org/psse-help-forum/question/3/how-do-i-import-the-psspy-module-in-a-python>) involving the following members:\n\n- Daniel Hillier\n- JervisW\n- Chip Webber\n\nImprovements or suggestions\n-----------------------------\nVisit the [Python for PSSE Forum](https://psspy.org/psse-help-forum/question/3/how-do-i-import-the-psspy-module-in-a-python>)\n\nSee also:\n\n- github: https://github.com/danifus/pssepath\n- contact: daniel@whit.com.au\n\nFor any other questions about Python and PSSE, feel free to raise them on the\n[Python for PSSE Forum](https://psspy.org>)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danifus/pssepath", "keywords": "psse extension utility pssepath", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pssepath", "package_url": "https://pypi.org/project/pssepath/", "platform": "", "project_url": "https://pypi.org/project/pssepath/", "project_urls": {"Homepage": "https://github.com/danifus/pssepath"}, "release_url": "https://pypi.org/project/pssepath/0.2.0/", "requires_dist": null, "requires_python": ">=2.5", "summary": "Simplified PSSe python importing", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pssepath - Easy PSSE Python coding</h1>\n<p><em>author</em>: whit. (whit.com.au)</p>\n<p><code>pssepath</code> simplifies the code required to setup the Python environment necessary\nto use the PSSE API. Using <code>pssepath</code> all you have to do is::</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">pssepath</span>\n    <span class=\"n\">pssepath</span><span class=\"o\">.</span><span class=\"n\">add_pssepath</span><span class=\"p\">()</span>\n\n    <span class=\"kn\">import</span> <span class=\"nn\">psspy</span>\n</pre>\n<p>Tested and works on:</p>\n<ul>\n<li>PSSE 32</li>\n<li>PSSE 33</li>\n<li>PSSE 34</li>\n</ul>\n<p>Supports 32 and 64 bit windows (and provides warnings when using mismatched 64\nbit python when PSSE requires 32 bit python).</p>\n<p>Using this module makes the PSSE system files available for use while avoiding\nmaking modifications to system paths or hardcoding the location of the PSSE\nsystem folders. This makes PSSE easy to use.</p>\n<p>Without <code>pssepath</code>, you have to do something like this::</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n    <span class=\"n\">PSSE_LOCATION</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">\"C:\\Program Files\\PTI\\PSSE32\\PSSBIN\"</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">PSSE_LOCATION</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'PATH'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'PATH'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">';'</span> <span class=\"o\">+</span>  <span class=\"n\">PSSE_LOCATION</span>\n\n    <span class=\"kn\">import</span> <span class=\"nn\">psspy</span>\n</pre>\n<p>Furthermore, by including <code>pssepath</code> with any scripts you distribute, others will\nbe able to use your code without having to edit your code to suit their\nvarying install paths (such as different versions of PSSE).</p>\n<p>It can also provide information about which version of Python to use with a\nparticular install of PSSE to avoid <code>ImportError: Bad magic number...</code>.</p>\n<h2>Installation</h2>\n<p><code>pip install pssepath</code></p>\n<p>or copy the <code>pssepath</code> code directory (the dir that contains <code>core.py</code>) to your\nproject's root directory.</p>\n<h2>Usage</h2>\n<p><code>pssepath</code> provides 3 methods for setting up the PSSE paths:</p>\n<ul>\n<li>\n<p><code>pssepath.add_pssepath()</code></p>\n<p>Adds the most recent version of PSSE that works with the currently\nrunning version of Python.</p>\n</li>\n<li>\n<p><code>pssepath.add_pssepath(&lt;version&gt;)</code></p>\n<p>Adds the requested version of PSSE. Remember that specifying a version\nnumber may make your code less portable if you or your colleagues ever use a\ndifferent version.  <code>pssepath.add_pssepath(33)</code></p>\n</li>\n<li>\n<p><code>pssepath.select_pssepath()</code></p>\n<p>Produces a menu of all the PSSE and Python installs on your system,\nalong with the required version of Python.</p>\n</li>\n</ul>\n<p>If you have set up your system to have the PSSE system files on the system path\nat all times, <code>pssepath</code> will only use these files.</p>\n<p>For information about the PSSE versions installed on your system, either:</p>\n<ul>\n<li>execute the pssepath.py file from windows; or</li>\n<li>run <code>python -m pssepath.pssepathinfo</code> You may have to specify the python\ninstall path: ie. <code>c:\\Python25\\python -m pssepath.pssepathinfo</code> or <code>py.exe -2.5 -m pssepath.pssepathinfo</code></li>\n</ul>\n<p>This will provide you with a summary similar to the following::</p>\n<pre><code>Found the following versions of PSSE installed:\n\n    1. PSSE version 32\n        Requires Python 2.5-32bit (Current running Python)\n    2. PSSE version XX\n        Requires Python 2.X-32bit (Installed)\n    3. PSSE version XX\n        Requires Python 2.X-32bit\n\nFound the following Python installations:\n  2.5-32bit (currently running):\n    PythonCore: C:\\Python25\\\n  3.7-64bit:\n    PythonCore: C:\\Users\\dan\\AppData\\Local\\Programs\\Python\\Python37\\\n</code></pre>\n<p>The status next to the Python version indicates the installation status of the\nrequired Python for the particular PSSE install.</p>\n<ul>\n<li>\n<p><code>Current running Python</code></p>\n<p>indicates the Python version used to invoke the script\n(<code>c:\\Python25\\python.exe</code> if invoked as <code>c:\\Python25\\python.exe -m pssepath</code>) is\nappropriate for that version of PSSE.</p>\n</li>\n<li>\n<p><code>Installed</code></p>\n<p>indicates that a Python version different to the one used to invoke the\nscript is required for that PSSE version, but that it is already installed\non your system.</p>\n</li>\n</ul>\n<p><code>&lt;nothing&gt;</code></p>\n<p>The absence of a status means that a different version of Python is\nrequired to run that version of PSSE and it is not installed on your\nsystem. As Python comes bundled with PSSE, this status is unlikely.</p>\n<p>Ensuring you use the correct version of Python for the version of PSSE you are\nrunning will avoid seeing <code>ImportError: Bad magic number...</code> ever again.</p>\n<h2>License</h2>\n<p>This program is released under the very permissive MIT license. You may freely\nuse it for commercial purposes, without needing to provide modified source.</p>\n<p>Read the LICENSE file for more information.</p>\n<h2>Tips on managing multiple Python versions</h2>\n<p>I like to use batch files that point to a specific python version.  For\nexample::</p>\n<pre>$ more C:<span class=\"se\">\\b</span>in<span class=\"se\">\\p</span>ython25.bat\n@C:<span class=\"se\">\\P</span>ython25<span class=\"se\">\\p</span>ython.exe %*\n</pre>\n<p>Where the PATH includes <code>c:\\bin</code>.  Now you can run python scripts with the\ncommand::</p>\n<pre>python25 myscript.py args\n</pre>\n<p>instead of:</p>\n<pre>c:<span class=\"se\">\\P</span>ython25<span class=\"se\">\\p</span>ython.exe myscript.py args\n</pre>\n<h2>Contributers</h2>\n<p>Discussion about this module was conducted at the <a href=\"https://psspy.org/psse-help-forum/question/3/how-do-i-import-the-psspy-module-in-a-python%3E\" rel=\"nofollow\">Python for PSSE Forum</a> involving the following members:</p>\n<ul>\n<li>Daniel Hillier</li>\n<li>JervisW</li>\n<li>Chip Webber</li>\n</ul>\n<h2>Improvements or suggestions</h2>\n<p>Visit the <a href=\"https://psspy.org/psse-help-forum/question/3/how-do-i-import-the-psspy-module-in-a-python%3E\" rel=\"nofollow\">Python for PSSE Forum</a></p>\n<p>See also:</p>\n<ul>\n<li>github: <a href=\"https://github.com/danifus/pssepath\" rel=\"nofollow\">https://github.com/danifus/pssepath</a></li>\n<li>contact: <a href=\"mailto:daniel@whit.com.au\">daniel@whit.com.au</a></li>\n</ul>\n<p>For any other questions about Python and PSSE, feel free to raise them on the\n<a href=\"https://psspy.org%3E\" rel=\"nofollow\">Python for PSSE Forum</a></p>\n\n          </div>"}, "last_serial": 6739732, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "bd137eb847e83e6b1b7165135301bc37", "sha256": "7a7eaf32f99201b9e0a98cb32dc9170d5700fdd65b9d97de5ccef2a46c96ae95"}, "downloads": -1, "filename": "pssepath-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd137eb847e83e6b1b7165135301bc37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.5", "size": 13115, "upload_time": "2020-03-03T11:59:55", "upload_time_iso_8601": "2020-03-03T11:59:55.174642Z", "url": "https://files.pythonhosted.org/packages/69/a6/910a95d54b3a9d3a186e095cf75d2a0c9760215a497c3f6db206a62d0fcb/pssepath-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea76af58166d8d6782739656e96c0a21", "sha256": "97f7f33eb5ffec34a61701c9033f0d9c40c73c1df5c73fd00e8497e3ae9a6b7a"}, "downloads": -1, "filename": "pssepath-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ea76af58166d8d6782739656e96c0a21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 13947, "upload_time": "2020-03-03T11:59:57", "upload_time_iso_8601": "2020-03-03T11:59:57.965837Z", "url": "https://files.pythonhosted.org/packages/6e/13/d279e3de208142982490b61cef8c7333dce8f1a3f068fab982e3565b2a30/pssepath-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd137eb847e83e6b1b7165135301bc37", "sha256": "7a7eaf32f99201b9e0a98cb32dc9170d5700fdd65b9d97de5ccef2a46c96ae95"}, "downloads": -1, "filename": "pssepath-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd137eb847e83e6b1b7165135301bc37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.5", "size": 13115, "upload_time": "2020-03-03T11:59:55", "upload_time_iso_8601": "2020-03-03T11:59:55.174642Z", "url": "https://files.pythonhosted.org/packages/69/a6/910a95d54b3a9d3a186e095cf75d2a0c9760215a497c3f6db206a62d0fcb/pssepath-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea76af58166d8d6782739656e96c0a21", "sha256": "97f7f33eb5ffec34a61701c9033f0d9c40c73c1df5c73fd00e8497e3ae9a6b7a"}, "downloads": -1, "filename": "pssepath-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ea76af58166d8d6782739656e96c0a21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 13947, "upload_time": "2020-03-03T11:59:57", "upload_time_iso_8601": "2020-03-03T11:59:57.965837Z", "url": "https://files.pythonhosted.org/packages/6e/13/d279e3de208142982490b61cef8c7333dce8f1a3f068fab982e3565b2a30/pssepath-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:44 2020"}