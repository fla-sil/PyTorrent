{"info": {"author": "Juan Biondi", "author_email": "juanernestobiondi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "\nGPIO\\_Calculator\n================\n\nSimple GPIO calculator for ``libgpiod`` based on its chardev using the formula\nchardev = (alphabet_index - 1) * 32 + pin which is also used on ``sysfs``.\n\nInstallation\n------------\n\n.. code-block:: console\n\n    pip install git+https://github.com/yeyeto2788/GPIO_Calculator\n\nUsage\n-----\n\n.. code-block:: python\n\n    from gpio_calculator import Calculator\n\n    calculator = Calculator()\n\n    # Get chardev based on pin letter and pin number.\n    # Return should be 242\n    calculator.get_chardev(\"H\", 18)\n\n    # Get chardev from list.\n    # Returns a list of converted items [242, 243, 244].\n    calculator.get_chardevs([\"H18\", \"H19\", \"H20\"])\n\n    # Get pin from chardev.\n    # Returns the pin number H18.\n    calculator.get_pin(242)\n\n    # Get all pins from chardevs.\n    # Returns all pins found H18, H19, H20.\n    calculator.get_pins([242, 243, 244])\n\n\nContributing\n------------\n\n**All contributions, pull requests and comments are welcome!**\n\nWhen contributing it is important to test the module in order to make sure\neverything is working as expected. For that install dependencies to run the tests.\n\n.. code-block:: console\n\n   pip install pytest pytest-cov mock pylint\n\nRunning tests and see coverage.\n\n.. code-block:: console\n\n   py.test --cov -v --cov-config=.coveragerc --cov-report=html\n\nThis will generate a report with the coverage which is at **98%** now, let's try to keep\nit at the same percentage.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yeyeto2788/GPIO_Calculator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "GPIO-Calculator", "package_url": "https://pypi.org/project/GPIO-Calculator/", "platform": "", "project_url": "https://pypi.org/project/GPIO-Calculator/", "project_urls": {"Homepage": "https://github.com/yeyeto2788/GPIO_Calculator"}, "release_url": "https://pypi.org/project/GPIO-Calculator/1.0.2/", "requires_dist": null, "requires_python": ">=3.4.0", "summary": "Simple GPIO calculator for libgpiod based on its chardev.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple GPIO calculator for <tt>libgpiod</tt> based on its chardev using the formula\nchardev = (alphabet_index - 1) * 32 + pin which is also used on <tt>sysfs</tt>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"go\">pip install git+https://github.com/yeyeto2788/GPIO_Calculator</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gpio_calculator</span> <span class=\"kn\">import</span> <span class=\"n\">Calculator</span>\n\n<span class=\"n\">calculator</span> <span class=\"o\">=</span> <span class=\"n\">Calculator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get chardev based on pin letter and pin number.</span>\n<span class=\"c1\"># Return should be 242</span>\n<span class=\"n\">calculator</span><span class=\"o\">.</span><span class=\"n\">get_chardev</span><span class=\"p\">(</span><span class=\"s2\">\"H\"</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get chardev from list.</span>\n<span class=\"c1\"># Returns a list of converted items [242, 243, 244].</span>\n<span class=\"n\">calculator</span><span class=\"o\">.</span><span class=\"n\">get_chardevs</span><span class=\"p\">([</span><span class=\"s2\">\"H18\"</span><span class=\"p\">,</span> <span class=\"s2\">\"H19\"</span><span class=\"p\">,</span> <span class=\"s2\">\"H20\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Get pin from chardev.</span>\n<span class=\"c1\"># Returns the pin number H18.</span>\n<span class=\"n\">calculator</span><span class=\"o\">.</span><span class=\"n\">get_pin</span><span class=\"p\">(</span><span class=\"mi\">242</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get all pins from chardevs.</span>\n<span class=\"c1\"># Returns all pins found H18, H19, H20.</span>\n<span class=\"n\">calculator</span><span class=\"o\">.</span><span class=\"n\">get_pins</span><span class=\"p\">([</span><span class=\"mi\">242</span><span class=\"p\">,</span> <span class=\"mi\">243</span><span class=\"p\">,</span> <span class=\"mi\">244</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p><strong>All contributions, pull requests and comments are welcome!</strong></p>\n<p>When contributing it is important to test the module in order to make sure\neverything is working as expected. For that install dependencies to run the tests.</p>\n<pre><span class=\"go\">pip install pytest pytest-cov mock pylint</span>\n</pre>\n<p>Running tests and see coverage.</p>\n<pre><span class=\"go\">py.test --cov -v --cov-config=.coveragerc --cov-report=html</span>\n</pre>\n<p>This will generate a report with the coverage which is at <strong>98%</strong> now, let\u2019s try to keep\nit at the same percentage.</p>\n</div>\n\n          </div>"}, "last_serial": 6452757, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "671ba8117ecfda29078b1b7ce6600bc4", "sha256": "856e0ffdb656826e2e2dbdc24ebec0d64f1ee48dff382f1c2cb33afae1cc3b58"}, "downloads": -1, "filename": "GPIO_Calculator-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "671ba8117ecfda29078b1b7ce6600bc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 4454, "upload_time": "2020-01-14T16:42:32", "upload_time_iso_8601": "2020-01-14T16:42:32.839370Z", "url": "https://files.pythonhosted.org/packages/35/30/5d3bc118131a7d09adbae3e874a3b57ccb8ba6c1586f5ff966f9141b0acc/GPIO_Calculator-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5acd1fa9918d7a29c19b9b99cbf6974", "sha256": "560f86e3f316970fc2f1c2392310b1116af1d9c2b510214eba70a778d336ad1a"}, "downloads": -1, "filename": "GPIO-Calculator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f5acd1fa9918d7a29c19b9b99cbf6974", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 9977, "upload_time": "2020-01-14T16:42:34", "upload_time_iso_8601": "2020-01-14T16:42:34.486338Z", "url": "https://files.pythonhosted.org/packages/1f/94/2cbd06a3f3f90c1b22b07312115479071bfdcb5eb12d6ac579c4434c152f/GPIO-Calculator-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "671ba8117ecfda29078b1b7ce6600bc4", "sha256": "856e0ffdb656826e2e2dbdc24ebec0d64f1ee48dff382f1c2cb33afae1cc3b58"}, "downloads": -1, "filename": "GPIO_Calculator-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "671ba8117ecfda29078b1b7ce6600bc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 4454, "upload_time": "2020-01-14T16:42:32", "upload_time_iso_8601": "2020-01-14T16:42:32.839370Z", "url": "https://files.pythonhosted.org/packages/35/30/5d3bc118131a7d09adbae3e874a3b57ccb8ba6c1586f5ff966f9141b0acc/GPIO_Calculator-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5acd1fa9918d7a29c19b9b99cbf6974", "sha256": "560f86e3f316970fc2f1c2392310b1116af1d9c2b510214eba70a778d336ad1a"}, "downloads": -1, "filename": "GPIO-Calculator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f5acd1fa9918d7a29c19b9b99cbf6974", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 9977, "upload_time": "2020-01-14T16:42:34", "upload_time_iso_8601": "2020-01-14T16:42:34.486338Z", "url": "https://files.pythonhosted.org/packages/1f/94/2cbd06a3f3f90c1b22b07312115479071bfdcb5eb12d6ac579c4434c152f/GPIO-Calculator-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:17 2020"}