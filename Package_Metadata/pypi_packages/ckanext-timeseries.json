{"info": {"author": "Nam Giang", "author_email": "kyng@ece.ubc.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "\n=============\nckanext-timeseries\n=============\n\nTimeseries data is streams of data that is indexed by timestamp, such as sensing data. Current default CKAN Datastore plugin only index data based on an auto-incremental integer with no support for timeseries data. Perceived that timeseries data is an important capability when working with sensor network, a new plugin that supports operations based on timestamp natively would be necessary. Thus, the purpose of this repository.\n\nThis plugin is fully compatible with current Datastore API <http://docs.ckan.org/en/latest/maintaining/datastore.html#the-datastore-api>, the endpoint is changed from 'datastore_*' to 'datastore_ts_*'. For example, for search query: send request to 'datastore_ts_search' endpoint. Original datastore plugin should still be enabled so that you can view the resources on CKAN web interface.\n\n------------\nChanges\n------------\n* If you are coming from version < v0.1.0, the schema has changed. A command has been created to upgrade the schema. Please run the following command:\n```\npaster --plugin=ckan timeseries -c <path to ini configuration file> upgrade-schema autogen_timestamp _autogen_timestamp\n```\n\n* From v1.0.0 the plugin name has changed from \"ckanext-datastore_ts\" to \"ckanext-timeseries\", please install ckanext-timeseries as bellow.\n------------\nRequirements\n------------\n\nBeing developed under CKAN 2.6\n\n------------\nInstallation\n------------\n\n.. Add any additional install steps to the list below.\n   For example installing any non-Python dependencies or adding any required\n   config settings.\n\nTo install ckanext-timeseries:\n\n1. Activate your CKAN virtual environment, for example::\n\n     . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-timeseries Python package into your virtual environment::\n\n     pip install ckanext-timeseries\n\n3. Add ``timeseries`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n     sudo service apache2 reload\n\n\n---------------\nConfig Settings\n---------------\nCKAN Timeseries uses configurations from Datastore plugin so make sure those are set. In brief:\n\nsqlalchemy.url = postgresql://ckan_default:pass@localhost/ckan_default\n\nckan.datastore.write_url = postgresql://ckan_default:password@localhost/datastore_default\n\nckan.datastore.read_url = postgresql://datastore_default:password@localhost/datastore_default\n\nCKAN Timeseries introduces a new configuration to set the maximum size of a resource table (as we are dealing with real time data). When a resource reaches this limit, it's table will be cleaned, the default 30% of the oldest data will be deleted. This percentage can be customized by user when creating a CKAN Timeseries resource. Please look at the wiki page for more detail.\n\nckan.timeseries.max_resource_size = 500\n\nThe number is observed in MB\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-timeseries for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/namgk/ckan-timeseries.git\n    cd ckanext-timeseries\n    python setup.py develop\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --ckan --with-pylons=test-core.ini ckanext/timeseries/tests/test.. .py\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.timeseries --cover-inclusive --cover-erase --cover-tests\n\n\n---------------------------------\nRegistering ckanext-timeseries on PyPI\n---------------------------------\n\nckanext-timeseries should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-timeseries. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. (First time only) Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. (First time only) Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/namgk/ckan-timeseries", "keywords": "CKAN", "license": "AGPL", "maintainer": "", "maintainer_email": "", "name": "ckanext-timeseries", "package_url": "https://pypi.org/project/ckanext-timeseries/", "platform": "", "project_url": "https://pypi.org/project/ckanext-timeseries/", "project_urls": {"Homepage": "https://github.com/namgk/ckan-timeseries"}, "release_url": "https://pypi.org/project/ckanext-timeseries/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Timeseries-based datastore extension", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>=============<br>ckanext-timeseries<br>=============<br><br>Timeseries data is streams of data that is indexed by timestamp, such as sensing data. Current default CKAN Datastore plugin only index data based on an auto-incremental integer with no support for timeseries data. Perceived that timeseries data is an important capability when working with sensor network, a new plugin that supports operations based on timestamp natively would be necessary. Thus, the purpose of this repository.<br><br>This plugin is fully compatible with current Datastore API &lt;http://docs.ckan.org/en/latest/maintaining/datastore.html#the-datastore-api&gt;, the endpoint is changed from 'datastore_*' to 'datastore_ts_*'. For example, for search query: send request to 'datastore_ts_search' endpoint. Original datastore plugin should still be enabled so that you can view the resources on CKAN web interface.<br><br>------------<br>Changes<br>------------<br>* If you are coming from version &lt; v0.1.0, the schema has changed. A command has been created to upgrade the schema. Please run the following command:<br>```<br>paster --plugin=ckan timeseries -c &lt;path to ini configuration file&gt; upgrade-schema autogen_timestamp _autogen_timestamp<br>```<br><br>* From v1.0.0 the plugin name has changed from \"ckanext-datastore_ts\" to \"ckanext-timeseries\", please install ckanext-timeseries as bellow.<br>------------<br>Requirements<br>------------<br><br>Being developed under CKAN 2.6<br><br>------------<br>Installation<br>------------<br><br>.. Add any additional install steps to the list below.<br>   For example installing any non-Python dependencies or adding any required<br>   config settings.<br><br>To install ckanext-timeseries:<br><br>1. Activate your CKAN virtual environment, for example::<br><br>     . /usr/lib/ckan/default/bin/activate<br><br>2. Install the ckanext-timeseries Python package into your virtual environment::<br><br>     pip install ckanext-timeseries<br><br>3. Add ``timeseries`` to the ``ckan.plugins`` setting in your CKAN<br>   config file (by default the config file is located at<br>   ``/etc/ckan/default/production.ini``).<br><br>4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::<br><br>     sudo service apache2 reload<br><br><br>---------------<br>Config Settings<br>---------------<br>CKAN Timeseries uses configurations from Datastore plugin so make sure those are set. In brief:<br><br>sqlalchemy.url = postgresql://ckan_default:pass@localhost/ckan_default<br><br>ckan.datastore.write_url = postgresql://ckan_default:password@localhost/datastore_default<br><br>ckan.datastore.read_url = postgresql://datastore_default:password@localhost/datastore_default<br><br>CKAN Timeseries introduces a new configuration to set the maximum size of a resource table (as we are dealing with real time data). When a resource reaches this limit, it's table will be cleaned, the default 30% of the oldest data will be deleted. This percentage can be customized by user when creating a CKAN Timeseries resource. Please look at the wiki page for more detail.<br><br>ckan.timeseries.max_resource_size = 500<br><br>The number is observed in MB<br><br>------------------------<br>Development Installation<br>------------------------<br><br>To install ckanext-timeseries for development, activate your CKAN virtualenv and<br>do::<br><br>    git clone https://github.com/namgk/ckan-timeseries.git<br>    cd ckanext-timeseries<br>    python setup.py develop<br><br>-----------------<br>Running the Tests<br>-----------------<br><br>To run the tests, do::<br><br>    nosetests --nologcapture --ckan --with-pylons=test-core.ini ckanext/timeseries/tests/test.. .py<br><br>To run the tests and produce a coverage report, first make sure you have<br>coverage installed in your virtualenv (``pip install coverage``) then run::<br><br>    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.timeseries --cover-inclusive --cover-erase --cover-tests<br><br><br>---------------------------------<br>Registering ckanext-timeseries on PyPI<br>---------------------------------<br><br>ckanext-timeseries should be availabe on PyPI as<br>https://pypi.python.org/pypi/ckanext-timeseries. If that link doesn't work, then<br>you can register the project on PyPI for the first time by following these<br>steps:<br><br>1. (First time only) Create a source distribution of the project::<br><br>     python setup.py sdist<br><br>2. (First time only) Register the project::<br><br>     python setup.py register<br><br>3. Upload the source distribution to PyPI::<br><br>     python setup.py sdist upload<br><br>4. Tag the first release of the project on GitHub with the version number from<br>   the ``setup.py`` file. For example if the version number in ``setup.py`` is<br>   0.0.1 then do::<br><br>       git tag 0.0.1<br>       git push --tags<br>\n          </div>"}, "last_serial": 4463483, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b13e19238bb44ce24c5c91c9ea98373d", "sha256": "099ff89960e8d196446e20842b6a85f7874d5a80a67ea8846271cd660278ccfa"}, "downloads": -1, "filename": "ckanext-timeseries-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b13e19238bb44ce24c5c91c9ea98373d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103924, "upload_time": "2016-11-23T07:58:31", "upload_time_iso_8601": "2016-11-23T07:58:31.480725Z", "url": "https://files.pythonhosted.org/packages/bd/3d/142366e60ae20c14900165aefce0c81d64cfebb66e72fc93d0e67ddb31cb/ckanext-timeseries-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b92afb59fac966a6d6dd8b694e284f27", "sha256": "387200a3d773d6d9a65f2c72981218c18ffe21dffc275d9e70940c596781c8b8"}, "downloads": -1, "filename": "ckanext-timeseries-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b92afb59fac966a6d6dd8b694e284f27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54530, "upload_time": "2016-11-23T23:54:43", "upload_time_iso_8601": "2016-11-23T23:54:43.234214Z", "url": "https://files.pythonhosted.org/packages/57/79/eee1e18f3c14a86918451aadff8f61abdb618ea0534e8274106a51b09858/ckanext-timeseries-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "75d4d68fde036e9e5847e29c279bb5cc", "sha256": "8b27adad85eb3fd2b6ee80708a9b1a15c554aad925b60c03ffbc49fcfbe324e4"}, "downloads": -1, "filename": "ckanext-timeseries-0.1.3.tar.gz", "has_sig": false, "md5_digest": "75d4d68fde036e9e5847e29c279bb5cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54550, "upload_time": "2016-11-24T00:05:00", "upload_time_iso_8601": "2016-11-24T00:05:00.318405Z", "url": "https://files.pythonhosted.org/packages/a4/09/a03ff0472a6be84adca4083800b5fdfecf18324aea92e79785463df31467/ckanext-timeseries-0.1.3.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3bbdd4afd0c9545ff636347868cb8280", "sha256": "b578a2716bde0815e1c809449f02efa0e0753d81c5ea0595f46ccdc59f331b8c"}, "downloads": -1, "filename": "ckanext-timeseries-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3bbdd4afd0c9545ff636347868cb8280", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54386, "upload_time": "2016-11-24T04:58:55", "upload_time_iso_8601": "2016-11-24T04:58:55.394966Z", "url": "https://files.pythonhosted.org/packages/6b/a7/f53258c2a346d9a78b65486bb2f0f9c263fe49de0bed3ad3318ee69c3149/ckanext-timeseries-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7f05bc1ad761e544dcc9b96eb8c04bd5", "sha256": "00387b65e1ca252220fc8d48c275e28a0ab3a400d7e827db23323da6691fbdb1"}, "downloads": -1, "filename": "ckanext-timeseries-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7f05bc1ad761e544dcc9b96eb8c04bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54382, "upload_time": "2016-11-24T05:01:41", "upload_time_iso_8601": "2016-11-24T05:01:41.309721Z", "url": "https://files.pythonhosted.org/packages/e2/47/5545645b18eeab3468ec3bb59eced59e0efee777eaa5c923446881a91e7e/ckanext-timeseries-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "8bfbee87043a9261cb2c8aebf7e66662", "sha256": "2d01e026d18de980b69e6b445ad669e4733b36920991dc20e8ec37e1f756dcf9"}, "downloads": -1, "filename": "ckanext-timeseries-1.0.3.tar.gz", "has_sig": false, "md5_digest": "8bfbee87043a9261cb2c8aebf7e66662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54721, "upload_time": "2017-01-02T19:47:26", "upload_time_iso_8601": "2017-01-02T19:47:26.897341Z", "url": "https://files.pythonhosted.org/packages/07/ca/2853b70847f210c19df500d6d984a1343914363241cad436f4a8656d7cad/ckanext-timeseries-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ed2988e845db39be0e9b8ccc660b10aa", "sha256": "75575794c15d06c6cdc2ab37ec4281cec0e566ea88e766f21105ad8fa61e05c5"}, "downloads": -1, "filename": "ckanext-timeseries-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ed2988e845db39be0e9b8ccc660b10aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55335, "upload_time": "2017-01-06T07:21:25", "upload_time_iso_8601": "2017-01-06T07:21:25.068750Z", "url": "https://files.pythonhosted.org/packages/cf/13/4109f2ca3cd51a502cc8eb57664b20846cb6c8fffb98e6154198acabce45/ckanext-timeseries-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "9fe9da930625583646947cec4fa424ea", "sha256": "60d54c87bef2de349c31f4cdef2eb21deddf24da804336ac0654e3283f4ce655"}, "downloads": -1, "filename": "ckanext-timeseries-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9fe9da930625583646947cec4fa424ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55449, "upload_time": "2017-01-10T22:36:03", "upload_time_iso_8601": "2017-01-10T22:36:03.041573Z", "url": "https://files.pythonhosted.org/packages/aa/63/b41b840af918b44e3487faf162d72e501e232867cd622316ef382c63d44e/ckanext-timeseries-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "bfbd69ee1acf0bc3de0c0fa0e79a5559", "sha256": "73470e1528be316e766454e924ac100b39fe6e566c21c1faa1bd1960f703354e"}, "downloads": -1, "filename": "ckanext-timeseries-1.1.2.tar.gz", "has_sig": false, "md5_digest": "bfbd69ee1acf0bc3de0c0fa0e79a5559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55620, "upload_time": "2017-01-11T00:50:04", "upload_time_iso_8601": "2017-01-11T00:50:04.664708Z", "url": "https://files.pythonhosted.org/packages/89/52/095cdd615e4691c100eb0702f0fe03ac7203f85756c304fd09de7aef4ca4/ckanext-timeseries-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "8dfffbe34cc994a93582c065460f9c7d", "sha256": "3e804691927e5542cbd8debd72e91126d04af28440ec43657a6097107fc101b0"}, "downloads": -1, "filename": "ckanext-timeseries-1.1.3.tar.gz", "has_sig": false, "md5_digest": "8dfffbe34cc994a93582c065460f9c7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55645, "upload_time": "2017-01-11T07:35:52", "upload_time_iso_8601": "2017-01-11T07:35:52.078552Z", "url": "https://files.pythonhosted.org/packages/b7/41/0830a27105b74a2e931c5137b85f330d30a44c0d6438d740c34d59a1b98d/ckanext-timeseries-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "abee1a07ef4c9ceded12448703904096", "sha256": "216bdae625f6611d43d5d6c13a9acd2cb7496a82392858f2557d220596c3d04d"}, "downloads": -1, "filename": "ckanext-timeseries-1.2.0.tar.gz", "has_sig": false, "md5_digest": "abee1a07ef4c9ceded12448703904096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55564, "upload_time": "2017-08-21T19:51:09", "upload_time_iso_8601": "2017-08-21T19:51:09.093535Z", "url": "https://files.pythonhosted.org/packages/bd/ac/33192e8175ffcd29db2a3b20f6f8e95983fd6115bad0cb8f81472a76ac0a/ckanext-timeseries-1.2.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "a41e4ffb23b1799e3d7c7b81651b88a4", "sha256": "09ea7b9bdfeb8a4343f21606d0001c29dae39601cd1e258f1de6b5a40ad737fd"}, "downloads": -1, "filename": "ckanext-timeseries-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a41e4ffb23b1799e3d7c7b81651b88a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63486, "upload_time": "2018-11-07T23:14:11", "upload_time_iso_8601": "2018-11-07T23:14:11.947004Z", "url": "https://files.pythonhosted.org/packages/8e/55/79e830a20c57632bdf0b7832cd32be78ea26a8c34ccfcbb73eb64d6b338c/ckanext-timeseries-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a41e4ffb23b1799e3d7c7b81651b88a4", "sha256": "09ea7b9bdfeb8a4343f21606d0001c29dae39601cd1e258f1de6b5a40ad737fd"}, "downloads": -1, "filename": "ckanext-timeseries-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a41e4ffb23b1799e3d7c7b81651b88a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63486, "upload_time": "2018-11-07T23:14:11", "upload_time_iso_8601": "2018-11-07T23:14:11.947004Z", "url": "https://files.pythonhosted.org/packages/8e/55/79e830a20c57632bdf0b7832cd32be78ea26a8c34ccfcbb73eb64d6b338c/ckanext-timeseries-2.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:13 2020"}