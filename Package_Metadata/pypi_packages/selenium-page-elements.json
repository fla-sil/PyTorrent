{"info": {"author": "Jordan Enterkin", "author_email": "jordan.a.enterkin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Testing"], "description": "# Selenium Page Elements\n\n[![Build Status](https://travis-ci.org/jenterkin/selenium-page-elements.svg?branch=master)](https://travis-ci.org/jenterkin/selenium-page-elements)\n[![codecov](https://codecov.io/gh/jenterkin/selenium-page-elements/branch/master/graph/badge.svg)](https://codecov.io/gh/jenterkin/selenium-page-elements)\n[![PyPI version](https://badge.fury.io/py/selenium-page-elements.svg)](https://badge.fury.io/py/selenium-page-elements)\n\n## Installation\n```\n$ pip install selenium-page-elements\n```\n\n## Overview\nSelenium Page Elements is a thin wrapper around the Selenium python library that aims to make Page Objects quick and easy to create and maintain by allowing you to define and interact with web elements like object attributes.\n\n```python\n# Page Object\nfrom selenium.webdriver.common.by import By\nfrom page_elements import Element, InputField, CheckBox\n\n\nclass LoginPage:\n    url = \"http://localhost/login\"\n\n    # Define your elements in your class.\n    username = InputField(By.ID, 'username')\n    password = InputField(By.ID, 'password')\n    stay_signed_in = CheckBox(By.ID, 'stay-signed-in')\n    login_button = Element(By.XPATH, '//button[contains(text(), \"Login\")]')\n\n    def __init__(self, driver):\n        # Ensure that your page object has a Selenium webdriver in `self.driver`.\n        self.driver = driver\n\n    def open(self):\n        self.driver.get(LoginPage.url)\n\n    def login(self, username, password, stay_signed_in=True):\n        # Use your elements just as you would any Python variable.\n        self.username = username\n        self.password = password\n        self.keep_me_signed_in = stay_signed_in\n        self.login_button.click()\n```\n\nThe element classes take in a Selenium `By` object and a selector, so you can select any element you would be able to with Selenium.\n\nTo check the value of an element simply call the element with `.value()`\n```python\n    login_page = LoginPage(driver)\n    login_page.username = 'mmario'\n    print(login_page.username.value()) # prints 'mmario'\n```\n\nThe reason you have to call `.value()` on the element is because Selenium Page Elements simply returns a monkey-patched Selenium `WebElement` instance. The reason for returning the monkey-patched instance is to give you the flexibility that the Selenium library already gives you, while giving you a shortcut for giving you what you want most of the time. For instance, you can check to make sure that an element is visible and then get the value.\n```python\n    assert login_page.username.is_displayed()\n    assert login_page.username.value() == 'mmario'\n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jenterkin/selenium-page-elements", "keywords": "selenium page objects", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "selenium-page-elements", "package_url": "https://pypi.org/project/selenium-page-elements/", "platform": "", "project_url": "https://pypi.org/project/selenium-page-elements/", "project_urls": {"Homepage": "https://github.com/jenterkin/selenium-page-elements"}, "release_url": "https://pypi.org/project/selenium-page-elements/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "A small library for simplifying page objects.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Selenium Page Elements<br><br>[![Build Status](https://travis-ci.org/jenterkin/selenium-page-elements.svg?branch=master)](https://travis-ci.org/jenterkin/selenium-page-elements)<br>[![codecov](https://codecov.io/gh/jenterkin/selenium-page-elements/branch/master/graph/badge.svg)](https://codecov.io/gh/jenterkin/selenium-page-elements)<br>[![PyPI version](https://badge.fury.io/py/selenium-page-elements.svg)](https://badge.fury.io/py/selenium-page-elements)<br><br>## Installation<br>```<br>$ pip install selenium-page-elements<br>```<br><br>## Overview<br>Selenium Page Elements is a thin wrapper around the Selenium python library that aims to make Page Objects quick and easy to create and maintain by allowing you to define and interact with web elements like object attributes.<br><br>```python<br># Page Object<br>from selenium.webdriver.common.by import By<br>from page_elements import Element, InputField, CheckBox<br><br><br>class LoginPage:<br>    url = \"http://localhost/login\"<br><br>    # Define your elements in your class.<br>    username = InputField(By.ID, 'username')<br>    password = InputField(By.ID, 'password')<br>    stay_signed_in = CheckBox(By.ID, 'stay-signed-in')<br>    login_button = Element(By.XPATH, '//button[contains(text(), \"Login\")]')<br><br>    def __init__(self, driver):<br>        # Ensure that your page object has a Selenium webdriver in `self.driver`.<br>        self.driver = driver<br><br>    def open(self):<br>        self.driver.get(LoginPage.url)<br><br>    def login(self, username, password, stay_signed_in=True):<br>        # Use your elements just as you would any Python variable.<br>        self.username = username<br>        self.password = password<br>        self.keep_me_signed_in = stay_signed_in<br>        self.login_button.click()<br>```<br><br>The element classes take in a Selenium `By` object and a selector, so you can select any element you would be able to with Selenium.<br><br>To check the value of an element simply call the element with `.value()`<br>```python<br>    login_page = LoginPage(driver)<br>    login_page.username = 'mmario'<br>    print(login_page.username.value()) # prints 'mmario'<br>```<br><br>The reason you have to call `.value()` on the element is because Selenium Page Elements simply returns a monkey-patched Selenium `WebElement` instance. The reason for returning the monkey-patched instance is to give you the flexibility that the Selenium library already gives you, while giving you a shortcut for giving you what you want most of the time. For instance, you can check to make sure that an element is visible and then get the value.<br>```python<br>    assert login_page.username.is_displayed()<br>    assert login_page.username.value() == 'mmario'<br>```<br>\n          </div>"}, "last_serial": 3618476, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "e77c87a0fd753359b1bcb201b8960c0a", "sha256": "16872d2a6c8ff54ebcd2da639c92055339515b218cf9452fa299cf661fdf359a"}, "downloads": -1, "filename": "selenium_page_elements-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e77c87a0fd753359b1bcb201b8960c0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3957, "upload_time": "2017-05-02T02:55:13", "upload_time_iso_8601": "2017-05-02T02:55:13.840321Z", "url": "https://files.pythonhosted.org/packages/ea/ed/3e2c7d6b03a9b856d6a74b2927de8c60fde059caf9e9b5cbd3735f68ae00/selenium_page_elements-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1e6c06a8abff9b44583204c9fc4cf8a3", "sha256": "6451085e7ea252e97520e63ec459c1fe37d7f6bae39da51cc99f835f804f9929"}, "downloads": -1, "filename": "selenium_page_elements-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1e6c06a8abff9b44583204c9fc4cf8a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3961, "upload_time": "2017-05-02T03:08:45", "upload_time_iso_8601": "2017-05-02T03:08:45.158754Z", "url": "https://files.pythonhosted.org/packages/21/23/bde3158b390b76d224ac2a8a76ddc82432a4fb5f432c3db50a13856b3e02/selenium_page_elements-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "454445f60855dc8506393e2799c65d80", "sha256": "0a64bb369d074630fa18046bba51d05d0abaf95799092b42445493eb83c584c6"}, "downloads": -1, "filename": "selenium_page_elements-0.1.4.tar.gz", "has_sig": false, "md5_digest": "454445f60855dc8506393e2799c65d80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4004, "upload_time": "2017-05-02T03:16:50", "upload_time_iso_8601": "2017-05-02T03:16:50.642859Z", "url": "https://files.pythonhosted.org/packages/9b/bc/bd5672d1ad79aeced4e35dcd04970239c0447b4435909078c51df14c86ec/selenium_page_elements-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3933df4482c4f310ca6321db2e507b21", "sha256": "1bc3477da78d8cf587247a78444d67e665324d07677163e633a3302f4cdb5fac"}, "downloads": -1, "filename": "selenium_page_elements-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3933df4482c4f310ca6321db2e507b21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4153, "upload_time": "2017-05-02T06:31:25", "upload_time_iso_8601": "2017-05-02T06:31:25.466975Z", "url": "https://files.pythonhosted.org/packages/14/61/39515c3e6f3dc0133784e6650b5e2c964f43c87c14d98dd592c8e41503c7/selenium_page_elements-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "dc3f4ef9ae7f49cdf46a838bb5a8a9c8", "sha256": "3806e9e598ebc2f69ca2064581a146416715aab71a14a729c142ba52b43a2cd4"}, "downloads": -1, "filename": "selenium_page_elements-0.1.6.tar.gz", "has_sig": false, "md5_digest": "dc3f4ef9ae7f49cdf46a838bb5a8a9c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4234, "upload_time": "2018-02-26T19:31:32", "upload_time_iso_8601": "2018-02-26T19:31:32.618228Z", "url": "https://files.pythonhosted.org/packages/c7/2d/773bbc15d9e5c3b1450423f958be53ba087a558a58e740802bfcc7d48e88/selenium_page_elements-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc3f4ef9ae7f49cdf46a838bb5a8a9c8", "sha256": "3806e9e598ebc2f69ca2064581a146416715aab71a14a729c142ba52b43a2cd4"}, "downloads": -1, "filename": "selenium_page_elements-0.1.6.tar.gz", "has_sig": false, "md5_digest": "dc3f4ef9ae7f49cdf46a838bb5a8a9c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4234, "upload_time": "2018-02-26T19:31:32", "upload_time_iso_8601": "2018-02-26T19:31:32.618228Z", "url": "https://files.pythonhosted.org/packages/c7/2d/773bbc15d9e5c3b1450423f958be53ba087a558a58e740802bfcc7d48e88/selenium_page_elements-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:29 2020"}