{"info": {"author": "Marcelo Lerendegui", "author_email": "marcelo@gradienthealth.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# TensorFlow Decode DICOM\n\n## Operations\n\nDecode DICOM contains two Tensorflow Operations that allow reading information from DICOM files.\n\n### Decode DICOM Image\n    loads a dicom image file and returns its pixel information in the specified output format.\n\n### Decode DICOM Data\n    loads a dicom image file and returns a sting tensor with the values of each of the supplied tags.\n\n\n#### Inputs\n\n##### contents:\n    * Description: byte string with the file bytes. Use tf.io.read_file to read the file contents into a string.\n    * Type: string\n\n#### Attributes\n\n##### dtype:\n    * Description: Type for the output tensor\n    * Type: Dtype\n    * Possible Values: uint8, uint16, uint32, uint64, float, float16, double\n    * Default Value: uint16\n\n##### color_dim:\n    * Description: Whether or not to include the color_dimension. If decoded image is monochrome and this attribute is True the output tensor will have an extra singleton dimension for the color.\n    * Type: Bool\n    * Default Value: True\n    \n##### on_error:\n    * Description: This attribute establishes the behavior in case an error occurs on opening the image or if the output type cannot accomodate all the possible input values. *'strict'* throws an error, *'skip'* returns 0 and *'lossy'* continues with the operation as if no error occurred.\n    * Possible Values: 'strict', 'skip', 'lossy'\n    * Default Value: 'skip'\n\n##### scale:\n    * Description: This attribute establishes what to do with the scale of the input values. *'auto'* will autoscale the input values, if the output type is integer, *'auto'* will use the maximum output scale, if the output is float, *'auto'* will scale to [0,1]. *'preserve'* keeps the values as they are, an input value greater than the maximum possible output will be clipped.  \n    * Possible Values: 'auto', 'preserve'\n    * Default Value: 'preserve'\n\n#### Outputs\n\n##### output:\n    * Description: Pixel data of the DICOM image\n    * Type: Tensor of selected type (see attribute dtype)\n    * Dimensions: [F, I, J, C]\n        * F: Number of frames\n        * I: Number of rows\n        * J: Number of columns\n        * C: Color dimensions\n\n\n## Installation\n\n```bash\n    pip install gradient-decode-dicom\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gradienthealth/gradient_decode_dicom", "keywords": "tensorflow dicom custom op machine learning", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "gradient-decode-dicom", "package_url": "https://pypi.org/project/gradient-decode-dicom/", "platform": "", "project_url": "https://pypi.org/project/gradient-decode-dicom/", "project_urls": {"Homepage": "https://github.com/gradienthealth/gradient_decode_dicom"}, "release_url": "https://pypi.org/project/gradient-decode-dicom/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "Gradient Decode DICOM is a dicom image and tag reader op for TensorFlow", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TensorFlow Decode DICOM</h1>\n<h2>Operations</h2>\n<p>Decode DICOM contains two Tensorflow Operations that allow reading information from DICOM files.</p>\n<h3>Decode DICOM Image</h3>\n<pre><code>loads a dicom image file and returns its pixel information in the specified output format.\n</code></pre>\n<h3>Decode DICOM Data</h3>\n<pre><code>loads a dicom image file and returns a sting tensor with the values of each of the supplied tags.\n</code></pre>\n<h4>Inputs</h4>\n<h5>contents:</h5>\n<pre><code>* Description: byte string with the file bytes. Use tf.io.read_file to read the file contents into a string.\n* Type: string\n</code></pre>\n<h4>Attributes</h4>\n<h5>dtype:</h5>\n<pre><code>* Description: Type for the output tensor\n* Type: Dtype\n* Possible Values: uint8, uint16, uint32, uint64, float, float16, double\n* Default Value: uint16\n</code></pre>\n<h5>color_dim:</h5>\n<pre><code>* Description: Whether or not to include the color_dimension. If decoded image is monochrome and this attribute is True the output tensor will have an extra singleton dimension for the color.\n* Type: Bool\n* Default Value: True\n</code></pre>\n<h5>on_error:</h5>\n<pre><code>* Description: This attribute establishes the behavior in case an error occurs on opening the image or if the output type cannot accomodate all the possible input values. *'strict'* throws an error, *'skip'* returns 0 and *'lossy'* continues with the operation as if no error occurred.\n* Possible Values: 'strict', 'skip', 'lossy'\n* Default Value: 'skip'\n</code></pre>\n<h5>scale:</h5>\n<pre><code>* Description: This attribute establishes what to do with the scale of the input values. *'auto'* will autoscale the input values, if the output type is integer, *'auto'* will use the maximum output scale, if the output is float, *'auto'* will scale to [0,1]. *'preserve'* keeps the values as they are, an input value greater than the maximum possible output will be clipped.  \n* Possible Values: 'auto', 'preserve'\n* Default Value: 'preserve'\n</code></pre>\n<h4>Outputs</h4>\n<h5>output:</h5>\n<pre><code>* Description: Pixel data of the DICOM image\n* Type: Tensor of selected type (see attribute dtype)\n* Dimensions: [F, I, J, C]\n    * F: Number of frames\n    * I: Number of rows\n    * J: Number of columns\n    * C: Color dimensions\n</code></pre>\n<h2>Installation</h2>\n<pre>    pip install gradient-decode-dicom\n</pre>\n\n          </div>"}, "last_serial": 5513855, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "175aa25c90382dc8d9152b31364ba49a", "sha256": "60df9db2cfc8bee72af94230e6145c2dcba6e64537f9372ae0da6b550e4dd47f"}, "downloads": -1, "filename": "gradient_decode_dicom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "175aa25c90382dc8d9152b31364ba49a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53813, "upload_time": "2019-07-08T22:54:37", "upload_time_iso_8601": "2019-07-08T22:54:37.623724Z", "url": "https://files.pythonhosted.org/packages/8f/e7/557a7c055200a18373181dfb5c1ef2bad2260ac2cd9d757fb3e3c1f9d24b/gradient_decode_dicom-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "82288a176c35a8af37033e5402936754", "sha256": "4b1a195ddc2af1af6de621d0fbecb88e6309debf5db9f22c55f6ef56cda4feee"}, "downloads": -1, "filename": "gradient_decode_dicom-0.0.4.tar.gz", "has_sig": false, "md5_digest": "82288a176c35a8af37033e5402936754", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 198296, "upload_time": "2019-07-10T19:31:20", "upload_time_iso_8601": "2019-07-10T19:31:20.863223Z", "url": "https://files.pythonhosted.org/packages/2e/38/3f6e8bd418f9f386dc5ee5c85bf3c868a48045542c0cab9ed846b1cfa946/gradient_decode_dicom-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ea49e9badc810dc0b09715269551a544", "sha256": "8eb006de9d7807cebc84367484bcd94fcb3deb22817c137c5041109f13f59af0"}, "downloads": -1, "filename": "gradient_decode_dicom-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ea49e9badc810dc0b09715269551a544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203800, "upload_time": "2019-07-10T20:26:03", "upload_time_iso_8601": "2019-07-10T20:26:03.431816Z", "url": "https://files.pythonhosted.org/packages/e1/d1/fceeb352a6ef6d4f16a0c2c2e1d3dc178957d0b792cd26c5c9861a592280/gradient_decode_dicom-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea49e9badc810dc0b09715269551a544", "sha256": "8eb006de9d7807cebc84367484bcd94fcb3deb22817c137c5041109f13f59af0"}, "downloads": -1, "filename": "gradient_decode_dicom-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ea49e9badc810dc0b09715269551a544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203800, "upload_time": "2019-07-10T20:26:03", "upload_time_iso_8601": "2019-07-10T20:26:03.431816Z", "url": "https://files.pythonhosted.org/packages/e1/d1/fceeb352a6ef6d4f16a0c2c2e1d3dc178957d0b792cd26c5c9861a592280/gradient_decode_dicom-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:58 2020"}