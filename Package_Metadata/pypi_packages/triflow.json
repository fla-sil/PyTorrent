{"info": {"author": "Nicolas Cellier", "author_email": "contact@nicolas-cellier.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Triflow\n\n[![DOI](https://zenodo.org/badge/71994260.svg)](https://zenodo.org/badge/latestdoi/71994260)\n\n|   Master   |  Dev   |\n|:----------:|:------:|\n|[![Build Status](https://travis-ci.org/locie/triflow.svg?branch=master)](https://travis-ci.org/locie/triflow) | [![Build Status](https://travis-ci.org/locie/triflow.svg?branch=dev)](https://travis-ci.org/locie/triflow)\n[![Coverage Status](https://coveralls.io/repos/github/locie/triflow/badge.svg?branch=dev)](https://coveralls.io/github/locie/triflow?branch=master) | [![Coverage Status](https://coveralls.io/repos/github/locie/triflow/badge.svg?branch=dev)](https://coveralls.io/github/locie/triflow?branch=dev)\n\n## Installation\n\n### External requirements\n\nThis library is written for python &gt;= 3.5.\n\nThe library is based on Theano, thus extra dependencies like fortran and\nC compiler are needed, see Theano install page for extra information:\n\n<http://deeplearning.net/software/theano/install.html>\n\nOn v0.5.0, it is possible to choose between theano and numpy (which provide similar features). numpy will be slower but with no compilation time, which is handy for testing and prototyping.\n\n### via PyPI\n\n``` {.sourceCode .bash}\npip install triflow\n```\n\nwill install the package and\n\n``` {.sourceCode .bash}\npip install triflow --upgrade\n```\n\nwill update an old version of the library.\n\nuse sudo if needed, and the user flag if you want to install it without\nthe root privileges:\n\n``` {.sourceCode .bash}\npip install --user triflow\n```\n\n### via github\n\nYou can install the last version of the library using pip and the github\nrepository:\n\n``` {.sourceCode .bash}\npip install git+git://github.com/locie/triflow.git\n```\n\n### via anaconda (strongly advised for windows users)\n\n``` {.sourceCode .bash}\nconda install -c conda-forge -c celliern triflow\n```\n\n## Introduction\n\n### Motivation\n\nThe aim of this library is to have a (relatively) easy way to write\ntransient dynamic systems with 1D finite difference discretization, with\nfast temporal solvers.\n\nThe main two parts of the library are:\n\n- symbolic tools defining the spatial discretization, with boundary\n    taking into account in a separated part\n- a fast temporal solver written in order to use the sparsity of the\n    finite difference method to reduce the memory and CPU usage during\n    the solving\n\nMoreover, extra tools are provided and the library is written in a\nmodular way, allowing an easy extension of these different parts (see\nthe plug-in module of the library.)\n\nThe library fits well with an interactive usage (in a jupyter notebook).\nThe dependency list is actually larger, but on-going work target a\nreduction of the stack complexity.\n\n### Model writing\n\nAll the models are written as function generating the F vector and the\nJacobian matrix of the model defined as `dtU = F(U)`.\n\nThe symbolic model is written as a simple mathematic equation. For\nexample, a diffusion advection model can be written as:\n\n``` {.sourceCode .python}\nfrom triflow import Model\n\nequation_diff = \"k * dxxU - c * dxU\"\ndependent_var = \"U\"\nphysical_parameters = [\"k\", \"c\"]\n\nmodel = Model(equation_diff, dependent_var, physical_parameters)\n```\n\n### Example\n\n``` {.sourceCode .python}\nimport numpy as np\nimport pylab as pl\nfrom triflow import Model, Simulation\n\nmodel = Model(\"k * dxxU - c * dxU\",\n              \"U\", [\"k\", \"c\"])\n\nx, dx = np.linspace(0, 1, 200, retstep=True)\nU = np.cos(2 * np.pi * x * 5)\nfields = model.fields_template(x=x, U=U)\n\nparameters = dict(c=.03, k=.001, dx=dx, periodic=False)\n\nt = 0\ndt = 5E-1\ntmax = 2.5\n\npl.plot(fields.x, fields.U, label=f't: {t:g}')\n\n\ndef dirichlet_condition(t, fields, pars):\n    fields.U[0] = 1\n    fields.U[-1] = 0\n    return fields, pars\n\n\nsimul = Simulation(model, t, fields, parameters, dt,\n                   hook=dirichlet_condition, tmax=tmax)\n\nfor i, (t, fields) in enumerate(simul):\n    print(f\"iteration: {i}\\t\",\n          f\"t: {t:g}\", end='\\r')\n    pl.plot(fields.x, fields.U, label=f't: {t:g}')\n\npl.xlim(0, 1)\nlegend = pl.legend(loc='best')\n\npl.show()\n```\n\n### NEWS\n\nv0.5.0:\n\n- WARNING: some part of the API has changed:\n  - Simulation signature has changed. `t` arg is now optional (with t=0) as default and `physical_parameters` is now `parameters`.\n  - The displays have been completely rewritten, and the previous API is depreciated. Users are encouraged to modify their scripts or to stick to the ^0.4 triflow versions.\n- move schemes from plugins to core\n- compilers: remove tensorflow, add numpy which is way slower but has no compilation overhead.\n- displays and containers are connected to the simulation via `streamz`\n- add post-processing.\n- real-time display is now based on [Holoviews](https://holoviews.org/). Backward compatibility for display is broken and users are encouraged to modify their scripts or to stick to the ^0.4 triflow versions.\n- use poetry to manage dependencies.\n- use `tqdm` to display simulation update.\n\nv0.4.12:\n\n- give user choice of compiler\n  - get out tensorflow compiler (not really efficient, lot of maintenance trouble)\n  - give access to theano and numpy compiler\n- upwind scheme support\n- using xarray as fields backend, allowing easy post process and save\n- update display and containers\n- adding repr string to all major classes\n\nv0.4.7:\n\n- adding tensor flow support with full testing\n- adding post-processing in bokeh fields display\n\n### ROADMAP / TODO LIST\n\nThe following items are linked to a better use of solid external libs:\n\n- change all the display and container workflow:\n  - use streamz to allow pipeline like way to add display / probing / post-process :done:\n  - use holoviews as main way to do real-time plotting :done:\n  - use xarray multi netcdf files to reduce IO lack of performance :done:\n- better use of external solving lib:\n  - merge triflow.plugins.schemes and scipy.integrate.OdeSolver API :todo:\n  - use scipy.integrate.solve_ivp for triflow temporal scheme solving (making it more robust) :todo:\n  - main goal is to have better two-way integration with scipy :todo:\n\nThese are linked to the triflow core\n\n- build a robust boundary condition API :todo:\n- work on dimension extension, allowing 2D resolution and more :todo:\n- allow auxiliary function to make some complex model easier to write :todo:\n- allow a choice on the finite difference scheme, on a global way or term by term :todo:\n- test and propose other compilers (Cython, numba, pythran?) :todo:\n- work on adaptive spatial and temporal mesh :todo:\n\nThese are far away but can be very interesting:\n\n- implement continuation algorithm working with triflow (separate project?)\n- try other kind of discretization scheme (separate project each?)\n  - Finite volume\n  - Finite element?\n\nThe final (and very ambitious goal) is to provide a robust framework allowing\nto link the mathematical language (and a natural way to write the model,\nas natural as possible) with a high performance and robust solving of\nthe numerical system. There is a trade-off between the ease of use and the\nperformance, for this software, all mandatory dependencies have to be\npip-installable (as opposite to dedalus project or fenics project), even if\nsome non-mandatory dependencies can be harder to install.\n\nIf we go that further, it may be interesting to split the project with the\ntriflow language, the different spatial discretization and so on...\n\n### License\n\nThis project is licensed under the term of the [MIT license](LICENSE)\n\n[![image](https://zenodo.org/badge/DOI/10.5281/zenodo.584101.svg)](https://doi.org/10.5281/zenodo.584101)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/locie/triflow", "keywords": "PDE,finite-difference,physic,modelling,interactive", "license": "MIT", "maintainer": "Nicolas Cellier", "maintainer_email": "contact@nicolas-cellier.net", "name": "triflow", "package_url": "https://pypi.org/project/triflow/", "platform": "", "project_url": "https://pypi.org/project/triflow/", "project_urls": {"Homepage": "http://github.com/locie/triflow"}, "release_url": "https://pypi.org/project/triflow/0.5.2/", "requires_dist": ["numpy (>=1,<2)", "scipy (>=1,<2)", "sympy (>=1,<2)", "theano (>=1,<2)", "streamz (>=0.3,<0.4)", "xarray (>=0.10,<0.11)", "holoviews (>=1.1,<2.0)", "bokeh (>=0.12,<0.13)", "path.py (>=11.0,<12.0)", "pendulum (>=1.5,<2.0)", "dask (>=0.17.2,<0.18.0)", "tqdm (>=4.23,<5.0)"], "requires_python": ">=3.5", "summary": "Automatic finite difference discretization for 1D PDE with fast temporal solvers.", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Triflow</h1>\n<p><a href=\"https://zenodo.org/badge/latestdoi/71994260\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af169e31877189d6bb65a5c18ca0794499d51fe3/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f37313939343236302e737667\"></a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Master</th>\n<th align=\"center\">Dev</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><a href=\"https://travis-ci.org/locie/triflow\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fb5c8091131cee47035f7efe1a9f72f58c6a177/68747470733a2f2f7472617669732d63692e6f72672f6c6f6369652f747269666c6f772e7376673f6272616e63683d6d6173746572\"></a></td>\n<td align=\"center\"><a href=\"https://travis-ci.org/locie/triflow\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3338ab6f304a8fe73c06a71a5df1fe73102fb6b5/68747470733a2f2f7472617669732d63692e6f72672f6c6f6369652f747269666c6f772e7376673f6272616e63683d646576\"></a></td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://coveralls.io/github/locie/triflow?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09ae0500501f0c39c01597b7804e0feeb5c44aba/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c6f6369652f747269666c6f772f62616467652e7376673f6272616e63683d646576\"></a></td>\n<td align=\"center\"><a href=\"https://coveralls.io/github/locie/triflow?branch=dev\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09ae0500501f0c39c01597b7804e0feeb5c44aba/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c6f6369652f747269666c6f772f62616467652e7376673f6272616e63683d646576\"></a></td>\n</tr></tbody></table>\n<h2>Installation</h2>\n<h3>External requirements</h3>\n<p>This library is written for python &gt;= 3.5.</p>\n<p>The library is based on Theano, thus extra dependencies like fortran and\nC compiler are needed, see Theano install page for extra information:</p>\n<p><a href=\"http://deeplearning.net/software/theano/install.html\" rel=\"nofollow\">http://deeplearning.net/software/theano/install.html</a></p>\n<p>On v0.5.0, it is possible to choose between theano and numpy (which provide similar features). numpy will be slower but with no compilation time, which is handy for testing and prototyping.</p>\n<h3>via PyPI</h3>\n<pre>pip install triflow\n</pre>\n<p>will install the package and</p>\n<pre>pip install triflow --upgrade\n</pre>\n<p>will update an old version of the library.</p>\n<p>use sudo if needed, and the user flag if you want to install it without\nthe root privileges:</p>\n<pre>pip install --user triflow\n</pre>\n<h3>via github</h3>\n<p>You can install the last version of the library using pip and the github\nrepository:</p>\n<pre>pip install git+git://github.com/locie/triflow.git\n</pre>\n<h3>via anaconda (strongly advised for windows users)</h3>\n<pre>conda install -c conda-forge -c celliern triflow\n</pre>\n<h2>Introduction</h2>\n<h3>Motivation</h3>\n<p>The aim of this library is to have a (relatively) easy way to write\ntransient dynamic systems with 1D finite difference discretization, with\nfast temporal solvers.</p>\n<p>The main two parts of the library are:</p>\n<ul>\n<li>symbolic tools defining the spatial discretization, with boundary\ntaking into account in a separated part</li>\n<li>a fast temporal solver written in order to use the sparsity of the\nfinite difference method to reduce the memory and CPU usage during\nthe solving</li>\n</ul>\n<p>Moreover, extra tools are provided and the library is written in a\nmodular way, allowing an easy extension of these different parts (see\nthe plug-in module of the library.)</p>\n<p>The library fits well with an interactive usage (in a jupyter notebook).\nThe dependency list is actually larger, but on-going work target a\nreduction of the stack complexity.</p>\n<h3>Model writing</h3>\n<p>All the models are written as function generating the F vector and the\nJacobian matrix of the model defined as <code>dtU = F(U)</code>.</p>\n<p>The symbolic model is written as a simple mathematic equation. For\nexample, a diffusion advection model can be written as:</p>\n<pre>from triflow import Model\n\nequation_diff = \"k * dxxU - c * dxU\"\ndependent_var = \"U\"\nphysical_parameters = [\"k\", \"c\"]\n\nmodel = Model(equation_diff, dependent_var, physical_parameters)\n</pre>\n<h3>Example</h3>\n<pre>import numpy as np\nimport pylab as pl\nfrom triflow import Model, Simulation\n\nmodel = Model(\"k * dxxU - c * dxU\",\n              \"U\", [\"k\", \"c\"])\n\nx, dx = np.linspace(0, 1, 200, retstep=True)\nU = np.cos(2 * np.pi * x * 5)\nfields = model.fields_template(x=x, U=U)\n\nparameters = dict(c=.03, k=.001, dx=dx, periodic=False)\n\nt = 0\ndt = 5E-1\ntmax = 2.5\n\npl.plot(fields.x, fields.U, label=f't: {t:g}')\n\n\ndef dirichlet_condition(t, fields, pars):\n    fields.U[0] = 1\n    fields.U[-1] = 0\n    return fields, pars\n\n\nsimul = Simulation(model, t, fields, parameters, dt,\n                   hook=dirichlet_condition, tmax=tmax)\n\nfor i, (t, fields) in enumerate(simul):\n    print(f\"iteration: {i}\\t\",\n          f\"t: {t:g}\", end='\\r')\n    pl.plot(fields.x, fields.U, label=f't: {t:g}')\n\npl.xlim(0, 1)\nlegend = pl.legend(loc='best')\n\npl.show()\n</pre>\n<h3>NEWS</h3>\n<p>v0.5.0:</p>\n<ul>\n<li>WARNING: some part of the API has changed:\n<ul>\n<li>Simulation signature has changed. <code>t</code> arg is now optional (with t=0) as default and <code>physical_parameters</code> is now <code>parameters</code>.</li>\n<li>The displays have been completely rewritten, and the previous API is depreciated. Users are encouraged to modify their scripts or to stick to the ^0.4 triflow versions.</li>\n</ul>\n</li>\n<li>move schemes from plugins to core</li>\n<li>compilers: remove tensorflow, add numpy which is way slower but has no compilation overhead.</li>\n<li>displays and containers are connected to the simulation via <code>streamz</code></li>\n<li>add post-processing.</li>\n<li>real-time display is now based on <a href=\"https://holoviews.org/\" rel=\"nofollow\">Holoviews</a>. Backward compatibility for display is broken and users are encouraged to modify their scripts or to stick to the ^0.4 triflow versions.</li>\n<li>use poetry to manage dependencies.</li>\n<li>use <code>tqdm</code> to display simulation update.</li>\n</ul>\n<p>v0.4.12:</p>\n<ul>\n<li>give user choice of compiler\n<ul>\n<li>get out tensorflow compiler (not really efficient, lot of maintenance trouble)</li>\n<li>give access to theano and numpy compiler</li>\n</ul>\n</li>\n<li>upwind scheme support</li>\n<li>using xarray as fields backend, allowing easy post process and save</li>\n<li>update display and containers</li>\n<li>adding repr string to all major classes</li>\n</ul>\n<p>v0.4.7:</p>\n<ul>\n<li>adding tensor flow support with full testing</li>\n<li>adding post-processing in bokeh fields display</li>\n</ul>\n<h3>ROADMAP / TODO LIST</h3>\n<p>The following items are linked to a better use of solid external libs:</p>\n<ul>\n<li>change all the display and container workflow:\n<ul>\n<li>use streamz to allow pipeline like way to add display / probing / post-process :done:</li>\n<li>use holoviews as main way to do real-time plotting :done:</li>\n<li>use xarray multi netcdf files to reduce IO lack of performance :done:</li>\n</ul>\n</li>\n<li>better use of external solving lib:\n<ul>\n<li>merge triflow.plugins.schemes and scipy.integrate.OdeSolver API :todo:</li>\n<li>use scipy.integrate.solve_ivp for triflow temporal scheme solving (making it more robust) :todo:</li>\n<li>main goal is to have better two-way integration with scipy :todo:</li>\n</ul>\n</li>\n</ul>\n<p>These are linked to the triflow core</p>\n<ul>\n<li>build a robust boundary condition API :todo:</li>\n<li>work on dimension extension, allowing 2D resolution and more :todo:</li>\n<li>allow auxiliary function to make some complex model easier to write :todo:</li>\n<li>allow a choice on the finite difference scheme, on a global way or term by term :todo:</li>\n<li>test and propose other compilers (Cython, numba, pythran?) :todo:</li>\n<li>work on adaptive spatial and temporal mesh :todo:</li>\n</ul>\n<p>These are far away but can be very interesting:</p>\n<ul>\n<li>implement continuation algorithm working with triflow (separate project?)</li>\n<li>try other kind of discretization scheme (separate project each?)\n<ul>\n<li>Finite volume</li>\n<li>Finite element?</li>\n</ul>\n</li>\n</ul>\n<p>The final (and very ambitious goal) is to provide a robust framework allowing\nto link the mathematical language (and a natural way to write the model,\nas natural as possible) with a high performance and robust solving of\nthe numerical system. There is a trade-off between the ease of use and the\nperformance, for this software, all mandatory dependencies have to be\npip-installable (as opposite to dedalus project or fenics project), even if\nsome non-mandatory dependencies can be harder to install.</p>\n<p>If we go that further, it may be interesting to split the project with the\ntriflow language, the different spatial discretization and so on...</p>\n<h3>License</h3>\n<p>This project is licensed under the term of the <a href=\"LICENSE\" rel=\"nofollow\">MIT license</a></p>\n<p><a href=\"https://doi.org/10.5281/zenodo.584101\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34ab2aa403fe2ba95e0415a0907a8d685af83eab/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e3538343130312e737667\"></a></p>\n\n          </div>"}, "last_serial": 3921034, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "df08d9813876f457611d9db2aed6cbba", "sha256": "c34eb2161b2addaed4dbf7e8e6a14c0aa6feebb66fe7a858ab512653c0c32001"}, "downloads": -1, "filename": "triflow-0.2.0-py3.5.egg", "has_sig": false, "md5_digest": "df08d9813876f457611d9db2aed6cbba", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 73212, "upload_time": "2016-11-22T18:16:01", "upload_time_iso_8601": "2016-11-22T18:16:01.406688Z", "url": "https://files.pythonhosted.org/packages/de/63/35763ac576aa3d1f20727984289e98686b0603254562de4a85a6eba650c8/triflow-0.2.0-py3.5.egg", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a0f3a5079d91d07d54737925859d17fd", "sha256": "9fdc783d71bca9af644d5e4cc16f08ad54a924f578601f00e80eae2cb453a7d8"}, "downloads": -1, "filename": "triflow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a0f3a5079d91d07d54737925859d17fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19529, "upload_time": "2016-11-22T18:26:09", "upload_time_iso_8601": "2016-11-22T18:26:09.285402Z", "url": "https://files.pythonhosted.org/packages/f5/7a/e7186b4fb99eb21f0a973de5b8db523d6811d4a6c7ec1399e47be28c96d7/triflow-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f65fd84fe72a3d71074a4fea11d5eb4d", "sha256": "aeff8ef60df95ad25eb81b9f1970d79d5d780c3d7aab4895ff95085ecfaa7172"}, "downloads": -1, "filename": "triflow-0.2.2-py3.5.egg", "has_sig": false, "md5_digest": "f65fd84fe72a3d71074a4fea11d5eb4d", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 72747, "upload_time": "2016-11-24T13:57:17", "upload_time_iso_8601": "2016-11-24T13:57:17.003835Z", "url": "https://files.pythonhosted.org/packages/ab/cf/43355aaa1b59b1ae642cbbf71c6aa5f34f1870dfa880b8eeaea36331a7d4/triflow-0.2.2-py3.5.egg", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "42c5ca35e4370b62aed36e01f4b60780", "sha256": "e8e75ca655d7d5c3d57413a67108c1170c714f76c2b9e370e7a6d1d3e7b0022d"}, "downloads": -1, "filename": "triflow-0.2.3-py3.5.egg", "has_sig": false, "md5_digest": "42c5ca35e4370b62aed36e01f4b60780", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 75329, "upload_time": "2016-12-09T16:14:16", "upload_time_iso_8601": "2016-12-09T16:14:16.367027Z", "url": "https://files.pythonhosted.org/packages/ad/e2/4f0af7ca7acb90ca5f88e11497a0b3673543eda03a19d4546fb46d558bfb/triflow-0.2.3-py3.5.egg", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "29cc6afa59c777b0c23290f282aae780", "sha256": "616bdd4b1ea4a9019f1797d094ba60f8870194826fa161df00933407c1717fe0"}, "downloads": -1, "filename": "triflow-0.2.4-py3.5.egg", "has_sig": false, "md5_digest": "29cc6afa59c777b0c23290f282aae780", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 75197, "upload_time": "2016-12-11T17:42:03", "upload_time_iso_8601": "2016-12-11T17:42:03.839823Z", "url": "https://files.pythonhosted.org/packages/77/0f/efe8710b8c4753bc91e38d4ded1c64516d274cf01f7ed2d4ea61de92c88a/triflow-0.2.4-py3.5.egg", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "23e2dc995795b85fc2d111d94cd8e72f", "sha256": "d9e8e80737fbdb53af5aeeb088a59d42cd933f30ede7b7e3ce025313fb16ea6f"}, "downloads": -1, "filename": "triflow-0.3.0.tar.gz", "has_sig": false, "md5_digest": "23e2dc995795b85fc2d111d94cd8e72f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12702, "upload_time": "2017-03-30T15:03:19", "upload_time_iso_8601": "2017-03-30T15:03:19.539619Z", "url": "https://files.pythonhosted.org/packages/20/cc/0ae3b861e90148651a1b06a68299fa5d785d1a970dcbe2aa1757a8caf1ad/triflow-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "321ffe8b3a728ddac0d8c095facba0b6", "sha256": "2c94914b1f3e1dc00c3a3e9cd85f8513be9181e529056b6c5bfee31cd02f8b4b"}, "downloads": -1, "filename": "triflow-0.4.0.tar.gz", "has_sig": false, "md5_digest": "321ffe8b3a728ddac0d8c095facba0b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20887, "upload_time": "2017-05-09T15:29:17", "upload_time_iso_8601": "2017-05-09T15:29:17.358767Z", "url": "https://files.pythonhosted.org/packages/75/8f/ab72d74c62232e3bcdcddea9b41656249f372d8010f799ce867fac239c26/triflow-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "58e0e802c55622126164751c40e3c427", "sha256": "a14c9adaea9b67f8b436e8a2dea414ec3ef9a178b30296577bb58268e902ebb5"}, "downloads": -1, "filename": "triflow-0.4.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "58e0e802c55622126164751c40e3c427", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44320, "upload_time": "2017-05-10T09:06:25", "upload_time_iso_8601": "2017-05-10T09:06:25.841994Z", "url": "https://files.pythonhosted.org/packages/40/31/62eb3f6ccd8ad4bcd9bc416631b8f4418195527e18132051efc035bad798/triflow-0.4.1.linux-x86_64.tar.gz", "yanked": false}], "0.4.10": [{"comment_text": "", "digests": {"md5": "93893688237b0d3308202ccbe5b5a47b", "sha256": "1ef2e1d48be211eb0d0cbc6f165f8fa2c9439413e85f9a3ecd043ee7fa78c61c"}, "downloads": -1, "filename": "triflow-0.4.10.tar.gz", "has_sig": false, "md5_digest": "93893688237b0d3308202ccbe5b5a47b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10629025, "upload_time": "2017-08-19T09:49:03", "upload_time_iso_8601": "2017-08-19T09:49:03.587712Z", "url": "https://files.pythonhosted.org/packages/da/9b/35214859b0be357d3c01e9bb2d0151a29f743330871daa1904be385c3aae/triflow-0.4.10.tar.gz", "yanked": false}], "0.4.11": [{"comment_text": "", "digests": {"md5": "4ece52f41552d57199f1c0bf79a34244", "sha256": "24547c400abc035b1859d2344bb7c5adff3f2cb011bc1f44314c1b6423320243"}, "downloads": -1, "filename": "triflow-0.4.11.tar.gz", "has_sig": false, "md5_digest": "4ece52f41552d57199f1c0bf79a34244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10629038, "upload_time": "2017-08-19T10:01:22", "upload_time_iso_8601": "2017-08-19T10:01:22.106787Z", "url": "https://files.pythonhosted.org/packages/f1/98/93e059521f190ca6addff9788838aea622217599d4147aafcd8c0f0af0bd/triflow-0.4.11.tar.gz", "yanked": false}], "0.4.12": [{"comment_text": "", "digests": {"md5": "c650c7a075bc420216482730f687415d", "sha256": "2ffb2a9c25f853cacd15adab371c873a6f1c28027467ad215a7bee1141900c4e"}, "downloads": -1, "filename": "triflow-0.4.12.tar.gz", "has_sig": false, "md5_digest": "c650c7a075bc420216482730f687415d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10646535, "upload_time": "2017-09-08T09:54:13", "upload_time_iso_8601": "2017-09-08T09:54:13.717936Z", "url": "https://files.pythonhosted.org/packages/cb/84/25f60066773ae05aa9c988ff71b5db34000e0f641c8f5c755246f52e0fb4/triflow-0.4.12.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "014674854ea8b1cb78e40024a756a5e5", "sha256": "b549e39f420f3fce442d261779f167907d21d94d125cc9480cb737faef2a45f9"}, "downloads": -1, "filename": "triflow-0.4.2.tar.gz", "has_sig": false, "md5_digest": "014674854ea8b1cb78e40024a756a5e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20884, "upload_time": "2017-05-10T09:17:51", "upload_time_iso_8601": "2017-05-10T09:17:51.425209Z", "url": "https://files.pythonhosted.org/packages/67/89/4cfcbb199c9990338e9c93c4dc78930df9867ae7f3a8717173a022a46299/triflow-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "2b0ea8095bf69942acf36b623ee8ecdc", "sha256": "93f4bcccfe3dfd82c1c777a28edb28011154af9c1d432f2939f5d8445ac65497"}, "downloads": -1, "filename": "triflow-0.4.3.tar.gz", "has_sig": false, "md5_digest": "2b0ea8095bf69942acf36b623ee8ecdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20171885, "upload_time": "2017-05-24T20:02:52", "upload_time_iso_8601": "2017-05-24T20:02:52.425416Z", "url": "https://files.pythonhosted.org/packages/9f/47/0cd752e6cddba2ecc81d27549a42974bb11023fd891d03af8aedbc3cd0fb/triflow-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "a2454556dd962cbcb1be0565d4096789", "sha256": "d412e6edba96cc6777fd77b4cf8ef22abd857c9fbc913db1fbebaf95d8dbb142"}, "downloads": -1, "filename": "triflow-0.4.4.tar.gz", "has_sig": false, "md5_digest": "a2454556dd962cbcb1be0565d4096789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9500035, "upload_time": "2017-06-11T15:10:06", "upload_time_iso_8601": "2017-06-11T15:10:06.662115Z", "url": "https://files.pythonhosted.org/packages/f8/e3/4033163ddd933dc919d32ed6febc98f6bb640037cddb076a5e784f416b92/triflow-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "18518719739827eb312027a58d5e6c4d", "sha256": "98e8d15957d2a385f9a310b5a5d375f71120b441f3121205ae0c17ad9c3e8812"}, "downloads": -1, "filename": "triflow-0.4.5.tar.gz", "has_sig": false, "md5_digest": "18518719739827eb312027a58d5e6c4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9500011, "upload_time": "2017-06-11T15:11:50", "upload_time_iso_8601": "2017-06-11T15:11:50.409134Z", "url": "https://files.pythonhosted.org/packages/5a/ba/9bfdaea644805ed529538e1721d786137731e19b27546d84f69e0737b444/triflow-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "e918acf3dea232e431393b4210697122", "sha256": "7a43ae417302180e253721764571e2a0d710bddfcf96f3204fe6e8aa1d9a7fc4"}, "downloads": -1, "filename": "triflow-0.4.6.tar.gz", "has_sig": false, "md5_digest": "e918acf3dea232e431393b4210697122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10641536, "upload_time": "2017-06-15T14:47:10", "upload_time_iso_8601": "2017-06-15T14:47:10.230228Z", "url": "https://files.pythonhosted.org/packages/1e/25/6b1f9df89d2af2223a4c88fe82af1e2f237cbb0d30bc503a8639fe70f79a/triflow-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "d55c03053c09813cd97c2940b96c0ea6", "sha256": "9cab9a2c6b0d5431915197ad17305ec89ec827df7fe45b771aad85feaaa08f4d"}, "downloads": -1, "filename": "triflow-0.4.7.tar.gz", "has_sig": false, "md5_digest": "d55c03053c09813cd97c2940b96c0ea6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10623589, "upload_time": "2017-07-02T17:11:15", "upload_time_iso_8601": "2017-07-02T17:11:15.737139Z", "url": "https://files.pythonhosted.org/packages/1c/1f/3c92cb5c1114ed2a2c881282c2ef238a08a767c7d02a61be4058951e4360/triflow-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "6f289064817baa171d09a619b51d549d", "sha256": "b3b12ca074b5b33fbbe67129a18ba0d4907308cfc10ac96299f242be807f70e6"}, "downloads": -1, "filename": "triflow-0.4.8.tar.gz", "has_sig": false, "md5_digest": "6f289064817baa171d09a619b51d549d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10659777, "upload_time": "2017-08-04T15:58:33", "upload_time_iso_8601": "2017-08-04T15:58:33.869066Z", "url": "https://files.pythonhosted.org/packages/fa/34/3917afdfbb44ad7f9aca169e90a4110e69de86eff43ecc4cff7345fd3a03/triflow-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "c6be72f900d5f04cc53c710407297ca1", "sha256": "d258aba2616b3910c342a702feada813b002b9e982e0381f05cd07ad1430c2ba"}, "downloads": -1, "filename": "triflow-0.4.9.tar.gz", "has_sig": false, "md5_digest": "c6be72f900d5f04cc53c710407297ca1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10628956, "upload_time": "2017-08-18T22:47:48", "upload_time_iso_8601": "2017-08-18T22:47:48.618448Z", "url": "https://files.pythonhosted.org/packages/f4/48/350a309a1b9a63cf54ff73abf0db2aa0462245c31b09f61f0ca0f87959f2/triflow-0.4.9.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "cd481394b291de67216cbd31525a074e", "sha256": "49bbb0eb3a5ac1fd41ef312602135a60cdf973b18e3a38726ab53437fd6ca607"}, "downloads": -1, "filename": "triflow-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd481394b291de67216cbd31525a074e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5.0.0", "size": 100235, "upload_time": "2018-05-02T11:39:38", "upload_time_iso_8601": "2018-05-02T11:39:38.606519Z", "url": "https://files.pythonhosted.org/packages/39/a2/07050a476dd2415b238ad294461eec5413ff140eee70e590a855eb383479/triflow-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac5a794389d03a061fdf60547b53d160", "sha256": "39be397f37c967f8b30303bac8329841049b66a04c82b06f3c1a6d5c3fc5ec11"}, "downloads": -1, "filename": "triflow-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ac5a794389d03a061fdf60547b53d160", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5.0.0", "size": 28352, "upload_time": "2018-05-02T11:39:36", "upload_time_iso_8601": "2018-05-02T11:39:36.542741Z", "url": "https://files.pythonhosted.org/packages/de/fd/12b14e3afe65dd561c2fd51a22e8ea49777fdfeea15062833313e60dc544/triflow-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8717b0bd82b424e9594084acf0b49f4d", "sha256": "17d768ce261d2d9169cf7515181ba76f62df296a0d1d5de1390be59679dc50d9"}, "downloads": -1, "filename": "triflow-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8717b0bd82b424e9594084acf0b49f4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 101476, "upload_time": "2018-06-01T14:46:05", "upload_time_iso_8601": "2018-06-01T14:46:05.252331Z", "url": "https://files.pythonhosted.org/packages/bb/ea/4e1561741bbc5fa711b83307089e7e4a3479d10bf4bef86445c0d11f7ad4/triflow-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c7c8e04ed356f7ff20d8dcda4d063aa", "sha256": "c8475e0f97cca626446fab799eddf42f796d387b2462d629e7d1c4da895b5101"}, "downloads": -1, "filename": "triflow-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3c7c8e04ed356f7ff20d8dcda4d063aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 29105, "upload_time": "2018-06-01T14:46:07", "upload_time_iso_8601": "2018-06-01T14:46:07.065048Z", "url": "https://files.pythonhosted.org/packages/f3/5e/40adfa916937b6da24a5e7ba2b01462128fa41b36697de0a81b160471783/triflow-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "0bb58a23bda93818a4bc6fa6de5e6e9a", "sha256": "3a4336650c670e03d911cabca455b79a23bcb65b06396648f56e7651382abd90"}, "downloads": -1, "filename": "triflow-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0bb58a23bda93818a4bc6fa6de5e6e9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 101507, "upload_time": "2018-06-01T15:23:14", "upload_time_iso_8601": "2018-06-01T15:23:14.918919Z", "url": "https://files.pythonhosted.org/packages/5a/63/7d50d336b4c35b99658dc46ffefe05132ac11c124d454c84ae98913c15f7/triflow-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "835024435681af442ab1cd2026397a6f", "sha256": "9af5c299c5a73b2f7d3d3e4dc264b5b810f026276c27e725ba8fcd71ae2aecd8"}, "downloads": -1, "filename": "triflow-0.5.2.tar.gz", "has_sig": false, "md5_digest": "835024435681af442ab1cd2026397a6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 29208, "upload_time": "2018-06-01T15:23:16", "upload_time_iso_8601": "2018-06-01T15:23:16.282844Z", "url": "https://files.pythonhosted.org/packages/2c/8d/c00f0ffc7e93f4df74569aced62978b4577b8d0dfb86a5f4e3e625c1aced/triflow-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bb58a23bda93818a4bc6fa6de5e6e9a", "sha256": "3a4336650c670e03d911cabca455b79a23bcb65b06396648f56e7651382abd90"}, "downloads": -1, "filename": "triflow-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0bb58a23bda93818a4bc6fa6de5e6e9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 101507, "upload_time": "2018-06-01T15:23:14", "upload_time_iso_8601": "2018-06-01T15:23:14.918919Z", "url": "https://files.pythonhosted.org/packages/5a/63/7d50d336b4c35b99658dc46ffefe05132ac11c124d454c84ae98913c15f7/triflow-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "835024435681af442ab1cd2026397a6f", "sha256": "9af5c299c5a73b2f7d3d3e4dc264b5b810f026276c27e725ba8fcd71ae2aecd8"}, "downloads": -1, "filename": "triflow-0.5.2.tar.gz", "has_sig": false, "md5_digest": "835024435681af442ab1cd2026397a6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 29208, "upload_time": "2018-06-01T15:23:16", "upload_time_iso_8601": "2018-06-01T15:23:16.282844Z", "url": "https://files.pythonhosted.org/packages/2c/8d/c00f0ffc7e93f4df74569aced62978b4577b8d0dfb86a5f4e3e625c1aced/triflow-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:12 2020"}