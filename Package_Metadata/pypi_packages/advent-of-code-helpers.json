{"info": {"author": "Marcus Vaal", "author_email": "mjvaal@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "Advent of Code helpers\n======================\n\n.. image:: https://img.shields.io/pypi/pyversions/advent-of-code-helpers.svg\n    :target: https://github.com/mvaal/advent-of-code-helpers\n.. image:: https://badge.fury.io/py/advent-of-code-helpers.svg\n    :target: https://badge.fury.io/py/advent-of-code-helpers\n.. image:: https://github.com/mvaal/advent-of-code-helpers/workflows/build/badge.svg\n    :target: https://github.com/mvaal/advent-of-code-helpers\n.. image:: https://api.codeclimate.com/v1/badges/29103862e179077a63fc/test_coverage\n   :target: https://codeclimate.com/github/mvaal/advent-of-code-helpers/test_coverage\n   :alt: Test Coverage\n.. image:: https://api.codeclimate.com/v1/badges/29103862e179077a63fc/maintainability\n   :target: https://codeclimate.com/github/mvaal/advent-of-code-helpers/maintainability\n   :alt: Maintainability\n\nAdvent of Code helper functions\n\n.. code-block:: python\n\n   from aoc.helpers import output, read_input_from_file, input_lines\n   from aoc import template\n\nSetup Guide\n-----------\n\nInstall with pip\n\n.. code-block:: bash\n\n   pip install advent-of-code-helpers\n\nHelper Usage\n------------\n``read_input_from_file`` reads the data as a single line from a file\n\n.. code-block:: python\n\n    from aoc.helpers import read_input_from_file\n    read_input_from_file('path/to/input_data')\n\n``input_lines`` returns a list of strings from the string input\n\n.. code-block:: python\n\n    from aoc.helpers import input_lines\n    input_lines('single\\nstring\\ninput')\n\n``output`` prints the result to console and writes to an output file if\nan output directory is provided\n\n.. code-block:: python\n\n    from aoc.helpers import output\n    output('result', part(int), day(int), year(int), output_dir(str), file_prefix(str))\n\nTemplate Usage\n--------------\nYou can specify data from a file using the ``data(input)`` function.\n\nYou can specify an output directory for output using the ``output(output)``\nfunction.  If left empty, it will still print to screen, but will not write\nthe result to a file.  If given an output directory, the results will be\nappended to the file so you can easily go back and look at previous results.\n\nExamples\n~~~~~~~~\n.. code-block:: python\n\n    from aoc import template\n\n\n    class Part1(template.Part1):\n        def solve(self):\n            # Read input\n            lines = input_lines(self.input())\n            # Do some work here\n\n            # Sample output\n            result = ','.join(lines)\n            return result\n\n\n    def main():\n        output_dir = '../out'\n        test_data = os.path.join(os.path.dirname(__file__),\n                                 'resources/test_input.txt')\n        Part1(1, 2018).data(test_data).output(output_dir)\n\n        data = os.path.join(os.path.dirname(__file__), 'resources/input.txt')\n        Part1(1, 2018).data(data).output(output_dir)\n\n\n    if __name__ == \"__main__\":\n        main()\n\nMore usage in the example_.\n\n.. _example: examples/template_example.py\n\nTemplate Usage with Other Libraries\n-----------------------------------\nIf you want to use your own input reader or a library like advent-of-code-data_,\nyou can override the ``input`` method.\n\n.. _advent-of-code-data: https://github.com/wimglenn/advent-of-code-data\n\nExamples\n~~~~~~~~\n.. code-block:: python\n\n    from aoc import template\n    from aoc.helpers import input_lines\n    from aocd import get_data\n\n\n    class Part1(template.Part1):\n        def input(self):\n            if self.input_file:\n                return super().input()\n            else:\n                return get_data(day=self.day, year=self.year)\n\n        def solve(self):\n            # Read input\n            lines = input_lines(self.input())\n            # Do some work here\n\n            # Sample output\n            result = ','.join(lines)\n            return result\n\n\n    def main():\n        Part1(1, 2018).output('../out')\n\n\n    if __name__ == \"__main__\":\n        main()\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mvaal/advent-of-code-helpers", "keywords": "python,advent of code,aoc", "license": "MIT License", "maintainer": "Marcus Vaal", "maintainer_email": "mjvaal@gmail.com", "name": "advent-of-code-helpers", "package_url": "https://pypi.org/project/advent-of-code-helpers/", "platform": "", "project_url": "https://pypi.org/project/advent-of-code-helpers/", "project_urls": {"Homepage": "https://github.com/mvaal/advent-of-code-helpers"}, "release_url": "https://pypi.org/project/advent-of-code-helpers/0.1.1/", "requires_dist": ["pytest ; extra == 'dev'", "pytest ; extra == 'test'"], "requires_python": ">=3.5", "summary": "Advent of Code helper functions", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/mvaal/advent-of-code-helpers\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/advent-of-code-helpers.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/822918b6c7be12a6512033e6060f6e42397f3b31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616476656e742d6f662d636f64652d68656c706572732e737667\"></a>\n<a href=\"https://badge.fury.io/py/advent-of-code-helpers\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/advent-of-code-helpers.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e3ee0e4e2ca942f418b84d757a4a07b6d48b1fa/68747470733a2f2f62616467652e667572792e696f2f70792f616476656e742d6f662d636f64652d68656c706572732e737667\"></a>\n<a href=\"https://github.com/mvaal/advent-of-code-helpers\" rel=\"nofollow\"><img alt=\"https://github.com/mvaal/advent-of-code-helpers/workflows/build/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea91b64fd607de1a91792cc97117325a51215309/68747470733a2f2f6769746875622e636f6d2f6d7661616c2f616476656e742d6f662d636f64652d68656c706572732f776f726b666c6f77732f6275696c642f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/mvaal/advent-of-code-helpers/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/547708d076815cd9f7bdebe95139612026c263e6/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f32393130333836326531373930373761363366632f746573745f636f766572616765\"></a>\n<a href=\"https://codeclimate.com/github/mvaal/advent-of-code-helpers/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ec71de99ba34d22e1480fbc641803fc0cee4570/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f32393130333836326531373930373761363366632f6d61696e7461696e6162696c697479\"></a>\n<p>Advent of Code helper functions</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">read_input_from_file</span><span class=\"p\">,</span> <span class=\"n\">input_lines</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aoc</span> <span class=\"kn\">import</span> <span class=\"n\">template</span>\n</pre>\n<div id=\"setup-guide\">\n<h2>Setup Guide</h2>\n<p>Install with pip</p>\n<pre>pip install advent-of-code-helpers\n</pre>\n</div>\n<div id=\"helper-usage\">\n<h2>Helper Usage</h2>\n<p><tt>read_input_from_file</tt> reads the data as a single line from a file</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">read_input_from_file</span>\n<span class=\"n\">read_input_from_file</span><span class=\"p\">(</span><span class=\"s1\">'path/to/input_data'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>input_lines</tt> returns a list of strings from the string input</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">input_lines</span>\n<span class=\"n\">input_lines</span><span class=\"p\">(</span><span class=\"s1\">'single</span><span class=\"se\">\\n</span><span class=\"s1\">string</span><span class=\"se\">\\n</span><span class=\"s1\">input'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>output</tt> prints the result to console and writes to an output file if\nan output directory is provided</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">output</span>\n<span class=\"n\">output</span><span class=\"p\">(</span><span class=\"s1\">'result'</span><span class=\"p\">,</span> <span class=\"n\">part</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"n\">day</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"n\">year</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"n\">output_dir</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">),</span> <span class=\"n\">file_prefix</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"template-usage\">\n<h2>Template Usage</h2>\n<p>You can specify data from a file using the <tt>data(input)</tt> function.</p>\n<p>You can specify an output directory for output using the <tt>output(output)</tt>\nfunction.  If left empty, it will still print to screen, but will not write\nthe result to a file.  If given an output directory, the results will be\nappended to the file so you can easily go back and look at previous results.</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc</span> <span class=\"kn\">import</span> <span class=\"n\">template</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Part1</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">Part1</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Read input</span>\n        <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">input_lines</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">())</span>\n        <span class=\"c1\"># Do some work here</span>\n\n        <span class=\"c1\"># Sample output</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">output_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'../out'</span>\n    <span class=\"n\">test_data</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span>\n                             <span class=\"s1\">'resources/test_input.txt'</span><span class=\"p\">)</span>\n    <span class=\"n\">Part1</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2018</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"n\">test_data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">'resources/input.txt'</span><span class=\"p\">)</span>\n    <span class=\"n\">Part1</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2018</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>More usage in the <a href=\"examples/template_example.py\" rel=\"nofollow\">example</a>.</p>\n</div>\n</div>\n<div id=\"template-usage-with-other-libraries\">\n<h2>Template Usage with Other Libraries</h2>\n<p>If you want to use your own input reader or a library like <a href=\"https://github.com/wimglenn/advent-of-code-data\" rel=\"nofollow\">advent-of-code-data</a>,\nyou can override the <tt>input</tt> method.</p>\n<div id=\"id1\">\n<h3>Examples</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aoc</span> <span class=\"kn\">import</span> <span class=\"n\">template</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aoc.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">input_lines</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aocd</span> <span class=\"kn\">import</span> <span class=\"n\">get_data</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Part1</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">Part1</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input_file</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"n\">day</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">day</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">year</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Read input</span>\n        <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">input_lines</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">())</span>\n        <span class=\"c1\"># Do some work here</span>\n\n        <span class=\"c1\"># Sample output</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">Part1</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2018</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"s1\">'../out'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7014393, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e5b88ef2d56f7408d4edd09ccb6175f2", "sha256": "af2f80f4ecfbf7215783ca06e2d341eca2d16165c4661e4f65114cc3459832b3"}, "downloads": -1, "filename": "advent_of_code_helpers-0.0.1-py3.6.egg", "has_sig": false, "md5_digest": "e5b88ef2d56f7408d4edd09ccb6175f2", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1206, "upload_time": "2018-12-03T04:48:29", "upload_time_iso_8601": "2018-12-03T04:48:29.307727Z", "url": "https://files.pythonhosted.org/packages/11/d3/80bed6b4acb68d0ad6dec8ec09b3bc37499b0ab447d318029aa63ca6158e/advent_of_code_helpers-0.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7dafe58338616b5cb9f78b35c1ee6b21", "sha256": "6687a585f087415f65429b80c0749b271fae035560cc6c8c7932d4dfdebf1c10"}, "downloads": -1, "filename": "advent_of_code_helpers-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7dafe58338616b5cb9f78b35c1ee6b21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2192, "upload_time": "2018-12-03T04:48:26", "upload_time_iso_8601": "2018-12-03T04:48:26.347966Z", "url": "https://files.pythonhosted.org/packages/1a/21/e4a51f396407b385ef430af355a9e1bdc8fb4d1388edbbd5cf74da1bf0b7/advent_of_code_helpers-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02e184365eb4717cba52096afc50aedb", "sha256": "f2fc05acff506a87d5336052403aa548621e1ebcfdcd87b1dad9466a54d5b0f0"}, "downloads": -1, "filename": "advent-of-code-helpers-0.0.1.tar.gz", "has_sig": false, "md5_digest": "02e184365eb4717cba52096afc50aedb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1017, "upload_time": "2018-12-03T04:48:28", "upload_time_iso_8601": "2018-12-03T04:48:28.256221Z", "url": "https://files.pythonhosted.org/packages/05/12/ee28aa5507c383901964e6c4655c5c743d3dcf37b76f9a07b143655da217/advent-of-code-helpers-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8d410f3e8f311afc0b29c383ddd7b8b6", "sha256": "94a5f73e5714d7d30a2a087c40a8c9b2b6a45b7c6ff7fc284f01b26ebb210854"}, "downloads": -1, "filename": "advent-of-code-helpers-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8d410f3e8f311afc0b29c383ddd7b8b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1356, "upload_time": "2018-12-03T04:54:23", "upload_time_iso_8601": "2018-12-03T04:54:23.981176Z", "url": "https://files.pythonhosted.org/packages/b4/7a/5d42d67df2cda9a42b8a6d600dec7c726645fac072fcb6c05ec37e016a6e/advent-of-code-helpers-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "00b7578b7577751e443614e217dd8379", "sha256": "db61c62bc086a7cd2145e3a60a24d913f3e8322307c12c722c6c3d156b04de5b"}, "downloads": -1, "filename": "advent-of-code-helpers-0.0.3.tar.gz", "has_sig": false, "md5_digest": "00b7578b7577751e443614e217dd8379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1346, "upload_time": "2018-12-03T19:34:57", "upload_time_iso_8601": "2018-12-03T19:34:57.570626Z", "url": "https://files.pythonhosted.org/packages/0e/e7/698755e11682ad8850a19dbf28aa31e014f4a765177bfeb8ebe0a68e169b/advent-of-code-helpers-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ae487b5681d5c192bfa2a26f0e3a1fdd", "sha256": "f8bc9dce0ccb078019f5f87f2c8f967d48bcd37f8250708a9a912340f5fb3dcd"}, "downloads": -1, "filename": "advent-of-code-helpers-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ae487b5681d5c192bfa2a26f0e3a1fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2447, "upload_time": "2018-12-03T20:17:06", "upload_time_iso_8601": "2018-12-03T20:17:06.456969Z", "url": "https://files.pythonhosted.org/packages/40/a7/f7363c9fb0a907b17bb6886297c49424ca3604661d0c3054fa1fa5394a91/advent-of-code-helpers-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "efd037a055e1e2343fe5bdd3906687ef", "sha256": "91eb28a4372ea282f399e901401a0c0154101a5c6d1053c13f024bd79bef8816"}, "downloads": -1, "filename": "advent-of-code-helpers-0.1.0.tar.gz", "has_sig": false, "md5_digest": "efd037a055e1e2343fe5bdd3906687ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2942, "upload_time": "2018-12-03T23:44:15", "upload_time_iso_8601": "2018-12-03T23:44:15.595354Z", "url": "https://files.pythonhosted.org/packages/64/9f/f5c2ffa4e789a76bd620d934ae45f06fe5a3cc5feb3cec52b30b132063a7/advent-of-code-helpers-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "53c92856900d27e92d0bced759d8000a", "sha256": "84302d7da72bb1449bdeacc2a0260273a1943722ed0f5fae3d6447a6bfe7deb7"}, "downloads": -1, "filename": "advent_of_code_helpers-0.1.1-py3.8.egg", "has_sig": false, "md5_digest": "53c92856900d27e92d0bced759d8000a", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.5", "size": 3876, "upload_time": "2020-04-14T03:33:31", "upload_time_iso_8601": "2020-04-14T03:33:31.147432Z", "url": "https://files.pythonhosted.org/packages/63/fe/c38998f19175cd648a6150f4135cdcaa7ddfc4380337c89bc81a3dc290a7/advent_of_code_helpers-0.1.1-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d401bcfceb444c083a9995a1c736485", "sha256": "e237b58088a23df4d82b185bdf44c501abe63b463c2bcb21b14d8e2c937a86b6"}, "downloads": -1, "filename": "advent_of_code_helpers-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d401bcfceb444c083a9995a1c736485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4832, "upload_time": "2020-04-14T03:33:28", "upload_time_iso_8601": "2020-04-14T03:33:28.695210Z", "url": "https://files.pythonhosted.org/packages/17/ea/2da8f70792fd8412a46e34bed9f4c6af26860f6988d457e18933fffe536b/advent_of_code_helpers-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a191684b4b32c3d0138b614e7d6cacb", "sha256": "f96ddac72a02308d303ddb2ab7c35d46e2a5725ba75e78678fb67c84282fcdf1"}, "downloads": -1, "filename": "advent-of-code-helpers-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8a191684b4b32c3d0138b614e7d6cacb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8771, "upload_time": "2020-04-14T03:33:29", "upload_time_iso_8601": "2020-04-14T03:33:29.943795Z", "url": "https://files.pythonhosted.org/packages/0a/61/fa5a3886dc78074f4b3837369f442d19eb0463a9a650a4841fc0d9eaec1b/advent-of-code-helpers-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53c92856900d27e92d0bced759d8000a", "sha256": "84302d7da72bb1449bdeacc2a0260273a1943722ed0f5fae3d6447a6bfe7deb7"}, "downloads": -1, "filename": "advent_of_code_helpers-0.1.1-py3.8.egg", "has_sig": false, "md5_digest": "53c92856900d27e92d0bced759d8000a", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.5", "size": 3876, "upload_time": "2020-04-14T03:33:31", "upload_time_iso_8601": "2020-04-14T03:33:31.147432Z", "url": "https://files.pythonhosted.org/packages/63/fe/c38998f19175cd648a6150f4135cdcaa7ddfc4380337c89bc81a3dc290a7/advent_of_code_helpers-0.1.1-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d401bcfceb444c083a9995a1c736485", "sha256": "e237b58088a23df4d82b185bdf44c501abe63b463c2bcb21b14d8e2c937a86b6"}, "downloads": -1, "filename": "advent_of_code_helpers-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d401bcfceb444c083a9995a1c736485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4832, "upload_time": "2020-04-14T03:33:28", "upload_time_iso_8601": "2020-04-14T03:33:28.695210Z", "url": "https://files.pythonhosted.org/packages/17/ea/2da8f70792fd8412a46e34bed9f4c6af26860f6988d457e18933fffe536b/advent_of_code_helpers-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a191684b4b32c3d0138b614e7d6cacb", "sha256": "f96ddac72a02308d303ddb2ab7c35d46e2a5725ba75e78678fb67c84282fcdf1"}, "downloads": -1, "filename": "advent-of-code-helpers-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8a191684b4b32c3d0138b614e7d6cacb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8771, "upload_time": "2020-04-14T03:33:29", "upload_time_iso_8601": "2020-04-14T03:33:29.943795Z", "url": "https://files.pythonhosted.org/packages/0a/61/fa5a3886dc78074f4b3837369f442d19eb0463a9a650a4841fc0d9eaec1b/advent-of-code-helpers-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:06 2020"}