{"info": {"author": "Iacopo Spalletti, Martin Kjellberg", "author_email": "i.spalletti@nephila.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "==============\ndjangocms-blog\n==============\n\n\n.. image:: https://img.shields.io/pypi/v/djangocms-blog.svg\n        :target: https://pypi.python.org/pypi/djangocms-blog\n        :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/travis/nephila/djangocms-blog.svg\n        :target: https://travis-ci.org/nephila/djangocms-blog\n        :alt: Latest Travis CI build status\n\n.. image:: https://img.shields.io/pypi/dm/djangocms-blog.svg\n        :target: https://pypi.python.org/pypi/djangocms-blog\n        :alt: Monthly downloads\n\n.. image:: https://coveralls.io/repos/nephila/djangocms-blog/badge.png\n        :target: https://coveralls.io/r/nephila/djangocms-blog\n        :alt: Test coverage\n\n\nA djangoCMS 3 blog application.\n\nSupported Django versions:\n\n* Django 1.6\n* Django 1.7\n* Django 1.8\n\nSupported django CMS versions:\n\n* django CMS 3.x\n\n.. warning:: Starting from version 0.3 the length of the meta_description and\n             meta_title fields has been changed according to the most common\n             defaults for search engines. Existing data will not be affected,\n             but widgets that enforce the length for new data is now being used.\n\n.. warning:: Starting from 0.3 BlogLatestEntriesPlugin and BlogAuthorPostsPlugin\n             the plugin API has changed: ``BlogLatestEntriesPlugin.get_posts``,\n             ``BlogAuthorPostsPlugin.get_authors`` requires the ``request``\n             argument. Templates has been changed to use a context variable\n             instead. Please update your plugin templates accordingly.\n\n.. warning:: Starting from version 0.5, this package does not declare dependency\n             on South anymore; please install it separately if using this\n             application on Django 1.6.\n\n\nQuickstart\n----------\n\nInstall djangocms-blog::\n\n    pip install djangocms-blog\n\nAdd ``djangocms_blog`` and its dependencies to INSTALLED_APPS::\n\n    INSTALLED_APPS = [\n        ...\n        'filer',\n        'easy_thumbnails',\n        'cmsplugin_filer_image',\n        'parler',\n        'taggit',\n        'taggit_autosuggest',\n        'meta',\n        'meta_mixin',\n        'admin_enhancer',\n        'djangocms_blog',\n        ...\n    ]\n\nThen sync and migrate::\n\n    $ python manage.py syncdb\n    $ python manage.py migrate\n\nExternal applications configuration\n+++++++++++++++++++++++++++++++++++\n\nDependency applications may need configuration to work properly.\n\nPlease, refer to each application documentation on details.\n\n* django-filer: http://django-filer.readthedocs.org\n* django-meta: https://github.com/nephila/django-meta#installation\n* django-parler: http://django-parler.readthedocs.org/en/latest/quickstart.html#configuration\n* django-taggit-autosuggest: https://bitbucket.org/fabian/django-taggit-autosuggest\n\nQuick hint\n++++++++++\n\nThe following are minimal defaults to get the blog running; they may not be\nsuited for your deployment.\n\n* Add the following settings to your project::    \n\n    SOUTH_MIGRATION_MODULES = {\n        'easy_thumbnails': 'easy_thumbnails.south_migrations',\n        'taggit': 'taggit.south_migrations',\n    }\n    THUMBNAIL_PROCESSORS = (\n        'easy_thumbnails.processors.colorspace',\n        'easy_thumbnails.processors.autocrop',\n        'filer.thumbnail_processors.scale_and_crop_with_subject_location',\n        'easy_thumbnails.processors.filters',\n    )\n    META_SITE_PROTOCOL = 'http'\n    META_USE_SITES = True\n    \n* If you are using Django 1.7+, be aware than ``filer`` < 0.9.10, ``cmsplugin_filer``\n  and ``django-cms`` < 3.1 currently requires you to setup ``MIGRATION_MODULES`` in settings::\n  \n    MIGRATION_MODULES = {\n       'cms': 'cms.migrations_django', # only for django CMS 3.0\n       'menus': 'menus.migrations_django',  # only for django CMS 3.0\n       'filer': 'filer.migrations_django',  # only for django filer 0.9.9 and below\n       'cmsplugin_filer_image': 'cmsplugin_filer_image.migrations_django',\n    }\n    \n  Please check\n  `django CMS installation <http://django-cms.readthedocs.org/en/support-3.0.x/how_to/integrate.html#installing-and-configuring-django-cms-in-your-django-project>`_,\n  `cmsplugin-filer README <https://github.com/stefanfoulis/cmsplugin-filer#installation>`_\n  for detailed information.\n\n* Configure parler according to your languages::\n\n    PARLER_LANGUAGES = {\n        1: (\n            {'code': 'en',},\n            {'code': 'it',},\n            {'code': 'fr',},\n        ),\n    }\n\n* Add the following to your ``urls.py``::\n\n    url(r'^taggit_autosuggest/', include('taggit_autosuggest.urls')),\n\n* To start your blog you need to use `AppHooks from django CMS <http://django-cms.readthedocs.org/en/support-3.0.x/how_to/apphooks.html>`_ \n  to add the blog to a django CMS page:\n \n  * Create a new django CMS page\n  * Go to Advanced settings and select Blog from the Application selector;\n  * Eventually customise the Application instance name;\n  * Publish the page\n  * Restart the project instance to properly load blog urls.\n\n* Add and edit blog by creating them in the admin or using the toolbar,\n  and the use the `django CMS frontend editor <http://django-cms.readthedocs.org/en/support-3.0.x/user/reference/page_admin.html#the-interface>`_\n  to edit the blog content:\n  \n  * Create a new blog entry in django admin backend or from the toolbar\n  * Click on \"view on site\" button to view the post detail page\n  * Edit the post via djangocms frontend by adding / editing plugins\n  * Publish the blog post by flagging the \"Publish\" switch in the blog post admin\n\nTemplates\n+++++++++\n\nTo ease the template customisations a ``djangocms_blog/base.html`` template is used by all the blog templates;\nthe templates itself extends a ``base.html`` template; content is pulled in the ``content`` block.\nIf you need to define a different base template, or if your base template does not defines a ``content`` block,\ncopy in your template directory ``djangocms_blog/base.html`` and customise it according to your\nneeds; the other application templates will use the newly created template and will ignore the bundled one.\n\nFeatures\n--------\n\n* Placeholder content editing\n* Frontend editing using django CMS 3.0 frontend editor\n* Multilingual support using django-parler\n* Support for Twitter cards, Open Graph and Google+ snippets meta tags\n* Optional support for simpler TextField-based content editing\n* Multisite support (posts can be visible in one or more Django sites on the same project)\n\nImport from Wordpress\n+++++++++++++++++++++\n\nIf you want to import content from existing wordpress blog, check\nhttps://pypi.python.org/pypi/the-real-django-wordpress and\nthis gist https://gist.github.com/yakky/11336204 as a base.\n\n\nSettings\n--------\n* BLOG_ENABLE_COMMENTS: Whether to enable comments by default on posts;\n  while ``djangocms_blog`` does not ship any comment system, this flag can be used\n  to control the chosen comments framework; (default: True)\n* BLOG_USE_PLACEHOLDER: Post content is managed via placeholder; if ``False`` a\n  simple HTMLField is used; (default: True)\n* BLOG_USE_ABSTRACT: Use an abstract field for the post; if ``False`` no abstract field\n  is available for every post; (default: True)\n* BLOG_IMAGE_THUMBNAIL_SIZE: Size of the main image when shown on the post lists;\n  it's a dictionary with ``size``, ``crop`` and ``upscale`` keys;\n  (default: ``{'size': '120x120', 'crop': True,'upscale': False}``)\n* BLOG_IMAGE_FULL_SIZE: Size of the main image when shown on the post detail;\n  it's a dictionary with ``size``, ``crop`` and ``upscale`` keys;\n  (default: ``{'size': '640x120', 'crop': True,'upscale': False}``)\n* BLOG_PAGINATION: Number of post per page; (default: 10)\n* BLOG_LATEST_POSTS: Default number of post in the **Latest post** plugin; (default: 5)\n* BLOG_POSTS_LIST_TRUNCWORDS_COUNT: Default number of words shown for abstract in the post list; (default: 100)\n* BLOG_MULTISITE: Add support for multisite setup\n* BLOG_AUTHOR_DEFAULT: Use a default if not specified; if set to ``True`` the\n  current user is set as the default author, if set to ``False`` no default\n  author is set, if set to a string the user with the provided username is\n  used; (default: True)\n\nSocial media tags settings\n++++++++++++++++++++++++++\n* BLOG_TYPE: Generic type for the post object; (default: Article)\n* BLOG_FB_TYPE: Open Graph type for the post object; (default: Article)\n* BLOG_FB_APPID: Facebook Application ID\n* BLOG_FB_PROFILE_ID: Facebook profile ID of the post author\n* BLOG_FB_PUBLISHER: Facebook URL of the blog publisher\n* BLOG_FB_AUTHOR_URL: Facebook profile URL of the post author\n* BLOG_FB_AUTHOR: Facebook profile URL of the post author\n* BLOG_TWITTER_TYPE: Twitter Card type for the post object; (default: Summary)\n* BLOG_TWITTER_SITE: Twitter account of the site\n* BLOG_TWITTER_AUTHOR: Twitter account of the post author\n* BLOG_GPLUS_TYPE: Google+ Snippet type for the post object; (default: Blog)\n* BLOG_GPLUS_AUTHOR: Google+ account of the post author\n\n\nKnown djangocms-blog websites\n+++++++++++++++++++++++++++++\n\n* http://nephila.co.uk/blog\n* https://blog.ungleich.ch/\n\n\n\n\nHistory\n-------\n\n0.5.0 (2015-08-09)\n++++++++++++++++++\n\n* Add support for Django 1.8\n* Drop dependency on Django select2\n* Code cleanups\n* Enforce flake8 / isort checks\n* Add categories menu\n* Add option to disable the abstract\n\n0.4.0 (2015-03-22)\n++++++++++++++++++\n\n* Fix Django 1.7 issues\n* Fix dependencies on python 3 when using wheel packages\n* Drop Django 1.5 support\n* Fix various templates issues\n* UX fixes in the admin\n\n0.3.1 (2015-01-07)\n++++++++++++++++++\n\n* Fix page_name in template\n* Set cascade to set null for post image and thumbnail options\n\n0.3.0 (2015-01-04)\n++++++++++++++++++\n\n* Multisite support\n* Configurable default author support\n* Refactored settings\n* Fix multilanguage issues\n* Fix SEO fields length\n* Post absolute url is generated from the title in any language if current is\n  not available\n* If djangocms-page-meta and djangocms-page-tags are installed, the relevant\n  toolbar items are removed from the toolbar in the post detail view to avoid\n  confusings page meta / tags with post ones\n* Plugin API changed to filter out posts according to the request.\n* Django 1.7 support\n* Python 3.3 and 3.4 support\n\n\n0.2.0 (2014-09-24)\n++++++++++++++++++\n\n* **INCOMPATIBLE CHANGE**: view names changed!\n* Based on django parler 1.0\n* Toolbar items contextual to the current page\n* Add support for canonical URLs\n* Add transifex support\n* Add social tags via django-meta-mixin\n* Per-post or site-wide comments enabling\n* Simpler TextField-based content editing for simpler blogs\n* Add support for custom user models\n\n\n0.1.0 (2014-03-06)\n++++++++++++++++++\n\n* First experimental release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marty3d/djangocms-blog/", "keywords": "djangocms-blog,blog,django,wordpress,multilingual", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "djangocms-blog-martin", "package_url": "https://pypi.org/project/djangocms-blog-martin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djangocms-blog-martin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/marty3d/djangocms-blog/"}, "release_url": "https://pypi.org/project/djangocms-blog-martin/0.5.1.dev3/", "requires_dist": null, "requires_python": null, "summary": "Fork of djangoCMS 3 blog application", "version": "0.5.1.dev3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/djangocms-blog\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c081f2ce123d104712fdcb45ea35e794e6a871e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f636d732d626c6f672e737667\"></a>\n<a href=\"https://travis-ci.org/nephila/djangocms-blog\" rel=\"nofollow\"><img alt=\"Latest Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b73419c03ea2abcf73f51ff301a689d7e5856cda/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e657068696c612f646a616e676f636d732d626c6f672e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/djangocms-blog\" rel=\"nofollow\"><img alt=\"Monthly downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3d3261ad6123a0aae2e070497775ed53a14fee9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f636d732d626c6f672e737667\"></a>\n<a href=\"https://coveralls.io/r/nephila/djangocms-blog\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb4b71a0b7584c16845e9d76a52856a3ff45ffe6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6e657068696c612f646a616e676f636d732d626c6f672f62616467652e706e67\"></a>\n<p>A djangoCMS 3 blog application.</p>\n<p>Supported Django versions:</p>\n<ul>\n<li>Django 1.6</li>\n<li>Django 1.7</li>\n<li>Django 1.8</li>\n</ul>\n<p>Supported django CMS versions:</p>\n<ul>\n<li>django CMS 3.x</li>\n</ul>\n<div>\n<p>Warning</p>\n<p>Starting from version 0.3 the length of the meta_description and\nmeta_title fields has been changed according to the most common\ndefaults for search engines. Existing data will not be affected,\nbut widgets that enforce the length for new data is now being used.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>Starting from 0.3 BlogLatestEntriesPlugin and BlogAuthorPostsPlugin\nthe plugin API has changed: <tt>BlogLatestEntriesPlugin.get_posts</tt>,\n<tt>BlogAuthorPostsPlugin.get_authors</tt> requires the <tt>request</tt>\nargument. Templates has been changed to use a context variable\ninstead. Please update your plugin templates accordingly.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>Starting from version 0.5, this package does not declare dependency\non South anymore; please install it separately if using this\napplication on Django 1.6.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install djangocms-blog:</p>\n<pre>pip install djangocms-blog\n</pre>\n<p>Add <tt>djangocms_blog</tt> and its dependencies to INSTALLED_APPS:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'filer',\n    'easy_thumbnails',\n    'cmsplugin_filer_image',\n    'parler',\n    'taggit',\n    'taggit_autosuggest',\n    'meta',\n    'meta_mixin',\n    'admin_enhancer',\n    'djangocms_blog',\n    ...\n]\n</pre>\n<p>Then sync and migrate:</p>\n<pre>$ python manage.py syncdb\n$ python manage.py migrate\n</pre>\n<div id=\"external-applications-configuration\">\n<h3>External applications configuration</h3>\n<p>Dependency applications may need configuration to work properly.</p>\n<p>Please, refer to each application documentation on details.</p>\n<ul>\n<li>django-filer: <a href=\"http://django-filer.readthedocs.org\" rel=\"nofollow\">http://django-filer.readthedocs.org</a></li>\n<li>django-meta: <a href=\"https://github.com/nephila/django-meta#installation\" rel=\"nofollow\">https://github.com/nephila/django-meta#installation</a></li>\n<li>django-parler: <a href=\"http://django-parler.readthedocs.org/en/latest/quickstart.html#configuration\" rel=\"nofollow\">http://django-parler.readthedocs.org/en/latest/quickstart.html#configuration</a></li>\n<li>django-taggit-autosuggest: <a href=\"https://bitbucket.org/fabian/django-taggit-autosuggest\" rel=\"nofollow\">https://bitbucket.org/fabian/django-taggit-autosuggest</a></li>\n</ul>\n</div>\n<div id=\"quick-hint\">\n<h3>Quick hint</h3>\n<p>The following are minimal defaults to get the blog running; they may not be\nsuited for your deployment.</p>\n<ul>\n<li><p>Add the following settings to your project:</p>\n<pre>SOUTH_MIGRATION_MODULES = {\n    'easy_thumbnails': 'easy_thumbnails.south_migrations',\n    'taggit': 'taggit.south_migrations',\n}\nTHUMBNAIL_PROCESSORS = (\n    'easy_thumbnails.processors.colorspace',\n    'easy_thumbnails.processors.autocrop',\n    'filer.thumbnail_processors.scale_and_crop_with_subject_location',\n    'easy_thumbnails.processors.filters',\n)\nMETA_SITE_PROTOCOL = 'http'\nMETA_USE_SITES = True\n</pre>\n</li>\n<li><p>If you are using Django 1.7+, be aware than <tt>filer</tt> &lt; 0.9.10, <tt>cmsplugin_filer</tt>\nand <tt><span class=\"pre\">django-cms</span></tt> &lt; 3.1 currently requires you to setup <tt>MIGRATION_MODULES</tt> in settings:</p>\n<pre>MIGRATION_MODULES = {\n   'cms': 'cms.migrations_django', # only for django CMS 3.0\n   'menus': 'menus.migrations_django',  # only for django CMS 3.0\n   'filer': 'filer.migrations_django',  # only for django filer 0.9.9 and below\n   'cmsplugin_filer_image': 'cmsplugin_filer_image.migrations_django',\n}\n</pre>\n<p>Please check\n<a href=\"http://django-cms.readthedocs.org/en/support-3.0.x/how_to/integrate.html#installing-and-configuring-django-cms-in-your-django-project\" rel=\"nofollow\">django CMS installation</a>,\n<a href=\"https://github.com/stefanfoulis/cmsplugin-filer#installation\" rel=\"nofollow\">cmsplugin-filer README</a>\nfor detailed information.</p>\n</li>\n<li><p>Configure parler according to your languages:</p>\n<pre>PARLER_LANGUAGES = {\n    1: (\n        {'code': 'en',},\n        {'code': 'it',},\n        {'code': 'fr',},\n    ),\n}\n</pre>\n</li>\n<li><p>Add the following to your <tt>urls.py</tt>:</p>\n<pre>url(r'^taggit_autosuggest/', include('taggit_autosuggest.urls')),\n</pre>\n</li>\n<li><p>To start your blog you need to use <a href=\"http://django-cms.readthedocs.org/en/support-3.0.x/how_to/apphooks.html\" rel=\"nofollow\">AppHooks from django CMS</a>\nto add the blog to a django CMS page:</p>\n<ul>\n<li>Create a new django CMS page</li>\n<li>Go to Advanced settings and select Blog from the Application selector;</li>\n<li>Eventually customise the Application instance name;</li>\n<li>Publish the page</li>\n<li>Restart the project instance to properly load blog urls.</li>\n</ul>\n</li>\n<li><p>Add and edit blog by creating them in the admin or using the toolbar,\nand the use the <a href=\"http://django-cms.readthedocs.org/en/support-3.0.x/user/reference/page_admin.html#the-interface\" rel=\"nofollow\">django CMS frontend editor</a>\nto edit the blog content:</p>\n<ul>\n<li>Create a new blog entry in django admin backend or from the toolbar</li>\n<li>Click on \u201cview on site\u201d button to view the post detail page</li>\n<li>Edit the post via djangocms frontend by adding / editing plugins</li>\n<li>Publish the blog post by flagging the \u201cPublish\u201d switch in the blog post admin</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"templates\">\n<h3>Templates</h3>\n<p>To ease the template customisations a <tt>djangocms_blog/base.html</tt> template is used by all the blog templates;\nthe templates itself extends a <tt>base.html</tt> template; content is pulled in the <tt>content</tt> block.\nIf you need to define a different base template, or if your base template does not defines a <tt>content</tt> block,\ncopy in your template directory <tt>djangocms_blog/base.html</tt> and customise it according to your\nneeds; the other application templates will use the newly created template and will ignore the bundled one.</p>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Placeholder content editing</li>\n<li>Frontend editing using django CMS 3.0 frontend editor</li>\n<li>Multilingual support using django-parler</li>\n<li>Support for Twitter cards, Open Graph and Google+ snippets meta tags</li>\n<li>Optional support for simpler TextField-based content editing</li>\n<li>Multisite support (posts can be visible in one or more Django sites on the same project)</li>\n</ul>\n<div id=\"import-from-wordpress\">\n<h3>Import from Wordpress</h3>\n<p>If you want to import content from existing wordpress blog, check\n<a href=\"https://pypi.python.org/pypi/the-real-django-wordpress\" rel=\"nofollow\">https://pypi.python.org/pypi/the-real-django-wordpress</a> and\nthis gist <a href=\"https://gist.github.com/yakky/11336204\" rel=\"nofollow\">https://gist.github.com/yakky/11336204</a> as a base.</p>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<ul>\n<li>BLOG_ENABLE_COMMENTS: Whether to enable comments by default on posts;\nwhile <tt>djangocms_blog</tt> does not ship any comment system, this flag can be used\nto control the chosen comments framework; (default: True)</li>\n<li>BLOG_USE_PLACEHOLDER: Post content is managed via placeholder; if <tt>False</tt> a\nsimple HTMLField is used; (default: True)</li>\n<li>BLOG_USE_ABSTRACT: Use an abstract field for the post; if <tt>False</tt> no abstract field\nis available for every post; (default: True)</li>\n<li>BLOG_IMAGE_THUMBNAIL_SIZE: Size of the main image when shown on the post lists;\nit\u2019s a dictionary with <tt>size</tt>, <tt>crop</tt> and <tt>upscale</tt> keys;\n(default: <tt>{'size': '120x120', 'crop': <span class=\"pre\">True,'upscale':</span> False}</tt>)</li>\n<li>BLOG_IMAGE_FULL_SIZE: Size of the main image when shown on the post detail;\nit\u2019s a dictionary with <tt>size</tt>, <tt>crop</tt> and <tt>upscale</tt> keys;\n(default: <tt>{'size': '640x120', 'crop': <span class=\"pre\">True,'upscale':</span> False}</tt>)</li>\n<li>BLOG_PAGINATION: Number of post per page; (default: 10)</li>\n<li>BLOG_LATEST_POSTS: Default number of post in the <strong>Latest post</strong> plugin; (default: 5)</li>\n<li>BLOG_POSTS_LIST_TRUNCWORDS_COUNT: Default number of words shown for abstract in the post list; (default: 100)</li>\n<li>BLOG_MULTISITE: Add support for multisite setup</li>\n<li>BLOG_AUTHOR_DEFAULT: Use a default if not specified; if set to <tt>True</tt> the\ncurrent user is set as the default author, if set to <tt>False</tt> no default\nauthor is set, if set to a string the user with the provided username is\nused; (default: True)</li>\n</ul>\n<div id=\"social-media-tags-settings\">\n<h3>Social media tags settings</h3>\n<ul>\n<li>BLOG_TYPE: Generic type for the post object; (default: Article)</li>\n<li>BLOG_FB_TYPE: Open Graph type for the post object; (default: Article)</li>\n<li>BLOG_FB_APPID: Facebook Application ID</li>\n<li>BLOG_FB_PROFILE_ID: Facebook profile ID of the post author</li>\n<li>BLOG_FB_PUBLISHER: Facebook URL of the blog publisher</li>\n<li>BLOG_FB_AUTHOR_URL: Facebook profile URL of the post author</li>\n<li>BLOG_FB_AUTHOR: Facebook profile URL of the post author</li>\n<li>BLOG_TWITTER_TYPE: Twitter Card type for the post object; (default: Summary)</li>\n<li>BLOG_TWITTER_SITE: Twitter account of the site</li>\n<li>BLOG_TWITTER_AUTHOR: Twitter account of the post author</li>\n<li>BLOG_GPLUS_TYPE: Google+ Snippet type for the post object; (default: Blog)</li>\n<li>BLOG_GPLUS_AUTHOR: Google+ account of the post author</li>\n</ul>\n</div>\n<div id=\"known-djangocms-blog-websites\">\n<h3>Known djangocms-blog websites</h3>\n<ul>\n<li><a href=\"http://nephila.co.uk/blog\" rel=\"nofollow\">http://nephila.co.uk/blog</a></li>\n<li><a href=\"https://blog.ungleich.ch/\" rel=\"nofollow\">https://blog.ungleich.ch/</a></li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.5.0 (2015-08-09)</h3>\n<ul>\n<li>Add support for Django 1.8</li>\n<li>Drop dependency on Django select2</li>\n<li>Code cleanups</li>\n<li>Enforce flake8 / isort checks</li>\n<li>Add categories menu</li>\n<li>Add option to disable the abstract</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4.0 (2015-03-22)</h3>\n<ul>\n<li>Fix Django 1.7 issues</li>\n<li>Fix dependencies on python 3 when using wheel packages</li>\n<li>Drop Django 1.5 support</li>\n<li>Fix various templates issues</li>\n<li>UX fixes in the admin</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.1 (2015-01-07)</h3>\n<ul>\n<li>Fix page_name in template</li>\n<li>Set cascade to set null for post image and thumbnail options</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.0 (2015-01-04)</h3>\n<ul>\n<li>Multisite support</li>\n<li>Configurable default author support</li>\n<li>Refactored settings</li>\n<li>Fix multilanguage issues</li>\n<li>Fix SEO fields length</li>\n<li>Post absolute url is generated from the title in any language if current is\nnot available</li>\n<li>If djangocms-page-meta and djangocms-page-tags are installed, the relevant\ntoolbar items are removed from the toolbar in the post detail view to avoid\nconfusings page meta / tags with post ones</li>\n<li>Plugin API changed to filter out posts according to the request.</li>\n<li>Django 1.7 support</li>\n<li>Python 3.3 and 3.4 support</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0 (2014-09-24)</h3>\n<ul>\n<li><strong>INCOMPATIBLE CHANGE</strong>: view names changed!</li>\n<li>Based on django parler 1.0</li>\n<li>Toolbar items contextual to the current page</li>\n<li>Add support for canonical URLs</li>\n<li>Add transifex support</li>\n<li>Add social tags via django-meta-mixin</li>\n<li>Per-post or site-wide comments enabling</li>\n<li>Simpler TextField-based content editing for simpler blogs</li>\n<li>Add support for custom user models</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.0 (2014-03-06)</h3>\n<ul>\n<li>First experimental release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1672640, "releases": {"0.5.1.dev3": [{"comment_text": "", "digests": {"md5": "d9822794fe33709a6c4cc80b9e82a2da", "sha256": "4eb6b5ff70c977b85af50da3b60a28100d1b05ca7366ecbf04e1030b74372a2f"}, "downloads": -1, "filename": "djangocms_blog_martin-0.5.1.dev3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9822794fe33709a6c4cc80b9e82a2da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 91991, "upload_time": "2015-08-11T08:35:24", "upload_time_iso_8601": "2015-08-11T08:35:24.394164Z", "url": "https://files.pythonhosted.org/packages/b6/33/7def37b8222bf8c31684207a9fdacdfcbff1eed648e9e7dd551ef73ae041/djangocms_blog_martin-0.5.1.dev3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24022f355abe97a6b1dd00718865cafa", "sha256": "8bd5655eac49bb6526becfe8182d045b9617410d54518041cf9c032493653e68"}, "downloads": -1, "filename": "djangocms-blog-martin-0.5.1.dev3.tar.gz", "has_sig": false, "md5_digest": "24022f355abe97a6b1dd00718865cafa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46782, "upload_time": "2015-08-11T08:35:29", "upload_time_iso_8601": "2015-08-11T08:35:29.447420Z", "url": "https://files.pythonhosted.org/packages/03/c3/32e3041b979fd0662223d8f6e8ca816c0773f6a6f8b0cf9aa4fa20885716/djangocms-blog-martin-0.5.1.dev3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9822794fe33709a6c4cc80b9e82a2da", "sha256": "4eb6b5ff70c977b85af50da3b60a28100d1b05ca7366ecbf04e1030b74372a2f"}, "downloads": -1, "filename": "djangocms_blog_martin-0.5.1.dev3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9822794fe33709a6c4cc80b9e82a2da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 91991, "upload_time": "2015-08-11T08:35:24", "upload_time_iso_8601": "2015-08-11T08:35:24.394164Z", "url": "https://files.pythonhosted.org/packages/b6/33/7def37b8222bf8c31684207a9fdacdfcbff1eed648e9e7dd551ef73ae041/djangocms_blog_martin-0.5.1.dev3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24022f355abe97a6b1dd00718865cafa", "sha256": "8bd5655eac49bb6526becfe8182d045b9617410d54518041cf9c032493653e68"}, "downloads": -1, "filename": "djangocms-blog-martin-0.5.1.dev3.tar.gz", "has_sig": false, "md5_digest": "24022f355abe97a6b1dd00718865cafa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46782, "upload_time": "2015-08-11T08:35:29", "upload_time_iso_8601": "2015-08-11T08:35:29.447420Z", "url": "https://files.pythonhosted.org/packages/03/c3/32e3041b979fd0662223d8f6e8ca816c0773f6a6f8b0cf9aa4fa20885716/djangocms-blog-martin-0.5.1.dev3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:05 2020"}