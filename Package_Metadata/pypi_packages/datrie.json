{"info": {"author": "Mikhail Korobov", "author_email": "kmike84@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Programming Language :: Cython", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Linguistic"], "description": "datrie |travis| |appveyor|\n==========================\n\n.. |travis| image:: https://travis-ci.org/pytries/datrie.svg\n   :target: https://travis-ci.org/pytries/datrie\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/6bpvhllpjhlau7x0?svg=true\n   :target: https://ci.appveyor.com/project/superbobry/datrie\n\nSuper-fast, efficiently stored Trie for Python (2.x and 3.x).\nUses `libdatrie`_.\n\n.. _libdatrie: https://linux.thai.net/~thep/datrie/datrie.html\n\nInstallation\n============\n\n::\n\n    pip install datrie\n\nUsage\n=====\n\nCreate a new trie capable of storing items with lower-case ascii keys::\n\n    >>> import string\n    >>> import datrie\n    >>> trie = datrie.Trie(string.ascii_lowercase)\n\n``trie`` variable is a dict-like object that can have unicode keys of\ncertain ranges and Python objects as values.\n\nIn addition to implementing the mapping interface, tries facilitate\nfinding the items for a given prefix, and vice versa, finding the\nitems whose keys are prefixes of a given string. As a common special\ncase, finding the longest-prefix item is also supported.\n\n.. warning::\n\n    For efficiency you must define allowed character range(s) while\n    creating trie. ``datrie`` doesn't check if keys are in allowed\n    ranges at runtime, so be careful! Invalid keys are OK at lookup time\n    but values won't be stored correctly for such keys.\n\nAdd some values to it (datrie keys must be unicode; the examples\nare for Python 2.x)::\n\n    >>> trie[u'foo'] = 5\n    >>> trie[u'foobar'] = 10\n    >>> trie[u'bar'] = 'bar value'\n    >>> trie.setdefault(u'foobar', 15)\n    10\n\nCheck if u'foo' is in trie::\n\n    >>> u'foo' in trie\n    True\n\nGet a value::\n\n    >>> trie[u'foo']\n    5\n\nFind all prefixes of a word::\n\n    >>> trie.prefixes(u'foobarbaz')\n    [u'foo', u'foobar']\n\n    >>> trie.prefix_items(u'foobarbaz')\n    [(u'foo', 5), (u'foobar', 10)]\n\n    >>> trie.iter_prefixes(u'foobarbaz')\n    <generator object ...>\n\n    >>> trie.iter_prefix_items(u'foobarbaz')\n    <generator object ...>\n\nFind the longest prefix of a word::\n\n    >>> trie.longest_prefix(u'foo')\n    u'foo'\n\n    >>> trie.longest_prefix(u'foobarbaz')\n    u'foobar'\n\n    >>> trie.longest_prefix(u'gaz')\n    KeyError: u'gaz'\n\n    >>> trie.longest_prefix(u'gaz', default=u'vasia')\n    u'vasia'\n\n    >>> trie.longest_prefix_item(u'foobarbaz')\n    (u'foobar', 10)\n\nCheck if the trie has keys with a given prefix::\n\n    >>> trie.has_keys_with_prefix(u'fo')\n    True\n\n    >>> trie.has_keys_with_prefix(u'FO')\n    False\n\nGet all items with a given prefix from a trie::\n\n    >>> trie.keys(u'fo')\n    [u'foo', u'foobar']\n\n    >>> trie.items(u'ba')\n    [(u'bar', 'bar value')]\n\n    >>> trie.values(u'foob')\n    [10]\n\nGet all suffixes of certain word starting with a given prefix from a trie::\n\n    >>> trie.suffixes()\n    [u'pro', u'producer', u'producers', u'product', u'production', u'productivity', u'prof']\n    >>> trie.suffixes(u'prod')\n    [u'ucer', u'ucers', u'uct', u'uction', u'uctivity']\n\n\nSave & load a trie (values must be picklable)::\n\n    >>> trie.save('my.trie')\n    >>> trie2 = datrie.Trie.load('my.trie')\n\n\n\nTrie and BaseTrie\n=================\n\nThere are two Trie classes in datrie package: ``datrie.Trie`` and\n``datrie.BaseTrie``. ``datrie.BaseTrie`` is slightly faster and uses less\nmemory but it can store only integer numbers -2147483648 <= x <= 2147483647.\n``datrie.Trie`` is a bit slower but can store any Python object as a value.\n\nIf you don't need values or integer values are OK then use ``datrie.BaseTrie``::\n\n    import datrie\n    import string\n    trie = datrie.BaseTrie(string.ascii_lowercase)\n\nCustom iteration\n================\n\nIf the built-in trie methods don't fit you can use ``datrie.State`` and\n``datrie.Iterator`` to implement custom traversal.\n\n.. note::\n\n    If you use ``datrie.BaseTrie`` you need ``datrie.BaseState`` and\n    ``datrie.BaseIterator`` for custom traversal.\n\n\nFor example, let's find all suffixes of ``'fo'`` for our trie and get\nthe values::\n\n    >>> state = datrie.State(trie)\n    >>> state.walk(u'foo')\n    >>> it = datrie.Iterator(state)\n    >>> while it.next():\n    ...     print(it.key())\n    ...     print(it.data))\n    o\n    5\n    obar\n    10\n\nPerformance\n===========\n\nPerformance is measured for ``datrie.Trie`` against Python's dict with\n100k unique unicode words (English and Russian) as keys and '1' numbers\nas values.\n\n``datrie.Trie`` uses about 5M memory for 100k words; Python's dict\nuses about 22M for this according to my unscientific tests.\n\nThis trie implementation is 2-6 times slower than python's dict\non __getitem__. Benchmark results (macbook air i5 1.8GHz,\n\"1.000M ops/sec\" == \"1 000 000 operations per second\")::\n\n    Python 2.6:\n    dict __getitem__: 7.107M ops/sec\n    trie __getitem__: 2.478M ops/sec\n\n    Python 2.7:\n    dict __getitem__: 6.550M ops/sec\n    trie __getitem__: 2.474M ops/sec\n\n    Python 3.2:\n    dict __getitem__: 8.185M ops/sec\n    trie __getitem__: 2.684M ops/sec\n\n    Python 3.3:\n    dict __getitem__: 7.050M ops/sec\n    trie __getitem__: 2.755M ops/sec\n\nLooking for prefixes of a given word is almost as fast as\n``__getitem__`` (results are for Python 3.3)::\n\n    trie.iter_prefix_items (hits):      0.461M ops/sec\n    trie.prefix_items (hits):           0.743M ops/sec\n    trie.prefix_items loop (hits):      0.629M ops/sec\n    trie.iter_prefixes (hits):          0.759M ops/sec\n    trie.iter_prefixes (misses):        1.538M ops/sec\n    trie.iter_prefixes (mixed):         1.359M ops/sec\n    trie.has_keys_with_prefix (hits):   1.896M ops/sec\n    trie.has_keys_with_prefix (misses): 2.590M ops/sec\n    trie.longest_prefix (hits):         1.710M ops/sec\n    trie.longest_prefix (misses):       1.506M ops/sec\n    trie.longest_prefix (mixed):        1.520M ops/sec\n    trie.longest_prefix_item (hits):    1.276M ops/sec\n    trie.longest_prefix_item (misses):  1.292M ops/sec\n    trie.longest_prefix_item (mixed):   1.379M ops/sec\n\nLooking for all words starting with a given prefix is mostly limited\nby overall result count (this can be improved in future because a\nlot of time is spent decoding strings from utf_32_le to Python's\nunicode)::\n\n    trie.items(prefix=\"xxx\"), avg_len(res)==415:        0.609K ops/sec\n    trie.keys(prefix=\"xxx\"), avg_len(res)==415:         0.642K ops/sec\n    trie.values(prefix=\"xxx\"), avg_len(res)==415:       4.974K ops/sec\n    trie.items(prefix=\"xxxxx\"), avg_len(res)==17:       14.781K ops/sec\n    trie.keys(prefix=\"xxxxx\"), avg_len(res)==17:        15.766K ops/sec\n    trie.values(prefix=\"xxxxx\"), avg_len(res)==17:      96.456K ops/sec\n    trie.items(prefix=\"xxxxxxxx\"), avg_len(res)==3:     75.165K ops/sec\n    trie.keys(prefix=\"xxxxxxxx\"), avg_len(res)==3:      77.225K ops/sec\n    trie.values(prefix=\"xxxxxxxx\"), avg_len(res)==3:    320.755K ops/sec\n    trie.items(prefix=\"xxxxx..xx\"), avg_len(res)==1.4:  173.591K ops/sec\n    trie.keys(prefix=\"xxxxx..xx\"), avg_len(res)==1.4:   180.678K ops/sec\n    trie.values(prefix=\"xxxxx..xx\"), avg_len(res)==1.4: 503.392K ops/sec\n    trie.items(prefix=\"xxx\"), NON_EXISTING:             2023.647K ops/sec\n    trie.keys(prefix=\"xxx\"), NON_EXISTING:              1976.928K ops/sec\n    trie.values(prefix=\"xxx\"), NON_EXISTING:            2060.372K ops/sec\n\nRandom insert time is very slow compared to dict, this is the limitation\nof double-array tries; updates are quite fast. If you want to build a trie,\nconsider sorting keys before the insertion::\n\n    dict __setitem__ (updates):            6.497M ops/sec\n    trie __setitem__ (updates):            2.633M ops/sec\n    dict __setitem__ (inserts, random):    5.808M ops/sec\n    trie __setitem__ (inserts, random):    0.053M ops/sec\n    dict __setitem__ (inserts, sorted):    5.749M ops/sec\n    trie __setitem__ (inserts, sorted):    0.624M ops/sec\n    dict setdefault (updates):             3.455M ops/sec\n    trie setdefault (updates):             1.910M ops/sec\n    dict setdefault (inserts):             3.466M ops/sec\n    trie setdefault (inserts):             0.053M ops/sec\n\nOther results (note that ``len(trie)`` is currently implemented\nusing trie traversal)::\n\n    dict __contains__ (hits):    6.801M ops/sec\n    trie __contains__ (hits):    2.816M ops/sec\n    dict __contains__ (misses):  5.470M ops/sec\n    trie __contains__ (misses):  4.224M ops/sec\n    dict __len__:                334336.269 ops/sec\n    trie __len__:                22.900 ops/sec\n    dict values():               406.507 ops/sec\n    trie values():               20.864 ops/sec\n    dict keys():                 189.298 ops/sec\n    trie keys():                 2.773 ops/sec\n    dict items():                48.734 ops/sec\n    trie items():                2.611 ops/sec\n\nPlease take this benchmark results with a grain of salt; this\nis a very simple benchmark and may not cover your use case.\n\nCurrent Limitations\n===================\n\n* keys must be unicode (no implicit conversion for byte strings\n  under Python 2.x, sorry);\n* there are no iterator versions of keys/values/items (this is not\n  implemented yet);\n* it is painfully slow and maybe buggy under pypy;\n* library is not tested with narrow Python builds.\n\nContributing\n============\n\nDevelopment happens at github: https://github.com/pytries/datrie.\n\nFeel free to submit ideas, bugs, pull requests.\n\nRunning tests and benchmarks\n----------------------------\n\nMake sure `tox`_ is installed and run\n\n::\n\n    $ tox\n\nfrom the source checkout. Tests should pass under Python 2.7 and 3.4+.\n\n::\n\n    $ tox -c tox-bench.ini\n\nruns benchmarks.\n\nIf you've changed anything in the source code then\nmake sure `cython`_ is installed and run\n\n::\n\n    $ update_c.sh\n\nbefore each ``tox`` command.\n\nPlease note that benchmarks are not included in the release\ntar.gz's because benchmark data is large and this\nsaves a lot of bandwidth; use source checkouts from\ngithub or bitbucket for the benchmarks.\n\n.. _cython: https://cython.org/\n.. _tox: https://tox.readthedocs.io/\n\nAuthors & Contributors\n----------------------\n\nSee https://github.com/pytries/datrie/graphs/contributors.\n\nThis module is based on `libdatrie`_ C library by Theppitak Karoonboonyanan\nand is inspired by `fast_trie`_ Ruby bindings, `PyTrie`_ pure\nPython implementation and `Tree::Trie`_ Perl implementation;\nsome docs and API ideas are borrowed from these projects.\n\n.. _fast_trie: https://github.com/tyler/trie\n.. _PyTrie: https://github.com/gsakkis/pytrie\n.. _Tree::Trie: https://metacpan.org/pod/release/AVIF/Tree-Trie-1.9/Trie.pm\n\nLicense\n=======\n\nLicensed under LGPL v2.1.\nCHANGES\n=======\n\n0.8.2 (2020-03-25)\n------------------\n* Future-proof Python support by making cython a build time dependency and\n  removing cython generated c files from the repo (and sdist).\n* Fix collections.abc.MutableMapping import\n* CI and test updates\n* Adjust library name to unbreak some linkers\n\n0.8.1 (skipped)\n---------------\nThis version intentionally skipped\n\n0.8 (2019-07-03)\n----------------\n* Python 3.7 compatibility; extension is rebuilt with Cython 0.29.11.\n* Trie.get function;\n* Python 2.6 and 3.3 support is dropped;\n* removed patch to libdatrie which is no longer required;\n* testing and CI fixes.\n\n0.7.1 (2016-03-12)\n------------------\n\n* updated the bundled C library to version 0.2.9;\n* implemented ``Trie.__len__`` in terms of ``trie_enumerate``;\n* rebuilt Cython wrapper with Cython 0.23.4;\n* changed ``Trie`` to implement ``collections.abc.MutableMapping``;\n* fixed ``Trie`` pickling, which segfaulted on Python2.X.\n\n0.7 (2014-02-18)\n----------------\n\n* bundled libdatrie C library is updated to version 0.2.8;\n* new `.suffixes()` method (thanks Ahmed T. Youssef);\n* wrapper is rebuilt with Cython 0.20.1.\n\n0.6.1 (2013-09-21)\n------------------\n\n* fixed build for Visual Studio (thanks Gabi Davar).\n\n0.6 (2013-07-09)\n----------------\n\n* datrie is rebuilt with Cython 0.19.1;\n* ``iter_prefix_values``, ``prefix_values`` and ``longest_prefix_value``\n  methods for ``datrie.BaseTrie`` and ``datrie.Trie`` (thanks Jared Suttles).\n\n0.5.1 (2013-01-30)\n------------------\n\n* Recently introduced memory leak in ``longest_prefix``\n  and ``longest_prefix_item`` is fixed.\n\n0.5 (2013-01-29)\n----------------\n\n* ``longest_prefix`` and ``longest_prefix_item`` methods are fixed;\n* datrie is rebuilt with Cython 0.18;\n* misleading benchmark results in README are fixed;\n* State._walk is renamed to State.walk_char.\n\n0.4.2 (2012-09-02)\n------------------\n\n* Update to latest libdatrie; this makes ``.keys()`` method a bit slower but\n  removes a keys length limitation.\n\n0.4.1 (2012-07-29)\n------------------\n\n* cPickle is used for saving/loading ``datrie.Trie`` if it is available.\n\n0.4 (2012-07-27)\n----------------\n\n* ``libdatrie`` improvements and bugfixes, including C iterator API support;\n* custom iteration support using ``datrie.State`` and ``datrie.Iterator``.\n* speed improvements: ``__length__``, ``keys``, ``values`` and\n  ``items`` methods should be up to 2x faster.\n* keys longer than 32768 are not supported in this release.\n\n\n0.3 (2012-07-21)\n----------------\n\nThere are no new features or speed improvements in this release.\n\n* ``datrie.new`` is deprecated; use ``datrie.Trie`` with the same arguments;\n* small test & benchmark improvements.\n\n0.2 (2012-07-16)\n----------------\n\n* ``datrie.Trie`` items can have any Python object as a value\n  (``Trie`` from 0.1.x becomes ``datrie.BaseTrie``);\n* ``longest_prefix`` and ``longest_prefix_items`` are fixed;\n* ``save`` & ``load`` are rewritten;\n* ``setdefault`` method.\n\n\n0.1.1 (2012-07-13)\n------------------\n\n* Windows support (upstream libdatrie changes are merged);\n* license is changed from LGPL v3 to LGPL v2.1 to match the libdatrie license.\n\n0.1 (2012-07-12)\n----------------\n\nInitial release.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kmike/datrie", "keywords": "", "license": "LGPLv2+", "maintainer": "", "maintainer_email": "", "name": "datrie", "package_url": "https://pypi.org/project/datrie/", "platform": "", "project_url": "https://pypi.org/project/datrie/", "project_urls": {"Homepage": "https://github.com/kmike/datrie"}, "release_url": "https://pypi.org/project/datrie/0.8.2/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Super-fast, efficiently stored Trie for Python.", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"datrie-travis-appveyor\">\n<h2>datrie <a href=\"https://travis-ci.org/pytries/datrie\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f153034d2379ada11fdf71dca7a9d2f24a598834/68747470733a2f2f7472617669732d63692e6f72672f707974726965732f6461747269652e737667\"></a> <a href=\"https://ci.appveyor.com/project/superbobry/datrie\" rel=\"nofollow\"><img alt=\"appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb1008915b29d5a0f5af5f382fd7b77d2ab56c8d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f36627076686c6c706a686c61753778303f7376673d74727565\"></a></h2>\n<p>Super-fast, efficiently stored Trie for Python (2.x and 3.x).\nUses <a href=\"https://linux.thai.net/~thep/datrie/datrie.html\" rel=\"nofollow\">libdatrie</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install datrie\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a new trie capable of storing items with lower-case ascii keys:</p>\n<pre>&gt;&gt;&gt; import string\n&gt;&gt;&gt; import datrie\n&gt;&gt;&gt; trie = datrie.Trie(string.ascii_lowercase)\n</pre>\n<p><tt>trie</tt> variable is a dict-like object that can have unicode keys of\ncertain ranges and Python objects as values.</p>\n<p>In addition to implementing the mapping interface, tries facilitate\nfinding the items for a given prefix, and vice versa, finding the\nitems whose keys are prefixes of a given string. As a common special\ncase, finding the longest-prefix item is also supported.</p>\n<div>\n<p>Warning</p>\n<p>For efficiency you must define allowed character range(s) while\ncreating trie. <tt>datrie</tt> doesn\u2019t check if keys are in allowed\nranges at runtime, so be careful! Invalid keys are OK at lookup time\nbut values won\u2019t be stored correctly for such keys.</p>\n</div>\n<p>Add some values to it (datrie keys must be unicode; the examples\nare for Python 2.x):</p>\n<pre>&gt;&gt;&gt; trie[u'foo'] = 5\n&gt;&gt;&gt; trie[u'foobar'] = 10\n&gt;&gt;&gt; trie[u'bar'] = 'bar value'\n&gt;&gt;&gt; trie.setdefault(u'foobar', 15)\n10\n</pre>\n<p>Check if u\u2019foo\u2019 is in trie:</p>\n<pre>&gt;&gt;&gt; u'foo' in trie\nTrue\n</pre>\n<p>Get a value:</p>\n<pre>&gt;&gt;&gt; trie[u'foo']\n5\n</pre>\n<p>Find all prefixes of a word:</p>\n<pre>&gt;&gt;&gt; trie.prefixes(u'foobarbaz')\n[u'foo', u'foobar']\n\n&gt;&gt;&gt; trie.prefix_items(u'foobarbaz')\n[(u'foo', 5), (u'foobar', 10)]\n\n&gt;&gt;&gt; trie.iter_prefixes(u'foobarbaz')\n&lt;generator object ...&gt;\n\n&gt;&gt;&gt; trie.iter_prefix_items(u'foobarbaz')\n&lt;generator object ...&gt;\n</pre>\n<p>Find the longest prefix of a word:</p>\n<pre>&gt;&gt;&gt; trie.longest_prefix(u'foo')\nu'foo'\n\n&gt;&gt;&gt; trie.longest_prefix(u'foobarbaz')\nu'foobar'\n\n&gt;&gt;&gt; trie.longest_prefix(u'gaz')\nKeyError: u'gaz'\n\n&gt;&gt;&gt; trie.longest_prefix(u'gaz', default=u'vasia')\nu'vasia'\n\n&gt;&gt;&gt; trie.longest_prefix_item(u'foobarbaz')\n(u'foobar', 10)\n</pre>\n<p>Check if the trie has keys with a given prefix:</p>\n<pre>&gt;&gt;&gt; trie.has_keys_with_prefix(u'fo')\nTrue\n\n&gt;&gt;&gt; trie.has_keys_with_prefix(u'FO')\nFalse\n</pre>\n<p>Get all items with a given prefix from a trie:</p>\n<pre>&gt;&gt;&gt; trie.keys(u'fo')\n[u'foo', u'foobar']\n\n&gt;&gt;&gt; trie.items(u'ba')\n[(u'bar', 'bar value')]\n\n&gt;&gt;&gt; trie.values(u'foob')\n[10]\n</pre>\n<p>Get all suffixes of certain word starting with a given prefix from a trie:</p>\n<pre>&gt;&gt;&gt; trie.suffixes()\n[u'pro', u'producer', u'producers', u'product', u'production', u'productivity', u'prof']\n&gt;&gt;&gt; trie.suffixes(u'prod')\n[u'ucer', u'ucers', u'uct', u'uction', u'uctivity']\n</pre>\n<p>Save &amp; load a trie (values must be picklable):</p>\n<pre>&gt;&gt;&gt; trie.save('my.trie')\n&gt;&gt;&gt; trie2 = datrie.Trie.load('my.trie')\n</pre>\n</div>\n<div id=\"trie-and-basetrie\">\n<h2>Trie and BaseTrie</h2>\n<p>There are two Trie classes in datrie package: <tt>datrie.Trie</tt> and\n<tt>datrie.BaseTrie</tt>. <tt>datrie.BaseTrie</tt> is slightly faster and uses less\nmemory but it can store only integer numbers -2147483648 &lt;= x &lt;= 2147483647.\n<tt>datrie.Trie</tt> is a bit slower but can store any Python object as a value.</p>\n<p>If you don\u2019t need values or integer values are OK then use <tt>datrie.BaseTrie</tt>:</p>\n<pre>import datrie\nimport string\ntrie = datrie.BaseTrie(string.ascii_lowercase)\n</pre>\n</div>\n<div id=\"custom-iteration\">\n<h2>Custom iteration</h2>\n<p>If the built-in trie methods don\u2019t fit you can use <tt>datrie.State</tt> and\n<tt>datrie.Iterator</tt> to implement custom traversal.</p>\n<div>\n<p>Note</p>\n<p>If you use <tt>datrie.BaseTrie</tt> you need <tt>datrie.BaseState</tt> and\n<tt>datrie.BaseIterator</tt> for custom traversal.</p>\n</div>\n<p>For example, let\u2019s find all suffixes of <tt>'fo'</tt> for our trie and get\nthe values:</p>\n<pre>&gt;&gt;&gt; state = datrie.State(trie)\n&gt;&gt;&gt; state.walk(u'foo')\n&gt;&gt;&gt; it = datrie.Iterator(state)\n&gt;&gt;&gt; while it.next():\n...     print(it.key())\n...     print(it.data))\no\n5\nobar\n10\n</pre>\n</div>\n<div id=\"performance\">\n<h2>Performance</h2>\n<p>Performance is measured for <tt>datrie.Trie</tt> against Python\u2019s dict with\n100k unique unicode words (English and Russian) as keys and \u20181\u2019 numbers\nas values.</p>\n<p><tt>datrie.Trie</tt> uses about 5M memory for 100k words; Python\u2019s dict\nuses about 22M for this according to my unscientific tests.</p>\n<p>This trie implementation is 2-6 times slower than python\u2019s dict\non __getitem__. Benchmark results (macbook air i5 1.8GHz,\n\u201c1.000M ops/sec\u201d == \u201c1 000 000 operations per second\u201d):</p>\n<pre>Python 2.6:\ndict __getitem__: 7.107M ops/sec\ntrie __getitem__: 2.478M ops/sec\n\nPython 2.7:\ndict __getitem__: 6.550M ops/sec\ntrie __getitem__: 2.474M ops/sec\n\nPython 3.2:\ndict __getitem__: 8.185M ops/sec\ntrie __getitem__: 2.684M ops/sec\n\nPython 3.3:\ndict __getitem__: 7.050M ops/sec\ntrie __getitem__: 2.755M ops/sec\n</pre>\n<p>Looking for prefixes of a given word is almost as fast as\n<tt>__getitem__</tt> (results are for Python 3.3):</p>\n<pre>trie.iter_prefix_items (hits):      0.461M ops/sec\ntrie.prefix_items (hits):           0.743M ops/sec\ntrie.prefix_items loop (hits):      0.629M ops/sec\ntrie.iter_prefixes (hits):          0.759M ops/sec\ntrie.iter_prefixes (misses):        1.538M ops/sec\ntrie.iter_prefixes (mixed):         1.359M ops/sec\ntrie.has_keys_with_prefix (hits):   1.896M ops/sec\ntrie.has_keys_with_prefix (misses): 2.590M ops/sec\ntrie.longest_prefix (hits):         1.710M ops/sec\ntrie.longest_prefix (misses):       1.506M ops/sec\ntrie.longest_prefix (mixed):        1.520M ops/sec\ntrie.longest_prefix_item (hits):    1.276M ops/sec\ntrie.longest_prefix_item (misses):  1.292M ops/sec\ntrie.longest_prefix_item (mixed):   1.379M ops/sec\n</pre>\n<p>Looking for all words starting with a given prefix is mostly limited\nby overall result count (this can be improved in future because a\nlot of time is spent decoding strings from utf_32_le to Python\u2019s\nunicode):</p>\n<pre>trie.items(prefix=\"xxx\"), avg_len(res)==415:        0.609K ops/sec\ntrie.keys(prefix=\"xxx\"), avg_len(res)==415:         0.642K ops/sec\ntrie.values(prefix=\"xxx\"), avg_len(res)==415:       4.974K ops/sec\ntrie.items(prefix=\"xxxxx\"), avg_len(res)==17:       14.781K ops/sec\ntrie.keys(prefix=\"xxxxx\"), avg_len(res)==17:        15.766K ops/sec\ntrie.values(prefix=\"xxxxx\"), avg_len(res)==17:      96.456K ops/sec\ntrie.items(prefix=\"xxxxxxxx\"), avg_len(res)==3:     75.165K ops/sec\ntrie.keys(prefix=\"xxxxxxxx\"), avg_len(res)==3:      77.225K ops/sec\ntrie.values(prefix=\"xxxxxxxx\"), avg_len(res)==3:    320.755K ops/sec\ntrie.items(prefix=\"xxxxx..xx\"), avg_len(res)==1.4:  173.591K ops/sec\ntrie.keys(prefix=\"xxxxx..xx\"), avg_len(res)==1.4:   180.678K ops/sec\ntrie.values(prefix=\"xxxxx..xx\"), avg_len(res)==1.4: 503.392K ops/sec\ntrie.items(prefix=\"xxx\"), NON_EXISTING:             2023.647K ops/sec\ntrie.keys(prefix=\"xxx\"), NON_EXISTING:              1976.928K ops/sec\ntrie.values(prefix=\"xxx\"), NON_EXISTING:            2060.372K ops/sec\n</pre>\n<p>Random insert time is very slow compared to dict, this is the limitation\nof double-array tries; updates are quite fast. If you want to build a trie,\nconsider sorting keys before the insertion:</p>\n<pre>dict __setitem__ (updates):            6.497M ops/sec\ntrie __setitem__ (updates):            2.633M ops/sec\ndict __setitem__ (inserts, random):    5.808M ops/sec\ntrie __setitem__ (inserts, random):    0.053M ops/sec\ndict __setitem__ (inserts, sorted):    5.749M ops/sec\ntrie __setitem__ (inserts, sorted):    0.624M ops/sec\ndict setdefault (updates):             3.455M ops/sec\ntrie setdefault (updates):             1.910M ops/sec\ndict setdefault (inserts):             3.466M ops/sec\ntrie setdefault (inserts):             0.053M ops/sec\n</pre>\n<p>Other results (note that <tt>len(trie)</tt> is currently implemented\nusing trie traversal):</p>\n<pre>dict __contains__ (hits):    6.801M ops/sec\ntrie __contains__ (hits):    2.816M ops/sec\ndict __contains__ (misses):  5.470M ops/sec\ntrie __contains__ (misses):  4.224M ops/sec\ndict __len__:                334336.269 ops/sec\ntrie __len__:                22.900 ops/sec\ndict values():               406.507 ops/sec\ntrie values():               20.864 ops/sec\ndict keys():                 189.298 ops/sec\ntrie keys():                 2.773 ops/sec\ndict items():                48.734 ops/sec\ntrie items():                2.611 ops/sec\n</pre>\n<p>Please take this benchmark results with a grain of salt; this\nis a very simple benchmark and may not cover your use case.</p>\n</div>\n<div id=\"current-limitations\">\n<h2>Current Limitations</h2>\n<ul>\n<li>keys must be unicode (no implicit conversion for byte strings\nunder Python 2.x, sorry);</li>\n<li>there are no iterator versions of keys/values/items (this is not\nimplemented yet);</li>\n<li>it is painfully slow and maybe buggy under pypy;</li>\n<li>library is not tested with narrow Python builds.</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Development happens at github: <a href=\"https://github.com/pytries/datrie\" rel=\"nofollow\">https://github.com/pytries/datrie</a>.</p>\n<p>Feel free to submit ideas, bugs, pull requests.</p>\n<div id=\"running-tests-and-benchmarks\">\n<h3>Running tests and benchmarks</h3>\n<p>Make sure <a href=\"https://tox.readthedocs.io/\" rel=\"nofollow\">tox</a> is installed and run</p>\n<pre>$ tox\n</pre>\n<p>from the source checkout. Tests should pass under Python 2.7 and 3.4+.</p>\n<pre>$ tox -c tox-bench.ini\n</pre>\n<p>runs benchmarks.</p>\n<p>If you\u2019ve changed anything in the source code then\nmake sure <a href=\"https://cython.org/\" rel=\"nofollow\">cython</a> is installed and run</p>\n<pre>$ update_c.sh\n</pre>\n<p>before each <tt>tox</tt> command.</p>\n<p>Please note that benchmarks are not included in the release\ntar.gz\u2019s because benchmark data is large and this\nsaves a lot of bandwidth; use source checkouts from\ngithub or bitbucket for the benchmarks.</p>\n</div>\n<div id=\"authors-contributors\">\n<h3>Authors &amp; Contributors</h3>\n<p>See <a href=\"https://github.com/pytries/datrie/graphs/contributors\" rel=\"nofollow\">https://github.com/pytries/datrie/graphs/contributors</a>.</p>\n<p>This module is based on <a href=\"https://linux.thai.net/~thep/datrie/datrie.html\" rel=\"nofollow\">libdatrie</a> C library by Theppitak Karoonboonyanan\nand is inspired by <a href=\"https://github.com/tyler/trie\" rel=\"nofollow\">fast_trie</a> Ruby bindings, <a href=\"https://github.com/gsakkis/pytrie\" rel=\"nofollow\">PyTrie</a> pure\nPython implementation and <a href=\"https://metacpan.org/pod/release/AVIF/Tree-Trie-1.9/Trie.pm\" rel=\"nofollow\">Tree::Trie</a> Perl implementation;\nsome docs and API ideas are borrowed from these projects.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Licensed under LGPL v2.1.\nCHANGES\n=======</p>\n<div id=\"id1\">\n<h3>0.8.2 (2020-03-25)</h3>\n<ul>\n<li>Future-proof Python support by making cython a build time dependency and\nremoving cython generated c files from the repo (and sdist).</li>\n<li>Fix collections.abc.MutableMapping import</li>\n<li>CI and test updates</li>\n<li>Adjust library name to unbreak some linkers</li>\n</ul>\n</div>\n<div id=\"skipped\">\n<h3>0.8.1 (skipped)</h3>\n<p>This version intentionally skipped</p>\n</div>\n<div id=\"id2\">\n<h3>0.8 (2019-07-03)</h3>\n<ul>\n<li>Python 3.7 compatibility; extension is rebuilt with Cython 0.29.11.</li>\n<li>Trie.get function;</li>\n<li>Python 2.6 and 3.3 support is dropped;</li>\n<li>removed patch to libdatrie which is no longer required;</li>\n<li>testing and CI fixes.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.7.1 (2016-03-12)</h3>\n<ul>\n<li>updated the bundled C library to version 0.2.9;</li>\n<li>implemented <tt>Trie.__len__</tt> in terms of <tt>trie_enumerate</tt>;</li>\n<li>rebuilt Cython wrapper with Cython 0.23.4;</li>\n<li>changed <tt>Trie</tt> to implement <tt>collections.abc.MutableMapping</tt>;</li>\n<li>fixed <tt>Trie</tt> pickling, which segfaulted on Python2.X.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.7 (2014-02-18)</h3>\n<ul>\n<li>bundled libdatrie C library is updated to version 0.2.8;</li>\n<li>new <cite>.suffixes()</cite> method (thanks Ahmed T. Youssef);</li>\n<li>wrapper is rebuilt with Cython 0.20.1.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.6.1 (2013-09-21)</h3>\n<ul>\n<li>fixed build for Visual Studio (thanks Gabi Davar).</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.6 (2013-07-09)</h3>\n<ul>\n<li>datrie is rebuilt with Cython 0.19.1;</li>\n<li><tt>iter_prefix_values</tt>, <tt>prefix_values</tt> and <tt>longest_prefix_value</tt>\nmethods for <tt>datrie.BaseTrie</tt> and <tt>datrie.Trie</tt> (thanks Jared Suttles).</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.5.1 (2013-01-30)</h3>\n<ul>\n<li>Recently introduced memory leak in <tt>longest_prefix</tt>\nand <tt>longest_prefix_item</tt> is fixed.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.5 (2013-01-29)</h3>\n<ul>\n<li><tt>longest_prefix</tt> and <tt>longest_prefix_item</tt> methods are fixed;</li>\n<li>datrie is rebuilt with Cython 0.18;</li>\n<li>misleading benchmark results in README are fixed;</li>\n<li>State._walk is renamed to State.walk_char.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.4.2 (2012-09-02)</h3>\n<ul>\n<li>Update to latest libdatrie; this makes <tt>.keys()</tt> method a bit slower but\nremoves a keys length limitation.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.4.1 (2012-07-29)</h3>\n<ul>\n<li>cPickle is used for saving/loading <tt>datrie.Trie</tt> if it is available.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.4 (2012-07-27)</h3>\n<ul>\n<li><tt>libdatrie</tt> improvements and bugfixes, including C iterator API support;</li>\n<li>custom iteration support using <tt>datrie.State</tt> and <tt>datrie.Iterator</tt>.</li>\n<li>speed improvements: <tt>__length__</tt>, <tt>keys</tt>, <tt>values</tt> and\n<tt>items</tt> methods should be up to 2x faster.</li>\n<li>keys longer than 32768 are not supported in this release.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.3 (2012-07-21)</h3>\n<p>There are no new features or speed improvements in this release.</p>\n<ul>\n<li><tt>datrie.new</tt> is deprecated; use <tt>datrie.Trie</tt> with the same arguments;</li>\n<li>small test &amp; benchmark improvements.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.2 (2012-07-16)</h3>\n<ul>\n<li><tt>datrie.Trie</tt> items can have any Python object as a value\n(<tt>Trie</tt> from 0.1.x becomes <tt>datrie.BaseTrie</tt>);</li>\n<li><tt>longest_prefix</tt> and <tt>longest_prefix_items</tt> are fixed;</li>\n<li><tt>save</tt> &amp; <tt>load</tt> are rewritten;</li>\n<li><tt>setdefault</tt> method.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.1.1 (2012-07-13)</h3>\n<ul>\n<li>Windows support (upstream libdatrie changes are merged);</li>\n<li>license is changed from LGPL v3 to LGPL v2.1 to match the libdatrie license.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.1 (2012-07-12)</h3>\n<p>Initial release.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6887341, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "77824bcb15c479c7bb386a7f5dadeae0", "sha256": "ee4c827f1dd08fa5b1951f1a42e283257a18e91f4ef23ad972755df176007707"}, "downloads": -1, "filename": "datrie-0.1.tar.gz", "has_sig": false, "md5_digest": "77824bcb15c479c7bb386a7f5dadeae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97789, "upload_time": "2012-07-12T01:35:05", "upload_time_iso_8601": "2012-07-12T01:35:05.714834Z", "url": "https://files.pythonhosted.org/packages/80/ba/9e794e7875d6bd13f714f0209b729e853e75834ad2405d305a1e5a8b9f08/datrie-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7daed283e0fd0a3e61150a62d20913d9", "sha256": "b66e9500067cc0916ef530d5de6a7cac5a0e509e1b07d49becb48caeafd05742"}, "downloads": -1, "filename": "datrie-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7daed283e0fd0a3e61150a62d20913d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106988, "upload_time": "2012-07-13T12:35:51", "upload_time_iso_8601": "2012-07-13T12:35:51.181434Z", "url": "https://files.pythonhosted.org/packages/e8/5e/202ef3bea26fdd15730304236b292702d8cca3455bbba2e9870247df11c3/datrie-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "9d639ac1b16e9b066fc2c1a153f7015a", "sha256": "e908cf61751355c847a666fd85cc77022e2b24d35b3ea8c67f23b2d6e05ed232"}, "downloads": -1, "filename": "datrie-0.2.tar.gz", "has_sig": false, "md5_digest": "9d639ac1b16e9b066fc2c1a153f7015a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127948, "upload_time": "2012-07-16T15:50:29", "upload_time_iso_8601": "2012-07-16T15:50:29.325961Z", "url": "https://files.pythonhosted.org/packages/6b/3c/fbbb87fb62bb0b4ab737eb6c58c24764f42eb5a09771dc3e0dafba95aa44/datrie-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "83dce7b4af9c298b26b01445ae823b65", "sha256": "7d8710c0f2c29e13ff66546769d0910cf0c196d85764e8a04b9508e596714dc9"}, "downloads": -1, "filename": "datrie-0.3.tar.gz", "has_sig": false, "md5_digest": "83dce7b4af9c298b26b01445ae823b65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129794, "upload_time": "2012-07-21T12:21:13", "upload_time_iso_8601": "2012-07-21T12:21:13.294603Z", "url": "https://files.pythonhosted.org/packages/6e/29/76bf1a3b789829146741528b15da673615d404862da055dddf5f38dc2207/datrie-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b09984e60add19cbb92dbeb9c07cc49f", "sha256": "6e7b8d0c37af7c46f528659031f0bda9f7a0d5fb193767bb01c24cf7afafb433"}, "downloads": -1, "filename": "datrie-0.4.tar.gz", "has_sig": false, "md5_digest": "b09984e60add19cbb92dbeb9c07cc49f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141520, "upload_time": "2012-07-27T02:30:16", "upload_time_iso_8601": "2012-07-27T02:30:16.760920Z", "url": "https://files.pythonhosted.org/packages/c8/9f/0988135482b26795c4dbdd9930d2557f73561eb29e07bca31470af6ec451/datrie-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "39da2a099dfab140aed369e150e58a16", "sha256": "8347959d35adeaeb765783cae0567168e338198f3121d2a049bdbd0d69d075ee"}, "downloads": -1, "filename": "datrie-0.4.1.tar.gz", "has_sig": false, "md5_digest": "39da2a099dfab140aed369e150e58a16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142143, "upload_time": "2012-07-29T13:02:42", "upload_time_iso_8601": "2012-07-29T13:02:42.015039Z", "url": "https://files.pythonhosted.org/packages/b3/05/26563815d635c00e5eeb51b2c16fa7401e51cf168574e84670d7915c066e/datrie-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "305b3228576debbce00862b738452848", "sha256": "9e2d3c7d8d078f4e00f02d33ca7413466e34ec3c5d7a18b1ddb0ae3d3df4ad14"}, "downloads": -1, "filename": "datrie-0.4.2.tar.gz", "has_sig": false, "md5_digest": "305b3228576debbce00862b738452848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142848, "upload_time": "2012-09-02T15:12:41", "upload_time_iso_8601": "2012-09-02T15:12:41.894829Z", "url": "https://files.pythonhosted.org/packages/ff/14/24e51b72e84509088d19f07653fa12b8df13d969abaa3b6feae50c218e16/datrie-0.4.2.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "858c2e1e478cce38e6c55cdc77f68347", "sha256": "7d46ab41c42dc6cdcfb304469c3ffdeaebf614106ae5f8a4dcd7fb5232cef487"}, "downloads": -1, "filename": "datrie-0.5.tar.gz", "has_sig": false, "md5_digest": "858c2e1e478cce38e6c55cdc77f68347", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143532, "upload_time": "2013-01-29T10:54:12", "upload_time_iso_8601": "2013-01-29T10:54:12.310582Z", "url": "https://files.pythonhosted.org/packages/eb/d0/a2507a4a8cba2e7565114b85abbe5fc7e398aa91126add7dcdbfb3511639/datrie-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "88b0de1213e3f675169f5ee9b867ad83", "sha256": "d9bb6cb5a3803dacc7cdaa9938cb0d2e3a59c77b809247676239e198a83849db"}, "downloads": -1, "filename": "datrie-0.5.1.tar.gz", "has_sig": false, "md5_digest": "88b0de1213e3f675169f5ee9b867ad83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143511, "upload_time": "2013-01-29T19:25:35", "upload_time_iso_8601": "2013-01-29T19:25:35.677208Z", "url": "https://files.pythonhosted.org/packages/5b/f5/7a0ef4252bd98c18b599e4353e9ef37f8b4e07a84a8b9bc84b0f58fb23af/datrie-0.5.1.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "fe669f1a40ce63a2253ae35750e13fff", "sha256": "ca37aea5ea11e83427c43f4c1f89cc5746022d7ab82a0554dffdbc3f98cdadd3"}, "downloads": -1, "filename": "datrie-0.6.tar.gz", "has_sig": false, "md5_digest": "fe669f1a40ce63a2253ae35750e13fff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154507, "upload_time": "2013-07-09T09:01:15", "upload_time_iso_8601": "2013-07-09T09:01:15.362213Z", "url": "https://files.pythonhosted.org/packages/1f/8b/fbd9d8a0ece8519322f1e6c37036e9590f6ec5b6574b8f3d6ae1254f18c7/datrie-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "3674071eba48d90206116f3c705fa927", "sha256": "dfcc69552a9986ab6858d07b4dfe0c9face5b03e75303f27d22c8e07c03d17ff"}, "downloads": -1, "filename": "datrie-0.6.1.tar.gz", "has_sig": false, "md5_digest": "3674071eba48d90206116f3c705fa927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154675, "upload_time": "2013-09-20T22:09:02", "upload_time_iso_8601": "2013-09-20T22:09:02.092719Z", "url": "https://files.pythonhosted.org/packages/c2/37/5ef1e6ce5f959724c6041a2c1b29cac20a9f80455fe50f8872c27094a8b7/datrie-0.6.1.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "d3ffdf929368c64ef6b67a2ca67c3516", "sha256": "47f0d607b0cc6ce2c2193040421d92e5cdf94d4deca567af5317d4e1365e6267"}, "downloads": -1, "filename": "datrie-0.7.tar.gz", "has_sig": false, "md5_digest": "d3ffdf929368c64ef6b67a2ca67c3516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165986, "upload_time": "2014-02-17T22:43:12", "upload_time_iso_8601": "2014-02-17T22:43:12.907289Z", "url": "https://files.pythonhosted.org/packages/c9/30/380db17fbb5670f93ed2ee5328396842ff8ba86648fef28f8570d4000a9b/datrie-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "088164e51b337a1ccd8ac18f18d9e8e6", "sha256": "7f2caf5a4f96af984d01b75b625bb6239eef0cab7e0ae99b6b9461bb97b25730"}, "downloads": -1, "filename": "datrie-0.7.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "088164e51b337a1ccd8ac18f18d9e8e6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 269161, "upload_time": "2016-03-13T12:19:07", "upload_time_iso_8601": "2016-03-13T12:19:07.394172Z", "url": "https://files.pythonhosted.org/packages/4a/d8/db88c863ba730b462823b7cf9020c3981a9cb13698d5453268719220bd4c/datrie-0.7.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bd116906c192a7702cebe327cebfe6a", "sha256": "84dd2f2f390ff477f341feb6e71fad5bb5782b03df350135fde8698f9acecf89"}, "downloads": -1, "filename": "datrie-0.7.1-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "7bd116906c192a7702cebe327cebfe6a", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 85136, "upload_time": "2016-03-12T09:30:39", "upload_time_iso_8601": "2016-03-12T09:30:39.141256Z", "url": "https://files.pythonhosted.org/packages/60/66/57a3cf558cdc946e179d148fc1827c5769e2bbd622bab613b7073de9c318/datrie-0.7.1-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f80142a4bfacf337ebdb80e136952b6", "sha256": "03c5a8516fc878aeed313c3d3ab71a3c254140fe7d43721809f5b260ed4a7cae"}, "downloads": -1, "filename": "datrie-0.7.1-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "7f80142a4bfacf337ebdb80e136952b6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 98566, "upload_time": "2016-03-12T09:30:46", "upload_time_iso_8601": "2016-03-12T09:30:46.044776Z", "url": "https://files.pythonhosted.org/packages/55/da/7109264acfef5e4365fbeb806f4cdac3fe87d942356518cf0bc1161a4085/datrie-0.7.1-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56e6ec090a64359f4cfc55227e7945d7", "sha256": "0f5ff34c21c1d04b19d2fb1f07a1eff8790f29887ed19e5ddd3ebcf3c4727c12"}, "downloads": -1, "filename": "datrie-0.7.1-cp33-cp33m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "56e6ec090a64359f4cfc55227e7945d7", "packagetype": "bdist_wheel", "python_version": "cp33", "requires_python": null, "size": 272370, "upload_time": "2016-03-13T12:19:13", "upload_time_iso_8601": "2016-03-13T12:19:13.331160Z", "url": "https://files.pythonhosted.org/packages/1e/94/70da9a58022d6982754bfa0467627a6faf437fdbf6cec8974170092216ed/datrie-0.7.1-cp33-cp33m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ecb6a452bedd3f32a3eca20c75c60ea", "sha256": "7edf889caf0afa625a797c5e19aea3290f202493838119e7ce0015801c8ad38a"}, "downloads": -1, "filename": "datrie-0.7.1-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "5ecb6a452bedd3f32a3eca20c75c60ea", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 272691, "upload_time": "2016-03-13T12:19:19", "upload_time_iso_8601": "2016-03-13T12:19:19.622346Z", "url": "https://files.pythonhosted.org/packages/c7/71/0e82bd9ea799d4a280face290036604d9ed37e305049bbd3718ca3dd542c/datrie-0.7.1-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "153fc323a3cb6aed24fef7ce253dd2c4", "sha256": "21a07b4754284cba3f45f3fd618a5d7d2b52d9609258a32177be553d900eb482"}, "downloads": -1, "filename": "datrie-0.7.1-cp34-cp34m-win32.whl", "has_sig": false, "md5_digest": "153fc323a3cb6aed24fef7ce253dd2c4", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 86715, "upload_time": "2016-03-12T09:30:52", "upload_time_iso_8601": "2016-03-12T09:30:52.359827Z", "url": "https://files.pythonhosted.org/packages/5a/1e/8a9125b394e2c782ddfd4cf590e3966041e22046ad4a654917baec3bf497/datrie-0.7.1-cp34-cp34m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88169390be3da6d3df733d6dd84f1a3f", "sha256": "ec3405496cc859b573b3c1c082229a7559fdab54a6a3d5a457e49a6e39df0e3e"}, "downloads": -1, "filename": "datrie-0.7.1-cp34-cp34m-win_amd64.whl", "has_sig": false, "md5_digest": "88169390be3da6d3df733d6dd84f1a3f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 98541, "upload_time": "2016-03-12T09:30:58", "upload_time_iso_8601": "2016-03-12T09:30:58.173100Z", "url": "https://files.pythonhosted.org/packages/f6/3a/bcd695ce304734f95e7bb1da50a86924fc3e54aa6c401cd599b771e01d30/datrie-0.7.1-cp34-cp34m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0315c9e6cc8fb72350d86cbe0c5c202", "sha256": "740f510869536fe05b35ca5ae82a107a77ebb298a9829650d4c776d418737454"}, "downloads": -1, "filename": "datrie-0.7.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "d0315c9e6cc8fb72350d86cbe0c5c202", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 267513, "upload_time": "2016-03-13T12:19:27", "upload_time_iso_8601": "2016-03-13T12:19:27.456257Z", "url": "https://files.pythonhosted.org/packages/e0/37/71ef5fe15958ac172f3ab2e07be1b94da86c7a33f86a067e52aafcb4fbb4/datrie-0.7.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b9e326368500c2a84eb70d1ef99dae2", "sha256": "caf32926bf822cd0213c0b7f2d20179f638eb8845e3b97ad15c4df35d5b3b504"}, "downloads": -1, "filename": "datrie-0.7.1-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "7b9e326368500c2a84eb70d1ef99dae2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 84027, "upload_time": "2016-03-12T09:31:05", "upload_time_iso_8601": "2016-03-12T09:31:05.654398Z", "url": "https://files.pythonhosted.org/packages/0a/fa/b2e9f90d7ce99679ae931b3f050502af2e841a56a7615932efe2364ef75e/datrie-0.7.1-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "591bf5bbec20bcbca64923f2e0e0ea0c", "sha256": "81d8059fdeb548f1c3e5c3d68f7768be124730d65ca68a6bb49b17a2d8d72375"}, "downloads": -1, "filename": "datrie-0.7.1-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "591bf5bbec20bcbca64923f2e0e0ea0c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 99747, "upload_time": "2016-03-12T09:31:15", "upload_time_iso_8601": "2016-03-12T09:31:15.980180Z", "url": "https://files.pythonhosted.org/packages/7b/60/3ea140361c9fb4cf633153fb9f2a9de33c0c869eb8a5bdb5805790dc0782/datrie-0.7.1-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d61280eff0ead9cdf03d286ce4228057", "sha256": "7a11371cc2dbbad71d6dfef57ced6e8b384bb377eeb847c63d58f8dc8e8b2023"}, "downloads": -1, "filename": "datrie-0.7.1.tar.gz", "has_sig": false, "md5_digest": "d61280eff0ead9cdf03d286ce4228057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 193464, "upload_time": "2016-03-11T23:46:41", "upload_time_iso_8601": "2016-03-11T23:46:41.331522Z", "url": "https://files.pythonhosted.org/packages/44/5f/bf7e4711f6aa95edb2216b3487eeac719645802259643d341668e65636db/datrie-0.7.1.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "7562da8453a94973c90bcd64af697e01", "sha256": "c931f3c67a12db49cef0680ed4dbbd25f7dd90eb71d7e28880b3b5980a5b7f42"}, "downloads": -1, "filename": "datrie-0.8-cp36-cp36m-macosx_10_12_x86_64.whl", "has_sig": false, "md5_digest": "7562da8453a94973c90bcd64af697e01", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 164167, "upload_time": "2019-07-03T07:44:12", "upload_time_iso_8601": "2019-07-03T07:44:12.055457Z", "url": "https://files.pythonhosted.org/packages/ef/ba/bc5b21dfdf2085cb827b38d330e32e8f4e6f67d39625c3eff3af0d458918/datrie-0.8-cp36-cp36m-macosx_10_12_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4be9cd30ea1b8ce79b969606699d142f", "sha256": "bdd5da6ba6a97e7cd96eef2e7441c8d2ef890d04ba42694a41c7dffa3aca680c"}, "downloads": -1, "filename": "datrie-0.8.tar.gz", "has_sig": false, "md5_digest": "4be9cd30ea1b8ce79b969606699d142f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 226077, "upload_time": "2019-07-03T07:43:50", "upload_time_iso_8601": "2019-07-03T07:43:50.630382Z", "url": "https://files.pythonhosted.org/packages/f5/a2/49d6db3af61eb139fb8fa2cdff90a4789e8255d227baf8f9a1ec945b4aac/datrie-0.8.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "3704eb7b5ba0244039abe8ba9d2a2413", "sha256": "53969643e2794c37f024d5edaa42d5e6e2627d9937ddcc18d99128e9df700e4c"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "3704eb7b5ba0244039abe8ba9d2a2413", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 156586, "upload_time": "2020-03-26T03:32:02", "upload_time_iso_8601": "2020-03-26T03:32:02.040449Z", "url": "https://files.pythonhosted.org/packages/59/48/3ae10482706efd3acb732a2d60e03c613a38e2d41eddf0b84ec40a6ae753/datrie-0.8.2-cp27-cp27m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b7312c62d7fd7f9a6cf3ce7de6e6755", "sha256": "6c9b333035312b79e6e9a10356d033e3d29aadbae6365007f706c854b3a94674"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7b7312c62d7fd7f9a6cf3ce7de6e6755", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 469616, "upload_time": "2020-03-26T03:32:03", "upload_time_iso_8601": "2020-03-26T03:32:03.501250Z", "url": "https://files.pythonhosted.org/packages/45/83/062eb20c581f6e90b0fc52b2093f72f4d9d47efbc4010bab82957e00e840/datrie-0.8.2-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97b50a58826f328dd773d2949d25486", "sha256": "bf5c956c0a9a9d0f07e3c8923746279171096de18a8a51685e22d9817f8755a6"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d97b50a58826f328dd773d2949d25486", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 470074, "upload_time": "2020-03-26T03:32:05", "upload_time_iso_8601": "2020-03-26T03:32:05.244384Z", "url": "https://files.pythonhosted.org/packages/88/42/3abe71838ad52622ca3601265969fa76c1653d2fa82486cfa710f1478b53/datrie-0.8.2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ff8445be1afbd1b2aab54ae0148516f", "sha256": "c783e2c1e28964b2b045a951eb9606833a188c4bd4a780da68d22f557e03e429"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "8ff8445be1afbd1b2aab54ae0148516f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 98498, "upload_time": "2020-03-26T12:05:33", "upload_time_iso_8601": "2020-03-26T12:05:33.641170Z", "url": "https://files.pythonhosted.org/packages/de/d2/e12df67208304d41c0a8bea798f309c1fee7a351610bf0bf64aaf17081aa/datrie-0.8.2-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "394b05ffa8c47c8d2301fb96835adc12", "sha256": "f826e843138698501cbf1a21233f724b851b1e475fad532b638ac5904e115f10"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "394b05ffa8c47c8d2301fb96835adc12", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 117952, "upload_time": "2020-03-26T12:05:35", "upload_time_iso_8601": "2020-03-26T12:05:35.379930Z", "url": "https://files.pythonhosted.org/packages/13/8b/e99e7d438e4a57e8f4feb086adf81b476981677991485f2404271512cdce/datrie-0.8.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d34ed3c8a3f340a0f6d05703715bd39d", "sha256": "2de594d84a2f43a09ddc15316a8afd48aae0fdc456f9279d0940aa59c473d9d5"}, "downloads": -1, "filename": "datrie-0.8.2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d34ed3c8a3f340a0f6d05703715bd39d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 541208, "upload_time": "2020-03-26T03:32:06", "upload_time_iso_8601": "2020-03-26T03:32:06.497919Z", "url": "https://files.pythonhosted.org/packages/fc/e9/0db8800a4c8dc197fc55a11102fe3a02e064d8966b1cadcabbaa51861344/datrie-0.8.2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa3d82f58d0a3e91e3205432372b8c1f", "sha256": "651c63325056347b86c5de7ffeea8529230a5787c61ee6dcabc5b6c644bd3252"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "aa3d82f58d0a3e91e3205432372b8c1f", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 157855, "upload_time": "2020-03-26T03:32:08", "upload_time_iso_8601": "2020-03-26T03:32:08.129134Z", "url": "https://files.pythonhosted.org/packages/87/be/c2c2ece6536da2886e67de40c04f4369c50de107ec3541aeb29b91a75840/datrie-0.8.2-cp35-cp35m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f493ea119d88e16e942f1e21745ef4a2", "sha256": "0e3b76676abbae2368cce6bf605bb0ba7cfd11f2c420b96d67959f353d5d423f"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f493ea119d88e16e942f1e21745ef4a2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 530405, "upload_time": "2020-03-26T03:32:09", "upload_time_iso_8601": "2020-03-26T03:32:09.702176Z", "url": "https://files.pythonhosted.org/packages/10/63/2ff02b530802832b0cbe0535c6b4e0024f2997286b2cbd18670eb5034907/datrie-0.8.2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "656b98048ef71377d0b0e8183236a4d8", "sha256": "3a3e360a765cc95410898dc222f8585ea1b1bba0538a1af4d8630a5bc3ad6ee7"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "656b98048ef71377d0b0e8183236a4d8", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 97589, "upload_time": "2020-03-26T12:05:36", "upload_time_iso_8601": "2020-03-26T12:05:36.795153Z", "url": "https://files.pythonhosted.org/packages/e8/2d/88c334d2431ab56f1c9d3369b8f72d145ba949854f116afbadc27e54f63f/datrie-0.8.2-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b1b1de770d516099b0ca5b4629fbfe0", "sha256": "fa9f39ac88dc6286672b9dd286fe459646da48133c877a927af24803eaea441e"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "0b1b1de770d516099b0ca5b4629fbfe0", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 118756, "upload_time": "2020-03-26T12:05:38", "upload_time_iso_8601": "2020-03-26T12:05:38.302576Z", "url": "https://files.pythonhosted.org/packages/e6/3b/73b72d73960095401af0247463b42ddfe2ac60c177e0b7745e75c9eccc1b/datrie-0.8.2-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d6ee138262b8450be0cf21c3eba08ec", "sha256": "b6fd6c7c149b410a87d46072c1c98f6e87ec557802e1d0e09db7b858746e8550"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "7d6ee138262b8450be0cf21c3eba08ec", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 162766, "upload_time": "2020-03-26T03:32:11", "upload_time_iso_8601": "2020-03-26T03:32:11.502053Z", "url": "https://files.pythonhosted.org/packages/9a/98/20763bc7b17f4a34c1d47a14cec0f9e6fee88994c21893a4e3e169ab3676/datrie-0.8.2-cp36-cp36m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9d50d12bdae471ca8cf833fdfb20004", "sha256": "327d9c17efaebc66d1956dca047b76fdd0e5b989d63cb55b9038ec09d8769089"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a9d50d12bdae471ca8cf833fdfb20004", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 544893, "upload_time": "2020-03-26T03:32:12", "upload_time_iso_8601": "2020-03-26T03:32:12.960747Z", "url": "https://files.pythonhosted.org/packages/0b/e7/6c36d488e23f4b421b1351117417524ae2d3e138fdab83d23630c948199b/datrie-0.8.2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a86c69a6c83dd8cb308c17da18fe7dde", "sha256": "ee7cd8470a982356e104e62148f2dbe2d3e17545cafaa3ada29f2548984f1e89"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "a86c69a6c83dd8cb308c17da18fe7dde", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 102035, "upload_time": "2020-03-26T12:05:39", "upload_time_iso_8601": "2020-03-26T12:05:39.653466Z", "url": "https://files.pythonhosted.org/packages/cb/80/ec497ad39dcaf9d20a990f1941e15516884d49e7adaf2a8f8b5830f0ede1/datrie-0.8.2-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "136d669c98ef1c20e487027dce77f218", "sha256": "31e316ba305cdd7b8a42f8e4af5a0a15a628aee270d2f392c41329a709eeda6d"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "136d669c98ef1c20e487027dce77f218", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 122977, "upload_time": "2020-03-26T12:05:40", "upload_time_iso_8601": "2020-03-26T12:05:40.976377Z", "url": "https://files.pythonhosted.org/packages/9e/1f/519da60d031bd44d40fb69e4a3650dbfd072c3727cbc7d171f1f895290cf/datrie-0.8.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c6d37dbc92eadd8d6c1ec3025b66888", "sha256": "dbe04704eb41b8440ca61416d3670ca6ddeea847d19731cf121889bac2962d07"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "3c6d37dbc92eadd8d6c1ec3025b66888", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 154642, "upload_time": "2020-03-26T03:32:14", "upload_time_iso_8601": "2020-03-26T03:32:14.705156Z", "url": "https://files.pythonhosted.org/packages/22/32/14e19f05007ecc0c3872aa2ffc9a160c4d89fd42310f3864c0399bd8bf20/datrie-0.8.2-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74fc618e8aa368d38a1522540b942d46", "sha256": "e1d704ee4fdc03f02d7dacc4d92052dbd490dba551509fccfd8ee52c9039d4ad"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "74fc618e8aa368d38a1522540b942d46", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 537390, "upload_time": "2020-03-26T03:32:16", "upload_time_iso_8601": "2020-03-26T03:32:16.076480Z", "url": "https://files.pythonhosted.org/packages/90/f8/c6daa335b0b5f3a6932e8b62b6f848e87c7f855ab6e94376051c9e228553/datrie-0.8.2-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1350cb5e762528a03f7585c4779ab391", "sha256": "25e9e07ecfceaef78d23bde8d7278e4d6f63e1e3dc5ac00ccb4bec3062f0a8e0"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "1350cb5e762528a03f7585c4779ab391", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 107623, "upload_time": "2020-03-26T12:05:42", "upload_time_iso_8601": "2020-03-26T12:05:42.163643Z", "url": "https://files.pythonhosted.org/packages/6f/12/7954d20ae5f0b5e1dbf2ec948b3c750db21a8bf05e560fef0f725fdd1d8f/datrie-0.8.2-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd4593c06f4a78f89b8d4b83f958f9a7", "sha256": "bf9f34f7c63797219b32713b561c4f94e777ff6c22beecfcd6bdf6b6c25b8518"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "bd4593c06f4a78f89b8d4b83f958f9a7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 130758, "upload_time": "2020-03-26T12:05:43", "upload_time_iso_8601": "2020-03-26T12:05:43.731272Z", "url": "https://files.pythonhosted.org/packages/ae/e3/9b5886b673ef34a36f7ca98d426dbf95b65999cf85bf4b75570bdcc42682/datrie-0.8.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f92dcbaf76231df5b7b16aeb7392573", "sha256": "e0582435a4adef1a2fce53aeedb656bf769b0f113b524f98be51d3e3d40720cb"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "7f92dcbaf76231df5b7b16aeb7392573", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 157807, "upload_time": "2020-03-26T03:32:17", "upload_time_iso_8601": "2020-03-26T03:32:17.734776Z", "url": "https://files.pythonhosted.org/packages/2b/60/d5d83f080f2bf84902e7ede9b3776778433f6775c46eb296f78cf88ca197/datrie-0.8.2-cp38-cp38-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51386144f9c0ff3bb902e2c793960931", "sha256": "b2d80fa687173cb8f8bae224ef00d1ad6bda8f8597bbb1a63f85182c7d91aeb3"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "51386144f9c0ff3bb902e2c793960931", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 551556, "upload_time": "2020-03-26T03:32:19", "upload_time_iso_8601": "2020-03-26T03:32:19.487988Z", "url": "https://files.pythonhosted.org/packages/3f/43/1ff434249b082c233afcb0217884a2cd542e4696900aace249e36b26df88/datrie-0.8.2-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afe9cc7423c26ec4a75914fea58beadf", "sha256": "67603594f5db5c0029b1cf86a08e89cde015fe64cf0c4ae4e539c61114396729"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "afe9cc7423c26ec4a75914fea58beadf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 110089, "upload_time": "2020-03-26T12:05:44", "upload_time_iso_8601": "2020-03-26T12:05:44.954075Z", "url": "https://files.pythonhosted.org/packages/90/de/580e485bca7a8f30ebd89c0a2efdbbae4f596f8dea5013713b9a3513e08f/datrie-0.8.2-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29ecfd141a2862dc7616a7ab85598caf", "sha256": "f61cf2726f04c08828bfb4e7af698b0b16bdf2777c3993d042f2898b8e118f21"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "29ecfd141a2862dc7616a7ab85598caf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 134726, "upload_time": "2020-03-26T12:05:46", "upload_time_iso_8601": "2020-03-26T12:05:46.821406Z", "url": "https://files.pythonhosted.org/packages/2d/69/909fb50e7b572dc0b5a43e499d8acbba2e314b578a8480cd92ca9425f9f8/datrie-0.8.2-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99bf7ef877a592cb7299e8acb7545105", "sha256": "b07bd5fdfc3399a6dab86d6e35c72b1dbd598e80c97509c7c7518ab8774d3fda"}, "downloads": -1, "filename": "datrie-0.8.2-pp273-pypy_73-win32.whl", "has_sig": false, "md5_digest": "99bf7ef877a592cb7299e8acb7545105", "packagetype": "bdist_wheel", "python_version": "pp273", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 91292, "upload_time": "2020-03-26T12:05:48", "upload_time_iso_8601": "2020-03-26T12:05:48.472567Z", "url": "https://files.pythonhosted.org/packages/44/02/53f0cf0bf0cd629ba6c2cc13f2f9db24323459e9c19463783d890a540a96/datrie-0.8.2-pp273-pypy_73-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b333cb5b1964e5b17be0ddc3315f3099", "sha256": "89ff3d41df4f899387aa07b4b066f5da36e3a10b67b8aeae631c950502ff4503"}, "downloads": -1, "filename": "datrie-0.8.2-pp373-pypy36_pp73-win32.whl", "has_sig": false, "md5_digest": "b333cb5b1964e5b17be0ddc3315f3099", "packagetype": "bdist_wheel", "python_version": "pp373", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 90231, "upload_time": "2020-03-26T12:05:49", "upload_time_iso_8601": "2020-03-26T12:05:49.586785Z", "url": "https://files.pythonhosted.org/packages/c4/aa/94c42a2dd30c4923bffe3ab59e4416c3f7e72dbd32a89bcdd8d43ff1d5d7/datrie-0.8.2-pp373-pypy36_pp73-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0478ffb9b9a28e6192cc84d94c65a8fc", "sha256": "525b08f638d5cf6115df6ccd818e5a01298cd230b2dac91c8ff2e6499d18765d"}, "downloads": -1, "filename": "datrie-0.8.2.tar.gz", "has_sig": true, "md5_digest": "0478ffb9b9a28e6192cc84d94c65a8fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 63278, "upload_time": "2020-03-26T03:31:53", "upload_time_iso_8601": "2020-03-26T03:31:53.681295Z", "url": "https://files.pythonhosted.org/packages/9d/fe/db74bd405d515f06657f11ad529878fd389576dca4812bea6f98d9b31574/datrie-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3704eb7b5ba0244039abe8ba9d2a2413", "sha256": "53969643e2794c37f024d5edaa42d5e6e2627d9937ddcc18d99128e9df700e4c"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "3704eb7b5ba0244039abe8ba9d2a2413", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 156586, "upload_time": "2020-03-26T03:32:02", "upload_time_iso_8601": "2020-03-26T03:32:02.040449Z", "url": "https://files.pythonhosted.org/packages/59/48/3ae10482706efd3acb732a2d60e03c613a38e2d41eddf0b84ec40a6ae753/datrie-0.8.2-cp27-cp27m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b7312c62d7fd7f9a6cf3ce7de6e6755", "sha256": "6c9b333035312b79e6e9a10356d033e3d29aadbae6365007f706c854b3a94674"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7b7312c62d7fd7f9a6cf3ce7de6e6755", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 469616, "upload_time": "2020-03-26T03:32:03", "upload_time_iso_8601": "2020-03-26T03:32:03.501250Z", "url": "https://files.pythonhosted.org/packages/45/83/062eb20c581f6e90b0fc52b2093f72f4d9d47efbc4010bab82957e00e840/datrie-0.8.2-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97b50a58826f328dd773d2949d25486", "sha256": "bf5c956c0a9a9d0f07e3c8923746279171096de18a8a51685e22d9817f8755a6"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d97b50a58826f328dd773d2949d25486", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 470074, "upload_time": "2020-03-26T03:32:05", "upload_time_iso_8601": "2020-03-26T03:32:05.244384Z", "url": "https://files.pythonhosted.org/packages/88/42/3abe71838ad52622ca3601265969fa76c1653d2fa82486cfa710f1478b53/datrie-0.8.2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ff8445be1afbd1b2aab54ae0148516f", "sha256": "c783e2c1e28964b2b045a951eb9606833a188c4bd4a780da68d22f557e03e429"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "8ff8445be1afbd1b2aab54ae0148516f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 98498, "upload_time": "2020-03-26T12:05:33", "upload_time_iso_8601": "2020-03-26T12:05:33.641170Z", "url": "https://files.pythonhosted.org/packages/de/d2/e12df67208304d41c0a8bea798f309c1fee7a351610bf0bf64aaf17081aa/datrie-0.8.2-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "394b05ffa8c47c8d2301fb96835adc12", "sha256": "f826e843138698501cbf1a21233f724b851b1e475fad532b638ac5904e115f10"}, "downloads": -1, "filename": "datrie-0.8.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "394b05ffa8c47c8d2301fb96835adc12", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 117952, "upload_time": "2020-03-26T12:05:35", "upload_time_iso_8601": "2020-03-26T12:05:35.379930Z", "url": "https://files.pythonhosted.org/packages/13/8b/e99e7d438e4a57e8f4feb086adf81b476981677991485f2404271512cdce/datrie-0.8.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d34ed3c8a3f340a0f6d05703715bd39d", "sha256": "2de594d84a2f43a09ddc15316a8afd48aae0fdc456f9279d0940aa59c473d9d5"}, "downloads": -1, "filename": "datrie-0.8.2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d34ed3c8a3f340a0f6d05703715bd39d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 541208, "upload_time": "2020-03-26T03:32:06", "upload_time_iso_8601": "2020-03-26T03:32:06.497919Z", "url": "https://files.pythonhosted.org/packages/fc/e9/0db8800a4c8dc197fc55a11102fe3a02e064d8966b1cadcabbaa51861344/datrie-0.8.2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa3d82f58d0a3e91e3205432372b8c1f", "sha256": "651c63325056347b86c5de7ffeea8529230a5787c61ee6dcabc5b6c644bd3252"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "aa3d82f58d0a3e91e3205432372b8c1f", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 157855, "upload_time": "2020-03-26T03:32:08", "upload_time_iso_8601": "2020-03-26T03:32:08.129134Z", "url": "https://files.pythonhosted.org/packages/87/be/c2c2ece6536da2886e67de40c04f4369c50de107ec3541aeb29b91a75840/datrie-0.8.2-cp35-cp35m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f493ea119d88e16e942f1e21745ef4a2", "sha256": "0e3b76676abbae2368cce6bf605bb0ba7cfd11f2c420b96d67959f353d5d423f"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f493ea119d88e16e942f1e21745ef4a2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 530405, "upload_time": "2020-03-26T03:32:09", "upload_time_iso_8601": "2020-03-26T03:32:09.702176Z", "url": "https://files.pythonhosted.org/packages/10/63/2ff02b530802832b0cbe0535c6b4e0024f2997286b2cbd18670eb5034907/datrie-0.8.2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "656b98048ef71377d0b0e8183236a4d8", "sha256": "3a3e360a765cc95410898dc222f8585ea1b1bba0538a1af4d8630a5bc3ad6ee7"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "656b98048ef71377d0b0e8183236a4d8", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 97589, "upload_time": "2020-03-26T12:05:36", "upload_time_iso_8601": "2020-03-26T12:05:36.795153Z", "url": "https://files.pythonhosted.org/packages/e8/2d/88c334d2431ab56f1c9d3369b8f72d145ba949854f116afbadc27e54f63f/datrie-0.8.2-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b1b1de770d516099b0ca5b4629fbfe0", "sha256": "fa9f39ac88dc6286672b9dd286fe459646da48133c877a927af24803eaea441e"}, "downloads": -1, "filename": "datrie-0.8.2-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "0b1b1de770d516099b0ca5b4629fbfe0", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 118756, "upload_time": "2020-03-26T12:05:38", "upload_time_iso_8601": "2020-03-26T12:05:38.302576Z", "url": "https://files.pythonhosted.org/packages/e6/3b/73b72d73960095401af0247463b42ddfe2ac60c177e0b7745e75c9eccc1b/datrie-0.8.2-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d6ee138262b8450be0cf21c3eba08ec", "sha256": "b6fd6c7c149b410a87d46072c1c98f6e87ec557802e1d0e09db7b858746e8550"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "7d6ee138262b8450be0cf21c3eba08ec", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 162766, "upload_time": "2020-03-26T03:32:11", "upload_time_iso_8601": "2020-03-26T03:32:11.502053Z", "url": "https://files.pythonhosted.org/packages/9a/98/20763bc7b17f4a34c1d47a14cec0f9e6fee88994c21893a4e3e169ab3676/datrie-0.8.2-cp36-cp36m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9d50d12bdae471ca8cf833fdfb20004", "sha256": "327d9c17efaebc66d1956dca047b76fdd0e5b989d63cb55b9038ec09d8769089"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a9d50d12bdae471ca8cf833fdfb20004", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 544893, "upload_time": "2020-03-26T03:32:12", "upload_time_iso_8601": "2020-03-26T03:32:12.960747Z", "url": "https://files.pythonhosted.org/packages/0b/e7/6c36d488e23f4b421b1351117417524ae2d3e138fdab83d23630c948199b/datrie-0.8.2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a86c69a6c83dd8cb308c17da18fe7dde", "sha256": "ee7cd8470a982356e104e62148f2dbe2d3e17545cafaa3ada29f2548984f1e89"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "a86c69a6c83dd8cb308c17da18fe7dde", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 102035, "upload_time": "2020-03-26T12:05:39", "upload_time_iso_8601": "2020-03-26T12:05:39.653466Z", "url": "https://files.pythonhosted.org/packages/cb/80/ec497ad39dcaf9d20a990f1941e15516884d49e7adaf2a8f8b5830f0ede1/datrie-0.8.2-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "136d669c98ef1c20e487027dce77f218", "sha256": "31e316ba305cdd7b8a42f8e4af5a0a15a628aee270d2f392c41329a709eeda6d"}, "downloads": -1, "filename": "datrie-0.8.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "136d669c98ef1c20e487027dce77f218", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 122977, "upload_time": "2020-03-26T12:05:40", "upload_time_iso_8601": "2020-03-26T12:05:40.976377Z", "url": "https://files.pythonhosted.org/packages/9e/1f/519da60d031bd44d40fb69e4a3650dbfd072c3727cbc7d171f1f895290cf/datrie-0.8.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c6d37dbc92eadd8d6c1ec3025b66888", "sha256": "dbe04704eb41b8440ca61416d3670ca6ddeea847d19731cf121889bac2962d07"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "3c6d37dbc92eadd8d6c1ec3025b66888", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 154642, "upload_time": "2020-03-26T03:32:14", "upload_time_iso_8601": "2020-03-26T03:32:14.705156Z", "url": "https://files.pythonhosted.org/packages/22/32/14e19f05007ecc0c3872aa2ffc9a160c4d89fd42310f3864c0399bd8bf20/datrie-0.8.2-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74fc618e8aa368d38a1522540b942d46", "sha256": "e1d704ee4fdc03f02d7dacc4d92052dbd490dba551509fccfd8ee52c9039d4ad"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "74fc618e8aa368d38a1522540b942d46", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 537390, "upload_time": "2020-03-26T03:32:16", "upload_time_iso_8601": "2020-03-26T03:32:16.076480Z", "url": "https://files.pythonhosted.org/packages/90/f8/c6daa335b0b5f3a6932e8b62b6f848e87c7f855ab6e94376051c9e228553/datrie-0.8.2-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1350cb5e762528a03f7585c4779ab391", "sha256": "25e9e07ecfceaef78d23bde8d7278e4d6f63e1e3dc5ac00ccb4bec3062f0a8e0"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "1350cb5e762528a03f7585c4779ab391", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 107623, "upload_time": "2020-03-26T12:05:42", "upload_time_iso_8601": "2020-03-26T12:05:42.163643Z", "url": "https://files.pythonhosted.org/packages/6f/12/7954d20ae5f0b5e1dbf2ec948b3c750db21a8bf05e560fef0f725fdd1d8f/datrie-0.8.2-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd4593c06f4a78f89b8d4b83f958f9a7", "sha256": "bf9f34f7c63797219b32713b561c4f94e777ff6c22beecfcd6bdf6b6c25b8518"}, "downloads": -1, "filename": "datrie-0.8.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "bd4593c06f4a78f89b8d4b83f958f9a7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 130758, "upload_time": "2020-03-26T12:05:43", "upload_time_iso_8601": "2020-03-26T12:05:43.731272Z", "url": "https://files.pythonhosted.org/packages/ae/e3/9b5886b673ef34a36f7ca98d426dbf95b65999cf85bf4b75570bdcc42682/datrie-0.8.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f92dcbaf76231df5b7b16aeb7392573", "sha256": "e0582435a4adef1a2fce53aeedb656bf769b0f113b524f98be51d3e3d40720cb"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "7f92dcbaf76231df5b7b16aeb7392573", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 157807, "upload_time": "2020-03-26T03:32:17", "upload_time_iso_8601": "2020-03-26T03:32:17.734776Z", "url": "https://files.pythonhosted.org/packages/2b/60/d5d83f080f2bf84902e7ede9b3776778433f6775c46eb296f78cf88ca197/datrie-0.8.2-cp38-cp38-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51386144f9c0ff3bb902e2c793960931", "sha256": "b2d80fa687173cb8f8bae224ef00d1ad6bda8f8597bbb1a63f85182c7d91aeb3"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "51386144f9c0ff3bb902e2c793960931", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 551556, "upload_time": "2020-03-26T03:32:19", "upload_time_iso_8601": "2020-03-26T03:32:19.487988Z", "url": "https://files.pythonhosted.org/packages/3f/43/1ff434249b082c233afcb0217884a2cd542e4696900aace249e36b26df88/datrie-0.8.2-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afe9cc7423c26ec4a75914fea58beadf", "sha256": "67603594f5db5c0029b1cf86a08e89cde015fe64cf0c4ae4e539c61114396729"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "afe9cc7423c26ec4a75914fea58beadf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 110089, "upload_time": "2020-03-26T12:05:44", "upload_time_iso_8601": "2020-03-26T12:05:44.954075Z", "url": "https://files.pythonhosted.org/packages/90/de/580e485bca7a8f30ebd89c0a2efdbbae4f596f8dea5013713b9a3513e08f/datrie-0.8.2-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29ecfd141a2862dc7616a7ab85598caf", "sha256": "f61cf2726f04c08828bfb4e7af698b0b16bdf2777c3993d042f2898b8e118f21"}, "downloads": -1, "filename": "datrie-0.8.2-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "29ecfd141a2862dc7616a7ab85598caf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 134726, "upload_time": "2020-03-26T12:05:46", "upload_time_iso_8601": "2020-03-26T12:05:46.821406Z", "url": "https://files.pythonhosted.org/packages/2d/69/909fb50e7b572dc0b5a43e499d8acbba2e314b578a8480cd92ca9425f9f8/datrie-0.8.2-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99bf7ef877a592cb7299e8acb7545105", "sha256": "b07bd5fdfc3399a6dab86d6e35c72b1dbd598e80c97509c7c7518ab8774d3fda"}, "downloads": -1, "filename": "datrie-0.8.2-pp273-pypy_73-win32.whl", "has_sig": false, "md5_digest": "99bf7ef877a592cb7299e8acb7545105", "packagetype": "bdist_wheel", "python_version": "pp273", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 91292, "upload_time": "2020-03-26T12:05:48", "upload_time_iso_8601": "2020-03-26T12:05:48.472567Z", "url": "https://files.pythonhosted.org/packages/44/02/53f0cf0bf0cd629ba6c2cc13f2f9db24323459e9c19463783d890a540a96/datrie-0.8.2-pp273-pypy_73-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b333cb5b1964e5b17be0ddc3315f3099", "sha256": "89ff3d41df4f899387aa07b4b066f5da36e3a10b67b8aeae631c950502ff4503"}, "downloads": -1, "filename": "datrie-0.8.2-pp373-pypy36_pp73-win32.whl", "has_sig": false, "md5_digest": "b333cb5b1964e5b17be0ddc3315f3099", "packagetype": "bdist_wheel", "python_version": "pp373", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 90231, "upload_time": "2020-03-26T12:05:49", "upload_time_iso_8601": "2020-03-26T12:05:49.586785Z", "url": "https://files.pythonhosted.org/packages/c4/aa/94c42a2dd30c4923bffe3ab59e4416c3f7e72dbd32a89bcdd8d43ff1d5d7/datrie-0.8.2-pp373-pypy36_pp73-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0478ffb9b9a28e6192cc84d94c65a8fc", "sha256": "525b08f638d5cf6115df6ccd818e5a01298cd230b2dac91c8ff2e6499d18765d"}, "downloads": -1, "filename": "datrie-0.8.2.tar.gz", "has_sig": true, "md5_digest": "0478ffb9b9a28e6192cc84d94c65a8fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 63278, "upload_time": "2020-03-26T03:31:53", "upload_time_iso_8601": "2020-03-26T03:31:53.681295Z", "url": "https://files.pythonhosted.org/packages/9d/fe/db74bd405d515f06657f11ad529878fd389576dca4812bea6f98d9b31574/datrie-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:03 2020"}