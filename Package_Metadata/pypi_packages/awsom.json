{"info": {"author": "David Losada Carballo", "author_email": "david@tuxpiper.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: System"], "description": "awsom - AWS Object Model\n========================\n\nBrowse your AWS resources using a hierarchical object model\n\nUsage\n-----\n\nFire up your python interpreter RPEL. All usage of the module is done through an 'aws' instance exported by the main module, so you do:\n\n    >>> from awsom import aws\n\nFirst time, you will want to configure an account, for instance:\n\n    >>> aws.add_account(\"myaws\", access_key_id=\"xxxx\", secret_access_key=\"yyyy\")\n\nYour account details are saved automatically to awsom's config file, so next time you use it, the account will already be there. The account is accessible as a children node (named \"myaws\"), you can print it out:\n\n    >>> print aws.myaws\n    aws > myaws\n      Type: <class 'awsom.config.AccountEntity'>\n      Attributes:\n        .access_key_id = \"xxxxxxxxxxxxxxxxxxxx\"\n        .name = \"myaws\"\n        .secret_access_key = \"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\"\n      Methods:\n        .add_attr()\n        .find()\n      Children (1):\n        ['ec2']\n\nSo far we only have access to some ec2 instance info, you can print your instance list\n\n    >>> print aws.myaws.ec2.instances\n    aws > myaws > ec2 > instances\n      Type: <class 'awsom.services.ec2.EC2InstancesRootEntity'>\n      Attributes:\n        .name = \"instances\"\n      Methods:\n        .add_attr()\n        .find()\n      Children (2):\n        ['i_xxxxxxxx']\n        ['i_yyyyyyyy']\n\nAnd some info about some instance:\n\n    >>> print aws.myaws.ec2.instances.i_xxxxxxxx\n    aws > myaws > ec2 > instances > i_xxxxxxxx\n      Type: <class 'awsom.services.ec2.EC2InstanceEntity'>\n      Attributes:\n        .architecture = x86_64\n        .dns_name = ec2-xx-yy-zz-ccc.compute-1.amazonaws.com\n        .id = i-xxxxxxxx\n        .instance_type = m1.large\n        .name = i_xxxxxxxx\n        .private_ip_address = 10.xxx.yyy.ccc\n        .region = RegionInfo:us-east-1\n        .tags = {}\n      Methods:\n        .add_attr()\n        .find()\n        .get_console_output()\n      Children (0):\n\nAnother thing to try:\n\n    >>> for i in aws.myaws.ec2.instances: print aws.myaws.ec2.instances[i]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tuxpiper/awsom", "keywords": "aws internet cloud", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "awsom", "package_url": "https://pypi.org/project/awsom/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/awsom/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/tuxpiper/awsom"}, "release_url": "https://pypi.org/project/awsom/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Browse your AWS resources using a hierarchical object model", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Browse your AWS resources using a hierarchical object model</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Fire up your python interpreter RPEL. All usage of the module is done through an \u2018aws\u2019 instance exported by the main module, so you do:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from awsom import aws\n</pre>\n</blockquote>\n<p>First time, you will want to configure an account, for instance:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; aws.add_account(\"myaws\", access_key_id=\"xxxx\", secret_access_key=\"yyyy\")\n</pre>\n</blockquote>\n<p>Your account details are saved automatically to awsom\u2019s config file, so next time you use it, the account will already be there. The account is accessible as a children node (named \u201cmyaws\u201d), you can print it out:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print aws.myaws\naws &gt; myaws\n  Type: &lt;class 'awsom.config.AccountEntity'&gt;\n  Attributes:\n    .access_key_id = \"xxxxxxxxxxxxxxxxxxxx\"\n    .name = \"myaws\"\n    .secret_access_key = \"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\"\n  Methods:\n    .add_attr()\n    .find()\n  Children (1):\n    ['ec2']\n</pre>\n</blockquote>\n<p>So far we only have access to some ec2 instance info, you can print your instance list</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print aws.myaws.ec2.instances\naws &gt; myaws &gt; ec2 &gt; instances\n  Type: &lt;class 'awsom.services.ec2.EC2InstancesRootEntity'&gt;\n  Attributes:\n    .name = \"instances\"\n  Methods:\n    .add_attr()\n    .find()\n  Children (2):\n    ['i_xxxxxxxx']\n    ['i_yyyyyyyy']\n</pre>\n</blockquote>\n<p>And some info about some instance:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print aws.myaws.ec2.instances.i_xxxxxxxx\naws &gt; myaws &gt; ec2 &gt; instances &gt; i_xxxxxxxx\n  Type: &lt;class 'awsom.services.ec2.EC2InstanceEntity'&gt;\n  Attributes:\n    .architecture = x86_64\n    .dns_name = ec2-xx-yy-zz-ccc.compute-1.amazonaws.com\n    .id = i-xxxxxxxx\n    .instance_type = m1.large\n    .name = i_xxxxxxxx\n    .private_ip_address = 10.xxx.yyy.ccc\n    .region = RegionInfo:us-east-1\n    .tags = {}\n  Methods:\n    .add_attr()\n    .find()\n    .get_console_output()\n  Children (0):\n</pre>\n</blockquote>\n<p>Another thing to try:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; for i in aws.myaws.ec2.instances: print aws.myaws.ec2.instances[i]\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 786651, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "ab4f81f9eba25405cad4c7c4d59f9b7e", "sha256": "ac678f5372583e11b0128d0c301f090ff2167ed89712a7bff01612d5220abe04"}, "downloads": -1, "filename": "awsom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ab4f81f9eba25405cad4c7c4d59f9b7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6236, "upload_time": "2013-05-17T19:42:05", "upload_time_iso_8601": "2013-05-17T19:42:05.675037Z", "url": "https://files.pythonhosted.org/packages/4b/29/0a260ca32fbfe2785574a0296582e02e0e2d703f8552e726c9c066b946c6/awsom-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab4f81f9eba25405cad4c7c4d59f9b7e", "sha256": "ac678f5372583e11b0128d0c301f090ff2167ed89712a7bff01612d5220abe04"}, "downloads": -1, "filename": "awsom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ab4f81f9eba25405cad4c7c4d59f9b7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6236, "upload_time": "2013-05-17T19:42:05", "upload_time_iso_8601": "2013-05-17T19:42:05.675037Z", "url": "https://files.pythonhosted.org/packages/4b/29/0a260ca32fbfe2785574a0296582e02e0e2d703f8552e726c9c066b946c6/awsom-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:37 2020"}