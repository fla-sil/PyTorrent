{"info": {"author": "SSLCOMMERZ Developers", "author_email": "sajan.sslwireless@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# SSLCOMMERZ PAYMENT GATEWAY\n\n**Note**: If you're using this wrapper with our sandbox environment `issandbox` is true and live `issandbox` is false. (Details: [Test Or Sandbox Account](https://developer.sslcommerz.com/)).\n\nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommerz = SSLCOMMERZ(settings)\n\n## Installation\n\n`pip install sslcommerz-lib`\n\n## Authentication Keys\n\nYou can find your store_id and store_pass at the API Documentation Page.\nCreate an account on SSLCOMMERZ, log in and visit this link:\nhttps://developer.sslcommerz.com/registration/\n\n## Usage\n\n### Create a Initial Payment Request Session \n\n    from sslcommerz_lib import SSLCOMMERZ \n    settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\n    sslcommez = SSLCOMMERZ(settings)\n    post_body = {}\n    post_body['total_amount'] = 100.26\n    post_body['currency'] = \"BDT\"\n    post_body['tran_id'] = \"12345\"\n    post_body['success_url'] = \"your success url\"\n    post_body['fail_url'] = \"your fail url\"\n    post_body['cancel_url'] = \"your cancel url\"\n    post_body['emi_option'] = 0\n    post_body['cus_name'] = \"test\"\n    post_body['cus_email'] = \"test@test.com\"\n    post_body['cus_phone'] = \"01700000000\"\n    post_body['cus_add1'] = \"customer address\"\n    post_body['cus_city'] = \"Dhaka\"\n    post_body['cus_country'] = \"Bangladesh\"\n    post_body['shipping_method'] = \"NO\"\n    post_body['multi_card_name'] = \"\"\n    post_body['num_of_item'] = 1\n    post_body['product_name'] = \"Test\"\n    post_body['product_category'] = \"Test Category\"\n    post_body['product_profile'] = \"general\"\n\n\n    response = sslcommez.createSession(post_body)\n    print(response)\n\n### Vaidate payment with IPN\n    from sslcommerz_lib import SSLCOMMERZ\n\n    settings = { 'store_id': 'test_testemi', 'store_pass': 'test_testemi@ssl', 'issandbox': True } \n\n    sslcommez = SSLCOMMERZ(settings)\n    post_body = {}\n    post_body['tran_id'] = '5E121A0D01F92'\n    post_body['val_id'] = '200105225826116qFnATY9sHIwo'\n    post_body['amount'] = \"10.00\"\n    post_body['card_type'] = \"VISA-Dutch Bangla\"\n    post_body['store_amount'] = \"9.75\"\n    post_body['card_no'] = \"418117XXXXXX6675\"\n    post_body['bank_tran_id'] = \"200105225825DBgSoRGLvczhFjj\"\n    post_body['status'] = \"VALID\"\n    post_body['tran_date'] = \"2020-01-05 22:58:21\"\n    post_body['currency'] = \"BDT\"\n    post_body['card_issuer'] = \"TRUST BANK, LTD.\"\n    post_body['card_brand'] = \"VISA\"\n    post_body['card_issuer_country'] = \"Bangladesh\"\n    post_body['card_issuer_country_code'] = \"BD\"\n    post_body['store_id'] = \"test_testemi\"\n    post_body['verify_sign'] = \"d42fab70ae0bcbda5280e7baffef60b0\"\n    post_body['verify_key'] = \"amount,bank_tran_id,base_fair,card_brand,card_issuer,card_issuer_country,card_issuer_country_code,card_no,card_type,currency,currency_amount,currency_rate,currency_type,risk_level,risk_title,status,store_amount,store_id,tran_date,tran_id,val_id,value_a,value_b,value_c,value_d\"\n    post_body['verify_sign_sha2'] = \"02c0417ff467c109006382d56eedccecd68382e47245266e7b47abbb3d43976e\"\n    post_body['currency_type'] = \"BDT\"\n    post_body['currency_amount'] = \"10.00\"\n    post_body['currency_rate'] = \"1.0000\"\n    post_body['base_fair'] = \"0.00\"\n    post_body['value_a'] = \"\"\n    post_body['value_b'] = \"\"\n    post_body['value_c'] = \"\"\n    post_body['value_d'] = \"\"\n    post_body['risk_level'] = \"0\"\n    post_body['risk_title'] = \"Safe\"\n    response = sslcommez.hash_validate_ipn(post_body)\n    print(response)\n\n\n### Get the status or details of a Payment Request by sessionkey\n\n    from sslcommerz_lib import SSLCOMMERZ \n    settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\n    sslcommez = SSLCOMMERZ(settings)\n\n    sessionkey = 'A8EF93B75B8107E4F36049E80B4F9149'\n    response = sslcommez.transaction_query_session(sessionkey)\n    print(response)\n\n\n### Get the status or details of a Payment Request by tranid\n\n    from sslcommerz_lib import SSLCOMMERZ \n    settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\n    sslcommez = SSLCOMMERZ(settings)\n\n    tranid = '59C2A4F6432F8'\n    response = sslcommez.transaction_query_tranid(tranid)\n    print(response)\n\n### Refund Request \n\n    from sslcommerz_lib import SSLCOMMERZ \n    settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\n    sslcommez = SSLCOMMERZ(settings)\n\n    bank_tran_id = '1709162345070ANJdZV8LyI4cMw'\n    refund_amount = '5.50'\n    refund_remarks = 'out of stock'\n    response = sslcommez.init_refund(bank_tran_id,refund_amount,refund_remarks)\n    print(response)\n\n\n### Get Refund Request Status\n\n    from sslcommerz_lib import SSLCOMMERZ \n    settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\n    sslcommez = SSLCOMMERZ(settings)\n\n    refund_ref_id = '59bd63fea5455'\n    response = sslcommez.query_refund_status(refund_ref_id)\n    print(response)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sajanPoddar/sslcommerz-lib-py", "keywords": "sslcommerz,payment,1.0", "license": "", "maintainer": "", "maintainer_email": "", "name": "sslcommerz-lib", "package_url": "https://pypi.org/project/sslcommerz-lib/", "platform": "", "project_url": "https://pypi.org/project/sslcommerz-lib/", "project_urls": {"Homepage": "https://github.com/sajanPoddar/sslcommerz-lib-py"}, "release_url": "https://pypi.org/project/sslcommerz-lib/1.0/", "requires_dist": ["requests"], "requires_python": "", "summary": "SSLCOMERZ PAYMENT GATEWAY", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SSLCOMMERZ PAYMENT GATEWAY</h1>\n<p><strong>Note</strong>: If you're using this wrapper with our sandbox environment <code>issandbox</code> is true and live <code>issandbox</code> is false. (Details: <a href=\"https://developer.sslcommerz.com/\" rel=\"nofollow\">Test Or Sandbox Account</a>).</p>\n<p>settings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommerz = SSLCOMMERZ(settings)</p>\n<h2>Installation</h2>\n<p><code>pip install sslcommerz-lib</code></p>\n<h2>Authentication Keys</h2>\n<p>You can find your store_id and store_pass at the API Documentation Page.\nCreate an account on SSLCOMMERZ, log in and visit this link:\n<a href=\"https://developer.sslcommerz.com/registration/\" rel=\"nofollow\">https://developer.sslcommerz.com/registration/</a></p>\n<h2>Usage</h2>\n<h3>Create a Initial Payment Request Session</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ \nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommez = SSLCOMMERZ(settings)\npost_body = {}\npost_body['total_amount'] = 100.26\npost_body['currency'] = \"BDT\"\npost_body['tran_id'] = \"12345\"\npost_body['success_url'] = \"your success url\"\npost_body['fail_url'] = \"your fail url\"\npost_body['cancel_url'] = \"your cancel url\"\npost_body['emi_option'] = 0\npost_body['cus_name'] = \"test\"\npost_body['cus_email'] = \"test@test.com\"\npost_body['cus_phone'] = \"01700000000\"\npost_body['cus_add1'] = \"customer address\"\npost_body['cus_city'] = \"Dhaka\"\npost_body['cus_country'] = \"Bangladesh\"\npost_body['shipping_method'] = \"NO\"\npost_body['multi_card_name'] = \"\"\npost_body['num_of_item'] = 1\npost_body['product_name'] = \"Test\"\npost_body['product_category'] = \"Test Category\"\npost_body['product_profile'] = \"general\"\n\n\nresponse = sslcommez.createSession(post_body)\nprint(response)\n</code></pre>\n<h3>Vaidate payment with IPN</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ\n\nsettings = { 'store_id': 'test_testemi', 'store_pass': 'test_testemi@ssl', 'issandbox': True } \n\nsslcommez = SSLCOMMERZ(settings)\npost_body = {}\npost_body['tran_id'] = '5E121A0D01F92'\npost_body['val_id'] = '200105225826116qFnATY9sHIwo'\npost_body['amount'] = \"10.00\"\npost_body['card_type'] = \"VISA-Dutch Bangla\"\npost_body['store_amount'] = \"9.75\"\npost_body['card_no'] = \"418117XXXXXX6675\"\npost_body['bank_tran_id'] = \"200105225825DBgSoRGLvczhFjj\"\npost_body['status'] = \"VALID\"\npost_body['tran_date'] = \"2020-01-05 22:58:21\"\npost_body['currency'] = \"BDT\"\npost_body['card_issuer'] = \"TRUST BANK, LTD.\"\npost_body['card_brand'] = \"VISA\"\npost_body['card_issuer_country'] = \"Bangladesh\"\npost_body['card_issuer_country_code'] = \"BD\"\npost_body['store_id'] = \"test_testemi\"\npost_body['verify_sign'] = \"d42fab70ae0bcbda5280e7baffef60b0\"\npost_body['verify_key'] = \"amount,bank_tran_id,base_fair,card_brand,card_issuer,card_issuer_country,card_issuer_country_code,card_no,card_type,currency,currency_amount,currency_rate,currency_type,risk_level,risk_title,status,store_amount,store_id,tran_date,tran_id,val_id,value_a,value_b,value_c,value_d\"\npost_body['verify_sign_sha2'] = \"02c0417ff467c109006382d56eedccecd68382e47245266e7b47abbb3d43976e\"\npost_body['currency_type'] = \"BDT\"\npost_body['currency_amount'] = \"10.00\"\npost_body['currency_rate'] = \"1.0000\"\npost_body['base_fair'] = \"0.00\"\npost_body['value_a'] = \"\"\npost_body['value_b'] = \"\"\npost_body['value_c'] = \"\"\npost_body['value_d'] = \"\"\npost_body['risk_level'] = \"0\"\npost_body['risk_title'] = \"Safe\"\nresponse = sslcommez.hash_validate_ipn(post_body)\nprint(response)\n</code></pre>\n<h3>Get the status or details of a Payment Request by sessionkey</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ \nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommez = SSLCOMMERZ(settings)\n\nsessionkey = 'A8EF93B75B8107E4F36049E80B4F9149'\nresponse = sslcommez.transaction_query_session(sessionkey)\nprint(response)\n</code></pre>\n<h3>Get the status or details of a Payment Request by tranid</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ \nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommez = SSLCOMMERZ(settings)\n\ntranid = '59C2A4F6432F8'\nresponse = sslcommez.transaction_query_tranid(tranid)\nprint(response)\n</code></pre>\n<h3>Refund Request</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ \nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommez = SSLCOMMERZ(settings)\n\nbank_tran_id = '1709162345070ANJdZV8LyI4cMw'\nrefund_amount = '5.50'\nrefund_remarks = 'out of stock'\nresponse = sslcommez.init_refund(bank_tran_id,refund_amount,refund_remarks)\nprint(response)\n</code></pre>\n<h3>Get Refund Request Status</h3>\n<pre><code>from sslcommerz_lib import SSLCOMMERZ \nsettings = { 'store_id': 'testbox', 'store_pass': 'qwerty', 'issandbox': True }\nsslcommez = SSLCOMMERZ(settings)\n\nrefund_ref_id = '59bd63fea5455'\nresponse = sslcommez.query_refund_status(refund_ref_id)\nprint(response)\n</code></pre>\n\n          </div>"}, "last_serial": 6409414, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "0feb3d593a7847a09e8585e8fb8bccc2", "sha256": "24751cabe79da0e7ea27076827db4f8bbc02d70df79aff5efea14266281c5e40"}, "downloads": -1, "filename": "sslcommerz_lib-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0feb3d593a7847a09e8585e8fb8bccc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17225, "upload_time": "2020-01-07T16:13:14", "upload_time_iso_8601": "2020-01-07T16:13:14.547443Z", "url": "https://files.pythonhosted.org/packages/ad/65/4c0e711173734f716db13ea0c6024a9d7ceca928d78fc702ac2da8274ca2/sslcommerz_lib-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ecc30756eaf80a3fab8fdc3b56257b7", "sha256": "b77f1a88a6c320ab161d76c85f7c73b2741f0c49c4fe2df35e8bc1b50dc4ce3e"}, "downloads": -1, "filename": "sslcommerz-lib-1.0.tar.gz", "has_sig": false, "md5_digest": "4ecc30756eaf80a3fab8fdc3b56257b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2020-01-07T16:13:18", "upload_time_iso_8601": "2020-01-07T16:13:18.056339Z", "url": "https://files.pythonhosted.org/packages/0e/df/198e5af5f9d11b7ab59894444cccef70a14000f3d37eca4c385376728598/sslcommerz-lib-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0feb3d593a7847a09e8585e8fb8bccc2", "sha256": "24751cabe79da0e7ea27076827db4f8bbc02d70df79aff5efea14266281c5e40"}, "downloads": -1, "filename": "sslcommerz_lib-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0feb3d593a7847a09e8585e8fb8bccc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17225, "upload_time": "2020-01-07T16:13:14", "upload_time_iso_8601": "2020-01-07T16:13:14.547443Z", "url": "https://files.pythonhosted.org/packages/ad/65/4c0e711173734f716db13ea0c6024a9d7ceca928d78fc702ac2da8274ca2/sslcommerz_lib-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ecc30756eaf80a3fab8fdc3b56257b7", "sha256": "b77f1a88a6c320ab161d76c85f7c73b2741f0c49c4fe2df35e8bc1b50dc4ce3e"}, "downloads": -1, "filename": "sslcommerz-lib-1.0.tar.gz", "has_sig": false, "md5_digest": "4ecc30756eaf80a3fab8fdc3b56257b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2020-01-07T16:13:18", "upload_time_iso_8601": "2020-01-07T16:13:18.056339Z", "url": "https://files.pythonhosted.org/packages/0e/df/198e5af5f9d11b7ab59894444cccef70a14000f3d37eca4c385376728598/sslcommerz-lib-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:03 2020"}