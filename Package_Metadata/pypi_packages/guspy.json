{"info": {"author": "Liew Cher Don", "author_email": "liewcherdon@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# guspy\nGus Python library that allows for simple SOQL queries on GUS, as well as Authentication to GUS.\n\nCurrent Version: `0.17`\n\n## Installation\nTo install, simply use your virtualenv:\n\n```\npip install guspy\n```\n\n## Repackaging Instructions\nTo repackage, change the version number of the `setup.py` file\n```\npython3 setup.py bdist_wheel\npython3 -m twine upload dist/*\n```\n\n\n## Summary\n\nExample:\n```\nquery = Case(<SPECIFICATIONS OF OBJECT>).from_single(<FIELDS REQUIRED>)\n```\nAll queries on the objects can be summarised to accept parameters in two places (except special conditions such as GRE specific objects)\nThe first is the specifications of the object itself (e.g. Case Number, etc) whereas the second is the fields required to be shown.\n\n\n**Cases Object**\n-------------\n`Case` class can be initialised with the case number or list of case numbers. In which the single case_number would be using `from_single` method, and the list of case_numbers will be using the `from_multiple` method.\n```\nfrom guspy import Case\nquery = Case(\"8190582\").from_single(\"Id\")\nquery = Case([\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n```\n\nSpecial: GRE Cases can be simply queried.\n```\ngre_query = Case().gre(\"Id, CaseNumber\")\n```\n\n\n**CaseComments Object**\n-------------\n`CaseComment` object can be initialised with either `case_number` or `comment_id`, in which similar to the `Case` object, would be using `from_single` or `from_multiple` functions to get a single case/comment or multiple case/comment respectively\n```\nfrom guspy import CaseComment\nquery = CaseComment(case_number=\"\").from_single(\"Id\")\nquery = CaseComment(case_number=[\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n```\n\nSpecial: GRE Cases can be simply queried\n```\nquery = CaseComment().gre(\"Id, CommentBody\")\n```\n\n**ScrumMember Object**\n-------------\n`ScrumMember` object can be initialised with `team_name`, in which you can use `from_single` function to get attributes of the Scrum Members\n```\nfrom guspy import ScrumMember\nquery = ScrumMember(team_name=\"\").from_single(\"Id\")\n```\n\nSpecial: GRE Cases can be simply queried\n```\nquery = ScrumMember().gre(\"Id, Name\")\n```\n\n**User Object**\n-------------\n`User` object can be initialised with `user_id`, in which you can use `from_single` or `from_multiple` functions to get attributes of the Users\n```\nfrom guspy import User\nquery = User(user_id=\"\").from_single(\"Id\")\nquery = User(user_id=[\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n```\n\nSpecial: GRE Cases can be simply queried\n```\nquery = User().gre(\"Id, Division\")\n```\n\n**ReleaseEvent Object**\n-------------\nTo be updated\n\n**Task Object**\n-------------\nTo be updated\n\n**InstanceDatacenter Object**\n-------------\nTo be updated\n\n**Logging In**\n-------------\n```\nfrom guspy.access import Gus\ngus = Gus(username=username,\n          password=password).connect()\n```\nUpon logging in, use the commands above to get the query string for the object required (CaseComments, ReleaseEvents, etc.) before executing the following command:\n```\ngus.raw(<REQUIRED_QUERY>)\ngus.parse(<REQUIRED_QUERY>)\n```\nWhere `raw` will return the raw data, and `parse` will return in a DataFrame format.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.soma.salesforce.com/c-liew/guspy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "guspy", "package_url": "https://pypi.org/project/guspy/", "platform": "", "project_url": "https://pypi.org/project/guspy/", "project_urls": {"Homepage": "https://git.soma.salesforce.com/c-liew/guspy"}, "release_url": "https://pypi.org/project/guspy/0.17/", "requires_dist": null, "requires_python": "", "summary": "Simple Python Wrapper for common GUS Objects", "version": "0.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>guspy</h1>\n<p>Gus Python library that allows for simple SOQL queries on GUS, as well as Authentication to GUS.</p>\n<p>Current Version: <code>0.17</code></p>\n<h2>Installation</h2>\n<p>To install, simply use your virtualenv:</p>\n<pre><code>pip install guspy\n</code></pre>\n<h2>Repackaging Instructions</h2>\n<p>To repackage, change the version number of the <code>setup.py</code> file</p>\n<pre><code>python3 setup.py bdist_wheel\npython3 -m twine upload dist/*\n</code></pre>\n<h2>Summary</h2>\n<p>Example:</p>\n<pre><code>query = Case(&lt;SPECIFICATIONS OF OBJECT&gt;).from_single(&lt;FIELDS REQUIRED&gt;)\n</code></pre>\n<p>All queries on the objects can be summarised to accept parameters in two places (except special conditions such as GRE specific objects)\nThe first is the specifications of the object itself (e.g. Case Number, etc) whereas the second is the fields required to be shown.</p>\n<h2><strong>Cases Object</strong></h2>\n<p><code>Case</code> class can be initialised with the case number or list of case numbers. In which the single case_number would be using <code>from_single</code> method, and the list of case_numbers will be using the <code>from_multiple</code> method.</p>\n<pre><code>from guspy import Case\nquery = Case(\"8190582\").from_single(\"Id\")\nquery = Case([\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n</code></pre>\n<p>Special: GRE Cases can be simply queried.</p>\n<pre><code>gre_query = Case().gre(\"Id, CaseNumber\")\n</code></pre>\n<h2><strong>CaseComments Object</strong></h2>\n<p><code>CaseComment</code> object can be initialised with either <code>case_number</code> or <code>comment_id</code>, in which similar to the <code>Case</code> object, would be using <code>from_single</code> or <code>from_multiple</code> functions to get a single case/comment or multiple case/comment respectively</p>\n<pre><code>from guspy import CaseComment\nquery = CaseComment(case_number=\"\").from_single(\"Id\")\nquery = CaseComment(case_number=[\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n</code></pre>\n<p>Special: GRE Cases can be simply queried</p>\n<pre><code>query = CaseComment().gre(\"Id, CommentBody\")\n</code></pre>\n<h2><strong>ScrumMember Object</strong></h2>\n<p><code>ScrumMember</code> object can be initialised with <code>team_name</code>, in which you can use <code>from_single</code> function to get attributes of the Scrum Members</p>\n<pre><code>from guspy import ScrumMember\nquery = ScrumMember(team_name=\"\").from_single(\"Id\")\n</code></pre>\n<p>Special: GRE Cases can be simply queried</p>\n<pre><code>query = ScrumMember().gre(\"Id, Name\")\n</code></pre>\n<h2><strong>User Object</strong></h2>\n<p><code>User</code> object can be initialised with <code>user_id</code>, in which you can use <code>from_single</code> or <code>from_multiple</code> functions to get attributes of the Users</p>\n<pre><code>from guspy import User\nquery = User(user_id=\"\").from_single(\"Id\")\nquery = User(user_id=[\"8190582\",\"8190583\"]).from_multiple(\"Id\")\n</code></pre>\n<p>Special: GRE Cases can be simply queried</p>\n<pre><code>query = User().gre(\"Id, Division\")\n</code></pre>\n<h2><strong>ReleaseEvent Object</strong></h2>\n<p>To be updated</p>\n<h2><strong>Task Object</strong></h2>\n<p>To be updated</p>\n<h2><strong>InstanceDatacenter Object</strong></h2>\n<p>To be updated</p>\n<h2><strong>Logging In</strong></h2>\n<pre><code>from guspy.access import Gus\ngus = Gus(username=username,\n          password=password).connect()\n</code></pre>\n<p>Upon logging in, use the commands above to get the query string for the object required (CaseComments, ReleaseEvents, etc.) before executing the following command:</p>\n<pre><code>gus.raw(&lt;REQUIRED_QUERY&gt;)\ngus.parse(&lt;REQUIRED_QUERY&gt;)\n</code></pre>\n<p>Where <code>raw</code> will return the raw data, and <code>parse</code> will return in a DataFrame format.</p>\n\n          </div>"}, "last_serial": 5791215, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fcd5314b2a4962b2368e722e4524c202", "sha256": "3d7b2aa43d2174b6829bdfef62beae9aa957931fac5f617e8c11148c19922a46"}, "downloads": -1, "filename": "guspy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fcd5314b2a4962b2368e722e4524c202", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7120, "upload_time": "2019-08-13T07:47:19", "upload_time_iso_8601": "2019-08-13T07:47:19.868920Z", "url": "https://files.pythonhosted.org/packages/ec/f7/c2018addf48b7e6a76f0304b6a57ad81df9b06941c5da454b9b825ff5f55/guspy-0.1-py3-none-any.whl", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "fe9351b967496781e917959c1c8c7dd0", "sha256": "761b89d4158a785cb1d0f445bdcbeb52638c45e75d491529249585c3206ec25a"}, "downloads": -1, "filename": "guspy-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "fe9351b967496781e917959c1c8c7dd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8099, "upload_time": "2019-08-13T08:43:06", "upload_time_iso_8601": "2019-08-13T08:43:06.565759Z", "url": "https://files.pythonhosted.org/packages/d5/b2/680a1d11d9d2a86446b65711995f85e5f283b35fdb624425c2a1f07ac012/guspy-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b30603a5a5c74aa2d334a910e78cf91e", "sha256": "34963b5313728970d305591db62e92f3c1409c535cc07cc3325ab57be0b17692"}, "downloads": -1, "filename": "guspy-0.11.tar.gz", "has_sig": false, "md5_digest": "b30603a5a5c74aa2d334a910e78cf91e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6146, "upload_time": "2019-08-13T08:43:08", "upload_time_iso_8601": "2019-08-13T08:43:08.318778Z", "url": "https://files.pythonhosted.org/packages/36/77/979795209edecd4be70bedae911d8ef83f5ae0905cba63359ca5a691c7d8/guspy-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "7d818f2ce4286401a481aa9d98068e53", "sha256": "fe6ceb6d12d4369acb59ddc4f42a147ee1180aa45867cdaeaaf5a569e1c95266"}, "downloads": -1, "filename": "guspy-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "7d818f2ce4286401a481aa9d98068e53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8204, "upload_time": "2019-08-14T03:02:19", "upload_time_iso_8601": "2019-08-14T03:02:19.976991Z", "url": "https://files.pythonhosted.org/packages/03/db/0b8e15dc8ee1e02636e45b288812af3f869789ec7bae86b345fc7ba6cd96/guspy-0.12-py3-none-any.whl", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "6d590fc19b2bb394c29e2f565e074d91", "sha256": "555b39ef2d9d4abf00fe07a7863dab4682cf57f3bb0b17be3ea946fca03ad84c"}, "downloads": -1, "filename": "guspy-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "6d590fc19b2bb394c29e2f565e074d91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8299, "upload_time": "2019-08-26T07:20:14", "upload_time_iso_8601": "2019-08-26T07:20:14.340059Z", "url": "https://files.pythonhosted.org/packages/97/49/fcd4c096bcccc0280cf9b965251342e4e43ca779f4b4f5de2c95e73622f1/guspy-0.13-py3-none-any.whl", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "de9eeadaee91230ffd0fb20e3f7b8f3f", "sha256": "95858049c36fad18b5dc2f0290380e3f3e163deaa0e43d43126818e7772ac07d"}, "downloads": -1, "filename": "guspy-0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "de9eeadaee91230ffd0fb20e3f7b8f3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8310, "upload_time": "2019-08-26T09:32:02", "upload_time_iso_8601": "2019-08-26T09:32:02.487487Z", "url": "https://files.pythonhosted.org/packages/3b/d7/164d49ee2e8a03e5f536eaea6d5299fc941b2355594e2aab57a0db54d7ca/guspy-0.14-py3-none-any.whl", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "b7d23dc5d1dec339a2d843901cb4866c", "sha256": "0367b6d719ab5fd4dd266083237197868fe7caeb0caaf0d22c1aec2f128e2466"}, "downloads": -1, "filename": "guspy-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "b7d23dc5d1dec339a2d843901cb4866c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8331, "upload_time": "2019-08-27T08:40:22", "upload_time_iso_8601": "2019-08-27T08:40:22.741689Z", "url": "https://files.pythonhosted.org/packages/05/78/1abb203f7d7c1e661d83429c393ca37370d6d56d4d7c7b5654615b2da664/guspy-0.15-py3-none-any.whl", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "395d722cd0f0a9508db2f1ad0b59e6f8", "sha256": "1aaaacd5fa55232dc3e2f6874e0c7795b342a4acbc7a5482c150f721159f22de"}, "downloads": -1, "filename": "guspy-0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "395d722cd0f0a9508db2f1ad0b59e6f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8336, "upload_time": "2019-09-02T02:35:42", "upload_time_iso_8601": "2019-09-02T02:35:42.238713Z", "url": "https://files.pythonhosted.org/packages/7f/76/c891224bf154faa71389a95691d67b93e34667a9b86c946275f5686ef1a5/guspy-0.16-py3-none-any.whl", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "31152d3807d5283d29f2ef1afc7419d9", "sha256": "fcbc88c1a99af27fc1cee9c2c0dd13a985a4c4791c6ecea5b0fd7bf9df462edc"}, "downloads": -1, "filename": "guspy-0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "31152d3807d5283d29f2ef1afc7419d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8342, "upload_time": "2019-09-06T09:26:44", "upload_time_iso_8601": "2019-09-06T09:26:44.054982Z", "url": "https://files.pythonhosted.org/packages/88/9a/02dabeb0d5d42c496960c17b62595d500ad0500ac2c6da12038d7de4b3a3/guspy-0.17-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31152d3807d5283d29f2ef1afc7419d9", "sha256": "fcbc88c1a99af27fc1cee9c2c0dd13a985a4c4791c6ecea5b0fd7bf9df462edc"}, "downloads": -1, "filename": "guspy-0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "31152d3807d5283d29f2ef1afc7419d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8342, "upload_time": "2019-09-06T09:26:44", "upload_time_iso_8601": "2019-09-06T09:26:44.054982Z", "url": "https://files.pythonhosted.org/packages/88/9a/02dabeb0d5d42c496960c17b62595d500ad0500ac2c6da12038d7de4b3a3/guspy-0.17-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:09 2020"}