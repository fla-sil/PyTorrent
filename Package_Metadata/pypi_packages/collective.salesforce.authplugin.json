{"info": {"author": "Plone/Salesforce Integration Group", "author_email": "plonesf@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Zope2", "Programming Language :: Python"], "description": "Overview\n========\n\nUsing the architecture of Zope's Pluggable Authentication Service and PlonePAS, Salesforce\nAuth Plugin provides the infrastructure to manage site users as arbitrary objects within a \nPlone portal.  Features and capabilities for Plone user management via Salesforce.com include:\n\n\n- Configurable SFObject type to serve as Plone user for authentication\n- Configurable username and password field on an SFObject for credential checking\n- Optional password encryption\n- Optional caching of user data from Salesforce.com to improve performance\n- Addition of new users as designated SFObject type from Plone portal into Salesforce.com\n- Property retrieval and setting for Plone users as stored in Salesforce.com\n\nInstallation, Configuration, and Usage\n======================================\n\nRequirements\n------------\n\n * Active Salesforce.com account with API access from http://www.salesforce.com\n\n * Developed and tested against Plone 3.x and 4.0.\n\n * salesforcebaseconnector (and its pre-reqs, such as 'beatbox' python product)\n   Instructions for configuration of salesforcebaseconnector are in README.txt of the\n   product which is downloadable here:\n   http://plone.org/products/salesforcebaseconnector\n\n * Some basic understanding the PAS and PlonePAS infrastructure and capabilities\n\nSteps for Installation into Plone\n---------------------------------\n\n1. IMPORTANT: Make sure you install/configure salesforcebaseconnector as\n   mentioned above and set your login and password.\n\n2. Install the salesforceauthplugin product as you would for any normal Plone\n   product (using Add/Remove Products or the Quick Installer).\n\nConfigure Plugin\n----------------\n\nThough you've already installed the Salesforce Auth Plugin, which creates and\nactivates a PAS plugin for use in authentication, user creation, and profile\nmanagement, this has no impact on your Plone site's authentication scheme until\nyou've done some additional configuration.\n\nConfigure the salesforceauthplugin through the ZMI, at\nacl_users/salesforceauthmultiplugin. (This is the acl_users *within* your Plone\nsite, not the one at the Zope root.)\n\nAt a minimum, you need to determine and configure on the Salesforce Auth Plugin:\n\n * Which Salesforce.com object (i.e. Contact, Lead, Account, etc.) you'll treat\n   as users within your site (remember that if you'd like to treat multiple\n   Salesforce objects as users, you can do so by setting up multiple Salesforce\n   Auth Plugins).  See \"Caveats\" in this document for more information on this.\n\n * Which fields of the aforementioned chosen SFObject will serve as the username\n   and password credentials for authentication.  At this point, the Salesforce\n   Auth Plugin assumes that credentials will include and be limited to some\n   field used for \"username\" and another optionally encryption aware field for\n   password. This would look like::\n     \n     password|Password__c\n     username|UserName__c\n\n * In addition, you can enable password encryption, setup additional\n   authentication requirements (in the form of a SOQL statement), and choose which\n   properties to manage in Salesforce.com, rather than within Mutable Properties.\n   This would look like::\n  \n     assistant_name|AssistantName\n     department|Department\n\nCaching\n-------\n \nIn addition to creating and activating a PAS plugin for use in authentication,\nuser creation, and profile management within your acl_users object, Salesforce\nAuth Plugin also associates a RAM cache with the created plugin.  The cache\nperiod is set for 10 minutes by default.  This is essential for ensuring that\nthe use of Salesforce Auth Plugin doesn't adversely impact the performance of\nyour Plone site.\n\nThe Salesforce Auth Plugin caches user enumerations and user properties.  If you\nonly manage your users and user properties through Plone, the cache will not have\nany adverse effects, as the Salesforce Auth Plugin will invalidate the cache when\nchanges take place.  However, be aware that when modifying users through\nSalesforce.com, Plone may not be aware of the changes for up to 10 minutes.  This\napplies for any of the following modifications via Salesforce.com:\n  \n * new user added\n * user removed\n * user properties for user are changed\n  \nTo modify the cache period: In the ZMI, go to SalesforceAuthPluginCache in your\nportal root.\n  \nTo remove the cache: In the ZMI, go to acl_users/salesforceauthmultiplugin and\ngo to the Caching tab.\n  \nUser authentication can also be optionally cached.  This is disabled by default,\nand is probably unnecessary unless you routinely have users logging into Plone\nfrom other sources besides the Salesforce Auth Plugin. To enable it, set\nCACHE_PASSWORDS to True in config.py.  This may boost performance at the expense\nof also introducing a 10-minute delay when passwords are changed via\nsalesforce.com.\n\nThrough The Web Testing\n-----------------------\n\nLet's try joining a site and seeing if the login appears in Salesforce.com\n\nOnce the plugin is installed open up a browser and enter the URL of your\nPlone instance. You may need to log out first which will require closing your\nbrowser and reopening it.\n\nIn Plone 3.0, registration is disabled by default.\n\nAs site admin, head over to \"Site Setup->Security\" then check the \n\"Enable self-registration\" option.  \n   \nYou may want to make sure your new Plone site's Mail server settings (and\n\"From:\" address) are setup so when you create a new account, Plone can\nsend its Welcome email.\n\nClick on the link to join (in the upper right hand corner, next to the log-in\nlink) to create a new login.\n\nGo ahead and add the user and then log in to your Salesforce account\nat http://www.salesforce.com. The user you just added\nshould be found in your list of contacts.\n\nThen, you should be able to log out of Plone and try logging in as\nthe new user you just created.  See the \"Customizing\" section of this\ndocument for tips about how you might tweak the user experience a bit more.\n\nCustomizing\n-----------\n\nFor simple tweaks to the personalize form, see documentation in \n\"customizing_personalize.txt\" within the docs directory of this package.\n\nTips\n----  \n  \n * If you're setting a Date or DateTime property on a Salesforce object\n   make sure your input field type is of DateTime format.  Manually, this \n   is done with::\n     \n    <input type=\"text\" name=\"birthdate:date\"/>\n\nCaveats\n-------\n\n * At this time, Contact, Account, and Lead objects have been pretty \n   thoroughly tested and are the target use cases for this product.  One might\n   commonly want to use some custom Salesforce.com object to serve as the user\n   object. While technically, probably any object could work for authentication,\n   assuming a username and password field have been configured, other\n   Salesforce.com objects may or may not work with all available PAS\n   configuration options.\n\n * As a follow-up to the caveat regarding which Salesforce objects are likely\n   to work with this product, at this time objects where there are required\n   fields that don't except a string data type will not work as a user adder\n   utility.\n   \n   For example, the Event object requires an integer for length in\n   minutes as well as an HTML4 formatted date/time for start of event.  By\n   contrast, the interface for doAddUser mandates that only the login and\n   password are passed in the signature. For this reason, when create is called\n   via the Salesforce.com API, we use the provided login value for all required\n   fields needed to create the object.  Thus, PAS join capability is unlikely\n   to pass doAddUser the appropriate data types for all required fields for more\n   complex Salesforce objects (a la Event) in order to allow the initial\n   creation of the object to happen.  Of course, PlonePAS will then go forth and\n   update (using set property capabilities) those fields that were temporarily\n   stocked with the login value if they were asked somewhere in the signup\n   process, since this happens after doAddUser is called.\n\n * Self-Service Users and Salesforce.com Users have not been tested with this\n   product.  They may or may not work.\n\n\nAdditional Resources\n====================\n\nProduct home is http://plone.org/products/salesforceauthplugin. A\n`documentation area`_ and `issue tracker`_ are available.\n\n.. _documentation area: http://plone.org/documentation/manual/integrating-plone-with-salesforce.com\n.. _issue tracker: http://plone.org/products/salesforceauthplugin/issues\n\nA Google Group, called `Plone Salesforce Integration`_ exists with the sole aim\nof discussing and developing tools to make Plone integrate well with\nSalesforce.com.  If you have a question, joining this group and posting to the\nmailing list is the likely best way to get support.\n\n.. _Plone Salesforce Integration: http://groups.google.com/group/plonesf\n\nFailing that, please try using the Plone users' mailing list or the #plone IRC\nchannel on freenode for support requests. If you are unable to get your\nquestions answered there, or are interested in helping develop the product, see\nthe credits below for individuals you might contact.\n\nCredits\n=======\n\nThe Plone & Salesforce crew in Seattle and Portland:\n\n- Jon Baldivieso <jonb --AT-- groundwire --DOT-- org>\n- Andrew Burkhalter <andrewburkhalter --AT-- gmail --DOT-- com>\n- Brian Gershon <briang --AT-- webcollective --DOT-- coop>\n- David Glick <davidglick --AT-- groundwire --DOT-- org> \n- Jesse Snyder <jesses --AT-- npowerseattle --DOT-- org>\n\nThanks to Salesforce.com Foundation and Enfold Systems for their gift and work\non beatbox and the original proof of concept code that has become Salesforce\nAuth Plugin (see: \nhttp://gokubi.com/archives/onenorthwest-gets-grant-from-salesforcecom-to-integrate-with-plone)\n\nSee the changelog for the growing list of people who helped\nwith particular features or bugs.\n\nLicense\n=======\nDistributed under the GPL.\n\nSee LICENSE.txt and LICENSE.GPL for details.\n\nRunning Tests\n=============\n\nIt is strongly recommended that you run your tests against a free developer\naccount, rather than a real production Salesforce.com instance. ... With that\nsaid, to run the tests for Salesforce Auth Plugin do the following:\n\nConfigure your Salesforce.com instance:\n---------------------------------------\n\nIn order to successfully run all of the automated unit tests, some\nmodifications need to happen within your Salesforce.com instance.  \n\nIn many of the tests, authentication, user creation, and modification happen\nagainst the Salesforce.com contact and/or lead object.  Specifically, the unit\ntests create objects and then authenticate against two custom fields: Password\nand UserName.\n\nFor all tests to successfully work create and configure the following \nfields as shown below:\n\n  =================  ================  =============\n  Field Label        Field Name        Field Type\n  =================  ================  =============\n  Password           Password          Text(100)\n  User Name          UserName          Text(50)\n  Favorite Boolean   FavoriteBoolean   Checkbox\n  Favorite Float     FavoriteFloat     Number(13, 5)\n  =================  ================  =============\n\nNote: You can accept the defaults for the other field attributes.\n\nRead:\n-----\n\nRunning Tests --> \"To run tests in a unix-like environment\" from\n`SalesforceBaseConnector`_, which is a dependency, so you should have it :)\n\n.. _SalesforceBaseConnector: http://plone.org/products/salesforcebaseconnector\n\nRunning the tests\n-----------------\n\nRather than running the test suite for salesforcebaseconnector\ndo the following:\n\n    bin/instance test -s collective.salesforce.authplugin\n\nIf you have trouble running tests, consult \"FAQ about running tests\" from\nSalesforceBaseConnector.\n\nChangelog\n=========\n\n1.5.2 (2011-12-20)\n\n  - Bug fix: don't break during uninstallation if the plugin has already been\n    deleted.\n    [davisagli]\n\n1.5.1 (2011-01-26)\n\n  - Fixed bug where a \"baseconnector\" attribute was being accidentally\n    persisted.\n    [rocky]\n\n1.5 (2010-11-24)\n\n - Don't try to retrieve properties for groups.\n   [davisagli]\n\n - Disallow searching by the email property for now, as an optimization\n   targeted at the Plone users & groups control panel.\n   [davisagli]\n\n - Optimization for when querying for user existence or user properties on\n   many users after doing a full enumeration: fetch the properties during\n   enumeration and populate caches.\n   [davisagli]\n\n - Deal with unicode userids supplied by the Plone 4 session plugin.\n   [davisagli]\n\n - Don't separate the login and id in the enumerateUsers cache key, since we\n   treat them the same way.\n   [davisagli]\n\n - Optimization for when using multiple auth plugins: Use a mapping of object\n   type \"hints\" to avoid unneeded queries.  Also include the plugin_id in the\n   cache key to avoid multiple plugins clobbering each others' caches.\n   [davisagli]\n\n - Optimization: populate getPropertiesForUser and enumerateUsers cache during\n   authentication for calls that we know will happen.\n   [davisagli]\n\n1.4 (2010-05-12)\n\n - Fix for ids and logins passed to enumerateUsers as unicode strings.\n   [davisagli]\n\n - Make it possible to specify an id for the plugin when calling the install\n   method, to facilitate installing multiple auth plugins.\n   [davisagli]\n\n - Update one more query call using the deprecated call signature.\n   [davisagli]\n\n - Make the properties plugin set an sf_obj_type property indicating the\n   sObject type associated with the Salesforce auth plugin.  This can be\n   useful if multiple Salesforce auth plugins are being used.\n   [davisagli]\n\n1.3 (2010-02-24)\n\n - Fixed issue that prevented removing an additional authentication clause\n   once it had been added.\n   [davisagli]\n\n - Fixed issue with creating query for enumerating users when an additional\n   authentication clause was configured.\n   [davisagli]\n\n1.2 (2010-01-25)\n\n - Add workaround for issue where the type of a user property returning a\n   null value from Salesforce couldn't be guessed, resulting in breakage of\n   the Plone user preferences page and other things that fetch the full\n   property sheet.\n   [davisagli]\n\n1.1 (2009-12-17)\n\n - Zope 2.12 and Plone 4 are now supported.\n   [davisagli]\n\n - Don't try to authenticate if the credentials don't contain a login and\n   password (such as if they are from the session plugin). This avoids\n   some spurious swallowed exceptions, and drastically reduces the need for\n   turning CACHE_PASSWORDS on to avoid needless queries to Salesforce --\n   although turning it on might still be a good idea if you're routinely\n   logging in users from other sources alongside Salesforce.\n   [davisagli]\n\n1.1rc1 (2009-09-16)\n\n - In the case of a SoapFaultError when trying to connect to Salesforce,\n   catch the exception, log a warning, and return None so that PAS tries\n   the next plugin.  This makes it easier to recover after the password\n   gets changed in Salesforce.\n   [davisagli]\n\n1.1b1 (2009-09-08)\n\n - Updated query calls to use a full SOQL statement.\n   [davisagli]\n\n - _buildAuthenticationQuery now returns a full SOQL statement rather than\n   the old set of 3 parameters that used to be expected by\n   salesforcebaseconnector's query method.\n   [davisagli]\n\n - Updated version spec for dependency on beatbox.\n   [davisagli]\n\n1.0b2\n\n - Critical fix for security vulnerability when using \n   collective.salesforce.authplugin with configuration constant \n   CACHE_PASSWORDS enabled. The view stored within the \n   SalesforceAuthPluginCache RAM Cache Manager as \n   authenticateCredentials-username doesn't include a hash of the user's \n   password thereby allowing others to log into the portal with a correct \n   username, but incorrect password after a successful login has been \n   accomplished with the correct credentials for the length of the cache \n   period. Though CACHE_PASSWORDS is disabled by default, most users are \n   likely to have enabled this option in attempt to either improve performance \n   or save Salesforce.com API requests.  Users of versions prior to 1.0b2 with \n   CACHE_PASSWORDS enabled are encouraged to upgrade immediately!\n   [andrewb, thanks to Quintagroup for discovery and patch]\n \n - Stop using trademarked Salesforce.com icon. [davisagli]\n\n - More gracefully handle Plone's default sharing tab which searches for \n   similarities to a given query within id, login, and fullname. The latter \n   was leading to erroneous results and often completely exceeding the timeout\n   period for XHR calls from the form itself. The workaround is to inspect the\n   search parameters for fullname and if not mapped within the\n   'authentication' or 'properties' treat the search query as a login so the \n   search doesn't timeout and lose other valid results. [jessesnyder]\n \n - User Enumeration accounts for Additional Condition Clause, which was \n   previously supported in authentication, but various search forms would \n   return ineligible users per the site's configuration. [andrewb]\n\n1.0b1\n\n - Initial release of egg-based Salesforce Auth Plugin product with \n   significant historical influence from various other proof of concept \n   implementations. [Thanks to Salesforce.com Foundation, Enfold Systems, \n   ONE/Northwest, NPower Seattle, Web Collective, The Plone/Salesforce \n   Integration crew (http://groups.google.com/group/plonesf)]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://groups.google.com/group/plonesf", "keywords": "Zope CMF Plone Salesforce.com CRM PAS authentication", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.salesforce.authplugin", "package_url": "https://pypi.org/project/collective.salesforce.authplugin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.salesforce.authplugin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://groups.google.com/group/plonesf"}, "release_url": "https://pypi.org/project/collective.salesforce.authplugin/1.5.2/", "requires_dist": null, "requires_python": null, "summary": "Zope PAS plugin providing authentication against objects in Salesforce", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Using the architecture of Zope\u2019s Pluggable Authentication Service and PlonePAS, Salesforce\nAuth Plugin provides the infrastructure to manage site users as arbitrary objects within a\nPlone portal.  Features and capabilities for Plone user management via Salesforce.com include:</p>\n<ul>\n<li>Configurable SFObject type to serve as Plone user for authentication</li>\n<li>Configurable username and password field on an SFObject for credential checking</li>\n<li>Optional password encryption</li>\n<li>Optional caching of user data from Salesforce.com to improve performance</li>\n<li>Addition of new users as designated SFObject type from Plone portal into Salesforce.com</li>\n<li>Property retrieval and setting for Plone users as stored in Salesforce.com</li>\n</ul>\n</div>\n<div id=\"installation-configuration-and-usage\">\n<h2>Installation, Configuration, and Usage</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<blockquote>\n<ul>\n<li>Active Salesforce.com account with API access from <a href=\"http://www.salesforce.com\" rel=\"nofollow\">http://www.salesforce.com</a></li>\n<li>Developed and tested against Plone 3.x and 4.0.</li>\n<li>salesforcebaseconnector (and its pre-reqs, such as \u2018beatbox\u2019 python product)\nInstructions for configuration of salesforcebaseconnector are in README.txt of the\nproduct which is downloadable here:\n<a href=\"http://plone.org/products/salesforcebaseconnector\" rel=\"nofollow\">http://plone.org/products/salesforcebaseconnector</a></li>\n<li>Some basic understanding the PAS and PlonePAS infrastructure and capabilities</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"steps-for-installation-into-plone\">\n<h3>Steps for Installation into Plone</h3>\n<ol>\n<li>IMPORTANT: Make sure you install/configure salesforcebaseconnector as\nmentioned above and set your login and password.</li>\n<li>Install the salesforceauthplugin product as you would for any normal Plone\nproduct (using Add/Remove Products or the Quick Installer).</li>\n</ol>\n</div>\n<div id=\"configure-plugin\">\n<h3>Configure Plugin</h3>\n<p>Though you\u2019ve already installed the Salesforce Auth Plugin, which creates and\nactivates a PAS plugin for use in authentication, user creation, and profile\nmanagement, this has no impact on your Plone site\u2019s authentication scheme until\nyou\u2019ve done some additional configuration.</p>\n<p>Configure the salesforceauthplugin through the ZMI, at\nacl_users/salesforceauthmultiplugin. (This is the acl_users <em>within</em> your Plone\nsite, not the one at the Zope root.)</p>\n<p>At a minimum, you need to determine and configure on the Salesforce Auth Plugin:</p>\n<blockquote>\n<ul>\n<li><p>Which Salesforce.com object (i.e. Contact, Lead, Account, etc.) you\u2019ll treat\nas users within your site (remember that if you\u2019d like to treat multiple\nSalesforce objects as users, you can do so by setting up multiple Salesforce\nAuth Plugins).  See \u201cCaveats\u201d in this document for more information on this.</p>\n</li>\n<li><p>Which fields of the aforementioned chosen SFObject will serve as the username\nand password credentials for authentication.  At this point, the Salesforce\nAuth Plugin assumes that credentials will include and be limited to some\nfield used for \u201cusername\u201d and another optionally encryption aware field for\npassword. This would look like:</p>\n<pre>password|Password__c\nusername|UserName__c\n</pre>\n</li>\n<li><p>In addition, you can enable password encryption, setup additional\nauthentication requirements (in the form of a SOQL statement), and choose which\nproperties to manage in Salesforce.com, rather than within Mutable Properties.\nThis would look like:</p>\n<pre>assistant_name|AssistantName\ndepartment|Department\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"caching\">\n<h3>Caching</h3>\n<p>In addition to creating and activating a PAS plugin for use in authentication,\nuser creation, and profile management within your acl_users object, Salesforce\nAuth Plugin also associates a RAM cache with the created plugin.  The cache\nperiod is set for 10 minutes by default.  This is essential for ensuring that\nthe use of Salesforce Auth Plugin doesn\u2019t adversely impact the performance of\nyour Plone site.</p>\n<p>The Salesforce Auth Plugin caches user enumerations and user properties.  If you\nonly manage your users and user properties through Plone, the cache will not have\nany adverse effects, as the Salesforce Auth Plugin will invalidate the cache when\nchanges take place.  However, be aware that when modifying users through\nSalesforce.com, Plone may not be aware of the changes for up to 10 minutes.  This\napplies for any of the following modifications via Salesforce.com:</p>\n<blockquote>\n<ul>\n<li>new user added</li>\n<li>user removed</li>\n<li>user properties for user are changed</li>\n</ul>\n</blockquote>\n<p>To modify the cache period: In the ZMI, go to SalesforceAuthPluginCache in your\nportal root.</p>\n<p>To remove the cache: In the ZMI, go to acl_users/salesforceauthmultiplugin and\ngo to the Caching tab.</p>\n<p>User authentication can also be optionally cached.  This is disabled by default,\nand is probably unnecessary unless you routinely have users logging into Plone\nfrom other sources besides the Salesforce Auth Plugin. To enable it, set\nCACHE_PASSWORDS to True in config.py.  This may boost performance at the expense\nof also introducing a 10-minute delay when passwords are changed via\nsalesforce.com.</p>\n</div>\n<div id=\"through-the-web-testing\">\n<h3>Through The Web Testing</h3>\n<p>Let\u2019s try joining a site and seeing if the login appears in Salesforce.com</p>\n<p>Once the plugin is installed open up a browser and enter the URL of your\nPlone instance. You may need to log out first which will require closing your\nbrowser and reopening it.</p>\n<p>In Plone 3.0, registration is disabled by default.</p>\n<p>As site admin, head over to \u201cSite Setup-&gt;Security\u201d then check the\n\u201cEnable self-registration\u201d option.</p>\n<p>You may want to make sure your new Plone site\u2019s Mail server settings (and\n\u201cFrom:\u201d address) are setup so when you create a new account, Plone can\nsend its Welcome email.</p>\n<p>Click on the link to join (in the upper right hand corner, next to the log-in\nlink) to create a new login.</p>\n<p>Go ahead and add the user and then log in to your Salesforce account\nat <a href=\"http://www.salesforce.com\" rel=\"nofollow\">http://www.salesforce.com</a>. The user you just added\nshould be found in your list of contacts.</p>\n<p>Then, you should be able to log out of Plone and try logging in as\nthe new user you just created.  See the \u201cCustomizing\u201d section of this\ndocument for tips about how you might tweak the user experience a bit more.</p>\n</div>\n<div id=\"customizing\">\n<h3>Customizing</h3>\n<p>For simple tweaks to the personalize form, see documentation in\n\u201ccustomizing_personalize.txt\u201d within the docs directory of this package.</p>\n</div>\n<div id=\"tips\">\n<h3>Tips</h3>\n<blockquote>\n<ul>\n<li><p>If you\u2019re setting a Date or DateTime property on a Salesforce object\nmake sure your input field type is of DateTime format.  Manually, this\nis done with:</p>\n<pre>&lt;input type=\"text\" name=\"birthdate:date\"/&gt;\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"caveats\">\n<h3>Caveats</h3>\n<blockquote>\n<ul>\n<li><p>At this time, Contact, Account, and Lead objects have been pretty\nthoroughly tested and are the target use cases for this product.  One might\ncommonly want to use some custom Salesforce.com object to serve as the user\nobject. While technically, probably any object could work for authentication,\nassuming a username and password field have been configured, other\nSalesforce.com objects may or may not work with all available PAS\nconfiguration options.</p>\n</li>\n<li><p>As a follow-up to the caveat regarding which Salesforce objects are likely\nto work with this product, at this time objects where there are required\nfields that don\u2019t except a string data type will not work as a user adder\nutility.</p>\n<p>For example, the Event object requires an integer for length in\nminutes as well as an HTML4 formatted date/time for start of event.  By\ncontrast, the interface for doAddUser mandates that only the login and\npassword are passed in the signature. For this reason, when create is called\nvia the Salesforce.com API, we use the provided login value for all required\nfields needed to create the object.  Thus, PAS join capability is unlikely\nto pass doAddUser the appropriate data types for all required fields for more\ncomplex Salesforce objects (a la Event) in order to allow the initial\ncreation of the object to happen.  Of course, PlonePAS will then go forth and\nupdate (using set property capabilities) those fields that were temporarily\nstocked with the login value if they were asked somewhere in the signup\nprocess, since this happens after doAddUser is called.</p>\n</li>\n<li><p>Self-Service Users and Salesforce.com Users have not been tested with this\nproduct.  They may or may not work.</p>\n</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"additional-resources\">\n<h2>Additional Resources</h2>\n<p>Product home is <a href=\"http://plone.org/products/salesforceauthplugin\" rel=\"nofollow\">http://plone.org/products/salesforceauthplugin</a>. A\n<a href=\"http://plone.org/documentation/manual/integrating-plone-with-salesforce.com\" rel=\"nofollow\">documentation area</a> and <a href=\"http://plone.org/products/salesforceauthplugin/issues\" rel=\"nofollow\">issue tracker</a> are available.</p>\n<p>A Google Group, called <a href=\"http://groups.google.com/group/plonesf\" rel=\"nofollow\">Plone Salesforce Integration</a> exists with the sole aim\nof discussing and developing tools to make Plone integrate well with\nSalesforce.com.  If you have a question, joining this group and posting to the\nmailing list is the likely best way to get support.</p>\n<p>Failing that, please try using the Plone users\u2019 mailing list or the #plone IRC\nchannel on freenode for support requests. If you are unable to get your\nquestions answered there, or are interested in helping develop the product, see\nthe credits below for individuals you might contact.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>The Plone &amp; Salesforce crew in Seattle and Portland:</p>\n<ul>\n<li>Jon Baldivieso &lt;jonb \u2013AT\u2013 groundwire \u2013DOT\u2013 org&gt;</li>\n<li>Andrew Burkhalter &lt;andrewburkhalter \u2013AT\u2013 gmail \u2013DOT\u2013 com&gt;</li>\n<li>Brian Gershon &lt;briang \u2013AT\u2013 webcollective \u2013DOT\u2013 coop&gt;</li>\n<li>David Glick &lt;davidglick \u2013AT\u2013 groundwire \u2013DOT\u2013 org&gt;</li>\n<li>Jesse Snyder &lt;jesses \u2013AT\u2013 npowerseattle \u2013DOT\u2013 org&gt;</li>\n</ul>\n<p>Thanks to Salesforce.com Foundation and Enfold Systems for their gift and work\non beatbox and the original proof of concept code that has become Salesforce\nAuth Plugin (see:\n<a href=\"http://gokubi.com/archives/onenorthwest-gets-grant-from-salesforcecom-to-integrate-with-plone\" rel=\"nofollow\">http://gokubi.com/archives/onenorthwest-gets-grant-from-salesforcecom-to-integrate-with-plone</a>)</p>\n<p>See the changelog for the growing list of people who helped\nwith particular features or bugs.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the GPL.</p>\n<p>See LICENSE.txt and LICENSE.GPL for details.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>It is strongly recommended that you run your tests against a free developer\naccount, rather than a real production Salesforce.com instance. \u2026 With that\nsaid, to run the tests for Salesforce Auth Plugin do the following:</p>\n<div id=\"configure-your-salesforce-com-instance\">\n<h3>Configure your Salesforce.com instance:</h3>\n<p>In order to successfully run all of the automated unit tests, some\nmodifications need to happen within your Salesforce.com instance.</p>\n<p>In many of the tests, authentication, user creation, and modification happen\nagainst the Salesforce.com contact and/or lead object.  Specifically, the unit\ntests create objects and then authenticate against two custom fields: Password\nand UserName.</p>\n<p>For all tests to successfully work create and configure the following\nfields as shown below:</p>\n<blockquote>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Field Label</th>\n<th>Field Name</th>\n<th>Field Type</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Password</td>\n<td>Password</td>\n<td>Text(100)</td>\n</tr>\n<tr><td>User Name</td>\n<td>UserName</td>\n<td>Text(50)</td>\n</tr>\n<tr><td>Favorite Boolean</td>\n<td>FavoriteBoolean</td>\n<td>Checkbox</td>\n</tr>\n<tr><td>Favorite Float</td>\n<td>FavoriteFloat</td>\n<td>Number(13, 5)</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>Note: You can accept the defaults for the other field attributes.</p>\n</div>\n<div id=\"read\">\n<h3>Read:</h3>\n<p>Running Tests \u2013&gt; \u201cTo run tests in a unix-like environment\u201d from\n<a href=\"http://plone.org/products/salesforcebaseconnector\" rel=\"nofollow\">SalesforceBaseConnector</a>, which is a dependency, so you should have it :)</p>\n</div>\n<div id=\"running-the-tests\">\n<h3>Running the tests</h3>\n<p>Rather than running the test suite for salesforcebaseconnector\ndo the following:</p>\n<blockquote>\nbin/instance test -s collective.salesforce.authplugin</blockquote>\n<p>If you have trouble running tests, consult \u201cFAQ about running tests\u201d from\nSalesforceBaseConnector.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>1.5.2 (2011-12-20)</p>\n<blockquote>\n<ul>\n<li>Bug fix: don\u2019t break during uninstallation if the plugin has already been\ndeleted.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.5.1 (2011-01-26)</p>\n<blockquote>\n<ul>\n<li>Fixed bug where a \u201cbaseconnector\u201d attribute was being accidentally\npersisted.\n[rocky]</li>\n</ul>\n</blockquote>\n<p>1.5 (2010-11-24)</p>\n<blockquote>\n<ul>\n<li>Don\u2019t try to retrieve properties for groups.\n[davisagli]</li>\n<li>Disallow searching by the email property for now, as an optimization\ntargeted at the Plone users &amp; groups control panel.\n[davisagli]</li>\n<li>Optimization for when querying for user existence or user properties on\nmany users after doing a full enumeration: fetch the properties during\nenumeration and populate caches.\n[davisagli]</li>\n<li>Deal with unicode userids supplied by the Plone 4 session plugin.\n[davisagli]</li>\n<li>Don\u2019t separate the login and id in the enumerateUsers cache key, since we\ntreat them the same way.\n[davisagli]</li>\n<li>Optimization for when using multiple auth plugins: Use a mapping of object\ntype \u201chints\u201d to avoid unneeded queries.  Also include the plugin_id in the\ncache key to avoid multiple plugins clobbering each others\u2019 caches.\n[davisagli]</li>\n<li>Optimization: populate getPropertiesForUser and enumerateUsers cache during\nauthentication for calls that we know will happen.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.4 (2010-05-12)</p>\n<blockquote>\n<ul>\n<li>Fix for ids and logins passed to enumerateUsers as unicode strings.\n[davisagli]</li>\n<li>Make it possible to specify an id for the plugin when calling the install\nmethod, to facilitate installing multiple auth plugins.\n[davisagli]</li>\n<li>Update one more query call using the deprecated call signature.\n[davisagli]</li>\n<li>Make the properties plugin set an sf_obj_type property indicating the\nsObject type associated with the Salesforce auth plugin.  This can be\nuseful if multiple Salesforce auth plugins are being used.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.3 (2010-02-24)</p>\n<blockquote>\n<ul>\n<li>Fixed issue that prevented removing an additional authentication clause\nonce it had been added.\n[davisagli]</li>\n<li>Fixed issue with creating query for enumerating users when an additional\nauthentication clause was configured.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.2 (2010-01-25)</p>\n<blockquote>\n<ul>\n<li>Add workaround for issue where the type of a user property returning a\nnull value from Salesforce couldn\u2019t be guessed, resulting in breakage of\nthe Plone user preferences page and other things that fetch the full\nproperty sheet.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.1 (2009-12-17)</p>\n<blockquote>\n<ul>\n<li>Zope 2.12 and Plone 4 are now supported.\n[davisagli]</li>\n<li>Don\u2019t try to authenticate if the credentials don\u2019t contain a login and\npassword (such as if they are from the session plugin). This avoids\nsome spurious swallowed exceptions, and drastically reduces the need for\nturning CACHE_PASSWORDS on to avoid needless queries to Salesforce \u2013\nalthough turning it on might still be a good idea if you\u2019re routinely\nlogging in users from other sources alongside Salesforce.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.1rc1 (2009-09-16)</p>\n<blockquote>\n<ul>\n<li>In the case of a SoapFaultError when trying to connect to Salesforce,\ncatch the exception, log a warning, and return None so that PAS tries\nthe next plugin.  This makes it easier to recover after the password\ngets changed in Salesforce.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.1b1 (2009-09-08)</p>\n<blockquote>\n<ul>\n<li>Updated query calls to use a full SOQL statement.\n[davisagli]</li>\n<li>_buildAuthenticationQuery now returns a full SOQL statement rather than\nthe old set of 3 parameters that used to be expected by\nsalesforcebaseconnector\u2019s query method.\n[davisagli]</li>\n<li>Updated version spec for dependency on beatbox.\n[davisagli]</li>\n</ul>\n</blockquote>\n<p>1.0b2</p>\n<blockquote>\n<ul>\n<li>Critical fix for security vulnerability when using\ncollective.salesforce.authplugin with configuration constant\nCACHE_PASSWORDS enabled. The view stored within the\nSalesforceAuthPluginCache RAM Cache Manager as\nauthenticateCredentials-username doesn\u2019t include a hash of the user\u2019s\npassword thereby allowing others to log into the portal with a correct\nusername, but incorrect password after a successful login has been\naccomplished with the correct credentials for the length of the cache\nperiod. Though CACHE_PASSWORDS is disabled by default, most users are\nlikely to have enabled this option in attempt to either improve performance\nor save Salesforce.com API requests.  Users of versions prior to 1.0b2 with\nCACHE_PASSWORDS enabled are encouraged to upgrade immediately!\n[andrewb, thanks to Quintagroup for discovery and patch]</li>\n<li>Stop using trademarked Salesforce.com icon. [davisagli]</li>\n<li>More gracefully handle Plone\u2019s default sharing tab which searches for\nsimilarities to a given query within id, login, and fullname. The latter\nwas leading to erroneous results and often completely exceeding the timeout\nperiod for XHR calls from the form itself. The workaround is to inspect the\nsearch parameters for fullname and if not mapped within the\n\u2018authentication\u2019 or \u2018properties\u2019 treat the search query as a login so the\nsearch doesn\u2019t timeout and lose other valid results. [jessesnyder]</li>\n<li>User Enumeration accounts for Additional Condition Clause, which was\npreviously supported in authentication, but various search forms would\nreturn ineligible users per the site\u2019s configuration. [andrewb]</li>\n</ul>\n</blockquote>\n<p>1.0b1</p>\n<blockquote>\n<ul>\n<li>Initial release of egg-based Salesforce Auth Plugin product with\nsignificant historical influence from various other proof of concept\nimplementations. [Thanks to Salesforce.com Foundation, Enfold Systems,\nONE/Northwest, NPower Seattle, Web Collective, The Plone/Salesforce\nIntegration crew (<a href=\"http://groups.google.com/group/plonesf\" rel=\"nofollow\">http://groups.google.com/group/plonesf</a>)]</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 788182, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "612478637b2ab5e9609a683caea76b09", "sha256": "7091b4d2d36e89cba32787d05690b7bb210b2f038697eaecd938af3b4fe7af18"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.0b1-py2.4.egg", "has_sig": false, "md5_digest": "612478637b2ab5e9609a683caea76b09", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 110013, "upload_time": "2008-03-17T22:16:19", "upload_time_iso_8601": "2008-03-17T22:16:19Z", "url": "https://files.pythonhosted.org/packages/ef/a7/7287328ab95452678c2b0f729423c75ece3e0ecb16ea065dc95b0eddd42c/collective.salesforce.authplugin-1.0b1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e26bb7055703d67a1fe666376f0d3b51", "sha256": "c3df57d9996bff42be6d428cb5c96988f19a5998f5c3244e9c969398377466a7"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.0b1.tar.gz", "has_sig": false, "md5_digest": "e26bb7055703d67a1fe666376f0d3b51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48066, "upload_time": "2008-03-17T22:16:16", "upload_time_iso_8601": "2008-03-17T22:16:16Z", "url": "https://files.pythonhosted.org/packages/9a/fe/3cb899e7abba24dcd3037ffd0c4d113a216873991856728aa1ceb908938f/collective.salesforce.authplugin-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "348a6fb64d3cfb9905fb4762073c3af7", "sha256": "d7a3d3f27e02a4a80fb8b1910cbc31bc8c577e37b993c6f845054a48072ed440"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.0b2.tar.gz", "has_sig": false, "md5_digest": "348a6fb64d3cfb9905fb4762073c3af7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47850, "upload_time": "2009-05-05T07:38:47", "upload_time_iso_8601": "2009-05-05T07:38:47.740318Z", "url": "https://files.pythonhosted.org/packages/6f/d0/2b59ff8dc8fd3dbd11f6c6f8d1f592d8e33e579a7c5881aec8710ea9661e/collective.salesforce.authplugin-1.0b2.tar.gz", "yanked": false}], "1.0rc1": [{"comment_text": "", "digests": {"md5": "fcd928cfd94b43cb2ab7c8536eaf156a", "sha256": "a16265b620e78f1afd771cd31d8f1e8b3787680fee2cc382adfeb5c116b63724"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.0rc1.zip", "has_sig": false, "md5_digest": "fcd928cfd94b43cb2ab7c8536eaf156a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75151, "upload_time": "2009-09-17T08:36:19", "upload_time_iso_8601": "2009-09-17T08:36:19.368497Z", "url": "https://files.pythonhosted.org/packages/9a/88/bcabd8d5329ef2ec9e5ce60e1c7ded515338cbf3762174cd492b8f5e0f59/collective.salesforce.authplugin-1.0rc1.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "6dda653de1d3af3717237506b48b7997", "sha256": "c67fb245c61974e84e3b2541944dfe7dade6d40923e597daf7927a3c3e018be4"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.1.zip", "has_sig": false, "md5_digest": "6dda653de1d3af3717237506b48b7997", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77399, "upload_time": "2009-12-18T02:32:21", "upload_time_iso_8601": "2009-12-18T02:32:21.258558Z", "url": "https://files.pythonhosted.org/packages/a7/0f/004e76fb9e8a4b088de8d09adebc0f5b8024c034ff616fe5636a1fe3f7d1/collective.salesforce.authplugin-1.1.zip", "yanked": false}], "1.1b1": [{"comment_text": "", "digests": {"md5": "8524ec8da8a9849c253cc2804d714378", "sha256": "409359ad865661e715c398b13c03aa74b39e9c9fe7615473b2bdc80a105e4e5f"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.1b1.zip", "has_sig": false, "md5_digest": "8524ec8da8a9849c253cc2804d714378", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76005, "upload_time": "2009-09-08T22:58:13", "upload_time_iso_8601": "2009-09-08T22:58:13.902935Z", "url": "https://files.pythonhosted.org/packages/7e/32/d29701e459a928f538400dc36fc798aa9862ac3123bc2b2975412aa2399b/collective.salesforce.authplugin-1.1b1.zip", "yanked": false}], "1.1rc1": [{"comment_text": "", "digests": {"md5": "5d1dfa9d5f5b47389065bec143555314", "sha256": "462493e75501413da3826ff32982690f32835d8bc7ed76b59e70f3d2b208fdf2"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.1rc1.zip", "has_sig": false, "md5_digest": "5d1dfa9d5f5b47389065bec143555314", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76676, "upload_time": "2009-09-17T08:26:24", "upload_time_iso_8601": "2009-09-17T08:26:24.984662Z", "url": "https://files.pythonhosted.org/packages/ee/90/d4f85cb9e8bc736aad5625a97dd903964c689975a03f2923a4bcf72b800e/collective.salesforce.authplugin-1.1rc1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7c8397489ad1f99fd24ea5166035a449", "sha256": "6ac831bc90b1cad3075387bb5ce82fbc2107aea8579e9d4a848a220a396af12e"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.2.zip", "has_sig": false, "md5_digest": "7c8397489ad1f99fd24ea5166035a449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77909, "upload_time": "2010-01-26T09:04:42", "upload_time_iso_8601": "2010-01-26T09:04:42.205302Z", "url": "https://files.pythonhosted.org/packages/b5/3f/99861026029cc59c75a5a8e9de3b49a604c9ffdc1ab2feb58aa5c112ce02/collective.salesforce.authplugin-1.2.zip", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "6e1e38a7dd15d55f7dc457f6e7808f91", "sha256": "f454664fa958b9120930e1ebf7231dd1adf7f38942caf1d68d6359ea3c1e378e"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.3.zip", "has_sig": true, "md5_digest": "6e1e38a7dd15d55f7dc457f6e7808f91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78344, "upload_time": "2010-02-25T03:18:29", "upload_time_iso_8601": "2010-02-25T03:18:29.617442Z", "url": "https://files.pythonhosted.org/packages/c3/55/41ca985b71675a032fb921617b8ffabd09afe18210c4e7a31c21c8ce3a96/collective.salesforce.authplugin-1.3.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "ebe80ff285a3be0b15321bf30ac3ece4", "sha256": "3461a24e3c2dc677114f63abe8c4503474500a8cc1614476f88dc37e996771cc"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.4.zip", "has_sig": true, "md5_digest": "ebe80ff285a3be0b15321bf30ac3ece4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78965, "upload_time": "2010-05-13T01:27:14", "upload_time_iso_8601": "2010-05-13T01:27:14.452771Z", "url": "https://files.pythonhosted.org/packages/00/13/aa276e1fe5ad9ff29f3653b7bafe41c41678500cf4c8d7cf1147b913f9e4/collective.salesforce.authplugin-1.4.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "84192d240ae46e0b135ea0fc0d34a066", "sha256": "df35b60202734ca8f3cc5c48150ca24e0de43b5ced463f2911f6e1284ec854ba"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.5.zip", "has_sig": true, "md5_digest": "84192d240ae46e0b135ea0fc0d34a066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80826, "upload_time": "2010-11-24T18:49:16", "upload_time_iso_8601": "2010-11-24T18:49:16.266300Z", "url": "https://files.pythonhosted.org/packages/d5/1f/ebd77a2d0793a7f4dca63f23786101d62584d2128eb8be4cd00f8bc1c96b/collective.salesforce.authplugin-1.5.zip", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "8bf3f632d4daf61baabf8fa73531dd77", "sha256": "370cff3954267bbb8a0d1afbb7c7dc3b6b015e177b499e6c0b5c30e45cb8fb58"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.5.1.zip", "has_sig": true, "md5_digest": "8bf3f632d4daf61baabf8fa73531dd77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81224, "upload_time": "2011-01-26T19:09:54", "upload_time_iso_8601": "2011-01-26T19:09:54.249705Z", "url": "https://files.pythonhosted.org/packages/db/f0/01d4a365f176d8aaf25ec06874a0b1b4f89daea60d5afaf490c605c597b0/collective.salesforce.authplugin-1.5.1.zip", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "eb29767f750e2ef6211e8065251cc8dc", "sha256": "95481d2721ad7a3298f2787ef4054e501a72753cbae8296a2ed095c559eb2e7a"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.5.2.zip", "has_sig": false, "md5_digest": "eb29767f750e2ef6211e8065251cc8dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81372, "upload_time": "2011-12-21T00:48:22", "upload_time_iso_8601": "2011-12-21T00:48:22.589611Z", "url": "https://files.pythonhosted.org/packages/ab/66/32cec88aefe5d482b2fa1adba66333dde90e91f54ef1a0b49288bd2be6f3/collective.salesforce.authplugin-1.5.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb29767f750e2ef6211e8065251cc8dc", "sha256": "95481d2721ad7a3298f2787ef4054e501a72753cbae8296a2ed095c559eb2e7a"}, "downloads": -1, "filename": "collective.salesforce.authplugin-1.5.2.zip", "has_sig": false, "md5_digest": "eb29767f750e2ef6211e8065251cc8dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81372, "upload_time": "2011-12-21T00:48:22", "upload_time_iso_8601": "2011-12-21T00:48:22.589611Z", "url": "https://files.pythonhosted.org/packages/ab/66/32cec88aefe5d482b2fa1adba66333dde90e91f54ef1a0b49288bd2be6f3/collective.salesforce.authplugin-1.5.2.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:51 2020"}