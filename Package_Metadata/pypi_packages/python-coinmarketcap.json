{"info": {"author": "Remi SARRAZIN", "author_email": "remi.sarrazin@gmx.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# Python-CoinMarketCap API Wrapper\n\nThis is a non official (but working) Python package to wrap the CoinMarketCap API.\n\nWith this you can monitoring and watch the crypto market.\n\n## Installation\n\n### Via pip\n\n- pip install __python-coinmarketcap__\n\n/!\\ *Don't confound with the coinmarketcap package.*\n\n### Manual Installation\n\nClone this repo and  :\n\n\n## Example\n\n```python\n\n  import coinmarketcapapi\n\n  cmc = CoinMarketCapAPI('{YOUR_API_KEY}')\n  r = cmc.cryptocurrency_info(symbol='BTC')\n\n  print repr(r.data)\n\n```\n\n## Requirements and links\n\nFirst, you have to create an API on the Developper Portal : https://coinmarketcap.com/api/\n\nYou can found the full official documentation here : https://coinmarketcap.com/api/documentation/v1/\n\n\n## API Guide\n\n### List of all methods\n\nYou have to pass to theses functions the parameters detailled in the official documentation.\n\nEndoints :\n\n- __cryptocurrency_info__: Get cryptocurrency metadata\n- __cryptocurrency_map__: Get cryptocurrency CoinMarketCap ID map\n- __cryptocurrency_listings_latest__: List all cryptocurrencies (latest)\n- __cryptocurrency_market_pairs_latest__: Get cryptocurrency market pairs (latest)\n- __cryptocurrency_ohlcv_historical__: Get cryptocurrency OHLCV values (historical)\n- __cryptocurrency_quotes_latest__: Get cryptocurrency market quotes (latest)\n- __cryptocurrency_quotes_historical__: Get cryptocurrency market quotes (historical)\n- __exchange_info__: Get exchange metadata\n- __exchange_map__: Get exchange to CoinMarketCap ID map\n- __exchange_listings_latest__: List all exchanges (latest)\n- __exchange_market_pairs_latest__: Get exchange market pairs (latest)\n- __exchange_quotes_latest__: Get exchange market quotes (latest)\n- __exchange_quotes_historical__: Get exchange market quotes (historical)\n- __global_metrics_quotes_latest__: Get aggregate market metrics (latest)\n- __global_metrics_quotes_historical__: Get aggregate market metrics (historical)\n- __tools_price_conversion__: Price conversion tool\n\n### Response\n\nJust get the results of the API in `rep.data` or check the status with `rep.status`.\n\n### Sanbox / Pro Environement\n\nYou can switch easly you have to set `sandbox` the default value is `True`.\n\n```python\n  cmc = CoinMarketCapAPI('{YOUR_API_KEY}', sandbox=False)\n  # You are in production environnement\n```\n\n### Debuging\n\nYou can enable a debuging mode, just set `debug` to `True` to main class:\n\n```python\n  cmc = CoinMarketCapAPI('{YOUR_API_KEY}', debug=True)\n```\n\nWill produce a new output :\n\n```\n 2019-04-06 16:03:04,716 root         DEBUG    GET SANDBOX 'v1/cryptocurrency/info'\nPARAMETERS: {'symbol': 'BTC'}\n2019-04-06 16:03:05,004 root         DEBUG    RESPONSE: 288ms OK: {u'BTC': {u'category': u'coin', u'name': u'Bitcoin', u'tags': [u'mineable'], u'symbol': u'BTC', u'id': 1, [...]}\n```\n\nYou can also passing directly a logger instance :\n\n\n```python\n  cmc = CoinMarketCapAPI('{YOUR_API_KEY}', debug=True, logger=my_logger)\n```\n\n## ToDo\n\n- [ ] Add Cryptocurrency Abstraction\n- [ ] Add Exchange Abstraction\n- [ ] Add GlobalMetrics Abstraction\n- [ ] Add Tools Abstraction\n\n## ChangeLog\n\n- 6 apr 2019: Version 0.1\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rsz44/python-coinmarketcap", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-coinmarketcap", "package_url": "https://pypi.org/project/python-coinmarketcap/", "platform": "", "project_url": "https://pypi.org/project/python-coinmarketcap/", "project_urls": {"Homepage": "https://github.com/rsz44/python-coinmarketcap"}, "release_url": "https://pypi.org/project/python-coinmarketcap/0.1/", "requires_dist": null, "requires_python": "", "summary": "CoinMarketCap Python API Wrapper", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python-CoinMarketCap API Wrapper</h1>\n<p>This is a non official (but working) Python package to wrap the CoinMarketCap API.</p>\n<p>With this you can monitoring and watch the crypto market.</p>\n<h2>Installation</h2>\n<h3>Via pip</h3>\n<ul>\n<li>pip install <strong>python-coinmarketcap</strong></li>\n</ul>\n<p>/!\\ <em>Don't confound with the coinmarketcap package.</em></p>\n<h3>Manual Installation</h3>\n<p>Clone this repo and  :</p>\n<h2>Example</h2>\n<pre>  <span class=\"kn\">import</span> <span class=\"nn\">coinmarketcapapi</span>\n\n  <span class=\"n\">cmc</span> <span class=\"o\">=</span> <span class=\"n\">CoinMarketCapAPI</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{YOUR_API_KEY}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n  <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cmc</span><span class=\"o\">.</span><span class=\"n\">cryptocurrency_info</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'BTC'</span><span class=\"p\">)</span>\n\n  <span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h2>Requirements and links</h2>\n<p>First, you have to create an API on the Developper Portal : <a href=\"https://coinmarketcap.com/api/\" rel=\"nofollow\">https://coinmarketcap.com/api/</a></p>\n<p>You can found the full official documentation here : <a href=\"https://coinmarketcap.com/api/documentation/v1/\" rel=\"nofollow\">https://coinmarketcap.com/api/documentation/v1/</a></p>\n<h2>API Guide</h2>\n<h3>List of all methods</h3>\n<p>You have to pass to theses functions the parameters detailled in the official documentation.</p>\n<p>Endoints :</p>\n<ul>\n<li><strong>cryptocurrency_info</strong>: Get cryptocurrency metadata</li>\n<li><strong>cryptocurrency_map</strong>: Get cryptocurrency CoinMarketCap ID map</li>\n<li><strong>cryptocurrency_listings_latest</strong>: List all cryptocurrencies (latest)</li>\n<li><strong>cryptocurrency_market_pairs_latest</strong>: Get cryptocurrency market pairs (latest)</li>\n<li><strong>cryptocurrency_ohlcv_historical</strong>: Get cryptocurrency OHLCV values (historical)</li>\n<li><strong>cryptocurrency_quotes_latest</strong>: Get cryptocurrency market quotes (latest)</li>\n<li><strong>cryptocurrency_quotes_historical</strong>: Get cryptocurrency market quotes (historical)</li>\n<li><strong>exchange_info</strong>: Get exchange metadata</li>\n<li><strong>exchange_map</strong>: Get exchange to CoinMarketCap ID map</li>\n<li><strong>exchange_listings_latest</strong>: List all exchanges (latest)</li>\n<li><strong>exchange_market_pairs_latest</strong>: Get exchange market pairs (latest)</li>\n<li><strong>exchange_quotes_latest</strong>: Get exchange market quotes (latest)</li>\n<li><strong>exchange_quotes_historical</strong>: Get exchange market quotes (historical)</li>\n<li><strong>global_metrics_quotes_latest</strong>: Get aggregate market metrics (latest)</li>\n<li><strong>global_metrics_quotes_historical</strong>: Get aggregate market metrics (historical)</li>\n<li><strong>tools_price_conversion</strong>: Price conversion tool</li>\n</ul>\n<h3>Response</h3>\n<p>Just get the results of the API in <code>rep.data</code> or check the status with <code>rep.status</code>.</p>\n<h3>Sanbox / Pro Environement</h3>\n<p>You can switch easly you have to set <code>sandbox</code> the default value is <code>True</code>.</p>\n<pre>  <span class=\"n\">cmc</span> <span class=\"o\">=</span> <span class=\"n\">CoinMarketCapAPI</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{YOUR_API_KEY}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">sandbox</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"c1\"># You are in production environnement</span>\n</pre>\n<h3>Debuging</h3>\n<p>You can enable a debuging mode, just set <code>debug</code> to <code>True</code> to main class:</p>\n<pre>  <span class=\"n\">cmc</span> <span class=\"o\">=</span> <span class=\"n\">CoinMarketCapAPI</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{YOUR_API_KEY}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Will produce a new output :</p>\n<pre><code> 2019-04-06 16:03:04,716 root         DEBUG    GET SANDBOX 'v1/cryptocurrency/info'\nPARAMETERS: {'symbol': 'BTC'}\n2019-04-06 16:03:05,004 root         DEBUG    RESPONSE: 288ms OK: {u'BTC': {u'category': u'coin', u'name': u'Bitcoin', u'tags': [u'mineable'], u'symbol': u'BTC', u'id': 1, [...]}\n</code></pre>\n<p>You can also passing directly a logger instance :</p>\n<pre>  <span class=\"n\">cmc</span> <span class=\"o\">=</span> <span class=\"n\">CoinMarketCapAPI</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{YOUR_API_KEY}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"n\">my_logger</span><span class=\"p\">)</span>\n</pre>\n<h2>ToDo</h2>\n<ul>\n<li>[ ] Add Cryptocurrency Abstraction</li>\n<li>[ ] Add Exchange Abstraction</li>\n<li>[ ] Add GlobalMetrics Abstraction</li>\n<li>[ ] Add Tools Abstraction</li>\n</ul>\n<h2>ChangeLog</h2>\n<ul>\n<li>6 apr 2019: Version 0.1</li>\n</ul>\n\n          </div>"}, "last_serial": 5107698, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "16e568d6b04616a7a2a782527164b14b", "sha256": "a9b41dbfa202dbdc40b21d98de447a975edfffb20b3b356b8dcd0fe4c26a9be4"}, "downloads": -1, "filename": "python_coinmarketcap-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "16e568d6b04616a7a2a782527164b14b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5045, "upload_time": "2019-04-06T16:33:28", "upload_time_iso_8601": "2019-04-06T16:33:28.182584Z", "url": "https://files.pythonhosted.org/packages/af/b4/e2c121f9c04e04da95d878ab78e3f821615dd78cb6a33f24852631240b3f/python_coinmarketcap-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a139f92508b1bcc0a3c30df48623c36", "sha256": "74214200f4b8641bdc5617d6b474d3720189bfdf6c2be84dbb4e801b1651f8f6"}, "downloads": -1, "filename": "python_coinmarketcap-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a139f92508b1bcc0a3c30df48623c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6257, "upload_time": "2019-04-06T16:33:30", "upload_time_iso_8601": "2019-04-06T16:33:30.420498Z", "url": "https://files.pythonhosted.org/packages/e1/58/fec20a6407d41773249ed926710180ee61fc0cb9963d95620110d65dec13/python_coinmarketcap-0.1-py3-none-any.whl", "yanked": false}], "0.1a0": [{"comment_text": "", "digests": {"md5": "f09b889c98a5733a5a9d27de9674d77c", "sha256": "3ca32eb2c8244cf41e0164092f3ff32519c0b46b3dcd007386fb19caa2e42c1f"}, "downloads": -1, "filename": "python_coinmarketcap-0.1a0-py2-none-any.whl", "has_sig": false, "md5_digest": "f09b889c98a5733a5a9d27de9674d77c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5719, "upload_time": "2019-04-06T16:46:53", "upload_time_iso_8601": "2019-04-06T16:46:53.583644Z", "url": "https://files.pythonhosted.org/packages/28/ef/399d31515f4e28d3591f6e24e261f53ab327df254d48c03ef3ecee8c358c/python_coinmarketcap-0.1a0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae06abacd10b5e392c37c9a53c134be6", "sha256": "5004bda9c879f01fd0d92620156948e4d142fa96d853b9011c8cee126f457ad7"}, "downloads": -1, "filename": "python_coinmarketcap-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae06abacd10b5e392c37c9a53c134be6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6935, "upload_time": "2019-04-06T16:46:54", "upload_time_iso_8601": "2019-04-06T16:46:54.727746Z", "url": "https://files.pythonhosted.org/packages/53/55/5fc9169479cf3122dfc41d1c535844484f791c64842bd9168a5ab1392401/python_coinmarketcap-0.1a0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16e568d6b04616a7a2a782527164b14b", "sha256": "a9b41dbfa202dbdc40b21d98de447a975edfffb20b3b356b8dcd0fe4c26a9be4"}, "downloads": -1, "filename": "python_coinmarketcap-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "16e568d6b04616a7a2a782527164b14b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5045, "upload_time": "2019-04-06T16:33:28", "upload_time_iso_8601": "2019-04-06T16:33:28.182584Z", "url": "https://files.pythonhosted.org/packages/af/b4/e2c121f9c04e04da95d878ab78e3f821615dd78cb6a33f24852631240b3f/python_coinmarketcap-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a139f92508b1bcc0a3c30df48623c36", "sha256": "74214200f4b8641bdc5617d6b474d3720189bfdf6c2be84dbb4e801b1651f8f6"}, "downloads": -1, "filename": "python_coinmarketcap-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a139f92508b1bcc0a3c30df48623c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6257, "upload_time": "2019-04-06T16:33:30", "upload_time_iso_8601": "2019-04-06T16:33:30.420498Z", "url": "https://files.pythonhosted.org/packages/e1/58/fec20a6407d41773249ed926710180ee61fc0cb9963d95620110d65dec13/python_coinmarketcap-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:18:20 2020"}