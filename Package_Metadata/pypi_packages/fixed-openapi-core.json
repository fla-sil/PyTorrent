{"info": {"author": "Shagaleev Alexey", "author_email": "alexey.shagaleev@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "openapi-core\n************\n\n.. image:: https://img.shields.io/pypi/v/openapi-core.svg\n     :target: https://pypi.python.org/pypi/openapi-core\n.. image:: https://travis-ci.org/p1c2u/openapi-core.svg?branch=master\n     :target: https://travis-ci.org/p1c2u/openapi-core\n.. image:: https://img.shields.io/codecov/c/github/p1c2u/openapi-core/master.svg?style=flat\n     :target: https://codecov.io/github/p1c2u/openapi-core?branch=master\n.. image:: https://img.shields.io/pypi/pyversions/openapi-core.svg\n     :target: https://pypi.python.org/pypi/openapi-core\n.. image:: https://img.shields.io/pypi/format/openapi-core.svg\n     :target: https://pypi.python.org/pypi/openapi-core\n.. image:: https://img.shields.io/pypi/status/openapi-core.svg\n     :target: https://pypi.python.org/pypi/openapi-core\n\nAbout\n=====\n\nOpenapi-core is a Python library that adds client-side and server-side support\nfor the `OpenAPI Specification v3.0.0 <https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md>`__.\n\nInstallation\n============\n\nRecommended way (via pip):\n\n::\n\n    $ pip install openapi-core\n\nAlternatively you can download the code and install from the repository:\n\n.. code-block:: bash\n\n   $ pip install -e git+https://github.com/p1c2u/openapi-core.git#egg=openapi_core\n\n\nUsage\n=====\n\nFirstly create your specification:\n\n.. code-block:: python\n\n   from openapi_core import create_spec\n\n   spec = create_spec(spec_dict)\n\nNow you can use it to validate requests\n\n.. code-block:: python\n\n   from openapi_core.shortcuts import RequestValidator\n\n   validator = RequestValidator(spec)\n   result = validator.validate(request)\n\n   # raise errors if request invalid\n   result.raise_for_errors()\n\n   # get list of errors\n   errors = result.errors\n\nand unmarshal request data from validation result\n\n.. code-block:: python\n\n   # get parameters dictionary with path, query, cookies and headers parameters\n   validated_params = result.parameters\n\n   # get body\n   validated_body = result.body\n\nor use shortcuts for simple validation\n\n.. code-block:: python\n\n   from openapi_core import validate_parameters, validate_body\n\n   validated_params = validate_parameters(spec, request)\n   validated_body = validate_body(spec, request)\n\nRequest object should implement BaseOpenAPIRequest interface. You can use FlaskOpenAPIRequest a Flask/Werkzeug request wrapper implementation:\n\n.. code-block:: python\n\n   from openapi_core.shortcuts import RequestValidator\n   from openapi_core.wrappers.flask import FlaskOpenAPIRequest\n\n   openapi_request = FlaskOpenAPIRequest(flask_request)\n   validator = RequestValidator(spec)\n   result = validator.validate(openapi_request)\n\nor specify request wrapper class for shortcuts\n\n.. code-block:: python\n\n   from openapi_core import validate_parameters, validate_body\n\n   validated_params = validate_parameters(\n       spec, request, wrapper_class=FlaskOpenAPIRequest)\n   validated_body = validate_body(\n       spec, request, wrapper_class=FlaskOpenAPIRequest)\n\nYou can also validate responses\n\n.. code-block:: python\n\n   from openapi_core.shortcuts import ResponseValidator\n\n   validator = ResponseValidator(spec)\n   result = validator.validate(request, response)\n\n   # raise errors if response invalid\n   result.raise_for_errors()\n\n   # get list of errors\n   errors = result.errors\n\nand unmarshal response data from validation result\n\n.. code-block:: python\n\n   # get headers\n   validated_headers = result.headers\n\n   # get data\n   validated_data = result.data\n\nor use shortcuts for simple validation\n\n.. code-block:: python\n\n   from openapi_core import validate_data\n\n   validated_data = validate_data(spec, request, response)\n\nResponse object should implement BaseOpenAPIResponse interface. You can use FlaskOpenAPIResponse a Flask/Werkzeug response wrapper implementation:\n\n.. code-block:: python\n\n   from openapi_core.shortcuts import ResponseValidator\n   from openapi_core.wrappers.flask import FlaskOpenAPIResponse\n\n   openapi_response = FlaskOpenAPIResponse(flask_response)\n   validator = ResponseValidator(spec)\n   result = validator.validate(openapi_request, openapi_response)\n\nor specify response wrapper class for shortcuts\n\n.. code-block:: python\n\n   from openapi_core import validate_parameters, validate_body\n\n   validated_data = validate_data(\n       spec, request, response, response_wrapper_class=FlaskOpenAPIResponse)\n\nRelated projects\n================\n* `openapi-spec-validator <https://github.com/p1c2u/openapi-spec-validator>`__\n* `pyramid_openapi3 <https://github.com/niteoweb/pyramid_openapi3>`__\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ShagaleevAlexey/openapi-core", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fixed-openapi-core", "package_url": "https://pypi.org/project/fixed-openapi-core/", "platform": "", "project_url": "https://pypi.org/project/fixed-openapi-core/", "project_urls": {"Homepage": "https://github.com/ShagaleevAlexey/openapi-core"}, "release_url": "https://pypi.org/project/fixed-openapi-core/0.12.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/openapi-core\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/openapi-core.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f430f3c1e2283e0c5c0147d78591381ac0858a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f70656e6170692d636f72652e737667\"></a>\n<a href=\"https://travis-ci.org/p1c2u/openapi-core\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/p1c2u/openapi-core.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4be0ae1c6163e33f10acc512cdcfc0248d6f9cba/68747470733a2f2f7472617669732d63692e6f72672f70316332752f6f70656e6170692d636f72652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/p1c2u/openapi-core?branch=master\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/p1c2u/openapi-core/master.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f664782dff2bb2dd0fa0202236f06692422c323/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f70316332752f6f70656e6170692d636f72652f6d61737465722e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/openapi-core\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/openapi-core.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ef68c385195253da04dd4c84e1d6bdb311a749a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f70656e6170692d636f72652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/openapi-core\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/format/openapi-core.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83514960d0c99025d1c748c50159af7865b7d687/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f6f70656e6170692d636f72652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/openapi-core\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/status/openapi-core.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25f7c61600de8f30d0eebb52ca1cae42ec2ec235/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6f70656e6170692d636f72652e737667\"></a>\n<div id=\"about\">\n<h2>About</h2>\n<p>Openapi-core is a Python library that adds client-side and server-side support\nfor the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md\" rel=\"nofollow\">OpenAPI Specification v3.0.0</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Recommended way (via pip):</p>\n<pre>$ pip install openapi-core\n</pre>\n<p>Alternatively you can download the code and install from the repository:</p>\n<pre>$ pip install -e git+https://github.com/p1c2u/openapi-core.git#egg<span class=\"o\">=</span>openapi_core\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Firstly create your specification:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core</span> <span class=\"kn\">import</span> <span class=\"n\">create_spec</span>\n\n<span class=\"n\">spec</span> <span class=\"o\">=</span> <span class=\"n\">create_spec</span><span class=\"p\">(</span><span class=\"n\">spec_dict</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can use it to validate requests</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">RequestValidator</span>\n\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">RequestValidator</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># raise errors if request invalid</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">raise_for_errors</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get list of errors</span>\n<span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n</pre>\n<p>and unmarshal request data from validation result</p>\n<pre><span class=\"c1\"># get parameters dictionary with path, query, cookies and headers parameters</span>\n<span class=\"n\">validated_params</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">parameters</span>\n\n<span class=\"c1\"># get body</span>\n<span class=\"n\">validated_body</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">body</span>\n</pre>\n<p>or use shortcuts for simple validation</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core</span> <span class=\"kn\">import</span> <span class=\"n\">validate_parameters</span><span class=\"p\">,</span> <span class=\"n\">validate_body</span>\n\n<span class=\"n\">validated_params</span> <span class=\"o\">=</span> <span class=\"n\">validate_parameters</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">validated_body</span> <span class=\"o\">=</span> <span class=\"n\">validate_body</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n<p>Request object should implement BaseOpenAPIRequest interface. You can use FlaskOpenAPIRequest a Flask/Werkzeug request wrapper implementation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">RequestValidator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openapi_core.wrappers.flask</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskOpenAPIRequest</span>\n\n<span class=\"n\">openapi_request</span> <span class=\"o\">=</span> <span class=\"n\">FlaskOpenAPIRequest</span><span class=\"p\">(</span><span class=\"n\">flask_request</span><span class=\"p\">)</span>\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">RequestValidator</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">openapi_request</span><span class=\"p\">)</span>\n</pre>\n<p>or specify request wrapper class for shortcuts</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core</span> <span class=\"kn\">import</span> <span class=\"n\">validate_parameters</span><span class=\"p\">,</span> <span class=\"n\">validate_body</span>\n\n<span class=\"n\">validated_params</span> <span class=\"o\">=</span> <span class=\"n\">validate_parameters</span><span class=\"p\">(</span>\n    <span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">wrapper_class</span><span class=\"o\">=</span><span class=\"n\">FlaskOpenAPIRequest</span><span class=\"p\">)</span>\n<span class=\"n\">validated_body</span> <span class=\"o\">=</span> <span class=\"n\">validate_body</span><span class=\"p\">(</span>\n    <span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">wrapper_class</span><span class=\"o\">=</span><span class=\"n\">FlaskOpenAPIRequest</span><span class=\"p\">)</span>\n</pre>\n<p>You can also validate responses</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">ResponseValidator</span>\n\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">ResponseValidator</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># raise errors if response invalid</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">raise_for_errors</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get list of errors</span>\n<span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n</pre>\n<p>and unmarshal response data from validation result</p>\n<pre><span class=\"c1\"># get headers</span>\n<span class=\"n\">validated_headers</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">headers</span>\n\n<span class=\"c1\"># get data</span>\n<span class=\"n\">validated_data</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">data</span>\n</pre>\n<p>or use shortcuts for simple validation</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core</span> <span class=\"kn\">import</span> <span class=\"n\">validate_data</span>\n\n<span class=\"n\">validated_data</span> <span class=\"o\">=</span> <span class=\"n\">validate_data</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n</pre>\n<p>Response object should implement BaseOpenAPIResponse interface. You can use FlaskOpenAPIResponse a Flask/Werkzeug response wrapper implementation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">ResponseValidator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openapi_core.wrappers.flask</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskOpenAPIResponse</span>\n\n<span class=\"n\">openapi_response</span> <span class=\"o\">=</span> <span class=\"n\">FlaskOpenAPIResponse</span><span class=\"p\">(</span><span class=\"n\">flask_response</span><span class=\"p\">)</span>\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">ResponseValidator</span><span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">openapi_request</span><span class=\"p\">,</span> <span class=\"n\">openapi_response</span><span class=\"p\">)</span>\n</pre>\n<p>or specify response wrapper class for shortcuts</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openapi_core</span> <span class=\"kn\">import</span> <span class=\"n\">validate_parameters</span><span class=\"p\">,</span> <span class=\"n\">validate_body</span>\n\n<span class=\"n\">validated_data</span> <span class=\"o\">=</span> <span class=\"n\">validate_data</span><span class=\"p\">(</span>\n    <span class=\"n\">spec</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">response_wrapper_class</span><span class=\"o\">=</span><span class=\"n\">FlaskOpenAPIResponse</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"related-projects\">\n<h2>Related projects</h2>\n<ul>\n<li><a href=\"https://github.com/p1c2u/openapi-spec-validator\" rel=\"nofollow\">openapi-spec-validator</a></li>\n<li><a href=\"https://github.com/niteoweb/pyramid_openapi3\" rel=\"nofollow\">pyramid_openapi3</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5724529, "releases": {"0.12.0": [{"comment_text": "", "digests": {"md5": "68d3d1b791495949c2d0e7b359dbdb9f", "sha256": "327312423484b7c310b64da74778d3002cb5571d901de128b1965c1cd3c57b7a"}, "downloads": -1, "filename": "fixed-openapi-core-0.12.0.tar.gz", "has_sig": false, "md5_digest": "68d3d1b791495949c2d0e7b359dbdb9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23665, "upload_time": "2019-08-24T14:18:08", "upload_time_iso_8601": "2019-08-24T14:18:08.887856Z", "url": "https://files.pythonhosted.org/packages/55/d2/fdfaede58a3fd328eb4eb04dc4331ec717224c0c08248f899d5ea0d0f918/fixed-openapi-core-0.12.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "68d3d1b791495949c2d0e7b359dbdb9f", "sha256": "327312423484b7c310b64da74778d3002cb5571d901de128b1965c1cd3c57b7a"}, "downloads": -1, "filename": "fixed-openapi-core-0.12.0.tar.gz", "has_sig": false, "md5_digest": "68d3d1b791495949c2d0e7b359dbdb9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23665, "upload_time": "2019-08-24T14:18:08", "upload_time_iso_8601": "2019-08-24T14:18:08.887856Z", "url": "https://files.pythonhosted.org/packages/55/d2/fdfaede58a3fd328eb4eb04dc4331ec717224c0c08248f899d5ea0d0f918/fixed-openapi-core-0.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:03 2020"}