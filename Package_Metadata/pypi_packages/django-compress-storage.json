{"info": {"author": "valdergallo", "author_email": "valdergallo@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.4", "Framework :: Django :: 1.5", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Compress Storage\r\n=======================\r\n\r\n|Build Status| |Latest Version| |BSD License| |Pypi Download|\r\n\r\nCustom ZipFileField for Django that auto compact file uploaded\r\n\r\nInstall\r\n-------\r\n\r\n.. code:: bash\r\n\r\n        pip install django-compress-storage\r\n\r\nor by source code\r\n\r\n.. code:: bash\r\n\r\n        git clone https://github.com/valdergallo/django-compress-storage/\r\n        python setup.py install\r\n\r\nFeatures\r\n--------\r\n\r\n-  Compress FileUpload storage file with Zip\r\n-  Delete old file that was compressed on zip\r\n-  Support for South Migrations\r\n-  Support Django 1.2+\r\n-  Celery 2.5+ support - async compress file with Celery\r\n-  Windows Support\r\n-  Linux support\r\n-  OSx support\r\n-  Support for Python3\r\n-  Support for Python2.6+\r\n\r\nMotivation\r\n----------\r\n\r\nOn my job we need save all upload files for 5 year. Losing a lot space\r\non server with this files, because this I created this application.\r\n\r\nDjango Settings Configurations\r\n------------------------------\r\n\r\n.. code:: python\r\n\r\n\r\n    FILE_COMPRESS_DELETE_OLD_FILE = True # to delete old files after compressed\r\n    FILE_COMPRESS_DELETE_OLD_FILE = False # to not delete old files after compressed\r\n\r\n    # Feature only for version v9.0+\r\n    FILE_COMPRESS_QUEUE = 'Celery' # by default queue is Celery, but you can change this with this var on settings\r\n\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        ...\r\n        'compress_storage',\r\n    )\r\n\r\nUsage\r\n-----\r\n\r\n.. code:: python\r\n\r\n\r\n    # example model.py\r\n\r\n    from django.db import models\r\n    from compress_storage import ZipFileField\r\n\r\n    class MyContent(models.Model):\r\n        name = models.CharField(max_length=150)\r\n        create_date = models.DateTimeField(auto_now=True)\r\n        upload_file = ZipFileField(upload_to='mycontent/')\r\n\r\n        def __unicode__(self):\r\n            return self.name\r\n\r\nShell\r\n-----\r\n\r\n.. code:: python\r\n\r\n\r\n    >>> from example.core import MyContent\r\n    >>> m = MyContent.objects.get(id=2)\r\n    >>> m.upload_file\r\n    <ZipCompressFieldFile: mycontent/test.txt>\r\n    >>> m.upload_file.compress()\r\n    >>> m.upload_file\r\n    <ZipCompressFieldFile: mycontent/test.zip>\r\n\r\nUsing with Celery\r\n-----------------\r\n\r\nIf Celery are installed on Site Packages. You just need create one\r\npost\\_save on your model to use async compress.\r\n\r\n.. code:: python\r\n\r\n    # listeners.py file\r\n\r\n    from django.db.models.signals import post_save\r\n\r\n    def auto_compress_file_on_post_save(sender, instance, **kargs):\r\n        instance.upload_file.compress()\r\n\r\n    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\r\n\r\nIf you don\u00b4t wanna use Celery async compress:\r\n\r\n.. code:: python\r\n\r\n\r\n    def auto_compress_file_on_post_save(sender, instance, **kargs):\r\n        instance.upload_file.compress(async=False)\r\n\r\n    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\r\n\r\n\r\n.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/valdergallo/django-compress-storage/tarball/v0.9.1/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/valdergallo/django-compress-storage", "keywords": "django,compress,field,zip,tar,gzip", "license": "FREEBSD", "maintainer": "", "maintainer_email": "", "name": "django-compress-storage", "package_url": "https://pypi.org/project/django-compress-storage/", "platform": "any", "project_url": "https://pypi.org/project/django-compress-storage/", "project_urls": {"Download": "https://github.com/valdergallo/django-compress-storage/tarball/v0.9.1/", "Homepage": "https://github.com/valdergallo/django-compress-storage"}, "release_url": "https://pypi.org/project/django-compress-storage/0.9.1/", "requires_dist": null, "requires_python": null, "summary": "Automantic compress files after upload", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django Compress Storage\n<br>=======================\n<br>\n<br>|Build Status| |Latest Version| |BSD License| |Pypi Download|\n<br>\n<br>Custom ZipFileField for Django that auto compact file uploaded\n<br>\n<br>Install\n<br>-------\n<br>\n<br>.. code:: bash\n<br>\n<br>        pip install django-compress-storage\n<br>\n<br>or by source code\n<br>\n<br>.. code:: bash\n<br>\n<br>        git clone https://github.com/valdergallo/django-compress-storage/\n<br>        python setup.py install\n<br>\n<br>Features\n<br>--------\n<br>\n<br>-  Compress FileUpload storage file with Zip\n<br>-  Delete old file that was compressed on zip\n<br>-  Support for South Migrations\n<br>-  Support Django 1.2+\n<br>-  Celery 2.5+ support - async compress file with Celery\n<br>-  Windows Support\n<br>-  Linux support\n<br>-  OSx support\n<br>-  Support for Python3\n<br>-  Support for Python2.6+\n<br>\n<br>Motivation\n<br>----------\n<br>\n<br>On my job we need save all upload files for 5 year. Losing a lot space\n<br>on server with this files, because this I created this application.\n<br>\n<br>Django Settings Configurations\n<br>------------------------------\n<br>\n<br>.. code:: python\n<br>\n<br>\n<br>    FILE_COMPRESS_DELETE_OLD_FILE = True # to delete old files after compressed\n<br>    FILE_COMPRESS_DELETE_OLD_FILE = False # to not delete old files after compressed\n<br>\n<br>    # Feature only for version v9.0+\n<br>    FILE_COMPRESS_QUEUE = 'Celery' # by default queue is Celery, but you can change this with this var on settings\n<br>\n<br>\n<br>    INSTALLED_APPS = (\n<br>        ...\n<br>        ...\n<br>        'compress_storage',\n<br>    )\n<br>\n<br>Usage\n<br>-----\n<br>\n<br>.. code:: python\n<br>\n<br>\n<br>    # example model.py\n<br>\n<br>    from django.db import models\n<br>    from compress_storage import ZipFileField\n<br>\n<br>    class MyContent(models.Model):\n<br>        name = models.CharField(max_length=150)\n<br>        create_date = models.DateTimeField(auto_now=True)\n<br>        upload_file = ZipFileField(upload_to='mycontent/')\n<br>\n<br>        def __unicode__(self):\n<br>            return self.name\n<br>\n<br>Shell\n<br>-----\n<br>\n<br>.. code:: python\n<br>\n<br>\n<br>    &gt;&gt;&gt; from example.core import MyContent\n<br>    &gt;&gt;&gt; m = MyContent.objects.get(id=2)\n<br>    &gt;&gt;&gt; m.upload_file\n<br>    &lt;ZipCompressFieldFile: mycontent/test.txt&gt;\n<br>    &gt;&gt;&gt; m.upload_file.compress()\n<br>    &gt;&gt;&gt; m.upload_file\n<br>    &lt;ZipCompressFieldFile: mycontent/test.zip&gt;\n<br>\n<br>Using with Celery\n<br>-----------------\n<br>\n<br>If Celery are installed on Site Packages. You just need create one\n<br>post\\_save on your model to use async compress.\n<br>\n<br>.. code:: python\n<br>\n<br>    # listeners.py file\n<br>\n<br>    from django.db.models.signals import post_save\n<br>\n<br>    def auto_compress_file_on_post_save(sender, instance, **kargs):\n<br>        instance.upload_file.compress()\n<br>\n<br>    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\n<br>\n<br>If you don\u00b4t wanna use Celery async compress:\n<br>\n<br>.. code:: python\n<br>\n<br>\n<br>    def auto_compress_file_on_post_save(sender, instance, **kargs):\n<br>        instance.upload_file.compress(async=False)\n<br>\n<br>    post_save.connect(auto_compress_file_on_post_save, sender=MyContent)\n<br>\n<br>\n<br>.\n          </div>"}, "last_serial": 2387517, "releases": {"0.7.0": [], "0.7.1": [{"comment_text": "", "digests": {"md5": "be750e90ea700ba6effa80c7c5eae5a3", "sha256": "d806fdf270ee4f59c4bb4c75efe79cc0bed844f73b2e7df1c4a37058a58597e4"}, "downloads": -1, "filename": "django-compress-storage-0.7.1.zip", "has_sig": false, "md5_digest": "be750e90ea700ba6effa80c7c5eae5a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6799, "upload_time": "2014-06-02T16:31:08", "upload_time_iso_8601": "2014-06-02T16:31:08.682024Z", "url": "https://files.pythonhosted.org/packages/e3/a3/d96bb69b5efc448b21e1aa181d6e73f1c00c4a5c8ce1dfdadc7895309182/django-compress-storage-0.7.1.zip", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "957d32280784d245ead40b8f6e1368fa", "sha256": "e34678dba3f56bb8357f49fcf1155b350ed953cd8afee76267fd0b65edd6c760"}, "downloads": -1, "filename": "django-compress-storage-0.7.3.zip", "has_sig": false, "md5_digest": "957d32280784d245ead40b8f6e1368fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6757, "upload_time": "2014-06-02T17:06:58", "upload_time_iso_8601": "2014-06-02T17:06:58.734914Z", "url": "https://files.pythonhosted.org/packages/78/28/566617f3db844898a06cd4cd162ee95f4467e0ea69c9a5f514c2e53dbd78/django-compress-storage-0.7.3.zip", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "74e06b442bfaff11e9866f29a80cbbbd", "sha256": "3e7096868a72ad947a27841c01046aeff635800b7f71bc751f9d68c35f67b4ff"}, "downloads": -1, "filename": "django-compress-storage-0.7.8.zip", "has_sig": false, "md5_digest": "74e06b442bfaff11e9866f29a80cbbbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6877, "upload_time": "2014-06-02T19:05:15", "upload_time_iso_8601": "2014-06-02T19:05:15.624230Z", "url": "https://files.pythonhosted.org/packages/d6/0e/dca97f05a0dab6526a590076ff6ab57fcd719b2b30861c6e661781b19c57/django-compress-storage-0.7.8.zip", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "c3779ec57990a4ab93ce4e07c512f04f", "sha256": "07b531b263fb56baeb41c8586541b539ace5c19a5ca92ac4bd2f65f14c94b7ea"}, "downloads": -1, "filename": "django-compress-storage-0.7.9.zip", "has_sig": false, "md5_digest": "c3779ec57990a4ab93ce4e07c512f04f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7288, "upload_time": "2014-06-02T21:41:09", "upload_time_iso_8601": "2014-06-02T21:41:09.483143Z", "url": "https://files.pythonhosted.org/packages/8d/7c/fd69264bec98012b1798c3527bed93946d061355203429f475bc3a4df995/django-compress-storage-0.7.9.zip", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "905c74a6b23a83807c85c554993a05df", "sha256": "3ecfe3f0f09926addc440ec853c8488955af352595d028500606f875b62cd4cd"}, "downloads": -1, "filename": "django-compress-storage-0.8.1.zip", "has_sig": false, "md5_digest": "905c74a6b23a83807c85c554993a05df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8334, "upload_time": "2014-06-03T18:58:08", "upload_time_iso_8601": "2014-06-03T18:58:08.362723Z", "url": "https://files.pythonhosted.org/packages/be/8c/2f882b48d7d4e8f63526e5c0aa03ac7f800062f70db74ba4062def4f64a6/django-compress-storage-0.8.1.zip", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "bb24c59e4693d76af46f41ecfef78d70", "sha256": "567bf8c0ba2d745feddcf8364cfa90ba39fb10f1164172d7ae21df597d5c569d"}, "downloads": -1, "filename": "django-compress-storage-0.9.0.zip", "has_sig": false, "md5_digest": "bb24c59e4693d76af46f41ecfef78d70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10061, "upload_time": "2014-06-05T13:10:12", "upload_time_iso_8601": "2014-06-05T13:10:12.608080Z", "url": "https://files.pythonhosted.org/packages/45/19/19f991da093fb5e8fd32906788c2daedd64782959c9f9699f7ebf80fe3d3/django-compress-storage-0.9.0.zip", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "f381d4f8556364d65c5c4b43fcd270df", "sha256": "d57143de3334dda06bc4fea45a0aca3650de8a458a228c36fcc8e699edbe8a0b"}, "downloads": -1, "filename": "django-compress-storage-0.9.1.tar.gz", "has_sig": false, "md5_digest": "f381d4f8556364d65c5c4b43fcd270df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4579, "upload_time": "2015-02-04T10:14:43", "upload_time_iso_8601": "2015-02-04T10:14:43.589748Z", "url": "https://files.pythonhosted.org/packages/14/b7/a2ae769218f3de1a482f4691d8cec3e59896574ba883619d77d8f537e700/django-compress-storage-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f381d4f8556364d65c5c4b43fcd270df", "sha256": "d57143de3334dda06bc4fea45a0aca3650de8a458a228c36fcc8e699edbe8a0b"}, "downloads": -1, "filename": "django-compress-storage-0.9.1.tar.gz", "has_sig": false, "md5_digest": "f381d4f8556364d65c5c4b43fcd270df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4579, "upload_time": "2015-02-04T10:14:43", "upload_time_iso_8601": "2015-02-04T10:14:43.589748Z", "url": "https://files.pythonhosted.org/packages/14/b7/a2ae769218f3de1a482f4691d8cec3e59896574ba883619d77d8f537e700/django-compress-storage-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:54 2020"}