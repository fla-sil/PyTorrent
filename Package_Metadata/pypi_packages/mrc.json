{"info": {"author": "Sebastian Haase", "author_email": "haase@msg.ucsf.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "MRC\n===\n\n.. image:: https://img.shields.io/pypi/v/mrc.svg\n        :target: https://pypi.python.org/pypi/mrc\n\n.. image:: https://travis-ci.com/tlambert03/mrc.svg?branch=master\n        :target: https://travis-ci.com/tlambert03/mrc\n\n\nRead and write .mrc and .dv (deltavision) image file format\n\nNote, this module is designed to read the MRC variant used by\ndeltavision microscopes (.dv). For the MRC file format frequently\nused for structural biology, see https://github.com/ccpem/mrcfile\n\n(though dv and mrc formats are very similar, priism/dv files that\nevolved from the IVE library at UCSF have a slightly different\nheader format, preventing mrcfile from working).\n\nInstallation\n~~~~~~~~~~~~\n\n.. code-block:: bash\n\n    $ pip install mrc\n\n\nBasic Usage\n~~~~~~~~~~~\n\n.. code-block:: python\n\n    import mrc\n    import numpy as np\n\n    # Read a dv file\n    arr = mrc.imread('/path/to/file.dv')\n    # just a numpy array with the data...\n    isinstance(arr, np.ndarray)  # True\n\n    # additional info in stored in the arr.Mrc object.\n    # print it\n    arr.Mrc.info()\n    # or access particular fields:\n    print(arr.Mrc.header)\n    # dv files may have additional info in the extended header:\n    arr.Mrc.extended_header\n    # for instsance, timestamps for each channel at each timepoint:\n    arr.Mrc.extended_header['timeStampSeconds']\n\n    # or you can write a numpy array to DV format\n    arr = np.random.rand(23,3,256,256).astype('single')\n    mrc.imsave(\"/path/to/output.dv\", arr,\n        metadata={\n            'dx': 0.08,\n            'dy': 0.08,\n            'dz': 0.125,\n            'wave': [445, 528, 615, 0, 0]\n        }\n    )\n\nPriism (DV) MRC Header Format\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*this information is archived from the no-longer-existing page at\nhttp://www.msg.ucsf.edu/IVE/IVE4_HTML/priism_mrc_header.html*\n\nThe MRC header is 1024 bytes layed out as described below. Each field\nis in one of these formats:\n\nn Is a 2-byte signed integer (NPY_INT16)\n\ni Is a 4-byte signed integer (NPY_INT32)\n\nf Is a 4-byte floating-point value in IEEE format (NPY_FLOAT32)\n\ncn Is a string of characters that is n bytes long.\n\n.. csv-table::\n   :header: Byte Numbers,Variable Type,Variable Name,Contents\n   :widths: 15, 5, 30, 30\n\n    1 - 4,i,NumCol,number of columns (fastest-varying dimension; normally mapped to x)\n    5 - 8,i,NumRow,number of rows (second fastest-varying dimension; normally mapped to y)\n    9 - 12,i,NumSections,\"number of sections (slowest-varying dimension; normally mapped to the remaining dimensions, z, wavelength, and time)\"\n    13 - 16,i,PixelType,data type (see `Pixel Data Types`_)\n    17 - 20,i,mxst,index of the first column (normally mapped to x) in the data; zero by default\n    21 - 24,i,myst,index of the first row (normally mapped to y) in the data; zero by default\n    25 - 28,i,mzst,index of the first section (normally treated as the first z) in the data; zero by default\n    29 - 32,i,mx,number of intervals in the fastest-varying direction (normally x)\n    33 - 36,i,my,number of intervals in the second fastest-varying direction (normally y)\n    37 - 40,i,mz,number of intervals in the slowest varying direction (normally treated as z)\n    41 - 44,f,dx,pixel spacing times sampling interval for fastest-varying direction (first cell dimension in Angstroms for crystallographic data)\n    45 - 48,f,dy,pixel spacing times sampling interval for second fastest-varying direction (second cell dimension in Angstroms for crystallographic data)\n    49 - 52,f,dz,pixel spacing times sampling interval slowest-varying direction (third cell dimension in Angstroms for crystallographic data)\n    53 - 56,f,alpha,cell angle (alpha) in degrees; defaults to 90\n    57 - 60,f,beta,cell angle (beta) in degrees; defaults to 90\n    61 - 64,f,gamma,cell angle (gamma) in degrees; defaults to 90\n    65 - 68,i,,\"column axis (1 = x, 2 = y, 3 = z; defaults to 1)\"\n    69 - 72,i,,\"row axis (1 = x, 2 = y, 3 = z; defaults to 2)\"\n    73 - 76,i,,\"section axis (1 = x, 2 = y, 3 = z; defaults to 3)\"\n    77 - 80,f,min,minimum intensity of the 1st wavelength image\n    81 - 84,f,max,maximum intensity of the 1st wavelength image\n    85 - 88,f,mean,mean intensity of the first wavelength image\n    89 - 92,i,nspg,space group number (for crystallography)\n    93 - 96,i,next,extended header size in bytes.\n    97 - 98,n,dvid,ID value (-16224)\n    99 - 100,n,nblank,unused\n    101 - 104,i,ntst,starting time index\n    105 - 128,c24,blank,24 bytes long blank section\n    129 - 130,n,NumIntegers,number of 4 byte integers stored in the extended header per section.\n    131 - 132,n,NumFloats,number of 4 byte floating-point numbers stored in the extended header per section.\n    133 - 134,n,sub,number of sub-resolution data sets stored within the image typically 1)\n    135 - 136,n,zfac,reduction quotient for the z axis of the sub-resolution images\n    137 - 140,f,min2,minimum intensity of the 2nd wavelength image\n    141 - 144,f,max2,maximum intensity of the 2nd wavelength image\n    145 - 148,f,min3,minimum intensity of the 3rd wavelength image\n    149 - 152,f,max3,maximum intensity of the 3rd wavelength image\n    153 - 156,f,min4,minimum intensity of the 4th wavelength image\n    157 - 160,f,max4,maximum intensity of the 4th wavelength image\n    161 - 162,n,image type, see `Image Types`_\n    163 - 164,n,LensNum,lens identification number\n    165 - 166,n,n1,depends on the image type\n    167 - 168,n,n2,depends on the image type\n    169 - 170,n,v1,depends on the image type\n    171 - 172,n,v2,depends on the image type\n    173 - 176,f,min5,minimum intensity of the 5th wavelength image\n    177 - 180,f,max5,maximum intensity of the 5th wavelength image\n    181 - 182,n,NumTimes,number of time points\n    183 - 184,n,ImgSequence,\"image sequence (0 = ZTW, 1 = WZT, 2 = ZWT)\"\n    185 - 188,f,,x axis tilt angle (degrees)\n    189 - 192,f,,y axis tilt angle (degrees)\n    193 - 196,f,,z axis tilt angle (degrees)\n    197 - 198,n,NumWaves,number of wavelengths\n    199 - 200,n,wave1,wavelength 1 in nm\n    201 - 202,n,wave2,wavelength 2 in nm\n    203 - 204,n,wave3,wavelength 3 in nm\n    205 - 206,n,wave4,wavelength 4 in nm\n    207 - 208,n,wave5,wavelength 5 in nm\n    209 - 212,f,z0,\"z origin (um for optical, Angstroms for EM)\"\n    213 - 216,f,x0,\"x origin (um for optical, Angstroms for EM)\"\n    217 - 220,f,y0,\"y origin (um for optical, Angstroms for EM)\"\n    221 - 224,i,NumTitles,number of titles (valid numbers are between 0 and 10)\n    225 - 304,c80,,title 1\n    305 - 384,c80,,title 2\n    385 - 464,c80,,title 3\n    465 - 544,c80,,title 4\n    545 - 624,c80,,title 5\n    625 - 704,c80,,title 6\n    705 - 784,c80,,title 7\n    785 - 864,c80,,title 8\n    865 - 944,c80,,title 9\n    945 - 1024,c80,,title 10\n\n\n\nPixel Data Types\n~~~~~~~~~~~~~~~~~\n\nThe data type used for image pixel values, stored as a signed 32-bit integer\nin bytes 13 through 16, is designated by one of the code numbers in the\nfollowing table.\n\n.. csv-table::\n   :header: Data Type,Numpy Type,Description\n   :widths: 8, 10, 30\n\n    0,NPY_UINT8,1-byte unsigned integer\n    1,NPY_INT16,2-byte signed integer\n    2,NPY_FLOAT32,4-byte floating-point (IEEE)\n    3,,4-byte complex value as 2 2-byte signed integers\n    4,NPY_COMPLEX64,8-byte complex value as 2 4-byte floating-point (IEEE) values\n    5,,2-byte signed integer (unclear)\n    6,NPY_UINT16,2-byte unsigned integer\n    7,NPY_INT32,4-byte signed integer\n\n*Type codes 5, 6, and 7 are not standard MRC types and are not likely to\nbe correctly interpreted by other software that uses MRC files.*\n\n\nImage Types\n~~~~~~~~~~~\n\nThe type of a Priism image is given by the signed 16-bit integer in header\nbytes 161 and 162. The meaning of these types is given in the table below.\nThe floating-point attributes, v1 and v2, used by some image types are stored\nas 16-bit signed integers in the header; to do so the values are multiplied\nby 100 and rounded to the nearest integer when stored and are divided by 100\nwhen retrieved.\n\n0 (IM_NORMAL_IMAGES)\n    Used for normal image data.\n\n1 (IM_TILT_SERIES)\n    Used for single axis tilt series with a uniform angle increment.\n    n1 specifies the tilt axis (1 for x, 2 for y, 3 for z) and v1 the\n    angle increment in degrees. n2 relates the coordinates in the\n    tilt series to coordinates in a 3D volume: the assumed center of\n    rotation is the z origin from the header plus n2 times one half of\n    the z pixel spacing from the header. v2 is always zero.\n\n2 (IM_STEREO_TILT_SERIES)\n    Used for stereo tilt series. n1 specifies the tilt axis (1 for x,\n    2 for y, 3 for z), v1 the angle increment in degrees, and v2 is\n    the angular separation in degrees for the stereo pairs. n2 is always zero.\n\n3 (IM_AVERAGED_IMAGES)\n    Used for averaged images. n1 is the number of averaged sections and\n    n2 is the number of sections between averaged sections. v1 and v2\n    are always zero.\n\n4 (IM_AVERAGED_STEREO_PAIRS)\n    Used for averaged stereo pairs. n1 is the number of averaged sections,\n    n2 is the number of sections between averaged sections, and v2 is\n    the angular separation in degrees for the stereo pairs. v2 is always zero.\n\n5 (IM_EM_TILT_SERIES)\n    Used for EM tomography data. The tilt angles are stored in the\n    extended header\n    .\n\n20 (IM_MULTIPOSITION)\n    Used for images of well plates. The following quantities are bit-encoded\n    in n1 (valid range for each is show in parentheses): iwell (0-3),\n    ishape (0-1), ibin (0-15), ispeed (0-2), igain (0-3), and mag (0-1).\n    n2 is the number of fields per well. v1 is the fill factor (.01 to 1.5\n    in .01 steps). v2 is not used.\n\n8000 (IM_PUPIL_FUNCTION)\n    Used for images of pupil functions. n1 and n2 are not used. v1 is the\n    numerical aperture times ten. v2 is the immersion media refractive\n    index times one hundred. The pixel spacings and origin have units of\n    cycles per micron rather than microns.\n\n\nCredits\n-------\n\nThis package was created by Sebastian Haase as a part of the\n`priithon <https://github.com/sebhaase/priithon/blob/master/Priithon/Mrc.py>`_ package.  It is mostly just repackaged here and updated\nfor python 3.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tlambert03/mrc", "keywords": "mrc", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "mrc", "package_url": "https://pypi.org/project/mrc/", "platform": "", "project_url": "https://pypi.org/project/mrc/", "project_urls": {"Homepage": "https://github.com/tlambert03/mrc"}, "release_url": "https://pypi.org/project/mrc/0.1.5/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Read and write .mrc and .dv (deltavision) image file format", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/mrc\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/mrc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e69e513df0bb088f2a3afd1dbc268944ec4f9ef/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d72632e737667\"></a>\n<a href=\"https://travis-ci.com/tlambert03/mrc\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/tlambert03/mrc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e187487232fd4b7e4444d24268909f3455680440/68747470733a2f2f7472617669732d63692e636f6d2f746c616d6265727430332f6d72632e7376673f6272616e63683d6d6173746572\"></a>\n<p>Read and write .mrc and .dv (deltavision) image file format</p>\n<p>Note, this module is designed to read the MRC variant used by\ndeltavision microscopes (.dv). For the MRC file format frequently\nused for structural biology, see <a href=\"https://github.com/ccpem/mrcfile\" rel=\"nofollow\">https://github.com/ccpem/mrcfile</a></p>\n<p>(though dv and mrc formats are very similar, priism/dv files that\nevolved from the IVE library at UCSF have a slightly different\nheader format, preventing mrcfile from working).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install mrc\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mrc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># Read a dv file</span>\n<span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">mrc</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/file.dv'</span><span class=\"p\">)</span>\n<span class=\"c1\"># just a numpy array with the data...</span>\n<span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n\n<span class=\"c1\"># additional info in stored in the arr.Mrc object.</span>\n<span class=\"c1\"># print it</span>\n<span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">Mrc</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"c1\"># or access particular fields:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">Mrc</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">)</span>\n<span class=\"c1\"># dv files may have additional info in the extended header:</span>\n<span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">Mrc</span><span class=\"o\">.</span><span class=\"n\">extended_header</span>\n<span class=\"c1\"># for instsance, timestamps for each channel at each timepoint:</span>\n<span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">Mrc</span><span class=\"o\">.</span><span class=\"n\">extended_header</span><span class=\"p\">[</span><span class=\"s1\">'timeStampSeconds'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># or you can write a numpy array to DV format</span>\n<span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">'single'</span><span class=\"p\">)</span>\n<span class=\"n\">mrc</span><span class=\"o\">.</span><span class=\"n\">imsave</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/output.dv\"</span><span class=\"p\">,</span> <span class=\"n\">arr</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'dx'</span><span class=\"p\">:</span> <span class=\"mf\">0.08</span><span class=\"p\">,</span>\n        <span class=\"s1\">'dy'</span><span class=\"p\">:</span> <span class=\"mf\">0.08</span><span class=\"p\">,</span>\n        <span class=\"s1\">'dz'</span><span class=\"p\">:</span> <span class=\"mf\">0.125</span><span class=\"p\">,</span>\n        <span class=\"s1\">'wave'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">445</span><span class=\"p\">,</span> <span class=\"mi\">528</span><span class=\"p\">,</span> <span class=\"mi\">615</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"priism-dv-mrc-header-format\">\n<h2>Priism (DV) MRC Header Format</h2>\n<p><em>this information is archived from the no-longer-existing page at\nhttp://www.msg.ucsf.edu/IVE/IVE4_HTML/priism_mrc_header.html</em></p>\n<p>The MRC header is 1024 bytes layed out as described below. Each field\nis in one of these formats:</p>\n<p>n Is a 2-byte signed integer (NPY_INT16)</p>\n<p>i Is a 4-byte signed integer (NPY_INT32)</p>\n<p>f Is a 4-byte floating-point value in IEEE format (NPY_FLOAT32)</p>\n<p>cn Is a string of characters that is n bytes long.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Byte Numbers</th>\n<th>Variable Type</th>\n<th>Variable Name</th>\n<th>Contents</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1 - 4</td>\n<td>i</td>\n<td>NumCol</td>\n<td>number of columns (fastest-varying dimension; normally mapped to x)</td>\n</tr>\n<tr><td>5 - 8</td>\n<td>i</td>\n<td>NumRow</td>\n<td>number of rows (second fastest-varying dimension; normally mapped to y)</td>\n</tr>\n<tr><td>9 - 12</td>\n<td>i</td>\n<td>NumSections</td>\n<td>number of sections (slowest-varying dimension; normally mapped to the remaining dimensions, z, wavelength, and time)</td>\n</tr>\n<tr><td>13 - 16</td>\n<td>i</td>\n<td>PixelType</td>\n<td>data type (see <a href=\"#pixel-data-types\" rel=\"nofollow\">Pixel Data Types</a>)</td>\n</tr>\n<tr><td>17 - 20</td>\n<td>i</td>\n<td>mxst</td>\n<td>index of the first column (normally mapped to x) in the data; zero by default</td>\n</tr>\n<tr><td>21 - 24</td>\n<td>i</td>\n<td>myst</td>\n<td>index of the first row (normally mapped to y) in the data; zero by default</td>\n</tr>\n<tr><td>25 - 28</td>\n<td>i</td>\n<td>mzst</td>\n<td>index of the first section (normally treated as the first z) in the data; zero by default</td>\n</tr>\n<tr><td>29 - 32</td>\n<td>i</td>\n<td>mx</td>\n<td>number of intervals in the fastest-varying direction (normally x)</td>\n</tr>\n<tr><td>33 - 36</td>\n<td>i</td>\n<td>my</td>\n<td>number of intervals in the second fastest-varying direction (normally y)</td>\n</tr>\n<tr><td>37 - 40</td>\n<td>i</td>\n<td>mz</td>\n<td>number of intervals in the slowest varying direction (normally treated as z)</td>\n</tr>\n<tr><td>41 - 44</td>\n<td>f</td>\n<td>dx</td>\n<td>pixel spacing times sampling interval for fastest-varying direction (first cell dimension in Angstroms for crystallographic data)</td>\n</tr>\n<tr><td>45 - 48</td>\n<td>f</td>\n<td>dy</td>\n<td>pixel spacing times sampling interval for second fastest-varying direction (second cell dimension in Angstroms for crystallographic data)</td>\n</tr>\n<tr><td>49 - 52</td>\n<td>f</td>\n<td>dz</td>\n<td>pixel spacing times sampling interval slowest-varying direction (third cell dimension in Angstroms for crystallographic data)</td>\n</tr>\n<tr><td>53 - 56</td>\n<td>f</td>\n<td>alpha</td>\n<td>cell angle (alpha) in degrees; defaults to 90</td>\n</tr>\n<tr><td>57 - 60</td>\n<td>f</td>\n<td>beta</td>\n<td>cell angle (beta) in degrees; defaults to 90</td>\n</tr>\n<tr><td>61 - 64</td>\n<td>f</td>\n<td>gamma</td>\n<td>cell angle (gamma) in degrees; defaults to 90</td>\n</tr>\n<tr><td>65 - 68</td>\n<td>i</td>\n<td>\u00a0</td>\n<td>column axis (1 = x, 2 = y, 3 = z; defaults to 1)</td>\n</tr>\n<tr><td>69 - 72</td>\n<td>i</td>\n<td>\u00a0</td>\n<td>row axis (1 = x, 2 = y, 3 = z; defaults to 2)</td>\n</tr>\n<tr><td>73 - 76</td>\n<td>i</td>\n<td>\u00a0</td>\n<td>section axis (1 = x, 2 = y, 3 = z; defaults to 3)</td>\n</tr>\n<tr><td>77 - 80</td>\n<td>f</td>\n<td>min</td>\n<td>minimum intensity of the 1st wavelength image</td>\n</tr>\n<tr><td>81 - 84</td>\n<td>f</td>\n<td>max</td>\n<td>maximum intensity of the 1st wavelength image</td>\n</tr>\n<tr><td>85 - 88</td>\n<td>f</td>\n<td>mean</td>\n<td>mean intensity of the first wavelength image</td>\n</tr>\n<tr><td>89 - 92</td>\n<td>i</td>\n<td>nspg</td>\n<td>space group number (for crystallography)</td>\n</tr>\n<tr><td>93 - 96</td>\n<td>i</td>\n<td>next</td>\n<td>extended header size in bytes.</td>\n</tr>\n<tr><td>97 - 98</td>\n<td>n</td>\n<td>dvid</td>\n<td>ID value (-16224)</td>\n</tr>\n<tr><td>99 - 100</td>\n<td>n</td>\n<td>nblank</td>\n<td>unused</td>\n</tr>\n<tr><td>101 - 104</td>\n<td>i</td>\n<td>ntst</td>\n<td>starting time index</td>\n</tr>\n<tr><td>105 - 128</td>\n<td>c24</td>\n<td>blank</td>\n<td>24 bytes long blank section</td>\n</tr>\n<tr><td>129 - 130</td>\n<td>n</td>\n<td>NumIntegers</td>\n<td>number of 4 byte integers stored in the extended header per section.</td>\n</tr>\n<tr><td>131 - 132</td>\n<td>n</td>\n<td>NumFloats</td>\n<td>number of 4 byte floating-point numbers stored in the extended header per section.</td>\n</tr>\n<tr><td>133 - 134</td>\n<td>n</td>\n<td>sub</td>\n<td>number of sub-resolution data sets stored within the image typically 1)</td>\n</tr>\n<tr><td>135 - 136</td>\n<td>n</td>\n<td>zfac</td>\n<td>reduction quotient for the z axis of the sub-resolution images</td>\n</tr>\n<tr><td>137 - 140</td>\n<td>f</td>\n<td>min2</td>\n<td>minimum intensity of the 2nd wavelength image</td>\n</tr>\n<tr><td>141 - 144</td>\n<td>f</td>\n<td>max2</td>\n<td>maximum intensity of the 2nd wavelength image</td>\n</tr>\n<tr><td>145 - 148</td>\n<td>f</td>\n<td>min3</td>\n<td>minimum intensity of the 3rd wavelength image</td>\n</tr>\n<tr><td>149 - 152</td>\n<td>f</td>\n<td>max3</td>\n<td>maximum intensity of the 3rd wavelength image</td>\n</tr>\n<tr><td>153 - 156</td>\n<td>f</td>\n<td>min4</td>\n<td>minimum intensity of the 4th wavelength image</td>\n</tr>\n<tr><td>157 - 160</td>\n<td>f</td>\n<td>max4</td>\n<td>maximum intensity of the 4th wavelength image</td>\n</tr>\n<tr><td>161 - 162</td>\n<td>n</td>\n<td>image type</td>\n<td>see <a href=\"#image-types\" rel=\"nofollow\">Image Types</a></td>\n</tr>\n<tr><td>163 - 164</td>\n<td>n</td>\n<td>LensNum</td>\n<td>lens identification number</td>\n</tr>\n<tr><td>165 - 166</td>\n<td>n</td>\n<td>n1</td>\n<td>depends on the image type</td>\n</tr>\n<tr><td>167 - 168</td>\n<td>n</td>\n<td>n2</td>\n<td>depends on the image type</td>\n</tr>\n<tr><td>169 - 170</td>\n<td>n</td>\n<td>v1</td>\n<td>depends on the image type</td>\n</tr>\n<tr><td>171 - 172</td>\n<td>n</td>\n<td>v2</td>\n<td>depends on the image type</td>\n</tr>\n<tr><td>173 - 176</td>\n<td>f</td>\n<td>min5</td>\n<td>minimum intensity of the 5th wavelength image</td>\n</tr>\n<tr><td>177 - 180</td>\n<td>f</td>\n<td>max5</td>\n<td>maximum intensity of the 5th wavelength image</td>\n</tr>\n<tr><td>181 - 182</td>\n<td>n</td>\n<td>NumTimes</td>\n<td>number of time points</td>\n</tr>\n<tr><td>183 - 184</td>\n<td>n</td>\n<td>ImgSequence</td>\n<td>image sequence (0 = ZTW, 1 = WZT, 2 = ZWT)</td>\n</tr>\n<tr><td>185 - 188</td>\n<td>f</td>\n<td>\u00a0</td>\n<td>x axis tilt angle (degrees)</td>\n</tr>\n<tr><td>189 - 192</td>\n<td>f</td>\n<td>\u00a0</td>\n<td>y axis tilt angle (degrees)</td>\n</tr>\n<tr><td>193 - 196</td>\n<td>f</td>\n<td>\u00a0</td>\n<td>z axis tilt angle (degrees)</td>\n</tr>\n<tr><td>197 - 198</td>\n<td>n</td>\n<td>NumWaves</td>\n<td>number of wavelengths</td>\n</tr>\n<tr><td>199 - 200</td>\n<td>n</td>\n<td>wave1</td>\n<td>wavelength 1 in nm</td>\n</tr>\n<tr><td>201 - 202</td>\n<td>n</td>\n<td>wave2</td>\n<td>wavelength 2 in nm</td>\n</tr>\n<tr><td>203 - 204</td>\n<td>n</td>\n<td>wave3</td>\n<td>wavelength 3 in nm</td>\n</tr>\n<tr><td>205 - 206</td>\n<td>n</td>\n<td>wave4</td>\n<td>wavelength 4 in nm</td>\n</tr>\n<tr><td>207 - 208</td>\n<td>n</td>\n<td>wave5</td>\n<td>wavelength 5 in nm</td>\n</tr>\n<tr><td>209 - 212</td>\n<td>f</td>\n<td>z0</td>\n<td>z origin (um for optical, Angstroms for EM)</td>\n</tr>\n<tr><td>213 - 216</td>\n<td>f</td>\n<td>x0</td>\n<td>x origin (um for optical, Angstroms for EM)</td>\n</tr>\n<tr><td>217 - 220</td>\n<td>f</td>\n<td>y0</td>\n<td>y origin (um for optical, Angstroms for EM)</td>\n</tr>\n<tr><td>221 - 224</td>\n<td>i</td>\n<td>NumTitles</td>\n<td>number of titles (valid numbers are between 0 and 10)</td>\n</tr>\n<tr><td>225 - 304</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 1</td>\n</tr>\n<tr><td>305 - 384</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 2</td>\n</tr>\n<tr><td>385 - 464</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 3</td>\n</tr>\n<tr><td>465 - 544</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 4</td>\n</tr>\n<tr><td>545 - 624</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 5</td>\n</tr>\n<tr><td>625 - 704</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 6</td>\n</tr>\n<tr><td>705 - 784</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 7</td>\n</tr>\n<tr><td>785 - 864</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 8</td>\n</tr>\n<tr><td>865 - 944</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 9</td>\n</tr>\n<tr><td>945 - 1024</td>\n<td>c80</td>\n<td>\u00a0</td>\n<td>title 10</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"pixel-data-types\">\n<h2>Pixel Data Types</h2>\n<p>The data type used for image pixel values, stored as a signed 32-bit integer\nin bytes 13 through 16, is designated by one of the code numbers in the\nfollowing table.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Data Type</th>\n<th>Numpy Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0</td>\n<td>NPY_UINT8</td>\n<td>1-byte unsigned integer</td>\n</tr>\n<tr><td>1</td>\n<td>NPY_INT16</td>\n<td>2-byte signed integer</td>\n</tr>\n<tr><td>2</td>\n<td>NPY_FLOAT32</td>\n<td>4-byte floating-point (IEEE)</td>\n</tr>\n<tr><td>3</td>\n<td>\u00a0</td>\n<td>4-byte complex value as 2 2-byte signed integers</td>\n</tr>\n<tr><td>4</td>\n<td>NPY_COMPLEX64</td>\n<td>8-byte complex value as 2 4-byte floating-point (IEEE) values</td>\n</tr>\n<tr><td>5</td>\n<td>\u00a0</td>\n<td>2-byte signed integer (unclear)</td>\n</tr>\n<tr><td>6</td>\n<td>NPY_UINT16</td>\n<td>2-byte unsigned integer</td>\n</tr>\n<tr><td>7</td>\n<td>NPY_INT32</td>\n<td>4-byte signed integer</td>\n</tr>\n</tbody>\n</table>\n<p><em>Type codes 5, 6, and 7 are not standard MRC types and are not likely to\nbe correctly interpreted by other software that uses MRC files.</em></p>\n</div>\n<div id=\"image-types\">\n<h2>Image Types</h2>\n<p>The type of a Priism image is given by the signed 16-bit integer in header\nbytes 161 and 162. The meaning of these types is given in the table below.\nThe floating-point attributes, v1 and v2, used by some image types are stored\nas 16-bit signed integers in the header; to do so the values are multiplied\nby 100 and rounded to the nearest integer when stored and are divided by 100\nwhen retrieved.</p>\n<dl>\n<dt>0 (IM_NORMAL_IMAGES)</dt>\n<dd>Used for normal image data.</dd>\n<dt>1 (IM_TILT_SERIES)</dt>\n<dd>Used for single axis tilt series with a uniform angle increment.\nn1 specifies the tilt axis (1 for x, 2 for y, 3 for z) and v1 the\nangle increment in degrees. n2 relates the coordinates in the\ntilt series to coordinates in a 3D volume: the assumed center of\nrotation is the z origin from the header plus n2 times one half of\nthe z pixel spacing from the header. v2 is always zero.</dd>\n<dt>2 (IM_STEREO_TILT_SERIES)</dt>\n<dd>Used for stereo tilt series. n1 specifies the tilt axis (1 for x,\n2 for y, 3 for z), v1 the angle increment in degrees, and v2 is\nthe angular separation in degrees for the stereo pairs. n2 is always zero.</dd>\n<dt>3 (IM_AVERAGED_IMAGES)</dt>\n<dd>Used for averaged images. n1 is the number of averaged sections and\nn2 is the number of sections between averaged sections. v1 and v2\nare always zero.</dd>\n<dt>4 (IM_AVERAGED_STEREO_PAIRS)</dt>\n<dd>Used for averaged stereo pairs. n1 is the number of averaged sections,\nn2 is the number of sections between averaged sections, and v2 is\nthe angular separation in degrees for the stereo pairs. v2 is always zero.</dd>\n<dt>5 (IM_EM_TILT_SERIES)</dt>\n<dd>Used for EM tomography data. The tilt angles are stored in the\nextended header\n.</dd>\n<dt>20 (IM_MULTIPOSITION)</dt>\n<dd>Used for images of well plates. The following quantities are bit-encoded\nin n1 (valid range for each is show in parentheses): iwell (0-3),\nishape (0-1), ibin (0-15), ispeed (0-2), igain (0-3), and mag (0-1).\nn2 is the number of fields per well. v1 is the fill factor (.01 to 1.5\nin .01 steps). v2 is not used.</dd>\n<dt>8000 (IM_PUPIL_FUNCTION)</dt>\n<dd>Used for images of pupil functions. n1 and n2 are not used. v1 is the\nnumerical aperture times ten. v2 is the immersion media refractive\nindex times one hundred. The pixel spacings and origin have units of\ncycles per micron rather than microns.</dd>\n</dl>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created by Sebastian Haase as a part of the\n<a href=\"https://github.com/sebhaase/priithon/blob/master/Priithon/Mrc.py\" rel=\"nofollow\">priithon</a> package.  It is mostly just repackaged here and updated\nfor python 3.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5843766, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "684ec755816e2140e64ad154a6291328", "sha256": "96fe3058a33d6922f6c0da966cdba02dedfefd05eec975fc129551791a4c1f9f"}, "downloads": -1, "filename": "mrc-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "684ec755816e2140e64ad154a6291328", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13904, "upload_time": "2019-08-22T11:21:35", "upload_time_iso_8601": "2019-08-22T11:21:35.425007Z", "url": "https://files.pythonhosted.org/packages/c1/97/8e745ee3cfc55df3e5f5fb0c79f1381ee11fe185646af409d5b0175d3ca8/mrc-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2073b9eec8ad1105d374515750f306a5", "sha256": "82002e683289de1f20ecf936e6d97bd490f81cb09f55911b383768963a0cec0e"}, "downloads": -1, "filename": "mrc-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2073b9eec8ad1105d374515750f306a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14431, "upload_time": "2019-08-22T11:21:36", "upload_time_iso_8601": "2019-08-22T11:21:36.566418Z", "url": "https://files.pythonhosted.org/packages/f3/e2/15fca583da67bd3366095d8445d0a95223ed4643dd7bdaeb245fc6e2f7ba/mrc-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7d9595c82de3c220ee666734811ef581", "sha256": "08c6379ce4b4ed0c4698c5e1cb32cf34f0c29f2c7f4588c787753d2040d59a2b"}, "downloads": -1, "filename": "mrc-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d9595c82de3c220ee666734811ef581", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22335, "upload_time": "2019-08-31T01:49:16", "upload_time_iso_8601": "2019-08-31T01:49:16.297713Z", "url": "https://files.pythonhosted.org/packages/30/ab/edb62abccd9b689847ea163aa979e48a19aaa4ec7a5bf570e92bce4d9e24/mrc-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3fd990ff5b2ff364168aaae84e08015", "sha256": "41aa23e161e3be5330d9564309b5375acb40dad4c344a15b32fd603c50ab40b4"}, "downloads": -1, "filename": "mrc-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b3fd990ff5b2ff364168aaae84e08015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26497, "upload_time": "2019-08-31T01:49:18", "upload_time_iso_8601": "2019-08-31T01:49:18.171603Z", "url": "https://files.pythonhosted.org/packages/44/45/0873bbe5a927ebe1ff4836a7632aa8d8d1fd9130a21943808161c4c99baf/mrc-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "903560f8cb0e3b472c45eea1aaf3d9db", "sha256": "ef3cb73d41b5a5b7ce49399bf76d2df9d157d79f65307c315bfcc2d201f7c5cc"}, "downloads": -1, "filename": "mrc-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "903560f8cb0e3b472c45eea1aaf3d9db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22376, "upload_time": "2019-09-17T19:53:22", "upload_time_iso_8601": "2019-09-17T19:53:22.656122Z", "url": "https://files.pythonhosted.org/packages/45/2b/0413b479fe2b278e0f54fdd7fbdbcc74b49041515309795ca73aef59dda2/mrc-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147d1dd087e57671bc04f66342a14352", "sha256": "330debcb0aebe1f0ed34c9f87cef0e1d69780c9ffb360b928565ffd6ab9d5d97"}, "downloads": -1, "filename": "mrc-0.1.5.tar.gz", "has_sig": false, "md5_digest": "147d1dd087e57671bc04f66342a14352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26589, "upload_time": "2019-09-17T19:53:24", "upload_time_iso_8601": "2019-09-17T19:53:24.830803Z", "url": "https://files.pythonhosted.org/packages/de/18/3ed37125e19e3bd60f538413985b7fdb43f97f346543541b7f84f1cbc5d2/mrc-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "903560f8cb0e3b472c45eea1aaf3d9db", "sha256": "ef3cb73d41b5a5b7ce49399bf76d2df9d157d79f65307c315bfcc2d201f7c5cc"}, "downloads": -1, "filename": "mrc-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "903560f8cb0e3b472c45eea1aaf3d9db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22376, "upload_time": "2019-09-17T19:53:22", "upload_time_iso_8601": "2019-09-17T19:53:22.656122Z", "url": "https://files.pythonhosted.org/packages/45/2b/0413b479fe2b278e0f54fdd7fbdbcc74b49041515309795ca73aef59dda2/mrc-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147d1dd087e57671bc04f66342a14352", "sha256": "330debcb0aebe1f0ed34c9f87cef0e1d69780c9ffb360b928565ffd6ab9d5d97"}, "downloads": -1, "filename": "mrc-0.1.5.tar.gz", "has_sig": false, "md5_digest": "147d1dd087e57671bc04f66342a14352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26589, "upload_time": "2019-09-17T19:53:24", "upload_time_iso_8601": "2019-09-17T19:53:24.830803Z", "url": "https://files.pythonhosted.org/packages/de/18/3ed37125e19e3bd60f538413985b7fdb43f97f346543541b7f84f1cbc5d2/mrc-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:04 2020"}