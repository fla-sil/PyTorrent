{"info": {"author": "ytianxia6", "author_email": "ytianxia6@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pyzwcad - ZwCAD Automation for Python\n------------------------------------------\n\nThis library aimed to simplify writing ActiveX_ Automation_ scripts for ZwCAD_ with Python\n\nThis library is forked from the pyautocad_ library, everywhere you can call `ACAD` and `ZCAD`, you can use ZwCad type and also use AutoCad type.\n\n\nRequires:\n----------\n\n- comtypes_\n\n\nOptional:\n    \n- xlrd_, tablib_\n\n\nFeatures:\n-----------\n\n- Simplifies work with coordinates (3D points)\n- Efficient objects iteration and searching (with casting to correct type)\n- Excel/csv/json import and export (xlrd_ and tablib_ required)\n\nSimple usage example:\n---------------------\n\n.. code-block:: python\n\n    from pyzwcad import ZwCAD, APoint\n\n\n    acad = ZwCAD()\n    acad.prompt(\"Hello, Autocad from Python\\n\")\n    print acad.doc.Name\n\n    p1 = APoint(0, 0)\n    p2 = APoint(50, 25)\n    for i in range(5):\n        text = acad.model.AddText('Hi %s!' % i, p1, 2.5)\n        acad.model.AddLine(p1, p2)\n        acad.model.AddCircle(p1, 10)\n        p1.y += 10\n\n    dp = APoint(10, 0)\n    for text in acad.iter_objects('Text'):\n        print('text: %s at: %s' % (text.TextString, text.InsertionPoint))\n        text.InsertionPoint = APoint(text.InsertionPoint) + dp\n\n    for obj in acad.iter_objects(['Circle', 'Line']):\n        print(obj.ObjectName)\n\nSee more examples_ in source distribution.\n\nLinks\n-----\n\n- **Documentation** at `readthedocs.org <https://pyautocad.readthedocs.io/>`_\n\n- **Source code and issue tracking** at `GitHub <https://github.com/ytianxia6/pyzwcad>`_.\n\n.. _ActiveX: http://wikipedia.org/wiki/ActiveX\n.. _Automation: http://en.wikipedia.org/wiki/OLE_Automation\n.. _AutoCAD: http://wikipedia.org/wiki/AutoCAD\n.. _comtypes: http://pypi.python.org/pypi/comtypes\n.. _xlrd: http://pypi.python.org/pypi/xlrd\n.. _tablib: http://pypi.python.org/pypi/tablib\n.. _examples: https://github.com/reclosedev/pyautocad/tree/master/examples\n.. _documentation: https://pyautocad.readthedocs.io/\n.. _pyautocad: https://pyautocad.readthedocs.io/\n.. _ZwCAD: http://www.zwcad.com", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ytianxia6/pyzwcad", "keywords": "zwcad,automation,activex,comtypes", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "pyzwcad", "package_url": "https://pypi.org/project/pyzwcad/", "platform": "", "project_url": "https://pypi.org/project/pyzwcad/", "project_urls": {"Homepage": "https://github.com/ytianxia6/pyzwcad"}, "release_url": "https://pypi.org/project/pyzwcad/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "ZwCAD Automation for Python", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyzwcad-zwcad-automation-for-python\">\n<h2>pyzwcad - ZwCAD Automation for Python</h2>\n<p>This library aimed to simplify writing <a href=\"http://wikipedia.org/wiki/ActiveX\" rel=\"nofollow\">ActiveX</a> <a href=\"http://en.wikipedia.org/wiki/OLE_Automation\" rel=\"nofollow\">Automation</a> scripts for <a href=\"http://www.zwcad.com\" rel=\"nofollow\">ZwCAD</a> with Python</p>\n<p>This library is forked from the <a href=\"https://pyautocad.readthedocs.io/\" rel=\"nofollow\">pyautocad</a> library, everywhere you can call <cite>ACAD</cite> and <cite>ZCAD</cite>, you can use ZwCad type and also use AutoCad type.</p>\n</div>\n<div id=\"requires\">\n<h2>Requires:</h2>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/comtypes\" rel=\"nofollow\">comtypes</a></li>\n</ul>\n<p>Optional:</p>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/xlrd\" rel=\"nofollow\">xlrd</a>, <a href=\"http://pypi.python.org/pypi/tablib\" rel=\"nofollow\">tablib</a></li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features:</h2>\n<ul>\n<li>Simplifies work with coordinates (3D points)</li>\n<li>Efficient objects iteration and searching (with casting to correct type)</li>\n<li>Excel/csv/json import and export (<a href=\"http://pypi.python.org/pypi/xlrd\" rel=\"nofollow\">xlrd</a> and <a href=\"http://pypi.python.org/pypi/tablib\" rel=\"nofollow\">tablib</a> required)</li>\n</ul>\n</div>\n<div id=\"simple-usage-example\">\n<h2>Simple usage example:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyzwcad</span> <span class=\"kn\">import</span> <span class=\"n\">ZwCAD</span><span class=\"p\">,</span> <span class=\"n\">APoint</span>\n\n\n<span class=\"n\">acad</span> <span class=\"o\">=</span> <span class=\"n\">ZwCAD</span><span class=\"p\">()</span>\n<span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, Autocad from Python</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">APoint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">APoint</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">AddText</span><span class=\"p\">(</span><span class=\"s1\">'Hi </span><span class=\"si\">%s</span><span class=\"s1\">!'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"mf\">2.5</span><span class=\"p\">)</span>\n    <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">AddLine</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">)</span>\n    <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">AddCircle</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">p1</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"mi\">10</span>\n\n<span class=\"n\">dp</span> <span class=\"o\">=</span> <span class=\"n\">APoint</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">iter_objects</span><span class=\"p\">(</span><span class=\"s1\">'Text'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'text: </span><span class=\"si\">%s</span><span class=\"s1\"> at: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">TextString</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">InsertionPoint</span><span class=\"p\">))</span>\n    <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">InsertionPoint</span> <span class=\"o\">=</span> <span class=\"n\">APoint</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">InsertionPoint</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dp</span>\n\n<span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">acad</span><span class=\"o\">.</span><span class=\"n\">iter_objects</span><span class=\"p\">([</span><span class=\"s1\">'Circle'</span><span class=\"p\">,</span> <span class=\"s1\">'Line'</span><span class=\"p\">]):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">ObjectName</span><span class=\"p\">)</span>\n</pre>\n<p>See more <a href=\"https://github.com/reclosedev/pyautocad/tree/master/examples\" rel=\"nofollow\">examples</a> in source distribution.</p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><strong>Documentation</strong> at <a href=\"https://pyautocad.readthedocs.io/\" rel=\"nofollow\">readthedocs.org</a></li>\n<li><strong>Source code and issue tracking</strong> at <a href=\"https://github.com/ytianxia6/pyzwcad\" rel=\"nofollow\">GitHub</a>.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6745807, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "c58ac84254020270b07cf5d090c35651", "sha256": "afb39a33a53bd71029c95d407f507d7767b90549af0ff9c304f141b843692e2f"}, "downloads": -1, "filename": "pyzwcad-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c58ac84254020270b07cf5d090c35651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32311, "upload_time": "2020-03-04T06:45:04", "upload_time_iso_8601": "2020-03-04T06:45:04.237877Z", "url": "https://files.pythonhosted.org/packages/21/a6/ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be/pyzwcad-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c58ac84254020270b07cf5d090c35651", "sha256": "afb39a33a53bd71029c95d407f507d7767b90549af0ff9c304f141b843692e2f"}, "downloads": -1, "filename": "pyzwcad-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c58ac84254020270b07cf5d090c35651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32311, "upload_time": "2020-03-04T06:45:04", "upload_time_iso_8601": "2020-03-04T06:45:04.237877Z", "url": "https://files.pythonhosted.org/packages/21/a6/ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be/pyzwcad-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:24 2020"}