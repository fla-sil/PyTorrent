{"info": {"author": "Philippe Muller", "author_email": "philippe.muller@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5"], "description": "Purge old files\n===============\n\nSimple tool to delete old files using a set of contraints.\n\nIf ``--include`` if used,\nonly files matching the provided glob pattern are considered.\nThis option can be used multiple times.\nBy default, all files are considered.\n\n\nUsage\n-----\n\n.. code-block:: console\n\n    $ purge-old-files -h\n    usage: purge-old-files [-h] [--debug | --quiet] [--syslog] [--dry-run]\n                           [--include PATTERN] [--exclude PATTERN]\n                           MIN_AGE [DIRECTORY [DIRECTORY ...]]\n\n    positional arguments:\n      MIN_AGE               Minimum age of files\n      DIRECTORY             Directory or glob pattern to be scanned (multiple\n                            directories can be provided)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --debug, -D           Show debug messages\n      --quiet, -q           Only show warning messages\n      --syslog, -s          Send log messages to /dev/log instead of stdout\n      --dry-run, -d         Show which files should be deleted\n      --include PATTERN, -i PATTERN\n                            Include only files matching pattern\n      --exclude PATTERN, -e PATTERN\n                            Exclude files matching pattern\n\n    # Purge *.log files in /logs when they are older than 3 days\n    $ purge-old-files --include '*.log' 3d /logs\n\n    # Delete files from /backup when they are older than 1 week\n    $ purge-old-files 1w /backup\n\n    # Show which files from /backup are older than 3 months\n    $ purge-old-files --dry-run 3M /backup\n\n\nFile minimum age\n----------------\n\nSupported units:\n\n* ``s``: seconds\n* ``m``: minutes\n* ``h``: hours\n* ``d``: days\n* ``w``: weeks\n* ``M``: months (30 days)\n* ``y``: years (365 days)\n\n\nInstallation\n------------\n\n.. code-block:: console\n\n    $ pip install purge-old-files\n\n\nRequirements\n------------\n\n* Python 3.x\n\n\nFAQ\n---\n\n* Do you know you can do this with a simple shell script using ``find``?\n\n  Yep. I wrote those for years. They are also painful to maintain.\n  And error prone. Feel free to use a shell script. :)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pmuller/purge-old-files", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "purge-old-files", "package_url": "https://pypi.org/project/purge-old-files/", "platform": "", "project_url": "https://pypi.org/project/purge-old-files/", "project_urls": {"Homepage": "https://github.com/pmuller/purge-old-files"}, "release_url": "https://pypi.org/project/purge-old-files/1.3.0/", "requires_dist": null, "requires_python": "", "summary": "Purge old files using constraints", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple tool to delete old files using a set of contraints.</p>\n<p>If <tt><span class=\"pre\">--include</span></tt> if used,\nonly files matching the provided glob pattern are considered.\nThis option can be used multiple times.\nBy default, all files are considered.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"gp\">$</span> purge-old-files -h\n<span class=\"go\">usage: purge-old-files [-h] [--debug | --quiet] [--syslog] [--dry-run]\n                       [--include PATTERN] [--exclude PATTERN]\n                       MIN_AGE [DIRECTORY [DIRECTORY ...]]\n\npositional arguments:\n  MIN_AGE               Minimum age of files\n  DIRECTORY             Directory or glob pattern to be scanned (multiple\n                        directories can be provided)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --debug, -D           Show debug messages\n  --quiet, -q           Only show warning messages\n  --syslog, -s          Send log messages to /dev/log instead of stdout\n  --dry-run, -d         Show which files should be deleted\n  --include PATTERN, -i PATTERN\n                        Include only files matching pattern\n  --exclude PATTERN, -e PATTERN\n                        Exclude files matching pattern\n\n</span><span class=\"gp\">#</span> Purge *.log files in /logs when they are older than <span class=\"m\">3</span> days\n<span class=\"gp\">$</span> purge-old-files --include <span class=\"s1\">'*.log'</span> 3d /logs\n<span class=\"go\">\n</span><span class=\"gp\">#</span> Delete files from /backup when they are older than <span class=\"m\">1</span> week\n<span class=\"gp\">$</span> purge-old-files 1w /backup\n<span class=\"go\">\n</span><span class=\"gp\">#</span> Show which files from /backup are older than <span class=\"m\">3</span> months\n<span class=\"gp\">$</span> purge-old-files --dry-run 3M /backup\n</pre>\n</div>\n<div id=\"file-minimum-age\">\n<h2>File minimum age</h2>\n<p>Supported units:</p>\n<ul>\n<li><tt>s</tt>: seconds</li>\n<li><tt>m</tt>: minutes</li>\n<li><tt>h</tt>: hours</li>\n<li><tt>d</tt>: days</li>\n<li><tt>w</tt>: weeks</li>\n<li><tt>M</tt>: months (30 days)</li>\n<li><tt>y</tt>: years (365 days)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pip install purge-old-files\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.x</li>\n</ul>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<ul>\n<li><p>Do you know you can do this with a simple shell script using <tt>find</tt>?</p>\n<p>Yep. I wrote those for years. They are also painful to maintain.\nAnd error prone. Feel free to use a shell script. :)</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5121978, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "87e3f6ebebf9331bfee09168a6c7ddef", "sha256": "50a103259cd0d9e871c097fc0ec5070a0415b00719518ffac862afd23ce93300"}, "downloads": -1, "filename": "purge-old-files-1.0.0.tar.gz", "has_sig": false, "md5_digest": "87e3f6ebebf9331bfee09168a6c7ddef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4252, "upload_time": "2017-10-15T14:06:13", "upload_time_iso_8601": "2017-10-15T14:06:13.546680Z", "url": "https://files.pythonhosted.org/packages/9b/3c/c2c251cc1ed499d93dde5d7bbb917f20e3409956887b3ad29e2b74c2931f/purge-old-files-1.0.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "86b5eb69f37c45c209c5367826aeaf98", "sha256": "0c7a30d9b27e34f54d586e59c5c353bc50f4fe47de448189894565291c0645ff"}, "downloads": -1, "filename": "purge-old-files-1.2.1.tar.gz", "has_sig": false, "md5_digest": "86b5eb69f37c45c209c5367826aeaf98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4704, "upload_time": "2018-02-26T09:19:37", "upload_time_iso_8601": "2018-02-26T09:19:37.468296Z", "url": "https://files.pythonhosted.org/packages/95/c0/8ff625a2171b68e8deff50b6a621e59251e330d0e8d4b16ca6a2e58ccfcd/purge-old-files-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "758434b90d564d69312220640a3a8f52", "sha256": "62aea42fde4f810f496c3dced29724c3f28596ed5cc0f7fcaefd05324ec9e9d4"}, "downloads": -1, "filename": "purge-old-files-1.3.0.tar.gz", "has_sig": false, "md5_digest": "758434b90d564d69312220640a3a8f52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4758, "upload_time": "2019-04-10T03:41:59", "upload_time_iso_8601": "2019-04-10T03:41:59.250265Z", "url": "https://files.pythonhosted.org/packages/ab/ae/4b94ffffec236d78f50b0d8dd48a788bca757db2bc9caa01f2564c5463ea/purge-old-files-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "758434b90d564d69312220640a3a8f52", "sha256": "62aea42fde4f810f496c3dced29724c3f28596ed5cc0f7fcaefd05324ec9e9d4"}, "downloads": -1, "filename": "purge-old-files-1.3.0.tar.gz", "has_sig": false, "md5_digest": "758434b90d564d69312220640a3a8f52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4758, "upload_time": "2019-04-10T03:41:59", "upload_time_iso_8601": "2019-04-10T03:41:59.250265Z", "url": "https://files.pythonhosted.org/packages/ab/ae/4b94ffffec236d78f50b0d8dd48a788bca757db2bc9caa01f2564c5463ea/purge-old-files-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:17 2020"}