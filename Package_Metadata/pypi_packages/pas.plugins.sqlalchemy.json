{"info": {"author": "Malthe Borch and Stefan Eletzhofer", "author_email": "product-developers@lists.plone.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": ".. image:: https://travis-ci.org/collective/pas.plugins.sqlalchemy.svg?branch=master\n    :target: https://travis-ci.org/collective/pas.plugins.sqlalchemy\n\n.. image:: https://coveralls.io/repos/collective/pas.plugins.sqlalchemy/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/collective/pas.plugins.sqlalchemy?branch=master\n\n\n.. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide_addons.html\n   This text does not appear on pypi or github. It is a comment.\n\n=====================\nSQLAlchemy PAS plugin\n=====================\n\nThis package provides a Zope 2 PAS plugin implementation (Pluggable Authentication Service) based on the SQLAlchemy database abstraction layer.\n\nIt allows you to store and query users and groups using a SQL database.\n\nThis package replaces the `SQLPASPlugin <http://plone.org/products/sqlpasplugin>`_. product.\nIt is technically a fork of that codebase.\nSome tests have been rewritten but most are preserved.\n\nAlthough not currently provided in a stable release, it's used in production (tested against the `pysqlite` and PostgreSQL databases only).\n\nSetup\n-----\n\nTo configure the plugin with a database, use ``z3c.saconfig``.\nDefine a named scoped session ``pas.plugins.sqlalchemy`` in your ``configure.zcml`` or in the ``zcml-additional`` parameter of the ``plone.recipe.zope2instance`` recipe in your buildout.\n\nExample::\n\n  <configure xmlns=\"http://namespaces.zope.org/db\">\n    <include package=\"z3c.saconfig\" file=\"meta.zcml\"/>\n\n    <engine name=\"pas\" url=\"postgresql://localhost/pas\" />\n    <session name=\"pas.plugins.sqlalchemy\" engine=\"pas\" />\n\n  </configure>\n\nInstall the plugin using the included GenericSetup-profile.\nNote that tables will be created automatically on installation.\n\nYou can reinstall anytime to create non-existing tables.\nNote that tables are preserved on uninstallation.\n\nConfiguration from Plone\n-------------------------\n\nAs an alternative to specifying the database connection information in zcml, you can use `collective.saconnect <http://pypi.python.org/pypi/collective.saconnect>`_ to make your connections configurable on the plone control panel.\n\nInstall the package by adding it to your buildout, then install the add-on it in your plone site through Plone's control panel.\nYou now have a new control panel that allows you to create and edit database connections.\n\nTo add connections with generic setup add a file ``saconnections.xml`` to the generic setup profile of your site setup package, with the\nfollowing content::\n\n  <?xml version=\"1.0\"?>\n  <connections>\n       <connection\n            name=\"pas.plugins.sqlalchemy\"\n            string=\"postgresql://USER:PASSWORD@localhost/DATABASE\"\n       />\n  </connections>\n\nFor good performance, don't forget to enable caching within the ZMI.\n\nMore information is available in the package description.\n\n\nCustom principal, user and group model\n--------------------------------------\n\nYou can register your own SQLAlchemy-based model class for all three categories.\n\nThe required class interfaces (required methods and attributes) are described in the ``interfaces`` module.\nNote that you can simply subclass from the default models which implement the required interfaces.\n\nThe settings are accessible in the ZMI. You can also use a custom setup handler.\n\nExample::\n\n    def setup_pas_plugin(self):\n        pas = self.acl_users\n        plugin = pas['sql']\n\n        plugin.manage_changeProperties(\n           user_model=\"my_package.model.User\",\n           principal_model=\"my_package.model.Principal\",\n           group_model=\"my_package.model.Group\"\n           )\n\nYou may need to make sure the plugins are prioritized higher than the default ones (typically ZODB-based).\n\n\nWishlist\n--------\n\nThese items are on the to-do list:\n\n- Post-only security.\n- Review of implemented interfaces - is the implementation complete?\n- Handle groups title, description and email, to match newer versions of Plone.\n- Tests for configuration of external model.\n\n\nCredits\n-------\n\nAuthors\n\n- Rocky Burt <rocky@serverzen.com> of ServerZen Software\n- Nate Aune <natea@jazkarta.com> of Jazkarta\n- Stefan Eletzhofer <stefan.eletzhofer@inquant.de> of InQuant\n- Malthe Borch <mborch@gmail.com>\n\nContributors\n\n- Ruda Porto Filgueiras <rudazz@gmail.com>\n- Daniel Nouri <daniel.nouri@gmail.com>\n- Dorneles Trem\u00e9a <deo@jarn.com> of Jarn\n- Wichert Akkerman <wichert@wiggy.net> of Simplon\n- Riccardo Lemmi <riccardo@reflab.it> of Reflab Srl\n- Derek Broughton <auspex@pointerstop.ca>\n- Rigel Di Scala <zedr>\n- Sune Broendum Woeller <woeller@headnet.dk> of Headnet Aps\n\nSponsors\n\n- Thanks to ChemIndustry.com Inc. for financing the development of SQLPASPlugin\n- Thanks to Statens Byggeforskninginstitut (http://www.sbi.dk) for sponsoring the caching support.\n- Thanks to Gis & Web S.r.l. (http://www.gisweb.it) for sponsoring the groups management support.\n- Thanks to the Ocean Tracking Network (http://oceantrackingnetwork.org/) for adding Group Capabilities and migration of existing users.\n\nLicense\n-------\n\nGNU GPL v2 (see LICENCE.txt for details)\n\n\nChangelog\n=========\n\n0.4.2 (2017-10-23)\n------------------\n\n- MANIFEST was not fixed in version 0.4.1 (still a brown bag release)\n  [keul]\n- Fixed brown bag release (again).\n  [malthe]\n\n0.4.1 (2017-10-23)\n------------------\n\n- Fixed brown bag release.\n  [malthe]\n\n0.4 (2016-03-31)\n----------------\n\n- added link to cache settings view in zmi\n  [agitator]\n\n- fix: ``getPropertiesForUser`` uses principals ``_properties`` mapping now\n  to map to the column used for ``zope_id`` id this is needed.\n  [jensens]\n\n- do not expect a configured database connection on plugin install time in\n  order to play nice with collective.saconnect. Also be less verbose if there\n  is no connection configured.\n  [jensens]\n\n- fix: different custom setup un-/install marker for install and uninstall\n  [jensens]\n\n- Standardize name of installation profile to ``default``.\n  [jensens]\n\n- modernized: Pep8, Travis CI, ...\n  [jensens]\n\n- using _get_principal_by_id to get principal in doChangeUser,\n  doDeleteUser, and allowPasswordSet methods\n  [gborelli]\n\n- using '__mapper__' instead of '__table__' to check Column type.\n  It allows to customize user model in another class with\n  polymorphic_identity\n  [gborelli]\n\n- fixed getPropertiesForUser, return None if principal doesn't exist\n  [gborelli]\n\n- check if principal exists before updating its properties\n  [gborelli]\n\n- Fixed methods ``doSetProperty`` and ``setPropertiesForUser`` such\n  that they accept a generic principal and not necessarily an instance\n  of the plugin's principal class.\n  [malthe]\n\n- Wrap user properties in an actually mutable user property sheet\n  (which writes changes back to the plugin). Previously, a mutable\n  property sheet was returned, but this is incorrect since changes\n  aren't persisted.\n\n  While the PAS interface specifies that a dict should be returned for\n  an immutable result, we opt for a hybrid: a dict-aware user property\n  sheet which does not promise mutability. The motivation is that the\n  pluggable authentication service only supports a select list of\n  property value types and not, for instance, Python's own date and\n  time classes. By returning a property sheet, we can provide a schema\n  explicitly and not force the authentication service to \"guess\"\n  (infer) it.\n  [malthe]\n\n0.3 (2011-10-13)\n----------------\n\n- Fire `IPropertiesUpdated` (from PAS) event on `setPropertiesForUser`\n  to allow components to take action when user properties are updated.\n  [malthe]\n\n- Merged SVN repository (select branches) into the existing Github\n  repository to consolidate improvements.\n  [malthe]\n\n- Add title and description to groups.\n\n  GetRolesForPrincipal needs to listen to __ignore_group_roles__ and\n  __ignore_direct_roles__ from the request to work with plone 4.\n  GetRolesForPrincipal needs to take group roles into account as\n  default.\n  [sunew]\n\n- Merged many changes from the branches: wichert-flexible,\n  wichert-flexible-pw-encryption, zedr-mysql-optimized, auspex.\n\n  Version 0.3 is not compatible with the earlier versions, upgrading\n  will require some migration (not included).\n  [sunew]\n\n- Seperate user_id and login - as in PAS. (Not complete?)\n  [wichert]\n\n- Refactor user, group, and principal classes to enable more sharing\n  of functionality between groups and users.\n  [wichert]\n\n- Length of varchars to be compatible with MySQL\n  [auspex, wichert, sunew, zedr]\n\n- Cleaned up the properties - only the plone properties are in the\n  model now. Override the model if you need more fields.\n  [sunew]\n\n- Password and salt readonly.\n  [wichert, sunew]\n\n- remove IUpdatePlugin related stuff. Not used.\n  [wichert]\n\n- Make models configurable via dotted path zmi properties.\n  [wichert]\n\n- Also make the Principal class configurable.\n  [sunew]\n\n- Add missing security declarations (match those for the same methods\n  in PlonePAS and PluggableAuthService).\n  [sunew]\n\n- Fully implement IRoleAssignerPlugin: missed doRemoveRoleFromPrincipal.\n  [sunew]\n\n- More tests, tests pass for plone 4.0.7.\n  [sunew]\n\n\n0.2.1 (unreleased)\n------------------------\n\n- Fixed some tests. Now tests passes on plone 4.0.7.\n  [sunew]\n\n- Convert to and from UTF-8 and unicode. Plone uses UTF-8 internally\n  and most Python deployments will coerce using the 'ascii' codec,\n  resulting in unicode decode errors. [mborch]\n\n0.2 (released 2009/7/17)\n------------------------\n\n- Changed the 'listed' and 'ext_editor' column type to 'Integer' match\n  the Plone model. [seletz]\n\n0.1 (released 2009/7/17)\n------------------------\n\n- Initial public release.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "web pas plone", "license": "GNU GPL v2", "maintainer": "", "maintainer_email": "", "name": "pas.plugins.sqlalchemy", "package_url": "https://pypi.org/project/pas.plugins.sqlalchemy/", "platform": "", "project_url": "https://pypi.org/project/pas.plugins.sqlalchemy/", "project_urls": null, "release_url": "https://pypi.org/project/pas.plugins.sqlalchemy/0.4.2/", "requires_dist": null, "requires_python": "", "summary": "SQLAlchemy-based PAS user/group/prop store.", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/collective/pas.plugins.sqlalchemy\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/collective/pas.plugins.sqlalchemy.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bd93f4af85e0f97754d986e024ec954cbe047cb/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f7061732e706c7567696e732e73716c616c6368656d792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/collective/pas.plugins.sqlalchemy?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/collective/pas.plugins.sqlalchemy/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d09f507744f53c76bb771aa3f42ec1583809f36f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f636f6c6c6563746976652f7061732e706c7567696e732e73716c616c6368656d792f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<div id=\"sqlalchemy-pas-plugin\">\n<h2>SQLAlchemy PAS plugin</h2>\n<p>This package provides a Zope 2 PAS plugin implementation (Pluggable Authentication Service) based on the SQLAlchemy database abstraction layer.</p>\n<p>It allows you to store and query users and groups using a SQL database.</p>\n<p>This package replaces the <a href=\"http://plone.org/products/sqlpasplugin\" rel=\"nofollow\">SQLPASPlugin</a>. product.\nIt is technically a fork of that codebase.\nSome tests have been rewritten but most are preserved.</p>\n<p>Although not currently provided in a stable release, it\u2019s used in production (tested against the <cite>pysqlite</cite> and PostgreSQL databases only).</p>\n<div id=\"setup\">\n<h3>Setup</h3>\n<p>To configure the plugin with a database, use <tt>z3c.saconfig</tt>.\nDefine a named scoped session <tt>pas.plugins.sqlalchemy</tt> in your <tt>configure.zcml</tt> or in the <tt><span class=\"pre\">zcml-additional</span></tt> parameter of the <tt>plone.recipe.zope2instance</tt> recipe in your buildout.</p>\n<p>Example:</p>\n<pre>&lt;configure xmlns=\"http://namespaces.zope.org/db\"&gt;\n  &lt;include package=\"z3c.saconfig\" file=\"meta.zcml\"/&gt;\n\n  &lt;engine name=\"pas\" url=\"postgresql://localhost/pas\" /&gt;\n  &lt;session name=\"pas.plugins.sqlalchemy\" engine=\"pas\" /&gt;\n\n&lt;/configure&gt;\n</pre>\n<p>Install the plugin using the included GenericSetup-profile.\nNote that tables will be created automatically on installation.</p>\n<p>You can reinstall anytime to create non-existing tables.\nNote that tables are preserved on uninstallation.</p>\n</div>\n<div id=\"configuration-from-plone\">\n<h3>Configuration from Plone</h3>\n<p>As an alternative to specifying the database connection information in zcml, you can use <a href=\"http://pypi.python.org/pypi/collective.saconnect\" rel=\"nofollow\">collective.saconnect</a> to make your connections configurable on the plone control panel.</p>\n<p>Install the package by adding it to your buildout, then install the add-on it in your plone site through Plone\u2019s control panel.\nYou now have a new control panel that allows you to create and edit database connections.</p>\n<p>To add connections with generic setup add a file <tt>saconnections.xml</tt> to the generic setup profile of your site setup package, with the\nfollowing content:</p>\n<pre>&lt;?xml version=\"1.0\"?&gt;\n&lt;connections&gt;\n     &lt;connection\n          name=\"pas.plugins.sqlalchemy\"\n          string=\"postgresql://USER:PASSWORD@localhost/DATABASE\"\n     /&gt;\n&lt;/connections&gt;\n</pre>\n<p>For good performance, don\u2019t forget to enable caching within the ZMI.</p>\n<p>More information is available in the package description.</p>\n</div>\n<div id=\"custom-principal-user-and-group-model\">\n<h3>Custom principal, user and group model</h3>\n<p>You can register your own SQLAlchemy-based model class for all three categories.</p>\n<p>The required class interfaces (required methods and attributes) are described in the <tt>interfaces</tt> module.\nNote that you can simply subclass from the default models which implement the required interfaces.</p>\n<p>The settings are accessible in the ZMI. You can also use a custom setup handler.</p>\n<p>Example:</p>\n<pre>def setup_pas_plugin(self):\n    pas = self.acl_users\n    plugin = pas['sql']\n\n    plugin.manage_changeProperties(\n       user_model=\"my_package.model.User\",\n       principal_model=\"my_package.model.Principal\",\n       group_model=\"my_package.model.Group\"\n       )\n</pre>\n<p>You may need to make sure the plugins are prioritized higher than the default ones (typically ZODB-based).</p>\n</div>\n<div id=\"wishlist\">\n<h3>Wishlist</h3>\n<p>These items are on the to-do list:</p>\n<ul>\n<li>Post-only security.</li>\n<li>Review of implemented interfaces - is the implementation complete?</li>\n<li>Handle groups title, description and email, to match newer versions of Plone.</li>\n<li>Tests for configuration of external model.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>Authors</p>\n<ul>\n<li>Rocky Burt &lt;<a href=\"mailto:rocky%40serverzen.com\">rocky<span>@</span>serverzen<span>.</span>com</a>&gt; of ServerZen Software</li>\n<li>Nate Aune &lt;<a href=\"mailto:natea%40jazkarta.com\">natea<span>@</span>jazkarta<span>.</span>com</a>&gt; of Jazkarta</li>\n<li>Stefan Eletzhofer &lt;<a href=\"mailto:stefan.eletzhofer%40inquant.de\">stefan<span>.</span>eletzhofer<span>@</span>inquant<span>.</span>de</a>&gt; of InQuant</li>\n<li>Malthe Borch &lt;<a href=\"mailto:mborch%40gmail.com\">mborch<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n</ul>\n<p>Contributors</p>\n<ul>\n<li>Ruda Porto Filgueiras &lt;<a href=\"mailto:rudazz%40gmail.com\">rudazz<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>Daniel Nouri &lt;<a href=\"mailto:daniel.nouri%40gmail.com\">daniel<span>.</span>nouri<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>Dorneles Trem\u00e9a &lt;<a href=\"mailto:deo%40jarn.com\">deo<span>@</span>jarn<span>.</span>com</a>&gt; of Jarn</li>\n<li>Wichert Akkerman &lt;<a href=\"mailto:wichert%40wiggy.net\">wichert<span>@</span>wiggy<span>.</span>net</a>&gt; of Simplon</li>\n<li>Riccardo Lemmi &lt;<a href=\"mailto:riccardo%40reflab.it\">riccardo<span>@</span>reflab<span>.</span>it</a>&gt; of Reflab Srl</li>\n<li>Derek Broughton &lt;<a href=\"mailto:auspex%40pointerstop.ca\">auspex<span>@</span>pointerstop<span>.</span>ca</a>&gt;</li>\n<li>Rigel Di Scala &lt;zedr&gt;</li>\n<li>Sune Broendum Woeller &lt;<a href=\"mailto:woeller%40headnet.dk\">woeller<span>@</span>headnet<span>.</span>dk</a>&gt; of Headnet Aps</li>\n</ul>\n<p>Sponsors</p>\n<ul>\n<li>Thanks to ChemIndustry.com Inc. for financing the development of SQLPASPlugin</li>\n<li>Thanks to Statens Byggeforskninginstitut (<a href=\"http://www.sbi.dk\" rel=\"nofollow\">http://www.sbi.dk</a>) for sponsoring the caching support.</li>\n<li>Thanks to Gis &amp; Web S.r.l. (<a href=\"http://www.gisweb.it\" rel=\"nofollow\">http://www.gisweb.it</a>) for sponsoring the groups management support.</li>\n<li>Thanks to the Ocean Tracking Network (<a href=\"http://oceantrackingnetwork.org/\" rel=\"nofollow\">http://oceantrackingnetwork.org/</a>) for adding Group Capabilities and migration of existing users.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>GNU GPL v2 (see LICENCE.txt for details)</p>\n<div id=\"changelog\">\n<h4>Changelog</h4>\n</div>\n</div>\n<div id=\"id1\">\n<h3>0.4.2 (2017-10-23)</h3>\n<ul>\n<li>MANIFEST was not fixed in version 0.4.1 (still a brown bag release)\n[keul]</li>\n<li>Fixed brown bag release (again).\n[malthe]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4.1 (2017-10-23)</h3>\n<ul>\n<li>Fixed brown bag release.\n[malthe]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.4 (2016-03-31)</h3>\n<ul>\n<li><p>added link to cache settings view in zmi\n[agitator]</p>\n</li>\n<li><p>fix: <tt>getPropertiesForUser</tt> uses principals <tt>_properties</tt> mapping now\nto map to the column used for <tt>zope_id</tt> id this is needed.\n[jensens]</p>\n</li>\n<li><p>do not expect a configured database connection on plugin install time in\norder to play nice with collective.saconnect. Also be less verbose if there\nis no connection configured.\n[jensens]</p>\n</li>\n<li><p>fix: different custom setup un-/install marker for install and uninstall\n[jensens]</p>\n</li>\n<li><p>Standardize name of installation profile to <tt>default</tt>.\n[jensens]</p>\n</li>\n<li><p>modernized: Pep8, Travis CI, \u2026\n[jensens]</p>\n</li>\n<li><p>using _get_principal_by_id to get principal in doChangeUser,\ndoDeleteUser, and allowPasswordSet methods\n[gborelli]</p>\n</li>\n<li><p>using \u2018__mapper__\u2019 instead of \u2018__table__\u2019 to check Column type.\nIt allows to customize user model in another class with\npolymorphic_identity\n[gborelli]</p>\n</li>\n<li><p>fixed getPropertiesForUser, return None if principal doesn\u2019t exist\n[gborelli]</p>\n</li>\n<li><p>check if principal exists before updating its properties\n[gborelli]</p>\n</li>\n<li><p>Fixed methods <tt>doSetProperty</tt> and <tt>setPropertiesForUser</tt> such\nthat they accept a generic principal and not necessarily an instance\nof the plugin\u2019s principal class.\n[malthe]</p>\n</li>\n<li><p>Wrap user properties in an actually mutable user property sheet\n(which writes changes back to the plugin). Previously, a mutable\nproperty sheet was returned, but this is incorrect since changes\naren\u2019t persisted.</p>\n<p>While the PAS interface specifies that a dict should be returned for\nan immutable result, we opt for a hybrid: a dict-aware user property\nsheet which does not promise mutability. The motivation is that the\npluggable authentication service only supports a select list of\nproperty value types and not, for instance, Python\u2019s own date and\ntime classes. By returning a property sheet, we can provide a schema\nexplicitly and not force the authentication service to \u201cguess\u201d\n(infer) it.\n[malthe]</p>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3 (2011-10-13)</h3>\n<ul>\n<li><p>Fire <cite>IPropertiesUpdated</cite> (from PAS) event on <cite>setPropertiesForUser</cite>\nto allow components to take action when user properties are updated.\n[malthe]</p>\n</li>\n<li><p>Merged SVN repository (select branches) into the existing Github\nrepository to consolidate improvements.\n[malthe]</p>\n</li>\n<li><p>Add title and description to groups.</p>\n<p>GetRolesForPrincipal needs to listen to __ignore_group_roles__ and\n__ignore_direct_roles__ from the request to work with plone 4.\nGetRolesForPrincipal needs to take group roles into account as\ndefault.\n[sunew]</p>\n</li>\n<li><p>Merged many changes from the branches: wichert-flexible,\nwichert-flexible-pw-encryption, zedr-mysql-optimized, auspex.</p>\n<p>Version 0.3 is not compatible with the earlier versions, upgrading\nwill require some migration (not included).\n[sunew]</p>\n</li>\n<li><p>Seperate user_id and login - as in PAS. (Not complete?)\n[wichert]</p>\n</li>\n<li><p>Refactor user, group, and principal classes to enable more sharing\nof functionality between groups and users.\n[wichert]</p>\n</li>\n<li><p>Length of varchars to be compatible with MySQL\n[auspex, wichert, sunew, zedr]</p>\n</li>\n<li><p>Cleaned up the properties - only the plone properties are in the\nmodel now. Override the model if you need more fields.\n[sunew]</p>\n</li>\n<li><p>Password and salt readonly.\n[wichert, sunew]</p>\n</li>\n<li><p>remove IUpdatePlugin related stuff. Not used.\n[wichert]</p>\n</li>\n<li><p>Make models configurable via dotted path zmi properties.\n[wichert]</p>\n</li>\n<li><p>Also make the Principal class configurable.\n[sunew]</p>\n</li>\n<li><p>Add missing security declarations (match those for the same methods\nin PlonePAS and PluggableAuthService).\n[sunew]</p>\n</li>\n<li><p>Fully implement IRoleAssignerPlugin: missed doRemoveRoleFromPrincipal.\n[sunew]</p>\n</li>\n<li><p>More tests, tests pass for plone 4.0.7.\n[sunew]</p>\n</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3>0.2.1 (unreleased)</h3>\n<ul>\n<li>Fixed some tests. Now tests passes on plone 4.0.7.\n[sunew]</li>\n<li>Convert to and from UTF-8 and unicode. Plone uses UTF-8 internally\nand most Python deployments will coerce using the \u2018ascii\u2019 codec,\nresulting in unicode decode errors. [mborch]</li>\n</ul>\n</div>\n<div id=\"released-2009-7-17\">\n<h3>0.2 (released 2009/7/17)</h3>\n<ul>\n<li>Changed the \u2018listed\u2019 and \u2018ext_editor\u2019 column type to \u2018Integer\u2019 match\nthe Plone model. [seletz]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1 (released 2009/7/17)</h3>\n<ul>\n<li>Initial public release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3271935, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3195a13ca56dc0bd5501e4b591d8d784", "sha256": "a9544f08d627a214ab644893f395c9623b211f3c210fd170e536760d2ccc445c"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.1.tar.gz", "has_sig": false, "md5_digest": "3195a13ca56dc0bd5501e4b591d8d784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20295, "upload_time": "2009-07-17T13:15:22", "upload_time_iso_8601": "2009-07-17T13:15:22.450679Z", "url": "https://files.pythonhosted.org/packages/2d/dd/ff49437145d7b78774ed66895044d4f288da483940079d44ae9ef0833e6d/pas.plugins.sqlalchemy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "37395d740c624afb1a4481d30a3c6f73", "sha256": "27c0db769407555ea5d6cd3818ddc1116ebadbc022829113cf59f41f8993b127"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.2.tar.gz", "has_sig": false, "md5_digest": "37395d740c624afb1a4481d30a3c6f73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20469, "upload_time": "2009-07-17T14:31:08", "upload_time_iso_8601": "2009-07-17T14:31:08.638193Z", "url": "https://files.pythonhosted.org/packages/ba/d5/f46c989081146c21d06ac8dd3bfd1a3c89a2de2c73a08972882e16011d29/pas.plugins.sqlalchemy-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "481d5c8d3047836ffd7720df3da2f69b", "sha256": "456e34531f6d84ad3f9a2ef0065764a3eb01078d7d11cb6839777edf4de93b3e"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.3.tar.gz", "has_sig": false, "md5_digest": "481d5c8d3047836ffd7720df3da2f69b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26169, "upload_time": "2011-10-13T13:26:26", "upload_time_iso_8601": "2011-10-13T13:26:26.909790Z", "url": "https://files.pythonhosted.org/packages/58/c6/6d02ee24f0b5c53d2a4944dd176700ad3bbce6f84320c9b1011aa93353a4/pas.plugins.sqlalchemy-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1226c79f15ecf2e7e432b789c1e04f4e", "sha256": "14ead1060aec7d1ef3864f093e93d9982ac96428271e634fff045ce6422c8664"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.4.tar.gz", "has_sig": false, "md5_digest": "1226c79f15ecf2e7e432b789c1e04f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25973, "upload_time": "2016-03-31T08:30:10", "upload_time_iso_8601": "2016-03-31T08:30:10.055223Z", "url": "https://files.pythonhosted.org/packages/ce/c2/d1d006cf65e2e7806c3de86859e263f218ff2654e0883f097e8c9d6a1e0c/pas.plugins.sqlalchemy-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "02b665d45a3c0b5cbb021f65de63a024", "sha256": "a90108b565e94ab6cfeb391c55481c5e5bb13293a96f66f20e0d7f4e74af7649"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "02b665d45a3c0b5cbb021f65de63a024", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26056, "upload_time": "2017-10-23T10:39:49", "upload_time_iso_8601": "2017-10-23T10:39:49.179122Z", "url": "https://files.pythonhosted.org/packages/a0/8a/b388ef0fb843fac534ae5b0f97dbc014616f70c90bcff8d8cdf61bbc85f1/pas.plugins.sqlalchemy-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "c06fdba69a307b1cc78b9381b31e403a", "sha256": "e1d662b4550c06c6e33b0081df35d8ad109d9290733ac0b431efa9c6cf54cd9e"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.4.2.tar.gz", "has_sig": false, "md5_digest": "c06fdba69a307b1cc78b9381b31e403a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27445, "upload_time": "2017-10-23T12:16:52", "upload_time_iso_8601": "2017-10-23T12:16:52.637213Z", "url": "https://files.pythonhosted.org/packages/11/0e/9b5107219c2e3a996dcaa1a5507b2e73d7f8a10b54c88876c87545554d1a/pas.plugins.sqlalchemy-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c06fdba69a307b1cc78b9381b31e403a", "sha256": "e1d662b4550c06c6e33b0081df35d8ad109d9290733ac0b431efa9c6cf54cd9e"}, "downloads": -1, "filename": "pas.plugins.sqlalchemy-0.4.2.tar.gz", "has_sig": false, "md5_digest": "c06fdba69a307b1cc78b9381b31e403a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27445, "upload_time": "2017-10-23T12:16:52", "upload_time_iso_8601": "2017-10-23T12:16:52.637213Z", "url": "https://files.pythonhosted.org/packages/11/0e/9b5107219c2e3a996dcaa1a5507b2e73d7f8a10b54c88876c87545554d1a/pas.plugins.sqlalchemy-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:07 2020"}