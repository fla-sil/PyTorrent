{"info": {"author": "Jo\u00c3\u00a3o Sebasti\u00c3\u00a3o de Oliveira Bueno", "author_email": "jsbueno@python.org.br", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pyleptonica\n===========\n\nThis is a thin ctypes wrapper over the Leptonica\nlibrary. (http://www.leptonica.org)\nAlmost all functions are exposed to Python, correctly anotated, and data\nstructures used in Leptonica are available as classes from Python. \n\nThis Library is licensed under the Lesser GNU Public License Version 3 or Later.\n\nLeptonica data structures are available as authomaticaly generated Python objects,\ntransparently calling Leptonica's constructors and Detrutors when those\nexist.\n\nThrefore for a new image object (represented in Leptonica as a \"PIX\" structure). \none just jave to do:\nimage = leptonica.PIX(640, 480,32)\nThis will have the same effect than manually calling the constructor as in:\n\nimage = leptonica.functions.pixCreate(640,480,32)\n\n\nIt transposes Leptonica's extensive inline documentation to Python's docstrings,\nso it is possible to check for help and parameter types\nfrom the Python interpreter, using pydoc or from an IDE. \n\nHowever, whenever a function takes pointers or arrays of pointers as \nparameters, these will have to be created by hand using ctypes\nfacilities before calling the functions. (Except for pointers\nto Leptonica data structures: these are translated into fairly high-level\nPython objects).\n\nThis is on an already usable stage, although one might expect some API changes and\ninclusion of more \"pure python\" utility functions. The main behavior of\nthe Leptonica objetcs should remain the same.\n\nTo run it, you might not need to have Leptonica source files:\nI versioned the generated files as well so that most people just have\nto copy the .py files around. If you want to hack the code, or generate \nwrappers for other versions of Leptonica, you have to execute\nthe leptonica_header_parser.py and leptonica_function_parser.py as stand\nalone programs, after tunning a config.py from the config_remplate.py\nfile.\n\nThere are at this time, two utility functions to convert \nLeptonica images to and from Python Imaging Library (PIL) Images.\n\nAlso, although I have not tested this under windows or Mac OS-- it\nprobably need some tweaks to run (mostly finding the correct libraries \nwith ctypes) - but otherwise it should plainly work.\n\nHave fun!\n\n  js \n  -><-", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/pylepthonica/downloads/detail?name=pyleptonica-0.8.tar.gz&can=2&q=", "keywords": null, "license": "Lesser GNU Public License 3.0 or above", "maintainer": null, "maintainer_email": null, "name": "pyleptonica", "package_url": "https://pypi.org/project/pyleptonica/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyleptonica/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/pylepthonica/downloads/detail?name=pyleptonica-0.8.tar.gz&can=2&q="}, "release_url": "https://pypi.org/project/pyleptonica/0.8/", "requires_dist": null, "requires_python": null, "summary": "Wrapper and wrapper generators for the 2D Image Leptonica Library", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a thin ctypes wrapper over the Leptonica\nlibrary. (<a href=\"http://www.leptonica.org\" rel=\"nofollow\">http://www.leptonica.org</a>)\nAlmost all functions are exposed to Python, correctly anotated, and data\nstructures used in Leptonica are available as classes from Python.</p>\n<p>This Library is licensed under the Lesser GNU Public License Version 3 or Later.</p>\n<p>Leptonica data structures are available as authomaticaly generated Python objects,\ntransparently calling Leptonica\u2019s constructors and Detrutors when those\nexist.</p>\n<p>Threfore for a new image object (represented in Leptonica as a \u201cPIX\u201d structure).\none just jave to do:\nimage = leptonica.PIX(640, 480,32)\nThis will have the same effect than manually calling the constructor as in:</p>\n<p>image = leptonica.functions.pixCreate(640,480,32)</p>\n<p>It transposes Leptonica\u2019s extensive inline documentation to Python\u2019s docstrings,\nso it is possible to check for help and parameter types\nfrom the Python interpreter, using pydoc or from an IDE.</p>\n<p>However, whenever a function takes pointers or arrays of pointers as\nparameters, these will have to be created by hand using ctypes\nfacilities before calling the functions. (Except for pointers\nto Leptonica data structures: these are translated into fairly high-level\nPython objects).</p>\n<p>This is on an already usable stage, although one might expect some API changes and\ninclusion of more \u201cpure python\u201d utility functions. The main behavior of\nthe Leptonica objetcs should remain the same.</p>\n<p>To run it, you might not need to have Leptonica source files:\nI versioned the generated files as well so that most people just have\nto copy the .py files around. If you want to hack the code, or generate\nwrappers for other versions of Leptonica, you have to execute\nthe leptonica_header_parser.py and leptonica_function_parser.py as stand\nalone programs, after tunning a config.py from the config_remplate.py\nfile.</p>\n<p>There are at this time, two utility functions to convert\nLeptonica images to and from Python Imaging Library (PIL) Images.</p>\n<p>Also, although I have not tested this under windows or Mac OS\u2013 it\nprobably need some tweaks to run (mostly finding the correct libraries\nwith ctypes) - but otherwise it should plainly work.</p>\n<p>Have fun!</p>\n<blockquote>\njs\n-&gt;&lt;-</blockquote>\n\n          </div>"}, "last_serial": 238896, "releases": {"0.2": [], "0.8": []}, "urls": [], "timestamp": "Fri May  8 03:03:13 2020"}