{"info": {"author": "Emil S Roemer", "author_email": "emilromer@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Source code and development can be followed in this [repository](https://gitlab.com/Romeren/influxed)\nFeel free to open issues or share your experience :)\n\n\n## Installation\n# Navigate to folder in terminal\nRun\n```\npython setup.py install\n```\nOr\n```\npip install influxed\n```\nand your good to go.\n\n# Connect to server:\n```\nfrom influxed.orm import engine\nengine.add_server('http://influxserverurlorip:port', 'username', 'password', reflect=True)\n```\nOr secure:\n```\nfrom influxed.orm import engine\nengine.add_server('https://influxserverurlorip:port', 'username', 'password', reflect=True)\n```\nOr with asyncio:\n```\nfrom influxed.orm import engine\nawait engine.add_server('https://influxserverurlorip:port', 'username', 'password', reflect=True, isAsync=True)\n```\n\n\n### Example explorer\n# Show databases\n```\nengine.server.ls()\n```\n# Show measurements\n```\nengine.server.[database_name].ls()\n```\n# Show fields\n```\nengine.server.[database_name].[measurement_name].ls()\n```\n# In the case that a name of a measurement or a database is not complient with python,\n# then they can be accessed by using indexing\n# Example\n```\nengine.server['1Db']['measurement one'].ls()\n```\n\n# Select data from a measurement:\n```\nengine.server.database.meter_usage.query.select('field1', 'field2').all()\n```\n# Another way is to select it from the measurement itself\n```\nengine.server.database.meter_usage.field1.query.all()\n```\n\n# Limit selection:\n```\nengine.server.database.meter_usage.field1.query.first(5) OR\nengine.server.database.meter_usage.field1.query.last(7) OR\nengine.server.database.meter_usage.field1.query.limit(2).all()\n``` \n\n# Filtering:\n```\ncol = engine.server.database.meter_usage.field1\ncol.query.filter( # Everything between 5 and 6\n    col > 5,\n    col <= 6\n).all()\n```\n\n# Filtering by time\n```\nimport datetime as dt\nfrom influxed.ifql import time\n\nengine.server.database.meter_usage.field1.query.filter(\n    time > dt.datetime.now()\n).all()\n```\n\n# Filtering using OR statement\n```\nfrom influxed.ifql import OPERATORS\n\ncol = engine.server.database.meter_usage.field1\ncol.query.filter(\n    OPERATORS.or_(\n        time > dt.datetime.now(), # or\n        col > 2,\n    )\n\n).all()\n```\n\n# Aggregators:\n```\ncol = engine.server.database.meter_usage.field1\ncol.query.min.all() # Minimum value\ncol.query.max.all() # Maximum value\ncol.query.mean.all() # Mean value\ncol.query.sum.all() # Summed Value\ncol.query.std.all() # Standard deviation\n```\n# Group by function\n```\nfrom influxed.ifql import time\n\ncol = engine.server.database.meter_usage.field1\n\ncol.query.min.group_by(\n    time('2d') # Group into buckets of 2 days and take the minimum value\n).all()\n\n# Available interval selectors:\n# week = 'w'\n# day = 'd'\n# hour = 'h'\n# minute = 'm'\n# sec = 's'\n# milisec = 'ms'\n# microsec ='u'\n# nanosec = 'ns'\n```\n\n# Lets spice things up:\n```\n\nengine.server.dap.meterusage.query.select(\n    '871694831000088656',\n    '871690910000005079'\n).filter(\n    time > dt.datetime(2016,1,1),\n    time > dt.datetime(2016,2,1),\n).group_by(\n    time('1d')\n).sum().fill(0).all()\n\n# Will give you:\n# 'SELECT SUM(\"871694831000088656\"), SUM(\"871690910000005079\") FROM meterusage WHERE time > \\'2016-01-01 00:00:00.000\\' AND time > \\'2016-02-01 00:00:00.000\\'  GROUP BY time(1d) FILL(1)'\n```\n\n# With algebraic aritmatic:\n```\na = engine.server.database.meter_usage.field1\nb = engine.server.database.meter_usage.field2\nengine.query.select((a.sum()+2)/b)*42).filter( # Everything between 5 and 6\n    a > 5,\n    b <= 6\n).all()\n# Will give you:\n# SELECT ((SUM(field1) + 2) / field2) * 42 WHERE field1 > 5 AND field2 < 6\n```\n# With alegebaic regex:\n```\nfrom influxed import like, nlike\nengine.query.select('a').filter('b' |like|  '/_percent/').all()\nengine.query.select('a').filter('b' |nlike|  '/_percent/').all()\n``` Or\n\n```\nfrom influxed import like, nlike\na = engine.server.database.meter_usage.field1\nb = engine.server.database.meter_usage.field2\n\nengine.query.select(a).filter(b |like|  '/_percent/').all()\nengine.query.select(a).filter(b.like('/_percent/')).all()\n```\n\n\n\n## Test\nRun\n```\n    python -m unittest discover -p '*_test.py' -s src -t .\n```\n\n# Debugging -------\nOne can always call\n    .format()\non any statement after the .query\nin order to see the raw sql-produced by a given statement\nAdditional debug information can be obtained by attaching a logger:\n\n```\nimport logging\nlogger = logging.getLogger()\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nch = logging.StreamHandler()\nch.setFormatter(formatter)\nlogger.addHandler(ch)\nlogger.setLevel('DEBUG')\n``` \n\nAvailable logging channels:\n    - Transport layer = InfluxedClient\n    - Transport layer Retry logic = InfluxedRetryStrat\n\n\nCode coverage:\n```\n coverage run --source=src/influxed -m xmlrunner -o test-reports discover -s ./src -p *_test.py\n coverage xml\n sonar-scanner\n```\n\n### Lastly, if you find bugs or have feature requests feel free to open issues\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/Romeren/influxed/", "keywords": "Influx InfluxDb Query Language QL ORM", "license": "", "maintainer": "", "maintainer_email": "", "name": "influxed", "package_url": "https://pypi.org/project/influxed/", "platform": "", "project_url": "https://pypi.org/project/influxed/", "project_urls": {"Homepage": "https://gitlab.com/Romeren/influxed/"}, "release_url": "https://pypi.org/project/influxed/0.1.5.2/", "requires_dist": ["pandas", "requests"], "requires_python": "", "summary": "Inlfuxed influx query language and orm", "version": "0.1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Source code and development can be followed in this <a href=\"https://gitlab.com/Romeren/influxed\" rel=\"nofollow\">repository</a></h2>\n<p>Feel free to open issues or share your experience :)</p>\n<h2>Installation</h2>\n<h1>Navigate to folder in terminal</h1>\n<p>Run</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>Or</p>\n<pre><code>pip install influxed\n</code></pre>\n<p>and your good to go.</p>\n<h1>Connect to server:</h1>\n<pre><code>from influxed.orm import engine\nengine.add_server('http://influxserverurlorip:port', 'username', 'password', reflect=True)\n</code></pre>\n<p>Or secure:</p>\n<pre><code>from influxed.orm import engine\nengine.add_server('https://influxserverurlorip:port', 'username', 'password', reflect=True)\n</code></pre>\n<p>Or with asyncio:</p>\n<pre><code>from influxed.orm import engine\nawait engine.add_server('https://influxserverurlorip:port', 'username', 'password', reflect=True, isAsync=True)\n</code></pre>\n<h3>Example explorer</h3>\n<h1>Show databases</h1>\n<pre><code>engine.server.ls()\n</code></pre>\n<h1>Show measurements</h1>\n<pre><code>engine.server.[database_name].ls()\n</code></pre>\n<h1>Show fields</h1>\n<pre><code>engine.server.[database_name].[measurement_name].ls()\n</code></pre>\n<h1>In the case that a name of a measurement or a database is not complient with python,</h1>\n<h1>then they can be accessed by using indexing</h1>\n<h1>Example</h1>\n<pre><code>engine.server['1Db']['measurement one'].ls()\n</code></pre>\n<h1>Select data from a measurement:</h1>\n<pre><code>engine.server.database.meter_usage.query.select('field1', 'field2').all()\n</code></pre>\n<h1>Another way is to select it from the measurement itself</h1>\n<pre><code>engine.server.database.meter_usage.field1.query.all()\n</code></pre>\n<h1>Limit selection:</h1>\n<pre><code>engine.server.database.meter_usage.field1.query.first(5) OR\nengine.server.database.meter_usage.field1.query.last(7) OR\nengine.server.database.meter_usage.field1.query.limit(2).all()\n</code></pre>\n<h1>Filtering:</h1>\n<pre><code>col = engine.server.database.meter_usage.field1\ncol.query.filter( # Everything between 5 and 6\n    col &gt; 5,\n    col &lt;= 6\n).all()\n</code></pre>\n<h1>Filtering by time</h1>\n<pre><code>import datetime as dt\nfrom influxed.ifql import time\n\nengine.server.database.meter_usage.field1.query.filter(\n    time &gt; dt.datetime.now()\n).all()\n</code></pre>\n<h1>Filtering using OR statement</h1>\n<pre><code>from influxed.ifql import OPERATORS\n\ncol = engine.server.database.meter_usage.field1\ncol.query.filter(\n    OPERATORS.or_(\n        time &gt; dt.datetime.now(), # or\n        col &gt; 2,\n    )\n\n).all()\n</code></pre>\n<h1>Aggregators:</h1>\n<pre><code>col = engine.server.database.meter_usage.field1\ncol.query.min.all() # Minimum value\ncol.query.max.all() # Maximum value\ncol.query.mean.all() # Mean value\ncol.query.sum.all() # Summed Value\ncol.query.std.all() # Standard deviation\n</code></pre>\n<h1>Group by function</h1>\n<pre><code>from influxed.ifql import time\n\ncol = engine.server.database.meter_usage.field1\n\ncol.query.min.group_by(\n    time('2d') # Group into buckets of 2 days and take the minimum value\n).all()\n\n# Available interval selectors:\n# week = 'w'\n# day = 'd'\n# hour = 'h'\n# minute = 'm'\n# sec = 's'\n# milisec = 'ms'\n# microsec ='u'\n# nanosec = 'ns'\n</code></pre>\n<h1>Lets spice things up:</h1>\n<pre><code>\nengine.server.dap.meterusage.query.select(\n    '871694831000088656',\n    '871690910000005079'\n).filter(\n    time &gt; dt.datetime(2016,1,1),\n    time &gt; dt.datetime(2016,2,1),\n).group_by(\n    time('1d')\n).sum().fill(0).all()\n\n# Will give you:\n# 'SELECT SUM(\"871694831000088656\"), SUM(\"871690910000005079\") FROM meterusage WHERE time &gt; \\'2016-01-01 00:00:00.000\\' AND time &gt; \\'2016-02-01 00:00:00.000\\'  GROUP BY time(1d) FILL(1)'\n</code></pre>\n<h1>With algebraic aritmatic:</h1>\n<pre><code>a = engine.server.database.meter_usage.field1\nb = engine.server.database.meter_usage.field2\nengine.query.select((a.sum()+2)/b)*42).filter( # Everything between 5 and 6\n    a &gt; 5,\n    b &lt;= 6\n).all()\n# Will give you:\n# SELECT ((SUM(field1) + 2) / field2) * 42 WHERE field1 &gt; 5 AND field2 &lt; 6\n</code></pre>\n<h1>With alegebaic regex:</h1>\n<pre><code>from influxed import like, nlike\nengine.query.select('a').filter('b' |like|  '/_percent/').all()\nengine.query.select('a').filter('b' |nlike|  '/_percent/').all()\n``` Or\n\n</code></pre>\n<p>from influxed import like, nlike\na = engine.server.database.meter_usage.field1\nb = engine.server.database.meter_usage.field2</p>\n<p>engine.query.select(a).filter(b |like|  '/_percent/').all()\nengine.query.select(a).filter(b.like('/_percent/')).all()</p>\n<pre><code>\n\n\n## Test\nRun\n</code></pre>\n<pre><code>python -m unittest discover -p '*_test.py' -s src -t .\n</code></pre>\n<pre><code>\n# Debugging -------\nOne can always call\n    .format()\non any statement after the .query\nin order to see the raw sql-produced by a given statement\nAdditional debug information can be obtained by attaching a logger:\n\n</code></pre>\n<p>import logging\nlogger = logging.getLogger()\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nch = logging.StreamHandler()\nch.setFormatter(formatter)\nlogger.addHandler(ch)\nlogger.setLevel('DEBUG')</p>\n<pre><code>\nAvailable logging channels:\n    - Transport layer = InfluxedClient\n    - Transport layer Retry logic = InfluxedRetryStrat\n\n\nCode coverage:\n</code></pre>\n<p>coverage run --source=src/influxed -m xmlrunner -o test-reports discover -s ./src -p *_test.py\ncoverage xml\nsonar-scanner</p>\n<pre><code>\n### Lastly, if you find bugs or have feature requests feel free to open issues\n\n</code></pre>\n\n          </div>"}, "last_serial": 5775888, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "f27b86a09b4dfb69a89109706ab6402e", "sha256": "10448dc814644c5cf74ee04ad0a42be144f3a187345567a5dffeb14408a2c7c7"}, "downloads": -1, "filename": "influxed-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f27b86a09b4dfb69a89109706ab6402e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49145, "upload_time": "2019-03-22T08:20:29", "upload_time_iso_8601": "2019-03-22T08:20:29.961052Z", "url": "https://files.pythonhosted.org/packages/10/f8/9c2fdd8647f81c05881b0c127d197e152feef32d23cbf1bf59b28b2628f5/influxed-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45c29d00643cde02f67b116f313a1ce6", "sha256": "7dc87cedffe95fd8dc274686a20a290f0169a5e8e3afd752dd51045076d95a94"}, "downloads": -1, "filename": "influxed-0.1.4.tar.gz", "has_sig": false, "md5_digest": "45c29d00643cde02f67b116f313a1ce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20837, "upload_time": "2019-03-22T08:20:32", "upload_time_iso_8601": "2019-03-22T08:20:32.420225Z", "url": "https://files.pythonhosted.org/packages/b2/a8/46468a5b54a3987c4b87c1905f3615247cf84c9c4948daead7003912a98a/influxed-0.1.4.tar.gz", "yanked": false}], "0.1.4.1": [{"comment_text": "", "digests": {"md5": "a9f97ee53586edf7f40b3aa2fc3c89dc", "sha256": "e39e20f82fbab0538cec5e3b282a59571486de7934f386a7db165d41f361958e"}, "downloads": -1, "filename": "influxed-0.1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a9f97ee53586edf7f40b3aa2fc3c89dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49441, "upload_time": "2019-03-22T08:35:24", "upload_time_iso_8601": "2019-03-22T08:35:24.436518Z", "url": "https://files.pythonhosted.org/packages/41/ea/ce57e1ad3435d64c1fc64c0e2354445ede0c5fcaeb5f9402e5bd9963772d/influxed-0.1.4.1-py3-none-any.whl", "yanked": false}], "0.1.4.10": [{"comment_text": "", "digests": {"md5": "36491e8bcc0554b9228e56ed67c1e07f", "sha256": "43d56e4a75345034efb90465c09df852ca67f0ab08dc1eca9ceb9ba03475995c"}, "downloads": -1, "filename": "influxed-0.1.4.10-py3-none-any.whl", "has_sig": false, "md5_digest": "36491e8bcc0554b9228e56ed67c1e07f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49800, "upload_time": "2019-04-09T12:05:11", "upload_time_iso_8601": "2019-04-09T12:05:11.885486Z", "url": "https://files.pythonhosted.org/packages/e5/38/c3174c80af95fbfd06288bd1627b04983291645218ee8c6be6ecb794619d/influxed-0.1.4.10-py3-none-any.whl", "yanked": false}], "0.1.4.11": [{"comment_text": "", "digests": {"md5": "fb78705b925ca6dc306e87f3e9ca8380", "sha256": "3757a85f39ed676be65c113ba59a2049678438293a607eb26a4731caab6872ac"}, "downloads": -1, "filename": "influxed-0.1.4.11-py3-none-any.whl", "has_sig": false, "md5_digest": "fb78705b925ca6dc306e87f3e9ca8380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50266, "upload_time": "2019-04-09T12:18:13", "upload_time_iso_8601": "2019-04-09T12:18:13.421235Z", "url": "https://files.pythonhosted.org/packages/43/a9/28e0942dcd559d56d8473ce9ceceabd82f3616e34fe25feda82c09fc5457/influxed-0.1.4.11-py3-none-any.whl", "yanked": false}], "0.1.4.12": [{"comment_text": "", "digests": {"md5": "effd4fe04339a85c02986dc155b5a315", "sha256": "8b3609df497fbaa25baa9bcabb4f7399622807ef460f263321a95ba6ba9c6492"}, "downloads": -1, "filename": "influxed-0.1.4.12-py3-none-any.whl", "has_sig": false, "md5_digest": "effd4fe04339a85c02986dc155b5a315", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50262, "upload_time": "2019-04-09T12:20:01", "upload_time_iso_8601": "2019-04-09T12:20:01.955667Z", "url": "https://files.pythonhosted.org/packages/c6/09/559c5ce282686ad12d870e458bd9bffa23d8f5c52be7738b2911e106a3c6/influxed-0.1.4.12-py3-none-any.whl", "yanked": false}], "0.1.4.13": [{"comment_text": "", "digests": {"md5": "72e4fe031c310548cb2a91e2b0dd9380", "sha256": "4300be77dda12b962b5b0e7d4b798a494cf2f93352730f2bc05a20f17afa2cd7"}, "downloads": -1, "filename": "influxed-0.1.4.13-py3-none-any.whl", "has_sig": false, "md5_digest": "72e4fe031c310548cb2a91e2b0dd9380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50322, "upload_time": "2019-04-12T14:51:05", "upload_time_iso_8601": "2019-04-12T14:51:05.617175Z", "url": "https://files.pythonhosted.org/packages/d5/e3/4b4a08e1c47f594ebb4d859d2b61d7ed5abcf20132726730e60e63120135/influxed-0.1.4.13-py3-none-any.whl", "yanked": false}], "0.1.4.14": [{"comment_text": "", "digests": {"md5": "4e806972e0a8447e0b7786b998aa0414", "sha256": "1742a30271a747fd341b045fe20e2d7ebcb885e5a14a63c8d707034f626e1f42"}, "downloads": -1, "filename": "influxed-0.1.4.14-py3-none-any.whl", "has_sig": false, "md5_digest": "4e806972e0a8447e0b7786b998aa0414", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50559, "upload_time": "2019-04-15T08:44:51", "upload_time_iso_8601": "2019-04-15T08:44:51.008068Z", "url": "https://files.pythonhosted.org/packages/b3/c9/9bc1f6789387a8dd69d713224d2cf9bc6db19d5e10515a616a6e190f5de1/influxed-0.1.4.14-py3-none-any.whl", "yanked": false}], "0.1.4.15": [{"comment_text": "", "digests": {"md5": "727f278ed4972d86f957e594d496ba43", "sha256": "a71aa2c9419ef8aa8e4856123d6a2ea2552d0b5a0c84ba686f7dbe9b4e25f6ac"}, "downloads": -1, "filename": "influxed-0.1.4.15-py3-none-any.whl", "has_sig": false, "md5_digest": "727f278ed4972d86f957e594d496ba43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50695, "upload_time": "2019-04-15T10:14:14", "upload_time_iso_8601": "2019-04-15T10:14:14.399940Z", "url": "https://files.pythonhosted.org/packages/a4/90/75edbcd3c7e377004849c415631870c899c6a5145eb8094b84a3cede62ff/influxed-0.1.4.15-py3-none-any.whl", "yanked": false}], "0.1.4.16": [{"comment_text": "", "digests": {"md5": "cd61a9e80bdc4c2e57ea39a535101429", "sha256": "9549fddba2f31159ce85e9177e4fbcbbebd2489d82bffe67c0504d84131fdb06"}, "downloads": -1, "filename": "influxed-0.1.4.16-py3-none-any.whl", "has_sig": false, "md5_digest": "cd61a9e80bdc4c2e57ea39a535101429", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51804, "upload_time": "2019-05-17T09:33:22", "upload_time_iso_8601": "2019-05-17T09:33:22.405765Z", "url": "https://files.pythonhosted.org/packages/dc/f6/635513ba51f1c9873f555eaf7c696c718dc6e3925b98eae407bd4d9866ab/influxed-0.1.4.16-py3-none-any.whl", "yanked": false}], "0.1.4.17": [{"comment_text": "", "digests": {"md5": "54a17d39d4dc37f914b9f6f190f07367", "sha256": "ff4111e44b4f47452c7a838152f12eac11a8a9496b6dafab01eaef3dad26a1c2"}, "downloads": -1, "filename": "influxed-0.1.4.17-py3-none-any.whl", "has_sig": false, "md5_digest": "54a17d39d4dc37f914b9f6f190f07367", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52298, "upload_time": "2019-07-09T14:18:37", "upload_time_iso_8601": "2019-07-09T14:18:37.114267Z", "url": "https://files.pythonhosted.org/packages/24/f8/e244891ffbd15a771aa61f0e61091c215996e0b110cec718d085893dbdad/influxed-0.1.4.17-py3-none-any.whl", "yanked": false}], "0.1.4.18": [{"comment_text": "", "digests": {"md5": "c6de4ccca65bededca780078f6263c12", "sha256": "8c291ddf5a56817bb59d7762e1bcb04fdfb886601caad2ce141110acb82f3f93"}, "downloads": -1, "filename": "influxed-0.1.4.18-py3-none-any.whl", "has_sig": false, "md5_digest": "c6de4ccca65bededca780078f6263c12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52330, "upload_time": "2019-07-09T14:34:42", "upload_time_iso_8601": "2019-07-09T14:34:42.796853Z", "url": "https://files.pythonhosted.org/packages/3a/4f/3c1aedee4fb0657a27f77c8c3c4e6bf5a26f156fa023bac41c35bcfb1a3e/influxed-0.1.4.18-py3-none-any.whl", "yanked": false}], "0.1.4.19": [{"comment_text": "", "digests": {"md5": "e92515dafa43120c6b0d5f20dcfdf914", "sha256": "8d5335e2d76e1431853132a92c9489c12897d450b48365aae2fa705eb7cefa22"}, "downloads": -1, "filename": "influxed-0.1.4.19-py3-none-any.whl", "has_sig": false, "md5_digest": "e92515dafa43120c6b0d5f20dcfdf914", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52487, "upload_time": "2019-07-17T15:09:06", "upload_time_iso_8601": "2019-07-17T15:09:06.264552Z", "url": "https://files.pythonhosted.org/packages/e2/ca/e4a37d87992bb528c4451bff7f586e1f11d54db18b06406d324516a207ed/influxed-0.1.4.19-py3-none-any.whl", "yanked": false}], "0.1.4.2": [{"comment_text": "", "digests": {"md5": "91a2f7fccb0c69d3bf9fafe86365847e", "sha256": "2ea1911daca46a9b4564712684c634beb0a2f591ed3872a1fa84ee8596f715db"}, "downloads": -1, "filename": "influxed-0.1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "91a2f7fccb0c69d3bf9fafe86365847e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49509, "upload_time": "2019-03-22T08:52:00", "upload_time_iso_8601": "2019-03-22T08:52:00.905770Z", "url": "https://files.pythonhosted.org/packages/fd/4b/e0da25c83f3e124a40e5c94e18fc3146cf7494bc9d1c8e2b1f917e728d4e/influxed-0.1.4.2-py3-none-any.whl", "yanked": false}], "0.1.4.3": [{"comment_text": "", "digests": {"md5": "0d65e76224df92cdde005624edbb65be", "sha256": "83b7b978dc0dc8621b44ec13ec48d945a8d179d02d21ef01b44e2666241576d7"}, "downloads": -1, "filename": "influxed-0.1.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0d65e76224df92cdde005624edbb65be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49547, "upload_time": "2019-03-22T10:38:56", "upload_time_iso_8601": "2019-03-22T10:38:56.193922Z", "url": "https://files.pythonhosted.org/packages/3a/58/4ea506e3d5c2c3a1220380d135abcb94bde474f6e5450cae1983163f8ad3/influxed-0.1.4.3-py3-none-any.whl", "yanked": false}], "0.1.4.4": [{"comment_text": "", "digests": {"md5": "b8132095c9a9cb468bc077dbade0072e", "sha256": "b8e8c305cb328f611cf85108fce750d37ff6255b130deb90e39d1f2552de298d"}, "downloads": -1, "filename": "influxed-0.1.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b8132095c9a9cb468bc077dbade0072e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49644, "upload_time": "2019-03-25T10:41:31", "upload_time_iso_8601": "2019-03-25T10:41:31.074030Z", "url": "https://files.pythonhosted.org/packages/f9/f4/8e0c3f7fa4ac934617e874e688080ee3bf2d5ba2dd01c787702f1696d74c/influxed-0.1.4.4-py3-none-any.whl", "yanked": false}], "0.1.4.5": [{"comment_text": "", "digests": {"md5": "408def0732c30292454a14f0e2894ebe", "sha256": "0059f632bcc98f89d16c9fea5b3c6f7dbdb25acef0d4adb390ad49b9b2a56105"}, "downloads": -1, "filename": "influxed-0.1.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "408def0732c30292454a14f0e2894ebe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49669, "upload_time": "2019-03-26T08:26:54", "upload_time_iso_8601": "2019-03-26T08:26:54.927198Z", "url": "https://files.pythonhosted.org/packages/9f/e3/920df15213487f660d6897bb98090b30d53b89aaff7aa8488e53632dc5e9/influxed-0.1.4.5-py3-none-any.whl", "yanked": false}], "0.1.4.6": [{"comment_text": "", "digests": {"md5": "e32a191da5399be0e978cf46b5ccc4d9", "sha256": "952e35ff50d581a24403caea9fe50c2604c4a08000e83cc0299e4bcec0bc7b97"}, "downloads": -1, "filename": "influxed-0.1.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e32a191da5399be0e978cf46b5ccc4d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49681, "upload_time": "2019-04-09T10:33:29", "upload_time_iso_8601": "2019-04-09T10:33:29.335981Z", "url": "https://files.pythonhosted.org/packages/2b/e3/ffa0ed673fa4c38bc5ab8dc0b1421b4a50fa90543f180839bfbb82d96a59/influxed-0.1.4.6-py3-none-any.whl", "yanked": false}], "0.1.4.7": [{"comment_text": "", "digests": {"md5": "df5f26693ef4a6e8d9168cb554110fca", "sha256": "95b689f5cbb2303b61c6a6c3b39777bf35aee98e8472646749463db51e6cc6c6"}, "downloads": -1, "filename": "influxed-0.1.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "df5f26693ef4a6e8d9168cb554110fca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49706, "upload_time": "2019-04-09T10:56:27", "upload_time_iso_8601": "2019-04-09T10:56:27.033279Z", "url": "https://files.pythonhosted.org/packages/ea/b1/4012b9f4c61fbdde9cc28e5544a5395f3d13d1efe130db352f257897e88d/influxed-0.1.4.7-py3-none-any.whl", "yanked": false}], "0.1.4.8": [{"comment_text": "", "digests": {"md5": "ad7b55290378ac6295ff5ba4efe5f7eb", "sha256": "7d1b5a1af2f88331fb389a0d229a4730c2ca681b3b6ae83c0f139799428a9d33"}, "downloads": -1, "filename": "influxed-0.1.4.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ad7b55290378ac6295ff5ba4efe5f7eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49705, "upload_time": "2019-04-09T10:58:04", "upload_time_iso_8601": "2019-04-09T10:58:04.344495Z", "url": "https://files.pythonhosted.org/packages/4c/04/8e53fa7bd3ce46d9da599cde9e990839b9829a8bf071d0f5bb386d155bbd/influxed-0.1.4.8-py3-none-any.whl", "yanked": false}], "0.1.4.9": [{"comment_text": "", "digests": {"md5": "b01556442f6a4f234e65ae90edaca661", "sha256": "9861817833dfcd90e29d6c4208da4df1ec5c281d9dab695802d0aa3ed63e1a17"}, "downloads": -1, "filename": "influxed-0.1.4.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b01556442f6a4f234e65ae90edaca661", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49757, "upload_time": "2019-04-09T11:25:31", "upload_time_iso_8601": "2019-04-09T11:25:31.554340Z", "url": "https://files.pythonhosted.org/packages/c6/c9/38ec0c45cdafc9d234c05b9b3f8ce29f2005fa95e941a69e8231abfb98fd/influxed-0.1.4.9-py3-none-any.whl", "yanked": false}], "0.1.5.0": [{"comment_text": "", "digests": {"md5": "5a888c9bfd110c3613ac9f24d87465cb", "sha256": "39fed8ded9dcbbabb00ee497fccd210ad8e4944a1c4fc81bbc7af48ef46bb2b4"}, "downloads": -1, "filename": "influxed-0.1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5a888c9bfd110c3613ac9f24d87465cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52486, "upload_time": "2019-07-18T11:18:54", "upload_time_iso_8601": "2019-07-18T11:18:54.517053Z", "url": "https://files.pythonhosted.org/packages/3e/38/360f5548c09308d991645b878f3eb2a2f0b39e68cce7eb9748735a2698bf/influxed-0.1.5.0-py3-none-any.whl", "yanked": false}], "0.1.5.2": [{"comment_text": "", "digests": {"md5": "f596319f489ca1689373d0687f7a7f43", "sha256": "97e1af7834acf60541b4ae153e98e71def4f35cba78aa44ad65ed1c3bdcb6fd0"}, "downloads": -1, "filename": "influxed-0.1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f596319f489ca1689373d0687f7a7f43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55991, "upload_time": "2019-09-03T13:13:15", "upload_time_iso_8601": "2019-09-03T13:13:15.326825Z", "url": "https://files.pythonhosted.org/packages/fa/73/cb869a6cacec76a66d4e1e189d1b409291c9eea589766466f49d4df9bdcd/influxed-0.1.5.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f596319f489ca1689373d0687f7a7f43", "sha256": "97e1af7834acf60541b4ae153e98e71def4f35cba78aa44ad65ed1c3bdcb6fd0"}, "downloads": -1, "filename": "influxed-0.1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f596319f489ca1689373d0687f7a7f43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55991, "upload_time": "2019-09-03T13:13:15", "upload_time_iso_8601": "2019-09-03T13:13:15.326825Z", "url": "https://files.pythonhosted.org/packages/fa/73/cb869a6cacec76a66d4e1e189d1b409291c9eea589766466f49d4df9bdcd/influxed-0.1.5.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:56:04 2020"}