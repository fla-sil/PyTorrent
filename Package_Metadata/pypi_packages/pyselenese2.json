{"info": {"author": "Esteban Ordano", "author_email": "eordano@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Topic :: Software Development :: Testing"], "description": "Python Selenese translator\n==========================\n\nSelenium IDE lets you create Selenium tests in specially structured HTML (or\n\"Selenese\"). These can be easily run on your local machine but do not lend\nthemselves to being run on a server via e.g. Selenium RC.\n\nThis dynamically translates suites of Selenese tests into Python\nunittest.TestCase classes, which can then be run using Selenium RC within \nthe standard Python unit testing framework and using the Python Selenium \nbindings.\n\n\nWarning\n-------\n\nThis code is still under construction. It might break randomly and does not \ncurrently support more than a fraction of Selenese keywords. If you'd like to\nimprove its behaviour then please add more methods to the class in mapper.py\nto map Selenese keywords to Python-binding API calls.\n\nSetup\n-----\n\n1. Download Selenium RC http://seleniumhq.org/download/\n\n2. Unpack the server JAR at selenium-server-X/selenium-server.jar and run it\nin the background:\n\n java -jar selenium-server.jar\n\n3. Check out this repository anywhere on your filesystem.\n\n4. Unpack the Python bindings selenium-python-client-driver-X/selenium.py \nfrom Selenium RC and place it within this repository\n\n\nExecution\n---------\n\nA `test.py` example file is provided, where it shows how to run tests from\nfiles. You can alternatively use a `SingleStringAdaptor` to create tests from\na single string.\n\nIf your target is to build tests from a folder (or a set of folders), take\na look at the usage of the `generate_test_case` function in combination with\nthe `TestSuiteFileAdaptor`.\n\nTesting\n-------\n\nFunctional testing is implemented through Selenese tests.\n\n python test.py [selenium-server]\n\nKnown issues\n------------\n\nThe main issue is that not all of Selenium's test syntax has been transcribed\nin mapper.py yet. Please let me know if your tests fail on a particular \nSelenium keyword; alternatively, feel free to fork the github repository and \nadd the mapping yourself.\n\nCredits\n-------\n\nAll the mapper.py functions were created by J.P. Stacey. Development on\nPySelenese seems to have halted two years ago. I just needed something to\ntranslate a HTML Selenese string and this is the best project I've found.\n\nSome heavy refactoring needed to take place though, but the heavy part(map\nthe Selenese functions to Python in real time) was already done by Stacey.\n\nHere is the original repo:\n\n http://github.com/jpstacey/PySelenese", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eordano/pyselenese2", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "pyselenese2", "package_url": "https://pypi.org/project/pyselenese2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyselenese2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/eordano/pyselenese2"}, "release_url": "https://pypi.org/project/pyselenese2/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Python Selenese translator", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Selenium IDE lets you create Selenium tests in specially structured HTML (or\n\u201cSelenese\u201d). These can be easily run on your local machine but do not lend\nthemselves to being run on a server via e.g. Selenium RC.</p>\n<p>This dynamically translates suites of Selenese tests into Python\nunittest.TestCase classes, which can then be run using Selenium RC within\nthe standard Python unit testing framework and using the Python Selenium\nbindings.</p>\n<div id=\"warning\">\n<h2>Warning</h2>\n<p>This code is still under construction. It might break randomly and does not\ncurrently support more than a fraction of Selenese keywords. If you\u2019d like to\nimprove its behaviour then please add more methods to the class in mapper.py\nto map Selenese keywords to Python-binding API calls.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<ol>\n<li>Download Selenium RC <a href=\"http://seleniumhq.org/download/\" rel=\"nofollow\">http://seleniumhq.org/download/</a></li>\n</ol>\n<p>2. Unpack the server JAR at selenium-server-X/selenium-server.jar and run it\nin the background:</p>\n<blockquote>\njava -jar selenium-server.jar</blockquote>\n<ol>\n<li>Check out this repository anywhere on your filesystem.</li>\n</ol>\n<p>4. Unpack the Python bindings selenium-python-client-driver-X/selenium.py\nfrom Selenium RC and place it within this repository</p>\n</div>\n<div id=\"execution\">\n<h2>Execution</h2>\n<p>A <cite>test.py</cite> example file is provided, where it shows how to run tests from\nfiles. You can alternatively use a <cite>SingleStringAdaptor</cite> to create tests from\na single string.</p>\n<p>If your target is to build tests from a folder (or a set of folders), take\na look at the usage of the <cite>generate_test_case</cite> function in combination with\nthe <cite>TestSuiteFileAdaptor</cite>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Functional testing is implemented through Selenese tests.</p>\n<blockquote>\npython test.py [selenium-server]</blockquote>\n</div>\n<div id=\"known-issues\">\n<h2>Known issues</h2>\n<p>The main issue is that not all of Selenium\u2019s test syntax has been transcribed\nin mapper.py yet. Please let me know if your tests fail on a particular\nSelenium keyword; alternatively, feel free to fork the github repository and\nadd the mapping yourself.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>All the mapper.py functions were created by J.P. Stacey. Development on\nPySelenese seems to have halted two years ago. I just needed something to\ntranslate a HTML Selenese string and this is the best project I\u2019ve found.</p>\n<p>Some heavy refactoring needed to take place though, but the heavy part(map\nthe Selenese functions to Python in real time) was already done by Stacey.</p>\n<p>Here is the original repo:</p>\n<blockquote>\n<a href=\"http://github.com/jpstacey/PySelenese\" rel=\"nofollow\">http://github.com/jpstacey/PySelenese</a></blockquote>\n</div>\n\n          </div>"}, "last_serial": 797718, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "163cd72212a38043f41f2bea09c8de96", "sha256": "4b35fccd2fc3a9bd7cb16beab3307bbe36d26eae90929cfcbdb67ff6b591430b"}, "downloads": -1, "filename": "pyselenese2-0.1.0.tar.gz", "has_sig": false, "md5_digest": "163cd72212a38043f41f2bea09c8de96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6163, "upload_time": "2012-08-31T02:50:32", "upload_time_iso_8601": "2012-08-31T02:50:32.131475Z", "url": "https://files.pythonhosted.org/packages/ec/31/de49186853e5d4a32d72704457d0092c5d48fa1e86092ba560e7bcb2c2a9/pyselenese2-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "25b33c8c15329d05a7f3eda0e48d7dd9", "sha256": "d78c58465646877e745d16c323cb4ced891539405846d2987502659f4134d421"}, "downloads": -1, "filename": "pyselenese2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "25b33c8c15329d05a7f3eda0e48d7dd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6388, "upload_time": "2012-08-31T02:51:30", "upload_time_iso_8601": "2012-08-31T02:51:30.808338Z", "url": "https://files.pythonhosted.org/packages/3a/80/0f0a23ed66b301e90ed37191af379f8aece0dc8d433f0a77795cc5984804/pyselenese2-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "94b0baaaf9ebca8eb70949bc475a4d9f", "sha256": "cb71a0046a658e06ee1139fa72a5862675800ef5635fc1316a3e9e800990862c"}, "downloads": -1, "filename": "pyselenese2-0.1.2.tar.gz", "has_sig": false, "md5_digest": "94b0baaaf9ebca8eb70949bc475a4d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6417, "upload_time": "2012-08-31T02:56:57", "upload_time_iso_8601": "2012-08-31T02:56:57.708003Z", "url": "https://files.pythonhosted.org/packages/9c/bf/2a533c28ed3836637a9436d898da96e253b9d4af3a71d9360a2db6946c20/pyselenese2-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "94b0baaaf9ebca8eb70949bc475a4d9f", "sha256": "cb71a0046a658e06ee1139fa72a5862675800ef5635fc1316a3e9e800990862c"}, "downloads": -1, "filename": "pyselenese2-0.1.2.tar.gz", "has_sig": false, "md5_digest": "94b0baaaf9ebca8eb70949bc475a4d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6417, "upload_time": "2012-08-31T02:56:57", "upload_time_iso_8601": "2012-08-31T02:56:57.708003Z", "url": "https://files.pythonhosted.org/packages/9c/bf/2a533c28ed3836637a9436d898da96e253b9d4af3a71d9360a2db6946c20/pyselenese2-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:09 2020"}