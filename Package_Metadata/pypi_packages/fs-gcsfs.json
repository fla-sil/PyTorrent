{"info": {"author": "Othoz GmbH", "author_email": "wiesner@othoz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation", "Topic :: System :: Filesystems"], "description": "GCSFS\n=====\n\nA Python filesystem abstraction of Google Cloud Storage (GCS) implemented as a `PyFilesystem2 <https://github.com/PyFilesystem/pyfilesystem2>`__ extension.\n\n\n.. image:: https://img.shields.io/pypi/v/fs-gcsfs.svg\n    :target: https://pypi.org/project/fs-gcsfs/\n\n.. image:: https://img.shields.io/pypi/pyversions/fs-gcsfs.svg\n    :target: https://pypi.org/project/fs-gcsfs/\n\n.. image:: https://travis-ci.org/Othoz/gcsfs.svg?branch=master\n    :target: https://travis-ci.org/Othoz/gcsfs\n\n.. image:: https://readthedocs.org/projects/fs-gcsfs/badge/?version=latest\n    :target: https://fs-gcsfs.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://api.codacy.com/project/badge/Coverage/f863cb8afe7943b5ba8c818bbae2e6d2\n    :target: https://www.codacy.com/app/Othoz/gcsfs?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Othoz/gcsfs&amp;utm_campaign=Badge_Coverage\n\n.. image:: https://api.codacy.com/project/badge/Grade/f863cb8afe7943b5ba8c818bbae2e6d2\n    :target: https://www.codacy.com/app/Othoz/gcsfs?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Othoz/gcsfs&amp;utm_campaign=Badge_Grade\n\n\nWith GCSFS, you can interact with `Google Cloud Storage <https://cloud.google.com/storage/>`__ as if it was a regular filesystem.\n\nApart from the nicer interface, this will highly decouple your code from the underlying storage mechanism: Exchanging the storage backend with an\n`in-memory filesystem <https://pyfilesystem2.readthedocs.io/en/latest/reference/memoryfs.html>`__ for testing or any other\nfilesystem like `S3FS <https://github.com/pyfilesystem/s3fs>`__ becomes as easy as replacing ``gs://bucket_name`` with ``mem://`` or ``s3://bucket_name``.\n\nFor a full reference on all the PyFilesystem possibilities, take a look at the\n`PyFilesystem Docs <https://pyfilesystem2.readthedocs.io/en/latest/index.html>`__!\n\n\nDocumentation\n-------------\n\n-  `GCSFS Documentation <http://fs-gcsfs.readthedocs.io/en/latest/>`__\n-  `PyFilesystem Wiki <https://www.pyfilesystem.org>`__\n-  `PyFilesystem Reference <https://docs.pyfilesystem.org/en/latest/reference/base.html>`__\n\n\nInstalling\n----------\n\nInstall the latest GCSFS version by running::\n\n    $ pip install fs-gcsfs\n\nOr in case you are using conda::\n\n    $ conda install -c conda-forge fs-gcsfs\n\n\nExamples\n--------\n\nInstantiating a filesystem on Google Cloud Storage (for a full reference visit the\n`Documentation <http://fs-gcsfs.readthedocs.io/en/latest/index.html#reference>`__):\n\n.. code-block:: python\n\n    from fs_gcsfs import GCSFS\n    gcsfs = GCSFS(bucket_name=\"mybucket\")\n\n\nAlternatively you can use a `FS URL <https://pyfilesystem2.readthedocs.io/en/latest/openers.html>`__ to open up a filesystem:\n\n.. code-block:: python\n\n    from fs import open_fs\n    gcsfs = open_fs(\"gs://mybucket/root_path?project=test&api_endpoint=http%3A//localhost%3A8888&strict=False\")\n\n\nSupported query parameters are:\n\n- `project` (str): Google Cloud project to use\n- `api_endpoint` (str): URL-encoded endpoint that will be passed to the GCS client's `client_options <https://googleapis.dev/python/google-api-core/latest/client_options.html#google.api_core.client_options.ClientOptions>`__\n- `strict` (\"True\" or \"False\"): Whether GCSFS will be opened in strict mode\n\n\nYou can use GCSFS like your local filesystem:\n\n.. code-block:: python\n\n    >>> from fs_gcsfs import GCSFS\n    >>> gcsfs = GCSFS(bucket_name=\"mybucket\")\n    >>> gcsfs.tree()\n    \u251c\u2500\u2500 foo\n    \u2502   \u251c\u2500\u2500 bar\n    \u2502   \u2502   \u251c\u2500\u2500 file1.txt\n    \u2502   \u2502   \u2514\u2500\u2500 file2.csv\n    \u2502   \u2514\u2500\u2500 baz\n    \u2502       \u2514\u2500\u2500 file3.txt\n    \u2514\u2500\u2500 file4.json\n    >>> gcsfs.listdir(\"foo\")\n    [\"bar\", \"baz\"]\n    >>> gcsfs.isdir(\"foo/bar\")\n    True\n\n\nUploading a file is as easy as:\n\n.. code-block:: python\n\n    from fs_gcsfs import GCSFS\n    gcsfs = GCSFS(bucket_name=\"mybucket\")\n    with open(\"local/path/image.jpg\", \"rb\") as local_file:\n        with gcsfs.open(\"path/on/bucket/image.jpg\", \"wb\") as gcs_file:\n            gcs_file.write(local_file.read())\n\n\nYou can even sync an entire bucket on your local filesystem by using PyFilesystem's utility methods:\n\n.. code-block:: python\n\n    from fs_gcsfs import GCSFS\n    from fs.osfs import OSFS\n    from fs.copy import copy_fs\n\n    gcsfs = GCSFS(bucket_name=\"mybucket\")\n    local_fs = OSFS(\"local/path\")\n\n    copy_fs(gcsfs, local_fs)\n\n\nFor exploring all the possibilities of GCSFS and other filesystems implementing the PyFilesystem interface, we recommend visiting the official\n`PyFilesystem Docs <https://pyfilesystem2.readthedocs.io/en/latest/index.html>`__!\n\n\nDevelopment\n-----------\n\nTo develop on this project make sure you have `pipenv <https://pipenv.readthedocs.io/en/latest/>`__ installed\nand run the following from the root directory of the project::\n\n    $ pipenv install --dev --three\n\nThis will create a virtualenv with all packages and dev-packages installed.\n\n\nTests\n-----\nAll CI tests run against an actual GCS bucket provided by `Othoz <http://othoz.com/>`__. In order to run the tests against your own bucket,\nmake sure to set up a `Service Account <https://cloud.google.com/iam/docs/service-accounts>`__ with all necessary permissions:\n\n- storage.buckets.get\n- storage.objects.get\n- storage.objects.list\n- storage.objects.create\n- storage.objects.update\n- storage.objects.delete\n\nExpose your bucket name as an environment variable ``$TEST_BUCKET`` and run the tests via::\n\n    $ pipenv run pytest\n\nNote that the tests mostly wait for I/O, therefore it makes sense to highly parallelize them with `xdist <https://github.com/pytest-dev/pytest-xdist>`__.\n\n\nCredits\n-------\n\nCredits go to `S3FS <https://github.com/PyFilesystem/s3fs>`__ which was the main source of inspiration and shares a lot of code with GCSFS.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Othoz/gcsfs", "keywords": "pyfilesystem,filesystem,google,gcs,google cloud storage", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fs-gcsfs", "package_url": "https://pypi.org/project/fs-gcsfs/", "platform": "", "project_url": "https://pypi.org/project/fs-gcsfs/", "project_urls": {"Bug Tracker": "https://github.com/Othoz/gcsfs/issues", "Documentation": "http://fs-gcsfs.readthedocs.io/en/latest/", "Homepage": "https://github.com/Othoz/gcsfs"}, "release_url": "https://pypi.org/project/fs-gcsfs/1.2.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A PyFilesystem interface to Google Cloud Storage", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python filesystem abstraction of Google Cloud Storage (GCS) implemented as a <a href=\"https://github.com/PyFilesystem/pyfilesystem2\" rel=\"nofollow\">PyFilesystem2</a> extension.</p>\n<a href=\"https://pypi.org/project/fs-gcsfs/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/fs-gcsfs.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96a48db7eabd0646204830c0172af43eb82547ae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f66732d67637366732e737667\"></a>\n<a href=\"https://pypi.org/project/fs-gcsfs/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/fs-gcsfs.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7d766a8e2cb8d241e141674ea7a8d128219c860/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f66732d67637366732e737667\"></a>\n<a href=\"https://travis-ci.org/Othoz/gcsfs\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Othoz/gcsfs.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdbbe85101bd48e4fff416c067e41d4ce4d3008d/68747470733a2f2f7472617669732d63692e6f72672f4f74686f7a2f67637366732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://fs-gcsfs.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/fs-gcsfs/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1e5cc6ae599bfe6041fb8e47306644d4938c7ee/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66732d67637366732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://www.codacy.com/app/Othoz/gcsfs?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Othoz/gcsfs&amp;amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Coverage/f863cb8afe7943b5ba8c818bbae2e6d2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/807124d2b8e2f5ac0943b4f7cd9595ae989b368c/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f6638363363623861666537393433623562613863383138626261653265366432\"></a>\n<a href=\"https://www.codacy.com/app/Othoz/gcsfs?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Othoz/gcsfs&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/f863cb8afe7943b5ba8c818bbae2e6d2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a5dc0bd09a8f5f9f2c84c80b57423591e120677/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6638363363623861666537393433623562613863383138626261653265366432\"></a>\n<p>With GCSFS, you can interact with <a href=\"https://cloud.google.com/storage/\" rel=\"nofollow\">Google Cloud Storage</a> as if it was a regular filesystem.</p>\n<p>Apart from the nicer interface, this will highly decouple your code from the underlying storage mechanism: Exchanging the storage backend with an\n<a href=\"https://pyfilesystem2.readthedocs.io/en/latest/reference/memoryfs.html\" rel=\"nofollow\">in-memory filesystem</a> for testing or any other\nfilesystem like <a href=\"https://github.com/pyfilesystem/s3fs\" rel=\"nofollow\">S3FS</a> becomes as easy as replacing <tt><span class=\"pre\">gs://bucket_name</span></tt> with <tt><span class=\"pre\">mem://</span></tt> or <tt><span class=\"pre\">s3://bucket_name</span></tt>.</p>\n<p>For a full reference on all the PyFilesystem possibilities, take a look at the\n<a href=\"https://pyfilesystem2.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">PyFilesystem Docs</a>!</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<ul>\n<li><a href=\"http://fs-gcsfs.readthedocs.io/en/latest/\" rel=\"nofollow\">GCSFS Documentation</a></li>\n<li><a href=\"https://www.pyfilesystem.org\" rel=\"nofollow\">PyFilesystem Wiki</a></li>\n<li><a href=\"https://docs.pyfilesystem.org/en/latest/reference/base.html\" rel=\"nofollow\">PyFilesystem Reference</a></li>\n</ul>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install the latest GCSFS version by running:</p>\n<pre>$ pip install fs-gcsfs\n</pre>\n<p>Or in case you are using conda:</p>\n<pre>$ conda install -c conda-forge fs-gcsfs\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Instantiating a filesystem on Google Cloud Storage (for a full reference visit the\n<a href=\"http://fs-gcsfs.readthedocs.io/en/latest/index.html#reference\" rel=\"nofollow\">Documentation</a>):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs_gcsfs</span> <span class=\"kn\">import</span> <span class=\"n\">GCSFS</span>\n<span class=\"n\">gcsfs</span> <span class=\"o\">=</span> <span class=\"n\">GCSFS</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"o\">=</span><span class=\"s2\">\"mybucket\"</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively you can use a <a href=\"https://pyfilesystem2.readthedocs.io/en/latest/openers.html\" rel=\"nofollow\">FS URL</a> to open up a filesystem:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs</span> <span class=\"kn\">import</span> <span class=\"n\">open_fs</span>\n<span class=\"n\">gcsfs</span> <span class=\"o\">=</span> <span class=\"n\">open_fs</span><span class=\"p\">(</span><span class=\"s2\">\"gs://mybucket/root_path?project=test&amp;api_endpoint=http%3A//localhost%3A8888&amp;strict=False\"</span><span class=\"p\">)</span>\n</pre>\n<p>Supported query parameters are:</p>\n<ul>\n<li><cite>project</cite> (str): Google Cloud project to use</li>\n<li><cite>api_endpoint</cite> (str): URL-encoded endpoint that will be passed to the GCS client\u2019s <a href=\"https://googleapis.dev/python/google-api-core/latest/client_options.html#google.api_core.client_options.ClientOptions\" rel=\"nofollow\">client_options</a></li>\n<li><cite>strict</cite> (\u201cTrue\u201d or \u201cFalse\u201d): Whether GCSFS will be opened in strict mode</li>\n</ul>\n<p>You can use GCSFS like your local filesystem:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">fs_gcsfs</span> <span class=\"kn\">import</span> <span class=\"n\">GCSFS</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gcsfs</span> <span class=\"o\">=</span> <span class=\"n\">GCSFS</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"o\">=</span><span class=\"s2\">\"mybucket\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gcsfs</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"p\">()</span>\n<span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">foo</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">bar</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u2502</span>   <span class=\"err\">\u251c\u2500\u2500</span> <span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u2502</span>   <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">file2</span><span class=\"o\">.</span><span class=\"n\">csv</span>\n<span class=\"err\">\u2502</span>   <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">baz</span>\n<span class=\"err\">\u2502</span>       <span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">file3</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n<span class=\"err\">\u2514\u2500\u2500</span> <span class=\"n\">file4</span><span class=\"o\">.</span><span class=\"n\">json</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gcsfs</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s2\">\"bar\"</span><span class=\"p\">,</span> <span class=\"s2\">\"baz\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gcsfs</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"s2\">\"foo/bar\"</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Uploading a file is as easy as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs_gcsfs</span> <span class=\"kn\">import</span> <span class=\"n\">GCSFS</span>\n<span class=\"n\">gcsfs</span> <span class=\"o\">=</span> <span class=\"n\">GCSFS</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"o\">=</span><span class=\"s2\">\"mybucket\"</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"local/path/image.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">local_file</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">gcsfs</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"path/on/bucket/image.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">gcs_file</span><span class=\"p\">:</span>\n        <span class=\"n\">gcs_file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">local_file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n<p>You can even sync an entire bucket on your local filesystem by using PyFilesystem\u2019s utility methods:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs_gcsfs</span> <span class=\"kn\">import</span> <span class=\"n\">GCSFS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fs.osfs</span> <span class=\"kn\">import</span> <span class=\"n\">OSFS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fs.copy</span> <span class=\"kn\">import</span> <span class=\"n\">copy_fs</span>\n\n<span class=\"n\">gcsfs</span> <span class=\"o\">=</span> <span class=\"n\">GCSFS</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"o\">=</span><span class=\"s2\">\"mybucket\"</span><span class=\"p\">)</span>\n<span class=\"n\">local_fs</span> <span class=\"o\">=</span> <span class=\"n\">OSFS</span><span class=\"p\">(</span><span class=\"s2\">\"local/path\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">copy_fs</span><span class=\"p\">(</span><span class=\"n\">gcsfs</span><span class=\"p\">,</span> <span class=\"n\">local_fs</span><span class=\"p\">)</span>\n</pre>\n<p>For exploring all the possibilities of GCSFS and other filesystems implementing the PyFilesystem interface, we recommend visiting the official\n<a href=\"https://pyfilesystem2.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">PyFilesystem Docs</a>!</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To develop on this project make sure you have <a href=\"https://pipenv.readthedocs.io/en/latest/\" rel=\"nofollow\">pipenv</a> installed\nand run the following from the root directory of the project:</p>\n<pre>$ pipenv install --dev --three\n</pre>\n<p>This will create a virtualenv with all packages and dev-packages installed.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>All CI tests run against an actual GCS bucket provided by <a href=\"http://othoz.com/\" rel=\"nofollow\">Othoz</a>. In order to run the tests against your own bucket,\nmake sure to set up a <a href=\"https://cloud.google.com/iam/docs/service-accounts\" rel=\"nofollow\">Service Account</a> with all necessary permissions:</p>\n<ul>\n<li>storage.buckets.get</li>\n<li>storage.objects.get</li>\n<li>storage.objects.list</li>\n<li>storage.objects.create</li>\n<li>storage.objects.update</li>\n<li>storage.objects.delete</li>\n</ul>\n<p>Expose your bucket name as an environment variable <tt>$TEST_BUCKET</tt> and run the tests via:</p>\n<pre>$ pipenv run pytest\n</pre>\n<p>Note that the tests mostly wait for I/O, therefore it makes sense to highly parallelize them with <a href=\"https://github.com/pytest-dev/pytest-xdist\" rel=\"nofollow\">xdist</a>.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Credits go to <a href=\"https://github.com/PyFilesystem/s3fs\" rel=\"nofollow\">S3FS</a> which was the main source of inspiration and shares a lot of code with GCSFS.</p>\n</div>\n\n          </div>"}, "last_serial": 6991486, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "e6cbbd9971b4675ba15fd1fb20b67866", "sha256": "02d76a3488915934b025a0365ffbcdd58e4a5f18024578badb9ddbcaae17c2b7"}, "downloads": -1, "filename": "fs-gcsfs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e6cbbd9971b4675ba15fd1fb20b67866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26756, "upload_time": "2018-09-12T15:10:24", "upload_time_iso_8601": "2018-09-12T15:10:24.697068Z", "url": "https://files.pythonhosted.org/packages/1c/37/4b0fbbc0792434fe8a53e6696f0dff088cccaaa2fc04946ad5fec5b80804/fs-gcsfs-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "916ad1a73e960bea484d80aa94565901", "sha256": "0bda2ded6c4e1c1a1e970857ddfb58e123ca4923790873f53b1e446d8ec0f7bf"}, "downloads": -1, "filename": "fs-gcsfs-0.1.3.tar.gz", "has_sig": false, "md5_digest": "916ad1a73e960bea484d80aa94565901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27552, "upload_time": "2018-10-04T15:29:53", "upload_time_iso_8601": "2018-10-04T15:29:53.327838Z", "url": "https://files.pythonhosted.org/packages/5a/a8/61cfe228248f1fa0ed714038fcc2737a4b7e2954feb3eab34b23afb145b0/fs-gcsfs-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "38406f5bd53b38f09d83a27dc7aa63c5", "sha256": "100c91dd381d91f09d87e63a483d18674783e8bfbf0cb11a94bae61d112e8db6"}, "downloads": -1, "filename": "fs-gcsfs-0.1.5.tar.gz", "has_sig": false, "md5_digest": "38406f5bd53b38f09d83a27dc7aa63c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27489, "upload_time": "2018-10-10T09:41:55", "upload_time_iso_8601": "2018-10-10T09:41:55.364361Z", "url": "https://files.pythonhosted.org/packages/33/73/e8a9861af1612b4c056d4b7ee85ff5b80ae1de01fba313d2129f5b042bdc/fs-gcsfs-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "c88bb30b7e5b47a23e6b8aeac46b97fc", "sha256": "4944234b3daddc21793677c915b4756849c923d68b352c53cab2e28df18503be"}, "downloads": -1, "filename": "fs-gcsfs-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c88bb30b7e5b47a23e6b8aeac46b97fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27830, "upload_time": "2018-10-30T11:54:51", "upload_time_iso_8601": "2018-10-30T11:54:51.670244Z", "url": "https://files.pythonhosted.org/packages/13/0e/2ebc389c3af66db0c46b9b8f5c6aad21af534832cf7e4b07cd87b4061dc6/fs-gcsfs-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bfccfd0477369b9bfb43c6d8e99297c2", "sha256": "757aed13c2ac852cf743cd0f23ded47b7f41de365bd840b422ae0d5f53915b6e"}, "downloads": -1, "filename": "fs-gcsfs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bfccfd0477369b9bfb43c6d8e99297c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9543, "upload_time": "2018-11-12T09:32:51", "upload_time_iso_8601": "2018-11-12T09:32:51.726988Z", "url": "https://files.pythonhosted.org/packages/0d/13/530f43142048856e46df08e52eec484799b33c0e100719340b82dc72f100/fs-gcsfs-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "27c24d44d73e431f704cf2a1cca88103", "sha256": "12380577bb0e5f275e49c1c734c4ffa25f59cb720243255cee96899994b9cd71"}, "downloads": -1, "filename": "fs-gcsfs-0.3.0.tar.gz", "has_sig": false, "md5_digest": "27c24d44d73e431f704cf2a1cca88103", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11346, "upload_time": "2018-11-20T13:50:03", "upload_time_iso_8601": "2018-11-20T13:50:03.670593Z", "url": "https://files.pythonhosted.org/packages/e3/a8/d82b033bde4cf5462eea2238b423423a47c372559ea8eaaca18105f7afa1/fs-gcsfs-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f75d19bbf833170719093aa9417daa7a", "sha256": "ea159de35bfc3a451cf6a1a597a9aab7135d54e8e76ce3b5d3c40f6a2c99f17a"}, "downloads": -1, "filename": "fs-gcsfs-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f75d19bbf833170719093aa9417daa7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13745, "upload_time": "2018-12-14T08:38:52", "upload_time_iso_8601": "2018-12-14T08:38:52.246995Z", "url": "https://files.pythonhosted.org/packages/11/b6/0e606326bcbc77bd18cc767a7daeaaf357409f046d9b56624bbf9cb256cf/fs-gcsfs-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "0416aca4d9c366e95213891d66ab4090", "sha256": "7ffbcb06c3d46beaf4e49c5c16dcd151e7bbc979529d823cdb957d793186852b"}, "downloads": -1, "filename": "fs-gcsfs-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0416aca4d9c366e95213891d66ab4090", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13812, "upload_time": "2018-12-18T11:14:53", "upload_time_iso_8601": "2018-12-18T11:14:53.636261Z", "url": "https://files.pythonhosted.org/packages/a3/40/54fe75e6d2ff18832c48dd018fe61fe4dada175a9c350a47fe84348161b2/fs-gcsfs-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "0f9f3a101a4177d21209a69b77b660b9", "sha256": "7ede05cafe71ecc7a8ca91f88e9c64d3f7a28f0675ac4e82bccead789cd621b6"}, "downloads": -1, "filename": "fs-gcsfs-0.4.2.tar.gz", "has_sig": false, "md5_digest": "0f9f3a101a4177d21209a69b77b660b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13915, "upload_time": "2019-07-31T15:34:00", "upload_time_iso_8601": "2019-07-31T15:34:00.419773Z", "url": "https://files.pythonhosted.org/packages/66/17/1193ad2d52fe942dfebefd0589beac9207770dc5c07d51ebf64a61df21ec/fs-gcsfs-0.4.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a00f1c6ab276cf4e37312ecc5832c585", "sha256": "76a2bb392c4c9db11fd82f7b48c317762642cab768d1c5453edf4acaac3e81c8"}, "downloads": -1, "filename": "fs-gcsfs-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a00f1c6ab276cf4e37312ecc5832c585", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23252, "upload_time": "2019-08-27T08:14:11", "upload_time_iso_8601": "2019-08-27T08:14:11.282238Z", "url": "https://files.pythonhosted.org/packages/a2/7f/8b543adf7e67808331f192302e34c724dc3e962c6ef0af7aed4dd30eb619/fs-gcsfs-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4d046765fcbaf6e6e64f28fe8cd2a87c", "sha256": "9868e555ee300b81f6a031be90b8c2bfa32b40b01faa1932cd019531d6d73892"}, "downloads": -1, "filename": "fs-gcsfs-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4d046765fcbaf6e6e64f28fe8cd2a87c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24460, "upload_time": "2020-01-07T16:41:52", "upload_time_iso_8601": "2020-01-07T16:41:52.572000Z", "url": "https://files.pythonhosted.org/packages/5e/0d/92b2cac762907be7839b4b6fb3f95532d357c398c3d829ce05c0ab273c01/fs-gcsfs-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9d9308609ada9154fe37ba0404dfba65", "sha256": "1229ed7eb32669063ce284248089b625d1f08064ceec98f7ab4f0059a4993ab5"}, "downloads": -1, "filename": "fs-gcsfs-1.2.0.tar.gz", "has_sig": false, "md5_digest": "9d9308609ada9154fe37ba0404dfba65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25107, "upload_time": "2020-04-10T07:45:56", "upload_time_iso_8601": "2020-04-10T07:45:56.560939Z", "url": "https://files.pythonhosted.org/packages/4e/55/f49dc92b12c34dc64a5e665b6bb147fe84af3b1ec76bd88bb127fa23177e/fs-gcsfs-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d9308609ada9154fe37ba0404dfba65", "sha256": "1229ed7eb32669063ce284248089b625d1f08064ceec98f7ab4f0059a4993ab5"}, "downloads": -1, "filename": "fs-gcsfs-1.2.0.tar.gz", "has_sig": false, "md5_digest": "9d9308609ada9154fe37ba0404dfba65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25107, "upload_time": "2020-04-10T07:45:56", "upload_time_iso_8601": "2020-04-10T07:45:56.560939Z", "url": "https://files.pythonhosted.org/packages/4e/55/f49dc92b12c34dc64a5e665b6bb147fe84af3b1ec76bd88bb127fa23177e/fs-gcsfs-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:05 2020"}