{"info": {"author": "Manuel Calzolari", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "# sklearn-genetic\n\nGenetic feature selection module for scikit-learn\n\nGenetic algorithms mimic the process of natural selection to search for optimal values of a function.\n\n## Installation\n\n```bash\npip install sklearn-genetic\n```\n\n## Requirements\n* Python >= 2.7\n* scikit-learn >= 0.18\n* DEAP >= 1.0.2\n\n## Example\n\n```python\nfrom __future__ import print_function\nimport numpy as np\nfrom sklearn import datasets, linear_model\n\nfrom genetic_selection import GeneticSelectionCV\n\n\ndef main():\n    iris = datasets.load_iris()\n\n    # Some noisy data not correlated\n    E = np.random.uniform(0, 0.1, size=(len(iris.data), 20))\n\n    X = np.hstack((iris.data, E))\n    y = iris.target\n\n    estimator = linear_model.LogisticRegression(solver=\"liblinear\", multi_class=\"ovr\")\n\n    selector = GeneticSelectionCV(estimator,\n                                  cv=5,\n                                  verbose=1,\n                                  scoring=\"accuracy\",\n                                  max_features=5,\n                                  n_population=50,\n                                  crossover_proba=0.5,\n                                  mutation_proba=0.2,\n                                  n_generations=40,\n                                  crossover_independent_proba=0.5,\n                                  mutation_independent_proba=0.05,\n                                  tournament_size=3,\n                                  n_gen_no_change=10,\n                                  caching=True,\n                                  n_jobs=-1)\n    selector = selector.fit(X, y)\n\n    print(selector.support_)\n\n\nif __name__ == \"__main__\":\n    main()\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/manuel-calzolari/sklearn-genetic/archive/0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/manuel-calzolari/sklearn-genetic", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sklearn-genetic", "package_url": "https://pypi.org/project/sklearn-genetic/", "platform": "", "project_url": "https://pypi.org/project/sklearn-genetic/", "project_urls": {"Download": "https://github.com/manuel-calzolari/sklearn-genetic/archive/0.2.tar.gz", "Homepage": "https://github.com/manuel-calzolari/sklearn-genetic"}, "release_url": "https://pypi.org/project/sklearn-genetic/0.2/", "requires_dist": null, "requires_python": ">=2.7", "summary": "Genetic feature selection module for scikit-learn", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sklearn-genetic</h1>\n<p>Genetic feature selection module for scikit-learn</p>\n<p>Genetic algorithms mimic the process of natural selection to search for optimal values of a function.</p>\n<h2>Installation</h2>\n<pre>pip install sklearn-genetic\n</pre>\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 2.7</li>\n<li>scikit-learn &gt;= 0.18</li>\n<li>DEAP &gt;= 1.0.2</li>\n</ul>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">datasets</span><span class=\"p\">,</span> <span class=\"n\">linear_model</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">genetic_selection</span> <span class=\"kn\">import</span> <span class=\"n\">GeneticSelectionCV</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">iris</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_iris</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Some noisy data not correlated</span>\n    <span class=\"n\">E</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">),</span> <span class=\"mi\">20</span><span class=\"p\">))</span>\n\n    <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">E</span><span class=\"p\">))</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span>\n\n    <span class=\"n\">estimator</span> <span class=\"o\">=</span> <span class=\"n\">linear_model</span><span class=\"o\">.</span><span class=\"n\">LogisticRegression</span><span class=\"p\">(</span><span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s2\">\"liblinear\"</span><span class=\"p\">,</span> <span class=\"n\">multi_class</span><span class=\"o\">=</span><span class=\"s2\">\"ovr\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">selector</span> <span class=\"o\">=</span> <span class=\"n\">GeneticSelectionCV</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span>\n                                  <span class=\"n\">cv</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                  <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                                  <span class=\"n\">scoring</span><span class=\"o\">=</span><span class=\"s2\">\"accuracy\"</span><span class=\"p\">,</span>\n                                  <span class=\"n\">max_features</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                  <span class=\"n\">n_population</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n                                  <span class=\"n\">crossover_proba</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n                                  <span class=\"n\">mutation_proba</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span>\n                                  <span class=\"n\">n_generations</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n                                  <span class=\"n\">crossover_independent_proba</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n                                  <span class=\"n\">mutation_independent_proba</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span>\n                                  <span class=\"n\">tournament_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                                  <span class=\"n\">n_gen_no_change</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                                  <span class=\"n\">caching</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">n_jobs</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">selector</span> <span class=\"o\">=</span> <span class=\"n\">selector</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">selector</span><span class=\"o\">.</span><span class=\"n\">support_</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 5170212, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ced4871fd18d030e6583f86fa9fe878c", "sha256": "835d1a201cfe69dd747ac9fa290b1cbd45022784983d7041859a56c822fa4573"}, "downloads": -1, "filename": "sklearn-genetic-0.1.tar.gz", "has_sig": false, "md5_digest": "ced4871fd18d030e6583f86fa9fe878c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5251, "upload_time": "2019-02-26T20:45:06", "upload_time_iso_8601": "2019-02-26T20:45:06.841217Z", "url": "https://files.pythonhosted.org/packages/c1/8a/d5b156712da08dd436c06a3d086649d6fc9efad671cd1eaa5a7740adc825/sklearn-genetic-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7517a3cd7674988af600c7f2cc438d6e", "sha256": "6572f04dfb4c6a61578257693a3450a88949f40058ebb865a9c5f09e0018bd0a"}, "downloads": -1, "filename": "sklearn-genetic-0.2.tar.gz", "has_sig": false, "md5_digest": "7517a3cd7674988af600c7f2cc438d6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6406, "upload_time": "2019-04-21T16:29:10", "upload_time_iso_8601": "2019-04-21T16:29:10.404381Z", "url": "https://files.pythonhosted.org/packages/25/a7/495e10b18fa87d8865fb768c7dc050bbc183bfbbc212f3e612423f74cd16/sklearn-genetic-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7517a3cd7674988af600c7f2cc438d6e", "sha256": "6572f04dfb4c6a61578257693a3450a88949f40058ebb865a9c5f09e0018bd0a"}, "downloads": -1, "filename": "sklearn-genetic-0.2.tar.gz", "has_sig": false, "md5_digest": "7517a3cd7674988af600c7f2cc438d6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6406, "upload_time": "2019-04-21T16:29:10", "upload_time_iso_8601": "2019-04-21T16:29:10.404381Z", "url": "https://files.pythonhosted.org/packages/25/a7/495e10b18fa87d8865fb768c7dc050bbc183bfbbc212f3e612423f74cd16/sklearn-genetic-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:56 2020"}