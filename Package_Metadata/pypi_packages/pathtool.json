{"info": {"author": "Noah Gift", "author_email": "noah.gift@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha"], "description": "Pathtool:  An efficient Python Path API\r\n===============================================================\r\n================\r\n\r\n:Author: Noah Gift\r\n:Version: $Revision: 0.1.0 $\r\n:Copyright: This document has been placed in the public domain.\r\n\r\n\r\n\r\nSummary\r\n---------\r\n\r\nPathtool is an efficient API to walking a filesystem, and it aims to be\r\nvery simple, yet powerful.  By calling path you can pass it a path to a \r\nfilesystem, apply an optional unix style pattern filter, and an optional\r\naction callback function.\r\n\r\nThis allows you do to powerful things to a filesystem in one line of code!\r\n\r\nThere is a record dictionary that contains useful key/value combinations such\r\nas a unique_id hash, ctime, mtime, size, and extension.  These records can easily\r\nbe used to create custom action callbacks.  Additionally a future API will integrate\r\nchainable actions.\r\n  \r\n.. contents::\r\n\r\nExample Usage:\r\n------------------\r\n\r\nfrom pathtool import path\r\npath(\"/tmp\", filter=\".mp3\")\r\n\r\nThis would search the /tmp directory and return the path to all matches to the *.mp3\r\npattern.  This is because it is using a default callback action that just prints out\r\nthe path to a match.  You can create your own callback and do things like create tar\r\narchives, delete files, move files, deduplicate files, compare sizes, etc.\r\n\r\nThe API is subject to some small changes, so no promises for now.\r\n\r\nQUESTIONS:  noah dot gift at gmail.com\r\n------------------------------------------------------", "description_content_type": null, "docs_url": null, "download_url": "http://pathtool.googlecode.com/files/pathtool-0.1.0-py2.5.egg", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/pathtool/", "keywords": "path, api, filesystem", "license": "MIT", "maintainer": "Noah Gift", "maintainer_email": "noah.gift@gmail.com", "name": "pathtool", "package_url": "https://pypi.org/project/pathtool/", "platform": "All", "project_url": "https://pypi.org/project/pathtool/", "project_urls": {"Download": "http://pathtool.googlecode.com/files/pathtool-0.1.0-py2.5.egg", "Homepage": "http://code.google.com/p/pathtool/"}, "release_url": "https://pypi.org/project/pathtool/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "an efficient python path API for walking a filesystem with generators", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Pathtool:  An efficient Python Path API\n<br>===============================================================\n<br>================\n<br>\n<br>:Author: Noah Gift\n<br>:Version: $Revision: 0.1.0 $\n<br>:Copyright: This document has been placed in the public domain.\n<br>\n<br>\n<br>\n<br>Summary\n<br>---------\n<br>\n<br>Pathtool is an efficient API to walking a filesystem, and it aims to be\n<br>very simple, yet powerful.  By calling path you can pass it a path to a \n<br>filesystem, apply an optional unix style pattern filter, and an optional\n<br>action callback function.\n<br>\n<br>This allows you do to powerful things to a filesystem in one line of code!\n<br>\n<br>There is a record dictionary that contains useful key/value combinations such\n<br>as a unique_id hash, ctime, mtime, size, and extension.  These records can easily\n<br>be used to create custom action callbacks.  Additionally a future API will integrate\n<br>chainable actions.\n<br>  \n<br>.. contents::\n<br>\n<br>Example Usage:\n<br>------------------\n<br>\n<br>from pathtool import path\n<br>path(\"/tmp\", filter=\".mp3\")\n<br>\n<br>This would search the /tmp directory and return the path to all matches to the *.mp3\n<br>pattern.  This is because it is using a default callback action that just prints out\n<br>the path to a match.  You can create your own callback and do things like create tar\n<br>archives, delete files, move files, deduplicate files, compare sizes, etc.\n<br>\n<br>The API is subject to some small changes, so no promises for now.\n<br>\n<br>QUESTIONS:  noah dot gift at gmail.com\n<br>------------------------------------------------------\n          </div>"}, "last_serial": 61705, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 02:57:51 2020"}