{"info": {"author": "David Beath", "author_email": "davidgbeath@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Feedsearch\n==========\n.. image:: https://img.shields.io/pypi/v/feedsearch.svg\n    :target: https://pypi.python.org/pypi/feedsearch\n\n.. image:: https://img.shields.io/pypi/l/feedsearch.svg\n    :target: https://pypi.python.org/pypi/feedsearch\n\n.. image:: https://img.shields.io/pypi/pyversions/feedsearch.svg\n    :target: https://pypi.python.org/pypi/feedsearch\n\n.. image:: https://pepy.tech/badge/feedsearch\n    :target: https://pepy.tech/project/feedsearch\n\nFeedsearch is a Python library for searching websites for RSS, Atom, and JSON feeds.\n\nIt was originally based on\n`Feedfinder2 <https://github.com/dfm/feedfinder2>`_ written by\n`Dan Foreman-Mackey <http://dfm.io/>`_, which in turn is based on\n`feedfinder <http://www.aaronsw.com/2002/feedfinder/>`_ - originally written by\n`Mark Pilgrim <http://en.wikipedia.org/wiki/Mark_Pilgrim_(software_developer)>`_\nand subsequently maintained by\n`Aaron Swartz <http://en.wikipedia.org/wiki/Aaron_Swartz>`_ until his untimely death.\n\nFeedsearch now differs a lot with Feedfinder2, in that Feedsearch supports JSON feeds, allows for \noptional fetching of Feed and Site metadata, and optionally searches the content of internal linked pages\nand default CMS feed locations.\n\n**Please Note:** Development of this library is no longer ongoing except in the case of fixing reported bugs.\nFurther development of Feedsearch functionality has now moved to\n`Feedsearch Crawler <https://github.com/DBeath/feedsearch-crawler>`_.\n\nUsage\n-----\n\nFeedsearch is called with the single function ``search``:\n\n.. code-block:: python\n\n    >>> from feedsearch import search\n    >>> feeds = search('xkcd.com')\n    >>> feeds\n    [FeedInfo('https://xkcd.com/atom.xml'), FeedInfo('https://xkcd.com/rss.xml')]\n    >>> feeds[0].url\n    'http://xkcd.com/atom.xml'\n\nTo get Feed and Site metadata:\n\n.. code-block:: python\n\n    >>> feeds = search('propublica.org', info=True)\n    >>> feeds\n    [FeedInfo('http://feeds.propublica.org/propublica/main')]\n    >>> pprint(vars(feeds[0]))\n    {'bozo': 0,\n     'content_type': 'text/xml; charset=UTF-8',\n     'description': 'Latest Articles and Investigations from ProPublica, an '\n                    'independent, non-profit newsroom that produces investigative '\n                    'journalism in the public interest.',\n     'favicon': 'https://assets.propublica.org/prod/v3/images/favicon.ico',\n     'favicon_data_uri': '',\n     'hubs': ['http://feedpress.superfeedr.com/'],\n     'is_push': True,\n     'score': 4,\n     'self_url': 'http://feeds.propublica.org/propublica/main',\n     'site_name': 'ProPublica',\n     'site_url': 'https://www.propublica.org/',\n     'title': 'Articles and Investigations - ProPublica',\n     'url': 'http://feeds.propublica.org/propublica/main',\n     'version': 'rss20'}\n\nSearch will always return a list of *FeedInfo* objects, each of which will always have a *url* property.\nFeeds are sorted by the *score* value from highest to lowest, with a higher score theoretically indicating\na more relevant feed compared to the original URL provided.\n\nIf you only want the raw urls, then use a list comprehension on the result, or set the\n*as_urls* parameter to *True*:\n\n.. code-block:: python\n\n    >>> feeds = search('http://jsonfeed.org')\n    >>> feeds\n    [FeedInfo('https://jsonfeed.org/xml/rss.xml'), FeedInfo('https://jsonfeed.org/feed.json')]\n    >>> urls = [f.url for f in feeds]\n    >>> urls\n    ['https://jsonfeed.org/xml/rss.xml', 'https://jsonfeed.org/feed.json']\n\n    >>> feeds = search('http://jsonfeed.org', as_urls=True)\n    >>> feeds\n    >>> ['https://jsonfeed.org/xml/rss.xml', 'https://jsonfeed.org/feed.json']\n\nIn addition to the URL, the ``search`` function takes the following optional keyword arguments:\n\n- **info**: *bool*: Get Feed and Site Metadata. Defaults False.\n- **check_all**: *bool*: Check all internally linked pages of <a> tags for feeds, and default CMS feeds.\n  Only checks one level down. Defaults False. May be very slow.\n- **user_agent**: *str*: User-Agent Header string. Defaults to Package name.\n- **timeout**: *float* or *tuple(float, float)*: Timeout for each request in the search (not a timeout for the ``search``\n  method itself). Defaults to 3 seconds. See\n  `Requests timeout documentation <http://docs.python-requests.org/en/master/user/advanced/#timeouts>`_ for more info.\n- **max_redirects**: *int*: Maximum number of redirects for each request. Defaults to 30.\n- **parser**: *str*: BeautifulSoup parser for HTML parsing. Defaults to 'html.parser'.\n- **exceptions**: *bool*: If False, will gracefully handle Requests exceptions and attempt to keep searching. \n  If True, will leave Requests exceptions uncaught to be handled by the caller. Defaults False.\n- **verify**: *bool* or *str*: Verify SSL Certificates. See\n  `Requests SSL documentation <https://requests.readthedocs.io/en/master/user/advanced/#ssl-cert-verification>`_ for more info.\n- **favicon_data_uri**: *bool*: Convert Favicon to Data Uri. Defaults False.\n- **as_urls**: *bool*: Return found Feeds as a list of URL strings instead of FeedInfo objects.\n- **cms**: *bool*: Check default CMS feed location if no feeds already found and site is using a known CMS. Defaults True.\n- **discovery_only**: *bool*: Only search for RSS discovery tags (e.g. <link rel=\"alternate\" href=...>). Defaults False.\n  Overridden by **check_all** if **check_all** is True.\n\nFeedInfo Values\n---------------\n\nFeedInfo objects may have the following values if *info* is *True*:\n\n- **bozo**: *int*: Set to 1 when feed data is not well formed or may not be a feed. Defaults 0.\n- **content_type**: *str*: Content-Type value of the returned feed.\n- **description**: *str*: Feed description.\n- **favicon**: *str*: Url of site Favicon.\n- **favicon_data_uri**: *str*: Data Uri of site Favicon.\n- **hubs**: *List[str]*: List of `Websub <https://en.wikipedia.org/wiki/WebSub>`_ hubs of feed if available.\n- **is_push**: *bool*: True if feed contains valid Websub data.\n- **score**: *int*: Computed relevance of feed url value to provided URL. May be safely ignored.\n- **self_url**: *str*: *ref=\"self\"* value returned from feed links. In some cases may be different from feed url.\n- **site_name**: *str*: Name of feed's website.\n- **site_url**: *str*: URL of feed's website.\n- **title**: *str*: Feed Title.\n- **url**: *str*: URL location of feed.\n- **version**: *str*: Feed version `XML values <https://pythonhosted.org/feedparser/version-detection.html>`_,\n  or `JSON feed <https://jsonfeed.org/version/1>`_.\n\n\nSearch Order\n------------\n\nFeedsearch searches for feeds in the following order:\n\n1. If the URL points directly to a feed, then return that feed.\n2. If **discovery_only** is True, search only <link rel=\"alternate\"> tags. Return unless **check_all** is True.\n3. Search all <link> tags. Return if feeds are found and **check_all** is False.\n4. If **cms** or **check_all** is True, search for default CMS feeds if the site is using a known CMS. Return if feeds are found and **check_all** is False.\n5. Search all <a> tags. Return if **check_all** is False.\n6. This point will only be reached if **check_all** is True.\n7. Fetch the content of all internally pointing <a> tags whose URL paths indicate they may contain feeds. (e.g. /feed /rss /atom). All <link> tags and <a> tags of the content are searched, although not recusively. Return if feeds are found. This step may be very slow, so be sure whether you want **check_all** enabled.\n8. If step 7 failed to find feeds, then as a last resort we make a few guesses for potential feed urls.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DBeath/feedsearch", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "feedsearch", "package_url": "https://pypi.org/project/feedsearch/", "platform": "", "project_url": "https://pypi.org/project/feedsearch/", "project_urls": {"Homepage": "https://github.com/DBeath/feedsearch"}, "release_url": "https://pypi.org/project/feedsearch/1.0.12/", "requires_dist": ["requests", "beautifulsoup4", "feedparser", "click", "Werkzeug"], "requires_python": ">=3", "summary": "Search sites for RSS, Atom, and JSON feeds", "version": "1.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/feedsearch\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/feedsearch.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a75c400b1bc97bc3e77e20f1e946a3232c7c75ef/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666565647365617263682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/feedsearch\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/feedsearch.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69c4a41e13107547b97dbacb0cdced0c4151c939/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f666565647365617263682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/feedsearch\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/feedsearch.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1895db93bfc8fcfbe1b725ea7c87a863565fa4a5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666565647365617263682e737667\"></a>\n<a href=\"https://pepy.tech/project/feedsearch\" rel=\"nofollow\"><img alt=\"https://pepy.tech/badge/feedsearch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a14155b48bbb476235de5dd3e47317e1eb1b6c18/68747470733a2f2f706570792e746563682f62616467652f66656564736561726368\"></a>\n<p>Feedsearch is a Python library for searching websites for RSS, Atom, and JSON feeds.</p>\n<p>It was originally based on\n<a href=\"https://github.com/dfm/feedfinder2\" rel=\"nofollow\">Feedfinder2</a> written by\n<a href=\"http://dfm.io/\" rel=\"nofollow\">Dan Foreman-Mackey</a>, which in turn is based on\n<a href=\"http://www.aaronsw.com/2002/feedfinder/\" rel=\"nofollow\">feedfinder</a> - originally written by\n<a href=\"http://en.wikipedia.org/wiki/Mark_Pilgrim_(software_developer)\" rel=\"nofollow\">Mark Pilgrim</a>\nand subsequently maintained by\n<a href=\"http://en.wikipedia.org/wiki/Aaron_Swartz\" rel=\"nofollow\">Aaron Swartz</a> until his untimely death.</p>\n<p>Feedsearch now differs a lot with Feedfinder2, in that Feedsearch supports JSON feeds, allows for\noptional fetching of Feed and Site metadata, and optionally searches the content of internal linked pages\nand default CMS feed locations.</p>\n<p><strong>Please Note:</strong> Development of this library is no longer ongoing except in the case of fixing reported bugs.\nFurther development of Feedsearch functionality has now moved to\n<a href=\"https://github.com/DBeath/feedsearch-crawler\" rel=\"nofollow\">Feedsearch Crawler</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Feedsearch is called with the single function <tt>search</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">feedsearch</span> <span class=\"kn\">import</span> <span class=\"n\">search</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'xkcd.com'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span>\n<span class=\"p\">[</span><span class=\"n\">FeedInfo</span><span class=\"p\">(</span><span class=\"s1\">'https://xkcd.com/atom.xml'</span><span class=\"p\">),</span> <span class=\"n\">FeedInfo</span><span class=\"p\">(</span><span class=\"s1\">'https://xkcd.com/rss.xml'</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">url</span>\n<span class=\"s1\">'http://xkcd.com/atom.xml'</span>\n</pre>\n<p>To get Feed and Site metadata:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'propublica.org'</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span>\n<span class=\"p\">[</span><span class=\"n\">FeedInfo</span><span class=\"p\">(</span><span class=\"s1\">'http://feeds.propublica.org/propublica/main'</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">feeds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"p\">{</span><span class=\"s1\">'bozo'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n <span class=\"s1\">'content_type'</span><span class=\"p\">:</span> <span class=\"s1\">'text/xml; charset=UTF-8'</span><span class=\"p\">,</span>\n <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Latest Articles and Investigations from ProPublica, an '</span>\n                <span class=\"s1\">'independent, non-profit newsroom that produces investigative '</span>\n                <span class=\"s1\">'journalism in the public interest.'</span><span class=\"p\">,</span>\n <span class=\"s1\">'favicon'</span><span class=\"p\">:</span> <span class=\"s1\">'https://assets.propublica.org/prod/v3/images/favicon.ico'</span><span class=\"p\">,</span>\n <span class=\"s1\">'favicon_data_uri'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'hubs'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'http://feedpress.superfeedr.com/'</span><span class=\"p\">],</span>\n <span class=\"s1\">'is_push'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'score'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n <span class=\"s1\">'self_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://feeds.propublica.org/propublica/main'</span><span class=\"p\">,</span>\n <span class=\"s1\">'site_name'</span><span class=\"p\">:</span> <span class=\"s1\">'ProPublica'</span><span class=\"p\">,</span>\n <span class=\"s1\">'site_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://www.propublica.org/'</span><span class=\"p\">,</span>\n <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Articles and Investigations - ProPublica'</span><span class=\"p\">,</span>\n <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://feeds.propublica.org/propublica/main'</span><span class=\"p\">,</span>\n <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"s1\">'rss20'</span><span class=\"p\">}</span>\n</pre>\n<p>Search will always return a list of <em>FeedInfo</em> objects, each of which will always have a <em>url</em> property.\nFeeds are sorted by the <em>score</em> value from highest to lowest, with a higher score theoretically indicating\na more relevant feed compared to the original URL provided.</p>\n<p>If you only want the raw urls, then use a list comprehension on the result, or set the\n<em>as_urls</em> parameter to <em>True</em>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'http://jsonfeed.org'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span>\n<span class=\"p\">[</span><span class=\"n\">FeedInfo</span><span class=\"p\">(</span><span class=\"s1\">'https://jsonfeed.org/xml/rss.xml'</span><span class=\"p\">),</span> <span class=\"n\">FeedInfo</span><span class=\"p\">(</span><span class=\"s1\">'https://jsonfeed.org/feed.json'</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">feeds</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">urls</span>\n<span class=\"p\">[</span><span class=\"s1\">'https://jsonfeed.org/xml/rss.xml'</span><span class=\"p\">,</span> <span class=\"s1\">'https://jsonfeed.org/feed.json'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'http://jsonfeed.org'</span><span class=\"p\">,</span> <span class=\"n\">as_urls</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">feeds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'https://jsonfeed.org/xml/rss.xml'</span><span class=\"p\">,</span> <span class=\"s1\">'https://jsonfeed.org/feed.json'</span><span class=\"p\">]</span>\n</pre>\n<p>In addition to the URL, the <tt>search</tt> function takes the following optional keyword arguments:</p>\n<ul>\n<li><strong>info</strong>: <em>bool</em>: Get Feed and Site Metadata. Defaults False.</li>\n<li><strong>check_all</strong>: <em>bool</em>: Check all internally linked pages of &lt;a&gt; tags for feeds, and default CMS feeds.\nOnly checks one level down. Defaults False. May be very slow.</li>\n<li><strong>user_agent</strong>: <em>str</em>: User-Agent Header string. Defaults to Package name.</li>\n<li><strong>timeout</strong>: <em>float</em> or <em>tuple(float, float)</em>: Timeout for each request in the search (not a timeout for the <tt>search</tt>\nmethod itself). Defaults to 3 seconds. See\n<a href=\"http://docs.python-requests.org/en/master/user/advanced/#timeouts\" rel=\"nofollow\">Requests timeout documentation</a> for more info.</li>\n<li><strong>max_redirects</strong>: <em>int</em>: Maximum number of redirects for each request. Defaults to 30.</li>\n<li><strong>parser</strong>: <em>str</em>: BeautifulSoup parser for HTML parsing. Defaults to \u2018html.parser\u2019.</li>\n<li><strong>exceptions</strong>: <em>bool</em>: If False, will gracefully handle Requests exceptions and attempt to keep searching.\nIf True, will leave Requests exceptions uncaught to be handled by the caller. Defaults False.</li>\n<li><strong>verify</strong>: <em>bool</em> or <em>str</em>: Verify SSL Certificates. See\n<a href=\"https://requests.readthedocs.io/en/master/user/advanced/#ssl-cert-verification\" rel=\"nofollow\">Requests SSL documentation</a> for more info.</li>\n<li><strong>favicon_data_uri</strong>: <em>bool</em>: Convert Favicon to Data Uri. Defaults False.</li>\n<li><strong>as_urls</strong>: <em>bool</em>: Return found Feeds as a list of URL strings instead of FeedInfo objects.</li>\n<li><strong>cms</strong>: <em>bool</em>: Check default CMS feed location if no feeds already found and site is using a known CMS. Defaults True.</li>\n<li><strong>discovery_only</strong>: <em>bool</em>: Only search for RSS discovery tags (e.g. &lt;link rel=\u201dalternate\u201d href=\u2026&gt;). Defaults False.\nOverridden by <strong>check_all</strong> if <strong>check_all</strong> is True.</li>\n</ul>\n</div>\n<div id=\"feedinfo-values\">\n<h2>FeedInfo Values</h2>\n<p>FeedInfo objects may have the following values if <em>info</em> is <em>True</em>:</p>\n<ul>\n<li><strong>bozo</strong>: <em>int</em>: Set to 1 when feed data is not well formed or may not be a feed. Defaults 0.</li>\n<li><strong>content_type</strong>: <em>str</em>: Content-Type value of the returned feed.</li>\n<li><strong>description</strong>: <em>str</em>: Feed description.</li>\n<li><strong>favicon</strong>: <em>str</em>: Url of site Favicon.</li>\n<li><strong>favicon_data_uri</strong>: <em>str</em>: Data Uri of site Favicon.</li>\n<li><strong>hubs</strong>: <em>List[str]</em>: List of <a href=\"https://en.wikipedia.org/wiki/WebSub\" rel=\"nofollow\">Websub</a> hubs of feed if available.</li>\n<li><strong>is_push</strong>: <em>bool</em>: True if feed contains valid Websub data.</li>\n<li><strong>score</strong>: <em>int</em>: Computed relevance of feed url value to provided URL. May be safely ignored.</li>\n<li><strong>self_url</strong>: <em>str</em>: <em>ref=\u201dself\u201d</em> value returned from feed links. In some cases may be different from feed url.</li>\n<li><strong>site_name</strong>: <em>str</em>: Name of feed\u2019s website.</li>\n<li><strong>site_url</strong>: <em>str</em>: URL of feed\u2019s website.</li>\n<li><strong>title</strong>: <em>str</em>: Feed Title.</li>\n<li><strong>url</strong>: <em>str</em>: URL location of feed.</li>\n<li><strong>version</strong>: <em>str</em>: Feed version <a href=\"https://pythonhosted.org/feedparser/version-detection.html\" rel=\"nofollow\">XML values</a>,\nor <a href=\"https://jsonfeed.org/version/1\" rel=\"nofollow\">JSON feed</a>.</li>\n</ul>\n</div>\n<div id=\"search-order\">\n<h2>Search Order</h2>\n<p>Feedsearch searches for feeds in the following order:</p>\n<ol>\n<li>If the URL points directly to a feed, then return that feed.</li>\n<li>If <strong>discovery_only</strong> is True, search only &lt;link rel=\u201dalternate\u201d&gt; tags. Return unless <strong>check_all</strong> is True.</li>\n<li>Search all &lt;link&gt; tags. Return if feeds are found and <strong>check_all</strong> is False.</li>\n<li>If <strong>cms</strong> or <strong>check_all</strong> is True, search for default CMS feeds if the site is using a known CMS. Return if feeds are found and <strong>check_all</strong> is False.</li>\n<li>Search all &lt;a&gt; tags. Return if <strong>check_all</strong> is False.</li>\n<li>This point will only be reached if <strong>check_all</strong> is True.</li>\n<li>Fetch the content of all internally pointing &lt;a&gt; tags whose URL paths indicate they may contain feeds. (e.g. /feed /rss /atom). All &lt;link&gt; tags and &lt;a&gt; tags of the content are searched, although not recusively. Return if feeds are found. This step may be very slow, so be sure whether you want <strong>check_all</strong> enabled.</li>\n<li>If step 7 failed to find feeds, then as a last resort we make a few guesses for potential feed urls.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 6617503, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ca9a939336140565b85a53f029d79e2a", "sha256": "6ec9fb7860c5df8c81bd33857069ea26efbeef5b5cde05e8ed6a80a5e2566c82"}, "downloads": -1, "filename": "feedsearch-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca9a939336140565b85a53f029d79e2a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 11770, "upload_time": "2017-11-29T17:04:56", "upload_time_iso_8601": "2017-11-29T17:04:56.412279Z", "url": "https://files.pythonhosted.org/packages/15/a0/aae7a92dc2889758097aadd078fb7f4bcfe3e75d3916fb17f916bb2e7b83/feedsearch-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5153def4b59d5129fe9000530641b84b", "sha256": "76636abd046d1f8036068e2ae2dff607f9331f202ec74b29a75858e0058c273e"}, "downloads": -1, "filename": "feedsearch-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5153def4b59d5129fe9000530641b84b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8159, "upload_time": "2017-11-29T17:04:55", "upload_time_iso_8601": "2017-11-29T17:04:55.006436Z", "url": "https://files.pythonhosted.org/packages/97/94/229fc2867136b46678188c97c09b3e82d8f6cf7a36273f4362887ce18e04/feedsearch-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "7428276cd5c5fa1b6404b2dca2999d67", "sha256": "16139220db7e31a9b5fc2edf478ed3f4cd19d9b91595b06c143ddba9a33c4cb2"}, "downloads": -1, "filename": "feedsearch-0.0.10-py36.py37-none-any.whl", "has_sig": false, "md5_digest": "7428276cd5c5fa1b6404b2dca2999d67", "packagetype": "bdist_wheel", "python_version": "py36.py37", "requires_python": ">=3", "size": 18588, "upload_time": "2018-10-14T11:43:33", "upload_time_iso_8601": "2018-10-14T11:43:33.897016Z", "url": "https://files.pythonhosted.org/packages/52/d7/2200b2dc4bdf03d97cc7fe3647bac801dd1596f2ea9d8814a5c00c7c07b8/feedsearch-0.0.10-py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aea7a3c684d1733bb6d8291d3327d625", "sha256": "7538568cd8e89afd5ac41506ce9b9abe443b2d0c6181b4901239b7a240937cc9"}, "downloads": -1, "filename": "feedsearch-0.0.10.tar.gz", "has_sig": false, "md5_digest": "aea7a3c684d1733bb6d8291d3327d625", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14908, "upload_time": "2018-10-14T11:43:35", "upload_time_iso_8601": "2018-10-14T11:43:35.805261Z", "url": "https://files.pythonhosted.org/packages/ce/c5/3534dbc6bebaeab395e89c2b0facc7d003ce8ce213caf21b0314cb8c1fe9/feedsearch-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "87a545507671de9159766596d0366305", "sha256": "a3d4a702efc9d2a78942249c0e4184e3ad362def2119985656dd51e5478eed7a"}, "downloads": -1, "filename": "feedsearch-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "87a545507671de9159766596d0366305", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 15349, "upload_time": "2017-12-03T21:46:12", "upload_time_iso_8601": "2017-12-03T21:46:12.909691Z", "url": "https://files.pythonhosted.org/packages/9b/4d/496e706035436bc69685c62fbdc929697984cf74d375715e027026d9ee33/feedsearch-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b64e17c959b7624115108fc46714689c", "sha256": "24b34790abdab309d4259817d9cdf237e0002c660a49b3a8d8d3ef4f961a0a4c"}, "downloads": -1, "filename": "feedsearch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b64e17c959b7624115108fc46714689c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12257, "upload_time": "2017-12-03T21:46:14", "upload_time_iso_8601": "2017-12-03T21:46:14.384114Z", "url": "https://files.pythonhosted.org/packages/0a/2e/823bfbe7773b9d3b2faa542307b34c2f53cb64389be9f0d1f7e46d643d1b/feedsearch-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3d177e66113c89bcde9175268bc06b3d", "sha256": "af001a58b9854414e06b39e5f5cc712e7f1408216959e215f24fe72e210aaa20"}, "downloads": -1, "filename": "feedsearch-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3d177e66113c89bcde9175268bc06b3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 15681, "upload_time": "2017-12-04T13:37:31", "upload_time_iso_8601": "2017-12-04T13:37:31.373940Z", "url": "https://files.pythonhosted.org/packages/bb/bc/694f6b69ff9dd27a2b09ed2a956ec96da792c1a3202fb9a2a1dedb283183/feedsearch-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcd765d9d9b3931016dd67561350863d", "sha256": "b59c8fdd2ff07401d003e58177fefddc9ae4ab616ca49006bafa89097f8ab223"}, "downloads": -1, "filename": "feedsearch-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fcd765d9d9b3931016dd67561350863d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10762, "upload_time": "2017-12-04T13:37:33", "upload_time_iso_8601": "2017-12-04T13:37:33.972491Z", "url": "https://files.pythonhosted.org/packages/32/2b/8dacc6afcf7bc30490ad05338051cb6029e25916ac7ad55d8f3ec9ff87e1/feedsearch-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "88f3d0f7d233f99e440c5564dcb0ac75", "sha256": "24c4b07a98a8b32b63ae40b0ce9645954d2463252799e14abfa3e71f4485e45a"}, "downloads": -1, "filename": "feedsearch-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "88f3d0f7d233f99e440c5564dcb0ac75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 15751, "upload_time": "2017-12-10T09:58:49", "upload_time_iso_8601": "2017-12-10T09:58:49.802599Z", "url": "https://files.pythonhosted.org/packages/6d/37/566d7b5dd112eb0e5b2352d4d46bb9ea930ac2628865c4c164e54d4348bd/feedsearch-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59f07421a77a7a5bd2e37e8b99df5cb3", "sha256": "2a3d369523ae051508443088da7f6908b53edf9c7196b2798f25c481d320dab7"}, "downloads": -1, "filename": "feedsearch-0.0.4.tar.gz", "has_sig": false, "md5_digest": "59f07421a77a7a5bd2e37e8b99df5cb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12577, "upload_time": "2017-12-10T09:58:53", "upload_time_iso_8601": "2017-12-10T09:58:53.934503Z", "url": "https://files.pythonhosted.org/packages/6e/b0/d1a3bd8790fc59a5ae660bcbe80ae167aa5e22df819299be86b15776f74e/feedsearch-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "907a184acbc0208e446c681d56bbe996", "sha256": "3a5d3db89e48a3685e7a256a2c8c83d2cf6ba1644b80d18881d4368da13237b1"}, "downloads": -1, "filename": "feedsearch-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "907a184acbc0208e446c681d56bbe996", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 15750, "upload_time": "2017-12-11T21:36:47", "upload_time_iso_8601": "2017-12-11T21:36:47.473713Z", "url": "https://files.pythonhosted.org/packages/37/a6/b31c0255e729edd25c75f98ddc313402bfec5e75ee1eade347602bc5d526/feedsearch-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9307cda06695261cb625f8a12bf003e9", "sha256": "8b4e03e9b76f81efd12b8f0c6b10bb496a175b51a1dab14a620b80155e5fa5a6"}, "downloads": -1, "filename": "feedsearch-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9307cda06695261cb625f8a12bf003e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12577, "upload_time": "2017-12-11T21:36:50", "upload_time_iso_8601": "2017-12-11T21:36:50.710987Z", "url": "https://files.pythonhosted.org/packages/6d/2d/d3faebf53d3aad6ac09dfaf8624547d3fa4ee64d9d95f340558a54a7e1a1/feedsearch-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5b6d792130d57ed27ee4522e128a4798", "sha256": "1753cbce80a5d48264b8555ca3bbbb738c3473be7fccc44f7f36cc45a26140b0"}, "downloads": -1, "filename": "feedsearch-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5b6d792130d57ed27ee4522e128a4798", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 16663, "upload_time": "2018-09-26T09:28:04", "upload_time_iso_8601": "2018-09-26T09:28:04.643076Z", "url": "https://files.pythonhosted.org/packages/32/b5/1b26b685742cd95cdeae8f113866bb13f47b2626e146bcf26bcec3a6774e/feedsearch-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40c1e3966fb9b3be8b8d71a5536644fe", "sha256": "fb070c3a7d278a6e877653ba9aecb03a1f9b9c56fac2d773286f5ef3201c0aa9"}, "downloads": -1, "filename": "feedsearch-0.0.6.tar.gz", "has_sig": false, "md5_digest": "40c1e3966fb9b3be8b8d71a5536644fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11616, "upload_time": "2018-09-26T09:28:06", "upload_time_iso_8601": "2018-09-26T09:28:06.108300Z", "url": "https://files.pythonhosted.org/packages/ed/70/3af71b8b815081fd492c3e9828e6884747acb1caf486d58d5a7b6697ed6d/feedsearch-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ba5d7e298307d7b18c2cb2c03fd513ce", "sha256": "99d8f0b726c7fa7207d8235fd2d362d08802dc59d3d5d3d2fa966fd871b8d8a1"}, "downloads": -1, "filename": "feedsearch-0.0.7-py36.py37-none-any.whl", "has_sig": false, "md5_digest": "ba5d7e298307d7b18c2cb2c03fd513ce", "packagetype": "bdist_wheel", "python_version": "py36.py37", "requires_python": ">=3", "size": 16375, "upload_time": "2018-10-09T12:22:20", "upload_time_iso_8601": "2018-10-09T12:22:20.433837Z", "url": "https://files.pythonhosted.org/packages/d9/96/1f14bb4eb41eadfab32b06e774eff24001141d6c0735eb1e13c2e179c1e2/feedsearch-0.0.7-py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8dd65d221fad37edea5d1ea9e0eccb5", "sha256": "32b0ae13042e8c525095aba3252e4a04976c3f94983e8aea87ec66df8fe1c734"}, "downloads": -1, "filename": "feedsearch-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c8dd65d221fad37edea5d1ea9e0eccb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12878, "upload_time": "2018-10-09T12:22:22", "upload_time_iso_8601": "2018-10-09T12:22:22.385426Z", "url": "https://files.pythonhosted.org/packages/2d/75/d6f1a57db6074ced58ff09f8ced3f2e2e325246f95b55a6c07e1ac9e6aba/feedsearch-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5838c00fc9468d0e9fe86df827c45c25", "sha256": "936f1ee6563743bd7057d3cc28988401cf16c5fe3d90473dfab484d2d26d7275"}, "downloads": -1, "filename": "feedsearch-0.0.8-py36.py37-none-any.whl", "has_sig": false, "md5_digest": "5838c00fc9468d0e9fe86df827c45c25", "packagetype": "bdist_wheel", "python_version": "py36.py37", "requires_python": ">=3", "size": 18077, "upload_time": "2018-10-12T20:07:42", "upload_time_iso_8601": "2018-10-12T20:07:42.456091Z", "url": "https://files.pythonhosted.org/packages/92/eb/57a171908ecba45ee4837bfceada312a96dfc4313c11fa6ee08b64e73c6e/feedsearch-0.0.8-py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70c36ae476913ddb50589a54f97374c7", "sha256": "d6c5adf0525c8ce69f6e5d1b429f502b61ccaec127de08a2cb8197918b34453f"}, "downloads": -1, "filename": "feedsearch-0.0.8.tar.gz", "has_sig": false, "md5_digest": "70c36ae476913ddb50589a54f97374c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14461, "upload_time": "2018-10-12T20:07:43", "upload_time_iso_8601": "2018-10-12T20:07:43.928385Z", "url": "https://files.pythonhosted.org/packages/12/d6/bdb2d7a0c5cea391847553a629de5f96ac4bbd29a98f3cc82860204d7c0e/feedsearch-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "8421c1c82eea379a7e9cd8fd30d6f00e", "sha256": "4ffa2fc438d6f6ce56bdc425e50f77db0eae12ab11e57dc53fd0ebfdc865f3c2"}, "downloads": -1, "filename": "feedsearch-0.0.9-py36.py37-none-any.whl", "has_sig": false, "md5_digest": "8421c1c82eea379a7e9cd8fd30d6f00e", "packagetype": "bdist_wheel", "python_version": "py36.py37", "requires_python": ">=3", "size": 18178, "upload_time": "2018-10-12T22:11:20", "upload_time_iso_8601": "2018-10-12T22:11:20.464161Z", "url": "https://files.pythonhosted.org/packages/d5/80/4e0d23110013fa9d60198559074683510f2d299301e7012de31e528da111/feedsearch-0.0.9-py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4102aedebc64847e45324e3a7c935b94", "sha256": "62ca180ed58dae1baeada0867e0b001d66d7729690620ba9ff9b7c338da0b5b3"}, "downloads": -1, "filename": "feedsearch-0.0.9.tar.gz", "has_sig": false, "md5_digest": "4102aedebc64847e45324e3a7c935b94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14552, "upload_time": "2018-10-12T22:11:21", "upload_time_iso_8601": "2018-10-12T22:11:21.729124Z", "url": "https://files.pythonhosted.org/packages/b1/72/189c1fca040088ca6e0e7c7ae07de7182954b397d1c5a308d596427e86b3/feedsearch-0.0.9.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "cb3bc731ab65b70424e818fcb360e33f", "sha256": "dc9880e1ed79bd9a84c1743e1f73707a83be7dbfd498ad1cea0ae2cc531ef198"}, "downloads": -1, "filename": "feedsearch-1.0.11-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "cb3bc731ab65b70424e818fcb360e33f", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3", "size": 18670, "upload_time": "2019-07-03T13:09:38", "upload_time_iso_8601": "2019-07-03T13:09:38.434325Z", "url": "https://files.pythonhosted.org/packages/5e/39/ec854d0af0d09b8d7c621f8496040a1258551dc1e9f068d75eeff89a0083/feedsearch-1.0.11-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "025c2223d3cf84f81523b9ac6b7901c0", "sha256": "1a889613f3168f7bdb5619aefcb4079d7e53cb12396513373fa8e81dae6fbbca"}, "downloads": -1, "filename": "feedsearch-1.0.11.tar.gz", "has_sig": false, "md5_digest": "025c2223d3cf84f81523b9ac6b7901c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18313, "upload_time": "2019-07-03T13:09:40", "upload_time_iso_8601": "2019-07-03T13:09:40.087454Z", "url": "https://files.pythonhosted.org/packages/11/41/cfbabb908cfe2ad5b43311c71df9c9ce8f8f9fab92b3612e273a1963c9ac/feedsearch-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "7e9b00f09b09eca6626b6956c02caf9c", "sha256": "612c2d14d8de90f6501be40bf3463d67d04a572f37a043b4b765c96f9d597518"}, "downloads": -1, "filename": "feedsearch-1.0.12-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "7e9b00f09b09eca6626b6956c02caf9c", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3", "size": 18851, "upload_time": "2020-02-12T17:09:07", "upload_time_iso_8601": "2020-02-12T17:09:07.626541Z", "url": "https://files.pythonhosted.org/packages/81/ea/c0d9af01b48ce7f7c5675c81264ec86ff42c1d2b6ec59d8f79358a8ecb64/feedsearch-1.0.12-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaedd6e512e882cba8bd1cee176d77d6", "sha256": "b3636a0e55a2fc762739a69843cc755656d2dcd1c51014c45df03b28fe8e6df4"}, "downloads": -1, "filename": "feedsearch-1.0.12.tar.gz", "has_sig": false, "md5_digest": "aaedd6e512e882cba8bd1cee176d77d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18484, "upload_time": "2020-02-12T17:09:09", "upload_time_iso_8601": "2020-02-12T17:09:09.428588Z", "url": "https://files.pythonhosted.org/packages/da/ff/a7eb8df64ac53b0b59de4520faafa358b90b2960383e07b058b8b5318bc0/feedsearch-1.0.12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e9b00f09b09eca6626b6956c02caf9c", "sha256": "612c2d14d8de90f6501be40bf3463d67d04a572f37a043b4b765c96f9d597518"}, "downloads": -1, "filename": "feedsearch-1.0.12-py35.py36.py37-none-any.whl", "has_sig": false, "md5_digest": "7e9b00f09b09eca6626b6956c02caf9c", "packagetype": "bdist_wheel", "python_version": "py35.py36.py37", "requires_python": ">=3", "size": 18851, "upload_time": "2020-02-12T17:09:07", "upload_time_iso_8601": "2020-02-12T17:09:07.626541Z", "url": "https://files.pythonhosted.org/packages/81/ea/c0d9af01b48ce7f7c5675c81264ec86ff42c1d2b6ec59d8f79358a8ecb64/feedsearch-1.0.12-py35.py36.py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaedd6e512e882cba8bd1cee176d77d6", "sha256": "b3636a0e55a2fc762739a69843cc755656d2dcd1c51014c45df03b28fe8e6df4"}, "downloads": -1, "filename": "feedsearch-1.0.12.tar.gz", "has_sig": false, "md5_digest": "aaedd6e512e882cba8bd1cee176d77d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18484, "upload_time": "2020-02-12T17:09:09", "upload_time_iso_8601": "2020-02-12T17:09:09.428588Z", "url": "https://files.pythonhosted.org/packages/da/ff/a7eb8df64ac53b0b59de4520faafa358b90b2960383e07b058b8b5318bc0/feedsearch-1.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:59 2020"}