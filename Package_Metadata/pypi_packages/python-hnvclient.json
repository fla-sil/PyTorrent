{"info": {"author": "Cloudbase Solutions Srl", "author_email": "acoman@cloudbasesolutions.com", "bugtrack_url": null, "classifiers": ["Environment :: OpenStack", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "================\npython-hnvclient\n================\n\n.. image:: https://travis-ci.org/cloudbase/python-hnvclient.svg?branch=master\n    :target: https://travis-ci.org/cloudbase/python-hnvclient\n\nPython client for the HNV (Hyper-V Network Virtualization) REST API.\n\n\n* Free software: Apache license\n* Documentation: http://docs.openstack.org/developer/python-hnvclient\n* Source: http://git.openstack.org/cgit/openstack/python-hnvclient\n* Bugs: http://bugs.launchpad.net/python-hnvclient\n\n\nFeatures\n--------\n\nThe Python interface matches the underlying REST API and can be employed in 3rd party projects.\n\n.. code:: python\n\n    >>> from hnvclient import client\n    >>> logical_networks = client.LogicalNetworks.get()\n    >>> for logical_network in logical_networks:\n    ...     print(logical_network.resource_id)\n    ...\n    \"63606911-e053-42cf-842e-29f67c90d5c6\"\n    \"c4cd42ff-5efb-4006-ac56-479730557926\"\n    \"cd804db3-df59-4f57-8a7d-11cc3f3c4d98\"\n\n    >>> logical_network = client.LogicalNetworks.get(resource_id=\"cd804db3-df59-4f57-8a7d-11cc3f3c4d98\")\n    >>> logical_network\n    <hnvclient.client.LogicalNetworks object at 0x7fcd79419910>\n    >>> logical_network.provisioning_state\n    u'Succeeded'\n    >>> logical_network.subnetworks\n    [<hnvclient.client.LogicalSubnetworks object at 0x7fcd79419150>]\n    >>> logical_network.subnetworks[0].resource_id\n    u'4390e3d8-c527-4534-882f-906c47ffd0bb'\n\n.. code:: python\n\n    from __future__ import print_function\n\n    import json\n    import sys\n\n    from hnvclient import client\n\n\n    def view_logical_networks():\n        \"\"\"List all the available logical networks.\"\"\"\n        logical_networks = client.LogicalNetworks.get()\n        print(\"Logical networks:\")\n        for logical_network in logical_networks:\n            print(\"\\t - \", logical_network.resource_ref)\n            print(\"\\t\\t\", \"Logical subnetworks:\")\n            for logical_subnetwork in logical_network.subnetworks:\n                print(\"\\t\\t - %s (%s)\" % (logical_subnetwork.resource_id,\n                                          logical_subnetwork.address_prefix))\n\n            print(\"\\t\\t\", \"Virtual networks:\")\n            for virtual_network in logical_network.virtual_networks:\n                print(\"\\t\\t - %s\" % virtual_network.resource_ref)\n\n\n    def create_virtual_network():\n        \"\"\"Create a new virtual network on the first logical network.\"\"\"\n        print(\"Creating a new virtual network.\")\n        address_space = client.AddressSpace(\n            address_prefixes=[\"192.168.133.0/24\"])\n\n        logical_network = client.Resource(\n            resource_ref=client.LogicalNetworks.get()[0].resource_ref)\n\n        virtual_network = client.VirtualNetworks(\n            resource_id=\"hvn-test\",\n            address_space=address_space,\n            logical_network=logical_network,\n        )\n        virtual_network.commit()\n\n        print(\"The raw content of the new Virtual Network\")\n        print(json.dumps(virtual_network.dump(), indent=4))\n\n\n    def remove_virtual_network():\n        \"\"\"Remove the new virtual network.\"\"\"\n        print(\"Remove the new virtual network\")\n        client.VirtualNetworks.remove(resource_id=\"hvn-test\")\n\n\n    def main():\n        \"\"\"Logical networks sample entry point.\"\"\"\n        client.setup()\n        view_logical_networks()\n        create_virtual_network()\n        view_logical_networks()\n        remove_virtual_network()\n        view_logical_networks()\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cloudbase/python-hnvclient", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-hnvclient", "package_url": "https://pypi.org/project/python-hnvclient/", "platform": "", "project_url": "https://pypi.org/project/python-hnvclient/", "project_urls": {"Homepage": "https://github.com/cloudbase/python-hnvclient"}, "release_url": "https://pypi.org/project/python-hnvclient/0.1.0/", "requires_dist": ["oslo.i18n (>=2.1.0)", "oslo.log (>=3.11.0)", "pbr (>=1.8)", "requests", "requests-ntlm", "six (>=1.7.0)"], "requires_python": "", "summary": "Python client for the HNV (Hyper-V Network Virtualization) REST API.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/cloudbase/python-hnvclient\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cloudbase/python-hnvclient.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7013373a4dbf93f712c7699b359fb0f41f82f07e/68747470733a2f2f7472617669732d63692e6f72672f636c6f7564626173652f707974686f6e2d686e76636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<p>Python client for the HNV (Hyper-V Network Virtualization) REST API.</p>\n<ul>\n<li>Free software: Apache license</li>\n<li>Documentation: <a href=\"http://docs.openstack.org/developer/python-hnvclient\" rel=\"nofollow\">http://docs.openstack.org/developer/python-hnvclient</a></li>\n<li>Source: <a href=\"http://git.openstack.org/cgit/openstack/python-hnvclient\" rel=\"nofollow\">http://git.openstack.org/cgit/openstack/python-hnvclient</a></li>\n<li>Bugs: <a href=\"http://bugs.launchpad.net/python-hnvclient\" rel=\"nofollow\">http://bugs.launchpad.net/python-hnvclient</a></li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The Python interface matches the underlying REST API and can be employed in 3rd party projects.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">hnvclient</span> <span class=\"kn\">import</span> <span class=\"n\">client</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_networks</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalNetworks</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">logical_network</span> <span class=\"ow\">in</span> <span class=\"n\">logical_networks</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">resource_id</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"s2\">\"63606911-e053-42cf-842e-29f67c90d5c6\"</span>\n<span class=\"s2\">\"c4cd42ff-5efb-4006-ac56-479730557926\"</span>\n<span class=\"s2\">\"cd804db3-df59-4f57-8a7d-11cc3f3c4d98\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_network</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalNetworks</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"o\">=</span><span class=\"s2\">\"cd804db3-df59-4f57-8a7d-11cc3f3c4d98\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_network</span>\n<span class=\"o\">&lt;</span><span class=\"n\">hnvclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalNetworks</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fcd79419910</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">provisioning_state</span>\n<span class=\"sa\">u</span><span class=\"s1\">'Succeeded'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">subnetworks</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">hnvclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalSubnetworks</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fcd79419150</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">subnetworks</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">resource_id</span>\n<span class=\"sa\">u</span><span class=\"s1\">'4390e3d8-c527-4534-882f-906c47ffd0bb'</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">hnvclient</span> <span class=\"kn\">import</span> <span class=\"n\">client</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">view_logical_networks</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"List all the available logical networks.\"\"\"</span>\n    <span class=\"n\">logical_networks</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalNetworks</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Logical networks:\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">logical_network</span> <span class=\"ow\">in</span> <span class=\"n\">logical_networks</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\"> - \"</span><span class=\"p\">,</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">resource_ref</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Logical subnetworks:\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">logical_subnetwork</span> <span class=\"ow\">in</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">subnetworks</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\"> - </span><span class=\"si\">%s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">logical_subnetwork</span><span class=\"o\">.</span><span class=\"n\">resource_id</span><span class=\"p\">,</span>\n                                      <span class=\"n\">logical_subnetwork</span><span class=\"o\">.</span><span class=\"n\">address_prefix</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Virtual networks:\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">virtual_network</span> <span class=\"ow\">in</span> <span class=\"n\">logical_network</span><span class=\"o\">.</span><span class=\"n\">virtual_networks</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\"> - </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">virtual_network</span><span class=\"o\">.</span><span class=\"n\">resource_ref</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_virtual_network</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Create a new virtual network on the first logical network.\"\"\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Creating a new virtual network.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">address_space</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">AddressSpace</span><span class=\"p\">(</span>\n        <span class=\"n\">address_prefixes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"192.168.133.0/24\"</span><span class=\"p\">])</span>\n\n    <span class=\"n\">logical_network</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Resource</span><span class=\"p\">(</span>\n        <span class=\"n\">resource_ref</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">LogicalNetworks</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">resource_ref</span><span class=\"p\">)</span>\n\n    <span class=\"n\">virtual_network</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">VirtualNetworks</span><span class=\"p\">(</span>\n        <span class=\"n\">resource_id</span><span class=\"o\">=</span><span class=\"s2\">\"hvn-test\"</span><span class=\"p\">,</span>\n        <span class=\"n\">address_space</span><span class=\"o\">=</span><span class=\"n\">address_space</span><span class=\"p\">,</span>\n        <span class=\"n\">logical_network</span><span class=\"o\">=</span><span class=\"n\">logical_network</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">virtual_network</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The raw content of the new Virtual Network\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">virtual_network</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(),</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">remove_virtual_network</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Remove the new virtual network.\"\"\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Remove the new virtual network\"</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">VirtualNetworks</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"o\">=</span><span class=\"s2\">\"hvn-test\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Logical networks sample entry point.\"\"\"</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n    <span class=\"n\">view_logical_networks</span><span class=\"p\">()</span>\n    <span class=\"n\">create_virtual_network</span><span class=\"p\">()</span>\n    <span class=\"n\">view_logical_networks</span><span class=\"p\">()</span>\n    <span class=\"n\">remove_virtual_network</span><span class=\"p\">()</span>\n    <span class=\"n\">view_logical_networks</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2735519, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c6af100e90ceeca6cfba536ad7612825", "sha256": "5f478c926e1d8262d8a8a593b1de6b481e362b0c319dc996f4f39131f67daa23"}, "downloads": -1, "filename": "python_hnvclient-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c6af100e90ceeca6cfba536ad7612825", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 79919, "upload_time": "2017-03-28T08:35:36", "upload_time_iso_8601": "2017-03-28T08:35:36.225540Z", "url": "https://files.pythonhosted.org/packages/e5/19/a6f762f677ded653adf7b2971145cc0de03912f46f15ac2cf930df6fdab6/python_hnvclient-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4e1037ce3692de15cce46cb4bbc28fa", "sha256": "77b09e1cc7f28ade7a15976a34ff85a244fd358641fc19ad4a6618de541f74f7"}, "downloads": -1, "filename": "python-hnvclient-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d4e1037ce3692de15cce46cb4bbc28fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75831, "upload_time": "2017-03-28T08:35:38", "upload_time_iso_8601": "2017-03-28T08:35:38.676451Z", "url": "https://files.pythonhosted.org/packages/a9/c8/f8b8e19c12910b9fb918724fe722410a462a644aabfef614d638ed9e2b51/python-hnvclient-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6af100e90ceeca6cfba536ad7612825", "sha256": "5f478c926e1d8262d8a8a593b1de6b481e362b0c319dc996f4f39131f67daa23"}, "downloads": -1, "filename": "python_hnvclient-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c6af100e90ceeca6cfba536ad7612825", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 79919, "upload_time": "2017-03-28T08:35:36", "upload_time_iso_8601": "2017-03-28T08:35:36.225540Z", "url": "https://files.pythonhosted.org/packages/e5/19/a6f762f677ded653adf7b2971145cc0de03912f46f15ac2cf930df6fdab6/python_hnvclient-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4e1037ce3692de15cce46cb4bbc28fa", "sha256": "77b09e1cc7f28ade7a15976a34ff85a244fd358641fc19ad4a6618de541f74f7"}, "downloads": -1, "filename": "python-hnvclient-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d4e1037ce3692de15cce46cb4bbc28fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75831, "upload_time": "2017-03-28T08:35:38", "upload_time_iso_8601": "2017-03-28T08:35:38.676451Z", "url": "https://files.pythonhosted.org/packages/a9/c8/f8b8e19c12910b9fb918724fe722410a462a644aabfef614d638ed9e2b51/python-hnvclient-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:18 2020"}