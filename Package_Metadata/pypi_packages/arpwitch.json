{"info": {"author": "Verb Networks Pty Ltd", "author_email": "contact@verbnetworks.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: System :: Networking :: Monitoring"], "description": "# arpwitch\n\n[![PyPi](https://img.shields.io/pypi/v/arpwitch.svg)](https://pypi.python.org/pypi/arpwitch/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/arpwitch.svg)](https://github.com/verbnetworks/arpwitch/)\n[![Build Status](https://api.travis-ci.org/verbnetworks/arpwitch.svg?branch=master)](https://travis-ci.org/verbnetworks/arpwitch/)\n[![License](https://img.shields.io/github/license/ndejong/arpwitch.svg)](https://github.com/ndejong/arpwitch)\n\nA modern arpwatch replacement with JSON formatted outputs and easy options to exec commands when network changes are \nobserved.  Includes a hard coded convenience `--exec` that invokes nmap when new network-addresses are observed.\n\n## Project\n* https://github.com/verbnetworks/arpwitch/\n\n## Versions\nLegacy versions based on year-date (eg v2018.2) have been hard-deprecated in favour of a backward incompatible \nstandard versioning scheme (eg v0.2.0).  With this major revision change the arguments are quite different to \nprevious versions however they are based on what-works-well in the field.\n\n## Usage\n```text\nusage: arpwitch [-h] [-f <datafile>] [-i <seconds>] [-req | -noreq | -allreq]\n                [-rep | -norep | -allrep] [-e <command>] [-n] [-u <user>]\n                [-q <address>] [-v] [-w] [-d]\n\narpwitch v0.2.0\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -req, --new-request   Select ARP request packet events that include new\n                        ip/hw addresses not yet observed (DEFAULT).\n  -noreq, --no-request  Ignore all ARP request packet events.\n  -allreq, --all-request\n                        Select all ARP request packet events regardless if\n                        addresses have been previously observed.\n  -rep, --new-reply     Select only reply packet events that include new ip/hw\n                        addresses not yet observed (DEFAULT).\n  -norep, --no-reply    Ignore all ARP reply packet events.\n  -allrep, --all-reply  Select all ARP reply packet events regardless if the\n                        addresses have been previously observed.\n\ndatafile arguments:\n  -f <datafile>, --datafile <datafile>\n                        The arpwitch datafile where ARP event data is stored\n                        as a JSON formatted file (REQUIRED). The datafile is\n                        also easy to manually query and inspect with external\n                        tools such as `jq`\n  -i <seconds>, --interval <seconds>\n                        Interval seconds between writing to the datafile\n                        (DEFAULT: 30)\n\nARP event command execution arguments:\n  The following exec command substitutions are available: {IP}=ipv4-address,\n  {HW}=hardware-address, {TS}=timestamp-utc, {ts}=timestamp-utc-short\n\n  -e <command>, --exec <command>\n                        Command line to exec on selected ARP events. Commands\n                        are run async\n  -n, --nmap            A hard coded convenience --exec that causes nmap to be\n                        run against the IPv4 target with nmap-XML formatted\n                        output written to the current-working-directory. This\n                        option cannot be used in conjunction with --exec.\n  -u <user>, --user <user>\n                        User to exec commands with, if not set this will be\n                        the same user context as arpwitch.\n\nrun-mode arguments:\n  Switches that invoke run-modes other than ARP capture.\n\n  -q <address>, --query <address>\n                        Query the <datafile> for an IPv4 or HW address and\n                        return results in JSON formatted output and exit.\n  -v, --version         Return the arpwitch version and exit.\n  -w, --witch           Supply one witch to <stdout> and exit.\n  -d, --debug           Debug messages to stdout.\n\nA modern arpwatch replacement with JSON formatted outputs and easy options to\nexecute commands when network changes are observed.\n```\n\n## Examples\n\n**Example 1**: Use the built-in nmap `--exec` definition to nmap scan new hosts when they are first observed.  Additionally\nuse `--debug` logging output and pipe the JSON outputs through `jq` for pretty formatting. \n```bash\nndejong@laptop:$ sudo arpwitch --debug --nmap --datafile /tmp/arpwitch.dat | jq .\n2020-02-29T21:18:28+00:00 - INFO - arpwitch v0.2.1\n2020-02-29T21:18:28+00:00 - DEBUG - do_sniffer(datafile=/tmp/arpwitch.dat, save_interval=30, request_select=new, reply_select=new, exec=nmap -n -T4 -Pn -oX arpwitch-nmap-{IP}-{ts}.xml {IP}, exec_user=None)\n2020-02-29T21:18:28+00:00 - DEBUG - ArpWitchDataFile.read(filename=/tmp/arpwitch.dat)\n2020-02-29T21:18:28+00:00 - WARNING - ArpWitchDataFile.read() - no existing data file found\n2020-02-29T21:18:28+00:00 - DEBUG - arpwitch: 0.2.2\n2020-02-29T21:18:28+00:00 - DEBUG - starts: 0\n2020-02-29T21:18:28+00:00 - DEBUG - ts_first: 2020-02-29T21:18:28+00:00\n2020-02-29T21:18:28+00:00 - DEBUG - ts_last: 2020-02-29T21:18:28+00:00\n2020-02-29T21:18:28+00:00 - DEBUG - hw_count: 0\n2020-02-29T21:18:28+00:00 - DEBUG - ip_count: 0\n{\n  \"op\": \"request\",\n  \"ip\": {\n    \"addr\": \"192.168.1.1\",\n    \"new\": true\n  },\n  \"hw\": {\n    \"addr\": \"cc:32:e5:00:00:00\",\n    \"new\": true\n  },\n  \"trigger\": \"new_ip_request\"\n}\n2020-02-29T21:18:32+00:00 - DEBUG - ArpWitch.async_command_exec(<exec_command>, <packet_data>, <as_user>)\n2020-02-29T21:18:32+00:00 - DEBUG - ArpWitch.command_exec(command_line=\"nmap -n -T4 -Pn -oX arpwitch-nmap-192.168.1.1-20200229Z211832.xml 192.168.1.1\")\n2020-02-29T21:18:32+00:00 - DEBUG - ArpWitch.async_command_exec_threads_wait(wait_max=30)\n2020-02-29T21:18:41+00:00 - DEBUG - ArpWitch.async_command_exec_threads_wait() - done\n2020-02-29T21:18:59+00:00 - DEBUG - ArpWitchDataFile.write(filename=/tmp/arpwitch.dat, data=<data>)\n2020-02-29T21:18:59+00:00 - DEBUG - ArpWitchDataFile.write() - datafile written\n\nndejong@laptop:$\nndejong@laptop:$ ls -al arpwitch-nmap-*\n-rw-r--r--   1 root    root     5304 Feb 29 17:01 arpwitch-nmap-192.168.1.1-20200229Z211832.xml\n```\n\n\n**Example 2**: Query the datafile to extract data about the address supplied.\n```bash\nndejong@laptop:$ arpwitch -f /tmp/arpwitch.dat -q 192.168.1.1\n{\n  \"ip\": {\n    \"192.168.1.1\": {\n      \"cc:32:e5:00:00:00\": {\n        \"count\": 5,\n        \"ts_first\": \"2020-02-29T21:18:28+00:00\",\n        \"ts_last\": \"2020-02-29T21:19:57+00:00\",\n        \"hw_vendor\": \"TP-LINK TECHNOLOGIES CO.,LTD.\"\n      }\n    }\n  }\n}\n```\n\n\n## Authors\nThis code is written by [Nicholas de Jong](https://github.com/ndejong) via the [Verb Networks](https://github.com/verbnetworks) lab project.\n\n## License\nMIT licensed. See LICENSE file for full details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/verbnetworks/arpwitch", "keywords": "arpwitch arpwatch arp network", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "arpwitch", "package_url": "https://pypi.org/project/arpwitch/", "platform": "", "project_url": "https://pypi.org/project/arpwitch/", "project_urls": {"Homepage": "https://github.com/verbnetworks/arpwitch"}, "release_url": "https://pypi.org/project/arpwitch/0.2.2/", "requires_dist": ["scapy", "ouilookup", "psutil"], "requires_python": "", "summary": "A modern arpwatch replacement with JSON formatted outputs and easy options to exec commands when network changes are observed", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>arpwitch</h1>\n<p><a href=\"https://pypi.python.org/pypi/arpwitch/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3779e6ca2d2758162fa448b706b63ca066961e65/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61727077697463682e737667\"></a>\n<a href=\"https://github.com/verbnetworks/arpwitch/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ccc2e0a1946d0776d64317e47503b26c83e6f274/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61727077697463682e737667\"></a>\n<a href=\"https://travis-ci.org/verbnetworks/arpwitch/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8232444342855b80a09b16eb174036d6e5fb71b/68747470733a2f2f6170692e7472617669732d63692e6f72672f766572626e6574776f726b732f61727077697463682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/ndejong/arpwitch\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9954fd4bb5e96623b0d77fc1f7f00360e01ebf95/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e64656a6f6e672f61727077697463682e737667\"></a></p>\n<p>A modern arpwatch replacement with JSON formatted outputs and easy options to exec commands when network changes are\nobserved.  Includes a hard coded convenience <code>--exec</code> that invokes nmap when new network-addresses are observed.</p>\n<h2>Project</h2>\n<ul>\n<li><a href=\"https://github.com/verbnetworks/arpwitch/\" rel=\"nofollow\">https://github.com/verbnetworks/arpwitch/</a></li>\n</ul>\n<h2>Versions</h2>\n<p>Legacy versions based on year-date (eg v2018.2) have been hard-deprecated in favour of a backward incompatible\nstandard versioning scheme (eg v0.2.0).  With this major revision change the arguments are quite different to\nprevious versions however they are based on what-works-well in the field.</p>\n<h2>Usage</h2>\n<pre>usage: arpwitch [-h] [-f &lt;datafile&gt;] [-i &lt;seconds&gt;] [-req | -noreq | -allreq]\n                [-rep | -norep | -allrep] [-e &lt;command&gt;] [-n] [-u &lt;user&gt;]\n                [-q &lt;address&gt;] [-v] [-w] [-d]\n\narpwitch v0.2.0\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -req, --new-request   Select ARP request packet events that include new\n                        ip/hw addresses not yet observed (DEFAULT).\n  -noreq, --no-request  Ignore all ARP request packet events.\n  -allreq, --all-request\n                        Select all ARP request packet events regardless if\n                        addresses have been previously observed.\n  -rep, --new-reply     Select only reply packet events that include new ip/hw\n                        addresses not yet observed (DEFAULT).\n  -norep, --no-reply    Ignore all ARP reply packet events.\n  -allrep, --all-reply  Select all ARP reply packet events regardless if the\n                        addresses have been previously observed.\n\ndatafile arguments:\n  -f &lt;datafile&gt;, --datafile &lt;datafile&gt;\n                        The arpwitch datafile where ARP event data is stored\n                        as a JSON formatted file (REQUIRED). The datafile is\n                        also easy to manually query and inspect with external\n                        tools such as `jq`\n  -i &lt;seconds&gt;, --interval &lt;seconds&gt;\n                        Interval seconds between writing to the datafile\n                        (DEFAULT: 30)\n\nARP event command execution arguments:\n  The following exec command substitutions are available: {IP}=ipv4-address,\n  {HW}=hardware-address, {TS}=timestamp-utc, {ts}=timestamp-utc-short\n\n  -e &lt;command&gt;, --exec &lt;command&gt;\n                        Command line to exec on selected ARP events. Commands\n                        are run async\n  -n, --nmap            A hard coded convenience --exec that causes nmap to be\n                        run against the IPv4 target with nmap-XML formatted\n                        output written to the current-working-directory. This\n                        option cannot be used in conjunction with --exec.\n  -u &lt;user&gt;, --user &lt;user&gt;\n                        User to exec commands with, if not set this will be\n                        the same user context as arpwitch.\n\nrun-mode arguments:\n  Switches that invoke run-modes other than ARP capture.\n\n  -q &lt;address&gt;, --query &lt;address&gt;\n                        Query the &lt;datafile&gt; for an IPv4 or HW address and\n                        return results in JSON formatted output and exit.\n  -v, --version         Return the arpwitch version and exit.\n  -w, --witch           Supply one witch to &lt;stdout&gt; and exit.\n  -d, --debug           Debug messages to stdout.\n\nA modern arpwatch replacement with JSON formatted outputs and easy options to\nexecute commands when network changes are observed.\n</pre>\n<h2>Examples</h2>\n<p><strong>Example 1</strong>: Use the built-in nmap <code>--exec</code> definition to nmap scan new hosts when they are first observed.  Additionally\nuse <code>--debug</code> logging output and pipe the JSON outputs through <code>jq</code> for pretty formatting.</p>\n<pre>ndejong@laptop:$ sudo arpwitch --debug --nmap --datafile /tmp/arpwitch.dat <span class=\"p\">|</span> jq .\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - INFO - arpwitch v0.2.1\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - do_sniffer<span class=\"o\">(</span><span class=\"nv\">datafile</span><span class=\"o\">=</span>/tmp/arpwitch.dat, <span class=\"nv\">save_interval</span><span class=\"o\">=</span><span class=\"m\">30</span>, <span class=\"nv\">request_select</span><span class=\"o\">=</span>new, <span class=\"nv\">reply_select</span><span class=\"o\">=</span>new, <span class=\"nv\">exec</span><span class=\"o\">=</span>nmap -n -T4 -Pn -oX arpwitch-nmap-<span class=\"o\">{</span>IP<span class=\"o\">}</span>-<span class=\"o\">{</span>ts<span class=\"o\">}</span>.xml <span class=\"o\">{</span>IP<span class=\"o\">}</span>, <span class=\"nv\">exec_user</span><span class=\"o\">=</span>None<span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - ArpWitchDataFile.read<span class=\"o\">(</span><span class=\"nv\">filename</span><span class=\"o\">=</span>/tmp/arpwitch.dat<span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - WARNING - ArpWitchDataFile.read<span class=\"o\">()</span> - no existing data file found\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - arpwitch: <span class=\"m\">0</span>.2.2\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - starts: <span class=\"m\">0</span>\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - ts_first: <span class=\"m\">2020</span>-02-29T21:18:28+00:00\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - ts_last: <span class=\"m\">2020</span>-02-29T21:18:28+00:00\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - hw_count: <span class=\"m\">0</span>\n<span class=\"m\">2020</span>-02-29T21:18:28+00:00 - DEBUG - ip_count: <span class=\"m\">0</span>\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"op\"</span>: <span class=\"s2\">\"request\"</span>,\n  <span class=\"s2\">\"ip\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"addr\"</span>: <span class=\"s2\">\"192.168.1.1\"</span>,\n    <span class=\"s2\">\"new\"</span>: <span class=\"nb\">true</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"hw\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"addr\"</span>: <span class=\"s2\">\"cc:32:e5:00:00:00\"</span>,\n    <span class=\"s2\">\"new\"</span>: <span class=\"nb\">true</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"trigger\"</span>: <span class=\"s2\">\"new_ip_request\"</span>\n<span class=\"o\">}</span>\n<span class=\"m\">2020</span>-02-29T21:18:32+00:00 - DEBUG - ArpWitch.async_command_exec<span class=\"o\">(</span>&lt;exec_command&gt;, &lt;packet_data&gt;, &lt;as_user&gt;<span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:32+00:00 - DEBUG - ArpWitch.command_exec<span class=\"o\">(</span><span class=\"nv\">command_line</span><span class=\"o\">=</span><span class=\"s2\">\"nmap -n -T4 -Pn -oX arpwitch-nmap-192.168.1.1-20200229Z211832.xml 192.168.1.1\"</span><span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:32+00:00 - DEBUG - ArpWitch.async_command_exec_threads_wait<span class=\"o\">(</span><span class=\"nv\">wait_max</span><span class=\"o\">=</span><span class=\"m\">30</span><span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:41+00:00 - DEBUG - ArpWitch.async_command_exec_threads_wait<span class=\"o\">()</span> - <span class=\"k\">done</span>\n<span class=\"m\">2020</span>-02-29T21:18:59+00:00 - DEBUG - ArpWitchDataFile.write<span class=\"o\">(</span><span class=\"nv\">filename</span><span class=\"o\">=</span>/tmp/arpwitch.dat, <span class=\"nv\">data</span><span class=\"o\">=</span>&lt;data&gt;<span class=\"o\">)</span>\n<span class=\"m\">2020</span>-02-29T21:18:59+00:00 - DEBUG - ArpWitchDataFile.write<span class=\"o\">()</span> - datafile written\n\nndejong@laptop:$\nndejong@laptop:$ ls -al arpwitch-nmap-*\n-rw-r--r--   <span class=\"m\">1</span> root    root     <span class=\"m\">5304</span> Feb <span class=\"m\">29</span> <span class=\"m\">17</span>:01 arpwitch-nmap-192.168.1.1-20200229Z211832.xml\n</pre>\n<p><strong>Example 2</strong>: Query the datafile to extract data about the address supplied.</p>\n<pre>ndejong@laptop:$ arpwitch -f /tmp/arpwitch.dat -q <span class=\"m\">192</span>.168.1.1\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"ip\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"192.168.1.1\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"cc:32:e5:00:00:00\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"count\"</span>: <span class=\"m\">5</span>,\n        <span class=\"s2\">\"ts_first\"</span>: <span class=\"s2\">\"2020-02-29T21:18:28+00:00\"</span>,\n        <span class=\"s2\">\"ts_last\"</span>: <span class=\"s2\">\"2020-02-29T21:19:57+00:00\"</span>,\n        <span class=\"s2\">\"hw_vendor\"</span>: <span class=\"s2\">\"TP-LINK TECHNOLOGIES CO.,LTD.\"</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n<h2>Authors</h2>\n<p>This code is written by <a href=\"https://github.com/ndejong\" rel=\"nofollow\">Nicholas de Jong</a> via the <a href=\"https://github.com/verbnetworks\" rel=\"nofollow\">Verb Networks</a> lab project.</p>\n<h2>License</h2>\n<p>MIT licensed. See LICENSE file for full details.</p>\n\n          </div>"}, "last_serial": 6726694, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "0d42a2a5cf01391651f0f63508f69235", "sha256": "f9eb79daf0aa0b54369b61030ace77a2e95c61fc7fb1d23501ec4a0106a66d33"}, "downloads": -1, "filename": "arpwitch-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0d42a2a5cf01391651f0f63508f69235", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18790, "upload_time": "2020-02-29T10:47:12", "upload_time_iso_8601": "2020-02-29T10:47:12.270252Z", "url": "https://files.pythonhosted.org/packages/11/63/915bb01b7f46ed68c777c014283b1b40e95d40c3117a5ceae1175af49e11/arpwitch-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2a6d193bc7dbcb39e8563e9a0725e2e", "sha256": "4926a7a1bae3405e34a9bc814ae769ba3c2fa71af97e70720a8e42a022b91553"}, "downloads": -1, "filename": "arpwitch-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d2a6d193bc7dbcb39e8563e9a0725e2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10940, "upload_time": "2020-02-29T10:47:14", "upload_time_iso_8601": "2020-02-29T10:47:14.230855Z", "url": "https://files.pythonhosted.org/packages/1f/c9/22575604a7245e3509ac9af80dbf63c1740cc8e3d18987f80751ae5d028b/arpwitch-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "57d87efa952b3c07dd23912ae9816d29", "sha256": "1e3b39ca93a161daecb52266b6497f06e94101d89262d8b6a677cba029eb4ca4"}, "downloads": -1, "filename": "arpwitch-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "57d87efa952b3c07dd23912ae9816d29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18800, "upload_time": "2020-02-29T10:54:50", "upload_time_iso_8601": "2020-02-29T10:54:50.475589Z", "url": "https://files.pythonhosted.org/packages/50/3a/7850259fa532722d0a3c46c69001532cae609368e5385d98dae665aba306/arpwitch-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ec569c274ff2049890956583246b154", "sha256": "1f5a089949fbdfd2fc60b3970b7488c0fc2208311de47e4d2faf2f066038961f"}, "downloads": -1, "filename": "arpwitch-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0ec569c274ff2049890956583246b154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11341, "upload_time": "2020-02-29T10:54:52", "upload_time_iso_8601": "2020-02-29T10:54:52.158791Z", "url": "https://files.pythonhosted.org/packages/f6/62/27ff0af98513e983958bcf21345a0a90cdeb7cc23ec16a77991768e01b74/arpwitch-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "411af7b8ade3ec80b307a9084e99481a", "sha256": "c1b72d6b2feb7fd817dd7a12746a578cd6072d5f0ee48ae8be79553a8685698d"}, "downloads": -1, "filename": "arpwitch-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "411af7b8ade3ec80b307a9084e99481a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19281, "upload_time": "2020-03-01T01:40:12", "upload_time_iso_8601": "2020-03-01T01:40:12.034614Z", "url": "https://files.pythonhosted.org/packages/6c/a7/8211a32a1624df306574d5d752dd10ddfdc648f89320977f71a759d4d9cb/arpwitch-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af89ff69198ab9249234e3dcb47933b6", "sha256": "4761fc721b9eb0b531e3ac72adeee35d7aae43a3882f3fac5bb59fbf39da23cc"}, "downloads": -1, "filename": "arpwitch-0.2.2.tar.gz", "has_sig": false, "md5_digest": "af89ff69198ab9249234e3dcb47933b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9934, "upload_time": "2020-03-01T01:40:18", "upload_time_iso_8601": "2020-03-01T01:40:18.913797Z", "url": "https://files.pythonhosted.org/packages/c2/15/ae0670a9ec7c1502d6914dda47e6565620b1a4cd29c08269c3ad136b6e93/arpwitch-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "411af7b8ade3ec80b307a9084e99481a", "sha256": "c1b72d6b2feb7fd817dd7a12746a578cd6072d5f0ee48ae8be79553a8685698d"}, "downloads": -1, "filename": "arpwitch-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "411af7b8ade3ec80b307a9084e99481a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19281, "upload_time": "2020-03-01T01:40:12", "upload_time_iso_8601": "2020-03-01T01:40:12.034614Z", "url": "https://files.pythonhosted.org/packages/6c/a7/8211a32a1624df306574d5d752dd10ddfdc648f89320977f71a759d4d9cb/arpwitch-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af89ff69198ab9249234e3dcb47933b6", "sha256": "4761fc721b9eb0b531e3ac72adeee35d7aae43a3882f3fac5bb59fbf39da23cc"}, "downloads": -1, "filename": "arpwitch-0.2.2.tar.gz", "has_sig": false, "md5_digest": "af89ff69198ab9249234e3dcb47933b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9934, "upload_time": "2020-03-01T01:40:18", "upload_time_iso_8601": "2020-03-01T01:40:18.913797Z", "url": "https://files.pythonhosted.org/packages/c2/15/ae0670a9ec7c1502d6914dda47e6565620b1a4cd29c08269c3ad136b6e93/arpwitch-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:11 2020"}