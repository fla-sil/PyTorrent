{"info": {"author": "Alvaro Lopez Garcia", "author_email": "aloga@ifca.unican.es", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Monitoring"], "description": "# Cloud BDII provider\n\nThe Cloud BDII provider generates a GlueSchema v2 representation of cloud\nresources for publihing it into a BDII\n\n## Installation\n\n### Binary packages\n\nPackages are available at [EGI's AppDB](https://appdb.egi.eu/store/software/cloud.info.provider).\nUse the appropriate repos for your distribution and install using the usual tools.\n\n### From source\n\nGet the source by cloning this repo and do a pip install:\n\n```\ngit clone https://github.com/EGI-FCTF/BDIIscripts\ncd BDIIscripts \npip install .\n```\n\nIf you plan to use the script in a bdii, the `bdii` package should be also installed\n(it should be available in standard OS repositories).\n\n## Generation of the LDIF\u00a0\n\nThe cloud-info-provider generates a LDIF according to the information in a\nyaml file describing the static information of the cloud resources.\nBy default `/etc/cloud-info-provider/bdii.yaml` is used, but this path can be\noverriden with the `--yaml-file` option. A complete example with comments is\navailable in the `sample.static.yaml` file.\n\nDynamic information can be further obtained with the middleware providers\n(OpenStack and OpenNebula via rOCCI supported currently). Use the\n`--middleware` option for specifying the provider to use (see the command\nhelp for exact names). cloud-info-provider will fallback to static information\ndefined in the yaml file if a dynamic provider is not able to return any\ninformation. See the `sample.openstack.yaml` and `sample.opennebularocci.yaml`\nfor example configurations for each provider.\n\nThere are three different maps in the yaml file considered by the provider:\n`site`, `compute`, and `storage`:\n * `site` contains basic information of the site. The only attribute to define\n    here is the `name` which must contain the site name as defined in GOCDB.\n    Alternatively, the site name can be fetched from\n    `/etc/glite-info-static/site/site.cfg` (or by the file set with the\n    `--glite-site-info-static` option).\n    Any other information is only relevant to generate a LDIF for a complete \n    site-BDII (*this is not the recommended deployment mode*).\n   \n * `compute` should be present for those sites providing a IaaS computing\n    service. It describes the available resources, service endpoints,\n    the available VM images and the templates to run those images.\n    Dynamic providers will fetch most of the information in this section.\n    See the sample yaml files for details.\n\n * `storage` should be present for sites providing IaaS storage service.\n    Similarly to the `compute`, it contains a description of the resources\n    and enpoints providing the service. There are no dynamic providers for\n    `storage`at the moment.\n\nEach dynamic provider has its own commandline options for specifying how\nto connect to the underlying service. Use the `--help` option for a complete\nlisting of options.\n\nFor example for OpenStack, use a command line similar to the following:\n```\ncloud-info-provider-service --yaml-file /etc/cloud-info-provider/bdii.yaml \\\n    --middleware OpenStack --os-username <username> --os-password <password> \\\n    --os-tenant-name <tenant> --os-auth-url <auth-url>\n```\n\n**Test the generation of the LDIF before running the provider into your BDII!**\n\n## Running the provider in a resource-BDII\n\nThis is the normal deployment mode for the cloud provider. It should be installed\nin a node with access to your cloud infrastructure: for OpenStack, access to\nnova service is needed; for OpenNebula-rOCCI provider, access to the files\ndescribing the rOCCI templates is needed (e.g. installing the provider in the same\nhost as rOCCI-server).\n\n### Create the provider script\n\nIn `/var/lib/bdii/gip/provider/` create a `cloud-info-provider` file that \ncalls the provider with the correct options for your site:\n\n```\n#!/bin/sh\n\ncloud-info-provider-service --yaml /etc/cloud-info-provider/openstack.yaml \\\n                            --middleware openstack \\\n                            --os-username <username> --os-password <passwd> \\\n                            --os-tenant-name <tenant> --os-auth-url <url>\n\n```\n\nGive execution permission:\n```\nchmod +x /var/lib/bdii/gip/provider/cloud-info-provider\n```\nand test it:\n```\n/var/lib/bdii/gip/provider/cloud-info-provider\n```\nIt should output the full ldif describing your site.\n\n### Start the bdii service\n\nOnce the provider script is working, start the bdii service:\n```\nservice bdii start\n```\n\nThe ldap server should contain all your cloud resource information:\n```\nldapsearch -x -h localhost -p 2170 -b o=glue\n```\n\n##\u00a0Adding the resource provider in a site-BDII\n\nSites should have a dedicated host for the site-BDII. Information on how to\nset up this machine is avaiable in the EGI.eu wiki at\n[How to publish site information](https://wiki.egi.eu/wiki/MAN01_How_to_publish_Site_Information). \n\nAdd your cloud-info-provider to your site-BDII by adding a new URL like this:\n```\nldap://<cloud-info-provier-hostname>:2170/GLUE2GroupID=cloud,o=glue\n```\n\n## Running the cloud-provider as a full site-BDII\n\n**This is not recommended for production!!**\n\nIf your site does not have a site-BDII and you want to generate both the\nresource information and the site information with the cloud-bdii-provider\nyou can add in the `/var/lib/bdii/gip/provider/cloud-info-provider` the\n`--full-bdii-info` option to the `cloud-info-provider-service`. The YAML\nfile must contain all your site information as described in the templates.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "cloud-bdii-provider", "package_url": "https://pypi.org/project/cloud-bdii-provider/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cloud-bdii-provider/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/cloud-bdii-provider/0.4.dev140.g387348d/", "requires_dist": null, "requires_python": null, "summary": "Cloud BDII info provider", "version": "0.4.dev140.g387348d", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Cloud BDII provider<br><br>The Cloud BDII provider generates a GlueSchema v2 representation of cloud<br>resources for publihing it into a BDII<br><br>## Installation<br><br>### Binary packages<br><br>Packages are available at [EGI's AppDB](https://appdb.egi.eu/store/software/cloud.info.provider).<br>Use the appropriate repos for your distribution and install using the usual tools.<br><br>### From source<br><br>Get the source by cloning this repo and do a pip install:<br><br>```<br>git clone https://github.com/EGI-FCTF/BDIIscripts<br>cd BDIIscripts <br>pip install .<br>```<br><br>If you plan to use the script in a bdii, the `bdii` package should be also installed<br>(it should be available in standard OS repositories).<br><br>## Generation of the LDIF\u00a0<br><br>The cloud-info-provider generates a LDIF according to the information in a<br>yaml file describing the static information of the cloud resources.<br>By default `/etc/cloud-info-provider/bdii.yaml` is used, but this path can be<br>overriden with the `--yaml-file` option. A complete example with comments is<br>available in the `sample.static.yaml` file.<br><br>Dynamic information can be further obtained with the middleware providers<br>(OpenStack and OpenNebula via rOCCI supported currently). Use the<br>`--middleware` option for specifying the provider to use (see the command<br>help for exact names). cloud-info-provider will fallback to static information<br>defined in the yaml file if a dynamic provider is not able to return any<br>information. See the `sample.openstack.yaml` and `sample.opennebularocci.yaml`<br>for example configurations for each provider.<br><br>There are three different maps in the yaml file considered by the provider:<br>`site`, `compute`, and `storage`:<br> * `site` contains basic information of the site. The only attribute to define<br>    here is the `name` which must contain the site name as defined in GOCDB.<br>    Alternatively, the site name can be fetched from<br>    `/etc/glite-info-static/site/site.cfg` (or by the file set with the<br>    `--glite-site-info-static` option).<br>    Any other information is only relevant to generate a LDIF for a complete <br>    site-BDII (*this is not the recommended deployment mode*).<br>   <br> * `compute` should be present for those sites providing a IaaS computing<br>    service. It describes the available resources, service endpoints,<br>    the available VM images and the templates to run those images.<br>    Dynamic providers will fetch most of the information in this section.<br>    See the sample yaml files for details.<br><br> * `storage` should be present for sites providing IaaS storage service.<br>    Similarly to the `compute`, it contains a description of the resources<br>    and enpoints providing the service. There are no dynamic providers for<br>    `storage`at the moment.<br><br>Each dynamic provider has its own commandline options for specifying how<br>to connect to the underlying service. Use the `--help` option for a complete<br>listing of options.<br><br>For example for OpenStack, use a command line similar to the following:<br>```<br>cloud-info-provider-service --yaml-file /etc/cloud-info-provider/bdii.yaml \\<br>    --middleware OpenStack --os-username &lt;username&gt; --os-password &lt;password&gt; \\<br>    --os-tenant-name &lt;tenant&gt; --os-auth-url &lt;auth-url&gt;<br>```<br><br>**Test the generation of the LDIF before running the provider into your BDII!**<br><br>## Running the provider in a resource-BDII<br><br>This is the normal deployment mode for the cloud provider. It should be installed<br>in a node with access to your cloud infrastructure: for OpenStack, access to<br>nova service is needed; for OpenNebula-rOCCI provider, access to the files<br>describing the rOCCI templates is needed (e.g. installing the provider in the same<br>host as rOCCI-server).<br><br>### Create the provider script<br><br>In `/var/lib/bdii/gip/provider/` create a `cloud-info-provider` file that <br>calls the provider with the correct options for your site:<br><br>```<br>#!/bin/sh<br><br>cloud-info-provider-service --yaml /etc/cloud-info-provider/openstack.yaml \\<br>                            --middleware openstack \\<br>                            --os-username &lt;username&gt; --os-password &lt;passwd&gt; \\<br>                            --os-tenant-name &lt;tenant&gt; --os-auth-url &lt;url&gt;<br><br>```<br><br>Give execution permission:<br>```<br>chmod +x /var/lib/bdii/gip/provider/cloud-info-provider<br>```<br>and test it:<br>```<br>/var/lib/bdii/gip/provider/cloud-info-provider<br>```<br>It should output the full ldif describing your site.<br><br>### Start the bdii service<br><br>Once the provider script is working, start the bdii service:<br>```<br>service bdii start<br>```<br><br>The ldap server should contain all your cloud resource information:<br>```<br>ldapsearch -x -h localhost -p 2170 -b o=glue<br>```<br><br>##\u00a0Adding the resource provider in a site-BDII<br><br>Sites should have a dedicated host for the site-BDII. Information on how to<br>set up this machine is avaiable in the EGI.eu wiki at<br>[How to publish site information](https://wiki.egi.eu/wiki/MAN01_How_to_publish_Site_Information). <br><br>Add your cloud-info-provider to your site-BDII by adding a new URL like this:<br>```<br>ldap://&lt;cloud-info-provier-hostname&gt;:2170/GLUE2GroupID=cloud,o=glue<br>```<br><br>## Running the cloud-provider as a full site-BDII<br><br>**This is not recommended for production!!**<br><br>If your site does not have a site-BDII and you want to generate both the<br>resource information and the site information with the cloud-bdii-provider<br>you can add in the `/var/lib/bdii/gip/provider/cloud-info-provider` the<br>`--full-bdii-info` option to the `cloud-info-provider-service`. The YAML<br>file must contain all your site information as described in the templates.\n          </div>"}, "last_serial": 1249253, "releases": {"0.4.dev140.g387348d": [{"comment_text": "", "digests": {"md5": "248089eb0599ca666bd38f231828b378", "sha256": "bf1d497f5a2cc63b668b43d08fe7b71584cddf3c16ba4452239aec25b96280f3"}, "downloads": -1, "filename": "cloud-bdii-provider-0.4.dev140.g387348d.tar.gz", "has_sig": false, "md5_digest": "248089eb0599ca666bd38f231828b378", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32067, "upload_time": "2014-10-06T10:49:31", "upload_time_iso_8601": "2014-10-06T10:49:31.200018Z", "url": "https://files.pythonhosted.org/packages/75/88/dec246821c236a503b588769e8531012820b4e27dc21c6c7e402517de86c/cloud-bdii-provider-0.4.dev140.g387348d.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "248089eb0599ca666bd38f231828b378", "sha256": "bf1d497f5a2cc63b668b43d08fe7b71584cddf3c16ba4452239aec25b96280f3"}, "downloads": -1, "filename": "cloud-bdii-provider-0.4.dev140.g387348d.tar.gz", "has_sig": false, "md5_digest": "248089eb0599ca666bd38f231828b378", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32067, "upload_time": "2014-10-06T10:49:31", "upload_time_iso_8601": "2014-10-06T10:49:31.200018Z", "url": "https://files.pythonhosted.org/packages/75/88/dec246821c236a503b588769e8531012820b4e27dc21c6c7e402517de86c/cloud-bdii-provider-0.4.dev140.g387348d.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:52 2020"}