{"info": {"author": "ScholarPack", "author_email": "dev@scholarpack.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Cookie-Manager\nSigned cookie manager for communication between multiple trusted services.\n\nSigns, verifies, and manages multiple cookies from trusted environments. Designed for use by services all within the same secure network (AWS VPC etc).\n\nWraps [itsdangerous](https://github.com/pallets/itsdangerous) for the signing and verification (but this could change in the future). \n\nSpecifically, this handles:\n- Managing multiple different cookies - one for every environment or paired service\n- Error correction around sign/verify commands\n\nThis package is designed to sign and verify cookies - either ingoing or outgoing. These cookies are not encrypted, \nso stick to benign data, and only transmit within a trusted environment such as an AWS VPC.\n\n# Installation\nInstall and update using `pip`:\n\n```bash \npip install -U Cookie-Manager\n```\n\n# Usage\n\nImport:\n\n```python\nfrom cookie_manager.cookie_manager import CookieManager\n```\n\nCookie-Manager is designed to use multiple different signing/verifying keys -- one (or more) per environment.\nConfigure your keys in a dict:\n\n```python\nkeys = {\"key1\": \"SECRET\", \"key2\": \"SECRET2\"}\n```\n\nCreate an instance (and seed it with your keys):\n\n```python\ncookie_manager = CookieManager(keys=keys)\n```\n\n## Signing\n\nTo sign a cookie, start with a dict payload containing your data:\n\n```python\npayload = {\"key\": \"value\"}\n```\n\nThen sign the payload, making sure to pass a valid `key_id` as previously configured. The `sign` method will\nretrieve your signing key `SECRET` to sign requests (based on the `key_id` you pass in). This WILL override any\nexisting key with the name `key_id`.\n\n```python\nsigned_cookie = cookie_manager.sign(cookie=payload, key_id=\"key1\")\n```\n\nThis will return you a signed cookie (with an additional `key_id` pair added in):\n\n```python\n'{\"key\": \"value\", \"key_id\": \"key1\"}.XepkCA.CUZtVTCXHbqoalWVCh5xOa4S4WE'\n```\n\n## Verifying\n\nWhen reading in a signed cookie, verification happens through the cookie payload -> whatever comes in needs to have a \n`key_id` in the payload, which is used to lookup the verification key (configured during instantiation). This is added\nfor you by `sign`:\n\n```python\nincoming_signed_cookie = '{\"key\": \"value\", \"key_id\", \"key1\"}.XepkCA.CUZtVTCXHbqoalWVCh5xOa4S4WE'\n```\n\nVerify this cookie (during which Cookie-Manager will extract `key_id` from the payload, and lookup the key used to sign the cookie):\n\n```python\npayload = cookie_manager.verify(signed_cookie=signed_cookie)\n```\n\nNow, you can access data inside the `payload` object. The `verify` function will raise errors if it cannot verify.\n\n# Custom Logging\nThis package uses dependency injection to log errors with Python's `print`. To use your own logger, pass in a\nlogger object which implements `critical`, `error`, `warning`, `debug`, and `info` functions. Here's how to patch\nin the Flask logger, but any object will work providing it meets the Duck Typing rules:\n\n```python\ncookie_manager = CookieManager(keys=keys, logger=app.logger)\n```\n\nThis will result in logging calls firing to `app.logger.<logger-level>` with a string passed in.\n\n# Custom Exceptions\nLike logging, this package uses custom error handling if you need it. By default, all errors will raise as\n\"Exception\", but you can pass in a custom object to raise specific errors.\n\nThis class will raise `Unauthorized`, `ServiceUnavailable`, and `BadRequest`.\n\nHere's how to pass in a [Werkzeug](https://github.com/pallets/werkzeug) exception object:\n\n```python\nfrom werkzeug import exceptions\ncookie_manager = CookieManager(keys=keys, exceptions=exceptions)\n```\n\n# Developing\n__The build pipeline require your tests to pass and code to be formatted__\n\nMake sure you have Python 3.x installed on your machine (use [pyenv](https://github.com/pyenv/pyenv)).\n\nInstall the dependencies with [pipenv](https://github.com/pypa/pipenv) (making sure to include dev and pre-release packages):\n\n```bash\npipenv install --dev --pre\n```\n\nConfigure your environment:\n\n```bash\npipenv shell && export PYTHONPATH=\"$PWD\"\n```\n\nRun the tests:\n\n```bash\npytest\n```\n\nOr with logging:\n\n```bash\npytest -s\n```\n\nOr tests with coverage:\n\n```bash\npytest --cov=./\n```\n\nFormat the code with [Black](https://github.com/psf/black):\n\n```bash\nblack $PWD\n```\n\n# Releases\nCleanup the (.gitignored) `dist` folder (if you have one):\n\n```bash\nrm -rf dist\n```\n\nNotch up the version number in `setup.py` and build:\n\n```bash\npython3 setup.py sdist bdist_wheel\n```\n\nPush to PyPi (using the ScholarPack credentials when prompted)\n\n```bash\npython3 -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n```\n\n# Links\n* Releases: https://pypi.org/project/cookie-manager/\n* Code: https://github.com/ScholarPack/cookie-manager/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ScholarPack/cookie-manager", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cookie-manager", "package_url": "https://pypi.org/project/cookie-manager/", "platform": "", "project_url": "https://pypi.org/project/cookie-manager/", "project_urls": {"Homepage": "https://github.com/ScholarPack/cookie-manager"}, "release_url": "https://pypi.org/project/cookie-manager/1.1.0/", "requires_dist": ["itsdangerous (>=1.1.0)"], "requires_python": ">=3.6", "summary": "Signed cookie manager for communication between multiple trusted services.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cookie-Manager</h1>\n<p>Signed cookie manager for communication between multiple trusted services.</p>\n<p>Signs, verifies, and manages multiple cookies from trusted environments. Designed for use by services all within the same secure network (AWS VPC etc).</p>\n<p>Wraps <a href=\"https://github.com/pallets/itsdangerous\" rel=\"nofollow\">itsdangerous</a> for the signing and verification (but this could change in the future).</p>\n<p>Specifically, this handles:</p>\n<ul>\n<li>Managing multiple different cookies - one for every environment or paired service</li>\n<li>Error correction around sign/verify commands</li>\n</ul>\n<p>This package is designed to sign and verify cookies - either ingoing or outgoing. These cookies are not encrypted,\nso stick to benign data, and only transmit within a trusted environment such as an AWS VPC.</p>\n<h1>Installation</h1>\n<p>Install and update using <code>pip</code>:</p>\n<pre>pip install -U Cookie-Manager\n</pre>\n<h1>Usage</h1>\n<p>Import:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cookie_manager.cookie_manager</span> <span class=\"kn\">import</span> <span class=\"n\">CookieManager</span>\n</pre>\n<p>Cookie-Manager is designed to use multiple different signing/verifying keys -- one (or more) per environment.\nConfigure your keys in a dict:</p>\n<pre><span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"key1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SECRET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"key2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SECRET2\"</span><span class=\"p\">}</span>\n</pre>\n<p>Create an instance (and seed it with your keys):</p>\n<pre><span class=\"n\">cookie_manager</span> <span class=\"o\">=</span> <span class=\"n\">CookieManager</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n</pre>\n<h2>Signing</h2>\n<p>To sign a cookie, start with a dict payload containing your data:</p>\n<pre><span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">}</span>\n</pre>\n<p>Then sign the payload, making sure to pass a valid <code>key_id</code> as previously configured. The <code>sign</code> method will\nretrieve your signing key <code>SECRET</code> to sign requests (based on the <code>key_id</code> you pass in). This WILL override any\nexisting key with the name <code>key_id</code>.</p>\n<pre><span class=\"n\">signed_cookie</span> <span class=\"o\">=</span> <span class=\"n\">cookie_manager</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">cookie</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"n\">key_id</span><span class=\"o\">=</span><span class=\"s2\">\"key1\"</span><span class=\"p\">)</span>\n</pre>\n<p>This will return you a signed cookie (with an additional <code>key_id</code> pair added in):</p>\n<pre><span class=\"s1\">'{\"key\": \"value\", \"key_id\": \"key1\"}.XepkCA.CUZtVTCXHbqoalWVCh5xOa4S4WE'</span>\n</pre>\n<h2>Verifying</h2>\n<p>When reading in a signed cookie, verification happens through the cookie payload -&gt; whatever comes in needs to have a\n<code>key_id</code> in the payload, which is used to lookup the verification key (configured during instantiation). This is added\nfor you by <code>sign</code>:</p>\n<pre><span class=\"n\">incoming_signed_cookie</span> <span class=\"o\">=</span> <span class=\"s1\">'{\"key\": \"value\", \"key_id\", \"key1\"}.XepkCA.CUZtVTCXHbqoalWVCh5xOa4S4WE'</span>\n</pre>\n<p>Verify this cookie (during which Cookie-Manager will extract <code>key_id</code> from the payload, and lookup the key used to sign the cookie):</p>\n<pre><span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"n\">cookie_manager</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">signed_cookie</span><span class=\"o\">=</span><span class=\"n\">signed_cookie</span><span class=\"p\">)</span>\n</pre>\n<p>Now, you can access data inside the <code>payload</code> object. The <code>verify</code> function will raise errors if it cannot verify.</p>\n<h1>Custom Logging</h1>\n<p>This package uses dependency injection to log errors with Python's <code>print</code>. To use your own logger, pass in a\nlogger object which implements <code>critical</code>, <code>error</code>, <code>warning</code>, <code>debug</code>, and <code>info</code> functions. Here's how to patch\nin the Flask logger, but any object will work providing it meets the Duck Typing rules:</p>\n<pre><span class=\"n\">cookie_manager</span> <span class=\"o\">=</span> <span class=\"n\">CookieManager</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"n\">keys</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n</pre>\n<p>This will result in logging calls firing to <code>app.logger.&lt;logger-level&gt;</code> with a string passed in.</p>\n<h1>Custom Exceptions</h1>\n<p>Like logging, this package uses custom error handling if you need it. By default, all errors will raise as\n\"Exception\", but you can pass in a custom object to raise specific errors.</p>\n<p>This class will raise <code>Unauthorized</code>, <code>ServiceUnavailable</code>, and <code>BadRequest</code>.</p>\n<p>Here's how to pass in a <a href=\"https://github.com/pallets/werkzeug\" rel=\"nofollow\">Werkzeug</a> exception object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">werkzeug</span> <span class=\"kn\">import</span> <span class=\"n\">exceptions</span>\n<span class=\"n\">cookie_manager</span> <span class=\"o\">=</span> <span class=\"n\">CookieManager</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"n\">keys</span><span class=\"p\">,</span> <span class=\"n\">exceptions</span><span class=\"o\">=</span><span class=\"n\">exceptions</span><span class=\"p\">)</span>\n</pre>\n<h1>Developing</h1>\n<p><strong>The build pipeline require your tests to pass and code to be formatted</strong></p>\n<p>Make sure you have Python 3.x installed on your machine (use <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>).</p>\n<p>Install the dependencies with <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">pipenv</a> (making sure to include dev and pre-release packages):</p>\n<pre>pipenv install --dev --pre\n</pre>\n<p>Configure your environment:</p>\n<pre>pipenv shell <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$PWD</span><span class=\"s2\">\"</span>\n</pre>\n<p>Run the tests:</p>\n<pre>pytest\n</pre>\n<p>Or with logging:</p>\n<pre>pytest -s\n</pre>\n<p>Or tests with coverage:</p>\n<pre>pytest --cov<span class=\"o\">=</span>./\n</pre>\n<p>Format the code with <a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a>:</p>\n<pre>black <span class=\"nv\">$PWD</span>\n</pre>\n<h1>Releases</h1>\n<p>Cleanup the (.gitignored) <code>dist</code> folder (if you have one):</p>\n<pre>rm -rf dist\n</pre>\n<p>Notch up the version number in <code>setup.py</code> and build:</p>\n<pre>python3 setup.py sdist bdist_wheel\n</pre>\n<p>Push to PyPi (using the ScholarPack credentials when prompted)</p>\n<pre>python3 -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n</pre>\n<h1>Links</h1>\n<ul>\n<li>Releases: <a href=\"https://pypi.org/project/cookie-manager/\" rel=\"nofollow\">https://pypi.org/project/cookie-manager/</a></li>\n<li>Code: <a href=\"https://github.com/ScholarPack/cookie-manager/\" rel=\"nofollow\">https://github.com/ScholarPack/cookie-manager/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6959835, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0ebc37792b14c17d5f6abfa4c178396d", "sha256": "abf01c92b14441e58fb3fa5324df0f63810891505e5570728794828dc99a480a"}, "downloads": -1, "filename": "cookie_manager-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0ebc37792b14c17d5f6abfa4c178396d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17439, "upload_time": "2020-02-26T14:07:06", "upload_time_iso_8601": "2020-02-26T14:07:06.272664Z", "url": "https://files.pythonhosted.org/packages/17/5e/9181ca60b757e8fca1eb16962922fdda4196940bc828b543f0ccb66d50af/cookie_manager-0.0.1-py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6a1a3105eb897a563addceb258962b93", "sha256": "0fccd158517d77eee312acc64b1a2a83cf1f1b04821c910b2086f8a59f203c31"}, "downloads": -1, "filename": "cookie_manager-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a1a3105eb897a563addceb258962b93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18041, "upload_time": "2020-02-26T16:45:48", "upload_time_iso_8601": "2020-02-26T16:45:48.153453Z", "url": "https://files.pythonhosted.org/packages/f1/ee/88871fcab44ffb134896748d97d4fe67d712548464bb8ef416cbb739f6df/cookie_manager-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc25a2fb95bc7dbb3ced5780c2927a86", "sha256": "0e42f191011c87d4d1a750abdcb67731067da56e828b159ee94faac4ff4b9873"}, "downloads": -1, "filename": "cookie-manager-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dc25a2fb95bc7dbb3ced5780c2927a86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4660, "upload_time": "2020-02-26T16:45:49", "upload_time_iso_8601": "2020-02-26T16:45:49.483526Z", "url": "https://files.pythonhosted.org/packages/e9/01/8a51d327e612cd3bbe961ce9c3f5883ab8c3ba559925685da453ad90bdb5/cookie-manager-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "16955a37b1b3fe65a1652aeec8057c4c", "sha256": "8339739ccd35d195241c9ccbc1456e689b4e1d04aec652abc30bc8a3eabf51e8"}, "downloads": -1, "filename": "cookie_manager-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "16955a37b1b3fe65a1652aeec8057c4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19710, "upload_time": "2020-02-27T15:59:16", "upload_time_iso_8601": "2020-02-27T15:59:16.886807Z", "url": "https://files.pythonhosted.org/packages/89/08/6fa08619413f7aa85668077498805834e6ac4e76ef54ca5a5e64e69b4a1a/cookie_manager-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b94f2da902b00a715852d1a3154cda89", "sha256": "940217a2fd8c961d5b0be9a664eb0297a5b5b2e13d6ce7776e35e158bc17d5f6"}, "downloads": -1, "filename": "cookie-manager-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b94f2da902b00a715852d1a3154cda89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6568, "upload_time": "2020-02-27T15:59:18", "upload_time_iso_8601": "2020-02-27T15:59:18.638985Z", "url": "https://files.pythonhosted.org/packages/18/90/24c5eaac1fbab157ef1726767c41424ac75388123f99d43a589d4a3e0885/cookie-manager-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "608e3d7560665c9f68cf639811bc4b58", "sha256": "a40885b4de303a7c33834e5b919100d9ded23e6e174c561b6e00122f492d5dee"}, "downloads": -1, "filename": "cookie_manager-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "608e3d7560665c9f68cf639811bc4b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19729, "upload_time": "2020-02-28T08:42:22", "upload_time_iso_8601": "2020-02-28T08:42:22.093145Z", "url": "https://files.pythonhosted.org/packages/b6/ec/8872d1c5028b0386b409b42503e278b6e5a92656ced48d54ab60a25a2f4b/cookie_manager-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9238b3760c739e92f2c0fd9d11f5ac5", "sha256": "22f8d777cc0151732c6a1439700bc0583911edae0adf247826f660acd3ba572a"}, "downloads": -1, "filename": "cookie-manager-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f9238b3760c739e92f2c0fd9d11f5ac5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6613, "upload_time": "2020-02-28T08:42:24", "upload_time_iso_8601": "2020-02-28T08:42:24.596445Z", "url": "https://files.pythonhosted.org/packages/e9/06/6b669a794331092369d054d6919b44d11b4f63cfe1ee40c16fff3fe9cb4b/cookie-manager-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "251183325f93a0c3f3a820201621e2f8", "sha256": "0a339428f77709f74e1624d56c8f41759d5a3ddf790ecb592a39eaea1a976586"}, "downloads": -1, "filename": "cookie_manager-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "251183325f93a0c3f3a820201621e2f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19798, "upload_time": "2020-02-28T13:32:37", "upload_time_iso_8601": "2020-02-28T13:32:37.027366Z", "url": "https://files.pythonhosted.org/packages/13/b1/e0b10d24e8192d5a8497553613b26b41c9e490e93820fbd3599b0c9c6484/cookie_manager-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79365f7fbde2fb53d8284ac31bd80f2e", "sha256": "a54efa4b8bf1e8048e517a560cb190d069297cbd32091c488862a93a6ca112cf"}, "downloads": -1, "filename": "cookie-manager-1.0.2.tar.gz", "has_sig": false, "md5_digest": "79365f7fbde2fb53d8284ac31bd80f2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6636, "upload_time": "2020-02-28T13:32:38", "upload_time_iso_8601": "2020-02-28T13:32:38.721670Z", "url": "https://files.pythonhosted.org/packages/cc/ca/aedd7dbef1aad7c6d91f6b15fcf067caf3886d700efb4012ef6ba3c7fd3e/cookie-manager-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "b8f0880487a848ddadce1d07a983c1d8", "sha256": "01a63995dc775035e7d5a6dd17639211b2056b711889a3efd7d5f8fd83975a24"}, "downloads": -1, "filename": "cookie_manager-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b8f0880487a848ddadce1d07a983c1d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19803, "upload_time": "2020-03-26T13:48:40", "upload_time_iso_8601": "2020-03-26T13:48:40.023794Z", "url": "https://files.pythonhosted.org/packages/b3/a0/7f8464b5dc18a0ef0a5489ab21c0b2d496116635c6a1e914f2c1d88b5e8b/cookie_manager-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fea169ceb329382d3bb692680248126e", "sha256": "b62952b4c8f687ce4eccde0e77f58f5595329f0e4b894011b173f03e84c26cc2"}, "downloads": -1, "filename": "cookie-manager-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fea169ceb329382d3bb692680248126e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6661, "upload_time": "2020-03-26T13:49:03", "upload_time_iso_8601": "2020-03-26T13:49:03.478786Z", "url": "https://files.pythonhosted.org/packages/14/1a/ba7548429f2cc73fbbb5e65a33cd48b10012501cd1fb315c3a9660b9e91f/cookie-manager-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "56ab5d784c410ed138a568594e80ca6e", "sha256": "31dd7a2080656364720573896ebd09109cbe91db8f45cc89787202c1e2bfbd10"}, "downloads": -1, "filename": "cookie_manager-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56ab5d784c410ed138a568594e80ca6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19811, "upload_time": "2020-04-06T07:48:01", "upload_time_iso_8601": "2020-04-06T07:48:01.919467Z", "url": "https://files.pythonhosted.org/packages/8d/e2/9652012cff011180e3828bc63aa14d6520658f29c4e9b19a1afca29d9dc9/cookie_manager-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4b96f770677640d41fa99a031f198bb", "sha256": "87b06cf9804e4b177e815697394e26032276738312876e7340d5be112ad4b995"}, "downloads": -1, "filename": "cookie-manager-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f4b96f770677640d41fa99a031f198bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6683, "upload_time": "2020-04-06T07:48:03", "upload_time_iso_8601": "2020-04-06T07:48:03.570259Z", "url": "https://files.pythonhosted.org/packages/56/b3/ea77395b5e370389125e85d2a5265c7978a179a5ac188de3d1073f4d85c9/cookie-manager-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56ab5d784c410ed138a568594e80ca6e", "sha256": "31dd7a2080656364720573896ebd09109cbe91db8f45cc89787202c1e2bfbd10"}, "downloads": -1, "filename": "cookie_manager-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56ab5d784c410ed138a568594e80ca6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19811, "upload_time": "2020-04-06T07:48:01", "upload_time_iso_8601": "2020-04-06T07:48:01.919467Z", "url": "https://files.pythonhosted.org/packages/8d/e2/9652012cff011180e3828bc63aa14d6520658f29c4e9b19a1afca29d9dc9/cookie_manager-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4b96f770677640d41fa99a031f198bb", "sha256": "87b06cf9804e4b177e815697394e26032276738312876e7340d5be112ad4b995"}, "downloads": -1, "filename": "cookie-manager-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f4b96f770677640d41fa99a031f198bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6683, "upload_time": "2020-04-06T07:48:03", "upload_time_iso_8601": "2020-04-06T07:48:03.570259Z", "url": "https://files.pythonhosted.org/packages/56/b3/ea77395b5e370389125e85d2a5265c7978a179a5ac188de3d1073f4d85c9/cookie-manager-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:23 2020"}