{"info": {"author": "Kevin Bieri", "author_email": "mailto:info@4teamwork.ch", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 4.3", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\n.. contents:: Table of Contents\n\nThis package provides a javascript library to make gallery overlays such as `Lightbox <http://www.jacklmoore.com/colorbox/example1/>`_.\nBut the main difference is that you have full control over the rendering and fetching of gallery items.\n\nThe gallery is able to notify if the user has reached the first or last item. This can be useful when more items\nshould be loaded as a batch.\n\nThe items of the gallery can be extended or reset.\n\nThe gallery always tracks the active item.\n\nAn API provides a way to control the gallery from outside.\n\n\nInstallation\n------------\n\nAdd the package as dependency to your setup.py:\n\n.. code:: python\n\n  setup(...\n        install_requires=[\n          'ftw.showroom',\n        ])\n\nor to your buildout configuration:\n\n.. code:: ini\n\n  [instance]\n  eggs += ftw.showroom\n\nand rerun buildout.\n\nInstall the Generic Setup profile.\n\nCompatibility\n-------------\n\nPlone 4.3\n\n.. image:: https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Plone-logo.svg/2000px-Plone-logo.svg.png\n   :target: https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Plone-logo.svg/2000px-Plone-logo.svg.png\n   :height: 50px\n\nJavaScript development\n======================\n\nBuilding\n--------\n\nRebuilding the library (resources/javascript.js):\n\n.. code-block:: bash\n\n    grunt build\n\nWatching for changes and rebuild the bundle automatically:\n\n.. code-block:: bash\n\n    grunt watch\n\nor the default task\n\n.. code-block:: bash\n\n    grunt watch\n\nTesting\n-------\n\nRunning all test:\n\n.. code-block:: bash\n\n    npm test\n\nor\n\n.. code-block:: bash\n\n    grunt test\n\nRunning a specific test:\n\n.. code-block:: bash\n\n    grunt test --grep=\"Name of your test\"\n\nLinks\n-----\n\n- Github: https://github.com/4teamwork/ftw.showroom\n- Issues: https://github.com/4teamwork/ftw.showroom/issues\n- Pypi: http://pypi.python.org/pypi/ftw.showroom\n- Continuous integration: https://jenkins.4teamwork.ch/search?q=ftw.showroom\n\n\nCopyright\n----------\n\nThis package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.\n\n``ftw.showroom`` is licensed under GNU General Public License, version 2.\n\nClient library\n==============\n\nGetting Started\n---------------\n\nThe client library depends on `Grunt <http://gruntjs.com/>`_. Assuming\nyou already have **Node.js** installed on your system, run the following command:\n\n.. code:: bash\n\n  sudo npm install -g grunt\n\nTo install the dependencies, run the following command:\n\n.. code:: bash\n\n  npm install\n\nAnd with **npm** you get the following packages:\n\n- `Grunt <http://gruntjs.com/>`_ - JavaScript task runner.\n- `Babel <https://babeljs.io/>`_ - ES6 Transpiler.\n- `Browserify <http://browserify.org/>`_ - Dependency Bundler\n- `Karma <http://karma-runner.github.io/>`_ - JavaScript test runner.\n- `Jasmine <http://jasmine.github.io/>`_ - JavaScript test suite.\n- `Chai <http://chaijs.com/>`_ - JavaScript Assertion Library.\n\nUsage\n-----\n\nRun the following command to re-build the library:\n\n.. code:: bash\n\n  grunt build\n\nRun the following command to watch for changes which trigger a rebuild:\n\n.. code:: bash\n\n  grunt\n\nBuild options\n-------------\n\nSee https://github.com/substack/browserify-handbook for more information about browserify.\n\nSource Maps\n-----------\n\nBrowserify comes with a built-in support to generate source maps. It is already enabled by default, but feel free to disable source maps. Refer to `this article <https://developers.google.com/chrome-developer-tools/docs/javascript-debugging#source-maps>`_\nto enable source maps in Google Chrome, if you haven't already done so.\n\nTests\n-----\n\nRun all tests\n\n.. code:: bash\n\n  grunt test\n\nRun a specific test\n\n.. code:: bash\n\n  grunt test --grep=\"Name of your test\"\n\nInitialization\n--------------\n\nCreates an empty showroom instance with default options\n\n.. code:: javascript\n\n  let showroom = Showroom();\n\nThe showroom constructor accepts a `NodeList <https://developer.mozilla.org/en/docs/Web/API/NodeList>`_ or a `jQuery <http://api.jquery.com/jquery/>`_.\nThe items can provide a target as an HTML data attribute (**data-showroom-target**) to define the endpoint where the item will fetch its content from.\nTo make a title visible in the overlay provide a title as an HTML data attribute  (**data-showroom-title**).\n\n.. code:: HTML\n\n  <ul>\n    <li class=\"item\"\n        data-showroom-target=\"http://target.com/1\"\n        data-showroom-title=\"title-1\">\n      <a>Item 1</a>\n    </li>\n    <li class=\"item\"\n        data-showroom-target=\"http://target.com/2\"\n        data-showroom-title=\"title-2\">\n      <a>Item 2</a>\n    </li>\n  </ul>\n\n.. code:: javascript\n\n  let items = document.querySelectorAll(\".item\");\n  let showroom = Showroom(items);\n\nor\n\n.. code:: javascript\n\n  let items = $(\".item\");\n  let showroom = Showroom(items);\n\nConfiguration\n-------------\n\nThe showrooms provide the following options.\n\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| Option        | Default                  | Description                                                              |\n+===============+==========================+==========================================================================+\n| cssClass      | \"ftw-showroom\"           | Class attribute on the root element of the gallery                       |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| render        | See rendering_. section  | Override the default render behavior                                     |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| tail          | Empty function           | Called when the user reaches the last element of the gallery             |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| head          | Empty function           | Is getting called when the user reaches the first element of the gallery |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| fetch         | See fetching_. section   | Override the default fetch behavior                                      |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| beforeRender  | noop                     | Hook to augment the item for example                                     |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| template      | See template section     | Override the default gallery template                                    |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| target        | body Element             | Define a selector where the gallery will be attached                     |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n| offset        | 0                        | Offset for the current item counter, useful for batches                  |\n+---------------+--------------------------+--------------------------------------------------------------------------+\n\n.. _events:\n\nEvents\n------\n\nftw.showroom fires the following events on `document`:\n\n+---------------------+----------+-----------------------------------------------------------------------------------------------------------+\n| Event               | Params   | Description                                                                                               |\n+=====================+==========+===========================================================================================================+\n| showroom:item:shown | showroom | Invoked every time an item is shown, so if showroom opens, every time the selected showroom item changes. |\n+---------------------+----------+-----------------------------------------------------------------------------------------------------------+\n\nTo listen to an event use the following code:\n\n.. code:: javascript\n\n  $(document).on('showroom:item:shown', function (showroom) {\n    // do something with the showroom/item\n  })\n\n\n.. _fetching:\n\nFetching\n--------\n\nThe default fetching function uses the target provided by each item to make an AJAX call to retrieve its content.\n\n.. code:: javascript\n\n  function fetch(item) { return $.get(item.target); };\n\nThis function can be overridden, see Configuration_.\n\n.. code:: javascript\n\n  let showroom = Showroom(items,\n    {\n      fetch: (item) => { return \"<p>Some other content</p>\"; }\n    }\n  );\n\n\n.. _rendering:\n\nRendering\n---------\n\nThe default rendering function returns an HTML string using the default `Handlebars <http://handlebarsjs.com/>`_ template\npadding the internal showroom data, the prefeteched content and the active item.\n\n.. code:: javascript\n\n  function render(content) {\n    return $.when(content).pipe((content) => {\n      return $(template({ showroom: data, content: content, item: register.current }));\n    });\n  }\n\nThis function can be overridden, see Configuration_.\n\n.. code:: javascript\n\n  let showroom = Showroom(items,\n    {\n      render: (content) => { return $(template()); }\n    }\n  );\n\nReferences\n----------\n\nReferences are useful if you want to open a showroom item that is referenced by more than one element on the same page.\nYou just have to add the **showroom-reference** class and the **data-showroom-target-item** attribute to make the connection.\nThe **data-showroom-target-item** attribute contains an id which references a showroom item on the page.\nYou have to set the **data-showroom-id** by manually on the showroom item to make the connection with the reference.\n\nThere is currently no interface to make the connection manually.\nBut you have to call `showroom.refresh()` to refresh the references.\n\n.. code:: html\n\n  <!-- The showroom item -->\n\n  <a href=\"#\"\n    class=\"showroom-item\"\n    data-showroom-id=\"your-unique-id\"\n    data-showroom-target=\"http://www.example.com\"\n    data-showroom-title=\"Example\">Example<a/>\n\n  <!-- The reference (a link in that case) -->\n\n  <a class=\"showroom-reference\"\n     data-showroom-target-item=\"your-unique-id\"></a>\n\nAPI\n---\n\n**Showroom.open**\n\nOpens a specific item. If no item is specified the showroom tries to show the first in the store\notherwise it does nothing.\n\n.. code:: javascript\n\n  showroom.open();\n\nor\n\n.. code:: javascript\n\n  showroom.open(item);\n\n------------\n\n**Showroom.close**\n\nCloses the overlay by hiding the element.\n\n.. code:: javascript\n\n  showroom.close();\n\n------------\n\n**Showroom.next**\n\nOpens the next item in the item queue. When the pointer reaches the last item the showroom does nothing.\n\n.. code:: javascript\n\n  showroom.next();\n\n------------\n\n**Showroom.prev**\n\nOpens the previous item in the item queue. When the pointer reaches the first item the showroom does nothing.\n\n.. code:: javascript\n\n  showroom.prev();\n\n------------\n\n**Showroom.append**\n\nExtend the current item queue with new items. The items are appended at the end of the queue.\nThe pointer remains unaffected.\nThe append method accepts a `NodeList <https://developer.mozilla.org/en/docs/Web/API/NodeList>`_ or a `jQuery <http://api.jquery.com/jquery/>`_\n\n.. code:: javascript\n\n  let newItems = document.querySelectorAll(\".newItems\");\n  showroom.append(newItems);\n\nor\n\n.. code:: javascript\n\n  let newItems = $(\".newItems\");\n  showroom.append(newItems);\n\n------------\n\n**Showroom.prepend**\n\nExtend the current item queue with new items, similar to the ``append`` method, but the items are prepended at the beginning of the queue.\nThe pointer remains unaffected.\nThe prepend method accepts a `NodeList <https://developer.mozilla.org/en/docs/Web/API/NodeList>`_ or a `jQuery <http://api.jquery.com/jquery/>`_\n\n.. code:: javascript\n\n  let newItems = document.querySelectorAll(\".newItems\");\n  showroom.prepend(newItems);\n\nor\n\n.. code:: javascript\n\n  let newItems = $(\".newItems\");\n  showroom.prepend(newItems);\n\n------------\n\n**Showroom.reset**\n\nReset the current item store with new items. The overlay will be closed and the pointer set to `0`.\nTo empty the item store reset with no arguments.\n\n.. code:: javascript\n\n  let newItems = document.querySelectorAll(\".newItems\");\n  showroom.reset(newItems);\n\nor\n\n.. code:: javascript\n\n  let newItems = document.querySelectorAll(\".newItems\");\n  showroom.reset();\n\n------------\n\n**Showroom.destroy**\n\nAfter destroying the showroom is no longer able to open any items. The store will be reset and the marker class removed.\nThe overlay will be closed as well.\nAll items will loose their `data-showroom-id`.\n\n.. code:: javascript\n\n\n  showroom.destroy();\n\n------------\n\n**Showroom.setTotal**\n\nUpdates the total value and rerenders the opened overlay.\nThe method does only allow numeric values.\n\n.. code:: javascript\n\n  showroom.setTotal(34);\n\n------------\n\n**Showroom.setOffset**\n\nUpdates the offset. Prevents negative offsets.\nThe method does only allow numeric values.\n\n.. code:: javascript\n\n  showroom.setOffset(42);\n\n------------\n\n**Showroom.refresh**\n\nRefreshes the showroom references.\n\n.. code:: javascript\n\n  showroom.refresh();\n\nChangelog\n=========\n\n1.5.1 (2018-03-12)\n------------------\n\n- 1.5.0 Did not work properly, since the dist command was not executed. [mathias.leimgruber]\n\n\n1.5.0 (2018-03-08)\n------------------\n\n- Introduce \"showroom:item:shown\" event\n\n\n1.4.0 (2017-07-11)\n------------------\n\n- Introduce before render hook. [Kevin Bieri]\n\n\n1.3.1 (2016-11-02)\n------------------\n\n- Introduce uninstall profile\n  [Kevin Bieri]\n\n- Introduce upgrade steps\n  [Kevin Bieri]\n\n- Cleanup version pinnings\n  [Kevin Bieri]\n\n\n1.3.0 (2016-10-18)\n------------------\n\n- Refactor event binding using event delegation.\n  Since these changes all the showroom items must have `showroom-item` class\n  Therefore manually refreshing events is no longer necessary\n  [Kevin Bieri]\n\n\n1.2.1 (2016-08-29)\n------------------\n\n- Prevent register#set from calling tail twice\n  [Kevin Bieri]\n\n\n1.2.0 (2016-08-23)\n------------------\n\n- Make template configurable\n  [Kevin Bieri]\n\n- Introduce showroom references\n  [Kevin Bieri]\n\n- Provide offset option for showroom.\n  The offset is added to the current number and allows to display correct\n  item number for batched items.\n  [deiferni]\n\n\n1.1.1 (2016-07-04)\n------------------\n\n- Fix unordered list styles.\n  [Kevin Bieri]\n\n\n1.1.0 (2016-06-27)\n------------------\n\n- Provide option to prepend items to the showroom queue.\n  [phgross]\n\n\n1.0.0 (2016-05-24)\n------------------\n\n- Nothing changed yet", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/4teamwork/ftw.showroom", "keywords": "ftw plone showroom", "license": "GPL2", "maintainer": "", "maintainer_email": "", "name": "ftw.showroom", "package_url": "https://pypi.org/project/ftw.showroom/", "platform": "", "project_url": "https://pypi.org/project/ftw.showroom/", "project_urls": {"Homepage": "https://github.com/4teamwork/ftw.showroom"}, "release_url": "https://pypi.org/project/ftw.showroom/1.5.1/", "requires_dist": null, "requires_python": "", "summary": "Javascript library to make gallery overlays", "version": "1.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Introduction</a></h2>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id19\" rel=\"nofollow\">Introduction</a><ul>\n<li><a href=\"#installation\" id=\"id20\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#compatibility\" id=\"id21\" rel=\"nofollow\">Compatibility</a></li>\n</ul>\n</li>\n<li><a href=\"#javascript-development\" id=\"id22\" rel=\"nofollow\">JavaScript development</a><ul>\n<li><a href=\"#building\" id=\"id23\" rel=\"nofollow\">Building</a></li>\n<li><a href=\"#testing\" id=\"id24\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"#links\" id=\"id25\" rel=\"nofollow\">Links</a></li>\n<li><a href=\"#copyright\" id=\"id26\" rel=\"nofollow\">Copyright</a></li>\n</ul>\n</li>\n<li><a href=\"#client-library\" id=\"id27\" rel=\"nofollow\">Client library</a><ul>\n<li><a href=\"#getting-started\" id=\"id28\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#usage\" id=\"id29\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#build-options\" id=\"id30\" rel=\"nofollow\">Build options</a></li>\n<li><a href=\"#source-maps\" id=\"id31\" rel=\"nofollow\">Source Maps</a></li>\n<li><a href=\"#tests\" id=\"id32\" rel=\"nofollow\">Tests</a></li>\n<li><a href=\"#initialization\" id=\"id33\" rel=\"nofollow\">Initialization</a></li>\n<li><a href=\"#configuration\" id=\"id34\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#id2\" id=\"id35\" rel=\"nofollow\">Events</a></li>\n<li><a href=\"#id3\" id=\"id36\" rel=\"nofollow\">Fetching</a></li>\n<li><a href=\"#id4\" id=\"id37\" rel=\"nofollow\">Rendering</a></li>\n<li><a href=\"#references\" id=\"id38\" rel=\"nofollow\">References</a></li>\n<li><a href=\"#api\" id=\"id39\" rel=\"nofollow\">API</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id40\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id9\" id=\"id41\" rel=\"nofollow\">1.5.1 (2018-03-12)</a></li>\n<li><a href=\"#id10\" id=\"id42\" rel=\"nofollow\">1.5.0 (2018-03-08)</a></li>\n<li><a href=\"#id11\" id=\"id43\" rel=\"nofollow\">1.4.0 (2017-07-11)</a></li>\n<li><a href=\"#id12\" id=\"id44\" rel=\"nofollow\">1.3.1 (2016-11-02)</a></li>\n<li><a href=\"#id13\" id=\"id45\" rel=\"nofollow\">1.3.0 (2016-10-18)</a></li>\n<li><a href=\"#id14\" id=\"id46\" rel=\"nofollow\">1.2.1 (2016-08-29)</a></li>\n<li><a href=\"#id15\" id=\"id47\" rel=\"nofollow\">1.2.0 (2016-08-23)</a></li>\n<li><a href=\"#id16\" id=\"id48\" rel=\"nofollow\">1.1.1 (2016-07-04)</a></li>\n<li><a href=\"#id17\" id=\"id49\" rel=\"nofollow\">1.1.0 (2016-06-27)</a></li>\n<li><a href=\"#id18\" id=\"id50\" rel=\"nofollow\">1.0.0 (2016-05-24)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>This package provides a javascript library to make gallery overlays such as <a href=\"http://www.jacklmoore.com/colorbox/example1/\" rel=\"nofollow\">Lightbox</a>.\nBut the main difference is that you have full control over the rendering and fetching of gallery items.</p>\n<p>The gallery is able to notify if the user has reached the first or last item. This can be useful when more items\nshould be loaded as a batch.</p>\n<p>The items of the gallery can be extended or reset.</p>\n<p>The gallery always tracks the active item.</p>\n<p>An API provides a way to control the gallery from outside.</p>\n<div id=\"installation\">\n<h3><a href=\"#id20\" rel=\"nofollow\">Installation</a></h3>\n<p>Add the package as dependency to your setup.py:</p>\n<pre><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"o\">...</span>\n      <span class=\"n\">install_requires</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">'ftw.showroom'</span><span class=\"p\">,</span>\n      <span class=\"p\">])</span>\n</pre>\n<p>or to your buildout configuration:</p>\n<pre><span class=\"k\">[instance]</span>\n<span class=\"na\">eggs +</span><span class=\"o\">=</span> <span class=\"s\">ftw.showroom</span>\n</pre>\n<p>and rerun buildout.</p>\n<p>Install the Generic Setup profile.</p>\n</div>\n<div id=\"compatibility\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Compatibility</a></h3>\n<p>Plone 4.3</p>\n<a href=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Plone-logo.svg/2000px-Plone-logo.svg.png\" rel=\"nofollow\"><img alt=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Plone-logo.svg/2000px-Plone-logo.svg.png\" height=\"50px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ae67b54895b1870e8ed9a5a3f4cb5cd515e237a/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f642f64662f506c6f6e652d6c6f676f2e7376672f3230303070782d506c6f6e652d6c6f676f2e7376672e706e67\"></a>\n</div>\n</div>\n<div id=\"javascript-development\">\n<h2><a href=\"#id22\" rel=\"nofollow\">JavaScript development</a></h2>\n<div id=\"building\">\n<h3><a href=\"#id23\" rel=\"nofollow\">Building</a></h3>\n<p>Rebuilding the library (resources/javascript.js):</p>\n<pre>grunt build\n</pre>\n<p>Watching for changes and rebuild the bundle automatically:</p>\n<pre>grunt watch\n</pre>\n<p>or the default task</p>\n<pre>grunt watch\n</pre>\n</div>\n<div id=\"testing\">\n<h3><a href=\"#id24\" rel=\"nofollow\">Testing</a></h3>\n<p>Running all test:</p>\n<pre>npm <span class=\"nb\">test</span>\n</pre>\n<p>or</p>\n<pre>grunt <span class=\"nb\">test</span>\n</pre>\n<p>Running a specific test:</p>\n<pre>grunt <span class=\"nb\">test</span> --grep<span class=\"o\">=</span><span class=\"s2\">\"Name of your test\"</span>\n</pre>\n</div>\n<div id=\"links\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Links</a></h3>\n<ul>\n<li>Github: <a href=\"https://github.com/4teamwork/ftw.showroom\" rel=\"nofollow\">https://github.com/4teamwork/ftw.showroom</a></li>\n<li>Issues: <a href=\"https://github.com/4teamwork/ftw.showroom/issues\" rel=\"nofollow\">https://github.com/4teamwork/ftw.showroom/issues</a></li>\n<li>Pypi: <a href=\"http://pypi.python.org/pypi/ftw.showroom\" rel=\"nofollow\">http://pypi.python.org/pypi/ftw.showroom</a></li>\n<li>Continuous integration: <a href=\"https://jenkins.4teamwork.ch/search?q=ftw.showroom\" rel=\"nofollow\">https://jenkins.4teamwork.ch/search?q=ftw.showroom</a></li>\n</ul>\n</div>\n<div id=\"copyright\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Copyright</a></h3>\n<p>This package is copyright by <a href=\"http://www.4teamwork.ch/\" rel=\"nofollow\">4teamwork</a>.</p>\n<p><tt>ftw.showroom</tt> is licensed under GNU General Public License, version 2.</p>\n</div>\n</div>\n<div id=\"client-library\">\n<h2><a href=\"#id27\" rel=\"nofollow\">Client library</a></h2>\n<div id=\"getting-started\">\n<h3><a href=\"#id28\" rel=\"nofollow\">Getting Started</a></h3>\n<p>The client library depends on <a href=\"http://gruntjs.com/\" rel=\"nofollow\">Grunt</a>. Assuming\nyou already have <strong>Node.js</strong> installed on your system, run the following command:</p>\n<pre>sudo npm install -g grunt\n</pre>\n<p>To install the dependencies, run the following command:</p>\n<pre>npm install\n</pre>\n<p>And with <strong>npm</strong> you get the following packages:</p>\n<ul>\n<li><a href=\"http://gruntjs.com/\" rel=\"nofollow\">Grunt</a> - JavaScript task runner.</li>\n<li><a href=\"https://babeljs.io/\" rel=\"nofollow\">Babel</a> - ES6 Transpiler.</li>\n<li><a href=\"http://browserify.org/\" rel=\"nofollow\">Browserify</a> - Dependency Bundler</li>\n<li><a href=\"http://karma-runner.github.io/\" rel=\"nofollow\">Karma</a> - JavaScript test runner.</li>\n<li><a href=\"http://jasmine.github.io/\" rel=\"nofollow\">Jasmine</a> - JavaScript test suite.</li>\n<li><a href=\"http://chaijs.com/\" rel=\"nofollow\">Chai</a> - JavaScript Assertion Library.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id29\" rel=\"nofollow\">Usage</a></h3>\n<p>Run the following command to re-build the library:</p>\n<pre>grunt build\n</pre>\n<p>Run the following command to watch for changes which trigger a rebuild:</p>\n<pre>grunt\n</pre>\n</div>\n<div id=\"build-options\">\n<h3><a href=\"#id30\" rel=\"nofollow\">Build options</a></h3>\n<p>See <a href=\"https://github.com/substack/browserify-handbook\" rel=\"nofollow\">https://github.com/substack/browserify-handbook</a> for more information about browserify.</p>\n</div>\n<div id=\"source-maps\">\n<h3><a href=\"#id31\" rel=\"nofollow\">Source Maps</a></h3>\n<p>Browserify comes with a built-in support to generate source maps. It is already enabled by default, but feel free to disable source maps. Refer to <a href=\"https://developers.google.com/chrome-developer-tools/docs/javascript-debugging#source-maps\" rel=\"nofollow\">this article</a>\nto enable source maps in Google Chrome, if you haven\u2019t already done so.</p>\n</div>\n<div id=\"tests\">\n<h3><a href=\"#id32\" rel=\"nofollow\">Tests</a></h3>\n<p>Run all tests</p>\n<pre>grunt <span class=\"nb\">test</span>\n</pre>\n<p>Run a specific test</p>\n<pre>grunt <span class=\"nb\">test</span> --grep<span class=\"o\">=</span><span class=\"s2\">\"Name of your test\"</span>\n</pre>\n</div>\n<div id=\"initialization\">\n<h3><a href=\"#id33\" rel=\"nofollow\">Initialization</a></h3>\n<p>Creates an empty showroom instance with default options</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">showroom</span> <span class=\"o\">=</span> <span class=\"nx\">Showroom</span><span class=\"p\">();</span>\n</pre>\n<p>The showroom constructor accepts a <a href=\"https://developer.mozilla.org/en/docs/Web/API/NodeList\" rel=\"nofollow\">NodeList</a> or a <a href=\"http://api.jquery.com/jquery/\" rel=\"nofollow\">jQuery</a>.\nThe items can provide a target as an HTML data attribute (<strong>data-showroom-target</strong>) to define the endpoint where the item will fetch its content from.\nTo make a title visible in the overlay provide a title as an HTML data attribute  (<strong>data-showroom-title</strong>).</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"item\"</span>\n      <span class=\"na\">data-showroom-target</span><span class=\"o\">=</span><span class=\"s\">\"http://target.com/1\"</span>\n      <span class=\"na\">data-showroom-title</span><span class=\"o\">=</span><span class=\"s\">\"title-1\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>Item 1<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"item\"</span>\n      <span class=\"na\">data-showroom-target</span><span class=\"o\">=</span><span class=\"s\">\"http://target.com/2\"</span>\n      <span class=\"na\">data-showroom-title</span><span class=\"o\">=</span><span class=\"s\">\"title-2\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>Item 2<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">items</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelectorAll</span><span class=\"p\">(</span><span class=\"s2\">\".item\"</span><span class=\"p\">);</span>\n<span class=\"kd\">let</span> <span class=\"nx\">showroom</span> <span class=\"o\">=</span> <span class=\"nx\">Showroom</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">);</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">items</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\".item\"</span><span class=\"p\">);</span>\n<span class=\"kd\">let</span> <span class=\"nx\">showroom</span> <span class=\"o\">=</span> <span class=\"nx\">Showroom</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">);</span>\n</pre>\n</div>\n<div id=\"configuration\">\n<h3><a href=\"#id34\" rel=\"nofollow\">Configuration</a></h3>\n<p>The showrooms provide the following options.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Option</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>cssClass</td>\n<td>\u201cftw-showroom\u201d</td>\n<td>Class attribute on the root element of the gallery</td>\n</tr>\n<tr><td>render</td>\n<td>See <a href=\"#rendering\" rel=\"nofollow\">rendering</a>. section</td>\n<td>Override the default render behavior</td>\n</tr>\n<tr><td>tail</td>\n<td>Empty function</td>\n<td>Called when the user reaches the last element of the gallery</td>\n</tr>\n<tr><td>head</td>\n<td>Empty function</td>\n<td>Is getting called when the user reaches the first element of the gallery</td>\n</tr>\n<tr><td>fetch</td>\n<td>See <a href=\"#fetching\" rel=\"nofollow\">fetching</a>. section</td>\n<td>Override the default fetch behavior</td>\n</tr>\n<tr><td>beforeRender</td>\n<td>noop</td>\n<td>Hook to augment the item for example</td>\n</tr>\n<tr><td>template</td>\n<td>See template section</td>\n<td>Override the default gallery template</td>\n</tr>\n<tr><td>target</td>\n<td>body Element</td>\n<td>Define a selector where the gallery will be attached</td>\n</tr>\n<tr><td>offset</td>\n<td>0</td>\n<td>Offset for the current item counter, useful for batches</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"id2\">\n<span id=\"events\"></span><h3><a href=\"#id35\" rel=\"nofollow\">Events</a></h3>\n<p>ftw.showroom fires the following events on <cite>document</cite>:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Event</th>\n<th>Params</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>showroom:item:shown</td>\n<td>showroom</td>\n<td>Invoked every time an item is shown, so if showroom opens, every time the selected showroom item changes.</td>\n</tr>\n</tbody>\n</table>\n<p>To listen to an event use the following code:</p>\n<pre><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'showroom:item:shown'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">showroom</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// do something with the showroom/item\n</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"id3\">\n<span id=\"fetching\"></span><h3><a href=\"#id36\" rel=\"nofollow\">Fetching</a></h3>\n<p>The default fetching function uses the target provided by each item to make an AJAX call to retrieve its content.</p>\n<pre><span class=\"kd\">function</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">);</span> <span class=\"p\">};</span>\n</pre>\n<p>This function can be overridden, see <a href=\"#configuration\" rel=\"nofollow\">Configuration</a>.</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">showroom</span> <span class=\"o\">=</span> <span class=\"nx\">Showroom</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">,</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">fetch</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"s2\">\"&lt;p&gt;Some other content&lt;/p&gt;\"</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">);</span>\n</pre>\n</div>\n<div id=\"id4\">\n<span id=\"rendering\"></span><h3><a href=\"#id37\" rel=\"nofollow\">Rendering</a></h3>\n<p>The default rendering function returns an HTML string using the default <a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">Handlebars</a> template\npadding the internal showroom data, the prefeteched content and the active item.</p>\n<pre><span class=\"kd\">function</span> <span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"nx\">content</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"nx\">content</span><span class=\"p\">).</span><span class=\"nx\">pipe</span><span class=\"p\">((</span><span class=\"nx\">content</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">({</span> <span class=\"nx\">showroom</span><span class=\"o\">:</span> <span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"nx\">content</span><span class=\"o\">:</span> <span class=\"nx\">content</span><span class=\"p\">,</span> <span class=\"nx\">item</span><span class=\"o\">:</span> <span class=\"nx\">register</span><span class=\"p\">.</span><span class=\"nx\">current</span> <span class=\"p\">}));</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This function can be overridden, see <a href=\"#configuration\" rel=\"nofollow\">Configuration</a>.</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">showroom</span> <span class=\"o\">=</span> <span class=\"nx\">Showroom</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">,</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">render</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">content</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">());</span> <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">);</span>\n</pre>\n</div>\n<div id=\"references\">\n<h3><a href=\"#id38\" rel=\"nofollow\">References</a></h3>\n<p>References are useful if you want to open a showroom item that is referenced by more than one element on the same page.\nYou just have to add the <strong>showroom-reference</strong> class and the <strong>data-showroom-target-item</strong> attribute to make the connection.\nThe <strong>data-showroom-target-item</strong> attribute contains an id which references a showroom item on the page.\nYou have to set the <strong>data-showroom-id</strong> by manually on the showroom item to make the connection with the reference.</p>\n<p>There is currently no interface to make the connection manually.\nBut you have to call <cite>showroom.refresh()</cite> to refresh the references.</p>\n<pre><span class=\"c\">&lt;!-- The showroom item --&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"#\"</span>\n  <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"showroom-item\"</span>\n  <span class=\"na\">data-showroom-id</span><span class=\"o\">=</span><span class=\"s\">\"your-unique-id\"</span>\n  <span class=\"na\">data-showroom-target</span><span class=\"o\">=</span><span class=\"s\">\"http://www.example.com\"</span>\n  <span class=\"na\">data-showroom-title</span><span class=\"o\">=</span><span class=\"s\">\"Example\"</span><span class=\"p\">&gt;</span>Example<span class=\"p\">&lt;</span><span class=\"nt\">a</span><span class=\"p\">/&gt;</span>\n\n<span class=\"c\">&lt;!-- The reference (a link in that case) --&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"showroom-reference\"</span>\n   <span class=\"na\">data-showroom-target-item</span><span class=\"o\">=</span><span class=\"s\">\"your-unique-id\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"api\">\n<h3><a href=\"#id39\" rel=\"nofollow\">API</a></h3>\n<p><strong>Showroom.open</strong></p>\n<p>Opens a specific item. If no item is specified the showroom tries to show the first in the store\notherwise it does nothing.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">();</span>\n</pre>\n<p>or</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">);</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.close</strong></p>\n<p>Closes the overlay by hiding the element.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">close</span><span class=\"p\">();</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.next</strong></p>\n<p>Opens the next item in the item queue. When the pointer reaches the last item the showroom does nothing.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">next</span><span class=\"p\">();</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.prev</strong></p>\n<p>Opens the previous item in the item queue. When the pointer reaches the first item the showroom does nothing.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">prev</span><span class=\"p\">();</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.append</strong></p>\n<p>Extend the current item queue with new items. The items are appended at the end of the queue.\nThe pointer remains unaffected.\nThe append method accepts a <a href=\"https://developer.mozilla.org/en/docs/Web/API/NodeList\" rel=\"nofollow\">NodeList</a> or a <a href=\"http://api.jquery.com/jquery/\" rel=\"nofollow\">jQuery</a></p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelectorAll</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">newItems</span><span class=\"p\">);</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">newItems</span><span class=\"p\">);</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.prepend</strong></p>\n<p>Extend the current item queue with new items, similar to the <tt>append</tt> method, but the items are prepended at the beginning of the queue.\nThe pointer remains unaffected.\nThe prepend method accepts a <a href=\"https://developer.mozilla.org/en/docs/Web/API/NodeList\" rel=\"nofollow\">NodeList</a> or a <a href=\"http://api.jquery.com/jquery/\" rel=\"nofollow\">jQuery</a></p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelectorAll</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">prepend</span><span class=\"p\">(</span><span class=\"nx\">newItems</span><span class=\"p\">);</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">prepend</span><span class=\"p\">(</span><span class=\"nx\">newItems</span><span class=\"p\">);</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.reset</strong></p>\n<p>Reset the current item store with new items. The overlay will be closed and the pointer set to <cite>0</cite>.\nTo empty the item store reset with no arguments.</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelectorAll</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">(</span><span class=\"nx\">newItems</span><span class=\"p\">);</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kd\">let</span> <span class=\"nx\">newItems</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelectorAll</span><span class=\"p\">(</span><span class=\"s2\">\".newItems\"</span><span class=\"p\">);</span>\n<span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.destroy</strong></p>\n<p>After destroying the showroom is no longer able to open any items. The store will be reset and the marker class removed.\nThe overlay will be closed as well.\nAll items will loose their <cite>data-showroom-id</cite>.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">destroy</span><span class=\"p\">();</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.setTotal</strong></p>\n<p>Updates the total value and rerenders the opened overlay.\nThe method does only allow numeric values.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">setTotal</span><span class=\"p\">(</span><span class=\"mi\">34</span><span class=\"p\">);</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.setOffset</strong></p>\n<p>Updates the offset. Prevents negative offsets.\nThe method does only allow numeric values.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">setOffset</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">);</span>\n</pre>\n<hr class=\"docutils\">\n<p><strong>Showroom.refresh</strong></p>\n<p>Refreshes the showroom references.</p>\n<pre><span class=\"nx\">showroom</span><span class=\"p\">.</span><span class=\"nx\">refresh</span><span class=\"p\">();</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id40\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id9\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.5.1 (2018-03-12)</a></h3>\n<ul>\n<li>1.5.0 Did not work properly, since the dist command was not executed. [mathias.leimgruber]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.5.0 (2018-03-08)</a></h3>\n<ul>\n<li>Introduce \u201cshowroom:item:shown\u201d event</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.4.0 (2017-07-11)</a></h3>\n<ul>\n<li>Introduce before render hook. [Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.3.1 (2016-11-02)</a></h3>\n<ul>\n<li>Introduce uninstall profile\n[Kevin Bieri]</li>\n<li>Introduce upgrade steps\n[Kevin Bieri]</li>\n<li>Cleanup version pinnings\n[Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id45\" rel=\"nofollow\">1.3.0 (2016-10-18)</a></h3>\n<ul>\n<li>Refactor event binding using event delegation.\nSince these changes all the showroom items must have <cite>showroom-item</cite> class\nTherefore manually refreshing events is no longer necessary\n[Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id46\" rel=\"nofollow\">1.2.1 (2016-08-29)</a></h3>\n<ul>\n<li>Prevent register#set from calling tail twice\n[Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id47\" rel=\"nofollow\">1.2.0 (2016-08-23)</a></h3>\n<ul>\n<li>Make template configurable\n[Kevin Bieri]</li>\n<li>Introduce showroom references\n[Kevin Bieri]</li>\n<li>Provide offset option for showroom.\nThe offset is added to the current number and allows to display correct\nitem number for batched items.\n[deiferni]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id48\" rel=\"nofollow\">1.1.1 (2016-07-04)</a></h3>\n<ul>\n<li>Fix unordered list styles.\n[Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id49\" rel=\"nofollow\">1.1.0 (2016-06-27)</a></h3>\n<ul>\n<li>Provide option to prepend items to the showroom queue.\n[phgross]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id50\" rel=\"nofollow\">1.0.0 (2016-05-24)</a></h3>\n<ul>\n<li>Nothing changed yet</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6573488, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0929a95dc2991d1b0300cb9be0aed7ec", "sha256": "a957b14c8fe53dfc2f7eeaf6755562c1b9694381ad138562cc0de33ea63685d4"}, "downloads": -1, "filename": "ftw.showroom-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0929a95dc2991d1b0300cb9be0aed7ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60647, "upload_time": "2016-05-24T16:12:31", "upload_time_iso_8601": "2016-05-24T16:12:31.688013Z", "url": "https://files.pythonhosted.org/packages/39/84/a0a64fcae84233560c2d249bf5f2d3e9cfc7deed6a26de521dc438b69f7a/ftw.showroom-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2a379c07f8a2df990c15f82a565079c9", "sha256": "6da3d9e40eb19d77a04db26bd2ab4933238e645ae6a8a10fd20115f9a6393e26"}, "downloads": -1, "filename": "ftw.showroom-1.1.0.zip", "has_sig": false, "md5_digest": "2a379c07f8a2df990c15f82a565079c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77649, "upload_time": "2016-06-27T15:14:05", "upload_time_iso_8601": "2016-06-27T15:14:05.833563Z", "url": "https://files.pythonhosted.org/packages/5b/e2/a1312c6483dca5bc552472f3d15055c148b17f3fd678d90beb4a3801fc46/ftw.showroom-1.1.0.zip", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b608f0679f2159baedba4014598ae98f", "sha256": "b4ca11a260983e8a9c497b7854da0b4f5baa14ea97cfa629f814d47c1ab58529"}, "downloads": -1, "filename": "ftw.showroom-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b608f0679f2159baedba4014598ae98f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65129, "upload_time": "2016-07-04T09:22:22", "upload_time_iso_8601": "2016-07-04T09:22:22.075766Z", "url": "https://files.pythonhosted.org/packages/cb/7f/f306010e6c2ee620358d0e9ec63dfea273a9130cbe6829ffcf86905e3502/ftw.showroom-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "77f02c7588418647a07a447ca81db4cb", "sha256": "5f17746b1e1b1c1b48380b869ff9951f568ed737c28fa3ad9c12ffaa4dc506d0"}, "downloads": -1, "filename": "ftw.showroom-1.2.0.zip", "has_sig": false, "md5_digest": "77f02c7588418647a07a447ca81db4cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81287, "upload_time": "2016-08-23T13:25:38", "upload_time_iso_8601": "2016-08-23T13:25:38.997217Z", "url": "https://files.pythonhosted.org/packages/e2/95/ed2915bb4e6093e964dbfe5a38446ce61048e84210e185ff1d1cf9e6d0a7/ftw.showroom-1.2.0.zip", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "b7faedcfcb608ee7db51de818847a7d4", "sha256": "aa44711ee8456042ace1d8be1925d95f4c62ce71fe9de9c988be99216f27a393"}, "downloads": -1, "filename": "ftw.showroom-1.2.1.zip", "has_sig": false, "md5_digest": "b7faedcfcb608ee7db51de818847a7d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81507, "upload_time": "2016-08-29T08:02:14", "upload_time_iso_8601": "2016-08-29T08:02:14.915168Z", "url": "https://files.pythonhosted.org/packages/af/aa/0e36c2e93ab91db08eeb06eeb1e4bed338d0a5e833b5e22f92607024dd99/ftw.showroom-1.2.1.zip", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "95cb8f73d3a512447a5c2decd3d26a47", "sha256": "a6d93f5317b31f8c7e53dc6f946ba244b6ac79658ada1011597e61afa0c6cba0"}, "downloads": -1, "filename": "ftw.showroom-1.3.0.tar.gz", "has_sig": false, "md5_digest": "95cb8f73d3a512447a5c2decd3d26a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67756, "upload_time": "2016-10-18T12:11:33", "upload_time_iso_8601": "2016-10-18T12:11:33.522382Z", "url": "https://files.pythonhosted.org/packages/7e/a2/70f61dc17b72ef878a098634c528428cb482a713d130917c908eabbf8a0e/ftw.showroom-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "23623e0fca0f530777aadd3218500bb5", "sha256": "d2f73c7398c21d8dbf6c6e0bd9ef6e7d6eae49795213672e2a680b478495ef71"}, "downloads": -1, "filename": "ftw.showroom-1.3.1.tar.gz", "has_sig": false, "md5_digest": "23623e0fca0f530777aadd3218500bb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64946, "upload_time": "2016-11-02T12:07:38", "upload_time_iso_8601": "2016-11-02T12:07:38.769762Z", "url": "https://files.pythonhosted.org/packages/68/5f/7760dc6dc2295ea391a6574a213e6dc712668fb51a6ced4ea3be1ee38dab/ftw.showroom-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "21712be453f6e74b28263d600a44b096", "sha256": "bf3a4a09e754676e2a2b56c09810f2c5f3133f1221ec04e93c1b8f096951aefe"}, "downloads": -1, "filename": "ftw.showroom-1.4.0.tar.gz", "has_sig": false, "md5_digest": "21712be453f6e74b28263d600a44b096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66923, "upload_time": "2017-07-11T09:39:12", "upload_time_iso_8601": "2017-07-11T09:39:12.191663Z", "url": "https://files.pythonhosted.org/packages/33/8f/5da118dd595356f1ad1bfb64012f21d68fa434d76192c225853aa550066c/ftw.showroom-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "d044a652ee6d7c68be5f97bd8ad7d6b9", "sha256": "df82f5b5272188c2a23abd23e68c0d625b9e2e2ed0db0753eb25cbd193ee1ad2"}, "downloads": -1, "filename": "ftw.showroom-1.5.0.tar.gz", "has_sig": false, "md5_digest": "d044a652ee6d7c68be5f97bd8ad7d6b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69067, "upload_time": "2018-03-08T12:34:31", "upload_time_iso_8601": "2018-03-08T12:34:31.700222Z", "url": "https://files.pythonhosted.org/packages/f1/e5/bffc6018ab785ee33146ee0427d0555f08ea31cda114d72023f555541bb0/ftw.showroom-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "8ceea385f529fce2ae3d96dd6f08adf6", "sha256": "949f8bbf5fe0254919858132b6f0d897ec9370410cbb8bb5d50c29514c22ab30"}, "downloads": -1, "filename": "ftw.showroom-1.5.1.tar.gz", "has_sig": false, "md5_digest": "8ceea385f529fce2ae3d96dd6f08adf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67392, "upload_time": "2018-03-12T14:30:20", "upload_time_iso_8601": "2018-03-12T14:30:20.780479Z", "url": "https://files.pythonhosted.org/packages/f4/9c/a80723f08cdc2ca5cd4ea59512e52cdf95ebf9af91e614b6d8e81c2f5c3d/ftw.showroom-1.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ceea385f529fce2ae3d96dd6f08adf6", "sha256": "949f8bbf5fe0254919858132b6f0d897ec9370410cbb8bb5d50c29514c22ab30"}, "downloads": -1, "filename": "ftw.showroom-1.5.1.tar.gz", "has_sig": false, "md5_digest": "8ceea385f529fce2ae3d96dd6f08adf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67392, "upload_time": "2018-03-12T14:30:20", "upload_time_iso_8601": "2018-03-12T14:30:20.780479Z", "url": "https://files.pythonhosted.org/packages/f4/9c/a80723f08cdc2ca5cd4ea59512e52cdf95ebf9af91e614b6d8e81c2f5c3d/ftw.showroom-1.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:50 2020"}