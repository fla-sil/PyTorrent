{"info": {"author": "data analysis unit", "author_email": "henri.payno@esrf.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: X11 Applications :: Qt", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Orange3 ESRF Add-on\n======================\n\nTomwer is offering tools to automate acquisition and reconstruction processes for Tomography.\nIt contains:\n\n- a library to access each acquisition process individually\n- gui and applications to control main processes (reconstruction, data transfert...) and execute them as a stand alone application.\n- an orange add-on to help users defining their own workflow (http://orange.biolab.si)\n\n\n.. |Gitlab Status| image:: https://gitlab.esrf.fr/tomotools/tomwer/badges/master/pipeline.svg\n    :target: https://gitlab.esrf.fr/tomotools/tomwer/pipelines\n\n\nDocumentation\n-------------\n\nDocumentation of latest release is available at http://www.edna-site.org/pub/doc/tomwer/latest\n\nInstallation\n------------\n\nStep 0 - Create a virtual env\n'''''''''''''''''''''''''''''\n\nIt is recommended to create a python virtual environment to run the workflow tool.\nVirtual environment might avoid some conflict between python packages. But you can also install it on your 'current' python environment and move to step 1.\n\n.. code-block:: bash\n\n   virtualenv --python=python3 --system-site-packages myvirtualenv\n\n\nThen activate the virtual environment\n\n.. code-block:: bash\n\n   source myvirtualenv/bin/activate\n   \n\nFirst update pip and setuptools to avoid some potential errors\n\n.. code-block:: bash\n\n   pip install --upgrade pip\n   pip install setuptools --upgrade\n\n\n.. note:: To quit the virtual environment\n\n   .. code-block:: bash\n\n      deactivate\n\nStep 1 - Orange3 installation\n'''''''''''''''''''''''''''''\n\nYou will need a fork of the original Orange project in order to run the tomwer project.\nThis is needed because small modification have been made in order to get the behavio we wanted (has looping workflows).\n\nThe fork is accessible here : https://github.com/payno/orange3.git\n\nSo install this fork :\n\n.. code-block:: bash\n\n   git clone https://github.com/payno/orange3.git\n   cd orange3\n   pip install -r requirements.txt\n   pip install -r requirements-gui.txt\n   pip install .\n\n.. note:: if you have an old PyQt version, you might need to have a look at https://pythonhosted.org/silx/virtualenv.html?highlight=virtualenv to avoid rebuild of sip... you might want to create a symbolic link:\n\n   If you want to use PyQt4 installed in */usr/lib/python2.7/dist-packages/*:\n\n   .. code-block:: bash\n\n      ln -s /usr/lib/python2.7/dist-packages/PyQt4 silx_venv/lib/python2.7/site-packages/\n      ln -s /usr/lib/python2.7/dist-packages/sip.so silx_venv/lib/python2.7/site-packages/\n\n\nStep 2 - tomwer\n'''''''''''''''\n\nclone the tomwer project\n\n.. code-block:: bash\n\n   git clone git@gitlab.esrf.fr:payno/tomwer.git\n\n\nthen install it\n\n.. code-block:: bash\n\n   cd tomwer\n   pip install -r requirements.txt\n   pip install -e .\n\n\n.. note:: -e option will register the add-on into Orange, but you shouldn't copy it into the Python's site-packages directory. This is due to the Orange add-on installation procedure. That mean also that any modification into this source code will be apply during execution time.\n\n\nMake sure the installation whent well, and that Orange is running correctly.\n\n.. code-block:: bash\n\n   python run_tests.py\n\nUnit test should be executed without any error.\n\n\nStep 3 - web log\n''''''''''''''''\n\nthe workflow tool can send some log into graylog in order to get view of the status of the workflow execution.\nIf this is active (by default) then you will be able to see important log from a web interface.\n\nTo get more information see https://www.graylog.org/\n\n\nLaunching Orange\n::::::::::::::::\n\nyou can simply execute the command:\n\n.. code-block:: bash\n\n   orange-canvas\n\n\n.. note:: if your installed a virtual environment do not forget to active it :\n\n.. code-block:: bash\n\n   source myvirtualenv/bin/activate\n\n\nDocumentation\n:::::::::::::\n\n.. code-block:: bash\n\n   cd doc\n   make html\n\nThe documentation is build in doc/build/html and the entry point is index.html\n\n.. code-block:: bash\n\n   firefox build/html/index.html\n\n.. note:: the build of the documentation need sphinx to be installed. This is not an hard dependacy. So you might need to install it.\n\n\nYou also should generate documentation to be accessible from Orange GUI (pressing the F1 key).\n\n.. code-block:: bash\n\n   cd doc\n   make htmlhelp", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.esrf.fr/tomotools/tomwer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tomwer", "package_url": "https://pypi.org/project/tomwer/", "platform": "", "project_url": "https://pypi.org/project/tomwer/", "project_urls": {"Homepage": "https://gitlab.esrf.fr/tomotools/tomwer"}, "release_url": "https://pypi.org/project/tomwer/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Library for tomography workflow", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tomwer is offering tools to automate acquisition and reconstruction processes for Tomography.\nIt contains:</p>\n<ul>\n<li>a library to access each acquisition process individually</li>\n<li>gui and applications to control main processes (reconstruction, data transfert\u2026) and execute them as a stand alone application.</li>\n<li>an orange add-on to help users defining their own workflow (<a href=\"http://orange.biolab.si\" rel=\"nofollow\">http://orange.biolab.si</a>)</li>\n</ul>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation of latest release is available at <a href=\"http://www.edna-site.org/pub/doc/tomwer/latest\" rel=\"nofollow\">http://www.edna-site.org/pub/doc/tomwer/latest</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"step-0-create-a-virtual-env\">\n<h3>Step 0 - Create a virtual env</h3>\n<p>It is recommended to create a python virtual environment to run the workflow tool.\nVirtual environment might avoid some conflict between python packages. But you can also install it on your \u2018current\u2019 python environment and move to step 1.</p>\n<pre>virtualenv --python<span class=\"o\">=</span>python3 --system-site-packages myvirtualenv\n</pre>\n<p>Then activate the virtual environment</p>\n<pre><span class=\"nb\">source</span> myvirtualenv/bin/activate\n</pre>\n<p>First update pip and setuptools to avoid some potential errors</p>\n<pre>pip install --upgrade pip\npip install setuptools --upgrade\n</pre>\n<div>\n<p>Note</p>\n<p>To quit the virtual environment</p>\n<pre>deactivate\n</pre>\n</div>\n</div>\n<div id=\"step-1-orange3-installation\">\n<h3>Step 1 - Orange3 installation</h3>\n<p>You will need a fork of the original Orange project in order to run the tomwer project.\nThis is needed because small modification have been made in order to get the behavio we wanted (has looping workflows).</p>\n<p>The fork is accessible here : <a href=\"https://github.com/payno/orange3.git\" rel=\"nofollow\">https://github.com/payno/orange3.git</a></p>\n<p>So install this fork :</p>\n<pre>git clone https://github.com/payno/orange3.git\n<span class=\"nb\">cd</span> orange3\npip install -r requirements.txt\npip install -r requirements-gui.txt\npip install .\n</pre>\n<div>\n<p>Note</p>\n<p>if you have an old PyQt version, you might need to have a look at <a href=\"https://pythonhosted.org/silx/virtualenv.html?highlight=virtualenv\" rel=\"nofollow\">https://pythonhosted.org/silx/virtualenv.html?highlight=virtualenv</a> to avoid rebuild of sip\u2026 you might want to create a symbolic link:</p>\n<p>If you want to use PyQt4 installed in <em>/usr/lib/python2.7/dist-packages/</em>:</p>\n<pre>ln -s /usr/lib/python2.7/dist-packages/PyQt4 silx_venv/lib/python2.7/site-packages/\nln -s /usr/lib/python2.7/dist-packages/sip.so silx_venv/lib/python2.7/site-packages/\n</pre>\n</div>\n</div>\n<div id=\"step-2-tomwer\">\n<h3>Step 2 - tomwer</h3>\n<p>clone the tomwer project</p>\n<pre>git clone git@gitlab.esrf.fr:payno/tomwer.git\n</pre>\n<p>then install it</p>\n<pre><span class=\"nb\">cd</span> tomwer\npip install -r requirements.txt\npip install -e .\n</pre>\n<div>\n<p>Note</p>\n<p>-e option will register the add-on into Orange, but you shouldn\u2019t copy it into the Python\u2019s site-packages directory. This is due to the Orange add-on installation procedure. That mean also that any modification into this source code will be apply during execution time.</p>\n</div>\n<p>Make sure the installation whent well, and that Orange is running correctly.</p>\n<pre>python run_tests.py\n</pre>\n<p>Unit test should be executed without any error.</p>\n</div>\n<div id=\"step-3-web-log\">\n<h3>Step 3 - web log</h3>\n<p>the workflow tool can send some log into graylog in order to get view of the status of the workflow execution.\nIf this is active (by default) then you will be able to see important log from a web interface.</p>\n<p>To get more information see <a href=\"https://www.graylog.org/\" rel=\"nofollow\">https://www.graylog.org/</a></p>\n<div id=\"launching-orange\">\n<h4>Launching Orange</h4>\n<p>you can simply execute the command:</p>\n<pre>orange-canvas\n</pre>\n<div>\n<p>Note</p>\n<p>if your installed a virtual environment do not forget to active it :</p>\n</div>\n<pre><span class=\"nb\">source</span> myvirtualenv/bin/activate\n</pre>\n</div>\n<div id=\"id1\">\n<h4>Documentation</h4>\n<pre><span class=\"nb\">cd</span> doc\nmake html\n</pre>\n<p>The documentation is build in doc/build/html and the entry point is index.html</p>\n<pre>firefox build/html/index.html\n</pre>\n<div>\n<p>Note</p>\n<p>the build of the documentation need sphinx to be installed. This is not an hard dependacy. So you might need to install it.</p>\n</div>\n<p>You also should generate documentation to be accessible from Orange GUI (pressing the F1 key).</p>\n<pre><span class=\"nb\">cd</span> doc\nmake htmlhelp\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7137816, "releases": {"0.2.0a1": [{"comment_text": "", "digests": {"md5": "0ce16c02a149a52f688eb267ab783969", "sha256": "11ad894c7ec9aa7897159a848cb7adbaff4552c78d0dd363c0a089dd2be9fb04"}, "downloads": -1, "filename": "tomwer-0.2.0a1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "0ce16c02a149a52f688eb267ab783969", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 715930, "upload_time": "2019-08-19T06:51:21", "upload_time_iso_8601": "2019-08-19T06:51:21.043914Z", "url": "https://files.pythonhosted.org/packages/0c/ec/f11d50c8acd043288346ea704f087acbc9f5cb421e12e0e703c6c31a1509/tomwer-0.2.0a1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "83560e28816c7d32bbd98a02176d0324", "sha256": "238368510bbfdc5590fa315694291508c4ef87f8845f105a38701795f2234ea1"}, "downloads": -1, "filename": "tomwer-0.2.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "83560e28816c7d32bbd98a02176d0324", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 787540, "upload_time": "2019-08-19T06:47:48", "upload_time_iso_8601": "2019-08-19T06:47:48.519663Z", "url": "https://files.pythonhosted.org/packages/7c/cb/f8836c802514ed4af63d2b7f19527ee1e5351935017e78c15a72293bd5b1/tomwer-0.2.0a1-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "979bd8a8638cfecb37471e6de30df268", "sha256": "9c8eb451a4506963afc5b442f1efb30c156ff8c8ae58d92d6e29ef0556a15d16"}, "downloads": -1, "filename": "tomwer-0.4.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "979bd8a8638cfecb37471e6de30df268", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1918181, "upload_time": "2020-03-06T07:29:42", "upload_time_iso_8601": "2020-03-06T07:29:42.607073Z", "url": "https://files.pythonhosted.org/packages/57/4d/ce76affe778c000882cf6dcadb5aaf066d3678325328a7f97228c842f9ac/tomwer-0.4.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3ffb51b71f13bb902cd111a7f8144e7", "sha256": "a97ebb4e03721ffbfc835feab0ce7867d93efc54207112e5ff204a56e4e567eb"}, "downloads": -1, "filename": "tomwer-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3ffb51b71f13bb902cd111a7f8144e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1687139, "upload_time": "2020-03-06T07:30:25", "upload_time_iso_8601": "2020-03-06T07:30:25.111577Z", "url": "https://files.pythonhosted.org/packages/8e/8d/95169c5e71e6e0bbe3d633518a178521539e32a15208a4c48dc53e965b78/tomwer-0.4.0-py3-none-any.whl", "yanked": false}], "0.5.0b1": [{"comment_text": "", "digests": {"md5": "82069a6ed5fcd4136c5093176599f2ac", "sha256": "2d3f28f7cd1a6f257c54502b9a7d9011e79c908cfd1766102445d9dd8e761c41"}, "downloads": -1, "filename": "tomwer-0.5.0b1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "82069a6ed5fcd4136c5093176599f2ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2402836, "upload_time": "2020-04-30T14:32:19", "upload_time_iso_8601": "2020-04-30T14:32:19.130746Z", "url": "https://files.pythonhosted.org/packages/27/83/4aa0b30bba524392c55a62dfd1cb5cfd92b4095fbf0bc38e98aab9e6dce8/tomwer-0.5.0b1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "22310595b0970973c3d6724087251604", "sha256": "a677454550bf315fbd6892bb19be9025414eef5e12a6ecad775b7c7cc38748bc"}, "downloads": -1, "filename": "tomwer-0.5.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "22310595b0970973c3d6724087251604", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2102689, "upload_time": "2020-04-30T14:32:16", "upload_time_iso_8601": "2020-04-30T14:32:16.904928Z", "url": "https://files.pythonhosted.org/packages/f6/a1/7b4de15ad996912b88807d213df0575d357e175482636eb503d95ee3656e/tomwer-0.5.0b1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "979bd8a8638cfecb37471e6de30df268", "sha256": "9c8eb451a4506963afc5b442f1efb30c156ff8c8ae58d92d6e29ef0556a15d16"}, "downloads": -1, "filename": "tomwer-0.4.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "979bd8a8638cfecb37471e6de30df268", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1918181, "upload_time": "2020-03-06T07:29:42", "upload_time_iso_8601": "2020-03-06T07:29:42.607073Z", "url": "https://files.pythonhosted.org/packages/57/4d/ce76affe778c000882cf6dcadb5aaf066d3678325328a7f97228c842f9ac/tomwer-0.4.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3ffb51b71f13bb902cd111a7f8144e7", "sha256": "a97ebb4e03721ffbfc835feab0ce7867d93efc54207112e5ff204a56e4e567eb"}, "downloads": -1, "filename": "tomwer-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3ffb51b71f13bb902cd111a7f8144e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1687139, "upload_time": "2020-03-06T07:30:25", "upload_time_iso_8601": "2020-03-06T07:30:25.111577Z", "url": "https://files.pythonhosted.org/packages/8e/8d/95169c5e71e6e0bbe3d633518a178521539e32a15208a4c48dc53e965b78/tomwer-0.4.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:51:11 2020"}