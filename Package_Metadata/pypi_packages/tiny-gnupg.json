{"info": {"author": "Gonzo Investigatory Journalism Agency, LLC", "author_email": "gonzo.development@protonmail.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: AsyncIO", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Topic :: Adaptive Technologies", "Topic :: Communications", "Topic :: Communications :: Email", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Security :: Cryptography", "Topic :: System :: Networking", "Topic :: Utilities"], "description": "tiny_gnupg - A small-as-possible solution for handling GnuPG ed25519 ECC keys.\n===============================================================================\nA linux specific, small, simple & intuitive wrapper for creating, using\nand managing GnuPG's Ed25519 curve keys. In our design, we favor\nreducing code size & complexity with strong, bias defaults over\nflexibility in the api. Our goal is to turn the powerful, complex,\nlegacy gnupg system into a fun and safe tool to develop with.\n\nThis project is currently in unstable beta. It works like a charm, but\nthere's likely, and often bugs floating around, and the api is subject\nto change. Contributions are welcome.\n\n\n\n\n.. image:: https://badge.fury.io/py/tiny-gnupg.svg\n    :target: https://badge.fury.io/py/tiny-gnupg\n\n.. image:: https://img.shields.io/github/license/rmlibre/tiny_gnupg\n    :alt: GitHub\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://img.shields.io/badge/code%20style-black-000000.svg\n\n.. image:: https://raw.githubusercontent.com/rmlibre/tiny_gnupg/master/tests/coverage.svg?sanitize=true\n    :target: https://raw.githubusercontent.com/rmlibre/tiny_gnupg/master/tests/coverage.svg?sanitize=true\n\n.. image:: https://github.com/rmlibre/tiny_gnupg/workflows/Python%20package/badge.svg\n    :target: https://github.com/rmlibre/tiny_gnupg/workflows/Python%20package/badge.svg\n\n\n\nInstall\n-------\n\n.. code:: shell\n\n    sudo apt-get install tor torsocks gnupg2\n    pip install --user --upgrade tiny_gnupg\n\n\n\n\nUsage Example\n-------------\n\n.. code:: python\n\n    from tiny_gnupg import GnuPG\n\n    username = \"username\"\n    email = \"username@user.net\"\n    passphrase = \"test_user_passphrase\"\n    gpg = GnuPG(username, email, passphrase)\n\n    # This will generate a primary ed25519 ECC certifying key, and three\n    # subkeys, one each for the authentication, encryption, and signing\n    # functionalities.\n    gpg.gen_key()\n\n    # Now this fingerprint can be used with arbitrary gpg2 commands.\n    gpg.fingerprint\n\n    # But the key is stored in the package's local keyring. To\n    # talk to the package's gpg environment, an arbitrary command\n    # can be constructed like this ->\n    options = [\"--armor\", \"--encrypt\", \"-r\", gpg.fingerprint]\n    command = gpg.command(*options)\n    inputs = gpg.encode_inputs(\"Message to myself\")\n    output = gpg.read_output(command, inputs)\n\n    # If a command would invoke the need for a passphrase, the\n    # with_passphrase kwarg should be set to True ->\n    gpg.command(*options, with_passphase=True)\n\n    # The passphrase then needs to be the first arg passed to\n    # encode_inputs ->\n    gpg.encode_inputs(passphrase, *other_inputs)\n\n\n    # The list of keys in the package's environment can be accessed\n    # from the list_keys() method, which returns a dict ->\n    gpg.list_keys()\n    # >>> {fingerprint: email_address, ...}\n\n    # Or retrieve a specific key where a searchable portion of its uid\n    # information is known, like an email address or fingerprint ->\n    gpg.list_keys(\"username@user.net\")\n    # >>> {\"EE36F0584971280730D76CEC94A470B77ABA6E81\": \"username@user.net\"}\n\n    # The raw output from the --list-keys gpg option can also be\n    # accessed ->\n    output = gpg.raw_list_keys()\n\n\n    # Let's try encrypting a message to Alice, whose public key is\n    # stored on keys.openpgp.org/.\n\n    # First, we'll import Alice's key from the keyserver (This requires\n    # a tor system installation. Or an open tor browser, and the tor_port\n    # attribute set to 9150) ->\n    from tiny_gnupg import run\n\n    run(gpg.network_import(uid=\"alice@email.domain\"))\n\n    # Then encrypt a message with Alice's key and sign it ->\n    msg = \"So, what's the plan this Sunday, Alice?\"\n    encrypted_message = gpg.encrypt(message=msg, uid=\"alice@email.domain\", sign=True)\n\n    # The process of encrypting a message to a peer whose public key\n    # might not be in the local package keyring is conveniently available\n    # in a single method. It automatically searches for the recipient's\n    # key on the keyserver so it can be used to encrypt the message ->\n    run(gpg.auto_encrypt(msg, \"alice@email.domain\"))  # Signing is automatic\n\n\n    # We could directly send a copy of our key to Alice, or upload it to\n    # the keyserver. Alice will need a copy so the signature on the\n    # message can be verified. So let's upload it to the keyserver ->\n    run(gpg.network_export(uid=gpg.fingerprint))\n\n    # Alice could now import our key (after we do an email verification\n    # with the keyserver) ->\n    run(gpg.network_import(\"username@user.net\"))\n\n    # Then Alice can simply receive the encrypted message and decrypt it ->\n    decrypted_msg = gpg.decrypt(encrypted_message)\n\n    # The process of decrypting a encrypted & signed message from a peer\n    # whose public key might not be in the local package keyring is\n    # conveniently available in a single method. It automatically determines\n    # the signing key fingerprint, and searches for it on the keyserver\n    # to verify the signature ->\n    decrypted_msg = run(gpg.auto_decrypt(encrypted_message))\n\n\n\nOn most systems, because of a bug in GnuPG_, email verification of uploaded keys will be necessary for others to import them from the keyserver. That's because GnuPG will throw an error immediately upon trying to import keys with their uid information stripped off. We will replace the gpg2 executable as soon as a patch becomes available upstream.\n\nIf the gpg2 executable doesn't work on your system, replace it with a copy of the executable found on your system. The package's executable can be found at: package_path/gpghome/gpg2. This path is also available from a class instance under the instance.executable attribute. Your system gpg2 executable is probably located at: /usr/bin/gpg2. You could also type: whereis gpg2 :to find it. If it's not there, then you'll have to install it with your system's equivalent of: sudo apt-get install gnupg2.\n\n.. _GnuPG: https://dev.gnupg.org/T4393\n\n\n\n\nNetworking Example\n------------------\n\n.. code:: python\n\n    #\n    # Since we use SOCKSv5 over tor for all of our networking, as well\n    # as the user-friendly aiohttp + aiohttp_socks libraries, the tor\n    # networking interface is also available to users. These utilities\n    # allow arbitrary POST and GET requests to clearnet, or onionland,\n    # websites ->\n    from tiny_gnupg import GnuPG, run\n\n\n    async def read_url(url):\n        client = GnuPG()\n        async with client.network_get(url) as response:\n            return await response.text()\n\n\n    # Now we can read webpages with GET requests ->\n    page_html = run(read_url(\"https://keys.openpgp.org/\"))\n\n    # Let's try onionland ->\n    url = \"http://zkaan2xfbuxia2wpf7ofnkbz6r5zdbbvxbunvp5g2iebopbfc4iqmbad.onion/\"\n    onion_page_html = run(read_url(url))\n\n    # Check your ip address for fun ->\n    ip_addr = run(read_url(\"https://icanhazip.com/\"))\n\n    # There's a convenience function built into the class that\n    # basically mimics read_url() ->\n    ip_addr = run(GnuPG().get(\"https://icanhazip.com/\"))\n\n\n    # POST requests can also be sent with the network_post() method.\n    # Let's use a POST request to send the keyserver a new key we\n    # create ->\n    async def post_data(gpg, url, payload=\"\"):\n        async with gpg.network_post(url, json=payload) as response:\n            return await response.text()\n\n\n    gpg = GnuPG(\n        username=\"username\",\n        email=\"username@user.net\",\n        passphrase=\"test_user_passphrase\",\n    )\n    gpg.gen_key()\n    url = gpg.keyserver_export_api\n    payload = {\"keytext\": gpg.text_export(uid=gpg.fingerprint)}\n\n    api_token_json = run(post_data(gpg, url, payload))\n\n    # There's also a convenience function built into the class that\n    # mimics post_data() ->\n    api_token_json = run(gpg.post(url, json=payload))\n\n    # And there we have it, it's super simple. And these requests have\n    # the added benefit of being completely routed through tor. The\n    # keyserver here also has a v3 onion address which we use to query,\n    # upload, and import keys. This provides a nice, default layer of\n    # privacy to our communication needs. Have fun little niblets!\n\n\nThese networking tools work off instances of aiohttp.ClientSession. To learn more about how to use their POST and GET requests, you can read the docs here_.\n\n.. _here: https://docs.aiohttp.org/en/stable/client_advanced.html#client-session\n\n\n\n\nAbout Torification\n------------------\n\n.. code:: python\n\n    # A user can make sure that any connections gnupg makes with the\n    # network are always run through tor by setting torify=True ->\n    username = \"username\"\n    email = \"username@user.net\"\n    passphrase = \"test_user_passphrase\"\n    gpg = GnuPG(username, email, passphrase, torify=True)\n\n    # This is helpful because there are gnupg settings which cause\n    # certain commands to do automatic connections to the web. For\n    # instance, when encrypting, gnupg may be set to automatically\n    # search for the recipient's key on a keyserver if it's not in the\n    # local keyring. tiny_gnupg doesn't use gnupg's networking\n    # interface, and ensures tor connections through the aiohttp_socks\n    # library. So, if gnupg makes these kinds of silent connections,\n    # it can inadvertently reveal a user's ip.\n\n\nUsing torify requires a tor installation on the user system. If it's\nrunning Debian/Ubuntu then this guide_ could be helpful.\n\n.. _guide: https://2019.www.torproject.org/docs/debian.html.en\n\n\n\n\nExtras\n------\n\n.. code:: python\n\n    # It turns out that the encrypt() method automatically signs the\n    # message being encrypted. So, the `sign=False` flag only has to be\n    # passed when a user doesn't want to sign a message ->\n    encrypted_unsigned_message = gpg.encrypt(\n        message=\"<-- Unknown sender\",\n        uid=\"alice@email.domain\",  # sending to alice\n        sign=False,\n    )\n\n    # It also turns out, a user can sign things independently from\n    # encrypting ->\n    signed_data = gpg.sign(target=\"maybe a hash of a file?\")\n\n    # Or sign a key in the package's keyring ->\n    gpg.sign(\"alice@email.domain\", key=True)\n\n    # And verify data as well ->\n    gpg.verify(message=signed_data)  # throws if invalid\n\n    # Importing key files is also a thing ->\n    path_to_file = \"/home/user/keyfiles/\"\n    run(gpg.file_import(path=path_to_file + \"alices_key.asc\"))\n\n    # As well as exporting public keys ->\n    run(gpg.file_export(path=path_to_file, uid=gpg.email))\n\n    # And secret keys, but really, keep those safe! ->\n    run(gpg.file_export(path=path_to_file, uid=gpg.email, secret=True))\n\n    # The keys don't have to be exported to a file. Instead they can\n    # be exported as strings ->\n    my_key = gpg.text_export(uid=gpg.fingerprint)\n\n    # So can secret keys (Be careful!) ->\n    my_secret_key = gpg.text_export(gpg.fingerprint, secret=True)\n\n    # And they can just as easily be imported from strings ->\n    gpg.text_import(key=my_key)\n\n\n\n\nRetiring Keys\n-------------\n\nAfter a user no longer considers a key useful, or wants to dissociate from the key, then they have some options:\n\n.. code:: python\n\n    from tiny_gnupg import GnuPG, run\n\n    gpg = GnuPG(\n        username=\"username\",\n        email=\"username@user.net\",\n        passphrase=\"test_user_passphrase\",\n    )\n\n    # They can revoke their key then distribute it publicly (somehow)\n    # (the keyserver can't currently handle key revocations) ->\n    gpg.revoke(gpg.fingerprint)\n    key = gpg.text_export(gpg.fingerprint)  # <--  Distribute this!\n\n    # And/or they can delete the key from the package keyring like\n    # this ->\n    gpg.delete(uid=\"username@user.net\")\n\n\n.. _key revocations: https://gitlab.com/hagrid-keyserver/hagrid/issues/137\n\n\n\n\n\n``Known Issues``\n=================\n\n-  Because of Debian `bug #930665`_, & related GnuPG `bug #T4393`_,\n   importing keys from the default keyserver `keys.openpgp.org`_ doesn\u2019t\n   work automatically on all systems. Not without email confirmation, at\n   least. That\u2019s because the keyserver will not publish uid information\n   attached to a key before a user confirms access to the email address\n   assigned to the uploaded key. And, because GnuPG folks are still\n   holding up the merging, & back-porting, of patches that would allow\n   GnuPG to automatically handle keys without uids gracefully. This\n   effects the ``network_import()`` method specifically, but also the\n   ``text_import()`` & ``file_import()`` methods, if they happen to be\n   passed a key or filename argument which refers to a key without uid\n   information. The gpg2 binary in this package can be replaced manually\n   if a user\u2019s system has access to a patched version.\n-  Because of GnuPG `bug #T3065`_, & related `bug #1788190`_, the\n   ``--keyserver`` & ``--keyserver-options http-proxy`` options won\u2019t\n   work with onion addresses, & they cause a crash if a keyserver\n   lookup is attempted. This is not entirely an issue for us since we\n   don\u2019t use gnupg\u2019s networking interface. In fact, we set these\n   environment variables anyway to crash on purpose if gnupg tries to\n   make a network connection. And in case the bug ever gets fixed (it\n   won\u2019t), or by accident the options do work in the future, then a tor\n   SOCKSv5 connection will be used instead of a raw connection.\n-  This program may only be reliably compatible with keys that are also\n   created with this program. That\u2019s because our terminal parsing is\n   reliant on specific metadata to be similar across all encountered\n   keys. It seems most keys have successfully been parsed with recent\n   updates, though more testing is needed.\n-  The tests don\u2019t currently work when a tester\u2019s system has a system\n   installation of tiny_gnupg, & the tests are being run from a local\n   git repo directory. That\u2019s because the tests import tiny_gnupg, but\n   if the program is installed in the system, then python will get\n   confused about which keyring to use during the tests. This will lead\n   to crashes & failed tests. Git clone testers probably have to run\n   the test script closer to their system installation, one directory up\n   & into a tests folder. Or pip uninstall tiny_gnupg. OR, send a pull\n   request with an import fix.\n-  Currently, the package is part synchronous, & part asynchronous.\n   This is not ideal, so a decision has to be made: either to stay mixed\n   style, or choose one consistent style.\n-  We\u2019re still in unstable beta & have to build out our test suite.\n   Contributions welcome.\n\n.. _bug #930665: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=930665\n.. _bug #T4393: https://dev.gnupg.org/T4393\n.. _keys.openpgp.org: https://keys.openpgp.org/\n.. _bug #T3065: https://dev.gnupg.org/T3065#111023\n.. _bug #1788190: https://bugs.launchpad.net/ubuntu/+source/gnupg2/+bug/1788190\n\n\n\n\n``Changelog``\n=============\n\n\nChanges for version 0.6.1\n=========================\n\nMinor Changes\n-------------\n\n-  Edits to ``test_tiny_gnupg.py``.\n\n\nMajor Changes\n-------------\n\n-  Cause of CI build failures found. The sks/pks keyserver's onion address\n   was not accessible anymore. They seemed to have switched to a new onion\n   address available here: http://pgpkeysximvxiazm.onion.\n\n\n\n\nChanges for version 0.6.0\n=========================\n\nMinor Changes\n-------------\n\n-  Changes to deduce bug causing CI failure.\n\n\nMajor Changes\n-------------\n\n-  Switch from ``aiohttp_socks``'s deprecated ``SocksProxy`` to the newer\n   and supported ``ProxyConnector``.\n\n\n\n\nChanges for version 0.5.9\n=========================\n\nMinor Changes\n-------------\n\n-  Add checks in ``network_sks_import()`` for html failute sentinels.\n\n\nMajor Changes\n-------------\n\n-  Spread out the amount of queries per key in ``test_tiny_gnupg.py`` so\n   the keyserver's rate limiting policies don't cause the CI build to\n   fail as often.\n\n\n\n\nChanges for version 0.5.8\n=========================\n\nMinor Changes\n-------------\n\n-  Fix ``setup`` attribution kwargs in ``setup.py``.\n\n\nMajor Changes\n-------------\n\n-  Added new ``network_sks_import()`` method which allows users to query the\n   sks infrastructure for public keys as well. We use an onion address mirror\n   of the sks/pks network available here: http://jirk5u4osbsr34t5.onion.\n-  Added new ``manual`` kwarg to ``command`` which simplifies the process\n   of using the ``GnuPG()`` class to manage gpg2 non-programmatically.\n   Passing ``manual=True`` will allow users to craft commands and interact\n   directly with the gpg2 interface.\n\n\n\n\nChanges for version 0.5.7\n=========================\n\nMinor Changes\n-------------\n\n-  Tests added to include checks for instance-isolated identities.\n\n\nMajor Changes\n-------------\n\n-  ``reset_daemon()`` calls added to ``decrypt()``, ``verify()``, ``sign()``\n   & ``encrypt()``. This call kills the gpg-agent process & restarts it,\n   which in turn wipes the caching of secret keys available on the system\n   without a passphrase. This is crucial for users of applications with\n   multiple GnuPG objects that handle separate key identities. That's\n   because these methods will now throw ``PermissionError`` or ``LookupError``\n   if a private key operation is needed from an instance which is already\n   assigned to another private key in the keyring. This gives some important\n   anonymity protections to users.\n-  More improvements to error reporting.\n\n\n\n\nChanges for version 0.5.6\n=========================\n\nMinor Changes\n-------------\n\n-  Added newly developed ``auto_decrypt()`` & ``auto_encrypt()`` methods\n   to the ``README.rst`` tutorial.\n-  Allow keyserver queries with spaces by replacing ``\" \"`` with url\n   encoding ``\"%20\"``.\n-  ``packet_fingerprint(target=\"\")`` & ``list_packets(target=\"\")`` methods\n   now raise ``TypeError`` when ``target`` is clearly not OpenPGP data.\n-  Tests added to account for new error handling in ``tiny_gnupg.py``.\n\n\nMajor Changes\n-------------\n\n-  ``--no-tty`` seems to keep most of the noise from terminal output while\n   also displaying important banner information. For instance, signature\n   verification still produces detailed signature information. Because it\n   automatically seems to behave as desired, it's here to stay.\n\n\n\n\nChanges for version 0.5.5\n=========================\n\nMinor Changes\n-------------\n\n-  Added to Known Issues. Our package can't build on Github (Or most any\n   CI service) for many reasons related their build environments using\n   Docker & an issue in GnuPG itself.\n-  Removed Above known issue as a fix was found for using the Github CI\n   tool.\n-  Added ``_home``, ``_executable``, & ``_options`` attributes which\n   store the ``pathlib.Path.absolute()`` representation of the associated\n   files & directories.\n-  Added ``options`` attribute with is the str value of the ``_options``\n   ``pathlib`` path to the configuration file used by the package.\n\n\nMajor Changes\n-------------\n\n-  Added ``\"--no-tty\"`` option to ``command()`` method which conveniently\n   tells gpg2 not to use the terminal to output messages. This has lead to\n   a substantial, possibly complete, reduction in the amount of noise gpg2\n   prints to the screen. Some of that printed information is helpful to\n   see, though. We would add it back in places where it could be informative,\n   but passing ``\"--no-tty\"`` has the added benefit of allowing Docker not\n   to break right out of the gate of a build test. More thought on this\n   is required.\n-  Removed ``pathlib`` from imports. That module has been in the standard\n   library since c-python3.4. This package isn't looking to be supported\n   for anything older than 3.6.\n\n\n\n\nChanges for version 0.5.4\n=========================\n\nMinor Changes\n-------------\n\n-  Style edits to ``PREADME.rst``.\n\n\nMajor Changes\n-------------\n\n-  Fixed a major bug in ``decrypt()`` which miscategorized a fingerprint scraped\n   from a message as the sender's, when in fact it should be the recipient's.\n   Getting the sender's fingerprint requires successfully decrypting the\n   message & scraping the signature from inside if it exists. We do this\n   now, raising ``LookupError`` if the signature inside has no corresponding\n   public key in the package keyring.\n-  Added new ``auto_encrypt()`` method which follows after ``auto_decrypt()``\n   in allowing a user to attempt to encrypt a message to a recipient's\n   key using the value in the ``uid`` kwarg. If there's no matching key\n   in the package keyring, then the keyserver is queried for a key\n   that matches ``uid`` where then ``message`` is encrypted if found, or\n   ``FileNotFoundError`` is raised if not.\n-  Added better exception raising throughout the ``GnuPG`` class:\n\n   -  Now, instead of calling ``read_output()`` when the supplied ``uid``\n      has no key in the package keyring, a ``LookupError`` is raised.\n   -  The best attempt at deriving a 40-byte key fingerprint from ``uid`` is\n      returned back through the ``LookupError`` exception object's ``value``\n      attribute for downstream error handling.\n   -  ``verify()`` raises ``PermissionError`` if verification cannot be\n      done on the ``message`` kwarg. Raises ``LookupError`` instead if\n      a public key is needed in order to attempt verification. ``verify``\n      can't be used on an encrypted messages in general, unless ``message``\n      is specifcally a signature, not encrypted plaintext. This is just\n      not how verify works. Signatures are on the inside on encrypted\n      messages. So ``decrypt()`` should be used for those instead, it\n      throws if a signature is invalid on a message.\n   -  A rough guide now exists for what exceptions mean, since we've given\n      names & messages to the most likely errors, & helper functions\n      to resolve them. Users can now expect to run into more than just\n      the in decript ``CalledProcessError``. Exceptions currently being\n      used include: ``LookupError``, ``PermissionError``, ``TypeError``,\n      ``ValueError``, ``KeyError``, & ``FileNotFoundError``.\n\n-  ``ValueError`` raised in ``text_export()`` & ``sign()`` switched to\n   ``TypeError`` as it's only raised when their ``secret`` or ``key``\n   kwargs, respectively, are not of type ``bool``.\n\n\n\nChanges for version 0.5.3\n=========================\n\nMinor Changes\n-------------\n\n-  Fixing PyPi ``README.rst`` rendering.\n\n\n\n\nChanges for version 0.5.2\n=========================\n\nMinor Changes\n-------------\n\n-  Futher test cleanups. We're now at 100% line coverage & 99% branch\n   coverage.\n-  Code cleanups. ``raw_packets()`` now passes the uid information it's\n   gathered through the ``KeyError`` exception, in the ``value`` attribute\n   instead of copying ``subprocess``'s ``output`` attribute naming convention.\n-  License, coverage, package version badges added to ``README.rst``.\n\n\n\n\nChanges for version 0.5.1\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed inaccuracies & mess-ups in the tests. Added tests for parsing\n   some legacy keys' packets with ``raw_packets()``.\n\n\nMajor Changes\n-------------\n\n-  Bug in the packet parser has been patched which did not correctly\n   handle or recognize some legacy key packet types. This patch widens\n   the pool of compatible OpenPGP versions.\n\n\n\n\nChanges for version 0.5.0\n=========================\n\nMinor Changes\n-------------\n\n-  Removed coverage.py html results. They are too big, & reveal device\n   specific information.\n\n\n\n\nChanges for version 0.4.9\n=========================\n\nMinor Changes\n-------------\n\n-  Various code cleanups.\n-  Added to test cases for auto fetch methods & packet parsing.\n-  Documentation improvements: ``README.rst`` edits. ``CHANGES.rst``\n   Known Issues moved to its own section at the top. Docstrings now\n   indicate code args & kwargs in restructured text, double tick\n   format.\n-  Added ``use-agent`` back into the gpg2.conf file to help gnupg to not\n   open the system pinentry window. This may have implications for\n   anonymity since multiple instances runnning on a user machine will\n   be able to use the same agent to decrypt message's, even if the\n   decrypting instance wasn't the **intended** recipient. This may be\n   removed again. A factor in this decision is that, it's not clear\n   whether removing it or adding ``no-use-agent`` would even `have an impact`_\n   on the gpg-agent's decisions.\n-  ``_session``, ``_connector``, ``session`` & ``connector`` contructors\n   were renamed to title case, since they are class references or are\n   class factories. They are now named ``_Session``, ``_Connector``,\n   ``Session`` & ``Connector``.\n-  Added some functionality to ``setup.py`` so that the ``long_description``\n   on PyPI which displays both ``README.rst`` & ``CHANGES.rst``, will\n   also be displayed on github through a combined ``README.rst`` file.\n   The old ``README.rst`` is now renamed ``PREADME.rst``.\n\n.. _have an impact: https://stackoverflow.com/questions/47273922/purpose-of-gpg-agent-in-gpg2\n\n\nMajor Changes\n-------------\n\n-  100% test coverage!\n-  Fixed bug in ``raw_packets()`` which did not return the packet\n   information when gnupg throws a \"no private key\" error. Now the\n   packet information is passed in the ``output`` attribute of the\n   ``KeyError`` exception up to ``packet_fingerprint()`` and\n   ``list_packets()``. If another cause is determined for the error, then\n   ``CalledProcessError`` is raised instead.\n-  ``packet_fingerprint()`` now returns a 16 byte key ID when parsing\n   packets of encrypted messages which would throw a gnupg \"no private\n   key\" error. The longer 40 byte fingerprint is not available in the\n   plaintext packets.\n-  New ``list_packets()`` method added to handle the error scraping of\n   ``raw_packets()`` & return the ``target``'s metadata information in\n   a more readable format.\n-  Fixed bug in ``format_list_keys()`` which did not properly parse\n   ``raw_list_keys(secret=False)`` when ``secret`` was toggled to ``True``\n   to display secret keys. The bug would cause the program to falsely\n   show that only one secret key exists in the package keyring,\n   irrespective of how many secret keys were actually there.\n-  Added a second round of fingerprint finding in ``decrypt()`` and\n   ``verify()`` to try at returning more accurate results to callers and\n   in the raised exception's ``value`` attribute used by ``auto_decrypt()``\n   & ``auto_verify()``.\n\n\n\nChanges for version 0.4.8\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed typos across the code.\n-  Added to test cases.\n-  Documentation improvements. ``CHANGES.md`` has been converted to\n   ``CHANGES.rst`` for easy integration into ``README.rst`` and\n   ``long_description`` of ``setup.py``.\n-  ``README.rst`` tutorial expanded.\n-  Condensed command constructions in ``set_base_command()`` and\n   ``gen_key()`` by reducing redundancy.\n-  Fixed ``delete()`` method's print noisy output when called on a key\n   which doesn't have a secret key in the package's keyring.\n\n\nMajor Changes\n-------------\n\n-  Added a ``secret`` kwarg to ``list_keys()`` method which is a boolean\n   toogle between viewing keys with public keys & viewing keys with\n   secret keys.\n-  Added a reference to the asyncio.get_event_loop().run_until_complete\n   function in the package. It is now importable with\n   ``from tiny_gnupg import run`` or ``from tiny_gnupg import *``. It\n   was present in all of the tutorials, & since we haven\u2019t decided to\n   go either all async or sync yet, it\u2019s a nice helper.\n-  Added ``raw_packets(target=\"\")`` method which takes in OpenPGP data,\n   like a message or key, & outputs the raw terminal output of the\n   ``--list-packets`` option. Displays very detailed information of all\n   the OpenPGP metadata on ``target``.\n-  Added ``packet_fingerprint(target=\"\")`` method which returns the\n   issuer fingerprint scraped off of the metadata returned from\n   ``raw_packets(target)``. This is a very effective way to retrieve\n   uid information from OpenPGP signatures, messages & keys to\n   determine beforehand whether the associated sender's key is or isn't\n   already in the package's keyring.\n\n\n\n\nChanges for version 0.4.7\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed typos across the code.\n-  Added to test cases.\n-  Added tests explanation in ``test_tiny_gnupg.py``.\n-  Documentation improvements.\n\n\nMajor Changes\n-------------\n\n-  Added exception hooks to ``decrypt()`` & ``verify()`` methods. They\n   now raise ``KeyError`` when the OpenPGP data they\u2019re verifying\n   require a signing key that\u2019s not in the package\u2019s keyring. The\n   fingerprint of the required key is printed out & stored in the\n   ``value`` attribute of the raised exception.\n-  Added new ``auto_decrypt()`` & ``auto_verify()`` async methods\n   which catch the new exception hooks to automatically try a torified\n   keyserver lookup before raising a KeyError exception. If a key is\n   found, it\u2019s downloaded & an attempt is made to verify the data.\n\n\n\n\nChanges for version 0.4.6\n=========================\n\nMinor Changes\n-------------\n\n-  Added to test cases.\n-  Changed the project long description in the ``README.rst``.\n-  Added docstrings to all the methods in the ``GnuPG`` class, & the\n   class itself.\n\n\nMajor Changes\n-------------\n\n-  Turned off options in gpg2.conf ``require-cross-certification`` and\n   ``no-comment`` because one or both may be causing a bug where using\n   private keys raises an \u201cunusable private key\u201d error.\n\n\n\n\nChanges for version 0.4.5\n=========================\n\nMinor Changes\n-------------\n\n-  Updated package metadata files to be gpg2.conf aware.\n\n\nMajor Changes\n-------------\n\n-  Added support for a default package-wide gpg2.conf file.\n\n\n\n\nChanges for version 0.4.4\n=========================\n\nMinor Changes\n-------------\n\n-  Added new tests. We\u2019re at 95% code coverage.\n\n\nMajor Changes\n-------------\n\n-  Changed the default expiration date on generated keys from never to 3\n   years after created. This is both for the integrity of the keys, but\n   also as a courtesy to the key community by not recklessly creating\n   keys that never expire.\n\n-  Added ``revoke(uid)`` method, which revokes the key with matching\n   ``uid`` if the secret key is owned by the user & the key passphrase\n   is stored in the instance\u2019s ``passphrase`` attribute.\n\n\n\n\nChanges for version 0.4.3\n=========================\n\nMinor Changes\n-------------\n\n-  Changed package description to name more specifically the kind of ECC\n   keys this package handles.\n-  Removed the trailing newline character that was inserted into the end\n   of every ``encrypt()`` & ``sign()`` message.\n-  Added new tests.\n\n\nMajor Changes\n-------------\n\n-  Fixed bug in ``__init__()`` caused by the set_base_command() not\n   being called before the base commands are used. This leading to the\n   fingerprint for a persistent user not being set automatically.\n\n\n\n\nChanges for version 0.4.2\n=========================\n\nMinor Changes\n-------------\n\n-  Added some keyword argument names to ``README.rst`` tutorials.\n-  Added section in ``README.rst`` about torification.\n\n\nMajor Changes\n-------------\n\n-  Added a check in ``encrypt()`` for the recipient key in the local\n   keyring which throws if it doesn\u2019t exist. This is to prevent gnupg\n   from using wkd to contact the network to find the key on a keyserver.\n-  Added a new ``torify=False`` kwarg to ``__init__()`` which prepends\n   ``\"torify\"`` to each gpg2 command if set to ``True``. This will make\n   sure that if gnupg makes any silent connections to keyservers or the\n   web, that they are run through tor & don\u2019t expose a users ip\n   address inadvertently.\n\n\n\n\nChanges for version 0.4.1\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed typos in ``tiny_gnupg.py``.\n\n\n\n\nChanges for version 0.4.0\n=========================\n\nMinor Changes\n-------------\n\n-  Added keywords to ``setup.py``\n-  Added copyright notice to LICENSE file.\n-  Code cleanups.\n-  Updated ``README.rst`` tutorials.\n-  Added new tests.\n-  Include .gitignore in MANIFEST.in for PyPI.\n-  Made all path manipulations more consistent by strictly using\n   pathlib.Path for directory specifications.\n-  Added strict truthiness avoidance to ``sign()`` for the ``key``\n   boolean kwarg.\n-  Added strict truthiness avoidance to ``text_export()`` for the\n   ``secret`` boolean kwarg.\n\n\nMajor Changes\n-------------\n\n-  Added ``key`` kwarg to the ``sign(target=\"\", key=False)`` method to\n   allow users to toggle between signing arbitrary data & signing a\n   key in the package\u2019s local keyring.\n-  Changed the ``message`` kwarg in ``sign(message=\"\")`` to ``target``\n   so it is also accurate when the method is used to sign keys instead\n   of arbitrary data.\n\n\n\n\nChanges for version 0.3.9\n=========================\n\nMinor Changes\n-------------\n\n-  Added new tests.\n\n\nMajor Changes\n-------------\n\n-  Fixed new crash caused by ``--batch`` keyword in ``encrypt()``. When\n   a key being used to encrypt isn\u2019t ultimately trusted, gnupg raises an\n   error, but this isn\u2019t a desired behavior. So, ``--batch`` is removed\n   from the command sent from the method.\n\n\n\n\nChanges for version 0.3.8\n=========================\n\nMinor Changes\n-------------\n\n-  Added new tests.\n-  Removed ``base_command()`` method because it was only a layer of\n   indirection. It was merged into ``command()``.\n\n\nMajor Changes\n-------------\n\n-  Added the ``--batch``, ``--quiet`` & ``--yes`` arguments to the\n   default commands contructed by the ``command()`` method.\n-  Added the ``--quiet`` & ``--yes`` arguments to the command\n   constructed internally to the ``gen_key()`` method.\n-  Added a general uid \u2014> fingerprint uid conversion in ``delete()`` to\n   comply with gnupg limitations on how to call functions that\n   automatically assume yes to questions. The Up-shot is that\n   ``delete()`` is now fully automatic, requiring no user interaction.\n\n\n\n\nChanges for version 0.3.7\n=========================\n\nMinor Changes\n-------------\n\n-  Added new tests.\n-  Typos & inaccuracies fixed around the code & documentation.\n\n\nMajor Changes\n-------------\n\n-  Added new ``secret`` kwargs to ``text_export(uid, secret=bool)`` and\n   ``file_export(path, uid, secret=bool)`` to allow secret keys to be\n   exported from the package\u2019s environment.\n-  Added new ``post(url, **kw)`` & ``get(url, **kw)`` methods to allow\n   access to the networking tools without having to manually construct\n   the ``network_post()`` & ``network_get()`` context managers. This\n   turns network calls into one liners that can be more easily wrapped\n   with an asyncio ``run`` function.\n\n\n\n\nChanges for version 0.3.6\n=========================\n\nMinor Changes\n-------------\n\n-  Added new tests for networking methods.\n-  Documentation updates & accuracy fixes.\n\n\nMajor Changes\n-------------\n\n-  Removed a check in ``network_import()`` which wasn\u2019t useful and\n   should\u2019ve been causing problems with imports, even though the tests\n   didn\u2019t seem to notice.\n\n\n\n\nChanges for version 0.3.5\n=========================\n\nMinor Changes\n-------------\n\n-  Switched the aiocontext package license with the license for\n   asyncio-contextmanager.\n\n\nMajor Changes\n-------------\n\n-  The packaging issues seem to be resolved. Packaging as v0.3.5-beta,\n   the first release that did not ship completely broken through pip\n   install \u2013user tiny_gnupg.\n\n\n\n\nChanges for version 0.3.4\n=========================\n\nMajor Changes\n-------------\n\n-  Fixing a major bug in the parameters passed to ``setup()`` which did\n   not correctly tell setuptools to package the gpghome folder & gpg2\n   binary. This may take a few releases to troubleshoot & bug fix\n   fully.\n\n\n\n\nChanges for version 0.3.3\n=========================\n\nMajor Changes\n-------------\n\n-  Fixed a big bug where the wrong package was imported with the same\n   name as the intended module. AioContext was imported in setuptools,\n   but the package that is needed is asyncio-contextmanager for its\n   aiocontext module. This lead to the program being un-runable due to\n   an import error.\n\n\n\n\nChanges for version 0.3.2\n=========================\n\nMinor Changes\n-------------\n\n-  Rolled back the changes in ``trust()`` that checked for trust levels\n   on keys to avoid sending an unnecessary byte of data through the\n   terminal. Mostly because the attempted fix did not fix the issue. And\n   the correct fix involves a wide branching of state & argument\n   checking. That runs contrary to the goal of the package for\n   simplicity, so it isn\u2019t going to be addressed for now.\n-  Edited some of the ``README.rst`` tutorials.\n\n\nMajor Changes\n-------------\n\n-  Fix bug in ``file_import()`` method where await wasn\u2019t called on the\n   keyfile.read() object, leading to a crash.\n\n\n\n\nChanges for version 0.3.1\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed a bug in ``trust()`` which caused an extra ``b\u201cy\\n\u201d``\n   to be sent to the interactive prompt when setting keys as anything\n   but ultimately trusted. This was because there\u2019s an extra terminal\n   dialog asking for a \u201cy\u201d confirmation that is not there when a key is\n   being set as ultimately trusted. This didn\u2019t have a serious effect\n   other than displaying a \u201cInvalid command (try \u2018help\u2019)\u201d dialog.\n-  Removed ``local_user`` kwarg from the ``raw_list_keys()`` and\n   ``trust()`` methods, as it doesn\u2019t seem to matter which \u201cuser\u201d\n   perspective views the list of keys or modifies trust. It is very\n   likely always displaying keys from the perspective of the global\n   agent.\n-  Typos, redundancies & naming inaccuracies fixed around the code and\n   documentation.\n-  Tests updated & added to.\n\n\nMajor Changes\n-------------\n\n-  Fixed a bug in ``encrypt()`` which caused a ``\u201cy\\n\u201d`` to be\n   prepended to plaintext that was sent to ultimately trusted keys. This\n   was because there\u2019s an extra terminal dialog asking for a \u201cy\u201d\n   confirmation that is not there when a key is ultimately trusted.\n-  Added a ``key_trust(uid)`` method to allow easy determination of\n   trust levels set on keys in the local keyring.\n\n\n\n\nChanges for version 0.3.0\n=========================\n\nMinor Changes\n-------------\n\n-  Changed MANIFEST.in to a more specific include structure, & a\n   redundant exclude structure, to more confidently keep development\n   environment key material from being uploaded during packaging.\n\n\nMajor Changes\n-------------\n\n-  Overhauled the ``gen_key()`` which now creates a different set of\n   default keys. We are no longer creating one primary key which does\n   certifying & signing, with one subkey which handles encryption.\n   Instead, we create one certifying primary key, with three subkeys,\n   one each for handling encryption, authentication, & signing. This\n   is a more theoretically secure default key setup, & represents a\n   common best-practice.\n\n\n\n\nChanges for version 0.2.9\n=========================\n\nMinor Changes\n-------------\n\n-  Edited some of the ``README.rst`` tutorials\n-  Changed ``file_import()``\\ \u2019s ``filename`` kwarg to ``path`` for\n   clarity.\n-  Fixed bug in ``trust()`` which would allow a float to be passed to\n   the terminal when an integer was needed.\n-  Changed the way the email address in displayed in\n   ``network_export()``, removing the surrounding list brackets.\n-  Changed the FILE_PATH global to HOME_PATH for clarity.\n-  Changed the ``id_link`` variable in ``network_import()`` to\n   ``key_url`` for clarity.\n\n\nMajor Changes\n-------------\n\n-  Fixed a bug in ``format_list_keys()`` which would imporperly split\n   the output string when uid information contained the ``\"pub\"``\n   string.\n\n\n\n\nChanges for version 0.2.8\n=========================\n\nMinor Changes\n-------------\n\n-  Edited some of the ``README.rst`` tutorials.\n\n\nMajor Changes\n-------------\n\n-  Fixed a bug in the ``trust()`` method which caused it to never\n   complete execution.\n-  Fixed a bug in the ``trust()`` method which falsely made 4 the\n   highest trust level, instead of 5.\n\n\n\n\nChanges for version 0.2.7\n=========================\n\nMinor Changes\n-------------\n\n-  Fixed statement in ``README.rst`` describing bug #T4393.\n\n\n\n\nChanges for version 0.2.6\n=========================\n\nMinor Changes\n-------------\n\n-  Typos, redundancies & naming inaccuracies fixed around the code and\n   documentation.\n-  Added a new POST request tutorial to the ``README.rst``.\n-  Added ``\"local_user\"`` kwarg to some more methods where the output\n   could at least be partially determined by the point of view of the\n   key gnupg thinks is the user\u2019s.\n\n\nMajor Changes\n-------------\n\n-  Added a signing toggle to the ``encrypt(sign=True)`` method. Now, the\n   method still automatically signs encrypted messages, but users can\n   choose to turn off this behavior.\n-  Added a ``trust(uid=\"\", level=4)`` method, which will allow users to\n   sign keys in their keyring on a trust scale from 1 to 4.\n-  Fixed a bug in ``set_fingerprint(uid=\"\")`` which mistakenly used an\n   ``email`` parameter instead of the locally available ``uid`` kwarg.\n\n\n\n\nChanges for version 0.2.5\n=========================\n\nMinor Changes\n-------------\n\n-  Typos, redundancies & naming inaccuracies fixed around the code and\n   documentation.\n-  Tests updated & added to.\n-  Changed ``raw_network_export()`` & ``raw_network_verify()`` methods\n   into ``raw_api_export()`` & ``raw_api_verify()``, respectively.\n   This was done for more clarity as to what those methods are doing.\n\n\nMajor Changes\n-------------\n\n-  Added ``sign(message)`` & ``verify(message)`` methods.\n-  Changed the ``keyserver`` & ``searchserver`` attributes into\n   properties so that custom ``port`` attribute changes are now\n   reflected in the constructed url, & the search string used by a\n   custom keyserver can also be reflected.\n-  Moved all command validation to the ``read_output()`` method which\n   simplifies the construction of ``command()`` & will automatically\n   ``shlex.quote()`` all commands, even those hard-coded into the\n   program.\n-  Fixed bug in ``set_homedir()`` which did not construct the default\n   gpghome directory string correctly depending on where the current\n   working directory of the calling script was.\n-  Added ``local_user`` kwarg to ``encrypt()`` & ``sign()`` so a user\n   can specify which key to use for signing messages, as gnupg\n   automatically signs with whatever key it views as the default user\n   key. Instead, we assume mesasges are to be signed with the key\n   associated with the email address of a GnuPG class instance, or the\n   key defined by the ``local_user`` uid if it is passed.\n-  Fixed \u2013list-keys terminal output parsing. We now successfully parse\n   & parameterize the output into email addresses & fingerprints, of\n   a larger set of types of keys.\n-  Added ``delete()`` method for removing both public & private keys\n   from the local keyring. This method still requires some user\n   interaction because a system pinentry-type dialog box opens up to\n   confirm deletion. Finding a way to automate this to avoid user\n   interaction is in the work.\n-  Added automating behavior to the ``sign()`` & ``encrypt()`` methods\n   so that keys which haven\u2019t been verified will still be used. This is\n   done by passing \u201cy\u201d (yes) to the terminal during the process of the\n   command.\n\n\n\n\nChanges for version 0.2.4\n=========================\n\nMinor Changes\n-------------\n\n-  Updated ``setup.py`` with more package information.\n-  Typos, redundancies & naming inaccuracies fixed around the code and\n   documentation.\n-  Tests updated & added to.\n\n\n\n\nChanges for version 0.2.3\n=========================\n\nMinor Changes\n-------------\n\n-  Typos & naming inaccuracies fixed around the code and\n   documentation.\n-  Added package to `git repo`_\n-  Added git repo url to ``setup.py``.\n-  The ``port`` attribute is currently unused. It may be removed if it\n   remains purposeless.\n\n\n\n\nChanges for version 0.2.2\n=========================\n\nMinor Changes\n-------------\n\n-  Typos & naming inaccuracies fixed around the code and\n   documentation.\n-  Switched the internal networking calls to use the higher level\n   ``network_get()`` & ``network_post()`` methods.\n-  Removed redundant ``shlex.quote()`` calls on args passed to the\n   ``command()`` method.\n-  Tests updated & added to.\n\n.. _git repo: https://github.com/rmlibre/tiny_gnupg.git\n\n\n\n\nChanges for version 0.2.1\n=========================\n\nMinor Changes\n-------------\n\n-  The names of some existing methods were changed. ``parse_output()``\n   is now ``read_output()``. ``gpg_directory()`` is now\n   ``format_homedir()``. The names of some existing attributes were\n   changed. ``gpg_path`` is now ``executable``, with its parent folder\n   uri now stored in ``home``. ``key_id`` is now ``fingerprint`` to\n   avoid similarities with the naming convention used for the methods\n   which query the package environment keys for uid information,\n   i.e. ``key_fingerprint()`` & ``key_email()``.\n\n\nMajor Changes\n-------------\n\n-  Good riddance to the pynput library hack! We figured out how to\n   gracefully send passphrases & other inputs into the gpg2\n   commandline interface. This has brought major changes to the package,\n   & lots of increased functionality.\n-  Many added utilities:\n\n   -  Keys generated with the ``gen_key()`` method now get stored in a\n      local keyring instead of the operating system keyring.\n   -  aiohttp, aiohttp_socks used to power the keyserver queries and\n      uploading features. All contact with the keyserver is done over\n      tor, with async/await syntax. ``search(uid)`` to query for a key\n      with matches to the supplied uid, which could be a fingerprint or\n      email address. ``network_import(uid)`` to import a key with\n      matches to the supplied uid. ``network_export(uid)`` to upload a\n      key in the package\u2019s keyring with matches to the supplied uid to\n      the keyserver. Also, raw access to the aiohttp.ClientSession\n      networking interface is available by using\n      ``async with instance.session as session:``. More info is\n      available in the `aiohttp docs`_\n   -  New ``text_import(key)``, ``file_import(filename)``,\n      ``text_export(key)``, & ``file_export(path, uid)`` methods for\n      importing & exporting keys from key strings or files.\n   -  New ``reset_daemon()`` method for refreshing the system gpg-agent\n      daemon if errors begin to occur from manual deletion or\n      modification of files in the package/gpghome/ directory.\n   -  New ``encrypt(message, recipient_uid)`` & ``decrypt(message)``\n      methods. The ``encrypt()`` method automatically signs the message,\n      therefore needs the key passphrase to be stored in the\n      ``passphrase`` attribute. The same goes for the ``decrypt()``\n      method.\n   -  The ``command(*options)``, ``encode_inputs(*inputs)``, and\n      ``read_output(commands, inputs)`` methods can be used to create\n      custom commands to the package\u2019s gpg2 environment. This allows for\n      flexibility without hardcoding flexibility into every method,\n      which would increase code size & complexity. The ``command()``\n      method takes a series of options that would normally be passed to\n      the terminal gpg2 program (such as \u2013encrypt) & returns a list\n      with those options included, as well as, the other boiler-plate\n      options (like the correct path to the package executable, & the\n      package\u2019s local gpg2 environment.). ``encode_inputs()`` takes a\n      series of inputs that will be needed by the program called with\n      the ``command()`` instructions, & ``bytes()`` encodes them with\n      the necessary linebreaks to signal separate inputs.\n      ``read_output()`` takes the instructions from ``command()`` and\n      inputs from ``encode_inputs()`` & calls\n      ``subprocess.check_output(commands, input=inputs).decode()`` on\n      them to retrieve the resulting terminal output.\n\n.. _aiohttp docs: https://docs.aiohttp.org/en/stable/client_advanced.html#client-session\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rmlibre/tiny_gnupg", "keywords": "gpg gpg2 gnupg gnupg2 await async asyncio clean simple code tor elliptic curve crypto ed25519 wrapper anonymous anonymity security beta testing automation adapter-pattern communications SOCKSv5 socks5 web", "license": "GPLv3", "maintainer": "Gonzo Investigatory Journalism Agency, LLC", "maintainer_email": "gonzo.development@protonmail.ch", "name": "tiny-gnupg", "package_url": "https://pypi.org/project/tiny-gnupg/", "platform": "", "project_url": "https://pypi.org/project/tiny-gnupg/", "project_urls": {"Homepage": "https://github.com/rmlibre/tiny_gnupg"}, "release_url": "https://pypi.org/project/tiny-gnupg/0.6.1/", "requires_dist": ["aiohttp", "aiofiles", "aiohttp-socks", "asyncio-contextmanager"], "requires_python": "", "summary": "tiny_gnupg - A small-as-possible solution for handling GnuPG ed25519 ECC keys.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tiny-gnupg-a-small-as-possible-solution-for-handling-gnupg-ed25519-ecc-keys\">\n<h2>tiny_gnupg - A small-as-possible solution for handling GnuPG ed25519 ECC keys.</h2>\n<p>A linux specific, small, simple &amp; intuitive wrapper for creating, using\nand managing GnuPG\u2019s Ed25519 curve keys. In our design, we favor\nreducing code size &amp; complexity with strong, bias defaults over\nflexibility in the api. Our goal is to turn the powerful, complex,\nlegacy gnupg system into a fun and safe tool to develop with.</p>\n<p>This project is currently in unstable beta. It works like a charm, but\nthere\u2019s likely, and often bugs floating around, and the api is subject\nto change. Contributions are welcome.</p>\n<a href=\"https://badge.fury.io/py/tiny-gnupg\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/tiny-gnupg.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3b34d7ce2af302046eed82de7224278cfed269e/68747470733a2f2f62616467652e667572792e696f2f70792f74696e792d676e7570672e737667\"></a>\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26b9e9cb188044d2a5570fd6d024f65c22422b93/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f726d6c696272652f74696e795f676e757067\">\n<a href=\"https://img.shields.io/badge/code%20style-black-000000.svg\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://raw.githubusercontent.com/rmlibre/tiny_gnupg/master/tests/coverage.svg?sanitize=true\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/rmlibre/tiny_gnupg/master/tests/coverage.svg?sanitize=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f5d665a0f1f89528ada2720b352e08318ccfbbb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726d6c696272652f74696e795f676e7570672f6d61737465722f74657374732f636f7665726167652e7376673f73616e6974697a653d74727565\"></a>\n<a href=\"https://github.com/rmlibre/tiny_gnupg/workflows/Python%20package/badge.svg\" rel=\"nofollow\"><img alt=\"https://github.com/rmlibre/tiny_gnupg/workflows/Python%20package/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63b8caa8714472b59cd08c1f691fbb2c87ccfe65/68747470733a2f2f6769746875622e636f6d2f726d6c696272652f74696e795f676e7570672f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>sudo apt-get install tor torsocks gnupg2\npip install --user --upgrade tiny_gnupg\n</pre>\n</div>\n<div id=\"usage-example\">\n<h3>Usage Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tiny_gnupg</span> <span class=\"kn\">import</span> <span class=\"n\">GnuPG</span>\n\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"username\"</span>\n<span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s2\">\"username@user.net\"</span>\n<span class=\"n\">passphrase</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_user_passphrase\"</span>\n<span class=\"n\">gpg</span> <span class=\"o\">=</span> <span class=\"n\">GnuPG</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This will generate a primary ed25519 ECC certifying key, and three</span>\n<span class=\"c1\"># subkeys, one each for the authentication, encryption, and signing</span>\n<span class=\"c1\"># functionalities.</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">gen_key</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Now this fingerprint can be used with arbitrary gpg2 commands.</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span>\n\n<span class=\"c1\"># But the key is stored in the package's local keyring. To</span>\n<span class=\"c1\"># talk to the package's gpg environment, an arbitrary command</span>\n<span class=\"c1\"># can be constructed like this -&gt;</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"--armor\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--encrypt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-r\"</span><span class=\"p\">,</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">]</span>\n<span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">encode_inputs</span><span class=\"p\">(</span><span class=\"s2\">\"Message to myself\"</span><span class=\"p\">)</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">read_output</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If a command would invoke the need for a passphrase, the</span>\n<span class=\"c1\"># with_passphrase kwarg should be set to True -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">with_passphase</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The passphrase then needs to be the first arg passed to</span>\n<span class=\"c1\"># encode_inputs -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">encode_inputs</span><span class=\"p\">(</span><span class=\"n\">passphrase</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">other_inputs</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># The list of keys in the package's environment can be accessed</span>\n<span class=\"c1\"># from the list_keys() method, which returns a dict -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">list_keys</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt;&gt;&gt; {fingerprint: email_address, ...}</span>\n\n<span class=\"c1\"># Or retrieve a specific key where a searchable portion of its uid</span>\n<span class=\"c1\"># information is known, like an email address or fingerprint -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">list_keys</span><span class=\"p\">(</span><span class=\"s2\">\"username@user.net\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; {\"EE36F0584971280730D76CEC94A470B77ABA6E81\": \"username@user.net\"}</span>\n\n<span class=\"c1\"># The raw output from the --list-keys gpg option can also be</span>\n<span class=\"c1\"># accessed -&gt;</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">raw_list_keys</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Let's try encrypting a message to Alice, whose public key is</span>\n<span class=\"c1\"># stored on keys.openpgp.org/.</span>\n\n<span class=\"c1\"># First, we'll import Alice's key from the keyserver (This requires</span>\n<span class=\"c1\"># a tor system installation. Or an open tor browser, and the tor_port</span>\n<span class=\"c1\"># attribute set to 9150) -&gt;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tiny_gnupg</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>\n\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">network_import</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"s2\">\"alice@email.domain\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Then encrypt a message with Alice's key and sign it -&gt;</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"So, what's the plan this Sunday, Alice?\"</span>\n<span class=\"n\">encrypted_message</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"s2\">\"alice@email.domain\"</span><span class=\"p\">,</span> <span class=\"n\">sign</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The process of encrypting a message to a peer whose public key</span>\n<span class=\"c1\"># might not be in the local package keyring is conveniently available</span>\n<span class=\"c1\"># in a single method. It automatically searches for the recipient's</span>\n<span class=\"c1\"># key on the keyserver so it can be used to encrypt the message -&gt;</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">auto_encrypt</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"s2\">\"alice@email.domain\"</span><span class=\"p\">))</span>  <span class=\"c1\"># Signing is automatic</span>\n\n\n<span class=\"c1\"># We could directly send a copy of our key to Alice, or upload it to</span>\n<span class=\"c1\"># the keyserver. Alice will need a copy so the signature on the</span>\n<span class=\"c1\"># message can be verified. So let's upload it to the keyserver -&gt;</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">network_export</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Alice could now import our key (after we do an email verification</span>\n<span class=\"c1\"># with the keyserver) -&gt;</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">network_import</span><span class=\"p\">(</span><span class=\"s2\">\"username@user.net\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Then Alice can simply receive the encrypted message and decrypt it -&gt;</span>\n<span class=\"n\">decrypted_msg</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">encrypted_message</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The process of decrypting a encrypted &amp; signed message from a peer</span>\n<span class=\"c1\"># whose public key might not be in the local package keyring is</span>\n<span class=\"c1\"># conveniently available in a single method. It automatically determines</span>\n<span class=\"c1\"># the signing key fingerprint, and searches for it on the keyserver</span>\n<span class=\"c1\"># to verify the signature -&gt;</span>\n<span class=\"n\">decrypted_msg</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">auto_decrypt</span><span class=\"p\">(</span><span class=\"n\">encrypted_message</span><span class=\"p\">))</span>\n</pre>\n<p>On most systems, because of a bug in <a href=\"https://dev.gnupg.org/T4393\" rel=\"nofollow\">GnuPG</a>, email verification of uploaded keys will be necessary for others to import them from the keyserver. That\u2019s because GnuPG will throw an error immediately upon trying to import keys with their uid information stripped off. We will replace the gpg2 executable as soon as a patch becomes available upstream.</p>\n<p>If the gpg2 executable doesn\u2019t work on your system, replace it with a copy of the executable found on your system. The package\u2019s executable can be found at: package_path/gpghome/gpg2. This path is also available from a class instance under the instance.executable attribute. Your system gpg2 executable is probably located at: /usr/bin/gpg2. You could also type: whereis gpg2 :to find it. If it\u2019s not there, then you\u2019ll have to install it with your system\u2019s equivalent of: sudo apt-get install gnupg2.</p>\n</div>\n<div id=\"networking-example\">\n<h3>Networking Example</h3>\n<pre><span class=\"c1\">#</span>\n<span class=\"c1\"># Since we use SOCKSv5 over tor for all of our networking, as well</span>\n<span class=\"c1\"># as the user-friendly aiohttp + aiohttp_socks libraries, the tor</span>\n<span class=\"c1\"># networking interface is also available to users. These utilities</span>\n<span class=\"c1\"># allow arbitrary POST and GET requests to clearnet, or onionland,</span>\n<span class=\"c1\"># websites -&gt;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tiny_gnupg</span> <span class=\"kn\">import</span> <span class=\"n\">GnuPG</span><span class=\"p\">,</span> <span class=\"n\">run</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">read_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">GnuPG</span><span class=\"p\">()</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">network_get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Now we can read webpages with GET requests -&gt;</span>\n<span class=\"n\">page_html</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">read_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://keys.openpgp.org/\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Let's try onionland -&gt;</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://zkaan2xfbuxia2wpf7ofnkbz6r5zdbbvxbunvp5g2iebopbfc4iqmbad.onion/\"</span>\n<span class=\"n\">onion_page_html</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">read_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Check your ip address for fun -&gt;</span>\n<span class=\"n\">ip_addr</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">read_url</span><span class=\"p\">(</span><span class=\"s2\">\"https://icanhazip.com/\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># There's a convenience function built into the class that</span>\n<span class=\"c1\"># basically mimics read_url() -&gt;</span>\n<span class=\"n\">ip_addr</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">GnuPG</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"https://icanhazip.com/\"</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># POST requests can also be sent with the network_post() method.</span>\n<span class=\"c1\"># Let's use a POST request to send the keyserver a new key we</span>\n<span class=\"c1\"># create -&gt;</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post_data</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">network_post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">gpg</span> <span class=\"o\">=</span> <span class=\"n\">GnuPG</span><span class=\"p\">(</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"username@user.net\"</span><span class=\"p\">,</span>\n    <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"test_user_passphrase\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">gen_key</span><span class=\"p\">()</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">keyserver_export_api</span>\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"keytext\"</span><span class=\"p\">:</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">text_export</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">)}</span>\n\n<span class=\"n\">api_token_json</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">post_data</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># There's also a convenience function built into the class that</span>\n<span class=\"c1\"># mimics post_data() -&gt;</span>\n<span class=\"n\">api_token_json</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># And there we have it, it's super simple. And these requests have</span>\n<span class=\"c1\"># the added benefit of being completely routed through tor. The</span>\n<span class=\"c1\"># keyserver here also has a v3 onion address which we use to query,</span>\n<span class=\"c1\"># upload, and import keys. This provides a nice, default layer of</span>\n<span class=\"c1\"># privacy to our communication needs. Have fun little niblets!</span>\n</pre>\n<p>These networking tools work off instances of aiohttp.ClientSession. To learn more about how to use their POST and GET requests, you can read the docs <a href=\"https://docs.aiohttp.org/en/stable/client_advanced.html#client-session\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"about-torification\">\n<h3>About Torification</h3>\n<pre><span class=\"c1\"># A user can make sure that any connections gnupg makes with the</span>\n<span class=\"c1\"># network are always run through tor by setting torify=True -&gt;</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s2\">\"username\"</span>\n<span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s2\">\"username@user.net\"</span>\n<span class=\"n\">passphrase</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_user_passphrase\"</span>\n<span class=\"n\">gpg</span> <span class=\"o\">=</span> <span class=\"n\">GnuPG</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"p\">,</span> <span class=\"n\">torify</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This is helpful because there are gnupg settings which cause</span>\n<span class=\"c1\"># certain commands to do automatic connections to the web. For</span>\n<span class=\"c1\"># instance, when encrypting, gnupg may be set to automatically</span>\n<span class=\"c1\"># search for the recipient's key on a keyserver if it's not in the</span>\n<span class=\"c1\"># local keyring. tiny_gnupg doesn't use gnupg's networking</span>\n<span class=\"c1\"># interface, and ensures tor connections through the aiohttp_socks</span>\n<span class=\"c1\"># library. So, if gnupg makes these kinds of silent connections,</span>\n<span class=\"c1\"># it can inadvertently reveal a user's ip.</span>\n</pre>\n<p>Using torify requires a tor installation on the user system. If it\u2019s\nrunning Debian/Ubuntu then this <a href=\"https://2019.www.torproject.org/docs/debian.html.en\" rel=\"nofollow\">guide</a> could be helpful.</p>\n</div>\n<div id=\"extras\">\n<h3>Extras</h3>\n<pre><span class=\"c1\"># It turns out that the encrypt() method automatically signs the</span>\n<span class=\"c1\"># message being encrypted. So, the `sign=False` flag only has to be</span>\n<span class=\"c1\"># passed when a user doesn't want to sign a message -&gt;</span>\n<span class=\"n\">encrypted_unsigned_message</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span>\n    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;-- Unknown sender\"</span><span class=\"p\">,</span>\n    <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"s2\">\"alice@email.domain\"</span><span class=\"p\">,</span>  <span class=\"c1\"># sending to alice</span>\n    <span class=\"n\">sign</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># It also turns out, a user can sign things independently from</span>\n<span class=\"c1\"># encrypting -&gt;</span>\n<span class=\"n\">signed_data</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">\"maybe a hash of a file?\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or sign a key in the package's keyring -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"s2\">\"alice@email.domain\"</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And verify data as well -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">signed_data</span><span class=\"p\">)</span>  <span class=\"c1\"># throws if invalid</span>\n\n<span class=\"c1\"># Importing key files is also a thing -&gt;</span>\n<span class=\"n\">path_to_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"/home/user/keyfiles/\"</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">file_import</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path_to_file</span> <span class=\"o\">+</span> <span class=\"s2\">\"alices_key.asc\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># As well as exporting public keys -&gt;</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">file_export</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path_to_file</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># And secret keys, but really, keep those safe! -&gt;</span>\n<span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">file_export</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path_to_file</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">secret</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># The keys don't have to be exported to a file. Instead they can</span>\n<span class=\"c1\"># be exported as strings -&gt;</span>\n<span class=\"n\">my_key</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">text_export</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># So can secret keys (Be careful!) -&gt;</span>\n<span class=\"n\">my_secret_key</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">text_export</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">,</span> <span class=\"n\">secret</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And they can just as easily be imported from strings -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">text_import</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">my_key</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"retiring-keys\">\n<h3>Retiring Keys</h3>\n<p>After a user no longer considers a key useful, or wants to dissociate from the key, then they have some options:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tiny_gnupg</span> <span class=\"kn\">import</span> <span class=\"n\">GnuPG</span><span class=\"p\">,</span> <span class=\"n\">run</span>\n\n<span class=\"n\">gpg</span> <span class=\"o\">=</span> <span class=\"n\">GnuPG</span><span class=\"p\">(</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"username@user.net\"</span><span class=\"p\">,</span>\n    <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"test_user_passphrase\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># They can revoke their key then distribute it publicly (somehow)</span>\n<span class=\"c1\"># (the keyserver can't currently handle key revocations) -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">revoke</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">)</span>\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">text_export</span><span class=\"p\">(</span><span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">fingerprint</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;--  Distribute this!</span>\n\n<span class=\"c1\"># And/or they can delete the key from the package keyring like</span>\n<span class=\"c1\"># this -&gt;</span>\n<span class=\"n\">gpg</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"s2\">\"username@user.net\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"known-issues\">\n<h2><tt>Known Issues</tt></h2>\n<ul>\n<li>Because of Debian <a href=\"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=930665\" rel=\"nofollow\">bug #930665</a>, &amp; related GnuPG <a href=\"https://dev.gnupg.org/T4393\" rel=\"nofollow\">bug #T4393</a>,\nimporting keys from the default keyserver <a href=\"https://keys.openpgp.org/\" rel=\"nofollow\">keys.openpgp.org</a> doesn\u2019t\nwork automatically on all systems. Not without email confirmation, at\nleast. That\u2019s because the keyserver will not publish uid information\nattached to a key before a user confirms access to the email address\nassigned to the uploaded key. And, because GnuPG folks are still\nholding up the merging, &amp; back-porting, of patches that would allow\nGnuPG to automatically handle keys without uids gracefully. This\neffects the <tt>network_import()</tt> method specifically, but also the\n<tt>text_import()</tt> &amp; <tt>file_import()</tt> methods, if they happen to be\npassed a key or filename argument which refers to a key without uid\ninformation. The gpg2 binary in this package can be replaced manually\nif a user\u2019s system has access to a patched version.</li>\n<li>Because of GnuPG <a href=\"https://dev.gnupg.org/T3065#111023\" rel=\"nofollow\">bug #T3065</a>, &amp; related <a href=\"https://bugs.launchpad.net/ubuntu/+source/gnupg2/+bug/1788190\" rel=\"nofollow\">bug #1788190</a>, the\n<tt><span class=\"pre\">--keyserver</span></tt> &amp; <tt><span class=\"pre\">--keyserver-options</span> <span class=\"pre\">http-proxy</span></tt> options won\u2019t\nwork with onion addresses, &amp; they cause a crash if a keyserver\nlookup is attempted. This is not entirely an issue for us since we\ndon\u2019t use gnupg\u2019s networking interface. In fact, we set these\nenvironment variables anyway to crash on purpose if gnupg tries to\nmake a network connection. And in case the bug ever gets fixed (it\nwon\u2019t), or by accident the options do work in the future, then a tor\nSOCKSv5 connection will be used instead of a raw connection.</li>\n<li>This program may only be reliably compatible with keys that are also\ncreated with this program. That\u2019s because our terminal parsing is\nreliant on specific metadata to be similar across all encountered\nkeys. It seems most keys have successfully been parsed with recent\nupdates, though more testing is needed.</li>\n<li>The tests don\u2019t currently work when a tester\u2019s system has a system\ninstallation of tiny_gnupg, &amp; the tests are being run from a local\ngit repo directory. That\u2019s because the tests import tiny_gnupg, but\nif the program is installed in the system, then python will get\nconfused about which keyring to use during the tests. This will lead\nto crashes &amp; failed tests. Git clone testers probably have to run\nthe test script closer to their system installation, one directory up\n&amp; into a tests folder. Or pip uninstall tiny_gnupg. OR, send a pull\nrequest with an import fix.</li>\n<li>Currently, the package is part synchronous, &amp; part asynchronous.\nThis is not ideal, so a decision has to be made: either to stay mixed\nstyle, or choose one consistent style.</li>\n<li>We\u2019re still in unstable beta &amp; have to build out our test suite.\nContributions welcome.</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><tt>Changelog</tt></h2>\n</div>\n<div id=\"changes-for-version-0-6-1\">\n<h2>Changes for version 0.6.1</h2>\n<div id=\"minor-changes\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Edits to <tt>test_tiny_gnupg.py</tt>.</li>\n</ul>\n</div>\n<div id=\"major-changes\">\n<h3>Major Changes</h3>\n<ul>\n<li>Cause of CI build failures found. The sks/pks keyserver\u2019s onion address\nwas not accessible anymore. They seemed to have switched to a new onion\naddress available here: <a href=\"http://pgpkeysximvxiazm.onion\" rel=\"nofollow\">http://pgpkeysximvxiazm.onion</a>.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-6-0\">\n<h2>Changes for version 0.6.0</h2>\n<div id=\"id1\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Changes to deduce bug causing CI failure.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>Major Changes</h3>\n<ul>\n<li>Switch from <tt>aiohttp_socks</tt>\u2019s deprecated <tt>SocksProxy</tt> to the newer\nand supported <tt>ProxyConnector</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-9\">\n<h2>Changes for version 0.5.9</h2>\n<div id=\"id3\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Add checks in <tt>network_sks_import()</tt> for html failute sentinels.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>Major Changes</h3>\n<ul>\n<li>Spread out the amount of queries per key in <tt>test_tiny_gnupg.py</tt> so\nthe keyserver\u2019s rate limiting policies don\u2019t cause the CI build to\nfail as often.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-8\">\n<h2>Changes for version 0.5.8</h2>\n<div id=\"id5\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Fix <tt>setup</tt> attribution kwargs in <tt>setup.py</tt>.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added new <tt>network_sks_import()</tt> method which allows users to query the\nsks infrastructure for public keys as well. We use an onion address mirror\nof the sks/pks network available here: <a href=\"http://jirk5u4osbsr34t5.onion\" rel=\"nofollow\">http://jirk5u4osbsr34t5.onion</a>.</li>\n<li>Added new <tt>manual</tt> kwarg to <tt>command</tt> which simplifies the process\nof using the <tt>GnuPG()</tt> class to manage gpg2 non-programmatically.\nPassing <tt>manual=True</tt> will allow users to craft commands and interact\ndirectly with the gpg2 interface.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-7\">\n<h2>Changes for version 0.5.7</h2>\n<div id=\"id7\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Tests added to include checks for instance-isolated identities.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>Major Changes</h3>\n<ul>\n<li><tt>reset_daemon()</tt> calls added to <tt>decrypt()</tt>, <tt>verify()</tt>, <tt>sign()</tt>\n&amp; <tt>encrypt()</tt>. This call kills the gpg-agent process &amp; restarts it,\nwhich in turn wipes the caching of secret keys available on the system\nwithout a passphrase. This is crucial for users of applications with\nmultiple GnuPG objects that handle separate key identities. That\u2019s\nbecause these methods will now throw <tt>PermissionError</tt> or <tt>LookupError</tt>\nif a private key operation is needed from an instance which is already\nassigned to another private key in the keyring. This gives some important\nanonymity protections to users.</li>\n<li>More improvements to error reporting.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-6\">\n<h2>Changes for version 0.5.6</h2>\n<div id=\"id9\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added newly developed <tt>auto_decrypt()</tt> &amp; <tt>auto_encrypt()</tt> methods\nto the <tt>README.rst</tt> tutorial.</li>\n<li>Allow keyserver queries with spaces by replacing <tt>\" \"</tt> with url\nencoding <tt>\"%20\"</tt>.</li>\n<li><tt><span class=\"pre\">packet_fingerprint(target=\"\")</span></tt> &amp; <tt><span class=\"pre\">list_packets(target=\"\")</span></tt> methods\nnow raise <tt>TypeError</tt> when <tt>target</tt> is clearly not OpenPGP data.</li>\n<li>Tests added to account for new error handling in <tt>tiny_gnupg.py</tt>.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>Major Changes</h3>\n<ul>\n<li><tt><span class=\"pre\">--no-tty</span></tt> seems to keep most of the noise from terminal output while\nalso displaying important banner information. For instance, signature\nverification still produces detailed signature information. Because it\nautomatically seems to behave as desired, it\u2019s here to stay.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-5\">\n<h2>Changes for version 0.5.5</h2>\n<div id=\"id11\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added to Known Issues. Our package can\u2019t build on Github (Or most any\nCI service) for many reasons related their build environments using\nDocker &amp; an issue in GnuPG itself.</li>\n<li>Removed Above known issue as a fix was found for using the Github CI\ntool.</li>\n<li>Added <tt>_home</tt>, <tt>_executable</tt>, &amp; <tt>_options</tt> attributes which\nstore the <tt>pathlib.Path.absolute()</tt> representation of the associated\nfiles &amp; directories.</li>\n<li>Added <tt>options</tt> attribute with is the str value of the <tt>_options</tt>\n<tt>pathlib</tt> path to the configuration file used by the package.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added <tt><span class=\"pre\">\"--no-tty\"</span></tt> option to <tt>command()</tt> method which conveniently\ntells gpg2 not to use the terminal to output messages. This has lead to\na substantial, possibly complete, reduction in the amount of noise gpg2\nprints to the screen. Some of that printed information is helpful to\nsee, though. We would add it back in places where it could be informative,\nbut passing <tt><span class=\"pre\">\"--no-tty\"</span></tt> has the added benefit of allowing Docker not\nto break right out of the gate of a build test. More thought on this\nis required.</li>\n<li>Removed <tt>pathlib</tt> from imports. That module has been in the standard\nlibrary since c-python3.4. This package isn\u2019t looking to be supported\nfor anything older than 3.6.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-4\">\n<h2>Changes for version 0.5.4</h2>\n<div id=\"id13\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Style edits to <tt>PREADME.rst</tt>.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed a major bug in <tt>decrypt()</tt> which miscategorized a fingerprint scraped\nfrom a message as the sender\u2019s, when in fact it should be the recipient\u2019s.\nGetting the sender\u2019s fingerprint requires successfully decrypting the\nmessage &amp; scraping the signature from inside if it exists. We do this\nnow, raising <tt>LookupError</tt> if the signature inside has no corresponding\npublic key in the package keyring.</li>\n<li>Added new <tt>auto_encrypt()</tt> method which follows after <tt>auto_decrypt()</tt>\nin allowing a user to attempt to encrypt a message to a recipient\u2019s\nkey using the value in the <tt>uid</tt> kwarg. If there\u2019s no matching key\nin the package keyring, then the keyserver is queried for a key\nthat matches <tt>uid</tt> where then <tt>message</tt> is encrypted if found, or\n<tt>FileNotFoundError</tt> is raised if not.</li>\n<li>Added better exception raising throughout the <tt>GnuPG</tt> class:<ul>\n<li>Now, instead of calling <tt>read_output()</tt> when the supplied <tt>uid</tt>\nhas no key in the package keyring, a <tt>LookupError</tt> is raised.</li>\n<li>The best attempt at deriving a 40-byte key fingerprint from <tt>uid</tt> is\nreturned back through the <tt>LookupError</tt> exception object\u2019s <tt>value</tt>\nattribute for downstream error handling.</li>\n<li><tt>verify()</tt> raises <tt>PermissionError</tt> if verification cannot be\ndone on the <tt>message</tt> kwarg. Raises <tt>LookupError</tt> instead if\na public key is needed in order to attempt verification. <tt>verify</tt>\ncan\u2019t be used on an encrypted messages in general, unless <tt>message</tt>\nis specifcally a signature, not encrypted plaintext. This is just\nnot how verify works. Signatures are on the inside on encrypted\nmessages. So <tt>decrypt()</tt> should be used for those instead, it\nthrows if a signature is invalid on a message.</li>\n<li>A rough guide now exists for what exceptions mean, since we\u2019ve given\nnames &amp; messages to the most likely errors, &amp; helper functions\nto resolve them. Users can now expect to run into more than just\nthe in decript <tt>CalledProcessError</tt>. Exceptions currently being\nused include: <tt>LookupError</tt>, <tt>PermissionError</tt>, <tt>TypeError</tt>,\n<tt>ValueError</tt>, <tt>KeyError</tt>, &amp; <tt>FileNotFoundError</tt>.</li>\n</ul>\n</li>\n<li><tt>ValueError</tt> raised in <tt>text_export()</tt> &amp; <tt>sign()</tt> switched to\n<tt>TypeError</tt> as it\u2019s only raised when their <tt>secret</tt> or <tt>key</tt>\nkwargs, respectively, are not of type <tt>bool</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-3\">\n<h2>Changes for version 0.5.3</h2>\n<h2 id=\"id15\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Fixing PyPi <tt>README.rst</tt> rendering.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-5-2\">\n<h2>Changes for version 0.5.2</h2>\n<h2 id=\"id16\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Futher test cleanups. We\u2019re now at 100% line coverage &amp; 99% branch\ncoverage.</li>\n<li>Code cleanups. <tt>raw_packets()</tt> now passes the uid information it\u2019s\ngathered through the <tt>KeyError</tt> exception, in the <tt>value</tt> attribute\ninstead of copying <tt>subprocess</tt>\u2019s <tt>output</tt> attribute naming convention.</li>\n<li>License, coverage, package version badges added to <tt>README.rst</tt>.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-5-1\">\n<h2>Changes for version 0.5.1</h2>\n<div id=\"id17\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Fixed inaccuracies &amp; mess-ups in the tests. Added tests for parsing\nsome legacy keys\u2019 packets with <tt>raw_packets()</tt>.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>Major Changes</h3>\n<ul>\n<li>Bug in the packet parser has been patched which did not correctly\nhandle or recognize some legacy key packet types. This patch widens\nthe pool of compatible OpenPGP versions.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-5-0\">\n<h2>Changes for version 0.5.0</h2>\n<h2 id=\"id19\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Removed coverage.py html results. They are too big, &amp; reveal device\nspecific information.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-4-9\">\n<h2>Changes for version 0.4.9</h2>\n<div id=\"id20\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Various code cleanups.</li>\n<li>Added to test cases for auto fetch methods &amp; packet parsing.</li>\n<li>Documentation improvements: <tt>README.rst</tt> edits. <tt>CHANGES.rst</tt>\nKnown Issues moved to its own section at the top. Docstrings now\nindicate code args &amp; kwargs in restructured text, double tick\nformat.</li>\n<li>Added <tt><span class=\"pre\">use-agent</span></tt> back into the gpg2.conf file to help gnupg to not\nopen the system pinentry window. This may have implications for\nanonymity since multiple instances runnning on a user machine will\nbe able to use the same agent to decrypt message\u2019s, even if the\ndecrypting instance wasn\u2019t the <strong>intended</strong> recipient. This may be\nremoved again. A factor in this decision is that, it\u2019s not clear\nwhether removing it or adding <tt><span class=\"pre\">no-use-agent</span></tt> would even <a href=\"https://stackoverflow.com/questions/47273922/purpose-of-gpg-agent-in-gpg2\" rel=\"nofollow\">have an impact</a>\non the gpg-agent\u2019s decisions.</li>\n<li><tt>_session</tt>, <tt>_connector</tt>, <tt>session</tt> &amp; <tt>connector</tt> contructors\nwere renamed to title case, since they are class references or are\nclass factories. They are now named <tt>_Session</tt>, <tt>_Connector</tt>,\n<tt>Session</tt> &amp; <tt>Connector</tt>.</li>\n<li>Added some functionality to <tt>setup.py</tt> so that the <tt>long_description</tt>\non PyPI which displays both <tt>README.rst</tt> &amp; <tt>CHANGES.rst</tt>, will\nalso be displayed on github through a combined <tt>README.rst</tt> file.\nThe old <tt>README.rst</tt> is now renamed <tt>PREADME.rst</tt>.</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>Major Changes</h3>\n<ul>\n<li>100% test coverage!</li>\n<li>Fixed bug in <tt>raw_packets()</tt> which did not return the packet\ninformation when gnupg throws a \u201cno private key\u201d error. Now the\npacket information is passed in the <tt>output</tt> attribute of the\n<tt>KeyError</tt> exception up to <tt>packet_fingerprint()</tt> and\n<tt>list_packets()</tt>. If another cause is determined for the error, then\n<tt>CalledProcessError</tt> is raised instead.</li>\n<li><tt>packet_fingerprint()</tt> now returns a 16 byte key ID when parsing\npackets of encrypted messages which would throw a gnupg \u201cno private\nkey\u201d error. The longer 40 byte fingerprint is not available in the\nplaintext packets.</li>\n<li>New <tt>list_packets()</tt> method added to handle the error scraping of\n<tt>raw_packets()</tt> &amp; return the <tt>target</tt>\u2019s metadata information in\na more readable format.</li>\n<li>Fixed bug in <tt>format_list_keys()</tt> which did not properly parse\n<tt>raw_list_keys(secret=False)</tt> when <tt>secret</tt> was toggled to <tt>True</tt>\nto display secret keys. The bug would cause the program to falsely\nshow that only one secret key exists in the package keyring,\nirrespective of how many secret keys were actually there.</li>\n<li>Added a second round of fingerprint finding in <tt>decrypt()</tt> and\n<tt>verify()</tt> to try at returning more accurate results to callers and\nin the raised exception\u2019s <tt>value</tt> attribute used by <tt>auto_decrypt()</tt>\n&amp; <tt>auto_verify()</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-8\">\n<h2>Changes for version 0.4.8</h2>\n<div id=\"id22\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Fixed typos across the code.</li>\n<li>Added to test cases.</li>\n<li>Documentation improvements. <tt>CHANGES.md</tt> has been converted to\n<tt>CHANGES.rst</tt> for easy integration into <tt>README.rst</tt> and\n<tt>long_description</tt> of <tt>setup.py</tt>.</li>\n<li><tt>README.rst</tt> tutorial expanded.</li>\n<li>Condensed command constructions in <tt>set_base_command()</tt> and\n<tt>gen_key()</tt> by reducing redundancy.</li>\n<li>Fixed <tt>delete()</tt> method\u2019s print noisy output when called on a key\nwhich doesn\u2019t have a secret key in the package\u2019s keyring.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added a <tt>secret</tt> kwarg to <tt>list_keys()</tt> method which is a boolean\ntoogle between viewing keys with public keys &amp; viewing keys with\nsecret keys.</li>\n<li>Added a reference to the asyncio.get_event_loop().run_until_complete\nfunction in the package. It is now importable with\n<tt>from tiny_gnupg import run</tt> or <tt>from tiny_gnupg import *</tt>. It\nwas present in all of the tutorials, &amp; since we haven\u2019t decided to\ngo either all async or sync yet, it\u2019s a nice helper.</li>\n<li>Added <tt><span class=\"pre\">raw_packets(target=\"\")</span></tt> method which takes in OpenPGP data,\nlike a message or key, &amp; outputs the raw terminal output of the\n<tt><span class=\"pre\">--list-packets</span></tt> option. Displays very detailed information of all\nthe OpenPGP metadata on <tt>target</tt>.</li>\n<li>Added <tt><span class=\"pre\">packet_fingerprint(target=\"\")</span></tt> method which returns the\nissuer fingerprint scraped off of the metadata returned from\n<tt>raw_packets(target)</tt>. This is a very effective way to retrieve\nuid information from OpenPGP signatures, messages &amp; keys to\ndetermine beforehand whether the associated sender\u2019s key is or isn\u2019t\nalready in the package\u2019s keyring.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-7\">\n<h2>Changes for version 0.4.7</h2>\n<div id=\"id24\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Fixed typos across the code.</li>\n<li>Added to test cases.</li>\n<li>Added tests explanation in <tt>test_tiny_gnupg.py</tt>.</li>\n<li>Documentation improvements.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added exception hooks to <tt>decrypt()</tt> &amp; <tt>verify()</tt> methods. They\nnow raise <tt>KeyError</tt> when the OpenPGP data they\u2019re verifying\nrequire a signing key that\u2019s not in the package\u2019s keyring. The\nfingerprint of the required key is printed out &amp; stored in the\n<tt>value</tt> attribute of the raised exception.</li>\n<li>Added new <tt>auto_decrypt()</tt> &amp; <tt>auto_verify()</tt> async methods\nwhich catch the new exception hooks to automatically try a torified\nkeyserver lookup before raising a KeyError exception. If a key is\nfound, it\u2019s downloaded &amp; an attempt is made to verify the data.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-6\">\n<h2>Changes for version 0.4.6</h2>\n<div id=\"id26\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added to test cases.</li>\n<li>Changed the project long description in the <tt>README.rst</tt>.</li>\n<li>Added docstrings to all the methods in the <tt>GnuPG</tt> class, &amp; the\nclass itself.</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>Major Changes</h3>\n<ul>\n<li>Turned off options in gpg2.conf <tt><span class=\"pre\">require-cross-certification</span></tt> and\n<tt><span class=\"pre\">no-comment</span></tt> because one or both may be causing a bug where using\nprivate keys raises an \u201cunusable private key\u201d error.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-5\">\n<h2>Changes for version 0.4.5</h2>\n<div id=\"id28\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Updated package metadata files to be gpg2.conf aware.</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added support for a default package-wide gpg2.conf file.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-4\">\n<h2>Changes for version 0.4.4</h2>\n<div id=\"id30\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added new tests. We\u2019re at 95% code coverage.</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>Major Changes</h3>\n<ul>\n<li>Changed the default expiration date on generated keys from never to 3\nyears after created. This is both for the integrity of the keys, but\nalso as a courtesy to the key community by not recklessly creating\nkeys that never expire.</li>\n<li>Added <tt>revoke(uid)</tt> method, which revokes the key with matching\n<tt>uid</tt> if the secret key is owned by the user &amp; the key passphrase\nis stored in the instance\u2019s <tt>passphrase</tt> attribute.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-3\">\n<h2>Changes for version 0.4.3</h2>\n<div id=\"id32\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Changed package description to name more specifically the kind of ECC\nkeys this package handles.</li>\n<li>Removed the trailing newline character that was inserted into the end\nof every <tt>encrypt()</tt> &amp; <tt>sign()</tt> message.</li>\n<li>Added new tests.</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed bug in <tt>__init__()</tt> caused by the set_base_command() not\nbeing called before the base commands are used. This leading to the\nfingerprint for a persistent user not being set automatically.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-2\">\n<h2>Changes for version 0.4.2</h2>\n<div id=\"id34\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added some keyword argument names to <tt>README.rst</tt> tutorials.</li>\n<li>Added section in <tt>README.rst</tt> about torification.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added a check in <tt>encrypt()</tt> for the recipient key in the local\nkeyring which throws if it doesn\u2019t exist. This is to prevent gnupg\nfrom using wkd to contact the network to find the key on a keyserver.</li>\n<li>Added a new <tt>torify=False</tt> kwarg to <tt>__init__()</tt> which prepends\n<tt>\"torify\"</tt> to each gpg2 command if set to <tt>True</tt>. This will make\nsure that if gnupg makes any silent connections to keyservers or the\nweb, that they are run through tor &amp; don\u2019t expose a users ip\naddress inadvertently.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-4-1\">\n<h2>Changes for version 0.4.1</h2>\n<h2 id=\"id36\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Fixed typos in <tt>tiny_gnupg.py</tt>.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-4-0\">\n<h2>Changes for version 0.4.0</h2>\n<div id=\"id37\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added keywords to <tt>setup.py</tt></li>\n<li>Added copyright notice to LICENSE file.</li>\n<li>Code cleanups.</li>\n<li>Updated <tt>README.rst</tt> tutorials.</li>\n<li>Added new tests.</li>\n<li>Include .gitignore in MANIFEST.in for PyPI.</li>\n<li>Made all path manipulations more consistent by strictly using\npathlib.Path for directory specifications.</li>\n<li>Added strict truthiness avoidance to <tt>sign()</tt> for the <tt>key</tt>\nboolean kwarg.</li>\n<li>Added strict truthiness avoidance to <tt>text_export()</tt> for the\n<tt>secret</tt> boolean kwarg.</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added <tt>key</tt> kwarg to the <tt><span class=\"pre\">sign(target=\"\",</span> key=False)</tt> method to\nallow users to toggle between signing arbitrary data &amp; signing a\nkey in the package\u2019s local keyring.</li>\n<li>Changed the <tt>message</tt> kwarg in <tt><span class=\"pre\">sign(message=\"\")</span></tt> to <tt>target</tt>\nso it is also accurate when the method is used to sign keys instead\nof arbitrary data.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-9\">\n<h2>Changes for version 0.3.9</h2>\n<div id=\"id39\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added new tests.</li>\n</ul>\n</div>\n<div id=\"id40\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed new crash caused by <tt><span class=\"pre\">--batch</span></tt> keyword in <tt>encrypt()</tt>. When\na key being used to encrypt isn\u2019t ultimately trusted, gnupg raises an\nerror, but this isn\u2019t a desired behavior. So, <tt><span class=\"pre\">--batch</span></tt> is removed\nfrom the command sent from the method.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-8\">\n<h2>Changes for version 0.3.8</h2>\n<div id=\"id41\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added new tests.</li>\n<li>Removed <tt>base_command()</tt> method because it was only a layer of\nindirection. It was merged into <tt>command()</tt>.</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added the <tt><span class=\"pre\">--batch</span></tt>, <tt><span class=\"pre\">--quiet</span></tt> &amp; <tt><span class=\"pre\">--yes</span></tt> arguments to the\ndefault commands contructed by the <tt>command()</tt> method.</li>\n<li>Added the <tt><span class=\"pre\">--quiet</span></tt> &amp; <tt><span class=\"pre\">--yes</span></tt> arguments to the command\nconstructed internally to the <tt>gen_key()</tt> method.</li>\n<li>Added a general uid \u2014&gt; fingerprint uid conversion in <tt>delete()</tt> to\ncomply with gnupg limitations on how to call functions that\nautomatically assume yes to questions. The Up-shot is that\n<tt>delete()</tt> is now fully automatic, requiring no user interaction.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-7\">\n<h2>Changes for version 0.3.7</h2>\n<div id=\"id43\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added new tests.</li>\n<li>Typos &amp; inaccuracies fixed around the code &amp; documentation.</li>\n</ul>\n</div>\n<div id=\"id44\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added new <tt>secret</tt> kwargs to <tt>text_export(uid, secret=bool)</tt> and\n<tt>file_export(path, uid, secret=bool)</tt> to allow secret keys to be\nexported from the package\u2019s environment.</li>\n<li>Added new <tt>post(url, **kw)</tt> &amp; <tt>get(url, **kw)</tt> methods to allow\naccess to the networking tools without having to manually construct\nthe <tt>network_post()</tt> &amp; <tt>network_get()</tt> context managers. This\nturns network calls into one liners that can be more easily wrapped\nwith an asyncio <tt>run</tt> function.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-6\">\n<h2>Changes for version 0.3.6</h2>\n<div id=\"id45\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Added new tests for networking methods.</li>\n<li>Documentation updates &amp; accuracy fixes.</li>\n</ul>\n</div>\n<div id=\"id46\">\n<h3>Major Changes</h3>\n<ul>\n<li>Removed a check in <tt>network_import()</tt> which wasn\u2019t useful and\nshould\u2019ve been causing problems with imports, even though the tests\ndidn\u2019t seem to notice.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-5\">\n<h2>Changes for version 0.3.5</h2>\n<div id=\"id47\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Switched the aiocontext package license with the license for\nasyncio-contextmanager.</li>\n</ul>\n</div>\n<div id=\"id48\">\n<h3>Major Changes</h3>\n<ul>\n<li>The packaging issues seem to be resolved. Packaging as v0.3.5-beta,\nthe first release that did not ship completely broken through pip\ninstall \u2013user tiny_gnupg.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-4\">\n<h2>Changes for version 0.3.4</h2>\n<h2 id=\"id49\"><span class=\"section-subtitle\">Major Changes</span></h2>\n<ul>\n<li>Fixing a major bug in the parameters passed to <tt>setup()</tt> which did\nnot correctly tell setuptools to package the gpghome folder &amp; gpg2\nbinary. This may take a few releases to troubleshoot &amp; bug fix\nfully.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-3-3\">\n<h2>Changes for version 0.3.3</h2>\n<h2 id=\"id50\"><span class=\"section-subtitle\">Major Changes</span></h2>\n<ul>\n<li>Fixed a big bug where the wrong package was imported with the same\nname as the intended module. AioContext was imported in setuptools,\nbut the package that is needed is asyncio-contextmanager for its\naiocontext module. This lead to the program being un-runable due to\nan import error.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-3-2\">\n<h2>Changes for version 0.3.2</h2>\n<div id=\"id51\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Rolled back the changes in <tt>trust()</tt> that checked for trust levels\non keys to avoid sending an unnecessary byte of data through the\nterminal. Mostly because the attempted fix did not fix the issue. And\nthe correct fix involves a wide branching of state &amp; argument\nchecking. That runs contrary to the goal of the package for\nsimplicity, so it isn\u2019t going to be addressed for now.</li>\n<li>Edited some of the <tt>README.rst</tt> tutorials.</li>\n</ul>\n</div>\n<div id=\"id52\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fix bug in <tt>file_import()</tt> method where await wasn\u2019t called on the\nkeyfile.read() object, leading to a crash.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-1\">\n<h2>Changes for version 0.3.1</h2>\n<div id=\"id53\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Fixed a bug in <tt>trust()</tt> which caused an extra <tt>b\u201cy\\n\u201d</tt>\nto be sent to the interactive prompt when setting keys as anything\nbut ultimately trusted. This was because there\u2019s an extra terminal\ndialog asking for a \u201cy\u201d confirmation that is not there when a key is\nbeing set as ultimately trusted. This didn\u2019t have a serious effect\nother than displaying a \u201cInvalid command (try \u2018help\u2019)\u201d dialog.</li>\n<li>Removed <tt>local_user</tt> kwarg from the <tt>raw_list_keys()</tt> and\n<tt>trust()</tt> methods, as it doesn\u2019t seem to matter which \u201cuser\u201d\nperspective views the list of keys or modifies trust. It is very\nlikely always displaying keys from the perspective of the global\nagent.</li>\n<li>Typos, redundancies &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Tests updated &amp; added to.</li>\n</ul>\n</div>\n<div id=\"id54\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed a bug in <tt>encrypt()</tt> which caused a <tt>\u201cy\\n\u201d</tt> to be\nprepended to plaintext that was sent to ultimately trusted keys. This\nwas because there\u2019s an extra terminal dialog asking for a \u201cy\u201d\nconfirmation that is not there when a key is ultimately trusted.</li>\n<li>Added a <tt>key_trust(uid)</tt> method to allow easy determination of\ntrust levels set on keys in the local keyring.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-3-0\">\n<h2>Changes for version 0.3.0</h2>\n<div id=\"id55\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Changed MANIFEST.in to a more specific include structure, &amp; a\nredundant exclude structure, to more confidently keep development\nenvironment key material from being uploaded during packaging.</li>\n</ul>\n</div>\n<div id=\"id56\">\n<h3>Major Changes</h3>\n<ul>\n<li>Overhauled the <tt>gen_key()</tt> which now creates a different set of\ndefault keys. We are no longer creating one primary key which does\ncertifying &amp; signing, with one subkey which handles encryption.\nInstead, we create one certifying primary key, with three subkeys,\none each for handling encryption, authentication, &amp; signing. This\nis a more theoretically secure default key setup, &amp; represents a\ncommon best-practice.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-2-9\">\n<h2>Changes for version 0.2.9</h2>\n<div id=\"id57\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Edited some of the <tt>README.rst</tt> tutorials</li>\n<li>Changed <tt>file_import()</tt>\u2019s <tt>filename</tt> kwarg to <tt>path</tt> for\nclarity.</li>\n<li>Fixed bug in <tt>trust()</tt> which would allow a float to be passed to\nthe terminal when an integer was needed.</li>\n<li>Changed the way the email address in displayed in\n<tt>network_export()</tt>, removing the surrounding list brackets.</li>\n<li>Changed the FILE_PATH global to HOME_PATH for clarity.</li>\n<li>Changed the <tt>id_link</tt> variable in <tt>network_import()</tt> to\n<tt>key_url</tt> for clarity.</li>\n</ul>\n</div>\n<div id=\"id58\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed a bug in <tt>format_list_keys()</tt> which would imporperly split\nthe output string when uid information contained the <tt>\"pub\"</tt>\nstring.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-2-8\">\n<h2>Changes for version 0.2.8</h2>\n<div id=\"id59\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Edited some of the <tt>README.rst</tt> tutorials.</li>\n</ul>\n</div>\n<div id=\"id60\">\n<h3>Major Changes</h3>\n<ul>\n<li>Fixed a bug in the <tt>trust()</tt> method which caused it to never\ncomplete execution.</li>\n<li>Fixed a bug in the <tt>trust()</tt> method which falsely made 4 the\nhighest trust level, instead of 5.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-2-7\">\n<h2>Changes for version 0.2.7</h2>\n<h2 id=\"id61\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Fixed statement in <tt>README.rst</tt> describing bug #T4393.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-2-6\">\n<h2>Changes for version 0.2.6</h2>\n<div id=\"id62\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Typos, redundancies &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Added a new POST request tutorial to the <tt>README.rst</tt>.</li>\n<li>Added <tt>\"local_user\"</tt> kwarg to some more methods where the output\ncould at least be partially determined by the point of view of the\nkey gnupg thinks is the user\u2019s.</li>\n</ul>\n</div>\n<div id=\"id63\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added a signing toggle to the <tt>encrypt(sign=True)</tt> method. Now, the\nmethod still automatically signs encrypted messages, but users can\nchoose to turn off this behavior.</li>\n<li>Added a <tt><span class=\"pre\">trust(uid=\"\",</span> level=4)</tt> method, which will allow users to\nsign keys in their keyring on a trust scale from 1 to 4.</li>\n<li>Fixed a bug in <tt><span class=\"pre\">set_fingerprint(uid=\"\")</span></tt> which mistakenly used an\n<tt>email</tt> parameter instead of the locally available <tt>uid</tt> kwarg.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-2-5\">\n<h2>Changes for version 0.2.5</h2>\n<div id=\"id64\">\n<h3>Minor Changes</h3>\n<ul>\n<li>Typos, redundancies &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Tests updated &amp; added to.</li>\n<li>Changed <tt>raw_network_export()</tt> &amp; <tt>raw_network_verify()</tt> methods\ninto <tt>raw_api_export()</tt> &amp; <tt>raw_api_verify()</tt>, respectively.\nThis was done for more clarity as to what those methods are doing.</li>\n</ul>\n</div>\n<div id=\"id65\">\n<h3>Major Changes</h3>\n<ul>\n<li>Added <tt>sign(message)</tt> &amp; <tt>verify(message)</tt> methods.</li>\n<li>Changed the <tt>keyserver</tt> &amp; <tt>searchserver</tt> attributes into\nproperties so that custom <tt>port</tt> attribute changes are now\nreflected in the constructed url, &amp; the search string used by a\ncustom keyserver can also be reflected.</li>\n<li>Moved all command validation to the <tt>read_output()</tt> method which\nsimplifies the construction of <tt>command()</tt> &amp; will automatically\n<tt>shlex.quote()</tt> all commands, even those hard-coded into the\nprogram.</li>\n<li>Fixed bug in <tt>set_homedir()</tt> which did not construct the default\ngpghome directory string correctly depending on where the current\nworking directory of the calling script was.</li>\n<li>Added <tt>local_user</tt> kwarg to <tt>encrypt()</tt> &amp; <tt>sign()</tt> so a user\ncan specify which key to use for signing messages, as gnupg\nautomatically signs with whatever key it views as the default user\nkey. Instead, we assume mesasges are to be signed with the key\nassociated with the email address of a GnuPG class instance, or the\nkey defined by the <tt>local_user</tt> uid if it is passed.</li>\n<li>Fixed \u2013list-keys terminal output parsing. We now successfully parse\n&amp; parameterize the output into email addresses &amp; fingerprints, of\na larger set of types of keys.</li>\n<li>Added <tt>delete()</tt> method for removing both public &amp; private keys\nfrom the local keyring. This method still requires some user\ninteraction because a system pinentry-type dialog box opens up to\nconfirm deletion. Finding a way to automate this to avoid user\ninteraction is in the work.</li>\n<li>Added automating behavior to the <tt>sign()</tt> &amp; <tt>encrypt()</tt> methods\nso that keys which haven\u2019t been verified will still be used. This is\ndone by passing \u201cy\u201d (yes) to the terminal during the process of the\ncommand.</li>\n</ul>\n</div>\n</div>\n<div id=\"changes-for-version-0-2-4\">\n<h2>Changes for version 0.2.4</h2>\n<h2 id=\"id66\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Updated <tt>setup.py</tt> with more package information.</li>\n<li>Typos, redundancies &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Tests updated &amp; added to.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-2-3\">\n<h2>Changes for version 0.2.3</h2>\n<h2 id=\"id67\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Typos &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Added package to <a href=\"https://github.com/rmlibre/tiny_gnupg.git\" rel=\"nofollow\">git repo</a></li>\n<li>Added git repo url to <tt>setup.py</tt>.</li>\n<li>The <tt>port</tt> attribute is currently unused. It may be removed if it\nremains purposeless.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-2-2\">\n<h2>Changes for version 0.2.2</h2>\n<h2 id=\"id68\"><span class=\"section-subtitle\">Minor Changes</span></h2>\n<ul>\n<li>Typos &amp; naming inaccuracies fixed around the code and\ndocumentation.</li>\n<li>Switched the internal networking calls to use the higher level\n<tt>network_get()</tt> &amp; <tt>network_post()</tt> methods.</li>\n<li>Removed redundant <tt>shlex.quote()</tt> calls on args passed to the\n<tt>command()</tt> method.</li>\n<li>Tests updated &amp; added to.</li>\n</ul>\n</div>\n<div id=\"changes-for-version-0-2-1\">\n<h2>Changes for version 0.2.1</h2>\n<div id=\"id69\">\n<h3>Minor Changes</h3>\n<ul>\n<li>The names of some existing methods were changed. <tt>parse_output()</tt>\nis now <tt>read_output()</tt>. <tt>gpg_directory()</tt> is now\n<tt>format_homedir()</tt>. The names of some existing attributes were\nchanged. <tt>gpg_path</tt> is now <tt>executable</tt>, with its parent folder\nuri now stored in <tt>home</tt>. <tt>key_id</tt> is now <tt>fingerprint</tt> to\navoid similarities with the naming convention used for the methods\nwhich query the package environment keys for uid information,\ni.e. <tt>key_fingerprint()</tt> &amp; <tt>key_email()</tt>.</li>\n</ul>\n</div>\n<div id=\"id70\">\n<h3>Major Changes</h3>\n<ul>\n<li>Good riddance to the pynput library hack! We figured out how to\ngracefully send passphrases &amp; other inputs into the gpg2\ncommandline interface. This has brought major changes to the package,\n&amp; lots of increased functionality.</li>\n<li>Many added utilities:<ul>\n<li>Keys generated with the <tt>gen_key()</tt> method now get stored in a\nlocal keyring instead of the operating system keyring.</li>\n<li>aiohttp, aiohttp_socks used to power the keyserver queries and\nuploading features. All contact with the keyserver is done over\ntor, with async/await syntax. <tt>search(uid)</tt> to query for a key\nwith matches to the supplied uid, which could be a fingerprint or\nemail address. <tt>network_import(uid)</tt> to import a key with\nmatches to the supplied uid. <tt>network_export(uid)</tt> to upload a\nkey in the package\u2019s keyring with matches to the supplied uid to\nthe keyserver. Also, raw access to the aiohttp.ClientSession\nnetworking interface is available by using\n<tt>async with instance.session as session:</tt>. More info is\navailable in the <a href=\"https://docs.aiohttp.org/en/stable/client_advanced.html#client-session\" rel=\"nofollow\">aiohttp docs</a></li>\n<li>New <tt>text_import(key)</tt>, <tt>file_import(filename)</tt>,\n<tt>text_export(key)</tt>, &amp; <tt>file_export(path, uid)</tt> methods for\nimporting &amp; exporting keys from key strings or files.</li>\n<li>New <tt>reset_daemon()</tt> method for refreshing the system gpg-agent\ndaemon if errors begin to occur from manual deletion or\nmodification of files in the package/gpghome/ directory.</li>\n<li>New <tt>encrypt(message, recipient_uid)</tt> &amp; <tt>decrypt(message)</tt>\nmethods. The <tt>encrypt()</tt> method automatically signs the message,\ntherefore needs the key passphrase to be stored in the\n<tt>passphrase</tt> attribute. The same goes for the <tt>decrypt()</tt>\nmethod.</li>\n<li>The <tt><span class=\"pre\">command(*options)</span></tt>, <tt><span class=\"pre\">encode_inputs(*inputs)</span></tt>, and\n<tt>read_output(commands, inputs)</tt> methods can be used to create\ncustom commands to the package\u2019s gpg2 environment. This allows for\nflexibility without hardcoding flexibility into every method,\nwhich would increase code size &amp; complexity. The <tt>command()</tt>\nmethod takes a series of options that would normally be passed to\nthe terminal gpg2 program (such as \u2013encrypt) &amp; returns a list\nwith those options included, as well as, the other boiler-plate\noptions (like the correct path to the package executable, &amp; the\npackage\u2019s local gpg2 environment.). <tt>encode_inputs()</tt> takes a\nseries of inputs that will be needed by the program called with\nthe <tt>command()</tt> instructions, &amp; <tt>bytes()</tt> encodes them with\nthe necessary linebreaks to signal separate inputs.\n<tt>read_output()</tt> takes the instructions from <tt>command()</tt> and\ninputs from <tt>encode_inputs()</tt> &amp; calls\n<tt>subprocess.check_output(commands, <span class=\"pre\">input=inputs).decode()</span></tt> on\nthem to retrieve the resulting terminal output.</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6480050, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "0d3fd4d364d2b933501bd55fbeb8a5d2", "sha256": "dacce9c8c29bf21a158ccee9333e442da13f13540c1c5644706d8ea36d931323"}, "downloads": -1, "filename": "tiny_gnupg-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0d3fd4d364d2b933501bd55fbeb8a5d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17543, "upload_time": "2019-12-10T07:36:58", "upload_time_iso_8601": "2019-12-10T07:36:58.711275Z", "url": "https://files.pythonhosted.org/packages/b6/0f/8c7ca0104b481d927bb3787b5c4a264f99a99e111fbddea20d719efcb535/tiny_gnupg-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a4312e37e2055d4b91ffbcbbc9ec124", "sha256": "09bcfc47499f578a497bacb7be91b1e2848200684a475117fb20dc01590bd3ba"}, "downloads": -1, "filename": "tiny_gnupg-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1a4312e37e2055d4b91ffbcbbc9ec124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 523804, "upload_time": "2019-12-10T07:37:02", "upload_time_iso_8601": "2019-12-10T07:37:02.555874Z", "url": "https://files.pythonhosted.org/packages/d7/94/59d6da38d7dc348dcbb8b1523e411c5fb355d2ed9d6be2385204eb96a167/tiny_gnupg-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "303e81bbab1536f1178e55df2b3ca573", "sha256": "f32b96211affb2c8738c5ab17eaea765036a24b069f782e3cca433ddfcd78c94"}, "downloads": -1, "filename": "tiny_gnupg-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "303e81bbab1536f1178e55df2b3ca573", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17911, "upload_time": "2019-12-10T10:47:41", "upload_time_iso_8601": "2019-12-10T10:47:41.405246Z", "url": "https://files.pythonhosted.org/packages/b7/97/ce8f1d8db899ac01e42b675258c67d7491c1490f96795bf14e90b82ba9d5/tiny_gnupg-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "275b35cacd7181979c6ca75fe7169509", "sha256": "90e86d039190ad3ce2f948257aa5c4eadd7147bcd0c846272371b74f7edb0d54"}, "downloads": -1, "filename": "tiny_gnupg-0.2.2.tar.gz", "has_sig": false, "md5_digest": "275b35cacd7181979c6ca75fe7169509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525104, "upload_time": "2019-12-10T10:47:45", "upload_time_iso_8601": "2019-12-10T10:47:45.426511Z", "url": "https://files.pythonhosted.org/packages/77/a6/d7dc2d5b33dbd5a67df4b782fc525fcb54a566bc3593d8900e5d0d5c06e8/tiny_gnupg-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "ca752fab2b8018ebaf20634829509bee", "sha256": "ab720995ab324aefe04a62290d6fc05299a2aa68325f057e467a36b162d6ad4c"}, "downloads": -1, "filename": "tiny_gnupg-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ca752fab2b8018ebaf20634829509bee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17884, "upload_time": "2019-12-10T12:36:38", "upload_time_iso_8601": "2019-12-10T12:36:38.416402Z", "url": "https://files.pythonhosted.org/packages/4d/84/11cc759b81019244c6d3d2664b5aae4d9e696a4e87217664ef9bff6b3292/tiny_gnupg-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b4122c6de2ccdb72c3a54a6a61713bd", "sha256": "e2ae587a4a32fc596aa43c8ccbff8ae1bb5eec60980e5c9580d628b6320493c6"}, "downloads": -1, "filename": "tiny_gnupg-0.2.3.tar.gz", "has_sig": false, "md5_digest": "6b4122c6de2ccdb72c3a54a6a61713bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 525160, "upload_time": "2019-12-10T12:36:45", "upload_time_iso_8601": "2019-12-10T12:36:45.327726Z", "url": "https://files.pythonhosted.org/packages/0c/f1/2f21f0969b4b575fc0f8e0ed28d92f398682f7b23f45765777628e348ca6/tiny_gnupg-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "3c5749918abfebed6fd70ef0e9c482a1", "sha256": "a65713bf4cebe745f77561808c794877936ba5bb128a5e2bf3c4b3e4bd39df67"}, "downloads": -1, "filename": "tiny_gnupg-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3c5749918abfebed6fd70ef0e9c482a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17934, "upload_time": "2019-12-10T21:23:01", "upload_time_iso_8601": "2019-12-10T21:23:01.397556Z", "url": "https://files.pythonhosted.org/packages/a1/eb/49507187d8630c63c9ee945eb9e47bd482722dea02d6cfe36bdf97d2feb1/tiny_gnupg-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0071eb7ce1d0915542eebfb619c29aa", "sha256": "431db2652dcc340cdcdd045b00b9d530a21f554a13e5a9e0ad2e0031d3e203c1"}, "downloads": -1, "filename": "tiny_gnupg-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d0071eb7ce1d0915542eebfb619c29aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 532408, "upload_time": "2019-12-10T21:23:05", "upload_time_iso_8601": "2019-12-10T21:23:05.447471Z", "url": "https://files.pythonhosted.org/packages/34/3e/f01aab0d19102cf19eaf86908f07a796b6c5a1ab573454ba2c6e2870c328/tiny_gnupg-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "647b37297f8aa6b97db81e8b15e27ff5", "sha256": "ab01a9bae957a01dd529f5dd17ff19b0b93f0be6ac4f3fa4e3355841116aa680"}, "downloads": -1, "filename": "tiny_gnupg-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "647b37297f8aa6b97db81e8b15e27ff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18433, "upload_time": "2019-12-11T23:41:14", "upload_time_iso_8601": "2019-12-11T23:41:14.969548Z", "url": "https://files.pythonhosted.org/packages/93/0e/88175190fc2a8fb78ba80914d9cd7b560c139e7c3dbfe1dabae3e414f0a2/tiny_gnupg-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3afdde5e439d4fd9343344feefd594e6", "sha256": "0b8721062d1438411a85c7e634f772537809a96f3c2352b0a4c38750ec63d4f9"}, "downloads": -1, "filename": "tiny_gnupg-0.2.5.tar.gz", "has_sig": false, "md5_digest": "3afdde5e439d4fd9343344feefd594e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544446, "upload_time": "2019-12-11T23:41:22", "upload_time_iso_8601": "2019-12-11T23:41:22.248199Z", "url": "https://files.pythonhosted.org/packages/e2/8a/43be135b7443fde2d43a8073e70d530aae61b38456cb001aa477d9868be2/tiny_gnupg-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "ddf69852f1665b1773b8e22118f518e3", "sha256": "2dab95f9a0b2ce186d00316a50e325709904b9c0896fc175dcbf42a99b1c3c26"}, "downloads": -1, "filename": "tiny_gnupg-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ddf69852f1665b1773b8e22118f518e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18926, "upload_time": "2019-12-12T07:41:42", "upload_time_iso_8601": "2019-12-12T07:41:42.218134Z", "url": "https://files.pythonhosted.org/packages/9e/93/0e1abd9508602d9725246822a190fad1f2196b0f8ffa3b1dd7b43c89453a/tiny_gnupg-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64c49ce877f102bfb588efbd21aece8c", "sha256": "c248915ae8a90d762ae5376177567cea4a80074c07a249b392fcc4b8336795bf"}, "downloads": -1, "filename": "tiny_gnupg-0.2.6.tar.gz", "has_sig": false, "md5_digest": "64c49ce877f102bfb588efbd21aece8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 539904, "upload_time": "2019-12-12T07:41:46", "upload_time_iso_8601": "2019-12-12T07:41:46.640593Z", "url": "https://files.pythonhosted.org/packages/28/00/8f9a9c70109d36f8d1599564661214140ab27830d988e5584169c9804e4b/tiny_gnupg-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "c9333f31fd33a55d821333ae7b3acecc", "sha256": "d4ea928a09a49973fefa7d616fb0bae5dc032a94847498b0c917e2734ec6b596"}, "downloads": -1, "filename": "tiny_gnupg-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c9333f31fd33a55d821333ae7b3acecc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18932, "upload_time": "2019-12-12T08:29:10", "upload_time_iso_8601": "2019-12-12T08:29:10.750460Z", "url": "https://files.pythonhosted.org/packages/b6/25/ce74e10ad80020e9194d0fbd83fd616a1b91a3ba43fbc4279e4dccab707f/tiny_gnupg-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c7e01338e6728131fb178cb4594c443", "sha256": "5f2545b2e5668b4bc68f095f4d20d1f16bfd5671e0304064dffecfe0b79ca42a"}, "downloads": -1, "filename": "tiny_gnupg-0.2.7.tar.gz", "has_sig": false, "md5_digest": "6c7e01338e6728131fb178cb4594c443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 539928, "upload_time": "2019-12-12T08:29:14", "upload_time_iso_8601": "2019-12-12T08:29:14.601967Z", "url": "https://files.pythonhosted.org/packages/84/8c/95c3869bfd02038228fdcf6db70ddfa2ea78f6b44d51f6107d14b0ecd71b/tiny_gnupg-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "88d941f03bc2bd3fb163cfd664807d36", "sha256": "695c9f152bf6d1fcaa9d8a686b33a5031b2e509ce3493e1a450f970461548e0f"}, "downloads": -1, "filename": "tiny_gnupg-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "88d941f03bc2bd3fb163cfd664807d36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18956, "upload_time": "2019-12-12T12:31:22", "upload_time_iso_8601": "2019-12-12T12:31:22.281031Z", "url": "https://files.pythonhosted.org/packages/a4/25/b8739f7703d0bfa117090804b45e917a65dfcc142113734aef8dc40a5564/tiny_gnupg-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84c8cb157b4435afe53a0f8cd5b26d5a", "sha256": "7bd2725e68a843fd03fa3e0f622e71598f844f4e33d78e78f546c6d8bbe02d42"}, "downloads": -1, "filename": "tiny_gnupg-0.2.8.tar.gz", "has_sig": false, "md5_digest": "84c8cb157b4435afe53a0f8cd5b26d5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 540066, "upload_time": "2019-12-12T12:31:26", "upload_time_iso_8601": "2019-12-12T12:31:26.431731Z", "url": "https://files.pythonhosted.org/packages/1f/30/92dbde3d491a3c211dff25c3621cec73df37184f364701c0091331639dbf/tiny_gnupg-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "b7f2f3d3c892bc87a3ad7f13f8d9376c", "sha256": "e6f9910b52818e3e117f407b0a792353c548e30668b14bcaf9d6bb6f11b4ffa9"}, "downloads": -1, "filename": "tiny_gnupg-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b7f2f3d3c892bc87a3ad7f13f8d9376c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19070, "upload_time": "2019-12-12T21:59:04", "upload_time_iso_8601": "2019-12-12T21:59:04.875443Z", "url": "https://files.pythonhosted.org/packages/72/33/96600d16e1427030508163a62590fa333adf8e4c9bb80355b23565145144/tiny_gnupg-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d26fee859009a1907989d27bfc683db", "sha256": "a224bb5e56f796eea875df4f0bd5b054a41d73978b24f6fa50531a8a04860ce0"}, "downloads": -1, "filename": "tiny_gnupg-0.2.9.tar.gz", "has_sig": false, "md5_digest": "9d26fee859009a1907989d27bfc683db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 540349, "upload_time": "2019-12-12T21:59:08", "upload_time_iso_8601": "2019-12-12T21:59:08.969080Z", "url": "https://files.pythonhosted.org/packages/de/8b/0e004b37ad2517c862586f0c1f3d1ea880e108720965a4fce10043de94fa/tiny_gnupg-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "63d3d682b794c59d55a568bec8b31062", "sha256": "d52de60aa4553addc63af1aed76982b573342249ac692c479ddd01c39159bc80"}, "downloads": -1, "filename": "tiny_gnupg-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "63d3d682b794c59d55a568bec8b31062", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19133, "upload_time": "2019-12-13T01:18:14", "upload_time_iso_8601": "2019-12-13T01:18:14.457362Z", "url": "https://files.pythonhosted.org/packages/7d/ba/d22c1a4002f137b7edcb49cab2d853634880aa393d51e9ccf2f160d42765/tiny_gnupg-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e5a6673412f6650fc6e9b956ee0f375", "sha256": "ca5881c1e2c3d113fc2df0cd80d081919c215179b2ba7488867979b5a4fe78a0"}, "downloads": -1, "filename": "tiny_gnupg-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0e5a6673412f6650fc6e9b956ee0f375", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 540758, "upload_time": "2019-12-13T01:18:18", "upload_time_iso_8601": "2019-12-13T01:18:18.134430Z", "url": "https://files.pythonhosted.org/packages/b4/2c/a84f08d81e10861f23b2ff91bfcb083896e51711d64f27c71c134b60b48f/tiny_gnupg-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "74de10caf68baed7cfbf559cc0517bc6", "sha256": "5b3d47f5bcb3f75ca21eb67b82f8cd100fa0e6e02da8f73f1458d746ebcebcbc"}, "downloads": -1, "filename": "tiny_gnupg-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "74de10caf68baed7cfbf559cc0517bc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19170, "upload_time": "2019-12-13T04:28:08", "upload_time_iso_8601": "2019-12-13T04:28:08.949770Z", "url": "https://files.pythonhosted.org/packages/91/1c/9545a1ef631233c996b9b54cff688b37da20d17f0d65df6da4bc2819b1a2/tiny_gnupg-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1b41fa4df1286a7d7ed406eb6e916f6", "sha256": "7c02e0a24dadc7e0b0838ac5762e3c1491b6f4ba2961a50c85a970b4bf3e2bd9"}, "downloads": -1, "filename": "tiny_gnupg-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c1b41fa4df1286a7d7ed406eb6e916f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 541398, "upload_time": "2019-12-13T04:28:14", "upload_time_iso_8601": "2019-12-13T04:28:14.039790Z", "url": "https://files.pythonhosted.org/packages/ca/49/24cf57a1ecbd45dd7a743e9391923c8ea86e9e65a9869da2fdf05fb53ee6/tiny_gnupg-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "7067b8619e46f83d7beb4a1f51530c7f", "sha256": "ec229421a3f7410153e693481ceef67b10a5b40bda7488ff5e4c6bb16e952411"}, "downloads": -1, "filename": "tiny_gnupg-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7067b8619e46f83d7beb4a1f51530c7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19624, "upload_time": "2019-12-13T06:42:09", "upload_time_iso_8601": "2019-12-13T06:42:09.912899Z", "url": "https://files.pythonhosted.org/packages/4e/89/a0a7bda8185363701444c3d944928850e1953042ebda2065c41e4d94925a/tiny_gnupg-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca8e64343aba00e3353a993dc715596f", "sha256": "cc76eeec8bed7cc2b18521e2996918c94bd48bd568f95ea269c9728d9e23d9d0"}, "downloads": -1, "filename": "tiny_gnupg-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ca8e64343aba00e3353a993dc715596f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542310, "upload_time": "2019-12-13T06:42:14", "upload_time_iso_8601": "2019-12-13T06:42:14.639301Z", "url": "https://files.pythonhosted.org/packages/73/e0/19fd4a25bec33f94e5b49da3f5a54ef2361972ebb82b0f515828fd0a5535/tiny_gnupg-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "97a4fdf1a76d8b8860f556d743e1b4aa", "sha256": "599eec6745ad92fad5b2f65e9cc65f0e035a71aaaf4819e7d52f945afc956fd9"}, "downloads": -1, "filename": "tiny_gnupg-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "97a4fdf1a76d8b8860f556d743e1b4aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19624, "upload_time": "2019-12-13T08:30:38", "upload_time_iso_8601": "2019-12-13T08:30:38.563812Z", "url": "https://files.pythonhosted.org/packages/b5/6c/968fb418076f534000b1ec64807635d0f9707fb81db1b9d7b8b54a7ad51b/tiny_gnupg-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cc1a38a282882dd54bb326a339b95bd", "sha256": "308c54cb3e322f5d9e915cc8861f5966b919931765e40fa8403ee00e53169879"}, "downloads": -1, "filename": "tiny_gnupg-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1cc1a38a282882dd54bb326a339b95bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542429, "upload_time": "2019-12-13T08:30:45", "upload_time_iso_8601": "2019-12-13T08:30:45.080395Z", "url": "https://files.pythonhosted.org/packages/26/05/d0eeb7af3b99b2918dd1763d61b64d002c5597375ae9b992885d8265d565/tiny_gnupg-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "8a1f4aaa750cbf8941770d9d061b2f42", "sha256": "bd1a29c8ca09f83e6d03d1380272bf35fa6f53ed0a4b9ba2ddf1ea7ac2a1715b"}, "downloads": -1, "filename": "tiny_gnupg-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1f4aaa750cbf8941770d9d061b2f42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514404, "upload_time": "2019-12-13T09:14:05", "upload_time_iso_8601": "2019-12-13T09:14:05.030061Z", "url": "https://files.pythonhosted.org/packages/8a/d2/d3407dfc2f57a23fc522931a45c748c7748446db28a34e7385712ed7487e/tiny_gnupg-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "266d7f09e945df561407ef7596c04f67", "sha256": "e01dc00d145228ca89a3badd5b16a7d1ed9fb952264f7b175666173124887896"}, "downloads": -1, "filename": "tiny_gnupg-0.3.4.tar.gz", "has_sig": false, "md5_digest": "266d7f09e945df561407ef7596c04f67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542537, "upload_time": "2019-12-13T09:14:11", "upload_time_iso_8601": "2019-12-13T09:14:11.029351Z", "url": "https://files.pythonhosted.org/packages/24/64/3cd658a23c45507aeeec53e31aec4e59481c3e6e333a69726ff37b6fb5a8/tiny_gnupg-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "008e2ef6684530167a409a9d23e75229", "sha256": "78d4dcaa719536a2927da41afe616f4e5ac3754c76536d7aef268b46a12d8a18"}, "downloads": -1, "filename": "tiny_gnupg-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "008e2ef6684530167a409a9d23e75229", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514377, "upload_time": "2019-12-13T12:53:35", "upload_time_iso_8601": "2019-12-13T12:53:35.378258Z", "url": "https://files.pythonhosted.org/packages/c2/59/32fd96674cdde96c7bfd9731e36674360891270e40778cbc4ecd2750b3e2/tiny_gnupg-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ec36190644aaf04f1238d823806ca57", "sha256": "12dcbf21d605e74f789429b23cc82153563c53fbdf0626fbeb774531ce07fc41"}, "downloads": -1, "filename": "tiny_gnupg-0.3.5.tar.gz", "has_sig": false, "md5_digest": "4ec36190644aaf04f1238d823806ca57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542311, "upload_time": "2019-12-13T12:53:39", "upload_time_iso_8601": "2019-12-13T12:53:39.245991Z", "url": "https://files.pythonhosted.org/packages/28/e0/8c3802e95b57ca6a8704d5c129df75f8f520c333b5e4814870b29e60f8a8/tiny_gnupg-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "c30abf00749af7b87d09afeb56332c47", "sha256": "794c77356b28826d666374c73916b44904a4f0c106f6159b4f8dabc187c926d1"}, "downloads": -1, "filename": "tiny_gnupg-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c30abf00749af7b87d09afeb56332c47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514368, "upload_time": "2019-12-13T20:08:44", "upload_time_iso_8601": "2019-12-13T20:08:44.127556Z", "url": "https://files.pythonhosted.org/packages/4e/0c/eed676bac182c92be538cd7b8cd621760217adf65e44bd82dc373d9cc8a9/tiny_gnupg-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "720304ea89b69e366e2865ade31a6b8a", "sha256": "5ff30df80564d9ff5200a33fc2024a919a1b6911503b94226d57d6dc84dca6b2"}, "downloads": -1, "filename": "tiny_gnupg-0.3.6.tar.gz", "has_sig": false, "md5_digest": "720304ea89b69e366e2865ade31a6b8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542632, "upload_time": "2019-12-13T20:08:47", "upload_time_iso_8601": "2019-12-13T20:08:47.824913Z", "url": "https://files.pythonhosted.org/packages/81/d7/15d5342d9ecdcd53b17cb3c2becaa6cd25e1e66ea835cc0b01136223bc12/tiny_gnupg-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "f9969753829d7c446af9db08d919c016", "sha256": "b8e90e25b1fbdc7df4d3e13a3a7261ac41bc3ddd08e0f57d9f8ad2c79dd99cad"}, "downloads": -1, "filename": "tiny_gnupg-0.3.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f9969753829d7c446af9db08d919c016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514480, "upload_time": "2019-12-14T01:13:55", "upload_time_iso_8601": "2019-12-14T01:13:55.905833Z", "url": "https://files.pythonhosted.org/packages/cd/81/d2e8cf37257ed6145e2d0c8ffed2d3393194b1315afde5187276bfad5a05/tiny_gnupg-0.3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd5ef1199968163e30b4bdb475a8e017", "sha256": "1bc293a65a8d5c2dd605d3e6ee19fe1c75fc47ce2dfae103bd00a95db06a27a0"}, "downloads": -1, "filename": "tiny_gnupg-0.3.7.tar.gz", "has_sig": false, "md5_digest": "dd5ef1199968163e30b4bdb475a8e017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542904, "upload_time": "2019-12-14T01:14:00", "upload_time_iso_8601": "2019-12-14T01:14:00.034000Z", "url": "https://files.pythonhosted.org/packages/7e/38/85737e70c77e1ad0b35922153df4a32935d2580a221b830154d50add05fc/tiny_gnupg-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "c39fbe4f8c0a30d802fcf22283e51209", "sha256": "ebfff0a2645a9b6944dbf5cbcf367ca8be8d8812433cddcd7ad2be9ef653a359"}, "downloads": -1, "filename": "tiny_gnupg-0.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "c39fbe4f8c0a30d802fcf22283e51209", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514336, "upload_time": "2019-12-14T06:15:24", "upload_time_iso_8601": "2019-12-14T06:15:24.454852Z", "url": "https://files.pythonhosted.org/packages/08/e8/d56a42424f1c17a08870eca003bc4f4b565ca196d3d61e6ca435cc2cc504/tiny_gnupg-0.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbba88a11d8199e75dcc2c3b5aee562e", "sha256": "77c1d9c564f8a5a6b556be724a68dfb9629140180972a03bd76d4d5ba2604c67"}, "downloads": -1, "filename": "tiny_gnupg-0.3.8.tar.gz", "has_sig": false, "md5_digest": "dbba88a11d8199e75dcc2c3b5aee562e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 543195, "upload_time": "2019-12-14T06:15:28", "upload_time_iso_8601": "2019-12-14T06:15:28.219875Z", "url": "https://files.pythonhosted.org/packages/09/c0/2d00189b7f7e14de0b2dc2da3d4e28c86444feb56e2726ed087d345b43dd/tiny_gnupg-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "6fca26b5a48a112bbce30926f645b03e", "sha256": "c8734a9e16025ed88f9127adecc646913149e8cab5eb39e6089a1845ceeb3eb8"}, "downloads": -1, "filename": "tiny_gnupg-0.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "6fca26b5a48a112bbce30926f645b03e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514347, "upload_time": "2019-12-14T07:48:25", "upload_time_iso_8601": "2019-12-14T07:48:25.570253Z", "url": "https://files.pythonhosted.org/packages/58/89/48636552f6590602a7271675f99799ca82d8e12c2d054be5d9ce9416f6cd/tiny_gnupg-0.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae45b679e9d964956a1a76be3baec716", "sha256": "7bb7ff6b28aa33e16f74801da6ee553c4a421464c339aed9dec4d40a74f9e8b5"}, "downloads": -1, "filename": "tiny_gnupg-0.3.9.tar.gz", "has_sig": false, "md5_digest": "ae45b679e9d964956a1a76be3baec716", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 543265, "upload_time": "2019-12-14T07:48:29", "upload_time_iso_8601": "2019-12-14T07:48:29.555935Z", "url": "https://files.pythonhosted.org/packages/89/63/085708737c29ac9ef26d25bd22065692cf79fa644ac385c9ee4244d5baff/tiny_gnupg-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b4e8449dbdfeefac5f6dac5afd844fa3", "sha256": "73ffa255285e7fc38dbc8651f18d1ca8d561ccf06b70a1de950a4db806557e7b"}, "downloads": -1, "filename": "tiny_gnupg-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4e8449dbdfeefac5f6dac5afd844fa3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514883, "upload_time": "2019-12-15T05:05:06", "upload_time_iso_8601": "2019-12-15T05:05:06.826991Z", "url": "https://files.pythonhosted.org/packages/8d/80/f8ae39a81a46a8a7e66ecd9b4372a01fe8ca49c14d0827338acc13bd3af5/tiny_gnupg-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0e5d7b01277547ac8ae9071d142e15a", "sha256": "e3cc810776b0a9503768307a75cbc5acede00a71b88240a29e3a25ba9b15a366"}, "downloads": -1, "filename": "tiny_gnupg-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b0e5d7b01277547ac8ae9071d142e15a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544478, "upload_time": "2019-12-15T05:05:11", "upload_time_iso_8601": "2019-12-15T05:05:11.327937Z", "url": "https://files.pythonhosted.org/packages/4e/64/787d88f8e6fe66a2c4bf54487c1f194f85fc1bf41b5bce82083be6fd6779/tiny_gnupg-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "14322725b8d664e1fcf49a9add04b833", "sha256": "d2bdd10d847fa4074964a5e0b126609da73662caa367cd78fdc196e2b332f3b3"}, "downloads": -1, "filename": "tiny_gnupg-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "14322725b8d664e1fcf49a9add04b833", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 514876, "upload_time": "2019-12-15T05:18:14", "upload_time_iso_8601": "2019-12-15T05:18:14.934290Z", "url": "https://files.pythonhosted.org/packages/a5/a2/bd1bb7f51ec9a2931f994ff7a868b1f042623b63f8829e36476b6bf61e3c/tiny_gnupg-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a80a8ffcac1afe378e0d02857e7860c9", "sha256": "864599e4a857845511b13c55571778a40f5ea508988ad302974cc06986ba494e"}, "downloads": -1, "filename": "tiny_gnupg-0.4.1.tar.gz", "has_sig": false, "md5_digest": "a80a8ffcac1afe378e0d02857e7860c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544494, "upload_time": "2019-12-15T05:18:18", "upload_time_iso_8601": "2019-12-15T05:18:18.651646Z", "url": "https://files.pythonhosted.org/packages/d9/de/e367d27e8539caa786f10e0625f1f6efbbdfcc61145507065c1789605feb/tiny_gnupg-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "2ba7e8021fad6c215ca075f581d72a04", "sha256": "978824278c83242353070dde04fc4b8d6ba0f060bc9452b730a0a5edfebb16a6"}, "downloads": -1, "filename": "tiny_gnupg-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2ba7e8021fad6c215ca075f581d72a04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 515403, "upload_time": "2019-12-15T19:29:14", "upload_time_iso_8601": "2019-12-15T19:29:14.853813Z", "url": "https://files.pythonhosted.org/packages/05/4e/20db23abf7cd4d98aad1c1dbd7e477fe81e30ac37afaca98fc1a1ac00f6d/tiny_gnupg-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "074a6aff4902b454ec5c37d3ff0d3d29", "sha256": "25cd657b24e353866fbc82feaee73f946da5af8e8ef8cbe5dd9629ee774410b6"}, "downloads": -1, "filename": "tiny_gnupg-0.4.2.tar.gz", "has_sig": false, "md5_digest": "074a6aff4902b454ec5c37d3ff0d3d29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 545311, "upload_time": "2019-12-15T19:29:19", "upload_time_iso_8601": "2019-12-15T19:29:19.074857Z", "url": "https://files.pythonhosted.org/packages/ab/f9/a2b4b13c78f59d4dd9d25484f4dcdd4609bbc7bce8c61955f13ea8c3932d/tiny_gnupg-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "de7134e50f7d64a143a08db7953aeb3b", "sha256": "4f9b36699221299f379cef305c3a82cacb4c62e69008995d834586567353db49"}, "downloads": -1, "filename": "tiny_gnupg-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "de7134e50f7d64a143a08db7953aeb3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 515561, "upload_time": "2019-12-16T02:19:46", "upload_time_iso_8601": "2019-12-16T02:19:46.331683Z", "url": "https://files.pythonhosted.org/packages/a2/c1/45d4c0a249d0c7e9585fde0ff01b2c10ceae6527e12700e07f913652cbfc/tiny_gnupg-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf46e051843244a92100f8a6abefb576", "sha256": "e79682c7c598b0c161a213b7c097654f3146cecfd78cb3f4863e3ef9586468b7"}, "downloads": -1, "filename": "tiny_gnupg-0.4.3.tar.gz", "has_sig": false, "md5_digest": "cf46e051843244a92100f8a6abefb576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 545695, "upload_time": "2019-12-16T02:19:50", "upload_time_iso_8601": "2019-12-16T02:19:50.565617Z", "url": "https://files.pythonhosted.org/packages/cc/fc/5b70e7beba270f6a8dce1e748bb051b79a001396b5cd9e59df7e1204091b/tiny_gnupg-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1dfce6e624a2e05be90ac2239034c8f8", "sha256": "03bca8a46dccd97e526aab1ad6e9f5f374bd6ca17d79cc39f1d6d4127ff3dfd7"}, "downloads": -1, "filename": "tiny_gnupg-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1dfce6e624a2e05be90ac2239034c8f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 515651, "upload_time": "2019-12-16T07:20:15", "upload_time_iso_8601": "2019-12-16T07:20:15.839821Z", "url": "https://files.pythonhosted.org/packages/3e/11/f92eb1572fe5c94fe88affa683fb462d161aa31888f3ab1c0b74aeface05/tiny_gnupg-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96ffc1574f4487e6f934459c4021ce3e", "sha256": "4e869f572c03129ef861449d11fef2865de83426e06c23f0c6fffcd3a18641a5"}, "downloads": -1, "filename": "tiny_gnupg-0.4.4.tar.gz", "has_sig": false, "md5_digest": "96ffc1574f4487e6f934459c4021ce3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 546076, "upload_time": "2019-12-16T07:20:20", "upload_time_iso_8601": "2019-12-16T07:20:20.352279Z", "url": "https://files.pythonhosted.org/packages/0d/ae/10a99d285ca818cba9f2402964bcaae209686c67bec99dfbd1e5cda803f7/tiny_gnupg-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "3469a40b0b393a7244109b6d88d99441", "sha256": "07e0cdd95ff12d2ccbfd23ab2b8d0a81d4cc4c76c9f4429663786d0691cadec7"}, "downloads": -1, "filename": "tiny_gnupg-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3469a40b0b393a7244109b6d88d99441", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 517158, "upload_time": "2019-12-16T19:01:04", "upload_time_iso_8601": "2019-12-16T19:01:04.680318Z", "url": "https://files.pythonhosted.org/packages/99/e4/f2548ecc2ea855e163cf20daa71de96be7a4080a870c140d2de3681212b9/tiny_gnupg-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b998a100195e7e6e5b3e27868fcc6f54", "sha256": "17e5b28913a4d25deb9d7103c8408be138ec0a831920e809b0bc093bc39f047f"}, "downloads": -1, "filename": "tiny_gnupg-0.4.5.tar.gz", "has_sig": false, "md5_digest": "b998a100195e7e6e5b3e27868fcc6f54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 547529, "upload_time": "2019-12-16T19:01:09", "upload_time_iso_8601": "2019-12-16T19:01:09.355682Z", "url": "https://files.pythonhosted.org/packages/a1/17/2b05c090605153166107fe834825a3d15636797433d842dc7a67df032f9e/tiny_gnupg-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "4947eb2c33a9907910ee819ef992602b", "sha256": "4611296fc9be4cf287575a72ac8c07d1bfc09d710094f3b42e0b574eb0a19417"}, "downloads": -1, "filename": "tiny_gnupg-0.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4947eb2c33a9907910ee819ef992602b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 518567, "upload_time": "2019-12-17T01:20:30", "upload_time_iso_8601": "2019-12-17T01:20:30.956090Z", "url": "https://files.pythonhosted.org/packages/03/1e/f97830b622cc75f43eb6e94282725e2564f2ec8f26badf215f21f7d8de01/tiny_gnupg-0.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc9e9e6a2e0179c8bd7f9d610045d6fa", "sha256": "8c215060f9466f0ee802ead876ede9c8489ec9bd8cc580d024741cb05f486d72"}, "downloads": -1, "filename": "tiny_gnupg-0.4.6.tar.gz", "has_sig": false, "md5_digest": "bc9e9e6a2e0179c8bd7f9d610045d6fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 549347, "upload_time": "2019-12-17T01:20:35", "upload_time_iso_8601": "2019-12-17T01:20:35.531666Z", "url": "https://files.pythonhosted.org/packages/13/87/5d3e0b5601c7d79f6e2dc47aa865850574aea50f68f052d6e44bc7f2edb8/tiny_gnupg-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "48e528cf08755a59918342c8a75bb93f", "sha256": "a74bb7d8436f26b12c1ef1e0097d73267b8a9597b8654f983717800c0450347b"}, "downloads": -1, "filename": "tiny_gnupg-0.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "48e528cf08755a59918342c8a75bb93f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 519020, "upload_time": "2019-12-17T12:26:23", "upload_time_iso_8601": "2019-12-17T12:26:23.946554Z", "url": "https://files.pythonhosted.org/packages/56/70/839b69cfc26e597f88f7eb2e8709e749b297a539a1ef14ac93d782a2c3b6/tiny_gnupg-0.4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac9cc332daba87be36b1f40fc0f550a3", "sha256": "599ad5749e36bdb7038067fb8a55ef53ca81cf67ffa6b7de277388b18d543ca2"}, "downloads": -1, "filename": "tiny_gnupg-0.4.7.tar.gz", "has_sig": false, "md5_digest": "ac9cc332daba87be36b1f40fc0f550a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 551112, "upload_time": "2019-12-17T12:26:27", "upload_time_iso_8601": "2019-12-17T12:26:27.454650Z", "url": "https://files.pythonhosted.org/packages/2f/42/0a1f1efc79d2be8f38ed0e1006a9636503d79ba507fece58a1d2ee3f112d/tiny_gnupg-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "19d939f028ce0528e53d16cc10bf5206", "sha256": "e5877bd0fcb8e39b913318d2467995538b639903cdc39ce800e77713f4c65b1d"}, "downloads": -1, "filename": "tiny_gnupg-0.4.8-py3-none-any.whl", "has_sig": false, "md5_digest": "19d939f028ce0528e53d16cc10bf5206", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 526732, "upload_time": "2019-12-17T22:01:07", "upload_time_iso_8601": "2019-12-17T22:01:07.038616Z", "url": "https://files.pythonhosted.org/packages/06/b6/6ca688c5b2f32fc444edefcb9e393328423dbd31043791d1383810b57441/tiny_gnupg-0.4.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee8888dd41ef70ac14ce7451fa5a5ad9", "sha256": "87b893a2949145c519affa4ca44c3d9a42244740219bd8999133e2ba52044cb7"}, "downloads": -1, "filename": "tiny_gnupg-0.4.8.tar.gz", "has_sig": false, "md5_digest": "ee8888dd41ef70ac14ce7451fa5a5ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 570862, "upload_time": "2019-12-17T22:01:12", "upload_time_iso_8601": "2019-12-17T22:01:12.057326Z", "url": "https://files.pythonhosted.org/packages/db/88/8ed647b6b4307c0a88834da2c2ec8a3651091a74711dc05a586cfc8322f2/tiny_gnupg-0.4.8.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d88ee0d15474e1040d5e11f7a09cb250", "sha256": "fbde8a6793c736636b2d9324ff48504ade609fe1a03bb9f8c6c357cf4b601abe"}, "downloads": -1, "filename": "tiny_gnupg-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d88ee0d15474e1040d5e11f7a09cb250", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 528113, "upload_time": "2019-12-19T02:32:25", "upload_time_iso_8601": "2019-12-19T02:32:25.034299Z", "url": "https://files.pythonhosted.org/packages/82/28/1a77e9af535bda6ec5d1d3fcf06a17f67302f3f27ac92136dfa0aa8e5559/tiny_gnupg-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55bfb8b5b88c8b9898ea0301c2870d3e", "sha256": "1b58dc1826d125fb2f8810c5dab94bbee7c3c5ba983cd1ac2c036330bedfeac3"}, "downloads": -1, "filename": "tiny_gnupg-0.5.0.tar.gz", "has_sig": false, "md5_digest": "55bfb8b5b88c8b9898ea0301c2870d3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 590609, "upload_time": "2019-12-19T02:32:29", "upload_time_iso_8601": "2019-12-19T02:32:29.534590Z", "url": "https://files.pythonhosted.org/packages/e2/60/b00c3191afbec7a25a21101f3f01bd83f2e4aaa947ced217e22ad1a21e0a/tiny_gnupg-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c24f955b9bc9ae1f639d5b2a84196def", "sha256": "2bcc2f00eea3aca078944f4500dd9972194802c95776a4d82e67bbbd3cbf7034"}, "downloads": -1, "filename": "tiny_gnupg-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c24f955b9bc9ae1f639d5b2a84196def", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 528243, "upload_time": "2019-12-19T04:41:33", "upload_time_iso_8601": "2019-12-19T04:41:33.433802Z", "url": "https://files.pythonhosted.org/packages/53/3d/55c5c5217e20924dcc39530b0ef37c33d9f2c6fe4cec57ea18207fbfe06c/tiny_gnupg-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bc575f26f99d3cb71bcf451f8a25621", "sha256": "856338b32e7748f9b93835ad9b67c5a41024dee23bf5321518c578a2113b54ff"}, "downloads": -1, "filename": "tiny_gnupg-0.5.1.tar.gz", "has_sig": false, "md5_digest": "4bc575f26f99d3cb71bcf451f8a25621", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 594116, "upload_time": "2019-12-19T04:41:38", "upload_time_iso_8601": "2019-12-19T04:41:38.039927Z", "url": "https://files.pythonhosted.org/packages/62/8e/8124e70125f3c8512dd7669a72d039fb768dc740766c62c4ec9e85c799ff/tiny_gnupg-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "6f8fa80c77de5bc7987ca0dc5ed72f6e", "sha256": "f8c7e1b8f92fa66ab47230ef96e3a1e21cd18d15004e7e90ad9c9323216ebab7"}, "downloads": -1, "filename": "tiny_gnupg-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f8fa80c77de5bc7987ca0dc5ed72f6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 528431, "upload_time": "2019-12-19T10:54:46", "upload_time_iso_8601": "2019-12-19T10:54:46.149972Z", "url": "https://files.pythonhosted.org/packages/77/0f/0fbec95d6dffbe6e2aa126e02c338c14ffc0c7af48e2ca86d596a96facc6/tiny_gnupg-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c41c1c1b0e94e15f946bb3fb2dfa36", "sha256": "511fa6fbd00bbf4db00ecdb54d2a3b92dc3fc640acd0e131b34959662e370c5e"}, "downloads": -1, "filename": "tiny_gnupg-0.5.2.tar.gz", "has_sig": false, "md5_digest": "31c41c1c1b0e94e15f946bb3fb2dfa36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 595268, "upload_time": "2019-12-19T10:54:51", "upload_time_iso_8601": "2019-12-19T10:54:51.329682Z", "url": "https://files.pythonhosted.org/packages/d7/41/e3746fb55c92bd0370f62441529a091b5e302812d873b34c2ac6c74cc72e/tiny_gnupg-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "90bd73e0dbd7dfd780822016e7c60c46", "sha256": "4e428bbdd9bd4e05d598ab00b8e86a67bf7fb2a78b0dec5dc4329d44ad7f0839"}, "downloads": -1, "filename": "tiny_gnupg-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "90bd73e0dbd7dfd780822016e7c60c46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 528488, "upload_time": "2019-12-19T11:40:16", "upload_time_iso_8601": "2019-12-19T11:40:16.840873Z", "url": "https://files.pythonhosted.org/packages/02/ad/4e6e817af0798c2679deb52078c79dfcf521fc49a47d70a8d396f9239f5d/tiny_gnupg-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f45f3c364e769e91728fa82ea4462a51", "sha256": "0990fa8628b5af3bec5ea228057a3006404591ef016a43df6ac1617a5e0b253d"}, "downloads": -1, "filename": "tiny_gnupg-0.5.3.tar.gz", "has_sig": false, "md5_digest": "f45f3c364e769e91728fa82ea4462a51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 595577, "upload_time": "2019-12-19T11:40:21", "upload_time_iso_8601": "2019-12-19T11:40:21.847374Z", "url": "https://files.pythonhosted.org/packages/9b/a6/ebc03059d125544ce676c83387a8b2eadeecaa3e24eb5d18920fb305579b/tiny_gnupg-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "6619de15732b5c3e7d3d1ead0923a226", "sha256": "f5ba2d952ab3ece7bf9ef731a79f0b26ca1e63409aba5a82152e40d0e01c9570"}, "downloads": -1, "filename": "tiny_gnupg-0.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6619de15732b5c3e7d3d1ead0923a226", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 529528, "upload_time": "2019-12-21T12:44:14", "upload_time_iso_8601": "2019-12-21T12:44:14.709250Z", "url": "https://files.pythonhosted.org/packages/0a/7d/d31ad9e22e5cc329e2284da3329110cdc0256acfc763b319d3bfde4782cb/tiny_gnupg-0.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94f6707eab0dd08dedc1165a835ebd36", "sha256": "fc40a7b464fd8c823e02769034be8d23b41729c0cc2ba9a96ebfc2dccbd8387a"}, "downloads": -1, "filename": "tiny_gnupg-0.5.4.tar.gz", "has_sig": false, "md5_digest": "94f6707eab0dd08dedc1165a835ebd36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 599739, "upload_time": "2019-12-21T12:44:20", "upload_time_iso_8601": "2019-12-21T12:44:20.105246Z", "url": "https://files.pythonhosted.org/packages/48/54/c8e16b6ca6f3e7902fd0962062845de9e3043a0257b1d4837c23c9ddd287/tiny_gnupg-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "8e85a3d888ee83f650ef63af6b17131a", "sha256": "1c9ecb022b167b8cd8613028de24e5f53818f07da8bd45f2e73fa8608eb08bf7"}, "downloads": -1, "filename": "tiny_gnupg-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8e85a3d888ee83f650ef63af6b17131a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 530054, "upload_time": "2019-12-23T10:34:36", "upload_time_iso_8601": "2019-12-23T10:34:36.232688Z", "url": "https://files.pythonhosted.org/packages/8e/19/38ff1723a0bb0d5cbfa2c424689d4de0d10d00dd2a62a28535a7233fa589/tiny_gnupg-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a11b159371c4c182d9ee3230c5bf160", "sha256": "42838531296c283610361e29330b9b679bbd620f94a2db09b5ce425d303ca81c"}, "downloads": -1, "filename": "tiny_gnupg-0.5.5.tar.gz", "has_sig": false, "md5_digest": "8a11b159371c4c182d9ee3230c5bf160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 601950, "upload_time": "2019-12-23T10:34:41", "upload_time_iso_8601": "2019-12-23T10:34:41.234790Z", "url": "https://files.pythonhosted.org/packages/54/e6/fb99c3bdfc0fdcef05b693f82e305616142faa6e09d83ac79c3fc12e9aba/tiny_gnupg-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "836b6172b0ddf6e60ccaf481671bb027", "sha256": "6cb6d22a3a096441005f600293364af1d121a6bd7dbdf45b7d4bf3a2dcbf2d29"}, "downloads": -1, "filename": "tiny_gnupg-0.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "836b6172b0ddf6e60ccaf481671bb027", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 530617, "upload_time": "2019-12-24T11:38:53", "upload_time_iso_8601": "2019-12-24T11:38:53.204788Z", "url": "https://files.pythonhosted.org/packages/78/30/d9c0afc7d8023b0a22f4e8a6836ce61f67fb44edc7f45616c5f726546164/tiny_gnupg-0.5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74a9b5dae2e1c4ae25ad090c541de1a3", "sha256": "4c1c48d7cef4f30ba7ec3e3c1e32d10df0468aa924316a587cb3539ed6adfaed"}, "downloads": -1, "filename": "tiny_gnupg-0.5.6.tar.gz", "has_sig": false, "md5_digest": "74a9b5dae2e1c4ae25ad090c541de1a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 603866, "upload_time": "2019-12-24T11:38:58", "upload_time_iso_8601": "2019-12-24T11:38:58.106125Z", "url": "https://files.pythonhosted.org/packages/3a/21/aba8f0e5a7c591e958f4ecd969fa4be22b69e1d6de1ac92965eeca1b068c/tiny_gnupg-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "3586e6042c75d64793823bf7de55e507", "sha256": "cd14740690a8723f0a438588359cb8794c94e34b3819ec45577b6b07c5d6a296"}, "downloads": -1, "filename": "tiny_gnupg-0.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3586e6042c75d64793823bf7de55e507", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531044, "upload_time": "2019-12-25T02:13:58", "upload_time_iso_8601": "2019-12-25T02:13:58.590453Z", "url": "https://files.pythonhosted.org/packages/d3/6f/6768d3fa9e3527a08fa67d7c168682e457a64b582fe44322203d9029d096/tiny_gnupg-0.5.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a290ad748dba0405089c678d759d3e6a", "sha256": "351b4b31f33b535a2737affc11a57748071fb7395032d7673d55c5b49970925c"}, "downloads": -1, "filename": "tiny_gnupg-0.5.7.tar.gz", "has_sig": false, "md5_digest": "a290ad748dba0405089c678d759d3e6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 605267, "upload_time": "2019-12-25T02:14:03", "upload_time_iso_8601": "2019-12-25T02:14:03.907552Z", "url": "https://files.pythonhosted.org/packages/1d/b4/c16a4449a3eae57f7242cbec04ccb0a59eb29975446ee2df78552b5cf948/tiny_gnupg-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "929bf93c0ea4d48f7ff65f25e9d55094", "sha256": "dde7cf53227f62e8e2ce474ef227f871956927aedfe9eb809c9bf6bb48d2de1d"}, "downloads": -1, "filename": "tiny_gnupg-0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "929bf93c0ea4d48f7ff65f25e9d55094", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531472, "upload_time": "2020-01-18T08:54:57", "upload_time_iso_8601": "2020-01-18T08:54:57.813958Z", "url": "https://files.pythonhosted.org/packages/f6/11/890ce7f828d5367cc62e156459849f005d66fc821f9955b4015392f39567/tiny_gnupg-0.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f79703df1e2489aa47e8374b43384360", "sha256": "ad4db99b83d7adda957f865c2a2aa41232b6c63364bff7caeb893f0f4ab9f4ce"}, "downloads": -1, "filename": "tiny_gnupg-0.5.8.tar.gz", "has_sig": false, "md5_digest": "f79703df1e2489aa47e8374b43384360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 606657, "upload_time": "2020-01-18T08:55:03", "upload_time_iso_8601": "2020-01-18T08:55:03.240375Z", "url": "https://files.pythonhosted.org/packages/d5/d0/5138e8332f1519c2fc97f6305208fdb273c44517d4be6d2d7cc56cbf2b4e/tiny_gnupg-0.5.8.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "a0dd685b2c8ecf76ac33298bcd2f7230", "sha256": "2da9d8d25270c922cf4a19d25621e6fab77a2f9b2041edb608ca38bee17f1346"}, "downloads": -1, "filename": "tiny_gnupg-0.5.9-py3-none-any.whl", "has_sig": false, "md5_digest": "a0dd685b2c8ecf76ac33298bcd2f7230", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531594, "upload_time": "2020-01-18T20:30:20", "upload_time_iso_8601": "2020-01-18T20:30:20.456522Z", "url": "https://files.pythonhosted.org/packages/49/c1/9735eff67dcf2e6162a64e125d2f14db16863f691aa98572070121629eb9/tiny_gnupg-0.5.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "220dc0673bd12d72d8b7c1ab1ff0549c", "sha256": "88e00a8d4d2530952c0b7e34b494d0d270cd67bb24db102a7a064a1a1a584aa3"}, "downloads": -1, "filename": "tiny_gnupg-0.5.9.tar.gz", "has_sig": false, "md5_digest": "220dc0673bd12d72d8b7c1ab1ff0549c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 607202, "upload_time": "2020-01-18T20:30:27", "upload_time_iso_8601": "2020-01-18T20:30:27.642423Z", "url": "https://files.pythonhosted.org/packages/49/c7/7ca8396ceb1f7c7b387e492d4a24fa23cf2f9b561d09eb7ca45c1149bd1c/tiny_gnupg-0.5.9.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "41ef6a5b73a8dbd27c05679f33817d3a", "sha256": "363ccccd02d5408b05b070bbe0855e81bc6f5ca12d55e872f709360617df700f"}, "downloads": -1, "filename": "tiny_gnupg-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41ef6a5b73a8dbd27c05679f33817d3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531673, "upload_time": "2020-01-18T22:40:31", "upload_time_iso_8601": "2020-01-18T22:40:31.932816Z", "url": "https://files.pythonhosted.org/packages/ed/1b/3b32e92de5d0c7c5d6f0334739191687e93caca13206c28ab88846409991/tiny_gnupg-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7b87853b50aa03d82e338a8fe40dce3", "sha256": "9747434451f3dfaffe37fa26b0f49a115e0f1757616edcbdefb8c7e40023c58e"}, "downloads": -1, "filename": "tiny_gnupg-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b7b87853b50aa03d82e338a8fe40dce3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 607541, "upload_time": "2020-01-18T22:40:45", "upload_time_iso_8601": "2020-01-18T22:40:45.145846Z", "url": "https://files.pythonhosted.org/packages/69/cb/2706c9e32fecea619e015214de51820e1c1e72b29e469762375a3006f11d/tiny_gnupg-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "dece652eeddca8740ad00cb4d5544f03", "sha256": "d27e21691b20a1e841453b54dc8c8c1c810cb57532fd6423eb893e4ade00cbd5"}, "downloads": -1, "filename": "tiny_gnupg-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dece652eeddca8740ad00cb4d5544f03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531780, "upload_time": "2020-01-18T23:31:23", "upload_time_iso_8601": "2020-01-18T23:31:23.046304Z", "url": "https://files.pythonhosted.org/packages/3b/fd/9593ee65457d054af70c04d4d9a1631396284ce4d2e17b9591dc5df6c12a/tiny_gnupg-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb05cccf482216cdbca10fd18d7c83e", "sha256": "6cc5fa87e8acfc8e3264137136f3d14a0ad6b0142ee15c21d520b9f439c4fbd7"}, "downloads": -1, "filename": "tiny_gnupg-0.6.1.tar.gz", "has_sig": false, "md5_digest": "2bb05cccf482216cdbca10fd18d7c83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 607949, "upload_time": "2020-01-18T23:31:27", "upload_time_iso_8601": "2020-01-18T23:31:27.653711Z", "url": "https://files.pythonhosted.org/packages/a7/b3/f0cf8f64faba51147d3a2f2f3015eb51fbe05d2758655bc0ad55cc8a4f95/tiny_gnupg-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dece652eeddca8740ad00cb4d5544f03", "sha256": "d27e21691b20a1e841453b54dc8c8c1c810cb57532fd6423eb893e4ade00cbd5"}, "downloads": -1, "filename": "tiny_gnupg-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dece652eeddca8740ad00cb4d5544f03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 531780, "upload_time": "2020-01-18T23:31:23", "upload_time_iso_8601": "2020-01-18T23:31:23.046304Z", "url": "https://files.pythonhosted.org/packages/3b/fd/9593ee65457d054af70c04d4d9a1631396284ce4d2e17b9591dc5df6c12a/tiny_gnupg-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb05cccf482216cdbca10fd18d7c83e", "sha256": "6cc5fa87e8acfc8e3264137136f3d14a0ad6b0142ee15c21d520b9f439c4fbd7"}, "downloads": -1, "filename": "tiny_gnupg-0.6.1.tar.gz", "has_sig": false, "md5_digest": "2bb05cccf482216cdbca10fd18d7c83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 607949, "upload_time": "2020-01-18T23:31:27", "upload_time_iso_8601": "2020-01-18T23:31:27.653711Z", "url": "https://files.pythonhosted.org/packages/a7/b3/f0cf8f64faba51147d3a2f2f3015eb51fbe05d2758655bc0ad55cc8a4f95/tiny_gnupg-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:01 2020"}