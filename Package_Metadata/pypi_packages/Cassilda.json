{"info": {"author": "Pablo Martin and Eduardo Aguilar", "author_email": "pablo@odkq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2.6", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Testing"], "description": "========\nCassilda\n========\n-------------------------------------------------------------\nan UML/QEMU/XEN image generator, runner and testing framework\n-------------------------------------------------------------\n\nInstallation and usage\n----------------------\nDownload\n~~~~~~~~\nGet last version from github:.\n\n  git clone git://github.com/odkq/Cassilda.git\n\nRequirements\n~~~~~~~~~~~~\n* Python 2.6+             http://www.python.org\n* pyYAML 3.09+            http://www.pyyaml.org\n* netaddr 0.7.4+          https://github.com/drkjam/netaddr\n* pexpect 2.3+            http://www.noah.org/wiki/pexpect\n\n* uml-utilities 20070815+ http://user-mode-linux.sourceforge.net/downloads.html\n\nTo generate debian images:\n\n* debootstrap 1.0.26+     http://wiki.debian.org/Debootstrap\n\nOptional: to speed up reinstalling images, have an apt-proxy such\nas apt-cacher-ng installed\n\nTo install all dependencies in debian squeeze, do::\n\n  apt-get install python python-yaml python-netaddr python-pexpect \\\n  uml-utilities debootstrap apt-cacher-ng\n\nInstallation\n~~~~~~~~~~~~\n\nCassilda uses the regular distutils setup.py, install with::\n\n  sudo python ./setup.py install\n\nIt will put the cassilda python modules wherever your system-wide\npython installation needs it, and the documentation/examples in\n/usr/share/doc/Cassilda\n\nUsage\n~~~~~\n\nExample session::\n\n    Launch the python (or ipython or bpython) interpreter as root\n    in a directory with sufficient space to store the generated\n    images:\n\n    # cd /tmp    \n    # ipython\n\n    >>> import cassilda\n    ## Load settings from a YAML cassilda profile\n    >>> c = cassilda.Cassilda(\n\t\"/usr/share/doc/Cassilda/examples/apache_mysql.cas\",\n\t['/usr/share/doc/Cassilda/examples/'])\n    ## Install an image\n    >>> c.install_and_configure(\"apache_server\")\n    (output from cassilda)\n    ## Install all images\n    >>> c.install_and_configure(\"mysql_server\")\n    >>> c.install_and_configure(\"web_client\")\n    ## Run an image\n    >>> c.run(\"apache_server\")\n    ## Interact (with the console) of a running image\n    >>> c.interact('apache_server')\n    ## Press the regular telnet escape char ^] to return\n\nCassilda Profile description\n----------------------------\nTo be written yet\n\nImages\n~~~~~~\nTo be written yet\n\nInstallers\n~~~~~~~~~~\nTo be written yet\n\nExtending Cassilda\n------------------\nWriting builders\n~~~~~~~~~~~~~~~~\nTo be written yet\n\nWriting runners\n~~~~~~~~~~~~~~~\nTo be written yet", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/odkq/Cassilda", "keywords": null, "license": "GPL v3", "maintainer": null, "maintainer_email": null, "name": "Cassilda", "package_url": "https://pypi.org/project/Cassilda/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Cassilda/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/odkq/Cassilda"}, "release_url": "https://pypi.org/project/Cassilda/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "An UML/QEMU/XEN image generator, runner and testingframework", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation-and-usage\">\n<h2>Installation and usage</h2>\n<div id=\"download\">\n<h3>Download</h3>\n<p>Get last version from github:.</p>\n<blockquote>\ngit clone git://github.com/odkq/Cassilda.git</blockquote>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.6+             <a href=\"http://www.python.org\" rel=\"nofollow\">http://www.python.org</a></li>\n<li>pyYAML 3.09+            <a href=\"http://www.pyyaml.org\" rel=\"nofollow\">http://www.pyyaml.org</a></li>\n<li>netaddr 0.7.4+          <a href=\"https://github.com/drkjam/netaddr\" rel=\"nofollow\">https://github.com/drkjam/netaddr</a></li>\n<li>pexpect 2.3+            <a href=\"http://www.noah.org/wiki/pexpect\" rel=\"nofollow\">http://www.noah.org/wiki/pexpect</a></li>\n<li>uml-utilities 20070815+ <a href=\"http://user-mode-linux.sourceforge.net/downloads.html\" rel=\"nofollow\">http://user-mode-linux.sourceforge.net/downloads.html</a></li>\n</ul>\n<p>To generate debian images:</p>\n<ul>\n<li>debootstrap 1.0.26+     <a href=\"http://wiki.debian.org/Debootstrap\" rel=\"nofollow\">http://wiki.debian.org/Debootstrap</a></li>\n</ul>\n<p>Optional: to speed up reinstalling images, have an apt-proxy such\nas apt-cacher-ng installed</p>\n<p>To install all dependencies in debian squeeze, do:</p>\n<pre>apt-get install python python-yaml python-netaddr python-pexpect \\\numl-utilities debootstrap apt-cacher-ng\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Cassilda uses the regular distutils setup.py, install with:</p>\n<pre>sudo python ./setup.py install\n</pre>\n<p>It will put the cassilda python modules wherever your system-wide\npython installation needs it, and the documentation/examples in\n/usr/share/doc/Cassilda</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Example session:</p>\n<pre>Launch the python (or ipython or bpython) interpreter as root\nin a directory with sufficient space to store the generated\nimages:\n\n# cd /tmp\n# ipython\n\n&gt;&gt;&gt; import cassilda\n## Load settings from a YAML cassilda profile\n&gt;&gt;&gt; c = cassilda.Cassilda(\n    \"/usr/share/doc/Cassilda/examples/apache_mysql.cas\",\n    ['/usr/share/doc/Cassilda/examples/'])\n## Install an image\n&gt;&gt;&gt; c.install_and_configure(\"apache_server\")\n(output from cassilda)\n## Install all images\n&gt;&gt;&gt; c.install_and_configure(\"mysql_server\")\n&gt;&gt;&gt; c.install_and_configure(\"web_client\")\n## Run an image\n&gt;&gt;&gt; c.run(\"apache_server\")\n## Interact (with the console) of a running image\n&gt;&gt;&gt; c.interact('apache_server')\n## Press the regular telnet escape char ^] to return\n</pre>\n</div>\n</div>\n<div id=\"cassilda-profile-description\">\n<h2>Cassilda Profile description</h2>\n<p>To be written yet</p>\n<div id=\"images\">\n<h3>Images</h3>\n<p>To be written yet</p>\n</div>\n<div id=\"installers\">\n<h3>Installers</h3>\n<p>To be written yet</p>\n</div>\n</div>\n<div id=\"extending-cassilda\">\n<h2>Extending Cassilda</h2>\n<div id=\"writing-builders\">\n<h3>Writing builders</h3>\n<p>To be written yet</p>\n</div>\n<div id=\"writing-runners\">\n<h3>Writing runners</h3>\n<p>To be written yet</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 348149, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Thu May  7 22:35:19 2020"}