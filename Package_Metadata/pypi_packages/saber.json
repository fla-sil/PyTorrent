{"info": {"author": "John Giorgi", "author_email": "johnmgiorgi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Flask", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only"], "description": "<p align=\"center\">\n  <img src=\"img/saber_logo.png\", style=\"height:150px\">\n</p>\n\n<h1 align=\"center\">\n  Saber\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/BaderLab/saber\">\n    <img src=\"https://travis-ci.org/BaderLab/saber.svg?branch=master\"\n         alt=\"Travis CI\">\n  </a>\n  <a href=\"https://www.codacy.com/app/JohnGiorgi/Saber?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=BaderLab/saber&amp;utm_campaign=Badge_Grade\">\n    <img src=\"https://api.codacy.com/project/badge/Grade/d122e87152d84f959ee6d97b71d616cb\" alt='Codacy Status'/>\n  </a>\n  <a href='https://coveralls.io/github/BaderLab/saber?branch=master'>\n    <img src='https://coveralls.io/repos/github/BaderLab/saber/badge.svg?branch=master' alt='Coverage Status'/>\n  </a>\n  <a href='https://spacy.io'>\n    <img src='https://img.shields.io/badge/spaCy-v2-09a3d5.svg' alt='Spacy Version'/>\n  </a>\n  <a href='http://makeapullrequest.com'>\n    <img src='https://img.shields.io/badge/PRs-welcome-blue.svg?style=shields' alt='PRs Welcome'/>\n  </a>\n  <a href='https://opensource.org/licenses/MIT'>\n    <img src='https://img.shields.io/badge/License-MIT-blue.svg' alt='License'/>\n  </a>\n    <a href='https://colab.research.google.com/drive/1WD7oruVuTo6p_908MQWXRBdLF3Vw2MPo'>\n    <img src='https://img.shields.io/badge/launch-Google%20Colab-orange.svg' alt='Colab'/>\n  </a>\n</p>\n\n<p align=\"center\"><b>Saber</b> (<b>S</b>equence <b>A</b>nnotator for <b>B</b>iomedical <b>E</b>ntities and <b>R</b>elations) is a deep-learning based tool for <b>information extraction</b> in the biomedical domain.\n</p>\n\n<p align=\"center\">\n  <a href=\"#installation\">Installation</a> \u2022\n  <a href=\"#quickstart\">Quickstart</a> \u2022\n  <a href=\"#documentation\">Documentation</a>\n</p>\n\n## Installation\n\nTo install Saber, you will need `python>=3.5`. If not already installed, `python>=3.5` can be installed via\n\n - The [official installer](https://www.python.org/downloads/)\n - [Homebrew](https://brew.sh), on MacOS (`brew install python3`)\n - [Miniconda3](https://conda.io/miniconda.html) / [Anaconda3](https://www.anaconda.com/download/)\n\n(OPTIONAL) Activate your virtual environment (see [below](#optional-creating-and-activating-virtual-environments) for help)\n\n```sh\n$ conda activate saber\n# Notice your command prompt has changed to indicate that the environment is active\n(saber) $\n```\n\nthen install Saber\n\n```sh\n(saber) $ pip install saber\n```\n\nTo get the latest development version of Saber, install it right from this repository with `pip`\n\n```sh\n(saber) $ pip install https://github.com/BaderLab/saber.git\n```\n\nor by cloning the repository and then using `pip` to install the package\n\n```sh\n(saber) $ git clone https://github.com/BaderLab/saber.git\n(saber) $ cd saber\n(saber) $ pip install .\n```\n\nFor now, you will need to install the required [Spacy](https://spacy.io) model and the [keras-contrib](https://github.com/keras-team/keras-contrib) repository (even if you installed with `pip install saber`)\n\n```sh\n# keras-contrib\n(saber) $ pip install git+https://www.github.com/keras-team/keras-contrib.git\n# NeuralCoref medium model built on top of Spacy, this might take a few minutes to download!\n(saber) $ pip install https://github.com/huggingface/neuralcoref-models/releases/download/en_coref_md-3.0.0/en_coref_md-3.0.0.tar.gz\n```\n\n### (OPTIONAL) Creating and activating virtual environments\n\nWhen using `pip` it is generally recommended to install packages in a virtual environment to avoid modifying system state. To create a virtual environment named `saber`\n\n#### Using virtualenv or venv\n\nUsing [virtualenv](https://virtualenv.pypa.io/en/stable/)\n\n```sh\n$ virtualenv --python=python3 /path/to/new/venv/saber\n```\n\nUsing [venv](https://docs.python.org/3/library/venv.html)\n\n```sh\n$ python3 -m venv /path/to/new/venv/saber\n```\n\nNext, you need to activate the environment\n\n```sh\n$ source /path/to/new/venv/saber/bin/activate\n# Notice your command prompt has changed to indicate that the environment is active\n(saber) $\n```\n\n#### Using Conda\n\nIf you use [Conda](https://conda.io/docs/), you can create an environment named `saber` by running\n\n```sh\n$ conda create -n saber python=3.6\n```\n\nthen activate the environment with\n\n```sh\n$ conda activate saber\n# Again, your command prompt should change to indicate that the environment is active\n(saber) $\n```\n\n## Quickstart\n\nIf your goal is to use Saber to annotate biomedical text, then you can either use the [web-service](#web-service) or a [pre-trained model](#pre-trained-models). If you simply want to check Saber out, without installing anything locally, try the [Google Colaboratory](#google-colaboratory) notebook.\n\n### Google Colaboratory\n\nThe fastest way to check out Saber is by following along with the Google Colaboratory notebook ([![Colab](https://img.shields.io/badge/launch-Google%20Colab-orange.svg)](https://colab.research.google.com/drive/1WD7oruVuTo6p_908MQWXRBdLF3Vw2MPo)). In order to be able to run the cells, select \"Open in Playground\" or, alternatively, save a copy to your own Google Drive account (File > Save a copy in Drive).\n\n### Web-service\n\nTo use Saber as a **local** web-service, run\n\n```\n(saber) $ python -m saber.cli.app\n```\n\nor, if you prefer, you can pull & run the Saber image from **Docker Hub**\n\n```sh\n# Pull Saber image from Docker Hub\n$ docker pull pathwaycommons/saber\n# Run docker (use `-dt` instead of `-it` to run container in background)\n$ docker run -it --rm -p 5000:5000 --name saber pathwaycommons/saber\n```\n\nThere are currently two endpoints, `/annotate/text` and `/annotate/pmid`. Both expect a `POST` request with a JSON payload, e.g.,\n\n```json\n{\n  \"text\": \"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\"\n}\n```\n\nor\n\n```json\n{\n  \"pmid\": 11835401\n}\n```\n\nFor example, running the web-service locally and using `cURL`\n\n```sh\n$ curl -X POST 'http://localhost:5000/annotate/text' \\\n--data '{\"text\": \"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\"}'\n```\n\nDocumentation for the Saber web-service API can be found [here](https://baderlab.github.io/saber-api-docs/).\n\n### Pre-trained models\n\nFirst, import the `Saber` class. This is the interface to Saber\n\n```python\nfrom saber.saber import Saber\n```\n\nTo load a pre-trained model, first create a `Saber` object\n\n```python\nsaber = Saber()\n```\n\nand then load the model of our choice\n\n```python\nsaber.load('PRGE')\n```\n\nYou can see all the pre-trained models in the [web-service API docs](https://baderlab.github.io/saber-api-docs/) or, the [saber/pretrained_models](saber/pretrained_models) folder in this repository, or by running the following line of code\n\n```python\nfrom saber.constants import ENTITIES; print(list(ENTITIES.keys()))\n```\n\nTo annotate text with the model, just call the `Saber.annotate()` method\n\n```python\nsaber.annotate(\"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\")\n```\nSee the [documentation](https://baderlab.github.io/saber/quick_start/) for more details.\n\n## Documentation\n\nDocumentation for the Saber API can be found [here](https://baderlab.github.io/saber/). The web-service API has its own documentation [here](https://baderlab.github.io/saber-api-docs/#introduction). Finally, we provide a [jupyter notebook](notebooks/lightning_tour.ipynb) which introduces the main ways of using Saber. See [here](https://baderlab.github.io/saber/guide_to_saber_api/#juypter-notebooks) for help setting up [JupyterLab](https://github.com/jupyterlab/jupyterlab).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BaderLab/saber", "keywords": "Natural Language Processing,Named Entity Recognition", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "saber", "package_url": "https://pypi.org/project/saber/", "platform": "", "project_url": "https://pypi.org/project/saber/", "project_urls": {"Homepage": "https://github.com/BaderLab/saber"}, "release_url": "https://pypi.org/project/saber/0.1.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Saber: Sequence Annotator for Biomedical Entities and Relations", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd3d53a9c689aa72c33ea9b05660c09a0e2462bb/696d672f73616265725f6c6f676f2e706e67\">\n</p>\n<h1>\n  Saber\n</h1>\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/BaderLab/saber\" rel=\"nofollow\">\n    <img alt=\"Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95212dbd2325023bad7af25579646288e1ced7dc/68747470733a2f2f7472617669732d63692e6f72672f42616465724c61622f73616265722e7376673f6272616e63683d6d6173746572\">\n  </a>\n  <a href=\"https://www.codacy.com/app/JohnGiorgi/Saber?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=BaderLab/saber&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\">\n    <img alt=\"Codacy Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bcc9205077dd5a0c1d53a160e2da42d42a4bcb4/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6431323265383731353264383466393539656536643937623731643631366362\">\n  </a>\n  <a href=\"https://coveralls.io/github/BaderLab/saber?branch=master\" rel=\"nofollow\">\n    <img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/517a68160d344f65756119374421bb931cdfa35f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f42616465724c61622f73616265722f62616467652e7376673f6272616e63683d6d6173746572\">\n  </a>\n  <a href=\"https://spacy.io\" rel=\"nofollow\">\n    <img alt=\"Spacy Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9946bafb83b661f4ba57ae7c4db846b20d68ad7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706143792d76322d3039613364352e737667\">\n  </a>\n  <a href=\"http://makeapullrequest.com\" rel=\"nofollow\">\n    <img alt=\"PRs Welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57f07a8cd6f8ac29cc59cd7dd81b68806f75308e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d626c75652e7376673f7374796c653d736869656c6473\">\n  </a>\n  <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">\n    <img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\">\n  </a>\n    <a href=\"https://colab.research.google.com/drive/1WD7oruVuTo6p_908MQWXRBdLF3Vw2MPo\" rel=\"nofollow\">\n    <img alt=\"Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c87bca1033e507aa059c3d519272e0184d12e16a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c61756e63682d476f6f676c65253230436f6c61622d6f72616e67652e737667\">\n  </a>\n</p>\n<p align=\"center\"><b>Saber</b> (<b>S</b>equence <b>A</b>nnotator for <b>B</b>iomedical <b>E</b>ntities and <b>R</b>elations) is a deep-learning based tool for <b>information extraction</b> in the biomedical domain.\n</p>\n<p align=\"center\">\n  <a href=\"#installation\" rel=\"nofollow\">Installation</a> \u2022\n  <a href=\"#quickstart\" rel=\"nofollow\">Quickstart</a> \u2022\n  <a href=\"#documentation\" rel=\"nofollow\">Documentation</a>\n</p>\n<h2>Installation</h2>\n<p>To install Saber, you will need <code>python&gt;=3.5</code>. If not already installed, <code>python&gt;=3.5</code> can be installed via</p>\n<ul>\n<li>The <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">official installer</a></li>\n<li><a href=\"https://brew.sh\" rel=\"nofollow\">Homebrew</a>, on MacOS (<code>brew install python3</code>)</li>\n<li><a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\">Miniconda3</a> / <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">Anaconda3</a></li>\n</ul>\n<p>(OPTIONAL) Activate your virtual environment (see <a href=\"#optional-creating-and-activating-virtual-environments\" rel=\"nofollow\">below</a> for help)</p>\n<pre>$ conda activate saber\n<span class=\"c1\"># Notice your command prompt has changed to indicate that the environment is active</span>\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $\n</pre>\n<p>then install Saber</p>\n<pre><span class=\"o\">(</span>saber<span class=\"o\">)</span> $ pip install saber\n</pre>\n<p>To get the latest development version of Saber, install it right from this repository with <code>pip</code></p>\n<pre><span class=\"o\">(</span>saber<span class=\"o\">)</span> $ pip install https://github.com/BaderLab/saber.git\n</pre>\n<p>or by cloning the repository and then using <code>pip</code> to install the package</p>\n<pre><span class=\"o\">(</span>saber<span class=\"o\">)</span> $ git clone https://github.com/BaderLab/saber.git\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $ <span class=\"nb\">cd</span> saber\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $ pip install .\n</pre>\n<p>For now, you will need to install the required <a href=\"https://spacy.io\" rel=\"nofollow\">Spacy</a> model and the <a href=\"https://github.com/keras-team/keras-contrib\" rel=\"nofollow\">keras-contrib</a> repository (even if you installed with <code>pip install saber</code>)</p>\n<pre><span class=\"c1\"># keras-contrib</span>\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $ pip install git+https://www.github.com/keras-team/keras-contrib.git\n<span class=\"c1\"># NeuralCoref medium model built on top of Spacy, this might take a few minutes to download!</span>\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $ pip install https://github.com/huggingface/neuralcoref-models/releases/download/en_coref_md-3.0.0/en_coref_md-3.0.0.tar.gz\n</pre>\n<h3>(OPTIONAL) Creating and activating virtual environments</h3>\n<p>When using <code>pip</code> it is generally recommended to install packages in a virtual environment to avoid modifying system state. To create a virtual environment named <code>saber</code></p>\n<h4>Using virtualenv or venv</h4>\n<p>Using <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a></p>\n<pre>$ virtualenv --python<span class=\"o\">=</span>python3 /path/to/new/venv/saber\n</pre>\n<p>Using <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a></p>\n<pre>$ python3 -m venv /path/to/new/venv/saber\n</pre>\n<p>Next, you need to activate the environment</p>\n<pre>$ <span class=\"nb\">source</span> /path/to/new/venv/saber/bin/activate\n<span class=\"c1\"># Notice your command prompt has changed to indicate that the environment is active</span>\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $\n</pre>\n<h4>Using Conda</h4>\n<p>If you use <a href=\"https://conda.io/docs/\" rel=\"nofollow\">Conda</a>, you can create an environment named <code>saber</code> by running</p>\n<pre>$ conda create -n saber <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.6\n</pre>\n<p>then activate the environment with</p>\n<pre>$ conda activate saber\n<span class=\"c1\"># Again, your command prompt should change to indicate that the environment is active</span>\n<span class=\"o\">(</span>saber<span class=\"o\">)</span> $\n</pre>\n<h2>Quickstart</h2>\n<p>If your goal is to use Saber to annotate biomedical text, then you can either use the <a href=\"#web-service\" rel=\"nofollow\">web-service</a> or a <a href=\"#pre-trained-models\" rel=\"nofollow\">pre-trained model</a>. If you simply want to check Saber out, without installing anything locally, try the <a href=\"#google-colaboratory\" rel=\"nofollow\">Google Colaboratory</a> notebook.</p>\n<h3>Google Colaboratory</h3>\n<p>The fastest way to check out Saber is by following along with the Google Colaboratory notebook (<a href=\"https://colab.research.google.com/drive/1WD7oruVuTo6p_908MQWXRBdLF3Vw2MPo\" rel=\"nofollow\"><img alt=\"Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c87bca1033e507aa059c3d519272e0184d12e16a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c61756e63682d476f6f676c65253230436f6c61622d6f72616e67652e737667\"></a>). In order to be able to run the cells, select \"Open in Playground\" or, alternatively, save a copy to your own Google Drive account (File &gt; Save a copy in Drive).</p>\n<h3>Web-service</h3>\n<p>To use Saber as a <strong>local</strong> web-service, run</p>\n<pre><code>(saber) $ python -m saber.cli.app\n</code></pre>\n<p>or, if you prefer, you can pull &amp; run the Saber image from <strong>Docker Hub</strong></p>\n<pre><span class=\"c1\"># Pull Saber image from Docker Hub</span>\n$ docker pull pathwaycommons/saber\n<span class=\"c1\"># Run docker (use `-dt` instead of `-it` to run container in background)</span>\n$ docker run -it --rm -p <span class=\"m\">5000</span>:5000 --name saber pathwaycommons/saber\n</pre>\n<p>There are currently two endpoints, <code>/annotate/text</code> and <code>/annotate/pmid</code>. Both expect a <code>POST</code> request with a JSON payload, e.g.,</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>or</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"pmid\"</span><span class=\"p\">:</span> <span class=\"mi\">11835401</span>\n<span class=\"p\">}</span>\n</pre>\n<p>For example, running the web-service locally and using <code>cURL</code></p>\n<pre>$ curl -X POST <span class=\"s1\">'http://localhost:5000/annotate/text'</span> <span class=\"se\">\\</span>\n--data <span class=\"s1\">'{\"text\": \"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\"}'</span>\n</pre>\n<p>Documentation for the Saber web-service API can be found <a href=\"https://baderlab.github.io/saber-api-docs/\" rel=\"nofollow\">here</a>.</p>\n<h3>Pre-trained models</h3>\n<p>First, import the <code>Saber</code> class. This is the interface to Saber</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">saber.saber</span> <span class=\"kn\">import</span> <span class=\"n\">Saber</span>\n</pre>\n<p>To load a pre-trained model, first create a <code>Saber</code> object</p>\n<pre><span class=\"n\">saber</span> <span class=\"o\">=</span> <span class=\"n\">Saber</span><span class=\"p\">()</span>\n</pre>\n<p>and then load the model of our choice</p>\n<pre><span class=\"n\">saber</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'PRGE'</span><span class=\"p\">)</span>\n</pre>\n<p>You can see all the pre-trained models in the <a href=\"https://baderlab.github.io/saber-api-docs/\" rel=\"nofollow\">web-service API docs</a> or, the <a href=\"saber/pretrained_models\" rel=\"nofollow\">saber/pretrained_models</a> folder in this repository, or by running the following line of code</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">saber.constants</span> <span class=\"kn\">import</span> <span class=\"n\">ENTITIES</span><span class=\"p\">;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">ENTITIES</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()))</span>\n</pre>\n<p>To annotate text with the model, just call the <code>Saber.annotate()</code> method</p>\n<pre><span class=\"n\">saber</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"The phosphorylation of Hdm2 by MK2 promotes the ubiquitination of p53.\"</span><span class=\"p\">)</span>\n</pre>\n<p>See the <a href=\"https://baderlab.github.io/saber/quick_start/\" rel=\"nofollow\">documentation</a> for more details.</p>\n<h2>Documentation</h2>\n<p>Documentation for the Saber API can be found <a href=\"https://baderlab.github.io/saber/\" rel=\"nofollow\">here</a>. The web-service API has its own documentation <a href=\"https://baderlab.github.io/saber-api-docs/#introduction\" rel=\"nofollow\">here</a>. Finally, we provide a <a href=\"notebooks/lightning_tour.ipynb\" rel=\"nofollow\">jupyter notebook</a> which introduces the main ways of using Saber. See <a href=\"https://baderlab.github.io/saber/guide_to_saber_api/#juypter-notebooks\" rel=\"nofollow\">here</a> for help setting up <a href=\"https://github.com/jupyterlab/jupyterlab\" rel=\"nofollow\">JupyterLab</a>.</p>\n\n          </div>"}, "last_serial": 4722306, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f04ccdb9c3c477991f728d44f48db027", "sha256": "e373ac8f87ba2ce63a84dc2462821016b8ffc187c81772f9dbe1530c2d959af3"}, "downloads": -1, "filename": "saber-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f04ccdb9c3c477991f728d44f48db027", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39690193, "upload_time": "2019-01-21T16:31:39", "upload_time_iso_8601": "2019-01-21T16:31:39.742554Z", "url": "https://files.pythonhosted.org/packages/6f/57/d6f6d9b6b594194734a68af4b1c07b6d22b1da0425d2247ff897099c3a96/saber-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f04ccdb9c3c477991f728d44f48db027", "sha256": "e373ac8f87ba2ce63a84dc2462821016b8ffc187c81772f9dbe1530c2d959af3"}, "downloads": -1, "filename": "saber-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f04ccdb9c3c477991f728d44f48db027", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39690193, "upload_time": "2019-01-21T16:31:39", "upload_time_iso_8601": "2019-01-21T16:31:39.742554Z", "url": "https://files.pythonhosted.org/packages/6f/57/d6f6d9b6b594194734a68af4b1c07b6d22b1da0425d2247ff897099c3a96/saber-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:30 2020"}