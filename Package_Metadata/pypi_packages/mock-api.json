{"info": {"author": "Tommaso De Rossi", "author_email": "daer.tommy@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# mock_api\nmocks api function returning fake data with specified shape.\nEvery url can have different shape, these are represented in skema format in a yaml file,\n```yaml\n/posts/: |\n    Response:\n        ok: Bool\n        data: [\n            postName: Str\n            date: Str\n            id: Int\n        ]\n/post/: |\n    Response:\n        ok: Bool\n        data:\n            author:\n                name: Str\n                id: Int\n            description: Str\n```\nThe shape of the data can change based on url hostname or path.\nan example:\n```python\nfrom mock_api import mock_function\nfrom myapi import api_call\n\nwith mock_function('myapi.api_call', 'api_shape.yml', arg=0):\n    data = api_call('/posts/')\n    print(data) # {'ok': True, 'data': {'postName': 'sdfsdgx', 'date': 'sdfg4'}}\n```\n\n## genrating the api shapes\n\nYou can generating the shapes calling many times the api\n```python\nfrom mock_api import track_function\nfrom myapi import api_call\n\nwith track_function('myapi.api_call', 'api_shape.yaml', ):\n    api_call('/posts/')\n    api_call('/post/34')\n    api_call('/post/14')\n    api_call('/data/')\n\n# a file api_shape.yaml is created\nassert os.path.exists('api_shape)\n```\n\n## todo:\n- change shape based on POST, GET ...\n- change shape based on parameters\n- add url parameters, like posts/:id/\n- remove Response root key maybe (but i can't use root arrays, Root: [...])\n- add possible codes, like 200, 400, then change shape based on them\n-", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/remorses/TODO", "keywords": "mock_api", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "mock-api", "package_url": "https://pypi.org/project/mock-api/", "platform": "", "project_url": "https://pypi.org/project/mock-api/", "project_urls": {"Homepage": "https://github.com/remorses/TODO"}, "release_url": "https://pypi.org/project/mock-api/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "mock_api", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mock_api</h1>\n<p>mocks api function returning fake data with specified shape.\nEvery url can have different shape, these are represented in skema format in a yaml file,</p>\n<pre><span class=\"nt\">/posts/</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n    <span class=\"no\">Response:</span>\n        <span class=\"no\">ok: Bool</span>\n        <span class=\"no\">data: [</span>\n            <span class=\"no\">postName: Str</span>\n            <span class=\"no\">date: Str</span>\n            <span class=\"no\">id: Int</span>\n        <span class=\"no\">]</span>\n<span class=\"nt\">/post/</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n    <span class=\"no\">Response:</span>\n        <span class=\"no\">ok: Bool</span>\n        <span class=\"no\">data:</span>\n            <span class=\"no\">author:</span>\n                <span class=\"no\">name: Str</span>\n                <span class=\"no\">id: Int</span>\n            <span class=\"no\">description: Str</span>\n</pre>\n<p>The shape of the data can change based on url hostname or path.\nan example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mock_api</span> <span class=\"kn\">import</span> <span class=\"n\">mock_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapi</span> <span class=\"kn\">import</span> <span class=\"n\">api_call</span>\n\n<span class=\"k\">with</span> <span class=\"n\">mock_function</span><span class=\"p\">(</span><span class=\"s1\">'myapi.api_call'</span><span class=\"p\">,</span> <span class=\"s1\">'api_shape.yml'</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api_call</span><span class=\"p\">(</span><span class=\"s1\">'/posts/'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"c1\"># {'ok': True, 'data': {'postName': 'sdfsdgx', 'date': 'sdfg4'}}</span>\n</pre>\n<h2>genrating the api shapes</h2>\n<p>You can generating the shapes calling many times the api</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mock_api</span> <span class=\"kn\">import</span> <span class=\"n\">track_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapi</span> <span class=\"kn\">import</span> <span class=\"n\">api_call</span>\n\n<span class=\"k\">with</span> <span class=\"n\">track_function</span><span class=\"p\">(</span><span class=\"s1\">'myapi.api_call'</span><span class=\"p\">,</span> <span class=\"s1\">'api_shape.yaml'</span><span class=\"p\">,</span> <span class=\"p\">):</span>\n    <span class=\"n\">api_call</span><span class=\"p\">(</span><span class=\"s1\">'/posts/'</span><span class=\"p\">)</span>\n    <span class=\"n\">api_call</span><span class=\"p\">(</span><span class=\"s1\">'/post/34'</span><span class=\"p\">)</span>\n    <span class=\"n\">api_call</span><span class=\"p\">(</span><span class=\"s1\">'/post/14'</span><span class=\"p\">)</span>\n    <span class=\"n\">api_call</span><span class=\"p\">(</span><span class=\"s1\">'/data/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># a file api_shape.yaml is created</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s1\">'api_shape)</span>\n</pre>\n<h2>todo:</h2>\n<ul>\n<li>change shape based on POST, GET ...</li>\n<li>change shape based on parameters</li>\n<li>add url parameters, like posts/:id/</li>\n<li>remove Response root key maybe (but i can't use root arrays, Root: [...])</li>\n<li>add possible codes, like 200, 400, then change shape based on them</li>\n<li>\n</ul>\n\n          </div>"}, "last_serial": 5849939, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "df95e148938fc21e5b7105f2b76e358b", "sha256": "8104778cf1440da7f433d10aebd19f93607bfe4b1279f5cfa9260274aacbcf28"}, "downloads": -1, "filename": "mock_api-0.0.0.tar.gz", "has_sig": false, "md5_digest": "df95e148938fc21e5b7105f2b76e358b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3305, "upload_time": "2019-08-15T10:08:25", "upload_time_iso_8601": "2019-08-15T10:08:25.916823Z", "url": "https://files.pythonhosted.org/packages/e2/af/4e49e398d5f4194c2d7186f199f1bf82533093797f303002cf1c495cf28e/mock_api-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "f8728c0740ea1e6a34202cbbb2df73d7", "sha256": "83cddd2a70c63ef7b67ee1f542f766ce2d946cd54e8a914f1d32d2f43c9e711e"}, "downloads": -1, "filename": "mock_api-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f8728c0740ea1e6a34202cbbb2df73d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3303, "upload_time": "2019-08-15T10:29:44", "upload_time_iso_8601": "2019-08-15T10:29:44.861822Z", "url": "https://files.pythonhosted.org/packages/b0/45/c3cb20dcd6713fbf0cb5c27f30fa8233d84cd95b6abfe043d035ea5d7e2d/mock_api-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1807d86d9db41684308a86ab12415567", "sha256": "17fa05e9b455355641973e981a850747b9b69790287f19f0dbfdb84f23eb79ad"}, "downloads": -1, "filename": "mock_api-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1807d86d9db41684308a86ab12415567", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3314, "upload_time": "2019-08-15T11:54:54", "upload_time_iso_8601": "2019-08-15T11:54:54.014709Z", "url": "https://files.pythonhosted.org/packages/7b/dc/28e8e8ea1b6cdf85f439634d8866cf4774dba77fb3a417704a265c839482/mock_api-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "23de2b9ac9bfd92765c7e654e1ab18ad", "sha256": "3b7bc6ebfe1e40e0c71c5b1303b24f2559ec2cd8b6082b7864dd23139cc6d06f"}, "downloads": -1, "filename": "mock_api-0.0.3.tar.gz", "has_sig": false, "md5_digest": "23de2b9ac9bfd92765c7e654e1ab18ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3468, "upload_time": "2019-08-16T12:09:54", "upload_time_iso_8601": "2019-08-16T12:09:54.257669Z", "url": "https://files.pythonhosted.org/packages/23/be/c72d2a9410b9d3f43d41b1e357c022b18fe5561f72b4c2ea06d87e4bdab8/mock_api-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "de2f5bee23d1d54e22148e708c078c66", "sha256": "8514059247ddbc4ada23ed5cf5554eec12b16129a746e3fe2e7c8e35c40951fc"}, "downloads": -1, "filename": "mock_api-0.0.4.tar.gz", "has_sig": false, "md5_digest": "de2f5bee23d1d54e22148e708c078c66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3469, "upload_time": "2019-08-16T12:12:37", "upload_time_iso_8601": "2019-08-16T12:12:37.196460Z", "url": "https://files.pythonhosted.org/packages/44/e1/5a38de75b711d66e58fb1c71f141a3e8b775d5c90c2cc833ffd7521a6e73/mock_api-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "415ab718f07abe60ffb7958717e1f62b", "sha256": "332896d2c497ec30fa6607d569bf1fe2cf1d1d118b286475bfa6029312a65142"}, "downloads": -1, "filename": "mock_api-0.0.6.tar.gz", "has_sig": false, "md5_digest": "415ab718f07abe60ffb7958717e1f62b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3499, "upload_time": "2019-08-16T12:28:05", "upload_time_iso_8601": "2019-08-16T12:28:05.676409Z", "url": "https://files.pythonhosted.org/packages/64/ca/a33bb77fda7a751ecf5b7e91dfa98488faacd72ee4cd49f94c02f901a945/mock_api-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b389245dd6a88168d831200466ad3a40", "sha256": "5c2fac6ce14aec02671e0b376a6044664a438d73c4f525a9adfe19a6e31ea650"}, "downloads": -1, "filename": "mock_api-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b389245dd6a88168d831200466ad3a40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4773, "upload_time": "2019-09-18T12:49:55", "upload_time_iso_8601": "2019-09-18T12:49:55.221390Z", "url": "https://files.pythonhosted.org/packages/ac/a9/912690eed3d363c04b3425ee47a98a85fadbf93b50a6f108b3cf07fb4ec4/mock_api-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b389245dd6a88168d831200466ad3a40", "sha256": "5c2fac6ce14aec02671e0b376a6044664a438d73c4f525a9adfe19a6e31ea650"}, "downloads": -1, "filename": "mock_api-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b389245dd6a88168d831200466ad3a40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4773, "upload_time": "2019-09-18T12:49:55", "upload_time_iso_8601": "2019-09-18T12:49:55.221390Z", "url": "https://files.pythonhosted.org/packages/ac/a9/912690eed3d363c04b3425ee47a98a85fadbf93b50a6f108b3cf07fb4ec4/mock_api-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}