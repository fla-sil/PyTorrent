{"info": {"author": "Tim Renner", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# SVL: Declarative Dashboards\n\n[![Build Status](https://travis-ci.org/timothyrenner/svl.svg?branch=master)](https://travis-ci.org/timothyrenner/svl) [![Coverage Status](https://coveralls.io/repos/github/timothyrenner/svl/badge.svg?branch=master)](https://coveralls.io/github/timothyrenner/svl?branch=master) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\nSVL is a declarative, SQL-like language for simple reports and dashboards.\n\nInitially I made this project to learn and experiment with [EBNF](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form) context-free grammars, but pretty quickly realized this was something I could actually use for my job.\nMaybe you will find it useful too.\n\nIf you're interested, hit the link for the docs below.\n\n[timothyrenner.github.io/svl](https://timothyrenner.github.io/svl/)\n\nand install with\n\n```\npip install svl\n```\n\nNot convinced?\nMaybe \u2728 ***this*** \u2728 will change your mind...\n\nSVL code:\n\n```\nDATASETS\n    bigfoot \"sample_data/bigfoot_sightings.csv\"\nLINE bigfoot\n    X date BY YEAR\n    Y number COUNT\n    SPLIT BY classification\nCONCAT(\n    HISTOGRAM bigfoot X temperature_mid\n    HISTOGRAM bigfoot X humidity\n)\n```\n\nResults:\n\n![](docs/images/readme_example.png)\n\n## Alpha Features\n\n\u2705 **Easy to learn**: The entire grammar is under 150 lines.\n\n6\ufe0f\u20e3 **Chart types**: Line, bar, scatter, histogram and pie. And number. I plan on adding more, so if I'm missing your favorite one let me know.\n\n\ud83d\udcc8 **Complex layouts**: SVL scripts can support any number of plots and makes it straightforward to arrange them so that the most important plots get the most real estate.\n\n\ud83d\udcca **Interactive HTML output**: SVL uses [Plotly](https://plot.ly/javascript/) to draw the visualizations, and produces an easily shareable but still interactive HTML file.\n\n\ud83d\udcc2 **CSV and Parquet files**: Currently the data is limited to files, and SVL has support for CSV and (if [pyarrow](https://arrow.apache.org/docs/python/) is installed) parquet files.\n\n## Not Alpha Features, but Possible\n\n**Other plot backends** The compiler isn't married to Plotly.\nSVL can have future support for other backends like Vega, Bokeh, or even Matplotlib (probably).\n\n**Other data sources** For simplicity SVL operates on files, but like the plot renderer the compiler isn't coupled to flat files.\nIn fact, most of the data processing is done under the hood by [SQLite](https://sqlite.org/index.html), so adding support for other data processors like Postgres or MySQL is definitely possible.\n\n**Other plot types** I picked those five for the alpha release because they're the most common, but obviously more support can be added. Let me know what other chart types you'd like to see!\n\n## I'm sold!\n\n\ud83c\udf89 Sweet! \ud83c\udf89 Check out the docs [here](https://timothyrenner.github.io/svl/) to learn more.\n\n\n## Development\n\nI've been using [Anaconda](https://www.anaconda.com/distribution/) to manage environments.\nIf you've got that installed, just do\n\n```bash\nconda env create -f env.yml\n\n# then install the module\n\nconda activate svl && pip install -e .\n```\n\nTo run the tests,\n\n```bash\npytest test/ --cov=svl  # last option if you want coverage.\n```\n\nTo lint,\n\n```bash\nflake8 svl\n```\n\nin the top level directory and start hacking away!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timothyrenner/svl", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "svl", "package_url": "https://pypi.org/project/svl/", "platform": "", "project_url": "https://pypi.org/project/svl/", "project_urls": {"Homepage": "https://github.com/timothyrenner/svl"}, "release_url": "https://pypi.org/project/svl/0.1a8/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.1a8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SVL: Declarative Dashboards</h1>\n<p><a href=\"https://travis-ci.org/timothyrenner/svl\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3bf27f32ed8ad50a7a84c5981ed6a15aa6bb107/68747470733a2f2f7472617669732d63692e6f72672f74696d6f74687972656e6e65722f73766c2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/timothyrenner/svl?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6e3800438f9673c14cf0ce1b80cd2cd19948547/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74696d6f74687972656e6e65722f73766c2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>SVL is a declarative, SQL-like language for simple reports and dashboards.</p>\n<p>Initially I made this project to learn and experiment with <a href=\"https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form\" rel=\"nofollow\">EBNF</a> context-free grammars, but pretty quickly realized this was something I could actually use for my job.\nMaybe you will find it useful too.</p>\n<p>If you're interested, hit the link for the docs below.</p>\n<p><a href=\"https://timothyrenner.github.io/svl/\" rel=\"nofollow\">timothyrenner.github.io/svl</a></p>\n<p>and install with</p>\n<pre><code>pip install svl\n</code></pre>\n<p>Not convinced?\nMaybe \u2728 <em><strong>this</strong></em> \u2728 will change your mind...</p>\n<p>SVL code:</p>\n<pre><code>DATASETS\n    bigfoot \"sample_data/bigfoot_sightings.csv\"\nLINE bigfoot\n    X date BY YEAR\n    Y number COUNT\n    SPLIT BY classification\nCONCAT(\n    HISTOGRAM bigfoot X temperature_mid\n    HISTOGRAM bigfoot X humidity\n)\n</code></pre>\n<p>Results:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1de4919a0e650e77ac4803ea640217332ed081c/646f63732f696d616765732f726561646d655f6578616d706c652e706e67\"></p>\n<h2>Alpha Features</h2>\n<p>\u2705 <strong>Easy to learn</strong>: The entire grammar is under 150 lines.</p>\n<p>6\ufe0f\u20e3 <strong>Chart types</strong>: Line, bar, scatter, histogram and pie. And number. I plan on adding more, so if I'm missing your favorite one let me know.</p>\n<p>\ud83d\udcc8 <strong>Complex layouts</strong>: SVL scripts can support any number of plots and makes it straightforward to arrange them so that the most important plots get the most real estate.</p>\n<p>\ud83d\udcca <strong>Interactive HTML output</strong>: SVL uses <a href=\"https://plot.ly/javascript/\" rel=\"nofollow\">Plotly</a> to draw the visualizations, and produces an easily shareable but still interactive HTML file.</p>\n<p>\ud83d\udcc2 <strong>CSV and Parquet files</strong>: Currently the data is limited to files, and SVL has support for CSV and (if <a href=\"https://arrow.apache.org/docs/python/\" rel=\"nofollow\">pyarrow</a> is installed) parquet files.</p>\n<h2>Not Alpha Features, but Possible</h2>\n<p><strong>Other plot backends</strong> The compiler isn't married to Plotly.\nSVL can have future support for other backends like Vega, Bokeh, or even Matplotlib (probably).</p>\n<p><strong>Other data sources</strong> For simplicity SVL operates on files, but like the plot renderer the compiler isn't coupled to flat files.\nIn fact, most of the data processing is done under the hood by <a href=\"https://sqlite.org/index.html\" rel=\"nofollow\">SQLite</a>, so adding support for other data processors like Postgres or MySQL is definitely possible.</p>\n<p><strong>Other plot types</strong> I picked those five for the alpha release because they're the most common, but obviously more support can be added. Let me know what other chart types you'd like to see!</p>\n<h2>I'm sold!</h2>\n<p>\ud83c\udf89 Sweet! \ud83c\udf89 Check out the docs <a href=\"https://timothyrenner.github.io/svl/\" rel=\"nofollow\">here</a> to learn more.</p>\n<h2>Development</h2>\n<p>I've been using <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">Anaconda</a> to manage environments.\nIf you've got that installed, just do</p>\n<pre>conda env create -f env.yml\n\n<span class=\"c1\"># then install the module</span>\n\nconda activate svl <span class=\"o\">&amp;&amp;</span> pip install -e .\n</pre>\n<p>To run the tests,</p>\n<pre>pytest test/ --cov<span class=\"o\">=</span>svl  <span class=\"c1\"># last option if you want coverage.</span>\n</pre>\n<p>To lint,</p>\n<pre>flake8 svl\n</pre>\n<p>in the top level directory and start hacking away!</p>\n\n          </div>"}, "last_serial": 6606060, "releases": {"0.1a4": [{"comment_text": "", "digests": {"md5": "6be874a9954cbc1967669b5ad379a5de", "sha256": "9cb08edca34a1bd65e0d49222f8dec0d5adeed88dbb0d9385949d6f7273c6eef"}, "downloads": -1, "filename": "svl-0.1a4-py3-none-any.whl", "has_sig": false, "md5_digest": "6be874a9954cbc1967669b5ad379a5de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18318, "upload_time": "2019-03-26T18:55:51", "upload_time_iso_8601": "2019-03-26T18:55:51.246780Z", "url": "https://files.pythonhosted.org/packages/83/ab/57bb4faaaf146333aab25e64a26507db2effb81a639fcee3632c225c8c69/svl-0.1a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958f122769f6bf4a53f2c8df12ed73d8", "sha256": "9ff268b0d9162298c292656ac958c72e28d49b09aa8c7fd2a001d3dc8901285f"}, "downloads": -1, "filename": "svl-0.1a4.tar.gz", "has_sig": false, "md5_digest": "958f122769f6bf4a53f2c8df12ed73d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44846, "upload_time": "2019-03-26T18:55:52", "upload_time_iso_8601": "2019-03-26T18:55:52.415730Z", "url": "https://files.pythonhosted.org/packages/0a/8d/26ce936b9b5a6740f59b001900146ca8d76813161b2f7f429bf69d23662e/svl-0.1a4.tar.gz", "yanked": false}], "0.1a5": [{"comment_text": "", "digests": {"md5": "bfc1f5f68e69ba6eb6858159f8332537", "sha256": "d79d19f570ce0d12091068428e88b8cec63ebe00ef2ba281fb38de53b72971f9"}, "downloads": -1, "filename": "svl-0.1a5.tar.gz", "has_sig": false, "md5_digest": "bfc1f5f68e69ba6eb6858159f8332537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 960899, "upload_time": "2019-07-29T21:58:56", "upload_time_iso_8601": "2019-07-29T21:58:56.611141Z", "url": "https://files.pythonhosted.org/packages/5a/55/b3c022c4155eef7719ac28d1d36342f37af1980b7ed0ecf30563fe90925c/svl-0.1a5.tar.gz", "yanked": false}], "0.1a6": [{"comment_text": "", "digests": {"md5": "b4d878537cf6d6cc6c4e1d487444402f", "sha256": "09e8d41317af2b8f45234b0dc6303a6c00ea59e6f13b1b0557df6b3a4ca682f0"}, "downloads": -1, "filename": "svl-0.1a6.tar.gz", "has_sig": false, "md5_digest": "b4d878537cf6d6cc6c4e1d487444402f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 960997, "upload_time": "2019-09-09T13:04:34", "upload_time_iso_8601": "2019-09-09T13:04:34.743285Z", "url": "https://files.pythonhosted.org/packages/fa/b1/0212fa226db4cfbc295a820a98908452fa9e10dc232a3109b027c8e388cc/svl-0.1a6.tar.gz", "yanked": false}], "0.1a7": [{"comment_text": "", "digests": {"md5": "8feb1eb0cd76ec4b59e1a6e69c9aed92", "sha256": "7ae1b05b86af74af57c9271299c7530cb3a6beaf75bb2a97e460a8e4bede7967"}, "downloads": -1, "filename": "svl-0.1a7.tar.gz", "has_sig": false, "md5_digest": "8feb1eb0cd76ec4b59e1a6e69c9aed92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 962291, "upload_time": "2019-11-12T13:17:13", "upload_time_iso_8601": "2019-11-12T13:17:13.645211Z", "url": "https://files.pythonhosted.org/packages/2d/19/f10eb12147c4a536241f09f6b441710b37344649e0c487c2735b01e93869/svl-0.1a7.tar.gz", "yanked": false}], "0.1a8": [{"comment_text": "", "digests": {"md5": "0e904715af9a63dcb6b5c5680526b11c", "sha256": "6423be91512932bd57aa5ea11556f48e9b94d586bd3a79feed30c040b2508bf8"}, "downloads": -1, "filename": "svl-0.1a8.tar.gz", "has_sig": false, "md5_digest": "0e904715af9a63dcb6b5c5680526b11c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 962142, "upload_time": "2020-02-10T23:50:35", "upload_time_iso_8601": "2020-02-10T23:50:35.801351Z", "url": "https://files.pythonhosted.org/packages/7c/f9/645d58edb3c70c3373f95aa24150530629cf966824d50b5b86d1ec84ef97/svl-0.1a8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e904715af9a63dcb6b5c5680526b11c", "sha256": "6423be91512932bd57aa5ea11556f48e9b94d586bd3a79feed30c040b2508bf8"}, "downloads": -1, "filename": "svl-0.1a8.tar.gz", "has_sig": false, "md5_digest": "0e904715af9a63dcb6b5c5680526b11c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 962142, "upload_time": "2020-02-10T23:50:35", "upload_time_iso_8601": "2020-02-10T23:50:35.801351Z", "url": "https://files.pythonhosted.org/packages/7c/f9/645d58edb3c70c3373f95aa24150530629cf966824d50b5b86d1ec84ef97/svl-0.1a8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:49 2020"}