{"info": {"author": "Edward L. Platt", "author_email": "ed@elplatt.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Import the logging library.\n\n    import repsci\n\nCreate an experiment. A unique directory will be created with the experiment\nname, a timestamp, and the current git hash.\n\n    exp_name = \"hello_world\"\n    exp = repsci.Experiment(exp_name)\n\nGet the logger and write a log message.\n\n    log = exp.get_logger()\n    log.debug(\"Hello, World!\")\n\nCreate an output file in the unique output directory.\n\n    filename = exp.get_filename('output.csv')\n    with open(filename, \"wb\") as f:\n        f.write(\"Hello, World\\n\")\n\nThe state of python's random number generator is stored in `random_state.bin`\nin pickle format. This state can be used to reproduce the output of randomized\nscripts.\n\nThe Experiment constructor also has some optional parameters:\n* `config`: a configparser object, which will exported to the output directory.\n* `output_dir`: the subdirectory of the current directory to place experiment directories in.\n* `suffix`: a string to append to the end of the trial's directory.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/elplatt/repsci", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "repsci-elplatt", "package_url": "https://pypi.org/project/repsci-elplatt/", "platform": "", "project_url": "https://pypi.org/project/repsci-elplatt/", "project_urls": {"Homepage": "https://github.com/elplatt/repsci"}, "release_url": "https://pypi.org/project/repsci-elplatt/1.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A tool for reproducible scientific computing", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Import the logging library.</p>\n<pre><code>import repsci\n</code></pre>\n<p>Create an experiment. A unique directory will be created with the experiment\nname, a timestamp, and the current git hash.</p>\n<pre><code>exp_name = \"hello_world\"\nexp = repsci.Experiment(exp_name)\n</code></pre>\n<p>Get the logger and write a log message.</p>\n<pre><code>log = exp.get_logger()\nlog.debug(\"Hello, World!\")\n</code></pre>\n<p>Create an output file in the unique output directory.</p>\n<pre><code>filename = exp.get_filename('output.csv')\nwith open(filename, \"wb\") as f:\n    f.write(\"Hello, World\\n\")\n</code></pre>\n<p>The state of python's random number generator is stored in <code>random_state.bin</code>\nin pickle format. This state can be used to reproduce the output of randomized\nscripts.</p>\n<p>The Experiment constructor also has some optional parameters:</p>\n<ul>\n<li><code>config</code>: a configparser object, which will exported to the output directory.</li>\n<li><code>output_dir</code>: the subdirectory of the current directory to place experiment directories in.</li>\n<li><code>suffix</code>: a string to append to the end of the trial's directory.</li>\n</ul>\n\n          </div>"}, "last_serial": 6120287, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "5f2e7c0f281c0935d2d7d17dbc445940", "sha256": "26ebade73ca3bae412a9b408cf5ea5b8bc881af4e4cd6ddbea8805f5d12573df"}, "downloads": -1, "filename": "repsci_elplatt-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5f2e7c0f281c0935d2d7d17dbc445940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2691, "upload_time": "2019-11-12T00:23:05", "upload_time_iso_8601": "2019-11-12T00:23:05.287525Z", "url": "https://files.pythonhosted.org/packages/0e/ff/26c020776e868cd9f02c6dfc2a8921d63103dd505dcfc890e3f99d9407a3/repsci_elplatt-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31550188b88cb10c405347cce152f261", "sha256": "72bafdee6eeff64f118eacbd2573f888ef4919b8d34e4782e6d7916be0071042"}, "downloads": -1, "filename": "repsci-elplatt-1.1.1.tar.gz", "has_sig": false, "md5_digest": "31550188b88cb10c405347cce152f261", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1497, "upload_time": "2019-11-12T00:23:07", "upload_time_iso_8601": "2019-11-12T00:23:07.415896Z", "url": "https://files.pythonhosted.org/packages/f8/77/dfdc065f0ee62a1e37795704870dac4d562e94b5e92d15dc32cf2e3addda/repsci-elplatt-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f2e7c0f281c0935d2d7d17dbc445940", "sha256": "26ebade73ca3bae412a9b408cf5ea5b8bc881af4e4cd6ddbea8805f5d12573df"}, "downloads": -1, "filename": "repsci_elplatt-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5f2e7c0f281c0935d2d7d17dbc445940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2691, "upload_time": "2019-11-12T00:23:05", "upload_time_iso_8601": "2019-11-12T00:23:05.287525Z", "url": "https://files.pythonhosted.org/packages/0e/ff/26c020776e868cd9f02c6dfc2a8921d63103dd505dcfc890e3f99d9407a3/repsci_elplatt-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31550188b88cb10c405347cce152f261", "sha256": "72bafdee6eeff64f118eacbd2573f888ef4919b8d34e4782e6d7916be0071042"}, "downloads": -1, "filename": "repsci-elplatt-1.1.1.tar.gz", "has_sig": false, "md5_digest": "31550188b88cb10c405347cce152f261", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1497, "upload_time": "2019-11-12T00:23:07", "upload_time_iso_8601": "2019-11-12T00:23:07.415896Z", "url": "https://files.pythonhosted.org/packages/f8/77/dfdc065f0ee62a1e37795704870dac4d562e94b5e92d15dc32cf2e3addda/repsci-elplatt-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:18 2020"}