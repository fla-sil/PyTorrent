{"info": {"author": "Marcos Schroh", "author_email": "schrohm@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development"], "description": "# Async Python Rest Client Schema Registry\n\n[![Build Status](https://travis-ci.org/marcosschroh/async-python-schema-registry-client.svg?branch=master)](https://travis-ci.com/marcosschroh/async-python-schema-registry-client.svg?branch=master)\n[![GitHub license](https://img.shields.io/github/license/marcosschroh/async-python-schema-registry-client.svg)](https://github.com/marcosschroh/async-python-schema-registry-client/blob/master/LICENSE)\n[![codecov](https://codecov.io/gh/marcosschroh/async-python-schema-registry-client/branch/master/graph/badge.svg)](https://codecov.io/gh/marcosschroh/async-python-schema-registry-client)\n[![Python Version](https://img.shields.io/badge/python-3.6%20%7C%203.7-blue.svg)](https://img.shields.io/badge/python-3.6%20%7C%203.7-blue.svg)\n\nAsync Python Rest Client to interact against [schema-registry](https://docs.confluent.io/current/schema-registry/index.html) confluent server to manage [Avro Schemas](https://docs.oracle.com/database/nosql-12.1.3.1/GettingStartedGuide/avroschemas.html) resources.\n\n## Requirements\n\npython 3.6+, fastavro, requests-async, aiofiles\n\n## Installation\n\n```sh\npip install async-python-schema-registry-client\n```\n\n## Client API, Serializer and Schema Server description\n\n**Documentation**: [https://marcosschroh.github.io/async-python-schema-registry-client.io](https://marcosschroh.github.io/async-python-schema-registry-client)\n\n## When to use this library\n\nUsually, we have a situacion in which we have producers/consumers that serialize/deserialize events to send/receive from Kafka topics. In this picture, we can imagine a `Faust` or `Flink` application receiving/sending messages (encoded with an Avro schema)\n\n![Confluent Architecture](docs/img/confluent_architecture.png)\n\n`Avro schemas` have to be maintained and also need to be used to encode/decode events. On those situation this library is convenient to use.\n\n*Summary*:\n\n* When we want to build an application to administrate `Avro Schemas` (register, update compatibilities, delete old schemas, etc.)\n* When we have a process that needs to serialize/deserialize events to send/receive to/from a kafka topics\n\n## Development\n\nThe tests are run against the `Schema Server` using `docker compose`, so you will need\n`Docker` and `Docker Compose` installed.\n\n```sh\n./scripts/test\n```\n\nLint code:\n\n```sh\n./scripts/lint\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/async-python-schema-registry-client", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marcosschroh/async-python-schema-registry-client", "keywords": "Schema Registry,Python,Async,Avro,Apache,Apache Avro", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async-python-schema-registry-client", "package_url": "https://pypi.org/project/async-python-schema-registry-client/", "platform": "", "project_url": "https://pypi.org/project/async-python-schema-registry-client/", "project_urls": {"Download": "https://pypi.org/project/async-python-schema-registry-client", "Homepage": "https://github.com/marcosschroh/async-python-schema-registry-client"}, "release_url": "https://pypi.org/project/async-python-schema-registry-client/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Asyn Python Rest Client to interact against Schema Registry Confluent Serverto manage Avro Schemas", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Async Python Rest Client Schema Registry</h1>\n<p><a href=\"https://travis-ci.com/marcosschroh/async-python-schema-registry-client.svg?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efa5f8ef929b64039c22b009011ec8515e913ff6/68747470733a2f2f7472617669732d63692e6f72672f6d6172636f73736368726f682f6173796e632d707974686f6e2d736368656d612d72656769737472792d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/marcosschroh/async-python-schema-registry-client/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f334e6d1ad040e0181063e9717bac5ebb624b41/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6172636f73736368726f682f6173796e632d707974686f6e2d736368656d612d72656769737472792d636c69656e742e737667\"></a>\n<a href=\"https://codecov.io/gh/marcosschroh/async-python-schema-registry-client\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bea81daf2ee11bcc53651be0a4041089a026aad3/68747470733a2f2f636f6465636f762e696f2f67682f6d6172636f73736368726f682f6173796e632d707974686f6e2d736368656d612d72656769737472792d636c69656e742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://img.shields.io/badge/python-3.6%20%7C%203.7-blue.svg\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2390055e2fdf2bcda0b376a926e961a950c060e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e372d626c75652e737667\"></a></p>\n<p>Async Python Rest Client to interact against <a href=\"https://docs.confluent.io/current/schema-registry/index.html\" rel=\"nofollow\">schema-registry</a> confluent server to manage <a href=\"https://docs.oracle.com/database/nosql-12.1.3.1/GettingStartedGuide/avroschemas.html\" rel=\"nofollow\">Avro Schemas</a> resources.</p>\n<h2>Requirements</h2>\n<p>python 3.6+, fastavro, requests-async, aiofiles</p>\n<h2>Installation</h2>\n<pre>pip install async-python-schema-registry-client\n</pre>\n<h2>Client API, Serializer and Schema Server description</h2>\n<p><strong>Documentation</strong>: <a href=\"https://marcosschroh.github.io/async-python-schema-registry-client\" rel=\"nofollow\">https://marcosschroh.github.io/async-python-schema-registry-client.io</a></p>\n<h2>When to use this library</h2>\n<p>Usually, we have a situacion in which we have producers/consumers that serialize/deserialize events to send/receive from Kafka topics. In this picture, we can imagine a <code>Faust</code> or <code>Flink</code> application receiving/sending messages (encoded with an Avro schema)</p>\n<p><img alt=\"Confluent Architecture\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e09be2a8c9ef73f5d626660c02938d6c4ac4c69f/646f63732f696d672f636f6e666c75656e745f6172636869746563747572652e706e67\"></p>\n<p><code>Avro schemas</code> have to be maintained and also need to be used to encode/decode events. On those situation this library is convenient to use.</p>\n<p><em>Summary</em>:</p>\n<ul>\n<li>When we want to build an application to administrate <code>Avro Schemas</code> (register, update compatibilities, delete old schemas, etc.)</li>\n<li>When we have a process that needs to serialize/deserialize events to send/receive to/from a kafka topics</li>\n</ul>\n<h2>Development</h2>\n<p>The tests are run against the <code>Schema Server</code> using <code>docker compose</code>, so you will need\n<code>Docker</code> and <code>Docker Compose</code> installed.</p>\n<pre>./scripts/test\n</pre>\n<p>Lint code:</p>\n<pre>./scripts/lint\n</pre>\n\n          </div>"}, "last_serial": 7048930, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a902d24e1560eea8035aaa0bed57eb0c", "sha256": "22562ddbaf27c7ee2518ea87a85a30673242d48d57252af14de4fa7ad0a24b8b"}, "downloads": -1, "filename": "async-python-schema-registry-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a902d24e1560eea8035aaa0bed57eb0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14594, "upload_time": "2019-07-24T19:51:38", "upload_time_iso_8601": "2019-07-24T19:51:38.082345Z", "url": "https://files.pythonhosted.org/packages/df/c4/d091d00184c90cadf626118c026c36e5e5bf3113e054ff432023960dc68d/async-python-schema-registry-client-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7251c23a45a4c06e8fcf2c86440e6cc5", "sha256": "8bf16385c302d940158ef926a16e6713f68d206b4b229f0377f4b24d4467c5dc"}, "downloads": -1, "filename": "async-python-schema-registry-client-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7251c23a45a4c06e8fcf2c86440e6cc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14687, "upload_time": "2019-11-03T11:13:49", "upload_time_iso_8601": "2019-11-03T11:13:49.866982Z", "url": "https://files.pythonhosted.org/packages/2b/9f/2562dca204503b4db081bf5b48c58e8933d56c799e4ca18c70d33b51748a/async-python-schema-registry-client-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f1f1ca1425022d7440e3f3a954193f07", "sha256": "3255ba60813263909177d62e469ba479ee7cc1604074499cbccf88b7a06a1cb2"}, "downloads": -1, "filename": "async-python-schema-registry-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f1f1ca1425022d7440e3f3a954193f07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14633, "upload_time": "2020-04-06T22:57:07", "upload_time_iso_8601": "2020-04-06T22:57:07.545003Z", "url": "https://files.pythonhosted.org/packages/2b/8c/196e486005dd2c4ff7693f129ee46e7d04a1eef11fbed0c984f15f57bd42/async-python-schema-registry-client-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9f08bf58dfe693a2ff8bda22e8faf6a7", "sha256": "721ffaeb3643a05394555153d32bb4b0302db096e3c9cd52e0c527c84a182c4d"}, "downloads": -1, "filename": "async-python-schema-registry-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9f08bf58dfe693a2ff8bda22e8faf6a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14689, "upload_time": "2020-04-08T11:38:29", "upload_time_iso_8601": "2020-04-08T11:38:29.323404Z", "url": "https://files.pythonhosted.org/packages/e4/0f/3e334e28a22c12979153089267eff06c40e9c82c6cc349eef9d283890c14/async-python-schema-registry-client-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c0aebf14b45858ad2572582052bf79a3", "sha256": "5389773bb4811432af393957bdf5ae565af6192daa45efca185305ce21db1193"}, "downloads": -1, "filename": "async-python-schema-registry-client-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c0aebf14b45858ad2572582052bf79a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14920, "upload_time": "2020-04-18T16:33:31", "upload_time_iso_8601": "2020-04-18T16:33:31.779802Z", "url": "https://files.pythonhosted.org/packages/4f/3e/a176d1ade6c88b8ae74342b133f0b5280f648ca730f34fde5ebb6fb5d8ef/async-python-schema-registry-client-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0aebf14b45858ad2572582052bf79a3", "sha256": "5389773bb4811432af393957bdf5ae565af6192daa45efca185305ce21db1193"}, "downloads": -1, "filename": "async-python-schema-registry-client-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c0aebf14b45858ad2572582052bf79a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14920, "upload_time": "2020-04-18T16:33:31", "upload_time_iso_8601": "2020-04-18T16:33:31.779802Z", "url": "https://files.pythonhosted.org/packages/4f/3e/a176d1ade6c88b8ae74342b133f0b5280f648ca730f34fde5ebb6fb5d8ef/async-python-schema-registry-client-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:41 2020"}