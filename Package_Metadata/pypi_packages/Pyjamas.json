{"info": {"author": "The Pyjamas Project", "author_email": "lkcl@lkcl.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Current Release: 0.8.1~+alpha1\n---------------\n\nThis is the 0.8.1~+alpha1 release of Pyjamas.  Pyjamas comprises several\nprojects, one of which is a stand-alone python-to-javascript compiler; other\nprojects include a Graphical Widget Toolkit, such that pyjamas applications\ncan run either in web browsers as pure javascript (with no plugins required)\nor stand-alone on the desktop (as a competitor to PyGTK2 and PyQT4).\n\nFeatures and enhancements of the stand-alone 0.8 series javascript\ncompiler and associated modules include:\n\n* more behaviour closer to python, thanks to several contributions including\n  from Daniel Kluev\n\n* improvements and additions to the standard modules, including renaming\n  JSONParser to json and changing its interface to match standard python,\n  and a new python-compliant logging module.\n\nIn the User-Interface suite, which is separate from the Pyjamas\nstand-alone python-to-javascript compiler, the features and\nenhancements include:\n\n* a new platform override system that puts source files for both\n  browsers and desktop pyjamas applications in the same directory\n  as the module being overridden\n\n* Gradient and Text functions for the 2D Canvas module\n\n* Fix to long-standing issue with Focus.py\n\n* Addition of Video and Audio Widgets that use HTML5 or Windows Media\n  as appropriate (also operating correctly under pyjd including MSHTML).\n\nAlso, several JSONRPC server helper routines have been contributed and\nadded, including for cherrypy, cgi-bin and mongrel2.  A full JSONRPC\nservice with each of these types of web service systems can be added\nusually in about 5 lines of code.\n\nIt has also been confirmed that Pyjamas and Pyjamas Desktop run successfully\nunder Wine 1.4 when IE8 is installed.  This may make it easier for developers\nto test deployment of applications across a wider range of browsers and\ndesktops when working from a GNU/Linux development base.\n\nPyjamas\n-------\n\nPyjamas is a port of Google Web Toolkit to Python, and thus enables\nthe development of Rich Media AJAX applications in Python, with no\nneed for special browser plugins.  Pyjamas contains a stand-alone\npython-to-javascript compiler, and also a Widget Set API that looks\nvery similar to Desktop Widget Set APIs (such as PyQT4 or PyGTK2).\n\nPyjamas also contains a Desktop Widget Set version, running as pure\npython, with four useable Desktop ports available.  Using web browser\ntechnology startlingly provides an alternative to traditional\nWidget sets, such as PyQT4 and PyGTK2, with the advantage of having\nfull support for HTML, CSS, Plugins and other web-related features\nalready built-in.  For the windows port, this can save users and\ndevelopers around 30mb of downloads, as MSHTML is preinstalled on\nthe Windows Operating System, as part of IE.\n\nFor more information, see:\n\n    http://pyjs.org\n    http://pyjs.org/FAQ.html\n    http://pyjs.org/features.html\n\nKnown bugs: http://code.google.com/p/pyjamas/issues\n\nPyjamas-Desktop\n---------------\n\nPyjamas runs your python application in a Web Browser (as javascript).\nPyjamas-Desktop runs exactly the same python application on the\nDesktop (as pure python).\n\n    http://pyjd.org\n\nRelease 0.6 of Pyjamas incorporated Pyjamas-Desktop directly into\nthe Pyjamas Distribution.  To use Pyjamas-Desktop there are three choices,\nwith more planned [MacOSX PyObjC; KDE's PyKHTML].\n\nAll ports of Pyjamas-Desktop will require a JSON library to be\ninstalled: as there are plenty already, it is counter-productive\nto write yet another one.  simplejson is recommended if the version of\npython is 2.5 or less.  Python 2.6 and above come with a json library\ninstalled by default.\n\n1) - XULRunner\n\ninstall hulahop and python-xpcom.  hulahop, from OLPC SugarLabs,\nis distributed with both Debian and Ubuntu; python-xpcom is part\nof XULRunner and is also distributed with both Debian and Ubuntu.\nOther users should investigate the installation instructions for\npython-xpcom and hulahop for the operating system of their choice\non the appropriate web sites.\n\nSadly, modifications made by the Mozilla team to the xulrunner API\nhave not propagated through to python-xpcom due to lack of attention\nand support by the Mozilla team.  Older versions of XULRunner must be\nused: versions 1.9.0 or 1.9.1 are known to be suitable, as is version\n9.0.  Versions 10 and above are known to segfault.  The Mozilla\nFoundation is NOT paying attention to the stability of xulrunner for\nembedded purposes: many applications (not just pyjamas-desktop) are\nnow being left without working, stable code.\n\n2) - PyWebKitGtk\n\nThere are two versions of PyWebKitGTK: please do not use the older\nversion which has been \"taken over\" by the Webkit team: the Webkit\nteam have decided that full support of and direct-equivalent\ninteroperability with the full W3C HTML specifications is not important.\n\nThe version of pywebkitgtk at http://www.gnu.org/software/pythonwebkit\nprovides full and direct python-equivalent interoperability for all functions\nfor which access through javascript has been provided: thus, Pyjamas\nDesktop will function correctly.\n\nPyWebkitGtk must be explicitly enabled.  create a $HOME/.pyjd/pyjdrc file\ncontaining the following two lines:\n\n[gui]\nengine=pywebkitgtk\n\n3) - PyWebkitDFB\n\nThis is an experimental but minimally functional engine that is extremely\nquick to start up.  The build dependencies are also drastically smaller than\nany of the other web browser engines (which indirectly contributes to the\nfast startup time).\n\nHTML5 is fully supported, with the exception of Video and Canvas; also\nmissing at present is support for Frames.  Despite the present limitations,\nPyWebkitDFB is highly suited to embedded systems, as well as being useable\nas an excellent and ultra-quick general-purpose web browser engine.\n\nPyWebkitDFB must be explicitly enabled.  create a $HOME/.pyjd/pyjdrc file\ncontaining the following two lines:\n\n[gui]\nengine=pywebkitdfb\n\n4) - MSHTML\n\nFor Windows users, all that's required, other than installing python\nand Internet Explorer, is one further tiny package: Win32 \"comtypes\".\n\nWin32 \"comtypes\" can be downloaded here:\n* http://sourceforge.net/projects/comtypes/\n\nUnlike the other ports, which can comprise a whopping great bundle\nof anything up to 30mb in size, the MSHTML port literally requires\nnothing more than comtypes, thanks to the far-sighted design of the\nMSHTML Trident Engine and its extensive COM interface.\n\n5) - PyQt4\n\nKindly contributed by Thomas Henning, the PyQT4 port requires a current\nPyQt-snapshot with Qt 4.6 (which includes QWebElement, a DOM-like API for\nWebKit).\n\nThe PyQt4 engine is highly experimental, and requires a configuration file\nto explicitly enable it.  create a $HOME/.pyjd/pyjdrc file containing the\nfollowing two lines:\n\n[gui]\nengine=pyqt4\n\nSadly, the PyQT4 port serves more as a demonstration of how never to access\nweb browser DOM functionality from python (ever).  The reason is simple:\nto access all but about 1% of the available DOM functionality, javascript\ncode snippets must be created on-the-fly and executed, and all incoming and\noutgoing data must be dynamically translated between python and javascript\n(as Qt4 objects).\n\nAside from providing truly dreadful performance, this technical approach\nshould have you either in hysterics, throwing up or requiring counselling,\ndepending on your resilience and constitution.  All is not lost: if funding\nis made available, the PythonWebkit project can, with very little actual\ncoding required, be ported to Qt4, as the GNU PythonWebkit Project has been\ndesigned to provide python access to DOM functionality, independent of the\nactual GUI display engine being used.\n\n6) - PyKDE\n\nThe PyKDE engine has been done as a \"thank you\" to the KDE Team, without\nwhom Webkit would not exist.  Sadly, though, for technical reasons, the PyKDE\nengine requires that the entire KHTML Part be compiled with c++ \"rtti\" enabled,\nand the majority of GNU/Linux Distributions explicitly disable RTTI due to\nit having an impact on performance.\n\nIf this is ever fixed, then out of sheer nostalgia and bloody-mindedness, the\nPyKDE engine will have continued support, even though the KHTML engine is only\nDOM TR2 compliant (at present).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pyjs.org", "keywords": "Pyjamas,GUI,Compiler,AJAX,Widget Set", "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "Pyjamas", "package_url": "https://pypi.org/project/Pyjamas/", "platform": "any", "project_url": "https://pypi.org/project/Pyjamas/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pyjs.org"}, "release_url": "https://pypi.org/project/Pyjamas/0.8.1/", "requires_dist": null, "requires_python": null, "summary": "Pyjamas Widget API for Web applications, in Python", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Current Release: 0.8.1~+alpha1<br>---------------<br><br>This is the 0.8.1~+alpha1 release of Pyjamas.  Pyjamas comprises several<br>projects, one of which is a stand-alone python-to-javascript compiler; other<br>projects include a Graphical Widget Toolkit, such that pyjamas applications<br>can run either in web browsers as pure javascript (with no plugins required)<br>or stand-alone on the desktop (as a competitor to PyGTK2 and PyQT4).<br><br>Features and enhancements of the stand-alone 0.8 series javascript<br>compiler and associated modules include:<br><br>* more behaviour closer to python, thanks to several contributions including<br>  from Daniel Kluev<br><br>* improvements and additions to the standard modules, including renaming<br>  JSONParser to json and changing its interface to match standard python,<br>  and a new python-compliant logging module.<br><br>In the User-Interface suite, which is separate from the Pyjamas<br>stand-alone python-to-javascript compiler, the features and<br>enhancements include:<br><br>* a new platform override system that puts source files for both<br>  browsers and desktop pyjamas applications in the same directory<br>  as the module being overridden<br><br>* Gradient and Text functions for the 2D Canvas module<br><br>* Fix to long-standing issue with Focus.py<br><br>* Addition of Video and Audio Widgets that use HTML5 or Windows Media<br>  as appropriate (also operating correctly under pyjd including MSHTML).<br><br>Also, several JSONRPC server helper routines have been contributed and<br>added, including for cherrypy, cgi-bin and mongrel2.  A full JSONRPC<br>service with each of these types of web service systems can be added<br>usually in about 5 lines of code.<br><br>It has also been confirmed that Pyjamas and Pyjamas Desktop run successfully<br>under Wine 1.4 when IE8 is installed.  This may make it easier for developers<br>to test deployment of applications across a wider range of browsers and<br>desktops when working from a GNU/Linux development base.<br><br>Pyjamas<br>-------<br><br>Pyjamas is a port of Google Web Toolkit to Python, and thus enables<br>the development of Rich Media AJAX applications in Python, with no<br>need for special browser plugins.  Pyjamas contains a stand-alone<br>python-to-javascript compiler, and also a Widget Set API that looks<br>very similar to Desktop Widget Set APIs (such as PyQT4 or PyGTK2).<br><br>Pyjamas also contains a Desktop Widget Set version, running as pure<br>python, with four useable Desktop ports available.  Using web browser<br>technology startlingly provides an alternative to traditional<br>Widget sets, such as PyQT4 and PyGTK2, with the advantage of having<br>full support for HTML, CSS, Plugins and other web-related features<br>already built-in.  For the windows port, this can save users and<br>developers around 30mb of downloads, as MSHTML is preinstalled on<br>the Windows Operating System, as part of IE.<br><br>For more information, see:<br><br>    http://pyjs.org<br>    http://pyjs.org/FAQ.html<br>    http://pyjs.org/features.html<br><br>Known bugs: http://code.google.com/p/pyjamas/issues<br><br>Pyjamas-Desktop<br>---------------<br><br>Pyjamas runs your python application in a Web Browser (as javascript).<br>Pyjamas-Desktop runs exactly the same python application on the<br>Desktop (as pure python).<br><br>    http://pyjd.org<br><br>Release 0.6 of Pyjamas incorporated Pyjamas-Desktop directly into<br>the Pyjamas Distribution.  To use Pyjamas-Desktop there are three choices,<br>with more planned [MacOSX PyObjC; KDE's PyKHTML].<br><br>All ports of Pyjamas-Desktop will require a JSON library to be<br>installed: as there are plenty already, it is counter-productive<br>to write yet another one.  simplejson is recommended if the version of<br>python is 2.5 or less.  Python 2.6 and above come with a json library<br>installed by default.<br><br>1) - XULRunner<br><br>install hulahop and python-xpcom.  hulahop, from OLPC SugarLabs,<br>is distributed with both Debian and Ubuntu; python-xpcom is part<br>of XULRunner and is also distributed with both Debian and Ubuntu.<br>Other users should investigate the installation instructions for<br>python-xpcom and hulahop for the operating system of their choice<br>on the appropriate web sites.<br><br>Sadly, modifications made by the Mozilla team to the xulrunner API<br>have not propagated through to python-xpcom due to lack of attention<br>and support by the Mozilla team.  Older versions of XULRunner must be<br>used: versions 1.9.0 or 1.9.1 are known to be suitable, as is version<br>9.0.  Versions 10 and above are known to segfault.  The Mozilla<br>Foundation is NOT paying attention to the stability of xulrunner for<br>embedded purposes: many applications (not just pyjamas-desktop) are<br>now being left without working, stable code.<br><br>2) - PyWebKitGtk<br><br>There are two versions of PyWebKitGTK: please do not use the older<br>version which has been \"taken over\" by the Webkit team: the Webkit<br>team have decided that full support of and direct-equivalent<br>interoperability with the full W3C HTML specifications is not important.<br><br>The version of pywebkitgtk at http://www.gnu.org/software/pythonwebkit<br>provides full and direct python-equivalent interoperability for all functions<br>for which access through javascript has been provided: thus, Pyjamas<br>Desktop will function correctly.<br><br>PyWebkitGtk must be explicitly enabled.  create a $HOME/.pyjd/pyjdrc file<br>containing the following two lines:<br><br>[gui]<br>engine=pywebkitgtk<br><br>3) - PyWebkitDFB<br><br>This is an experimental but minimally functional engine that is extremely<br>quick to start up.  The build dependencies are also drastically smaller than<br>any of the other web browser engines (which indirectly contributes to the<br>fast startup time).<br><br>HTML5 is fully supported, with the exception of Video and Canvas; also<br>missing at present is support for Frames.  Despite the present limitations,<br>PyWebkitDFB is highly suited to embedded systems, as well as being useable<br>as an excellent and ultra-quick general-purpose web browser engine.<br><br>PyWebkitDFB must be explicitly enabled.  create a $HOME/.pyjd/pyjdrc file<br>containing the following two lines:<br><br>[gui]<br>engine=pywebkitdfb<br><br>4) - MSHTML<br><br>For Windows users, all that's required, other than installing python<br>and Internet Explorer, is one further tiny package: Win32 \"comtypes\".<br><br>Win32 \"comtypes\" can be downloaded here:<br>* http://sourceforge.net/projects/comtypes/<br><br>Unlike the other ports, which can comprise a whopping great bundle<br>of anything up to 30mb in size, the MSHTML port literally requires<br>nothing more than comtypes, thanks to the far-sighted design of the<br>MSHTML Trident Engine and its extensive COM interface.<br><br>5) - PyQt4<br><br>Kindly contributed by Thomas Henning, the PyQT4 port requires a current<br>PyQt-snapshot with Qt 4.6 (which includes QWebElement, a DOM-like API for<br>WebKit).<br><br>The PyQt4 engine is highly experimental, and requires a configuration file<br>to explicitly enable it.  create a $HOME/.pyjd/pyjdrc file containing the<br>following two lines:<br><br>[gui]<br>engine=pyqt4<br><br>Sadly, the PyQT4 port serves more as a demonstration of how never to access<br>web browser DOM functionality from python (ever).  The reason is simple:<br>to access all but about 1% of the available DOM functionality, javascript<br>code snippets must be created on-the-fly and executed, and all incoming and<br>outgoing data must be dynamically translated between python and javascript<br>(as Qt4 objects).<br><br>Aside from providing truly dreadful performance, this technical approach<br>should have you either in hysterics, throwing up or requiring counselling,<br>depending on your resilience and constitution.  All is not lost: if funding<br>is made available, the PythonWebkit project can, with very little actual<br>coding required, be ported to Qt4, as the GNU PythonWebkit Project has been<br>designed to provide python access to DOM functionality, independent of the<br>actual GUI display engine being used.<br><br>6) - PyKDE<br><br>The PyKDE engine has been done as a \"thank you\" to the KDE Team, without<br>whom Webkit would not exist.  Sadly, though, for technical reasons, the PyKDE<br>engine requires that the entire KHTML Part be compiled with c++ \"rtti\" enabled,<br>and the majority of GNU/Linux Distributions explicitly disable RTTI due to<br>it having an impact on performance.<br><br>If this is ever fixed, then out of sheer nostalgia and bloody-mindedness, the<br>PyKDE engine will have continued support, even though the KHTML engine is only<br>DOM TR2 compliant (at present).\n          </div>"}, "last_serial": 785428, "releases": {"0.7": [{"comment_text": "", "digests": {"md5": "8441b60bb3c88051799537852cceefd0", "sha256": "648f62c1ddf99392fb926ca8d3900c39109b09e06d93cc7de3668933d7084d2b"}, "downloads": -1, "filename": "pyjamas-0.7.tgz", "has_sig": false, "md5_digest": "8441b60bb3c88051799537852cceefd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2521787, "upload_time": "2010-04-25T15:22:09", "upload_time_iso_8601": "2010-04-25T15:22:09.365949Z", "url": "https://files.pythonhosted.org/packages/4c/5a/ae8585c97fae8bcf87b4d7ba321efc3c0da704ab39f6d1752bf8474d3132/pyjamas-0.7.tgz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "0939443a6ec6ddf8943ea2fdbc630b0d", "sha256": "54048cd38d49a58ebb89e7a23b45b69dc923edd9d2f79a67022175eea39f4918"}, "downloads": -1, "filename": "pyjamas-0.8.1~+alpha1.tar.bz2", "has_sig": false, "md5_digest": "0939443a6ec6ddf8943ea2fdbc630b0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2880129, "upload_time": "2012-04-16T11:08:45", "upload_time_iso_8601": "2012-04-16T11:08:45.491295Z", "url": "https://files.pythonhosted.org/packages/b5/e4/28be86323cecf43469fa77fc5e8b998fa15fe1c5026701873c7ca461b5d0/pyjamas-0.8.1~+alpha1.tar.bz2", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0939443a6ec6ddf8943ea2fdbc630b0d", "sha256": "54048cd38d49a58ebb89e7a23b45b69dc923edd9d2f79a67022175eea39f4918"}, "downloads": -1, "filename": "pyjamas-0.8.1~+alpha1.tar.bz2", "has_sig": false, "md5_digest": "0939443a6ec6ddf8943ea2fdbc630b0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2880129, "upload_time": "2012-04-16T11:08:45", "upload_time_iso_8601": "2012-04-16T11:08:45.491295Z", "url": "https://files.pythonhosted.org/packages/b5/e4/28be86323cecf43469fa77fc5e8b998fa15fe1c5026701873c7ca461b5d0/pyjamas-0.8.1~+alpha1.tar.bz2", "yanked": false}], "timestamp": "Fri May  8 03:03:49 2020"}